; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12522 () Bool)

(assert start!12522)

(declare-fun b!107466 () Bool)

(declare-fun b_free!2545 () Bool)

(declare-fun b_next!2545 () Bool)

(assert (=> b!107466 (= b_free!2545 (not b_next!2545))))

(declare-fun tp!9968 () Bool)

(declare-fun b_and!6629 () Bool)

(assert (=> b!107466 (= tp!9968 b_and!6629)))

(declare-fun b!107471 () Bool)

(declare-fun b_free!2547 () Bool)

(declare-fun b_next!2547 () Bool)

(assert (=> b!107471 (= b_free!2547 (not b_next!2547))))

(declare-fun tp!9967 () Bool)

(declare-fun b_and!6631 () Bool)

(assert (=> b!107471 (= tp!9967 b_and!6631)))

(declare-fun b!107464 () Bool)

(declare-fun e!69951 () Bool)

(declare-fun e!69959 () Bool)

(assert (=> b!107464 (= e!69951 e!69959)))

(declare-fun b!107465 () Bool)

(declare-fun e!69968 () Bool)

(declare-fun tp_is_empty!2689 () Bool)

(assert (=> b!107465 (= e!69968 tp_is_empty!2689)))

(declare-datatypes ((V!3233 0))(
  ( (V!3234 (val!1389 Int)) )
))
(declare-datatypes ((array!4357 0))(
  ( (array!4358 (arr!2066 (Array (_ BitVec 32) (_ BitVec 64))) (size!2322 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1001 0))(
  ( (ValueCellFull!1001 (v!2913 V!3233)) (EmptyCell!1001) )
))
(declare-datatypes ((array!4359 0))(
  ( (array!4360 (arr!2067 (Array (_ BitVec 32) ValueCell!1001)) (size!2323 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!910 0))(
  ( (LongMapFixedSize!911 (defaultEntry!2605 Int) (mask!6763 (_ BitVec 32)) (extraKeys!2406 (_ BitVec 32)) (zeroValue!2478 V!3233) (minValue!2478 V!3233) (_size!504 (_ BitVec 32)) (_keys!4315 array!4357) (_values!2588 array!4359) (_vacant!504 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!712 0))(
  ( (Cell!713 (v!2914 LongMapFixedSize!910)) )
))
(declare-datatypes ((LongMap!712 0))(
  ( (LongMap!713 (underlying!367 Cell!712)) )
))
(declare-fun thiss!992 () LongMap!712)

(declare-fun e!69967 () Bool)

(declare-fun e!69957 () Bool)

(declare-fun array_inv!1277 (array!4357) Bool)

(declare-fun array_inv!1278 (array!4359) Bool)

(assert (=> b!107466 (= e!69957 (and tp!9968 tp_is_empty!2689 (array_inv!1277 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (array_inv!1278 (_values!2588 (v!2914 (underlying!367 thiss!992)))) e!69967))))

(declare-fun b!107467 () Bool)

(declare-datatypes ((Unit!3301 0))(
  ( (Unit!3302) )
))
(declare-fun e!69952 () Unit!3301)

(declare-fun Unit!3303 () Unit!3301)

(assert (=> b!107467 (= e!69952 Unit!3303)))

(declare-fun mapIsEmpty!3967 () Bool)

(declare-fun mapRes!3967 () Bool)

(assert (=> mapIsEmpty!3967 mapRes!3967))

(declare-fun b!107468 () Bool)

(declare-fun e!69958 () Bool)

(assert (=> b!107468 (= e!69958 (or (not (= (size!2323 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6763 (v!2914 (underlying!367 thiss!992)))))) (not (= (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (size!2323 (_values!2588 (v!2914 (underlying!367 thiss!992)))))) (bvslt (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!107469 () Bool)

(declare-fun res!53349 () Bool)

(declare-fun e!69962 () Bool)

(assert (=> b!107469 (=> (not res!53349) (not e!69962))))

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!107469 (= res!53349 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun res!53346 () Bool)

(assert (=> start!12522 (=> (not res!53346) (not e!69962))))

(declare-fun valid!429 (LongMap!712) Bool)

(assert (=> start!12522 (= res!53346 (valid!429 thiss!992))))

(assert (=> start!12522 e!69962))

(assert (=> start!12522 e!69951))

(assert (=> start!12522 true))

(declare-fun e!69965 () Bool)

(assert (=> start!12522 e!69965))

(declare-fun b!107470 () Bool)

(declare-fun res!53351 () Bool)

(assert (=> b!107470 (=> (not res!53351) (not e!69962))))

(declare-fun newMap!16 () LongMapFixedSize!910)

(declare-fun valid!430 (LongMapFixedSize!910) Bool)

(assert (=> b!107470 (= res!53351 (valid!430 newMap!16))))

(declare-fun e!69963 () Bool)

(assert (=> b!107471 (= e!69965 (and tp!9967 tp_is_empty!2689 (array_inv!1277 (_keys!4315 newMap!16)) (array_inv!1278 (_values!2588 newMap!16)) e!69963))))

(declare-fun b!107472 () Bool)

(declare-fun e!69956 () Bool)

(assert (=> b!107472 (= e!69956 tp_is_empty!2689)))

(declare-fun b!107473 () Bool)

(declare-fun mapRes!3968 () Bool)

(assert (=> b!107473 (= e!69963 (and e!69968 mapRes!3968))))

(declare-fun condMapEmpty!3968 () Bool)

(declare-fun mapDefault!3967 () ValueCell!1001)

(assert (=> b!107473 (= condMapEmpty!3968 (= (arr!2067 (_values!2588 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3967)))))

(declare-fun b!107474 () Bool)

(declare-fun e!69960 () Bool)

(declare-fun e!69964 () Bool)

(assert (=> b!107474 (= e!69960 e!69964)))

(declare-fun res!53350 () Bool)

(assert (=> b!107474 (=> (not res!53350) (not e!69964))))

(assert (=> b!107474 (= res!53350 (and (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!55094 () V!3233)

(declare-fun get!1345 (ValueCell!1001 V!3233) V!3233)

(declare-fun dynLambda!387 (Int (_ BitVec 64)) V!3233)

(assert (=> b!107474 (= lt!55094 (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107475 () Bool)

(assert (=> b!107475 (= e!69959 e!69957)))

(declare-fun b!107476 () Bool)

(declare-fun e!69961 () Bool)

(assert (=> b!107476 (= e!69961 tp_is_empty!2689)))

(declare-fun b!107477 () Bool)

(declare-fun e!69953 () Bool)

(assert (=> b!107477 (= e!69953 tp_is_empty!2689)))

(declare-fun mapNonEmpty!3967 () Bool)

(declare-fun tp!9965 () Bool)

(assert (=> mapNonEmpty!3967 (= mapRes!3967 (and tp!9965 e!69961))))

(declare-fun mapRest!3967 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapKey!3967 () (_ BitVec 32))

(declare-fun mapValue!3967 () ValueCell!1001)

(assert (=> mapNonEmpty!3967 (= (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (store mapRest!3967 mapKey!3967 mapValue!3967))))

(declare-fun b!107478 () Bool)

(declare-fun e!69954 () Bool)

(assert (=> b!107478 (= e!69954 (not e!69958))))

(declare-fun res!53347 () Bool)

(assert (=> b!107478 (=> res!53347 e!69958)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!107478 (= res!53347 (not (validMask!0 (mask!6763 (v!2914 (underlying!367 thiss!992))))))))

(declare-datatypes ((tuple2!2376 0))(
  ( (tuple2!2377 (_1!1199 (_ BitVec 64)) (_2!1199 V!3233)) )
))
(declare-datatypes ((List!1604 0))(
  ( (Nil!1601) (Cons!1600 (h!2198 tuple2!2376) (t!5712 List!1604)) )
))
(declare-datatypes ((ListLongMap!1541 0))(
  ( (ListLongMap!1542 (toList!786 List!1604)) )
))
(declare-fun lt!55096 () ListLongMap!1541)

(declare-fun lt!55092 () tuple2!2376)

(declare-fun lt!55093 () tuple2!2376)

(declare-fun +!142 (ListLongMap!1541 tuple2!2376) ListLongMap!1541)

(assert (=> b!107478 (= (+!142 (+!142 lt!55096 lt!55092) lt!55093) (+!142 (+!142 lt!55096 lt!55093) lt!55092))))

(assert (=> b!107478 (= lt!55093 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))

(assert (=> b!107478 (= lt!55092 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))

(declare-fun lt!55102 () Unit!3301)

(declare-fun addCommutativeForDiffKeys!55 (ListLongMap!1541 (_ BitVec 64) V!3233 (_ BitVec 64) V!3233) Unit!3301)

(assert (=> b!107478 (= lt!55102 (addCommutativeForDiffKeys!55 lt!55096 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!109 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) Int) ListLongMap!1541)

(assert (=> b!107478 (= lt!55096 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!107479 () Bool)

(declare-fun Unit!3304 () Unit!3301)

(assert (=> b!107479 (= e!69952 Unit!3304)))

(declare-fun lt!55097 () Unit!3301)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!103 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) (_ BitVec 32) Int) Unit!3301)

(assert (=> b!107479 (= lt!55097 (lemmaListMapContainsThenArrayContainsFrom!103 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4357 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!107479 (arrayContainsKey!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!55101 () Unit!3301)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4357 (_ BitVec 32) (_ BitVec 32)) Unit!3301)

(assert (=> b!107479 (= lt!55101 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1605 0))(
  ( (Nil!1602) (Cons!1601 (h!2199 (_ BitVec 64)) (t!5713 List!1605)) )
))
(declare-fun arrayNoDuplicates!0 (array!4357 (_ BitVec 32) List!1605) Bool)

(assert (=> b!107479 (arrayNoDuplicates!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) from!355 Nil!1602)))

(declare-fun lt!55098 () Unit!3301)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4357 (_ BitVec 32) (_ BitVec 64) List!1605) Unit!3301)

(assert (=> b!107479 (= lt!55098 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602)))))

(assert (=> b!107479 false))

(declare-fun mapNonEmpty!3968 () Bool)

(declare-fun tp!9966 () Bool)

(assert (=> mapNonEmpty!3968 (= mapRes!3968 (and tp!9966 e!69953))))

(declare-fun mapKey!3968 () (_ BitVec 32))

(declare-fun mapRest!3968 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapValue!3968 () ValueCell!1001)

(assert (=> mapNonEmpty!3968 (= (arr!2067 (_values!2588 newMap!16)) (store mapRest!3968 mapKey!3968 mapValue!3968))))

(declare-fun b!107480 () Bool)

(declare-fun res!53348 () Bool)

(assert (=> b!107480 (=> (not res!53348) (not e!69962))))

(assert (=> b!107480 (= res!53348 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6763 newMap!16)) (_size!504 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!107481 () Bool)

(assert (=> b!107481 (= e!69962 e!69960)))

(declare-fun res!53353 () Bool)

(assert (=> b!107481 (=> (not res!53353) (not e!69960))))

(declare-fun lt!55095 () ListLongMap!1541)

(declare-fun lt!55099 () ListLongMap!1541)

(assert (=> b!107481 (= res!53353 (= lt!55095 lt!55099))))

(declare-fun map!1290 (LongMapFixedSize!910) ListLongMap!1541)

(assert (=> b!107481 (= lt!55099 (map!1290 newMap!16))))

(declare-fun getCurrentListMap!472 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) Int) ListLongMap!1541)

(assert (=> b!107481 (= lt!55095 (getCurrentListMap!472 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!107482 () Bool)

(assert (=> b!107482 (= e!69964 e!69954)))

(declare-fun res!53352 () Bool)

(assert (=> b!107482 (=> (not res!53352) (not e!69954))))

(declare-datatypes ((tuple2!2378 0))(
  ( (tuple2!2379 (_1!1200 Bool) (_2!1200 LongMapFixedSize!910)) )
))
(declare-fun lt!55100 () tuple2!2378)

(assert (=> b!107482 (= res!53352 (and (_1!1200 lt!55100) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!55091 () Unit!3301)

(assert (=> b!107482 (= lt!55091 e!69952)))

(declare-fun c!18836 () Bool)

(declare-fun contains!820 (ListLongMap!1541 (_ BitVec 64)) Bool)

(assert (=> b!107482 (= c!18836 (contains!820 lt!55099 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun update!163 (LongMapFixedSize!910 (_ BitVec 64) V!3233) tuple2!2378)

(assert (=> b!107482 (= lt!55100 (update!163 newMap!16 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))

(declare-fun mapIsEmpty!3968 () Bool)

(assert (=> mapIsEmpty!3968 mapRes!3968))

(declare-fun b!107483 () Bool)

(assert (=> b!107483 (= e!69967 (and e!69956 mapRes!3967))))

(declare-fun condMapEmpty!3967 () Bool)

(declare-fun mapDefault!3968 () ValueCell!1001)

(assert (=> b!107483 (= condMapEmpty!3967 (= (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3968)))))

(assert (= (and start!12522 res!53346) b!107469))

(assert (= (and b!107469 res!53349) b!107470))

(assert (= (and b!107470 res!53351) b!107480))

(assert (= (and b!107480 res!53348) b!107481))

(assert (= (and b!107481 res!53353) b!107474))

(assert (= (and b!107474 res!53350) b!107482))

(assert (= (and b!107482 c!18836) b!107479))

(assert (= (and b!107482 (not c!18836)) b!107467))

(assert (= (and b!107482 res!53352) b!107478))

(assert (= (and b!107478 (not res!53347)) b!107468))

(assert (= (and b!107483 condMapEmpty!3967) mapIsEmpty!3967))

(assert (= (and b!107483 (not condMapEmpty!3967)) mapNonEmpty!3967))

(get-info :version)

(assert (= (and mapNonEmpty!3967 ((_ is ValueCellFull!1001) mapValue!3967)) b!107476))

(assert (= (and b!107483 ((_ is ValueCellFull!1001) mapDefault!3968)) b!107472))

(assert (= b!107466 b!107483))

(assert (= b!107475 b!107466))

(assert (= b!107464 b!107475))

(assert (= start!12522 b!107464))

(assert (= (and b!107473 condMapEmpty!3968) mapIsEmpty!3968))

(assert (= (and b!107473 (not condMapEmpty!3968)) mapNonEmpty!3968))

(assert (= (and mapNonEmpty!3968 ((_ is ValueCellFull!1001) mapValue!3968)) b!107477))

(assert (= (and b!107473 ((_ is ValueCellFull!1001) mapDefault!3967)) b!107465))

(assert (= b!107471 b!107473))

(assert (= start!12522 b!107471))

(declare-fun b_lambda!4815 () Bool)

(assert (=> (not b_lambda!4815) (not b!107474)))

(declare-fun t!5709 () Bool)

(declare-fun tb!2073 () Bool)

(assert (=> (and b!107466 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))) t!5709) tb!2073))

(declare-fun result!3485 () Bool)

(assert (=> tb!2073 (= result!3485 tp_is_empty!2689)))

(assert (=> b!107474 t!5709))

(declare-fun b_and!6633 () Bool)

(assert (= b_and!6629 (and (=> t!5709 result!3485) b_and!6633)))

(declare-fun t!5711 () Bool)

(declare-fun tb!2075 () Bool)

(assert (=> (and b!107471 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))) t!5711) tb!2075))

(declare-fun result!3489 () Bool)

(assert (= result!3489 result!3485))

(assert (=> b!107474 t!5711))

(declare-fun b_and!6635 () Bool)

(assert (= b_and!6631 (and (=> t!5711 result!3489) b_and!6635)))

(declare-fun m!120751 () Bool)

(assert (=> b!107474 m!120751))

(declare-fun m!120753 () Bool)

(assert (=> b!107474 m!120753))

(declare-fun m!120755 () Bool)

(assert (=> b!107474 m!120755))

(assert (=> b!107474 m!120753))

(assert (=> b!107474 m!120755))

(declare-fun m!120757 () Bool)

(assert (=> b!107474 m!120757))

(assert (=> b!107482 m!120751))

(assert (=> b!107482 m!120751))

(declare-fun m!120759 () Bool)

(assert (=> b!107482 m!120759))

(assert (=> b!107482 m!120751))

(declare-fun m!120761 () Bool)

(assert (=> b!107482 m!120761))

(declare-fun m!120763 () Bool)

(assert (=> mapNonEmpty!3967 m!120763))

(declare-fun m!120765 () Bool)

(assert (=> b!107479 m!120765))

(declare-fun m!120767 () Bool)

(assert (=> b!107479 m!120767))

(assert (=> b!107479 m!120751))

(declare-fun m!120769 () Bool)

(assert (=> b!107479 m!120769))

(assert (=> b!107479 m!120751))

(assert (=> b!107479 m!120751))

(declare-fun m!120771 () Bool)

(assert (=> b!107479 m!120771))

(assert (=> b!107479 m!120751))

(declare-fun m!120773 () Bool)

(assert (=> b!107479 m!120773))

(declare-fun m!120775 () Bool)

(assert (=> start!12522 m!120775))

(declare-fun m!120777 () Bool)

(assert (=> b!107470 m!120777))

(declare-fun m!120779 () Bool)

(assert (=> mapNonEmpty!3968 m!120779))

(declare-fun m!120781 () Bool)

(assert (=> b!107471 m!120781))

(declare-fun m!120783 () Bool)

(assert (=> b!107471 m!120783))

(declare-fun m!120785 () Bool)

(assert (=> b!107466 m!120785))

(declare-fun m!120787 () Bool)

(assert (=> b!107466 m!120787))

(declare-fun m!120789 () Bool)

(assert (=> b!107478 m!120789))

(declare-fun m!120791 () Bool)

(assert (=> b!107478 m!120791))

(declare-fun m!120793 () Bool)

(assert (=> b!107478 m!120793))

(assert (=> b!107478 m!120751))

(assert (=> b!107478 m!120791))

(declare-fun m!120795 () Bool)

(assert (=> b!107478 m!120795))

(declare-fun m!120797 () Bool)

(assert (=> b!107478 m!120797))

(declare-fun m!120799 () Bool)

(assert (=> b!107478 m!120799))

(assert (=> b!107478 m!120751))

(declare-fun m!120801 () Bool)

(assert (=> b!107478 m!120801))

(assert (=> b!107478 m!120795))

(declare-fun m!120803 () Bool)

(assert (=> b!107481 m!120803))

(declare-fun m!120805 () Bool)

(assert (=> b!107481 m!120805))

(check-sat (not mapNonEmpty!3968) (not b!107482) (not b!107471) (not b!107481) b_and!6633 (not b!107478) (not b!107479) (not start!12522) (not b!107466) (not b!107474) (not b!107470) (not b_next!2545) (not mapNonEmpty!3967) (not b_next!2547) (not b_lambda!4815) b_and!6635 tp_is_empty!2689)
(check-sat b_and!6633 b_and!6635 (not b_next!2545) (not b_next!2547))
(get-model)

(declare-fun b_lambda!4821 () Bool)

(assert (= b_lambda!4815 (or (and b!107466 b_free!2545) (and b!107471 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))))) b_lambda!4821)))

(check-sat (not mapNonEmpty!3968) (not b!107482) (not b!107481) b_and!6633 (not b!107478) (not b!107479) (not b_next!2547) (not start!12522) (not b!107466) (not b!107474) (not b!107470) (not b_next!2545) (not mapNonEmpty!3967) (not b!107471) (not b_lambda!4821) b_and!6635 tp_is_empty!2689)
(check-sat b_and!6633 b_and!6635 (not b_next!2545) (not b_next!2547))
(get-model)

(declare-fun d!29791 () Bool)

(assert (=> d!29791 (not (arrayContainsKey!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55177 () Unit!3301)

(declare-fun choose!68 (array!4357 (_ BitVec 32) (_ BitVec 64) List!1605) Unit!3301)

(assert (=> d!29791 (= lt!55177 (choose!68 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602)))))

(assert (=> d!29791 (bvslt (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!29791 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602)) lt!55177)))

(declare-fun bs!4430 () Bool)

(assert (= bs!4430 d!29791))

(assert (=> bs!4430 m!120751))

(assert (=> bs!4430 m!120771))

(assert (=> bs!4430 m!120751))

(declare-fun m!120919 () Bool)

(assert (=> bs!4430 m!120919))

(assert (=> b!107479 d!29791))

(declare-fun d!29793 () Bool)

(assert (=> d!29793 (arrayNoDuplicates!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) from!355 Nil!1602)))

(declare-fun lt!55180 () Unit!3301)

(declare-fun choose!39 (array!4357 (_ BitVec 32) (_ BitVec 32)) Unit!3301)

(assert (=> d!29793 (= lt!55180 (choose!39 (_keys!4315 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!29793 (bvslt (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!29793 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 from!355) lt!55180)))

(declare-fun bs!4431 () Bool)

(assert (= bs!4431 d!29793))

(assert (=> bs!4431 m!120767))

(declare-fun m!120921 () Bool)

(assert (=> bs!4431 m!120921))

(assert (=> b!107479 d!29793))

(declare-fun d!29795 () Bool)

(declare-fun res!53406 () Bool)

(declare-fun e!70081 () Bool)

(assert (=> d!29795 (=> res!53406 e!70081)))

(assert (=> d!29795 (= res!53406 (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!29795 (= (arrayContainsKey!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!70081)))

(declare-fun b!107614 () Bool)

(declare-fun e!70082 () Bool)

(assert (=> b!107614 (= e!70081 e!70082)))

(declare-fun res!53407 () Bool)

(assert (=> b!107614 (=> (not res!53407) (not e!70082))))

(assert (=> b!107614 (= res!53407 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!107615 () Bool)

(assert (=> b!107615 (= e!70082 (arrayContainsKey!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!29795 (not res!53406)) b!107614))

(assert (= (and b!107614 res!53407) b!107615))

(declare-fun m!120923 () Bool)

(assert (=> d!29795 m!120923))

(assert (=> b!107615 m!120751))

(declare-fun m!120925 () Bool)

(assert (=> b!107615 m!120925))

(assert (=> b!107479 d!29795))

(declare-fun d!29797 () Bool)

(declare-fun e!70085 () Bool)

(assert (=> d!29797 e!70085))

(declare-fun c!18845 () Bool)

(assert (=> d!29797 (= c!18845 (and (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!55183 () Unit!3301)

(declare-fun choose!674 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) (_ BitVec 32) Int) Unit!3301)

(assert (=> d!29797 (= lt!55183 (choose!674 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))))))

(assert (=> d!29797 (validMask!0 (mask!6763 (v!2914 (underlying!367 thiss!992))))))

(assert (=> d!29797 (= (lemmaListMapContainsThenArrayContainsFrom!103 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))) lt!55183)))

(declare-fun b!107620 () Bool)

(assert (=> b!107620 (= e!70085 (arrayContainsKey!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!107621 () Bool)

(assert (=> b!107621 (= e!70085 (ite (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!29797 c!18845) b!107620))

(assert (= (and d!29797 (not c!18845)) b!107621))

(assert (=> d!29797 m!120751))

(declare-fun m!120927 () Bool)

(assert (=> d!29797 m!120927))

(assert (=> d!29797 m!120789))

(assert (=> b!107620 m!120751))

(assert (=> b!107620 m!120771))

(assert (=> b!107479 d!29797))

(declare-fun b!107633 () Bool)

(declare-fun e!70096 () Bool)

(declare-fun contains!822 (List!1605 (_ BitVec 64)) Bool)

(assert (=> b!107633 (= e!70096 (contains!822 Nil!1602 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!107634 () Bool)

(declare-fun e!70097 () Bool)

(declare-fun call!11333 () Bool)

(assert (=> b!107634 (= e!70097 call!11333)))

(declare-fun bm!11330 () Bool)

(declare-fun c!18848 () Bool)

(assert (=> bm!11330 (= call!11333 (arrayNoDuplicates!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)))))

(declare-fun b!107635 () Bool)

(declare-fun e!70095 () Bool)

(declare-fun e!70094 () Bool)

(assert (=> b!107635 (= e!70095 e!70094)))

(declare-fun res!53416 () Bool)

(assert (=> b!107635 (=> (not res!53416) (not e!70094))))

(assert (=> b!107635 (= res!53416 (not e!70096))))

(declare-fun res!53415 () Bool)

(assert (=> b!107635 (=> (not res!53415) (not e!70096))))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!107635 (= res!53415 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!107636 () Bool)

(assert (=> b!107636 (= e!70097 call!11333)))

(declare-fun d!29799 () Bool)

(declare-fun res!53414 () Bool)

(assert (=> d!29799 (=> res!53414 e!70095)))

(assert (=> d!29799 (= res!53414 (bvsge from!355 (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!29799 (= (arrayNoDuplicates!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) from!355 Nil!1602) e!70095)))

(declare-fun b!107632 () Bool)

(assert (=> b!107632 (= e!70094 e!70097)))

(assert (=> b!107632 (= c!18848 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!29799 (not res!53414)) b!107635))

(assert (= (and b!107635 res!53415) b!107633))

(assert (= (and b!107635 res!53416) b!107632))

(assert (= (and b!107632 c!18848) b!107636))

(assert (= (and b!107632 (not c!18848)) b!107634))

(assert (= (or b!107636 b!107634) bm!11330))

(assert (=> b!107633 m!120751))

(assert (=> b!107633 m!120751))

(declare-fun m!120929 () Bool)

(assert (=> b!107633 m!120929))

(assert (=> bm!11330 m!120751))

(declare-fun m!120931 () Bool)

(assert (=> bm!11330 m!120931))

(assert (=> b!107635 m!120751))

(assert (=> b!107635 m!120751))

(declare-fun m!120933 () Bool)

(assert (=> b!107635 m!120933))

(assert (=> b!107632 m!120751))

(assert (=> b!107632 m!120751))

(assert (=> b!107632 m!120933))

(assert (=> b!107479 d!29799))

(declare-fun d!29801 () Bool)

(declare-fun c!18851 () Bool)

(assert (=> d!29801 (= c!18851 ((_ is ValueCellFull!1001) (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70100 () V!3233)

(assert (=> d!29801 (= (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70100)))

(declare-fun b!107641 () Bool)

(declare-fun get!1348 (ValueCell!1001 V!3233) V!3233)

(assert (=> b!107641 (= e!70100 (get!1348 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107642 () Bool)

(declare-fun get!1349 (ValueCell!1001 V!3233) V!3233)

(assert (=> b!107642 (= e!70100 (get!1349 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29801 c!18851) b!107641))

(assert (= (and d!29801 (not c!18851)) b!107642))

(assert (=> b!107641 m!120753))

(assert (=> b!107641 m!120755))

(declare-fun m!120935 () Bool)

(assert (=> b!107641 m!120935))

(assert (=> b!107642 m!120753))

(assert (=> b!107642 m!120755))

(declare-fun m!120937 () Bool)

(assert (=> b!107642 m!120937))

(assert (=> b!107474 d!29801))

(declare-fun d!29803 () Bool)

(declare-fun e!70105 () Bool)

(assert (=> d!29803 e!70105))

(declare-fun res!53419 () Bool)

(assert (=> d!29803 (=> res!53419 e!70105)))

(declare-fun lt!55192 () Bool)

(assert (=> d!29803 (= res!53419 (not lt!55192))))

(declare-fun lt!55195 () Bool)

(assert (=> d!29803 (= lt!55192 lt!55195)))

(declare-fun lt!55194 () Unit!3301)

(declare-fun e!70106 () Unit!3301)

(assert (=> d!29803 (= lt!55194 e!70106)))

(declare-fun c!18854 () Bool)

(assert (=> d!29803 (= c!18854 lt!55195)))

(declare-fun containsKey!161 (List!1604 (_ BitVec 64)) Bool)

(assert (=> d!29803 (= lt!55195 (containsKey!161 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!29803 (= (contains!820 lt!55099 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55192)))

(declare-fun b!107649 () Bool)

(declare-fun lt!55193 () Unit!3301)

(assert (=> b!107649 (= e!70106 lt!55193)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!109 (List!1604 (_ BitVec 64)) Unit!3301)

(assert (=> b!107649 (= lt!55193 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-datatypes ((Option!164 0))(
  ( (Some!163 (v!2920 V!3233)) (None!162) )
))
(declare-fun isDefined!110 (Option!164) Bool)

(declare-fun getValueByKey!158 (List!1604 (_ BitVec 64)) Option!164)

(assert (=> b!107649 (isDefined!110 (getValueByKey!158 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!107650 () Bool)

(declare-fun Unit!3312 () Unit!3301)

(assert (=> b!107650 (= e!70106 Unit!3312)))

(declare-fun b!107651 () Bool)

(assert (=> b!107651 (= e!70105 (isDefined!110 (getValueByKey!158 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!29803 c!18854) b!107649))

(assert (= (and d!29803 (not c!18854)) b!107650))

(assert (= (and d!29803 (not res!53419)) b!107651))

(assert (=> d!29803 m!120751))

(declare-fun m!120939 () Bool)

(assert (=> d!29803 m!120939))

(assert (=> b!107649 m!120751))

(declare-fun m!120941 () Bool)

(assert (=> b!107649 m!120941))

(assert (=> b!107649 m!120751))

(declare-fun m!120943 () Bool)

(assert (=> b!107649 m!120943))

(assert (=> b!107649 m!120943))

(declare-fun m!120945 () Bool)

(assert (=> b!107649 m!120945))

(assert (=> b!107651 m!120751))

(assert (=> b!107651 m!120943))

(assert (=> b!107651 m!120943))

(assert (=> b!107651 m!120945))

(assert (=> b!107482 d!29803))

(declare-fun b!107732 () Bool)

(declare-fun e!70162 () Unit!3301)

(declare-fun Unit!3313 () Unit!3301)

(assert (=> b!107732 (= e!70162 Unit!3313)))

(declare-fun lt!55274 () Unit!3301)

(declare-fun call!11394 () Unit!3301)

(assert (=> b!107732 (= lt!55274 call!11394)))

(declare-datatypes ((SeekEntryResult!254 0))(
  ( (MissingZero!254 (index!3165 (_ BitVec 32))) (Found!254 (index!3166 (_ BitVec 32))) (Intermediate!254 (undefined!1066 Bool) (index!3167 (_ BitVec 32)) (x!13798 (_ BitVec 32))) (Undefined!254) (MissingVacant!254 (index!3168 (_ BitVec 32))) )
))
(declare-fun lt!55260 () SeekEntryResult!254)

(declare-fun call!11405 () SeekEntryResult!254)

(assert (=> b!107732 (= lt!55260 call!11405)))

(declare-fun res!53448 () Bool)

(assert (=> b!107732 (= res!53448 ((_ is Found!254) lt!55260))))

(declare-fun e!70158 () Bool)

(assert (=> b!107732 (=> (not res!53448) (not e!70158))))

(assert (=> b!107732 e!70158))

(declare-fun lt!55273 () Unit!3301)

(assert (=> b!107732 (= lt!55273 lt!55274)))

(assert (=> b!107732 false))

(declare-fun bm!11379 () Bool)

(declare-fun call!11385 () Bool)

(declare-fun call!11401 () Bool)

(assert (=> bm!11379 (= call!11385 call!11401)))

(declare-fun bm!11380 () Bool)

(declare-fun call!11391 () ListLongMap!1541)

(declare-fun call!11383 () ListLongMap!1541)

(assert (=> bm!11380 (= call!11391 call!11383)))

(declare-fun lt!55264 () SeekEntryResult!254)

(declare-fun c!18886 () Bool)

(declare-fun call!11397 () ListLongMap!1541)

(declare-fun bm!11381 () Bool)

(assert (=> bm!11381 (= call!11397 (getCurrentListMap!472 (_keys!4315 newMap!16) (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!107733 () Bool)

(declare-fun lt!55261 () Unit!3301)

(declare-fun lt!55253 () Unit!3301)

(assert (=> b!107733 (= lt!55261 lt!55253)))

(declare-fun call!11393 () Bool)

(assert (=> b!107733 call!11393))

(declare-fun lt!55257 () array!4359)

(declare-fun lemmaValidKeyInArrayIsInListMap!108 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) Int) Unit!3301)

(assert (=> b!107733 (= lt!55253 (lemmaValidKeyInArrayIsInListMap!108 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3166 lt!55264) (defaultEntry!2605 newMap!16)))))

(assert (=> b!107733 (= lt!55257 (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))))))

(declare-fun lt!55266 () Unit!3301)

(declare-fun lt!55256 () Unit!3301)

(assert (=> b!107733 (= lt!55266 lt!55256)))

(assert (=> b!107733 (= call!11383 call!11397)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!48 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) (_ BitVec 64) V!3233 Int) Unit!3301)

(assert (=> b!107733 (= lt!55256 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!48 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3166 lt!55264) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55259 () Unit!3301)

(declare-fun e!70156 () Unit!3301)

(assert (=> b!107733 (= lt!55259 e!70156)))

(declare-fun c!18884 () Bool)

(assert (=> b!107733 (= c!18884 (contains!820 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70157 () tuple2!2378)

(assert (=> b!107733 (= e!70157 (tuple2!2379 true (LongMapFixedSize!911 (defaultEntry!2605 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (_size!504 newMap!16) (_keys!4315 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (_vacant!504 newMap!16))))))

(declare-fun b!107734 () Bool)

(declare-fun res!53452 () Bool)

(declare-fun call!11404 () Bool)

(assert (=> b!107734 (= res!53452 call!11404)))

(declare-fun e!70154 () Bool)

(assert (=> b!107734 (=> (not res!53452) (not e!70154))))

(declare-fun call!11403 () ListLongMap!1541)

(declare-fun b!107735 () Bool)

(declare-fun e!70161 () Bool)

(declare-fun call!11386 () ListLongMap!1541)

(assert (=> b!107735 (= e!70161 (= call!11386 (+!142 call!11403 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun d!29805 () Bool)

(declare-fun e!70159 () Bool)

(assert (=> d!29805 e!70159))

(declare-fun res!53449 () Bool)

(assert (=> d!29805 (=> (not res!53449) (not e!70159))))

(declare-fun lt!55269 () tuple2!2378)

(assert (=> d!29805 (= res!53449 (valid!430 (_2!1200 lt!55269)))))

(declare-fun e!70149 () tuple2!2378)

(assert (=> d!29805 (= lt!55269 e!70149)))

(assert (=> d!29805 (= c!18886 (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvneg (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!29805 (valid!430 newMap!16)))

(assert (=> d!29805 (= (update!163 newMap!16 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094) lt!55269)))

(declare-fun b!107736 () Bool)

(declare-fun e!70160 () Bool)

(declare-fun lt!55272 () SeekEntryResult!254)

(assert (=> b!107736 (= e!70160 ((_ is Undefined!254) lt!55272))))

(declare-fun bm!11382 () Bool)

(declare-fun call!11390 () Bool)

(declare-fun call!11382 () Bool)

(assert (=> bm!11382 (= call!11390 call!11382)))

(declare-fun b!107737 () Bool)

(declare-fun lt!55265 () Unit!3301)

(assert (=> b!107737 (= e!70156 lt!55265)))

(assert (=> b!107737 (= lt!55265 call!11394)))

(declare-fun lt!55267 () SeekEntryResult!254)

(declare-fun call!11388 () SeekEntryResult!254)

(assert (=> b!107737 (= lt!55267 call!11388)))

(declare-fun res!53454 () Bool)

(assert (=> b!107737 (= res!53454 ((_ is Found!254) lt!55267))))

(assert (=> b!107737 (=> (not res!53454) (not e!70154))))

(assert (=> b!107737 e!70154))

(declare-fun b!107738 () Bool)

(assert (=> b!107738 (= e!70158 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55260)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!107739 () Bool)

(declare-fun lt!55276 () Unit!3301)

(declare-fun lt!55255 () Unit!3301)

(assert (=> b!107739 (= lt!55276 lt!55255)))

(declare-fun call!11384 () ListLongMap!1541)

(assert (=> b!107739 (= call!11391 call!11384)))

(declare-fun lt!55270 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!48 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 V!3233 Int) Unit!3301)

(assert (=> b!107739 (= lt!55255 (lemmaChangeZeroKeyThenAddPairToListMap!48 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) lt!55270 (zeroValue!2478 newMap!16) lt!55094 (minValue!2478 newMap!16) (defaultEntry!2605 newMap!16)))))

(assert (=> b!107739 (= lt!55270 (bvor (extraKeys!2406 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!70155 () tuple2!2378)

(assert (=> b!107739 (= e!70155 (tuple2!2379 true (LongMapFixedSize!911 (defaultEntry!2605 newMap!16) (mask!6763 newMap!16) (bvor (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) lt!55094 (minValue!2478 newMap!16) (_size!504 newMap!16) (_keys!4315 newMap!16) (_values!2588 newMap!16) (_vacant!504 newMap!16))))))

(declare-fun bm!11383 () Bool)

(declare-fun call!11389 () ListLongMap!1541)

(declare-fun c!18887 () Bool)

(assert (=> bm!11383 (= call!11393 (contains!820 call!11389 (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))))

(declare-fun b!107740 () Bool)

(declare-fun lt!55263 () Unit!3301)

(assert (=> b!107740 (= lt!55263 e!70162)))

(declare-fun c!18891 () Bool)

(assert (=> b!107740 (= c!18891 call!11393)))

(declare-fun e!70167 () tuple2!2378)

(assert (=> b!107740 (= e!70167 (tuple2!2379 false newMap!16))))

(declare-fun bm!11384 () Bool)

(declare-fun call!11387 () Bool)

(assert (=> bm!11384 (= call!11387 call!11401)))

(declare-fun b!107741 () Bool)

(declare-fun Unit!3314 () Unit!3301)

(assert (=> b!107741 (= e!70156 Unit!3314)))

(declare-fun lt!55254 () Unit!3301)

(declare-fun call!11399 () Unit!3301)

(assert (=> b!107741 (= lt!55254 call!11399)))

(assert (=> b!107741 (= lt!55272 call!11388)))

(declare-fun c!18883 () Bool)

(assert (=> b!107741 (= c!18883 ((_ is MissingZero!254) lt!55272))))

(declare-fun e!70163 () Bool)

(assert (=> b!107741 e!70163))

(declare-fun lt!55250 () Unit!3301)

(assert (=> b!107741 (= lt!55250 lt!55254)))

(assert (=> b!107741 false))

(declare-fun bm!11385 () Bool)

(declare-fun call!11395 () SeekEntryResult!254)

(assert (=> bm!11385 (= call!11405 call!11395)))

(declare-fun bm!11386 () Bool)

(assert (=> bm!11386 (= call!11401 (arrayContainsKey!0 (_keys!4315 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!11387 () Bool)

(declare-fun call!11398 () ListLongMap!1541)

(assert (=> bm!11387 (= call!11389 call!11398)))

(declare-fun b!107742 () Bool)

(declare-fun e!70153 () ListLongMap!1541)

(assert (=> b!107742 (= e!70153 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun bm!11388 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4357 (_ BitVec 32)) SeekEntryResult!254)

(assert (=> bm!11388 (= call!11395 (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(declare-fun bm!11389 () Bool)

(declare-fun call!11402 () Bool)

(assert (=> bm!11389 (= call!11404 call!11402)))

(declare-fun b!107743 () Bool)

(declare-fun e!70152 () Bool)

(declare-fun lt!55271 () SeekEntryResult!254)

(assert (=> b!107743 (= e!70152 ((_ is Undefined!254) lt!55271))))

(declare-fun b!107744 () Bool)

(assert (=> b!107744 (= e!70154 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55267)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun bm!11390 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) Int) Unit!3301)

(assert (=> bm!11390 (= call!11399 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)))))

(declare-fun b!107745 () Bool)

(declare-fun e!70165 () Bool)

(assert (=> b!107745 (= e!70165 (not call!11387))))

(declare-fun b!107746 () Bool)

(assert (=> b!107746 (= e!70149 e!70167)))

(assert (=> b!107746 (= lt!55264 (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(assert (=> b!107746 (= c!18887 ((_ is Undefined!254) lt!55264))))

(declare-fun bm!11391 () Bool)

(declare-fun call!11392 () Bool)

(assert (=> bm!11391 (= call!11392 call!11404)))

(declare-fun b!107747 () Bool)

(declare-fun e!70150 () Bool)

(assert (=> b!107747 (= e!70150 (not call!11385))))

(declare-fun b!107748 () Bool)

(declare-fun e!70168 () tuple2!2378)

(assert (=> b!107748 (= e!70168 e!70157)))

(declare-fun c!18881 () Bool)

(assert (=> b!107748 (= c!18881 ((_ is MissingZero!254) lt!55264))))

(declare-fun b!107749 () Bool)

(declare-fun e!70166 () Bool)

(assert (=> b!107749 (= e!70160 e!70166)))

(declare-fun res!53455 () Bool)

(assert (=> b!107749 (= res!53455 call!11392)))

(assert (=> b!107749 (=> (not res!53455) (not e!70166))))

(declare-fun b!107750 () Bool)

(declare-fun c!18893 () Bool)

(assert (=> b!107750 (= c!18893 ((_ is MissingVacant!254) lt!55272))))

(assert (=> b!107750 (= e!70163 e!70160)))

(declare-fun b!107751 () Bool)

(declare-fun res!53456 () Bool)

(assert (=> b!107751 (=> (not res!53456) (not e!70150))))

(assert (=> b!107751 (= res!53456 call!11390)))

(declare-fun e!70151 () Bool)

(assert (=> b!107751 (= e!70151 e!70150)))

(declare-fun b!107752 () Bool)

(declare-fun c!18888 () Bool)

(assert (=> b!107752 (= c!18888 ((_ is MissingVacant!254) lt!55264))))

(assert (=> b!107752 (= e!70167 e!70168)))

(declare-fun b!107753 () Bool)

(declare-fun e!70169 () Bool)

(assert (=> b!107753 (= e!70169 e!70161)))

(declare-fun res!53461 () Bool)

(assert (=> b!107753 (= res!53461 (contains!820 call!11386 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!107753 (=> (not res!53461) (not e!70161))))

(declare-fun bm!11392 () Bool)

(assert (=> bm!11392 (= call!11386 (map!1290 (_2!1200 lt!55269)))))

(declare-fun bm!11393 () Bool)

(declare-fun c!18882 () Bool)

(assert (=> bm!11393 (= call!11383 (+!142 e!70153 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun c!18890 () Bool)

(assert (=> bm!11393 (= c!18890 c!18886)))

(declare-fun bm!11394 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) Int) Unit!3301)

(assert (=> bm!11394 (= call!11394 (lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)))))

(declare-fun b!107754 () Bool)

(assert (=> b!107754 (= e!70149 e!70155)))

(assert (=> b!107754 (= c!18882 (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107755 () Bool)

(assert (=> b!107755 (= e!70159 e!70169)))

(declare-fun c!18892 () Bool)

(assert (=> b!107755 (= c!18892 (_1!1200 lt!55269))))

(declare-fun b!107756 () Bool)

(declare-fun res!53459 () Bool)

(assert (=> b!107756 (=> (not res!53459) (not e!70150))))

(assert (=> b!107756 (= res!53459 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3165 lt!55271)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107757 () Bool)

(declare-fun lt!55275 () Unit!3301)

(declare-fun lt!55252 () Unit!3301)

(assert (=> b!107757 (= lt!55275 lt!55252)))

(assert (=> b!107757 (= call!11391 call!11384)))

(declare-fun lt!55262 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!48 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 V!3233 Int) Unit!3301)

(assert (=> b!107757 (= lt!55252 (lemmaChangeLongMinValueKeyThenAddPairToListMap!48 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) lt!55262 (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) lt!55094 (defaultEntry!2605 newMap!16)))))

(assert (=> b!107757 (= lt!55262 (bvor (extraKeys!2406 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!107757 (= e!70155 (tuple2!2379 true (LongMapFixedSize!911 (defaultEntry!2605 newMap!16) (mask!6763 newMap!16) (bvor (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) (zeroValue!2478 newMap!16) lt!55094 (_size!504 newMap!16) (_keys!4315 newMap!16) (_values!2588 newMap!16) (_vacant!504 newMap!16))))))

(declare-fun b!107758 () Bool)

(declare-fun res!53457 () Bool)

(assert (=> b!107758 (= res!53457 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3168 lt!55272)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107758 (=> (not res!53457) (not e!70166))))

(declare-fun b!107759 () Bool)

(declare-fun res!53450 () Bool)

(assert (=> b!107759 (= res!53450 call!11382)))

(assert (=> b!107759 (=> (not res!53450) (not e!70158))))

(declare-fun b!107760 () Bool)

(declare-fun res!53453 () Bool)

(assert (=> b!107760 (=> (not res!53453) (not e!70165))))

(assert (=> b!107760 (= res!53453 call!11392)))

(assert (=> b!107760 (= e!70163 e!70165)))

(declare-fun b!107761 () Bool)

(declare-fun e!70164 () Bool)

(assert (=> b!107761 (= e!70152 e!70164)))

(declare-fun res!53451 () Bool)

(assert (=> b!107761 (= res!53451 call!11390)))

(assert (=> b!107761 (=> (not res!53451) (not e!70164))))

(declare-fun bm!11395 () Bool)

(assert (=> bm!11395 (= call!11382 call!11402)))

(declare-fun b!107762 () Bool)

(declare-fun c!18889 () Bool)

(assert (=> b!107762 (= c!18889 ((_ is MissingVacant!254) lt!55271))))

(assert (=> b!107762 (= e!70151 e!70152)))

(declare-fun bm!11396 () Bool)

(declare-fun call!11396 () ListLongMap!1541)

(assert (=> bm!11396 (= call!11396 call!11397)))

(declare-fun bm!11397 () Bool)

(assert (=> bm!11397 (= call!11384 call!11398)))

(declare-fun b!107763 () Bool)

(assert (=> b!107763 (= e!70166 (not call!11387))))

(declare-fun b!107764 () Bool)

(declare-fun lt!55258 () tuple2!2378)

(assert (=> b!107764 (= e!70168 (tuple2!2379 (_1!1200 lt!55258) (_2!1200 lt!55258)))))

(declare-fun call!11400 () tuple2!2378)

(assert (=> b!107764 (= lt!55258 call!11400)))

(declare-fun b!107765 () Bool)

(declare-fun res!53458 () Bool)

(assert (=> b!107765 (= res!53458 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3168 lt!55271)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107765 (=> (not res!53458) (not e!70164))))

(declare-fun bm!11398 () Bool)

(assert (=> bm!11398 (= call!11398 (getCurrentListMap!472 (_keys!4315 newMap!16) (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257) (mask!6763 newMap!16) (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!107766 () Bool)

(declare-fun res!53460 () Bool)

(assert (=> b!107766 (=> (not res!53460) (not e!70165))))

(assert (=> b!107766 (= res!53460 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3165 lt!55272)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107767 () Bool)

(declare-fun lt!55251 () Unit!3301)

(assert (=> b!107767 (= e!70162 lt!55251)))

(assert (=> b!107767 (= lt!55251 call!11399)))

(assert (=> b!107767 (= lt!55271 call!11405)))

(declare-fun c!18885 () Bool)

(assert (=> b!107767 (= c!18885 ((_ is MissingZero!254) lt!55271))))

(assert (=> b!107767 e!70151))

(declare-fun b!107768 () Bool)

(assert (=> b!107768 (= e!70164 (not call!11385))))

(declare-fun bm!11399 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!11399 (= call!11402 (inRange!0 (ite c!18887 (ite c!18891 (index!3166 lt!55260) (ite c!18885 (index!3165 lt!55271) (index!3168 lt!55271))) (ite c!18884 (index!3166 lt!55267) (ite c!18883 (index!3165 lt!55272) (index!3168 lt!55272)))) (mask!6763 newMap!16)))))

(declare-fun b!107769 () Bool)

(assert (=> b!107769 (= e!70153 call!11396)))

(declare-fun b!107770 () Bool)

(declare-fun lt!55268 () tuple2!2378)

(assert (=> b!107770 (= lt!55268 call!11400)))

(assert (=> b!107770 (= e!70157 (tuple2!2379 (_1!1200 lt!55268) (_2!1200 lt!55268)))))

(declare-fun bm!11400 () Bool)

(assert (=> bm!11400 (= call!11388 call!11395)))

(declare-fun bm!11401 () Bool)

(declare-fun updateHelperNewKey!48 (LongMapFixedSize!910 (_ BitVec 64) V!3233 (_ BitVec 32)) tuple2!2378)

(assert (=> bm!11401 (= call!11400 (updateHelperNewKey!48 newMap!16 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264))))))

(declare-fun b!107771 () Bool)

(assert (=> b!107771 (= e!70169 (= call!11386 call!11403))))

(declare-fun bm!11402 () Bool)

(assert (=> bm!11402 (= call!11403 (map!1290 newMap!16))))

(assert (= (and d!29805 c!18886) b!107754))

(assert (= (and d!29805 (not c!18886)) b!107746))

(assert (= (and b!107754 c!18882) b!107739))

(assert (= (and b!107754 (not c!18882)) b!107757))

(assert (= (or b!107739 b!107757) bm!11396))

(assert (= (or b!107739 b!107757) bm!11397))

(assert (= (or b!107739 b!107757) bm!11380))

(assert (= (and b!107746 c!18887) b!107740))

(assert (= (and b!107746 (not c!18887)) b!107752))

(assert (= (and b!107740 c!18891) b!107732))

(assert (= (and b!107740 (not c!18891)) b!107767))

(assert (= (and b!107732 res!53448) b!107759))

(assert (= (and b!107759 res!53450) b!107738))

(assert (= (and b!107767 c!18885) b!107751))

(assert (= (and b!107767 (not c!18885)) b!107762))

(assert (= (and b!107751 res!53456) b!107756))

(assert (= (and b!107756 res!53459) b!107747))

(assert (= (and b!107762 c!18889) b!107761))

(assert (= (and b!107762 (not c!18889)) b!107743))

(assert (= (and b!107761 res!53451) b!107765))

(assert (= (and b!107765 res!53458) b!107768))

(assert (= (or b!107751 b!107761) bm!11382))

(assert (= (or b!107747 b!107768) bm!11379))

(assert (= (or b!107759 bm!11382) bm!11395))

(assert (= (or b!107732 b!107767) bm!11385))

(assert (= (and b!107752 c!18888) b!107764))

(assert (= (and b!107752 (not c!18888)) b!107748))

(assert (= (and b!107748 c!18881) b!107770))

(assert (= (and b!107748 (not c!18881)) b!107733))

(assert (= (and b!107733 c!18884) b!107737))

(assert (= (and b!107733 (not c!18884)) b!107741))

(assert (= (and b!107737 res!53454) b!107734))

(assert (= (and b!107734 res!53452) b!107744))

(assert (= (and b!107741 c!18883) b!107760))

(assert (= (and b!107741 (not c!18883)) b!107750))

(assert (= (and b!107760 res!53453) b!107766))

(assert (= (and b!107766 res!53460) b!107745))

(assert (= (and b!107750 c!18893) b!107749))

(assert (= (and b!107750 (not c!18893)) b!107736))

(assert (= (and b!107749 res!53455) b!107758))

(assert (= (and b!107758 res!53457) b!107763))

(assert (= (or b!107760 b!107749) bm!11391))

(assert (= (or b!107745 b!107763) bm!11384))

(assert (= (or b!107734 bm!11391) bm!11389))

(assert (= (or b!107737 b!107741) bm!11400))

(assert (= (or b!107764 b!107770) bm!11401))

(assert (= (or bm!11379 bm!11384) bm!11386))

(assert (= (or bm!11395 bm!11389) bm!11399))

(assert (= (or b!107767 b!107741) bm!11390))

(assert (= (or bm!11385 bm!11400) bm!11388))

(assert (= (or b!107732 b!107737) bm!11394))

(assert (= (or b!107740 b!107733) bm!11387))

(assert (= (or b!107740 b!107733) bm!11383))

(assert (= (or bm!11396 b!107733) bm!11381))

(assert (= (or bm!11397 bm!11387) bm!11398))

(assert (= (or bm!11380 b!107733) bm!11393))

(assert (= (and bm!11393 c!18890) b!107769))

(assert (= (and bm!11393 (not c!18890)) b!107742))

(assert (= (and d!29805 res!53449) b!107755))

(assert (= (and b!107755 c!18892) b!107753))

(assert (= (and b!107755 (not c!18892)) b!107771))

(assert (= (and b!107753 res!53461) b!107735))

(assert (= (or b!107753 b!107735 b!107771) bm!11392))

(assert (= (or b!107735 b!107771) bm!11402))

(declare-fun m!120947 () Bool)

(assert (=> b!107757 m!120947))

(declare-fun m!120949 () Bool)

(assert (=> b!107756 m!120949))

(declare-fun m!120951 () Bool)

(assert (=> b!107739 m!120951))

(declare-fun m!120953 () Bool)

(assert (=> bm!11399 m!120953))

(assert (=> b!107753 m!120751))

(declare-fun m!120955 () Bool)

(assert (=> b!107753 m!120955))

(declare-fun m!120957 () Bool)

(assert (=> bm!11381 m!120957))

(declare-fun m!120959 () Bool)

(assert (=> bm!11381 m!120959))

(assert (=> bm!11394 m!120751))

(declare-fun m!120961 () Bool)

(assert (=> bm!11394 m!120961))

(declare-fun m!120963 () Bool)

(assert (=> bm!11398 m!120963))

(declare-fun m!120965 () Bool)

(assert (=> bm!11393 m!120965))

(declare-fun m!120967 () Bool)

(assert (=> b!107738 m!120967))

(assert (=> bm!11388 m!120751))

(declare-fun m!120969 () Bool)

(assert (=> bm!11388 m!120969))

(declare-fun m!120971 () Bool)

(assert (=> b!107765 m!120971))

(assert (=> bm!11386 m!120751))

(declare-fun m!120973 () Bool)

(assert (=> bm!11386 m!120973))

(declare-fun m!120975 () Bool)

(assert (=> bm!11392 m!120975))

(declare-fun m!120977 () Bool)

(assert (=> b!107735 m!120977))

(declare-fun m!120979 () Bool)

(assert (=> b!107744 m!120979))

(assert (=> bm!11390 m!120751))

(declare-fun m!120981 () Bool)

(assert (=> bm!11390 m!120981))

(assert (=> b!107733 m!120751))

(declare-fun m!120983 () Bool)

(assert (=> b!107733 m!120983))

(assert (=> b!107733 m!120957))

(declare-fun m!120985 () Bool)

(assert (=> b!107733 m!120985))

(declare-fun m!120987 () Bool)

(assert (=> b!107733 m!120987))

(assert (=> b!107733 m!120751))

(declare-fun m!120989 () Bool)

(assert (=> b!107733 m!120989))

(assert (=> b!107733 m!120987))

(assert (=> b!107742 m!120987))

(declare-fun m!120991 () Bool)

(assert (=> bm!11383 m!120991))

(declare-fun m!120993 () Bool)

(assert (=> bm!11383 m!120993))

(declare-fun m!120995 () Bool)

(assert (=> d!29805 m!120995))

(assert (=> d!29805 m!120777))

(assert (=> bm!11401 m!120751))

(declare-fun m!120997 () Bool)

(assert (=> bm!11401 m!120997))

(declare-fun m!120999 () Bool)

(assert (=> b!107758 m!120999))

(declare-fun m!121001 () Bool)

(assert (=> b!107766 m!121001))

(assert (=> b!107746 m!120751))

(assert (=> b!107746 m!120969))

(assert (=> bm!11402 m!120803))

(assert (=> b!107482 d!29805))

(declare-fun d!29807 () Bool)

(assert (=> d!29807 (= (+!142 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (+!142 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(declare-fun lt!55279 () Unit!3301)

(declare-fun choose!675 (ListLongMap!1541 (_ BitVec 64) V!3233 (_ BitVec 64) V!3233) Unit!3301)

(assert (=> d!29807 (= lt!55279 (choose!675 lt!55096 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))

(assert (=> d!29807 (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29807 (= (addCommutativeForDiffKeys!55 lt!55096 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) lt!55279)))

(declare-fun bs!4432 () Bool)

(assert (= bs!4432 d!29807))

(declare-fun m!121003 () Bool)

(assert (=> bs!4432 m!121003))

(declare-fun m!121005 () Bool)

(assert (=> bs!4432 m!121005))

(declare-fun m!121007 () Bool)

(assert (=> bs!4432 m!121007))

(assert (=> bs!4432 m!120751))

(declare-fun m!121009 () Bool)

(assert (=> bs!4432 m!121009))

(assert (=> bs!4432 m!121005))

(assert (=> bs!4432 m!121003))

(declare-fun m!121011 () Bool)

(assert (=> bs!4432 m!121011))

(assert (=> b!107478 d!29807))

(declare-fun d!29809 () Bool)

(declare-fun e!70172 () Bool)

(assert (=> d!29809 e!70172))

(declare-fun res!53467 () Bool)

(assert (=> d!29809 (=> (not res!53467) (not e!70172))))

(declare-fun lt!55291 () ListLongMap!1541)

(assert (=> d!29809 (= res!53467 (contains!820 lt!55291 (_1!1199 lt!55092)))))

(declare-fun lt!55290 () List!1604)

(assert (=> d!29809 (= lt!55291 (ListLongMap!1542 lt!55290))))

(declare-fun lt!55288 () Unit!3301)

(declare-fun lt!55289 () Unit!3301)

(assert (=> d!29809 (= lt!55288 lt!55289)))

(assert (=> d!29809 (= (getValueByKey!158 lt!55290 (_1!1199 lt!55092)) (Some!163 (_2!1199 lt!55092)))))

(declare-fun lemmaContainsTupThenGetReturnValue!74 (List!1604 (_ BitVec 64) V!3233) Unit!3301)

(assert (=> d!29809 (= lt!55289 (lemmaContainsTupThenGetReturnValue!74 lt!55290 (_1!1199 lt!55092) (_2!1199 lt!55092)))))

(declare-fun insertStrictlySorted!77 (List!1604 (_ BitVec 64) V!3233) List!1604)

(assert (=> d!29809 (= lt!55290 (insertStrictlySorted!77 (toList!786 lt!55096) (_1!1199 lt!55092) (_2!1199 lt!55092)))))

(assert (=> d!29809 (= (+!142 lt!55096 lt!55092) lt!55291)))

(declare-fun b!107776 () Bool)

(declare-fun res!53466 () Bool)

(assert (=> b!107776 (=> (not res!53466) (not e!70172))))

(assert (=> b!107776 (= res!53466 (= (getValueByKey!158 (toList!786 lt!55291) (_1!1199 lt!55092)) (Some!163 (_2!1199 lt!55092))))))

(declare-fun b!107777 () Bool)

(declare-fun contains!823 (List!1604 tuple2!2376) Bool)

(assert (=> b!107777 (= e!70172 (contains!823 (toList!786 lt!55291) lt!55092))))

(assert (= (and d!29809 res!53467) b!107776))

(assert (= (and b!107776 res!53466) b!107777))

(declare-fun m!121013 () Bool)

(assert (=> d!29809 m!121013))

(declare-fun m!121015 () Bool)

(assert (=> d!29809 m!121015))

(declare-fun m!121017 () Bool)

(assert (=> d!29809 m!121017))

(declare-fun m!121019 () Bool)

(assert (=> d!29809 m!121019))

(declare-fun m!121021 () Bool)

(assert (=> b!107776 m!121021))

(declare-fun m!121023 () Bool)

(assert (=> b!107777 m!121023))

(assert (=> b!107478 d!29809))

(declare-fun lt!55306 () ListLongMap!1541)

(declare-fun b!107802 () Bool)

(declare-fun e!70188 () Bool)

(assert (=> b!107802 (= e!70188 (= lt!55306 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!107803 () Bool)

(declare-fun e!70187 () Bool)

(declare-fun e!70192 () Bool)

(assert (=> b!107803 (= e!70187 e!70192)))

(assert (=> b!107803 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun res!53477 () Bool)

(assert (=> b!107803 (= res!53477 (contains!820 lt!55306 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107803 (=> (not res!53477) (not e!70192))))

(declare-fun b!107804 () Bool)

(declare-fun e!70189 () ListLongMap!1541)

(declare-fun e!70190 () ListLongMap!1541)

(assert (=> b!107804 (= e!70189 e!70190)))

(declare-fun c!18902 () Bool)

(assert (=> b!107804 (= c!18902 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!29811 () Bool)

(declare-fun e!70191 () Bool)

(assert (=> d!29811 e!70191))

(declare-fun res!53478 () Bool)

(assert (=> d!29811 (=> (not res!53478) (not e!70191))))

(assert (=> d!29811 (= res!53478 (not (contains!820 lt!55306 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29811 (= lt!55306 e!70189)))

(declare-fun c!18903 () Bool)

(assert (=> d!29811 (= c!18903 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!29811 (validMask!0 (mask!6763 (v!2914 (underlying!367 thiss!992))))))

(assert (=> d!29811 (= (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))) lt!55306)))

(declare-fun b!107805 () Bool)

(assert (=> b!107805 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> b!107805 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2323 (_values!2588 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun apply!99 (ListLongMap!1541 (_ BitVec 64)) V!3233)

(assert (=> b!107805 (= e!70192 (= (apply!99 lt!55306 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!107806 () Bool)

(assert (=> b!107806 (= e!70191 e!70187)))

(declare-fun c!18904 () Bool)

(declare-fun e!70193 () Bool)

(assert (=> b!107806 (= c!18904 e!70193)))

(declare-fun res!53479 () Bool)

(assert (=> b!107806 (=> (not res!53479) (not e!70193))))

(assert (=> b!107806 (= res!53479 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!107807 () Bool)

(declare-fun res!53476 () Bool)

(assert (=> b!107807 (=> (not res!53476) (not e!70191))))

(assert (=> b!107807 (= res!53476 (not (contains!820 lt!55306 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107808 () Bool)

(assert (=> b!107808 (= e!70189 (ListLongMap!1542 Nil!1601))))

(declare-fun b!107809 () Bool)

(declare-fun lt!55310 () Unit!3301)

(declare-fun lt!55311 () Unit!3301)

(assert (=> b!107809 (= lt!55310 lt!55311)))

(declare-fun lt!55308 () (_ BitVec 64))

(declare-fun lt!55307 () V!3233)

(declare-fun lt!55309 () ListLongMap!1541)

(declare-fun lt!55312 () (_ BitVec 64))

(assert (=> b!107809 (not (contains!820 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)) lt!55308))))

(declare-fun addStillNotContains!49 (ListLongMap!1541 (_ BitVec 64) V!3233 (_ BitVec 64)) Unit!3301)

(assert (=> b!107809 (= lt!55311 (addStillNotContains!49 lt!55309 lt!55312 lt!55307 lt!55308))))

(assert (=> b!107809 (= lt!55308 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!107809 (= lt!55307 (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!107809 (= lt!55312 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!11408 () ListLongMap!1541)

(assert (=> b!107809 (= lt!55309 call!11408)))

(assert (=> b!107809 (= e!70190 (+!142 call!11408 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!107810 () Bool)

(assert (=> b!107810 (= e!70193 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107810 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!107811 () Bool)

(assert (=> b!107811 (= e!70187 e!70188)))

(declare-fun c!18905 () Bool)

(assert (=> b!107811 (= c!18905 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun bm!11405 () Bool)

(assert (=> bm!11405 (= call!11408 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!107812 () Bool)

(assert (=> b!107812 (= e!70190 call!11408)))

(declare-fun b!107813 () Bool)

(declare-fun isEmpty!379 (ListLongMap!1541) Bool)

(assert (=> b!107813 (= e!70188 (isEmpty!379 lt!55306))))

(assert (= (and d!29811 c!18903) b!107808))

(assert (= (and d!29811 (not c!18903)) b!107804))

(assert (= (and b!107804 c!18902) b!107809))

(assert (= (and b!107804 (not c!18902)) b!107812))

(assert (= (or b!107809 b!107812) bm!11405))

(assert (= (and d!29811 res!53478) b!107807))

(assert (= (and b!107807 res!53476) b!107806))

(assert (= (and b!107806 res!53479) b!107810))

(assert (= (and b!107806 c!18904) b!107803))

(assert (= (and b!107806 (not c!18904)) b!107811))

(assert (= (and b!107803 res!53477) b!107805))

(assert (= (and b!107811 c!18905) b!107802))

(assert (= (and b!107811 (not c!18905)) b!107813))

(declare-fun b_lambda!4823 () Bool)

(assert (=> (not b_lambda!4823) (not b!107805)))

(assert (=> b!107805 t!5709))

(declare-fun b_and!6653 () Bool)

(assert (= b_and!6633 (and (=> t!5709 result!3485) b_and!6653)))

(assert (=> b!107805 t!5711))

(declare-fun b_and!6655 () Bool)

(assert (= b_and!6635 (and (=> t!5711 result!3489) b_and!6655)))

(declare-fun b_lambda!4825 () Bool)

(assert (=> (not b_lambda!4825) (not b!107809)))

(assert (=> b!107809 t!5709))

(declare-fun b_and!6657 () Bool)

(assert (= b_and!6653 (and (=> t!5709 result!3485) b_and!6657)))

(assert (=> b!107809 t!5711))

(declare-fun b_and!6659 () Bool)

(assert (= b_and!6655 (and (=> t!5711 result!3489) b_and!6659)))

(declare-fun m!121025 () Bool)

(assert (=> b!107813 m!121025))

(declare-fun m!121027 () Bool)

(assert (=> b!107802 m!121027))

(assert (=> b!107803 m!120923))

(assert (=> b!107803 m!120923))

(declare-fun m!121029 () Bool)

(assert (=> b!107803 m!121029))

(assert (=> b!107804 m!120923))

(assert (=> b!107804 m!120923))

(declare-fun m!121031 () Bool)

(assert (=> b!107804 m!121031))

(assert (=> bm!11405 m!121027))

(assert (=> b!107810 m!120923))

(assert (=> b!107810 m!120923))

(assert (=> b!107810 m!121031))

(declare-fun m!121033 () Bool)

(assert (=> b!107809 m!121033))

(declare-fun m!121035 () Bool)

(assert (=> b!107809 m!121035))

(declare-fun m!121037 () Bool)

(assert (=> b!107809 m!121037))

(assert (=> b!107809 m!121033))

(declare-fun m!121039 () Bool)

(assert (=> b!107809 m!121039))

(declare-fun m!121041 () Bool)

(assert (=> b!107809 m!121041))

(assert (=> b!107809 m!120755))

(assert (=> b!107809 m!120923))

(assert (=> b!107809 m!121037))

(assert (=> b!107809 m!120755))

(declare-fun m!121043 () Bool)

(assert (=> b!107809 m!121043))

(declare-fun m!121045 () Bool)

(assert (=> b!107807 m!121045))

(declare-fun m!121047 () Bool)

(assert (=> d!29811 m!121047))

(assert (=> d!29811 m!120789))

(assert (=> b!107805 m!120923))

(declare-fun m!121049 () Bool)

(assert (=> b!107805 m!121049))

(assert (=> b!107805 m!121037))

(assert (=> b!107805 m!120755))

(assert (=> b!107805 m!120923))

(assert (=> b!107805 m!121037))

(assert (=> b!107805 m!120755))

(assert (=> b!107805 m!121043))

(assert (=> b!107478 d!29811))

(declare-fun d!29813 () Bool)

(declare-fun e!70194 () Bool)

(assert (=> d!29813 e!70194))

(declare-fun res!53481 () Bool)

(assert (=> d!29813 (=> (not res!53481) (not e!70194))))

(declare-fun lt!55316 () ListLongMap!1541)

(assert (=> d!29813 (= res!53481 (contains!820 lt!55316 (_1!1199 lt!55093)))))

(declare-fun lt!55315 () List!1604)

(assert (=> d!29813 (= lt!55316 (ListLongMap!1542 lt!55315))))

(declare-fun lt!55313 () Unit!3301)

(declare-fun lt!55314 () Unit!3301)

(assert (=> d!29813 (= lt!55313 lt!55314)))

(assert (=> d!29813 (= (getValueByKey!158 lt!55315 (_1!1199 lt!55093)) (Some!163 (_2!1199 lt!55093)))))

(assert (=> d!29813 (= lt!55314 (lemmaContainsTupThenGetReturnValue!74 lt!55315 (_1!1199 lt!55093) (_2!1199 lt!55093)))))

(assert (=> d!29813 (= lt!55315 (insertStrictlySorted!77 (toList!786 lt!55096) (_1!1199 lt!55093) (_2!1199 lt!55093)))))

(assert (=> d!29813 (= (+!142 lt!55096 lt!55093) lt!55316)))

(declare-fun b!107814 () Bool)

(declare-fun res!53480 () Bool)

(assert (=> b!107814 (=> (not res!53480) (not e!70194))))

(assert (=> b!107814 (= res!53480 (= (getValueByKey!158 (toList!786 lt!55316) (_1!1199 lt!55093)) (Some!163 (_2!1199 lt!55093))))))

(declare-fun b!107815 () Bool)

(assert (=> b!107815 (= e!70194 (contains!823 (toList!786 lt!55316) lt!55093))))

(assert (= (and d!29813 res!53481) b!107814))

(assert (= (and b!107814 res!53480) b!107815))

(declare-fun m!121051 () Bool)

(assert (=> d!29813 m!121051))

(declare-fun m!121053 () Bool)

(assert (=> d!29813 m!121053))

(declare-fun m!121055 () Bool)

(assert (=> d!29813 m!121055))

(declare-fun m!121057 () Bool)

(assert (=> d!29813 m!121057))

(declare-fun m!121059 () Bool)

(assert (=> b!107814 m!121059))

(declare-fun m!121061 () Bool)

(assert (=> b!107815 m!121061))

(assert (=> b!107478 d!29813))

(declare-fun d!29815 () Bool)

(assert (=> d!29815 (= (validMask!0 (mask!6763 (v!2914 (underlying!367 thiss!992)))) (and (or (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000001111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000011111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000001111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000011111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000001111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000011111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000001111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000011111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000001111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000011111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000111111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000001111111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000011111111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000111111111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000001111111111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000011111111111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000111111111111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000001111111111111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000011111111111111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000111111111111111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00001111111111111111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00011111111111111111111111111111) (= (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!107478 d!29815))

(declare-fun d!29817 () Bool)

(declare-fun e!70195 () Bool)

(assert (=> d!29817 e!70195))

(declare-fun res!53483 () Bool)

(assert (=> d!29817 (=> (not res!53483) (not e!70195))))

(declare-fun lt!55320 () ListLongMap!1541)

(assert (=> d!29817 (= res!53483 (contains!820 lt!55320 (_1!1199 lt!55092)))))

(declare-fun lt!55319 () List!1604)

(assert (=> d!29817 (= lt!55320 (ListLongMap!1542 lt!55319))))

(declare-fun lt!55317 () Unit!3301)

(declare-fun lt!55318 () Unit!3301)

(assert (=> d!29817 (= lt!55317 lt!55318)))

(assert (=> d!29817 (= (getValueByKey!158 lt!55319 (_1!1199 lt!55092)) (Some!163 (_2!1199 lt!55092)))))

(assert (=> d!29817 (= lt!55318 (lemmaContainsTupThenGetReturnValue!74 lt!55319 (_1!1199 lt!55092) (_2!1199 lt!55092)))))

(assert (=> d!29817 (= lt!55319 (insertStrictlySorted!77 (toList!786 (+!142 lt!55096 lt!55093)) (_1!1199 lt!55092) (_2!1199 lt!55092)))))

(assert (=> d!29817 (= (+!142 (+!142 lt!55096 lt!55093) lt!55092) lt!55320)))

(declare-fun b!107816 () Bool)

(declare-fun res!53482 () Bool)

(assert (=> b!107816 (=> (not res!53482) (not e!70195))))

(assert (=> b!107816 (= res!53482 (= (getValueByKey!158 (toList!786 lt!55320) (_1!1199 lt!55092)) (Some!163 (_2!1199 lt!55092))))))

(declare-fun b!107817 () Bool)

(assert (=> b!107817 (= e!70195 (contains!823 (toList!786 lt!55320) lt!55092))))

(assert (= (and d!29817 res!53483) b!107816))

(assert (= (and b!107816 res!53482) b!107817))

(declare-fun m!121063 () Bool)

(assert (=> d!29817 m!121063))

(declare-fun m!121065 () Bool)

(assert (=> d!29817 m!121065))

(declare-fun m!121067 () Bool)

(assert (=> d!29817 m!121067))

(declare-fun m!121069 () Bool)

(assert (=> d!29817 m!121069))

(declare-fun m!121071 () Bool)

(assert (=> b!107816 m!121071))

(declare-fun m!121073 () Bool)

(assert (=> b!107817 m!121073))

(assert (=> b!107478 d!29817))

(declare-fun d!29819 () Bool)

(declare-fun e!70196 () Bool)

(assert (=> d!29819 e!70196))

(declare-fun res!53485 () Bool)

(assert (=> d!29819 (=> (not res!53485) (not e!70196))))

(declare-fun lt!55324 () ListLongMap!1541)

(assert (=> d!29819 (= res!53485 (contains!820 lt!55324 (_1!1199 lt!55093)))))

(declare-fun lt!55323 () List!1604)

(assert (=> d!29819 (= lt!55324 (ListLongMap!1542 lt!55323))))

(declare-fun lt!55321 () Unit!3301)

(declare-fun lt!55322 () Unit!3301)

(assert (=> d!29819 (= lt!55321 lt!55322)))

(assert (=> d!29819 (= (getValueByKey!158 lt!55323 (_1!1199 lt!55093)) (Some!163 (_2!1199 lt!55093)))))

(assert (=> d!29819 (= lt!55322 (lemmaContainsTupThenGetReturnValue!74 lt!55323 (_1!1199 lt!55093) (_2!1199 lt!55093)))))

(assert (=> d!29819 (= lt!55323 (insertStrictlySorted!77 (toList!786 (+!142 lt!55096 lt!55092)) (_1!1199 lt!55093) (_2!1199 lt!55093)))))

(assert (=> d!29819 (= (+!142 (+!142 lt!55096 lt!55092) lt!55093) lt!55324)))

(declare-fun b!107818 () Bool)

(declare-fun res!53484 () Bool)

(assert (=> b!107818 (=> (not res!53484) (not e!70196))))

(assert (=> b!107818 (= res!53484 (= (getValueByKey!158 (toList!786 lt!55324) (_1!1199 lt!55093)) (Some!163 (_2!1199 lt!55093))))))

(declare-fun b!107819 () Bool)

(assert (=> b!107819 (= e!70196 (contains!823 (toList!786 lt!55324) lt!55093))))

(assert (= (and d!29819 res!53485) b!107818))

(assert (= (and b!107818 res!53484) b!107819))

(declare-fun m!121075 () Bool)

(assert (=> d!29819 m!121075))

(declare-fun m!121077 () Bool)

(assert (=> d!29819 m!121077))

(declare-fun m!121079 () Bool)

(assert (=> d!29819 m!121079))

(declare-fun m!121081 () Bool)

(assert (=> d!29819 m!121081))

(declare-fun m!121083 () Bool)

(assert (=> b!107818 m!121083))

(declare-fun m!121085 () Bool)

(assert (=> b!107819 m!121085))

(assert (=> b!107478 d!29819))

(declare-fun d!29821 () Bool)

(assert (=> d!29821 (= (map!1290 newMap!16) (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun bs!4433 () Bool)

(assert (= bs!4433 d!29821))

(assert (=> bs!4433 m!120987))

(assert (=> b!107481 d!29821))

(declare-fun bm!11420 () Bool)

(declare-fun call!11428 () ListLongMap!1541)

(declare-fun call!11423 () ListLongMap!1541)

(assert (=> bm!11420 (= call!11428 call!11423)))

(declare-fun b!107862 () Bool)

(declare-fun e!70224 () ListLongMap!1541)

(declare-fun e!70234 () ListLongMap!1541)

(assert (=> b!107862 (= e!70224 e!70234)))

(declare-fun c!18919 () Bool)

(assert (=> b!107862 (= c!18919 (and (not (= (bvand (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11421 () Bool)

(declare-fun call!11425 () ListLongMap!1541)

(declare-fun call!11429 () ListLongMap!1541)

(assert (=> bm!11421 (= call!11425 call!11429)))

(declare-fun b!107863 () Bool)

(declare-fun e!70225 () Bool)

(declare-fun e!70233 () Bool)

(assert (=> b!107863 (= e!70225 e!70233)))

(declare-fun res!53511 () Bool)

(declare-fun call!11427 () Bool)

(assert (=> b!107863 (= res!53511 call!11427)))

(assert (=> b!107863 (=> (not res!53511) (not e!70233))))

(declare-fun bm!11422 () Bool)

(declare-fun call!11426 () Bool)

(declare-fun lt!55384 () ListLongMap!1541)

(assert (=> bm!11422 (= call!11426 (contains!820 lt!55384 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107864 () Bool)

(declare-fun e!70223 () Bool)

(declare-fun e!70226 () Bool)

(assert (=> b!107864 (= e!70223 e!70226)))

(declare-fun res!53512 () Bool)

(assert (=> b!107864 (=> (not res!53512) (not e!70226))))

(assert (=> b!107864 (= res!53512 (contains!820 lt!55384 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107864 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!107865 () Bool)

(declare-fun res!53508 () Bool)

(declare-fun e!70235 () Bool)

(assert (=> b!107865 (=> (not res!53508) (not e!70235))))

(assert (=> b!107865 (= res!53508 e!70225)))

(declare-fun c!18918 () Bool)

(assert (=> b!107865 (= c!18918 (not (= (bvand (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11423 () Bool)

(declare-fun call!11424 () ListLongMap!1541)

(assert (=> bm!11423 (= call!11424 call!11425)))

(declare-fun b!107866 () Bool)

(declare-fun e!70231 () Bool)

(assert (=> b!107866 (= e!70231 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!107867 () Bool)

(assert (=> b!107867 (= e!70234 call!11428)))

(declare-fun b!107868 () Bool)

(declare-fun e!70227 () Bool)

(assert (=> b!107868 (= e!70235 e!70227)))

(declare-fun c!18920 () Bool)

(assert (=> b!107868 (= c!18920 (not (= (bvand (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11424 () Bool)

(assert (=> bm!11424 (= call!11429 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!107869 () Bool)

(declare-fun e!70229 () ListLongMap!1541)

(assert (=> b!107869 (= e!70229 call!11428)))

(declare-fun b!107870 () Bool)

(declare-fun e!70228 () Unit!3301)

(declare-fun Unit!3315 () Unit!3301)

(assert (=> b!107870 (= e!70228 Unit!3315)))

(declare-fun b!107871 () Bool)

(declare-fun e!70230 () Bool)

(assert (=> b!107871 (= e!70230 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!107872 () Bool)

(declare-fun res!53510 () Bool)

(assert (=> b!107872 (=> (not res!53510) (not e!70235))))

(assert (=> b!107872 (= res!53510 e!70223)))

(declare-fun res!53505 () Bool)

(assert (=> b!107872 (=> res!53505 e!70223)))

(assert (=> b!107872 (= res!53505 (not e!70231))))

(declare-fun res!53509 () Bool)

(assert (=> b!107872 (=> (not res!53509) (not e!70231))))

(assert (=> b!107872 (= res!53509 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!107873 () Bool)

(declare-fun e!70232 () Bool)

(assert (=> b!107873 (= e!70227 e!70232)))

(declare-fun res!53504 () Bool)

(assert (=> b!107873 (= res!53504 call!11426)))

(assert (=> b!107873 (=> (not res!53504) (not e!70232))))

(declare-fun b!107874 () Bool)

(declare-fun lt!55374 () Unit!3301)

(assert (=> b!107874 (= e!70228 lt!55374)))

(declare-fun lt!55375 () ListLongMap!1541)

(assert (=> b!107874 (= lt!55375 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun lt!55379 () (_ BitVec 64))

(assert (=> b!107874 (= lt!55379 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55377 () (_ BitVec 64))

(assert (=> b!107874 (= lt!55377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55380 () Unit!3301)

(declare-fun addStillContains!75 (ListLongMap!1541 (_ BitVec 64) V!3233 (_ BitVec 64)) Unit!3301)

(assert (=> b!107874 (= lt!55380 (addStillContains!75 lt!55375 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55377))))

(assert (=> b!107874 (contains!820 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55377)))

(declare-fun lt!55387 () Unit!3301)

(assert (=> b!107874 (= lt!55387 lt!55380)))

(declare-fun lt!55373 () ListLongMap!1541)

(assert (=> b!107874 (= lt!55373 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun lt!55378 () (_ BitVec 64))

(assert (=> b!107874 (= lt!55378 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55381 () (_ BitVec 64))

(assert (=> b!107874 (= lt!55381 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55383 () Unit!3301)

(declare-fun addApplyDifferent!75 (ListLongMap!1541 (_ BitVec 64) V!3233 (_ BitVec 64)) Unit!3301)

(assert (=> b!107874 (= lt!55383 (addApplyDifferent!75 lt!55373 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55381))))

(assert (=> b!107874 (= (apply!99 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55381) (apply!99 lt!55373 lt!55381))))

(declare-fun lt!55376 () Unit!3301)

(assert (=> b!107874 (= lt!55376 lt!55383)))

(declare-fun lt!55371 () ListLongMap!1541)

(assert (=> b!107874 (= lt!55371 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun lt!55390 () (_ BitVec 64))

(assert (=> b!107874 (= lt!55390 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55385 () (_ BitVec 64))

(assert (=> b!107874 (= lt!55385 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55389 () Unit!3301)

(assert (=> b!107874 (= lt!55389 (addApplyDifferent!75 lt!55371 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55385))))

(assert (=> b!107874 (= (apply!99 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55385) (apply!99 lt!55371 lt!55385))))

(declare-fun lt!55382 () Unit!3301)

(assert (=> b!107874 (= lt!55382 lt!55389)))

(declare-fun lt!55369 () ListLongMap!1541)

(assert (=> b!107874 (= lt!55369 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun lt!55370 () (_ BitVec 64))

(assert (=> b!107874 (= lt!55370 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55372 () (_ BitVec 64))

(assert (=> b!107874 (= lt!55372 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!107874 (= lt!55374 (addApplyDifferent!75 lt!55369 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55372))))

(assert (=> b!107874 (= (apply!99 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55372) (apply!99 lt!55369 lt!55372))))

(declare-fun c!18922 () Bool)

(declare-fun bm!11425 () Bool)

(assert (=> bm!11425 (= call!11423 (+!142 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424)) (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun bm!11426 () Bool)

(assert (=> bm!11426 (= call!11427 (contains!820 lt!55384 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107875 () Bool)

(assert (=> b!107875 (= e!70232 (= (apply!99 lt!55384 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!107876 () Bool)

(assert (=> b!107876 (= e!70229 call!11424)))

(declare-fun b!107877 () Bool)

(declare-fun c!18923 () Bool)

(assert (=> b!107877 (= c!18923 (and (not (= (bvand (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!107877 (= e!70234 e!70229)))

(declare-fun b!107878 () Bool)

(assert (=> b!107878 (= e!70233 (= (apply!99 lt!55384 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!107879 () Bool)

(assert (=> b!107879 (= e!70227 (not call!11426))))

(declare-fun b!107880 () Bool)

(assert (=> b!107880 (= e!70224 (+!142 call!11423 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!107881 () Bool)

(assert (=> b!107881 (= e!70226 (= (apply!99 lt!55384 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107881 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2323 (_values!2588 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> b!107881 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!107882 () Bool)

(assert (=> b!107882 (= e!70225 (not call!11427))))

(declare-fun d!29823 () Bool)

(assert (=> d!29823 e!70235))

(declare-fun res!53506 () Bool)

(assert (=> d!29823 (=> (not res!53506) (not e!70235))))

(assert (=> d!29823 (= res!53506 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun lt!55386 () ListLongMap!1541)

(assert (=> d!29823 (= lt!55384 lt!55386)))

(declare-fun lt!55388 () Unit!3301)

(assert (=> d!29823 (= lt!55388 e!70228)))

(declare-fun c!18921 () Bool)

(assert (=> d!29823 (= c!18921 e!70230)))

(declare-fun res!53507 () Bool)

(assert (=> d!29823 (=> (not res!53507) (not e!70230))))

(assert (=> d!29823 (= res!53507 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!29823 (= lt!55386 e!70224)))

(assert (=> d!29823 (= c!18922 (and (not (= (bvand (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29823 (validMask!0 (mask!6763 (v!2914 (underlying!367 thiss!992))))))

(assert (=> d!29823 (= (getCurrentListMap!472 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))) lt!55384)))

(assert (= (and d!29823 c!18922) b!107880))

(assert (= (and d!29823 (not c!18922)) b!107862))

(assert (= (and b!107862 c!18919) b!107867))

(assert (= (and b!107862 (not c!18919)) b!107877))

(assert (= (and b!107877 c!18923) b!107869))

(assert (= (and b!107877 (not c!18923)) b!107876))

(assert (= (or b!107869 b!107876) bm!11423))

(assert (= (or b!107867 bm!11423) bm!11421))

(assert (= (or b!107867 b!107869) bm!11420))

(assert (= (or b!107880 bm!11421) bm!11424))

(assert (= (or b!107880 bm!11420) bm!11425))

(assert (= (and d!29823 res!53507) b!107871))

(assert (= (and d!29823 c!18921) b!107874))

(assert (= (and d!29823 (not c!18921)) b!107870))

(assert (= (and d!29823 res!53506) b!107872))

(assert (= (and b!107872 res!53509) b!107866))

(assert (= (and b!107872 (not res!53505)) b!107864))

(assert (= (and b!107864 res!53512) b!107881))

(assert (= (and b!107872 res!53510) b!107865))

(assert (= (and b!107865 c!18918) b!107863))

(assert (= (and b!107865 (not c!18918)) b!107882))

(assert (= (and b!107863 res!53511) b!107878))

(assert (= (or b!107863 b!107882) bm!11426))

(assert (= (and b!107865 res!53508) b!107868))

(assert (= (and b!107868 c!18920) b!107873))

(assert (= (and b!107868 (not c!18920)) b!107879))

(assert (= (and b!107873 res!53504) b!107875))

(assert (= (or b!107873 b!107879) bm!11422))

(declare-fun b_lambda!4827 () Bool)

(assert (=> (not b_lambda!4827) (not b!107881)))

(assert (=> b!107881 t!5709))

(declare-fun b_and!6661 () Bool)

(assert (= b_and!6657 (and (=> t!5709 result!3485) b_and!6661)))

(assert (=> b!107881 t!5711))

(declare-fun b_and!6663 () Bool)

(assert (= b_and!6659 (and (=> t!5711 result!3489) b_and!6663)))

(declare-fun m!121087 () Bool)

(assert (=> b!107878 m!121087))

(declare-fun m!121089 () Bool)

(assert (=> b!107880 m!121089))

(declare-fun m!121091 () Bool)

(assert (=> bm!11422 m!121091))

(assert (=> b!107864 m!120923))

(assert (=> b!107864 m!120923))

(declare-fun m!121093 () Bool)

(assert (=> b!107864 m!121093))

(declare-fun m!121095 () Bool)

(assert (=> bm!11426 m!121095))

(assert (=> b!107866 m!120923))

(assert (=> b!107866 m!120923))

(assert (=> b!107866 m!121031))

(declare-fun m!121097 () Bool)

(assert (=> b!107875 m!121097))

(assert (=> d!29823 m!120789))

(declare-fun m!121099 () Bool)

(assert (=> b!107874 m!121099))

(declare-fun m!121101 () Bool)

(assert (=> b!107874 m!121101))

(assert (=> b!107874 m!120799))

(assert (=> b!107874 m!120923))

(declare-fun m!121103 () Bool)

(assert (=> b!107874 m!121103))

(declare-fun m!121105 () Bool)

(assert (=> b!107874 m!121105))

(declare-fun m!121107 () Bool)

(assert (=> b!107874 m!121107))

(declare-fun m!121109 () Bool)

(assert (=> b!107874 m!121109))

(declare-fun m!121111 () Bool)

(assert (=> b!107874 m!121111))

(declare-fun m!121113 () Bool)

(assert (=> b!107874 m!121113))

(declare-fun m!121115 () Bool)

(assert (=> b!107874 m!121115))

(declare-fun m!121117 () Bool)

(assert (=> b!107874 m!121117))

(declare-fun m!121119 () Bool)

(assert (=> b!107874 m!121119))

(declare-fun m!121121 () Bool)

(assert (=> b!107874 m!121121))

(assert (=> b!107874 m!121115))

(declare-fun m!121123 () Bool)

(assert (=> b!107874 m!121123))

(declare-fun m!121125 () Bool)

(assert (=> b!107874 m!121125))

(assert (=> b!107874 m!121119))

(declare-fun m!121127 () Bool)

(assert (=> b!107874 m!121127))

(assert (=> b!107874 m!121123))

(assert (=> b!107874 m!121103))

(declare-fun m!121129 () Bool)

(assert (=> bm!11425 m!121129))

(assert (=> bm!11424 m!120799))

(assert (=> b!107871 m!120923))

(assert (=> b!107871 m!120923))

(assert (=> b!107871 m!121031))

(assert (=> b!107881 m!121037))

(assert (=> b!107881 m!121037))

(assert (=> b!107881 m!120755))

(assert (=> b!107881 m!121043))

(assert (=> b!107881 m!120923))

(declare-fun m!121131 () Bool)

(assert (=> b!107881 m!121131))

(assert (=> b!107881 m!120923))

(assert (=> b!107881 m!120755))

(assert (=> b!107481 d!29823))

(declare-fun d!29825 () Bool)

(assert (=> d!29825 (= (array_inv!1277 (_keys!4315 newMap!16)) (bvsge (size!2322 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!107471 d!29825))

(declare-fun d!29827 () Bool)

(assert (=> d!29827 (= (array_inv!1278 (_values!2588 newMap!16)) (bvsge (size!2323 (_values!2588 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!107471 d!29827))

(declare-fun d!29829 () Bool)

(assert (=> d!29829 (= (valid!429 thiss!992) (valid!430 (v!2914 (underlying!367 thiss!992))))))

(declare-fun bs!4434 () Bool)

(assert (= bs!4434 d!29829))

(declare-fun m!121133 () Bool)

(assert (=> bs!4434 m!121133))

(assert (=> start!12522 d!29829))

(declare-fun d!29831 () Bool)

(declare-fun res!53519 () Bool)

(declare-fun e!70238 () Bool)

(assert (=> d!29831 (=> (not res!53519) (not e!70238))))

(declare-fun simpleValid!75 (LongMapFixedSize!910) Bool)

(assert (=> d!29831 (= res!53519 (simpleValid!75 newMap!16))))

(assert (=> d!29831 (= (valid!430 newMap!16) e!70238)))

(declare-fun b!107889 () Bool)

(declare-fun res!53520 () Bool)

(assert (=> b!107889 (=> (not res!53520) (not e!70238))))

(declare-fun arrayCountValidKeys!0 (array!4357 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!107889 (= res!53520 (= (arrayCountValidKeys!0 (_keys!4315 newMap!16) #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) (_size!504 newMap!16)))))

(declare-fun b!107890 () Bool)

(declare-fun res!53521 () Bool)

(assert (=> b!107890 (=> (not res!53521) (not e!70238))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4357 (_ BitVec 32)) Bool)

(assert (=> b!107890 (= res!53521 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(declare-fun b!107891 () Bool)

(assert (=> b!107891 (= e!70238 (arrayNoDuplicates!0 (_keys!4315 newMap!16) #b00000000000000000000000000000000 Nil!1602))))

(assert (= (and d!29831 res!53519) b!107889))

(assert (= (and b!107889 res!53520) b!107890))

(assert (= (and b!107890 res!53521) b!107891))

(declare-fun m!121135 () Bool)

(assert (=> d!29831 m!121135))

(declare-fun m!121137 () Bool)

(assert (=> b!107889 m!121137))

(declare-fun m!121139 () Bool)

(assert (=> b!107890 m!121139))

(declare-fun m!121141 () Bool)

(assert (=> b!107891 m!121141))

(assert (=> b!107470 d!29831))

(declare-fun d!29833 () Bool)

(assert (=> d!29833 (= (array_inv!1277 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvsge (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!107466 d!29833))

(declare-fun d!29835 () Bool)

(assert (=> d!29835 (= (array_inv!1278 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvsge (size!2323 (_values!2588 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!107466 d!29835))

(declare-fun condMapEmpty!3983 () Bool)

(declare-fun mapDefault!3983 () ValueCell!1001)

(assert (=> mapNonEmpty!3967 (= condMapEmpty!3983 (= mapRest!3967 ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3983)))))

(declare-fun e!70244 () Bool)

(declare-fun mapRes!3983 () Bool)

(assert (=> mapNonEmpty!3967 (= tp!9965 (and e!70244 mapRes!3983))))

(declare-fun b!107899 () Bool)

(assert (=> b!107899 (= e!70244 tp_is_empty!2689)))

(declare-fun b!107898 () Bool)

(declare-fun e!70243 () Bool)

(assert (=> b!107898 (= e!70243 tp_is_empty!2689)))

(declare-fun mapIsEmpty!3983 () Bool)

(assert (=> mapIsEmpty!3983 mapRes!3983))

(declare-fun mapNonEmpty!3983 () Bool)

(declare-fun tp!9995 () Bool)

(assert (=> mapNonEmpty!3983 (= mapRes!3983 (and tp!9995 e!70243))))

(declare-fun mapKey!3983 () (_ BitVec 32))

(declare-fun mapRest!3983 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapValue!3983 () ValueCell!1001)

(assert (=> mapNonEmpty!3983 (= mapRest!3967 (store mapRest!3983 mapKey!3983 mapValue!3983))))

(assert (= (and mapNonEmpty!3967 condMapEmpty!3983) mapIsEmpty!3983))

(assert (= (and mapNonEmpty!3967 (not condMapEmpty!3983)) mapNonEmpty!3983))

(assert (= (and mapNonEmpty!3983 ((_ is ValueCellFull!1001) mapValue!3983)) b!107898))

(assert (= (and mapNonEmpty!3967 ((_ is ValueCellFull!1001) mapDefault!3983)) b!107899))

(declare-fun m!121143 () Bool)

(assert (=> mapNonEmpty!3983 m!121143))

(declare-fun condMapEmpty!3984 () Bool)

(declare-fun mapDefault!3984 () ValueCell!1001)

(assert (=> mapNonEmpty!3968 (= condMapEmpty!3984 (= mapRest!3968 ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3984)))))

(declare-fun e!70246 () Bool)

(declare-fun mapRes!3984 () Bool)

(assert (=> mapNonEmpty!3968 (= tp!9966 (and e!70246 mapRes!3984))))

(declare-fun b!107901 () Bool)

(assert (=> b!107901 (= e!70246 tp_is_empty!2689)))

(declare-fun b!107900 () Bool)

(declare-fun e!70245 () Bool)

(assert (=> b!107900 (= e!70245 tp_is_empty!2689)))

(declare-fun mapIsEmpty!3984 () Bool)

(assert (=> mapIsEmpty!3984 mapRes!3984))

(declare-fun mapNonEmpty!3984 () Bool)

(declare-fun tp!9996 () Bool)

(assert (=> mapNonEmpty!3984 (= mapRes!3984 (and tp!9996 e!70245))))

(declare-fun mapRest!3984 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapKey!3984 () (_ BitVec 32))

(declare-fun mapValue!3984 () ValueCell!1001)

(assert (=> mapNonEmpty!3984 (= mapRest!3968 (store mapRest!3984 mapKey!3984 mapValue!3984))))

(assert (= (and mapNonEmpty!3968 condMapEmpty!3984) mapIsEmpty!3984))

(assert (= (and mapNonEmpty!3968 (not condMapEmpty!3984)) mapNonEmpty!3984))

(assert (= (and mapNonEmpty!3984 ((_ is ValueCellFull!1001) mapValue!3984)) b!107900))

(assert (= (and mapNonEmpty!3968 ((_ is ValueCellFull!1001) mapDefault!3984)) b!107901))

(declare-fun m!121145 () Bool)

(assert (=> mapNonEmpty!3984 m!121145))

(declare-fun b_lambda!4829 () Bool)

(assert (= b_lambda!4827 (or (and b!107466 b_free!2545) (and b!107471 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))))) b_lambda!4829)))

(declare-fun b_lambda!4831 () Bool)

(assert (= b_lambda!4823 (or (and b!107466 b_free!2545) (and b!107471 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))))) b_lambda!4831)))

(declare-fun b_lambda!4833 () Bool)

(assert (= b_lambda!4825 (or (and b!107466 b_free!2545) (and b!107471 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))))) b_lambda!4833)))

(check-sat (not b_lambda!4833) (not b!107874) (not b!107733) (not b!107818) (not b!107881) (not b!107809) (not d!29791) (not b_next!2545) (not b!107807) (not d!29819) (not b!107878) (not b!107651) (not d!29831) (not d!29807) (not b!107810) (not b!107889) (not bm!11386) (not b!107880) (not b!107777) (not d!29797) (not d!29811) (not b!107817) (not bm!11426) (not b_lambda!4821) (not bm!11330) (not bm!11399) (not b!107891) (not bm!11393) (not d!29817) (not bm!11402) (not b!107739) (not d!29803) (not b!107649) (not b!107815) (not bm!11381) (not b!107813) (not mapNonEmpty!3983) (not bm!11388) (not b!107819) (not b!107805) (not b!107753) (not d!29805) (not b!107776) (not b!107641) (not b!107864) (not bm!11401) (not b!107814) (not d!29809) (not bm!11383) (not bm!11405) (not b_lambda!4829) (not d!29793) (not d!29823) (not b!107866) (not b!107633) (not b!107803) (not b!107746) (not b!107804) (not b!107871) (not b!107802) (not b!107620) (not b_next!2547) (not bm!11422) (not b_lambda!4831) (not bm!11394) (not d!29829) (not b!107742) (not b!107890) (not b!107875) (not b!107632) (not b!107642) (not bm!11425) (not bm!11424) tp_is_empty!2689 b_and!6663 (not bm!11390) (not bm!11398) b_and!6661 (not mapNonEmpty!3984) (not b!107735) (not b!107635) (not b!107757) (not bm!11392) (not b!107615) (not d!29813) (not d!29821) (not b!107816))
(check-sat b_and!6661 b_and!6663 (not b_next!2545) (not b_next!2547))
(get-model)

(declare-fun d!29837 () Bool)

(declare-fun get!1350 (Option!164) V!3233)

(assert (=> d!29837 (= (apply!99 lt!55384 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4435 () Bool)

(assert (= bs!4435 d!29837))

(declare-fun m!121147 () Bool)

(assert (=> bs!4435 m!121147))

(assert (=> bs!4435 m!121147))

(declare-fun m!121149 () Bool)

(assert (=> bs!4435 m!121149))

(assert (=> b!107878 d!29837))

(declare-fun d!29839 () Bool)

(assert (=> d!29839 (= (get!1349 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107642 d!29839))

(declare-fun d!29841 () Bool)

(declare-fun e!70247 () Bool)

(assert (=> d!29841 e!70247))

(declare-fun res!53523 () Bool)

(assert (=> d!29841 (=> (not res!53523) (not e!70247))))

(declare-fun lt!55394 () ListLongMap!1541)

(assert (=> d!29841 (= res!53523 (contains!820 lt!55394 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55393 () List!1604)

(assert (=> d!29841 (= lt!55394 (ListLongMap!1542 lt!55393))))

(declare-fun lt!55391 () Unit!3301)

(declare-fun lt!55392 () Unit!3301)

(assert (=> d!29841 (= lt!55391 lt!55392)))

(assert (=> d!29841 (= (getValueByKey!158 lt!55393 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29841 (= lt!55392 (lemmaContainsTupThenGetReturnValue!74 lt!55393 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29841 (= lt!55393 (insertStrictlySorted!77 (toList!786 call!11423) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29841 (= (+!142 call!11423 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55394)))

(declare-fun b!107902 () Bool)

(declare-fun res!53522 () Bool)

(assert (=> b!107902 (=> (not res!53522) (not e!70247))))

(assert (=> b!107902 (= res!53522 (= (getValueByKey!158 (toList!786 lt!55394) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!107903 () Bool)

(assert (=> b!107903 (= e!70247 (contains!823 (toList!786 lt!55394) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29841 res!53523) b!107902))

(assert (= (and b!107902 res!53522) b!107903))

(declare-fun m!121151 () Bool)

(assert (=> d!29841 m!121151))

(declare-fun m!121153 () Bool)

(assert (=> d!29841 m!121153))

(declare-fun m!121155 () Bool)

(assert (=> d!29841 m!121155))

(declare-fun m!121157 () Bool)

(assert (=> d!29841 m!121157))

(declare-fun m!121159 () Bool)

(assert (=> b!107902 m!121159))

(declare-fun m!121161 () Bool)

(assert (=> b!107903 m!121161))

(assert (=> b!107880 d!29841))

(declare-fun bm!11427 () Bool)

(declare-fun call!11435 () ListLongMap!1541)

(declare-fun call!11430 () ListLongMap!1541)

(assert (=> bm!11427 (= call!11435 call!11430)))

(declare-fun b!107904 () Bool)

(declare-fun e!70249 () ListLongMap!1541)

(declare-fun e!70259 () ListLongMap!1541)

(assert (=> b!107904 (= e!70249 e!70259)))

(declare-fun c!18925 () Bool)

(assert (=> b!107904 (= c!18925 (and (not (= (bvand (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11428 () Bool)

(declare-fun call!11432 () ListLongMap!1541)

(declare-fun call!11436 () ListLongMap!1541)

(assert (=> bm!11428 (= call!11432 call!11436)))

(declare-fun b!107905 () Bool)

(declare-fun e!70250 () Bool)

(declare-fun e!70258 () Bool)

(assert (=> b!107905 (= e!70250 e!70258)))

(declare-fun res!53531 () Bool)

(declare-fun call!11434 () Bool)

(assert (=> b!107905 (= res!53531 call!11434)))

(assert (=> b!107905 (=> (not res!53531) (not e!70258))))

(declare-fun bm!11429 () Bool)

(declare-fun call!11433 () Bool)

(declare-fun lt!55410 () ListLongMap!1541)

(assert (=> bm!11429 (= call!11433 (contains!820 lt!55410 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107906 () Bool)

(declare-fun e!70248 () Bool)

(declare-fun e!70251 () Bool)

(assert (=> b!107906 (= e!70248 e!70251)))

(declare-fun res!53532 () Bool)

(assert (=> b!107906 (=> (not res!53532) (not e!70251))))

(assert (=> b!107906 (= res!53532 (contains!820 lt!55410 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!107906 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!107907 () Bool)

(declare-fun res!53528 () Bool)

(declare-fun e!70260 () Bool)

(assert (=> b!107907 (=> (not res!53528) (not e!70260))))

(assert (=> b!107907 (= res!53528 e!70250)))

(declare-fun c!18924 () Bool)

(assert (=> b!107907 (= c!18924 (not (= (bvand (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11430 () Bool)

(declare-fun call!11431 () ListLongMap!1541)

(assert (=> bm!11430 (= call!11431 call!11432)))

(declare-fun b!107908 () Bool)

(declare-fun e!70256 () Bool)

(assert (=> b!107908 (= e!70256 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!107909 () Bool)

(assert (=> b!107909 (= e!70259 call!11435)))

(declare-fun b!107910 () Bool)

(declare-fun e!70252 () Bool)

(assert (=> b!107910 (= e!70260 e!70252)))

(declare-fun c!18926 () Bool)

(assert (=> b!107910 (= c!18926 (not (= (bvand (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11431 () Bool)

(assert (=> bm!11431 (= call!11436 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257) (mask!6763 newMap!16) (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!107911 () Bool)

(declare-fun e!70254 () ListLongMap!1541)

(assert (=> b!107911 (= e!70254 call!11435)))

(declare-fun b!107912 () Bool)

(declare-fun e!70253 () Unit!3301)

(declare-fun Unit!3316 () Unit!3301)

(assert (=> b!107912 (= e!70253 Unit!3316)))

(declare-fun b!107913 () Bool)

(declare-fun e!70255 () Bool)

(assert (=> b!107913 (= e!70255 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!107914 () Bool)

(declare-fun res!53530 () Bool)

(assert (=> b!107914 (=> (not res!53530) (not e!70260))))

(assert (=> b!107914 (= res!53530 e!70248)))

(declare-fun res!53525 () Bool)

(assert (=> b!107914 (=> res!53525 e!70248)))

(assert (=> b!107914 (= res!53525 (not e!70256))))

(declare-fun res!53529 () Bool)

(assert (=> b!107914 (=> (not res!53529) (not e!70256))))

(assert (=> b!107914 (= res!53529 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!107915 () Bool)

(declare-fun e!70257 () Bool)

(assert (=> b!107915 (= e!70252 e!70257)))

(declare-fun res!53524 () Bool)

(assert (=> b!107915 (= res!53524 call!11433)))

(assert (=> b!107915 (=> (not res!53524) (not e!70257))))

(declare-fun b!107916 () Bool)

(declare-fun lt!55400 () Unit!3301)

(assert (=> b!107916 (= e!70253 lt!55400)))

(declare-fun lt!55401 () ListLongMap!1541)

(assert (=> b!107916 (= lt!55401 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257) (mask!6763 newMap!16) (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55405 () (_ BitVec 64))

(assert (=> b!107916 (= lt!55405 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55403 () (_ BitVec 64))

(assert (=> b!107916 (= lt!55403 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55406 () Unit!3301)

(assert (=> b!107916 (= lt!55406 (addStillContains!75 lt!55401 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) lt!55403))))

(assert (=> b!107916 (contains!820 (+!142 lt!55401 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))) lt!55403)))

(declare-fun lt!55413 () Unit!3301)

(assert (=> b!107916 (= lt!55413 lt!55406)))

(declare-fun lt!55399 () ListLongMap!1541)

(assert (=> b!107916 (= lt!55399 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257) (mask!6763 newMap!16) (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55404 () (_ BitVec 64))

(assert (=> b!107916 (= lt!55404 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55407 () (_ BitVec 64))

(assert (=> b!107916 (= lt!55407 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55409 () Unit!3301)

(assert (=> b!107916 (= lt!55409 (addApplyDifferent!75 lt!55399 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) lt!55407))))

(assert (=> b!107916 (= (apply!99 (+!142 lt!55399 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) lt!55407) (apply!99 lt!55399 lt!55407))))

(declare-fun lt!55402 () Unit!3301)

(assert (=> b!107916 (= lt!55402 lt!55409)))

(declare-fun lt!55397 () ListLongMap!1541)

(assert (=> b!107916 (= lt!55397 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257) (mask!6763 newMap!16) (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55416 () (_ BitVec 64))

(assert (=> b!107916 (= lt!55416 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55411 () (_ BitVec 64))

(assert (=> b!107916 (= lt!55411 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55415 () Unit!3301)

(assert (=> b!107916 (= lt!55415 (addApplyDifferent!75 lt!55397 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) lt!55411))))

(assert (=> b!107916 (= (apply!99 (+!142 lt!55397 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))) lt!55411) (apply!99 lt!55397 lt!55411))))

(declare-fun lt!55408 () Unit!3301)

(assert (=> b!107916 (= lt!55408 lt!55415)))

(declare-fun lt!55395 () ListLongMap!1541)

(assert (=> b!107916 (= lt!55395 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257) (mask!6763 newMap!16) (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55396 () (_ BitVec 64))

(assert (=> b!107916 (= lt!55396 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55398 () (_ BitVec 64))

(assert (=> b!107916 (= lt!55398 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!107916 (= lt!55400 (addApplyDifferent!75 lt!55395 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) lt!55398))))

(assert (=> b!107916 (= (apply!99 (+!142 lt!55395 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) lt!55398) (apply!99 lt!55395 lt!55398))))

(declare-fun c!18928 () Bool)

(declare-fun bm!11432 () Bool)

(assert (=> bm!11432 (= call!11430 (+!142 (ite c!18928 call!11436 (ite c!18925 call!11432 call!11431)) (ite (or c!18928 c!18925) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(declare-fun bm!11433 () Bool)

(assert (=> bm!11433 (= call!11434 (contains!820 lt!55410 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107917 () Bool)

(assert (=> b!107917 (= e!70257 (= (apply!99 lt!55410 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))

(declare-fun b!107918 () Bool)

(assert (=> b!107918 (= e!70254 call!11431)))

(declare-fun c!18929 () Bool)

(declare-fun b!107919 () Bool)

(assert (=> b!107919 (= c!18929 (and (not (= (bvand (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!107919 (= e!70259 e!70254)))

(declare-fun b!107920 () Bool)

(assert (=> b!107920 (= e!70258 (= (apply!99 lt!55410 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))))

(declare-fun b!107921 () Bool)

(assert (=> b!107921 (= e!70252 (not call!11433))))

(declare-fun b!107922 () Bool)

(assert (=> b!107922 (= e!70249 (+!142 call!11430 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))))

(declare-fun b!107923 () Bool)

(assert (=> b!107923 (= e!70251 (= (apply!99 lt!55410 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107923 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257))))))

(assert (=> b!107923 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!107924 () Bool)

(assert (=> b!107924 (= e!70250 (not call!11434))))

(declare-fun d!29843 () Bool)

(assert (=> d!29843 e!70260))

(declare-fun res!53526 () Bool)

(assert (=> d!29843 (=> (not res!53526) (not e!70260))))

(assert (=> d!29843 (= res!53526 (or (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))))

(declare-fun lt!55412 () ListLongMap!1541)

(assert (=> d!29843 (= lt!55410 lt!55412)))

(declare-fun lt!55414 () Unit!3301)

(assert (=> d!29843 (= lt!55414 e!70253)))

(declare-fun c!18927 () Bool)

(assert (=> d!29843 (= c!18927 e!70255)))

(declare-fun res!53527 () Bool)

(assert (=> d!29843 (=> (not res!53527) (not e!70255))))

(assert (=> d!29843 (= res!53527 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!29843 (= lt!55412 e!70249)))

(assert (=> d!29843 (= c!18928 (and (not (= (bvand (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29843 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!29843 (= (getCurrentListMap!472 (_keys!4315 newMap!16) (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257) (mask!6763 newMap!16) (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55410)))

(assert (= (and d!29843 c!18928) b!107922))

(assert (= (and d!29843 (not c!18928)) b!107904))

(assert (= (and b!107904 c!18925) b!107909))

(assert (= (and b!107904 (not c!18925)) b!107919))

(assert (= (and b!107919 c!18929) b!107911))

(assert (= (and b!107919 (not c!18929)) b!107918))

(assert (= (or b!107911 b!107918) bm!11430))

(assert (= (or b!107909 bm!11430) bm!11428))

(assert (= (or b!107909 b!107911) bm!11427))

(assert (= (or b!107922 bm!11428) bm!11431))

(assert (= (or b!107922 bm!11427) bm!11432))

(assert (= (and d!29843 res!53527) b!107913))

(assert (= (and d!29843 c!18927) b!107916))

(assert (= (and d!29843 (not c!18927)) b!107912))

(assert (= (and d!29843 res!53526) b!107914))

(assert (= (and b!107914 res!53529) b!107908))

(assert (= (and b!107914 (not res!53525)) b!107906))

(assert (= (and b!107906 res!53532) b!107923))

(assert (= (and b!107914 res!53530) b!107907))

(assert (= (and b!107907 c!18924) b!107905))

(assert (= (and b!107907 (not c!18924)) b!107924))

(assert (= (and b!107905 res!53531) b!107920))

(assert (= (or b!107905 b!107924) bm!11433))

(assert (= (and b!107907 res!53528) b!107910))

(assert (= (and b!107910 c!18926) b!107915))

(assert (= (and b!107910 (not c!18926)) b!107921))

(assert (= (and b!107915 res!53524) b!107917))

(assert (= (or b!107915 b!107921) bm!11429))

(declare-fun b_lambda!4835 () Bool)

(assert (=> (not b_lambda!4835) (not b!107923)))

(declare-fun tb!2085 () Bool)

(declare-fun t!5726 () Bool)

(assert (=> (and b!107466 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16)) t!5726) tb!2085))

(declare-fun result!3505 () Bool)

(assert (=> tb!2085 (= result!3505 tp_is_empty!2689)))

(assert (=> b!107923 t!5726))

(declare-fun b_and!6665 () Bool)

(assert (= b_and!6661 (and (=> t!5726 result!3505) b_and!6665)))

(declare-fun t!5728 () Bool)

(declare-fun tb!2087 () Bool)

(assert (=> (and b!107471 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 newMap!16)) t!5728) tb!2087))

(declare-fun result!3507 () Bool)

(assert (= result!3507 result!3505))

(assert (=> b!107923 t!5728))

(declare-fun b_and!6667 () Bool)

(assert (= b_and!6663 (and (=> t!5728 result!3507) b_and!6667)))

(declare-fun m!121163 () Bool)

(assert (=> b!107920 m!121163))

(declare-fun m!121165 () Bool)

(assert (=> b!107922 m!121165))

(declare-fun m!121167 () Bool)

(assert (=> bm!11429 m!121167))

(declare-fun m!121169 () Bool)

(assert (=> b!107906 m!121169))

(assert (=> b!107906 m!121169))

(declare-fun m!121171 () Bool)

(assert (=> b!107906 m!121171))

(declare-fun m!121173 () Bool)

(assert (=> bm!11433 m!121173))

(assert (=> b!107908 m!121169))

(assert (=> b!107908 m!121169))

(declare-fun m!121175 () Bool)

(assert (=> b!107908 m!121175))

(declare-fun m!121177 () Bool)

(assert (=> b!107917 m!121177))

(declare-fun m!121179 () Bool)

(assert (=> d!29843 m!121179))

(declare-fun m!121181 () Bool)

(assert (=> b!107916 m!121181))

(declare-fun m!121183 () Bool)

(assert (=> b!107916 m!121183))

(declare-fun m!121185 () Bool)

(assert (=> b!107916 m!121185))

(assert (=> b!107916 m!121169))

(declare-fun m!121187 () Bool)

(assert (=> b!107916 m!121187))

(declare-fun m!121189 () Bool)

(assert (=> b!107916 m!121189))

(declare-fun m!121191 () Bool)

(assert (=> b!107916 m!121191))

(declare-fun m!121193 () Bool)

(assert (=> b!107916 m!121193))

(declare-fun m!121195 () Bool)

(assert (=> b!107916 m!121195))

(declare-fun m!121197 () Bool)

(assert (=> b!107916 m!121197))

(declare-fun m!121199 () Bool)

(assert (=> b!107916 m!121199))

(declare-fun m!121201 () Bool)

(assert (=> b!107916 m!121201))

(declare-fun m!121203 () Bool)

(assert (=> b!107916 m!121203))

(declare-fun m!121205 () Bool)

(assert (=> b!107916 m!121205))

(assert (=> b!107916 m!121199))

(declare-fun m!121207 () Bool)

(assert (=> b!107916 m!121207))

(declare-fun m!121209 () Bool)

(assert (=> b!107916 m!121209))

(assert (=> b!107916 m!121203))

(declare-fun m!121211 () Bool)

(assert (=> b!107916 m!121211))

(assert (=> b!107916 m!121207))

(assert (=> b!107916 m!121187))

(declare-fun m!121213 () Bool)

(assert (=> bm!11432 m!121213))

(assert (=> bm!11431 m!121185))

(assert (=> b!107913 m!121169))

(assert (=> b!107913 m!121169))

(assert (=> b!107913 m!121175))

(declare-fun m!121215 () Bool)

(assert (=> b!107923 m!121215))

(assert (=> b!107923 m!121215))

(declare-fun m!121217 () Bool)

(assert (=> b!107923 m!121217))

(declare-fun m!121219 () Bool)

(assert (=> b!107923 m!121219))

(assert (=> b!107923 m!121169))

(declare-fun m!121221 () Bool)

(assert (=> b!107923 m!121221))

(assert (=> b!107923 m!121169))

(assert (=> b!107923 m!121217))

(assert (=> bm!11398 d!29843))

(declare-fun d!29845 () Bool)

(declare-fun e!70261 () Bool)

(assert (=> d!29845 e!70261))

(declare-fun res!53533 () Bool)

(assert (=> d!29845 (=> res!53533 e!70261)))

(declare-fun lt!55417 () Bool)

(assert (=> d!29845 (= res!53533 (not lt!55417))))

(declare-fun lt!55420 () Bool)

(assert (=> d!29845 (= lt!55417 lt!55420)))

(declare-fun lt!55419 () Unit!3301)

(declare-fun e!70262 () Unit!3301)

(assert (=> d!29845 (= lt!55419 e!70262)))

(declare-fun c!18930 () Bool)

(assert (=> d!29845 (= c!18930 lt!55420)))

(assert (=> d!29845 (= lt!55420 (containsKey!161 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29845 (= (contains!820 lt!55384 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55417)))

(declare-fun b!107925 () Bool)

(declare-fun lt!55418 () Unit!3301)

(assert (=> b!107925 (= e!70262 lt!55418)))

(assert (=> b!107925 (= lt!55418 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107925 (isDefined!110 (getValueByKey!158 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107926 () Bool)

(declare-fun Unit!3317 () Unit!3301)

(assert (=> b!107926 (= e!70262 Unit!3317)))

(declare-fun b!107927 () Bool)

(assert (=> b!107927 (= e!70261 (isDefined!110 (getValueByKey!158 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29845 c!18930) b!107925))

(assert (= (and d!29845 (not c!18930)) b!107926))

(assert (= (and d!29845 (not res!53533)) b!107927))

(declare-fun m!121223 () Bool)

(assert (=> d!29845 m!121223))

(declare-fun m!121225 () Bool)

(assert (=> b!107925 m!121225))

(declare-fun m!121227 () Bool)

(assert (=> b!107925 m!121227))

(assert (=> b!107925 m!121227))

(declare-fun m!121229 () Bool)

(assert (=> b!107925 m!121229))

(assert (=> b!107927 m!121227))

(assert (=> b!107927 m!121227))

(assert (=> b!107927 m!121229))

(assert (=> bm!11422 d!29845))

(declare-fun d!29847 () Bool)

(assert (=> d!29847 (= (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107866 d!29847))

(declare-fun d!29849 () Bool)

(declare-fun e!70263 () Bool)

(assert (=> d!29849 e!70263))

(declare-fun res!53534 () Bool)

(assert (=> d!29849 (=> res!53534 e!70263)))

(declare-fun lt!55421 () Bool)

(assert (=> d!29849 (= res!53534 (not lt!55421))))

(declare-fun lt!55424 () Bool)

(assert (=> d!29849 (= lt!55421 lt!55424)))

(declare-fun lt!55423 () Unit!3301)

(declare-fun e!70264 () Unit!3301)

(assert (=> d!29849 (= lt!55423 e!70264)))

(declare-fun c!18931 () Bool)

(assert (=> d!29849 (= c!18931 lt!55424)))

(assert (=> d!29849 (= lt!55424 (containsKey!161 (toList!786 call!11386) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!29849 (= (contains!820 call!11386 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55421)))

(declare-fun b!107928 () Bool)

(declare-fun lt!55422 () Unit!3301)

(assert (=> b!107928 (= e!70264 lt!55422)))

(assert (=> b!107928 (= lt!55422 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 call!11386) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!107928 (isDefined!110 (getValueByKey!158 (toList!786 call!11386) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!107929 () Bool)

(declare-fun Unit!3318 () Unit!3301)

(assert (=> b!107929 (= e!70264 Unit!3318)))

(declare-fun b!107930 () Bool)

(assert (=> b!107930 (= e!70263 (isDefined!110 (getValueByKey!158 (toList!786 call!11386) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!29849 c!18931) b!107928))

(assert (= (and d!29849 (not c!18931)) b!107929))

(assert (= (and d!29849 (not res!53534)) b!107930))

(assert (=> d!29849 m!120751))

(declare-fun m!121231 () Bool)

(assert (=> d!29849 m!121231))

(assert (=> b!107928 m!120751))

(declare-fun m!121233 () Bool)

(assert (=> b!107928 m!121233))

(assert (=> b!107928 m!120751))

(declare-fun m!121235 () Bool)

(assert (=> b!107928 m!121235))

(assert (=> b!107928 m!121235))

(declare-fun m!121237 () Bool)

(assert (=> b!107928 m!121237))

(assert (=> b!107930 m!120751))

(assert (=> b!107930 m!121235))

(assert (=> b!107930 m!121235))

(assert (=> b!107930 m!121237))

(assert (=> b!107753 d!29849))

(declare-fun d!29851 () Bool)

(declare-fun res!53539 () Bool)

(declare-fun e!70269 () Bool)

(assert (=> d!29851 (=> res!53539 e!70269)))

(assert (=> d!29851 (= res!53539 (and ((_ is Cons!1600) (toList!786 lt!55099)) (= (_1!1199 (h!2198 (toList!786 lt!55099))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!29851 (= (containsKey!161 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70269)))

(declare-fun b!107935 () Bool)

(declare-fun e!70270 () Bool)

(assert (=> b!107935 (= e!70269 e!70270)))

(declare-fun res!53540 () Bool)

(assert (=> b!107935 (=> (not res!53540) (not e!70270))))

(assert (=> b!107935 (= res!53540 (and (or (not ((_ is Cons!1600) (toList!786 lt!55099))) (bvsle (_1!1199 (h!2198 (toList!786 lt!55099))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))) ((_ is Cons!1600) (toList!786 lt!55099)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55099))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(declare-fun b!107936 () Bool)

(assert (=> b!107936 (= e!70270 (containsKey!161 (t!5712 (toList!786 lt!55099)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!29851 (not res!53539)) b!107935))

(assert (= (and b!107935 res!53540) b!107936))

(assert (=> b!107936 m!120751))

(declare-fun m!121239 () Bool)

(assert (=> b!107936 m!121239))

(assert (=> d!29803 d!29851))

(declare-fun d!29853 () Bool)

(assert (=> d!29853 (= (+!142 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55270 lt!55094 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55427 () Unit!3301)

(declare-fun choose!676 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 V!3233 Int) Unit!3301)

(assert (=> d!29853 (= lt!55427 (choose!676 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) lt!55270 (zeroValue!2478 newMap!16) lt!55094 (minValue!2478 newMap!16) (defaultEntry!2605 newMap!16)))))

(assert (=> d!29853 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!29853 (= (lemmaChangeZeroKeyThenAddPairToListMap!48 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) lt!55270 (zeroValue!2478 newMap!16) lt!55094 (minValue!2478 newMap!16) (defaultEntry!2605 newMap!16)) lt!55427)))

(declare-fun bs!4436 () Bool)

(assert (= bs!4436 d!29853))

(assert (=> bs!4436 m!121179))

(assert (=> bs!4436 m!120987))

(assert (=> bs!4436 m!120987))

(declare-fun m!121241 () Bool)

(assert (=> bs!4436 m!121241))

(declare-fun m!121243 () Bool)

(assert (=> bs!4436 m!121243))

(declare-fun m!121245 () Bool)

(assert (=> bs!4436 m!121245))

(assert (=> b!107739 d!29853))

(declare-fun d!29855 () Bool)

(declare-fun e!70271 () Bool)

(assert (=> d!29855 e!70271))

(declare-fun res!53542 () Bool)

(assert (=> d!29855 (=> (not res!53542) (not e!70271))))

(declare-fun lt!55431 () ListLongMap!1541)

(assert (=> d!29855 (= res!53542 (contains!820 lt!55431 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun lt!55430 () List!1604)

(assert (=> d!29855 (= lt!55431 (ListLongMap!1542 lt!55430))))

(declare-fun lt!55428 () Unit!3301)

(declare-fun lt!55429 () Unit!3301)

(assert (=> d!29855 (= lt!55428 lt!55429)))

(assert (=> d!29855 (= (getValueByKey!158 lt!55430 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) (Some!163 (_2!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!29855 (= lt!55429 (lemmaContainsTupThenGetReturnValue!74 lt!55430 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (_2!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!29855 (= lt!55430 (insertStrictlySorted!77 (toList!786 e!70153) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (_2!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!29855 (= (+!142 e!70153 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) lt!55431)))

(declare-fun b!107937 () Bool)

(declare-fun res!53541 () Bool)

(assert (=> b!107937 (=> (not res!53541) (not e!70271))))

(assert (=> b!107937 (= res!53541 (= (getValueByKey!158 (toList!786 lt!55431) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) (Some!163 (_2!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(declare-fun b!107938 () Bool)

(assert (=> b!107938 (= e!70271 (contains!823 (toList!786 lt!55431) (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (= (and d!29855 res!53542) b!107937))

(assert (= (and b!107937 res!53541) b!107938))

(declare-fun m!121247 () Bool)

(assert (=> d!29855 m!121247))

(declare-fun m!121249 () Bool)

(assert (=> d!29855 m!121249))

(declare-fun m!121251 () Bool)

(assert (=> d!29855 m!121251))

(declare-fun m!121253 () Bool)

(assert (=> d!29855 m!121253))

(declare-fun m!121255 () Bool)

(assert (=> b!107937 m!121255))

(declare-fun m!121257 () Bool)

(assert (=> b!107938 m!121257))

(assert (=> bm!11393 d!29855))

(declare-fun d!29857 () Bool)

(declare-fun e!70272 () Bool)

(assert (=> d!29857 e!70272))

(declare-fun res!53543 () Bool)

(assert (=> d!29857 (=> res!53543 e!70272)))

(declare-fun lt!55432 () Bool)

(assert (=> d!29857 (= res!53543 (not lt!55432))))

(declare-fun lt!55435 () Bool)

(assert (=> d!29857 (= lt!55432 lt!55435)))

(declare-fun lt!55434 () Unit!3301)

(declare-fun e!70273 () Unit!3301)

(assert (=> d!29857 (= lt!55434 e!70273)))

(declare-fun c!18932 () Bool)

(assert (=> d!29857 (= c!18932 lt!55435)))

(assert (=> d!29857 (= lt!55435 (containsKey!161 (toList!786 lt!55324) (_1!1199 lt!55093)))))

(assert (=> d!29857 (= (contains!820 lt!55324 (_1!1199 lt!55093)) lt!55432)))

(declare-fun b!107939 () Bool)

(declare-fun lt!55433 () Unit!3301)

(assert (=> b!107939 (= e!70273 lt!55433)))

(assert (=> b!107939 (= lt!55433 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55324) (_1!1199 lt!55093)))))

(assert (=> b!107939 (isDefined!110 (getValueByKey!158 (toList!786 lt!55324) (_1!1199 lt!55093)))))

(declare-fun b!107940 () Bool)

(declare-fun Unit!3319 () Unit!3301)

(assert (=> b!107940 (= e!70273 Unit!3319)))

(declare-fun b!107941 () Bool)

(assert (=> b!107941 (= e!70272 (isDefined!110 (getValueByKey!158 (toList!786 lt!55324) (_1!1199 lt!55093))))))

(assert (= (and d!29857 c!18932) b!107939))

(assert (= (and d!29857 (not c!18932)) b!107940))

(assert (= (and d!29857 (not res!53543)) b!107941))

(declare-fun m!121259 () Bool)

(assert (=> d!29857 m!121259))

(declare-fun m!121261 () Bool)

(assert (=> b!107939 m!121261))

(assert (=> b!107939 m!121083))

(assert (=> b!107939 m!121083))

(declare-fun m!121263 () Bool)

(assert (=> b!107939 m!121263))

(assert (=> b!107941 m!121083))

(assert (=> b!107941 m!121083))

(assert (=> b!107941 m!121263))

(assert (=> d!29819 d!29857))

(declare-fun b!107953 () Bool)

(declare-fun e!70279 () Option!164)

(assert (=> b!107953 (= e!70279 None!162)))

(declare-fun b!107952 () Bool)

(assert (=> b!107952 (= e!70279 (getValueByKey!158 (t!5712 lt!55323) (_1!1199 lt!55093)))))

(declare-fun b!107950 () Bool)

(declare-fun e!70278 () Option!164)

(assert (=> b!107950 (= e!70278 (Some!163 (_2!1199 (h!2198 lt!55323))))))

(declare-fun d!29859 () Bool)

(declare-fun c!18937 () Bool)

(assert (=> d!29859 (= c!18937 (and ((_ is Cons!1600) lt!55323) (= (_1!1199 (h!2198 lt!55323)) (_1!1199 lt!55093))))))

(assert (=> d!29859 (= (getValueByKey!158 lt!55323 (_1!1199 lt!55093)) e!70278)))

(declare-fun b!107951 () Bool)

(assert (=> b!107951 (= e!70278 e!70279)))

(declare-fun c!18938 () Bool)

(assert (=> b!107951 (= c!18938 (and ((_ is Cons!1600) lt!55323) (not (= (_1!1199 (h!2198 lt!55323)) (_1!1199 lt!55093)))))))

(assert (= (and d!29859 c!18937) b!107950))

(assert (= (and d!29859 (not c!18937)) b!107951))

(assert (= (and b!107951 c!18938) b!107952))

(assert (= (and b!107951 (not c!18938)) b!107953))

(declare-fun m!121265 () Bool)

(assert (=> b!107952 m!121265))

(assert (=> d!29819 d!29859))

(declare-fun d!29861 () Bool)

(assert (=> d!29861 (= (getValueByKey!158 lt!55323 (_1!1199 lt!55093)) (Some!163 (_2!1199 lt!55093)))))

(declare-fun lt!55438 () Unit!3301)

(declare-fun choose!677 (List!1604 (_ BitVec 64) V!3233) Unit!3301)

(assert (=> d!29861 (= lt!55438 (choose!677 lt!55323 (_1!1199 lt!55093) (_2!1199 lt!55093)))))

(declare-fun e!70282 () Bool)

(assert (=> d!29861 e!70282))

(declare-fun res!53548 () Bool)

(assert (=> d!29861 (=> (not res!53548) (not e!70282))))

(declare-fun isStrictlySorted!297 (List!1604) Bool)

(assert (=> d!29861 (= res!53548 (isStrictlySorted!297 lt!55323))))

(assert (=> d!29861 (= (lemmaContainsTupThenGetReturnValue!74 lt!55323 (_1!1199 lt!55093) (_2!1199 lt!55093)) lt!55438)))

(declare-fun b!107958 () Bool)

(declare-fun res!53549 () Bool)

(assert (=> b!107958 (=> (not res!53549) (not e!70282))))

(assert (=> b!107958 (= res!53549 (containsKey!161 lt!55323 (_1!1199 lt!55093)))))

(declare-fun b!107959 () Bool)

(assert (=> b!107959 (= e!70282 (contains!823 lt!55323 (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(assert (= (and d!29861 res!53548) b!107958))

(assert (= (and b!107958 res!53549) b!107959))

(assert (=> d!29861 m!121077))

(declare-fun m!121267 () Bool)

(assert (=> d!29861 m!121267))

(declare-fun m!121269 () Bool)

(assert (=> d!29861 m!121269))

(declare-fun m!121271 () Bool)

(assert (=> b!107958 m!121271))

(declare-fun m!121273 () Bool)

(assert (=> b!107959 m!121273))

(assert (=> d!29819 d!29861))

(declare-fun b!107980 () Bool)

(declare-fun e!70294 () List!1604)

(declare-fun call!11445 () List!1604)

(assert (=> b!107980 (= e!70294 call!11445)))

(declare-fun b!107982 () Bool)

(declare-fun e!70293 () List!1604)

(assert (=> b!107982 (= e!70294 e!70293)))

(declare-fun c!18949 () Bool)

(assert (=> b!107982 (= c!18949 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55096 lt!55092))) (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 lt!55092)))) (_1!1199 lt!55093))))))

(declare-fun b!107983 () Bool)

(declare-fun call!11443 () List!1604)

(assert (=> b!107983 (= e!70293 call!11443)))

(declare-fun b!107984 () Bool)

(declare-fun e!70297 () List!1604)

(assert (=> b!107984 (= e!70297 (insertStrictlySorted!77 (t!5712 (toList!786 (+!142 lt!55096 lt!55092))) (_1!1199 lt!55093) (_2!1199 lt!55093)))))

(declare-fun c!18948 () Bool)

(declare-fun b!107985 () Bool)

(assert (=> b!107985 (= e!70297 (ite c!18949 (t!5712 (toList!786 (+!142 lt!55096 lt!55092))) (ite c!18948 (Cons!1600 (h!2198 (toList!786 (+!142 lt!55096 lt!55092))) (t!5712 (toList!786 (+!142 lt!55096 lt!55092)))) Nil!1601)))))

(declare-fun b!107986 () Bool)

(declare-fun e!70295 () Bool)

(declare-fun lt!55441 () List!1604)

(assert (=> b!107986 (= e!70295 (contains!823 lt!55441 (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(declare-fun bm!11440 () Bool)

(assert (=> bm!11440 (= call!11443 call!11445)))

(declare-fun b!107987 () Bool)

(assert (=> b!107987 (= c!18948 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55096 lt!55092))) (bvsgt (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 lt!55092)))) (_1!1199 lt!55093))))))

(declare-fun e!70296 () List!1604)

(assert (=> b!107987 (= e!70293 e!70296)))

(declare-fun b!107988 () Bool)

(declare-fun call!11444 () List!1604)

(assert (=> b!107988 (= e!70296 call!11444)))

(declare-fun bm!11441 () Bool)

(declare-fun c!18947 () Bool)

(declare-fun $colon$colon!81 (List!1604 tuple2!2376) List!1604)

(assert (=> bm!11441 (= call!11445 ($colon$colon!81 e!70297 (ite c!18947 (h!2198 (toList!786 (+!142 lt!55096 lt!55092))) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093)))))))

(declare-fun c!18950 () Bool)

(assert (=> bm!11441 (= c!18950 c!18947)))

(declare-fun b!107981 () Bool)

(declare-fun res!53555 () Bool)

(assert (=> b!107981 (=> (not res!53555) (not e!70295))))

(assert (=> b!107981 (= res!53555 (containsKey!161 lt!55441 (_1!1199 lt!55093)))))

(declare-fun d!29863 () Bool)

(assert (=> d!29863 e!70295))

(declare-fun res!53554 () Bool)

(assert (=> d!29863 (=> (not res!53554) (not e!70295))))

(assert (=> d!29863 (= res!53554 (isStrictlySorted!297 lt!55441))))

(assert (=> d!29863 (= lt!55441 e!70294)))

(assert (=> d!29863 (= c!18947 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55096 lt!55092))) (bvslt (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 lt!55092)))) (_1!1199 lt!55093))))))

(assert (=> d!29863 (isStrictlySorted!297 (toList!786 (+!142 lt!55096 lt!55092)))))

(assert (=> d!29863 (= (insertStrictlySorted!77 (toList!786 (+!142 lt!55096 lt!55092)) (_1!1199 lt!55093) (_2!1199 lt!55093)) lt!55441)))

(declare-fun bm!11442 () Bool)

(assert (=> bm!11442 (= call!11444 call!11443)))

(declare-fun b!107989 () Bool)

(assert (=> b!107989 (= e!70296 call!11444)))

(assert (= (and d!29863 c!18947) b!107980))

(assert (= (and d!29863 (not c!18947)) b!107982))

(assert (= (and b!107982 c!18949) b!107983))

(assert (= (and b!107982 (not c!18949)) b!107987))

(assert (= (and b!107987 c!18948) b!107988))

(assert (= (and b!107987 (not c!18948)) b!107989))

(assert (= (or b!107988 b!107989) bm!11442))

(assert (= (or b!107983 bm!11442) bm!11440))

(assert (= (or b!107980 bm!11440) bm!11441))

(assert (= (and bm!11441 c!18950) b!107984))

(assert (= (and bm!11441 (not c!18950)) b!107985))

(assert (= (and d!29863 res!53554) b!107981))

(assert (= (and b!107981 res!53555) b!107986))

(declare-fun m!121275 () Bool)

(assert (=> d!29863 m!121275))

(declare-fun m!121277 () Bool)

(assert (=> d!29863 m!121277))

(declare-fun m!121279 () Bool)

(assert (=> bm!11441 m!121279))

(declare-fun m!121281 () Bool)

(assert (=> b!107984 m!121281))

(declare-fun m!121283 () Bool)

(assert (=> b!107986 m!121283))

(declare-fun m!121285 () Bool)

(assert (=> b!107981 m!121285))

(assert (=> d!29819 d!29863))

(declare-fun d!29865 () Bool)

(declare-fun lt!55444 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!112 (List!1604) (InoxSet tuple2!2376))

(assert (=> d!29865 (= lt!55444 (select (content!112 (toList!786 lt!55316)) lt!55093))))

(declare-fun e!70302 () Bool)

(assert (=> d!29865 (= lt!55444 e!70302)))

(declare-fun res!53561 () Bool)

(assert (=> d!29865 (=> (not res!53561) (not e!70302))))

(assert (=> d!29865 (= res!53561 ((_ is Cons!1600) (toList!786 lt!55316)))))

(assert (=> d!29865 (= (contains!823 (toList!786 lt!55316) lt!55093) lt!55444)))

(declare-fun b!107994 () Bool)

(declare-fun e!70303 () Bool)

(assert (=> b!107994 (= e!70302 e!70303)))

(declare-fun res!53560 () Bool)

(assert (=> b!107994 (=> res!53560 e!70303)))

(assert (=> b!107994 (= res!53560 (= (h!2198 (toList!786 lt!55316)) lt!55093))))

(declare-fun b!107995 () Bool)

(assert (=> b!107995 (= e!70303 (contains!823 (t!5712 (toList!786 lt!55316)) lt!55093))))

(assert (= (and d!29865 res!53561) b!107994))

(assert (= (and b!107994 (not res!53560)) b!107995))

(declare-fun m!121287 () Bool)

(assert (=> d!29865 m!121287))

(declare-fun m!121289 () Bool)

(assert (=> d!29865 m!121289))

(declare-fun m!121291 () Bool)

(assert (=> b!107995 m!121291))

(assert (=> b!107815 d!29865))

(declare-fun d!29867 () Bool)

(declare-fun e!70304 () Bool)

(assert (=> d!29867 e!70304))

(declare-fun res!53562 () Bool)

(assert (=> d!29867 (=> res!53562 e!70304)))

(declare-fun lt!55445 () Bool)

(assert (=> d!29867 (= res!53562 (not lt!55445))))

(declare-fun lt!55448 () Bool)

(assert (=> d!29867 (= lt!55445 lt!55448)))

(declare-fun lt!55447 () Unit!3301)

(declare-fun e!70305 () Unit!3301)

(assert (=> d!29867 (= lt!55447 e!70305)))

(declare-fun c!18951 () Bool)

(assert (=> d!29867 (= c!18951 lt!55448)))

(assert (=> d!29867 (= lt!55448 (containsKey!161 (toList!786 lt!55320) (_1!1199 lt!55092)))))

(assert (=> d!29867 (= (contains!820 lt!55320 (_1!1199 lt!55092)) lt!55445)))

(declare-fun b!107996 () Bool)

(declare-fun lt!55446 () Unit!3301)

(assert (=> b!107996 (= e!70305 lt!55446)))

(assert (=> b!107996 (= lt!55446 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55320) (_1!1199 lt!55092)))))

(assert (=> b!107996 (isDefined!110 (getValueByKey!158 (toList!786 lt!55320) (_1!1199 lt!55092)))))

(declare-fun b!107997 () Bool)

(declare-fun Unit!3320 () Unit!3301)

(assert (=> b!107997 (= e!70305 Unit!3320)))

(declare-fun b!107998 () Bool)

(assert (=> b!107998 (= e!70304 (isDefined!110 (getValueByKey!158 (toList!786 lt!55320) (_1!1199 lt!55092))))))

(assert (= (and d!29867 c!18951) b!107996))

(assert (= (and d!29867 (not c!18951)) b!107997))

(assert (= (and d!29867 (not res!53562)) b!107998))

(declare-fun m!121293 () Bool)

(assert (=> d!29867 m!121293))

(declare-fun m!121295 () Bool)

(assert (=> b!107996 m!121295))

(assert (=> b!107996 m!121071))

(assert (=> b!107996 m!121071))

(declare-fun m!121297 () Bool)

(assert (=> b!107996 m!121297))

(assert (=> b!107998 m!121071))

(assert (=> b!107998 m!121071))

(assert (=> b!107998 m!121297))

(assert (=> d!29817 d!29867))

(declare-fun b!108002 () Bool)

(declare-fun e!70307 () Option!164)

(assert (=> b!108002 (= e!70307 None!162)))

(declare-fun b!108001 () Bool)

(assert (=> b!108001 (= e!70307 (getValueByKey!158 (t!5712 lt!55319) (_1!1199 lt!55092)))))

(declare-fun b!107999 () Bool)

(declare-fun e!70306 () Option!164)

(assert (=> b!107999 (= e!70306 (Some!163 (_2!1199 (h!2198 lt!55319))))))

(declare-fun d!29869 () Bool)

(declare-fun c!18952 () Bool)

(assert (=> d!29869 (= c!18952 (and ((_ is Cons!1600) lt!55319) (= (_1!1199 (h!2198 lt!55319)) (_1!1199 lt!55092))))))

(assert (=> d!29869 (= (getValueByKey!158 lt!55319 (_1!1199 lt!55092)) e!70306)))

(declare-fun b!108000 () Bool)

(assert (=> b!108000 (= e!70306 e!70307)))

(declare-fun c!18953 () Bool)

(assert (=> b!108000 (= c!18953 (and ((_ is Cons!1600) lt!55319) (not (= (_1!1199 (h!2198 lt!55319)) (_1!1199 lt!55092)))))))

(assert (= (and d!29869 c!18952) b!107999))

(assert (= (and d!29869 (not c!18952)) b!108000))

(assert (= (and b!108000 c!18953) b!108001))

(assert (= (and b!108000 (not c!18953)) b!108002))

(declare-fun m!121299 () Bool)

(assert (=> b!108001 m!121299))

(assert (=> d!29817 d!29869))

(declare-fun d!29871 () Bool)

(assert (=> d!29871 (= (getValueByKey!158 lt!55319 (_1!1199 lt!55092)) (Some!163 (_2!1199 lt!55092)))))

(declare-fun lt!55449 () Unit!3301)

(assert (=> d!29871 (= lt!55449 (choose!677 lt!55319 (_1!1199 lt!55092) (_2!1199 lt!55092)))))

(declare-fun e!70308 () Bool)

(assert (=> d!29871 e!70308))

(declare-fun res!53563 () Bool)

(assert (=> d!29871 (=> (not res!53563) (not e!70308))))

(assert (=> d!29871 (= res!53563 (isStrictlySorted!297 lt!55319))))

(assert (=> d!29871 (= (lemmaContainsTupThenGetReturnValue!74 lt!55319 (_1!1199 lt!55092) (_2!1199 lt!55092)) lt!55449)))

(declare-fun b!108003 () Bool)

(declare-fun res!53564 () Bool)

(assert (=> b!108003 (=> (not res!53564) (not e!70308))))

(assert (=> b!108003 (= res!53564 (containsKey!161 lt!55319 (_1!1199 lt!55092)))))

(declare-fun b!108004 () Bool)

(assert (=> b!108004 (= e!70308 (contains!823 lt!55319 (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(assert (= (and d!29871 res!53563) b!108003))

(assert (= (and b!108003 res!53564) b!108004))

(assert (=> d!29871 m!121065))

(declare-fun m!121301 () Bool)

(assert (=> d!29871 m!121301))

(declare-fun m!121303 () Bool)

(assert (=> d!29871 m!121303))

(declare-fun m!121305 () Bool)

(assert (=> b!108003 m!121305))

(declare-fun m!121307 () Bool)

(assert (=> b!108004 m!121307))

(assert (=> d!29817 d!29871))

(declare-fun b!108005 () Bool)

(declare-fun e!70310 () List!1604)

(declare-fun call!11448 () List!1604)

(assert (=> b!108005 (= e!70310 call!11448)))

(declare-fun b!108007 () Bool)

(declare-fun e!70309 () List!1604)

(assert (=> b!108007 (= e!70310 e!70309)))

(declare-fun c!18956 () Bool)

(assert (=> b!108007 (= c!18956 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55096 lt!55093))) (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 lt!55093)))) (_1!1199 lt!55092))))))

(declare-fun b!108008 () Bool)

(declare-fun call!11446 () List!1604)

(assert (=> b!108008 (= e!70309 call!11446)))

(declare-fun e!70313 () List!1604)

(declare-fun b!108009 () Bool)

(assert (=> b!108009 (= e!70313 (insertStrictlySorted!77 (t!5712 (toList!786 (+!142 lt!55096 lt!55093))) (_1!1199 lt!55092) (_2!1199 lt!55092)))))

(declare-fun c!18955 () Bool)

(declare-fun b!108010 () Bool)

(assert (=> b!108010 (= e!70313 (ite c!18956 (t!5712 (toList!786 (+!142 lt!55096 lt!55093))) (ite c!18955 (Cons!1600 (h!2198 (toList!786 (+!142 lt!55096 lt!55093))) (t!5712 (toList!786 (+!142 lt!55096 lt!55093)))) Nil!1601)))))

(declare-fun b!108011 () Bool)

(declare-fun e!70311 () Bool)

(declare-fun lt!55450 () List!1604)

(assert (=> b!108011 (= e!70311 (contains!823 lt!55450 (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(declare-fun bm!11443 () Bool)

(assert (=> bm!11443 (= call!11446 call!11448)))

(declare-fun b!108012 () Bool)

(assert (=> b!108012 (= c!18955 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55096 lt!55093))) (bvsgt (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 lt!55093)))) (_1!1199 lt!55092))))))

(declare-fun e!70312 () List!1604)

(assert (=> b!108012 (= e!70309 e!70312)))

(declare-fun b!108013 () Bool)

(declare-fun call!11447 () List!1604)

(assert (=> b!108013 (= e!70312 call!11447)))

(declare-fun bm!11444 () Bool)

(declare-fun c!18954 () Bool)

(assert (=> bm!11444 (= call!11448 ($colon$colon!81 e!70313 (ite c!18954 (h!2198 (toList!786 (+!142 lt!55096 lt!55093))) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092)))))))

(declare-fun c!18957 () Bool)

(assert (=> bm!11444 (= c!18957 c!18954)))

(declare-fun b!108006 () Bool)

(declare-fun res!53566 () Bool)

(assert (=> b!108006 (=> (not res!53566) (not e!70311))))

(assert (=> b!108006 (= res!53566 (containsKey!161 lt!55450 (_1!1199 lt!55092)))))

(declare-fun d!29873 () Bool)

(assert (=> d!29873 e!70311))

(declare-fun res!53565 () Bool)

(assert (=> d!29873 (=> (not res!53565) (not e!70311))))

(assert (=> d!29873 (= res!53565 (isStrictlySorted!297 lt!55450))))

(assert (=> d!29873 (= lt!55450 e!70310)))

(assert (=> d!29873 (= c!18954 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55096 lt!55093))) (bvslt (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 lt!55093)))) (_1!1199 lt!55092))))))

(assert (=> d!29873 (isStrictlySorted!297 (toList!786 (+!142 lt!55096 lt!55093)))))

(assert (=> d!29873 (= (insertStrictlySorted!77 (toList!786 (+!142 lt!55096 lt!55093)) (_1!1199 lt!55092) (_2!1199 lt!55092)) lt!55450)))

(declare-fun bm!11445 () Bool)

(assert (=> bm!11445 (= call!11447 call!11446)))

(declare-fun b!108014 () Bool)

(assert (=> b!108014 (= e!70312 call!11447)))

(assert (= (and d!29873 c!18954) b!108005))

(assert (= (and d!29873 (not c!18954)) b!108007))

(assert (= (and b!108007 c!18956) b!108008))

(assert (= (and b!108007 (not c!18956)) b!108012))

(assert (= (and b!108012 c!18955) b!108013))

(assert (= (and b!108012 (not c!18955)) b!108014))

(assert (= (or b!108013 b!108014) bm!11445))

(assert (= (or b!108008 bm!11445) bm!11443))

(assert (= (or b!108005 bm!11443) bm!11444))

(assert (= (and bm!11444 c!18957) b!108009))

(assert (= (and bm!11444 (not c!18957)) b!108010))

(assert (= (and d!29873 res!53565) b!108006))

(assert (= (and b!108006 res!53566) b!108011))

(declare-fun m!121309 () Bool)

(assert (=> d!29873 m!121309))

(declare-fun m!121311 () Bool)

(assert (=> d!29873 m!121311))

(declare-fun m!121313 () Bool)

(assert (=> bm!11444 m!121313))

(declare-fun m!121315 () Bool)

(assert (=> b!108009 m!121315))

(declare-fun m!121317 () Bool)

(assert (=> b!108011 m!121317))

(declare-fun m!121319 () Bool)

(assert (=> b!108006 m!121319))

(assert (=> d!29817 d!29873))

(declare-fun d!29875 () Bool)

(assert (=> d!29875 (= (inRange!0 (ite c!18887 (ite c!18891 (index!3166 lt!55260) (ite c!18885 (index!3165 lt!55271) (index!3168 lt!55271))) (ite c!18884 (index!3166 lt!55267) (ite c!18883 (index!3165 lt!55272) (index!3168 lt!55272)))) (mask!6763 newMap!16)) (and (bvsge (ite c!18887 (ite c!18891 (index!3166 lt!55260) (ite c!18885 (index!3165 lt!55271) (index!3168 lt!55271))) (ite c!18884 (index!3166 lt!55267) (ite c!18883 (index!3165 lt!55272) (index!3168 lt!55272)))) #b00000000000000000000000000000000) (bvslt (ite c!18887 (ite c!18891 (index!3166 lt!55260) (ite c!18885 (index!3165 lt!55271) (index!3168 lt!55271))) (ite c!18884 (index!3166 lt!55267) (ite c!18883 (index!3165 lt!55272) (index!3168 lt!55272)))) (bvadd (mask!6763 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11399 d!29875))

(declare-fun d!29877 () Bool)

(declare-fun e!70314 () Bool)

(assert (=> d!29877 e!70314))

(declare-fun res!53567 () Bool)

(assert (=> d!29877 (=> res!53567 e!70314)))

(declare-fun lt!55451 () Bool)

(assert (=> d!29877 (= res!53567 (not lt!55451))))

(declare-fun lt!55454 () Bool)

(assert (=> d!29877 (= lt!55451 lt!55454)))

(declare-fun lt!55453 () Unit!3301)

(declare-fun e!70315 () Unit!3301)

(assert (=> d!29877 (= lt!55453 e!70315)))

(declare-fun c!18958 () Bool)

(assert (=> d!29877 (= c!18958 lt!55454)))

(assert (=> d!29877 (= lt!55454 (containsKey!161 (toList!786 lt!55291) (_1!1199 lt!55092)))))

(assert (=> d!29877 (= (contains!820 lt!55291 (_1!1199 lt!55092)) lt!55451)))

(declare-fun b!108015 () Bool)

(declare-fun lt!55452 () Unit!3301)

(assert (=> b!108015 (= e!70315 lt!55452)))

(assert (=> b!108015 (= lt!55452 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55291) (_1!1199 lt!55092)))))

(assert (=> b!108015 (isDefined!110 (getValueByKey!158 (toList!786 lt!55291) (_1!1199 lt!55092)))))

(declare-fun b!108016 () Bool)

(declare-fun Unit!3321 () Unit!3301)

(assert (=> b!108016 (= e!70315 Unit!3321)))

(declare-fun b!108017 () Bool)

(assert (=> b!108017 (= e!70314 (isDefined!110 (getValueByKey!158 (toList!786 lt!55291) (_1!1199 lt!55092))))))

(assert (= (and d!29877 c!18958) b!108015))

(assert (= (and d!29877 (not c!18958)) b!108016))

(assert (= (and d!29877 (not res!53567)) b!108017))

(declare-fun m!121321 () Bool)

(assert (=> d!29877 m!121321))

(declare-fun m!121323 () Bool)

(assert (=> b!108015 m!121323))

(assert (=> b!108015 m!121021))

(assert (=> b!108015 m!121021))

(declare-fun m!121325 () Bool)

(assert (=> b!108015 m!121325))

(assert (=> b!108017 m!121021))

(assert (=> b!108017 m!121021))

(assert (=> b!108017 m!121325))

(assert (=> d!29809 d!29877))

(declare-fun b!108021 () Bool)

(declare-fun e!70317 () Option!164)

(assert (=> b!108021 (= e!70317 None!162)))

(declare-fun b!108020 () Bool)

(assert (=> b!108020 (= e!70317 (getValueByKey!158 (t!5712 lt!55290) (_1!1199 lt!55092)))))

(declare-fun b!108018 () Bool)

(declare-fun e!70316 () Option!164)

(assert (=> b!108018 (= e!70316 (Some!163 (_2!1199 (h!2198 lt!55290))))))

(declare-fun d!29879 () Bool)

(declare-fun c!18959 () Bool)

(assert (=> d!29879 (= c!18959 (and ((_ is Cons!1600) lt!55290) (= (_1!1199 (h!2198 lt!55290)) (_1!1199 lt!55092))))))

(assert (=> d!29879 (= (getValueByKey!158 lt!55290 (_1!1199 lt!55092)) e!70316)))

(declare-fun b!108019 () Bool)

(assert (=> b!108019 (= e!70316 e!70317)))

(declare-fun c!18960 () Bool)

(assert (=> b!108019 (= c!18960 (and ((_ is Cons!1600) lt!55290) (not (= (_1!1199 (h!2198 lt!55290)) (_1!1199 lt!55092)))))))

(assert (= (and d!29879 c!18959) b!108018))

(assert (= (and d!29879 (not c!18959)) b!108019))

(assert (= (and b!108019 c!18960) b!108020))

(assert (= (and b!108019 (not c!18960)) b!108021))

(declare-fun m!121327 () Bool)

(assert (=> b!108020 m!121327))

(assert (=> d!29809 d!29879))

(declare-fun d!29881 () Bool)

(assert (=> d!29881 (= (getValueByKey!158 lt!55290 (_1!1199 lt!55092)) (Some!163 (_2!1199 lt!55092)))))

(declare-fun lt!55455 () Unit!3301)

(assert (=> d!29881 (= lt!55455 (choose!677 lt!55290 (_1!1199 lt!55092) (_2!1199 lt!55092)))))

(declare-fun e!70318 () Bool)

(assert (=> d!29881 e!70318))

(declare-fun res!53568 () Bool)

(assert (=> d!29881 (=> (not res!53568) (not e!70318))))

(assert (=> d!29881 (= res!53568 (isStrictlySorted!297 lt!55290))))

(assert (=> d!29881 (= (lemmaContainsTupThenGetReturnValue!74 lt!55290 (_1!1199 lt!55092) (_2!1199 lt!55092)) lt!55455)))

(declare-fun b!108022 () Bool)

(declare-fun res!53569 () Bool)

(assert (=> b!108022 (=> (not res!53569) (not e!70318))))

(assert (=> b!108022 (= res!53569 (containsKey!161 lt!55290 (_1!1199 lt!55092)))))

(declare-fun b!108023 () Bool)

(assert (=> b!108023 (= e!70318 (contains!823 lt!55290 (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(assert (= (and d!29881 res!53568) b!108022))

(assert (= (and b!108022 res!53569) b!108023))

(assert (=> d!29881 m!121015))

(declare-fun m!121329 () Bool)

(assert (=> d!29881 m!121329))

(declare-fun m!121331 () Bool)

(assert (=> d!29881 m!121331))

(declare-fun m!121333 () Bool)

(assert (=> b!108022 m!121333))

(declare-fun m!121335 () Bool)

(assert (=> b!108023 m!121335))

(assert (=> d!29809 d!29881))

(declare-fun b!108024 () Bool)

(declare-fun e!70320 () List!1604)

(declare-fun call!11451 () List!1604)

(assert (=> b!108024 (= e!70320 call!11451)))

(declare-fun b!108026 () Bool)

(declare-fun e!70319 () List!1604)

(assert (=> b!108026 (= e!70320 e!70319)))

(declare-fun c!18963 () Bool)

(assert (=> b!108026 (= c!18963 (and ((_ is Cons!1600) (toList!786 lt!55096)) (= (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 lt!55092))))))

(declare-fun b!108027 () Bool)

(declare-fun call!11449 () List!1604)

(assert (=> b!108027 (= e!70319 call!11449)))

(declare-fun b!108028 () Bool)

(declare-fun e!70323 () List!1604)

(assert (=> b!108028 (= e!70323 (insertStrictlySorted!77 (t!5712 (toList!786 lt!55096)) (_1!1199 lt!55092) (_2!1199 lt!55092)))))

(declare-fun b!108029 () Bool)

(declare-fun c!18962 () Bool)

(assert (=> b!108029 (= e!70323 (ite c!18963 (t!5712 (toList!786 lt!55096)) (ite c!18962 (Cons!1600 (h!2198 (toList!786 lt!55096)) (t!5712 (toList!786 lt!55096))) Nil!1601)))))

(declare-fun b!108030 () Bool)

(declare-fun e!70321 () Bool)

(declare-fun lt!55456 () List!1604)

(assert (=> b!108030 (= e!70321 (contains!823 lt!55456 (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(declare-fun bm!11446 () Bool)

(assert (=> bm!11446 (= call!11449 call!11451)))

(declare-fun b!108031 () Bool)

(assert (=> b!108031 (= c!18962 (and ((_ is Cons!1600) (toList!786 lt!55096)) (bvsgt (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 lt!55092))))))

(declare-fun e!70322 () List!1604)

(assert (=> b!108031 (= e!70319 e!70322)))

(declare-fun b!108032 () Bool)

(declare-fun call!11450 () List!1604)

(assert (=> b!108032 (= e!70322 call!11450)))

(declare-fun c!18961 () Bool)

(declare-fun bm!11447 () Bool)

(assert (=> bm!11447 (= call!11451 ($colon$colon!81 e!70323 (ite c!18961 (h!2198 (toList!786 lt!55096)) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092)))))))

(declare-fun c!18964 () Bool)

(assert (=> bm!11447 (= c!18964 c!18961)))

(declare-fun b!108025 () Bool)

(declare-fun res!53571 () Bool)

(assert (=> b!108025 (=> (not res!53571) (not e!70321))))

(assert (=> b!108025 (= res!53571 (containsKey!161 lt!55456 (_1!1199 lt!55092)))))

(declare-fun d!29883 () Bool)

(assert (=> d!29883 e!70321))

(declare-fun res!53570 () Bool)

(assert (=> d!29883 (=> (not res!53570) (not e!70321))))

(assert (=> d!29883 (= res!53570 (isStrictlySorted!297 lt!55456))))

(assert (=> d!29883 (= lt!55456 e!70320)))

(assert (=> d!29883 (= c!18961 (and ((_ is Cons!1600) (toList!786 lt!55096)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 lt!55092))))))

(assert (=> d!29883 (isStrictlySorted!297 (toList!786 lt!55096))))

(assert (=> d!29883 (= (insertStrictlySorted!77 (toList!786 lt!55096) (_1!1199 lt!55092) (_2!1199 lt!55092)) lt!55456)))

(declare-fun bm!11448 () Bool)

(assert (=> bm!11448 (= call!11450 call!11449)))

(declare-fun b!108033 () Bool)

(assert (=> b!108033 (= e!70322 call!11450)))

(assert (= (and d!29883 c!18961) b!108024))

(assert (= (and d!29883 (not c!18961)) b!108026))

(assert (= (and b!108026 c!18963) b!108027))

(assert (= (and b!108026 (not c!18963)) b!108031))

(assert (= (and b!108031 c!18962) b!108032))

(assert (= (and b!108031 (not c!18962)) b!108033))

(assert (= (or b!108032 b!108033) bm!11448))

(assert (= (or b!108027 bm!11448) bm!11446))

(assert (= (or b!108024 bm!11446) bm!11447))

(assert (= (and bm!11447 c!18964) b!108028))

(assert (= (and bm!11447 (not c!18964)) b!108029))

(assert (= (and d!29883 res!53570) b!108025))

(assert (= (and b!108025 res!53571) b!108030))

(declare-fun m!121337 () Bool)

(assert (=> d!29883 m!121337))

(declare-fun m!121339 () Bool)

(assert (=> d!29883 m!121339))

(declare-fun m!121341 () Bool)

(assert (=> bm!11447 m!121341))

(declare-fun m!121343 () Bool)

(assert (=> b!108028 m!121343))

(declare-fun m!121345 () Bool)

(assert (=> b!108030 m!121345))

(declare-fun m!121347 () Bool)

(assert (=> b!108025 m!121347))

(assert (=> d!29809 d!29883))

(declare-fun d!29885 () Bool)

(declare-fun res!53581 () Bool)

(declare-fun e!70326 () Bool)

(assert (=> d!29885 (=> (not res!53581) (not e!70326))))

(assert (=> d!29885 (= res!53581 (validMask!0 (mask!6763 newMap!16)))))

(assert (=> d!29885 (= (simpleValid!75 newMap!16) e!70326)))

(declare-fun b!108044 () Bool)

(declare-fun res!53582 () Bool)

(assert (=> b!108044 (=> (not res!53582) (not e!70326))))

(declare-fun size!2328 (LongMapFixedSize!910) (_ BitVec 32))

(assert (=> b!108044 (= res!53582 (= (size!2328 newMap!16) (bvadd (_size!504 newMap!16) (bvsdiv (bvadd (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!108045 () Bool)

(assert (=> b!108045 (= e!70326 (and (bvsge (extraKeys!2406 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2406 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!504 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!108043 () Bool)

(declare-fun res!53580 () Bool)

(assert (=> b!108043 (=> (not res!53580) (not e!70326))))

(assert (=> b!108043 (= res!53580 (bvsge (size!2328 newMap!16) (_size!504 newMap!16)))))

(declare-fun b!108042 () Bool)

(declare-fun res!53583 () Bool)

(assert (=> b!108042 (=> (not res!53583) (not e!70326))))

(assert (=> b!108042 (= res!53583 (and (= (size!2323 (_values!2588 newMap!16)) (bvadd (mask!6763 newMap!16) #b00000000000000000000000000000001)) (= (size!2322 (_keys!4315 newMap!16)) (size!2323 (_values!2588 newMap!16))) (bvsge (_size!504 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!504 newMap!16) (bvadd (mask!6763 newMap!16) #b00000000000000000000000000000001))))))

(assert (= (and d!29885 res!53581) b!108042))

(assert (= (and b!108042 res!53583) b!108043))

(assert (= (and b!108043 res!53580) b!108044))

(assert (= (and b!108044 res!53582) b!108045))

(assert (=> d!29885 m!121179))

(declare-fun m!121349 () Bool)

(assert (=> b!108044 m!121349))

(assert (=> b!108043 m!121349))

(assert (=> d!29831 d!29885))

(declare-fun d!29887 () Bool)

(declare-fun res!53584 () Bool)

(declare-fun e!70327 () Bool)

(assert (=> d!29887 (=> (not res!53584) (not e!70327))))

(assert (=> d!29887 (= res!53584 (simpleValid!75 (_2!1200 lt!55269)))))

(assert (=> d!29887 (= (valid!430 (_2!1200 lt!55269)) e!70327)))

(declare-fun b!108046 () Bool)

(declare-fun res!53585 () Bool)

(assert (=> b!108046 (=> (not res!53585) (not e!70327))))

(assert (=> b!108046 (= res!53585 (= (arrayCountValidKeys!0 (_keys!4315 (_2!1200 lt!55269)) #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55269)))) (_size!504 (_2!1200 lt!55269))))))

(declare-fun b!108047 () Bool)

(declare-fun res!53586 () Bool)

(assert (=> b!108047 (=> (not res!53586) (not e!70327))))

(assert (=> b!108047 (= res!53586 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4315 (_2!1200 lt!55269)) (mask!6763 (_2!1200 lt!55269))))))

(declare-fun b!108048 () Bool)

(assert (=> b!108048 (= e!70327 (arrayNoDuplicates!0 (_keys!4315 (_2!1200 lt!55269)) #b00000000000000000000000000000000 Nil!1602))))

(assert (= (and d!29887 res!53584) b!108046))

(assert (= (and b!108046 res!53585) b!108047))

(assert (= (and b!108047 res!53586) b!108048))

(declare-fun m!121351 () Bool)

(assert (=> d!29887 m!121351))

(declare-fun m!121353 () Bool)

(assert (=> b!108046 m!121353))

(declare-fun m!121355 () Bool)

(assert (=> b!108047 m!121355))

(declare-fun m!121357 () Bool)

(assert (=> b!108048 m!121357))

(assert (=> d!29805 d!29887))

(assert (=> d!29805 d!29831))

(declare-fun d!29889 () Bool)

(assert (=> d!29889 (= (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (and (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107632 d!29889))

(declare-fun b!108061 () Bool)

(declare-fun e!70335 () SeekEntryResult!254)

(declare-fun lt!55464 () SeekEntryResult!254)

(assert (=> b!108061 (= e!70335 (Found!254 (index!3167 lt!55464)))))

(declare-fun b!108062 () Bool)

(declare-fun e!70334 () SeekEntryResult!254)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4357 (_ BitVec 32)) SeekEntryResult!254)

(assert (=> b!108062 (= e!70334 (seekKeyOrZeroReturnVacant!0 (x!13798 lt!55464) (index!3167 lt!55464) (index!3167 lt!55464) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(declare-fun b!108063 () Bool)

(declare-fun e!70336 () SeekEntryResult!254)

(assert (=> b!108063 (= e!70336 e!70335)))

(declare-fun lt!55465 () (_ BitVec 64))

(assert (=> b!108063 (= lt!55465 (select (arr!2066 (_keys!4315 newMap!16)) (index!3167 lt!55464)))))

(declare-fun c!18973 () Bool)

(assert (=> b!108063 (= c!18973 (= lt!55465 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108064 () Bool)

(declare-fun c!18971 () Bool)

(assert (=> b!108064 (= c!18971 (= lt!55465 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108064 (= e!70335 e!70334)))

(declare-fun d!29891 () Bool)

(declare-fun lt!55463 () SeekEntryResult!254)

(assert (=> d!29891 (and (or ((_ is Undefined!254) lt!55463) (not ((_ is Found!254) lt!55463)) (and (bvsge (index!3166 lt!55463) #b00000000000000000000000000000000) (bvslt (index!3166 lt!55463) (size!2322 (_keys!4315 newMap!16))))) (or ((_ is Undefined!254) lt!55463) ((_ is Found!254) lt!55463) (not ((_ is MissingZero!254) lt!55463)) (and (bvsge (index!3165 lt!55463) #b00000000000000000000000000000000) (bvslt (index!3165 lt!55463) (size!2322 (_keys!4315 newMap!16))))) (or ((_ is Undefined!254) lt!55463) ((_ is Found!254) lt!55463) ((_ is MissingZero!254) lt!55463) (not ((_ is MissingVacant!254) lt!55463)) (and (bvsge (index!3168 lt!55463) #b00000000000000000000000000000000) (bvslt (index!3168 lt!55463) (size!2322 (_keys!4315 newMap!16))))) (or ((_ is Undefined!254) lt!55463) (ite ((_ is Found!254) lt!55463) (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55463)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite ((_ is MissingZero!254) lt!55463) (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3165 lt!55463)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!254) lt!55463) (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3168 lt!55463)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29891 (= lt!55463 e!70336)))

(declare-fun c!18972 () Bool)

(assert (=> d!29891 (= c!18972 (and ((_ is Intermediate!254) lt!55464) (undefined!1066 lt!55464)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4357 (_ BitVec 32)) SeekEntryResult!254)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!29891 (= lt!55464 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6763 newMap!16)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(assert (=> d!29891 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!29891 (= (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)) lt!55463)))

(declare-fun b!108065 () Bool)

(assert (=> b!108065 (= e!70336 Undefined!254)))

(declare-fun b!108066 () Bool)

(assert (=> b!108066 (= e!70334 (MissingZero!254 (index!3167 lt!55464)))))

(assert (= (and d!29891 c!18972) b!108065))

(assert (= (and d!29891 (not c!18972)) b!108063))

(assert (= (and b!108063 c!18973) b!108061))

(assert (= (and b!108063 (not c!18973)) b!108064))

(assert (= (and b!108064 c!18971) b!108066))

(assert (= (and b!108064 (not c!18971)) b!108062))

(assert (=> b!108062 m!120751))

(declare-fun m!121359 () Bool)

(assert (=> b!108062 m!121359))

(declare-fun m!121361 () Bool)

(assert (=> b!108063 m!121361))

(assert (=> d!29891 m!121179))

(declare-fun m!121363 () Bool)

(assert (=> d!29891 m!121363))

(declare-fun m!121365 () Bool)

(assert (=> d!29891 m!121365))

(declare-fun m!121367 () Bool)

(assert (=> d!29891 m!121367))

(declare-fun m!121369 () Bool)

(assert (=> d!29891 m!121369))

(assert (=> d!29891 m!120751))

(declare-fun m!121371 () Bool)

(assert (=> d!29891 m!121371))

(assert (=> d!29891 m!120751))

(assert (=> d!29891 m!121369))

(assert (=> bm!11388 d!29891))

(declare-fun d!29893 () Bool)

(declare-fun e!70337 () Bool)

(assert (=> d!29893 e!70337))

(declare-fun res!53587 () Bool)

(assert (=> d!29893 (=> res!53587 e!70337)))

(declare-fun lt!55466 () Bool)

(assert (=> d!29893 (= res!53587 (not lt!55466))))

(declare-fun lt!55469 () Bool)

(assert (=> d!29893 (= lt!55466 lt!55469)))

(declare-fun lt!55468 () Unit!3301)

(declare-fun e!70338 () Unit!3301)

(assert (=> d!29893 (= lt!55468 e!70338)))

(declare-fun c!18974 () Bool)

(assert (=> d!29893 (= c!18974 lt!55469)))

(assert (=> d!29893 (= lt!55469 (containsKey!161 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!29893 (= (contains!820 lt!55306 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!55466)))

(declare-fun b!108067 () Bool)

(declare-fun lt!55467 () Unit!3301)

(assert (=> b!108067 (= e!70338 lt!55467)))

(assert (=> b!108067 (= lt!55467 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!108067 (isDefined!110 (getValueByKey!158 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108068 () Bool)

(declare-fun Unit!3322 () Unit!3301)

(assert (=> b!108068 (= e!70338 Unit!3322)))

(declare-fun b!108069 () Bool)

(assert (=> b!108069 (= e!70337 (isDefined!110 (getValueByKey!158 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!29893 c!18974) b!108067))

(assert (= (and d!29893 (not c!18974)) b!108068))

(assert (= (and d!29893 (not res!53587)) b!108069))

(assert (=> d!29893 m!120923))

(declare-fun m!121373 () Bool)

(assert (=> d!29893 m!121373))

(assert (=> b!108067 m!120923))

(declare-fun m!121375 () Bool)

(assert (=> b!108067 m!121375))

(assert (=> b!108067 m!120923))

(declare-fun m!121377 () Bool)

(assert (=> b!108067 m!121377))

(assert (=> b!108067 m!121377))

(declare-fun m!121379 () Bool)

(assert (=> b!108067 m!121379))

(assert (=> b!108069 m!120923))

(assert (=> b!108069 m!121377))

(assert (=> b!108069 m!121377))

(assert (=> b!108069 m!121379))

(assert (=> b!107803 d!29893))

(declare-fun d!29895 () Bool)

(assert (=> d!29895 (= (+!142 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55262 (zeroValue!2478 newMap!16) lt!55094 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55472 () Unit!3301)

(declare-fun choose!678 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 V!3233 Int) Unit!3301)

(assert (=> d!29895 (= lt!55472 (choose!678 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) lt!55262 (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) lt!55094 (defaultEntry!2605 newMap!16)))))

(assert (=> d!29895 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!29895 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!48 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) lt!55262 (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) lt!55094 (defaultEntry!2605 newMap!16)) lt!55472)))

(declare-fun bs!4437 () Bool)

(assert (= bs!4437 d!29895))

(assert (=> bs!4437 m!120987))

(assert (=> bs!4437 m!120987))

(declare-fun m!121381 () Bool)

(assert (=> bs!4437 m!121381))

(declare-fun m!121383 () Bool)

(assert (=> bs!4437 m!121383))

(assert (=> bs!4437 m!121179))

(declare-fun m!121385 () Bool)

(assert (=> bs!4437 m!121385))

(assert (=> b!107757 d!29895))

(declare-fun b!108078 () Bool)

(declare-fun e!70345 () Bool)

(declare-fun call!11454 () Bool)

(assert (=> b!108078 (= e!70345 call!11454)))

(declare-fun b!108079 () Bool)

(declare-fun e!70347 () Bool)

(assert (=> b!108079 (= e!70347 call!11454)))

(declare-fun b!108080 () Bool)

(assert (=> b!108080 (= e!70345 e!70347)))

(declare-fun lt!55481 () (_ BitVec 64))

(assert (=> b!108080 (= lt!55481 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55480 () Unit!3301)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4357 (_ BitVec 64) (_ BitVec 32)) Unit!3301)

(assert (=> b!108080 (= lt!55480 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4315 newMap!16) lt!55481 #b00000000000000000000000000000000))))

(assert (=> b!108080 (arrayContainsKey!0 (_keys!4315 newMap!16) lt!55481 #b00000000000000000000000000000000)))

(declare-fun lt!55479 () Unit!3301)

(assert (=> b!108080 (= lt!55479 lt!55480)))

(declare-fun res!53592 () Bool)

(assert (=> b!108080 (= res!53592 (= (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) (_keys!4315 newMap!16) (mask!6763 newMap!16)) (Found!254 #b00000000000000000000000000000000)))))

(assert (=> b!108080 (=> (not res!53592) (not e!70347))))

(declare-fun bm!11451 () Bool)

(assert (=> bm!11451 (= call!11454 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(declare-fun d!29897 () Bool)

(declare-fun res!53593 () Bool)

(declare-fun e!70346 () Bool)

(assert (=> d!29897 (=> res!53593 e!70346)))

(assert (=> d!29897 (= res!53593 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!29897 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4315 newMap!16) (mask!6763 newMap!16)) e!70346)))

(declare-fun b!108081 () Bool)

(assert (=> b!108081 (= e!70346 e!70345)))

(declare-fun c!18977 () Bool)

(assert (=> b!108081 (= c!18977 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!29897 (not res!53593)) b!108081))

(assert (= (and b!108081 c!18977) b!108080))

(assert (= (and b!108081 (not c!18977)) b!108078))

(assert (= (and b!108080 res!53592) b!108079))

(assert (= (or b!108079 b!108078) bm!11451))

(assert (=> b!108080 m!121169))

(declare-fun m!121387 () Bool)

(assert (=> b!108080 m!121387))

(declare-fun m!121389 () Bool)

(assert (=> b!108080 m!121389))

(assert (=> b!108080 m!121169))

(declare-fun m!121391 () Bool)

(assert (=> b!108080 m!121391))

(declare-fun m!121393 () Bool)

(assert (=> bm!11451 m!121393))

(assert (=> b!108081 m!121169))

(assert (=> b!108081 m!121169))

(assert (=> b!108081 m!121175))

(assert (=> b!107890 d!29897))

(declare-fun d!29899 () Bool)

(declare-fun e!70348 () Bool)

(assert (=> d!29899 e!70348))

(declare-fun res!53594 () Bool)

(assert (=> d!29899 (=> res!53594 e!70348)))

(declare-fun lt!55482 () Bool)

(assert (=> d!29899 (= res!53594 (not lt!55482))))

(declare-fun lt!55485 () Bool)

(assert (=> d!29899 (= lt!55482 lt!55485)))

(declare-fun lt!55484 () Unit!3301)

(declare-fun e!70349 () Unit!3301)

(assert (=> d!29899 (= lt!55484 e!70349)))

(declare-fun c!18978 () Bool)

(assert (=> d!29899 (= c!18978 lt!55485)))

(assert (=> d!29899 (= lt!55485 (containsKey!161 (toList!786 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29899 (= (contains!820 lt!55306 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55482)))

(declare-fun b!108082 () Bool)

(declare-fun lt!55483 () Unit!3301)

(assert (=> b!108082 (= e!70349 lt!55483)))

(assert (=> b!108082 (= lt!55483 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108082 (isDefined!110 (getValueByKey!158 (toList!786 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108083 () Bool)

(declare-fun Unit!3323 () Unit!3301)

(assert (=> b!108083 (= e!70349 Unit!3323)))

(declare-fun b!108084 () Bool)

(assert (=> b!108084 (= e!70348 (isDefined!110 (getValueByKey!158 (toList!786 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29899 c!18978) b!108082))

(assert (= (and d!29899 (not c!18978)) b!108083))

(assert (= (and d!29899 (not res!53594)) b!108084))

(declare-fun m!121395 () Bool)

(assert (=> d!29899 m!121395))

(declare-fun m!121397 () Bool)

(assert (=> b!108082 m!121397))

(declare-fun m!121399 () Bool)

(assert (=> b!108082 m!121399))

(assert (=> b!108082 m!121399))

(declare-fun m!121401 () Bool)

(assert (=> b!108082 m!121401))

(assert (=> b!108084 m!121399))

(assert (=> b!108084 m!121399))

(assert (=> b!108084 m!121401))

(assert (=> b!107807 d!29899))

(declare-fun d!29901 () Bool)

(declare-fun e!70350 () Bool)

(assert (=> d!29901 e!70350))

(declare-fun res!53595 () Bool)

(assert (=> d!29901 (=> res!53595 e!70350)))

(declare-fun lt!55486 () Bool)

(assert (=> d!29901 (= res!53595 (not lt!55486))))

(declare-fun lt!55489 () Bool)

(assert (=> d!29901 (= lt!55486 lt!55489)))

(declare-fun lt!55488 () Unit!3301)

(declare-fun e!70351 () Unit!3301)

(assert (=> d!29901 (= lt!55488 e!70351)))

(declare-fun c!18979 () Bool)

(assert (=> d!29901 (= c!18979 lt!55489)))

(assert (=> d!29901 (= lt!55489 (containsKey!161 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29901 (= (contains!820 lt!55384 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55486)))

(declare-fun b!108085 () Bool)

(declare-fun lt!55487 () Unit!3301)

(assert (=> b!108085 (= e!70351 lt!55487)))

(assert (=> b!108085 (= lt!55487 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108085 (isDefined!110 (getValueByKey!158 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108086 () Bool)

(declare-fun Unit!3324 () Unit!3301)

(assert (=> b!108086 (= e!70351 Unit!3324)))

(declare-fun b!108087 () Bool)

(assert (=> b!108087 (= e!70350 (isDefined!110 (getValueByKey!158 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29901 c!18979) b!108085))

(assert (= (and d!29901 (not c!18979)) b!108086))

(assert (= (and d!29901 (not res!53595)) b!108087))

(declare-fun m!121403 () Bool)

(assert (=> d!29901 m!121403))

(declare-fun m!121405 () Bool)

(assert (=> b!108085 m!121405))

(assert (=> b!108085 m!121147))

(assert (=> b!108085 m!121147))

(declare-fun m!121407 () Bool)

(assert (=> b!108085 m!121407))

(assert (=> b!108087 m!121147))

(assert (=> b!108087 m!121147))

(assert (=> b!108087 m!121407))

(assert (=> bm!11426 d!29901))

(declare-fun d!29903 () Bool)

(declare-fun e!70352 () Bool)

(assert (=> d!29903 e!70352))

(declare-fun res!53596 () Bool)

(assert (=> d!29903 (=> res!53596 e!70352)))

(declare-fun lt!55490 () Bool)

(assert (=> d!29903 (= res!53596 (not lt!55490))))

(declare-fun lt!55493 () Bool)

(assert (=> d!29903 (= lt!55490 lt!55493)))

(declare-fun lt!55492 () Unit!3301)

(declare-fun e!70353 () Unit!3301)

(assert (=> d!29903 (= lt!55492 e!70353)))

(declare-fun c!18980 () Bool)

(assert (=> d!29903 (= c!18980 lt!55493)))

(assert (=> d!29903 (= lt!55493 (containsKey!161 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55377))))

(assert (=> d!29903 (= (contains!820 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55377) lt!55490)))

(declare-fun b!108088 () Bool)

(declare-fun lt!55491 () Unit!3301)

(assert (=> b!108088 (= e!70353 lt!55491)))

(assert (=> b!108088 (= lt!55491 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55377))))

(assert (=> b!108088 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55377))))

(declare-fun b!108089 () Bool)

(declare-fun Unit!3325 () Unit!3301)

(assert (=> b!108089 (= e!70353 Unit!3325)))

(declare-fun b!108090 () Bool)

(assert (=> b!108090 (= e!70352 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55377)))))

(assert (= (and d!29903 c!18980) b!108088))

(assert (= (and d!29903 (not c!18980)) b!108089))

(assert (= (and d!29903 (not res!53596)) b!108090))

(declare-fun m!121409 () Bool)

(assert (=> d!29903 m!121409))

(declare-fun m!121411 () Bool)

(assert (=> b!108088 m!121411))

(declare-fun m!121413 () Bool)

(assert (=> b!108088 m!121413))

(assert (=> b!108088 m!121413))

(declare-fun m!121415 () Bool)

(assert (=> b!108088 m!121415))

(assert (=> b!108090 m!121413))

(assert (=> b!108090 m!121413))

(assert (=> b!108090 m!121415))

(assert (=> b!107874 d!29903))

(declare-fun d!29905 () Bool)

(declare-fun e!70354 () Bool)

(assert (=> d!29905 e!70354))

(declare-fun res!53598 () Bool)

(assert (=> d!29905 (=> (not res!53598) (not e!70354))))

(declare-fun lt!55497 () ListLongMap!1541)

(assert (=> d!29905 (= res!53598 (contains!820 lt!55497 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55496 () List!1604)

(assert (=> d!29905 (= lt!55497 (ListLongMap!1542 lt!55496))))

(declare-fun lt!55494 () Unit!3301)

(declare-fun lt!55495 () Unit!3301)

(assert (=> d!29905 (= lt!55494 lt!55495)))

(assert (=> d!29905 (= (getValueByKey!158 lt!55496 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29905 (= lt!55495 (lemmaContainsTupThenGetReturnValue!74 lt!55496 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29905 (= lt!55496 (insertStrictlySorted!77 (toList!786 lt!55371) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29905 (= (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55497)))

(declare-fun b!108091 () Bool)

(declare-fun res!53597 () Bool)

(assert (=> b!108091 (=> (not res!53597) (not e!70354))))

(assert (=> b!108091 (= res!53597 (= (getValueByKey!158 (toList!786 lt!55497) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108092 () Bool)

(assert (=> b!108092 (= e!70354 (contains!823 (toList!786 lt!55497) (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29905 res!53598) b!108091))

(assert (= (and b!108091 res!53597) b!108092))

(declare-fun m!121417 () Bool)

(assert (=> d!29905 m!121417))

(declare-fun m!121419 () Bool)

(assert (=> d!29905 m!121419))

(declare-fun m!121421 () Bool)

(assert (=> d!29905 m!121421))

(declare-fun m!121423 () Bool)

(assert (=> d!29905 m!121423))

(declare-fun m!121425 () Bool)

(assert (=> b!108091 m!121425))

(declare-fun m!121427 () Bool)

(assert (=> b!108092 m!121427))

(assert (=> b!107874 d!29905))

(assert (=> b!107874 d!29811))

(declare-fun d!29907 () Bool)

(assert (=> d!29907 (= (apply!99 lt!55371 lt!55385) (get!1350 (getValueByKey!158 (toList!786 lt!55371) lt!55385)))))

(declare-fun bs!4438 () Bool)

(assert (= bs!4438 d!29907))

(declare-fun m!121429 () Bool)

(assert (=> bs!4438 m!121429))

(assert (=> bs!4438 m!121429))

(declare-fun m!121431 () Bool)

(assert (=> bs!4438 m!121431))

(assert (=> b!107874 d!29907))

(declare-fun d!29909 () Bool)

(assert (=> d!29909 (= (apply!99 lt!55373 lt!55381) (get!1350 (getValueByKey!158 (toList!786 lt!55373) lt!55381)))))

(declare-fun bs!4439 () Bool)

(assert (= bs!4439 d!29909))

(declare-fun m!121433 () Bool)

(assert (=> bs!4439 m!121433))

(assert (=> bs!4439 m!121433))

(declare-fun m!121435 () Bool)

(assert (=> bs!4439 m!121435))

(assert (=> b!107874 d!29909))

(declare-fun d!29911 () Bool)

(assert (=> d!29911 (= (apply!99 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55372) (apply!99 lt!55369 lt!55372))))

(declare-fun lt!55500 () Unit!3301)

(declare-fun choose!679 (ListLongMap!1541 (_ BitVec 64) V!3233 (_ BitVec 64)) Unit!3301)

(assert (=> d!29911 (= lt!55500 (choose!679 lt!55369 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55372))))

(declare-fun e!70357 () Bool)

(assert (=> d!29911 e!70357))

(declare-fun res!53601 () Bool)

(assert (=> d!29911 (=> (not res!53601) (not e!70357))))

(assert (=> d!29911 (= res!53601 (contains!820 lt!55369 lt!55372))))

(assert (=> d!29911 (= (addApplyDifferent!75 lt!55369 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55372) lt!55500)))

(declare-fun b!108096 () Bool)

(assert (=> b!108096 (= e!70357 (not (= lt!55372 lt!55370)))))

(assert (= (and d!29911 res!53601) b!108096))

(assert (=> d!29911 m!121121))

(assert (=> d!29911 m!121119))

(declare-fun m!121437 () Bool)

(assert (=> d!29911 m!121437))

(declare-fun m!121439 () Bool)

(assert (=> d!29911 m!121439))

(assert (=> d!29911 m!121119))

(assert (=> d!29911 m!121127))

(assert (=> b!107874 d!29911))

(declare-fun d!29913 () Bool)

(assert (=> d!29913 (= (apply!99 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55385) (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55385)))))

(declare-fun bs!4440 () Bool)

(assert (= bs!4440 d!29913))

(declare-fun m!121441 () Bool)

(assert (=> bs!4440 m!121441))

(assert (=> bs!4440 m!121441))

(declare-fun m!121443 () Bool)

(assert (=> bs!4440 m!121443))

(assert (=> b!107874 d!29913))

(declare-fun d!29915 () Bool)

(assert (=> d!29915 (contains!820 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55377)))

(declare-fun lt!55503 () Unit!3301)

(declare-fun choose!680 (ListLongMap!1541 (_ BitVec 64) V!3233 (_ BitVec 64)) Unit!3301)

(assert (=> d!29915 (= lt!55503 (choose!680 lt!55375 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55377))))

(assert (=> d!29915 (contains!820 lt!55375 lt!55377)))

(assert (=> d!29915 (= (addStillContains!75 lt!55375 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55377) lt!55503)))

(declare-fun bs!4441 () Bool)

(assert (= bs!4441 d!29915))

(assert (=> bs!4441 m!121123))

(assert (=> bs!4441 m!121123))

(assert (=> bs!4441 m!121125))

(declare-fun m!121445 () Bool)

(assert (=> bs!4441 m!121445))

(declare-fun m!121447 () Bool)

(assert (=> bs!4441 m!121447))

(assert (=> b!107874 d!29915))

(declare-fun d!29917 () Bool)

(declare-fun e!70358 () Bool)

(assert (=> d!29917 e!70358))

(declare-fun res!53603 () Bool)

(assert (=> d!29917 (=> (not res!53603) (not e!70358))))

(declare-fun lt!55507 () ListLongMap!1541)

(assert (=> d!29917 (= res!53603 (contains!820 lt!55507 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55506 () List!1604)

(assert (=> d!29917 (= lt!55507 (ListLongMap!1542 lt!55506))))

(declare-fun lt!55504 () Unit!3301)

(declare-fun lt!55505 () Unit!3301)

(assert (=> d!29917 (= lt!55504 lt!55505)))

(assert (=> d!29917 (= (getValueByKey!158 lt!55506 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29917 (= lt!55505 (lemmaContainsTupThenGetReturnValue!74 lt!55506 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29917 (= lt!55506 (insertStrictlySorted!77 (toList!786 lt!55369) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29917 (= (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55507)))

(declare-fun b!108098 () Bool)

(declare-fun res!53602 () Bool)

(assert (=> b!108098 (=> (not res!53602) (not e!70358))))

(assert (=> b!108098 (= res!53602 (= (getValueByKey!158 (toList!786 lt!55507) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108099 () Bool)

(assert (=> b!108099 (= e!70358 (contains!823 (toList!786 lt!55507) (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29917 res!53603) b!108098))

(assert (= (and b!108098 res!53602) b!108099))

(declare-fun m!121449 () Bool)

(assert (=> d!29917 m!121449))

(declare-fun m!121451 () Bool)

(assert (=> d!29917 m!121451))

(declare-fun m!121453 () Bool)

(assert (=> d!29917 m!121453))

(declare-fun m!121455 () Bool)

(assert (=> d!29917 m!121455))

(declare-fun m!121457 () Bool)

(assert (=> b!108098 m!121457))

(declare-fun m!121459 () Bool)

(assert (=> b!108099 m!121459))

(assert (=> b!107874 d!29917))

(declare-fun d!29919 () Bool)

(assert (=> d!29919 (= (apply!99 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55381) (apply!99 lt!55373 lt!55381))))

(declare-fun lt!55508 () Unit!3301)

(assert (=> d!29919 (= lt!55508 (choose!679 lt!55373 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55381))))

(declare-fun e!70359 () Bool)

(assert (=> d!29919 e!70359))

(declare-fun res!53604 () Bool)

(assert (=> d!29919 (=> (not res!53604) (not e!70359))))

(assert (=> d!29919 (= res!53604 (contains!820 lt!55373 lt!55381))))

(assert (=> d!29919 (= (addApplyDifferent!75 lt!55373 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55381) lt!55508)))

(declare-fun b!108100 () Bool)

(assert (=> b!108100 (= e!70359 (not (= lt!55381 lt!55378)))))

(assert (= (and d!29919 res!53604) b!108100))

(assert (=> d!29919 m!121109))

(assert (=> d!29919 m!121103))

(declare-fun m!121461 () Bool)

(assert (=> d!29919 m!121461))

(declare-fun m!121463 () Bool)

(assert (=> d!29919 m!121463))

(assert (=> d!29919 m!121103))

(assert (=> d!29919 m!121105))

(assert (=> b!107874 d!29919))

(declare-fun d!29921 () Bool)

(declare-fun e!70360 () Bool)

(assert (=> d!29921 e!70360))

(declare-fun res!53606 () Bool)

(assert (=> d!29921 (=> (not res!53606) (not e!70360))))

(declare-fun lt!55512 () ListLongMap!1541)

(assert (=> d!29921 (= res!53606 (contains!820 lt!55512 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55511 () List!1604)

(assert (=> d!29921 (= lt!55512 (ListLongMap!1542 lt!55511))))

(declare-fun lt!55509 () Unit!3301)

(declare-fun lt!55510 () Unit!3301)

(assert (=> d!29921 (= lt!55509 lt!55510)))

(assert (=> d!29921 (= (getValueByKey!158 lt!55511 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29921 (= lt!55510 (lemmaContainsTupThenGetReturnValue!74 lt!55511 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29921 (= lt!55511 (insertStrictlySorted!77 (toList!786 lt!55373) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29921 (= (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55512)))

(declare-fun b!108101 () Bool)

(declare-fun res!53605 () Bool)

(assert (=> b!108101 (=> (not res!53605) (not e!70360))))

(assert (=> b!108101 (= res!53605 (= (getValueByKey!158 (toList!786 lt!55512) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108102 () Bool)

(assert (=> b!108102 (= e!70360 (contains!823 (toList!786 lt!55512) (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29921 res!53606) b!108101))

(assert (= (and b!108101 res!53605) b!108102))

(declare-fun m!121465 () Bool)

(assert (=> d!29921 m!121465))

(declare-fun m!121467 () Bool)

(assert (=> d!29921 m!121467))

(declare-fun m!121469 () Bool)

(assert (=> d!29921 m!121469))

(declare-fun m!121471 () Bool)

(assert (=> d!29921 m!121471))

(declare-fun m!121473 () Bool)

(assert (=> b!108101 m!121473))

(declare-fun m!121475 () Bool)

(assert (=> b!108102 m!121475))

(assert (=> b!107874 d!29921))

(declare-fun d!29923 () Bool)

(assert (=> d!29923 (= (apply!99 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55381) (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55381)))))

(declare-fun bs!4442 () Bool)

(assert (= bs!4442 d!29923))

(declare-fun m!121477 () Bool)

(assert (=> bs!4442 m!121477))

(assert (=> bs!4442 m!121477))

(declare-fun m!121479 () Bool)

(assert (=> bs!4442 m!121479))

(assert (=> b!107874 d!29923))

(declare-fun d!29925 () Bool)

(assert (=> d!29925 (= (apply!99 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55372) (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55372)))))

(declare-fun bs!4443 () Bool)

(assert (= bs!4443 d!29925))

(declare-fun m!121481 () Bool)

(assert (=> bs!4443 m!121481))

(assert (=> bs!4443 m!121481))

(declare-fun m!121483 () Bool)

(assert (=> bs!4443 m!121483))

(assert (=> b!107874 d!29925))

(declare-fun d!29927 () Bool)

(assert (=> d!29927 (= (apply!99 lt!55369 lt!55372) (get!1350 (getValueByKey!158 (toList!786 lt!55369) lt!55372)))))

(declare-fun bs!4444 () Bool)

(assert (= bs!4444 d!29927))

(declare-fun m!121485 () Bool)

(assert (=> bs!4444 m!121485))

(assert (=> bs!4444 m!121485))

(declare-fun m!121487 () Bool)

(assert (=> bs!4444 m!121487))

(assert (=> b!107874 d!29927))

(declare-fun d!29929 () Bool)

(assert (=> d!29929 (= (apply!99 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55385) (apply!99 lt!55371 lt!55385))))

(declare-fun lt!55513 () Unit!3301)

(assert (=> d!29929 (= lt!55513 (choose!679 lt!55371 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55385))))

(declare-fun e!70361 () Bool)

(assert (=> d!29929 e!70361))

(declare-fun res!53607 () Bool)

(assert (=> d!29929 (=> (not res!53607) (not e!70361))))

(assert (=> d!29929 (= res!53607 (contains!820 lt!55371 lt!55385))))

(assert (=> d!29929 (= (addApplyDifferent!75 lt!55371 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55385) lt!55513)))

(declare-fun b!108103 () Bool)

(assert (=> b!108103 (= e!70361 (not (= lt!55385 lt!55390)))))

(assert (= (and d!29929 res!53607) b!108103))

(assert (=> d!29929 m!121101))

(assert (=> d!29929 m!121115))

(declare-fun m!121489 () Bool)

(assert (=> d!29929 m!121489))

(declare-fun m!121491 () Bool)

(assert (=> d!29929 m!121491))

(assert (=> d!29929 m!121115))

(assert (=> d!29929 m!121117))

(assert (=> b!107874 d!29929))

(declare-fun d!29931 () Bool)

(declare-fun e!70362 () Bool)

(assert (=> d!29931 e!70362))

(declare-fun res!53609 () Bool)

(assert (=> d!29931 (=> (not res!53609) (not e!70362))))

(declare-fun lt!55517 () ListLongMap!1541)

(assert (=> d!29931 (= res!53609 (contains!820 lt!55517 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55516 () List!1604)

(assert (=> d!29931 (= lt!55517 (ListLongMap!1542 lt!55516))))

(declare-fun lt!55514 () Unit!3301)

(declare-fun lt!55515 () Unit!3301)

(assert (=> d!29931 (= lt!55514 lt!55515)))

(assert (=> d!29931 (= (getValueByKey!158 lt!55516 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29931 (= lt!55515 (lemmaContainsTupThenGetReturnValue!74 lt!55516 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29931 (= lt!55516 (insertStrictlySorted!77 (toList!786 lt!55375) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29931 (= (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55517)))

(declare-fun b!108104 () Bool)

(declare-fun res!53608 () Bool)

(assert (=> b!108104 (=> (not res!53608) (not e!70362))))

(assert (=> b!108104 (= res!53608 (= (getValueByKey!158 (toList!786 lt!55517) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108105 () Bool)

(assert (=> b!108105 (= e!70362 (contains!823 (toList!786 lt!55517) (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29931 res!53609) b!108104))

(assert (= (and b!108104 res!53608) b!108105))

(declare-fun m!121493 () Bool)

(assert (=> d!29931 m!121493))

(declare-fun m!121495 () Bool)

(assert (=> d!29931 m!121495))

(declare-fun m!121497 () Bool)

(assert (=> d!29931 m!121497))

(declare-fun m!121499 () Bool)

(assert (=> d!29931 m!121499))

(declare-fun m!121501 () Bool)

(assert (=> b!108104 m!121501))

(declare-fun m!121503 () Bool)

(assert (=> b!108105 m!121503))

(assert (=> b!107874 d!29931))

(declare-fun d!29933 () Bool)

(assert (=> d!29933 (= (apply!99 lt!55306 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1350 (getValueByKey!158 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4445 () Bool)

(assert (= bs!4445 d!29933))

(assert (=> bs!4445 m!120923))

(assert (=> bs!4445 m!121377))

(assert (=> bs!4445 m!121377))

(declare-fun m!121505 () Bool)

(assert (=> bs!4445 m!121505))

(assert (=> b!107805 d!29933))

(declare-fun d!29935 () Bool)

(declare-fun c!18981 () Bool)

(assert (=> d!29935 (= c!18981 ((_ is ValueCellFull!1001) (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!70363 () V!3233)

(assert (=> d!29935 (= (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70363)))

(declare-fun b!108106 () Bool)

(assert (=> b!108106 (= e!70363 (get!1348 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108107 () Bool)

(assert (=> b!108107 (= e!70363 (get!1349 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29935 c!18981) b!108106))

(assert (= (and d!29935 (not c!18981)) b!108107))

(assert (=> b!108106 m!121037))

(assert (=> b!108106 m!120755))

(declare-fun m!121507 () Bool)

(assert (=> b!108106 m!121507))

(assert (=> b!108107 m!121037))

(assert (=> b!108107 m!120755))

(declare-fun m!121509 () Bool)

(assert (=> b!108107 m!121509))

(assert (=> b!107805 d!29935))

(declare-fun d!29937 () Bool)

(declare-fun lt!55518 () Bool)

(assert (=> d!29937 (= lt!55518 (select (content!112 (toList!786 lt!55320)) lt!55092))))

(declare-fun e!70364 () Bool)

(assert (=> d!29937 (= lt!55518 e!70364)))

(declare-fun res!53611 () Bool)

(assert (=> d!29937 (=> (not res!53611) (not e!70364))))

(assert (=> d!29937 (= res!53611 ((_ is Cons!1600) (toList!786 lt!55320)))))

(assert (=> d!29937 (= (contains!823 (toList!786 lt!55320) lt!55092) lt!55518)))

(declare-fun b!108108 () Bool)

(declare-fun e!70365 () Bool)

(assert (=> b!108108 (= e!70364 e!70365)))

(declare-fun res!53610 () Bool)

(assert (=> b!108108 (=> res!53610 e!70365)))

(assert (=> b!108108 (= res!53610 (= (h!2198 (toList!786 lt!55320)) lt!55092))))

(declare-fun b!108109 () Bool)

(assert (=> b!108109 (= e!70365 (contains!823 (t!5712 (toList!786 lt!55320)) lt!55092))))

(assert (= (and d!29937 res!53611) b!108108))

(assert (= (and b!108108 (not res!53610)) b!108109))

(declare-fun m!121511 () Bool)

(assert (=> d!29937 m!121511))

(declare-fun m!121513 () Bool)

(assert (=> d!29937 m!121513))

(declare-fun m!121515 () Bool)

(assert (=> b!108109 m!121515))

(assert (=> b!107817 d!29937))

(declare-fun d!29939 () Bool)

(declare-fun e!70366 () Bool)

(assert (=> d!29939 e!70366))

(declare-fun res!53613 () Bool)

(assert (=> d!29939 (=> (not res!53613) (not e!70366))))

(declare-fun lt!55522 () ListLongMap!1541)

(assert (=> d!29939 (= res!53613 (contains!820 lt!55522 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!55521 () List!1604)

(assert (=> d!29939 (= lt!55522 (ListLongMap!1542 lt!55521))))

(declare-fun lt!55519 () Unit!3301)

(declare-fun lt!55520 () Unit!3301)

(assert (=> d!29939 (= lt!55519 lt!55520)))

(assert (=> d!29939 (= (getValueByKey!158 lt!55521 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29939 (= lt!55520 (lemmaContainsTupThenGetReturnValue!74 lt!55521 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29939 (= lt!55521 (insertStrictlySorted!77 (toList!786 call!11408) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29939 (= (+!142 call!11408 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!55522)))

(declare-fun b!108110 () Bool)

(declare-fun res!53612 () Bool)

(assert (=> b!108110 (=> (not res!53612) (not e!70366))))

(assert (=> b!108110 (= res!53612 (= (getValueByKey!158 (toList!786 lt!55522) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!108111 () Bool)

(assert (=> b!108111 (= e!70366 (contains!823 (toList!786 lt!55522) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29939 res!53613) b!108110))

(assert (= (and b!108110 res!53612) b!108111))

(declare-fun m!121517 () Bool)

(assert (=> d!29939 m!121517))

(declare-fun m!121519 () Bool)

(assert (=> d!29939 m!121519))

(declare-fun m!121521 () Bool)

(assert (=> d!29939 m!121521))

(declare-fun m!121523 () Bool)

(assert (=> d!29939 m!121523))

(declare-fun m!121525 () Bool)

(assert (=> b!108110 m!121525))

(declare-fun m!121527 () Bool)

(assert (=> b!108111 m!121527))

(assert (=> b!107809 d!29939))

(assert (=> b!107809 d!29935))

(declare-fun d!29941 () Bool)

(assert (=> d!29941 (not (contains!820 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)) lt!55308))))

(declare-fun lt!55525 () Unit!3301)

(declare-fun choose!681 (ListLongMap!1541 (_ BitVec 64) V!3233 (_ BitVec 64)) Unit!3301)

(assert (=> d!29941 (= lt!55525 (choose!681 lt!55309 lt!55312 lt!55307 lt!55308))))

(declare-fun e!70369 () Bool)

(assert (=> d!29941 e!70369))

(declare-fun res!53616 () Bool)

(assert (=> d!29941 (=> (not res!53616) (not e!70369))))

(assert (=> d!29941 (= res!53616 (not (contains!820 lt!55309 lt!55308)))))

(assert (=> d!29941 (= (addStillNotContains!49 lt!55309 lt!55312 lt!55307 lt!55308) lt!55525)))

(declare-fun b!108115 () Bool)

(assert (=> b!108115 (= e!70369 (not (= lt!55312 lt!55308)))))

(assert (= (and d!29941 res!53616) b!108115))

(assert (=> d!29941 m!121033))

(assert (=> d!29941 m!121033))

(assert (=> d!29941 m!121035))

(declare-fun m!121529 () Bool)

(assert (=> d!29941 m!121529))

(declare-fun m!121531 () Bool)

(assert (=> d!29941 m!121531))

(assert (=> b!107809 d!29941))

(declare-fun d!29943 () Bool)

(declare-fun e!70370 () Bool)

(assert (=> d!29943 e!70370))

(declare-fun res!53618 () Bool)

(assert (=> d!29943 (=> (not res!53618) (not e!70370))))

(declare-fun lt!55529 () ListLongMap!1541)

(assert (=> d!29943 (= res!53618 (contains!820 lt!55529 (_1!1199 (tuple2!2377 lt!55312 lt!55307))))))

(declare-fun lt!55528 () List!1604)

(assert (=> d!29943 (= lt!55529 (ListLongMap!1542 lt!55528))))

(declare-fun lt!55526 () Unit!3301)

(declare-fun lt!55527 () Unit!3301)

(assert (=> d!29943 (= lt!55526 lt!55527)))

(assert (=> d!29943 (= (getValueByKey!158 lt!55528 (_1!1199 (tuple2!2377 lt!55312 lt!55307))) (Some!163 (_2!1199 (tuple2!2377 lt!55312 lt!55307))))))

(assert (=> d!29943 (= lt!55527 (lemmaContainsTupThenGetReturnValue!74 lt!55528 (_1!1199 (tuple2!2377 lt!55312 lt!55307)) (_2!1199 (tuple2!2377 lt!55312 lt!55307))))))

(assert (=> d!29943 (= lt!55528 (insertStrictlySorted!77 (toList!786 lt!55309) (_1!1199 (tuple2!2377 lt!55312 lt!55307)) (_2!1199 (tuple2!2377 lt!55312 lt!55307))))))

(assert (=> d!29943 (= (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)) lt!55529)))

(declare-fun b!108116 () Bool)

(declare-fun res!53617 () Bool)

(assert (=> b!108116 (=> (not res!53617) (not e!70370))))

(assert (=> b!108116 (= res!53617 (= (getValueByKey!158 (toList!786 lt!55529) (_1!1199 (tuple2!2377 lt!55312 lt!55307))) (Some!163 (_2!1199 (tuple2!2377 lt!55312 lt!55307)))))))

(declare-fun b!108117 () Bool)

(assert (=> b!108117 (= e!70370 (contains!823 (toList!786 lt!55529) (tuple2!2377 lt!55312 lt!55307)))))

(assert (= (and d!29943 res!53618) b!108116))

(assert (= (and b!108116 res!53617) b!108117))

(declare-fun m!121533 () Bool)

(assert (=> d!29943 m!121533))

(declare-fun m!121535 () Bool)

(assert (=> d!29943 m!121535))

(declare-fun m!121537 () Bool)

(assert (=> d!29943 m!121537))

(declare-fun m!121539 () Bool)

(assert (=> d!29943 m!121539))

(declare-fun m!121541 () Bool)

(assert (=> b!108116 m!121541))

(declare-fun m!121543 () Bool)

(assert (=> b!108117 m!121543))

(assert (=> b!107809 d!29943))

(declare-fun d!29945 () Bool)

(declare-fun e!70371 () Bool)

(assert (=> d!29945 e!70371))

(declare-fun res!53619 () Bool)

(assert (=> d!29945 (=> res!53619 e!70371)))

(declare-fun lt!55530 () Bool)

(assert (=> d!29945 (= res!53619 (not lt!55530))))

(declare-fun lt!55533 () Bool)

(assert (=> d!29945 (= lt!55530 lt!55533)))

(declare-fun lt!55532 () Unit!3301)

(declare-fun e!70372 () Unit!3301)

(assert (=> d!29945 (= lt!55532 e!70372)))

(declare-fun c!18982 () Bool)

(assert (=> d!29945 (= c!18982 lt!55533)))

(assert (=> d!29945 (= lt!55533 (containsKey!161 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))) lt!55308))))

(assert (=> d!29945 (= (contains!820 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)) lt!55308) lt!55530)))

(declare-fun b!108118 () Bool)

(declare-fun lt!55531 () Unit!3301)

(assert (=> b!108118 (= e!70372 lt!55531)))

(assert (=> b!108118 (= lt!55531 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))) lt!55308))))

(assert (=> b!108118 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))) lt!55308))))

(declare-fun b!108119 () Bool)

(declare-fun Unit!3326 () Unit!3301)

(assert (=> b!108119 (= e!70372 Unit!3326)))

(declare-fun b!108120 () Bool)

(assert (=> b!108120 (= e!70371 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))) lt!55308)))))

(assert (= (and d!29945 c!18982) b!108118))

(assert (= (and d!29945 (not c!18982)) b!108119))

(assert (= (and d!29945 (not res!53619)) b!108120))

(declare-fun m!121545 () Bool)

(assert (=> d!29945 m!121545))

(declare-fun m!121547 () Bool)

(assert (=> b!108118 m!121547))

(declare-fun m!121549 () Bool)

(assert (=> b!108118 m!121549))

(assert (=> b!108118 m!121549))

(declare-fun m!121551 () Bool)

(assert (=> b!108118 m!121551))

(assert (=> b!108120 m!121549))

(assert (=> b!108120 m!121549))

(assert (=> b!108120 m!121551))

(assert (=> b!107809 d!29945))

(declare-fun d!29947 () Bool)

(declare-fun lt!55534 () Bool)

(assert (=> d!29947 (= lt!55534 (select (content!112 (toList!786 lt!55291)) lt!55092))))

(declare-fun e!70373 () Bool)

(assert (=> d!29947 (= lt!55534 e!70373)))

(declare-fun res!53621 () Bool)

(assert (=> d!29947 (=> (not res!53621) (not e!70373))))

(assert (=> d!29947 (= res!53621 ((_ is Cons!1600) (toList!786 lt!55291)))))

(assert (=> d!29947 (= (contains!823 (toList!786 lt!55291) lt!55092) lt!55534)))

(declare-fun b!108121 () Bool)

(declare-fun e!70374 () Bool)

(assert (=> b!108121 (= e!70373 e!70374)))

(declare-fun res!53620 () Bool)

(assert (=> b!108121 (=> res!53620 e!70374)))

(assert (=> b!108121 (= res!53620 (= (h!2198 (toList!786 lt!55291)) lt!55092))))

(declare-fun b!108122 () Bool)

(assert (=> b!108122 (= e!70374 (contains!823 (t!5712 (toList!786 lt!55291)) lt!55092))))

(assert (= (and d!29947 res!53621) b!108121))

(assert (= (and b!108121 (not res!53620)) b!108122))

(declare-fun m!121553 () Bool)

(assert (=> d!29947 m!121553))

(declare-fun m!121555 () Bool)

(assert (=> d!29947 m!121555))

(declare-fun m!121557 () Bool)

(assert (=> b!108122 m!121557))

(assert (=> b!107777 d!29947))

(assert (=> b!107746 d!29891))

(assert (=> b!107635 d!29889))

(declare-fun d!29949 () Bool)

(declare-fun lt!55535 () Bool)

(assert (=> d!29949 (= lt!55535 (select (content!112 (toList!786 lt!55324)) lt!55093))))

(declare-fun e!70375 () Bool)

(assert (=> d!29949 (= lt!55535 e!70375)))

(declare-fun res!53623 () Bool)

(assert (=> d!29949 (=> (not res!53623) (not e!70375))))

(assert (=> d!29949 (= res!53623 ((_ is Cons!1600) (toList!786 lt!55324)))))

(assert (=> d!29949 (= (contains!823 (toList!786 lt!55324) lt!55093) lt!55535)))

(declare-fun b!108123 () Bool)

(declare-fun e!70376 () Bool)

(assert (=> b!108123 (= e!70375 e!70376)))

(declare-fun res!53622 () Bool)

(assert (=> b!108123 (=> res!53622 e!70376)))

(assert (=> b!108123 (= res!53622 (= (h!2198 (toList!786 lt!55324)) lt!55093))))

(declare-fun b!108124 () Bool)

(assert (=> b!108124 (= e!70376 (contains!823 (t!5712 (toList!786 lt!55324)) lt!55093))))

(assert (= (and d!29949 res!53623) b!108123))

(assert (= (and b!108123 (not res!53622)) b!108124))

(declare-fun m!121559 () Bool)

(assert (=> d!29949 m!121559))

(declare-fun m!121561 () Bool)

(assert (=> d!29949 m!121561))

(declare-fun m!121563 () Bool)

(assert (=> b!108124 m!121563))

(assert (=> b!107819 d!29949))

(declare-fun b!108141 () Bool)

(declare-fun e!70386 () Bool)

(declare-fun call!11459 () Bool)

(assert (=> b!108141 (= e!70386 (not call!11459))))

(declare-fun b!108142 () Bool)

(declare-fun res!53635 () Bool)

(assert (=> b!108142 (=> (not res!53635) (not e!70386))))

(declare-fun call!11460 () Bool)

(assert (=> b!108142 (= res!53635 call!11460)))

(declare-fun e!70385 () Bool)

(assert (=> b!108142 (= e!70385 e!70386)))

(declare-fun b!108143 () Bool)

(declare-fun res!53634 () Bool)

(assert (=> b!108143 (=> (not res!53634) (not e!70386))))

(declare-fun lt!55541 () SeekEntryResult!254)

(assert (=> b!108143 (= res!53634 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3168 lt!55541)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108143 (and (bvsge (index!3168 lt!55541) #b00000000000000000000000000000000) (bvslt (index!3168 lt!55541) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun c!18987 () Bool)

(declare-fun bm!11456 () Bool)

(assert (=> bm!11456 (= call!11460 (inRange!0 (ite c!18987 (index!3165 lt!55541) (index!3168 lt!55541)) (mask!6763 newMap!16)))))

(declare-fun b!108144 () Bool)

(declare-fun e!70387 () Bool)

(declare-fun e!70388 () Bool)

(assert (=> b!108144 (= e!70387 e!70388)))

(declare-fun res!53633 () Bool)

(assert (=> b!108144 (= res!53633 call!11460)))

(assert (=> b!108144 (=> (not res!53633) (not e!70388))))

(declare-fun b!108145 () Bool)

(assert (=> b!108145 (= e!70385 ((_ is Undefined!254) lt!55541))))

(declare-fun d!29951 () Bool)

(assert (=> d!29951 e!70387))

(assert (=> d!29951 (= c!18987 ((_ is MissingZero!254) lt!55541))))

(assert (=> d!29951 (= lt!55541 (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(declare-fun lt!55540 () Unit!3301)

(declare-fun choose!682 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) Int) Unit!3301)

(assert (=> d!29951 (= lt!55540 (choose!682 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)))))

(assert (=> d!29951 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!29951 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)) lt!55540)))

(declare-fun b!108146 () Bool)

(assert (=> b!108146 (= e!70387 e!70385)))

(declare-fun c!18988 () Bool)

(assert (=> b!108146 (= c!18988 ((_ is MissingVacant!254) lt!55541))))

(declare-fun b!108147 () Bool)

(assert (=> b!108147 (and (bvsge (index!3165 lt!55541) #b00000000000000000000000000000000) (bvslt (index!3165 lt!55541) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun res!53632 () Bool)

(assert (=> b!108147 (= res!53632 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3165 lt!55541)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108147 (=> (not res!53632) (not e!70388))))

(declare-fun b!108148 () Bool)

(assert (=> b!108148 (= e!70388 (not call!11459))))

(declare-fun bm!11457 () Bool)

(assert (=> bm!11457 (= call!11459 (arrayContainsKey!0 (_keys!4315 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!29951 c!18987) b!108144))

(assert (= (and d!29951 (not c!18987)) b!108146))

(assert (= (and b!108144 res!53633) b!108147))

(assert (= (and b!108147 res!53632) b!108148))

(assert (= (and b!108146 c!18988) b!108142))

(assert (= (and b!108146 (not c!18988)) b!108145))

(assert (= (and b!108142 res!53635) b!108143))

(assert (= (and b!108143 res!53634) b!108141))

(assert (= (or b!108144 b!108142) bm!11456))

(assert (= (or b!108148 b!108141) bm!11457))

(declare-fun m!121565 () Bool)

(assert (=> b!108143 m!121565))

(declare-fun m!121567 () Bool)

(assert (=> bm!11456 m!121567))

(declare-fun m!121569 () Bool)

(assert (=> b!108147 m!121569))

(assert (=> bm!11457 m!120751))

(assert (=> bm!11457 m!120973))

(assert (=> d!29951 m!120751))

(assert (=> d!29951 m!120969))

(assert (=> d!29951 m!120751))

(declare-fun m!121571 () Bool)

(assert (=> d!29951 m!121571))

(assert (=> d!29951 m!121179))

(assert (=> bm!11390 d!29951))

(declare-fun bm!11458 () Bool)

(declare-fun call!11466 () ListLongMap!1541)

(declare-fun call!11461 () ListLongMap!1541)

(assert (=> bm!11458 (= call!11466 call!11461)))

(declare-fun b!108149 () Bool)

(declare-fun e!70390 () ListLongMap!1541)

(declare-fun e!70400 () ListLongMap!1541)

(assert (=> b!108149 (= e!70390 e!70400)))

(declare-fun c!18990 () Bool)

(assert (=> b!108149 (= c!18990 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11459 () Bool)

(declare-fun call!11463 () ListLongMap!1541)

(declare-fun call!11467 () ListLongMap!1541)

(assert (=> bm!11459 (= call!11463 call!11467)))

(declare-fun b!108150 () Bool)

(declare-fun e!70391 () Bool)

(declare-fun e!70399 () Bool)

(assert (=> b!108150 (= e!70391 e!70399)))

(declare-fun res!53643 () Bool)

(declare-fun call!11465 () Bool)

(assert (=> b!108150 (= res!53643 call!11465)))

(assert (=> b!108150 (=> (not res!53643) (not e!70399))))

(declare-fun bm!11460 () Bool)

(declare-fun call!11464 () Bool)

(declare-fun lt!55557 () ListLongMap!1541)

(assert (=> bm!11460 (= call!11464 (contains!820 lt!55557 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108151 () Bool)

(declare-fun e!70389 () Bool)

(declare-fun e!70392 () Bool)

(assert (=> b!108151 (= e!70389 e!70392)))

(declare-fun res!53644 () Bool)

(assert (=> b!108151 (=> (not res!53644) (not e!70392))))

(assert (=> b!108151 (= res!53644 (contains!820 lt!55557 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108151 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108152 () Bool)

(declare-fun res!53640 () Bool)

(declare-fun e!70401 () Bool)

(assert (=> b!108152 (=> (not res!53640) (not e!70401))))

(assert (=> b!108152 (= res!53640 e!70391)))

(declare-fun c!18989 () Bool)

(assert (=> b!108152 (= c!18989 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11461 () Bool)

(declare-fun call!11462 () ListLongMap!1541)

(assert (=> bm!11461 (= call!11462 call!11463)))

(declare-fun b!108153 () Bool)

(declare-fun e!70397 () Bool)

(assert (=> b!108153 (= e!70397 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108154 () Bool)

(assert (=> b!108154 (= e!70400 call!11466)))

(declare-fun b!108155 () Bool)

(declare-fun e!70393 () Bool)

(assert (=> b!108155 (= e!70401 e!70393)))

(declare-fun c!18991 () Bool)

(assert (=> b!108155 (= c!18991 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11462 () Bool)

(assert (=> bm!11462 (= call!11467 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!108156 () Bool)

(declare-fun e!70395 () ListLongMap!1541)

(assert (=> b!108156 (= e!70395 call!11466)))

(declare-fun b!108157 () Bool)

(declare-fun e!70394 () Unit!3301)

(declare-fun Unit!3327 () Unit!3301)

(assert (=> b!108157 (= e!70394 Unit!3327)))

(declare-fun b!108158 () Bool)

(declare-fun e!70396 () Bool)

(assert (=> b!108158 (= e!70396 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108159 () Bool)

(declare-fun res!53642 () Bool)

(assert (=> b!108159 (=> (not res!53642) (not e!70401))))

(assert (=> b!108159 (= res!53642 e!70389)))

(declare-fun res!53637 () Bool)

(assert (=> b!108159 (=> res!53637 e!70389)))

(assert (=> b!108159 (= res!53637 (not e!70397))))

(declare-fun res!53641 () Bool)

(assert (=> b!108159 (=> (not res!53641) (not e!70397))))

(assert (=> b!108159 (= res!53641 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108160 () Bool)

(declare-fun e!70398 () Bool)

(assert (=> b!108160 (= e!70393 e!70398)))

(declare-fun res!53636 () Bool)

(assert (=> b!108160 (= res!53636 call!11464)))

(assert (=> b!108160 (=> (not res!53636) (not e!70398))))

(declare-fun b!108161 () Bool)

(declare-fun lt!55547 () Unit!3301)

(assert (=> b!108161 (= e!70394 lt!55547)))

(declare-fun lt!55548 () ListLongMap!1541)

(assert (=> b!108161 (= lt!55548 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55552 () (_ BitVec 64))

(assert (=> b!108161 (= lt!55552 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55550 () (_ BitVec 64))

(assert (=> b!108161 (= lt!55550 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55553 () Unit!3301)

(assert (=> b!108161 (= lt!55553 (addStillContains!75 lt!55548 lt!55552 (zeroValue!2478 newMap!16) lt!55550))))

(assert (=> b!108161 (contains!820 (+!142 lt!55548 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16))) lt!55550)))

(declare-fun lt!55560 () Unit!3301)

(assert (=> b!108161 (= lt!55560 lt!55553)))

(declare-fun lt!55546 () ListLongMap!1541)

(assert (=> b!108161 (= lt!55546 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55551 () (_ BitVec 64))

(assert (=> b!108161 (= lt!55551 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55554 () (_ BitVec 64))

(assert (=> b!108161 (= lt!55554 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55556 () Unit!3301)

(assert (=> b!108161 (= lt!55556 (addApplyDifferent!75 lt!55546 lt!55551 (minValue!2478 newMap!16) lt!55554))))

(assert (=> b!108161 (= (apply!99 (+!142 lt!55546 (tuple2!2377 lt!55551 (minValue!2478 newMap!16))) lt!55554) (apply!99 lt!55546 lt!55554))))

(declare-fun lt!55549 () Unit!3301)

(assert (=> b!108161 (= lt!55549 lt!55556)))

(declare-fun lt!55544 () ListLongMap!1541)

(assert (=> b!108161 (= lt!55544 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55563 () (_ BitVec 64))

(assert (=> b!108161 (= lt!55563 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55558 () (_ BitVec 64))

(assert (=> b!108161 (= lt!55558 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55562 () Unit!3301)

(assert (=> b!108161 (= lt!55562 (addApplyDifferent!75 lt!55544 lt!55563 (zeroValue!2478 newMap!16) lt!55558))))

(assert (=> b!108161 (= (apply!99 (+!142 lt!55544 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16))) lt!55558) (apply!99 lt!55544 lt!55558))))

(declare-fun lt!55555 () Unit!3301)

(assert (=> b!108161 (= lt!55555 lt!55562)))

(declare-fun lt!55542 () ListLongMap!1541)

(assert (=> b!108161 (= lt!55542 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55543 () (_ BitVec 64))

(assert (=> b!108161 (= lt!55543 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55545 () (_ BitVec 64))

(assert (=> b!108161 (= lt!55545 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108161 (= lt!55547 (addApplyDifferent!75 lt!55542 lt!55543 (minValue!2478 newMap!16) lt!55545))))

(assert (=> b!108161 (= (apply!99 (+!142 lt!55542 (tuple2!2377 lt!55543 (minValue!2478 newMap!16))) lt!55545) (apply!99 lt!55542 lt!55545))))

(declare-fun c!18993 () Bool)

(declare-fun bm!11463 () Bool)

(assert (=> bm!11463 (= call!11461 (+!142 (ite c!18993 call!11467 (ite c!18990 call!11463 call!11462)) (ite (or c!18993 c!18990) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun bm!11464 () Bool)

(assert (=> bm!11464 (= call!11465 (contains!820 lt!55557 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108162 () Bool)

(assert (=> b!108162 (= e!70398 (= (apply!99 lt!55557 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!108163 () Bool)

(assert (=> b!108163 (= e!70395 call!11462)))

(declare-fun b!108164 () Bool)

(declare-fun c!18994 () Bool)

(assert (=> b!108164 (= c!18994 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108164 (= e!70400 e!70395)))

(declare-fun b!108165 () Bool)

(assert (=> b!108165 (= e!70399 (= (apply!99 lt!55557 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!108166 () Bool)

(assert (=> b!108166 (= e!70393 (not call!11464))))

(declare-fun b!108167 () Bool)

(assert (=> b!108167 (= e!70390 (+!142 call!11461 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun b!108168 () Bool)

(assert (=> b!108168 (= e!70392 (= (apply!99 lt!55557 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108168 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))))))))

(assert (=> b!108168 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108169 () Bool)

(assert (=> b!108169 (= e!70391 (not call!11465))))

(declare-fun d!29953 () Bool)

(assert (=> d!29953 e!70401))

(declare-fun res!53638 () Bool)

(assert (=> d!29953 (=> (not res!53638) (not e!70401))))

(assert (=> d!29953 (= res!53638 (or (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))))

(declare-fun lt!55559 () ListLongMap!1541)

(assert (=> d!29953 (= lt!55557 lt!55559)))

(declare-fun lt!55561 () Unit!3301)

(assert (=> d!29953 (= lt!55561 e!70394)))

(declare-fun c!18992 () Bool)

(assert (=> d!29953 (= c!18992 e!70396)))

(declare-fun res!53639 () Bool)

(assert (=> d!29953 (=> (not res!53639) (not e!70396))))

(assert (=> d!29953 (= res!53639 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!29953 (= lt!55559 e!70390)))

(assert (=> d!29953 (= c!18993 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29953 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!29953 (= (getCurrentListMap!472 (_keys!4315 newMap!16) (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55557)))

(assert (= (and d!29953 c!18993) b!108167))

(assert (= (and d!29953 (not c!18993)) b!108149))

(assert (= (and b!108149 c!18990) b!108154))

(assert (= (and b!108149 (not c!18990)) b!108164))

(assert (= (and b!108164 c!18994) b!108156))

(assert (= (and b!108164 (not c!18994)) b!108163))

(assert (= (or b!108156 b!108163) bm!11461))

(assert (= (or b!108154 bm!11461) bm!11459))

(assert (= (or b!108154 b!108156) bm!11458))

(assert (= (or b!108167 bm!11459) bm!11462))

(assert (= (or b!108167 bm!11458) bm!11463))

(assert (= (and d!29953 res!53639) b!108158))

(assert (= (and d!29953 c!18992) b!108161))

(assert (= (and d!29953 (not c!18992)) b!108157))

(assert (= (and d!29953 res!53638) b!108159))

(assert (= (and b!108159 res!53641) b!108153))

(assert (= (and b!108159 (not res!53637)) b!108151))

(assert (= (and b!108151 res!53644) b!108168))

(assert (= (and b!108159 res!53642) b!108152))

(assert (= (and b!108152 c!18989) b!108150))

(assert (= (and b!108152 (not c!18989)) b!108169))

(assert (= (and b!108150 res!53643) b!108165))

(assert (= (or b!108150 b!108169) bm!11464))

(assert (= (and b!108152 res!53640) b!108155))

(assert (= (and b!108155 c!18991) b!108160))

(assert (= (and b!108155 (not c!18991)) b!108166))

(assert (= (and b!108160 res!53636) b!108162))

(assert (= (or b!108160 b!108166) bm!11460))

(declare-fun b_lambda!4837 () Bool)

(assert (=> (not b_lambda!4837) (not b!108168)))

(assert (=> b!108168 t!5726))

(declare-fun b_and!6669 () Bool)

(assert (= b_and!6665 (and (=> t!5726 result!3505) b_and!6669)))

(assert (=> b!108168 t!5728))

(declare-fun b_and!6671 () Bool)

(assert (= b_and!6667 (and (=> t!5728 result!3507) b_and!6671)))

(declare-fun m!121573 () Bool)

(assert (=> b!108165 m!121573))

(declare-fun m!121575 () Bool)

(assert (=> b!108167 m!121575))

(declare-fun m!121577 () Bool)

(assert (=> bm!11460 m!121577))

(assert (=> b!108151 m!121169))

(assert (=> b!108151 m!121169))

(declare-fun m!121579 () Bool)

(assert (=> b!108151 m!121579))

(declare-fun m!121581 () Bool)

(assert (=> bm!11464 m!121581))

(assert (=> b!108153 m!121169))

(assert (=> b!108153 m!121169))

(assert (=> b!108153 m!121175))

(declare-fun m!121583 () Bool)

(assert (=> b!108162 m!121583))

(assert (=> d!29953 m!121179))

(declare-fun m!121585 () Bool)

(assert (=> b!108161 m!121585))

(declare-fun m!121587 () Bool)

(assert (=> b!108161 m!121587))

(declare-fun m!121589 () Bool)

(assert (=> b!108161 m!121589))

(assert (=> b!108161 m!121169))

(declare-fun m!121591 () Bool)

(assert (=> b!108161 m!121591))

(declare-fun m!121593 () Bool)

(assert (=> b!108161 m!121593))

(declare-fun m!121595 () Bool)

(assert (=> b!108161 m!121595))

(declare-fun m!121597 () Bool)

(assert (=> b!108161 m!121597))

(declare-fun m!121599 () Bool)

(assert (=> b!108161 m!121599))

(declare-fun m!121601 () Bool)

(assert (=> b!108161 m!121601))

(declare-fun m!121603 () Bool)

(assert (=> b!108161 m!121603))

(declare-fun m!121605 () Bool)

(assert (=> b!108161 m!121605))

(declare-fun m!121607 () Bool)

(assert (=> b!108161 m!121607))

(declare-fun m!121609 () Bool)

(assert (=> b!108161 m!121609))

(assert (=> b!108161 m!121603))

(declare-fun m!121611 () Bool)

(assert (=> b!108161 m!121611))

(declare-fun m!121613 () Bool)

(assert (=> b!108161 m!121613))

(assert (=> b!108161 m!121607))

(declare-fun m!121615 () Bool)

(assert (=> b!108161 m!121615))

(assert (=> b!108161 m!121611))

(assert (=> b!108161 m!121591))

(declare-fun m!121617 () Bool)

(assert (=> bm!11463 m!121617))

(assert (=> bm!11462 m!121589))

(assert (=> b!108158 m!121169))

(assert (=> b!108158 m!121169))

(assert (=> b!108158 m!121175))

(declare-fun m!121619 () Bool)

(assert (=> b!108168 m!121619))

(assert (=> b!108168 m!121619))

(assert (=> b!108168 m!121217))

(declare-fun m!121621 () Bool)

(assert (=> b!108168 m!121621))

(assert (=> b!108168 m!121169))

(declare-fun m!121623 () Bool)

(assert (=> b!108168 m!121623))

(assert (=> b!108168 m!121169))

(assert (=> b!108168 m!121217))

(assert (=> bm!11381 d!29953))

(declare-fun d!29955 () Bool)

(declare-fun isEmpty!380 (Option!164) Bool)

(assert (=> d!29955 (= (isDefined!110 (getValueByKey!158 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))) (not (isEmpty!380 (getValueByKey!158 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun bs!4446 () Bool)

(assert (= bs!4446 d!29955))

(assert (=> bs!4446 m!120943))

(declare-fun m!121625 () Bool)

(assert (=> bs!4446 m!121625))

(assert (=> b!107651 d!29955))

(declare-fun b!108173 () Bool)

(declare-fun e!70403 () Option!164)

(assert (=> b!108173 (= e!70403 None!162)))

(declare-fun b!108172 () Bool)

(assert (=> b!108172 (= e!70403 (getValueByKey!158 (t!5712 (toList!786 lt!55099)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108170 () Bool)

(declare-fun e!70402 () Option!164)

(assert (=> b!108170 (= e!70402 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55099)))))))

(declare-fun c!18995 () Bool)

(declare-fun d!29957 () Bool)

(assert (=> d!29957 (= c!18995 (and ((_ is Cons!1600) (toList!786 lt!55099)) (= (_1!1199 (h!2198 (toList!786 lt!55099))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!29957 (= (getValueByKey!158 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70402)))

(declare-fun b!108171 () Bool)

(assert (=> b!108171 (= e!70402 e!70403)))

(declare-fun c!18996 () Bool)

(assert (=> b!108171 (= c!18996 (and ((_ is Cons!1600) (toList!786 lt!55099)) (not (= (_1!1199 (h!2198 (toList!786 lt!55099))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(assert (= (and d!29957 c!18995) b!108170))

(assert (= (and d!29957 (not c!18995)) b!108171))

(assert (= (and b!108171 c!18996) b!108172))

(assert (= (and b!108171 (not c!18996)) b!108173))

(assert (=> b!108172 m!120751))

(declare-fun m!121627 () Bool)

(assert (=> b!108172 m!121627))

(assert (=> b!107651 d!29957))

(declare-fun d!29959 () Bool)

(declare-fun e!70404 () Bool)

(assert (=> d!29959 e!70404))

(declare-fun res!53645 () Bool)

(assert (=> d!29959 (=> res!53645 e!70404)))

(declare-fun lt!55564 () Bool)

(assert (=> d!29959 (= res!53645 (not lt!55564))))

(declare-fun lt!55567 () Bool)

(assert (=> d!29959 (= lt!55564 lt!55567)))

(declare-fun lt!55566 () Unit!3301)

(declare-fun e!70405 () Unit!3301)

(assert (=> d!29959 (= lt!55566 e!70405)))

(declare-fun c!18997 () Bool)

(assert (=> d!29959 (= c!18997 lt!55567)))

(assert (=> d!29959 (= lt!55567 (containsKey!161 (toList!786 lt!55316) (_1!1199 lt!55093)))))

(assert (=> d!29959 (= (contains!820 lt!55316 (_1!1199 lt!55093)) lt!55564)))

(declare-fun b!108174 () Bool)

(declare-fun lt!55565 () Unit!3301)

(assert (=> b!108174 (= e!70405 lt!55565)))

(assert (=> b!108174 (= lt!55565 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55316) (_1!1199 lt!55093)))))

(assert (=> b!108174 (isDefined!110 (getValueByKey!158 (toList!786 lt!55316) (_1!1199 lt!55093)))))

(declare-fun b!108175 () Bool)

(declare-fun Unit!3328 () Unit!3301)

(assert (=> b!108175 (= e!70405 Unit!3328)))

(declare-fun b!108176 () Bool)

(assert (=> b!108176 (= e!70404 (isDefined!110 (getValueByKey!158 (toList!786 lt!55316) (_1!1199 lt!55093))))))

(assert (= (and d!29959 c!18997) b!108174))

(assert (= (and d!29959 (not c!18997)) b!108175))

(assert (= (and d!29959 (not res!53645)) b!108176))

(declare-fun m!121629 () Bool)

(assert (=> d!29959 m!121629))

(declare-fun m!121631 () Bool)

(assert (=> b!108174 m!121631))

(assert (=> b!108174 m!121059))

(assert (=> b!108174 m!121059))

(declare-fun m!121633 () Bool)

(assert (=> b!108174 m!121633))

(assert (=> b!108176 m!121059))

(assert (=> b!108176 m!121059))

(assert (=> b!108176 m!121633))

(assert (=> d!29813 d!29959))

(declare-fun b!108180 () Bool)

(declare-fun e!70407 () Option!164)

(assert (=> b!108180 (= e!70407 None!162)))

(declare-fun b!108179 () Bool)

(assert (=> b!108179 (= e!70407 (getValueByKey!158 (t!5712 lt!55315) (_1!1199 lt!55093)))))

(declare-fun b!108177 () Bool)

(declare-fun e!70406 () Option!164)

(assert (=> b!108177 (= e!70406 (Some!163 (_2!1199 (h!2198 lt!55315))))))

(declare-fun d!29961 () Bool)

(declare-fun c!18998 () Bool)

(assert (=> d!29961 (= c!18998 (and ((_ is Cons!1600) lt!55315) (= (_1!1199 (h!2198 lt!55315)) (_1!1199 lt!55093))))))

(assert (=> d!29961 (= (getValueByKey!158 lt!55315 (_1!1199 lt!55093)) e!70406)))

(declare-fun b!108178 () Bool)

(assert (=> b!108178 (= e!70406 e!70407)))

(declare-fun c!18999 () Bool)

(assert (=> b!108178 (= c!18999 (and ((_ is Cons!1600) lt!55315) (not (= (_1!1199 (h!2198 lt!55315)) (_1!1199 lt!55093)))))))

(assert (= (and d!29961 c!18998) b!108177))

(assert (= (and d!29961 (not c!18998)) b!108178))

(assert (= (and b!108178 c!18999) b!108179))

(assert (= (and b!108178 (not c!18999)) b!108180))

(declare-fun m!121635 () Bool)

(assert (=> b!108179 m!121635))

(assert (=> d!29813 d!29961))

(declare-fun d!29963 () Bool)

(assert (=> d!29963 (= (getValueByKey!158 lt!55315 (_1!1199 lt!55093)) (Some!163 (_2!1199 lt!55093)))))

(declare-fun lt!55568 () Unit!3301)

(assert (=> d!29963 (= lt!55568 (choose!677 lt!55315 (_1!1199 lt!55093) (_2!1199 lt!55093)))))

(declare-fun e!70408 () Bool)

(assert (=> d!29963 e!70408))

(declare-fun res!53646 () Bool)

(assert (=> d!29963 (=> (not res!53646) (not e!70408))))

(assert (=> d!29963 (= res!53646 (isStrictlySorted!297 lt!55315))))

(assert (=> d!29963 (= (lemmaContainsTupThenGetReturnValue!74 lt!55315 (_1!1199 lt!55093) (_2!1199 lt!55093)) lt!55568)))

(declare-fun b!108181 () Bool)

(declare-fun res!53647 () Bool)

(assert (=> b!108181 (=> (not res!53647) (not e!70408))))

(assert (=> b!108181 (= res!53647 (containsKey!161 lt!55315 (_1!1199 lt!55093)))))

(declare-fun b!108182 () Bool)

(assert (=> b!108182 (= e!70408 (contains!823 lt!55315 (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(assert (= (and d!29963 res!53646) b!108181))

(assert (= (and b!108181 res!53647) b!108182))

(assert (=> d!29963 m!121053))

(declare-fun m!121637 () Bool)

(assert (=> d!29963 m!121637))

(declare-fun m!121639 () Bool)

(assert (=> d!29963 m!121639))

(declare-fun m!121641 () Bool)

(assert (=> b!108181 m!121641))

(declare-fun m!121643 () Bool)

(assert (=> b!108182 m!121643))

(assert (=> d!29813 d!29963))

(declare-fun b!108183 () Bool)

(declare-fun e!70410 () List!1604)

(declare-fun call!11470 () List!1604)

(assert (=> b!108183 (= e!70410 call!11470)))

(declare-fun b!108185 () Bool)

(declare-fun e!70409 () List!1604)

(assert (=> b!108185 (= e!70410 e!70409)))

(declare-fun c!19002 () Bool)

(assert (=> b!108185 (= c!19002 (and ((_ is Cons!1600) (toList!786 lt!55096)) (= (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 lt!55093))))))

(declare-fun b!108186 () Bool)

(declare-fun call!11468 () List!1604)

(assert (=> b!108186 (= e!70409 call!11468)))

(declare-fun b!108187 () Bool)

(declare-fun e!70413 () List!1604)

(assert (=> b!108187 (= e!70413 (insertStrictlySorted!77 (t!5712 (toList!786 lt!55096)) (_1!1199 lt!55093) (_2!1199 lt!55093)))))

(declare-fun c!19001 () Bool)

(declare-fun b!108188 () Bool)

(assert (=> b!108188 (= e!70413 (ite c!19002 (t!5712 (toList!786 lt!55096)) (ite c!19001 (Cons!1600 (h!2198 (toList!786 lt!55096)) (t!5712 (toList!786 lt!55096))) Nil!1601)))))

(declare-fun b!108189 () Bool)

(declare-fun e!70411 () Bool)

(declare-fun lt!55569 () List!1604)

(assert (=> b!108189 (= e!70411 (contains!823 lt!55569 (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(declare-fun bm!11465 () Bool)

(assert (=> bm!11465 (= call!11468 call!11470)))

(declare-fun b!108190 () Bool)

(assert (=> b!108190 (= c!19001 (and ((_ is Cons!1600) (toList!786 lt!55096)) (bvsgt (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 lt!55093))))))

(declare-fun e!70412 () List!1604)

(assert (=> b!108190 (= e!70409 e!70412)))

(declare-fun b!108191 () Bool)

(declare-fun call!11469 () List!1604)

(assert (=> b!108191 (= e!70412 call!11469)))

(declare-fun c!19000 () Bool)

(declare-fun bm!11466 () Bool)

(assert (=> bm!11466 (= call!11470 ($colon$colon!81 e!70413 (ite c!19000 (h!2198 (toList!786 lt!55096)) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093)))))))

(declare-fun c!19003 () Bool)

(assert (=> bm!11466 (= c!19003 c!19000)))

(declare-fun b!108184 () Bool)

(declare-fun res!53649 () Bool)

(assert (=> b!108184 (=> (not res!53649) (not e!70411))))

(assert (=> b!108184 (= res!53649 (containsKey!161 lt!55569 (_1!1199 lt!55093)))))

(declare-fun d!29965 () Bool)

(assert (=> d!29965 e!70411))

(declare-fun res!53648 () Bool)

(assert (=> d!29965 (=> (not res!53648) (not e!70411))))

(assert (=> d!29965 (= res!53648 (isStrictlySorted!297 lt!55569))))

(assert (=> d!29965 (= lt!55569 e!70410)))

(assert (=> d!29965 (= c!19000 (and ((_ is Cons!1600) (toList!786 lt!55096)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 lt!55093))))))

(assert (=> d!29965 (isStrictlySorted!297 (toList!786 lt!55096))))

(assert (=> d!29965 (= (insertStrictlySorted!77 (toList!786 lt!55096) (_1!1199 lt!55093) (_2!1199 lt!55093)) lt!55569)))

(declare-fun bm!11467 () Bool)

(assert (=> bm!11467 (= call!11469 call!11468)))

(declare-fun b!108192 () Bool)

(assert (=> b!108192 (= e!70412 call!11469)))

(assert (= (and d!29965 c!19000) b!108183))

(assert (= (and d!29965 (not c!19000)) b!108185))

(assert (= (and b!108185 c!19002) b!108186))

(assert (= (and b!108185 (not c!19002)) b!108190))

(assert (= (and b!108190 c!19001) b!108191))

(assert (= (and b!108190 (not c!19001)) b!108192))

(assert (= (or b!108191 b!108192) bm!11467))

(assert (= (or b!108186 bm!11467) bm!11465))

(assert (= (or b!108183 bm!11465) bm!11466))

(assert (= (and bm!11466 c!19003) b!108187))

(assert (= (and bm!11466 (not c!19003)) b!108188))

(assert (= (and d!29965 res!53648) b!108184))

(assert (= (and b!108184 res!53649) b!108189))

(declare-fun m!121645 () Bool)

(assert (=> d!29965 m!121645))

(assert (=> d!29965 m!121339))

(declare-fun m!121647 () Bool)

(assert (=> bm!11466 m!121647))

(declare-fun m!121649 () Bool)

(assert (=> b!108187 m!121649))

(declare-fun m!121651 () Bool)

(assert (=> b!108189 m!121651))

(declare-fun m!121653 () Bool)

(assert (=> b!108184 m!121653))

(assert (=> d!29813 d!29965))

(declare-fun e!70415 () Bool)

(declare-fun b!108193 () Bool)

(declare-fun lt!55570 () ListLongMap!1541)

(assert (=> b!108193 (= e!70415 (= lt!55570 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108194 () Bool)

(declare-fun e!70414 () Bool)

(declare-fun e!70419 () Bool)

(assert (=> b!108194 (= e!70414 e!70419)))

(assert (=> b!108194 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun res!53651 () Bool)

(assert (=> b!108194 (= res!53651 (contains!820 lt!55570 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!108194 (=> (not res!53651) (not e!70419))))

(declare-fun b!108195 () Bool)

(declare-fun e!70416 () ListLongMap!1541)

(declare-fun e!70417 () ListLongMap!1541)

(assert (=> b!108195 (= e!70416 e!70417)))

(declare-fun c!19004 () Bool)

(assert (=> b!108195 (= c!19004 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun d!29967 () Bool)

(declare-fun e!70418 () Bool)

(assert (=> d!29967 e!70418))

(declare-fun res!53652 () Bool)

(assert (=> d!29967 (=> (not res!53652) (not e!70418))))

(assert (=> d!29967 (= res!53652 (not (contains!820 lt!55570 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29967 (= lt!55570 e!70416)))

(declare-fun c!19005 () Bool)

(assert (=> d!29967 (= c!19005 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!29967 (validMask!0 (mask!6763 (v!2914 (underlying!367 thiss!992))))))

(assert (=> d!29967 (= (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))) lt!55570)))

(declare-fun b!108196 () Bool)

(assert (=> b!108196 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> b!108196 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2323 (_values!2588 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> b!108196 (= e!70419 (= (apply!99 lt!55570 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108197 () Bool)

(assert (=> b!108197 (= e!70418 e!70414)))

(declare-fun c!19006 () Bool)

(declare-fun e!70420 () Bool)

(assert (=> b!108197 (= c!19006 e!70420)))

(declare-fun res!53653 () Bool)

(assert (=> b!108197 (=> (not res!53653) (not e!70420))))

(assert (=> b!108197 (= res!53653 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108198 () Bool)

(declare-fun res!53650 () Bool)

(assert (=> b!108198 (=> (not res!53650) (not e!70418))))

(assert (=> b!108198 (= res!53650 (not (contains!820 lt!55570 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108199 () Bool)

(assert (=> b!108199 (= e!70416 (ListLongMap!1542 Nil!1601))))

(declare-fun b!108200 () Bool)

(declare-fun lt!55574 () Unit!3301)

(declare-fun lt!55575 () Unit!3301)

(assert (=> b!108200 (= lt!55574 lt!55575)))

(declare-fun lt!55573 () ListLongMap!1541)

(declare-fun lt!55576 () (_ BitVec 64))

(declare-fun lt!55571 () V!3233)

(declare-fun lt!55572 () (_ BitVec 64))

(assert (=> b!108200 (not (contains!820 (+!142 lt!55573 (tuple2!2377 lt!55576 lt!55571)) lt!55572))))

(assert (=> b!108200 (= lt!55575 (addStillNotContains!49 lt!55573 lt!55576 lt!55571 lt!55572))))

(assert (=> b!108200 (= lt!55572 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108200 (= lt!55571 (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108200 (= lt!55576 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!11471 () ListLongMap!1541)

(assert (=> b!108200 (= lt!55573 call!11471)))

(assert (=> b!108200 (= e!70417 (+!142 call!11471 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108201 () Bool)

(assert (=> b!108201 (= e!70420 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!108201 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!108202 () Bool)

(assert (=> b!108202 (= e!70414 e!70415)))

(declare-fun c!19007 () Bool)

(assert (=> b!108202 (= c!19007 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun bm!11468 () Bool)

(assert (=> bm!11468 (= call!11471 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!108203 () Bool)

(assert (=> b!108203 (= e!70417 call!11471)))

(declare-fun b!108204 () Bool)

(assert (=> b!108204 (= e!70415 (isEmpty!379 lt!55570))))

(assert (= (and d!29967 c!19005) b!108199))

(assert (= (and d!29967 (not c!19005)) b!108195))

(assert (= (and b!108195 c!19004) b!108200))

(assert (= (and b!108195 (not c!19004)) b!108203))

(assert (= (or b!108200 b!108203) bm!11468))

(assert (= (and d!29967 res!53652) b!108198))

(assert (= (and b!108198 res!53650) b!108197))

(assert (= (and b!108197 res!53653) b!108201))

(assert (= (and b!108197 c!19006) b!108194))

(assert (= (and b!108197 (not c!19006)) b!108202))

(assert (= (and b!108194 res!53651) b!108196))

(assert (= (and b!108202 c!19007) b!108193))

(assert (= (and b!108202 (not c!19007)) b!108204))

(declare-fun b_lambda!4839 () Bool)

(assert (=> (not b_lambda!4839) (not b!108196)))

(assert (=> b!108196 t!5709))

(declare-fun b_and!6673 () Bool)

(assert (= b_and!6669 (and (=> t!5709 result!3485) b_and!6673)))

(assert (=> b!108196 t!5711))

(declare-fun b_and!6675 () Bool)

(assert (= b_and!6671 (and (=> t!5711 result!3489) b_and!6675)))

(declare-fun b_lambda!4841 () Bool)

(assert (=> (not b_lambda!4841) (not b!108200)))

(assert (=> b!108200 t!5709))

(declare-fun b_and!6677 () Bool)

(assert (= b_and!6673 (and (=> t!5709 result!3485) b_and!6677)))

(assert (=> b!108200 t!5711))

(declare-fun b_and!6679 () Bool)

(assert (= b_and!6675 (and (=> t!5711 result!3489) b_and!6679)))

(declare-fun m!121655 () Bool)

(assert (=> b!108204 m!121655))

(declare-fun m!121657 () Bool)

(assert (=> b!108193 m!121657))

(declare-fun m!121659 () Bool)

(assert (=> b!108194 m!121659))

(assert (=> b!108194 m!121659))

(declare-fun m!121661 () Bool)

(assert (=> b!108194 m!121661))

(assert (=> b!108195 m!121659))

(assert (=> b!108195 m!121659))

(declare-fun m!121663 () Bool)

(assert (=> b!108195 m!121663))

(assert (=> bm!11468 m!121657))

(assert (=> b!108201 m!121659))

(assert (=> b!108201 m!121659))

(assert (=> b!108201 m!121663))

(declare-fun m!121665 () Bool)

(assert (=> b!108200 m!121665))

(declare-fun m!121667 () Bool)

(assert (=> b!108200 m!121667))

(declare-fun m!121669 () Bool)

(assert (=> b!108200 m!121669))

(assert (=> b!108200 m!121665))

(declare-fun m!121671 () Bool)

(assert (=> b!108200 m!121671))

(declare-fun m!121673 () Bool)

(assert (=> b!108200 m!121673))

(assert (=> b!108200 m!120755))

(assert (=> b!108200 m!121659))

(assert (=> b!108200 m!121669))

(assert (=> b!108200 m!120755))

(declare-fun m!121675 () Bool)

(assert (=> b!108200 m!121675))

(declare-fun m!121677 () Bool)

(assert (=> b!108198 m!121677))

(declare-fun m!121679 () Bool)

(assert (=> d!29967 m!121679))

(assert (=> d!29967 m!120789))

(assert (=> b!108196 m!121659))

(declare-fun m!121681 () Bool)

(assert (=> b!108196 m!121681))

(assert (=> b!108196 m!121669))

(assert (=> b!108196 m!120755))

(assert (=> b!108196 m!121659))

(assert (=> b!108196 m!121669))

(assert (=> b!108196 m!120755))

(assert (=> b!108196 m!121675))

(assert (=> bm!11405 d!29967))

(declare-fun d!29969 () Bool)

(assert (=> d!29969 (= (get!1348 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2913 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!107641 d!29969))

(assert (=> b!107810 d!29847))

(declare-fun d!29971 () Bool)

(declare-fun e!70421 () Bool)

(assert (=> d!29971 e!70421))

(declare-fun res!53655 () Bool)

(assert (=> d!29971 (=> (not res!53655) (not e!70421))))

(declare-fun lt!55580 () ListLongMap!1541)

(assert (=> d!29971 (= res!53655 (contains!820 lt!55580 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun lt!55579 () List!1604)

(assert (=> d!29971 (= lt!55580 (ListLongMap!1542 lt!55579))))

(declare-fun lt!55577 () Unit!3301)

(declare-fun lt!55578 () Unit!3301)

(assert (=> d!29971 (= lt!55577 lt!55578)))

(assert (=> d!29971 (= (getValueByKey!158 lt!55579 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!29971 (= lt!55578 (lemmaContainsTupThenGetReturnValue!74 lt!55579 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!29971 (= lt!55579 (insertStrictlySorted!77 (toList!786 call!11403) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!29971 (= (+!142 call!11403 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) lt!55580)))

(declare-fun b!108205 () Bool)

(declare-fun res!53654 () Bool)

(assert (=> b!108205 (=> (not res!53654) (not e!70421))))

(assert (=> b!108205 (= res!53654 (= (getValueByKey!158 (toList!786 lt!55580) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!108206 () Bool)

(assert (=> b!108206 (= e!70421 (contains!823 (toList!786 lt!55580) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(assert (= (and d!29971 res!53655) b!108205))

(assert (= (and b!108205 res!53654) b!108206))

(declare-fun m!121683 () Bool)

(assert (=> d!29971 m!121683))

(declare-fun m!121685 () Bool)

(assert (=> d!29971 m!121685))

(declare-fun m!121687 () Bool)

(assert (=> d!29971 m!121687))

(declare-fun m!121689 () Bool)

(assert (=> d!29971 m!121689))

(declare-fun m!121691 () Bool)

(assert (=> b!108205 m!121691))

(declare-fun m!121693 () Bool)

(assert (=> b!108206 m!121693))

(assert (=> b!107735 d!29971))

(declare-fun d!29973 () Bool)

(declare-fun isEmpty!381 (List!1604) Bool)

(assert (=> d!29973 (= (isEmpty!379 lt!55306) (isEmpty!381 (toList!786 lt!55306)))))

(declare-fun bs!4447 () Bool)

(assert (= bs!4447 d!29973))

(declare-fun m!121695 () Bool)

(assert (=> bs!4447 m!121695))

(assert (=> b!107813 d!29973))

(declare-fun d!29975 () Bool)

(declare-fun e!70424 () Bool)

(assert (=> d!29975 e!70424))

(declare-fun c!19010 () Bool)

(assert (=> d!29975 (= c!19010 (and (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!29975 true))

(declare-fun _$29!144 () Unit!3301)

(assert (=> d!29975 (= (choose!674 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))) _$29!144)))

(declare-fun b!108211 () Bool)

(assert (=> b!108211 (= e!70424 (arrayContainsKey!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!108212 () Bool)

(assert (=> b!108212 (= e!70424 (ite (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!29975 c!19010) b!108211))

(assert (= (and d!29975 (not c!19010)) b!108212))

(assert (=> b!108211 m!120751))

(assert (=> b!108211 m!120771))

(assert (=> d!29797 d!29975))

(assert (=> d!29797 d!29815))

(declare-fun d!29977 () Bool)

(declare-fun e!70425 () Bool)

(assert (=> d!29977 e!70425))

(declare-fun res!53656 () Bool)

(assert (=> d!29977 (=> res!53656 e!70425)))

(declare-fun lt!55581 () Bool)

(assert (=> d!29977 (= res!53656 (not lt!55581))))

(declare-fun lt!55584 () Bool)

(assert (=> d!29977 (= lt!55581 lt!55584)))

(declare-fun lt!55583 () Unit!3301)

(declare-fun e!70426 () Unit!3301)

(assert (=> d!29977 (= lt!55583 e!70426)))

(declare-fun c!19011 () Bool)

(assert (=> d!29977 (= c!19011 lt!55584)))

(assert (=> d!29977 (= lt!55584 (containsKey!161 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!29977 (= (contains!820 lt!55384 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!55581)))

(declare-fun b!108213 () Bool)

(declare-fun lt!55582 () Unit!3301)

(assert (=> b!108213 (= e!70426 lt!55582)))

(assert (=> b!108213 (= lt!55582 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!108213 (isDefined!110 (getValueByKey!158 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108214 () Bool)

(declare-fun Unit!3329 () Unit!3301)

(assert (=> b!108214 (= e!70426 Unit!3329)))

(declare-fun b!108215 () Bool)

(assert (=> b!108215 (= e!70425 (isDefined!110 (getValueByKey!158 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!29977 c!19011) b!108213))

(assert (= (and d!29977 (not c!19011)) b!108214))

(assert (= (and d!29977 (not res!53656)) b!108215))

(assert (=> d!29977 m!120923))

(declare-fun m!121697 () Bool)

(assert (=> d!29977 m!121697))

(assert (=> b!108213 m!120923))

(declare-fun m!121699 () Bool)

(assert (=> b!108213 m!121699))

(assert (=> b!108213 m!120923))

(declare-fun m!121701 () Bool)

(assert (=> b!108213 m!121701))

(assert (=> b!108213 m!121701))

(declare-fun m!121703 () Bool)

(assert (=> b!108213 m!121703))

(assert (=> b!108215 m!120923))

(assert (=> b!108215 m!121701))

(assert (=> b!108215 m!121701))

(assert (=> b!108215 m!121703))

(assert (=> b!107864 d!29977))

(assert (=> d!29793 d!29799))

(declare-fun d!29979 () Bool)

(assert (=> d!29979 (arrayNoDuplicates!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) from!355 Nil!1602)))

(assert (=> d!29979 true))

(declare-fun _$71!150 () Unit!3301)

(assert (=> d!29979 (= (choose!39 (_keys!4315 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!150)))

(declare-fun bs!4448 () Bool)

(assert (= bs!4448 d!29979))

(assert (=> bs!4448 m!120767))

(assert (=> d!29793 d!29979))

(declare-fun d!29981 () Bool)

(declare-fun res!53657 () Bool)

(declare-fun e!70427 () Bool)

(assert (=> d!29981 (=> (not res!53657) (not e!70427))))

(assert (=> d!29981 (= res!53657 (simpleValid!75 (v!2914 (underlying!367 thiss!992))))))

(assert (=> d!29981 (= (valid!430 (v!2914 (underlying!367 thiss!992))) e!70427)))

(declare-fun b!108216 () Bool)

(declare-fun res!53658 () Bool)

(assert (=> b!108216 (=> (not res!53658) (not e!70427))))

(assert (=> b!108216 (= res!53658 (= (arrayCountValidKeys!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))) (_size!504 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!108217 () Bool)

(declare-fun res!53659 () Bool)

(assert (=> b!108217 (=> (not res!53659) (not e!70427))))

(assert (=> b!108217 (= res!53659 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!108218 () Bool)

(assert (=> b!108218 (= e!70427 (arrayNoDuplicates!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 Nil!1602))))

(assert (= (and d!29981 res!53657) b!108216))

(assert (= (and b!108216 res!53658) b!108217))

(assert (= (and b!108217 res!53659) b!108218))

(declare-fun m!121705 () Bool)

(assert (=> d!29981 m!121705))

(declare-fun m!121707 () Bool)

(assert (=> b!108216 m!121707))

(declare-fun m!121709 () Bool)

(assert (=> b!108217 m!121709))

(declare-fun m!121711 () Bool)

(assert (=> b!108218 m!121711))

(assert (=> d!29829 d!29981))

(declare-fun d!29983 () Bool)

(assert (=> d!29983 (= (apply!99 lt!55384 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1350 (getValueByKey!158 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4449 () Bool)

(assert (= bs!4449 d!29983))

(assert (=> bs!4449 m!120923))

(assert (=> bs!4449 m!121701))

(assert (=> bs!4449 m!121701))

(declare-fun m!121713 () Bool)

(assert (=> bs!4449 m!121713))

(assert (=> b!107881 d!29983))

(assert (=> b!107881 d!29935))

(declare-fun d!29985 () Bool)

(declare-fun e!70428 () Bool)

(assert (=> d!29985 e!70428))

(declare-fun res!53660 () Bool)

(assert (=> d!29985 (=> res!53660 e!70428)))

(declare-fun lt!55585 () Bool)

(assert (=> d!29985 (= res!53660 (not lt!55585))))

(declare-fun lt!55588 () Bool)

(assert (=> d!29985 (= lt!55585 lt!55588)))

(declare-fun lt!55587 () Unit!3301)

(declare-fun e!70429 () Unit!3301)

(assert (=> d!29985 (= lt!55587 e!70429)))

(declare-fun c!19012 () Bool)

(assert (=> d!29985 (= c!19012 lt!55588)))

(assert (=> d!29985 (= lt!55588 (containsKey!161 (toList!786 call!11389) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))))

(assert (=> d!29985 (= (contains!820 call!11389 (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))) lt!55585)))

(declare-fun b!108219 () Bool)

(declare-fun lt!55586 () Unit!3301)

(assert (=> b!108219 (= e!70429 lt!55586)))

(assert (=> b!108219 (= lt!55586 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 call!11389) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))))

(assert (=> b!108219 (isDefined!110 (getValueByKey!158 (toList!786 call!11389) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))))

(declare-fun b!108220 () Bool)

(declare-fun Unit!3330 () Unit!3301)

(assert (=> b!108220 (= e!70429 Unit!3330)))

(declare-fun b!108221 () Bool)

(assert (=> b!108221 (= e!70428 (isDefined!110 (getValueByKey!158 (toList!786 call!11389) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264))))))))

(assert (= (and d!29985 c!19012) b!108219))

(assert (= (and d!29985 (not c!19012)) b!108220))

(assert (= (and d!29985 (not res!53660)) b!108221))

(declare-fun m!121715 () Bool)

(assert (=> d!29985 m!121715))

(declare-fun m!121717 () Bool)

(assert (=> b!108219 m!121717))

(declare-fun m!121719 () Bool)

(assert (=> b!108219 m!121719))

(assert (=> b!108219 m!121719))

(declare-fun m!121721 () Bool)

(assert (=> b!108219 m!121721))

(assert (=> b!108221 m!121719))

(assert (=> b!108221 m!121719))

(assert (=> b!108221 m!121721))

(assert (=> bm!11383 d!29985))

(assert (=> b!107620 d!29795))

(declare-fun b!108225 () Bool)

(declare-fun e!70431 () Option!164)

(assert (=> b!108225 (= e!70431 None!162)))

(declare-fun b!108224 () Bool)

(assert (=> b!108224 (= e!70431 (getValueByKey!158 (t!5712 (toList!786 lt!55316)) (_1!1199 lt!55093)))))

(declare-fun b!108222 () Bool)

(declare-fun e!70430 () Option!164)

(assert (=> b!108222 (= e!70430 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55316)))))))

(declare-fun d!29987 () Bool)

(declare-fun c!19013 () Bool)

(assert (=> d!29987 (= c!19013 (and ((_ is Cons!1600) (toList!786 lt!55316)) (= (_1!1199 (h!2198 (toList!786 lt!55316))) (_1!1199 lt!55093))))))

(assert (=> d!29987 (= (getValueByKey!158 (toList!786 lt!55316) (_1!1199 lt!55093)) e!70430)))

(declare-fun b!108223 () Bool)

(assert (=> b!108223 (= e!70430 e!70431)))

(declare-fun c!19014 () Bool)

(assert (=> b!108223 (= c!19014 (and ((_ is Cons!1600) (toList!786 lt!55316)) (not (= (_1!1199 (h!2198 (toList!786 lt!55316))) (_1!1199 lt!55093)))))))

(assert (= (and d!29987 c!19013) b!108222))

(assert (= (and d!29987 (not c!19013)) b!108223))

(assert (= (and b!108223 c!19014) b!108224))

(assert (= (and b!108223 (not c!19014)) b!108225))

(declare-fun m!121723 () Bool)

(assert (=> b!108224 m!121723))

(assert (=> b!107814 d!29987))

(assert (=> bm!11424 d!29811))

(declare-fun d!29989 () Bool)

(declare-fun e!70434 () Bool)

(assert (=> d!29989 e!70434))

(declare-fun res!53666 () Bool)

(assert (=> d!29989 (=> (not res!53666) (not e!70434))))

(declare-fun lt!55594 () SeekEntryResult!254)

(assert (=> d!29989 (= res!53666 ((_ is Found!254) lt!55594))))

(assert (=> d!29989 (= lt!55594 (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(declare-fun lt!55593 () Unit!3301)

(declare-fun choose!683 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) Int) Unit!3301)

(assert (=> d!29989 (= lt!55593 (choose!683 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)))))

(assert (=> d!29989 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!29989 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)) lt!55593)))

(declare-fun b!108230 () Bool)

(declare-fun res!53665 () Bool)

(assert (=> b!108230 (=> (not res!53665) (not e!70434))))

(assert (=> b!108230 (= res!53665 (inRange!0 (index!3166 lt!55594) (mask!6763 newMap!16)))))

(declare-fun b!108231 () Bool)

(assert (=> b!108231 (= e!70434 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55594)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108231 (and (bvsge (index!3166 lt!55594) #b00000000000000000000000000000000) (bvslt (index!3166 lt!55594) (size!2322 (_keys!4315 newMap!16))))))

(assert (= (and d!29989 res!53666) b!108230))

(assert (= (and b!108230 res!53665) b!108231))

(assert (=> d!29989 m!120751))

(assert (=> d!29989 m!120969))

(assert (=> d!29989 m!120751))

(declare-fun m!121725 () Bool)

(assert (=> d!29989 m!121725))

(assert (=> d!29989 m!121179))

(declare-fun m!121727 () Bool)

(assert (=> b!108230 m!121727))

(declare-fun m!121729 () Bool)

(assert (=> b!108231 m!121729))

(assert (=> bm!11394 d!29989))

(declare-fun d!29991 () Bool)

(assert (=> d!29991 (= (map!1290 (_2!1200 lt!55269)) (getCurrentListMap!472 (_keys!4315 (_2!1200 lt!55269)) (_values!2588 (_2!1200 lt!55269)) (mask!6763 (_2!1200 lt!55269)) (extraKeys!2406 (_2!1200 lt!55269)) (zeroValue!2478 (_2!1200 lt!55269)) (minValue!2478 (_2!1200 lt!55269)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1200 lt!55269))))))

(declare-fun bs!4450 () Bool)

(assert (= bs!4450 d!29991))

(declare-fun m!121731 () Bool)

(assert (=> bs!4450 m!121731))

(assert (=> bm!11392 d!29991))

(declare-fun d!29993 () Bool)

(assert (=> d!29993 (= (+!142 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (+!142 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(assert (=> d!29993 true))

(declare-fun _$28!164 () Unit!3301)

(assert (=> d!29993 (= (choose!675 lt!55096 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) _$28!164)))

(declare-fun bs!4451 () Bool)

(assert (= bs!4451 d!29993))

(assert (=> bs!4451 m!121005))

(assert (=> bs!4451 m!121005))

(assert (=> bs!4451 m!121007))

(assert (=> bs!4451 m!121003))

(assert (=> bs!4451 m!121003))

(assert (=> bs!4451 m!121011))

(assert (=> d!29807 d!29993))

(declare-fun d!29995 () Bool)

(declare-fun e!70435 () Bool)

(assert (=> d!29995 e!70435))

(declare-fun res!53668 () Bool)

(assert (=> d!29995 (=> (not res!53668) (not e!70435))))

(declare-fun lt!55598 () ListLongMap!1541)

(assert (=> d!29995 (= res!53668 (contains!820 lt!55598 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55597 () List!1604)

(assert (=> d!29995 (= lt!55598 (ListLongMap!1542 lt!55597))))

(declare-fun lt!55595 () Unit!3301)

(declare-fun lt!55596 () Unit!3301)

(assert (=> d!29995 (= lt!55595 lt!55596)))

(assert (=> d!29995 (= (getValueByKey!158 lt!55597 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29995 (= lt!55596 (lemmaContainsTupThenGetReturnValue!74 lt!55597 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29995 (= lt!55597 (insertStrictlySorted!77 (toList!786 lt!55096) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29995 (= (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55598)))

(declare-fun b!108232 () Bool)

(declare-fun res!53667 () Bool)

(assert (=> b!108232 (=> (not res!53667) (not e!70435))))

(assert (=> b!108232 (= res!53667 (= (getValueByKey!158 (toList!786 lt!55598) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108233 () Bool)

(assert (=> b!108233 (= e!70435 (contains!823 (toList!786 lt!55598) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29995 res!53668) b!108232))

(assert (= (and b!108232 res!53667) b!108233))

(declare-fun m!121733 () Bool)

(assert (=> d!29995 m!121733))

(declare-fun m!121735 () Bool)

(assert (=> d!29995 m!121735))

(declare-fun m!121737 () Bool)

(assert (=> d!29995 m!121737))

(declare-fun m!121739 () Bool)

(assert (=> d!29995 m!121739))

(declare-fun m!121741 () Bool)

(assert (=> b!108232 m!121741))

(declare-fun m!121743 () Bool)

(assert (=> b!108233 m!121743))

(assert (=> d!29807 d!29995))

(declare-fun d!29997 () Bool)

(declare-fun e!70436 () Bool)

(assert (=> d!29997 e!70436))

(declare-fun res!53670 () Bool)

(assert (=> d!29997 (=> (not res!53670) (not e!70436))))

(declare-fun lt!55602 () ListLongMap!1541)

(assert (=> d!29997 (= res!53670 (contains!820 lt!55602 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun lt!55601 () List!1604)

(assert (=> d!29997 (= lt!55602 (ListLongMap!1542 lt!55601))))

(declare-fun lt!55599 () Unit!3301)

(declare-fun lt!55600 () Unit!3301)

(assert (=> d!29997 (= lt!55599 lt!55600)))

(assert (=> d!29997 (= (getValueByKey!158 lt!55601 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!29997 (= lt!55600 (lemmaContainsTupThenGetReturnValue!74 lt!55601 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!29997 (= lt!55601 (insertStrictlySorted!77 (toList!786 lt!55096) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!29997 (= (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) lt!55602)))

(declare-fun b!108234 () Bool)

(declare-fun res!53669 () Bool)

(assert (=> b!108234 (=> (not res!53669) (not e!70436))))

(assert (=> b!108234 (= res!53669 (= (getValueByKey!158 (toList!786 lt!55602) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!108235 () Bool)

(assert (=> b!108235 (= e!70436 (contains!823 (toList!786 lt!55602) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(assert (= (and d!29997 res!53670) b!108234))

(assert (= (and b!108234 res!53669) b!108235))

(declare-fun m!121745 () Bool)

(assert (=> d!29997 m!121745))

(declare-fun m!121747 () Bool)

(assert (=> d!29997 m!121747))

(declare-fun m!121749 () Bool)

(assert (=> d!29997 m!121749))

(declare-fun m!121751 () Bool)

(assert (=> d!29997 m!121751))

(declare-fun m!121753 () Bool)

(assert (=> b!108234 m!121753))

(declare-fun m!121755 () Bool)

(assert (=> b!108235 m!121755))

(assert (=> d!29807 d!29997))

(declare-fun d!29999 () Bool)

(declare-fun e!70437 () Bool)

(assert (=> d!29999 e!70437))

(declare-fun res!53672 () Bool)

(assert (=> d!29999 (=> (not res!53672) (not e!70437))))

(declare-fun lt!55606 () ListLongMap!1541)

(assert (=> d!29999 (= res!53672 (contains!820 lt!55606 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55605 () List!1604)

(assert (=> d!29999 (= lt!55606 (ListLongMap!1542 lt!55605))))

(declare-fun lt!55603 () Unit!3301)

(declare-fun lt!55604 () Unit!3301)

(assert (=> d!29999 (= lt!55603 lt!55604)))

(assert (=> d!29999 (= (getValueByKey!158 lt!55605 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29999 (= lt!55604 (lemmaContainsTupThenGetReturnValue!74 lt!55605 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29999 (= lt!55605 (insertStrictlySorted!77 (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29999 (= (+!142 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55606)))

(declare-fun b!108236 () Bool)

(declare-fun res!53671 () Bool)

(assert (=> b!108236 (=> (not res!53671) (not e!70437))))

(assert (=> b!108236 (= res!53671 (= (getValueByKey!158 (toList!786 lt!55606) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108237 () Bool)

(assert (=> b!108237 (= e!70437 (contains!823 (toList!786 lt!55606) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29999 res!53672) b!108236))

(assert (= (and b!108236 res!53671) b!108237))

(declare-fun m!121757 () Bool)

(assert (=> d!29999 m!121757))

(declare-fun m!121759 () Bool)

(assert (=> d!29999 m!121759))

(declare-fun m!121761 () Bool)

(assert (=> d!29999 m!121761))

(declare-fun m!121763 () Bool)

(assert (=> d!29999 m!121763))

(declare-fun m!121765 () Bool)

(assert (=> b!108236 m!121765))

(declare-fun m!121767 () Bool)

(assert (=> b!108237 m!121767))

(assert (=> d!29807 d!29999))

(declare-fun d!30001 () Bool)

(declare-fun e!70438 () Bool)

(assert (=> d!30001 e!70438))

(declare-fun res!53674 () Bool)

(assert (=> d!30001 (=> (not res!53674) (not e!70438))))

(declare-fun lt!55610 () ListLongMap!1541)

(assert (=> d!30001 (= res!53674 (contains!820 lt!55610 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun lt!55609 () List!1604)

(assert (=> d!30001 (= lt!55610 (ListLongMap!1542 lt!55609))))

(declare-fun lt!55607 () Unit!3301)

(declare-fun lt!55608 () Unit!3301)

(assert (=> d!30001 (= lt!55607 lt!55608)))

(assert (=> d!30001 (= (getValueByKey!158 lt!55609 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30001 (= lt!55608 (lemmaContainsTupThenGetReturnValue!74 lt!55609 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30001 (= lt!55609 (insertStrictlySorted!77 (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30001 (= (+!142 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) lt!55610)))

(declare-fun b!108238 () Bool)

(declare-fun res!53673 () Bool)

(assert (=> b!108238 (=> (not res!53673) (not e!70438))))

(assert (=> b!108238 (= res!53673 (= (getValueByKey!158 (toList!786 lt!55610) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!108239 () Bool)

(assert (=> b!108239 (= e!70438 (contains!823 (toList!786 lt!55610) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(assert (= (and d!30001 res!53674) b!108238))

(assert (= (and b!108238 res!53673) b!108239))

(declare-fun m!121769 () Bool)

(assert (=> d!30001 m!121769))

(declare-fun m!121771 () Bool)

(assert (=> d!30001 m!121771))

(declare-fun m!121773 () Bool)

(assert (=> d!30001 m!121773))

(declare-fun m!121775 () Bool)

(assert (=> d!30001 m!121775))

(declare-fun m!121777 () Bool)

(assert (=> b!108238 m!121777))

(declare-fun m!121779 () Bool)

(assert (=> b!108239 m!121779))

(assert (=> d!29807 d!30001))

(assert (=> d!29791 d!29795))

(declare-fun d!30003 () Bool)

(assert (=> d!30003 (not (arrayContainsKey!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!30003 true))

(declare-fun _$68!109 () Unit!3301)

(assert (=> d!30003 (= (choose!68 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602)) _$68!109)))

(declare-fun bs!4452 () Bool)

(assert (= bs!4452 d!30003))

(assert (=> bs!4452 m!120751))

(assert (=> bs!4452 m!120771))

(assert (=> d!29791 d!30003))

(declare-fun d!30005 () Bool)

(declare-fun e!70439 () Bool)

(assert (=> d!30005 e!70439))

(declare-fun res!53675 () Bool)

(assert (=> d!30005 (=> res!53675 e!70439)))

(declare-fun lt!55611 () Bool)

(assert (=> d!30005 (= res!53675 (not lt!55611))))

(declare-fun lt!55614 () Bool)

(assert (=> d!30005 (= lt!55611 lt!55614)))

(declare-fun lt!55613 () Unit!3301)

(declare-fun e!70440 () Unit!3301)

(assert (=> d!30005 (= lt!55613 e!70440)))

(declare-fun c!19015 () Bool)

(assert (=> d!30005 (= c!19015 lt!55614)))

(assert (=> d!30005 (= lt!55614 (containsKey!161 (toList!786 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30005 (= (contains!820 lt!55306 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55611)))

(declare-fun b!108240 () Bool)

(declare-fun lt!55612 () Unit!3301)

(assert (=> b!108240 (= e!70440 lt!55612)))

(assert (=> b!108240 (= lt!55612 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108240 (isDefined!110 (getValueByKey!158 (toList!786 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108241 () Bool)

(declare-fun Unit!3331 () Unit!3301)

(assert (=> b!108241 (= e!70440 Unit!3331)))

(declare-fun b!108242 () Bool)

(assert (=> b!108242 (= e!70439 (isDefined!110 (getValueByKey!158 (toList!786 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30005 c!19015) b!108240))

(assert (= (and d!30005 (not c!19015)) b!108241))

(assert (= (and d!30005 (not res!53675)) b!108242))

(declare-fun m!121781 () Bool)

(assert (=> d!30005 m!121781))

(declare-fun m!121783 () Bool)

(assert (=> b!108240 m!121783))

(declare-fun m!121785 () Bool)

(assert (=> b!108240 m!121785))

(assert (=> b!108240 m!121785))

(declare-fun m!121787 () Bool)

(assert (=> b!108240 m!121787))

(assert (=> b!108242 m!121785))

(assert (=> b!108242 m!121785))

(assert (=> b!108242 m!121787))

(assert (=> d!29811 d!30005))

(assert (=> d!29811 d!29815))

(declare-fun e!70461 () Bool)

(declare-fun b!108277 () Bool)

(declare-fun lt!55684 () tuple2!2378)

(assert (=> b!108277 (= e!70461 (= (map!1290 (_2!1200 lt!55684)) (+!142 (map!1290 newMap!16) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!108278 () Bool)

(declare-fun res!53702 () Bool)

(assert (=> b!108278 (=> (not res!53702) (not e!70461))))

(assert (=> b!108278 (= res!53702 (valid!430 (_2!1200 lt!55684)))))

(declare-fun b!108279 () Bool)

(declare-fun e!70460 () Unit!3301)

(declare-fun lt!55679 () Unit!3301)

(assert (=> b!108279 (= e!70460 lt!55679)))

(assert (=> b!108279 (= lt!55679 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55686 () SeekEntryResult!254)

(declare-fun call!11482 () SeekEntryResult!254)

(assert (=> b!108279 (= lt!55686 call!11482)))

(declare-fun c!19025 () Bool)

(assert (=> b!108279 (= c!19025 ((_ is MissingZero!254) lt!55686))))

(declare-fun e!70464 () Bool)

(assert (=> b!108279 e!70464))

(declare-fun b!108280 () Bool)

(declare-fun e!70462 () Bool)

(declare-fun e!70457 () Bool)

(assert (=> b!108280 (= e!70462 e!70457)))

(declare-fun res!53700 () Bool)

(declare-fun call!11480 () Bool)

(assert (=> b!108280 (= res!53700 call!11480)))

(assert (=> b!108280 (=> (not res!53700) (not e!70457))))

(declare-fun b!108281 () Bool)

(declare-fun Unit!3332 () Unit!3301)

(assert (=> b!108281 (= e!70460 Unit!3332)))

(declare-fun lt!55677 () Unit!3301)

(assert (=> b!108281 (= lt!55677 (lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55682 () SeekEntryResult!254)

(assert (=> b!108281 (= lt!55682 call!11482)))

(declare-fun res!53698 () Bool)

(assert (=> b!108281 (= res!53698 ((_ is Found!254) lt!55682))))

(declare-fun e!70458 () Bool)

(assert (=> b!108281 (=> (not res!53698) (not e!70458))))

(assert (=> b!108281 e!70458))

(declare-fun lt!55695 () Unit!3301)

(assert (=> b!108281 (= lt!55695 lt!55677)))

(assert (=> b!108281 false))

(declare-fun bm!11477 () Bool)

(declare-fun call!11483 () Bool)

(assert (=> bm!11477 (= call!11480 call!11483)))

(declare-fun c!19026 () Bool)

(declare-fun bm!11478 () Bool)

(assert (=> bm!11478 (= call!11483 (inRange!0 (ite c!19026 (index!3166 lt!55682) (ite c!19025 (index!3165 lt!55686) (index!3168 lt!55686))) (mask!6763 newMap!16)))))

(declare-fun b!108282 () Bool)

(declare-fun e!70463 () Unit!3301)

(declare-fun Unit!3333 () Unit!3301)

(assert (=> b!108282 (= e!70463 Unit!3333)))

(declare-fun b!108283 () Bool)

(declare-fun res!53701 () Bool)

(declare-fun e!70459 () Bool)

(assert (=> b!108283 (=> (not res!53701) (not e!70459))))

(assert (=> b!108283 (= res!53701 call!11480)))

(assert (=> b!108283 (= e!70464 e!70459)))

(declare-fun b!108284 () Bool)

(declare-fun Unit!3334 () Unit!3301)

(assert (=> b!108284 (= e!70463 Unit!3334)))

(declare-fun lt!55701 () Unit!3301)

(declare-fun lemmaArrayContainsKeyThenInListMap!31 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) (_ BitVec 32) Int) Unit!3301)

(assert (=> b!108284 (= lt!55701 (lemmaArrayContainsKeyThenInListMap!31 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(assert (=> b!108284 (contains!820 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))

(declare-fun lt!55692 () Unit!3301)

(assert (=> b!108284 (= lt!55692 lt!55701)))

(assert (=> b!108284 false))

(declare-fun b!108285 () Bool)

(declare-fun c!19024 () Bool)

(assert (=> b!108285 (= c!19024 ((_ is MissingVacant!254) lt!55686))))

(assert (=> b!108285 (= e!70464 e!70462)))

(declare-fun b!108286 () Bool)

(assert (=> b!108286 (= e!70462 ((_ is Undefined!254) lt!55686))))

(declare-fun d!30007 () Bool)

(assert (=> d!30007 e!70461))

(declare-fun res!53695 () Bool)

(assert (=> d!30007 (=> (not res!53695) (not e!70461))))

(assert (=> d!30007 (= res!53695 (_1!1200 lt!55684))))

(assert (=> d!30007 (= lt!55684 (tuple2!2379 true (LongMapFixedSize!911 (defaultEntry!2605 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (bvadd (_size!504 newMap!16) #b00000000000000000000000000000001) (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (_vacant!504 newMap!16))))))

(declare-fun lt!55699 () Unit!3301)

(declare-fun lt!55690 () Unit!3301)

(assert (=> d!30007 (= lt!55699 lt!55690)))

(declare-fun lt!55702 () array!4357)

(declare-fun lt!55689 () array!4359)

(assert (=> d!30007 (contains!820 (getCurrentListMap!472 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264))))))

(assert (=> d!30007 (= lt!55690 (lemmaValidKeyInArrayIsInListMap!108 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (defaultEntry!2605 newMap!16)))))

(assert (=> d!30007 (= lt!55689 (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))))))

(assert (=> d!30007 (= lt!55702 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun lt!55678 () Unit!3301)

(declare-fun lt!55694 () Unit!3301)

(assert (=> d!30007 (= lt!55678 lt!55694)))

(declare-fun lt!55683 () array!4357)

(assert (=> d!30007 (= (arrayCountValidKeys!0 lt!55683 (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (bvadd (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4357 (_ BitVec 32)) Unit!3301)

(assert (=> d!30007 (= lt!55694 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!55683 (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264))))))

(assert (=> d!30007 (= lt!55683 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun lt!55698 () Unit!3301)

(declare-fun lt!55691 () Unit!3301)

(assert (=> d!30007 (= lt!55698 lt!55691)))

(declare-fun lt!55687 () array!4357)

(assert (=> d!30007 (arrayContainsKey!0 lt!55687 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!30007 (= lt!55691 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!55687 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264))))))

(assert (=> d!30007 (= lt!55687 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun lt!55704 () Unit!3301)

(declare-fun lt!55688 () Unit!3301)

(assert (=> d!30007 (= lt!55704 lt!55688)))

(assert (=> d!30007 (= (+!142 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (getCurrentListMap!472 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!31 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) (_ BitVec 64) V!3233 Int) Unit!3301)

(assert (=> d!30007 (= lt!55688 (lemmaAddValidKeyToArrayThenAddPairToListMap!31 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55685 () Unit!3301)

(declare-fun lt!55675 () Unit!3301)

(assert (=> d!30007 (= lt!55685 lt!55675)))

(assert (=> d!30007 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (mask!6763 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4357 (_ BitVec 32) (_ BitVec 32)) Unit!3301)

(assert (=> d!30007 (= lt!55675 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (mask!6763 newMap!16)))))

(declare-fun lt!55700 () Unit!3301)

(declare-fun lt!55697 () Unit!3301)

(assert (=> d!30007 (= lt!55700 lt!55697)))

(assert (=> d!30007 (= (arrayCountValidKeys!0 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4315 newMap!16) #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4357 (_ BitVec 32) (_ BitVec 64)) Unit!3301)

(assert (=> d!30007 (= lt!55697 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4315 newMap!16) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!55676 () Unit!3301)

(declare-fun lt!55681 () Unit!3301)

(assert (=> d!30007 (= lt!55676 lt!55681)))

(declare-fun lt!55680 () List!1605)

(declare-fun lt!55703 () (_ BitVec 32))

(assert (=> d!30007 (arrayNoDuplicates!0 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) lt!55703 lt!55680)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4357 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1605) Unit!3301)

(assert (=> d!30007 (= lt!55681 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4315 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) lt!55703 lt!55680))))

(assert (=> d!30007 (= lt!55680 Nil!1602)))

(assert (=> d!30007 (= lt!55703 #b00000000000000000000000000000000)))

(declare-fun lt!55693 () Unit!3301)

(assert (=> d!30007 (= lt!55693 e!70463)))

(declare-fun c!19027 () Bool)

(assert (=> d!30007 (= c!19027 (arrayContainsKey!0 (_keys!4315 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!55696 () Unit!3301)

(assert (=> d!30007 (= lt!55696 e!70460)))

(assert (=> d!30007 (= c!19026 (contains!820 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30007 (valid!430 newMap!16)))

(assert (=> d!30007 (= (updateHelperNewKey!48 newMap!16 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264))) lt!55684)))

(declare-fun bm!11479 () Bool)

(declare-fun call!11481 () Bool)

(assert (=> bm!11479 (= call!11481 (arrayContainsKey!0 (_keys!4315 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!108287 () Bool)

(assert (=> b!108287 (= e!70457 (not call!11481))))

(declare-fun b!108288 () Bool)

(declare-fun res!53694 () Bool)

(assert (=> b!108288 (= res!53694 call!11483)))

(assert (=> b!108288 (=> (not res!53694) (not e!70458))))

(declare-fun bm!11480 () Bool)

(assert (=> bm!11480 (= call!11482 (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(declare-fun b!108289 () Bool)

(assert (=> b!108289 (= e!70458 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55682)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108290 () Bool)

(declare-fun res!53696 () Bool)

(assert (=> b!108290 (=> (not res!53696) (not e!70461))))

(assert (=> b!108290 (= res!53696 (contains!820 (map!1290 (_2!1200 lt!55684)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108291 () Bool)

(declare-fun res!53699 () Bool)

(assert (=> b!108291 (= res!53699 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3168 lt!55686)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108291 (=> (not res!53699) (not e!70457))))

(declare-fun b!108292 () Bool)

(declare-fun res!53697 () Bool)

(assert (=> b!108292 (=> (not res!53697) (not e!70459))))

(assert (=> b!108292 (= res!53697 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3165 lt!55686)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108293 () Bool)

(assert (=> b!108293 (= e!70459 (not call!11481))))

(assert (= (and d!30007 c!19026) b!108281))

(assert (= (and d!30007 (not c!19026)) b!108279))

(assert (= (and b!108281 res!53698) b!108288))

(assert (= (and b!108288 res!53694) b!108289))

(assert (= (and b!108279 c!19025) b!108283))

(assert (= (and b!108279 (not c!19025)) b!108285))

(assert (= (and b!108283 res!53701) b!108292))

(assert (= (and b!108292 res!53697) b!108293))

(assert (= (and b!108285 c!19024) b!108280))

(assert (= (and b!108285 (not c!19024)) b!108286))

(assert (= (and b!108280 res!53700) b!108291))

(assert (= (and b!108291 res!53699) b!108287))

(assert (= (or b!108283 b!108280) bm!11477))

(assert (= (or b!108293 b!108287) bm!11479))

(assert (= (or b!108288 bm!11477) bm!11478))

(assert (= (or b!108281 b!108279) bm!11480))

(assert (= (and d!30007 c!19027) b!108284))

(assert (= (and d!30007 (not c!19027)) b!108282))

(assert (= (and d!30007 res!53695) b!108278))

(assert (= (and b!108278 res!53702) b!108290))

(assert (= (and b!108290 res!53696) b!108277))

(declare-fun m!121789 () Bool)

(assert (=> b!108291 m!121789))

(declare-fun m!121791 () Bool)

(assert (=> b!108292 m!121791))

(assert (=> bm!11480 m!120751))

(assert (=> bm!11480 m!120969))

(declare-fun m!121793 () Bool)

(assert (=> b!108289 m!121793))

(declare-fun m!121795 () Bool)

(assert (=> b!108290 m!121795))

(assert (=> b!108290 m!121795))

(assert (=> b!108290 m!120751))

(declare-fun m!121797 () Bool)

(assert (=> b!108290 m!121797))

(assert (=> b!108277 m!121795))

(assert (=> b!108277 m!120803))

(assert (=> b!108277 m!120803))

(declare-fun m!121799 () Bool)

(assert (=> b!108277 m!121799))

(assert (=> bm!11479 m!120751))

(assert (=> bm!11479 m!120973))

(assert (=> b!108279 m!120751))

(assert (=> b!108279 m!120981))

(assert (=> b!108284 m!120751))

(declare-fun m!121801 () Bool)

(assert (=> b!108284 m!121801))

(assert (=> b!108284 m!120987))

(assert (=> b!108284 m!120987))

(assert (=> b!108284 m!120751))

(assert (=> b!108284 m!120989))

(declare-fun m!121803 () Bool)

(assert (=> b!108278 m!121803))

(assert (=> d!30007 m!120987))

(declare-fun m!121805 () Bool)

(assert (=> d!30007 m!121805))

(declare-fun m!121807 () Bool)

(assert (=> d!30007 m!121807))

(declare-fun m!121809 () Bool)

(assert (=> d!30007 m!121809))

(declare-fun m!121811 () Bool)

(assert (=> d!30007 m!121811))

(assert (=> d!30007 m!120777))

(assert (=> d!30007 m!120751))

(declare-fun m!121813 () Bool)

(assert (=> d!30007 m!121813))

(declare-fun m!121815 () Bool)

(assert (=> d!30007 m!121815))

(assert (=> d!30007 m!120751))

(declare-fun m!121817 () Bool)

(assert (=> d!30007 m!121817))

(declare-fun m!121819 () Bool)

(assert (=> d!30007 m!121819))

(assert (=> d!30007 m!120987))

(declare-fun m!121821 () Bool)

(assert (=> d!30007 m!121821))

(declare-fun m!121823 () Bool)

(assert (=> d!30007 m!121823))

(assert (=> d!30007 m!120751))

(declare-fun m!121825 () Bool)

(assert (=> d!30007 m!121825))

(assert (=> d!30007 m!120751))

(declare-fun m!121827 () Bool)

(assert (=> d!30007 m!121827))

(assert (=> d!30007 m!120751))

(declare-fun m!121829 () Bool)

(assert (=> d!30007 m!121829))

(declare-fun m!121831 () Bool)

(assert (=> d!30007 m!121831))

(assert (=> d!30007 m!120751))

(declare-fun m!121833 () Bool)

(assert (=> d!30007 m!121833))

(declare-fun m!121835 () Bool)

(assert (=> d!30007 m!121835))

(declare-fun m!121837 () Bool)

(assert (=> d!30007 m!121837))

(declare-fun m!121839 () Bool)

(assert (=> d!30007 m!121839))

(assert (=> d!30007 m!120987))

(assert (=> d!30007 m!120751))

(assert (=> d!30007 m!120989))

(assert (=> d!30007 m!121831))

(assert (=> d!30007 m!121839))

(declare-fun m!121841 () Bool)

(assert (=> d!30007 m!121841))

(assert (=> d!30007 m!121137))

(assert (=> d!30007 m!120751))

(assert (=> d!30007 m!120973))

(declare-fun m!121843 () Bool)

(assert (=> bm!11478 m!121843))

(assert (=> b!108281 m!120751))

(assert (=> b!108281 m!120961))

(assert (=> bm!11401 d!30007))

(declare-fun bm!11481 () Bool)

(declare-fun call!11489 () ListLongMap!1541)

(declare-fun call!11484 () ListLongMap!1541)

(assert (=> bm!11481 (= call!11489 call!11484)))

(declare-fun b!108294 () Bool)

(declare-fun e!70466 () ListLongMap!1541)

(declare-fun e!70476 () ListLongMap!1541)

(assert (=> b!108294 (= e!70466 e!70476)))

(declare-fun c!19029 () Bool)

(assert (=> b!108294 (= c!19029 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11482 () Bool)

(declare-fun call!11486 () ListLongMap!1541)

(declare-fun call!11490 () ListLongMap!1541)

(assert (=> bm!11482 (= call!11486 call!11490)))

(declare-fun b!108295 () Bool)

(declare-fun e!70467 () Bool)

(declare-fun e!70475 () Bool)

(assert (=> b!108295 (= e!70467 e!70475)))

(declare-fun res!53710 () Bool)

(declare-fun call!11488 () Bool)

(assert (=> b!108295 (= res!53710 call!11488)))

(assert (=> b!108295 (=> (not res!53710) (not e!70475))))

(declare-fun bm!11483 () Bool)

(declare-fun call!11487 () Bool)

(declare-fun lt!55720 () ListLongMap!1541)

(assert (=> bm!11483 (= call!11487 (contains!820 lt!55720 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108296 () Bool)

(declare-fun e!70465 () Bool)

(declare-fun e!70468 () Bool)

(assert (=> b!108296 (= e!70465 e!70468)))

(declare-fun res!53711 () Bool)

(assert (=> b!108296 (=> (not res!53711) (not e!70468))))

(assert (=> b!108296 (= res!53711 (contains!820 lt!55720 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108296 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108297 () Bool)

(declare-fun res!53707 () Bool)

(declare-fun e!70477 () Bool)

(assert (=> b!108297 (=> (not res!53707) (not e!70477))))

(assert (=> b!108297 (= res!53707 e!70467)))

(declare-fun c!19028 () Bool)

(assert (=> b!108297 (= c!19028 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11484 () Bool)

(declare-fun call!11485 () ListLongMap!1541)

(assert (=> bm!11484 (= call!11485 call!11486)))

(declare-fun b!108298 () Bool)

(declare-fun e!70473 () Bool)

(assert (=> b!108298 (= e!70473 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108299 () Bool)

(assert (=> b!108299 (= e!70476 call!11489)))

(declare-fun b!108300 () Bool)

(declare-fun e!70469 () Bool)

(assert (=> b!108300 (= e!70477 e!70469)))

(declare-fun c!19030 () Bool)

(assert (=> b!108300 (= c!19030 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11485 () Bool)

(assert (=> bm!11485 (= call!11490 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!108301 () Bool)

(declare-fun e!70471 () ListLongMap!1541)

(assert (=> b!108301 (= e!70471 call!11489)))

(declare-fun b!108302 () Bool)

(declare-fun e!70470 () Unit!3301)

(declare-fun Unit!3335 () Unit!3301)

(assert (=> b!108302 (= e!70470 Unit!3335)))

(declare-fun b!108303 () Bool)

(declare-fun e!70472 () Bool)

(assert (=> b!108303 (= e!70472 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108304 () Bool)

(declare-fun res!53709 () Bool)

(assert (=> b!108304 (=> (not res!53709) (not e!70477))))

(assert (=> b!108304 (= res!53709 e!70465)))

(declare-fun res!53704 () Bool)

(assert (=> b!108304 (=> res!53704 e!70465)))

(assert (=> b!108304 (= res!53704 (not e!70473))))

(declare-fun res!53708 () Bool)

(assert (=> b!108304 (=> (not res!53708) (not e!70473))))

(assert (=> b!108304 (= res!53708 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108305 () Bool)

(declare-fun e!70474 () Bool)

(assert (=> b!108305 (= e!70469 e!70474)))

(declare-fun res!53703 () Bool)

(assert (=> b!108305 (= res!53703 call!11487)))

(assert (=> b!108305 (=> (not res!53703) (not e!70474))))

(declare-fun b!108306 () Bool)

(declare-fun lt!55710 () Unit!3301)

(assert (=> b!108306 (= e!70470 lt!55710)))

(declare-fun lt!55711 () ListLongMap!1541)

(assert (=> b!108306 (= lt!55711 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55715 () (_ BitVec 64))

(assert (=> b!108306 (= lt!55715 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55713 () (_ BitVec 64))

(assert (=> b!108306 (= lt!55713 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55716 () Unit!3301)

(assert (=> b!108306 (= lt!55716 (addStillContains!75 lt!55711 lt!55715 (zeroValue!2478 newMap!16) lt!55713))))

(assert (=> b!108306 (contains!820 (+!142 lt!55711 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16))) lt!55713)))

(declare-fun lt!55723 () Unit!3301)

(assert (=> b!108306 (= lt!55723 lt!55716)))

(declare-fun lt!55709 () ListLongMap!1541)

(assert (=> b!108306 (= lt!55709 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55714 () (_ BitVec 64))

(assert (=> b!108306 (= lt!55714 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55717 () (_ BitVec 64))

(assert (=> b!108306 (= lt!55717 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55719 () Unit!3301)

(assert (=> b!108306 (= lt!55719 (addApplyDifferent!75 lt!55709 lt!55714 (minValue!2478 newMap!16) lt!55717))))

(assert (=> b!108306 (= (apply!99 (+!142 lt!55709 (tuple2!2377 lt!55714 (minValue!2478 newMap!16))) lt!55717) (apply!99 lt!55709 lt!55717))))

(declare-fun lt!55712 () Unit!3301)

(assert (=> b!108306 (= lt!55712 lt!55719)))

(declare-fun lt!55707 () ListLongMap!1541)

(assert (=> b!108306 (= lt!55707 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55726 () (_ BitVec 64))

(assert (=> b!108306 (= lt!55726 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55721 () (_ BitVec 64))

(assert (=> b!108306 (= lt!55721 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55725 () Unit!3301)

(assert (=> b!108306 (= lt!55725 (addApplyDifferent!75 lt!55707 lt!55726 (zeroValue!2478 newMap!16) lt!55721))))

(assert (=> b!108306 (= (apply!99 (+!142 lt!55707 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16))) lt!55721) (apply!99 lt!55707 lt!55721))))

(declare-fun lt!55718 () Unit!3301)

(assert (=> b!108306 (= lt!55718 lt!55725)))

(declare-fun lt!55705 () ListLongMap!1541)

(assert (=> b!108306 (= lt!55705 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55706 () (_ BitVec 64))

(assert (=> b!108306 (= lt!55706 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55708 () (_ BitVec 64))

(assert (=> b!108306 (= lt!55708 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108306 (= lt!55710 (addApplyDifferent!75 lt!55705 lt!55706 (minValue!2478 newMap!16) lt!55708))))

(assert (=> b!108306 (= (apply!99 (+!142 lt!55705 (tuple2!2377 lt!55706 (minValue!2478 newMap!16))) lt!55708) (apply!99 lt!55705 lt!55708))))

(declare-fun bm!11486 () Bool)

(declare-fun c!19032 () Bool)

(assert (=> bm!11486 (= call!11484 (+!142 (ite c!19032 call!11490 (ite c!19029 call!11486 call!11485)) (ite (or c!19032 c!19029) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun bm!11487 () Bool)

(assert (=> bm!11487 (= call!11488 (contains!820 lt!55720 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108307 () Bool)

(assert (=> b!108307 (= e!70474 (= (apply!99 lt!55720 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!108308 () Bool)

(assert (=> b!108308 (= e!70471 call!11485)))

(declare-fun b!108309 () Bool)

(declare-fun c!19033 () Bool)

(assert (=> b!108309 (= c!19033 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108309 (= e!70476 e!70471)))

(declare-fun b!108310 () Bool)

(assert (=> b!108310 (= e!70475 (= (apply!99 lt!55720 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!108311 () Bool)

(assert (=> b!108311 (= e!70469 (not call!11487))))

(declare-fun b!108312 () Bool)

(assert (=> b!108312 (= e!70466 (+!142 call!11484 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun b!108313 () Bool)

(assert (=> b!108313 (= e!70468 (= (apply!99 lt!55720 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108313 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 (_values!2588 newMap!16))))))

(assert (=> b!108313 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108314 () Bool)

(assert (=> b!108314 (= e!70467 (not call!11488))))

(declare-fun d!30009 () Bool)

(assert (=> d!30009 e!70477))

(declare-fun res!53705 () Bool)

(assert (=> d!30009 (=> (not res!53705) (not e!70477))))

(assert (=> d!30009 (= res!53705 (or (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))))

(declare-fun lt!55722 () ListLongMap!1541)

(assert (=> d!30009 (= lt!55720 lt!55722)))

(declare-fun lt!55724 () Unit!3301)

(assert (=> d!30009 (= lt!55724 e!70470)))

(declare-fun c!19031 () Bool)

(assert (=> d!30009 (= c!19031 e!70472)))

(declare-fun res!53706 () Bool)

(assert (=> d!30009 (=> (not res!53706) (not e!70472))))

(assert (=> d!30009 (= res!53706 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30009 (= lt!55722 e!70466)))

(assert (=> d!30009 (= c!19032 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30009 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30009 (= (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55720)))

(assert (= (and d!30009 c!19032) b!108312))

(assert (= (and d!30009 (not c!19032)) b!108294))

(assert (= (and b!108294 c!19029) b!108299))

(assert (= (and b!108294 (not c!19029)) b!108309))

(assert (= (and b!108309 c!19033) b!108301))

(assert (= (and b!108309 (not c!19033)) b!108308))

(assert (= (or b!108301 b!108308) bm!11484))

(assert (= (or b!108299 bm!11484) bm!11482))

(assert (= (or b!108299 b!108301) bm!11481))

(assert (= (or b!108312 bm!11482) bm!11485))

(assert (= (or b!108312 bm!11481) bm!11486))

(assert (= (and d!30009 res!53706) b!108303))

(assert (= (and d!30009 c!19031) b!108306))

(assert (= (and d!30009 (not c!19031)) b!108302))

(assert (= (and d!30009 res!53705) b!108304))

(assert (= (and b!108304 res!53708) b!108298))

(assert (= (and b!108304 (not res!53704)) b!108296))

(assert (= (and b!108296 res!53711) b!108313))

(assert (= (and b!108304 res!53709) b!108297))

(assert (= (and b!108297 c!19028) b!108295))

(assert (= (and b!108297 (not c!19028)) b!108314))

(assert (= (and b!108295 res!53710) b!108310))

(assert (= (or b!108295 b!108314) bm!11487))

(assert (= (and b!108297 res!53707) b!108300))

(assert (= (and b!108300 c!19030) b!108305))

(assert (= (and b!108300 (not c!19030)) b!108311))

(assert (= (and b!108305 res!53703) b!108307))

(assert (= (or b!108305 b!108311) bm!11483))

(declare-fun b_lambda!4843 () Bool)

(assert (=> (not b_lambda!4843) (not b!108313)))

(assert (=> b!108313 t!5726))

(declare-fun b_and!6681 () Bool)

(assert (= b_and!6677 (and (=> t!5726 result!3505) b_and!6681)))

(assert (=> b!108313 t!5728))

(declare-fun b_and!6683 () Bool)

(assert (= b_and!6679 (and (=> t!5728 result!3507) b_and!6683)))

(declare-fun m!121845 () Bool)

(assert (=> b!108310 m!121845))

(declare-fun m!121847 () Bool)

(assert (=> b!108312 m!121847))

(declare-fun m!121849 () Bool)

(assert (=> bm!11483 m!121849))

(assert (=> b!108296 m!121169))

(assert (=> b!108296 m!121169))

(declare-fun m!121851 () Bool)

(assert (=> b!108296 m!121851))

(declare-fun m!121853 () Bool)

(assert (=> bm!11487 m!121853))

(assert (=> b!108298 m!121169))

(assert (=> b!108298 m!121169))

(assert (=> b!108298 m!121175))

(declare-fun m!121855 () Bool)

(assert (=> b!108307 m!121855))

(assert (=> d!30009 m!121179))

(declare-fun m!121857 () Bool)

(assert (=> b!108306 m!121857))

(declare-fun m!121859 () Bool)

(assert (=> b!108306 m!121859))

(declare-fun m!121861 () Bool)

(assert (=> b!108306 m!121861))

(assert (=> b!108306 m!121169))

(declare-fun m!121863 () Bool)

(assert (=> b!108306 m!121863))

(declare-fun m!121865 () Bool)

(assert (=> b!108306 m!121865))

(declare-fun m!121867 () Bool)

(assert (=> b!108306 m!121867))

(declare-fun m!121869 () Bool)

(assert (=> b!108306 m!121869))

(declare-fun m!121871 () Bool)

(assert (=> b!108306 m!121871))

(declare-fun m!121873 () Bool)

(assert (=> b!108306 m!121873))

(declare-fun m!121875 () Bool)

(assert (=> b!108306 m!121875))

(declare-fun m!121877 () Bool)

(assert (=> b!108306 m!121877))

(declare-fun m!121879 () Bool)

(assert (=> b!108306 m!121879))

(declare-fun m!121881 () Bool)

(assert (=> b!108306 m!121881))

(assert (=> b!108306 m!121875))

(declare-fun m!121883 () Bool)

(assert (=> b!108306 m!121883))

(declare-fun m!121885 () Bool)

(assert (=> b!108306 m!121885))

(assert (=> b!108306 m!121879))

(declare-fun m!121887 () Bool)

(assert (=> b!108306 m!121887))

(assert (=> b!108306 m!121883))

(assert (=> b!108306 m!121863))

(declare-fun m!121889 () Bool)

(assert (=> bm!11486 m!121889))

(assert (=> bm!11485 m!121861))

(assert (=> b!108303 m!121169))

(assert (=> b!108303 m!121169))

(assert (=> b!108303 m!121175))

(declare-fun m!121891 () Bool)

(assert (=> b!108313 m!121891))

(assert (=> b!108313 m!121891))

(assert (=> b!108313 m!121217))

(declare-fun m!121893 () Bool)

(assert (=> b!108313 m!121893))

(assert (=> b!108313 m!121169))

(declare-fun m!121895 () Bool)

(assert (=> b!108313 m!121895))

(assert (=> b!108313 m!121169))

(assert (=> b!108313 m!121217))

(assert (=> d!29821 d!30009))

(declare-fun d!30011 () Bool)

(declare-fun res!53712 () Bool)

(declare-fun e!70478 () Bool)

(assert (=> d!30011 (=> res!53712 e!70478)))

(assert (=> d!30011 (= res!53712 (= (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30011 (= (arrayContainsKey!0 (_keys!4315 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000) e!70478)))

(declare-fun b!108315 () Bool)

(declare-fun e!70479 () Bool)

(assert (=> b!108315 (= e!70478 e!70479)))

(declare-fun res!53713 () Bool)

(assert (=> b!108315 (=> (not res!53713) (not e!70479))))

(assert (=> b!108315 (= res!53713 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108316 () Bool)

(assert (=> b!108316 (= e!70479 (arrayContainsKey!0 (_keys!4315 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30011 (not res!53712)) b!108315))

(assert (= (and b!108315 res!53713) b!108316))

(assert (=> d!30011 m!121169))

(assert (=> b!108316 m!120751))

(declare-fun m!121897 () Bool)

(assert (=> b!108316 m!121897))

(assert (=> bm!11386 d!30011))

(assert (=> bm!11402 d!29821))

(assert (=> b!107804 d!29847))

(declare-fun bm!11490 () Bool)

(declare-fun call!11493 () (_ BitVec 32))

(assert (=> bm!11490 (= call!11493 (arrayCountValidKeys!0 (_keys!4315 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun d!30013 () Bool)

(declare-fun lt!55729 () (_ BitVec 32))

(assert (=> d!30013 (and (bvsge lt!55729 #b00000000000000000000000000000000) (bvsle lt!55729 (bvsub (size!2322 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!70485 () (_ BitVec 32))

(assert (=> d!30013 (= lt!55729 e!70485)))

(declare-fun c!19039 () Bool)

(assert (=> d!30013 (= c!19039 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30013 (and (bvsle #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2322 (_keys!4315 newMap!16)) (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30013 (= (arrayCountValidKeys!0 (_keys!4315 newMap!16) #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) lt!55729)))

(declare-fun b!108325 () Bool)

(assert (=> b!108325 (= e!70485 #b00000000000000000000000000000000)))

(declare-fun b!108326 () Bool)

(declare-fun e!70484 () (_ BitVec 32))

(assert (=> b!108326 (= e!70484 (bvadd #b00000000000000000000000000000001 call!11493))))

(declare-fun b!108327 () Bool)

(assert (=> b!108327 (= e!70485 e!70484)))

(declare-fun c!19038 () Bool)

(assert (=> b!108327 (= c!19038 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108328 () Bool)

(assert (=> b!108328 (= e!70484 call!11493)))

(assert (= (and d!30013 c!19039) b!108325))

(assert (= (and d!30013 (not c!19039)) b!108327))

(assert (= (and b!108327 c!19038) b!108326))

(assert (= (and b!108327 (not c!19038)) b!108328))

(assert (= (or b!108326 b!108328) bm!11490))

(declare-fun m!121899 () Bool)

(assert (=> bm!11490 m!121899))

(assert (=> b!108327 m!121169))

(assert (=> b!108327 m!121169))

(assert (=> b!108327 m!121175))

(assert (=> b!107889 d!30013))

(assert (=> b!107871 d!29847))

(assert (=> b!107802 d!29967))

(declare-fun b!108330 () Bool)

(declare-fun e!70488 () Bool)

(assert (=> b!108330 (= e!70488 (contains!822 Nil!1602 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108331 () Bool)

(declare-fun e!70489 () Bool)

(declare-fun call!11494 () Bool)

(assert (=> b!108331 (= e!70489 call!11494)))

(declare-fun bm!11491 () Bool)

(declare-fun c!19040 () Bool)

(assert (=> bm!11491 (= call!11494 (arrayNoDuplicates!0 (_keys!4315 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19040 (Cons!1601 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) Nil!1602) Nil!1602)))))

(declare-fun b!108332 () Bool)

(declare-fun e!70487 () Bool)

(declare-fun e!70486 () Bool)

(assert (=> b!108332 (= e!70487 e!70486)))

(declare-fun res!53716 () Bool)

(assert (=> b!108332 (=> (not res!53716) (not e!70486))))

(assert (=> b!108332 (= res!53716 (not e!70488))))

(declare-fun res!53715 () Bool)

(assert (=> b!108332 (=> (not res!53715) (not e!70488))))

(assert (=> b!108332 (= res!53715 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108333 () Bool)

(assert (=> b!108333 (= e!70489 call!11494)))

(declare-fun d!30015 () Bool)

(declare-fun res!53714 () Bool)

(assert (=> d!30015 (=> res!53714 e!70487)))

(assert (=> d!30015 (= res!53714 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30015 (= (arrayNoDuplicates!0 (_keys!4315 newMap!16) #b00000000000000000000000000000000 Nil!1602) e!70487)))

(declare-fun b!108329 () Bool)

(assert (=> b!108329 (= e!70486 e!70489)))

(assert (=> b!108329 (= c!19040 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!30015 (not res!53714)) b!108332))

(assert (= (and b!108332 res!53715) b!108330))

(assert (= (and b!108332 res!53716) b!108329))

(assert (= (and b!108329 c!19040) b!108333))

(assert (= (and b!108329 (not c!19040)) b!108331))

(assert (= (or b!108333 b!108331) bm!11491))

(assert (=> b!108330 m!121169))

(assert (=> b!108330 m!121169))

(declare-fun m!121901 () Bool)

(assert (=> b!108330 m!121901))

(assert (=> bm!11491 m!121169))

(declare-fun m!121903 () Bool)

(assert (=> bm!11491 m!121903))

(assert (=> b!108332 m!121169))

(assert (=> b!108332 m!121169))

(assert (=> b!108332 m!121175))

(assert (=> b!108329 m!121169))

(assert (=> b!108329 m!121169))

(assert (=> b!108329 m!121175))

(assert (=> b!107891 d!30015))

(assert (=> b!107742 d!30009))

(assert (=> d!29823 d!29815))

(declare-fun b!108337 () Bool)

(declare-fun e!70491 () Option!164)

(assert (=> b!108337 (= e!70491 None!162)))

(declare-fun b!108336 () Bool)

(assert (=> b!108336 (= e!70491 (getValueByKey!158 (t!5712 (toList!786 lt!55324)) (_1!1199 lt!55093)))))

(declare-fun b!108334 () Bool)

(declare-fun e!70490 () Option!164)

(assert (=> b!108334 (= e!70490 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55324)))))))

(declare-fun d!30017 () Bool)

(declare-fun c!19041 () Bool)

(assert (=> d!30017 (= c!19041 (and ((_ is Cons!1600) (toList!786 lt!55324)) (= (_1!1199 (h!2198 (toList!786 lt!55324))) (_1!1199 lt!55093))))))

(assert (=> d!30017 (= (getValueByKey!158 (toList!786 lt!55324) (_1!1199 lt!55093)) e!70490)))

(declare-fun b!108335 () Bool)

(assert (=> b!108335 (= e!70490 e!70491)))

(declare-fun c!19042 () Bool)

(assert (=> b!108335 (= c!19042 (and ((_ is Cons!1600) (toList!786 lt!55324)) (not (= (_1!1199 (h!2198 (toList!786 lt!55324))) (_1!1199 lt!55093)))))))

(assert (= (and d!30017 c!19041) b!108334))

(assert (= (and d!30017 (not c!19041)) b!108335))

(assert (= (and b!108335 c!19042) b!108336))

(assert (= (and b!108335 (not c!19042)) b!108337))

(declare-fun m!121905 () Bool)

(assert (=> b!108336 m!121905))

(assert (=> b!107818 d!30017))

(declare-fun e!70494 () Bool)

(declare-fun b!108339 () Bool)

(assert (=> b!108339 (= e!70494 (contains!822 (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!108340 () Bool)

(declare-fun e!70495 () Bool)

(declare-fun call!11495 () Bool)

(assert (=> b!108340 (= e!70495 call!11495)))

(declare-fun c!19043 () Bool)

(declare-fun bm!11492 () Bool)

(assert (=> bm!11492 (= call!11495 (arrayNoDuplicates!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19043 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602))))))

(declare-fun b!108341 () Bool)

(declare-fun e!70493 () Bool)

(declare-fun e!70492 () Bool)

(assert (=> b!108341 (= e!70493 e!70492)))

(declare-fun res!53719 () Bool)

(assert (=> b!108341 (=> (not res!53719) (not e!70492))))

(assert (=> b!108341 (= res!53719 (not e!70494))))

(declare-fun res!53718 () Bool)

(assert (=> b!108341 (=> (not res!53718) (not e!70494))))

(assert (=> b!108341 (= res!53718 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!108342 () Bool)

(assert (=> b!108342 (= e!70495 call!11495)))

(declare-fun d!30019 () Bool)

(declare-fun res!53717 () Bool)

(assert (=> d!30019 (=> res!53717 e!70493)))

(assert (=> d!30019 (= res!53717 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30019 (= (arrayNoDuplicates!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)) e!70493)))

(declare-fun b!108338 () Bool)

(assert (=> b!108338 (= e!70492 e!70495)))

(assert (=> b!108338 (= c!19043 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!30019 (not res!53717)) b!108341))

(assert (= (and b!108341 res!53718) b!108339))

(assert (= (and b!108341 res!53719) b!108338))

(assert (= (and b!108338 c!19043) b!108342))

(assert (= (and b!108338 (not c!19043)) b!108340))

(assert (= (or b!108342 b!108340) bm!11492))

(declare-fun m!121907 () Bool)

(assert (=> b!108339 m!121907))

(assert (=> b!108339 m!121907))

(declare-fun m!121909 () Bool)

(assert (=> b!108339 m!121909))

(assert (=> bm!11492 m!121907))

(declare-fun m!121911 () Bool)

(assert (=> bm!11492 m!121911))

(assert (=> b!108341 m!121907))

(assert (=> b!108341 m!121907))

(declare-fun m!121913 () Bool)

(assert (=> b!108341 m!121913))

(assert (=> b!108338 m!121907))

(assert (=> b!108338 m!121907))

(assert (=> b!108338 m!121913))

(assert (=> bm!11330 d!30019))

(declare-fun b!108346 () Bool)

(declare-fun e!70497 () Option!164)

(assert (=> b!108346 (= e!70497 None!162)))

(declare-fun b!108345 () Bool)

(assert (=> b!108345 (= e!70497 (getValueByKey!158 (t!5712 (toList!786 lt!55320)) (_1!1199 lt!55092)))))

(declare-fun b!108343 () Bool)

(declare-fun e!70496 () Option!164)

(assert (=> b!108343 (= e!70496 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55320)))))))

(declare-fun d!30021 () Bool)

(declare-fun c!19044 () Bool)

(assert (=> d!30021 (= c!19044 (and ((_ is Cons!1600) (toList!786 lt!55320)) (= (_1!1199 (h!2198 (toList!786 lt!55320))) (_1!1199 lt!55092))))))

(assert (=> d!30021 (= (getValueByKey!158 (toList!786 lt!55320) (_1!1199 lt!55092)) e!70496)))

(declare-fun b!108344 () Bool)

(assert (=> b!108344 (= e!70496 e!70497)))

(declare-fun c!19045 () Bool)

(assert (=> b!108344 (= c!19045 (and ((_ is Cons!1600) (toList!786 lt!55320)) (not (= (_1!1199 (h!2198 (toList!786 lt!55320))) (_1!1199 lt!55092)))))))

(assert (= (and d!30021 c!19044) b!108343))

(assert (= (and d!30021 (not c!19044)) b!108344))

(assert (= (and b!108344 c!19045) b!108345))

(assert (= (and b!108344 (not c!19045)) b!108346))

(declare-fun m!121915 () Bool)

(assert (=> b!108345 m!121915))

(assert (=> b!107816 d!30021))

(declare-fun d!30023 () Bool)

(declare-fun lt!55732 () Bool)

(declare-fun content!113 (List!1605) (InoxSet (_ BitVec 64)))

(assert (=> d!30023 (= lt!55732 (select (content!113 Nil!1602) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70503 () Bool)

(assert (=> d!30023 (= lt!55732 e!70503)))

(declare-fun res!53725 () Bool)

(assert (=> d!30023 (=> (not res!53725) (not e!70503))))

(assert (=> d!30023 (= res!53725 ((_ is Cons!1601) Nil!1602))))

(assert (=> d!30023 (= (contains!822 Nil!1602 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55732)))

(declare-fun b!108351 () Bool)

(declare-fun e!70502 () Bool)

(assert (=> b!108351 (= e!70503 e!70502)))

(declare-fun res!53724 () Bool)

(assert (=> b!108351 (=> res!53724 e!70502)))

(assert (=> b!108351 (= res!53724 (= (h!2199 Nil!1602) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108352 () Bool)

(assert (=> b!108352 (= e!70502 (contains!822 (t!5713 Nil!1602) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30023 res!53725) b!108351))

(assert (= (and b!108351 (not res!53724)) b!108352))

(declare-fun m!121917 () Bool)

(assert (=> d!30023 m!121917))

(assert (=> d!30023 m!120751))

(declare-fun m!121919 () Bool)

(assert (=> d!30023 m!121919))

(assert (=> b!108352 m!120751))

(declare-fun m!121921 () Bool)

(assert (=> b!108352 m!121921))

(assert (=> b!107633 d!30023))

(declare-fun d!30025 () Bool)

(declare-fun e!70504 () Bool)

(assert (=> d!30025 e!70504))

(declare-fun res!53727 () Bool)

(assert (=> d!30025 (=> (not res!53727) (not e!70504))))

(declare-fun lt!55736 () ListLongMap!1541)

(assert (=> d!30025 (= res!53727 (contains!820 lt!55736 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun lt!55735 () List!1604)

(assert (=> d!30025 (= lt!55736 (ListLongMap!1542 lt!55735))))

(declare-fun lt!55733 () Unit!3301)

(declare-fun lt!55734 () Unit!3301)

(assert (=> d!30025 (= lt!55733 lt!55734)))

(assert (=> d!30025 (= (getValueByKey!158 lt!55735 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) (Some!163 (_2!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30025 (= lt!55734 (lemmaContainsTupThenGetReturnValue!74 lt!55735 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (_2!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30025 (= lt!55735 (insertStrictlySorted!77 (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424))) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (_2!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30025 (= (+!142 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424)) (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55736)))

(declare-fun b!108353 () Bool)

(declare-fun res!53726 () Bool)

(assert (=> b!108353 (=> (not res!53726) (not e!70504))))

(assert (=> b!108353 (= res!53726 (= (getValueByKey!158 (toList!786 lt!55736) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) (Some!163 (_2!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!108354 () Bool)

(assert (=> b!108354 (= e!70504 (contains!823 (toList!786 lt!55736) (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (= (and d!30025 res!53727) b!108353))

(assert (= (and b!108353 res!53726) b!108354))

(declare-fun m!121923 () Bool)

(assert (=> d!30025 m!121923))

(declare-fun m!121925 () Bool)

(assert (=> d!30025 m!121925))

(declare-fun m!121927 () Bool)

(assert (=> d!30025 m!121927))

(declare-fun m!121929 () Bool)

(assert (=> d!30025 m!121929))

(declare-fun m!121931 () Bool)

(assert (=> b!108353 m!121931))

(declare-fun m!121933 () Bool)

(assert (=> b!108354 m!121933))

(assert (=> bm!11425 d!30025))

(declare-fun d!30027 () Bool)

(declare-fun e!70507 () Bool)

(assert (=> d!30027 e!70507))

(declare-fun res!53730 () Bool)

(assert (=> d!30027 (=> (not res!53730) (not e!70507))))

(assert (=> d!30027 (= res!53730 (and (bvsge (index!3166 lt!55264) #b00000000000000000000000000000000) (bvslt (index!3166 lt!55264) (size!2322 (_keys!4315 newMap!16)))))))

(declare-fun lt!55739 () Unit!3301)

(declare-fun choose!684 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) Int) Unit!3301)

(assert (=> d!30027 (= lt!55739 (choose!684 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3166 lt!55264) (defaultEntry!2605 newMap!16)))))

(assert (=> d!30027 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30027 (= (lemmaValidKeyInArrayIsInListMap!108 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3166 lt!55264) (defaultEntry!2605 newMap!16)) lt!55739)))

(declare-fun b!108357 () Bool)

(assert (=> b!108357 (= e!70507 (contains!820 (getCurrentListMap!472 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264))))))

(assert (= (and d!30027 res!53730) b!108357))

(declare-fun m!121935 () Bool)

(assert (=> d!30027 m!121935))

(assert (=> d!30027 m!121179))

(declare-fun m!121937 () Bool)

(assert (=> b!108357 m!121937))

(assert (=> b!108357 m!120991))

(assert (=> b!108357 m!121937))

(assert (=> b!108357 m!120991))

(declare-fun m!121939 () Bool)

(assert (=> b!108357 m!121939))

(assert (=> b!107733 d!30027))

(declare-fun d!30029 () Bool)

(declare-fun e!70510 () Bool)

(assert (=> d!30029 e!70510))

(declare-fun res!53733 () Bool)

(assert (=> d!30029 (=> (not res!53733) (not e!70510))))

(assert (=> d!30029 (= res!53733 (and (bvsge (index!3166 lt!55264) #b00000000000000000000000000000000) (bvslt (index!3166 lt!55264) (size!2323 (_values!2588 newMap!16)))))))

(declare-fun lt!55742 () Unit!3301)

(declare-fun choose!685 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) (_ BitVec 64) V!3233 Int) Unit!3301)

(assert (=> d!30029 (= lt!55742 (choose!685 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3166 lt!55264) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 (defaultEntry!2605 newMap!16)))))

(assert (=> d!30029 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30029 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!48 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3166 lt!55264) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 (defaultEntry!2605 newMap!16)) lt!55742)))

(declare-fun b!108360 () Bool)

(assert (=> b!108360 (= e!70510 (= (+!142 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (getCurrentListMap!472 (_keys!4315 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))))

(assert (= (and d!30029 res!53733) b!108360))

(assert (=> d!30029 m!120751))

(declare-fun m!121941 () Bool)

(assert (=> d!30029 m!121941))

(assert (=> d!30029 m!121179))

(assert (=> b!108360 m!120987))

(assert (=> b!108360 m!120987))

(assert (=> b!108360 m!121805))

(assert (=> b!108360 m!120957))

(declare-fun m!121943 () Bool)

(assert (=> b!108360 m!121943))

(assert (=> b!107733 d!30029))

(declare-fun d!30031 () Bool)

(declare-fun e!70511 () Bool)

(assert (=> d!30031 e!70511))

(declare-fun res!53734 () Bool)

(assert (=> d!30031 (=> res!53734 e!70511)))

(declare-fun lt!55743 () Bool)

(assert (=> d!30031 (= res!53734 (not lt!55743))))

(declare-fun lt!55746 () Bool)

(assert (=> d!30031 (= lt!55743 lt!55746)))

(declare-fun lt!55745 () Unit!3301)

(declare-fun e!70512 () Unit!3301)

(assert (=> d!30031 (= lt!55745 e!70512)))

(declare-fun c!19046 () Bool)

(assert (=> d!30031 (= c!19046 lt!55746)))

(assert (=> d!30031 (= lt!55746 (containsKey!161 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30031 (= (contains!820 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55743)))

(declare-fun b!108361 () Bool)

(declare-fun lt!55744 () Unit!3301)

(assert (=> b!108361 (= e!70512 lt!55744)))

(assert (=> b!108361 (= lt!55744 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108361 (isDefined!110 (getValueByKey!158 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108362 () Bool)

(declare-fun Unit!3336 () Unit!3301)

(assert (=> b!108362 (= e!70512 Unit!3336)))

(declare-fun b!108363 () Bool)

(assert (=> b!108363 (= e!70511 (isDefined!110 (getValueByKey!158 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!30031 c!19046) b!108361))

(assert (= (and d!30031 (not c!19046)) b!108362))

(assert (= (and d!30031 (not res!53734)) b!108363))

(assert (=> d!30031 m!120751))

(declare-fun m!121945 () Bool)

(assert (=> d!30031 m!121945))

(assert (=> b!108361 m!120751))

(declare-fun m!121947 () Bool)

(assert (=> b!108361 m!121947))

(assert (=> b!108361 m!120751))

(declare-fun m!121949 () Bool)

(assert (=> b!108361 m!121949))

(assert (=> b!108361 m!121949))

(declare-fun m!121951 () Bool)

(assert (=> b!108361 m!121951))

(assert (=> b!108363 m!120751))

(assert (=> b!108363 m!121949))

(assert (=> b!108363 m!121949))

(assert (=> b!108363 m!121951))

(assert (=> b!107733 d!30031))

(assert (=> b!107733 d!30009))

(declare-fun d!30033 () Bool)

(assert (=> d!30033 (= (apply!99 lt!55384 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4453 () Bool)

(assert (= bs!4453 d!30033))

(assert (=> bs!4453 m!121227))

(assert (=> bs!4453 m!121227))

(declare-fun m!121953 () Bool)

(assert (=> bs!4453 m!121953))

(assert (=> b!107875 d!30033))

(declare-fun d!30035 () Bool)

(assert (=> d!30035 (isDefined!110 (getValueByKey!158 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!55749 () Unit!3301)

(declare-fun choose!686 (List!1604 (_ BitVec 64)) Unit!3301)

(assert (=> d!30035 (= lt!55749 (choose!686 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70515 () Bool)

(assert (=> d!30035 e!70515))

(declare-fun res!53737 () Bool)

(assert (=> d!30035 (=> (not res!53737) (not e!70515))))

(assert (=> d!30035 (= res!53737 (isStrictlySorted!297 (toList!786 lt!55099)))))

(assert (=> d!30035 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55749)))

(declare-fun b!108366 () Bool)

(assert (=> b!108366 (= e!70515 (containsKey!161 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30035 res!53737) b!108366))

(assert (=> d!30035 m!120751))

(assert (=> d!30035 m!120943))

(assert (=> d!30035 m!120943))

(assert (=> d!30035 m!120945))

(assert (=> d!30035 m!120751))

(declare-fun m!121955 () Bool)

(assert (=> d!30035 m!121955))

(declare-fun m!121957 () Bool)

(assert (=> d!30035 m!121957))

(assert (=> b!108366 m!120751))

(assert (=> b!108366 m!120939))

(assert (=> b!107649 d!30035))

(assert (=> b!107649 d!29955))

(assert (=> b!107649 d!29957))

(declare-fun b!108370 () Bool)

(declare-fun e!70517 () Option!164)

(assert (=> b!108370 (= e!70517 None!162)))

(declare-fun b!108369 () Bool)

(assert (=> b!108369 (= e!70517 (getValueByKey!158 (t!5712 (toList!786 lt!55291)) (_1!1199 lt!55092)))))

(declare-fun b!108367 () Bool)

(declare-fun e!70516 () Option!164)

(assert (=> b!108367 (= e!70516 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55291)))))))

(declare-fun d!30037 () Bool)

(declare-fun c!19047 () Bool)

(assert (=> d!30037 (= c!19047 (and ((_ is Cons!1600) (toList!786 lt!55291)) (= (_1!1199 (h!2198 (toList!786 lt!55291))) (_1!1199 lt!55092))))))

(assert (=> d!30037 (= (getValueByKey!158 (toList!786 lt!55291) (_1!1199 lt!55092)) e!70516)))

(declare-fun b!108368 () Bool)

(assert (=> b!108368 (= e!70516 e!70517)))

(declare-fun c!19048 () Bool)

(assert (=> b!108368 (= c!19048 (and ((_ is Cons!1600) (toList!786 lt!55291)) (not (= (_1!1199 (h!2198 (toList!786 lt!55291))) (_1!1199 lt!55092)))))))

(assert (= (and d!30037 c!19047) b!108367))

(assert (= (and d!30037 (not c!19047)) b!108368))

(assert (= (and b!108368 c!19048) b!108369))

(assert (= (and b!108368 (not c!19048)) b!108370))

(declare-fun m!121959 () Bool)

(assert (=> b!108369 m!121959))

(assert (=> b!107776 d!30037))

(declare-fun d!30039 () Bool)

(declare-fun res!53738 () Bool)

(declare-fun e!70518 () Bool)

(assert (=> d!30039 (=> res!53738 e!70518)))

(assert (=> d!30039 (= res!53738 (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30039 (= (arrayContainsKey!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!70518)))

(declare-fun b!108371 () Bool)

(declare-fun e!70519 () Bool)

(assert (=> b!108371 (= e!70518 e!70519)))

(declare-fun res!53739 () Bool)

(assert (=> b!108371 (=> (not res!53739) (not e!70519))))

(assert (=> b!108371 (= res!53739 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108372 () Bool)

(assert (=> b!108372 (= e!70519 (arrayContainsKey!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!30039 (not res!53738)) b!108371))

(assert (= (and b!108371 res!53739) b!108372))

(assert (=> d!30039 m!121659))

(assert (=> b!108372 m!120751))

(declare-fun m!121961 () Bool)

(assert (=> b!108372 m!121961))

(assert (=> b!107615 d!30039))

(declare-fun condMapEmpty!3985 () Bool)

(declare-fun mapDefault!3985 () ValueCell!1001)

(assert (=> mapNonEmpty!3984 (= condMapEmpty!3985 (= mapRest!3984 ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3985)))))

(declare-fun e!70521 () Bool)

(declare-fun mapRes!3985 () Bool)

(assert (=> mapNonEmpty!3984 (= tp!9996 (and e!70521 mapRes!3985))))

(declare-fun b!108374 () Bool)

(assert (=> b!108374 (= e!70521 tp_is_empty!2689)))

(declare-fun b!108373 () Bool)

(declare-fun e!70520 () Bool)

(assert (=> b!108373 (= e!70520 tp_is_empty!2689)))

(declare-fun mapIsEmpty!3985 () Bool)

(assert (=> mapIsEmpty!3985 mapRes!3985))

(declare-fun mapNonEmpty!3985 () Bool)

(declare-fun tp!9997 () Bool)

(assert (=> mapNonEmpty!3985 (= mapRes!3985 (and tp!9997 e!70520))))

(declare-fun mapKey!3985 () (_ BitVec 32))

(declare-fun mapRest!3985 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapValue!3985 () ValueCell!1001)

(assert (=> mapNonEmpty!3985 (= mapRest!3984 (store mapRest!3985 mapKey!3985 mapValue!3985))))

(assert (= (and mapNonEmpty!3984 condMapEmpty!3985) mapIsEmpty!3985))

(assert (= (and mapNonEmpty!3984 (not condMapEmpty!3985)) mapNonEmpty!3985))

(assert (= (and mapNonEmpty!3985 ((_ is ValueCellFull!1001) mapValue!3985)) b!108373))

(assert (= (and mapNonEmpty!3984 ((_ is ValueCellFull!1001) mapDefault!3985)) b!108374))

(declare-fun m!121963 () Bool)

(assert (=> mapNonEmpty!3985 m!121963))

(declare-fun condMapEmpty!3986 () Bool)

(declare-fun mapDefault!3986 () ValueCell!1001)

(assert (=> mapNonEmpty!3983 (= condMapEmpty!3986 (= mapRest!3983 ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3986)))))

(declare-fun e!70523 () Bool)

(declare-fun mapRes!3986 () Bool)

(assert (=> mapNonEmpty!3983 (= tp!9995 (and e!70523 mapRes!3986))))

(declare-fun b!108376 () Bool)

(assert (=> b!108376 (= e!70523 tp_is_empty!2689)))

(declare-fun b!108375 () Bool)

(declare-fun e!70522 () Bool)

(assert (=> b!108375 (= e!70522 tp_is_empty!2689)))

(declare-fun mapIsEmpty!3986 () Bool)

(assert (=> mapIsEmpty!3986 mapRes!3986))

(declare-fun mapNonEmpty!3986 () Bool)

(declare-fun tp!9998 () Bool)

(assert (=> mapNonEmpty!3986 (= mapRes!3986 (and tp!9998 e!70522))))

(declare-fun mapValue!3986 () ValueCell!1001)

(declare-fun mapRest!3986 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapKey!3986 () (_ BitVec 32))

(assert (=> mapNonEmpty!3986 (= mapRest!3983 (store mapRest!3986 mapKey!3986 mapValue!3986))))

(assert (= (and mapNonEmpty!3983 condMapEmpty!3986) mapIsEmpty!3986))

(assert (= (and mapNonEmpty!3983 (not condMapEmpty!3986)) mapNonEmpty!3986))

(assert (= (and mapNonEmpty!3986 ((_ is ValueCellFull!1001) mapValue!3986)) b!108375))

(assert (= (and mapNonEmpty!3983 ((_ is ValueCellFull!1001) mapDefault!3986)) b!108376))

(declare-fun m!121965 () Bool)

(assert (=> mapNonEmpty!3986 m!121965))

(declare-fun b_lambda!4845 () Bool)

(assert (= b_lambda!4843 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4845)))

(declare-fun b_lambda!4847 () Bool)

(assert (= b_lambda!4835 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4847)))

(declare-fun b_lambda!4849 () Bool)

(assert (= b_lambda!4841 (or (and b!107466 b_free!2545) (and b!107471 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))))) b_lambda!4849)))

(declare-fun b_lambda!4851 () Bool)

(assert (= b_lambda!4837 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4851)))

(declare-fun b_lambda!4853 () Bool)

(assert (= b_lambda!4839 (or (and b!107466 b_free!2545) (and b!107471 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))))) b_lambda!4853)))

(check-sat (not b!108167) (not b!108242) (not d!29845) (not d!29873) (not b_next!2545) (not b!108298) (not b!108200) (not b!108213) (not d!30025) (not b!108080) (not b!108179) (not b!108062) (not b!107936) (not b!108234) (not d!29967) (not b!108023) (not d!29993) (not d!29913) (not b!108336) (not d!29855) (not d!30007) (not b!108091) (not d!29917) (not bm!11429) (not d!29991) (not d!30027) (not b!108087) (not b!107998) (not bm!11433) (not d!29939) (not b!108201) (not b!108329) (not b!108215) (not b!108111) (not b!107906) (not d!30009) (not b!107928) (not b!108313) (not d!29891) (not d!29853) (not b_lambda!4821) (not bm!11456) (not d!29871) (not d!29937) (not d!29971) (not d!29861) (not d!29977) (not d!29899) (not b!108118) (not d!29911) (not b!108310) (not bm!11431) (not d!29885) (not b_lambda!4833) (not b!107952) (not d!29905) (not b_lambda!4853) (not bm!11460) (not d!29929) (not b!108168) (not d!29877) (not d!30035) (not b!108116) (not b!108330) (not b!108158) (not b!108296) (not b!108165) (not d!29893) (not b!108239) (not d!29857) (not bm!11487) (not bm!11485) (not b!108277) (not d!29907) (not d!29933) (not d!29863) (not b!107981) (not b!108233) (not b!108009) (not d!29923) (not b!108219) (not bm!11492) (not b!108236) (not b!108003) (not bm!11463) (not d!29915) (not d!29947) (not b!108237) (not b!108004) (not d!29895) (not b!108353) (not d!29999) (not d!29881) (not b!108174) (not b!108015) (not b!108020) (not d!29843) (not b!108187) (not b!108327) (not b_lambda!4845) (not b!108043) (not bm!11447) (not b!108216) (not b!108235) (not b!108011) (not b!108290) (not b!108105) (not d!29901) (not d!29945) (not bm!11480) (not d!29955) (not b!108205) (not b!108047) (not b!108279) (not b!108240) (not b!108238) (not b!108084) (not b!108082) (not b!108193) (not bm!11441) (not b!108189) (not b!108211) (not d!29997) (not b!107938) (not b!108306) (not b!108046) (not d!29981) (not b!108217) (not d!29965) (not b!108104) (not b!108181) (not b_lambda!4829) (not b!108278) (not bm!11457) (not d!29921) (not b!108352) (not d!30005) (not b!108090) (not b!108338) (not d!29849) (not b!108281) (not b!108106) b_and!6681 (not b!108218) (not d!29951) (not d!29941) (not b!108120) (not b!108022) (not b!108361) (not b!108025) (not b!108161) (not b!108069) (not d!30001) (not b!107913) (not b!107923) (not b!107922) (not b!108230) (not b!108162) (not d!29995) (not b!108195) (not b!108088) (not b!107903) (not b!108206) (not bm!11466) (not b!107984) (not d!29963) (not d!29949) (not d!29989) (not b!108102) (not b!108092) (not b!108048) (not bm!11478) (not b!108363) (not mapNonEmpty!3985) (not b!108204) (not b!108372) (not b_lambda!4847) (not b!108196) (not b!107996) (not b_next!2547) (not b!107941) (not d!30033) (not b!107916) (not d!29931) (not b!108303) (not b!108153) (not d!29919) (not b!108028) (not b!107986) (not d!29867) (not b!108044) (not b!108001) (not d!29959) (not b!108124) (not bm!11468) (not b_lambda!4851) (not b!108176) (not bm!11432) (not bm!11491) (not b!108172) (not b!108316) (not b!108360) (not b_lambda!4831) (not d!29927) (not b!108101) (not b!108232) (not b!108332) (not bm!11444) (not d!29973) (not b!108312) (not d!30031) (not b!108307) (not b!107937) (not b!108107) (not b!108339) (not b!107958) (not b!108117) (not d!29865) (not b!108284) (not d!30023) (not b!108357) (not d!29925) (not bm!11462) tp_is_empty!2689 (not b!108194) (not b!108122) (not b!108184) (not b!108006) (not b!108110) (not b!108198) (not bm!11451) (not b!107920) (not b!107925) (not b!108067) (not d!29903) (not b!108182) (not b!108017) (not b!107902) (not b!108030) (not bm!11490) (not b_lambda!4849) (not b!108099) (not d!29953) (not d!29983) (not d!29979) (not d!29985) (not b!108109) (not mapNonEmpty!3986) (not b!108151) (not bm!11486) b_and!6683 (not b!107908) (not b!108369) (not d!29943) (not d!30029) (not b!108366) (not b!107917) (not b!107995) (not b!107939) (not b!108081) (not b!108345) (not bm!11464) (not b!108224) (not b!108341) (not b!107927) (not d!29883) (not d!29841) (not d!29887) (not bm!11479) (not b!107930) (not bm!11483) (not b!108221) (not b!108354) (not b!108085) (not b!107959) (not d!30003) (not d!29909) (not b!108098) (not d!29837))
(check-sat b_and!6681 b_and!6683 (not b_next!2545) (not b_next!2547))
(get-model)

(declare-fun d!30041 () Bool)

(declare-fun lt!55750 () Bool)

(assert (=> d!30041 (= lt!55750 (select (content!112 (toList!786 lt!55507)) (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!70524 () Bool)

(assert (=> d!30041 (= lt!55750 e!70524)))

(declare-fun res!53741 () Bool)

(assert (=> d!30041 (=> (not res!53741) (not e!70524))))

(assert (=> d!30041 (= res!53741 ((_ is Cons!1600) (toList!786 lt!55507)))))

(assert (=> d!30041 (= (contains!823 (toList!786 lt!55507) (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55750)))

(declare-fun b!108377 () Bool)

(declare-fun e!70525 () Bool)

(assert (=> b!108377 (= e!70524 e!70525)))

(declare-fun res!53740 () Bool)

(assert (=> b!108377 (=> res!53740 e!70525)))

(assert (=> b!108377 (= res!53740 (= (h!2198 (toList!786 lt!55507)) (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108378 () Bool)

(assert (=> b!108378 (= e!70525 (contains!823 (t!5712 (toList!786 lt!55507)) (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30041 res!53741) b!108377))

(assert (= (and b!108377 (not res!53740)) b!108378))

(declare-fun m!121967 () Bool)

(assert (=> d!30041 m!121967))

(declare-fun m!121969 () Bool)

(assert (=> d!30041 m!121969))

(declare-fun m!121971 () Bool)

(assert (=> b!108378 m!121971))

(assert (=> b!108099 d!30041))

(declare-fun d!30043 () Bool)

(assert (=> d!30043 (= (get!1350 (getValueByKey!158 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2920 (getValueByKey!158 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29837 d!30043))

(declare-fun b!108382 () Bool)

(declare-fun e!70527 () Option!164)

(assert (=> b!108382 (= e!70527 None!162)))

(declare-fun b!108381 () Bool)

(assert (=> b!108381 (= e!70527 (getValueByKey!158 (t!5712 (toList!786 lt!55384)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108379 () Bool)

(declare-fun e!70526 () Option!164)

(assert (=> b!108379 (= e!70526 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55384)))))))

(declare-fun d!30045 () Bool)

(declare-fun c!19049 () Bool)

(assert (=> d!30045 (= c!19049 (and ((_ is Cons!1600) (toList!786 lt!55384)) (= (_1!1199 (h!2198 (toList!786 lt!55384))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30045 (= (getValueByKey!158 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000) e!70526)))

(declare-fun b!108380 () Bool)

(assert (=> b!108380 (= e!70526 e!70527)))

(declare-fun c!19050 () Bool)

(assert (=> b!108380 (= c!19050 (and ((_ is Cons!1600) (toList!786 lt!55384)) (not (= (_1!1199 (h!2198 (toList!786 lt!55384))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!30045 c!19049) b!108379))

(assert (= (and d!30045 (not c!19049)) b!108380))

(assert (= (and b!108380 c!19050) b!108381))

(assert (= (and b!108380 (not c!19050)) b!108382))

(declare-fun m!121973 () Bool)

(assert (=> b!108381 m!121973))

(assert (=> d!29837 d!30045))

(declare-fun d!30047 () Bool)

(assert (=> d!30047 (= (apply!99 lt!55557 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1350 (getValueByKey!158 (toList!786 lt!55557) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4454 () Bool)

(assert (= bs!4454 d!30047))

(assert (=> bs!4454 m!121169))

(declare-fun m!121975 () Bool)

(assert (=> bs!4454 m!121975))

(assert (=> bs!4454 m!121975))

(declare-fun m!121977 () Bool)

(assert (=> bs!4454 m!121977))

(assert (=> b!108168 d!30047))

(declare-fun c!19051 () Bool)

(declare-fun d!30049 () Bool)

(assert (=> d!30049 (= c!19051 ((_ is ValueCellFull!1001) (select (arr!2067 (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!70528 () V!3233)

(assert (=> d!30049 (= (get!1345 (select (arr!2067 (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70528)))

(declare-fun b!108383 () Bool)

(assert (=> b!108383 (= e!70528 (get!1348 (select (arr!2067 (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108384 () Bool)

(assert (=> b!108384 (= e!70528 (get!1349 (select (arr!2067 (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30049 c!19051) b!108383))

(assert (= (and d!30049 (not c!19051)) b!108384))

(assert (=> b!108383 m!121619))

(assert (=> b!108383 m!121217))

(declare-fun m!121979 () Bool)

(assert (=> b!108383 m!121979))

(assert (=> b!108384 m!121619))

(assert (=> b!108384 m!121217))

(declare-fun m!121981 () Bool)

(assert (=> b!108384 m!121981))

(assert (=> b!108168 d!30049))

(declare-fun d!30051 () Bool)

(declare-fun lt!55751 () Bool)

(assert (=> d!30051 (= lt!55751 (select (content!112 (toList!786 lt!55497)) (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!70529 () Bool)

(assert (=> d!30051 (= lt!55751 e!70529)))

(declare-fun res!53743 () Bool)

(assert (=> d!30051 (=> (not res!53743) (not e!70529))))

(assert (=> d!30051 (= res!53743 ((_ is Cons!1600) (toList!786 lt!55497)))))

(assert (=> d!30051 (= (contains!823 (toList!786 lt!55497) (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55751)))

(declare-fun b!108385 () Bool)

(declare-fun e!70530 () Bool)

(assert (=> b!108385 (= e!70529 e!70530)))

(declare-fun res!53742 () Bool)

(assert (=> b!108385 (=> res!53742 e!70530)))

(assert (=> b!108385 (= res!53742 (= (h!2198 (toList!786 lt!55497)) (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108386 () Bool)

(assert (=> b!108386 (= e!70530 (contains!823 (t!5712 (toList!786 lt!55497)) (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30051 res!53743) b!108385))

(assert (= (and b!108385 (not res!53742)) b!108386))

(declare-fun m!121983 () Bool)

(assert (=> d!30051 m!121983))

(declare-fun m!121985 () Bool)

(assert (=> d!30051 m!121985))

(declare-fun m!121987 () Bool)

(assert (=> b!108386 m!121987))

(assert (=> b!108092 d!30051))

(declare-fun d!30053 () Bool)

(declare-fun e!70531 () Bool)

(assert (=> d!30053 e!70531))

(declare-fun res!53744 () Bool)

(assert (=> d!30053 (=> res!53744 e!70531)))

(declare-fun lt!55752 () Bool)

(assert (=> d!30053 (= res!53744 (not lt!55752))))

(declare-fun lt!55755 () Bool)

(assert (=> d!30053 (= lt!55752 lt!55755)))

(declare-fun lt!55754 () Unit!3301)

(declare-fun e!70532 () Unit!3301)

(assert (=> d!30053 (= lt!55754 e!70532)))

(declare-fun c!19052 () Bool)

(assert (=> d!30053 (= c!19052 lt!55755)))

(assert (=> d!30053 (= lt!55755 (containsKey!161 (toList!786 lt!55570) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!30053 (= (contains!820 lt!55570 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!55752)))

(declare-fun b!108387 () Bool)

(declare-fun lt!55753 () Unit!3301)

(assert (=> b!108387 (= e!70532 lt!55753)))

(assert (=> b!108387 (= lt!55753 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55570) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!108387 (isDefined!110 (getValueByKey!158 (toList!786 lt!55570) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!108388 () Bool)

(declare-fun Unit!3337 () Unit!3301)

(assert (=> b!108388 (= e!70532 Unit!3337)))

(declare-fun b!108389 () Bool)

(assert (=> b!108389 (= e!70531 (isDefined!110 (getValueByKey!158 (toList!786 lt!55570) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!30053 c!19052) b!108387))

(assert (= (and d!30053 (not c!19052)) b!108388))

(assert (= (and d!30053 (not res!53744)) b!108389))

(assert (=> d!30053 m!121659))

(declare-fun m!121989 () Bool)

(assert (=> d!30053 m!121989))

(assert (=> b!108387 m!121659))

(declare-fun m!121991 () Bool)

(assert (=> b!108387 m!121991))

(assert (=> b!108387 m!121659))

(declare-fun m!121993 () Bool)

(assert (=> b!108387 m!121993))

(assert (=> b!108387 m!121993))

(declare-fun m!121995 () Bool)

(assert (=> b!108387 m!121995))

(assert (=> b!108389 m!121659))

(assert (=> b!108389 m!121993))

(assert (=> b!108389 m!121993))

(assert (=> b!108389 m!121995))

(assert (=> b!108194 d!30053))

(declare-fun d!30055 () Bool)

(assert (=> d!30055 (= (get!1348 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2913 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!108106 d!30055))

(declare-fun d!30057 () Bool)

(assert (=> d!30057 (= (validMask!0 (mask!6763 newMap!16)) (and (or (= (mask!6763 newMap!16) #b00000000000000000000000000000111) (= (mask!6763 newMap!16) #b00000000000000000000000000001111) (= (mask!6763 newMap!16) #b00000000000000000000000000011111) (= (mask!6763 newMap!16) #b00000000000000000000000000111111) (= (mask!6763 newMap!16) #b00000000000000000000000001111111) (= (mask!6763 newMap!16) #b00000000000000000000000011111111) (= (mask!6763 newMap!16) #b00000000000000000000000111111111) (= (mask!6763 newMap!16) #b00000000000000000000001111111111) (= (mask!6763 newMap!16) #b00000000000000000000011111111111) (= (mask!6763 newMap!16) #b00000000000000000000111111111111) (= (mask!6763 newMap!16) #b00000000000000000001111111111111) (= (mask!6763 newMap!16) #b00000000000000000011111111111111) (= (mask!6763 newMap!16) #b00000000000000000111111111111111) (= (mask!6763 newMap!16) #b00000000000000001111111111111111) (= (mask!6763 newMap!16) #b00000000000000011111111111111111) (= (mask!6763 newMap!16) #b00000000000000111111111111111111) (= (mask!6763 newMap!16) #b00000000000001111111111111111111) (= (mask!6763 newMap!16) #b00000000000011111111111111111111) (= (mask!6763 newMap!16) #b00000000000111111111111111111111) (= (mask!6763 newMap!16) #b00000000001111111111111111111111) (= (mask!6763 newMap!16) #b00000000011111111111111111111111) (= (mask!6763 newMap!16) #b00000000111111111111111111111111) (= (mask!6763 newMap!16) #b00000001111111111111111111111111) (= (mask!6763 newMap!16) #b00000011111111111111111111111111) (= (mask!6763 newMap!16) #b00000111111111111111111111111111) (= (mask!6763 newMap!16) #b00001111111111111111111111111111) (= (mask!6763 newMap!16) #b00011111111111111111111111111111) (= (mask!6763 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6763 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!29953 d!30057))

(declare-fun d!30059 () Bool)

(assert (=> d!30059 (= (inRange!0 (index!3166 lt!55594) (mask!6763 newMap!16)) (and (bvsge (index!3166 lt!55594) #b00000000000000000000000000000000) (bvslt (index!3166 lt!55594) (bvadd (mask!6763 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!108230 d!30059))

(declare-fun d!30061 () Bool)

(declare-fun e!70533 () Bool)

(assert (=> d!30061 e!70533))

(declare-fun res!53745 () Bool)

(assert (=> d!30061 (=> res!53745 e!70533)))

(declare-fun lt!55756 () Bool)

(assert (=> d!30061 (= res!53745 (not lt!55756))))

(declare-fun lt!55759 () Bool)

(assert (=> d!30061 (= lt!55756 lt!55759)))

(declare-fun lt!55758 () Unit!3301)

(declare-fun e!70534 () Unit!3301)

(assert (=> d!30061 (= lt!55758 e!70534)))

(declare-fun c!19053 () Bool)

(assert (=> d!30061 (= c!19053 lt!55759)))

(assert (=> d!30061 (= lt!55759 (containsKey!161 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264))))))

(assert (=> d!30061 (= (contains!820 (getCurrentListMap!472 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264))) lt!55756)))

(declare-fun b!108390 () Bool)

(declare-fun lt!55757 () Unit!3301)

(assert (=> b!108390 (= e!70534 lt!55757)))

(assert (=> b!108390 (= lt!55757 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264))))))

(assert (=> b!108390 (isDefined!110 (getValueByKey!158 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264))))))

(declare-fun b!108391 () Bool)

(declare-fun Unit!3338 () Unit!3301)

(assert (=> b!108391 (= e!70534 Unit!3338)))

(declare-fun b!108392 () Bool)

(assert (=> b!108392 (= e!70533 (isDefined!110 (getValueByKey!158 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))))

(assert (= (and d!30061 c!19053) b!108390))

(assert (= (and d!30061 (not c!19053)) b!108391))

(assert (= (and d!30061 (not res!53745)) b!108392))

(assert (=> d!30061 m!120991))

(declare-fun m!121997 () Bool)

(assert (=> d!30061 m!121997))

(assert (=> b!108390 m!120991))

(declare-fun m!121999 () Bool)

(assert (=> b!108390 m!121999))

(assert (=> b!108390 m!120991))

(declare-fun m!122001 () Bool)

(assert (=> b!108390 m!122001))

(assert (=> b!108390 m!122001))

(declare-fun m!122003 () Bool)

(assert (=> b!108390 m!122003))

(assert (=> b!108392 m!120991))

(assert (=> b!108392 m!122001))

(assert (=> b!108392 m!122001))

(assert (=> b!108392 m!122003))

(assert (=> b!108357 d!30061))

(declare-fun bm!11493 () Bool)

(declare-fun call!11501 () ListLongMap!1541)

(declare-fun call!11496 () ListLongMap!1541)

(assert (=> bm!11493 (= call!11501 call!11496)))

(declare-fun b!108393 () Bool)

(declare-fun e!70536 () ListLongMap!1541)

(declare-fun e!70546 () ListLongMap!1541)

(assert (=> b!108393 (= e!70536 e!70546)))

(declare-fun c!19055 () Bool)

(assert (=> b!108393 (= c!19055 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11494 () Bool)

(declare-fun call!11498 () ListLongMap!1541)

(declare-fun call!11502 () ListLongMap!1541)

(assert (=> bm!11494 (= call!11498 call!11502)))

(declare-fun b!108394 () Bool)

(declare-fun e!70537 () Bool)

(declare-fun e!70545 () Bool)

(assert (=> b!108394 (= e!70537 e!70545)))

(declare-fun res!53753 () Bool)

(declare-fun call!11500 () Bool)

(assert (=> b!108394 (= res!53753 call!11500)))

(assert (=> b!108394 (=> (not res!53753) (not e!70545))))

(declare-fun bm!11495 () Bool)

(declare-fun call!11499 () Bool)

(declare-fun lt!55775 () ListLongMap!1541)

(assert (=> bm!11495 (= call!11499 (contains!820 lt!55775 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108395 () Bool)

(declare-fun e!70535 () Bool)

(declare-fun e!70538 () Bool)

(assert (=> b!108395 (= e!70535 e!70538)))

(declare-fun res!53754 () Bool)

(assert (=> b!108395 (=> (not res!53754) (not e!70538))))

(assert (=> b!108395 (= res!53754 (contains!820 lt!55775 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108395 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108396 () Bool)

(declare-fun res!53750 () Bool)

(declare-fun e!70547 () Bool)

(assert (=> b!108396 (=> (not res!53750) (not e!70547))))

(assert (=> b!108396 (= res!53750 e!70537)))

(declare-fun c!19054 () Bool)

(assert (=> b!108396 (= c!19054 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11496 () Bool)

(declare-fun call!11497 () ListLongMap!1541)

(assert (=> bm!11496 (= call!11497 call!11498)))

(declare-fun b!108397 () Bool)

(declare-fun e!70543 () Bool)

(assert (=> b!108397 (= e!70543 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108398 () Bool)

(assert (=> b!108398 (= e!70546 call!11501)))

(declare-fun b!108399 () Bool)

(declare-fun e!70539 () Bool)

(assert (=> b!108399 (= e!70547 e!70539)))

(declare-fun c!19056 () Bool)

(assert (=> b!108399 (= c!19056 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11497 () Bool)

(assert (=> bm!11497 (= call!11502 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!108400 () Bool)

(declare-fun e!70541 () ListLongMap!1541)

(assert (=> b!108400 (= e!70541 call!11501)))

(declare-fun b!108401 () Bool)

(declare-fun e!70540 () Unit!3301)

(declare-fun Unit!3339 () Unit!3301)

(assert (=> b!108401 (= e!70540 Unit!3339)))

(declare-fun b!108402 () Bool)

(declare-fun e!70542 () Bool)

(assert (=> b!108402 (= e!70542 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108403 () Bool)

(declare-fun res!53752 () Bool)

(assert (=> b!108403 (=> (not res!53752) (not e!70547))))

(assert (=> b!108403 (= res!53752 e!70535)))

(declare-fun res!53747 () Bool)

(assert (=> b!108403 (=> res!53747 e!70535)))

(assert (=> b!108403 (= res!53747 (not e!70543))))

(declare-fun res!53751 () Bool)

(assert (=> b!108403 (=> (not res!53751) (not e!70543))))

(assert (=> b!108403 (= res!53751 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108404 () Bool)

(declare-fun e!70544 () Bool)

(assert (=> b!108404 (= e!70539 e!70544)))

(declare-fun res!53746 () Bool)

(assert (=> b!108404 (= res!53746 call!11499)))

(assert (=> b!108404 (=> (not res!53746) (not e!70544))))

(declare-fun b!108405 () Bool)

(declare-fun lt!55765 () Unit!3301)

(assert (=> b!108405 (= e!70540 lt!55765)))

(declare-fun lt!55766 () ListLongMap!1541)

(assert (=> b!108405 (= lt!55766 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55770 () (_ BitVec 64))

(assert (=> b!108405 (= lt!55770 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55768 () (_ BitVec 64))

(assert (=> b!108405 (= lt!55768 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55771 () Unit!3301)

(assert (=> b!108405 (= lt!55771 (addStillContains!75 lt!55766 lt!55770 (zeroValue!2478 newMap!16) lt!55768))))

(assert (=> b!108405 (contains!820 (+!142 lt!55766 (tuple2!2377 lt!55770 (zeroValue!2478 newMap!16))) lt!55768)))

(declare-fun lt!55778 () Unit!3301)

(assert (=> b!108405 (= lt!55778 lt!55771)))

(declare-fun lt!55764 () ListLongMap!1541)

(assert (=> b!108405 (= lt!55764 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55769 () (_ BitVec 64))

(assert (=> b!108405 (= lt!55769 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55772 () (_ BitVec 64))

(assert (=> b!108405 (= lt!55772 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55774 () Unit!3301)

(assert (=> b!108405 (= lt!55774 (addApplyDifferent!75 lt!55764 lt!55769 (minValue!2478 newMap!16) lt!55772))))

(assert (=> b!108405 (= (apply!99 (+!142 lt!55764 (tuple2!2377 lt!55769 (minValue!2478 newMap!16))) lt!55772) (apply!99 lt!55764 lt!55772))))

(declare-fun lt!55767 () Unit!3301)

(assert (=> b!108405 (= lt!55767 lt!55774)))

(declare-fun lt!55762 () ListLongMap!1541)

(assert (=> b!108405 (= lt!55762 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55781 () (_ BitVec 64))

(assert (=> b!108405 (= lt!55781 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55776 () (_ BitVec 64))

(assert (=> b!108405 (= lt!55776 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55780 () Unit!3301)

(assert (=> b!108405 (= lt!55780 (addApplyDifferent!75 lt!55762 lt!55781 (zeroValue!2478 newMap!16) lt!55776))))

(assert (=> b!108405 (= (apply!99 (+!142 lt!55762 (tuple2!2377 lt!55781 (zeroValue!2478 newMap!16))) lt!55776) (apply!99 lt!55762 lt!55776))))

(declare-fun lt!55773 () Unit!3301)

(assert (=> b!108405 (= lt!55773 lt!55780)))

(declare-fun lt!55760 () ListLongMap!1541)

(assert (=> b!108405 (= lt!55760 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55761 () (_ BitVec 64))

(assert (=> b!108405 (= lt!55761 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55763 () (_ BitVec 64))

(assert (=> b!108405 (= lt!55763 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108405 (= lt!55765 (addApplyDifferent!75 lt!55760 lt!55761 (minValue!2478 newMap!16) lt!55763))))

(assert (=> b!108405 (= (apply!99 (+!142 lt!55760 (tuple2!2377 lt!55761 (minValue!2478 newMap!16))) lt!55763) (apply!99 lt!55760 lt!55763))))

(declare-fun c!19058 () Bool)

(declare-fun bm!11498 () Bool)

(assert (=> bm!11498 (= call!11496 (+!142 (ite c!19058 call!11502 (ite c!19055 call!11498 call!11497)) (ite (or c!19058 c!19055) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun bm!11499 () Bool)

(assert (=> bm!11499 (= call!11500 (contains!820 lt!55775 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108406 () Bool)

(assert (=> b!108406 (= e!70544 (= (apply!99 lt!55775 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!108407 () Bool)

(assert (=> b!108407 (= e!70541 call!11497)))

(declare-fun b!108408 () Bool)

(declare-fun c!19059 () Bool)

(assert (=> b!108408 (= c!19059 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108408 (= e!70546 e!70541)))

(declare-fun b!108409 () Bool)

(assert (=> b!108409 (= e!70545 (= (apply!99 lt!55775 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!108410 () Bool)

(assert (=> b!108410 (= e!70539 (not call!11499))))

(declare-fun b!108411 () Bool)

(assert (=> b!108411 (= e!70536 (+!142 call!11496 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun b!108412 () Bool)

(assert (=> b!108412 (= e!70538 (= (apply!99 lt!55775 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 lt!55257) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108412 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 lt!55257)))))

(assert (=> b!108412 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108413 () Bool)

(assert (=> b!108413 (= e!70537 (not call!11500))))

(declare-fun d!30063 () Bool)

(assert (=> d!30063 e!70547))

(declare-fun res!53748 () Bool)

(assert (=> d!30063 (=> (not res!53748) (not e!70547))))

(assert (=> d!30063 (= res!53748 (or (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))))

(declare-fun lt!55777 () ListLongMap!1541)

(assert (=> d!30063 (= lt!55775 lt!55777)))

(declare-fun lt!55779 () Unit!3301)

(assert (=> d!30063 (= lt!55779 e!70540)))

(declare-fun c!19057 () Bool)

(assert (=> d!30063 (= c!19057 e!70542)))

(declare-fun res!53749 () Bool)

(assert (=> d!30063 (=> (not res!53749) (not e!70542))))

(assert (=> d!30063 (= res!53749 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30063 (= lt!55777 e!70536)))

(assert (=> d!30063 (= c!19058 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30063 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30063 (= (getCurrentListMap!472 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55775)))

(assert (= (and d!30063 c!19058) b!108411))

(assert (= (and d!30063 (not c!19058)) b!108393))

(assert (= (and b!108393 c!19055) b!108398))

(assert (= (and b!108393 (not c!19055)) b!108408))

(assert (= (and b!108408 c!19059) b!108400))

(assert (= (and b!108408 (not c!19059)) b!108407))

(assert (= (or b!108400 b!108407) bm!11496))

(assert (= (or b!108398 bm!11496) bm!11494))

(assert (= (or b!108398 b!108400) bm!11493))

(assert (= (or b!108411 bm!11494) bm!11497))

(assert (= (or b!108411 bm!11493) bm!11498))

(assert (= (and d!30063 res!53749) b!108402))

(assert (= (and d!30063 c!19057) b!108405))

(assert (= (and d!30063 (not c!19057)) b!108401))

(assert (= (and d!30063 res!53748) b!108403))

(assert (= (and b!108403 res!53751) b!108397))

(assert (= (and b!108403 (not res!53747)) b!108395))

(assert (= (and b!108395 res!53754) b!108412))

(assert (= (and b!108403 res!53752) b!108396))

(assert (= (and b!108396 c!19054) b!108394))

(assert (= (and b!108396 (not c!19054)) b!108413))

(assert (= (and b!108394 res!53753) b!108409))

(assert (= (or b!108394 b!108413) bm!11499))

(assert (= (and b!108396 res!53750) b!108399))

(assert (= (and b!108399 c!19056) b!108404))

(assert (= (and b!108399 (not c!19056)) b!108410))

(assert (= (and b!108404 res!53746) b!108406))

(assert (= (or b!108404 b!108410) bm!11495))

(declare-fun b_lambda!4855 () Bool)

(assert (=> (not b_lambda!4855) (not b!108412)))

(assert (=> b!108412 t!5726))

(declare-fun b_and!6685 () Bool)

(assert (= b_and!6681 (and (=> t!5726 result!3505) b_and!6685)))

(assert (=> b!108412 t!5728))

(declare-fun b_and!6687 () Bool)

(assert (= b_and!6683 (and (=> t!5728 result!3507) b_and!6687)))

(declare-fun m!122005 () Bool)

(assert (=> b!108409 m!122005))

(declare-fun m!122007 () Bool)

(assert (=> b!108411 m!122007))

(declare-fun m!122009 () Bool)

(assert (=> bm!11495 m!122009))

(assert (=> b!108395 m!121169))

(assert (=> b!108395 m!121169))

(declare-fun m!122011 () Bool)

(assert (=> b!108395 m!122011))

(declare-fun m!122013 () Bool)

(assert (=> bm!11499 m!122013))

(assert (=> b!108397 m!121169))

(assert (=> b!108397 m!121169))

(assert (=> b!108397 m!121175))

(declare-fun m!122015 () Bool)

(assert (=> b!108406 m!122015))

(assert (=> d!30063 m!121179))

(declare-fun m!122017 () Bool)

(assert (=> b!108405 m!122017))

(declare-fun m!122019 () Bool)

(assert (=> b!108405 m!122019))

(declare-fun m!122021 () Bool)

(assert (=> b!108405 m!122021))

(assert (=> b!108405 m!121169))

(declare-fun m!122023 () Bool)

(assert (=> b!108405 m!122023))

(declare-fun m!122025 () Bool)

(assert (=> b!108405 m!122025))

(declare-fun m!122027 () Bool)

(assert (=> b!108405 m!122027))

(declare-fun m!122029 () Bool)

(assert (=> b!108405 m!122029))

(declare-fun m!122031 () Bool)

(assert (=> b!108405 m!122031))

(declare-fun m!122033 () Bool)

(assert (=> b!108405 m!122033))

(declare-fun m!122035 () Bool)

(assert (=> b!108405 m!122035))

(declare-fun m!122037 () Bool)

(assert (=> b!108405 m!122037))

(declare-fun m!122039 () Bool)

(assert (=> b!108405 m!122039))

(declare-fun m!122041 () Bool)

(assert (=> b!108405 m!122041))

(assert (=> b!108405 m!122035))

(declare-fun m!122043 () Bool)

(assert (=> b!108405 m!122043))

(declare-fun m!122045 () Bool)

(assert (=> b!108405 m!122045))

(assert (=> b!108405 m!122039))

(declare-fun m!122047 () Bool)

(assert (=> b!108405 m!122047))

(assert (=> b!108405 m!122043))

(assert (=> b!108405 m!122023))

(declare-fun m!122049 () Bool)

(assert (=> bm!11498 m!122049))

(assert (=> bm!11497 m!122021))

(assert (=> b!108402 m!121169))

(assert (=> b!108402 m!121169))

(assert (=> b!108402 m!121175))

(declare-fun m!122051 () Bool)

(assert (=> b!108412 m!122051))

(assert (=> b!108412 m!122051))

(assert (=> b!108412 m!121217))

(declare-fun m!122053 () Bool)

(assert (=> b!108412 m!122053))

(assert (=> b!108412 m!121169))

(declare-fun m!122055 () Bool)

(assert (=> b!108412 m!122055))

(assert (=> b!108412 m!121169))

(assert (=> b!108412 m!121217))

(assert (=> b!108357 d!30063))

(declare-fun e!70549 () Bool)

(declare-fun lt!55782 () ListLongMap!1541)

(declare-fun b!108414 () Bool)

(assert (=> b!108414 (= e!70549 (= lt!55782 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257) (mask!6763 newMap!16) (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16))))))

(declare-fun b!108415 () Bool)

(declare-fun e!70548 () Bool)

(declare-fun e!70553 () Bool)

(assert (=> b!108415 (= e!70548 e!70553)))

(assert (=> b!108415 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun res!53756 () Bool)

(assert (=> b!108415 (= res!53756 (contains!820 lt!55782 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108415 (=> (not res!53756) (not e!70553))))

(declare-fun b!108416 () Bool)

(declare-fun e!70550 () ListLongMap!1541)

(declare-fun e!70551 () ListLongMap!1541)

(assert (=> b!108416 (= e!70550 e!70551)))

(declare-fun c!19060 () Bool)

(assert (=> b!108416 (= c!19060 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!30065 () Bool)

(declare-fun e!70552 () Bool)

(assert (=> d!30065 e!70552))

(declare-fun res!53757 () Bool)

(assert (=> d!30065 (=> (not res!53757) (not e!70552))))

(assert (=> d!30065 (= res!53757 (not (contains!820 lt!55782 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30065 (= lt!55782 e!70550)))

(declare-fun c!19061 () Bool)

(assert (=> d!30065 (= c!19061 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30065 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30065 (= (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257) (mask!6763 newMap!16) (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55782)))

(declare-fun b!108417 () Bool)

(assert (=> b!108417 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> b!108417 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257))))))

(assert (=> b!108417 (= e!70553 (= (apply!99 lt!55782 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108418 () Bool)

(assert (=> b!108418 (= e!70552 e!70548)))

(declare-fun c!19062 () Bool)

(declare-fun e!70554 () Bool)

(assert (=> b!108418 (= c!19062 e!70554)))

(declare-fun res!53758 () Bool)

(assert (=> b!108418 (=> (not res!53758) (not e!70554))))

(assert (=> b!108418 (= res!53758 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108419 () Bool)

(declare-fun res!53755 () Bool)

(assert (=> b!108419 (=> (not res!53755) (not e!70552))))

(assert (=> b!108419 (= res!53755 (not (contains!820 lt!55782 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108420 () Bool)

(assert (=> b!108420 (= e!70550 (ListLongMap!1542 Nil!1601))))

(declare-fun b!108421 () Bool)

(declare-fun lt!55786 () Unit!3301)

(declare-fun lt!55787 () Unit!3301)

(assert (=> b!108421 (= lt!55786 lt!55787)))

(declare-fun lt!55785 () ListLongMap!1541)

(declare-fun lt!55783 () V!3233)

(declare-fun lt!55784 () (_ BitVec 64))

(declare-fun lt!55788 () (_ BitVec 64))

(assert (=> b!108421 (not (contains!820 (+!142 lt!55785 (tuple2!2377 lt!55788 lt!55783)) lt!55784))))

(assert (=> b!108421 (= lt!55787 (addStillNotContains!49 lt!55785 lt!55788 lt!55783 lt!55784))))

(assert (=> b!108421 (= lt!55784 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108421 (= lt!55783 (get!1345 (select (arr!2067 (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108421 (= lt!55788 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11503 () ListLongMap!1541)

(assert (=> b!108421 (= lt!55785 call!11503)))

(assert (=> b!108421 (= e!70551 (+!142 call!11503 (tuple2!2377 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) (get!1345 (select (arr!2067 (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108422 () Bool)

(assert (=> b!108422 (= e!70554 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108422 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!108423 () Bool)

(assert (=> b!108423 (= e!70548 e!70549)))

(declare-fun c!19063 () Bool)

(assert (=> b!108423 (= c!19063 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun bm!11500 () Bool)

(assert (=> bm!11500 (= call!11503 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257) (mask!6763 newMap!16) (ite c!18886 (ite c!18882 lt!55270 lt!55262) (extraKeys!2406 newMap!16)) (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16)))))

(declare-fun b!108424 () Bool)

(assert (=> b!108424 (= e!70551 call!11503)))

(declare-fun b!108425 () Bool)

(assert (=> b!108425 (= e!70549 (isEmpty!379 lt!55782))))

(assert (= (and d!30065 c!19061) b!108420))

(assert (= (and d!30065 (not c!19061)) b!108416))

(assert (= (and b!108416 c!19060) b!108421))

(assert (= (and b!108416 (not c!19060)) b!108424))

(assert (= (or b!108421 b!108424) bm!11500))

(assert (= (and d!30065 res!53757) b!108419))

(assert (= (and b!108419 res!53755) b!108418))

(assert (= (and b!108418 res!53758) b!108422))

(assert (= (and b!108418 c!19062) b!108415))

(assert (= (and b!108418 (not c!19062)) b!108423))

(assert (= (and b!108415 res!53756) b!108417))

(assert (= (and b!108423 c!19063) b!108414))

(assert (= (and b!108423 (not c!19063)) b!108425))

(declare-fun b_lambda!4857 () Bool)

(assert (=> (not b_lambda!4857) (not b!108417)))

(assert (=> b!108417 t!5726))

(declare-fun b_and!6689 () Bool)

(assert (= b_and!6685 (and (=> t!5726 result!3505) b_and!6689)))

(assert (=> b!108417 t!5728))

(declare-fun b_and!6691 () Bool)

(assert (= b_and!6687 (and (=> t!5728 result!3507) b_and!6691)))

(declare-fun b_lambda!4859 () Bool)

(assert (=> (not b_lambda!4859) (not b!108421)))

(assert (=> b!108421 t!5726))

(declare-fun b_and!6693 () Bool)

(assert (= b_and!6689 (and (=> t!5726 result!3505) b_and!6693)))

(assert (=> b!108421 t!5728))

(declare-fun b_and!6695 () Bool)

(assert (= b_and!6691 (and (=> t!5728 result!3507) b_and!6695)))

(declare-fun m!122057 () Bool)

(assert (=> b!108425 m!122057))

(declare-fun m!122059 () Bool)

(assert (=> b!108414 m!122059))

(assert (=> b!108415 m!121169))

(assert (=> b!108415 m!121169))

(declare-fun m!122061 () Bool)

(assert (=> b!108415 m!122061))

(assert (=> b!108416 m!121169))

(assert (=> b!108416 m!121169))

(assert (=> b!108416 m!121175))

(assert (=> bm!11500 m!122059))

(assert (=> b!108422 m!121169))

(assert (=> b!108422 m!121169))

(assert (=> b!108422 m!121175))

(declare-fun m!122063 () Bool)

(assert (=> b!108421 m!122063))

(declare-fun m!122065 () Bool)

(assert (=> b!108421 m!122065))

(assert (=> b!108421 m!121215))

(assert (=> b!108421 m!122063))

(declare-fun m!122067 () Bool)

(assert (=> b!108421 m!122067))

(declare-fun m!122069 () Bool)

(assert (=> b!108421 m!122069))

(assert (=> b!108421 m!121217))

(assert (=> b!108421 m!121169))

(assert (=> b!108421 m!121215))

(assert (=> b!108421 m!121217))

(assert (=> b!108421 m!121219))

(declare-fun m!122071 () Bool)

(assert (=> b!108419 m!122071))

(declare-fun m!122073 () Bool)

(assert (=> d!30065 m!122073))

(assert (=> d!30065 m!121179))

(assert (=> b!108417 m!121169))

(declare-fun m!122075 () Bool)

(assert (=> b!108417 m!122075))

(assert (=> b!108417 m!121215))

(assert (=> b!108417 m!121217))

(assert (=> b!108417 m!121169))

(assert (=> b!108417 m!121215))

(assert (=> b!108417 m!121217))

(assert (=> b!108417 m!121219))

(assert (=> bm!11431 d!30065))

(declare-fun b!108429 () Bool)

(declare-fun e!70556 () Option!164)

(assert (=> b!108429 (= e!70556 None!162)))

(declare-fun b!108428 () Bool)

(assert (=> b!108428 (= e!70556 (getValueByKey!158 (t!5712 (toList!786 lt!55394)) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108426 () Bool)

(declare-fun e!70555 () Option!164)

(assert (=> b!108426 (= e!70555 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55394)))))))

(declare-fun d!30067 () Bool)

(declare-fun c!19064 () Bool)

(assert (=> d!30067 (= c!19064 (and ((_ is Cons!1600) (toList!786 lt!55394)) (= (_1!1199 (h!2198 (toList!786 lt!55394))) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30067 (= (getValueByKey!158 (toList!786 lt!55394) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!70555)))

(declare-fun b!108427 () Bool)

(assert (=> b!108427 (= e!70555 e!70556)))

(declare-fun c!19065 () Bool)

(assert (=> b!108427 (= c!19065 (and ((_ is Cons!1600) (toList!786 lt!55394)) (not (= (_1!1199 (h!2198 (toList!786 lt!55394))) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30067 c!19064) b!108426))

(assert (= (and d!30067 (not c!19064)) b!108427))

(assert (= (and b!108427 c!19065) b!108428))

(assert (= (and b!108427 (not c!19065)) b!108429))

(declare-fun m!122077 () Bool)

(assert (=> b!108428 m!122077))

(assert (=> b!107902 d!30067))

(declare-fun b!108433 () Bool)

(declare-fun e!70558 () Option!164)

(assert (=> b!108433 (= e!70558 None!162)))

(declare-fun b!108432 () Bool)

(assert (=> b!108432 (= e!70558 (getValueByKey!158 (t!5712 (toList!786 lt!55580)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!108430 () Bool)

(declare-fun e!70557 () Option!164)

(assert (=> b!108430 (= e!70557 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55580)))))))

(declare-fun d!30069 () Bool)

(declare-fun c!19066 () Bool)

(assert (=> d!30069 (= c!19066 (and ((_ is Cons!1600) (toList!786 lt!55580)) (= (_1!1199 (h!2198 (toList!786 lt!55580))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!30069 (= (getValueByKey!158 (toList!786 lt!55580) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) e!70557)))

(declare-fun b!108431 () Bool)

(assert (=> b!108431 (= e!70557 e!70558)))

(declare-fun c!19067 () Bool)

(assert (=> b!108431 (= c!19067 (and ((_ is Cons!1600) (toList!786 lt!55580)) (not (= (_1!1199 (h!2198 (toList!786 lt!55580))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(assert (= (and d!30069 c!19066) b!108430))

(assert (= (and d!30069 (not c!19066)) b!108431))

(assert (= (and b!108431 c!19067) b!108432))

(assert (= (and b!108431 (not c!19067)) b!108433))

(declare-fun m!122079 () Bool)

(assert (=> b!108432 m!122079))

(assert (=> b!108205 d!30069))

(declare-fun d!30071 () Bool)

(assert (=> d!30071 (= (isDefined!110 (getValueByKey!158 (toList!786 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!380 (getValueByKey!158 (toList!786 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4455 () Bool)

(assert (= bs!4455 d!30071))

(assert (=> bs!4455 m!121399))

(declare-fun m!122081 () Bool)

(assert (=> bs!4455 m!122081))

(assert (=> b!108084 d!30071))

(declare-fun b!108437 () Bool)

(declare-fun e!70560 () Option!164)

(assert (=> b!108437 (= e!70560 None!162)))

(declare-fun b!108436 () Bool)

(assert (=> b!108436 (= e!70560 (getValueByKey!158 (t!5712 (toList!786 lt!55306)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108434 () Bool)

(declare-fun e!70559 () Option!164)

(assert (=> b!108434 (= e!70559 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55306)))))))

(declare-fun d!30073 () Bool)

(declare-fun c!19068 () Bool)

(assert (=> d!30073 (= c!19068 (and ((_ is Cons!1600) (toList!786 lt!55306)) (= (_1!1199 (h!2198 (toList!786 lt!55306))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30073 (= (getValueByKey!158 (toList!786 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000) e!70559)))

(declare-fun b!108435 () Bool)

(assert (=> b!108435 (= e!70559 e!70560)))

(declare-fun c!19069 () Bool)

(assert (=> b!108435 (= c!19069 (and ((_ is Cons!1600) (toList!786 lt!55306)) (not (= (_1!1199 (h!2198 (toList!786 lt!55306))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!30073 c!19068) b!108434))

(assert (= (and d!30073 (not c!19068)) b!108435))

(assert (= (and b!108435 c!19069) b!108436))

(assert (= (and b!108435 (not c!19069)) b!108437))

(declare-fun m!122083 () Bool)

(assert (=> b!108436 m!122083))

(assert (=> b!108084 d!30073))

(declare-fun d!30075 () Bool)

(assert (=> d!30075 (= ($colon$colon!81 e!70297 (ite c!18947 (h!2198 (toList!786 (+!142 lt!55096 lt!55092))) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093)))) (Cons!1600 (ite c!18947 (h!2198 (toList!786 (+!142 lt!55096 lt!55092))) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))) e!70297))))

(assert (=> bm!11441 d!30075))

(declare-fun d!30077 () Bool)

(assert (=> d!30077 (= (isDefined!110 (getValueByKey!158 (toList!786 lt!55316) (_1!1199 lt!55093))) (not (isEmpty!380 (getValueByKey!158 (toList!786 lt!55316) (_1!1199 lt!55093)))))))

(declare-fun bs!4456 () Bool)

(assert (= bs!4456 d!30077))

(assert (=> bs!4456 m!121059))

(declare-fun m!122085 () Bool)

(assert (=> bs!4456 m!122085))

(assert (=> b!108176 d!30077))

(assert (=> b!108176 d!29987))

(declare-fun d!30079 () Bool)

(assert (=> d!30079 (= (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108341 d!30079))

(declare-fun d!30081 () Bool)

(declare-fun res!53759 () Bool)

(declare-fun e!70561 () Bool)

(assert (=> d!30081 (=> res!53759 e!70561)))

(assert (=> d!30081 (= res!53759 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)))) (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))))) lt!55308)))))

(assert (=> d!30081 (= (containsKey!161 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))) lt!55308) e!70561)))

(declare-fun b!108438 () Bool)

(declare-fun e!70562 () Bool)

(assert (=> b!108438 (= e!70561 e!70562)))

(declare-fun res!53760 () Bool)

(assert (=> b!108438 (=> (not res!53760) (not e!70562))))

(assert (=> b!108438 (= res!53760 (and (or (not ((_ is Cons!1600) (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))))) (bvsle (_1!1199 (h!2198 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))))) lt!55308)) ((_ is Cons!1600) (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)))) (bvslt (_1!1199 (h!2198 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))))) lt!55308)))))

(declare-fun b!108439 () Bool)

(assert (=> b!108439 (= e!70562 (containsKey!161 (t!5712 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)))) lt!55308))))

(assert (= (and d!30081 (not res!53759)) b!108438))

(assert (= (and b!108438 res!53760) b!108439))

(declare-fun m!122087 () Bool)

(assert (=> b!108439 m!122087))

(assert (=> d!29945 d!30081))

(declare-fun d!30083 () Bool)

(assert (=> d!30083 (= (size!2328 newMap!16) (bvadd (_size!504 newMap!16) (bvsdiv (bvadd (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!108043 d!30083))

(assert (=> b!108281 d!29989))

(declare-fun lt!55789 () ListLongMap!1541)

(declare-fun e!70564 () Bool)

(declare-fun b!108440 () Bool)

(assert (=> b!108440 (= e!70564 (= lt!55789 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108441 () Bool)

(declare-fun e!70563 () Bool)

(declare-fun e!70568 () Bool)

(assert (=> b!108441 (= e!70563 e!70568)))

(assert (=> b!108441 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun res!53762 () Bool)

(assert (=> b!108441 (= res!53762 (contains!820 lt!55789 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!108441 (=> (not res!53762) (not e!70568))))

(declare-fun b!108442 () Bool)

(declare-fun e!70565 () ListLongMap!1541)

(declare-fun e!70566 () ListLongMap!1541)

(assert (=> b!108442 (= e!70565 e!70566)))

(declare-fun c!19070 () Bool)

(assert (=> b!108442 (= c!19070 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!30085 () Bool)

(declare-fun e!70567 () Bool)

(assert (=> d!30085 e!70567))

(declare-fun res!53763 () Bool)

(assert (=> d!30085 (=> (not res!53763) (not e!70567))))

(assert (=> d!30085 (= res!53763 (not (contains!820 lt!55789 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30085 (= lt!55789 e!70565)))

(declare-fun c!19071 () Bool)

(assert (=> d!30085 (= c!19071 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30085 (validMask!0 (mask!6763 (v!2914 (underlying!367 thiss!992))))))

(assert (=> d!30085 (= (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))) lt!55789)))

(declare-fun b!108443 () Bool)

(assert (=> b!108443 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> b!108443 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2323 (_values!2588 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> b!108443 (= e!70568 (= (apply!99 lt!55789 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108444 () Bool)

(assert (=> b!108444 (= e!70567 e!70563)))

(declare-fun c!19072 () Bool)

(declare-fun e!70569 () Bool)

(assert (=> b!108444 (= c!19072 e!70569)))

(declare-fun res!53764 () Bool)

(assert (=> b!108444 (=> (not res!53764) (not e!70569))))

(assert (=> b!108444 (= res!53764 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108445 () Bool)

(declare-fun res!53761 () Bool)

(assert (=> b!108445 (=> (not res!53761) (not e!70567))))

(assert (=> b!108445 (= res!53761 (not (contains!820 lt!55789 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108446 () Bool)

(assert (=> b!108446 (= e!70565 (ListLongMap!1542 Nil!1601))))

(declare-fun b!108447 () Bool)

(declare-fun lt!55793 () Unit!3301)

(declare-fun lt!55794 () Unit!3301)

(assert (=> b!108447 (= lt!55793 lt!55794)))

(declare-fun lt!55795 () (_ BitVec 64))

(declare-fun lt!55792 () ListLongMap!1541)

(declare-fun lt!55791 () (_ BitVec 64))

(declare-fun lt!55790 () V!3233)

(assert (=> b!108447 (not (contains!820 (+!142 lt!55792 (tuple2!2377 lt!55795 lt!55790)) lt!55791))))

(assert (=> b!108447 (= lt!55794 (addStillNotContains!49 lt!55792 lt!55795 lt!55790 lt!55791))))

(assert (=> b!108447 (= lt!55791 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108447 (= lt!55790 (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108447 (= lt!55795 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!11504 () ListLongMap!1541)

(assert (=> b!108447 (= lt!55792 call!11504)))

(assert (=> b!108447 (= e!70566 (+!142 call!11504 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108448 () Bool)

(assert (=> b!108448 (= e!70569 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!108448 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!108449 () Bool)

(assert (=> b!108449 (= e!70563 e!70564)))

(declare-fun c!19073 () Bool)

(assert (=> b!108449 (= c!19073 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun bm!11501 () Bool)

(assert (=> bm!11501 (= call!11504 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (_values!2588 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992))) (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) (minValue!2478 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!108450 () Bool)

(assert (=> b!108450 (= e!70566 call!11504)))

(declare-fun b!108451 () Bool)

(assert (=> b!108451 (= e!70564 (isEmpty!379 lt!55789))))

(assert (= (and d!30085 c!19071) b!108446))

(assert (= (and d!30085 (not c!19071)) b!108442))

(assert (= (and b!108442 c!19070) b!108447))

(assert (= (and b!108442 (not c!19070)) b!108450))

(assert (= (or b!108447 b!108450) bm!11501))

(assert (= (and d!30085 res!53763) b!108445))

(assert (= (and b!108445 res!53761) b!108444))

(assert (= (and b!108444 res!53764) b!108448))

(assert (= (and b!108444 c!19072) b!108441))

(assert (= (and b!108444 (not c!19072)) b!108449))

(assert (= (and b!108441 res!53762) b!108443))

(assert (= (and b!108449 c!19073) b!108440))

(assert (= (and b!108449 (not c!19073)) b!108451))

(declare-fun b_lambda!4861 () Bool)

(assert (=> (not b_lambda!4861) (not b!108443)))

(assert (=> b!108443 t!5709))

(declare-fun b_and!6697 () Bool)

(assert (= b_and!6693 (and (=> t!5709 result!3485) b_and!6697)))

(assert (=> b!108443 t!5711))

(declare-fun b_and!6699 () Bool)

(assert (= b_and!6695 (and (=> t!5711 result!3489) b_and!6699)))

(declare-fun b_lambda!4863 () Bool)

(assert (=> (not b_lambda!4863) (not b!108447)))

(assert (=> b!108447 t!5709))

(declare-fun b_and!6701 () Bool)

(assert (= b_and!6697 (and (=> t!5709 result!3485) b_and!6701)))

(assert (=> b!108447 t!5711))

(declare-fun b_and!6703 () Bool)

(assert (= b_and!6699 (and (=> t!5711 result!3489) b_and!6703)))

(declare-fun m!122089 () Bool)

(assert (=> b!108451 m!122089))

(declare-fun m!122091 () Bool)

(assert (=> b!108440 m!122091))

(declare-fun m!122093 () Bool)

(assert (=> b!108441 m!122093))

(assert (=> b!108441 m!122093))

(declare-fun m!122095 () Bool)

(assert (=> b!108441 m!122095))

(assert (=> b!108442 m!122093))

(assert (=> b!108442 m!122093))

(declare-fun m!122097 () Bool)

(assert (=> b!108442 m!122097))

(assert (=> bm!11501 m!122091))

(assert (=> b!108448 m!122093))

(assert (=> b!108448 m!122093))

(assert (=> b!108448 m!122097))

(declare-fun m!122099 () Bool)

(assert (=> b!108447 m!122099))

(declare-fun m!122101 () Bool)

(assert (=> b!108447 m!122101))

(declare-fun m!122103 () Bool)

(assert (=> b!108447 m!122103))

(assert (=> b!108447 m!122099))

(declare-fun m!122105 () Bool)

(assert (=> b!108447 m!122105))

(declare-fun m!122107 () Bool)

(assert (=> b!108447 m!122107))

(assert (=> b!108447 m!120755))

(assert (=> b!108447 m!122093))

(assert (=> b!108447 m!122103))

(assert (=> b!108447 m!120755))

(declare-fun m!122109 () Bool)

(assert (=> b!108447 m!122109))

(declare-fun m!122111 () Bool)

(assert (=> b!108445 m!122111))

(declare-fun m!122113 () Bool)

(assert (=> d!30085 m!122113))

(assert (=> d!30085 m!120789))

(assert (=> b!108443 m!122093))

(declare-fun m!122115 () Bool)

(assert (=> b!108443 m!122115))

(assert (=> b!108443 m!122103))

(assert (=> b!108443 m!120755))

(assert (=> b!108443 m!122093))

(assert (=> b!108443 m!122103))

(assert (=> b!108443 m!120755))

(assert (=> b!108443 m!122109))

(assert (=> bm!11468 d!30085))

(declare-fun d!30087 () Bool)

(declare-fun e!70570 () Bool)

(assert (=> d!30087 e!70570))

(declare-fun res!53765 () Bool)

(assert (=> d!30087 (=> res!53765 e!70570)))

(declare-fun lt!55796 () Bool)

(assert (=> d!30087 (= res!53765 (not lt!55796))))

(declare-fun lt!55799 () Bool)

(assert (=> d!30087 (= lt!55796 lt!55799)))

(declare-fun lt!55798 () Unit!3301)

(declare-fun e!70571 () Unit!3301)

(assert (=> d!30087 (= lt!55798 e!70571)))

(declare-fun c!19074 () Bool)

(assert (=> d!30087 (= c!19074 lt!55799)))

(assert (=> d!30087 (= lt!55799 (containsKey!161 (toList!786 lt!55720) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30087 (= (contains!820 lt!55720 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55796)))

(declare-fun b!108452 () Bool)

(declare-fun lt!55797 () Unit!3301)

(assert (=> b!108452 (= e!70571 lt!55797)))

(assert (=> b!108452 (= lt!55797 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55720) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108452 (isDefined!110 (getValueByKey!158 (toList!786 lt!55720) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108453 () Bool)

(declare-fun Unit!3340 () Unit!3301)

(assert (=> b!108453 (= e!70571 Unit!3340)))

(declare-fun b!108454 () Bool)

(assert (=> b!108454 (= e!70570 (isDefined!110 (getValueByKey!158 (toList!786 lt!55720) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30087 c!19074) b!108452))

(assert (= (and d!30087 (not c!19074)) b!108453))

(assert (= (and d!30087 (not res!53765)) b!108454))

(declare-fun m!122117 () Bool)

(assert (=> d!30087 m!122117))

(declare-fun m!122119 () Bool)

(assert (=> b!108452 m!122119))

(declare-fun m!122121 () Bool)

(assert (=> b!108452 m!122121))

(assert (=> b!108452 m!122121))

(declare-fun m!122123 () Bool)

(assert (=> b!108452 m!122123))

(assert (=> b!108454 m!122121))

(assert (=> b!108454 m!122121))

(assert (=> b!108454 m!122123))

(assert (=> bm!11487 d!30087))

(declare-fun bm!11502 () Bool)

(declare-fun call!11510 () ListLongMap!1541)

(declare-fun call!11505 () ListLongMap!1541)

(assert (=> bm!11502 (= call!11510 call!11505)))

(declare-fun b!108455 () Bool)

(declare-fun e!70573 () ListLongMap!1541)

(declare-fun e!70583 () ListLongMap!1541)

(assert (=> b!108455 (= e!70573 e!70583)))

(declare-fun c!19076 () Bool)

(assert (=> b!108455 (= c!19076 (and (not (= (bvand (extraKeys!2406 (_2!1200 lt!55269)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 (_2!1200 lt!55269)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11503 () Bool)

(declare-fun call!11507 () ListLongMap!1541)

(declare-fun call!11511 () ListLongMap!1541)

(assert (=> bm!11503 (= call!11507 call!11511)))

(declare-fun b!108456 () Bool)

(declare-fun e!70574 () Bool)

(declare-fun e!70582 () Bool)

(assert (=> b!108456 (= e!70574 e!70582)))

(declare-fun res!53773 () Bool)

(declare-fun call!11509 () Bool)

(assert (=> b!108456 (= res!53773 call!11509)))

(assert (=> b!108456 (=> (not res!53773) (not e!70582))))

(declare-fun bm!11504 () Bool)

(declare-fun call!11508 () Bool)

(declare-fun lt!55815 () ListLongMap!1541)

(assert (=> bm!11504 (= call!11508 (contains!820 lt!55815 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108457 () Bool)

(declare-fun e!70572 () Bool)

(declare-fun e!70575 () Bool)

(assert (=> b!108457 (= e!70572 e!70575)))

(declare-fun res!53774 () Bool)

(assert (=> b!108457 (=> (not res!53774) (not e!70575))))

(assert (=> b!108457 (= res!53774 (contains!820 lt!55815 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000)))))

(assert (=> b!108457 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55269)))))))

(declare-fun b!108458 () Bool)

(declare-fun res!53770 () Bool)

(declare-fun e!70584 () Bool)

(assert (=> b!108458 (=> (not res!53770) (not e!70584))))

(assert (=> b!108458 (= res!53770 e!70574)))

(declare-fun c!19075 () Bool)

(assert (=> b!108458 (= c!19075 (not (= (bvand (extraKeys!2406 (_2!1200 lt!55269)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11505 () Bool)

(declare-fun call!11506 () ListLongMap!1541)

(assert (=> bm!11505 (= call!11506 call!11507)))

(declare-fun b!108459 () Bool)

(declare-fun e!70580 () Bool)

(assert (=> b!108459 (= e!70580 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000)))))

(declare-fun b!108460 () Bool)

(assert (=> b!108460 (= e!70583 call!11510)))

(declare-fun b!108461 () Bool)

(declare-fun e!70576 () Bool)

(assert (=> b!108461 (= e!70584 e!70576)))

(declare-fun c!19077 () Bool)

(assert (=> b!108461 (= c!19077 (not (= (bvand (extraKeys!2406 (_2!1200 lt!55269)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11506 () Bool)

(assert (=> bm!11506 (= call!11511 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (_2!1200 lt!55269)) (_values!2588 (_2!1200 lt!55269)) (mask!6763 (_2!1200 lt!55269)) (extraKeys!2406 (_2!1200 lt!55269)) (zeroValue!2478 (_2!1200 lt!55269)) (minValue!2478 (_2!1200 lt!55269)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1200 lt!55269))))))

(declare-fun b!108462 () Bool)

(declare-fun e!70578 () ListLongMap!1541)

(assert (=> b!108462 (= e!70578 call!11510)))

(declare-fun b!108463 () Bool)

(declare-fun e!70577 () Unit!3301)

(declare-fun Unit!3341 () Unit!3301)

(assert (=> b!108463 (= e!70577 Unit!3341)))

(declare-fun b!108464 () Bool)

(declare-fun e!70579 () Bool)

(assert (=> b!108464 (= e!70579 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000)))))

(declare-fun b!108465 () Bool)

(declare-fun res!53772 () Bool)

(assert (=> b!108465 (=> (not res!53772) (not e!70584))))

(assert (=> b!108465 (= res!53772 e!70572)))

(declare-fun res!53767 () Bool)

(assert (=> b!108465 (=> res!53767 e!70572)))

(assert (=> b!108465 (= res!53767 (not e!70580))))

(declare-fun res!53771 () Bool)

(assert (=> b!108465 (=> (not res!53771) (not e!70580))))

(assert (=> b!108465 (= res!53771 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55269)))))))

(declare-fun b!108466 () Bool)

(declare-fun e!70581 () Bool)

(assert (=> b!108466 (= e!70576 e!70581)))

(declare-fun res!53766 () Bool)

(assert (=> b!108466 (= res!53766 call!11508)))

(assert (=> b!108466 (=> (not res!53766) (not e!70581))))

(declare-fun b!108467 () Bool)

(declare-fun lt!55805 () Unit!3301)

(assert (=> b!108467 (= e!70577 lt!55805)))

(declare-fun lt!55806 () ListLongMap!1541)

(assert (=> b!108467 (= lt!55806 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (_2!1200 lt!55269)) (_values!2588 (_2!1200 lt!55269)) (mask!6763 (_2!1200 lt!55269)) (extraKeys!2406 (_2!1200 lt!55269)) (zeroValue!2478 (_2!1200 lt!55269)) (minValue!2478 (_2!1200 lt!55269)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1200 lt!55269))))))

(declare-fun lt!55810 () (_ BitVec 64))

(assert (=> b!108467 (= lt!55810 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55808 () (_ BitVec 64))

(assert (=> b!108467 (= lt!55808 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000))))

(declare-fun lt!55811 () Unit!3301)

(assert (=> b!108467 (= lt!55811 (addStillContains!75 lt!55806 lt!55810 (zeroValue!2478 (_2!1200 lt!55269)) lt!55808))))

(assert (=> b!108467 (contains!820 (+!142 lt!55806 (tuple2!2377 lt!55810 (zeroValue!2478 (_2!1200 lt!55269)))) lt!55808)))

(declare-fun lt!55818 () Unit!3301)

(assert (=> b!108467 (= lt!55818 lt!55811)))

(declare-fun lt!55804 () ListLongMap!1541)

(assert (=> b!108467 (= lt!55804 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (_2!1200 lt!55269)) (_values!2588 (_2!1200 lt!55269)) (mask!6763 (_2!1200 lt!55269)) (extraKeys!2406 (_2!1200 lt!55269)) (zeroValue!2478 (_2!1200 lt!55269)) (minValue!2478 (_2!1200 lt!55269)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1200 lt!55269))))))

(declare-fun lt!55809 () (_ BitVec 64))

(assert (=> b!108467 (= lt!55809 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55812 () (_ BitVec 64))

(assert (=> b!108467 (= lt!55812 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000))))

(declare-fun lt!55814 () Unit!3301)

(assert (=> b!108467 (= lt!55814 (addApplyDifferent!75 lt!55804 lt!55809 (minValue!2478 (_2!1200 lt!55269)) lt!55812))))

(assert (=> b!108467 (= (apply!99 (+!142 lt!55804 (tuple2!2377 lt!55809 (minValue!2478 (_2!1200 lt!55269)))) lt!55812) (apply!99 lt!55804 lt!55812))))

(declare-fun lt!55807 () Unit!3301)

(assert (=> b!108467 (= lt!55807 lt!55814)))

(declare-fun lt!55802 () ListLongMap!1541)

(assert (=> b!108467 (= lt!55802 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (_2!1200 lt!55269)) (_values!2588 (_2!1200 lt!55269)) (mask!6763 (_2!1200 lt!55269)) (extraKeys!2406 (_2!1200 lt!55269)) (zeroValue!2478 (_2!1200 lt!55269)) (minValue!2478 (_2!1200 lt!55269)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1200 lt!55269))))))

(declare-fun lt!55821 () (_ BitVec 64))

(assert (=> b!108467 (= lt!55821 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55816 () (_ BitVec 64))

(assert (=> b!108467 (= lt!55816 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000))))

(declare-fun lt!55820 () Unit!3301)

(assert (=> b!108467 (= lt!55820 (addApplyDifferent!75 lt!55802 lt!55821 (zeroValue!2478 (_2!1200 lt!55269)) lt!55816))))

(assert (=> b!108467 (= (apply!99 (+!142 lt!55802 (tuple2!2377 lt!55821 (zeroValue!2478 (_2!1200 lt!55269)))) lt!55816) (apply!99 lt!55802 lt!55816))))

(declare-fun lt!55813 () Unit!3301)

(assert (=> b!108467 (= lt!55813 lt!55820)))

(declare-fun lt!55800 () ListLongMap!1541)

(assert (=> b!108467 (= lt!55800 (getCurrentListMapNoExtraKeys!109 (_keys!4315 (_2!1200 lt!55269)) (_values!2588 (_2!1200 lt!55269)) (mask!6763 (_2!1200 lt!55269)) (extraKeys!2406 (_2!1200 lt!55269)) (zeroValue!2478 (_2!1200 lt!55269)) (minValue!2478 (_2!1200 lt!55269)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1200 lt!55269))))))

(declare-fun lt!55801 () (_ BitVec 64))

(assert (=> b!108467 (= lt!55801 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55803 () (_ BitVec 64))

(assert (=> b!108467 (= lt!55803 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000))))

(assert (=> b!108467 (= lt!55805 (addApplyDifferent!75 lt!55800 lt!55801 (minValue!2478 (_2!1200 lt!55269)) lt!55803))))

(assert (=> b!108467 (= (apply!99 (+!142 lt!55800 (tuple2!2377 lt!55801 (minValue!2478 (_2!1200 lt!55269)))) lt!55803) (apply!99 lt!55800 lt!55803))))

(declare-fun bm!11507 () Bool)

(declare-fun c!19079 () Bool)

(assert (=> bm!11507 (= call!11505 (+!142 (ite c!19079 call!11511 (ite c!19076 call!11507 call!11506)) (ite (or c!19079 c!19076) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (_2!1200 lt!55269))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (_2!1200 lt!55269))))))))

(declare-fun bm!11508 () Bool)

(assert (=> bm!11508 (= call!11509 (contains!820 lt!55815 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108468 () Bool)

(assert (=> b!108468 (= e!70581 (= (apply!99 lt!55815 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 (_2!1200 lt!55269))))))

(declare-fun b!108469 () Bool)

(assert (=> b!108469 (= e!70578 call!11506)))

(declare-fun b!108470 () Bool)

(declare-fun c!19080 () Bool)

(assert (=> b!108470 (= c!19080 (and (not (= (bvand (extraKeys!2406 (_2!1200 lt!55269)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 (_2!1200 lt!55269)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108470 (= e!70583 e!70578)))

(declare-fun b!108471 () Bool)

(assert (=> b!108471 (= e!70582 (= (apply!99 lt!55815 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 (_2!1200 lt!55269))))))

(declare-fun b!108472 () Bool)

(assert (=> b!108472 (= e!70576 (not call!11508))))

(declare-fun b!108473 () Bool)

(assert (=> b!108473 (= e!70573 (+!142 call!11505 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (_2!1200 lt!55269)))))))

(declare-fun b!108474 () Bool)

(assert (=> b!108474 (= e!70575 (= (apply!99 lt!55815 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 (_values!2588 (_2!1200 lt!55269))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 (_2!1200 lt!55269)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108474 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 (_values!2588 (_2!1200 lt!55269)))))))

(assert (=> b!108474 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55269)))))))

(declare-fun b!108475 () Bool)

(assert (=> b!108475 (= e!70574 (not call!11509))))

(declare-fun d!30089 () Bool)

(assert (=> d!30089 e!70584))

(declare-fun res!53768 () Bool)

(assert (=> d!30089 (=> (not res!53768) (not e!70584))))

(assert (=> d!30089 (= res!53768 (or (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55269)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55269)))))))))

(declare-fun lt!55817 () ListLongMap!1541)

(assert (=> d!30089 (= lt!55815 lt!55817)))

(declare-fun lt!55819 () Unit!3301)

(assert (=> d!30089 (= lt!55819 e!70577)))

(declare-fun c!19078 () Bool)

(assert (=> d!30089 (= c!19078 e!70579)))

(declare-fun res!53769 () Bool)

(assert (=> d!30089 (=> (not res!53769) (not e!70579))))

(assert (=> d!30089 (= res!53769 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55269)))))))

(assert (=> d!30089 (= lt!55817 e!70573)))

(assert (=> d!30089 (= c!19079 (and (not (= (bvand (extraKeys!2406 (_2!1200 lt!55269)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 (_2!1200 lt!55269)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30089 (validMask!0 (mask!6763 (_2!1200 lt!55269)))))

(assert (=> d!30089 (= (getCurrentListMap!472 (_keys!4315 (_2!1200 lt!55269)) (_values!2588 (_2!1200 lt!55269)) (mask!6763 (_2!1200 lt!55269)) (extraKeys!2406 (_2!1200 lt!55269)) (zeroValue!2478 (_2!1200 lt!55269)) (minValue!2478 (_2!1200 lt!55269)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1200 lt!55269))) lt!55815)))

(assert (= (and d!30089 c!19079) b!108473))

(assert (= (and d!30089 (not c!19079)) b!108455))

(assert (= (and b!108455 c!19076) b!108460))

(assert (= (and b!108455 (not c!19076)) b!108470))

(assert (= (and b!108470 c!19080) b!108462))

(assert (= (and b!108470 (not c!19080)) b!108469))

(assert (= (or b!108462 b!108469) bm!11505))

(assert (= (or b!108460 bm!11505) bm!11503))

(assert (= (or b!108460 b!108462) bm!11502))

(assert (= (or b!108473 bm!11503) bm!11506))

(assert (= (or b!108473 bm!11502) bm!11507))

(assert (= (and d!30089 res!53769) b!108464))

(assert (= (and d!30089 c!19078) b!108467))

(assert (= (and d!30089 (not c!19078)) b!108463))

(assert (= (and d!30089 res!53768) b!108465))

(assert (= (and b!108465 res!53771) b!108459))

(assert (= (and b!108465 (not res!53767)) b!108457))

(assert (= (and b!108457 res!53774) b!108474))

(assert (= (and b!108465 res!53772) b!108458))

(assert (= (and b!108458 c!19075) b!108456))

(assert (= (and b!108458 (not c!19075)) b!108475))

(assert (= (and b!108456 res!53773) b!108471))

(assert (= (or b!108456 b!108475) bm!11508))

(assert (= (and b!108458 res!53770) b!108461))

(assert (= (and b!108461 c!19077) b!108466))

(assert (= (and b!108461 (not c!19077)) b!108472))

(assert (= (and b!108466 res!53766) b!108468))

(assert (= (or b!108466 b!108472) bm!11504))

(declare-fun b_lambda!4865 () Bool)

(assert (=> (not b_lambda!4865) (not b!108474)))

(declare-fun tb!2089 () Bool)

(declare-fun t!5731 () Bool)

(assert (=> (and b!107466 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 (_2!1200 lt!55269))) t!5731) tb!2089))

(declare-fun result!3509 () Bool)

(assert (=> tb!2089 (= result!3509 tp_is_empty!2689)))

(assert (=> b!108474 t!5731))

(declare-fun b_and!6705 () Bool)

(assert (= b_and!6701 (and (=> t!5731 result!3509) b_and!6705)))

(declare-fun tb!2091 () Bool)

(declare-fun t!5733 () Bool)

(assert (=> (and b!107471 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (_2!1200 lt!55269))) t!5733) tb!2091))

(declare-fun result!3511 () Bool)

(assert (= result!3511 result!3509))

(assert (=> b!108474 t!5733))

(declare-fun b_and!6707 () Bool)

(assert (= b_and!6703 (and (=> t!5733 result!3511) b_and!6707)))

(declare-fun m!122125 () Bool)

(assert (=> b!108471 m!122125))

(declare-fun m!122127 () Bool)

(assert (=> b!108473 m!122127))

(declare-fun m!122129 () Bool)

(assert (=> bm!11504 m!122129))

(declare-fun m!122131 () Bool)

(assert (=> b!108457 m!122131))

(assert (=> b!108457 m!122131))

(declare-fun m!122133 () Bool)

(assert (=> b!108457 m!122133))

(declare-fun m!122135 () Bool)

(assert (=> bm!11508 m!122135))

(assert (=> b!108459 m!122131))

(assert (=> b!108459 m!122131))

(declare-fun m!122137 () Bool)

(assert (=> b!108459 m!122137))

(declare-fun m!122139 () Bool)

(assert (=> b!108468 m!122139))

(declare-fun m!122141 () Bool)

(assert (=> d!30089 m!122141))

(declare-fun m!122143 () Bool)

(assert (=> b!108467 m!122143))

(declare-fun m!122145 () Bool)

(assert (=> b!108467 m!122145))

(declare-fun m!122147 () Bool)

(assert (=> b!108467 m!122147))

(assert (=> b!108467 m!122131))

(declare-fun m!122149 () Bool)

(assert (=> b!108467 m!122149))

(declare-fun m!122151 () Bool)

(assert (=> b!108467 m!122151))

(declare-fun m!122153 () Bool)

(assert (=> b!108467 m!122153))

(declare-fun m!122155 () Bool)

(assert (=> b!108467 m!122155))

(declare-fun m!122157 () Bool)

(assert (=> b!108467 m!122157))

(declare-fun m!122159 () Bool)

(assert (=> b!108467 m!122159))

(declare-fun m!122161 () Bool)

(assert (=> b!108467 m!122161))

(declare-fun m!122163 () Bool)

(assert (=> b!108467 m!122163))

(declare-fun m!122165 () Bool)

(assert (=> b!108467 m!122165))

(declare-fun m!122167 () Bool)

(assert (=> b!108467 m!122167))

(assert (=> b!108467 m!122161))

(declare-fun m!122169 () Bool)

(assert (=> b!108467 m!122169))

(declare-fun m!122171 () Bool)

(assert (=> b!108467 m!122171))

(assert (=> b!108467 m!122165))

(declare-fun m!122173 () Bool)

(assert (=> b!108467 m!122173))

(assert (=> b!108467 m!122169))

(assert (=> b!108467 m!122149))

(declare-fun m!122175 () Bool)

(assert (=> bm!11507 m!122175))

(assert (=> bm!11506 m!122147))

(assert (=> b!108464 m!122131))

(assert (=> b!108464 m!122131))

(assert (=> b!108464 m!122137))

(declare-fun m!122177 () Bool)

(assert (=> b!108474 m!122177))

(assert (=> b!108474 m!122177))

(declare-fun m!122179 () Bool)

(assert (=> b!108474 m!122179))

(declare-fun m!122181 () Bool)

(assert (=> b!108474 m!122181))

(assert (=> b!108474 m!122131))

(declare-fun m!122183 () Bool)

(assert (=> b!108474 m!122183))

(assert (=> b!108474 m!122131))

(assert (=> b!108474 m!122179))

(assert (=> d!29991 d!30089))

(declare-fun b!108479 () Bool)

(declare-fun e!70586 () Option!164)

(assert (=> b!108479 (= e!70586 None!162)))

(declare-fun b!108478 () Bool)

(assert (=> b!108478 (= e!70586 (getValueByKey!158 (t!5712 (t!5712 (toList!786 lt!55099))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108476 () Bool)

(declare-fun e!70585 () Option!164)

(assert (=> b!108476 (= e!70585 (Some!163 (_2!1199 (h!2198 (t!5712 (toList!786 lt!55099))))))))

(declare-fun c!19081 () Bool)

(declare-fun d!30091 () Bool)

(assert (=> d!30091 (= c!19081 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55099))) (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55099)))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30091 (= (getValueByKey!158 (t!5712 (toList!786 lt!55099)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70585)))

(declare-fun b!108477 () Bool)

(assert (=> b!108477 (= e!70585 e!70586)))

(declare-fun c!19082 () Bool)

(assert (=> b!108477 (= c!19082 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55099))) (not (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55099)))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(assert (= (and d!30091 c!19081) b!108476))

(assert (= (and d!30091 (not c!19081)) b!108477))

(assert (= (and b!108477 c!19082) b!108478))

(assert (= (and b!108477 (not c!19082)) b!108479))

(assert (=> b!108478 m!120751))

(declare-fun m!122185 () Bool)

(assert (=> b!108478 m!122185))

(assert (=> b!108172 d!30091))

(declare-fun d!30093 () Bool)

(assert (=> d!30093 (= (apply!99 lt!55410 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!786 lt!55410) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4457 () Bool)

(assert (= bs!4457 d!30093))

(declare-fun m!122187 () Bool)

(assert (=> bs!4457 m!122187))

(assert (=> bs!4457 m!122187))

(declare-fun m!122189 () Bool)

(assert (=> bs!4457 m!122189))

(assert (=> b!107917 d!30093))

(declare-fun d!30095 () Bool)

(declare-fun lt!55822 () Bool)

(assert (=> d!30095 (= lt!55822 (select (content!112 lt!55315) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(declare-fun e!70587 () Bool)

(assert (=> d!30095 (= lt!55822 e!70587)))

(declare-fun res!53776 () Bool)

(assert (=> d!30095 (=> (not res!53776) (not e!70587))))

(assert (=> d!30095 (= res!53776 ((_ is Cons!1600) lt!55315))))

(assert (=> d!30095 (= (contains!823 lt!55315 (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))) lt!55822)))

(declare-fun b!108480 () Bool)

(declare-fun e!70588 () Bool)

(assert (=> b!108480 (= e!70587 e!70588)))

(declare-fun res!53775 () Bool)

(assert (=> b!108480 (=> res!53775 e!70588)))

(assert (=> b!108480 (= res!53775 (= (h!2198 lt!55315) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(declare-fun b!108481 () Bool)

(assert (=> b!108481 (= e!70588 (contains!823 (t!5712 lt!55315) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(assert (= (and d!30095 res!53776) b!108480))

(assert (= (and b!108480 (not res!53775)) b!108481))

(declare-fun m!122191 () Bool)

(assert (=> d!30095 m!122191))

(declare-fun m!122193 () Bool)

(assert (=> d!30095 m!122193))

(declare-fun m!122195 () Bool)

(assert (=> b!108481 m!122195))

(assert (=> b!108182 d!30095))

(declare-fun b!108500 () Bool)

(declare-fun e!70601 () SeekEntryResult!254)

(assert (=> b!108500 (= e!70601 (Intermediate!254 false (toIndex!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6763 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!108501 () Bool)

(declare-fun e!70602 () SeekEntryResult!254)

(assert (=> b!108501 (= e!70602 (Intermediate!254 true (toIndex!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6763 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!108502 () Bool)

(declare-fun e!70600 () Bool)

(declare-fun e!70599 () Bool)

(assert (=> b!108502 (= e!70600 e!70599)))

(declare-fun res!53785 () Bool)

(declare-fun lt!55828 () SeekEntryResult!254)

(assert (=> b!108502 (= res!53785 (and ((_ is Intermediate!254) lt!55828) (not (undefined!1066 lt!55828)) (bvslt (x!13798 lt!55828) #b01111111111111111111111111111110) (bvsge (x!13798 lt!55828) #b00000000000000000000000000000000) (bvsge (x!13798 lt!55828) #b00000000000000000000000000000000)))))

(assert (=> b!108502 (=> (not res!53785) (not e!70599))))

(declare-fun b!108503 () Bool)

(assert (=> b!108503 (and (bvsge (index!3167 lt!55828) #b00000000000000000000000000000000) (bvslt (index!3167 lt!55828) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun e!70603 () Bool)

(assert (=> b!108503 (= e!70603 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3167 lt!55828)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108504 () Bool)

(assert (=> b!108504 (and (bvsge (index!3167 lt!55828) #b00000000000000000000000000000000) (bvslt (index!3167 lt!55828) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun res!53783 () Bool)

(assert (=> b!108504 (= res!53783 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3167 lt!55828)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108504 (=> res!53783 e!70603)))

(declare-fun b!108505 () Bool)

(assert (=> b!108505 (= e!70600 (bvsge (x!13798 lt!55828) #b01111111111111111111111111111110))))

(declare-fun d!30097 () Bool)

(assert (=> d!30097 e!70600))

(declare-fun c!19091 () Bool)

(assert (=> d!30097 (= c!19091 (and ((_ is Intermediate!254) lt!55828) (undefined!1066 lt!55828)))))

(assert (=> d!30097 (= lt!55828 e!70602)))

(declare-fun c!19090 () Bool)

(assert (=> d!30097 (= c!19090 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!55827 () (_ BitVec 64))

(assert (=> d!30097 (= lt!55827 (select (arr!2066 (_keys!4315 newMap!16)) (toIndex!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6763 newMap!16))))))

(assert (=> d!30097 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30097 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6763 newMap!16)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)) lt!55828)))

(declare-fun b!108506 () Bool)

(assert (=> b!108506 (and (bvsge (index!3167 lt!55828) #b00000000000000000000000000000000) (bvslt (index!3167 lt!55828) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun res!53784 () Bool)

(assert (=> b!108506 (= res!53784 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3167 lt!55828)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108506 (=> res!53784 e!70603)))

(assert (=> b!108506 (= e!70599 e!70603)))

(declare-fun b!108507 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!108507 (= e!70601 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6763 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6763 newMap!16)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(declare-fun b!108508 () Bool)

(assert (=> b!108508 (= e!70602 e!70601)))

(declare-fun c!19089 () Bool)

(assert (=> b!108508 (= c!19089 (or (= lt!55827 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (= (bvadd lt!55827 lt!55827) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30097 c!19090) b!108501))

(assert (= (and d!30097 (not c!19090)) b!108508))

(assert (= (and b!108508 c!19089) b!108500))

(assert (= (and b!108508 (not c!19089)) b!108507))

(assert (= (and d!30097 c!19091) b!108505))

(assert (= (and d!30097 (not c!19091)) b!108502))

(assert (= (and b!108502 res!53785) b!108506))

(assert (= (and b!108506 (not res!53784)) b!108504))

(assert (= (and b!108504 (not res!53783)) b!108503))

(declare-fun m!122197 () Bool)

(assert (=> b!108504 m!122197))

(assert (=> b!108506 m!122197))

(assert (=> d!30097 m!121369))

(declare-fun m!122199 () Bool)

(assert (=> d!30097 m!122199))

(assert (=> d!30097 m!121179))

(assert (=> b!108507 m!121369))

(declare-fun m!122201 () Bool)

(assert (=> b!108507 m!122201))

(assert (=> b!108507 m!122201))

(assert (=> b!108507 m!120751))

(declare-fun m!122203 () Bool)

(assert (=> b!108507 m!122203))

(assert (=> b!108503 m!122197))

(assert (=> d!29891 d!30097))

(declare-fun d!30099 () Bool)

(declare-fun lt!55834 () (_ BitVec 32))

(declare-fun lt!55833 () (_ BitVec 32))

(assert (=> d!30099 (= lt!55834 (bvmul (bvxor lt!55833 (bvlshr lt!55833 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!30099 (= lt!55833 ((_ extract 31 0) (bvand (bvxor (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvlshr (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!30099 (and (bvsge (mask!6763 newMap!16) #b00000000000000000000000000000000) (let ((res!53786 (let ((h!2203 ((_ extract 31 0) (bvand (bvxor (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvlshr (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!13900 (bvmul (bvxor h!2203 (bvlshr h!2203 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!13900 (bvlshr x!13900 #b00000000000000000000000000001101)) (mask!6763 newMap!16)))))) (and (bvslt res!53786 (bvadd (mask!6763 newMap!16) #b00000000000000000000000000000001)) (bvsge res!53786 #b00000000000000000000000000000000))))))

(assert (=> d!30099 (= (toIndex!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6763 newMap!16)) (bvand (bvxor lt!55834 (bvlshr lt!55834 #b00000000000000000000000000001101)) (mask!6763 newMap!16)))))

(assert (=> d!29891 d!30099))

(assert (=> d!29891 d!30057))

(declare-fun d!30101 () Bool)

(declare-fun e!70604 () Bool)

(assert (=> d!30101 e!70604))

(declare-fun res!53788 () Bool)

(assert (=> d!30101 (=> (not res!53788) (not e!70604))))

(declare-fun lt!55838 () ListLongMap!1541)

(assert (=> d!30101 (= res!53788 (contains!820 lt!55838 (_1!1199 (ite (or c!18993 c!18990) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(declare-fun lt!55837 () List!1604)

(assert (=> d!30101 (= lt!55838 (ListLongMap!1542 lt!55837))))

(declare-fun lt!55835 () Unit!3301)

(declare-fun lt!55836 () Unit!3301)

(assert (=> d!30101 (= lt!55835 lt!55836)))

(assert (=> d!30101 (= (getValueByKey!158 lt!55837 (_1!1199 (ite (or c!18993 c!18990) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))) (Some!163 (_2!1199 (ite (or c!18993 c!18990) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!30101 (= lt!55836 (lemmaContainsTupThenGetReturnValue!74 lt!55837 (_1!1199 (ite (or c!18993 c!18990) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (_2!1199 (ite (or c!18993 c!18990) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!30101 (= lt!55837 (insertStrictlySorted!77 (toList!786 (ite c!18993 call!11467 (ite c!18990 call!11463 call!11462))) (_1!1199 (ite (or c!18993 c!18990) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (_2!1199 (ite (or c!18993 c!18990) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!30101 (= (+!142 (ite c!18993 call!11467 (ite c!18990 call!11463 call!11462)) (ite (or c!18993 c!18990) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) lt!55838)))

(declare-fun b!108509 () Bool)

(declare-fun res!53787 () Bool)

(assert (=> b!108509 (=> (not res!53787) (not e!70604))))

(assert (=> b!108509 (= res!53787 (= (getValueByKey!158 (toList!786 lt!55838) (_1!1199 (ite (or c!18993 c!18990) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))) (Some!163 (_2!1199 (ite (or c!18993 c!18990) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))))

(declare-fun b!108510 () Bool)

(assert (=> b!108510 (= e!70604 (contains!823 (toList!786 lt!55838) (ite (or c!18993 c!18990) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (= (and d!30101 res!53788) b!108509))

(assert (= (and b!108509 res!53787) b!108510))

(declare-fun m!122205 () Bool)

(assert (=> d!30101 m!122205))

(declare-fun m!122207 () Bool)

(assert (=> d!30101 m!122207))

(declare-fun m!122209 () Bool)

(assert (=> d!30101 m!122209))

(declare-fun m!122211 () Bool)

(assert (=> d!30101 m!122211))

(declare-fun m!122213 () Bool)

(assert (=> b!108509 m!122213))

(declare-fun m!122215 () Bool)

(assert (=> b!108510 m!122215))

(assert (=> bm!11463 d!30101))

(declare-fun d!30103 () Bool)

(declare-fun res!53789 () Bool)

(declare-fun e!70605 () Bool)

(assert (=> d!30103 (=> res!53789 e!70605)))

(assert (=> d!30103 (= res!53789 (and ((_ is Cons!1600) (toList!786 lt!55384)) (= (_1!1199 (h!2198 (toList!786 lt!55384))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30103 (= (containsKey!161 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!70605)))

(declare-fun b!108511 () Bool)

(declare-fun e!70606 () Bool)

(assert (=> b!108511 (= e!70605 e!70606)))

(declare-fun res!53790 () Bool)

(assert (=> b!108511 (=> (not res!53790) (not e!70606))))

(assert (=> b!108511 (= res!53790 (and (or (not ((_ is Cons!1600) (toList!786 lt!55384))) (bvsle (_1!1199 (h!2198 (toList!786 lt!55384))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1600) (toList!786 lt!55384)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55384))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!108512 () Bool)

(assert (=> b!108512 (= e!70606 (containsKey!161 (t!5712 (toList!786 lt!55384)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30103 (not res!53789)) b!108511))

(assert (= (and b!108511 res!53790) b!108512))

(assert (=> b!108512 m!120923))

(declare-fun m!122217 () Bool)

(assert (=> b!108512 m!122217))

(assert (=> d!29977 d!30103))

(declare-fun d!30105 () Bool)

(assert (=> d!30105 (= (get!1350 (getValueByKey!158 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2920 (getValueByKey!158 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29933 d!30105))

(declare-fun b!108516 () Bool)

(declare-fun e!70608 () Option!164)

(assert (=> b!108516 (= e!70608 None!162)))

(declare-fun b!108515 () Bool)

(assert (=> b!108515 (= e!70608 (getValueByKey!158 (t!5712 (toList!786 lt!55306)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108513 () Bool)

(declare-fun e!70607 () Option!164)

(assert (=> b!108513 (= e!70607 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55306)))))))

(declare-fun d!30107 () Bool)

(declare-fun c!19092 () Bool)

(assert (=> d!30107 (= c!19092 (and ((_ is Cons!1600) (toList!786 lt!55306)) (= (_1!1199 (h!2198 (toList!786 lt!55306))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30107 (= (getValueByKey!158 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!70607)))

(declare-fun b!108514 () Bool)

(assert (=> b!108514 (= e!70607 e!70608)))

(declare-fun c!19093 () Bool)

(assert (=> b!108514 (= c!19093 (and ((_ is Cons!1600) (toList!786 lt!55306)) (not (= (_1!1199 (h!2198 (toList!786 lt!55306))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!30107 c!19092) b!108513))

(assert (= (and d!30107 (not c!19092)) b!108514))

(assert (= (and b!108514 c!19093) b!108515))

(assert (= (and b!108514 (not c!19093)) b!108516))

(assert (=> b!108515 m!120923))

(declare-fun m!122219 () Bool)

(assert (=> b!108515 m!122219))

(assert (=> d!29933 d!30107))

(declare-fun d!30109 () Bool)

(declare-fun lt!55839 () Bool)

(assert (=> d!30109 (= lt!55839 (select (content!112 lt!55450) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(declare-fun e!70609 () Bool)

(assert (=> d!30109 (= lt!55839 e!70609)))

(declare-fun res!53792 () Bool)

(assert (=> d!30109 (=> (not res!53792) (not e!70609))))

(assert (=> d!30109 (= res!53792 ((_ is Cons!1600) lt!55450))))

(assert (=> d!30109 (= (contains!823 lt!55450 (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))) lt!55839)))

(declare-fun b!108517 () Bool)

(declare-fun e!70610 () Bool)

(assert (=> b!108517 (= e!70609 e!70610)))

(declare-fun res!53791 () Bool)

(assert (=> b!108517 (=> res!53791 e!70610)))

(assert (=> b!108517 (= res!53791 (= (h!2198 lt!55450) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(declare-fun b!108518 () Bool)

(assert (=> b!108518 (= e!70610 (contains!823 (t!5712 lt!55450) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(assert (= (and d!30109 res!53792) b!108517))

(assert (= (and b!108517 (not res!53791)) b!108518))

(declare-fun m!122221 () Bool)

(assert (=> d!30109 m!122221))

(declare-fun m!122223 () Bool)

(assert (=> d!30109 m!122223))

(declare-fun m!122225 () Bool)

(assert (=> b!108518 m!122225))

(assert (=> b!108011 d!30109))

(assert (=> d!29951 d!29891))

(declare-fun call!11516 () Bool)

(declare-fun bm!11513 () Bool)

(declare-fun lt!55842 () SeekEntryResult!254)

(declare-fun c!19098 () Bool)

(assert (=> bm!11513 (= call!11516 (inRange!0 (ite c!19098 (index!3165 lt!55842) (index!3168 lt!55842)) (mask!6763 newMap!16)))))

(declare-fun b!108535 () Bool)

(declare-fun e!70620 () Bool)

(assert (=> b!108535 (= e!70620 ((_ is Undefined!254) lt!55842))))

(declare-fun call!11517 () Bool)

(declare-fun bm!11514 () Bool)

(assert (=> bm!11514 (= call!11517 (arrayContainsKey!0 (_keys!4315 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!108536 () Bool)

(declare-fun res!53804 () Bool)

(assert (=> b!108536 (= res!53804 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3165 lt!55842)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70622 () Bool)

(assert (=> b!108536 (=> (not res!53804) (not e!70622))))

(declare-fun b!108537 () Bool)

(declare-fun res!53802 () Bool)

(declare-fun e!70621 () Bool)

(assert (=> b!108537 (=> (not res!53802) (not e!70621))))

(assert (=> b!108537 (= res!53802 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3168 lt!55842)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108538 () Bool)

(declare-fun e!70619 () Bool)

(assert (=> b!108538 (= e!70619 e!70622)))

(declare-fun res!53803 () Bool)

(assert (=> b!108538 (= res!53803 call!11516)))

(assert (=> b!108538 (=> (not res!53803) (not e!70622))))

(declare-fun b!108539 () Bool)

(assert (=> b!108539 (= e!70619 e!70620)))

(declare-fun c!19099 () Bool)

(assert (=> b!108539 (= c!19099 ((_ is MissingVacant!254) lt!55842))))

(declare-fun b!108540 () Bool)

(declare-fun res!53801 () Bool)

(assert (=> b!108540 (=> (not res!53801) (not e!70621))))

(assert (=> b!108540 (= res!53801 call!11516)))

(assert (=> b!108540 (= e!70620 e!70621)))

(declare-fun d!30111 () Bool)

(assert (=> d!30111 e!70619))

(assert (=> d!30111 (= c!19098 ((_ is MissingZero!254) lt!55842))))

(assert (=> d!30111 (= lt!55842 (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(assert (=> d!30111 true))

(declare-fun _$34!895 () Unit!3301)

(assert (=> d!30111 (= (choose!682 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)) _$34!895)))

(declare-fun b!108541 () Bool)

(assert (=> b!108541 (= e!70622 (not call!11517))))

(declare-fun b!108542 () Bool)

(assert (=> b!108542 (= e!70621 (not call!11517))))

(assert (= (and d!30111 c!19098) b!108538))

(assert (= (and d!30111 (not c!19098)) b!108539))

(assert (= (and b!108538 res!53803) b!108536))

(assert (= (and b!108536 res!53804) b!108541))

(assert (= (and b!108539 c!19099) b!108540))

(assert (= (and b!108539 (not c!19099)) b!108535))

(assert (= (and b!108540 res!53801) b!108537))

(assert (= (and b!108537 res!53802) b!108542))

(assert (= (or b!108538 b!108540) bm!11513))

(assert (= (or b!108541 b!108542) bm!11514))

(assert (=> d!30111 m!120751))

(assert (=> d!30111 m!120969))

(declare-fun m!122227 () Bool)

(assert (=> bm!11513 m!122227))

(assert (=> bm!11514 m!120751))

(assert (=> bm!11514 m!120973))

(declare-fun m!122229 () Bool)

(assert (=> b!108536 m!122229))

(declare-fun m!122231 () Bool)

(assert (=> b!108537 m!122231))

(assert (=> d!29951 d!30111))

(assert (=> d!29951 d!30057))

(assert (=> bm!11479 d!30011))

(declare-fun d!30113 () Bool)

(declare-fun e!70623 () Bool)

(assert (=> d!30113 e!70623))

(declare-fun res!53805 () Bool)

(assert (=> d!30113 (=> res!53805 e!70623)))

(declare-fun lt!55843 () Bool)

(assert (=> d!30113 (= res!53805 (not lt!55843))))

(declare-fun lt!55846 () Bool)

(assert (=> d!30113 (= lt!55843 lt!55846)))

(declare-fun lt!55845 () Unit!3301)

(declare-fun e!70624 () Unit!3301)

(assert (=> d!30113 (= lt!55845 e!70624)))

(declare-fun c!19100 () Bool)

(assert (=> d!30113 (= c!19100 lt!55846)))

(assert (=> d!30113 (= lt!55846 (containsKey!161 (toList!786 lt!55394) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30113 (= (contains!820 lt!55394 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55843)))

(declare-fun b!108543 () Bool)

(declare-fun lt!55844 () Unit!3301)

(assert (=> b!108543 (= e!70624 lt!55844)))

(assert (=> b!108543 (= lt!55844 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55394) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!108543 (isDefined!110 (getValueByKey!158 (toList!786 lt!55394) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108544 () Bool)

(declare-fun Unit!3342 () Unit!3301)

(assert (=> b!108544 (= e!70624 Unit!3342)))

(declare-fun b!108545 () Bool)

(assert (=> b!108545 (= e!70623 (isDefined!110 (getValueByKey!158 (toList!786 lt!55394) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30113 c!19100) b!108543))

(assert (= (and d!30113 (not c!19100)) b!108544))

(assert (= (and d!30113 (not res!53805)) b!108545))

(declare-fun m!122233 () Bool)

(assert (=> d!30113 m!122233))

(declare-fun m!122235 () Bool)

(assert (=> b!108543 m!122235))

(assert (=> b!108543 m!121159))

(assert (=> b!108543 m!121159))

(declare-fun m!122237 () Bool)

(assert (=> b!108543 m!122237))

(assert (=> b!108545 m!121159))

(assert (=> b!108545 m!121159))

(assert (=> b!108545 m!122237))

(assert (=> d!29841 d!30113))

(declare-fun b!108549 () Bool)

(declare-fun e!70626 () Option!164)

(assert (=> b!108549 (= e!70626 None!162)))

(declare-fun b!108548 () Bool)

(assert (=> b!108548 (= e!70626 (getValueByKey!158 (t!5712 lt!55393) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108546 () Bool)

(declare-fun e!70625 () Option!164)

(assert (=> b!108546 (= e!70625 (Some!163 (_2!1199 (h!2198 lt!55393))))))

(declare-fun d!30115 () Bool)

(declare-fun c!19101 () Bool)

(assert (=> d!30115 (= c!19101 (and ((_ is Cons!1600) lt!55393) (= (_1!1199 (h!2198 lt!55393)) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30115 (= (getValueByKey!158 lt!55393 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!70625)))

(declare-fun b!108547 () Bool)

(assert (=> b!108547 (= e!70625 e!70626)))

(declare-fun c!19102 () Bool)

(assert (=> b!108547 (= c!19102 (and ((_ is Cons!1600) lt!55393) (not (= (_1!1199 (h!2198 lt!55393)) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30115 c!19101) b!108546))

(assert (= (and d!30115 (not c!19101)) b!108547))

(assert (= (and b!108547 c!19102) b!108548))

(assert (= (and b!108547 (not c!19102)) b!108549))

(declare-fun m!122239 () Bool)

(assert (=> b!108548 m!122239))

(assert (=> d!29841 d!30115))

(declare-fun d!30117 () Bool)

(assert (=> d!30117 (= (getValueByKey!158 lt!55393 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55847 () Unit!3301)

(assert (=> d!30117 (= lt!55847 (choose!677 lt!55393 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!70627 () Bool)

(assert (=> d!30117 e!70627))

(declare-fun res!53806 () Bool)

(assert (=> d!30117 (=> (not res!53806) (not e!70627))))

(assert (=> d!30117 (= res!53806 (isStrictlySorted!297 lt!55393))))

(assert (=> d!30117 (= (lemmaContainsTupThenGetReturnValue!74 lt!55393 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55847)))

(declare-fun b!108550 () Bool)

(declare-fun res!53807 () Bool)

(assert (=> b!108550 (=> (not res!53807) (not e!70627))))

(assert (=> b!108550 (= res!53807 (containsKey!161 lt!55393 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108551 () Bool)

(assert (=> b!108551 (= e!70627 (contains!823 lt!55393 (tuple2!2377 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30117 res!53806) b!108550))

(assert (= (and b!108550 res!53807) b!108551))

(assert (=> d!30117 m!121153))

(declare-fun m!122241 () Bool)

(assert (=> d!30117 m!122241))

(declare-fun m!122243 () Bool)

(assert (=> d!30117 m!122243))

(declare-fun m!122245 () Bool)

(assert (=> b!108550 m!122245))

(declare-fun m!122247 () Bool)

(assert (=> b!108551 m!122247))

(assert (=> d!29841 d!30117))

(declare-fun b!108552 () Bool)

(declare-fun e!70629 () List!1604)

(declare-fun call!11520 () List!1604)

(assert (=> b!108552 (= e!70629 call!11520)))

(declare-fun b!108554 () Bool)

(declare-fun e!70628 () List!1604)

(assert (=> b!108554 (= e!70629 e!70628)))

(declare-fun c!19105 () Bool)

(assert (=> b!108554 (= c!19105 (and ((_ is Cons!1600) (toList!786 call!11423)) (= (_1!1199 (h!2198 (toList!786 call!11423))) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108555 () Bool)

(declare-fun call!11518 () List!1604)

(assert (=> b!108555 (= e!70628 call!11518)))

(declare-fun b!108556 () Bool)

(declare-fun e!70632 () List!1604)

(assert (=> b!108556 (= e!70632 (insertStrictlySorted!77 (t!5712 (toList!786 call!11423)) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun c!19104 () Bool)

(declare-fun b!108557 () Bool)

(assert (=> b!108557 (= e!70632 (ite c!19105 (t!5712 (toList!786 call!11423)) (ite c!19104 (Cons!1600 (h!2198 (toList!786 call!11423)) (t!5712 (toList!786 call!11423))) Nil!1601)))))

(declare-fun b!108558 () Bool)

(declare-fun e!70630 () Bool)

(declare-fun lt!55848 () List!1604)

(assert (=> b!108558 (= e!70630 (contains!823 lt!55848 (tuple2!2377 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun bm!11515 () Bool)

(assert (=> bm!11515 (= call!11518 call!11520)))

(declare-fun b!108559 () Bool)

(assert (=> b!108559 (= c!19104 (and ((_ is Cons!1600) (toList!786 call!11423)) (bvsgt (_1!1199 (h!2198 (toList!786 call!11423))) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70631 () List!1604)

(assert (=> b!108559 (= e!70628 e!70631)))

(declare-fun b!108560 () Bool)

(declare-fun call!11519 () List!1604)

(assert (=> b!108560 (= e!70631 call!11519)))

(declare-fun c!19103 () Bool)

(declare-fun bm!11516 () Bool)

(assert (=> bm!11516 (= call!11520 ($colon$colon!81 e!70632 (ite c!19103 (h!2198 (toList!786 call!11423)) (tuple2!2377 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19106 () Bool)

(assert (=> bm!11516 (= c!19106 c!19103)))

(declare-fun b!108553 () Bool)

(declare-fun res!53809 () Bool)

(assert (=> b!108553 (=> (not res!53809) (not e!70630))))

(assert (=> b!108553 (= res!53809 (containsKey!161 lt!55848 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun d!30119 () Bool)

(assert (=> d!30119 e!70630))

(declare-fun res!53808 () Bool)

(assert (=> d!30119 (=> (not res!53808) (not e!70630))))

(assert (=> d!30119 (= res!53808 (isStrictlySorted!297 lt!55848))))

(assert (=> d!30119 (= lt!55848 e!70629)))

(assert (=> d!30119 (= c!19103 (and ((_ is Cons!1600) (toList!786 call!11423)) (bvslt (_1!1199 (h!2198 (toList!786 call!11423))) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30119 (isStrictlySorted!297 (toList!786 call!11423))))

(assert (=> d!30119 (= (insertStrictlySorted!77 (toList!786 call!11423) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55848)))

(declare-fun bm!11517 () Bool)

(assert (=> bm!11517 (= call!11519 call!11518)))

(declare-fun b!108561 () Bool)

(assert (=> b!108561 (= e!70631 call!11519)))

(assert (= (and d!30119 c!19103) b!108552))

(assert (= (and d!30119 (not c!19103)) b!108554))

(assert (= (and b!108554 c!19105) b!108555))

(assert (= (and b!108554 (not c!19105)) b!108559))

(assert (= (and b!108559 c!19104) b!108560))

(assert (= (and b!108559 (not c!19104)) b!108561))

(assert (= (or b!108560 b!108561) bm!11517))

(assert (= (or b!108555 bm!11517) bm!11515))

(assert (= (or b!108552 bm!11515) bm!11516))

(assert (= (and bm!11516 c!19106) b!108556))

(assert (= (and bm!11516 (not c!19106)) b!108557))

(assert (= (and d!30119 res!53808) b!108553))

(assert (= (and b!108553 res!53809) b!108558))

(declare-fun m!122249 () Bool)

(assert (=> d!30119 m!122249))

(declare-fun m!122251 () Bool)

(assert (=> d!30119 m!122251))

(declare-fun m!122253 () Bool)

(assert (=> bm!11516 m!122253))

(declare-fun m!122255 () Bool)

(assert (=> b!108556 m!122255))

(declare-fun m!122257 () Bool)

(assert (=> b!108558 m!122257))

(declare-fun m!122259 () Bool)

(assert (=> b!108553 m!122259))

(assert (=> d!29841 d!30119))

(declare-fun d!30121 () Bool)

(declare-fun e!70633 () Bool)

(assert (=> d!30121 e!70633))

(declare-fun res!53810 () Bool)

(assert (=> d!30121 (=> res!53810 e!70633)))

(declare-fun lt!55849 () Bool)

(assert (=> d!30121 (= res!53810 (not lt!55849))))

(declare-fun lt!55852 () Bool)

(assert (=> d!30121 (= lt!55849 lt!55852)))

(declare-fun lt!55851 () Unit!3301)

(declare-fun e!70634 () Unit!3301)

(assert (=> d!30121 (= lt!55851 e!70634)))

(declare-fun c!19107 () Bool)

(assert (=> d!30121 (= c!19107 lt!55852)))

(assert (=> d!30121 (= lt!55852 (containsKey!161 (toList!786 lt!55580) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30121 (= (contains!820 lt!55580 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) lt!55849)))

(declare-fun b!108562 () Bool)

(declare-fun lt!55850 () Unit!3301)

(assert (=> b!108562 (= e!70634 lt!55850)))

(assert (=> b!108562 (= lt!55850 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55580) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> b!108562 (isDefined!110 (getValueByKey!158 (toList!786 lt!55580) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!108563 () Bool)

(declare-fun Unit!3343 () Unit!3301)

(assert (=> b!108563 (= e!70634 Unit!3343)))

(declare-fun b!108564 () Bool)

(assert (=> b!108564 (= e!70633 (isDefined!110 (getValueByKey!158 (toList!786 lt!55580) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (= (and d!30121 c!19107) b!108562))

(assert (= (and d!30121 (not c!19107)) b!108563))

(assert (= (and d!30121 (not res!53810)) b!108564))

(declare-fun m!122261 () Bool)

(assert (=> d!30121 m!122261))

(declare-fun m!122263 () Bool)

(assert (=> b!108562 m!122263))

(assert (=> b!108562 m!121691))

(assert (=> b!108562 m!121691))

(declare-fun m!122265 () Bool)

(assert (=> b!108562 m!122265))

(assert (=> b!108564 m!121691))

(assert (=> b!108564 m!121691))

(assert (=> b!108564 m!122265))

(assert (=> d!29971 d!30121))

(declare-fun b!108568 () Bool)

(declare-fun e!70636 () Option!164)

(assert (=> b!108568 (= e!70636 None!162)))

(declare-fun b!108567 () Bool)

(assert (=> b!108567 (= e!70636 (getValueByKey!158 (t!5712 lt!55579) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!108565 () Bool)

(declare-fun e!70635 () Option!164)

(assert (=> b!108565 (= e!70635 (Some!163 (_2!1199 (h!2198 lt!55579))))))

(declare-fun c!19108 () Bool)

(declare-fun d!30123 () Bool)

(assert (=> d!30123 (= c!19108 (and ((_ is Cons!1600) lt!55579) (= (_1!1199 (h!2198 lt!55579)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!30123 (= (getValueByKey!158 lt!55579 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) e!70635)))

(declare-fun b!108566 () Bool)

(assert (=> b!108566 (= e!70635 e!70636)))

(declare-fun c!19109 () Bool)

(assert (=> b!108566 (= c!19109 (and ((_ is Cons!1600) lt!55579) (not (= (_1!1199 (h!2198 lt!55579)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(assert (= (and d!30123 c!19108) b!108565))

(assert (= (and d!30123 (not c!19108)) b!108566))

(assert (= (and b!108566 c!19109) b!108567))

(assert (= (and b!108566 (not c!19109)) b!108568))

(declare-fun m!122267 () Bool)

(assert (=> b!108567 m!122267))

(assert (=> d!29971 d!30123))

(declare-fun d!30125 () Bool)

(assert (=> d!30125 (= (getValueByKey!158 lt!55579 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun lt!55853 () Unit!3301)

(assert (=> d!30125 (= lt!55853 (choose!677 lt!55579 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun e!70637 () Bool)

(assert (=> d!30125 e!70637))

(declare-fun res!53811 () Bool)

(assert (=> d!30125 (=> (not res!53811) (not e!70637))))

(assert (=> d!30125 (= res!53811 (isStrictlySorted!297 lt!55579))))

(assert (=> d!30125 (= (lemmaContainsTupThenGetReturnValue!74 lt!55579 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) lt!55853)))

(declare-fun b!108569 () Bool)

(declare-fun res!53812 () Bool)

(assert (=> b!108569 (=> (not res!53812) (not e!70637))))

(assert (=> b!108569 (= res!53812 (containsKey!161 lt!55579 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!108570 () Bool)

(assert (=> b!108570 (= e!70637 (contains!823 lt!55579 (tuple2!2377 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (= (and d!30125 res!53811) b!108569))

(assert (= (and b!108569 res!53812) b!108570))

(assert (=> d!30125 m!121685))

(declare-fun m!122269 () Bool)

(assert (=> d!30125 m!122269))

(declare-fun m!122271 () Bool)

(assert (=> d!30125 m!122271))

(declare-fun m!122273 () Bool)

(assert (=> b!108569 m!122273))

(declare-fun m!122275 () Bool)

(assert (=> b!108570 m!122275))

(assert (=> d!29971 d!30125))

(declare-fun b!108571 () Bool)

(declare-fun e!70639 () List!1604)

(declare-fun call!11523 () List!1604)

(assert (=> b!108571 (= e!70639 call!11523)))

(declare-fun b!108573 () Bool)

(declare-fun e!70638 () List!1604)

(assert (=> b!108573 (= e!70639 e!70638)))

(declare-fun c!19112 () Bool)

(assert (=> b!108573 (= c!19112 (and ((_ is Cons!1600) (toList!786 call!11403)) (= (_1!1199 (h!2198 (toList!786 call!11403))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!108574 () Bool)

(declare-fun call!11521 () List!1604)

(assert (=> b!108574 (= e!70638 call!11521)))

(declare-fun b!108575 () Bool)

(declare-fun e!70642 () List!1604)

(assert (=> b!108575 (= e!70642 (insertStrictlySorted!77 (t!5712 (toList!786 call!11403)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun c!19111 () Bool)

(declare-fun b!108576 () Bool)

(assert (=> b!108576 (= e!70642 (ite c!19112 (t!5712 (toList!786 call!11403)) (ite c!19111 (Cons!1600 (h!2198 (toList!786 call!11403)) (t!5712 (toList!786 call!11403))) Nil!1601)))))

(declare-fun b!108577 () Bool)

(declare-fun lt!55854 () List!1604)

(declare-fun e!70640 () Bool)

(assert (=> b!108577 (= e!70640 (contains!823 lt!55854 (tuple2!2377 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun bm!11518 () Bool)

(assert (=> bm!11518 (= call!11521 call!11523)))

(declare-fun b!108578 () Bool)

(assert (=> b!108578 (= c!19111 (and ((_ is Cons!1600) (toList!786 call!11403)) (bvsgt (_1!1199 (h!2198 (toList!786 call!11403))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun e!70641 () List!1604)

(assert (=> b!108578 (= e!70638 e!70641)))

(declare-fun b!108579 () Bool)

(declare-fun call!11522 () List!1604)

(assert (=> b!108579 (= e!70641 call!11522)))

(declare-fun c!19110 () Bool)

(declare-fun bm!11519 () Bool)

(assert (=> bm!11519 (= call!11523 ($colon$colon!81 e!70642 (ite c!19110 (h!2198 (toList!786 call!11403)) (tuple2!2377 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(declare-fun c!19113 () Bool)

(assert (=> bm!11519 (= c!19113 c!19110)))

(declare-fun b!108572 () Bool)

(declare-fun res!53814 () Bool)

(assert (=> b!108572 (=> (not res!53814) (not e!70640))))

(assert (=> b!108572 (= res!53814 (containsKey!161 lt!55854 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun d!30127 () Bool)

(assert (=> d!30127 e!70640))

(declare-fun res!53813 () Bool)

(assert (=> d!30127 (=> (not res!53813) (not e!70640))))

(assert (=> d!30127 (= res!53813 (isStrictlySorted!297 lt!55854))))

(assert (=> d!30127 (= lt!55854 e!70639)))

(assert (=> d!30127 (= c!19110 (and ((_ is Cons!1600) (toList!786 call!11403)) (bvslt (_1!1199 (h!2198 (toList!786 call!11403))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!30127 (isStrictlySorted!297 (toList!786 call!11403))))

(assert (=> d!30127 (= (insertStrictlySorted!77 (toList!786 call!11403) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) lt!55854)))

(declare-fun bm!11520 () Bool)

(assert (=> bm!11520 (= call!11522 call!11521)))

(declare-fun b!108580 () Bool)

(assert (=> b!108580 (= e!70641 call!11522)))

(assert (= (and d!30127 c!19110) b!108571))

(assert (= (and d!30127 (not c!19110)) b!108573))

(assert (= (and b!108573 c!19112) b!108574))

(assert (= (and b!108573 (not c!19112)) b!108578))

(assert (= (and b!108578 c!19111) b!108579))

(assert (= (and b!108578 (not c!19111)) b!108580))

(assert (= (or b!108579 b!108580) bm!11520))

(assert (= (or b!108574 bm!11520) bm!11518))

(assert (= (or b!108571 bm!11518) bm!11519))

(assert (= (and bm!11519 c!19113) b!108575))

(assert (= (and bm!11519 (not c!19113)) b!108576))

(assert (= (and d!30127 res!53813) b!108572))

(assert (= (and b!108572 res!53814) b!108577))

(declare-fun m!122277 () Bool)

(assert (=> d!30127 m!122277))

(declare-fun m!122279 () Bool)

(assert (=> d!30127 m!122279))

(declare-fun m!122281 () Bool)

(assert (=> bm!11519 m!122281))

(declare-fun m!122283 () Bool)

(assert (=> b!108575 m!122283))

(declare-fun m!122285 () Bool)

(assert (=> b!108577 m!122285))

(declare-fun m!122287 () Bool)

(assert (=> b!108572 m!122287))

(assert (=> d!29971 d!30127))

(declare-fun d!30129 () Bool)

(assert (=> d!30129 (= (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108332 d!30129))

(assert (=> d!29915 d!29903))

(assert (=> d!29915 d!29931))

(declare-fun d!30131 () Bool)

(assert (=> d!30131 (contains!820 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55377)))

(assert (=> d!30131 true))

(declare-fun _$35!351 () Unit!3301)

(assert (=> d!30131 (= (choose!680 lt!55375 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55377) _$35!351)))

(declare-fun bs!4458 () Bool)

(assert (= bs!4458 d!30131))

(assert (=> bs!4458 m!121123))

(assert (=> bs!4458 m!121123))

(assert (=> bs!4458 m!121125))

(assert (=> d!29915 d!30131))

(declare-fun d!30133 () Bool)

(declare-fun e!70643 () Bool)

(assert (=> d!30133 e!70643))

(declare-fun res!53815 () Bool)

(assert (=> d!30133 (=> res!53815 e!70643)))

(declare-fun lt!55855 () Bool)

(assert (=> d!30133 (= res!53815 (not lt!55855))))

(declare-fun lt!55858 () Bool)

(assert (=> d!30133 (= lt!55855 lt!55858)))

(declare-fun lt!55857 () Unit!3301)

(declare-fun e!70644 () Unit!3301)

(assert (=> d!30133 (= lt!55857 e!70644)))

(declare-fun c!19114 () Bool)

(assert (=> d!30133 (= c!19114 lt!55858)))

(assert (=> d!30133 (= lt!55858 (containsKey!161 (toList!786 lt!55375) lt!55377))))

(assert (=> d!30133 (= (contains!820 lt!55375 lt!55377) lt!55855)))

(declare-fun b!108582 () Bool)

(declare-fun lt!55856 () Unit!3301)

(assert (=> b!108582 (= e!70644 lt!55856)))

(assert (=> b!108582 (= lt!55856 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55375) lt!55377))))

(assert (=> b!108582 (isDefined!110 (getValueByKey!158 (toList!786 lt!55375) lt!55377))))

(declare-fun b!108583 () Bool)

(declare-fun Unit!3344 () Unit!3301)

(assert (=> b!108583 (= e!70644 Unit!3344)))

(declare-fun b!108584 () Bool)

(assert (=> b!108584 (= e!70643 (isDefined!110 (getValueByKey!158 (toList!786 lt!55375) lt!55377)))))

(assert (= (and d!30133 c!19114) b!108582))

(assert (= (and d!30133 (not c!19114)) b!108583))

(assert (= (and d!30133 (not res!53815)) b!108584))

(declare-fun m!122289 () Bool)

(assert (=> d!30133 m!122289))

(declare-fun m!122291 () Bool)

(assert (=> b!108582 m!122291))

(declare-fun m!122293 () Bool)

(assert (=> b!108582 m!122293))

(assert (=> b!108582 m!122293))

(declare-fun m!122295 () Bool)

(assert (=> b!108582 m!122295))

(assert (=> b!108584 m!122293))

(assert (=> b!108584 m!122293))

(assert (=> b!108584 m!122295))

(assert (=> d!29915 d!30133))

(declare-fun d!30135 () Bool)

(assert (=> d!30135 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))) lt!55308))))

(declare-fun lt!55859 () Unit!3301)

(assert (=> d!30135 (= lt!55859 (choose!686 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))) lt!55308))))

(declare-fun e!70645 () Bool)

(assert (=> d!30135 e!70645))

(declare-fun res!53816 () Bool)

(assert (=> d!30135 (=> (not res!53816) (not e!70645))))

(assert (=> d!30135 (= res!53816 (isStrictlySorted!297 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)))))))

(assert (=> d!30135 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))) lt!55308) lt!55859)))

(declare-fun b!108585 () Bool)

(assert (=> b!108585 (= e!70645 (containsKey!161 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))) lt!55308))))

(assert (= (and d!30135 res!53816) b!108585))

(assert (=> d!30135 m!121549))

(assert (=> d!30135 m!121549))

(assert (=> d!30135 m!121551))

(declare-fun m!122297 () Bool)

(assert (=> d!30135 m!122297))

(declare-fun m!122299 () Bool)

(assert (=> d!30135 m!122299))

(assert (=> b!108585 m!121545))

(assert (=> b!108118 d!30135))

(declare-fun d!30137 () Bool)

(assert (=> d!30137 (= (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))) lt!55308)) (not (isEmpty!380 (getValueByKey!158 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))) lt!55308))))))

(declare-fun bs!4459 () Bool)

(assert (= bs!4459 d!30137))

(assert (=> bs!4459 m!121549))

(declare-fun m!122301 () Bool)

(assert (=> bs!4459 m!122301))

(assert (=> b!108118 d!30137))

(declare-fun b!108589 () Bool)

(declare-fun e!70647 () Option!164)

(assert (=> b!108589 (= e!70647 None!162)))

(declare-fun b!108588 () Bool)

(assert (=> b!108588 (= e!70647 (getValueByKey!158 (t!5712 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)))) lt!55308))))

(declare-fun e!70646 () Option!164)

(declare-fun b!108586 () Bool)

(assert (=> b!108586 (= e!70646 (Some!163 (_2!1199 (h!2198 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)))))))))

(declare-fun c!19115 () Bool)

(declare-fun d!30139 () Bool)

(assert (=> d!30139 (= c!19115 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)))) (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))))) lt!55308)))))

(assert (=> d!30139 (= (getValueByKey!158 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))) lt!55308) e!70646)))

(declare-fun b!108587 () Bool)

(assert (=> b!108587 (= e!70646 e!70647)))

(declare-fun c!19116 () Bool)

(assert (=> b!108587 (= c!19116 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)))) (not (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307))))) lt!55308))))))

(assert (= (and d!30139 c!19115) b!108586))

(assert (= (and d!30139 (not c!19115)) b!108587))

(assert (= (and b!108587 c!19116) b!108588))

(assert (= (and b!108587 (not c!19116)) b!108589))

(declare-fun m!122303 () Bool)

(assert (=> b!108588 m!122303))

(assert (=> b!108118 d!30139))

(declare-fun d!30141 () Bool)

(declare-fun e!70648 () Bool)

(assert (=> d!30141 e!70648))

(declare-fun res!53817 () Bool)

(assert (=> d!30141 (=> res!53817 e!70648)))

(declare-fun lt!55860 () Bool)

(assert (=> d!30141 (= res!53817 (not lt!55860))))

(declare-fun lt!55863 () Bool)

(assert (=> d!30141 (= lt!55860 lt!55863)))

(declare-fun lt!55862 () Unit!3301)

(declare-fun e!70649 () Unit!3301)

(assert (=> d!30141 (= lt!55862 e!70649)))

(declare-fun c!19117 () Bool)

(assert (=> d!30141 (= c!19117 lt!55863)))

(assert (=> d!30141 (= lt!55863 (containsKey!161 (toList!786 lt!55570) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30141 (= (contains!820 lt!55570 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55860)))

(declare-fun b!108590 () Bool)

(declare-fun lt!55861 () Unit!3301)

(assert (=> b!108590 (= e!70649 lt!55861)))

(assert (=> b!108590 (= lt!55861 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55570) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108590 (isDefined!110 (getValueByKey!158 (toList!786 lt!55570) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108591 () Bool)

(declare-fun Unit!3345 () Unit!3301)

(assert (=> b!108591 (= e!70649 Unit!3345)))

(declare-fun b!108592 () Bool)

(assert (=> b!108592 (= e!70648 (isDefined!110 (getValueByKey!158 (toList!786 lt!55570) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30141 c!19117) b!108590))

(assert (= (and d!30141 (not c!19117)) b!108591))

(assert (= (and d!30141 (not res!53817)) b!108592))

(declare-fun m!122305 () Bool)

(assert (=> d!30141 m!122305))

(declare-fun m!122307 () Bool)

(assert (=> b!108590 m!122307))

(declare-fun m!122309 () Bool)

(assert (=> b!108590 m!122309))

(assert (=> b!108590 m!122309))

(declare-fun m!122311 () Bool)

(assert (=> b!108590 m!122311))

(assert (=> b!108592 m!122309))

(assert (=> b!108592 m!122309))

(assert (=> b!108592 m!122311))

(assert (=> d!29967 d!30141))

(assert (=> d!29967 d!29815))

(declare-fun d!30143 () Bool)

(declare-fun lt!55864 () Bool)

(assert (=> d!30143 (= lt!55864 (select (content!112 (toList!786 lt!55602)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(declare-fun e!70650 () Bool)

(assert (=> d!30143 (= lt!55864 e!70650)))

(declare-fun res!53819 () Bool)

(assert (=> d!30143 (=> (not res!53819) (not e!70650))))

(assert (=> d!30143 (= res!53819 ((_ is Cons!1600) (toList!786 lt!55602)))))

(assert (=> d!30143 (= (contains!823 (toList!786 lt!55602) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) lt!55864)))

(declare-fun b!108593 () Bool)

(declare-fun e!70651 () Bool)

(assert (=> b!108593 (= e!70650 e!70651)))

(declare-fun res!53818 () Bool)

(assert (=> b!108593 (=> res!53818 e!70651)))

(assert (=> b!108593 (= res!53818 (= (h!2198 (toList!786 lt!55602)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(declare-fun b!108594 () Bool)

(assert (=> b!108594 (= e!70651 (contains!823 (t!5712 (toList!786 lt!55602)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(assert (= (and d!30143 res!53819) b!108593))

(assert (= (and b!108593 (not res!53818)) b!108594))

(declare-fun m!122313 () Bool)

(assert (=> d!30143 m!122313))

(declare-fun m!122315 () Bool)

(assert (=> d!30143 m!122315))

(declare-fun m!122317 () Bool)

(assert (=> b!108594 m!122317))

(assert (=> b!108235 d!30143))

(declare-fun d!30145 () Bool)

(assert (=> d!30145 (isDefined!110 (getValueByKey!158 (toList!786 lt!55320) (_1!1199 lt!55092)))))

(declare-fun lt!55865 () Unit!3301)

(assert (=> d!30145 (= lt!55865 (choose!686 (toList!786 lt!55320) (_1!1199 lt!55092)))))

(declare-fun e!70652 () Bool)

(assert (=> d!30145 e!70652))

(declare-fun res!53820 () Bool)

(assert (=> d!30145 (=> (not res!53820) (not e!70652))))

(assert (=> d!30145 (= res!53820 (isStrictlySorted!297 (toList!786 lt!55320)))))

(assert (=> d!30145 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55320) (_1!1199 lt!55092)) lt!55865)))

(declare-fun b!108595 () Bool)

(assert (=> b!108595 (= e!70652 (containsKey!161 (toList!786 lt!55320) (_1!1199 lt!55092)))))

(assert (= (and d!30145 res!53820) b!108595))

(assert (=> d!30145 m!121071))

(assert (=> d!30145 m!121071))

(assert (=> d!30145 m!121297))

(declare-fun m!122319 () Bool)

(assert (=> d!30145 m!122319))

(declare-fun m!122321 () Bool)

(assert (=> d!30145 m!122321))

(assert (=> b!108595 m!121293))

(assert (=> b!107996 d!30145))

(declare-fun d!30147 () Bool)

(assert (=> d!30147 (= (isDefined!110 (getValueByKey!158 (toList!786 lt!55320) (_1!1199 lt!55092))) (not (isEmpty!380 (getValueByKey!158 (toList!786 lt!55320) (_1!1199 lt!55092)))))))

(declare-fun bs!4460 () Bool)

(assert (= bs!4460 d!30147))

(assert (=> bs!4460 m!121071))

(declare-fun m!122323 () Bool)

(assert (=> bs!4460 m!122323))

(assert (=> b!107996 d!30147))

(assert (=> b!107996 d!30021))

(declare-fun b!108599 () Bool)

(declare-fun e!70654 () Option!164)

(assert (=> b!108599 (= e!70654 None!162)))

(declare-fun b!108598 () Bool)

(assert (=> b!108598 (= e!70654 (getValueByKey!158 (t!5712 (toList!786 lt!55507)) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108596 () Bool)

(declare-fun e!70653 () Option!164)

(assert (=> b!108596 (= e!70653 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55507)))))))

(declare-fun d!30149 () Bool)

(declare-fun c!19118 () Bool)

(assert (=> d!30149 (= c!19118 (and ((_ is Cons!1600) (toList!786 lt!55507)) (= (_1!1199 (h!2198 (toList!786 lt!55507))) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30149 (= (getValueByKey!158 (toList!786 lt!55507) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!70653)))

(declare-fun b!108597 () Bool)

(assert (=> b!108597 (= e!70653 e!70654)))

(declare-fun c!19119 () Bool)

(assert (=> b!108597 (= c!19119 (and ((_ is Cons!1600) (toList!786 lt!55507)) (not (= (_1!1199 (h!2198 (toList!786 lt!55507))) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30149 c!19118) b!108596))

(assert (= (and d!30149 (not c!19118)) b!108597))

(assert (= (and b!108597 c!19119) b!108598))

(assert (= (and b!108597 (not c!19119)) b!108599))

(declare-fun m!122325 () Bool)

(assert (=> b!108598 m!122325))

(assert (=> b!108098 d!30149))

(declare-fun b!108613 () Bool)

(declare-fun e!70661 () SeekEntryResult!254)

(assert (=> b!108613 (= e!70661 Undefined!254)))

(declare-fun b!108614 () Bool)

(declare-fun e!70662 () SeekEntryResult!254)

(assert (=> b!108614 (= e!70662 (Found!254 (index!3167 lt!55464)))))

(declare-fun b!108615 () Bool)

(declare-fun e!70663 () SeekEntryResult!254)

(assert (=> b!108615 (= e!70663 (MissingVacant!254 (index!3167 lt!55464)))))

(declare-fun b!108616 () Bool)

(assert (=> b!108616 (= e!70663 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13798 lt!55464) #b00000000000000000000000000000001) (nextIndex!0 (index!3167 lt!55464) (bvadd (x!13798 lt!55464) #b00000000000000000000000000000001) (mask!6763 newMap!16)) (index!3167 lt!55464) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(declare-fun b!108617 () Bool)

(assert (=> b!108617 (= e!70661 e!70662)))

(declare-fun lt!55871 () (_ BitVec 64))

(declare-fun c!19128 () Bool)

(assert (=> b!108617 (= c!19128 (= lt!55871 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun d!30151 () Bool)

(declare-fun lt!55870 () SeekEntryResult!254)

(assert (=> d!30151 (and (or ((_ is Undefined!254) lt!55870) (not ((_ is Found!254) lt!55870)) (and (bvsge (index!3166 lt!55870) #b00000000000000000000000000000000) (bvslt (index!3166 lt!55870) (size!2322 (_keys!4315 newMap!16))))) (or ((_ is Undefined!254) lt!55870) ((_ is Found!254) lt!55870) (not ((_ is MissingVacant!254) lt!55870)) (not (= (index!3168 lt!55870) (index!3167 lt!55464))) (and (bvsge (index!3168 lt!55870) #b00000000000000000000000000000000) (bvslt (index!3168 lt!55870) (size!2322 (_keys!4315 newMap!16))))) (or ((_ is Undefined!254) lt!55870) (ite ((_ is Found!254) lt!55870) (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55870)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (and ((_ is MissingVacant!254) lt!55870) (= (index!3168 lt!55870) (index!3167 lt!55464)) (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3168 lt!55870)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!30151 (= lt!55870 e!70661)))

(declare-fun c!19127 () Bool)

(assert (=> d!30151 (= c!19127 (bvsge (x!13798 lt!55464) #b01111111111111111111111111111110))))

(assert (=> d!30151 (= lt!55871 (select (arr!2066 (_keys!4315 newMap!16)) (index!3167 lt!55464)))))

(assert (=> d!30151 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30151 (= (seekKeyOrZeroReturnVacant!0 (x!13798 lt!55464) (index!3167 lt!55464) (index!3167 lt!55464) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)) lt!55870)))

(declare-fun b!108612 () Bool)

(declare-fun c!19126 () Bool)

(assert (=> b!108612 (= c!19126 (= lt!55871 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108612 (= e!70662 e!70663)))

(assert (= (and d!30151 c!19127) b!108613))

(assert (= (and d!30151 (not c!19127)) b!108617))

(assert (= (and b!108617 c!19128) b!108614))

(assert (= (and b!108617 (not c!19128)) b!108612))

(assert (= (and b!108612 c!19126) b!108615))

(assert (= (and b!108612 (not c!19126)) b!108616))

(declare-fun m!122327 () Bool)

(assert (=> b!108616 m!122327))

(assert (=> b!108616 m!122327))

(assert (=> b!108616 m!120751))

(declare-fun m!122329 () Bool)

(assert (=> b!108616 m!122329))

(declare-fun m!122331 () Bool)

(assert (=> d!30151 m!122331))

(declare-fun m!122333 () Bool)

(assert (=> d!30151 m!122333))

(assert (=> d!30151 m!121361))

(assert (=> d!30151 m!121179))

(assert (=> b!108062 d!30151))

(assert (=> b!108193 d!30085))

(declare-fun d!30153 () Bool)

(declare-fun res!53821 () Bool)

(declare-fun e!70664 () Bool)

(assert (=> d!30153 (=> res!53821 e!70664)))

(assert (=> d!30153 (= res!53821 (= (select (arr!2066 (_keys!4315 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30153 (= (arrayContainsKey!0 (_keys!4315 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!70664)))

(declare-fun b!108618 () Bool)

(declare-fun e!70665 () Bool)

(assert (=> b!108618 (= e!70664 e!70665)))

(declare-fun res!53822 () Bool)

(assert (=> b!108618 (=> (not res!53822) (not e!70665))))

(assert (=> b!108618 (= res!53822 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108619 () Bool)

(assert (=> b!108619 (= e!70665 (arrayContainsKey!0 (_keys!4315 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!30153 (not res!53821)) b!108618))

(assert (= (and b!108618 res!53822) b!108619))

(declare-fun m!122335 () Bool)

(assert (=> d!30153 m!122335))

(assert (=> b!108619 m!120751))

(declare-fun m!122337 () Bool)

(assert (=> b!108619 m!122337))

(assert (=> b!108316 d!30153))

(declare-fun d!30155 () Bool)

(declare-fun e!70666 () Bool)

(assert (=> d!30155 e!70666))

(declare-fun res!53824 () Bool)

(assert (=> d!30155 (=> (not res!53824) (not e!70666))))

(declare-fun lt!55875 () ListLongMap!1541)

(assert (=> d!30155 (= res!53824 (contains!820 lt!55875 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun lt!55874 () List!1604)

(assert (=> d!30155 (= lt!55875 (ListLongMap!1542 lt!55874))))

(declare-fun lt!55872 () Unit!3301)

(declare-fun lt!55873 () Unit!3301)

(assert (=> d!30155 (= lt!55872 lt!55873)))

(assert (=> d!30155 (= (getValueByKey!158 lt!55874 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30155 (= lt!55873 (lemmaContainsTupThenGetReturnValue!74 lt!55874 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30155 (= lt!55874 (insertStrictlySorted!77 (toList!786 call!11461) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30155 (= (+!142 call!11461 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) lt!55875)))

(declare-fun b!108620 () Bool)

(declare-fun res!53823 () Bool)

(assert (=> b!108620 (=> (not res!53823) (not e!70666))))

(assert (=> b!108620 (= res!53823 (= (getValueByKey!158 (toList!786 lt!55875) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(declare-fun b!108621 () Bool)

(assert (=> b!108621 (= e!70666 (contains!823 (toList!786 lt!55875) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(assert (= (and d!30155 res!53824) b!108620))

(assert (= (and b!108620 res!53823) b!108621))

(declare-fun m!122339 () Bool)

(assert (=> d!30155 m!122339))

(declare-fun m!122341 () Bool)

(assert (=> d!30155 m!122341))

(declare-fun m!122343 () Bool)

(assert (=> d!30155 m!122343))

(declare-fun m!122345 () Bool)

(assert (=> d!30155 m!122345))

(declare-fun m!122347 () Bool)

(assert (=> b!108620 m!122347))

(declare-fun m!122349 () Bool)

(assert (=> b!108621 m!122349))

(assert (=> b!108167 d!30155))

(declare-fun b!108625 () Bool)

(declare-fun e!70668 () Option!164)

(assert (=> b!108625 (= e!70668 None!162)))

(declare-fun b!108624 () Bool)

(assert (=> b!108624 (= e!70668 (getValueByKey!158 (t!5712 (toList!786 lt!55497)) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108622 () Bool)

(declare-fun e!70667 () Option!164)

(assert (=> b!108622 (= e!70667 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55497)))))))

(declare-fun d!30157 () Bool)

(declare-fun c!19129 () Bool)

(assert (=> d!30157 (= c!19129 (and ((_ is Cons!1600) (toList!786 lt!55497)) (= (_1!1199 (h!2198 (toList!786 lt!55497))) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30157 (= (getValueByKey!158 (toList!786 lt!55497) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!70667)))

(declare-fun b!108623 () Bool)

(assert (=> b!108623 (= e!70667 e!70668)))

(declare-fun c!19130 () Bool)

(assert (=> b!108623 (= c!19130 (and ((_ is Cons!1600) (toList!786 lt!55497)) (not (= (_1!1199 (h!2198 (toList!786 lt!55497))) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30157 c!19129) b!108622))

(assert (= (and d!30157 (not c!19129)) b!108623))

(assert (= (and b!108623 c!19130) b!108624))

(assert (= (and b!108623 (not c!19130)) b!108625))

(declare-fun m!122351 () Bool)

(assert (=> b!108624 m!122351))

(assert (=> b!108091 d!30157))

(declare-fun d!30159 () Bool)

(declare-fun c!19133 () Bool)

(assert (=> d!30159 (= c!19133 ((_ is Nil!1601) (toList!786 lt!55316)))))

(declare-fun e!70671 () (InoxSet tuple2!2376))

(assert (=> d!30159 (= (content!112 (toList!786 lt!55316)) e!70671)))

(declare-fun b!108630 () Bool)

(assert (=> b!108630 (= e!70671 ((as const (Array tuple2!2376 Bool)) false))))

(declare-fun b!108631 () Bool)

(assert (=> b!108631 (= e!70671 ((_ map or) (store ((as const (Array tuple2!2376 Bool)) false) (h!2198 (toList!786 lt!55316)) true) (content!112 (t!5712 (toList!786 lt!55316)))))))

(assert (= (and d!30159 c!19133) b!108630))

(assert (= (and d!30159 (not c!19133)) b!108631))

(declare-fun m!122353 () Bool)

(assert (=> b!108631 m!122353))

(declare-fun m!122355 () Bool)

(assert (=> b!108631 m!122355))

(assert (=> d!29865 d!30159))

(declare-fun d!30161 () Bool)

(declare-fun e!70672 () Bool)

(assert (=> d!30161 e!70672))

(declare-fun res!53825 () Bool)

(assert (=> d!30161 (=> res!53825 e!70672)))

(declare-fun lt!55876 () Bool)

(assert (=> d!30161 (= res!53825 (not lt!55876))))

(declare-fun lt!55879 () Bool)

(assert (=> d!30161 (= lt!55876 lt!55879)))

(declare-fun lt!55878 () Unit!3301)

(declare-fun e!70673 () Unit!3301)

(assert (=> d!30161 (= lt!55878 e!70673)))

(declare-fun c!19134 () Bool)

(assert (=> d!30161 (= c!19134 lt!55879)))

(assert (=> d!30161 (= lt!55879 (containsKey!161 (toList!786 lt!55512) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30161 (= (contains!820 lt!55512 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55876)))

(declare-fun b!108632 () Bool)

(declare-fun lt!55877 () Unit!3301)

(assert (=> b!108632 (= e!70673 lt!55877)))

(assert (=> b!108632 (= lt!55877 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55512) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!108632 (isDefined!110 (getValueByKey!158 (toList!786 lt!55512) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108633 () Bool)

(declare-fun Unit!3346 () Unit!3301)

(assert (=> b!108633 (= e!70673 Unit!3346)))

(declare-fun b!108634 () Bool)

(assert (=> b!108634 (= e!70672 (isDefined!110 (getValueByKey!158 (toList!786 lt!55512) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30161 c!19134) b!108632))

(assert (= (and d!30161 (not c!19134)) b!108633))

(assert (= (and d!30161 (not res!53825)) b!108634))

(declare-fun m!122357 () Bool)

(assert (=> d!30161 m!122357))

(declare-fun m!122359 () Bool)

(assert (=> b!108632 m!122359))

(assert (=> b!108632 m!121473))

(assert (=> b!108632 m!121473))

(declare-fun m!122361 () Bool)

(assert (=> b!108632 m!122361))

(assert (=> b!108634 m!121473))

(assert (=> b!108634 m!121473))

(assert (=> b!108634 m!122361))

(assert (=> d!29921 d!30161))

(declare-fun b!108638 () Bool)

(declare-fun e!70675 () Option!164)

(assert (=> b!108638 (= e!70675 None!162)))

(declare-fun b!108637 () Bool)

(assert (=> b!108637 (= e!70675 (getValueByKey!158 (t!5712 lt!55511) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108635 () Bool)

(declare-fun e!70674 () Option!164)

(assert (=> b!108635 (= e!70674 (Some!163 (_2!1199 (h!2198 lt!55511))))))

(declare-fun d!30163 () Bool)

(declare-fun c!19135 () Bool)

(assert (=> d!30163 (= c!19135 (and ((_ is Cons!1600) lt!55511) (= (_1!1199 (h!2198 lt!55511)) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30163 (= (getValueByKey!158 lt!55511 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!70674)))

(declare-fun b!108636 () Bool)

(assert (=> b!108636 (= e!70674 e!70675)))

(declare-fun c!19136 () Bool)

(assert (=> b!108636 (= c!19136 (and ((_ is Cons!1600) lt!55511) (not (= (_1!1199 (h!2198 lt!55511)) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30163 c!19135) b!108635))

(assert (= (and d!30163 (not c!19135)) b!108636))

(assert (= (and b!108636 c!19136) b!108637))

(assert (= (and b!108636 (not c!19136)) b!108638))

(declare-fun m!122363 () Bool)

(assert (=> b!108637 m!122363))

(assert (=> d!29921 d!30163))

(declare-fun d!30165 () Bool)

(assert (=> d!30165 (= (getValueByKey!158 lt!55511 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55880 () Unit!3301)

(assert (=> d!30165 (= lt!55880 (choose!677 lt!55511 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!70676 () Bool)

(assert (=> d!30165 e!70676))

(declare-fun res!53826 () Bool)

(assert (=> d!30165 (=> (not res!53826) (not e!70676))))

(assert (=> d!30165 (= res!53826 (isStrictlySorted!297 lt!55511))))

(assert (=> d!30165 (= (lemmaContainsTupThenGetReturnValue!74 lt!55511 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55880)))

(declare-fun b!108639 () Bool)

(declare-fun res!53827 () Bool)

(assert (=> b!108639 (=> (not res!53827) (not e!70676))))

(assert (=> b!108639 (= res!53827 (containsKey!161 lt!55511 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108640 () Bool)

(assert (=> b!108640 (= e!70676 (contains!823 lt!55511 (tuple2!2377 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30165 res!53826) b!108639))

(assert (= (and b!108639 res!53827) b!108640))

(assert (=> d!30165 m!121467))

(declare-fun m!122365 () Bool)

(assert (=> d!30165 m!122365))

(declare-fun m!122367 () Bool)

(assert (=> d!30165 m!122367))

(declare-fun m!122369 () Bool)

(assert (=> b!108639 m!122369))

(declare-fun m!122371 () Bool)

(assert (=> b!108640 m!122371))

(assert (=> d!29921 d!30165))

(declare-fun b!108641 () Bool)

(declare-fun e!70678 () List!1604)

(declare-fun call!11526 () List!1604)

(assert (=> b!108641 (= e!70678 call!11526)))

(declare-fun b!108643 () Bool)

(declare-fun e!70677 () List!1604)

(assert (=> b!108643 (= e!70678 e!70677)))

(declare-fun c!19139 () Bool)

(assert (=> b!108643 (= c!19139 (and ((_ is Cons!1600) (toList!786 lt!55373)) (= (_1!1199 (h!2198 (toList!786 lt!55373))) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108644 () Bool)

(declare-fun call!11524 () List!1604)

(assert (=> b!108644 (= e!70677 call!11524)))

(declare-fun b!108645 () Bool)

(declare-fun e!70681 () List!1604)

(assert (=> b!108645 (= e!70681 (insertStrictlySorted!77 (t!5712 (toList!786 lt!55373)) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108646 () Bool)

(declare-fun c!19138 () Bool)

(assert (=> b!108646 (= e!70681 (ite c!19139 (t!5712 (toList!786 lt!55373)) (ite c!19138 (Cons!1600 (h!2198 (toList!786 lt!55373)) (t!5712 (toList!786 lt!55373))) Nil!1601)))))

(declare-fun b!108647 () Bool)

(declare-fun e!70679 () Bool)

(declare-fun lt!55881 () List!1604)

(assert (=> b!108647 (= e!70679 (contains!823 lt!55881 (tuple2!2377 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun bm!11521 () Bool)

(assert (=> bm!11521 (= call!11524 call!11526)))

(declare-fun b!108648 () Bool)

(assert (=> b!108648 (= c!19138 (and ((_ is Cons!1600) (toList!786 lt!55373)) (bvsgt (_1!1199 (h!2198 (toList!786 lt!55373))) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70680 () List!1604)

(assert (=> b!108648 (= e!70677 e!70680)))

(declare-fun b!108649 () Bool)

(declare-fun call!11525 () List!1604)

(assert (=> b!108649 (= e!70680 call!11525)))

(declare-fun bm!11522 () Bool)

(declare-fun c!19137 () Bool)

(assert (=> bm!11522 (= call!11526 ($colon$colon!81 e!70681 (ite c!19137 (h!2198 (toList!786 lt!55373)) (tuple2!2377 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19140 () Bool)

(assert (=> bm!11522 (= c!19140 c!19137)))

(declare-fun b!108642 () Bool)

(declare-fun res!53829 () Bool)

(assert (=> b!108642 (=> (not res!53829) (not e!70679))))

(assert (=> b!108642 (= res!53829 (containsKey!161 lt!55881 (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun d!30167 () Bool)

(assert (=> d!30167 e!70679))

(declare-fun res!53828 () Bool)

(assert (=> d!30167 (=> (not res!53828) (not e!70679))))

(assert (=> d!30167 (= res!53828 (isStrictlySorted!297 lt!55881))))

(assert (=> d!30167 (= lt!55881 e!70678)))

(assert (=> d!30167 (= c!19137 (and ((_ is Cons!1600) (toList!786 lt!55373)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55373))) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30167 (isStrictlySorted!297 (toList!786 lt!55373))))

(assert (=> d!30167 (= (insertStrictlySorted!77 (toList!786 lt!55373) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55881)))

(declare-fun bm!11523 () Bool)

(assert (=> bm!11523 (= call!11525 call!11524)))

(declare-fun b!108650 () Bool)

(assert (=> b!108650 (= e!70680 call!11525)))

(assert (= (and d!30167 c!19137) b!108641))

(assert (= (and d!30167 (not c!19137)) b!108643))

(assert (= (and b!108643 c!19139) b!108644))

(assert (= (and b!108643 (not c!19139)) b!108648))

(assert (= (and b!108648 c!19138) b!108649))

(assert (= (and b!108648 (not c!19138)) b!108650))

(assert (= (or b!108649 b!108650) bm!11523))

(assert (= (or b!108644 bm!11523) bm!11521))

(assert (= (or b!108641 bm!11521) bm!11522))

(assert (= (and bm!11522 c!19140) b!108645))

(assert (= (and bm!11522 (not c!19140)) b!108646))

(assert (= (and d!30167 res!53828) b!108642))

(assert (= (and b!108642 res!53829) b!108647))

(declare-fun m!122373 () Bool)

(assert (=> d!30167 m!122373))

(declare-fun m!122375 () Bool)

(assert (=> d!30167 m!122375))

(declare-fun m!122377 () Bool)

(assert (=> bm!11522 m!122377))

(declare-fun m!122379 () Bool)

(assert (=> b!108645 m!122379))

(declare-fun m!122381 () Bool)

(assert (=> b!108647 m!122381))

(declare-fun m!122383 () Bool)

(assert (=> b!108642 m!122383))

(assert (=> d!29921 d!30167))

(declare-fun d!30169 () Bool)

(declare-fun lt!55882 () Bool)

(assert (=> d!30169 (= lt!55882 (select (content!112 lt!55569) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(declare-fun e!70682 () Bool)

(assert (=> d!30169 (= lt!55882 e!70682)))

(declare-fun res!53831 () Bool)

(assert (=> d!30169 (=> (not res!53831) (not e!70682))))

(assert (=> d!30169 (= res!53831 ((_ is Cons!1600) lt!55569))))

(assert (=> d!30169 (= (contains!823 lt!55569 (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))) lt!55882)))

(declare-fun b!108651 () Bool)

(declare-fun e!70683 () Bool)

(assert (=> b!108651 (= e!70682 e!70683)))

(declare-fun res!53830 () Bool)

(assert (=> b!108651 (=> res!53830 e!70683)))

(assert (=> b!108651 (= res!53830 (= (h!2198 lt!55569) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(declare-fun b!108652 () Bool)

(assert (=> b!108652 (= e!70683 (contains!823 (t!5712 lt!55569) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(assert (= (and d!30169 res!53831) b!108651))

(assert (= (and b!108651 (not res!53830)) b!108652))

(declare-fun m!122385 () Bool)

(assert (=> d!30169 m!122385))

(declare-fun m!122387 () Bool)

(assert (=> d!30169 m!122387))

(declare-fun m!122389 () Bool)

(assert (=> b!108652 m!122389))

(assert (=> b!108189 d!30169))

(declare-fun d!30171 () Bool)

(declare-fun lt!55883 () Bool)

(assert (=> d!30171 (= lt!55883 (select (content!112 (t!5712 (toList!786 lt!55316))) lt!55093))))

(declare-fun e!70684 () Bool)

(assert (=> d!30171 (= lt!55883 e!70684)))

(declare-fun res!53833 () Bool)

(assert (=> d!30171 (=> (not res!53833) (not e!70684))))

(assert (=> d!30171 (= res!53833 ((_ is Cons!1600) (t!5712 (toList!786 lt!55316))))))

(assert (=> d!30171 (= (contains!823 (t!5712 (toList!786 lt!55316)) lt!55093) lt!55883)))

(declare-fun b!108653 () Bool)

(declare-fun e!70685 () Bool)

(assert (=> b!108653 (= e!70684 e!70685)))

(declare-fun res!53832 () Bool)

(assert (=> b!108653 (=> res!53832 e!70685)))

(assert (=> b!108653 (= res!53832 (= (h!2198 (t!5712 (toList!786 lt!55316))) lt!55093))))

(declare-fun b!108654 () Bool)

(assert (=> b!108654 (= e!70685 (contains!823 (t!5712 (t!5712 (toList!786 lt!55316))) lt!55093))))

(assert (= (and d!30171 res!53833) b!108653))

(assert (= (and b!108653 (not res!53832)) b!108654))

(assert (=> d!30171 m!122355))

(declare-fun m!122391 () Bool)

(assert (=> d!30171 m!122391))

(declare-fun m!122393 () Bool)

(assert (=> b!108654 m!122393))

(assert (=> b!107995 d!30171))

(declare-fun d!30173 () Bool)

(declare-fun e!70686 () Bool)

(assert (=> d!30173 e!70686))

(declare-fun res!53834 () Bool)

(assert (=> d!30173 (=> res!53834 e!70686)))

(declare-fun lt!55884 () Bool)

(assert (=> d!30173 (= res!53834 (not lt!55884))))

(declare-fun lt!55887 () Bool)

(assert (=> d!30173 (= lt!55884 lt!55887)))

(declare-fun lt!55886 () Unit!3301)

(declare-fun e!70687 () Unit!3301)

(assert (=> d!30173 (= lt!55886 e!70687)))

(declare-fun c!19141 () Bool)

(assert (=> d!30173 (= c!19141 lt!55887)))

(assert (=> d!30173 (= lt!55887 (containsKey!161 (toList!786 lt!55431) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!30173 (= (contains!820 lt!55431 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) lt!55884)))

(declare-fun b!108655 () Bool)

(declare-fun lt!55885 () Unit!3301)

(assert (=> b!108655 (= e!70687 lt!55885)))

(assert (=> b!108655 (= lt!55885 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55431) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> b!108655 (isDefined!110 (getValueByKey!158 (toList!786 lt!55431) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!108656 () Bool)

(declare-fun Unit!3347 () Unit!3301)

(assert (=> b!108656 (= e!70687 Unit!3347)))

(declare-fun b!108657 () Bool)

(assert (=> b!108657 (= e!70686 (isDefined!110 (getValueByKey!158 (toList!786 lt!55431) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(assert (= (and d!30173 c!19141) b!108655))

(assert (= (and d!30173 (not c!19141)) b!108656))

(assert (= (and d!30173 (not res!53834)) b!108657))

(declare-fun m!122395 () Bool)

(assert (=> d!30173 m!122395))

(declare-fun m!122397 () Bool)

(assert (=> b!108655 m!122397))

(assert (=> b!108655 m!121255))

(assert (=> b!108655 m!121255))

(declare-fun m!122399 () Bool)

(assert (=> b!108655 m!122399))

(assert (=> b!108657 m!121255))

(assert (=> b!108657 m!121255))

(assert (=> b!108657 m!122399))

(assert (=> d!29855 d!30173))

(declare-fun b!108661 () Bool)

(declare-fun e!70689 () Option!164)

(assert (=> b!108661 (= e!70689 None!162)))

(declare-fun b!108660 () Bool)

(assert (=> b!108660 (= e!70689 (getValueByKey!158 (t!5712 lt!55430) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!108658 () Bool)

(declare-fun e!70688 () Option!164)

(assert (=> b!108658 (= e!70688 (Some!163 (_2!1199 (h!2198 lt!55430))))))

(declare-fun d!30175 () Bool)

(declare-fun c!19142 () Bool)

(assert (=> d!30175 (= c!19142 (and ((_ is Cons!1600) lt!55430) (= (_1!1199 (h!2198 lt!55430)) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(assert (=> d!30175 (= (getValueByKey!158 lt!55430 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) e!70688)))

(declare-fun b!108659 () Bool)

(assert (=> b!108659 (= e!70688 e!70689)))

(declare-fun c!19143 () Bool)

(assert (=> b!108659 (= c!19143 (and ((_ is Cons!1600) lt!55430) (not (= (_1!1199 (h!2198 lt!55430)) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))))

(assert (= (and d!30175 c!19142) b!108658))

(assert (= (and d!30175 (not c!19142)) b!108659))

(assert (= (and b!108659 c!19143) b!108660))

(assert (= (and b!108659 (not c!19143)) b!108661))

(declare-fun m!122401 () Bool)

(assert (=> b!108660 m!122401))

(assert (=> d!29855 d!30175))

(declare-fun d!30177 () Bool)

(assert (=> d!30177 (= (getValueByKey!158 lt!55430 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) (Some!163 (_2!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun lt!55888 () Unit!3301)

(assert (=> d!30177 (= lt!55888 (choose!677 lt!55430 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (_2!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun e!70690 () Bool)

(assert (=> d!30177 e!70690))

(declare-fun res!53835 () Bool)

(assert (=> d!30177 (=> (not res!53835) (not e!70690))))

(assert (=> d!30177 (= res!53835 (isStrictlySorted!297 lt!55430))))

(assert (=> d!30177 (= (lemmaContainsTupThenGetReturnValue!74 lt!55430 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (_2!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) lt!55888)))

(declare-fun b!108662 () Bool)

(declare-fun res!53836 () Bool)

(assert (=> b!108662 (=> (not res!53836) (not e!70690))))

(assert (=> b!108662 (= res!53836 (containsKey!161 lt!55430 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!108663 () Bool)

(assert (=> b!108663 (= e!70690 (contains!823 lt!55430 (tuple2!2377 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (_2!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(assert (= (and d!30177 res!53835) b!108662))

(assert (= (and b!108662 res!53836) b!108663))

(assert (=> d!30177 m!121249))

(declare-fun m!122403 () Bool)

(assert (=> d!30177 m!122403))

(declare-fun m!122405 () Bool)

(assert (=> d!30177 m!122405))

(declare-fun m!122407 () Bool)

(assert (=> b!108662 m!122407))

(declare-fun m!122409 () Bool)

(assert (=> b!108663 m!122409))

(assert (=> d!29855 d!30177))

(declare-fun b!108664 () Bool)

(declare-fun e!70692 () List!1604)

(declare-fun call!11529 () List!1604)

(assert (=> b!108664 (= e!70692 call!11529)))

(declare-fun b!108666 () Bool)

(declare-fun e!70691 () List!1604)

(assert (=> b!108666 (= e!70692 e!70691)))

(declare-fun c!19146 () Bool)

(assert (=> b!108666 (= c!19146 (and ((_ is Cons!1600) (toList!786 e!70153)) (= (_1!1199 (h!2198 (toList!786 e!70153))) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(declare-fun b!108667 () Bool)

(declare-fun call!11527 () List!1604)

(assert (=> b!108667 (= e!70691 call!11527)))

(declare-fun e!70695 () List!1604)

(declare-fun b!108668 () Bool)

(assert (=> b!108668 (= e!70695 (insertStrictlySorted!77 (t!5712 (toList!786 e!70153)) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (_2!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!108669 () Bool)

(declare-fun c!19145 () Bool)

(assert (=> b!108669 (= e!70695 (ite c!19146 (t!5712 (toList!786 e!70153)) (ite c!19145 (Cons!1600 (h!2198 (toList!786 e!70153)) (t!5712 (toList!786 e!70153))) Nil!1601)))))

(declare-fun e!70693 () Bool)

(declare-fun b!108670 () Bool)

(declare-fun lt!55889 () List!1604)

(assert (=> b!108670 (= e!70693 (contains!823 lt!55889 (tuple2!2377 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (_2!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(declare-fun bm!11524 () Bool)

(assert (=> bm!11524 (= call!11527 call!11529)))

(declare-fun b!108671 () Bool)

(assert (=> b!108671 (= c!19145 (and ((_ is Cons!1600) (toList!786 e!70153)) (bvsgt (_1!1199 (h!2198 (toList!786 e!70153))) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(declare-fun e!70694 () List!1604)

(assert (=> b!108671 (= e!70691 e!70694)))

(declare-fun b!108672 () Bool)

(declare-fun call!11528 () List!1604)

(assert (=> b!108672 (= e!70694 call!11528)))

(declare-fun bm!11525 () Bool)

(declare-fun c!19144 () Bool)

(assert (=> bm!11525 (= call!11529 ($colon$colon!81 e!70695 (ite c!19144 (h!2198 (toList!786 e!70153)) (tuple2!2377 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (_2!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))))

(declare-fun c!19147 () Bool)

(assert (=> bm!11525 (= c!19147 c!19144)))

(declare-fun b!108665 () Bool)

(declare-fun res!53838 () Bool)

(assert (=> b!108665 (=> (not res!53838) (not e!70693))))

(assert (=> b!108665 (= res!53838 (containsKey!161 lt!55889 (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun d!30179 () Bool)

(assert (=> d!30179 e!70693))

(declare-fun res!53837 () Bool)

(assert (=> d!30179 (=> (not res!53837) (not e!70693))))

(assert (=> d!30179 (= res!53837 (isStrictlySorted!297 lt!55889))))

(assert (=> d!30179 (= lt!55889 e!70692)))

(assert (=> d!30179 (= c!19144 (and ((_ is Cons!1600) (toList!786 e!70153)) (bvslt (_1!1199 (h!2198 (toList!786 e!70153))) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(assert (=> d!30179 (isStrictlySorted!297 (toList!786 e!70153))))

(assert (=> d!30179 (= (insertStrictlySorted!77 (toList!786 e!70153) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (_2!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) lt!55889)))

(declare-fun bm!11526 () Bool)

(assert (=> bm!11526 (= call!11528 call!11527)))

(declare-fun b!108673 () Bool)

(assert (=> b!108673 (= e!70694 call!11528)))

(assert (= (and d!30179 c!19144) b!108664))

(assert (= (and d!30179 (not c!19144)) b!108666))

(assert (= (and b!108666 c!19146) b!108667))

(assert (= (and b!108666 (not c!19146)) b!108671))

(assert (= (and b!108671 c!19145) b!108672))

(assert (= (and b!108671 (not c!19145)) b!108673))

(assert (= (or b!108672 b!108673) bm!11526))

(assert (= (or b!108667 bm!11526) bm!11524))

(assert (= (or b!108664 bm!11524) bm!11525))

(assert (= (and bm!11525 c!19147) b!108668))

(assert (= (and bm!11525 (not c!19147)) b!108669))

(assert (= (and d!30179 res!53837) b!108665))

(assert (= (and b!108665 res!53838) b!108670))

(declare-fun m!122411 () Bool)

(assert (=> d!30179 m!122411))

(declare-fun m!122413 () Bool)

(assert (=> d!30179 m!122413))

(declare-fun m!122415 () Bool)

(assert (=> bm!11525 m!122415))

(declare-fun m!122417 () Bool)

(assert (=> b!108668 m!122417))

(declare-fun m!122419 () Bool)

(assert (=> b!108670 m!122419))

(declare-fun m!122421 () Bool)

(assert (=> b!108665 m!122421))

(assert (=> d!29855 d!30179))

(declare-fun d!30181 () Bool)

(declare-fun res!53840 () Bool)

(declare-fun e!70696 () Bool)

(assert (=> d!30181 (=> (not res!53840) (not e!70696))))

(assert (=> d!30181 (= res!53840 (validMask!0 (mask!6763 (v!2914 (underlying!367 thiss!992)))))))

(assert (=> d!30181 (= (simpleValid!75 (v!2914 (underlying!367 thiss!992))) e!70696)))

(declare-fun b!108676 () Bool)

(declare-fun res!53841 () Bool)

(assert (=> b!108676 (=> (not res!53841) (not e!70696))))

(assert (=> b!108676 (= res!53841 (= (size!2328 (v!2914 (underlying!367 thiss!992))) (bvadd (_size!504 (v!2914 (underlying!367 thiss!992))) (bvsdiv (bvadd (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!108677 () Bool)

(assert (=> b!108677 (= e!70696 (and (bvsge (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2406 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!504 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!108675 () Bool)

(declare-fun res!53839 () Bool)

(assert (=> b!108675 (=> (not res!53839) (not e!70696))))

(assert (=> b!108675 (= res!53839 (bvsge (size!2328 (v!2914 (underlying!367 thiss!992))) (_size!504 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!108674 () Bool)

(declare-fun res!53842 () Bool)

(assert (=> b!108674 (=> (not res!53842) (not e!70696))))

(assert (=> b!108674 (= res!53842 (and (= (size!2323 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001)) (= (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (size!2323 (_values!2588 (v!2914 (underlying!367 thiss!992))))) (bvsge (_size!504 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!504 (v!2914 (underlying!367 thiss!992))) (bvadd (mask!6763 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001))))))

(assert (= (and d!30181 res!53840) b!108674))

(assert (= (and b!108674 res!53842) b!108675))

(assert (= (and b!108675 res!53839) b!108676))

(assert (= (and b!108676 res!53841) b!108677))

(assert (=> d!30181 m!120789))

(declare-fun m!122423 () Bool)

(assert (=> b!108676 m!122423))

(assert (=> b!108675 m!122423))

(assert (=> d!29981 d!30181))

(assert (=> b!108153 d!30129))

(declare-fun b!108679 () Bool)

(declare-fun e!70699 () Bool)

(assert (=> b!108679 (= e!70699 (contains!822 (ite c!19043 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!108680 () Bool)

(declare-fun e!70700 () Bool)

(declare-fun call!11530 () Bool)

(assert (=> b!108680 (= e!70700 call!11530)))

(declare-fun bm!11527 () Bool)

(declare-fun c!19148 () Bool)

(assert (=> bm!11527 (= call!11530 (arrayNoDuplicates!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19148 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!19043 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602))) (ite c!19043 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)))))))

(declare-fun b!108681 () Bool)

(declare-fun e!70698 () Bool)

(declare-fun e!70697 () Bool)

(assert (=> b!108681 (= e!70698 e!70697)))

(declare-fun res!53845 () Bool)

(assert (=> b!108681 (=> (not res!53845) (not e!70697))))

(assert (=> b!108681 (= res!53845 (not e!70699))))

(declare-fun res!53844 () Bool)

(assert (=> b!108681 (=> (not res!53844) (not e!70699))))

(assert (=> b!108681 (= res!53844 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!108682 () Bool)

(assert (=> b!108682 (= e!70700 call!11530)))

(declare-fun d!30183 () Bool)

(declare-fun res!53843 () Bool)

(assert (=> d!30183 (=> res!53843 e!70698)))

(assert (=> d!30183 (= res!53843 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30183 (= (arrayNoDuplicates!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19043 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602))) e!70698)))

(declare-fun b!108678 () Bool)

(assert (=> b!108678 (= e!70697 e!70700)))

(assert (=> b!108678 (= c!19148 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!30183 (not res!53843)) b!108681))

(assert (= (and b!108681 res!53844) b!108679))

(assert (= (and b!108681 res!53845) b!108678))

(assert (= (and b!108678 c!19148) b!108682))

(assert (= (and b!108678 (not c!19148)) b!108680))

(assert (= (or b!108682 b!108680) bm!11527))

(declare-fun m!122425 () Bool)

(assert (=> b!108679 m!122425))

(assert (=> b!108679 m!122425))

(declare-fun m!122427 () Bool)

(assert (=> b!108679 m!122427))

(assert (=> bm!11527 m!122425))

(declare-fun m!122429 () Bool)

(assert (=> bm!11527 m!122429))

(assert (=> b!108681 m!122425))

(assert (=> b!108681 m!122425))

(declare-fun m!122431 () Bool)

(assert (=> b!108681 m!122431))

(assert (=> b!108678 m!122425))

(assert (=> b!108678 m!122425))

(assert (=> b!108678 m!122431))

(assert (=> bm!11492 d!30183))

(assert (=> b!108279 d!29951))

(declare-fun d!30185 () Bool)

(assert (=> d!30185 (= ($colon$colon!81 e!70323 (ite c!18961 (h!2198 (toList!786 lt!55096)) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092)))) (Cons!1600 (ite c!18961 (h!2198 (toList!786 lt!55096)) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))) e!70323))))

(assert (=> bm!11447 d!30185))

(declare-fun d!30187 () Bool)

(assert (=> d!30187 (= (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108201 d!30187))

(declare-fun d!30189 () Bool)

(declare-fun c!19149 () Bool)

(assert (=> d!30189 (= c!19149 ((_ is Nil!1601) (toList!786 lt!55320)))))

(declare-fun e!70701 () (InoxSet tuple2!2376))

(assert (=> d!30189 (= (content!112 (toList!786 lt!55320)) e!70701)))

(declare-fun b!108683 () Bool)

(assert (=> b!108683 (= e!70701 ((as const (Array tuple2!2376 Bool)) false))))

(declare-fun b!108684 () Bool)

(assert (=> b!108684 (= e!70701 ((_ map or) (store ((as const (Array tuple2!2376 Bool)) false) (h!2198 (toList!786 lt!55320)) true) (content!112 (t!5712 (toList!786 lt!55320)))))))

(assert (= (and d!30189 c!19149) b!108683))

(assert (= (and d!30189 (not c!19149)) b!108684))

(declare-fun m!122433 () Bool)

(assert (=> b!108684 m!122433))

(declare-fun m!122435 () Bool)

(assert (=> b!108684 m!122435))

(assert (=> d!29937 d!30189))

(declare-fun d!30191 () Bool)

(assert (=> d!30191 (= (isDefined!110 (getValueByKey!158 (toList!786 call!11386) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))) (not (isEmpty!380 (getValueByKey!158 (toList!786 call!11386) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun bs!4461 () Bool)

(assert (= bs!4461 d!30191))

(assert (=> bs!4461 m!121235))

(declare-fun m!122437 () Bool)

(assert (=> bs!4461 m!122437))

(assert (=> b!107930 d!30191))

(declare-fun b!108688 () Bool)

(declare-fun e!70703 () Option!164)

(assert (=> b!108688 (= e!70703 None!162)))

(declare-fun b!108687 () Bool)

(assert (=> b!108687 (= e!70703 (getValueByKey!158 (t!5712 (toList!786 call!11386)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108685 () Bool)

(declare-fun e!70702 () Option!164)

(assert (=> b!108685 (= e!70702 (Some!163 (_2!1199 (h!2198 (toList!786 call!11386)))))))

(declare-fun d!30193 () Bool)

(declare-fun c!19150 () Bool)

(assert (=> d!30193 (= c!19150 (and ((_ is Cons!1600) (toList!786 call!11386)) (= (_1!1199 (h!2198 (toList!786 call!11386))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30193 (= (getValueByKey!158 (toList!786 call!11386) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70702)))

(declare-fun b!108686 () Bool)

(assert (=> b!108686 (= e!70702 e!70703)))

(declare-fun c!19151 () Bool)

(assert (=> b!108686 (= c!19151 (and ((_ is Cons!1600) (toList!786 call!11386)) (not (= (_1!1199 (h!2198 (toList!786 call!11386))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(assert (= (and d!30193 c!19150) b!108685))

(assert (= (and d!30193 (not c!19150)) b!108686))

(assert (= (and b!108686 c!19151) b!108687))

(assert (= (and b!108686 (not c!19151)) b!108688))

(assert (=> b!108687 m!120751))

(declare-fun m!122439 () Bool)

(assert (=> b!108687 m!122439))

(assert (=> b!107930 d!30193))

(declare-fun d!30195 () Bool)

(declare-fun e!70704 () Bool)

(assert (=> d!30195 e!70704))

(declare-fun res!53846 () Bool)

(assert (=> d!30195 (=> res!53846 e!70704)))

(declare-fun lt!55890 () Bool)

(assert (=> d!30195 (= res!53846 (not lt!55890))))

(declare-fun lt!55893 () Bool)

(assert (=> d!30195 (= lt!55890 lt!55893)))

(declare-fun lt!55892 () Unit!3301)

(declare-fun e!70705 () Unit!3301)

(assert (=> d!30195 (= lt!55892 e!70705)))

(declare-fun c!19152 () Bool)

(assert (=> d!30195 (= c!19152 lt!55893)))

(assert (=> d!30195 (= lt!55893 (containsKey!161 (toList!786 lt!55602) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30195 (= (contains!820 lt!55602 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) lt!55890)))

(declare-fun b!108689 () Bool)

(declare-fun lt!55891 () Unit!3301)

(assert (=> b!108689 (= e!70705 lt!55891)))

(assert (=> b!108689 (= lt!55891 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55602) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> b!108689 (isDefined!110 (getValueByKey!158 (toList!786 lt!55602) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!108690 () Bool)

(declare-fun Unit!3348 () Unit!3301)

(assert (=> b!108690 (= e!70705 Unit!3348)))

(declare-fun b!108691 () Bool)

(assert (=> b!108691 (= e!70704 (isDefined!110 (getValueByKey!158 (toList!786 lt!55602) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (= (and d!30195 c!19152) b!108689))

(assert (= (and d!30195 (not c!19152)) b!108690))

(assert (= (and d!30195 (not res!53846)) b!108691))

(declare-fun m!122441 () Bool)

(assert (=> d!30195 m!122441))

(declare-fun m!122443 () Bool)

(assert (=> b!108689 m!122443))

(assert (=> b!108689 m!121753))

(assert (=> b!108689 m!121753))

(declare-fun m!122445 () Bool)

(assert (=> b!108689 m!122445))

(assert (=> b!108691 m!121753))

(assert (=> b!108691 m!121753))

(assert (=> b!108691 m!122445))

(assert (=> d!29997 d!30195))

(declare-fun b!108695 () Bool)

(declare-fun e!70707 () Option!164)

(assert (=> b!108695 (= e!70707 None!162)))

(declare-fun b!108694 () Bool)

(assert (=> b!108694 (= e!70707 (getValueByKey!158 (t!5712 lt!55601) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!108692 () Bool)

(declare-fun e!70706 () Option!164)

(assert (=> b!108692 (= e!70706 (Some!163 (_2!1199 (h!2198 lt!55601))))))

(declare-fun d!30197 () Bool)

(declare-fun c!19153 () Bool)

(assert (=> d!30197 (= c!19153 (and ((_ is Cons!1600) lt!55601) (= (_1!1199 (h!2198 lt!55601)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!30197 (= (getValueByKey!158 lt!55601 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) e!70706)))

(declare-fun b!108693 () Bool)

(assert (=> b!108693 (= e!70706 e!70707)))

(declare-fun c!19154 () Bool)

(assert (=> b!108693 (= c!19154 (and ((_ is Cons!1600) lt!55601) (not (= (_1!1199 (h!2198 lt!55601)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(assert (= (and d!30197 c!19153) b!108692))

(assert (= (and d!30197 (not c!19153)) b!108693))

(assert (= (and b!108693 c!19154) b!108694))

(assert (= (and b!108693 (not c!19154)) b!108695))

(declare-fun m!122447 () Bool)

(assert (=> b!108694 m!122447))

(assert (=> d!29997 d!30197))

(declare-fun d!30199 () Bool)

(assert (=> d!30199 (= (getValueByKey!158 lt!55601 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun lt!55894 () Unit!3301)

(assert (=> d!30199 (= lt!55894 (choose!677 lt!55601 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun e!70708 () Bool)

(assert (=> d!30199 e!70708))

(declare-fun res!53847 () Bool)

(assert (=> d!30199 (=> (not res!53847) (not e!70708))))

(assert (=> d!30199 (= res!53847 (isStrictlySorted!297 lt!55601))))

(assert (=> d!30199 (= (lemmaContainsTupThenGetReturnValue!74 lt!55601 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) lt!55894)))

(declare-fun b!108696 () Bool)

(declare-fun res!53848 () Bool)

(assert (=> b!108696 (=> (not res!53848) (not e!70708))))

(assert (=> b!108696 (= res!53848 (containsKey!161 lt!55601 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!108697 () Bool)

(assert (=> b!108697 (= e!70708 (contains!823 lt!55601 (tuple2!2377 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (= (and d!30199 res!53847) b!108696))

(assert (= (and b!108696 res!53848) b!108697))

(assert (=> d!30199 m!121747))

(declare-fun m!122449 () Bool)

(assert (=> d!30199 m!122449))

(declare-fun m!122451 () Bool)

(assert (=> d!30199 m!122451))

(declare-fun m!122453 () Bool)

(assert (=> b!108696 m!122453))

(declare-fun m!122455 () Bool)

(assert (=> b!108697 m!122455))

(assert (=> d!29997 d!30199))

(declare-fun b!108698 () Bool)

(declare-fun e!70710 () List!1604)

(declare-fun call!11533 () List!1604)

(assert (=> b!108698 (= e!70710 call!11533)))

(declare-fun b!108700 () Bool)

(declare-fun e!70709 () List!1604)

(assert (=> b!108700 (= e!70710 e!70709)))

(declare-fun c!19157 () Bool)

(assert (=> b!108700 (= c!19157 (and ((_ is Cons!1600) (toList!786 lt!55096)) (= (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!108701 () Bool)

(declare-fun call!11531 () List!1604)

(assert (=> b!108701 (= e!70709 call!11531)))

(declare-fun b!108702 () Bool)

(declare-fun e!70713 () List!1604)

(assert (=> b!108702 (= e!70713 (insertStrictlySorted!77 (t!5712 (toList!786 lt!55096)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!108703 () Bool)

(declare-fun c!19156 () Bool)

(assert (=> b!108703 (= e!70713 (ite c!19157 (t!5712 (toList!786 lt!55096)) (ite c!19156 (Cons!1600 (h!2198 (toList!786 lt!55096)) (t!5712 (toList!786 lt!55096))) Nil!1601)))))

(declare-fun e!70711 () Bool)

(declare-fun b!108704 () Bool)

(declare-fun lt!55895 () List!1604)

(assert (=> b!108704 (= e!70711 (contains!823 lt!55895 (tuple2!2377 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun bm!11528 () Bool)

(assert (=> bm!11528 (= call!11531 call!11533)))

(declare-fun b!108705 () Bool)

(assert (=> b!108705 (= c!19156 (and ((_ is Cons!1600) (toList!786 lt!55096)) (bvsgt (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun e!70712 () List!1604)

(assert (=> b!108705 (= e!70709 e!70712)))

(declare-fun b!108706 () Bool)

(declare-fun call!11532 () List!1604)

(assert (=> b!108706 (= e!70712 call!11532)))

(declare-fun bm!11529 () Bool)

(declare-fun c!19155 () Bool)

(assert (=> bm!11529 (= call!11533 ($colon$colon!81 e!70713 (ite c!19155 (h!2198 (toList!786 lt!55096)) (tuple2!2377 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(declare-fun c!19158 () Bool)

(assert (=> bm!11529 (= c!19158 c!19155)))

(declare-fun b!108699 () Bool)

(declare-fun res!53850 () Bool)

(assert (=> b!108699 (=> (not res!53850) (not e!70711))))

(assert (=> b!108699 (= res!53850 (containsKey!161 lt!55895 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun d!30201 () Bool)

(assert (=> d!30201 e!70711))

(declare-fun res!53849 () Bool)

(assert (=> d!30201 (=> (not res!53849) (not e!70711))))

(assert (=> d!30201 (= res!53849 (isStrictlySorted!297 lt!55895))))

(assert (=> d!30201 (= lt!55895 e!70710)))

(assert (=> d!30201 (= c!19155 (and ((_ is Cons!1600) (toList!786 lt!55096)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!30201 (isStrictlySorted!297 (toList!786 lt!55096))))

(assert (=> d!30201 (= (insertStrictlySorted!77 (toList!786 lt!55096) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) lt!55895)))

(declare-fun bm!11530 () Bool)

(assert (=> bm!11530 (= call!11532 call!11531)))

(declare-fun b!108707 () Bool)

(assert (=> b!108707 (= e!70712 call!11532)))

(assert (= (and d!30201 c!19155) b!108698))

(assert (= (and d!30201 (not c!19155)) b!108700))

(assert (= (and b!108700 c!19157) b!108701))

(assert (= (and b!108700 (not c!19157)) b!108705))

(assert (= (and b!108705 c!19156) b!108706))

(assert (= (and b!108705 (not c!19156)) b!108707))

(assert (= (or b!108706 b!108707) bm!11530))

(assert (= (or b!108701 bm!11530) bm!11528))

(assert (= (or b!108698 bm!11528) bm!11529))

(assert (= (and bm!11529 c!19158) b!108702))

(assert (= (and bm!11529 (not c!19158)) b!108703))

(assert (= (and d!30201 res!53849) b!108699))

(assert (= (and b!108699 res!53850) b!108704))

(declare-fun m!122457 () Bool)

(assert (=> d!30201 m!122457))

(assert (=> d!30201 m!121339))

(declare-fun m!122459 () Bool)

(assert (=> bm!11529 m!122459))

(declare-fun m!122461 () Bool)

(assert (=> b!108702 m!122461))

(declare-fun m!122463 () Bool)

(assert (=> b!108704 m!122463))

(declare-fun m!122465 () Bool)

(assert (=> b!108699 m!122465))

(assert (=> d!29997 d!30201))

(declare-fun d!30203 () Bool)

(assert (=> d!30203 (= (isDefined!110 (getValueByKey!158 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))) (not (isEmpty!380 (getValueByKey!158 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun bs!4462 () Bool)

(assert (= bs!4462 d!30203))

(assert (=> bs!4462 m!121949))

(declare-fun m!122467 () Bool)

(assert (=> bs!4462 m!122467))

(assert (=> b!108363 d!30203))

(declare-fun b!108711 () Bool)

(declare-fun e!70715 () Option!164)

(assert (=> b!108711 (= e!70715 None!162)))

(declare-fun b!108710 () Bool)

(assert (=> b!108710 (= e!70715 (getValueByKey!158 (t!5712 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108708 () Bool)

(declare-fun e!70714 () Option!164)

(assert (=> b!108708 (= e!70714 (Some!163 (_2!1199 (h!2198 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))))))

(declare-fun d!30205 () Bool)

(declare-fun c!19159 () Bool)

(assert (=> d!30205 (= c!19159 (and ((_ is Cons!1600) (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))) (= (_1!1199 (h!2198 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30205 (= (getValueByKey!158 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70714)))

(declare-fun b!108709 () Bool)

(assert (=> b!108709 (= e!70714 e!70715)))

(declare-fun c!19160 () Bool)

(assert (=> b!108709 (= c!19160 (and ((_ is Cons!1600) (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))) (not (= (_1!1199 (h!2198 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(assert (= (and d!30205 c!19159) b!108708))

(assert (= (and d!30205 (not c!19159)) b!108709))

(assert (= (and b!108709 c!19160) b!108710))

(assert (= (and b!108709 (not c!19160)) b!108711))

(assert (=> b!108710 m!120751))

(declare-fun m!122469 () Bool)

(assert (=> b!108710 m!122469))

(assert (=> b!108363 d!30205))

(declare-fun d!30207 () Bool)

(declare-fun e!70716 () Bool)

(assert (=> d!30207 e!70716))

(declare-fun res!53852 () Bool)

(assert (=> d!30207 (=> (not res!53852) (not e!70716))))

(declare-fun lt!55899 () ListLongMap!1541)

(assert (=> d!30207 (= res!53852 (contains!820 lt!55899 (_1!1199 (ite (or c!19032 c!19029) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(declare-fun lt!55898 () List!1604)

(assert (=> d!30207 (= lt!55899 (ListLongMap!1542 lt!55898))))

(declare-fun lt!55896 () Unit!3301)

(declare-fun lt!55897 () Unit!3301)

(assert (=> d!30207 (= lt!55896 lt!55897)))

(assert (=> d!30207 (= (getValueByKey!158 lt!55898 (_1!1199 (ite (or c!19032 c!19029) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))) (Some!163 (_2!1199 (ite (or c!19032 c!19029) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!30207 (= lt!55897 (lemmaContainsTupThenGetReturnValue!74 lt!55898 (_1!1199 (ite (or c!19032 c!19029) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (_2!1199 (ite (or c!19032 c!19029) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!30207 (= lt!55898 (insertStrictlySorted!77 (toList!786 (ite c!19032 call!11490 (ite c!19029 call!11486 call!11485))) (_1!1199 (ite (or c!19032 c!19029) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (_2!1199 (ite (or c!19032 c!19029) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!30207 (= (+!142 (ite c!19032 call!11490 (ite c!19029 call!11486 call!11485)) (ite (or c!19032 c!19029) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) lt!55899)))

(declare-fun b!108712 () Bool)

(declare-fun res!53851 () Bool)

(assert (=> b!108712 (=> (not res!53851) (not e!70716))))

(assert (=> b!108712 (= res!53851 (= (getValueByKey!158 (toList!786 lt!55899) (_1!1199 (ite (or c!19032 c!19029) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))) (Some!163 (_2!1199 (ite (or c!19032 c!19029) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))))

(declare-fun b!108713 () Bool)

(assert (=> b!108713 (= e!70716 (contains!823 (toList!786 lt!55899) (ite (or c!19032 c!19029) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (= (and d!30207 res!53852) b!108712))

(assert (= (and b!108712 res!53851) b!108713))

(declare-fun m!122471 () Bool)

(assert (=> d!30207 m!122471))

(declare-fun m!122473 () Bool)

(assert (=> d!30207 m!122473))

(declare-fun m!122475 () Bool)

(assert (=> d!30207 m!122475))

(declare-fun m!122477 () Bool)

(assert (=> d!30207 m!122477))

(declare-fun m!122479 () Bool)

(assert (=> b!108712 m!122479))

(declare-fun m!122481 () Bool)

(assert (=> b!108713 m!122481))

(assert (=> bm!11486 d!30207))

(declare-fun d!30209 () Bool)

(assert (=> d!30209 (= (+!142 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (getCurrentListMap!472 (_keys!4315 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(assert (=> d!30209 true))

(declare-fun _$5!113 () Unit!3301)

(assert (=> d!30209 (= (choose!685 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3166 lt!55264) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 (defaultEntry!2605 newMap!16)) _$5!113)))

(declare-fun bs!4463 () Bool)

(assert (= bs!4463 d!30209))

(assert (=> bs!4463 m!120987))

(assert (=> bs!4463 m!120987))

(assert (=> bs!4463 m!121805))

(assert (=> bs!4463 m!120957))

(assert (=> bs!4463 m!121943))

(assert (=> d!30029 d!30209))

(assert (=> d!30029 d!30057))

(declare-fun d!30211 () Bool)

(declare-fun res!53853 () Bool)

(declare-fun e!70717 () Bool)

(assert (=> d!30211 (=> res!53853 e!70717)))

(assert (=> d!30211 (= res!53853 (and ((_ is Cons!1600) lt!55315) (= (_1!1199 (h!2198 lt!55315)) (_1!1199 lt!55093))))))

(assert (=> d!30211 (= (containsKey!161 lt!55315 (_1!1199 lt!55093)) e!70717)))

(declare-fun b!108714 () Bool)

(declare-fun e!70718 () Bool)

(assert (=> b!108714 (= e!70717 e!70718)))

(declare-fun res!53854 () Bool)

(assert (=> b!108714 (=> (not res!53854) (not e!70718))))

(assert (=> b!108714 (= res!53854 (and (or (not ((_ is Cons!1600) lt!55315)) (bvsle (_1!1199 (h!2198 lt!55315)) (_1!1199 lt!55093))) ((_ is Cons!1600) lt!55315) (bvslt (_1!1199 (h!2198 lt!55315)) (_1!1199 lt!55093))))))

(declare-fun b!108715 () Bool)

(assert (=> b!108715 (= e!70718 (containsKey!161 (t!5712 lt!55315) (_1!1199 lt!55093)))))

(assert (= (and d!30211 (not res!53853)) b!108714))

(assert (= (and b!108714 res!53854) b!108715))

(declare-fun m!122483 () Bool)

(assert (=> b!108715 m!122483))

(assert (=> b!108181 d!30211))

(declare-fun d!30213 () Bool)

(declare-fun lt!55900 () Bool)

(assert (=> d!30213 (= lt!55900 (select (content!112 (toList!786 lt!55512)) (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!70719 () Bool)

(assert (=> d!30213 (= lt!55900 e!70719)))

(declare-fun res!53856 () Bool)

(assert (=> d!30213 (=> (not res!53856) (not e!70719))))

(assert (=> d!30213 (= res!53856 ((_ is Cons!1600) (toList!786 lt!55512)))))

(assert (=> d!30213 (= (contains!823 (toList!786 lt!55512) (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55900)))

(declare-fun b!108716 () Bool)

(declare-fun e!70720 () Bool)

(assert (=> b!108716 (= e!70719 e!70720)))

(declare-fun res!53855 () Bool)

(assert (=> b!108716 (=> res!53855 e!70720)))

(assert (=> b!108716 (= res!53855 (= (h!2198 (toList!786 lt!55512)) (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108717 () Bool)

(assert (=> b!108717 (= e!70720 (contains!823 (t!5712 (toList!786 lt!55512)) (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30213 res!53856) b!108716))

(assert (= (and b!108716 (not res!53855)) b!108717))

(declare-fun m!122485 () Bool)

(assert (=> d!30213 m!122485))

(declare-fun m!122487 () Bool)

(assert (=> d!30213 m!122487))

(declare-fun m!122489 () Bool)

(assert (=> b!108717 m!122489))

(assert (=> b!108102 d!30213))

(declare-fun d!30215 () Bool)

(declare-fun e!70721 () Bool)

(assert (=> d!30215 e!70721))

(declare-fun res!53857 () Bool)

(assert (=> d!30215 (=> res!53857 e!70721)))

(declare-fun lt!55901 () Bool)

(assert (=> d!30215 (= res!53857 (not lt!55901))))

(declare-fun lt!55904 () Bool)

(assert (=> d!30215 (= lt!55901 lt!55904)))

(declare-fun lt!55903 () Unit!3301)

(declare-fun e!70722 () Unit!3301)

(assert (=> d!30215 (= lt!55903 e!70722)))

(declare-fun c!19161 () Bool)

(assert (=> d!30215 (= c!19161 lt!55904)))

(assert (=> d!30215 (= lt!55904 (containsKey!161 (toList!786 lt!55410) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30215 (= (contains!820 lt!55410 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55901)))

(declare-fun b!108718 () Bool)

(declare-fun lt!55902 () Unit!3301)

(assert (=> b!108718 (= e!70722 lt!55902)))

(assert (=> b!108718 (= lt!55902 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55410) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108718 (isDefined!110 (getValueByKey!158 (toList!786 lt!55410) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108719 () Bool)

(declare-fun Unit!3349 () Unit!3301)

(assert (=> b!108719 (= e!70722 Unit!3349)))

(declare-fun b!108720 () Bool)

(assert (=> b!108720 (= e!70721 (isDefined!110 (getValueByKey!158 (toList!786 lt!55410) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30215 c!19161) b!108718))

(assert (= (and d!30215 (not c!19161)) b!108719))

(assert (= (and d!30215 (not res!53857)) b!108720))

(declare-fun m!122491 () Bool)

(assert (=> d!30215 m!122491))

(declare-fun m!122493 () Bool)

(assert (=> b!108718 m!122493))

(declare-fun m!122495 () Bool)

(assert (=> b!108718 m!122495))

(assert (=> b!108718 m!122495))

(declare-fun m!122497 () Bool)

(assert (=> b!108718 m!122497))

(assert (=> b!108720 m!122495))

(assert (=> b!108720 m!122495))

(assert (=> b!108720 m!122497))

(assert (=> bm!11433 d!30215))

(declare-fun lt!55905 () Bool)

(declare-fun d!30217 () Bool)

(assert (=> d!30217 (= lt!55905 (select (content!112 (toList!786 lt!55431)) (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun e!70723 () Bool)

(assert (=> d!30217 (= lt!55905 e!70723)))

(declare-fun res!53859 () Bool)

(assert (=> d!30217 (=> (not res!53859) (not e!70723))))

(assert (=> d!30217 (= res!53859 ((_ is Cons!1600) (toList!786 lt!55431)))))

(assert (=> d!30217 (= (contains!823 (toList!786 lt!55431) (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) lt!55905)))

(declare-fun b!108721 () Bool)

(declare-fun e!70724 () Bool)

(assert (=> b!108721 (= e!70723 e!70724)))

(declare-fun res!53858 () Bool)

(assert (=> b!108721 (=> res!53858 e!70724)))

(assert (=> b!108721 (= res!53858 (= (h!2198 (toList!786 lt!55431)) (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!108722 () Bool)

(assert (=> b!108722 (= e!70724 (contains!823 (t!5712 (toList!786 lt!55431)) (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (= (and d!30217 res!53859) b!108721))

(assert (= (and b!108721 (not res!53858)) b!108722))

(declare-fun m!122499 () Bool)

(assert (=> d!30217 m!122499))

(declare-fun m!122501 () Bool)

(assert (=> d!30217 m!122501))

(declare-fun m!122503 () Bool)

(assert (=> b!108722 m!122503))

(assert (=> b!107938 d!30217))

(declare-fun d!30219 () Bool)

(declare-fun e!70725 () Bool)

(assert (=> d!30219 e!70725))

(declare-fun res!53860 () Bool)

(assert (=> d!30219 (=> res!53860 e!70725)))

(declare-fun lt!55906 () Bool)

(assert (=> d!30219 (= res!53860 (not lt!55906))))

(declare-fun lt!55909 () Bool)

(assert (=> d!30219 (= lt!55906 lt!55909)))

(declare-fun lt!55908 () Unit!3301)

(declare-fun e!70726 () Unit!3301)

(assert (=> d!30219 (= lt!55908 e!70726)))

(declare-fun c!19162 () Bool)

(assert (=> d!30219 (= c!19162 lt!55909)))

(assert (=> d!30219 (= lt!55909 (containsKey!161 (toList!786 lt!55507) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30219 (= (contains!820 lt!55507 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55906)))

(declare-fun b!108723 () Bool)

(declare-fun lt!55907 () Unit!3301)

(assert (=> b!108723 (= e!70726 lt!55907)))

(assert (=> b!108723 (= lt!55907 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55507) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!108723 (isDefined!110 (getValueByKey!158 (toList!786 lt!55507) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108724 () Bool)

(declare-fun Unit!3350 () Unit!3301)

(assert (=> b!108724 (= e!70726 Unit!3350)))

(declare-fun b!108725 () Bool)

(assert (=> b!108725 (= e!70725 (isDefined!110 (getValueByKey!158 (toList!786 lt!55507) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30219 c!19162) b!108723))

(assert (= (and d!30219 (not c!19162)) b!108724))

(assert (= (and d!30219 (not res!53860)) b!108725))

(declare-fun m!122505 () Bool)

(assert (=> d!30219 m!122505))

(declare-fun m!122507 () Bool)

(assert (=> b!108723 m!122507))

(assert (=> b!108723 m!121457))

(assert (=> b!108723 m!121457))

(declare-fun m!122509 () Bool)

(assert (=> b!108723 m!122509))

(assert (=> b!108725 m!121457))

(assert (=> b!108725 m!121457))

(assert (=> b!108725 m!122509))

(assert (=> d!29917 d!30219))

(declare-fun b!108729 () Bool)

(declare-fun e!70728 () Option!164)

(assert (=> b!108729 (= e!70728 None!162)))

(declare-fun b!108728 () Bool)

(assert (=> b!108728 (= e!70728 (getValueByKey!158 (t!5712 lt!55506) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108726 () Bool)

(declare-fun e!70727 () Option!164)

(assert (=> b!108726 (= e!70727 (Some!163 (_2!1199 (h!2198 lt!55506))))))

(declare-fun d!30221 () Bool)

(declare-fun c!19163 () Bool)

(assert (=> d!30221 (= c!19163 (and ((_ is Cons!1600) lt!55506) (= (_1!1199 (h!2198 lt!55506)) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30221 (= (getValueByKey!158 lt!55506 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!70727)))

(declare-fun b!108727 () Bool)

(assert (=> b!108727 (= e!70727 e!70728)))

(declare-fun c!19164 () Bool)

(assert (=> b!108727 (= c!19164 (and ((_ is Cons!1600) lt!55506) (not (= (_1!1199 (h!2198 lt!55506)) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30221 c!19163) b!108726))

(assert (= (and d!30221 (not c!19163)) b!108727))

(assert (= (and b!108727 c!19164) b!108728))

(assert (= (and b!108727 (not c!19164)) b!108729))

(declare-fun m!122511 () Bool)

(assert (=> b!108728 m!122511))

(assert (=> d!29917 d!30221))

(declare-fun d!30223 () Bool)

(assert (=> d!30223 (= (getValueByKey!158 lt!55506 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55910 () Unit!3301)

(assert (=> d!30223 (= lt!55910 (choose!677 lt!55506 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!70729 () Bool)

(assert (=> d!30223 e!70729))

(declare-fun res!53861 () Bool)

(assert (=> d!30223 (=> (not res!53861) (not e!70729))))

(assert (=> d!30223 (= res!53861 (isStrictlySorted!297 lt!55506))))

(assert (=> d!30223 (= (lemmaContainsTupThenGetReturnValue!74 lt!55506 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55910)))

(declare-fun b!108730 () Bool)

(declare-fun res!53862 () Bool)

(assert (=> b!108730 (=> (not res!53862) (not e!70729))))

(assert (=> b!108730 (= res!53862 (containsKey!161 lt!55506 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108731 () Bool)

(assert (=> b!108731 (= e!70729 (contains!823 lt!55506 (tuple2!2377 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30223 res!53861) b!108730))

(assert (= (and b!108730 res!53862) b!108731))

(assert (=> d!30223 m!121451))

(declare-fun m!122513 () Bool)

(assert (=> d!30223 m!122513))

(declare-fun m!122515 () Bool)

(assert (=> d!30223 m!122515))

(declare-fun m!122517 () Bool)

(assert (=> b!108730 m!122517))

(declare-fun m!122519 () Bool)

(assert (=> b!108731 m!122519))

(assert (=> d!29917 d!30223))

(declare-fun b!108732 () Bool)

(declare-fun e!70731 () List!1604)

(declare-fun call!11536 () List!1604)

(assert (=> b!108732 (= e!70731 call!11536)))

(declare-fun b!108734 () Bool)

(declare-fun e!70730 () List!1604)

(assert (=> b!108734 (= e!70731 e!70730)))

(declare-fun c!19167 () Bool)

(assert (=> b!108734 (= c!19167 (and ((_ is Cons!1600) (toList!786 lt!55369)) (= (_1!1199 (h!2198 (toList!786 lt!55369))) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108735 () Bool)

(declare-fun call!11534 () List!1604)

(assert (=> b!108735 (= e!70730 call!11534)))

(declare-fun b!108736 () Bool)

(declare-fun e!70734 () List!1604)

(assert (=> b!108736 (= e!70734 (insertStrictlySorted!77 (t!5712 (toList!786 lt!55369)) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun c!19166 () Bool)

(declare-fun b!108737 () Bool)

(assert (=> b!108737 (= e!70734 (ite c!19167 (t!5712 (toList!786 lt!55369)) (ite c!19166 (Cons!1600 (h!2198 (toList!786 lt!55369)) (t!5712 (toList!786 lt!55369))) Nil!1601)))))

(declare-fun e!70732 () Bool)

(declare-fun b!108738 () Bool)

(declare-fun lt!55911 () List!1604)

(assert (=> b!108738 (= e!70732 (contains!823 lt!55911 (tuple2!2377 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun bm!11531 () Bool)

(assert (=> bm!11531 (= call!11534 call!11536)))

(declare-fun b!108739 () Bool)

(assert (=> b!108739 (= c!19166 (and ((_ is Cons!1600) (toList!786 lt!55369)) (bvsgt (_1!1199 (h!2198 (toList!786 lt!55369))) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70733 () List!1604)

(assert (=> b!108739 (= e!70730 e!70733)))

(declare-fun b!108740 () Bool)

(declare-fun call!11535 () List!1604)

(assert (=> b!108740 (= e!70733 call!11535)))

(declare-fun bm!11532 () Bool)

(declare-fun c!19165 () Bool)

(assert (=> bm!11532 (= call!11536 ($colon$colon!81 e!70734 (ite c!19165 (h!2198 (toList!786 lt!55369)) (tuple2!2377 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19168 () Bool)

(assert (=> bm!11532 (= c!19168 c!19165)))

(declare-fun b!108733 () Bool)

(declare-fun res!53864 () Bool)

(assert (=> b!108733 (=> (not res!53864) (not e!70732))))

(assert (=> b!108733 (= res!53864 (containsKey!161 lt!55911 (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun d!30225 () Bool)

(assert (=> d!30225 e!70732))

(declare-fun res!53863 () Bool)

(assert (=> d!30225 (=> (not res!53863) (not e!70732))))

(assert (=> d!30225 (= res!53863 (isStrictlySorted!297 lt!55911))))

(assert (=> d!30225 (= lt!55911 e!70731)))

(assert (=> d!30225 (= c!19165 (and ((_ is Cons!1600) (toList!786 lt!55369)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55369))) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30225 (isStrictlySorted!297 (toList!786 lt!55369))))

(assert (=> d!30225 (= (insertStrictlySorted!77 (toList!786 lt!55369) (_1!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55911)))

(declare-fun bm!11533 () Bool)

(assert (=> bm!11533 (= call!11535 call!11534)))

(declare-fun b!108741 () Bool)

(assert (=> b!108741 (= e!70733 call!11535)))

(assert (= (and d!30225 c!19165) b!108732))

(assert (= (and d!30225 (not c!19165)) b!108734))

(assert (= (and b!108734 c!19167) b!108735))

(assert (= (and b!108734 (not c!19167)) b!108739))

(assert (= (and b!108739 c!19166) b!108740))

(assert (= (and b!108739 (not c!19166)) b!108741))

(assert (= (or b!108740 b!108741) bm!11533))

(assert (= (or b!108735 bm!11533) bm!11531))

(assert (= (or b!108732 bm!11531) bm!11532))

(assert (= (and bm!11532 c!19168) b!108736))

(assert (= (and bm!11532 (not c!19168)) b!108737))

(assert (= (and d!30225 res!53863) b!108733))

(assert (= (and b!108733 res!53864) b!108738))

(declare-fun m!122521 () Bool)

(assert (=> d!30225 m!122521))

(declare-fun m!122523 () Bool)

(assert (=> d!30225 m!122523))

(declare-fun m!122525 () Bool)

(assert (=> bm!11532 m!122525))

(declare-fun m!122527 () Bool)

(assert (=> b!108736 m!122527))

(declare-fun m!122529 () Bool)

(assert (=> b!108738 m!122529))

(declare-fun m!122531 () Bool)

(assert (=> b!108733 m!122531))

(assert (=> d!29917 d!30225))

(declare-fun d!30227 () Bool)

(declare-fun e!70735 () Bool)

(assert (=> d!30227 e!70735))

(declare-fun res!53866 () Bool)

(assert (=> d!30227 (=> (not res!53866) (not e!70735))))

(declare-fun lt!55915 () ListLongMap!1541)

(assert (=> d!30227 (= res!53866 (contains!820 lt!55915 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun lt!55914 () List!1604)

(assert (=> d!30227 (= lt!55915 (ListLongMap!1542 lt!55914))))

(declare-fun lt!55912 () Unit!3301)

(declare-fun lt!55913 () Unit!3301)

(assert (=> d!30227 (= lt!55912 lt!55913)))

(assert (=> d!30227 (= (getValueByKey!158 lt!55914 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30227 (= lt!55913 (lemmaContainsTupThenGetReturnValue!74 lt!55914 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30227 (= lt!55914 (insertStrictlySorted!77 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30227 (= (+!142 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) lt!55915)))

(declare-fun b!108742 () Bool)

(declare-fun res!53865 () Bool)

(assert (=> b!108742 (=> (not res!53865) (not e!70735))))

(assert (=> b!108742 (= res!53865 (= (getValueByKey!158 (toList!786 lt!55915) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!108743 () Bool)

(assert (=> b!108743 (= e!70735 (contains!823 (toList!786 lt!55915) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(assert (= (and d!30227 res!53866) b!108742))

(assert (= (and b!108742 res!53865) b!108743))

(declare-fun m!122533 () Bool)

(assert (=> d!30227 m!122533))

(declare-fun m!122535 () Bool)

(assert (=> d!30227 m!122535))

(declare-fun m!122537 () Bool)

(assert (=> d!30227 m!122537))

(declare-fun m!122539 () Bool)

(assert (=> d!30227 m!122539))

(declare-fun m!122541 () Bool)

(assert (=> b!108742 m!122541))

(declare-fun m!122543 () Bool)

(assert (=> b!108743 m!122543))

(assert (=> b!108360 d!30227))

(assert (=> b!108360 d!30009))

(declare-fun bm!11534 () Bool)

(declare-fun call!11542 () ListLongMap!1541)

(declare-fun call!11537 () ListLongMap!1541)

(assert (=> bm!11534 (= call!11542 call!11537)))

(declare-fun b!108744 () Bool)

(declare-fun e!70737 () ListLongMap!1541)

(declare-fun e!70747 () ListLongMap!1541)

(assert (=> b!108744 (= e!70737 e!70747)))

(declare-fun c!19170 () Bool)

(assert (=> b!108744 (= c!19170 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11535 () Bool)

(declare-fun call!11539 () ListLongMap!1541)

(declare-fun call!11543 () ListLongMap!1541)

(assert (=> bm!11535 (= call!11539 call!11543)))

(declare-fun b!108745 () Bool)

(declare-fun e!70738 () Bool)

(declare-fun e!70746 () Bool)

(assert (=> b!108745 (= e!70738 e!70746)))

(declare-fun res!53874 () Bool)

(declare-fun call!11541 () Bool)

(assert (=> b!108745 (= res!53874 call!11541)))

(assert (=> b!108745 (=> (not res!53874) (not e!70746))))

(declare-fun bm!11536 () Bool)

(declare-fun call!11540 () Bool)

(declare-fun lt!55931 () ListLongMap!1541)

(assert (=> bm!11536 (= call!11540 (contains!820 lt!55931 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108746 () Bool)

(declare-fun e!70736 () Bool)

(declare-fun e!70739 () Bool)

(assert (=> b!108746 (= e!70736 e!70739)))

(declare-fun res!53875 () Bool)

(assert (=> b!108746 (=> (not res!53875) (not e!70739))))

(assert (=> b!108746 (= res!53875 (contains!820 lt!55931 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108746 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108747 () Bool)

(declare-fun res!53871 () Bool)

(declare-fun e!70748 () Bool)

(assert (=> b!108747 (=> (not res!53871) (not e!70748))))

(assert (=> b!108747 (= res!53871 e!70738)))

(declare-fun c!19169 () Bool)

(assert (=> b!108747 (= c!19169 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11537 () Bool)

(declare-fun call!11538 () ListLongMap!1541)

(assert (=> bm!11537 (= call!11538 call!11539)))

(declare-fun b!108748 () Bool)

(declare-fun e!70744 () Bool)

(assert (=> b!108748 (= e!70744 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108749 () Bool)

(assert (=> b!108749 (= e!70747 call!11542)))

(declare-fun b!108750 () Bool)

(declare-fun e!70740 () Bool)

(assert (=> b!108750 (= e!70748 e!70740)))

(declare-fun c!19171 () Bool)

(assert (=> b!108750 (= c!19171 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11538 () Bool)

(assert (=> bm!11538 (= call!11543 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!108751 () Bool)

(declare-fun e!70742 () ListLongMap!1541)

(assert (=> b!108751 (= e!70742 call!11542)))

(declare-fun b!108752 () Bool)

(declare-fun e!70741 () Unit!3301)

(declare-fun Unit!3351 () Unit!3301)

(assert (=> b!108752 (= e!70741 Unit!3351)))

(declare-fun b!108753 () Bool)

(declare-fun e!70743 () Bool)

(assert (=> b!108753 (= e!70743 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108754 () Bool)

(declare-fun res!53873 () Bool)

(assert (=> b!108754 (=> (not res!53873) (not e!70748))))

(assert (=> b!108754 (= res!53873 e!70736)))

(declare-fun res!53868 () Bool)

(assert (=> b!108754 (=> res!53868 e!70736)))

(assert (=> b!108754 (= res!53868 (not e!70744))))

(declare-fun res!53872 () Bool)

(assert (=> b!108754 (=> (not res!53872) (not e!70744))))

(assert (=> b!108754 (= res!53872 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108755 () Bool)

(declare-fun e!70745 () Bool)

(assert (=> b!108755 (= e!70740 e!70745)))

(declare-fun res!53867 () Bool)

(assert (=> b!108755 (= res!53867 call!11540)))

(assert (=> b!108755 (=> (not res!53867) (not e!70745))))

(declare-fun b!108756 () Bool)

(declare-fun lt!55921 () Unit!3301)

(assert (=> b!108756 (= e!70741 lt!55921)))

(declare-fun lt!55922 () ListLongMap!1541)

(assert (=> b!108756 (= lt!55922 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55926 () (_ BitVec 64))

(assert (=> b!108756 (= lt!55926 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55924 () (_ BitVec 64))

(assert (=> b!108756 (= lt!55924 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55927 () Unit!3301)

(assert (=> b!108756 (= lt!55927 (addStillContains!75 lt!55922 lt!55926 (zeroValue!2478 newMap!16) lt!55924))))

(assert (=> b!108756 (contains!820 (+!142 lt!55922 (tuple2!2377 lt!55926 (zeroValue!2478 newMap!16))) lt!55924)))

(declare-fun lt!55934 () Unit!3301)

(assert (=> b!108756 (= lt!55934 lt!55927)))

(declare-fun lt!55920 () ListLongMap!1541)

(assert (=> b!108756 (= lt!55920 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55925 () (_ BitVec 64))

(assert (=> b!108756 (= lt!55925 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55928 () (_ BitVec 64))

(assert (=> b!108756 (= lt!55928 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55930 () Unit!3301)

(assert (=> b!108756 (= lt!55930 (addApplyDifferent!75 lt!55920 lt!55925 (minValue!2478 newMap!16) lt!55928))))

(assert (=> b!108756 (= (apply!99 (+!142 lt!55920 (tuple2!2377 lt!55925 (minValue!2478 newMap!16))) lt!55928) (apply!99 lt!55920 lt!55928))))

(declare-fun lt!55923 () Unit!3301)

(assert (=> b!108756 (= lt!55923 lt!55930)))

(declare-fun lt!55918 () ListLongMap!1541)

(assert (=> b!108756 (= lt!55918 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55937 () (_ BitVec 64))

(assert (=> b!108756 (= lt!55937 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55932 () (_ BitVec 64))

(assert (=> b!108756 (= lt!55932 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55936 () Unit!3301)

(assert (=> b!108756 (= lt!55936 (addApplyDifferent!75 lt!55918 lt!55937 (zeroValue!2478 newMap!16) lt!55932))))

(assert (=> b!108756 (= (apply!99 (+!142 lt!55918 (tuple2!2377 lt!55937 (zeroValue!2478 newMap!16))) lt!55932) (apply!99 lt!55918 lt!55932))))

(declare-fun lt!55929 () Unit!3301)

(assert (=> b!108756 (= lt!55929 lt!55936)))

(declare-fun lt!55916 () ListLongMap!1541)

(assert (=> b!108756 (= lt!55916 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55917 () (_ BitVec 64))

(assert (=> b!108756 (= lt!55917 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55919 () (_ BitVec 64))

(assert (=> b!108756 (= lt!55919 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108756 (= lt!55921 (addApplyDifferent!75 lt!55916 lt!55917 (minValue!2478 newMap!16) lt!55919))))

(assert (=> b!108756 (= (apply!99 (+!142 lt!55916 (tuple2!2377 lt!55917 (minValue!2478 newMap!16))) lt!55919) (apply!99 lt!55916 lt!55919))))

(declare-fun c!19173 () Bool)

(declare-fun bm!11539 () Bool)

(assert (=> bm!11539 (= call!11537 (+!142 (ite c!19173 call!11543 (ite c!19170 call!11539 call!11538)) (ite (or c!19173 c!19170) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun bm!11540 () Bool)

(assert (=> bm!11540 (= call!11541 (contains!820 lt!55931 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108757 () Bool)

(assert (=> b!108757 (= e!70745 (= (apply!99 lt!55931 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!108758 () Bool)

(assert (=> b!108758 (= e!70742 call!11538)))

(declare-fun b!108759 () Bool)

(declare-fun c!19174 () Bool)

(assert (=> b!108759 (= c!19174 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108759 (= e!70747 e!70742)))

(declare-fun b!108760 () Bool)

(assert (=> b!108760 (= e!70746 (= (apply!99 lt!55931 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!108761 () Bool)

(assert (=> b!108761 (= e!70740 (not call!11540))))

(declare-fun b!108762 () Bool)

(assert (=> b!108762 (= e!70737 (+!142 call!11537 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun b!108763 () Bool)

(assert (=> b!108763 (= e!70739 (= (apply!99 lt!55931 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108763 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))))))))

(assert (=> b!108763 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108764 () Bool)

(assert (=> b!108764 (= e!70738 (not call!11541))))

(declare-fun d!30229 () Bool)

(assert (=> d!30229 e!70748))

(declare-fun res!53869 () Bool)

(assert (=> d!30229 (=> (not res!53869) (not e!70748))))

(assert (=> d!30229 (= res!53869 (or (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))))

(declare-fun lt!55933 () ListLongMap!1541)

(assert (=> d!30229 (= lt!55931 lt!55933)))

(declare-fun lt!55935 () Unit!3301)

(assert (=> d!30229 (= lt!55935 e!70741)))

(declare-fun c!19172 () Bool)

(assert (=> d!30229 (= c!19172 e!70743)))

(declare-fun res!53870 () Bool)

(assert (=> d!30229 (=> (not res!53870) (not e!70743))))

(assert (=> d!30229 (= res!53870 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30229 (= lt!55933 e!70737)))

(assert (=> d!30229 (= c!19173 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30229 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30229 (= (getCurrentListMap!472 (_keys!4315 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55931)))

(assert (= (and d!30229 c!19173) b!108762))

(assert (= (and d!30229 (not c!19173)) b!108744))

(assert (= (and b!108744 c!19170) b!108749))

(assert (= (and b!108744 (not c!19170)) b!108759))

(assert (= (and b!108759 c!19174) b!108751))

(assert (= (and b!108759 (not c!19174)) b!108758))

(assert (= (or b!108751 b!108758) bm!11537))

(assert (= (or b!108749 bm!11537) bm!11535))

(assert (= (or b!108749 b!108751) bm!11534))

(assert (= (or b!108762 bm!11535) bm!11538))

(assert (= (or b!108762 bm!11534) bm!11539))

(assert (= (and d!30229 res!53870) b!108753))

(assert (= (and d!30229 c!19172) b!108756))

(assert (= (and d!30229 (not c!19172)) b!108752))

(assert (= (and d!30229 res!53869) b!108754))

(assert (= (and b!108754 res!53872) b!108748))

(assert (= (and b!108754 (not res!53868)) b!108746))

(assert (= (and b!108746 res!53875) b!108763))

(assert (= (and b!108754 res!53873) b!108747))

(assert (= (and b!108747 c!19169) b!108745))

(assert (= (and b!108747 (not c!19169)) b!108764))

(assert (= (and b!108745 res!53874) b!108760))

(assert (= (or b!108745 b!108764) bm!11540))

(assert (= (and b!108747 res!53871) b!108750))

(assert (= (and b!108750 c!19171) b!108755))

(assert (= (and b!108750 (not c!19171)) b!108761))

(assert (= (and b!108755 res!53867) b!108757))

(assert (= (or b!108755 b!108761) bm!11536))

(declare-fun b_lambda!4867 () Bool)

(assert (=> (not b_lambda!4867) (not b!108763)))

(assert (=> b!108763 t!5726))

(declare-fun b_and!6709 () Bool)

(assert (= b_and!6705 (and (=> t!5726 result!3505) b_and!6709)))

(assert (=> b!108763 t!5728))

(declare-fun b_and!6711 () Bool)

(assert (= b_and!6707 (and (=> t!5728 result!3507) b_and!6711)))

(declare-fun m!122545 () Bool)

(assert (=> b!108760 m!122545))

(declare-fun m!122547 () Bool)

(assert (=> b!108762 m!122547))

(declare-fun m!122549 () Bool)

(assert (=> bm!11536 m!122549))

(assert (=> b!108746 m!121169))

(assert (=> b!108746 m!121169))

(declare-fun m!122551 () Bool)

(assert (=> b!108746 m!122551))

(declare-fun m!122553 () Bool)

(assert (=> bm!11540 m!122553))

(assert (=> b!108748 m!121169))

(assert (=> b!108748 m!121169))

(assert (=> b!108748 m!121175))

(declare-fun m!122555 () Bool)

(assert (=> b!108757 m!122555))

(assert (=> d!30229 m!121179))

(declare-fun m!122557 () Bool)

(assert (=> b!108756 m!122557))

(declare-fun m!122559 () Bool)

(assert (=> b!108756 m!122559))

(declare-fun m!122561 () Bool)

(assert (=> b!108756 m!122561))

(assert (=> b!108756 m!121169))

(declare-fun m!122563 () Bool)

(assert (=> b!108756 m!122563))

(declare-fun m!122565 () Bool)

(assert (=> b!108756 m!122565))

(declare-fun m!122567 () Bool)

(assert (=> b!108756 m!122567))

(declare-fun m!122569 () Bool)

(assert (=> b!108756 m!122569))

(declare-fun m!122571 () Bool)

(assert (=> b!108756 m!122571))

(declare-fun m!122573 () Bool)

(assert (=> b!108756 m!122573))

(declare-fun m!122575 () Bool)

(assert (=> b!108756 m!122575))

(declare-fun m!122577 () Bool)

(assert (=> b!108756 m!122577))

(declare-fun m!122579 () Bool)

(assert (=> b!108756 m!122579))

(declare-fun m!122581 () Bool)

(assert (=> b!108756 m!122581))

(assert (=> b!108756 m!122575))

(declare-fun m!122583 () Bool)

(assert (=> b!108756 m!122583))

(declare-fun m!122585 () Bool)

(assert (=> b!108756 m!122585))

(assert (=> b!108756 m!122579))

(declare-fun m!122587 () Bool)

(assert (=> b!108756 m!122587))

(assert (=> b!108756 m!122583))

(assert (=> b!108756 m!122563))

(declare-fun m!122589 () Bool)

(assert (=> bm!11539 m!122589))

(assert (=> bm!11538 m!122561))

(assert (=> b!108753 m!121169))

(assert (=> b!108753 m!121169))

(assert (=> b!108753 m!121175))

(declare-fun m!122591 () Bool)

(assert (=> b!108763 m!122591))

(assert (=> b!108763 m!122591))

(assert (=> b!108763 m!121217))

(declare-fun m!122593 () Bool)

(assert (=> b!108763 m!122593))

(assert (=> b!108763 m!121169))

(declare-fun m!122595 () Bool)

(assert (=> b!108763 m!122595))

(assert (=> b!108763 m!121169))

(assert (=> b!108763 m!121217))

(assert (=> b!108360 d!30229))

(declare-fun d!30231 () Bool)

(assert (=> d!30231 (= (apply!99 (+!142 lt!55542 (tuple2!2377 lt!55543 (minValue!2478 newMap!16))) lt!55545) (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55542 (tuple2!2377 lt!55543 (minValue!2478 newMap!16)))) lt!55545)))))

(declare-fun bs!4464 () Bool)

(assert (= bs!4464 d!30231))

(declare-fun m!122597 () Bool)

(assert (=> bs!4464 m!122597))

(assert (=> bs!4464 m!122597))

(declare-fun m!122599 () Bool)

(assert (=> bs!4464 m!122599))

(assert (=> b!108161 d!30231))

(declare-fun d!30233 () Bool)

(declare-fun e!70749 () Bool)

(assert (=> d!30233 e!70749))

(declare-fun res!53877 () Bool)

(assert (=> d!30233 (=> (not res!53877) (not e!70749))))

(declare-fun lt!55941 () ListLongMap!1541)

(assert (=> d!30233 (= res!53877 (contains!820 lt!55941 (_1!1199 (tuple2!2377 lt!55551 (minValue!2478 newMap!16)))))))

(declare-fun lt!55940 () List!1604)

(assert (=> d!30233 (= lt!55941 (ListLongMap!1542 lt!55940))))

(declare-fun lt!55938 () Unit!3301)

(declare-fun lt!55939 () Unit!3301)

(assert (=> d!30233 (= lt!55938 lt!55939)))

(assert (=> d!30233 (= (getValueByKey!158 lt!55940 (_1!1199 (tuple2!2377 lt!55551 (minValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55551 (minValue!2478 newMap!16)))))))

(assert (=> d!30233 (= lt!55939 (lemmaContainsTupThenGetReturnValue!74 lt!55940 (_1!1199 (tuple2!2377 lt!55551 (minValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55551 (minValue!2478 newMap!16)))))))

(assert (=> d!30233 (= lt!55940 (insertStrictlySorted!77 (toList!786 lt!55546) (_1!1199 (tuple2!2377 lt!55551 (minValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55551 (minValue!2478 newMap!16)))))))

(assert (=> d!30233 (= (+!142 lt!55546 (tuple2!2377 lt!55551 (minValue!2478 newMap!16))) lt!55941)))

(declare-fun b!108765 () Bool)

(declare-fun res!53876 () Bool)

(assert (=> b!108765 (=> (not res!53876) (not e!70749))))

(assert (=> b!108765 (= res!53876 (= (getValueByKey!158 (toList!786 lt!55941) (_1!1199 (tuple2!2377 lt!55551 (minValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55551 (minValue!2478 newMap!16))))))))

(declare-fun b!108766 () Bool)

(assert (=> b!108766 (= e!70749 (contains!823 (toList!786 lt!55941) (tuple2!2377 lt!55551 (minValue!2478 newMap!16))))))

(assert (= (and d!30233 res!53877) b!108765))

(assert (= (and b!108765 res!53876) b!108766))

(declare-fun m!122601 () Bool)

(assert (=> d!30233 m!122601))

(declare-fun m!122603 () Bool)

(assert (=> d!30233 m!122603))

(declare-fun m!122605 () Bool)

(assert (=> d!30233 m!122605))

(declare-fun m!122607 () Bool)

(assert (=> d!30233 m!122607))

(declare-fun m!122609 () Bool)

(assert (=> b!108765 m!122609))

(declare-fun m!122611 () Bool)

(assert (=> b!108766 m!122611))

(assert (=> b!108161 d!30233))

(declare-fun d!30235 () Bool)

(assert (=> d!30235 (= (apply!99 lt!55542 lt!55545) (get!1350 (getValueByKey!158 (toList!786 lt!55542) lt!55545)))))

(declare-fun bs!4465 () Bool)

(assert (= bs!4465 d!30235))

(declare-fun m!122613 () Bool)

(assert (=> bs!4465 m!122613))

(assert (=> bs!4465 m!122613))

(declare-fun m!122615 () Bool)

(assert (=> bs!4465 m!122615))

(assert (=> b!108161 d!30235))

(declare-fun d!30237 () Bool)

(assert (=> d!30237 (= (apply!99 (+!142 lt!55542 (tuple2!2377 lt!55543 (minValue!2478 newMap!16))) lt!55545) (apply!99 lt!55542 lt!55545))))

(declare-fun lt!55942 () Unit!3301)

(assert (=> d!30237 (= lt!55942 (choose!679 lt!55542 lt!55543 (minValue!2478 newMap!16) lt!55545))))

(declare-fun e!70750 () Bool)

(assert (=> d!30237 e!70750))

(declare-fun res!53878 () Bool)

(assert (=> d!30237 (=> (not res!53878) (not e!70750))))

(assert (=> d!30237 (= res!53878 (contains!820 lt!55542 lt!55545))))

(assert (=> d!30237 (= (addApplyDifferent!75 lt!55542 lt!55543 (minValue!2478 newMap!16) lt!55545) lt!55942)))

(declare-fun b!108767 () Bool)

(assert (=> b!108767 (= e!70750 (not (= lt!55545 lt!55543)))))

(assert (= (and d!30237 res!53878) b!108767))

(assert (=> d!30237 m!121609))

(assert (=> d!30237 m!121607))

(declare-fun m!122617 () Bool)

(assert (=> d!30237 m!122617))

(declare-fun m!122619 () Bool)

(assert (=> d!30237 m!122619))

(assert (=> d!30237 m!121607))

(assert (=> d!30237 m!121615))

(assert (=> b!108161 d!30237))

(declare-fun d!30239 () Bool)

(assert (=> d!30239 (= (apply!99 (+!142 lt!55544 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16))) lt!55558) (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55544 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16)))) lt!55558)))))

(declare-fun bs!4466 () Bool)

(assert (= bs!4466 d!30239))

(declare-fun m!122621 () Bool)

(assert (=> bs!4466 m!122621))

(assert (=> bs!4466 m!122621))

(declare-fun m!122623 () Bool)

(assert (=> bs!4466 m!122623))

(assert (=> b!108161 d!30239))

(declare-fun d!30241 () Bool)

(declare-fun e!70751 () Bool)

(assert (=> d!30241 e!70751))

(declare-fun res!53880 () Bool)

(assert (=> d!30241 (=> (not res!53880) (not e!70751))))

(declare-fun lt!55946 () ListLongMap!1541)

(assert (=> d!30241 (= res!53880 (contains!820 lt!55946 (_1!1199 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16)))))))

(declare-fun lt!55945 () List!1604)

(assert (=> d!30241 (= lt!55946 (ListLongMap!1542 lt!55945))))

(declare-fun lt!55943 () Unit!3301)

(declare-fun lt!55944 () Unit!3301)

(assert (=> d!30241 (= lt!55943 lt!55944)))

(assert (=> d!30241 (= (getValueByKey!158 lt!55945 (_1!1199 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30241 (= lt!55944 (lemmaContainsTupThenGetReturnValue!74 lt!55945 (_1!1199 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30241 (= lt!55945 (insertStrictlySorted!77 (toList!786 lt!55544) (_1!1199 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30241 (= (+!142 lt!55544 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16))) lt!55946)))

(declare-fun b!108768 () Bool)

(declare-fun res!53879 () Bool)

(assert (=> b!108768 (=> (not res!53879) (not e!70751))))

(assert (=> b!108768 (= res!53879 (= (getValueByKey!158 (toList!786 lt!55946) (_1!1199 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16))))))))

(declare-fun b!108769 () Bool)

(assert (=> b!108769 (= e!70751 (contains!823 (toList!786 lt!55946) (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16))))))

(assert (= (and d!30241 res!53880) b!108768))

(assert (= (and b!108768 res!53879) b!108769))

(declare-fun m!122625 () Bool)

(assert (=> d!30241 m!122625))

(declare-fun m!122627 () Bool)

(assert (=> d!30241 m!122627))

(declare-fun m!122629 () Bool)

(assert (=> d!30241 m!122629))

(declare-fun m!122631 () Bool)

(assert (=> d!30241 m!122631))

(declare-fun m!122633 () Bool)

(assert (=> b!108768 m!122633))

(declare-fun m!122635 () Bool)

(assert (=> b!108769 m!122635))

(assert (=> b!108161 d!30241))

(declare-fun d!30243 () Bool)

(assert (=> d!30243 (contains!820 (+!142 lt!55548 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16))) lt!55550)))

(declare-fun lt!55947 () Unit!3301)

(assert (=> d!30243 (= lt!55947 (choose!680 lt!55548 lt!55552 (zeroValue!2478 newMap!16) lt!55550))))

(assert (=> d!30243 (contains!820 lt!55548 lt!55550)))

(assert (=> d!30243 (= (addStillContains!75 lt!55548 lt!55552 (zeroValue!2478 newMap!16) lt!55550) lt!55947)))

(declare-fun bs!4467 () Bool)

(assert (= bs!4467 d!30243))

(assert (=> bs!4467 m!121611))

(assert (=> bs!4467 m!121611))

(assert (=> bs!4467 m!121613))

(declare-fun m!122637 () Bool)

(assert (=> bs!4467 m!122637))

(declare-fun m!122639 () Bool)

(assert (=> bs!4467 m!122639))

(assert (=> b!108161 d!30243))

(declare-fun d!30245 () Bool)

(declare-fun e!70752 () Bool)

(assert (=> d!30245 e!70752))

(declare-fun res!53881 () Bool)

(assert (=> d!30245 (=> res!53881 e!70752)))

(declare-fun lt!55948 () Bool)

(assert (=> d!30245 (= res!53881 (not lt!55948))))

(declare-fun lt!55951 () Bool)

(assert (=> d!30245 (= lt!55948 lt!55951)))

(declare-fun lt!55950 () Unit!3301)

(declare-fun e!70753 () Unit!3301)

(assert (=> d!30245 (= lt!55950 e!70753)))

(declare-fun c!19175 () Bool)

(assert (=> d!30245 (= c!19175 lt!55951)))

(assert (=> d!30245 (= lt!55951 (containsKey!161 (toList!786 (+!142 lt!55548 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16)))) lt!55550))))

(assert (=> d!30245 (= (contains!820 (+!142 lt!55548 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16))) lt!55550) lt!55948)))

(declare-fun b!108770 () Bool)

(declare-fun lt!55949 () Unit!3301)

(assert (=> b!108770 (= e!70753 lt!55949)))

(assert (=> b!108770 (= lt!55949 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (+!142 lt!55548 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16)))) lt!55550))))

(assert (=> b!108770 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55548 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16)))) lt!55550))))

(declare-fun b!108771 () Bool)

(declare-fun Unit!3352 () Unit!3301)

(assert (=> b!108771 (= e!70753 Unit!3352)))

(declare-fun b!108772 () Bool)

(assert (=> b!108772 (= e!70752 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55548 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16)))) lt!55550)))))

(assert (= (and d!30245 c!19175) b!108770))

(assert (= (and d!30245 (not c!19175)) b!108771))

(assert (= (and d!30245 (not res!53881)) b!108772))

(declare-fun m!122641 () Bool)

(assert (=> d!30245 m!122641))

(declare-fun m!122643 () Bool)

(assert (=> b!108770 m!122643))

(declare-fun m!122645 () Bool)

(assert (=> b!108770 m!122645))

(assert (=> b!108770 m!122645))

(declare-fun m!122647 () Bool)

(assert (=> b!108770 m!122647))

(assert (=> b!108772 m!122645))

(assert (=> b!108772 m!122645))

(assert (=> b!108772 m!122647))

(assert (=> b!108161 d!30245))

(declare-fun d!30247 () Bool)

(declare-fun e!70754 () Bool)

(assert (=> d!30247 e!70754))

(declare-fun res!53883 () Bool)

(assert (=> d!30247 (=> (not res!53883) (not e!70754))))

(declare-fun lt!55955 () ListLongMap!1541)

(assert (=> d!30247 (= res!53883 (contains!820 lt!55955 (_1!1199 (tuple2!2377 lt!55543 (minValue!2478 newMap!16)))))))

(declare-fun lt!55954 () List!1604)

(assert (=> d!30247 (= lt!55955 (ListLongMap!1542 lt!55954))))

(declare-fun lt!55952 () Unit!3301)

(declare-fun lt!55953 () Unit!3301)

(assert (=> d!30247 (= lt!55952 lt!55953)))

(assert (=> d!30247 (= (getValueByKey!158 lt!55954 (_1!1199 (tuple2!2377 lt!55543 (minValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55543 (minValue!2478 newMap!16)))))))

(assert (=> d!30247 (= lt!55953 (lemmaContainsTupThenGetReturnValue!74 lt!55954 (_1!1199 (tuple2!2377 lt!55543 (minValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55543 (minValue!2478 newMap!16)))))))

(assert (=> d!30247 (= lt!55954 (insertStrictlySorted!77 (toList!786 lt!55542) (_1!1199 (tuple2!2377 lt!55543 (minValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55543 (minValue!2478 newMap!16)))))))

(assert (=> d!30247 (= (+!142 lt!55542 (tuple2!2377 lt!55543 (minValue!2478 newMap!16))) lt!55955)))

(declare-fun b!108773 () Bool)

(declare-fun res!53882 () Bool)

(assert (=> b!108773 (=> (not res!53882) (not e!70754))))

(assert (=> b!108773 (= res!53882 (= (getValueByKey!158 (toList!786 lt!55955) (_1!1199 (tuple2!2377 lt!55543 (minValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55543 (minValue!2478 newMap!16))))))))

(declare-fun b!108774 () Bool)

(assert (=> b!108774 (= e!70754 (contains!823 (toList!786 lt!55955) (tuple2!2377 lt!55543 (minValue!2478 newMap!16))))))

(assert (= (and d!30247 res!53883) b!108773))

(assert (= (and b!108773 res!53882) b!108774))

(declare-fun m!122649 () Bool)

(assert (=> d!30247 m!122649))

(declare-fun m!122651 () Bool)

(assert (=> d!30247 m!122651))

(declare-fun m!122653 () Bool)

(assert (=> d!30247 m!122653))

(declare-fun m!122655 () Bool)

(assert (=> d!30247 m!122655))

(declare-fun m!122657 () Bool)

(assert (=> b!108773 m!122657))

(declare-fun m!122659 () Bool)

(assert (=> b!108774 m!122659))

(assert (=> b!108161 d!30247))

(declare-fun d!30249 () Bool)

(assert (=> d!30249 (= (apply!99 (+!142 lt!55546 (tuple2!2377 lt!55551 (minValue!2478 newMap!16))) lt!55554) (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55546 (tuple2!2377 lt!55551 (minValue!2478 newMap!16)))) lt!55554)))))

(declare-fun bs!4468 () Bool)

(assert (= bs!4468 d!30249))

(declare-fun m!122661 () Bool)

(assert (=> bs!4468 m!122661))

(assert (=> bs!4468 m!122661))

(declare-fun m!122663 () Bool)

(assert (=> bs!4468 m!122663))

(assert (=> b!108161 d!30249))

(declare-fun d!30251 () Bool)

(declare-fun e!70755 () Bool)

(assert (=> d!30251 e!70755))

(declare-fun res!53885 () Bool)

(assert (=> d!30251 (=> (not res!53885) (not e!70755))))

(declare-fun lt!55959 () ListLongMap!1541)

(assert (=> d!30251 (= res!53885 (contains!820 lt!55959 (_1!1199 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16)))))))

(declare-fun lt!55958 () List!1604)

(assert (=> d!30251 (= lt!55959 (ListLongMap!1542 lt!55958))))

(declare-fun lt!55956 () Unit!3301)

(declare-fun lt!55957 () Unit!3301)

(assert (=> d!30251 (= lt!55956 lt!55957)))

(assert (=> d!30251 (= (getValueByKey!158 lt!55958 (_1!1199 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30251 (= lt!55957 (lemmaContainsTupThenGetReturnValue!74 lt!55958 (_1!1199 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30251 (= lt!55958 (insertStrictlySorted!77 (toList!786 lt!55548) (_1!1199 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30251 (= (+!142 lt!55548 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16))) lt!55959)))

(declare-fun b!108775 () Bool)

(declare-fun res!53884 () Bool)

(assert (=> b!108775 (=> (not res!53884) (not e!70755))))

(assert (=> b!108775 (= res!53884 (= (getValueByKey!158 (toList!786 lt!55959) (_1!1199 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16))))))))

(declare-fun b!108776 () Bool)

(assert (=> b!108776 (= e!70755 (contains!823 (toList!786 lt!55959) (tuple2!2377 lt!55552 (zeroValue!2478 newMap!16))))))

(assert (= (and d!30251 res!53885) b!108775))

(assert (= (and b!108775 res!53884) b!108776))

(declare-fun m!122665 () Bool)

(assert (=> d!30251 m!122665))

(declare-fun m!122667 () Bool)

(assert (=> d!30251 m!122667))

(declare-fun m!122669 () Bool)

(assert (=> d!30251 m!122669))

(declare-fun m!122671 () Bool)

(assert (=> d!30251 m!122671))

(declare-fun m!122673 () Bool)

(assert (=> b!108775 m!122673))

(declare-fun m!122675 () Bool)

(assert (=> b!108776 m!122675))

(assert (=> b!108161 d!30251))

(declare-fun d!30253 () Bool)

(assert (=> d!30253 (= (apply!99 (+!142 lt!55544 (tuple2!2377 lt!55563 (zeroValue!2478 newMap!16))) lt!55558) (apply!99 lt!55544 lt!55558))))

(declare-fun lt!55960 () Unit!3301)

(assert (=> d!30253 (= lt!55960 (choose!679 lt!55544 lt!55563 (zeroValue!2478 newMap!16) lt!55558))))

(declare-fun e!70756 () Bool)

(assert (=> d!30253 e!70756))

(declare-fun res!53886 () Bool)

(assert (=> d!30253 (=> (not res!53886) (not e!70756))))

(assert (=> d!30253 (= res!53886 (contains!820 lt!55544 lt!55558))))

(assert (=> d!30253 (= (addApplyDifferent!75 lt!55544 lt!55563 (zeroValue!2478 newMap!16) lt!55558) lt!55960)))

(declare-fun b!108777 () Bool)

(assert (=> b!108777 (= e!70756 (not (= lt!55558 lt!55563)))))

(assert (= (and d!30253 res!53886) b!108777))

(assert (=> d!30253 m!121587))

(assert (=> d!30253 m!121603))

(declare-fun m!122677 () Bool)

(assert (=> d!30253 m!122677))

(declare-fun m!122679 () Bool)

(assert (=> d!30253 m!122679))

(assert (=> d!30253 m!121603))

(assert (=> d!30253 m!121605))

(assert (=> b!108161 d!30253))

(declare-fun d!30255 () Bool)

(assert (=> d!30255 (= (apply!99 lt!55544 lt!55558) (get!1350 (getValueByKey!158 (toList!786 lt!55544) lt!55558)))))

(declare-fun bs!4469 () Bool)

(assert (= bs!4469 d!30255))

(declare-fun m!122681 () Bool)

(assert (=> bs!4469 m!122681))

(assert (=> bs!4469 m!122681))

(declare-fun m!122683 () Bool)

(assert (=> bs!4469 m!122683))

(assert (=> b!108161 d!30255))

(declare-fun d!30257 () Bool)

(assert (=> d!30257 (= (apply!99 lt!55546 lt!55554) (get!1350 (getValueByKey!158 (toList!786 lt!55546) lt!55554)))))

(declare-fun bs!4470 () Bool)

(assert (= bs!4470 d!30257))

(declare-fun m!122685 () Bool)

(assert (=> bs!4470 m!122685))

(assert (=> bs!4470 m!122685))

(declare-fun m!122687 () Bool)

(assert (=> bs!4470 m!122687))

(assert (=> b!108161 d!30257))

(declare-fun lt!55961 () ListLongMap!1541)

(declare-fun e!70758 () Bool)

(declare-fun b!108778 () Bool)

(assert (=> b!108778 (= e!70758 (= lt!55961 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16))))))

(declare-fun b!108779 () Bool)

(declare-fun e!70757 () Bool)

(declare-fun e!70762 () Bool)

(assert (=> b!108779 (= e!70757 e!70762)))

(assert (=> b!108779 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun res!53888 () Bool)

(assert (=> b!108779 (= res!53888 (contains!820 lt!55961 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108779 (=> (not res!53888) (not e!70762))))

(declare-fun b!108780 () Bool)

(declare-fun e!70759 () ListLongMap!1541)

(declare-fun e!70760 () ListLongMap!1541)

(assert (=> b!108780 (= e!70759 e!70760)))

(declare-fun c!19176 () Bool)

(assert (=> b!108780 (= c!19176 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!30259 () Bool)

(declare-fun e!70761 () Bool)

(assert (=> d!30259 e!70761))

(declare-fun res!53889 () Bool)

(assert (=> d!30259 (=> (not res!53889) (not e!70761))))

(assert (=> d!30259 (= res!53889 (not (contains!820 lt!55961 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30259 (= lt!55961 e!70759)))

(declare-fun c!19177 () Bool)

(assert (=> d!30259 (= c!19177 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30259 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30259 (= (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55961)))

(declare-fun b!108781 () Bool)

(assert (=> b!108781 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> b!108781 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))))))))

(assert (=> b!108781 (= e!70762 (= (apply!99 lt!55961 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108782 () Bool)

(assert (=> b!108782 (= e!70761 e!70757)))

(declare-fun c!19178 () Bool)

(declare-fun e!70763 () Bool)

(assert (=> b!108782 (= c!19178 e!70763)))

(declare-fun res!53890 () Bool)

(assert (=> b!108782 (=> (not res!53890) (not e!70763))))

(assert (=> b!108782 (= res!53890 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108783 () Bool)

(declare-fun res!53887 () Bool)

(assert (=> b!108783 (=> (not res!53887) (not e!70761))))

(assert (=> b!108783 (= res!53887 (not (contains!820 lt!55961 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108784 () Bool)

(assert (=> b!108784 (= e!70759 (ListLongMap!1542 Nil!1601))))

(declare-fun b!108785 () Bool)

(declare-fun lt!55965 () Unit!3301)

(declare-fun lt!55966 () Unit!3301)

(assert (=> b!108785 (= lt!55965 lt!55966)))

(declare-fun lt!55963 () (_ BitVec 64))

(declare-fun lt!55962 () V!3233)

(declare-fun lt!55967 () (_ BitVec 64))

(declare-fun lt!55964 () ListLongMap!1541)

(assert (=> b!108785 (not (contains!820 (+!142 lt!55964 (tuple2!2377 lt!55967 lt!55962)) lt!55963))))

(assert (=> b!108785 (= lt!55966 (addStillNotContains!49 lt!55964 lt!55967 lt!55962 lt!55963))))

(assert (=> b!108785 (= lt!55963 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108785 (= lt!55962 (get!1345 (select (arr!2067 (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108785 (= lt!55967 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11544 () ListLongMap!1541)

(assert (=> b!108785 (= lt!55964 call!11544)))

(assert (=> b!108785 (= e!70760 (+!142 call!11544 (tuple2!2377 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) (get!1345 (select (arr!2067 (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108786 () Bool)

(assert (=> b!108786 (= e!70763 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108786 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!108787 () Bool)

(assert (=> b!108787 (= e!70757 e!70758)))

(declare-fun c!19179 () Bool)

(assert (=> b!108787 (= c!19179 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun bm!11541 () Bool)

(assert (=> bm!11541 (= call!11544 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (ite c!18886 (_values!2588 newMap!16) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (index!3166 lt!55264) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16)))))

(declare-fun b!108788 () Bool)

(assert (=> b!108788 (= e!70760 call!11544)))

(declare-fun b!108789 () Bool)

(assert (=> b!108789 (= e!70758 (isEmpty!379 lt!55961))))

(assert (= (and d!30259 c!19177) b!108784))

(assert (= (and d!30259 (not c!19177)) b!108780))

(assert (= (and b!108780 c!19176) b!108785))

(assert (= (and b!108780 (not c!19176)) b!108788))

(assert (= (or b!108785 b!108788) bm!11541))

(assert (= (and d!30259 res!53889) b!108783))

(assert (= (and b!108783 res!53887) b!108782))

(assert (= (and b!108782 res!53890) b!108786))

(assert (= (and b!108782 c!19178) b!108779))

(assert (= (and b!108782 (not c!19178)) b!108787))

(assert (= (and b!108779 res!53888) b!108781))

(assert (= (and b!108787 c!19179) b!108778))

(assert (= (and b!108787 (not c!19179)) b!108789))

(declare-fun b_lambda!4869 () Bool)

(assert (=> (not b_lambda!4869) (not b!108781)))

(assert (=> b!108781 t!5726))

(declare-fun b_and!6713 () Bool)

(assert (= b_and!6709 (and (=> t!5726 result!3505) b_and!6713)))

(assert (=> b!108781 t!5728))

(declare-fun b_and!6715 () Bool)

(assert (= b_and!6711 (and (=> t!5728 result!3507) b_and!6715)))

(declare-fun b_lambda!4871 () Bool)

(assert (=> (not b_lambda!4871) (not b!108785)))

(assert (=> b!108785 t!5726))

(declare-fun b_and!6717 () Bool)

(assert (= b_and!6713 (and (=> t!5726 result!3505) b_and!6717)))

(assert (=> b!108785 t!5728))

(declare-fun b_and!6719 () Bool)

(assert (= b_and!6715 (and (=> t!5728 result!3507) b_and!6719)))

(declare-fun m!122689 () Bool)

(assert (=> b!108789 m!122689))

(declare-fun m!122691 () Bool)

(assert (=> b!108778 m!122691))

(assert (=> b!108779 m!121169))

(assert (=> b!108779 m!121169))

(declare-fun m!122693 () Bool)

(assert (=> b!108779 m!122693))

(assert (=> b!108780 m!121169))

(assert (=> b!108780 m!121169))

(assert (=> b!108780 m!121175))

(assert (=> bm!11541 m!122691))

(assert (=> b!108786 m!121169))

(assert (=> b!108786 m!121169))

(assert (=> b!108786 m!121175))

(declare-fun m!122695 () Bool)

(assert (=> b!108785 m!122695))

(declare-fun m!122697 () Bool)

(assert (=> b!108785 m!122697))

(assert (=> b!108785 m!121619))

(assert (=> b!108785 m!122695))

(declare-fun m!122699 () Bool)

(assert (=> b!108785 m!122699))

(declare-fun m!122701 () Bool)

(assert (=> b!108785 m!122701))

(assert (=> b!108785 m!121217))

(assert (=> b!108785 m!121169))

(assert (=> b!108785 m!121619))

(assert (=> b!108785 m!121217))

(assert (=> b!108785 m!121621))

(declare-fun m!122703 () Bool)

(assert (=> b!108783 m!122703))

(declare-fun m!122705 () Bool)

(assert (=> d!30259 m!122705))

(assert (=> d!30259 m!121179))

(assert (=> b!108781 m!121169))

(declare-fun m!122707 () Bool)

(assert (=> b!108781 m!122707))

(assert (=> b!108781 m!121619))

(assert (=> b!108781 m!121217))

(assert (=> b!108781 m!121169))

(assert (=> b!108781 m!121619))

(assert (=> b!108781 m!121217))

(assert (=> b!108781 m!121621))

(assert (=> b!108161 d!30259))

(declare-fun d!30261 () Bool)

(assert (=> d!30261 (= (apply!99 (+!142 lt!55546 (tuple2!2377 lt!55551 (minValue!2478 newMap!16))) lt!55554) (apply!99 lt!55546 lt!55554))))

(declare-fun lt!55968 () Unit!3301)

(assert (=> d!30261 (= lt!55968 (choose!679 lt!55546 lt!55551 (minValue!2478 newMap!16) lt!55554))))

(declare-fun e!70764 () Bool)

(assert (=> d!30261 e!70764))

(declare-fun res!53891 () Bool)

(assert (=> d!30261 (=> (not res!53891) (not e!70764))))

(assert (=> d!30261 (= res!53891 (contains!820 lt!55546 lt!55554))))

(assert (=> d!30261 (= (addApplyDifferent!75 lt!55546 lt!55551 (minValue!2478 newMap!16) lt!55554) lt!55968)))

(declare-fun b!108790 () Bool)

(assert (=> b!108790 (= e!70764 (not (= lt!55554 lt!55551)))))

(assert (= (and d!30261 res!53891) b!108790))

(assert (=> d!30261 m!121597))

(assert (=> d!30261 m!121591))

(declare-fun m!122709 () Bool)

(assert (=> d!30261 m!122709))

(declare-fun m!122711 () Bool)

(assert (=> d!30261 m!122711))

(assert (=> d!30261 m!121591))

(assert (=> d!30261 m!121593))

(assert (=> b!108161 d!30261))

(declare-fun d!30263 () Bool)

(declare-fun e!70765 () Bool)

(assert (=> d!30263 e!70765))

(declare-fun res!53892 () Bool)

(assert (=> d!30263 (=> res!53892 e!70765)))

(declare-fun lt!55969 () Bool)

(assert (=> d!30263 (= res!53892 (not lt!55969))))

(declare-fun lt!55972 () Bool)

(assert (=> d!30263 (= lt!55969 lt!55972)))

(declare-fun lt!55971 () Unit!3301)

(declare-fun e!70766 () Unit!3301)

(assert (=> d!30263 (= lt!55971 e!70766)))

(declare-fun c!19180 () Bool)

(assert (=> d!30263 (= c!19180 lt!55972)))

(assert (=> d!30263 (= lt!55972 (containsKey!161 (toList!786 lt!55497) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30263 (= (contains!820 lt!55497 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55969)))

(declare-fun b!108791 () Bool)

(declare-fun lt!55970 () Unit!3301)

(assert (=> b!108791 (= e!70766 lt!55970)))

(assert (=> b!108791 (= lt!55970 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55497) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!108791 (isDefined!110 (getValueByKey!158 (toList!786 lt!55497) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108792 () Bool)

(declare-fun Unit!3353 () Unit!3301)

(assert (=> b!108792 (= e!70766 Unit!3353)))

(declare-fun b!108793 () Bool)

(assert (=> b!108793 (= e!70765 (isDefined!110 (getValueByKey!158 (toList!786 lt!55497) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30263 c!19180) b!108791))

(assert (= (and d!30263 (not c!19180)) b!108792))

(assert (= (and d!30263 (not res!53892)) b!108793))

(declare-fun m!122713 () Bool)

(assert (=> d!30263 m!122713))

(declare-fun m!122715 () Bool)

(assert (=> b!108791 m!122715))

(assert (=> b!108791 m!121425))

(assert (=> b!108791 m!121425))

(declare-fun m!122717 () Bool)

(assert (=> b!108791 m!122717))

(assert (=> b!108793 m!121425))

(assert (=> b!108793 m!121425))

(assert (=> b!108793 m!122717))

(assert (=> d!29905 d!30263))

(declare-fun b!108797 () Bool)

(declare-fun e!70768 () Option!164)

(assert (=> b!108797 (= e!70768 None!162)))

(declare-fun b!108796 () Bool)

(assert (=> b!108796 (= e!70768 (getValueByKey!158 (t!5712 lt!55496) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108794 () Bool)

(declare-fun e!70767 () Option!164)

(assert (=> b!108794 (= e!70767 (Some!163 (_2!1199 (h!2198 lt!55496))))))

(declare-fun c!19181 () Bool)

(declare-fun d!30265 () Bool)

(assert (=> d!30265 (= c!19181 (and ((_ is Cons!1600) lt!55496) (= (_1!1199 (h!2198 lt!55496)) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30265 (= (getValueByKey!158 lt!55496 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!70767)))

(declare-fun b!108795 () Bool)

(assert (=> b!108795 (= e!70767 e!70768)))

(declare-fun c!19182 () Bool)

(assert (=> b!108795 (= c!19182 (and ((_ is Cons!1600) lt!55496) (not (= (_1!1199 (h!2198 lt!55496)) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30265 c!19181) b!108794))

(assert (= (and d!30265 (not c!19181)) b!108795))

(assert (= (and b!108795 c!19182) b!108796))

(assert (= (and b!108795 (not c!19182)) b!108797))

(declare-fun m!122719 () Bool)

(assert (=> b!108796 m!122719))

(assert (=> d!29905 d!30265))

(declare-fun d!30267 () Bool)

(assert (=> d!30267 (= (getValueByKey!158 lt!55496 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55973 () Unit!3301)

(assert (=> d!30267 (= lt!55973 (choose!677 lt!55496 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!70769 () Bool)

(assert (=> d!30267 e!70769))

(declare-fun res!53893 () Bool)

(assert (=> d!30267 (=> (not res!53893) (not e!70769))))

(assert (=> d!30267 (= res!53893 (isStrictlySorted!297 lt!55496))))

(assert (=> d!30267 (= (lemmaContainsTupThenGetReturnValue!74 lt!55496 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55973)))

(declare-fun b!108798 () Bool)

(declare-fun res!53894 () Bool)

(assert (=> b!108798 (=> (not res!53894) (not e!70769))))

(assert (=> b!108798 (= res!53894 (containsKey!161 lt!55496 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108799 () Bool)

(assert (=> b!108799 (= e!70769 (contains!823 lt!55496 (tuple2!2377 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30267 res!53893) b!108798))

(assert (= (and b!108798 res!53894) b!108799))

(assert (=> d!30267 m!121419))

(declare-fun m!122721 () Bool)

(assert (=> d!30267 m!122721))

(declare-fun m!122723 () Bool)

(assert (=> d!30267 m!122723))

(declare-fun m!122725 () Bool)

(assert (=> b!108798 m!122725))

(declare-fun m!122727 () Bool)

(assert (=> b!108799 m!122727))

(assert (=> d!29905 d!30267))

(declare-fun b!108800 () Bool)

(declare-fun e!70771 () List!1604)

(declare-fun call!11547 () List!1604)

(assert (=> b!108800 (= e!70771 call!11547)))

(declare-fun b!108802 () Bool)

(declare-fun e!70770 () List!1604)

(assert (=> b!108802 (= e!70771 e!70770)))

(declare-fun c!19185 () Bool)

(assert (=> b!108802 (= c!19185 (and ((_ is Cons!1600) (toList!786 lt!55371)) (= (_1!1199 (h!2198 (toList!786 lt!55371))) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108803 () Bool)

(declare-fun call!11545 () List!1604)

(assert (=> b!108803 (= e!70770 call!11545)))

(declare-fun b!108804 () Bool)

(declare-fun e!70774 () List!1604)

(assert (=> b!108804 (= e!70774 (insertStrictlySorted!77 (t!5712 (toList!786 lt!55371)) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun c!19184 () Bool)

(declare-fun b!108805 () Bool)

(assert (=> b!108805 (= e!70774 (ite c!19185 (t!5712 (toList!786 lt!55371)) (ite c!19184 (Cons!1600 (h!2198 (toList!786 lt!55371)) (t!5712 (toList!786 lt!55371))) Nil!1601)))))

(declare-fun e!70772 () Bool)

(declare-fun lt!55974 () List!1604)

(declare-fun b!108806 () Bool)

(assert (=> b!108806 (= e!70772 (contains!823 lt!55974 (tuple2!2377 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun bm!11542 () Bool)

(assert (=> bm!11542 (= call!11545 call!11547)))

(declare-fun b!108807 () Bool)

(assert (=> b!108807 (= c!19184 (and ((_ is Cons!1600) (toList!786 lt!55371)) (bvsgt (_1!1199 (h!2198 (toList!786 lt!55371))) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70773 () List!1604)

(assert (=> b!108807 (= e!70770 e!70773)))

(declare-fun b!108808 () Bool)

(declare-fun call!11546 () List!1604)

(assert (=> b!108808 (= e!70773 call!11546)))

(declare-fun c!19183 () Bool)

(declare-fun bm!11543 () Bool)

(assert (=> bm!11543 (= call!11547 ($colon$colon!81 e!70774 (ite c!19183 (h!2198 (toList!786 lt!55371)) (tuple2!2377 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19186 () Bool)

(assert (=> bm!11543 (= c!19186 c!19183)))

(declare-fun b!108801 () Bool)

(declare-fun res!53896 () Bool)

(assert (=> b!108801 (=> (not res!53896) (not e!70772))))

(assert (=> b!108801 (= res!53896 (containsKey!161 lt!55974 (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun d!30269 () Bool)

(assert (=> d!30269 e!70772))

(declare-fun res!53895 () Bool)

(assert (=> d!30269 (=> (not res!53895) (not e!70772))))

(assert (=> d!30269 (= res!53895 (isStrictlySorted!297 lt!55974))))

(assert (=> d!30269 (= lt!55974 e!70771)))

(assert (=> d!30269 (= c!19183 (and ((_ is Cons!1600) (toList!786 lt!55371)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55371))) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30269 (isStrictlySorted!297 (toList!786 lt!55371))))

(assert (=> d!30269 (= (insertStrictlySorted!77 (toList!786 lt!55371) (_1!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55974)))

(declare-fun bm!11544 () Bool)

(assert (=> bm!11544 (= call!11546 call!11545)))

(declare-fun b!108809 () Bool)

(assert (=> b!108809 (= e!70773 call!11546)))

(assert (= (and d!30269 c!19183) b!108800))

(assert (= (and d!30269 (not c!19183)) b!108802))

(assert (= (and b!108802 c!19185) b!108803))

(assert (= (and b!108802 (not c!19185)) b!108807))

(assert (= (and b!108807 c!19184) b!108808))

(assert (= (and b!108807 (not c!19184)) b!108809))

(assert (= (or b!108808 b!108809) bm!11544))

(assert (= (or b!108803 bm!11544) bm!11542))

(assert (= (or b!108800 bm!11542) bm!11543))

(assert (= (and bm!11543 c!19186) b!108804))

(assert (= (and bm!11543 (not c!19186)) b!108805))

(assert (= (and d!30269 res!53895) b!108801))

(assert (= (and b!108801 res!53896) b!108806))

(declare-fun m!122729 () Bool)

(assert (=> d!30269 m!122729))

(declare-fun m!122731 () Bool)

(assert (=> d!30269 m!122731))

(declare-fun m!122733 () Bool)

(assert (=> bm!11543 m!122733))

(declare-fun m!122735 () Bool)

(assert (=> b!108804 m!122735))

(declare-fun m!122737 () Bool)

(assert (=> b!108806 m!122737))

(declare-fun m!122739 () Bool)

(assert (=> b!108801 m!122739))

(assert (=> d!29905 d!30269))

(declare-fun b!108811 () Bool)

(declare-fun e!70777 () Bool)

(assert (=> b!108811 (= e!70777 (contains!822 (ite c!19040 (Cons!1601 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) Nil!1602) Nil!1602) (select (arr!2066 (_keys!4315 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!108812 () Bool)

(declare-fun e!70778 () Bool)

(declare-fun call!11548 () Bool)

(assert (=> b!108812 (= e!70778 call!11548)))

(declare-fun bm!11545 () Bool)

(declare-fun c!19187 () Bool)

(assert (=> bm!11545 (= call!11548 (arrayNoDuplicates!0 (_keys!4315 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19187 (Cons!1601 (select (arr!2066 (_keys!4315 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!19040 (Cons!1601 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) Nil!1602) Nil!1602)) (ite c!19040 (Cons!1601 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) Nil!1602) Nil!1602))))))

(declare-fun b!108813 () Bool)

(declare-fun e!70776 () Bool)

(declare-fun e!70775 () Bool)

(assert (=> b!108813 (= e!70776 e!70775)))

(declare-fun res!53899 () Bool)

(assert (=> b!108813 (=> (not res!53899) (not e!70775))))

(assert (=> b!108813 (= res!53899 (not e!70777))))

(declare-fun res!53898 () Bool)

(assert (=> b!108813 (=> (not res!53898) (not e!70777))))

(assert (=> b!108813 (= res!53898 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!108814 () Bool)

(assert (=> b!108814 (= e!70778 call!11548)))

(declare-fun d!30271 () Bool)

(declare-fun res!53897 () Bool)

(assert (=> d!30271 (=> res!53897 e!70776)))

(assert (=> d!30271 (= res!53897 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30271 (= (arrayNoDuplicates!0 (_keys!4315 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19040 (Cons!1601 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) Nil!1602) Nil!1602)) e!70776)))

(declare-fun b!108810 () Bool)

(assert (=> b!108810 (= e!70775 e!70778)))

(assert (=> b!108810 (= c!19187 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!30271 (not res!53897)) b!108813))

(assert (= (and b!108813 res!53898) b!108811))

(assert (= (and b!108813 res!53899) b!108810))

(assert (= (and b!108810 c!19187) b!108814))

(assert (= (and b!108810 (not c!19187)) b!108812))

(assert (= (or b!108814 b!108812) bm!11545))

(assert (=> b!108811 m!122335))

(assert (=> b!108811 m!122335))

(declare-fun m!122741 () Bool)

(assert (=> b!108811 m!122741))

(assert (=> bm!11545 m!122335))

(declare-fun m!122743 () Bool)

(assert (=> bm!11545 m!122743))

(assert (=> b!108813 m!122335))

(assert (=> b!108813 m!122335))

(declare-fun m!122745 () Bool)

(assert (=> b!108813 m!122745))

(assert (=> b!108810 m!122335))

(assert (=> b!108810 m!122335))

(assert (=> b!108810 m!122745))

(assert (=> bm!11491 d!30271))

(declare-fun d!30273 () Bool)

(assert (=> d!30273 (= (isDefined!110 (getValueByKey!158 (toList!786 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!380 (getValueByKey!158 (toList!786 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4471 () Bool)

(assert (= bs!4471 d!30273))

(assert (=> bs!4471 m!121785))

(declare-fun m!122747 () Bool)

(assert (=> bs!4471 m!122747))

(assert (=> b!108242 d!30273))

(declare-fun b!108818 () Bool)

(declare-fun e!70780 () Option!164)

(assert (=> b!108818 (= e!70780 None!162)))

(declare-fun b!108817 () Bool)

(assert (=> b!108817 (= e!70780 (getValueByKey!158 (t!5712 (toList!786 lt!55306)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108815 () Bool)

(declare-fun e!70779 () Option!164)

(assert (=> b!108815 (= e!70779 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55306)))))))

(declare-fun d!30275 () Bool)

(declare-fun c!19188 () Bool)

(assert (=> d!30275 (= c!19188 (and ((_ is Cons!1600) (toList!786 lt!55306)) (= (_1!1199 (h!2198 (toList!786 lt!55306))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30275 (= (getValueByKey!158 (toList!786 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000) e!70779)))

(declare-fun b!108816 () Bool)

(assert (=> b!108816 (= e!70779 e!70780)))

(declare-fun c!19189 () Bool)

(assert (=> b!108816 (= c!19189 (and ((_ is Cons!1600) (toList!786 lt!55306)) (not (= (_1!1199 (h!2198 (toList!786 lt!55306))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!30275 c!19188) b!108815))

(assert (= (and d!30275 (not c!19188)) b!108816))

(assert (= (and b!108816 c!19189) b!108817))

(assert (= (and b!108816 (not c!19189)) b!108818))

(declare-fun m!122749 () Bool)

(assert (=> b!108817 m!122749))

(assert (=> b!108242 d!30275))

(declare-fun b!108822 () Bool)

(declare-fun e!70782 () Option!164)

(assert (=> b!108822 (= e!70782 None!162)))

(declare-fun b!108821 () Bool)

(assert (=> b!108821 (= e!70782 (getValueByKey!158 (t!5712 (t!5712 lt!55319)) (_1!1199 lt!55092)))))

(declare-fun b!108819 () Bool)

(declare-fun e!70781 () Option!164)

(assert (=> b!108819 (= e!70781 (Some!163 (_2!1199 (h!2198 (t!5712 lt!55319)))))))

(declare-fun d!30277 () Bool)

(declare-fun c!19190 () Bool)

(assert (=> d!30277 (= c!19190 (and ((_ is Cons!1600) (t!5712 lt!55319)) (= (_1!1199 (h!2198 (t!5712 lt!55319))) (_1!1199 lt!55092))))))

(assert (=> d!30277 (= (getValueByKey!158 (t!5712 lt!55319) (_1!1199 lt!55092)) e!70781)))

(declare-fun b!108820 () Bool)

(assert (=> b!108820 (= e!70781 e!70782)))

(declare-fun c!19191 () Bool)

(assert (=> b!108820 (= c!19191 (and ((_ is Cons!1600) (t!5712 lt!55319)) (not (= (_1!1199 (h!2198 (t!5712 lt!55319))) (_1!1199 lt!55092)))))))

(assert (= (and d!30277 c!19190) b!108819))

(assert (= (and d!30277 (not c!19190)) b!108820))

(assert (= (and b!108820 c!19191) b!108821))

(assert (= (and b!108820 (not c!19191)) b!108822))

(declare-fun m!122751 () Bool)

(assert (=> b!108821 m!122751))

(assert (=> b!108001 d!30277))

(declare-fun d!30279 () Bool)

(assert (=> d!30279 (= (isDefined!110 (getValueByKey!158 (toList!786 lt!55324) (_1!1199 lt!55093))) (not (isEmpty!380 (getValueByKey!158 (toList!786 lt!55324) (_1!1199 lt!55093)))))))

(declare-fun bs!4472 () Bool)

(assert (= bs!4472 d!30279))

(assert (=> bs!4472 m!121083))

(declare-fun m!122753 () Bool)

(assert (=> bs!4472 m!122753))

(assert (=> b!107941 d!30279))

(assert (=> b!107941 d!30017))

(declare-fun b!108826 () Bool)

(declare-fun e!70784 () Option!164)

(assert (=> b!108826 (= e!70784 None!162)))

(declare-fun b!108825 () Bool)

(assert (=> b!108825 (= e!70784 (getValueByKey!158 (t!5712 (toList!786 lt!55602)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!108823 () Bool)

(declare-fun e!70783 () Option!164)

(assert (=> b!108823 (= e!70783 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55602)))))))

(declare-fun c!19192 () Bool)

(declare-fun d!30281 () Bool)

(assert (=> d!30281 (= c!19192 (and ((_ is Cons!1600) (toList!786 lt!55602)) (= (_1!1199 (h!2198 (toList!786 lt!55602))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!30281 (= (getValueByKey!158 (toList!786 lt!55602) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) e!70783)))

(declare-fun b!108824 () Bool)

(assert (=> b!108824 (= e!70783 e!70784)))

(declare-fun c!19193 () Bool)

(assert (=> b!108824 (= c!19193 (and ((_ is Cons!1600) (toList!786 lt!55602)) (not (= (_1!1199 (h!2198 (toList!786 lt!55602))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(assert (= (and d!30281 c!19192) b!108823))

(assert (= (and d!30281 (not c!19192)) b!108824))

(assert (= (and b!108824 c!19193) b!108825))

(assert (= (and b!108824 (not c!19193)) b!108826))

(declare-fun m!122755 () Bool)

(assert (=> b!108825 m!122755))

(assert (=> b!108234 d!30281))

(declare-fun d!30283 () Bool)

(declare-fun res!53900 () Bool)

(declare-fun e!70785 () Bool)

(assert (=> d!30283 (=> res!53900 e!70785)))

(assert (=> d!30283 (= res!53900 (and ((_ is Cons!1600) lt!55441) (= (_1!1199 (h!2198 lt!55441)) (_1!1199 lt!55093))))))

(assert (=> d!30283 (= (containsKey!161 lt!55441 (_1!1199 lt!55093)) e!70785)))

(declare-fun b!108827 () Bool)

(declare-fun e!70786 () Bool)

(assert (=> b!108827 (= e!70785 e!70786)))

(declare-fun res!53901 () Bool)

(assert (=> b!108827 (=> (not res!53901) (not e!70786))))

(assert (=> b!108827 (= res!53901 (and (or (not ((_ is Cons!1600) lt!55441)) (bvsle (_1!1199 (h!2198 lt!55441)) (_1!1199 lt!55093))) ((_ is Cons!1600) lt!55441) (bvslt (_1!1199 (h!2198 lt!55441)) (_1!1199 lt!55093))))))

(declare-fun b!108828 () Bool)

(assert (=> b!108828 (= e!70786 (containsKey!161 (t!5712 lt!55441) (_1!1199 lt!55093)))))

(assert (= (and d!30283 (not res!53900)) b!108827))

(assert (= (and b!108827 res!53901) b!108828))

(declare-fun m!122757 () Bool)

(assert (=> b!108828 m!122757))

(assert (=> b!107981 d!30283))

(declare-fun d!30285 () Bool)

(assert (=> d!30285 (= (apply!99 lt!55720 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1350 (getValueByKey!158 (toList!786 lt!55720) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4473 () Bool)

(assert (= bs!4473 d!30285))

(assert (=> bs!4473 m!121169))

(declare-fun m!122759 () Bool)

(assert (=> bs!4473 m!122759))

(assert (=> bs!4473 m!122759))

(declare-fun m!122761 () Bool)

(assert (=> bs!4473 m!122761))

(assert (=> b!108313 d!30285))

(declare-fun d!30287 () Bool)

(declare-fun c!19194 () Bool)

(assert (=> d!30287 (= c!19194 ((_ is ValueCellFull!1001) (select (arr!2067 (_values!2588 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!70787 () V!3233)

(assert (=> d!30287 (= (get!1345 (select (arr!2067 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70787)))

(declare-fun b!108829 () Bool)

(assert (=> b!108829 (= e!70787 (get!1348 (select (arr!2067 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108830 () Bool)

(assert (=> b!108830 (= e!70787 (get!1349 (select (arr!2067 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30287 c!19194) b!108829))

(assert (= (and d!30287 (not c!19194)) b!108830))

(assert (=> b!108829 m!121891))

(assert (=> b!108829 m!121217))

(declare-fun m!122763 () Bool)

(assert (=> b!108829 m!122763))

(assert (=> b!108830 m!121891))

(assert (=> b!108830 m!121217))

(declare-fun m!122765 () Bool)

(assert (=> b!108830 m!122765))

(assert (=> b!108313 d!30287))

(assert (=> d!30009 d!30057))

(declare-fun d!30289 () Bool)

(assert (=> d!30289 (= (get!1350 (getValueByKey!158 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2920 (getValueByKey!158 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29983 d!30289))

(declare-fun b!108834 () Bool)

(declare-fun e!70789 () Option!164)

(assert (=> b!108834 (= e!70789 None!162)))

(declare-fun b!108833 () Bool)

(assert (=> b!108833 (= e!70789 (getValueByKey!158 (t!5712 (toList!786 lt!55384)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108831 () Bool)

(declare-fun e!70788 () Option!164)

(assert (=> b!108831 (= e!70788 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55384)))))))

(declare-fun d!30291 () Bool)

(declare-fun c!19195 () Bool)

(assert (=> d!30291 (= c!19195 (and ((_ is Cons!1600) (toList!786 lt!55384)) (= (_1!1199 (h!2198 (toList!786 lt!55384))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30291 (= (getValueByKey!158 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!70788)))

(declare-fun b!108832 () Bool)

(assert (=> b!108832 (= e!70788 e!70789)))

(declare-fun c!19196 () Bool)

(assert (=> b!108832 (= c!19196 (and ((_ is Cons!1600) (toList!786 lt!55384)) (not (= (_1!1199 (h!2198 (toList!786 lt!55384))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!30291 c!19195) b!108831))

(assert (= (and d!30291 (not c!19195)) b!108832))

(assert (= (and b!108832 c!19196) b!108833))

(assert (= (and b!108832 (not c!19196)) b!108834))

(assert (=> b!108833 m!120923))

(declare-fun m!122767 () Bool)

(assert (=> b!108833 m!122767))

(assert (=> d!29983 d!30291))

(declare-fun d!30293 () Bool)

(declare-fun lt!55975 () Bool)

(assert (=> d!30293 (= lt!55975 (select (content!112 (toList!786 lt!55606)) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!70790 () Bool)

(assert (=> d!30293 (= lt!55975 e!70790)))

(declare-fun res!53903 () Bool)

(assert (=> d!30293 (=> (not res!53903) (not e!70790))))

(assert (=> d!30293 (= res!53903 ((_ is Cons!1600) (toList!786 lt!55606)))))

(assert (=> d!30293 (= (contains!823 (toList!786 lt!55606) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55975)))

(declare-fun b!108835 () Bool)

(declare-fun e!70791 () Bool)

(assert (=> b!108835 (= e!70790 e!70791)))

(declare-fun res!53902 () Bool)

(assert (=> b!108835 (=> res!53902 e!70791)))

(assert (=> b!108835 (= res!53902 (= (h!2198 (toList!786 lt!55606)) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108836 () Bool)

(assert (=> b!108836 (= e!70791 (contains!823 (t!5712 (toList!786 lt!55606)) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30293 res!53903) b!108835))

(assert (= (and b!108835 (not res!53902)) b!108836))

(declare-fun m!122769 () Bool)

(assert (=> d!30293 m!122769))

(declare-fun m!122771 () Bool)

(assert (=> d!30293 m!122771))

(declare-fun m!122773 () Bool)

(assert (=> b!108836 m!122773))

(assert (=> b!108237 d!30293))

(declare-fun d!30295 () Bool)

(assert (=> d!30295 (= (isEmpty!381 (toList!786 lt!55306)) ((_ is Nil!1601) (toList!786 lt!55306)))))

(assert (=> d!29973 d!30295))

(assert (=> b!108298 d!30129))

(declare-fun d!30297 () Bool)

(declare-fun res!53904 () Bool)

(declare-fun e!70792 () Bool)

(assert (=> d!30297 (=> res!53904 e!70792)))

(assert (=> d!30297 (= res!53904 (and ((_ is Cons!1600) lt!55456) (= (_1!1199 (h!2198 lt!55456)) (_1!1199 lt!55092))))))

(assert (=> d!30297 (= (containsKey!161 lt!55456 (_1!1199 lt!55092)) e!70792)))

(declare-fun b!108837 () Bool)

(declare-fun e!70793 () Bool)

(assert (=> b!108837 (= e!70792 e!70793)))

(declare-fun res!53905 () Bool)

(assert (=> b!108837 (=> (not res!53905) (not e!70793))))

(assert (=> b!108837 (= res!53905 (and (or (not ((_ is Cons!1600) lt!55456)) (bvsle (_1!1199 (h!2198 lt!55456)) (_1!1199 lt!55092))) ((_ is Cons!1600) lt!55456) (bvslt (_1!1199 (h!2198 lt!55456)) (_1!1199 lt!55092))))))

(declare-fun b!108838 () Bool)

(assert (=> b!108838 (= e!70793 (containsKey!161 (t!5712 lt!55456) (_1!1199 lt!55092)))))

(assert (= (and d!30297 (not res!53904)) b!108837))

(assert (= (and b!108837 res!53905) b!108838))

(declare-fun m!122775 () Bool)

(assert (=> b!108838 m!122775))

(assert (=> b!108025 d!30297))

(declare-fun b!108842 () Bool)

(declare-fun e!70795 () Option!164)

(assert (=> b!108842 (= e!70795 None!162)))

(declare-fun b!108841 () Bool)

(assert (=> b!108841 (= e!70795 (getValueByKey!158 (t!5712 (t!5712 lt!55315)) (_1!1199 lt!55093)))))

(declare-fun b!108839 () Bool)

(declare-fun e!70794 () Option!164)

(assert (=> b!108839 (= e!70794 (Some!163 (_2!1199 (h!2198 (t!5712 lt!55315)))))))

(declare-fun d!30299 () Bool)

(declare-fun c!19197 () Bool)

(assert (=> d!30299 (= c!19197 (and ((_ is Cons!1600) (t!5712 lt!55315)) (= (_1!1199 (h!2198 (t!5712 lt!55315))) (_1!1199 lt!55093))))))

(assert (=> d!30299 (= (getValueByKey!158 (t!5712 lt!55315) (_1!1199 lt!55093)) e!70794)))

(declare-fun b!108840 () Bool)

(assert (=> b!108840 (= e!70794 e!70795)))

(declare-fun c!19198 () Bool)

(assert (=> b!108840 (= c!19198 (and ((_ is Cons!1600) (t!5712 lt!55315)) (not (= (_1!1199 (h!2198 (t!5712 lt!55315))) (_1!1199 lt!55093)))))))

(assert (= (and d!30299 c!19197) b!108839))

(assert (= (and d!30299 (not c!19197)) b!108840))

(assert (= (and b!108840 c!19198) b!108841))

(assert (= (and b!108840 (not c!19198)) b!108842))

(declare-fun m!122777 () Bool)

(assert (=> b!108841 m!122777))

(assert (=> b!108179 d!30299))

(assert (=> d!29885 d!30057))

(declare-fun d!30301 () Bool)

(assert (=> d!30301 (= (isDefined!110 (getValueByKey!158 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!380 (getValueByKey!158 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4474 () Bool)

(assert (= bs!4474 d!30301))

(assert (=> bs!4474 m!121227))

(declare-fun m!122779 () Bool)

(assert (=> bs!4474 m!122779))

(assert (=> b!107927 d!30301))

(declare-fun b!108846 () Bool)

(declare-fun e!70797 () Option!164)

(assert (=> b!108846 (= e!70797 None!162)))

(declare-fun b!108845 () Bool)

(assert (=> b!108845 (= e!70797 (getValueByKey!158 (t!5712 (toList!786 lt!55384)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108843 () Bool)

(declare-fun e!70796 () Option!164)

(assert (=> b!108843 (= e!70796 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55384)))))))

(declare-fun d!30303 () Bool)

(declare-fun c!19199 () Bool)

(assert (=> d!30303 (= c!19199 (and ((_ is Cons!1600) (toList!786 lt!55384)) (= (_1!1199 (h!2198 (toList!786 lt!55384))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30303 (= (getValueByKey!158 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000) e!70796)))

(declare-fun b!108844 () Bool)

(assert (=> b!108844 (= e!70796 e!70797)))

(declare-fun c!19200 () Bool)

(assert (=> b!108844 (= c!19200 (and ((_ is Cons!1600) (toList!786 lt!55384)) (not (= (_1!1199 (h!2198 (toList!786 lt!55384))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!30303 c!19199) b!108843))

(assert (= (and d!30303 (not c!19199)) b!108844))

(assert (= (and b!108844 c!19200) b!108845))

(assert (= (and b!108844 (not c!19200)) b!108846))

(declare-fun m!122781 () Bool)

(assert (=> b!108845 m!122781))

(assert (=> b!107927 d!30303))

(declare-fun d!30305 () Bool)

(assert (=> d!30305 (= (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55377)) (not (isEmpty!380 (getValueByKey!158 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55377))))))

(declare-fun bs!4475 () Bool)

(assert (= bs!4475 d!30305))

(assert (=> bs!4475 m!121413))

(declare-fun m!122783 () Bool)

(assert (=> bs!4475 m!122783))

(assert (=> b!108090 d!30305))

(declare-fun b!108850 () Bool)

(declare-fun e!70799 () Option!164)

(assert (=> b!108850 (= e!70799 None!162)))

(declare-fun b!108849 () Bool)

(assert (=> b!108849 (= e!70799 (getValueByKey!158 (t!5712 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) lt!55377))))

(declare-fun e!70798 () Option!164)

(declare-fun b!108847 () Bool)

(assert (=> b!108847 (= e!70798 (Some!163 (_2!1199 (h!2198 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))))

(declare-fun d!30307 () Bool)

(declare-fun c!19201 () Bool)

(assert (=> d!30307 (= c!19201 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))) lt!55377)))))

(assert (=> d!30307 (= (getValueByKey!158 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55377) e!70798)))

(declare-fun b!108848 () Bool)

(assert (=> b!108848 (= e!70798 e!70799)))

(declare-fun c!19202 () Bool)

(assert (=> b!108848 (= c!19202 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (not (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))) lt!55377))))))

(assert (= (and d!30307 c!19201) b!108847))

(assert (= (and d!30307 (not c!19201)) b!108848))

(assert (= (and b!108848 c!19202) b!108849))

(assert (= (and b!108848 (not c!19202)) b!108850))

(declare-fun m!122785 () Bool)

(assert (=> b!108849 m!122785))

(assert (=> b!108090 d!30307))

(assert (=> d!30035 d!29955))

(assert (=> d!30035 d!29957))

(declare-fun d!30309 () Bool)

(assert (=> d!30309 (isDefined!110 (getValueByKey!158 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30309 true))

(declare-fun _$12!356 () Unit!3301)

(assert (=> d!30309 (= (choose!686 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) _$12!356)))

(declare-fun bs!4476 () Bool)

(assert (= bs!4476 d!30309))

(assert (=> bs!4476 m!120751))

(assert (=> bs!4476 m!120943))

(assert (=> bs!4476 m!120943))

(assert (=> bs!4476 m!120945))

(assert (=> d!30035 d!30309))

(declare-fun d!30311 () Bool)

(declare-fun res!53910 () Bool)

(declare-fun e!70804 () Bool)

(assert (=> d!30311 (=> res!53910 e!70804)))

(assert (=> d!30311 (= res!53910 (or ((_ is Nil!1601) (toList!786 lt!55099)) ((_ is Nil!1601) (t!5712 (toList!786 lt!55099)))))))

(assert (=> d!30311 (= (isStrictlySorted!297 (toList!786 lt!55099)) e!70804)))

(declare-fun b!108855 () Bool)

(declare-fun e!70805 () Bool)

(assert (=> b!108855 (= e!70804 e!70805)))

(declare-fun res!53911 () Bool)

(assert (=> b!108855 (=> (not res!53911) (not e!70805))))

(assert (=> b!108855 (= res!53911 (bvslt (_1!1199 (h!2198 (toList!786 lt!55099))) (_1!1199 (h!2198 (t!5712 (toList!786 lt!55099))))))))

(declare-fun b!108856 () Bool)

(assert (=> b!108856 (= e!70805 (isStrictlySorted!297 (t!5712 (toList!786 lt!55099))))))

(assert (= (and d!30311 (not res!53910)) b!108855))

(assert (= (and b!108855 res!53911) b!108856))

(declare-fun m!122787 () Bool)

(assert (=> b!108856 m!122787))

(assert (=> d!30035 d!30311))

(declare-fun d!30313 () Bool)

(declare-fun res!53912 () Bool)

(declare-fun e!70806 () Bool)

(assert (=> d!30313 (=> res!53912 e!70806)))

(assert (=> d!30313 (= res!53912 (or ((_ is Nil!1601) lt!55456) ((_ is Nil!1601) (t!5712 lt!55456))))))

(assert (=> d!30313 (= (isStrictlySorted!297 lt!55456) e!70806)))

(declare-fun b!108857 () Bool)

(declare-fun e!70807 () Bool)

(assert (=> b!108857 (= e!70806 e!70807)))

(declare-fun res!53913 () Bool)

(assert (=> b!108857 (=> (not res!53913) (not e!70807))))

(assert (=> b!108857 (= res!53913 (bvslt (_1!1199 (h!2198 lt!55456)) (_1!1199 (h!2198 (t!5712 lt!55456)))))))

(declare-fun b!108858 () Bool)

(assert (=> b!108858 (= e!70807 (isStrictlySorted!297 (t!5712 lt!55456)))))

(assert (= (and d!30313 (not res!53912)) b!108857))

(assert (= (and b!108857 res!53913) b!108858))

(declare-fun m!122789 () Bool)

(assert (=> b!108858 m!122789))

(assert (=> d!29883 d!30313))

(declare-fun d!30315 () Bool)

(declare-fun res!53914 () Bool)

(declare-fun e!70808 () Bool)

(assert (=> d!30315 (=> res!53914 e!70808)))

(assert (=> d!30315 (= res!53914 (or ((_ is Nil!1601) (toList!786 lt!55096)) ((_ is Nil!1601) (t!5712 (toList!786 lt!55096)))))))

(assert (=> d!30315 (= (isStrictlySorted!297 (toList!786 lt!55096)) e!70808)))

(declare-fun b!108859 () Bool)

(declare-fun e!70809 () Bool)

(assert (=> b!108859 (= e!70808 e!70809)))

(declare-fun res!53915 () Bool)

(assert (=> b!108859 (=> (not res!53915) (not e!70809))))

(assert (=> b!108859 (= res!53915 (bvslt (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 (h!2198 (t!5712 (toList!786 lt!55096))))))))

(declare-fun b!108860 () Bool)

(assert (=> b!108860 (= e!70809 (isStrictlySorted!297 (t!5712 (toList!786 lt!55096))))))

(assert (= (and d!30315 (not res!53914)) b!108859))

(assert (= (and b!108859 res!53915) b!108860))

(declare-fun m!122791 () Bool)

(assert (=> b!108860 m!122791))

(assert (=> d!29883 d!30315))

(declare-fun d!30317 () Bool)

(assert (=> d!30317 (isDefined!110 (getValueByKey!158 (toList!786 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!55976 () Unit!3301)

(assert (=> d!30317 (= lt!55976 (choose!686 (toList!786 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70810 () Bool)

(assert (=> d!30317 e!70810))

(declare-fun res!53916 () Bool)

(assert (=> d!30317 (=> (not res!53916) (not e!70810))))

(assert (=> d!30317 (= res!53916 (isStrictlySorted!297 (toList!786 lt!55306)))))

(assert (=> d!30317 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000) lt!55976)))

(declare-fun b!108861 () Bool)

(assert (=> b!108861 (= e!70810 (containsKey!161 (toList!786 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30317 res!53916) b!108861))

(assert (=> d!30317 m!121399))

(assert (=> d!30317 m!121399))

(assert (=> d!30317 m!121401))

(declare-fun m!122793 () Bool)

(assert (=> d!30317 m!122793))

(declare-fun m!122795 () Bool)

(assert (=> d!30317 m!122795))

(assert (=> b!108861 m!121395))

(assert (=> b!108082 d!30317))

(assert (=> b!108082 d!30071))

(assert (=> b!108082 d!30073))

(declare-fun d!30319 () Bool)

(assert (=> d!30319 (isDefined!110 (getValueByKey!158 (toList!786 lt!55316) (_1!1199 lt!55093)))))

(declare-fun lt!55977 () Unit!3301)

(assert (=> d!30319 (= lt!55977 (choose!686 (toList!786 lt!55316) (_1!1199 lt!55093)))))

(declare-fun e!70811 () Bool)

(assert (=> d!30319 e!70811))

(declare-fun res!53917 () Bool)

(assert (=> d!30319 (=> (not res!53917) (not e!70811))))

(assert (=> d!30319 (= res!53917 (isStrictlySorted!297 (toList!786 lt!55316)))))

(assert (=> d!30319 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55316) (_1!1199 lt!55093)) lt!55977)))

(declare-fun b!108862 () Bool)

(assert (=> b!108862 (= e!70811 (containsKey!161 (toList!786 lt!55316) (_1!1199 lt!55093)))))

(assert (= (and d!30319 res!53917) b!108862))

(assert (=> d!30319 m!121059))

(assert (=> d!30319 m!121059))

(assert (=> d!30319 m!121633))

(declare-fun m!122797 () Bool)

(assert (=> d!30319 m!122797))

(declare-fun m!122799 () Bool)

(assert (=> d!30319 m!122799))

(assert (=> b!108862 m!121629))

(assert (=> b!108174 d!30319))

(assert (=> b!108174 d!30077))

(assert (=> b!108174 d!29987))

(declare-fun d!30321 () Bool)

(declare-fun res!53918 () Bool)

(declare-fun e!70812 () Bool)

(assert (=> d!30321 (=> (not res!53918) (not e!70812))))

(assert (=> d!30321 (= res!53918 (simpleValid!75 (_2!1200 lt!55684)))))

(assert (=> d!30321 (= (valid!430 (_2!1200 lt!55684)) e!70812)))

(declare-fun b!108863 () Bool)

(declare-fun res!53919 () Bool)

(assert (=> b!108863 (=> (not res!53919) (not e!70812))))

(assert (=> b!108863 (= res!53919 (= (arrayCountValidKeys!0 (_keys!4315 (_2!1200 lt!55684)) #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55684)))) (_size!504 (_2!1200 lt!55684))))))

(declare-fun b!108864 () Bool)

(declare-fun res!53920 () Bool)

(assert (=> b!108864 (=> (not res!53920) (not e!70812))))

(assert (=> b!108864 (= res!53920 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4315 (_2!1200 lt!55684)) (mask!6763 (_2!1200 lt!55684))))))

(declare-fun b!108865 () Bool)

(assert (=> b!108865 (= e!70812 (arrayNoDuplicates!0 (_keys!4315 (_2!1200 lt!55684)) #b00000000000000000000000000000000 Nil!1602))))

(assert (= (and d!30321 res!53918) b!108863))

(assert (= (and b!108863 res!53919) b!108864))

(assert (= (and b!108864 res!53920) b!108865))

(declare-fun m!122801 () Bool)

(assert (=> d!30321 m!122801))

(declare-fun m!122803 () Bool)

(assert (=> b!108863 m!122803))

(declare-fun m!122805 () Bool)

(assert (=> b!108864 m!122805))

(declare-fun m!122807 () Bool)

(assert (=> b!108865 m!122807))

(assert (=> b!108278 d!30321))

(declare-fun d!30323 () Bool)

(assert (=> d!30323 (isDefined!110 (getValueByKey!158 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!55978 () Unit!3301)

(assert (=> d!30323 (= lt!55978 (choose!686 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70813 () Bool)

(assert (=> d!30323 e!70813))

(declare-fun res!53921 () Bool)

(assert (=> d!30323 (=> (not res!53921) (not e!70813))))

(assert (=> d!30323 (= res!53921 (isStrictlySorted!297 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))))

(assert (=> d!30323 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55978)))

(declare-fun b!108866 () Bool)

(assert (=> b!108866 (= e!70813 (containsKey!161 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30323 res!53921) b!108866))

(assert (=> d!30323 m!120751))

(assert (=> d!30323 m!121949))

(assert (=> d!30323 m!121949))

(assert (=> d!30323 m!121951))

(assert (=> d!30323 m!120751))

(declare-fun m!122809 () Bool)

(assert (=> d!30323 m!122809))

(declare-fun m!122811 () Bool)

(assert (=> d!30323 m!122811))

(assert (=> b!108866 m!120751))

(assert (=> b!108866 m!121945))

(assert (=> b!108361 d!30323))

(assert (=> b!108361 d!30203))

(assert (=> b!108361 d!30205))

(declare-fun d!30325 () Bool)

(declare-fun c!19203 () Bool)

(assert (=> d!30325 (= c!19203 ((_ is ValueCellFull!1001) (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!70814 () V!3233)

(assert (=> d!30325 (= (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70814)))

(declare-fun b!108867 () Bool)

(assert (=> b!108867 (= e!70814 (get!1348 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108868 () Bool)

(assert (=> b!108868 (= e!70814 (get!1349 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30325 c!19203) b!108867))

(assert (= (and d!30325 (not c!19203)) b!108868))

(assert (=> b!108867 m!121669))

(assert (=> b!108867 m!120755))

(declare-fun m!122813 () Bool)

(assert (=> b!108867 m!122813))

(assert (=> b!108868 m!121669))

(assert (=> b!108868 m!120755))

(declare-fun m!122815 () Bool)

(assert (=> b!108868 m!122815))

(assert (=> b!108200 d!30325))

(declare-fun d!30327 () Bool)

(declare-fun e!70815 () Bool)

(assert (=> d!30327 e!70815))

(declare-fun res!53922 () Bool)

(assert (=> d!30327 (=> res!53922 e!70815)))

(declare-fun lt!55979 () Bool)

(assert (=> d!30327 (= res!53922 (not lt!55979))))

(declare-fun lt!55982 () Bool)

(assert (=> d!30327 (= lt!55979 lt!55982)))

(declare-fun lt!55981 () Unit!3301)

(declare-fun e!70816 () Unit!3301)

(assert (=> d!30327 (= lt!55981 e!70816)))

(declare-fun c!19204 () Bool)

(assert (=> d!30327 (= c!19204 lt!55982)))

(assert (=> d!30327 (= lt!55982 (containsKey!161 (toList!786 (+!142 lt!55573 (tuple2!2377 lt!55576 lt!55571))) lt!55572))))

(assert (=> d!30327 (= (contains!820 (+!142 lt!55573 (tuple2!2377 lt!55576 lt!55571)) lt!55572) lt!55979)))

(declare-fun b!108869 () Bool)

(declare-fun lt!55980 () Unit!3301)

(assert (=> b!108869 (= e!70816 lt!55980)))

(assert (=> b!108869 (= lt!55980 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (+!142 lt!55573 (tuple2!2377 lt!55576 lt!55571))) lt!55572))))

(assert (=> b!108869 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55573 (tuple2!2377 lt!55576 lt!55571))) lt!55572))))

(declare-fun b!108870 () Bool)

(declare-fun Unit!3354 () Unit!3301)

(assert (=> b!108870 (= e!70816 Unit!3354)))

(declare-fun b!108871 () Bool)

(assert (=> b!108871 (= e!70815 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55573 (tuple2!2377 lt!55576 lt!55571))) lt!55572)))))

(assert (= (and d!30327 c!19204) b!108869))

(assert (= (and d!30327 (not c!19204)) b!108870))

(assert (= (and d!30327 (not res!53922)) b!108871))

(declare-fun m!122817 () Bool)

(assert (=> d!30327 m!122817))

(declare-fun m!122819 () Bool)

(assert (=> b!108869 m!122819))

(declare-fun m!122821 () Bool)

(assert (=> b!108869 m!122821))

(assert (=> b!108869 m!122821))

(declare-fun m!122823 () Bool)

(assert (=> b!108869 m!122823))

(assert (=> b!108871 m!122821))

(assert (=> b!108871 m!122821))

(assert (=> b!108871 m!122823))

(assert (=> b!108200 d!30327))

(declare-fun d!30329 () Bool)

(assert (=> d!30329 (not (contains!820 (+!142 lt!55573 (tuple2!2377 lt!55576 lt!55571)) lt!55572))))

(declare-fun lt!55983 () Unit!3301)

(assert (=> d!30329 (= lt!55983 (choose!681 lt!55573 lt!55576 lt!55571 lt!55572))))

(declare-fun e!70817 () Bool)

(assert (=> d!30329 e!70817))

(declare-fun res!53923 () Bool)

(assert (=> d!30329 (=> (not res!53923) (not e!70817))))

(assert (=> d!30329 (= res!53923 (not (contains!820 lt!55573 lt!55572)))))

(assert (=> d!30329 (= (addStillNotContains!49 lt!55573 lt!55576 lt!55571 lt!55572) lt!55983)))

(declare-fun b!108872 () Bool)

(assert (=> b!108872 (= e!70817 (not (= lt!55576 lt!55572)))))

(assert (= (and d!30329 res!53923) b!108872))

(assert (=> d!30329 m!121665))

(assert (=> d!30329 m!121665))

(assert (=> d!30329 m!121667))

(declare-fun m!122825 () Bool)

(assert (=> d!30329 m!122825))

(declare-fun m!122827 () Bool)

(assert (=> d!30329 m!122827))

(assert (=> b!108200 d!30329))

(declare-fun d!30331 () Bool)

(declare-fun e!70818 () Bool)

(assert (=> d!30331 e!70818))

(declare-fun res!53925 () Bool)

(assert (=> d!30331 (=> (not res!53925) (not e!70818))))

(declare-fun lt!55987 () ListLongMap!1541)

(assert (=> d!30331 (= res!53925 (contains!820 lt!55987 (_1!1199 (tuple2!2377 lt!55576 lt!55571))))))

(declare-fun lt!55986 () List!1604)

(assert (=> d!30331 (= lt!55987 (ListLongMap!1542 lt!55986))))

(declare-fun lt!55984 () Unit!3301)

(declare-fun lt!55985 () Unit!3301)

(assert (=> d!30331 (= lt!55984 lt!55985)))

(assert (=> d!30331 (= (getValueByKey!158 lt!55986 (_1!1199 (tuple2!2377 lt!55576 lt!55571))) (Some!163 (_2!1199 (tuple2!2377 lt!55576 lt!55571))))))

(assert (=> d!30331 (= lt!55985 (lemmaContainsTupThenGetReturnValue!74 lt!55986 (_1!1199 (tuple2!2377 lt!55576 lt!55571)) (_2!1199 (tuple2!2377 lt!55576 lt!55571))))))

(assert (=> d!30331 (= lt!55986 (insertStrictlySorted!77 (toList!786 lt!55573) (_1!1199 (tuple2!2377 lt!55576 lt!55571)) (_2!1199 (tuple2!2377 lt!55576 lt!55571))))))

(assert (=> d!30331 (= (+!142 lt!55573 (tuple2!2377 lt!55576 lt!55571)) lt!55987)))

(declare-fun b!108873 () Bool)

(declare-fun res!53924 () Bool)

(assert (=> b!108873 (=> (not res!53924) (not e!70818))))

(assert (=> b!108873 (= res!53924 (= (getValueByKey!158 (toList!786 lt!55987) (_1!1199 (tuple2!2377 lt!55576 lt!55571))) (Some!163 (_2!1199 (tuple2!2377 lt!55576 lt!55571)))))))

(declare-fun b!108874 () Bool)

(assert (=> b!108874 (= e!70818 (contains!823 (toList!786 lt!55987) (tuple2!2377 lt!55576 lt!55571)))))

(assert (= (and d!30331 res!53925) b!108873))

(assert (= (and b!108873 res!53924) b!108874))

(declare-fun m!122829 () Bool)

(assert (=> d!30331 m!122829))

(declare-fun m!122831 () Bool)

(assert (=> d!30331 m!122831))

(declare-fun m!122833 () Bool)

(assert (=> d!30331 m!122833))

(declare-fun m!122835 () Bool)

(assert (=> d!30331 m!122835))

(declare-fun m!122837 () Bool)

(assert (=> b!108873 m!122837))

(declare-fun m!122839 () Bool)

(assert (=> b!108874 m!122839))

(assert (=> b!108200 d!30331))

(declare-fun d!30333 () Bool)

(declare-fun e!70819 () Bool)

(assert (=> d!30333 e!70819))

(declare-fun res!53927 () Bool)

(assert (=> d!30333 (=> (not res!53927) (not e!70819))))

(declare-fun lt!55991 () ListLongMap!1541)

(assert (=> d!30333 (= res!53927 (contains!820 lt!55991 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!55990 () List!1604)

(assert (=> d!30333 (= lt!55991 (ListLongMap!1542 lt!55990))))

(declare-fun lt!55988 () Unit!3301)

(declare-fun lt!55989 () Unit!3301)

(assert (=> d!30333 (= lt!55988 lt!55989)))

(assert (=> d!30333 (= (getValueByKey!158 lt!55990 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30333 (= lt!55989 (lemmaContainsTupThenGetReturnValue!74 lt!55990 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30333 (= lt!55990 (insertStrictlySorted!77 (toList!786 call!11471) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30333 (= (+!142 call!11471 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!55991)))

(declare-fun b!108875 () Bool)

(declare-fun res!53926 () Bool)

(assert (=> b!108875 (=> (not res!53926) (not e!70819))))

(assert (=> b!108875 (= res!53926 (= (getValueByKey!158 (toList!786 lt!55991) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!108876 () Bool)

(assert (=> b!108876 (= e!70819 (contains!823 (toList!786 lt!55991) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30333 res!53927) b!108875))

(assert (= (and b!108875 res!53926) b!108876))

(declare-fun m!122841 () Bool)

(assert (=> d!30333 m!122841))

(declare-fun m!122843 () Bool)

(assert (=> d!30333 m!122843))

(declare-fun m!122845 () Bool)

(assert (=> d!30333 m!122845))

(declare-fun m!122847 () Bool)

(assert (=> d!30333 m!122847))

(declare-fun m!122849 () Bool)

(assert (=> b!108875 m!122849))

(declare-fun m!122851 () Bool)

(assert (=> b!108876 m!122851))

(assert (=> b!108200 d!30333))

(declare-fun d!30335 () Bool)

(declare-fun lt!55992 () Bool)

(assert (=> d!30335 (= lt!55992 (select (content!112 (toList!786 lt!55736)) (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!70820 () Bool)

(assert (=> d!30335 (= lt!55992 e!70820)))

(declare-fun res!53929 () Bool)

(assert (=> d!30335 (=> (not res!53929) (not e!70820))))

(assert (=> d!30335 (= res!53929 ((_ is Cons!1600) (toList!786 lt!55736)))))

(assert (=> d!30335 (= (contains!823 (toList!786 lt!55736) (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55992)))

(declare-fun b!108877 () Bool)

(declare-fun e!70821 () Bool)

(assert (=> b!108877 (= e!70820 e!70821)))

(declare-fun res!53928 () Bool)

(assert (=> b!108877 (=> res!53928 e!70821)))

(assert (=> b!108877 (= res!53928 (= (h!2198 (toList!786 lt!55736)) (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108878 () Bool)

(assert (=> b!108878 (= e!70821 (contains!823 (t!5712 (toList!786 lt!55736)) (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (= (and d!30335 res!53929) b!108877))

(assert (= (and b!108877 (not res!53928)) b!108878))

(declare-fun m!122853 () Bool)

(assert (=> d!30335 m!122853))

(declare-fun m!122855 () Bool)

(assert (=> d!30335 m!122855))

(declare-fun m!122857 () Bool)

(assert (=> b!108878 m!122857))

(assert (=> b!108354 d!30335))

(declare-fun d!30337 () Bool)

(declare-fun e!70822 () Bool)

(assert (=> d!30337 e!70822))

(declare-fun res!53931 () Bool)

(assert (=> d!30337 (=> (not res!53931) (not e!70822))))

(declare-fun lt!55996 () ListLongMap!1541)

(assert (=> d!30337 (= res!53931 (contains!820 lt!55996 (_1!1199 (ite (or c!18928 c!18925) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))))))

(declare-fun lt!55995 () List!1604)

(assert (=> d!30337 (= lt!55996 (ListLongMap!1542 lt!55995))))

(declare-fun lt!55993 () Unit!3301)

(declare-fun lt!55994 () Unit!3301)

(assert (=> d!30337 (= lt!55993 lt!55994)))

(assert (=> d!30337 (= (getValueByKey!158 lt!55995 (_1!1199 (ite (or c!18928 c!18925) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))) (Some!163 (_2!1199 (ite (or c!18928 c!18925) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))))))

(assert (=> d!30337 (= lt!55994 (lemmaContainsTupThenGetReturnValue!74 lt!55995 (_1!1199 (ite (or c!18928 c!18925) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))) (_2!1199 (ite (or c!18928 c!18925) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))))))

(assert (=> d!30337 (= lt!55995 (insertStrictlySorted!77 (toList!786 (ite c!18928 call!11436 (ite c!18925 call!11432 call!11431))) (_1!1199 (ite (or c!18928 c!18925) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))) (_2!1199 (ite (or c!18928 c!18925) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))))))

(assert (=> d!30337 (= (+!142 (ite c!18928 call!11436 (ite c!18925 call!11432 call!11431)) (ite (or c!18928 c!18925) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))) lt!55996)))

(declare-fun b!108879 () Bool)

(declare-fun res!53930 () Bool)

(assert (=> b!108879 (=> (not res!53930) (not e!70822))))

(assert (=> b!108879 (= res!53930 (= (getValueByKey!158 (toList!786 lt!55996) (_1!1199 (ite (or c!18928 c!18925) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))) (Some!163 (_2!1199 (ite (or c!18928 c!18925) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))))

(declare-fun b!108880 () Bool)

(assert (=> b!108880 (= e!70822 (contains!823 (toList!786 lt!55996) (ite (or c!18928 c!18925) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(assert (= (and d!30337 res!53931) b!108879))

(assert (= (and b!108879 res!53930) b!108880))

(declare-fun m!122859 () Bool)

(assert (=> d!30337 m!122859))

(declare-fun m!122861 () Bool)

(assert (=> d!30337 m!122861))

(declare-fun m!122863 () Bool)

(assert (=> d!30337 m!122863))

(declare-fun m!122865 () Bool)

(assert (=> d!30337 m!122865))

(declare-fun m!122867 () Bool)

(assert (=> b!108879 m!122867))

(declare-fun m!122869 () Bool)

(assert (=> b!108880 m!122869))

(assert (=> bm!11432 d!30337))

(declare-fun b!108884 () Bool)

(declare-fun e!70824 () Option!164)

(assert (=> b!108884 (= e!70824 None!162)))

(declare-fun b!108883 () Bool)

(assert (=> b!108883 (= e!70824 (getValueByKey!158 (t!5712 (toList!786 lt!55512)) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108881 () Bool)

(declare-fun e!70823 () Option!164)

(assert (=> b!108881 (= e!70823 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55512)))))))

(declare-fun c!19205 () Bool)

(declare-fun d!30339 () Bool)

(assert (=> d!30339 (= c!19205 (and ((_ is Cons!1600) (toList!786 lt!55512)) (= (_1!1199 (h!2198 (toList!786 lt!55512))) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30339 (= (getValueByKey!158 (toList!786 lt!55512) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!70823)))

(declare-fun b!108882 () Bool)

(assert (=> b!108882 (= e!70823 e!70824)))

(declare-fun c!19206 () Bool)

(assert (=> b!108882 (= c!19206 (and ((_ is Cons!1600) (toList!786 lt!55512)) (not (= (_1!1199 (h!2198 (toList!786 lt!55512))) (_1!1199 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30339 c!19205) b!108881))

(assert (= (and d!30339 (not c!19205)) b!108882))

(assert (= (and b!108882 c!19206) b!108883))

(assert (= (and b!108882 (not c!19206)) b!108884))

(declare-fun m!122871 () Bool)

(assert (=> b!108883 m!122871))

(assert (=> b!108101 d!30339))

(declare-fun d!30341 () Bool)

(assert (=> d!30341 (= (apply!99 lt!55707 lt!55721) (get!1350 (getValueByKey!158 (toList!786 lt!55707) lt!55721)))))

(declare-fun bs!4477 () Bool)

(assert (= bs!4477 d!30341))

(declare-fun m!122873 () Bool)

(assert (=> bs!4477 m!122873))

(assert (=> bs!4477 m!122873))

(declare-fun m!122875 () Bool)

(assert (=> bs!4477 m!122875))

(assert (=> b!108306 d!30341))

(declare-fun d!30343 () Bool)

(declare-fun e!70825 () Bool)

(assert (=> d!30343 e!70825))

(declare-fun res!53933 () Bool)

(assert (=> d!30343 (=> (not res!53933) (not e!70825))))

(declare-fun lt!56000 () ListLongMap!1541)

(assert (=> d!30343 (= res!53933 (contains!820 lt!56000 (_1!1199 (tuple2!2377 lt!55714 (minValue!2478 newMap!16)))))))

(declare-fun lt!55999 () List!1604)

(assert (=> d!30343 (= lt!56000 (ListLongMap!1542 lt!55999))))

(declare-fun lt!55997 () Unit!3301)

(declare-fun lt!55998 () Unit!3301)

(assert (=> d!30343 (= lt!55997 lt!55998)))

(assert (=> d!30343 (= (getValueByKey!158 lt!55999 (_1!1199 (tuple2!2377 lt!55714 (minValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55714 (minValue!2478 newMap!16)))))))

(assert (=> d!30343 (= lt!55998 (lemmaContainsTupThenGetReturnValue!74 lt!55999 (_1!1199 (tuple2!2377 lt!55714 (minValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55714 (minValue!2478 newMap!16)))))))

(assert (=> d!30343 (= lt!55999 (insertStrictlySorted!77 (toList!786 lt!55709) (_1!1199 (tuple2!2377 lt!55714 (minValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55714 (minValue!2478 newMap!16)))))))

(assert (=> d!30343 (= (+!142 lt!55709 (tuple2!2377 lt!55714 (minValue!2478 newMap!16))) lt!56000)))

(declare-fun b!108885 () Bool)

(declare-fun res!53932 () Bool)

(assert (=> b!108885 (=> (not res!53932) (not e!70825))))

(assert (=> b!108885 (= res!53932 (= (getValueByKey!158 (toList!786 lt!56000) (_1!1199 (tuple2!2377 lt!55714 (minValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55714 (minValue!2478 newMap!16))))))))

(declare-fun b!108886 () Bool)

(assert (=> b!108886 (= e!70825 (contains!823 (toList!786 lt!56000) (tuple2!2377 lt!55714 (minValue!2478 newMap!16))))))

(assert (= (and d!30343 res!53933) b!108885))

(assert (= (and b!108885 res!53932) b!108886))

(declare-fun m!122877 () Bool)

(assert (=> d!30343 m!122877))

(declare-fun m!122879 () Bool)

(assert (=> d!30343 m!122879))

(declare-fun m!122881 () Bool)

(assert (=> d!30343 m!122881))

(declare-fun m!122883 () Bool)

(assert (=> d!30343 m!122883))

(declare-fun m!122885 () Bool)

(assert (=> b!108885 m!122885))

(declare-fun m!122887 () Bool)

(assert (=> b!108886 m!122887))

(assert (=> b!108306 d!30343))

(declare-fun d!30345 () Bool)

(assert (=> d!30345 (= (apply!99 (+!142 lt!55707 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16))) lt!55721) (apply!99 lt!55707 lt!55721))))

(declare-fun lt!56001 () Unit!3301)

(assert (=> d!30345 (= lt!56001 (choose!679 lt!55707 lt!55726 (zeroValue!2478 newMap!16) lt!55721))))

(declare-fun e!70826 () Bool)

(assert (=> d!30345 e!70826))

(declare-fun res!53934 () Bool)

(assert (=> d!30345 (=> (not res!53934) (not e!70826))))

(assert (=> d!30345 (= res!53934 (contains!820 lt!55707 lt!55721))))

(assert (=> d!30345 (= (addApplyDifferent!75 lt!55707 lt!55726 (zeroValue!2478 newMap!16) lt!55721) lt!56001)))

(declare-fun b!108887 () Bool)

(assert (=> b!108887 (= e!70826 (not (= lt!55721 lt!55726)))))

(assert (= (and d!30345 res!53934) b!108887))

(assert (=> d!30345 m!121859))

(assert (=> d!30345 m!121875))

(declare-fun m!122889 () Bool)

(assert (=> d!30345 m!122889))

(declare-fun m!122891 () Bool)

(assert (=> d!30345 m!122891))

(assert (=> d!30345 m!121875))

(assert (=> d!30345 m!121877))

(assert (=> b!108306 d!30345))

(declare-fun d!30347 () Bool)

(assert (=> d!30347 (= (apply!99 (+!142 lt!55705 (tuple2!2377 lt!55706 (minValue!2478 newMap!16))) lt!55708) (apply!99 lt!55705 lt!55708))))

(declare-fun lt!56002 () Unit!3301)

(assert (=> d!30347 (= lt!56002 (choose!679 lt!55705 lt!55706 (minValue!2478 newMap!16) lt!55708))))

(declare-fun e!70827 () Bool)

(assert (=> d!30347 e!70827))

(declare-fun res!53935 () Bool)

(assert (=> d!30347 (=> (not res!53935) (not e!70827))))

(assert (=> d!30347 (= res!53935 (contains!820 lt!55705 lt!55708))))

(assert (=> d!30347 (= (addApplyDifferent!75 lt!55705 lt!55706 (minValue!2478 newMap!16) lt!55708) lt!56002)))

(declare-fun b!108888 () Bool)

(assert (=> b!108888 (= e!70827 (not (= lt!55708 lt!55706)))))

(assert (= (and d!30347 res!53935) b!108888))

(assert (=> d!30347 m!121881))

(assert (=> d!30347 m!121879))

(declare-fun m!122893 () Bool)

(assert (=> d!30347 m!122893))

(declare-fun m!122895 () Bool)

(assert (=> d!30347 m!122895))

(assert (=> d!30347 m!121879))

(assert (=> d!30347 m!121887))

(assert (=> b!108306 d!30347))

(declare-fun d!30349 () Bool)

(assert (=> d!30349 (contains!820 (+!142 lt!55711 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16))) lt!55713)))

(declare-fun lt!56003 () Unit!3301)

(assert (=> d!30349 (= lt!56003 (choose!680 lt!55711 lt!55715 (zeroValue!2478 newMap!16) lt!55713))))

(assert (=> d!30349 (contains!820 lt!55711 lt!55713)))

(assert (=> d!30349 (= (addStillContains!75 lt!55711 lt!55715 (zeroValue!2478 newMap!16) lt!55713) lt!56003)))

(declare-fun bs!4478 () Bool)

(assert (= bs!4478 d!30349))

(assert (=> bs!4478 m!121883))

(assert (=> bs!4478 m!121883))

(assert (=> bs!4478 m!121885))

(declare-fun m!122897 () Bool)

(assert (=> bs!4478 m!122897))

(declare-fun m!122899 () Bool)

(assert (=> bs!4478 m!122899))

(assert (=> b!108306 d!30349))

(declare-fun d!30351 () Bool)

(assert (=> d!30351 (= (apply!99 (+!142 lt!55705 (tuple2!2377 lt!55706 (minValue!2478 newMap!16))) lt!55708) (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55705 (tuple2!2377 lt!55706 (minValue!2478 newMap!16)))) lt!55708)))))

(declare-fun bs!4479 () Bool)

(assert (= bs!4479 d!30351))

(declare-fun m!122901 () Bool)

(assert (=> bs!4479 m!122901))

(assert (=> bs!4479 m!122901))

(declare-fun m!122903 () Bool)

(assert (=> bs!4479 m!122903))

(assert (=> b!108306 d!30351))

(declare-fun d!30353 () Bool)

(assert (=> d!30353 (= (apply!99 lt!55709 lt!55717) (get!1350 (getValueByKey!158 (toList!786 lt!55709) lt!55717)))))

(declare-fun bs!4480 () Bool)

(assert (= bs!4480 d!30353))

(declare-fun m!122905 () Bool)

(assert (=> bs!4480 m!122905))

(assert (=> bs!4480 m!122905))

(declare-fun m!122907 () Bool)

(assert (=> bs!4480 m!122907))

(assert (=> b!108306 d!30353))

(declare-fun d!30355 () Bool)

(assert (=> d!30355 (= (apply!99 (+!142 lt!55709 (tuple2!2377 lt!55714 (minValue!2478 newMap!16))) lt!55717) (apply!99 lt!55709 lt!55717))))

(declare-fun lt!56004 () Unit!3301)

(assert (=> d!30355 (= lt!56004 (choose!679 lt!55709 lt!55714 (minValue!2478 newMap!16) lt!55717))))

(declare-fun e!70828 () Bool)

(assert (=> d!30355 e!70828))

(declare-fun res!53936 () Bool)

(assert (=> d!30355 (=> (not res!53936) (not e!70828))))

(assert (=> d!30355 (= res!53936 (contains!820 lt!55709 lt!55717))))

(assert (=> d!30355 (= (addApplyDifferent!75 lt!55709 lt!55714 (minValue!2478 newMap!16) lt!55717) lt!56004)))

(declare-fun b!108889 () Bool)

(assert (=> b!108889 (= e!70828 (not (= lt!55717 lt!55714)))))

(assert (= (and d!30355 res!53936) b!108889))

(assert (=> d!30355 m!121869))

(assert (=> d!30355 m!121863))

(declare-fun m!122909 () Bool)

(assert (=> d!30355 m!122909))

(declare-fun m!122911 () Bool)

(assert (=> d!30355 m!122911))

(assert (=> d!30355 m!121863))

(assert (=> d!30355 m!121865))

(assert (=> b!108306 d!30355))

(declare-fun d!30357 () Bool)

(assert (=> d!30357 (= (apply!99 (+!142 lt!55707 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16))) lt!55721) (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55707 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16)))) lt!55721)))))

(declare-fun bs!4481 () Bool)

(assert (= bs!4481 d!30357))

(declare-fun m!122913 () Bool)

(assert (=> bs!4481 m!122913))

(assert (=> bs!4481 m!122913))

(declare-fun m!122915 () Bool)

(assert (=> bs!4481 m!122915))

(assert (=> b!108306 d!30357))

(declare-fun d!30359 () Bool)

(assert (=> d!30359 (= (apply!99 lt!55705 lt!55708) (get!1350 (getValueByKey!158 (toList!786 lt!55705) lt!55708)))))

(declare-fun bs!4482 () Bool)

(assert (= bs!4482 d!30359))

(declare-fun m!122917 () Bool)

(assert (=> bs!4482 m!122917))

(assert (=> bs!4482 m!122917))

(declare-fun m!122919 () Bool)

(assert (=> bs!4482 m!122919))

(assert (=> b!108306 d!30359))

(declare-fun d!30361 () Bool)

(declare-fun e!70829 () Bool)

(assert (=> d!30361 e!70829))

(declare-fun res!53938 () Bool)

(assert (=> d!30361 (=> (not res!53938) (not e!70829))))

(declare-fun lt!56008 () ListLongMap!1541)

(assert (=> d!30361 (= res!53938 (contains!820 lt!56008 (_1!1199 (tuple2!2377 lt!55706 (minValue!2478 newMap!16)))))))

(declare-fun lt!56007 () List!1604)

(assert (=> d!30361 (= lt!56008 (ListLongMap!1542 lt!56007))))

(declare-fun lt!56005 () Unit!3301)

(declare-fun lt!56006 () Unit!3301)

(assert (=> d!30361 (= lt!56005 lt!56006)))

(assert (=> d!30361 (= (getValueByKey!158 lt!56007 (_1!1199 (tuple2!2377 lt!55706 (minValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55706 (minValue!2478 newMap!16)))))))

(assert (=> d!30361 (= lt!56006 (lemmaContainsTupThenGetReturnValue!74 lt!56007 (_1!1199 (tuple2!2377 lt!55706 (minValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55706 (minValue!2478 newMap!16)))))))

(assert (=> d!30361 (= lt!56007 (insertStrictlySorted!77 (toList!786 lt!55705) (_1!1199 (tuple2!2377 lt!55706 (minValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55706 (minValue!2478 newMap!16)))))))

(assert (=> d!30361 (= (+!142 lt!55705 (tuple2!2377 lt!55706 (minValue!2478 newMap!16))) lt!56008)))

(declare-fun b!108890 () Bool)

(declare-fun res!53937 () Bool)

(assert (=> b!108890 (=> (not res!53937) (not e!70829))))

(assert (=> b!108890 (= res!53937 (= (getValueByKey!158 (toList!786 lt!56008) (_1!1199 (tuple2!2377 lt!55706 (minValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55706 (minValue!2478 newMap!16))))))))

(declare-fun b!108891 () Bool)

(assert (=> b!108891 (= e!70829 (contains!823 (toList!786 lt!56008) (tuple2!2377 lt!55706 (minValue!2478 newMap!16))))))

(assert (= (and d!30361 res!53938) b!108890))

(assert (= (and b!108890 res!53937) b!108891))

(declare-fun m!122921 () Bool)

(assert (=> d!30361 m!122921))

(declare-fun m!122923 () Bool)

(assert (=> d!30361 m!122923))

(declare-fun m!122925 () Bool)

(assert (=> d!30361 m!122925))

(declare-fun m!122927 () Bool)

(assert (=> d!30361 m!122927))

(declare-fun m!122929 () Bool)

(assert (=> b!108890 m!122929))

(declare-fun m!122931 () Bool)

(assert (=> b!108891 m!122931))

(assert (=> b!108306 d!30361))

(declare-fun d!30363 () Bool)

(declare-fun e!70830 () Bool)

(assert (=> d!30363 e!70830))

(declare-fun res!53940 () Bool)

(assert (=> d!30363 (=> (not res!53940) (not e!70830))))

(declare-fun lt!56012 () ListLongMap!1541)

(assert (=> d!30363 (= res!53940 (contains!820 lt!56012 (_1!1199 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16)))))))

(declare-fun lt!56011 () List!1604)

(assert (=> d!30363 (= lt!56012 (ListLongMap!1542 lt!56011))))

(declare-fun lt!56009 () Unit!3301)

(declare-fun lt!56010 () Unit!3301)

(assert (=> d!30363 (= lt!56009 lt!56010)))

(assert (=> d!30363 (= (getValueByKey!158 lt!56011 (_1!1199 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30363 (= lt!56010 (lemmaContainsTupThenGetReturnValue!74 lt!56011 (_1!1199 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30363 (= lt!56011 (insertStrictlySorted!77 (toList!786 lt!55707) (_1!1199 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30363 (= (+!142 lt!55707 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16))) lt!56012)))

(declare-fun b!108892 () Bool)

(declare-fun res!53939 () Bool)

(assert (=> b!108892 (=> (not res!53939) (not e!70830))))

(assert (=> b!108892 (= res!53939 (= (getValueByKey!158 (toList!786 lt!56012) (_1!1199 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16))))))))

(declare-fun b!108893 () Bool)

(assert (=> b!108893 (= e!70830 (contains!823 (toList!786 lt!56012) (tuple2!2377 lt!55726 (zeroValue!2478 newMap!16))))))

(assert (= (and d!30363 res!53940) b!108892))

(assert (= (and b!108892 res!53939) b!108893))

(declare-fun m!122933 () Bool)

(assert (=> d!30363 m!122933))

(declare-fun m!122935 () Bool)

(assert (=> d!30363 m!122935))

(declare-fun m!122937 () Bool)

(assert (=> d!30363 m!122937))

(declare-fun m!122939 () Bool)

(assert (=> d!30363 m!122939))

(declare-fun m!122941 () Bool)

(assert (=> b!108892 m!122941))

(declare-fun m!122943 () Bool)

(assert (=> b!108893 m!122943))

(assert (=> b!108306 d!30363))

(declare-fun d!30365 () Bool)

(declare-fun e!70831 () Bool)

(assert (=> d!30365 e!70831))

(declare-fun res!53941 () Bool)

(assert (=> d!30365 (=> res!53941 e!70831)))

(declare-fun lt!56013 () Bool)

(assert (=> d!30365 (= res!53941 (not lt!56013))))

(declare-fun lt!56016 () Bool)

(assert (=> d!30365 (= lt!56013 lt!56016)))

(declare-fun lt!56015 () Unit!3301)

(declare-fun e!70832 () Unit!3301)

(assert (=> d!30365 (= lt!56015 e!70832)))

(declare-fun c!19207 () Bool)

(assert (=> d!30365 (= c!19207 lt!56016)))

(assert (=> d!30365 (= lt!56016 (containsKey!161 (toList!786 (+!142 lt!55711 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16)))) lt!55713))))

(assert (=> d!30365 (= (contains!820 (+!142 lt!55711 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16))) lt!55713) lt!56013)))

(declare-fun b!108894 () Bool)

(declare-fun lt!56014 () Unit!3301)

(assert (=> b!108894 (= e!70832 lt!56014)))

(assert (=> b!108894 (= lt!56014 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (+!142 lt!55711 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16)))) lt!55713))))

(assert (=> b!108894 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55711 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16)))) lt!55713))))

(declare-fun b!108895 () Bool)

(declare-fun Unit!3355 () Unit!3301)

(assert (=> b!108895 (= e!70832 Unit!3355)))

(declare-fun b!108896 () Bool)

(assert (=> b!108896 (= e!70831 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55711 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16)))) lt!55713)))))

(assert (= (and d!30365 c!19207) b!108894))

(assert (= (and d!30365 (not c!19207)) b!108895))

(assert (= (and d!30365 (not res!53941)) b!108896))

(declare-fun m!122945 () Bool)

(assert (=> d!30365 m!122945))

(declare-fun m!122947 () Bool)

(assert (=> b!108894 m!122947))

(declare-fun m!122949 () Bool)

(assert (=> b!108894 m!122949))

(assert (=> b!108894 m!122949))

(declare-fun m!122951 () Bool)

(assert (=> b!108894 m!122951))

(assert (=> b!108896 m!122949))

(assert (=> b!108896 m!122949))

(assert (=> b!108896 m!122951))

(assert (=> b!108306 d!30365))

(declare-fun d!30367 () Bool)

(declare-fun e!70833 () Bool)

(assert (=> d!30367 e!70833))

(declare-fun res!53943 () Bool)

(assert (=> d!30367 (=> (not res!53943) (not e!70833))))

(declare-fun lt!56020 () ListLongMap!1541)

(assert (=> d!30367 (= res!53943 (contains!820 lt!56020 (_1!1199 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16)))))))

(declare-fun lt!56019 () List!1604)

(assert (=> d!30367 (= lt!56020 (ListLongMap!1542 lt!56019))))

(declare-fun lt!56017 () Unit!3301)

(declare-fun lt!56018 () Unit!3301)

(assert (=> d!30367 (= lt!56017 lt!56018)))

(assert (=> d!30367 (= (getValueByKey!158 lt!56019 (_1!1199 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30367 (= lt!56018 (lemmaContainsTupThenGetReturnValue!74 lt!56019 (_1!1199 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30367 (= lt!56019 (insertStrictlySorted!77 (toList!786 lt!55711) (_1!1199 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16))) (_2!1199 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30367 (= (+!142 lt!55711 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16))) lt!56020)))

(declare-fun b!108897 () Bool)

(declare-fun res!53942 () Bool)

(assert (=> b!108897 (=> (not res!53942) (not e!70833))))

(assert (=> b!108897 (= res!53942 (= (getValueByKey!158 (toList!786 lt!56020) (_1!1199 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16))))))))

(declare-fun b!108898 () Bool)

(assert (=> b!108898 (= e!70833 (contains!823 (toList!786 lt!56020) (tuple2!2377 lt!55715 (zeroValue!2478 newMap!16))))))

(assert (= (and d!30367 res!53943) b!108897))

(assert (= (and b!108897 res!53942) b!108898))

(declare-fun m!122953 () Bool)

(assert (=> d!30367 m!122953))

(declare-fun m!122955 () Bool)

(assert (=> d!30367 m!122955))

(declare-fun m!122957 () Bool)

(assert (=> d!30367 m!122957))

(declare-fun m!122959 () Bool)

(assert (=> d!30367 m!122959))

(declare-fun m!122961 () Bool)

(assert (=> b!108897 m!122961))

(declare-fun m!122963 () Bool)

(assert (=> b!108898 m!122963))

(assert (=> b!108306 d!30367))

(declare-fun d!30369 () Bool)

(assert (=> d!30369 (= (apply!99 (+!142 lt!55709 (tuple2!2377 lt!55714 (minValue!2478 newMap!16))) lt!55717) (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55709 (tuple2!2377 lt!55714 (minValue!2478 newMap!16)))) lt!55717)))))

(declare-fun bs!4483 () Bool)

(assert (= bs!4483 d!30369))

(declare-fun m!122965 () Bool)

(assert (=> bs!4483 m!122965))

(assert (=> bs!4483 m!122965))

(declare-fun m!122967 () Bool)

(assert (=> bs!4483 m!122967))

(assert (=> b!108306 d!30369))

(declare-fun b!108899 () Bool)

(declare-fun e!70835 () Bool)

(declare-fun lt!56021 () ListLongMap!1541)

(assert (=> b!108899 (= e!70835 (= lt!56021 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16))))))

(declare-fun b!108900 () Bool)

(declare-fun e!70834 () Bool)

(declare-fun e!70839 () Bool)

(assert (=> b!108900 (= e!70834 e!70839)))

(assert (=> b!108900 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun res!53945 () Bool)

(assert (=> b!108900 (= res!53945 (contains!820 lt!56021 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108900 (=> (not res!53945) (not e!70839))))

(declare-fun b!108901 () Bool)

(declare-fun e!70836 () ListLongMap!1541)

(declare-fun e!70837 () ListLongMap!1541)

(assert (=> b!108901 (= e!70836 e!70837)))

(declare-fun c!19208 () Bool)

(assert (=> b!108901 (= c!19208 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!30371 () Bool)

(declare-fun e!70838 () Bool)

(assert (=> d!30371 e!70838))

(declare-fun res!53946 () Bool)

(assert (=> d!30371 (=> (not res!53946) (not e!70838))))

(assert (=> d!30371 (= res!53946 (not (contains!820 lt!56021 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30371 (= lt!56021 e!70836)))

(declare-fun c!19209 () Bool)

(assert (=> d!30371 (= c!19209 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30371 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30371 (= (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!56021)))

(declare-fun b!108902 () Bool)

(assert (=> b!108902 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> b!108902 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 (_values!2588 newMap!16))))))

(assert (=> b!108902 (= e!70839 (= (apply!99 lt!56021 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108903 () Bool)

(assert (=> b!108903 (= e!70838 e!70834)))

(declare-fun c!19210 () Bool)

(declare-fun e!70840 () Bool)

(assert (=> b!108903 (= c!19210 e!70840)))

(declare-fun res!53947 () Bool)

(assert (=> b!108903 (=> (not res!53947) (not e!70840))))

(assert (=> b!108903 (= res!53947 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108904 () Bool)

(declare-fun res!53944 () Bool)

(assert (=> b!108904 (=> (not res!53944) (not e!70838))))

(assert (=> b!108904 (= res!53944 (not (contains!820 lt!56021 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108905 () Bool)

(assert (=> b!108905 (= e!70836 (ListLongMap!1542 Nil!1601))))

(declare-fun b!108906 () Bool)

(declare-fun lt!56025 () Unit!3301)

(declare-fun lt!56026 () Unit!3301)

(assert (=> b!108906 (= lt!56025 lt!56026)))

(declare-fun lt!56022 () V!3233)

(declare-fun lt!56023 () (_ BitVec 64))

(declare-fun lt!56027 () (_ BitVec 64))

(declare-fun lt!56024 () ListLongMap!1541)

(assert (=> b!108906 (not (contains!820 (+!142 lt!56024 (tuple2!2377 lt!56027 lt!56022)) lt!56023))))

(assert (=> b!108906 (= lt!56026 (addStillNotContains!49 lt!56024 lt!56027 lt!56022 lt!56023))))

(assert (=> b!108906 (= lt!56023 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108906 (= lt!56022 (get!1345 (select (arr!2067 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108906 (= lt!56027 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11549 () ListLongMap!1541)

(assert (=> b!108906 (= lt!56024 call!11549)))

(assert (=> b!108906 (= e!70837 (+!142 call!11549 (tuple2!2377 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) (get!1345 (select (arr!2067 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108907 () Bool)

(assert (=> b!108907 (= e!70840 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108907 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!108908 () Bool)

(assert (=> b!108908 (= e!70834 e!70835)))

(declare-fun c!19211 () Bool)

(assert (=> b!108908 (= c!19211 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun bm!11546 () Bool)

(assert (=> bm!11546 (= call!11549 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16)))))

(declare-fun b!108909 () Bool)

(assert (=> b!108909 (= e!70837 call!11549)))

(declare-fun b!108910 () Bool)

(assert (=> b!108910 (= e!70835 (isEmpty!379 lt!56021))))

(assert (= (and d!30371 c!19209) b!108905))

(assert (= (and d!30371 (not c!19209)) b!108901))

(assert (= (and b!108901 c!19208) b!108906))

(assert (= (and b!108901 (not c!19208)) b!108909))

(assert (= (or b!108906 b!108909) bm!11546))

(assert (= (and d!30371 res!53946) b!108904))

(assert (= (and b!108904 res!53944) b!108903))

(assert (= (and b!108903 res!53947) b!108907))

(assert (= (and b!108903 c!19210) b!108900))

(assert (= (and b!108903 (not c!19210)) b!108908))

(assert (= (and b!108900 res!53945) b!108902))

(assert (= (and b!108908 c!19211) b!108899))

(assert (= (and b!108908 (not c!19211)) b!108910))

(declare-fun b_lambda!4873 () Bool)

(assert (=> (not b_lambda!4873) (not b!108902)))

(assert (=> b!108902 t!5726))

(declare-fun b_and!6721 () Bool)

(assert (= b_and!6717 (and (=> t!5726 result!3505) b_and!6721)))

(assert (=> b!108902 t!5728))

(declare-fun b_and!6723 () Bool)

(assert (= b_and!6719 (and (=> t!5728 result!3507) b_and!6723)))

(declare-fun b_lambda!4875 () Bool)

(assert (=> (not b_lambda!4875) (not b!108906)))

(assert (=> b!108906 t!5726))

(declare-fun b_and!6725 () Bool)

(assert (= b_and!6721 (and (=> t!5726 result!3505) b_and!6725)))

(assert (=> b!108906 t!5728))

(declare-fun b_and!6727 () Bool)

(assert (= b_and!6723 (and (=> t!5728 result!3507) b_and!6727)))

(declare-fun m!122969 () Bool)

(assert (=> b!108910 m!122969))

(declare-fun m!122971 () Bool)

(assert (=> b!108899 m!122971))

(assert (=> b!108900 m!121169))

(assert (=> b!108900 m!121169))

(declare-fun m!122973 () Bool)

(assert (=> b!108900 m!122973))

(assert (=> b!108901 m!121169))

(assert (=> b!108901 m!121169))

(assert (=> b!108901 m!121175))

(assert (=> bm!11546 m!122971))

(assert (=> b!108907 m!121169))

(assert (=> b!108907 m!121169))

(assert (=> b!108907 m!121175))

(declare-fun m!122975 () Bool)

(assert (=> b!108906 m!122975))

(declare-fun m!122977 () Bool)

(assert (=> b!108906 m!122977))

(assert (=> b!108906 m!121891))

(assert (=> b!108906 m!122975))

(declare-fun m!122979 () Bool)

(assert (=> b!108906 m!122979))

(declare-fun m!122981 () Bool)

(assert (=> b!108906 m!122981))

(assert (=> b!108906 m!121217))

(assert (=> b!108906 m!121169))

(assert (=> b!108906 m!121891))

(assert (=> b!108906 m!121217))

(assert (=> b!108906 m!121893))

(declare-fun m!122983 () Bool)

(assert (=> b!108904 m!122983))

(declare-fun m!122985 () Bool)

(assert (=> d!30371 m!122985))

(assert (=> d!30371 m!121179))

(assert (=> b!108902 m!121169))

(declare-fun m!122987 () Bool)

(assert (=> b!108902 m!122987))

(assert (=> b!108902 m!121891))

(assert (=> b!108902 m!121217))

(assert (=> b!108902 m!121169))

(assert (=> b!108902 m!121891))

(assert (=> b!108902 m!121217))

(assert (=> b!108902 m!121893))

(assert (=> b!108306 d!30371))

(assert (=> d!29881 d!29879))

(declare-fun d!30373 () Bool)

(assert (=> d!30373 (= (getValueByKey!158 lt!55290 (_1!1199 lt!55092)) (Some!163 (_2!1199 lt!55092)))))

(assert (=> d!30373 true))

(declare-fun _$22!439 () Unit!3301)

(assert (=> d!30373 (= (choose!677 lt!55290 (_1!1199 lt!55092) (_2!1199 lt!55092)) _$22!439)))

(declare-fun bs!4484 () Bool)

(assert (= bs!4484 d!30373))

(assert (=> bs!4484 m!121015))

(assert (=> d!29881 d!30373))

(declare-fun d!30375 () Bool)

(declare-fun res!53948 () Bool)

(declare-fun e!70841 () Bool)

(assert (=> d!30375 (=> res!53948 e!70841)))

(assert (=> d!30375 (= res!53948 (or ((_ is Nil!1601) lt!55290) ((_ is Nil!1601) (t!5712 lt!55290))))))

(assert (=> d!30375 (= (isStrictlySorted!297 lt!55290) e!70841)))

(declare-fun b!108911 () Bool)

(declare-fun e!70842 () Bool)

(assert (=> b!108911 (= e!70841 e!70842)))

(declare-fun res!53949 () Bool)

(assert (=> b!108911 (=> (not res!53949) (not e!70842))))

(assert (=> b!108911 (= res!53949 (bvslt (_1!1199 (h!2198 lt!55290)) (_1!1199 (h!2198 (t!5712 lt!55290)))))))

(declare-fun b!108912 () Bool)

(assert (=> b!108912 (= e!70842 (isStrictlySorted!297 (t!5712 lt!55290)))))

(assert (= (and d!30375 (not res!53948)) b!108911))

(assert (= (and b!108911 res!53949) b!108912))

(declare-fun m!122989 () Bool)

(assert (=> b!108912 m!122989))

(assert (=> d!29881 d!30375))

(declare-fun b!108916 () Bool)

(declare-fun e!70844 () Option!164)

(assert (=> b!108916 (= e!70844 None!162)))

(declare-fun b!108915 () Bool)

(assert (=> b!108915 (= e!70844 (getValueByKey!158 (t!5712 (t!5712 (toList!786 lt!55316))) (_1!1199 lt!55093)))))

(declare-fun b!108913 () Bool)

(declare-fun e!70843 () Option!164)

(assert (=> b!108913 (= e!70843 (Some!163 (_2!1199 (h!2198 (t!5712 (toList!786 lt!55316))))))))

(declare-fun d!30377 () Bool)

(declare-fun c!19212 () Bool)

(assert (=> d!30377 (= c!19212 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55316))) (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55316)))) (_1!1199 lt!55093))))))

(assert (=> d!30377 (= (getValueByKey!158 (t!5712 (toList!786 lt!55316)) (_1!1199 lt!55093)) e!70843)))

(declare-fun b!108914 () Bool)

(assert (=> b!108914 (= e!70843 e!70844)))

(declare-fun c!19213 () Bool)

(assert (=> b!108914 (= c!19213 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55316))) (not (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55316)))) (_1!1199 lt!55093)))))))

(assert (= (and d!30377 c!19212) b!108913))

(assert (= (and d!30377 (not c!19212)) b!108914))

(assert (= (and b!108914 c!19213) b!108915))

(assert (= (and b!108914 (not c!19213)) b!108916))

(declare-fun m!122991 () Bool)

(assert (=> b!108915 m!122991))

(assert (=> b!108224 d!30377))

(declare-fun d!30379 () Bool)

(declare-fun res!53950 () Bool)

(declare-fun e!70845 () Bool)

(assert (=> d!30379 (=> res!53950 e!70845)))

(assert (=> d!30379 (= res!53950 (and ((_ is Cons!1600) (toList!786 lt!55320)) (= (_1!1199 (h!2198 (toList!786 lt!55320))) (_1!1199 lt!55092))))))

(assert (=> d!30379 (= (containsKey!161 (toList!786 lt!55320) (_1!1199 lt!55092)) e!70845)))

(declare-fun b!108917 () Bool)

(declare-fun e!70846 () Bool)

(assert (=> b!108917 (= e!70845 e!70846)))

(declare-fun res!53951 () Bool)

(assert (=> b!108917 (=> (not res!53951) (not e!70846))))

(assert (=> b!108917 (= res!53951 (and (or (not ((_ is Cons!1600) (toList!786 lt!55320))) (bvsle (_1!1199 (h!2198 (toList!786 lt!55320))) (_1!1199 lt!55092))) ((_ is Cons!1600) (toList!786 lt!55320)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55320))) (_1!1199 lt!55092))))))

(declare-fun b!108918 () Bool)

(assert (=> b!108918 (= e!70846 (containsKey!161 (t!5712 (toList!786 lt!55320)) (_1!1199 lt!55092)))))

(assert (= (and d!30379 (not res!53950)) b!108917))

(assert (= (and b!108917 res!53951) b!108918))

(declare-fun m!122993 () Bool)

(assert (=> b!108918 m!122993))

(assert (=> d!29867 d!30379))

(declare-fun b!108922 () Bool)

(declare-fun e!70848 () Option!164)

(assert (=> b!108922 (= e!70848 None!162)))

(declare-fun b!108921 () Bool)

(assert (=> b!108921 (= e!70848 (getValueByKey!158 (t!5712 (toList!786 lt!55431)) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!108919 () Bool)

(declare-fun e!70847 () Option!164)

(assert (=> b!108919 (= e!70847 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55431)))))))

(declare-fun d!30381 () Bool)

(declare-fun c!19214 () Bool)

(assert (=> d!30381 (= c!19214 (and ((_ is Cons!1600) (toList!786 lt!55431)) (= (_1!1199 (h!2198 (toList!786 lt!55431))) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(assert (=> d!30381 (= (getValueByKey!158 (toList!786 lt!55431) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) e!70847)))

(declare-fun b!108920 () Bool)

(assert (=> b!108920 (= e!70847 e!70848)))

(declare-fun c!19215 () Bool)

(assert (=> b!108920 (= c!19215 (and ((_ is Cons!1600) (toList!786 lt!55431)) (not (= (_1!1199 (h!2198 (toList!786 lt!55431))) (_1!1199 (ite c!18886 (ite c!18882 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))))

(assert (= (and d!30381 c!19214) b!108919))

(assert (= (and d!30381 (not c!19214)) b!108920))

(assert (= (and b!108920 c!19215) b!108921))

(assert (= (and b!108920 (not c!19215)) b!108922))

(declare-fun m!122995 () Bool)

(assert (=> b!108921 m!122995))

(assert (=> b!107937 d!30381))

(declare-fun d!30383 () Bool)

(assert (=> d!30383 (= (isDefined!110 (getValueByKey!158 (toList!786 call!11389) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264))))) (not (isEmpty!380 (getValueByKey!158 (toList!786 call!11389) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))))))

(declare-fun bs!4485 () Bool)

(assert (= bs!4485 d!30383))

(assert (=> bs!4485 m!121719))

(declare-fun m!122997 () Bool)

(assert (=> bs!4485 m!122997))

(assert (=> b!108221 d!30383))

(declare-fun b!108926 () Bool)

(declare-fun e!70850 () Option!164)

(assert (=> b!108926 (= e!70850 None!162)))

(declare-fun b!108925 () Bool)

(assert (=> b!108925 (= e!70850 (getValueByKey!158 (t!5712 (toList!786 call!11389)) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))))

(declare-fun b!108923 () Bool)

(declare-fun e!70849 () Option!164)

(assert (=> b!108923 (= e!70849 (Some!163 (_2!1199 (h!2198 (toList!786 call!11389)))))))

(declare-fun c!19216 () Bool)

(declare-fun d!30385 () Bool)

(assert (=> d!30385 (= c!19216 (and ((_ is Cons!1600) (toList!786 call!11389)) (= (_1!1199 (h!2198 (toList!786 call!11389))) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264))))))))

(assert (=> d!30385 (= (getValueByKey!158 (toList!786 call!11389) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))) e!70849)))

(declare-fun b!108924 () Bool)

(assert (=> b!108924 (= e!70849 e!70850)))

(declare-fun c!19217 () Bool)

(assert (=> b!108924 (= c!19217 (and ((_ is Cons!1600) (toList!786 call!11389)) (not (= (_1!1199 (h!2198 (toList!786 call!11389))) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))))))

(assert (= (and d!30385 c!19216) b!108923))

(assert (= (and d!30385 (not c!19216)) b!108924))

(assert (= (and b!108924 c!19217) b!108925))

(assert (= (and b!108924 (not c!19217)) b!108926))

(declare-fun m!122999 () Bool)

(assert (=> b!108925 m!122999))

(assert (=> b!108221 d!30385))

(assert (=> bm!11457 d!30011))

(declare-fun b!108927 () Bool)

(declare-fun e!70852 () List!1604)

(declare-fun call!11552 () List!1604)

(assert (=> b!108927 (= e!70852 call!11552)))

(declare-fun b!108929 () Bool)

(declare-fun e!70851 () List!1604)

(assert (=> b!108929 (= e!70852 e!70851)))

(declare-fun c!19220 () Bool)

(assert (=> b!108929 (= c!19220 (and ((_ is Cons!1600) (t!5712 (toList!786 (+!142 lt!55096 lt!55093)))) (= (_1!1199 (h!2198 (t!5712 (toList!786 (+!142 lt!55096 lt!55093))))) (_1!1199 lt!55092))))))

(declare-fun b!108930 () Bool)

(declare-fun call!11550 () List!1604)

(assert (=> b!108930 (= e!70851 call!11550)))

(declare-fun b!108931 () Bool)

(declare-fun e!70855 () List!1604)

(assert (=> b!108931 (= e!70855 (insertStrictlySorted!77 (t!5712 (t!5712 (toList!786 (+!142 lt!55096 lt!55093)))) (_1!1199 lt!55092) (_2!1199 lt!55092)))))

(declare-fun c!19219 () Bool)

(declare-fun b!108932 () Bool)

(assert (=> b!108932 (= e!70855 (ite c!19220 (t!5712 (t!5712 (toList!786 (+!142 lt!55096 lt!55093)))) (ite c!19219 (Cons!1600 (h!2198 (t!5712 (toList!786 (+!142 lt!55096 lt!55093)))) (t!5712 (t!5712 (toList!786 (+!142 lt!55096 lt!55093))))) Nil!1601)))))

(declare-fun b!108933 () Bool)

(declare-fun e!70853 () Bool)

(declare-fun lt!56028 () List!1604)

(assert (=> b!108933 (= e!70853 (contains!823 lt!56028 (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(declare-fun bm!11547 () Bool)

(assert (=> bm!11547 (= call!11550 call!11552)))

(declare-fun b!108934 () Bool)

(assert (=> b!108934 (= c!19219 (and ((_ is Cons!1600) (t!5712 (toList!786 (+!142 lt!55096 lt!55093)))) (bvsgt (_1!1199 (h!2198 (t!5712 (toList!786 (+!142 lt!55096 lt!55093))))) (_1!1199 lt!55092))))))

(declare-fun e!70854 () List!1604)

(assert (=> b!108934 (= e!70851 e!70854)))

(declare-fun b!108935 () Bool)

(declare-fun call!11551 () List!1604)

(assert (=> b!108935 (= e!70854 call!11551)))

(declare-fun bm!11548 () Bool)

(declare-fun c!19218 () Bool)

(assert (=> bm!11548 (= call!11552 ($colon$colon!81 e!70855 (ite c!19218 (h!2198 (t!5712 (toList!786 (+!142 lt!55096 lt!55093)))) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092)))))))

(declare-fun c!19221 () Bool)

(assert (=> bm!11548 (= c!19221 c!19218)))

(declare-fun b!108928 () Bool)

(declare-fun res!53953 () Bool)

(assert (=> b!108928 (=> (not res!53953) (not e!70853))))

(assert (=> b!108928 (= res!53953 (containsKey!161 lt!56028 (_1!1199 lt!55092)))))

(declare-fun d!30387 () Bool)

(assert (=> d!30387 e!70853))

(declare-fun res!53952 () Bool)

(assert (=> d!30387 (=> (not res!53952) (not e!70853))))

(assert (=> d!30387 (= res!53952 (isStrictlySorted!297 lt!56028))))

(assert (=> d!30387 (= lt!56028 e!70852)))

(assert (=> d!30387 (= c!19218 (and ((_ is Cons!1600) (t!5712 (toList!786 (+!142 lt!55096 lt!55093)))) (bvslt (_1!1199 (h!2198 (t!5712 (toList!786 (+!142 lt!55096 lt!55093))))) (_1!1199 lt!55092))))))

(assert (=> d!30387 (isStrictlySorted!297 (t!5712 (toList!786 (+!142 lt!55096 lt!55093))))))

(assert (=> d!30387 (= (insertStrictlySorted!77 (t!5712 (toList!786 (+!142 lt!55096 lt!55093))) (_1!1199 lt!55092) (_2!1199 lt!55092)) lt!56028)))

(declare-fun bm!11549 () Bool)

(assert (=> bm!11549 (= call!11551 call!11550)))

(declare-fun b!108936 () Bool)

(assert (=> b!108936 (= e!70854 call!11551)))

(assert (= (and d!30387 c!19218) b!108927))

(assert (= (and d!30387 (not c!19218)) b!108929))

(assert (= (and b!108929 c!19220) b!108930))

(assert (= (and b!108929 (not c!19220)) b!108934))

(assert (= (and b!108934 c!19219) b!108935))

(assert (= (and b!108934 (not c!19219)) b!108936))

(assert (= (or b!108935 b!108936) bm!11549))

(assert (= (or b!108930 bm!11549) bm!11547))

(assert (= (or b!108927 bm!11547) bm!11548))

(assert (= (and bm!11548 c!19221) b!108931))

(assert (= (and bm!11548 (not c!19221)) b!108932))

(assert (= (and d!30387 res!53952) b!108928))

(assert (= (and b!108928 res!53953) b!108933))

(declare-fun m!123001 () Bool)

(assert (=> d!30387 m!123001))

(declare-fun m!123003 () Bool)

(assert (=> d!30387 m!123003))

(declare-fun m!123005 () Bool)

(assert (=> bm!11548 m!123005))

(declare-fun m!123007 () Bool)

(assert (=> b!108931 m!123007))

(declare-fun m!123009 () Bool)

(assert (=> b!108933 m!123009))

(declare-fun m!123011 () Bool)

(assert (=> b!108928 m!123011))

(assert (=> b!108009 d!30387))

(declare-fun d!30389 () Bool)

(declare-fun res!53955 () Bool)

(declare-fun e!70856 () Bool)

(assert (=> d!30389 (=> (not res!53955) (not e!70856))))

(assert (=> d!30389 (= res!53955 (validMask!0 (mask!6763 (_2!1200 lt!55269))))))

(assert (=> d!30389 (= (simpleValid!75 (_2!1200 lt!55269)) e!70856)))

(declare-fun b!108939 () Bool)

(declare-fun res!53956 () Bool)

(assert (=> b!108939 (=> (not res!53956) (not e!70856))))

(assert (=> b!108939 (= res!53956 (= (size!2328 (_2!1200 lt!55269)) (bvadd (_size!504 (_2!1200 lt!55269)) (bvsdiv (bvadd (extraKeys!2406 (_2!1200 lt!55269)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!108940 () Bool)

(assert (=> b!108940 (= e!70856 (and (bvsge (extraKeys!2406 (_2!1200 lt!55269)) #b00000000000000000000000000000000) (bvsle (extraKeys!2406 (_2!1200 lt!55269)) #b00000000000000000000000000000011) (bvsge (_vacant!504 (_2!1200 lt!55269)) #b00000000000000000000000000000000)))))

(declare-fun b!108938 () Bool)

(declare-fun res!53954 () Bool)

(assert (=> b!108938 (=> (not res!53954) (not e!70856))))

(assert (=> b!108938 (= res!53954 (bvsge (size!2328 (_2!1200 lt!55269)) (_size!504 (_2!1200 lt!55269))))))

(declare-fun b!108937 () Bool)

(declare-fun res!53957 () Bool)

(assert (=> b!108937 (=> (not res!53957) (not e!70856))))

(assert (=> b!108937 (= res!53957 (and (= (size!2323 (_values!2588 (_2!1200 lt!55269))) (bvadd (mask!6763 (_2!1200 lt!55269)) #b00000000000000000000000000000001)) (= (size!2322 (_keys!4315 (_2!1200 lt!55269))) (size!2323 (_values!2588 (_2!1200 lt!55269)))) (bvsge (_size!504 (_2!1200 lt!55269)) #b00000000000000000000000000000000) (bvsle (_size!504 (_2!1200 lt!55269)) (bvadd (mask!6763 (_2!1200 lt!55269)) #b00000000000000000000000000000001))))))

(assert (= (and d!30389 res!53955) b!108937))

(assert (= (and b!108937 res!53957) b!108938))

(assert (= (and b!108938 res!53954) b!108939))

(assert (= (and b!108939 res!53956) b!108940))

(assert (=> d!30389 m!122141))

(declare-fun m!123013 () Bool)

(assert (=> b!108939 m!123013))

(assert (=> b!108938 m!123013))

(assert (=> d!29887 d!30389))

(declare-fun d!30391 () Bool)

(assert (=> d!30391 (= (apply!99 lt!55410 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1350 (getValueByKey!158 (toList!786 lt!55410) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4486 () Bool)

(assert (= bs!4486 d!30391))

(assert (=> bs!4486 m!121169))

(declare-fun m!123015 () Bool)

(assert (=> bs!4486 m!123015))

(assert (=> bs!4486 m!123015))

(declare-fun m!123017 () Bool)

(assert (=> bs!4486 m!123017))

(assert (=> b!107923 d!30391))

(declare-fun c!19222 () Bool)

(declare-fun d!30393 () Bool)

(assert (=> d!30393 (= c!19222 ((_ is ValueCellFull!1001) (select (arr!2067 (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257)) #b00000000000000000000000000000000)))))

(declare-fun e!70857 () V!3233)

(assert (=> d!30393 (= (get!1345 (select (arr!2067 (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70857)))

(declare-fun b!108941 () Bool)

(assert (=> b!108941 (= e!70857 (get!1348 (select (arr!2067 (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108942 () Bool)

(assert (=> b!108942 (= e!70857 (get!1349 (select (arr!2067 (ite (or c!18886 c!18887) (_values!2588 newMap!16) lt!55257)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30393 c!19222) b!108941))

(assert (= (and d!30393 (not c!19222)) b!108942))

(assert (=> b!108941 m!121215))

(assert (=> b!108941 m!121217))

(declare-fun m!123019 () Bool)

(assert (=> b!108941 m!123019))

(assert (=> b!108942 m!121215))

(assert (=> b!108942 m!121217))

(declare-fun m!123021 () Bool)

(assert (=> b!108942 m!123021))

(assert (=> b!107923 d!30393))

(declare-fun d!30395 () Bool)

(declare-fun e!70858 () Bool)

(assert (=> d!30395 e!70858))

(declare-fun res!53959 () Bool)

(assert (=> d!30395 (=> (not res!53959) (not e!70858))))

(declare-fun lt!56032 () ListLongMap!1541)

(assert (=> d!30395 (= res!53959 (contains!820 lt!56032 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun lt!56031 () List!1604)

(assert (=> d!30395 (= lt!56032 (ListLongMap!1542 lt!56031))))

(declare-fun lt!56029 () Unit!3301)

(declare-fun lt!56030 () Unit!3301)

(assert (=> d!30395 (= lt!56029 lt!56030)))

(assert (=> d!30395 (= (getValueByKey!158 lt!56031 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30395 (= lt!56030 (lemmaContainsTupThenGetReturnValue!74 lt!56031 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30395 (= lt!56031 (insertStrictlySorted!77 (toList!786 call!11484) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30395 (= (+!142 call!11484 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) lt!56032)))

(declare-fun b!108943 () Bool)

(declare-fun res!53958 () Bool)

(assert (=> b!108943 (=> (not res!53958) (not e!70858))))

(assert (=> b!108943 (= res!53958 (= (getValueByKey!158 (toList!786 lt!56032) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (Some!163 (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(declare-fun b!108944 () Bool)

(assert (=> b!108944 (= e!70858 (contains!823 (toList!786 lt!56032) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(assert (= (and d!30395 res!53959) b!108943))

(assert (= (and b!108943 res!53958) b!108944))

(declare-fun m!123023 () Bool)

(assert (=> d!30395 m!123023))

(declare-fun m!123025 () Bool)

(assert (=> d!30395 m!123025))

(declare-fun m!123027 () Bool)

(assert (=> d!30395 m!123027))

(declare-fun m!123029 () Bool)

(assert (=> d!30395 m!123029))

(declare-fun m!123031 () Bool)

(assert (=> b!108943 m!123031))

(declare-fun m!123033 () Bool)

(assert (=> b!108944 m!123033))

(assert (=> b!108312 d!30395))

(assert (=> d!29843 d!30057))

(assert (=> d!29895 d!30009))

(declare-fun d!30397 () Bool)

(assert (=> d!30397 (= (+!142 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55262 (zeroValue!2478 newMap!16) lt!55094 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(assert (=> d!30397 true))

(declare-fun _$8!97 () Unit!3301)

(assert (=> d!30397 (= (choose!678 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) lt!55262 (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) lt!55094 (defaultEntry!2605 newMap!16)) _$8!97)))

(declare-fun bs!4487 () Bool)

(assert (= bs!4487 d!30397))

(assert (=> bs!4487 m!120987))

(assert (=> bs!4487 m!120987))

(assert (=> bs!4487 m!121381))

(assert (=> bs!4487 m!121385))

(assert (=> d!29895 d!30397))

(assert (=> d!29895 d!30057))

(declare-fun d!30399 () Bool)

(declare-fun e!70859 () Bool)

(assert (=> d!30399 e!70859))

(declare-fun res!53961 () Bool)

(assert (=> d!30399 (=> (not res!53961) (not e!70859))))

(declare-fun lt!56036 () ListLongMap!1541)

(assert (=> d!30399 (= res!53961 (contains!820 lt!56036 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094))))))

(declare-fun lt!56035 () List!1604)

(assert (=> d!30399 (= lt!56036 (ListLongMap!1542 lt!56035))))

(declare-fun lt!56033 () Unit!3301)

(declare-fun lt!56034 () Unit!3301)

(assert (=> d!30399 (= lt!56033 lt!56034)))

(assert (=> d!30399 (= (getValueByKey!158 lt!56035 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094))) (Some!163 (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094))))))

(assert (=> d!30399 (= lt!56034 (lemmaContainsTupThenGetReturnValue!74 lt!56035 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094))))))

(assert (=> d!30399 (= lt!56035 (insertStrictlySorted!77 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094))))))

(assert (=> d!30399 (= (+!142 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)) lt!56036)))

(declare-fun b!108945 () Bool)

(declare-fun res!53960 () Bool)

(assert (=> b!108945 (=> (not res!53960) (not e!70859))))

(assert (=> b!108945 (= res!53960 (= (getValueByKey!158 (toList!786 lt!56036) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094))) (Some!163 (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)))))))

(declare-fun b!108946 () Bool)

(assert (=> b!108946 (= e!70859 (contains!823 (toList!786 lt!56036) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)))))

(assert (= (and d!30399 res!53961) b!108945))

(assert (= (and b!108945 res!53960) b!108946))

(declare-fun m!123035 () Bool)

(assert (=> d!30399 m!123035))

(declare-fun m!123037 () Bool)

(assert (=> d!30399 m!123037))

(declare-fun m!123039 () Bool)

(assert (=> d!30399 m!123039))

(declare-fun m!123041 () Bool)

(assert (=> d!30399 m!123041))

(declare-fun m!123043 () Bool)

(assert (=> b!108945 m!123043))

(declare-fun m!123045 () Bool)

(assert (=> b!108946 m!123045))

(assert (=> d!29895 d!30399))

(declare-fun bm!11550 () Bool)

(declare-fun call!11558 () ListLongMap!1541)

(declare-fun call!11553 () ListLongMap!1541)

(assert (=> bm!11550 (= call!11558 call!11553)))

(declare-fun b!108947 () Bool)

(declare-fun e!70861 () ListLongMap!1541)

(declare-fun e!70871 () ListLongMap!1541)

(assert (=> b!108947 (= e!70861 e!70871)))

(declare-fun c!19224 () Bool)

(assert (=> b!108947 (= c!19224 (and (not (= (bvand lt!55262 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!55262 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11551 () Bool)

(declare-fun call!11555 () ListLongMap!1541)

(declare-fun call!11559 () ListLongMap!1541)

(assert (=> bm!11551 (= call!11555 call!11559)))

(declare-fun b!108948 () Bool)

(declare-fun e!70862 () Bool)

(declare-fun e!70870 () Bool)

(assert (=> b!108948 (= e!70862 e!70870)))

(declare-fun res!53969 () Bool)

(declare-fun call!11557 () Bool)

(assert (=> b!108948 (= res!53969 call!11557)))

(assert (=> b!108948 (=> (not res!53969) (not e!70870))))

(declare-fun bm!11552 () Bool)

(declare-fun call!11556 () Bool)

(declare-fun lt!56052 () ListLongMap!1541)

(assert (=> bm!11552 (= call!11556 (contains!820 lt!56052 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108949 () Bool)

(declare-fun e!70860 () Bool)

(declare-fun e!70863 () Bool)

(assert (=> b!108949 (= e!70860 e!70863)))

(declare-fun res!53970 () Bool)

(assert (=> b!108949 (=> (not res!53970) (not e!70863))))

(assert (=> b!108949 (= res!53970 (contains!820 lt!56052 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108949 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108950 () Bool)

(declare-fun res!53966 () Bool)

(declare-fun e!70872 () Bool)

(assert (=> b!108950 (=> (not res!53966) (not e!70872))))

(assert (=> b!108950 (= res!53966 e!70862)))

(declare-fun c!19223 () Bool)

(assert (=> b!108950 (= c!19223 (not (= (bvand lt!55262 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11553 () Bool)

(declare-fun call!11554 () ListLongMap!1541)

(assert (=> bm!11553 (= call!11554 call!11555)))

(declare-fun b!108951 () Bool)

(declare-fun e!70868 () Bool)

(assert (=> b!108951 (= e!70868 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108952 () Bool)

(assert (=> b!108952 (= e!70871 call!11558)))

(declare-fun b!108953 () Bool)

(declare-fun e!70864 () Bool)

(assert (=> b!108953 (= e!70872 e!70864)))

(declare-fun c!19225 () Bool)

(assert (=> b!108953 (= c!19225 (not (= (bvand lt!55262 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11554 () Bool)

(assert (=> bm!11554 (= call!11559 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55262 (zeroValue!2478 newMap!16) lt!55094 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!108954 () Bool)

(declare-fun e!70866 () ListLongMap!1541)

(assert (=> b!108954 (= e!70866 call!11558)))

(declare-fun b!108955 () Bool)

(declare-fun e!70865 () Unit!3301)

(declare-fun Unit!3356 () Unit!3301)

(assert (=> b!108955 (= e!70865 Unit!3356)))

(declare-fun b!108956 () Bool)

(declare-fun e!70867 () Bool)

(assert (=> b!108956 (= e!70867 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108957 () Bool)

(declare-fun res!53968 () Bool)

(assert (=> b!108957 (=> (not res!53968) (not e!70872))))

(assert (=> b!108957 (= res!53968 e!70860)))

(declare-fun res!53963 () Bool)

(assert (=> b!108957 (=> res!53963 e!70860)))

(assert (=> b!108957 (= res!53963 (not e!70868))))

(declare-fun res!53967 () Bool)

(assert (=> b!108957 (=> (not res!53967) (not e!70868))))

(assert (=> b!108957 (= res!53967 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108958 () Bool)

(declare-fun e!70869 () Bool)

(assert (=> b!108958 (= e!70864 e!70869)))

(declare-fun res!53962 () Bool)

(assert (=> b!108958 (= res!53962 call!11556)))

(assert (=> b!108958 (=> (not res!53962) (not e!70869))))

(declare-fun b!108959 () Bool)

(declare-fun lt!56042 () Unit!3301)

(assert (=> b!108959 (= e!70865 lt!56042)))

(declare-fun lt!56043 () ListLongMap!1541)

(assert (=> b!108959 (= lt!56043 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55262 (zeroValue!2478 newMap!16) lt!55094 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56047 () (_ BitVec 64))

(assert (=> b!108959 (= lt!56047 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56045 () (_ BitVec 64))

(assert (=> b!108959 (= lt!56045 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56048 () Unit!3301)

(assert (=> b!108959 (= lt!56048 (addStillContains!75 lt!56043 lt!56047 (zeroValue!2478 newMap!16) lt!56045))))

(assert (=> b!108959 (contains!820 (+!142 lt!56043 (tuple2!2377 lt!56047 (zeroValue!2478 newMap!16))) lt!56045)))

(declare-fun lt!56055 () Unit!3301)

(assert (=> b!108959 (= lt!56055 lt!56048)))

(declare-fun lt!56041 () ListLongMap!1541)

(assert (=> b!108959 (= lt!56041 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55262 (zeroValue!2478 newMap!16) lt!55094 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56046 () (_ BitVec 64))

(assert (=> b!108959 (= lt!56046 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56049 () (_ BitVec 64))

(assert (=> b!108959 (= lt!56049 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56051 () Unit!3301)

(assert (=> b!108959 (= lt!56051 (addApplyDifferent!75 lt!56041 lt!56046 lt!55094 lt!56049))))

(assert (=> b!108959 (= (apply!99 (+!142 lt!56041 (tuple2!2377 lt!56046 lt!55094)) lt!56049) (apply!99 lt!56041 lt!56049))))

(declare-fun lt!56044 () Unit!3301)

(assert (=> b!108959 (= lt!56044 lt!56051)))

(declare-fun lt!56039 () ListLongMap!1541)

(assert (=> b!108959 (= lt!56039 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55262 (zeroValue!2478 newMap!16) lt!55094 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56058 () (_ BitVec 64))

(assert (=> b!108959 (= lt!56058 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56053 () (_ BitVec 64))

(assert (=> b!108959 (= lt!56053 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56057 () Unit!3301)

(assert (=> b!108959 (= lt!56057 (addApplyDifferent!75 lt!56039 lt!56058 (zeroValue!2478 newMap!16) lt!56053))))

(assert (=> b!108959 (= (apply!99 (+!142 lt!56039 (tuple2!2377 lt!56058 (zeroValue!2478 newMap!16))) lt!56053) (apply!99 lt!56039 lt!56053))))

(declare-fun lt!56050 () Unit!3301)

(assert (=> b!108959 (= lt!56050 lt!56057)))

(declare-fun lt!56037 () ListLongMap!1541)

(assert (=> b!108959 (= lt!56037 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55262 (zeroValue!2478 newMap!16) lt!55094 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56038 () (_ BitVec 64))

(assert (=> b!108959 (= lt!56038 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56040 () (_ BitVec 64))

(assert (=> b!108959 (= lt!56040 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108959 (= lt!56042 (addApplyDifferent!75 lt!56037 lt!56038 lt!55094 lt!56040))))

(assert (=> b!108959 (= (apply!99 (+!142 lt!56037 (tuple2!2377 lt!56038 lt!55094)) lt!56040) (apply!99 lt!56037 lt!56040))))

(declare-fun c!19227 () Bool)

(declare-fun bm!11555 () Bool)

(assert (=> bm!11555 (= call!11553 (+!142 (ite c!19227 call!11559 (ite c!19224 call!11555 call!11554)) (ite (or c!19227 c!19224) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094))))))

(declare-fun bm!11556 () Bool)

(assert (=> bm!11556 (= call!11557 (contains!820 lt!56052 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108960 () Bool)

(assert (=> b!108960 (= e!70869 (= (apply!99 lt!56052 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55094))))

(declare-fun b!108961 () Bool)

(assert (=> b!108961 (= e!70866 call!11554)))

(declare-fun b!108962 () Bool)

(declare-fun c!19228 () Bool)

(assert (=> b!108962 (= c!19228 (and (not (= (bvand lt!55262 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!55262 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108962 (= e!70871 e!70866)))

(declare-fun b!108963 () Bool)

(assert (=> b!108963 (= e!70870 (= (apply!99 lt!56052 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!108964 () Bool)

(assert (=> b!108964 (= e!70864 (not call!11556))))

(declare-fun b!108965 () Bool)

(assert (=> b!108965 (= e!70861 (+!142 call!11553 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55094)))))

(declare-fun b!108966 () Bool)

(assert (=> b!108966 (= e!70863 (= (apply!99 lt!56052 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108966 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 (_values!2588 newMap!16))))))

(assert (=> b!108966 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!108967 () Bool)

(assert (=> b!108967 (= e!70862 (not call!11557))))

(declare-fun d!30401 () Bool)

(assert (=> d!30401 e!70872))

(declare-fun res!53964 () Bool)

(assert (=> d!30401 (=> (not res!53964) (not e!70872))))

(assert (=> d!30401 (= res!53964 (or (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))))

(declare-fun lt!56054 () ListLongMap!1541)

(assert (=> d!30401 (= lt!56052 lt!56054)))

(declare-fun lt!56056 () Unit!3301)

(assert (=> d!30401 (= lt!56056 e!70865)))

(declare-fun c!19226 () Bool)

(assert (=> d!30401 (= c!19226 e!70867)))

(declare-fun res!53965 () Bool)

(assert (=> d!30401 (=> (not res!53965) (not e!70867))))

(assert (=> d!30401 (= res!53965 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30401 (= lt!56054 e!70861)))

(assert (=> d!30401 (= c!19227 (and (not (= (bvand lt!55262 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!55262 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30401 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30401 (= (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55262 (zeroValue!2478 newMap!16) lt!55094 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!56052)))

(assert (= (and d!30401 c!19227) b!108965))

(assert (= (and d!30401 (not c!19227)) b!108947))

(assert (= (and b!108947 c!19224) b!108952))

(assert (= (and b!108947 (not c!19224)) b!108962))

(assert (= (and b!108962 c!19228) b!108954))

(assert (= (and b!108962 (not c!19228)) b!108961))

(assert (= (or b!108954 b!108961) bm!11553))

(assert (= (or b!108952 bm!11553) bm!11551))

(assert (= (or b!108952 b!108954) bm!11550))

(assert (= (or b!108965 bm!11551) bm!11554))

(assert (= (or b!108965 bm!11550) bm!11555))

(assert (= (and d!30401 res!53965) b!108956))

(assert (= (and d!30401 c!19226) b!108959))

(assert (= (and d!30401 (not c!19226)) b!108955))

(assert (= (and d!30401 res!53964) b!108957))

(assert (= (and b!108957 res!53967) b!108951))

(assert (= (and b!108957 (not res!53963)) b!108949))

(assert (= (and b!108949 res!53970) b!108966))

(assert (= (and b!108957 res!53968) b!108950))

(assert (= (and b!108950 c!19223) b!108948))

(assert (= (and b!108950 (not c!19223)) b!108967))

(assert (= (and b!108948 res!53969) b!108963))

(assert (= (or b!108948 b!108967) bm!11556))

(assert (= (and b!108950 res!53966) b!108953))

(assert (= (and b!108953 c!19225) b!108958))

(assert (= (and b!108953 (not c!19225)) b!108964))

(assert (= (and b!108958 res!53962) b!108960))

(assert (= (or b!108958 b!108964) bm!11552))

(declare-fun b_lambda!4877 () Bool)

(assert (=> (not b_lambda!4877) (not b!108966)))

(assert (=> b!108966 t!5726))

(declare-fun b_and!6729 () Bool)

(assert (= b_and!6725 (and (=> t!5726 result!3505) b_and!6729)))

(assert (=> b!108966 t!5728))

(declare-fun b_and!6731 () Bool)

(assert (= b_and!6727 (and (=> t!5728 result!3507) b_and!6731)))

(declare-fun m!123047 () Bool)

(assert (=> b!108963 m!123047))

(declare-fun m!123049 () Bool)

(assert (=> b!108965 m!123049))

(declare-fun m!123051 () Bool)

(assert (=> bm!11552 m!123051))

(assert (=> b!108949 m!121169))

(assert (=> b!108949 m!121169))

(declare-fun m!123053 () Bool)

(assert (=> b!108949 m!123053))

(declare-fun m!123055 () Bool)

(assert (=> bm!11556 m!123055))

(assert (=> b!108951 m!121169))

(assert (=> b!108951 m!121169))

(assert (=> b!108951 m!121175))

(declare-fun m!123057 () Bool)

(assert (=> b!108960 m!123057))

(assert (=> d!30401 m!121179))

(declare-fun m!123059 () Bool)

(assert (=> b!108959 m!123059))

(declare-fun m!123061 () Bool)

(assert (=> b!108959 m!123061))

(declare-fun m!123063 () Bool)

(assert (=> b!108959 m!123063))

(assert (=> b!108959 m!121169))

(declare-fun m!123065 () Bool)

(assert (=> b!108959 m!123065))

(declare-fun m!123067 () Bool)

(assert (=> b!108959 m!123067))

(declare-fun m!123069 () Bool)

(assert (=> b!108959 m!123069))

(declare-fun m!123071 () Bool)

(assert (=> b!108959 m!123071))

(declare-fun m!123073 () Bool)

(assert (=> b!108959 m!123073))

(declare-fun m!123075 () Bool)

(assert (=> b!108959 m!123075))

(declare-fun m!123077 () Bool)

(assert (=> b!108959 m!123077))

(declare-fun m!123079 () Bool)

(assert (=> b!108959 m!123079))

(declare-fun m!123081 () Bool)

(assert (=> b!108959 m!123081))

(declare-fun m!123083 () Bool)

(assert (=> b!108959 m!123083))

(assert (=> b!108959 m!123077))

(declare-fun m!123085 () Bool)

(assert (=> b!108959 m!123085))

(declare-fun m!123087 () Bool)

(assert (=> b!108959 m!123087))

(assert (=> b!108959 m!123081))

(declare-fun m!123089 () Bool)

(assert (=> b!108959 m!123089))

(assert (=> b!108959 m!123085))

(assert (=> b!108959 m!123065))

(declare-fun m!123091 () Bool)

(assert (=> bm!11555 m!123091))

(assert (=> bm!11554 m!123063))

(assert (=> b!108956 m!121169))

(assert (=> b!108956 m!121169))

(assert (=> b!108956 m!121175))

(assert (=> b!108966 m!121891))

(assert (=> b!108966 m!121891))

(assert (=> b!108966 m!121217))

(assert (=> b!108966 m!121893))

(assert (=> b!108966 m!121169))

(declare-fun m!123093 () Bool)

(assert (=> b!108966 m!123093))

(assert (=> b!108966 m!121169))

(assert (=> b!108966 m!121217))

(assert (=> d!29895 d!30401))

(assert (=> b!108327 d!30129))

(declare-fun b!108968 () Bool)

(declare-fun e!70874 () List!1604)

(declare-fun call!11562 () List!1604)

(assert (=> b!108968 (= e!70874 call!11562)))

(declare-fun b!108970 () Bool)

(declare-fun e!70873 () List!1604)

(assert (=> b!108970 (= e!70874 e!70873)))

(declare-fun c!19231 () Bool)

(assert (=> b!108970 (= c!19231 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55096))) (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55096)))) (_1!1199 lt!55093))))))

(declare-fun b!108971 () Bool)

(declare-fun call!11560 () List!1604)

(assert (=> b!108971 (= e!70873 call!11560)))

(declare-fun b!108972 () Bool)

(declare-fun e!70877 () List!1604)

(assert (=> b!108972 (= e!70877 (insertStrictlySorted!77 (t!5712 (t!5712 (toList!786 lt!55096))) (_1!1199 lt!55093) (_2!1199 lt!55093)))))

(declare-fun b!108973 () Bool)

(declare-fun c!19230 () Bool)

(assert (=> b!108973 (= e!70877 (ite c!19231 (t!5712 (t!5712 (toList!786 lt!55096))) (ite c!19230 (Cons!1600 (h!2198 (t!5712 (toList!786 lt!55096))) (t!5712 (t!5712 (toList!786 lt!55096)))) Nil!1601)))))

(declare-fun b!108974 () Bool)

(declare-fun e!70875 () Bool)

(declare-fun lt!56059 () List!1604)

(assert (=> b!108974 (= e!70875 (contains!823 lt!56059 (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(declare-fun bm!11557 () Bool)

(assert (=> bm!11557 (= call!11560 call!11562)))

(declare-fun b!108975 () Bool)

(assert (=> b!108975 (= c!19230 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55096))) (bvsgt (_1!1199 (h!2198 (t!5712 (toList!786 lt!55096)))) (_1!1199 lt!55093))))))

(declare-fun e!70876 () List!1604)

(assert (=> b!108975 (= e!70873 e!70876)))

(declare-fun b!108976 () Bool)

(declare-fun call!11561 () List!1604)

(assert (=> b!108976 (= e!70876 call!11561)))

(declare-fun c!19229 () Bool)

(declare-fun bm!11558 () Bool)

(assert (=> bm!11558 (= call!11562 ($colon$colon!81 e!70877 (ite c!19229 (h!2198 (t!5712 (toList!786 lt!55096))) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093)))))))

(declare-fun c!19232 () Bool)

(assert (=> bm!11558 (= c!19232 c!19229)))

(declare-fun b!108969 () Bool)

(declare-fun res!53972 () Bool)

(assert (=> b!108969 (=> (not res!53972) (not e!70875))))

(assert (=> b!108969 (= res!53972 (containsKey!161 lt!56059 (_1!1199 lt!55093)))))

(declare-fun d!30403 () Bool)

(assert (=> d!30403 e!70875))

(declare-fun res!53971 () Bool)

(assert (=> d!30403 (=> (not res!53971) (not e!70875))))

(assert (=> d!30403 (= res!53971 (isStrictlySorted!297 lt!56059))))

(assert (=> d!30403 (= lt!56059 e!70874)))

(assert (=> d!30403 (= c!19229 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55096))) (bvslt (_1!1199 (h!2198 (t!5712 (toList!786 lt!55096)))) (_1!1199 lt!55093))))))

(assert (=> d!30403 (isStrictlySorted!297 (t!5712 (toList!786 lt!55096)))))

(assert (=> d!30403 (= (insertStrictlySorted!77 (t!5712 (toList!786 lt!55096)) (_1!1199 lt!55093) (_2!1199 lt!55093)) lt!56059)))

(declare-fun bm!11559 () Bool)

(assert (=> bm!11559 (= call!11561 call!11560)))

(declare-fun b!108977 () Bool)

(assert (=> b!108977 (= e!70876 call!11561)))

(assert (= (and d!30403 c!19229) b!108968))

(assert (= (and d!30403 (not c!19229)) b!108970))

(assert (= (and b!108970 c!19231) b!108971))

(assert (= (and b!108970 (not c!19231)) b!108975))

(assert (= (and b!108975 c!19230) b!108976))

(assert (= (and b!108975 (not c!19230)) b!108977))

(assert (= (or b!108976 b!108977) bm!11559))

(assert (= (or b!108971 bm!11559) bm!11557))

(assert (= (or b!108968 bm!11557) bm!11558))

(assert (= (and bm!11558 c!19232) b!108972))

(assert (= (and bm!11558 (not c!19232)) b!108973))

(assert (= (and d!30403 res!53971) b!108969))

(assert (= (and b!108969 res!53972) b!108974))

(declare-fun m!123095 () Bool)

(assert (=> d!30403 m!123095))

(assert (=> d!30403 m!122791))

(declare-fun m!123097 () Bool)

(assert (=> bm!11558 m!123097))

(declare-fun m!123099 () Bool)

(assert (=> b!108972 m!123099))

(declare-fun m!123101 () Bool)

(assert (=> b!108974 m!123101))

(declare-fun m!123103 () Bool)

(assert (=> b!108969 m!123103))

(assert (=> b!108187 d!30403))

(declare-fun d!30405 () Bool)

(declare-fun e!70878 () Bool)

(assert (=> d!30405 e!70878))

(declare-fun res!53973 () Bool)

(assert (=> d!30405 (=> res!53973 e!70878)))

(declare-fun lt!56060 () Bool)

(assert (=> d!30405 (= res!53973 (not lt!56060))))

(declare-fun lt!56063 () Bool)

(assert (=> d!30405 (= lt!56060 lt!56063)))

(declare-fun lt!56062 () Unit!3301)

(declare-fun e!70879 () Unit!3301)

(assert (=> d!30405 (= lt!56062 e!70879)))

(declare-fun c!19233 () Bool)

(assert (=> d!30405 (= c!19233 lt!56063)))

(assert (=> d!30405 (= lt!56063 (containsKey!161 (toList!786 lt!55736) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30405 (= (contains!820 lt!55736 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) lt!56060)))

(declare-fun b!108978 () Bool)

(declare-fun lt!56061 () Unit!3301)

(assert (=> b!108978 (= e!70879 lt!56061)))

(assert (=> b!108978 (= lt!56061 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55736) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> b!108978 (isDefined!110 (getValueByKey!158 (toList!786 lt!55736) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108979 () Bool)

(declare-fun Unit!3357 () Unit!3301)

(assert (=> b!108979 (= e!70879 Unit!3357)))

(declare-fun b!108980 () Bool)

(assert (=> b!108980 (= e!70878 (isDefined!110 (getValueByKey!158 (toList!786 lt!55736) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30405 c!19233) b!108978))

(assert (= (and d!30405 (not c!19233)) b!108979))

(assert (= (and d!30405 (not res!53973)) b!108980))

(declare-fun m!123105 () Bool)

(assert (=> d!30405 m!123105))

(declare-fun m!123107 () Bool)

(assert (=> b!108978 m!123107))

(assert (=> b!108978 m!121931))

(assert (=> b!108978 m!121931))

(declare-fun m!123109 () Bool)

(assert (=> b!108978 m!123109))

(assert (=> b!108980 m!121931))

(assert (=> b!108980 m!121931))

(assert (=> b!108980 m!123109))

(assert (=> d!30025 d!30405))

(declare-fun b!108984 () Bool)

(declare-fun e!70881 () Option!164)

(assert (=> b!108984 (= e!70881 None!162)))

(declare-fun b!108983 () Bool)

(assert (=> b!108983 (= e!70881 (getValueByKey!158 (t!5712 lt!55735) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108981 () Bool)

(declare-fun e!70880 () Option!164)

(assert (=> b!108981 (= e!70880 (Some!163 (_2!1199 (h!2198 lt!55735))))))

(declare-fun d!30407 () Bool)

(declare-fun c!19234 () Bool)

(assert (=> d!30407 (= c!19234 (and ((_ is Cons!1600) lt!55735) (= (_1!1199 (h!2198 lt!55735)) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (=> d!30407 (= (getValueByKey!158 lt!55735 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) e!70880)))

(declare-fun b!108982 () Bool)

(assert (=> b!108982 (= e!70880 e!70881)))

(declare-fun c!19235 () Bool)

(assert (=> b!108982 (= c!19235 (and ((_ is Cons!1600) lt!55735) (not (= (_1!1199 (h!2198 lt!55735)) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))))

(assert (= (and d!30407 c!19234) b!108981))

(assert (= (and d!30407 (not c!19234)) b!108982))

(assert (= (and b!108982 c!19235) b!108983))

(assert (= (and b!108982 (not c!19235)) b!108984))

(declare-fun m!123111 () Bool)

(assert (=> b!108983 m!123111))

(assert (=> d!30025 d!30407))

(declare-fun d!30409 () Bool)

(assert (=> d!30409 (= (getValueByKey!158 lt!55735 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) (Some!163 (_2!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun lt!56064 () Unit!3301)

(assert (=> d!30409 (= lt!56064 (choose!677 lt!55735 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (_2!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70882 () Bool)

(assert (=> d!30409 e!70882))

(declare-fun res!53974 () Bool)

(assert (=> d!30409 (=> (not res!53974) (not e!70882))))

(assert (=> d!30409 (= res!53974 (isStrictlySorted!297 lt!55735))))

(assert (=> d!30409 (= (lemmaContainsTupThenGetReturnValue!74 lt!55735 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (_2!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) lt!56064)))

(declare-fun b!108985 () Bool)

(declare-fun res!53975 () Bool)

(assert (=> b!108985 (=> (not res!53975) (not e!70882))))

(assert (=> b!108985 (= res!53975 (containsKey!161 lt!55735 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108986 () Bool)

(assert (=> b!108986 (= e!70882 (contains!823 lt!55735 (tuple2!2377 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (_2!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30409 res!53974) b!108985))

(assert (= (and b!108985 res!53975) b!108986))

(assert (=> d!30409 m!121925))

(declare-fun m!123113 () Bool)

(assert (=> d!30409 m!123113))

(declare-fun m!123115 () Bool)

(assert (=> d!30409 m!123115))

(declare-fun m!123117 () Bool)

(assert (=> b!108985 m!123117))

(declare-fun m!123119 () Bool)

(assert (=> b!108986 m!123119))

(assert (=> d!30025 d!30409))

(declare-fun b!108987 () Bool)

(declare-fun e!70884 () List!1604)

(declare-fun call!11565 () List!1604)

(assert (=> b!108987 (= e!70884 call!11565)))

(declare-fun b!108989 () Bool)

(declare-fun e!70883 () List!1604)

(assert (=> b!108989 (= e!70884 e!70883)))

(declare-fun c!19238 () Bool)

(assert (=> b!108989 (= c!19238 (and ((_ is Cons!1600) (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424)))) (= (_1!1199 (h!2198 (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424))))) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!108990 () Bool)

(declare-fun call!11563 () List!1604)

(assert (=> b!108990 (= e!70883 call!11563)))

(declare-fun b!108991 () Bool)

(declare-fun e!70887 () List!1604)

(assert (=> b!108991 (= e!70887 (insertStrictlySorted!77 (t!5712 (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424)))) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (_2!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun c!19237 () Bool)

(declare-fun b!108992 () Bool)

(assert (=> b!108992 (= e!70887 (ite c!19238 (t!5712 (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424)))) (ite c!19237 (Cons!1600 (h!2198 (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424)))) (t!5712 (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424))))) Nil!1601)))))

(declare-fun b!108993 () Bool)

(declare-fun e!70885 () Bool)

(declare-fun lt!56065 () List!1604)

(assert (=> b!108993 (= e!70885 (contains!823 lt!56065 (tuple2!2377 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (_2!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun bm!11560 () Bool)

(assert (=> bm!11560 (= call!11563 call!11565)))

(declare-fun b!108994 () Bool)

(assert (=> b!108994 (= c!19237 (and ((_ is Cons!1600) (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424)))) (bvsgt (_1!1199 (h!2198 (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424))))) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun e!70886 () List!1604)

(assert (=> b!108994 (= e!70883 e!70886)))

(declare-fun b!108995 () Bool)

(declare-fun call!11564 () List!1604)

(assert (=> b!108995 (= e!70886 call!11564)))

(declare-fun bm!11561 () Bool)

(declare-fun c!19236 () Bool)

(assert (=> bm!11561 (= call!11565 ($colon$colon!81 e!70887 (ite c!19236 (h!2198 (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424)))) (tuple2!2377 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (_2!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))))

(declare-fun c!19239 () Bool)

(assert (=> bm!11561 (= c!19239 c!19236)))

(declare-fun b!108988 () Bool)

(declare-fun res!53977 () Bool)

(assert (=> b!108988 (=> (not res!53977) (not e!70885))))

(assert (=> b!108988 (= res!53977 (containsKey!161 lt!56065 (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun d!30411 () Bool)

(assert (=> d!30411 e!70885))

(declare-fun res!53976 () Bool)

(assert (=> d!30411 (=> (not res!53976) (not e!70885))))

(assert (=> d!30411 (= res!53976 (isStrictlySorted!297 lt!56065))))

(assert (=> d!30411 (= lt!56065 e!70884)))

(assert (=> d!30411 (= c!19236 (and ((_ is Cons!1600) (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424)))) (bvslt (_1!1199 (h!2198 (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424))))) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (=> d!30411 (isStrictlySorted!297 (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424))))))

(assert (=> d!30411 (= (insertStrictlySorted!77 (toList!786 (ite c!18922 call!11429 (ite c!18919 call!11425 call!11424))) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) (_2!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) lt!56065)))

(declare-fun bm!11562 () Bool)

(assert (=> bm!11562 (= call!11564 call!11563)))

(declare-fun b!108996 () Bool)

(assert (=> b!108996 (= e!70886 call!11564)))

(assert (= (and d!30411 c!19236) b!108987))

(assert (= (and d!30411 (not c!19236)) b!108989))

(assert (= (and b!108989 c!19238) b!108990))

(assert (= (and b!108989 (not c!19238)) b!108994))

(assert (= (and b!108994 c!19237) b!108995))

(assert (= (and b!108994 (not c!19237)) b!108996))

(assert (= (or b!108995 b!108996) bm!11562))

(assert (= (or b!108990 bm!11562) bm!11560))

(assert (= (or b!108987 bm!11560) bm!11561))

(assert (= (and bm!11561 c!19239) b!108991))

(assert (= (and bm!11561 (not c!19239)) b!108992))

(assert (= (and d!30411 res!53976) b!108988))

(assert (= (and b!108988 res!53977) b!108993))

(declare-fun m!123121 () Bool)

(assert (=> d!30411 m!123121))

(declare-fun m!123123 () Bool)

(assert (=> d!30411 m!123123))

(declare-fun m!123125 () Bool)

(assert (=> bm!11561 m!123125))

(declare-fun m!123127 () Bool)

(assert (=> b!108991 m!123127))

(declare-fun m!123129 () Bool)

(assert (=> b!108993 m!123129))

(declare-fun m!123131 () Bool)

(assert (=> b!108988 m!123131))

(assert (=> d!30025 d!30411))

(assert (=> b!107908 d!30129))

(declare-fun b!108998 () Bool)

(declare-fun e!70890 () Bool)

(assert (=> b!108998 (= e!70890 (contains!822 Nil!1602 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000)))))

(declare-fun b!108999 () Bool)

(declare-fun e!70891 () Bool)

(declare-fun call!11566 () Bool)

(assert (=> b!108999 (= e!70891 call!11566)))

(declare-fun bm!11563 () Bool)

(declare-fun c!19240 () Bool)

(assert (=> bm!11563 (= call!11566 (arrayNoDuplicates!0 (_keys!4315 (_2!1200 lt!55269)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19240 (Cons!1601 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000) Nil!1602) Nil!1602)))))

(declare-fun b!109000 () Bool)

(declare-fun e!70889 () Bool)

(declare-fun e!70888 () Bool)

(assert (=> b!109000 (= e!70889 e!70888)))

(declare-fun res!53980 () Bool)

(assert (=> b!109000 (=> (not res!53980) (not e!70888))))

(assert (=> b!109000 (= res!53980 (not e!70890))))

(declare-fun res!53979 () Bool)

(assert (=> b!109000 (=> (not res!53979) (not e!70890))))

(assert (=> b!109000 (= res!53979 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000)))))

(declare-fun b!109001 () Bool)

(assert (=> b!109001 (= e!70891 call!11566)))

(declare-fun d!30413 () Bool)

(declare-fun res!53978 () Bool)

(assert (=> d!30413 (=> res!53978 e!70889)))

(assert (=> d!30413 (= res!53978 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55269)))))))

(assert (=> d!30413 (= (arrayNoDuplicates!0 (_keys!4315 (_2!1200 lt!55269)) #b00000000000000000000000000000000 Nil!1602) e!70889)))

(declare-fun b!108997 () Bool)

(assert (=> b!108997 (= e!70888 e!70891)))

(assert (=> b!108997 (= c!19240 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000)))))

(assert (= (and d!30413 (not res!53978)) b!109000))

(assert (= (and b!109000 res!53979) b!108998))

(assert (= (and b!109000 res!53980) b!108997))

(assert (= (and b!108997 c!19240) b!109001))

(assert (= (and b!108997 (not c!19240)) b!108999))

(assert (= (or b!109001 b!108999) bm!11563))

(assert (=> b!108998 m!122131))

(assert (=> b!108998 m!122131))

(declare-fun m!123133 () Bool)

(assert (=> b!108998 m!123133))

(assert (=> bm!11563 m!122131))

(declare-fun m!123135 () Bool)

(assert (=> bm!11563 m!123135))

(assert (=> b!109000 m!122131))

(assert (=> b!109000 m!122131))

(assert (=> b!109000 m!122137))

(assert (=> b!108997 m!122131))

(assert (=> b!108997 m!122131))

(assert (=> b!108997 m!122137))

(assert (=> b!108048 d!30413))

(declare-fun d!30415 () Bool)

(declare-fun e!70892 () Bool)

(assert (=> d!30415 e!70892))

(declare-fun res!53981 () Bool)

(assert (=> d!30415 (=> res!53981 e!70892)))

(declare-fun lt!56066 () Bool)

(assert (=> d!30415 (= res!53981 (not lt!56066))))

(declare-fun lt!56069 () Bool)

(assert (=> d!30415 (= lt!56066 lt!56069)))

(declare-fun lt!56068 () Unit!3301)

(declare-fun e!70893 () Unit!3301)

(assert (=> d!30415 (= lt!56068 e!70893)))

(declare-fun c!19241 () Bool)

(assert (=> d!30415 (= c!19241 lt!56069)))

(assert (=> d!30415 (= lt!56069 (containsKey!161 (toList!786 (map!1290 (_2!1200 lt!55684))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30415 (= (contains!820 (map!1290 (_2!1200 lt!55684)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!56066)))

(declare-fun b!109002 () Bool)

(declare-fun lt!56067 () Unit!3301)

(assert (=> b!109002 (= e!70893 lt!56067)))

(assert (=> b!109002 (= lt!56067 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (map!1290 (_2!1200 lt!55684))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!109002 (isDefined!110 (getValueByKey!158 (toList!786 (map!1290 (_2!1200 lt!55684))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!109003 () Bool)

(declare-fun Unit!3358 () Unit!3301)

(assert (=> b!109003 (= e!70893 Unit!3358)))

(declare-fun b!109004 () Bool)

(assert (=> b!109004 (= e!70892 (isDefined!110 (getValueByKey!158 (toList!786 (map!1290 (_2!1200 lt!55684))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!30415 c!19241) b!109002))

(assert (= (and d!30415 (not c!19241)) b!109003))

(assert (= (and d!30415 (not res!53981)) b!109004))

(assert (=> d!30415 m!120751))

(declare-fun m!123137 () Bool)

(assert (=> d!30415 m!123137))

(assert (=> b!109002 m!120751))

(declare-fun m!123139 () Bool)

(assert (=> b!109002 m!123139))

(assert (=> b!109002 m!120751))

(declare-fun m!123141 () Bool)

(assert (=> b!109002 m!123141))

(assert (=> b!109002 m!123141))

(declare-fun m!123143 () Bool)

(assert (=> b!109002 m!123143))

(assert (=> b!109004 m!120751))

(assert (=> b!109004 m!123141))

(assert (=> b!109004 m!123141))

(assert (=> b!109004 m!123143))

(assert (=> b!108290 d!30415))

(declare-fun d!30417 () Bool)

(assert (=> d!30417 (= (map!1290 (_2!1200 lt!55684)) (getCurrentListMap!472 (_keys!4315 (_2!1200 lt!55684)) (_values!2588 (_2!1200 lt!55684)) (mask!6763 (_2!1200 lt!55684)) (extraKeys!2406 (_2!1200 lt!55684)) (zeroValue!2478 (_2!1200 lt!55684)) (minValue!2478 (_2!1200 lt!55684)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1200 lt!55684))))))

(declare-fun bs!4488 () Bool)

(assert (= bs!4488 d!30417))

(declare-fun m!123145 () Bool)

(assert (=> bs!4488 m!123145))

(assert (=> b!108290 d!30417))

(declare-fun d!30419 () Bool)

(declare-fun res!53982 () Bool)

(declare-fun e!70894 () Bool)

(assert (=> d!30419 (=> res!53982 e!70894)))

(assert (=> d!30419 (= res!53982 (or ((_ is Nil!1601) lt!55441) ((_ is Nil!1601) (t!5712 lt!55441))))))

(assert (=> d!30419 (= (isStrictlySorted!297 lt!55441) e!70894)))

(declare-fun b!109005 () Bool)

(declare-fun e!70895 () Bool)

(assert (=> b!109005 (= e!70894 e!70895)))

(declare-fun res!53983 () Bool)

(assert (=> b!109005 (=> (not res!53983) (not e!70895))))

(assert (=> b!109005 (= res!53983 (bvslt (_1!1199 (h!2198 lt!55441)) (_1!1199 (h!2198 (t!5712 lt!55441)))))))

(declare-fun b!109006 () Bool)

(assert (=> b!109006 (= e!70895 (isStrictlySorted!297 (t!5712 lt!55441)))))

(assert (= (and d!30419 (not res!53982)) b!109005))

(assert (= (and b!109005 res!53983) b!109006))

(declare-fun m!123147 () Bool)

(assert (=> b!109006 m!123147))

(assert (=> d!29863 d!30419))

(declare-fun d!30421 () Bool)

(declare-fun res!53984 () Bool)

(declare-fun e!70896 () Bool)

(assert (=> d!30421 (=> res!53984 e!70896)))

(assert (=> d!30421 (= res!53984 (or ((_ is Nil!1601) (toList!786 (+!142 lt!55096 lt!55092))) ((_ is Nil!1601) (t!5712 (toList!786 (+!142 lt!55096 lt!55092))))))))

(assert (=> d!30421 (= (isStrictlySorted!297 (toList!786 (+!142 lt!55096 lt!55092))) e!70896)))

(declare-fun b!109007 () Bool)

(declare-fun e!70897 () Bool)

(assert (=> b!109007 (= e!70896 e!70897)))

(declare-fun res!53985 () Bool)

(assert (=> b!109007 (=> (not res!53985) (not e!70897))))

(assert (=> b!109007 (= res!53985 (bvslt (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 lt!55092)))) (_1!1199 (h!2198 (t!5712 (toList!786 (+!142 lt!55096 lt!55092)))))))))

(declare-fun b!109008 () Bool)

(assert (=> b!109008 (= e!70897 (isStrictlySorted!297 (t!5712 (toList!786 (+!142 lt!55096 lt!55092)))))))

(assert (= (and d!30421 (not res!53984)) b!109007))

(assert (= (and b!109007 res!53985) b!109008))

(declare-fun m!123149 () Bool)

(assert (=> b!109008 m!123149))

(assert (=> d!29863 d!30421))

(declare-fun d!30423 () Bool)

(declare-fun e!70898 () Bool)

(assert (=> d!30423 e!70898))

(declare-fun res!53986 () Bool)

(assert (=> d!30423 (=> res!53986 e!70898)))

(declare-fun lt!56070 () Bool)

(assert (=> d!30423 (= res!53986 (not lt!56070))))

(declare-fun lt!56073 () Bool)

(assert (=> d!30423 (= lt!56070 lt!56073)))

(declare-fun lt!56072 () Unit!3301)

(declare-fun e!70899 () Unit!3301)

(assert (=> d!30423 (= lt!56072 e!70899)))

(declare-fun c!19242 () Bool)

(assert (=> d!30423 (= c!19242 lt!56073)))

(assert (=> d!30423 (= lt!56073 (containsKey!161 (toList!786 lt!55522) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30423 (= (contains!820 lt!55522 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!56070)))

(declare-fun b!109009 () Bool)

(declare-fun lt!56071 () Unit!3301)

(assert (=> b!109009 (= e!70899 lt!56071)))

(assert (=> b!109009 (= lt!56071 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55522) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!109009 (isDefined!110 (getValueByKey!158 (toList!786 lt!55522) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!109010 () Bool)

(declare-fun Unit!3359 () Unit!3301)

(assert (=> b!109010 (= e!70899 Unit!3359)))

(declare-fun b!109011 () Bool)

(assert (=> b!109011 (= e!70898 (isDefined!110 (getValueByKey!158 (toList!786 lt!55522) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!30423 c!19242) b!109009))

(assert (= (and d!30423 (not c!19242)) b!109010))

(assert (= (and d!30423 (not res!53986)) b!109011))

(declare-fun m!123151 () Bool)

(assert (=> d!30423 m!123151))

(declare-fun m!123153 () Bool)

(assert (=> b!109009 m!123153))

(assert (=> b!109009 m!121525))

(assert (=> b!109009 m!121525))

(declare-fun m!123155 () Bool)

(assert (=> b!109009 m!123155))

(assert (=> b!109011 m!121525))

(assert (=> b!109011 m!121525))

(assert (=> b!109011 m!123155))

(assert (=> d!29939 d!30423))

(declare-fun b!109015 () Bool)

(declare-fun e!70901 () Option!164)

(assert (=> b!109015 (= e!70901 None!162)))

(declare-fun b!109014 () Bool)

(assert (=> b!109014 (= e!70901 (getValueByKey!158 (t!5712 lt!55521) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!109012 () Bool)

(declare-fun e!70900 () Option!164)

(assert (=> b!109012 (= e!70900 (Some!163 (_2!1199 (h!2198 lt!55521))))))

(declare-fun d!30425 () Bool)

(declare-fun c!19243 () Bool)

(assert (=> d!30425 (= c!19243 (and ((_ is Cons!1600) lt!55521) (= (_1!1199 (h!2198 lt!55521)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!30425 (= (getValueByKey!158 lt!55521 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!70900)))

(declare-fun b!109013 () Bool)

(assert (=> b!109013 (= e!70900 e!70901)))

(declare-fun c!19244 () Bool)

(assert (=> b!109013 (= c!19244 (and ((_ is Cons!1600) lt!55521) (not (= (_1!1199 (h!2198 lt!55521)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!30425 c!19243) b!109012))

(assert (= (and d!30425 (not c!19243)) b!109013))

(assert (= (and b!109013 c!19244) b!109014))

(assert (= (and b!109013 (not c!19244)) b!109015))

(declare-fun m!123157 () Bool)

(assert (=> b!109014 m!123157))

(assert (=> d!29939 d!30425))

(declare-fun d!30427 () Bool)

(assert (=> d!30427 (= (getValueByKey!158 lt!55521 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!56074 () Unit!3301)

(assert (=> d!30427 (= lt!56074 (choose!677 lt!55521 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!70902 () Bool)

(assert (=> d!30427 e!70902))

(declare-fun res!53987 () Bool)

(assert (=> d!30427 (=> (not res!53987) (not e!70902))))

(assert (=> d!30427 (= res!53987 (isStrictlySorted!297 lt!55521))))

(assert (=> d!30427 (= (lemmaContainsTupThenGetReturnValue!74 lt!55521 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!56074)))

(declare-fun b!109016 () Bool)

(declare-fun res!53988 () Bool)

(assert (=> b!109016 (=> (not res!53988) (not e!70902))))

(assert (=> b!109016 (= res!53988 (containsKey!161 lt!55521 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!109017 () Bool)

(assert (=> b!109017 (= e!70902 (contains!823 lt!55521 (tuple2!2377 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!30427 res!53987) b!109016))

(assert (= (and b!109016 res!53988) b!109017))

(assert (=> d!30427 m!121519))

(declare-fun m!123159 () Bool)

(assert (=> d!30427 m!123159))

(declare-fun m!123161 () Bool)

(assert (=> d!30427 m!123161))

(declare-fun m!123163 () Bool)

(assert (=> b!109016 m!123163))

(declare-fun m!123165 () Bool)

(assert (=> b!109017 m!123165))

(assert (=> d!29939 d!30427))

(declare-fun b!109018 () Bool)

(declare-fun e!70904 () List!1604)

(declare-fun call!11569 () List!1604)

(assert (=> b!109018 (= e!70904 call!11569)))

(declare-fun b!109020 () Bool)

(declare-fun e!70903 () List!1604)

(assert (=> b!109020 (= e!70904 e!70903)))

(declare-fun c!19247 () Bool)

(assert (=> b!109020 (= c!19247 (and ((_ is Cons!1600) (toList!786 call!11408)) (= (_1!1199 (h!2198 (toList!786 call!11408))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!109021 () Bool)

(declare-fun call!11567 () List!1604)

(assert (=> b!109021 (= e!70903 call!11567)))

(declare-fun e!70907 () List!1604)

(declare-fun b!109022 () Bool)

(assert (=> b!109022 (= e!70907 (insertStrictlySorted!77 (t!5712 (toList!786 call!11408)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!19246 () Bool)

(declare-fun b!109023 () Bool)

(assert (=> b!109023 (= e!70907 (ite c!19247 (t!5712 (toList!786 call!11408)) (ite c!19246 (Cons!1600 (h!2198 (toList!786 call!11408)) (t!5712 (toList!786 call!11408))) Nil!1601)))))

(declare-fun lt!56075 () List!1604)

(declare-fun e!70905 () Bool)

(declare-fun b!109024 () Bool)

(assert (=> b!109024 (= e!70905 (contains!823 lt!56075 (tuple2!2377 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!11564 () Bool)

(assert (=> bm!11564 (= call!11567 call!11569)))

(declare-fun b!109025 () Bool)

(assert (=> b!109025 (= c!19246 (and ((_ is Cons!1600) (toList!786 call!11408)) (bvsgt (_1!1199 (h!2198 (toList!786 call!11408))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!70906 () List!1604)

(assert (=> b!109025 (= e!70903 e!70906)))

(declare-fun b!109026 () Bool)

(declare-fun call!11568 () List!1604)

(assert (=> b!109026 (= e!70906 call!11568)))

(declare-fun bm!11565 () Bool)

(declare-fun c!19245 () Bool)

(assert (=> bm!11565 (= call!11569 ($colon$colon!81 e!70907 (ite c!19245 (h!2198 (toList!786 call!11408)) (tuple2!2377 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!19248 () Bool)

(assert (=> bm!11565 (= c!19248 c!19245)))

(declare-fun b!109019 () Bool)

(declare-fun res!53990 () Bool)

(assert (=> b!109019 (=> (not res!53990) (not e!70905))))

(assert (=> b!109019 (= res!53990 (containsKey!161 lt!56075 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!30429 () Bool)

(assert (=> d!30429 e!70905))

(declare-fun res!53989 () Bool)

(assert (=> d!30429 (=> (not res!53989) (not e!70905))))

(assert (=> d!30429 (= res!53989 (isStrictlySorted!297 lt!56075))))

(assert (=> d!30429 (= lt!56075 e!70904)))

(assert (=> d!30429 (= c!19245 (and ((_ is Cons!1600) (toList!786 call!11408)) (bvslt (_1!1199 (h!2198 (toList!786 call!11408))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!30429 (isStrictlySorted!297 (toList!786 call!11408))))

(assert (=> d!30429 (= (insertStrictlySorted!77 (toList!786 call!11408) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!56075)))

(declare-fun bm!11566 () Bool)

(assert (=> bm!11566 (= call!11568 call!11567)))

(declare-fun b!109027 () Bool)

(assert (=> b!109027 (= e!70906 call!11568)))

(assert (= (and d!30429 c!19245) b!109018))

(assert (= (and d!30429 (not c!19245)) b!109020))

(assert (= (and b!109020 c!19247) b!109021))

(assert (= (and b!109020 (not c!19247)) b!109025))

(assert (= (and b!109025 c!19246) b!109026))

(assert (= (and b!109025 (not c!19246)) b!109027))

(assert (= (or b!109026 b!109027) bm!11566))

(assert (= (or b!109021 bm!11566) bm!11564))

(assert (= (or b!109018 bm!11564) bm!11565))

(assert (= (and bm!11565 c!19248) b!109022))

(assert (= (and bm!11565 (not c!19248)) b!109023))

(assert (= (and d!30429 res!53989) b!109019))

(assert (= (and b!109019 res!53990) b!109024))

(declare-fun m!123167 () Bool)

(assert (=> d!30429 m!123167))

(declare-fun m!123169 () Bool)

(assert (=> d!30429 m!123169))

(declare-fun m!123171 () Bool)

(assert (=> bm!11565 m!123171))

(declare-fun m!123173 () Bool)

(assert (=> b!109022 m!123173))

(declare-fun m!123175 () Bool)

(assert (=> b!109024 m!123175))

(declare-fun m!123177 () Bool)

(assert (=> b!109019 m!123177))

(assert (=> d!29939 d!30429))

(declare-fun d!30431 () Bool)

(declare-fun res!53991 () Bool)

(declare-fun e!70908 () Bool)

(assert (=> d!30431 (=> res!53991 e!70908)))

(assert (=> d!30431 (= res!53991 (and ((_ is Cons!1600) (toList!786 lt!55324)) (= (_1!1199 (h!2198 (toList!786 lt!55324))) (_1!1199 lt!55093))))))

(assert (=> d!30431 (= (containsKey!161 (toList!786 lt!55324) (_1!1199 lt!55093)) e!70908)))

(declare-fun b!109028 () Bool)

(declare-fun e!70909 () Bool)

(assert (=> b!109028 (= e!70908 e!70909)))

(declare-fun res!53992 () Bool)

(assert (=> b!109028 (=> (not res!53992) (not e!70909))))

(assert (=> b!109028 (= res!53992 (and (or (not ((_ is Cons!1600) (toList!786 lt!55324))) (bvsle (_1!1199 (h!2198 (toList!786 lt!55324))) (_1!1199 lt!55093))) ((_ is Cons!1600) (toList!786 lt!55324)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55324))) (_1!1199 lt!55093))))))

(declare-fun b!109029 () Bool)

(assert (=> b!109029 (= e!70909 (containsKey!161 (t!5712 (toList!786 lt!55324)) (_1!1199 lt!55093)))))

(assert (= (and d!30431 (not res!53991)) b!109028))

(assert (= (and b!109028 res!53992) b!109029))

(declare-fun m!123179 () Bool)

(assert (=> b!109029 m!123179))

(assert (=> d!29857 d!30431))

(declare-fun d!30433 () Bool)

(assert (=> d!30433 (= (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55381)) (v!2920 (getValueByKey!158 (toList!786 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55381)))))

(assert (=> d!29923 d!30433))

(declare-fun b!109033 () Bool)

(declare-fun e!70911 () Option!164)

(assert (=> b!109033 (= e!70911 None!162)))

(declare-fun b!109032 () Bool)

(assert (=> b!109032 (= e!70911 (getValueByKey!158 (t!5712 (toList!786 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) lt!55381))))

(declare-fun e!70910 () Option!164)

(declare-fun b!109030 () Bool)

(assert (=> b!109030 (= e!70910 (Some!163 (_2!1199 (h!2198 (toList!786 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))))

(declare-fun d!30435 () Bool)

(declare-fun c!19249 () Bool)

(assert (=> d!30435 (= c!19249 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))) lt!55381)))))

(assert (=> d!30435 (= (getValueByKey!158 (toList!786 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55381) e!70910)))

(declare-fun b!109031 () Bool)

(assert (=> b!109031 (= e!70910 e!70911)))

(declare-fun c!19250 () Bool)

(assert (=> b!109031 (= c!19250 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) (not (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))) lt!55381))))))

(assert (= (and d!30435 c!19249) b!109030))

(assert (= (and d!30435 (not c!19249)) b!109031))

(assert (= (and b!109031 c!19250) b!109032))

(assert (= (and b!109031 (not c!19250)) b!109033))

(declare-fun m!123181 () Bool)

(assert (=> b!109032 m!123181))

(assert (=> d!29923 d!30435))

(declare-fun d!30437 () Bool)

(declare-fun lt!56076 () Bool)

(assert (=> d!30437 (= lt!56076 (select (content!113 (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!70913 () Bool)

(assert (=> d!30437 (= lt!56076 e!70913)))

(declare-fun res!53994 () Bool)

(assert (=> d!30437 (=> (not res!53994) (not e!70913))))

(assert (=> d!30437 (= res!53994 ((_ is Cons!1601) (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)))))

(assert (=> d!30437 (= (contains!822 (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!56076)))

(declare-fun b!109034 () Bool)

(declare-fun e!70912 () Bool)

(assert (=> b!109034 (= e!70913 e!70912)))

(declare-fun res!53993 () Bool)

(assert (=> b!109034 (=> res!53993 e!70912)))

(assert (=> b!109034 (= res!53993 (= (h!2199 (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!109035 () Bool)

(assert (=> b!109035 (= e!70912 (contains!822 (t!5713 (ite c!18848 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1602) Nil!1602)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!30437 res!53994) b!109034))

(assert (= (and b!109034 (not res!53993)) b!109035))

(declare-fun m!123183 () Bool)

(assert (=> d!30437 m!123183))

(assert (=> d!30437 m!121907))

(declare-fun m!123185 () Bool)

(assert (=> d!30437 m!123185))

(assert (=> b!109035 m!121907))

(declare-fun m!123187 () Bool)

(assert (=> b!109035 m!123187))

(assert (=> b!108339 d!30437))

(declare-fun d!30439 () Bool)

(assert (=> d!30439 (isDefined!110 (getValueByKey!158 (toList!786 call!11386) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!56077 () Unit!3301)

(assert (=> d!30439 (= lt!56077 (choose!686 (toList!786 call!11386) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70914 () Bool)

(assert (=> d!30439 e!70914))

(declare-fun res!53995 () Bool)

(assert (=> d!30439 (=> (not res!53995) (not e!70914))))

(assert (=> d!30439 (= res!53995 (isStrictlySorted!297 (toList!786 call!11386)))))

(assert (=> d!30439 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 call!11386) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!56077)))

(declare-fun b!109036 () Bool)

(assert (=> b!109036 (= e!70914 (containsKey!161 (toList!786 call!11386) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30439 res!53995) b!109036))

(assert (=> d!30439 m!120751))

(assert (=> d!30439 m!121235))

(assert (=> d!30439 m!121235))

(assert (=> d!30439 m!121237))

(assert (=> d!30439 m!120751))

(declare-fun m!123189 () Bool)

(assert (=> d!30439 m!123189))

(declare-fun m!123191 () Bool)

(assert (=> d!30439 m!123191))

(assert (=> b!109036 m!120751))

(assert (=> b!109036 m!121231))

(assert (=> b!107928 d!30439))

(assert (=> b!107928 d!30191))

(assert (=> b!107928 d!30193))

(assert (=> b!108277 d!30417))

(declare-fun d!30441 () Bool)

(declare-fun e!70915 () Bool)

(assert (=> d!30441 e!70915))

(declare-fun res!53997 () Bool)

(assert (=> d!30441 (=> (not res!53997) (not e!70915))))

(declare-fun lt!56081 () ListLongMap!1541)

(assert (=> d!30441 (= res!53997 (contains!820 lt!56081 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun lt!56080 () List!1604)

(assert (=> d!30441 (= lt!56081 (ListLongMap!1542 lt!56080))))

(declare-fun lt!56078 () Unit!3301)

(declare-fun lt!56079 () Unit!3301)

(assert (=> d!30441 (= lt!56078 lt!56079)))

(assert (=> d!30441 (= (getValueByKey!158 lt!56080 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30441 (= lt!56079 (lemmaContainsTupThenGetReturnValue!74 lt!56080 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30441 (= lt!56080 (insertStrictlySorted!77 (toList!786 (map!1290 newMap!16)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30441 (= (+!142 (map!1290 newMap!16) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) lt!56081)))

(declare-fun b!109037 () Bool)

(declare-fun res!53996 () Bool)

(assert (=> b!109037 (=> (not res!53996) (not e!70915))))

(assert (=> b!109037 (= res!53996 (= (getValueByKey!158 (toList!786 lt!56081) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!109038 () Bool)

(assert (=> b!109038 (= e!70915 (contains!823 (toList!786 lt!56081) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(assert (= (and d!30441 res!53997) b!109037))

(assert (= (and b!109037 res!53996) b!109038))

(declare-fun m!123193 () Bool)

(assert (=> d!30441 m!123193))

(declare-fun m!123195 () Bool)

(assert (=> d!30441 m!123195))

(declare-fun m!123197 () Bool)

(assert (=> d!30441 m!123197))

(declare-fun m!123199 () Bool)

(assert (=> d!30441 m!123199))

(declare-fun m!123201 () Bool)

(assert (=> b!109037 m!123201))

(declare-fun m!123203 () Bool)

(assert (=> b!109038 m!123203))

(assert (=> b!108277 d!30441))

(assert (=> b!108277 d!29821))

(declare-fun d!30443 () Bool)

(declare-fun res!53998 () Bool)

(declare-fun e!70916 () Bool)

(assert (=> d!30443 (=> res!53998 e!70916)))

(assert (=> d!30443 (= res!53998 (and ((_ is Cons!1600) (toList!786 lt!55306)) (= (_1!1199 (h!2198 (toList!786 lt!55306))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30443 (= (containsKey!161 (toList!786 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000) e!70916)))

(declare-fun b!109039 () Bool)

(declare-fun e!70917 () Bool)

(assert (=> b!109039 (= e!70916 e!70917)))

(declare-fun res!53999 () Bool)

(assert (=> b!109039 (=> (not res!53999) (not e!70917))))

(assert (=> b!109039 (= res!53999 (and (or (not ((_ is Cons!1600) (toList!786 lt!55306))) (bvsle (_1!1199 (h!2198 (toList!786 lt!55306))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1600) (toList!786 lt!55306)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55306))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109040 () Bool)

(assert (=> b!109040 (= e!70917 (containsKey!161 (t!5712 (toList!786 lt!55306)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30443 (not res!53998)) b!109039))

(assert (= (and b!109039 res!53999) b!109040))

(declare-fun m!123205 () Bool)

(assert (=> b!109040 m!123205))

(assert (=> d!30005 d!30443))

(declare-fun b!109044 () Bool)

(declare-fun e!70919 () Option!164)

(assert (=> b!109044 (= e!70919 None!162)))

(declare-fun b!109043 () Bool)

(assert (=> b!109043 (= e!70919 (getValueByKey!158 (t!5712 (toList!786 lt!55736)) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!109041 () Bool)

(declare-fun e!70918 () Option!164)

(assert (=> b!109041 (= e!70918 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55736)))))))

(declare-fun d!30445 () Bool)

(declare-fun c!19251 () Bool)

(assert (=> d!30445 (= c!19251 (and ((_ is Cons!1600) (toList!786 lt!55736)) (= (_1!1199 (h!2198 (toList!786 lt!55736))) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (=> d!30445 (= (getValueByKey!158 (toList!786 lt!55736) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) e!70918)))

(declare-fun b!109042 () Bool)

(assert (=> b!109042 (= e!70918 e!70919)))

(declare-fun c!19252 () Bool)

(assert (=> b!109042 (= c!19252 (and ((_ is Cons!1600) (toList!786 lt!55736)) (not (= (_1!1199 (h!2198 (toList!786 lt!55736))) (_1!1199 (ite (or c!18922 c!18919) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))))

(assert (= (and d!30445 c!19251) b!109041))

(assert (= (and d!30445 (not c!19251)) b!109042))

(assert (= (and b!109042 c!19252) b!109043))

(assert (= (and b!109042 (not c!19252)) b!109044))

(declare-fun m!123207 () Bool)

(assert (=> b!109043 m!123207))

(assert (=> b!108353 d!30445))

(declare-fun d!30447 () Bool)

(assert (=> d!30447 (= (isDefined!110 (getValueByKey!158 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!380 (getValueByKey!158 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4489 () Bool)

(assert (= bs!4489 d!30447))

(assert (=> bs!4489 m!121377))

(declare-fun m!123209 () Bool)

(assert (=> bs!4489 m!123209))

(assert (=> b!108069 d!30447))

(assert (=> b!108069 d!30107))

(declare-fun b!109045 () Bool)

(declare-fun e!70920 () Bool)

(declare-fun call!11570 () Bool)

(assert (=> b!109045 (= e!70920 call!11570)))

(declare-fun b!109046 () Bool)

(declare-fun e!70922 () Bool)

(assert (=> b!109046 (= e!70922 call!11570)))

(declare-fun b!109047 () Bool)

(assert (=> b!109047 (= e!70920 e!70922)))

(declare-fun lt!56084 () (_ BitVec 64))

(assert (=> b!109047 (= lt!56084 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!56083 () Unit!3301)

(assert (=> b!109047 (= lt!56083 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) lt!56084 #b00000000000000000000000000000000))))

(assert (=> b!109047 (arrayContainsKey!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) lt!56084 #b00000000000000000000000000000000)))

(declare-fun lt!56082 () Unit!3301)

(assert (=> b!109047 (= lt!56082 lt!56083)))

(declare-fun res!54000 () Bool)

(assert (=> b!109047 (= res!54000 (= (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000) (_keys!4315 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992)))) (Found!254 #b00000000000000000000000000000000)))))

(assert (=> b!109047 (=> (not res!54000) (not e!70922))))

(declare-fun bm!11567 () Bool)

(assert (=> bm!11567 (= call!11570 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4315 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun d!30449 () Bool)

(declare-fun res!54001 () Bool)

(declare-fun e!70921 () Bool)

(assert (=> d!30449 (=> res!54001 e!70921)))

(assert (=> d!30449 (= res!54001 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30449 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (mask!6763 (v!2914 (underlying!367 thiss!992)))) e!70921)))

(declare-fun b!109048 () Bool)

(assert (=> b!109048 (= e!70921 e!70920)))

(declare-fun c!19253 () Bool)

(assert (=> b!109048 (= c!19253 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!30449 (not res!54001)) b!109048))

(assert (= (and b!109048 c!19253) b!109047))

(assert (= (and b!109048 (not c!19253)) b!109045))

(assert (= (and b!109047 res!54000) b!109046))

(assert (= (or b!109046 b!109045) bm!11567))

(declare-fun m!123211 () Bool)

(assert (=> b!109047 m!123211))

(declare-fun m!123213 () Bool)

(assert (=> b!109047 m!123213))

(declare-fun m!123215 () Bool)

(assert (=> b!109047 m!123215))

(assert (=> b!109047 m!123211))

(declare-fun m!123217 () Bool)

(assert (=> b!109047 m!123217))

(declare-fun m!123219 () Bool)

(assert (=> bm!11567 m!123219))

(assert (=> b!109048 m!123211))

(assert (=> b!109048 m!123211))

(declare-fun m!123221 () Bool)

(assert (=> b!109048 m!123221))

(assert (=> b!108217 d!30449))

(declare-fun b!109050 () Bool)

(declare-fun e!70925 () Bool)

(assert (=> b!109050 (= e!70925 (contains!822 Nil!1602 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!109051 () Bool)

(declare-fun e!70926 () Bool)

(declare-fun call!11571 () Bool)

(assert (=> b!109051 (= e!70926 call!11571)))

(declare-fun bm!11568 () Bool)

(declare-fun c!19254 () Bool)

(assert (=> bm!11568 (= call!11571 (arrayNoDuplicates!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19254 (Cons!1601 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000) Nil!1602) Nil!1602)))))

(declare-fun b!109052 () Bool)

(declare-fun e!70924 () Bool)

(declare-fun e!70923 () Bool)

(assert (=> b!109052 (= e!70924 e!70923)))

(declare-fun res!54004 () Bool)

(assert (=> b!109052 (=> (not res!54004) (not e!70923))))

(assert (=> b!109052 (= res!54004 (not e!70925))))

(declare-fun res!54003 () Bool)

(assert (=> b!109052 (=> (not res!54003) (not e!70925))))

(assert (=> b!109052 (= res!54003 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!109053 () Bool)

(assert (=> b!109053 (= e!70926 call!11571)))

(declare-fun d!30451 () Bool)

(declare-fun res!54002 () Bool)

(assert (=> d!30451 (=> res!54002 e!70924)))

(assert (=> d!30451 (= res!54002 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30451 (= (arrayNoDuplicates!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 Nil!1602) e!70924)))

(declare-fun b!109049 () Bool)

(assert (=> b!109049 (= e!70923 e!70926)))

(assert (=> b!109049 (= c!19254 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!30451 (not res!54002)) b!109052))

(assert (= (and b!109052 res!54003) b!109050))

(assert (= (and b!109052 res!54004) b!109049))

(assert (= (and b!109049 c!19254) b!109053))

(assert (= (and b!109049 (not c!19254)) b!109051))

(assert (= (or b!109053 b!109051) bm!11568))

(assert (=> b!109050 m!123211))

(assert (=> b!109050 m!123211))

(declare-fun m!123223 () Bool)

(assert (=> b!109050 m!123223))

(assert (=> bm!11568 m!123211))

(declare-fun m!123225 () Bool)

(assert (=> bm!11568 m!123225))

(assert (=> b!109052 m!123211))

(assert (=> b!109052 m!123211))

(assert (=> b!109052 m!123221))

(assert (=> b!109049 m!123211))

(assert (=> b!109049 m!123211))

(assert (=> b!109049 m!123221))

(assert (=> b!108218 d!30451))

(declare-fun d!30453 () Bool)

(assert (=> d!30453 (= (content!113 Nil!1602) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!30023 d!30453))

(assert (=> b!108211 d!29795))

(declare-fun d!30455 () Bool)

(assert (=> d!30455 (= (apply!99 (+!142 lt!55395 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) lt!55398) (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55395 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))) lt!55398)))))

(declare-fun bs!4490 () Bool)

(assert (= bs!4490 d!30455))

(declare-fun m!123227 () Bool)

(assert (=> bs!4490 m!123227))

(assert (=> bs!4490 m!123227))

(declare-fun m!123229 () Bool)

(assert (=> bs!4490 m!123229))

(assert (=> b!107916 d!30455))

(declare-fun d!30457 () Bool)

(assert (=> d!30457 (contains!820 (+!142 lt!55401 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))) lt!55403)))

(declare-fun lt!56085 () Unit!3301)

(assert (=> d!30457 (= lt!56085 (choose!680 lt!55401 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) lt!55403))))

(assert (=> d!30457 (contains!820 lt!55401 lt!55403)))

(assert (=> d!30457 (= (addStillContains!75 lt!55401 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) lt!55403) lt!56085)))

(declare-fun bs!4491 () Bool)

(assert (= bs!4491 d!30457))

(assert (=> bs!4491 m!121207))

(assert (=> bs!4491 m!121207))

(assert (=> bs!4491 m!121209))

(declare-fun m!123231 () Bool)

(assert (=> bs!4491 m!123231))

(declare-fun m!123233 () Bool)

(assert (=> bs!4491 m!123233))

(assert (=> b!107916 d!30457))

(declare-fun d!30459 () Bool)

(declare-fun e!70927 () Bool)

(assert (=> d!30459 e!70927))

(declare-fun res!54006 () Bool)

(assert (=> d!30459 (=> (not res!54006) (not e!70927))))

(declare-fun lt!56089 () ListLongMap!1541)

(assert (=> d!30459 (= res!54006 (contains!820 lt!56089 (_1!1199 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))))))

(declare-fun lt!56088 () List!1604)

(assert (=> d!30459 (= lt!56089 (ListLongMap!1542 lt!56088))))

(declare-fun lt!56086 () Unit!3301)

(declare-fun lt!56087 () Unit!3301)

(assert (=> d!30459 (= lt!56086 lt!56087)))

(assert (=> d!30459 (= (getValueByKey!158 lt!56088 (_1!1199 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))) (Some!163 (_2!1199 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))))))

(assert (=> d!30459 (= lt!56087 (lemmaContainsTupThenGetReturnValue!74 lt!56088 (_1!1199 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))) (_2!1199 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))))))

(assert (=> d!30459 (= lt!56088 (insertStrictlySorted!77 (toList!786 lt!55401) (_1!1199 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))) (_2!1199 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))))))

(assert (=> d!30459 (= (+!142 lt!55401 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))) lt!56089)))

(declare-fun b!109054 () Bool)

(declare-fun res!54005 () Bool)

(assert (=> b!109054 (=> (not res!54005) (not e!70927))))

(assert (=> b!109054 (= res!54005 (= (getValueByKey!158 (toList!786 lt!56089) (_1!1199 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))) (Some!163 (_2!1199 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))))))))

(declare-fun b!109055 () Bool)

(assert (=> b!109055 (= e!70927 (contains!823 (toList!786 lt!56089) (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))))))

(assert (= (and d!30459 res!54006) b!109054))

(assert (= (and b!109054 res!54005) b!109055))

(declare-fun m!123235 () Bool)

(assert (=> d!30459 m!123235))

(declare-fun m!123237 () Bool)

(assert (=> d!30459 m!123237))

(declare-fun m!123239 () Bool)

(assert (=> d!30459 m!123239))

(declare-fun m!123241 () Bool)

(assert (=> d!30459 m!123241))

(declare-fun m!123243 () Bool)

(assert (=> b!109054 m!123243))

(declare-fun m!123245 () Bool)

(assert (=> b!109055 m!123245))

(assert (=> b!107916 d!30459))

(declare-fun d!30461 () Bool)

(declare-fun e!70928 () Bool)

(assert (=> d!30461 e!70928))

(declare-fun res!54007 () Bool)

(assert (=> d!30461 (=> res!54007 e!70928)))

(declare-fun lt!56090 () Bool)

(assert (=> d!30461 (= res!54007 (not lt!56090))))

(declare-fun lt!56093 () Bool)

(assert (=> d!30461 (= lt!56090 lt!56093)))

(declare-fun lt!56092 () Unit!3301)

(declare-fun e!70929 () Unit!3301)

(assert (=> d!30461 (= lt!56092 e!70929)))

(declare-fun c!19255 () Bool)

(assert (=> d!30461 (= c!19255 lt!56093)))

(assert (=> d!30461 (= lt!56093 (containsKey!161 (toList!786 (+!142 lt!55401 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))) lt!55403))))

(assert (=> d!30461 (= (contains!820 (+!142 lt!55401 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))) lt!55403) lt!56090)))

(declare-fun b!109056 () Bool)

(declare-fun lt!56091 () Unit!3301)

(assert (=> b!109056 (= e!70929 lt!56091)))

(assert (=> b!109056 (= lt!56091 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (+!142 lt!55401 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))) lt!55403))))

(assert (=> b!109056 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55401 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))) lt!55403))))

(declare-fun b!109057 () Bool)

(declare-fun Unit!3360 () Unit!3301)

(assert (=> b!109057 (= e!70929 Unit!3360)))

(declare-fun b!109058 () Bool)

(assert (=> b!109058 (= e!70928 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55401 (tuple2!2377 lt!55405 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))) lt!55403)))))

(assert (= (and d!30461 c!19255) b!109056))

(assert (= (and d!30461 (not c!19255)) b!109057))

(assert (= (and d!30461 (not res!54007)) b!109058))

(declare-fun m!123247 () Bool)

(assert (=> d!30461 m!123247))

(declare-fun m!123249 () Bool)

(assert (=> b!109056 m!123249))

(declare-fun m!123251 () Bool)

(assert (=> b!109056 m!123251))

(assert (=> b!109056 m!123251))

(declare-fun m!123253 () Bool)

(assert (=> b!109056 m!123253))

(assert (=> b!109058 m!123251))

(assert (=> b!109058 m!123251))

(assert (=> b!109058 m!123253))

(assert (=> b!107916 d!30461))

(declare-fun d!30463 () Bool)

(assert (=> d!30463 (= (apply!99 lt!55395 lt!55398) (get!1350 (getValueByKey!158 (toList!786 lt!55395) lt!55398)))))

(declare-fun bs!4492 () Bool)

(assert (= bs!4492 d!30463))

(declare-fun m!123255 () Bool)

(assert (=> bs!4492 m!123255))

(assert (=> bs!4492 m!123255))

(declare-fun m!123257 () Bool)

(assert (=> bs!4492 m!123257))

(assert (=> b!107916 d!30463))

(declare-fun d!30465 () Bool)

(declare-fun e!70930 () Bool)

(assert (=> d!30465 e!70930))

(declare-fun res!54009 () Bool)

(assert (=> d!30465 (=> (not res!54009) (not e!70930))))

(declare-fun lt!56097 () ListLongMap!1541)

(assert (=> d!30465 (= res!54009 (contains!820 lt!56097 (_1!1199 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))))))

(declare-fun lt!56096 () List!1604)

(assert (=> d!30465 (= lt!56097 (ListLongMap!1542 lt!56096))))

(declare-fun lt!56094 () Unit!3301)

(declare-fun lt!56095 () Unit!3301)

(assert (=> d!30465 (= lt!56094 lt!56095)))

(assert (=> d!30465 (= (getValueByKey!158 lt!56096 (_1!1199 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))) (Some!163 (_2!1199 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))))))

(assert (=> d!30465 (= lt!56095 (lemmaContainsTupThenGetReturnValue!74 lt!56096 (_1!1199 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))) (_2!1199 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))))))

(assert (=> d!30465 (= lt!56096 (insertStrictlySorted!77 (toList!786 lt!55397) (_1!1199 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))) (_2!1199 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))))))

(assert (=> d!30465 (= (+!142 lt!55397 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))) lt!56097)))

(declare-fun b!109059 () Bool)

(declare-fun res!54008 () Bool)

(assert (=> b!109059 (=> (not res!54008) (not e!70930))))

(assert (=> b!109059 (= res!54008 (= (getValueByKey!158 (toList!786 lt!56097) (_1!1199 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))) (Some!163 (_2!1199 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))))))))

(declare-fun b!109060 () Bool)

(assert (=> b!109060 (= e!70930 (contains!823 (toList!786 lt!56097) (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))))))

(assert (= (and d!30465 res!54009) b!109059))

(assert (= (and b!109059 res!54008) b!109060))

(declare-fun m!123259 () Bool)

(assert (=> d!30465 m!123259))

(declare-fun m!123261 () Bool)

(assert (=> d!30465 m!123261))

(declare-fun m!123263 () Bool)

(assert (=> d!30465 m!123263))

(declare-fun m!123265 () Bool)

(assert (=> d!30465 m!123265))

(declare-fun m!123267 () Bool)

(assert (=> b!109059 m!123267))

(declare-fun m!123269 () Bool)

(assert (=> b!109060 m!123269))

(assert (=> b!107916 d!30465))

(declare-fun d!30467 () Bool)

(assert (=> d!30467 (= (apply!99 (+!142 lt!55399 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) lt!55407) (apply!99 lt!55399 lt!55407))))

(declare-fun lt!56098 () Unit!3301)

(assert (=> d!30467 (= lt!56098 (choose!679 lt!55399 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) lt!55407))))

(declare-fun e!70931 () Bool)

(assert (=> d!30467 e!70931))

(declare-fun res!54010 () Bool)

(assert (=> d!30467 (=> (not res!54010) (not e!70931))))

(assert (=> d!30467 (= res!54010 (contains!820 lt!55399 lt!55407))))

(assert (=> d!30467 (= (addApplyDifferent!75 lt!55399 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) lt!55407) lt!56098)))

(declare-fun b!109061 () Bool)

(assert (=> b!109061 (= e!70931 (not (= lt!55407 lt!55404)))))

(assert (= (and d!30467 res!54010) b!109061))

(assert (=> d!30467 m!121193))

(assert (=> d!30467 m!121187))

(declare-fun m!123271 () Bool)

(assert (=> d!30467 m!123271))

(declare-fun m!123273 () Bool)

(assert (=> d!30467 m!123273))

(assert (=> d!30467 m!121187))

(assert (=> d!30467 m!121189))

(assert (=> b!107916 d!30467))

(assert (=> b!107916 d!30065))

(declare-fun d!30469 () Bool)

(assert (=> d!30469 (= (apply!99 lt!55399 lt!55407) (get!1350 (getValueByKey!158 (toList!786 lt!55399) lt!55407)))))

(declare-fun bs!4493 () Bool)

(assert (= bs!4493 d!30469))

(declare-fun m!123275 () Bool)

(assert (=> bs!4493 m!123275))

(assert (=> bs!4493 m!123275))

(declare-fun m!123277 () Bool)

(assert (=> bs!4493 m!123277))

(assert (=> b!107916 d!30469))

(declare-fun d!30471 () Bool)

(declare-fun e!70932 () Bool)

(assert (=> d!30471 e!70932))

(declare-fun res!54012 () Bool)

(assert (=> d!30471 (=> (not res!54012) (not e!70932))))

(declare-fun lt!56102 () ListLongMap!1541)

(assert (=> d!30471 (= res!54012 (contains!820 lt!56102 (_1!1199 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(declare-fun lt!56101 () List!1604)

(assert (=> d!30471 (= lt!56102 (ListLongMap!1542 lt!56101))))

(declare-fun lt!56099 () Unit!3301)

(declare-fun lt!56100 () Unit!3301)

(assert (=> d!30471 (= lt!56099 lt!56100)))

(assert (=> d!30471 (= (getValueByKey!158 lt!56101 (_1!1199 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))) (Some!163 (_2!1199 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(assert (=> d!30471 (= lt!56100 (lemmaContainsTupThenGetReturnValue!74 lt!56101 (_1!1199 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) (_2!1199 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(assert (=> d!30471 (= lt!56101 (insertStrictlySorted!77 (toList!786 lt!55399) (_1!1199 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) (_2!1199 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(assert (=> d!30471 (= (+!142 lt!55399 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) lt!56102)))

(declare-fun b!109062 () Bool)

(declare-fun res!54011 () Bool)

(assert (=> b!109062 (=> (not res!54011) (not e!70932))))

(assert (=> b!109062 (= res!54011 (= (getValueByKey!158 (toList!786 lt!56102) (_1!1199 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))) (Some!163 (_2!1199 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))))))

(declare-fun b!109063 () Bool)

(assert (=> b!109063 (= e!70932 (contains!823 (toList!786 lt!56102) (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))))

(assert (= (and d!30471 res!54012) b!109062))

(assert (= (and b!109062 res!54011) b!109063))

(declare-fun m!123279 () Bool)

(assert (=> d!30471 m!123279))

(declare-fun m!123281 () Bool)

(assert (=> d!30471 m!123281))

(declare-fun m!123283 () Bool)

(assert (=> d!30471 m!123283))

(declare-fun m!123285 () Bool)

(assert (=> d!30471 m!123285))

(declare-fun m!123287 () Bool)

(assert (=> b!109062 m!123287))

(declare-fun m!123289 () Bool)

(assert (=> b!109063 m!123289))

(assert (=> b!107916 d!30471))

(declare-fun d!30473 () Bool)

(declare-fun e!70933 () Bool)

(assert (=> d!30473 e!70933))

(declare-fun res!54014 () Bool)

(assert (=> d!30473 (=> (not res!54014) (not e!70933))))

(declare-fun lt!56106 () ListLongMap!1541)

(assert (=> d!30473 (= res!54014 (contains!820 lt!56106 (_1!1199 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(declare-fun lt!56105 () List!1604)

(assert (=> d!30473 (= lt!56106 (ListLongMap!1542 lt!56105))))

(declare-fun lt!56103 () Unit!3301)

(declare-fun lt!56104 () Unit!3301)

(assert (=> d!30473 (= lt!56103 lt!56104)))

(assert (=> d!30473 (= (getValueByKey!158 lt!56105 (_1!1199 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))) (Some!163 (_2!1199 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(assert (=> d!30473 (= lt!56104 (lemmaContainsTupThenGetReturnValue!74 lt!56105 (_1!1199 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) (_2!1199 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(assert (=> d!30473 (= lt!56105 (insertStrictlySorted!77 (toList!786 lt!55395) (_1!1199 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) (_2!1199 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(assert (=> d!30473 (= (+!142 lt!55395 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) lt!56106)))

(declare-fun b!109064 () Bool)

(declare-fun res!54013 () Bool)

(assert (=> b!109064 (=> (not res!54013) (not e!70933))))

(assert (=> b!109064 (= res!54013 (= (getValueByKey!158 (toList!786 lt!56106) (_1!1199 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))) (Some!163 (_2!1199 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))))))

(declare-fun b!109065 () Bool)

(assert (=> b!109065 (= e!70933 (contains!823 (toList!786 lt!56106) (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))))

(assert (= (and d!30473 res!54014) b!109064))

(assert (= (and b!109064 res!54013) b!109065))

(declare-fun m!123291 () Bool)

(assert (=> d!30473 m!123291))

(declare-fun m!123293 () Bool)

(assert (=> d!30473 m!123293))

(declare-fun m!123295 () Bool)

(assert (=> d!30473 m!123295))

(declare-fun m!123297 () Bool)

(assert (=> d!30473 m!123297))

(declare-fun m!123299 () Bool)

(assert (=> b!109064 m!123299))

(declare-fun m!123301 () Bool)

(assert (=> b!109065 m!123301))

(assert (=> b!107916 d!30473))

(declare-fun d!30475 () Bool)

(assert (=> d!30475 (= (apply!99 (+!142 lt!55397 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))) lt!55411) (apply!99 lt!55397 lt!55411))))

(declare-fun lt!56107 () Unit!3301)

(assert (=> d!30475 (= lt!56107 (choose!679 lt!55397 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) lt!55411))))

(declare-fun e!70934 () Bool)

(assert (=> d!30475 e!70934))

(declare-fun res!54015 () Bool)

(assert (=> d!30475 (=> (not res!54015) (not e!70934))))

(assert (=> d!30475 (= res!54015 (contains!820 lt!55397 lt!55411))))

(assert (=> d!30475 (= (addApplyDifferent!75 lt!55397 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)) lt!55411) lt!56107)))

(declare-fun b!109066 () Bool)

(assert (=> b!109066 (= e!70934 (not (= lt!55411 lt!55416)))))

(assert (= (and d!30475 res!54015) b!109066))

(assert (=> d!30475 m!121183))

(assert (=> d!30475 m!121199))

(declare-fun m!123303 () Bool)

(assert (=> d!30475 m!123303))

(declare-fun m!123305 () Bool)

(assert (=> d!30475 m!123305))

(assert (=> d!30475 m!121199))

(assert (=> d!30475 m!121201))

(assert (=> b!107916 d!30475))

(declare-fun d!30477 () Bool)

(assert (=> d!30477 (= (apply!99 lt!55397 lt!55411) (get!1350 (getValueByKey!158 (toList!786 lt!55397) lt!55411)))))

(declare-fun bs!4494 () Bool)

(assert (= bs!4494 d!30477))

(declare-fun m!123307 () Bool)

(assert (=> bs!4494 m!123307))

(assert (=> bs!4494 m!123307))

(declare-fun m!123309 () Bool)

(assert (=> bs!4494 m!123309))

(assert (=> b!107916 d!30477))

(declare-fun d!30479 () Bool)

(assert (=> d!30479 (= (apply!99 (+!142 lt!55395 (tuple2!2377 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) lt!55398) (apply!99 lt!55395 lt!55398))))

(declare-fun lt!56108 () Unit!3301)

(assert (=> d!30479 (= lt!56108 (choose!679 lt!55395 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) lt!55398))))

(declare-fun e!70935 () Bool)

(assert (=> d!30479 e!70935))

(declare-fun res!54016 () Bool)

(assert (=> d!30479 (=> (not res!54016) (not e!70935))))

(assert (=> d!30479 (= res!54016 (contains!820 lt!55395 lt!55398))))

(assert (=> d!30479 (= (addApplyDifferent!75 lt!55395 lt!55396 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)) lt!55398) lt!56108)))

(declare-fun b!109067 () Bool)

(assert (=> b!109067 (= e!70935 (not (= lt!55398 lt!55396)))))

(assert (= (and d!30479 res!54016) b!109067))

(assert (=> d!30479 m!121205))

(assert (=> d!30479 m!121203))

(declare-fun m!123311 () Bool)

(assert (=> d!30479 m!123311))

(declare-fun m!123313 () Bool)

(assert (=> d!30479 m!123313))

(assert (=> d!30479 m!121203))

(assert (=> d!30479 m!121211))

(assert (=> b!107916 d!30479))

(declare-fun d!30481 () Bool)

(assert (=> d!30481 (= (apply!99 (+!142 lt!55399 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) lt!55407) (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55399 (tuple2!2377 lt!55404 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))) lt!55407)))))

(declare-fun bs!4495 () Bool)

(assert (= bs!4495 d!30481))

(declare-fun m!123315 () Bool)

(assert (=> bs!4495 m!123315))

(assert (=> bs!4495 m!123315))

(declare-fun m!123317 () Bool)

(assert (=> bs!4495 m!123317))

(assert (=> b!107916 d!30481))

(declare-fun d!30483 () Bool)

(assert (=> d!30483 (= (apply!99 (+!142 lt!55397 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16)))) lt!55411) (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55397 (tuple2!2377 lt!55416 (ite (and c!18886 c!18882) lt!55094 (zeroValue!2478 newMap!16))))) lt!55411)))))

(declare-fun bs!4496 () Bool)

(assert (= bs!4496 d!30483))

(declare-fun m!123319 () Bool)

(assert (=> bs!4496 m!123319))

(assert (=> bs!4496 m!123319))

(declare-fun m!123321 () Bool)

(assert (=> bs!4496 m!123321))

(assert (=> b!107916 d!30483))

(declare-fun b!109071 () Bool)

(declare-fun e!70937 () Option!164)

(assert (=> b!109071 (= e!70937 None!162)))

(declare-fun b!109070 () Bool)

(assert (=> b!109070 (= e!70937 (getValueByKey!158 (t!5712 (t!5712 (toList!786 lt!55324))) (_1!1199 lt!55093)))))

(declare-fun b!109068 () Bool)

(declare-fun e!70936 () Option!164)

(assert (=> b!109068 (= e!70936 (Some!163 (_2!1199 (h!2198 (t!5712 (toList!786 lt!55324))))))))

(declare-fun d!30485 () Bool)

(declare-fun c!19256 () Bool)

(assert (=> d!30485 (= c!19256 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55324))) (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55324)))) (_1!1199 lt!55093))))))

(assert (=> d!30485 (= (getValueByKey!158 (t!5712 (toList!786 lt!55324)) (_1!1199 lt!55093)) e!70936)))

(declare-fun b!109069 () Bool)

(assert (=> b!109069 (= e!70936 e!70937)))

(declare-fun c!19257 () Bool)

(assert (=> b!109069 (= c!19257 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55324))) (not (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55324)))) (_1!1199 lt!55093)))))))

(assert (= (and d!30485 c!19256) b!109068))

(assert (= (and d!30485 (not c!19256)) b!109069))

(assert (= (and b!109069 c!19257) b!109070))

(assert (= (and b!109069 (not c!19257)) b!109071))

(declare-fun m!123323 () Bool)

(assert (=> b!109070 m!123323))

(assert (=> b!108336 d!30485))

(declare-fun d!30487 () Bool)

(declare-fun lt!56109 () Bool)

(assert (=> d!30487 (= lt!56109 (select (content!112 (toList!786 lt!55522)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!70938 () Bool)

(assert (=> d!30487 (= lt!56109 e!70938)))

(declare-fun res!54018 () Bool)

(assert (=> d!30487 (=> (not res!54018) (not e!70938))))

(assert (=> d!30487 (= res!54018 ((_ is Cons!1600) (toList!786 lt!55522)))))

(assert (=> d!30487 (= (contains!823 (toList!786 lt!55522) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!56109)))

(declare-fun b!109072 () Bool)

(declare-fun e!70939 () Bool)

(assert (=> b!109072 (= e!70938 e!70939)))

(declare-fun res!54017 () Bool)

(assert (=> b!109072 (=> res!54017 e!70939)))

(assert (=> b!109072 (= res!54017 (= (h!2198 (toList!786 lt!55522)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!109073 () Bool)

(assert (=> b!109073 (= e!70939 (contains!823 (t!5712 (toList!786 lt!55522)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30487 res!54018) b!109072))

(assert (= (and b!109072 (not res!54017)) b!109073))

(declare-fun m!123325 () Bool)

(assert (=> d!30487 m!123325))

(declare-fun m!123327 () Bool)

(assert (=> d!30487 m!123327))

(declare-fun m!123329 () Bool)

(assert (=> b!109073 m!123329))

(assert (=> b!108111 d!30487))

(declare-fun d!30489 () Bool)

(declare-fun e!70940 () Bool)

(assert (=> d!30489 e!70940))

(declare-fun res!54019 () Bool)

(assert (=> d!30489 (=> res!54019 e!70940)))

(declare-fun lt!56110 () Bool)

(assert (=> d!30489 (= res!54019 (not lt!56110))))

(declare-fun lt!56113 () Bool)

(assert (=> d!30489 (= lt!56110 lt!56113)))

(declare-fun lt!56112 () Unit!3301)

(declare-fun e!70941 () Unit!3301)

(assert (=> d!30489 (= lt!56112 e!70941)))

(declare-fun c!19258 () Bool)

(assert (=> d!30489 (= c!19258 lt!56113)))

(assert (=> d!30489 (= lt!56113 (containsKey!161 (toList!786 lt!55606) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30489 (= (contains!820 lt!55606 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!56110)))

(declare-fun b!109074 () Bool)

(declare-fun lt!56111 () Unit!3301)

(assert (=> b!109074 (= e!70941 lt!56111)))

(assert (=> b!109074 (= lt!56111 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55606) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!109074 (isDefined!110 (getValueByKey!158 (toList!786 lt!55606) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109075 () Bool)

(declare-fun Unit!3361 () Unit!3301)

(assert (=> b!109075 (= e!70941 Unit!3361)))

(declare-fun b!109076 () Bool)

(assert (=> b!109076 (= e!70940 (isDefined!110 (getValueByKey!158 (toList!786 lt!55606) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30489 c!19258) b!109074))

(assert (= (and d!30489 (not c!19258)) b!109075))

(assert (= (and d!30489 (not res!54019)) b!109076))

(declare-fun m!123331 () Bool)

(assert (=> d!30489 m!123331))

(declare-fun m!123333 () Bool)

(assert (=> b!109074 m!123333))

(assert (=> b!109074 m!121765))

(assert (=> b!109074 m!121765))

(declare-fun m!123335 () Bool)

(assert (=> b!109074 m!123335))

(assert (=> b!109076 m!121765))

(assert (=> b!109076 m!121765))

(assert (=> b!109076 m!123335))

(assert (=> d!29999 d!30489))

(declare-fun b!109080 () Bool)

(declare-fun e!70943 () Option!164)

(assert (=> b!109080 (= e!70943 None!162)))

(declare-fun b!109079 () Bool)

(assert (=> b!109079 (= e!70943 (getValueByKey!158 (t!5712 lt!55605) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109077 () Bool)

(declare-fun e!70942 () Option!164)

(assert (=> b!109077 (= e!70942 (Some!163 (_2!1199 (h!2198 lt!55605))))))

(declare-fun d!30491 () Bool)

(declare-fun c!19259 () Bool)

(assert (=> d!30491 (= c!19259 (and ((_ is Cons!1600) lt!55605) (= (_1!1199 (h!2198 lt!55605)) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30491 (= (getValueByKey!158 lt!55605 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!70942)))

(declare-fun b!109078 () Bool)

(assert (=> b!109078 (= e!70942 e!70943)))

(declare-fun c!19260 () Bool)

(assert (=> b!109078 (= c!19260 (and ((_ is Cons!1600) lt!55605) (not (= (_1!1199 (h!2198 lt!55605)) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30491 c!19259) b!109077))

(assert (= (and d!30491 (not c!19259)) b!109078))

(assert (= (and b!109078 c!19260) b!109079))

(assert (= (and b!109078 (not c!19260)) b!109080))

(declare-fun m!123337 () Bool)

(assert (=> b!109079 m!123337))

(assert (=> d!29999 d!30491))

(declare-fun d!30493 () Bool)

(assert (=> d!30493 (= (getValueByKey!158 lt!55605 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!56114 () Unit!3301)

(assert (=> d!30493 (= lt!56114 (choose!677 lt!55605 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!70944 () Bool)

(assert (=> d!30493 e!70944))

(declare-fun res!54020 () Bool)

(assert (=> d!30493 (=> (not res!54020) (not e!70944))))

(assert (=> d!30493 (= res!54020 (isStrictlySorted!297 lt!55605))))

(assert (=> d!30493 (= (lemmaContainsTupThenGetReturnValue!74 lt!55605 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!56114)))

(declare-fun b!109081 () Bool)

(declare-fun res!54021 () Bool)

(assert (=> b!109081 (=> (not res!54021) (not e!70944))))

(assert (=> b!109081 (= res!54021 (containsKey!161 lt!55605 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109082 () Bool)

(assert (=> b!109082 (= e!70944 (contains!823 lt!55605 (tuple2!2377 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30493 res!54020) b!109081))

(assert (= (and b!109081 res!54021) b!109082))

(assert (=> d!30493 m!121759))

(declare-fun m!123339 () Bool)

(assert (=> d!30493 m!123339))

(declare-fun m!123341 () Bool)

(assert (=> d!30493 m!123341))

(declare-fun m!123343 () Bool)

(assert (=> b!109081 m!123343))

(declare-fun m!123345 () Bool)

(assert (=> b!109082 m!123345))

(assert (=> d!29999 d!30493))

(declare-fun b!109083 () Bool)

(declare-fun e!70946 () List!1604)

(declare-fun call!11574 () List!1604)

(assert (=> b!109083 (= e!70946 call!11574)))

(declare-fun b!109085 () Bool)

(declare-fun e!70945 () List!1604)

(assert (=> b!109085 (= e!70946 e!70945)))

(declare-fun c!19263 () Bool)

(assert (=> b!109085 (= c!19263 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!109086 () Bool)

(declare-fun call!11572 () List!1604)

(assert (=> b!109086 (= e!70945 call!11572)))

(declare-fun b!109087 () Bool)

(declare-fun e!70949 () List!1604)

(assert (=> b!109087 (= e!70949 (insertStrictlySorted!77 (t!5712 (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109088 () Bool)

(declare-fun c!19262 () Bool)

(assert (=> b!109088 (= e!70949 (ite c!19263 (t!5712 (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) (ite c!19262 (Cons!1600 (h!2198 (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) (t!5712 (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))) Nil!1601)))))

(declare-fun b!109089 () Bool)

(declare-fun e!70947 () Bool)

(declare-fun lt!56115 () List!1604)

(assert (=> b!109089 (= e!70947 (contains!823 lt!56115 (tuple2!2377 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun bm!11569 () Bool)

(assert (=> bm!11569 (= call!11572 call!11574)))

(declare-fun b!109090 () Bool)

(assert (=> b!109090 (= c!19262 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) (bvsgt (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70948 () List!1604)

(assert (=> b!109090 (= e!70945 e!70948)))

(declare-fun b!109091 () Bool)

(declare-fun call!11573 () List!1604)

(assert (=> b!109091 (= e!70948 call!11573)))

(declare-fun bm!11570 () Bool)

(declare-fun c!19261 () Bool)

(assert (=> bm!11570 (= call!11574 ($colon$colon!81 e!70949 (ite c!19261 (h!2198 (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) (tuple2!2377 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19264 () Bool)

(assert (=> bm!11570 (= c!19264 c!19261)))

(declare-fun b!109084 () Bool)

(declare-fun res!54023 () Bool)

(assert (=> b!109084 (=> (not res!54023) (not e!70947))))

(assert (=> b!109084 (= res!54023 (containsKey!161 lt!56115 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun d!30495 () Bool)

(assert (=> d!30495 e!70947))

(declare-fun res!54022 () Bool)

(assert (=> d!30495 (=> (not res!54022) (not e!70947))))

(assert (=> d!30495 (= res!54022 (isStrictlySorted!297 lt!56115))))

(assert (=> d!30495 (= lt!56115 e!70946)))

(assert (=> d!30495 (= c!19261 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))) (bvslt (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30495 (isStrictlySorted!297 (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30495 (= (insertStrictlySorted!77 (toList!786 (+!142 lt!55096 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!56115)))

(declare-fun bm!11571 () Bool)

(assert (=> bm!11571 (= call!11573 call!11572)))

(declare-fun b!109092 () Bool)

(assert (=> b!109092 (= e!70948 call!11573)))

(assert (= (and d!30495 c!19261) b!109083))

(assert (= (and d!30495 (not c!19261)) b!109085))

(assert (= (and b!109085 c!19263) b!109086))

(assert (= (and b!109085 (not c!19263)) b!109090))

(assert (= (and b!109090 c!19262) b!109091))

(assert (= (and b!109090 (not c!19262)) b!109092))

(assert (= (or b!109091 b!109092) bm!11571))

(assert (= (or b!109086 bm!11571) bm!11569))

(assert (= (or b!109083 bm!11569) bm!11570))

(assert (= (and bm!11570 c!19264) b!109087))

(assert (= (and bm!11570 (not c!19264)) b!109088))

(assert (= (and d!30495 res!54022) b!109084))

(assert (= (and b!109084 res!54023) b!109089))

(declare-fun m!123347 () Bool)

(assert (=> d!30495 m!123347))

(declare-fun m!123349 () Bool)

(assert (=> d!30495 m!123349))

(declare-fun m!123351 () Bool)

(assert (=> bm!11570 m!123351))

(declare-fun m!123353 () Bool)

(assert (=> b!109087 m!123353))

(declare-fun m!123355 () Bool)

(assert (=> b!109089 m!123355))

(declare-fun m!123357 () Bool)

(assert (=> b!109084 m!123357))

(assert (=> d!29999 d!30495))

(declare-fun d!30497 () Bool)

(assert (not d!30497))

(assert (=> b!108352 d!30497))

(declare-fun d!30499 () Bool)

(assert (=> d!30499 (isDefined!110 (getValueByKey!158 (toList!786 lt!55324) (_1!1199 lt!55093)))))

(declare-fun lt!56116 () Unit!3301)

(assert (=> d!30499 (= lt!56116 (choose!686 (toList!786 lt!55324) (_1!1199 lt!55093)))))

(declare-fun e!70950 () Bool)

(assert (=> d!30499 e!70950))

(declare-fun res!54024 () Bool)

(assert (=> d!30499 (=> (not res!54024) (not e!70950))))

(assert (=> d!30499 (= res!54024 (isStrictlySorted!297 (toList!786 lt!55324)))))

(assert (=> d!30499 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55324) (_1!1199 lt!55093)) lt!56116)))

(declare-fun b!109093 () Bool)

(assert (=> b!109093 (= e!70950 (containsKey!161 (toList!786 lt!55324) (_1!1199 lt!55093)))))

(assert (= (and d!30499 res!54024) b!109093))

(assert (=> d!30499 m!121083))

(assert (=> d!30499 m!121083))

(assert (=> d!30499 m!121263))

(declare-fun m!123359 () Bool)

(assert (=> d!30499 m!123359))

(declare-fun m!123361 () Bool)

(assert (=> d!30499 m!123361))

(assert (=> b!109093 m!121259))

(assert (=> b!107939 d!30499))

(assert (=> b!107939 d!30279))

(assert (=> b!107939 d!30017))

(declare-fun d!30501 () Bool)

(declare-fun lt!56117 () Bool)

(assert (=> d!30501 (= lt!56117 (select (content!113 Nil!1602) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!70952 () Bool)

(assert (=> d!30501 (= lt!56117 e!70952)))

(declare-fun res!54026 () Bool)

(assert (=> d!30501 (=> (not res!54026) (not e!70952))))

(assert (=> d!30501 (= res!54026 ((_ is Cons!1601) Nil!1602))))

(assert (=> d!30501 (= (contains!822 Nil!1602 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) lt!56117)))

(declare-fun b!109094 () Bool)

(declare-fun e!70951 () Bool)

(assert (=> b!109094 (= e!70952 e!70951)))

(declare-fun res!54025 () Bool)

(assert (=> b!109094 (=> res!54025 e!70951)))

(assert (=> b!109094 (= res!54025 (= (h!2199 Nil!1602) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109095 () Bool)

(assert (=> b!109095 (= e!70951 (contains!822 (t!5713 Nil!1602) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!30501 res!54026) b!109094))

(assert (= (and b!109094 (not res!54025)) b!109095))

(assert (=> d!30501 m!121917))

(assert (=> d!30501 m!121169))

(declare-fun m!123363 () Bool)

(assert (=> d!30501 m!123363))

(assert (=> b!109095 m!121169))

(declare-fun m!123365 () Bool)

(assert (=> b!109095 m!123365))

(assert (=> b!108330 d!30501))

(declare-fun d!30503 () Bool)

(assert (=> d!30503 (isDefined!110 (getValueByKey!158 (toList!786 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!56118 () Unit!3301)

(assert (=> d!30503 (= lt!56118 (choose!686 (toList!786 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70953 () Bool)

(assert (=> d!30503 e!70953))

(declare-fun res!54027 () Bool)

(assert (=> d!30503 (=> (not res!54027) (not e!70953))))

(assert (=> d!30503 (= res!54027 (isStrictlySorted!297 (toList!786 lt!55306)))))

(assert (=> d!30503 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000) lt!56118)))

(declare-fun b!109096 () Bool)

(assert (=> b!109096 (= e!70953 (containsKey!161 (toList!786 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30503 res!54027) b!109096))

(assert (=> d!30503 m!121785))

(assert (=> d!30503 m!121785))

(assert (=> d!30503 m!121787))

(declare-fun m!123367 () Bool)

(assert (=> d!30503 m!123367))

(assert (=> d!30503 m!122795))

(assert (=> b!109096 m!121781))

(assert (=> b!108240 d!30503))

(assert (=> b!108240 d!30273))

(assert (=> b!108240 d!30275))

(assert (=> d!29861 d!29859))

(declare-fun d!30505 () Bool)

(assert (=> d!30505 (= (getValueByKey!158 lt!55323 (_1!1199 lt!55093)) (Some!163 (_2!1199 lt!55093)))))

(assert (=> d!30505 true))

(declare-fun _$22!440 () Unit!3301)

(assert (=> d!30505 (= (choose!677 lt!55323 (_1!1199 lt!55093) (_2!1199 lt!55093)) _$22!440)))

(declare-fun bs!4497 () Bool)

(assert (= bs!4497 d!30505))

(assert (=> bs!4497 m!121077))

(assert (=> d!29861 d!30505))

(declare-fun d!30507 () Bool)

(declare-fun res!54028 () Bool)

(declare-fun e!70954 () Bool)

(assert (=> d!30507 (=> res!54028 e!70954)))

(assert (=> d!30507 (= res!54028 (or ((_ is Nil!1601) lt!55323) ((_ is Nil!1601) (t!5712 lt!55323))))))

(assert (=> d!30507 (= (isStrictlySorted!297 lt!55323) e!70954)))

(declare-fun b!109097 () Bool)

(declare-fun e!70955 () Bool)

(assert (=> b!109097 (= e!70954 e!70955)))

(declare-fun res!54029 () Bool)

(assert (=> b!109097 (=> (not res!54029) (not e!70955))))

(assert (=> b!109097 (= res!54029 (bvslt (_1!1199 (h!2198 lt!55323)) (_1!1199 (h!2198 (t!5712 lt!55323)))))))

(declare-fun b!109098 () Bool)

(assert (=> b!109098 (= e!70955 (isStrictlySorted!297 (t!5712 lt!55323)))))

(assert (= (and d!30507 (not res!54028)) b!109097))

(assert (= (and b!109097 res!54029) b!109098))

(declare-fun m!123369 () Bool)

(assert (=> b!109098 m!123369))

(assert (=> d!29861 d!30507))

(assert (=> d!29919 d!29909))

(declare-fun d!30509 () Bool)

(assert (=> d!30509 (= (apply!99 (+!142 lt!55373 (tuple2!2377 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55381) (apply!99 lt!55373 lt!55381))))

(assert (=> d!30509 true))

(declare-fun _$34!898 () Unit!3301)

(assert (=> d!30509 (= (choose!679 lt!55373 lt!55378 (minValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55381) _$34!898)))

(declare-fun bs!4498 () Bool)

(assert (= bs!4498 d!30509))

(assert (=> bs!4498 m!121103))

(assert (=> bs!4498 m!121103))

(assert (=> bs!4498 m!121105))

(assert (=> bs!4498 m!121109))

(assert (=> d!29919 d!30509))

(declare-fun d!30511 () Bool)

(declare-fun e!70956 () Bool)

(assert (=> d!30511 e!70956))

(declare-fun res!54030 () Bool)

(assert (=> d!30511 (=> res!54030 e!70956)))

(declare-fun lt!56119 () Bool)

(assert (=> d!30511 (= res!54030 (not lt!56119))))

(declare-fun lt!56122 () Bool)

(assert (=> d!30511 (= lt!56119 lt!56122)))

(declare-fun lt!56121 () Unit!3301)

(declare-fun e!70957 () Unit!3301)

(assert (=> d!30511 (= lt!56121 e!70957)))

(declare-fun c!19265 () Bool)

(assert (=> d!30511 (= c!19265 lt!56122)))

(assert (=> d!30511 (= lt!56122 (containsKey!161 (toList!786 lt!55373) lt!55381))))

(assert (=> d!30511 (= (contains!820 lt!55373 lt!55381) lt!56119)))

(declare-fun b!109100 () Bool)

(declare-fun lt!56120 () Unit!3301)

(assert (=> b!109100 (= e!70957 lt!56120)))

(assert (=> b!109100 (= lt!56120 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55373) lt!55381))))

(assert (=> b!109100 (isDefined!110 (getValueByKey!158 (toList!786 lt!55373) lt!55381))))

(declare-fun b!109101 () Bool)

(declare-fun Unit!3362 () Unit!3301)

(assert (=> b!109101 (= e!70957 Unit!3362)))

(declare-fun b!109102 () Bool)

(assert (=> b!109102 (= e!70956 (isDefined!110 (getValueByKey!158 (toList!786 lt!55373) lt!55381)))))

(assert (= (and d!30511 c!19265) b!109100))

(assert (= (and d!30511 (not c!19265)) b!109101))

(assert (= (and d!30511 (not res!54030)) b!109102))

(declare-fun m!123371 () Bool)

(assert (=> d!30511 m!123371))

(declare-fun m!123373 () Bool)

(assert (=> b!109100 m!123373))

(assert (=> b!109100 m!121433))

(assert (=> b!109100 m!121433))

(declare-fun m!123375 () Bool)

(assert (=> b!109100 m!123375))

(assert (=> b!109102 m!121433))

(assert (=> b!109102 m!121433))

(assert (=> b!109102 m!123375))

(assert (=> d!29919 d!30511))

(assert (=> d!29919 d!29921))

(assert (=> d!29919 d!29923))

(declare-fun d!30513 () Bool)

(assert (=> d!30513 (contains!820 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))

(declare-fun lt!56125 () Unit!3301)

(declare-fun choose!687 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) (_ BitVec 32) Int) Unit!3301)

(assert (=> d!30513 (= lt!56125 (choose!687 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(assert (=> d!30513 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30513 (= (lemmaArrayContainsKeyThenInListMap!31 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!56125)))

(declare-fun bs!4499 () Bool)

(assert (= bs!4499 d!30513))

(assert (=> bs!4499 m!120987))

(assert (=> bs!4499 m!120987))

(assert (=> bs!4499 m!120751))

(assert (=> bs!4499 m!120989))

(assert (=> bs!4499 m!120751))

(declare-fun m!123377 () Bool)

(assert (=> bs!4499 m!123377))

(assert (=> bs!4499 m!121179))

(assert (=> b!108284 d!30513))

(assert (=> b!108284 d!30031))

(assert (=> b!108284 d!30009))

(declare-fun d!30515 () Bool)

(assert (=> d!30515 (= (get!1350 (getValueByKey!158 (toList!786 lt!55371) lt!55385)) (v!2920 (getValueByKey!158 (toList!786 lt!55371) lt!55385)))))

(assert (=> d!29907 d!30515))

(declare-fun b!109106 () Bool)

(declare-fun e!70959 () Option!164)

(assert (=> b!109106 (= e!70959 None!162)))

(declare-fun b!109105 () Bool)

(assert (=> b!109105 (= e!70959 (getValueByKey!158 (t!5712 (toList!786 lt!55371)) lt!55385))))

(declare-fun b!109103 () Bool)

(declare-fun e!70958 () Option!164)

(assert (=> b!109103 (= e!70958 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55371)))))))

(declare-fun d!30517 () Bool)

(declare-fun c!19266 () Bool)

(assert (=> d!30517 (= c!19266 (and ((_ is Cons!1600) (toList!786 lt!55371)) (= (_1!1199 (h!2198 (toList!786 lt!55371))) lt!55385)))))

(assert (=> d!30517 (= (getValueByKey!158 (toList!786 lt!55371) lt!55385) e!70958)))

(declare-fun b!109104 () Bool)

(assert (=> b!109104 (= e!70958 e!70959)))

(declare-fun c!19267 () Bool)

(assert (=> b!109104 (= c!19267 (and ((_ is Cons!1600) (toList!786 lt!55371)) (not (= (_1!1199 (h!2198 (toList!786 lt!55371))) lt!55385))))))

(assert (= (and d!30517 c!19266) b!109103))

(assert (= (and d!30517 (not c!19266)) b!109104))

(assert (= (and b!109104 c!19267) b!109105))

(assert (= (and b!109104 (not c!19267)) b!109106))

(declare-fun m!123379 () Bool)

(assert (=> b!109105 m!123379))

(assert (=> d!29907 d!30517))

(assert (=> d!29993 d!29999))

(assert (=> d!29993 d!29997))

(assert (=> d!29993 d!30001))

(assert (=> d!29993 d!29995))

(declare-fun d!30519 () Bool)

(declare-fun lt!56126 () Bool)

(assert (=> d!30519 (= lt!56126 (select (content!112 (t!5712 (toList!786 lt!55320))) lt!55092))))

(declare-fun e!70960 () Bool)

(assert (=> d!30519 (= lt!56126 e!70960)))

(declare-fun res!54032 () Bool)

(assert (=> d!30519 (=> (not res!54032) (not e!70960))))

(assert (=> d!30519 (= res!54032 ((_ is Cons!1600) (t!5712 (toList!786 lt!55320))))))

(assert (=> d!30519 (= (contains!823 (t!5712 (toList!786 lt!55320)) lt!55092) lt!56126)))

(declare-fun b!109107 () Bool)

(declare-fun e!70961 () Bool)

(assert (=> b!109107 (= e!70960 e!70961)))

(declare-fun res!54031 () Bool)

(assert (=> b!109107 (=> res!54031 e!70961)))

(assert (=> b!109107 (= res!54031 (= (h!2198 (t!5712 (toList!786 lt!55320))) lt!55092))))

(declare-fun b!109108 () Bool)

(assert (=> b!109108 (= e!70961 (contains!823 (t!5712 (t!5712 (toList!786 lt!55320))) lt!55092))))

(assert (= (and d!30519 res!54032) b!109107))

(assert (= (and b!109107 (not res!54031)) b!109108))

(assert (=> d!30519 m!122435))

(declare-fun m!123381 () Bool)

(assert (=> d!30519 m!123381))

(declare-fun m!123383 () Bool)

(assert (=> b!109108 m!123383))

(assert (=> b!108109 d!30519))

(declare-fun d!30521 () Bool)

(declare-fun res!54033 () Bool)

(declare-fun e!70962 () Bool)

(assert (=> d!30521 (=> res!54033 e!70962)))

(assert (=> d!30521 (= res!54033 (and ((_ is Cons!1600) (toList!786 lt!55306)) (= (_1!1199 (h!2198 (toList!786 lt!55306))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30521 (= (containsKey!161 (toList!786 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000) e!70962)))

(declare-fun b!109109 () Bool)

(declare-fun e!70963 () Bool)

(assert (=> b!109109 (= e!70962 e!70963)))

(declare-fun res!54034 () Bool)

(assert (=> b!109109 (=> (not res!54034) (not e!70963))))

(assert (=> b!109109 (= res!54034 (and (or (not ((_ is Cons!1600) (toList!786 lt!55306))) (bvsle (_1!1199 (h!2198 (toList!786 lt!55306))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1600) (toList!786 lt!55306)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55306))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109110 () Bool)

(assert (=> b!109110 (= e!70963 (containsKey!161 (t!5712 (toList!786 lt!55306)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30521 (not res!54033)) b!109109))

(assert (= (and b!109109 res!54034) b!109110))

(declare-fun m!123385 () Bool)

(assert (=> b!109110 m!123385))

(assert (=> d!29899 d!30521))

(declare-fun d!30523 () Bool)

(declare-fun res!54035 () Bool)

(declare-fun e!70964 () Bool)

(assert (=> d!30523 (=> res!54035 e!70964)))

(assert (=> d!30523 (= res!54035 (and ((_ is Cons!1600) (toList!786 lt!55316)) (= (_1!1199 (h!2198 (toList!786 lt!55316))) (_1!1199 lt!55093))))))

(assert (=> d!30523 (= (containsKey!161 (toList!786 lt!55316) (_1!1199 lt!55093)) e!70964)))

(declare-fun b!109111 () Bool)

(declare-fun e!70965 () Bool)

(assert (=> b!109111 (= e!70964 e!70965)))

(declare-fun res!54036 () Bool)

(assert (=> b!109111 (=> (not res!54036) (not e!70965))))

(assert (=> b!109111 (= res!54036 (and (or (not ((_ is Cons!1600) (toList!786 lt!55316))) (bvsle (_1!1199 (h!2198 (toList!786 lt!55316))) (_1!1199 lt!55093))) ((_ is Cons!1600) (toList!786 lt!55316)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55316))) (_1!1199 lt!55093))))))

(declare-fun b!109112 () Bool)

(assert (=> b!109112 (= e!70965 (containsKey!161 (t!5712 (toList!786 lt!55316)) (_1!1199 lt!55093)))))

(assert (= (and d!30523 (not res!54035)) b!109111))

(assert (= (and b!109111 res!54036) b!109112))

(declare-fun m!123387 () Bool)

(assert (=> b!109112 m!123387))

(assert (=> d!29959 d!30523))

(declare-fun d!30525 () Bool)

(declare-fun e!70966 () Bool)

(assert (=> d!30525 e!70966))

(declare-fun res!54038 () Bool)

(assert (=> d!30525 (=> (not res!54038) (not e!70966))))

(declare-fun lt!56130 () ListLongMap!1541)

(assert (=> d!30525 (= res!54038 (contains!820 lt!56130 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(declare-fun lt!56129 () List!1604)

(assert (=> d!30525 (= lt!56130 (ListLongMap!1542 lt!56129))))

(declare-fun lt!56127 () Unit!3301)

(declare-fun lt!56128 () Unit!3301)

(assert (=> d!30525 (= lt!56127 lt!56128)))

(assert (=> d!30525 (= (getValueByKey!158 lt!56129 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))) (Some!163 (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(assert (=> d!30525 (= lt!56128 (lemmaContainsTupThenGetReturnValue!74 lt!56129 (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(assert (=> d!30525 (= lt!56129 (insertStrictlySorted!77 (toList!786 call!11430) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))))))

(assert (=> d!30525 (= (+!142 call!11430 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))) lt!56130)))

(declare-fun b!109113 () Bool)

(declare-fun res!54037 () Bool)

(assert (=> b!109113 (=> (not res!54037) (not e!70966))))

(assert (=> b!109113 (= res!54037 (= (getValueByKey!158 (toList!786 lt!56130) (_1!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16))))) (Some!163 (_2!1199 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))))))

(declare-fun b!109114 () Bool)

(assert (=> b!109114 (= e!70966 (contains!823 (toList!786 lt!56130) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18886 (ite c!18882 (minValue!2478 newMap!16) lt!55094) (minValue!2478 newMap!16)))))))

(assert (= (and d!30525 res!54038) b!109113))

(assert (= (and b!109113 res!54037) b!109114))

(declare-fun m!123389 () Bool)

(assert (=> d!30525 m!123389))

(declare-fun m!123391 () Bool)

(assert (=> d!30525 m!123391))

(declare-fun m!123393 () Bool)

(assert (=> d!30525 m!123393))

(declare-fun m!123395 () Bool)

(assert (=> d!30525 m!123395))

(declare-fun m!123397 () Bool)

(assert (=> b!109113 m!123397))

(declare-fun m!123399 () Bool)

(assert (=> b!109114 m!123399))

(assert (=> b!107922 d!30525))

(declare-fun d!30527 () Bool)

(assert (=> d!30527 (= (apply!99 lt!55557 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!786 lt!55557) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4500 () Bool)

(assert (= bs!4500 d!30527))

(declare-fun m!123401 () Bool)

(assert (=> bs!4500 m!123401))

(assert (=> bs!4500 m!123401))

(declare-fun m!123403 () Bool)

(assert (=> bs!4500 m!123403))

(assert (=> b!108165 d!30527))

(assert (=> b!108366 d!29851))

(declare-fun d!30529 () Bool)

(declare-fun res!54039 () Bool)

(declare-fun e!70967 () Bool)

(assert (=> d!30529 (=> res!54039 e!70967)))

(assert (=> d!30529 (= res!54039 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55099))) (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55099)))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30529 (= (containsKey!161 (t!5712 (toList!786 lt!55099)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70967)))

(declare-fun b!109115 () Bool)

(declare-fun e!70968 () Bool)

(assert (=> b!109115 (= e!70967 e!70968)))

(declare-fun res!54040 () Bool)

(assert (=> b!109115 (=> (not res!54040) (not e!70968))))

(assert (=> b!109115 (= res!54040 (and (or (not ((_ is Cons!1600) (t!5712 (toList!786 lt!55099)))) (bvsle (_1!1199 (h!2198 (t!5712 (toList!786 lt!55099)))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))) ((_ is Cons!1600) (t!5712 (toList!786 lt!55099))) (bvslt (_1!1199 (h!2198 (t!5712 (toList!786 lt!55099)))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(declare-fun b!109116 () Bool)

(assert (=> b!109116 (= e!70968 (containsKey!161 (t!5712 (t!5712 (toList!786 lt!55099))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30529 (not res!54039)) b!109115))

(assert (= (and b!109115 res!54040) b!109116))

(assert (=> b!109116 m!120751))

(declare-fun m!123405 () Bool)

(assert (=> b!109116 m!123405))

(assert (=> b!107936 d!30529))

(declare-fun d!30531 () Bool)

(declare-fun res!54041 () Bool)

(declare-fun e!70969 () Bool)

(assert (=> d!30531 (=> res!54041 e!70969)))

(assert (=> d!30531 (= res!54041 (and ((_ is Cons!1600) (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))) (= (_1!1199 (h!2198 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30531 (= (containsKey!161 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70969)))

(declare-fun b!109117 () Bool)

(declare-fun e!70970 () Bool)

(assert (=> b!109117 (= e!70969 e!70970)))

(declare-fun res!54042 () Bool)

(assert (=> b!109117 (=> (not res!54042) (not e!70970))))

(assert (=> b!109117 (= res!54042 (and (or (not ((_ is Cons!1600) (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))) (bvsle (_1!1199 (h!2198 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))) ((_ is Cons!1600) (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))) (bvslt (_1!1199 (h!2198 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(declare-fun b!109118 () Bool)

(assert (=> b!109118 (= e!70970 (containsKey!161 (t!5712 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30531 (not res!54041)) b!109117))

(assert (= (and b!109117 res!54042) b!109118))

(assert (=> b!109118 m!120751))

(declare-fun m!123407 () Bool)

(assert (=> b!109118 m!123407))

(assert (=> d!30031 d!30531))

(declare-fun b!109122 () Bool)

(declare-fun e!70972 () Option!164)

(assert (=> b!109122 (= e!70972 None!162)))

(declare-fun b!109121 () Bool)

(assert (=> b!109121 (= e!70972 (getValueByKey!158 (t!5712 (toList!786 lt!55606)) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109119 () Bool)

(declare-fun e!70971 () Option!164)

(assert (=> b!109119 (= e!70971 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55606)))))))

(declare-fun d!30533 () Bool)

(declare-fun c!19268 () Bool)

(assert (=> d!30533 (= c!19268 (and ((_ is Cons!1600) (toList!786 lt!55606)) (= (_1!1199 (h!2198 (toList!786 lt!55606))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30533 (= (getValueByKey!158 (toList!786 lt!55606) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!70971)))

(declare-fun b!109120 () Bool)

(assert (=> b!109120 (= e!70971 e!70972)))

(declare-fun c!19269 () Bool)

(assert (=> b!109120 (= c!19269 (and ((_ is Cons!1600) (toList!786 lt!55606)) (not (= (_1!1199 (h!2198 (toList!786 lt!55606))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30533 c!19268) b!109119))

(assert (= (and d!30533 (not c!19268)) b!109120))

(assert (= (and b!109120 c!19269) b!109121))

(assert (= (and b!109120 (not c!19269)) b!109122))

(declare-fun m!123409 () Bool)

(assert (=> b!109121 m!123409))

(assert (=> b!108236 d!30533))

(declare-fun d!30535 () Bool)

(assert (=> d!30535 (= ($colon$colon!81 e!70313 (ite c!18954 (h!2198 (toList!786 (+!142 lt!55096 lt!55093))) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092)))) (Cons!1600 (ite c!18954 (h!2198 (toList!786 (+!142 lt!55096 lt!55093))) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))) e!70313))))

(assert (=> bm!11444 d!30535))

(declare-fun b!109123 () Bool)

(declare-fun e!70973 () Bool)

(declare-fun call!11575 () Bool)

(assert (=> b!109123 (= e!70973 call!11575)))

(declare-fun b!109124 () Bool)

(declare-fun e!70975 () Bool)

(assert (=> b!109124 (= e!70975 call!11575)))

(declare-fun b!109125 () Bool)

(assert (=> b!109125 (= e!70973 e!70975)))

(declare-fun lt!56133 () (_ BitVec 64))

(assert (=> b!109125 (= lt!56133 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000))))

(declare-fun lt!56132 () Unit!3301)

(assert (=> b!109125 (= lt!56132 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4315 (_2!1200 lt!55269)) lt!56133 #b00000000000000000000000000000000))))

(assert (=> b!109125 (arrayContainsKey!0 (_keys!4315 (_2!1200 lt!55269)) lt!56133 #b00000000000000000000000000000000)))

(declare-fun lt!56131 () Unit!3301)

(assert (=> b!109125 (= lt!56131 lt!56132)))

(declare-fun res!54043 () Bool)

(assert (=> b!109125 (= res!54043 (= (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000) (_keys!4315 (_2!1200 lt!55269)) (mask!6763 (_2!1200 lt!55269))) (Found!254 #b00000000000000000000000000000000)))))

(assert (=> b!109125 (=> (not res!54043) (not e!70975))))

(declare-fun bm!11572 () Bool)

(assert (=> bm!11572 (= call!11575 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4315 (_2!1200 lt!55269)) (mask!6763 (_2!1200 lt!55269))))))

(declare-fun d!30537 () Bool)

(declare-fun res!54044 () Bool)

(declare-fun e!70974 () Bool)

(assert (=> d!30537 (=> res!54044 e!70974)))

(assert (=> d!30537 (= res!54044 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55269)))))))

(assert (=> d!30537 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4315 (_2!1200 lt!55269)) (mask!6763 (_2!1200 lt!55269))) e!70974)))

(declare-fun b!109126 () Bool)

(assert (=> b!109126 (= e!70974 e!70973)))

(declare-fun c!19270 () Bool)

(assert (=> b!109126 (= c!19270 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000)))))

(assert (= (and d!30537 (not res!54044)) b!109126))

(assert (= (and b!109126 c!19270) b!109125))

(assert (= (and b!109126 (not c!19270)) b!109123))

(assert (= (and b!109125 res!54043) b!109124))

(assert (= (or b!109124 b!109123) bm!11572))

(assert (=> b!109125 m!122131))

(declare-fun m!123411 () Bool)

(assert (=> b!109125 m!123411))

(declare-fun m!123413 () Bool)

(assert (=> b!109125 m!123413))

(assert (=> b!109125 m!122131))

(declare-fun m!123415 () Bool)

(assert (=> b!109125 m!123415))

(declare-fun m!123417 () Bool)

(assert (=> bm!11572 m!123417))

(assert (=> b!109126 m!122131))

(assert (=> b!109126 m!122131))

(assert (=> b!109126 m!122137))

(assert (=> b!108047 d!30537))

(declare-fun d!30539 () Bool)

(assert (=> d!30539 (= (get!1350 (getValueByKey!158 (toList!786 lt!55373) lt!55381)) (v!2920 (getValueByKey!158 (toList!786 lt!55373) lt!55381)))))

(assert (=> d!29909 d!30539))

(declare-fun b!109130 () Bool)

(declare-fun e!70977 () Option!164)

(assert (=> b!109130 (= e!70977 None!162)))

(declare-fun b!109129 () Bool)

(assert (=> b!109129 (= e!70977 (getValueByKey!158 (t!5712 (toList!786 lt!55373)) lt!55381))))

(declare-fun b!109127 () Bool)

(declare-fun e!70976 () Option!164)

(assert (=> b!109127 (= e!70976 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55373)))))))

(declare-fun d!30541 () Bool)

(declare-fun c!19271 () Bool)

(assert (=> d!30541 (= c!19271 (and ((_ is Cons!1600) (toList!786 lt!55373)) (= (_1!1199 (h!2198 (toList!786 lt!55373))) lt!55381)))))

(assert (=> d!30541 (= (getValueByKey!158 (toList!786 lt!55373) lt!55381) e!70976)))

(declare-fun b!109128 () Bool)

(assert (=> b!109128 (= e!70976 e!70977)))

(declare-fun c!19272 () Bool)

(assert (=> b!109128 (= c!19272 (and ((_ is Cons!1600) (toList!786 lt!55373)) (not (= (_1!1199 (h!2198 (toList!786 lt!55373))) lt!55381))))))

(assert (= (and d!30541 c!19271) b!109127))

(assert (= (and d!30541 (not c!19271)) b!109128))

(assert (= (and b!109128 c!19272) b!109129))

(assert (= (and b!109128 (not c!19272)) b!109130))

(declare-fun m!123419 () Bool)

(assert (=> b!109129 m!123419))

(assert (=> d!29909 d!30541))

(declare-fun d!30543 () Bool)

(declare-fun res!54045 () Bool)

(declare-fun e!70978 () Bool)

(assert (=> d!30543 (=> res!54045 e!70978)))

(assert (=> d!30543 (= res!54045 (= (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30543 (= (arrayContainsKey!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!70978)))

(declare-fun b!109131 () Bool)

(declare-fun e!70979 () Bool)

(assert (=> b!109131 (= e!70978 e!70979)))

(declare-fun res!54046 () Bool)

(assert (=> b!109131 (=> (not res!54046) (not e!70979))))

(assert (=> b!109131 (= res!54046 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!109132 () Bool)

(assert (=> b!109132 (= e!70979 (arrayContainsKey!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!30543 (not res!54045)) b!109131))

(assert (= (and b!109131 res!54046) b!109132))

(assert (=> d!30543 m!122093))

(assert (=> b!109132 m!120751))

(declare-fun m!123421 () Bool)

(assert (=> b!109132 m!123421))

(assert (=> b!108372 d!30543))

(assert (=> d!29871 d!29869))

(declare-fun d!30545 () Bool)

(assert (=> d!30545 (= (getValueByKey!158 lt!55319 (_1!1199 lt!55092)) (Some!163 (_2!1199 lt!55092)))))

(assert (=> d!30545 true))

(declare-fun _$22!441 () Unit!3301)

(assert (=> d!30545 (= (choose!677 lt!55319 (_1!1199 lt!55092) (_2!1199 lt!55092)) _$22!441)))

(declare-fun bs!4501 () Bool)

(assert (= bs!4501 d!30545))

(assert (=> bs!4501 m!121065))

(assert (=> d!29871 d!30545))

(declare-fun d!30547 () Bool)

(declare-fun res!54047 () Bool)

(declare-fun e!70980 () Bool)

(assert (=> d!30547 (=> res!54047 e!70980)))

(assert (=> d!30547 (= res!54047 (or ((_ is Nil!1601) lt!55319) ((_ is Nil!1601) (t!5712 lt!55319))))))

(assert (=> d!30547 (= (isStrictlySorted!297 lt!55319) e!70980)))

(declare-fun b!109133 () Bool)

(declare-fun e!70981 () Bool)

(assert (=> b!109133 (= e!70980 e!70981)))

(declare-fun res!54048 () Bool)

(assert (=> b!109133 (=> (not res!54048) (not e!70981))))

(assert (=> b!109133 (= res!54048 (bvslt (_1!1199 (h!2198 lt!55319)) (_1!1199 (h!2198 (t!5712 lt!55319)))))))

(declare-fun b!109134 () Bool)

(assert (=> b!109134 (= e!70981 (isStrictlySorted!297 (t!5712 lt!55319)))))

(assert (= (and d!30547 (not res!54047)) b!109133))

(assert (= (and b!109133 res!54048) b!109134))

(declare-fun m!123423 () Bool)

(assert (=> b!109134 m!123423))

(assert (=> d!29871 d!30547))

(declare-fun d!30549 () Bool)

(declare-fun lt!56134 () Bool)

(assert (=> d!30549 (= lt!56134 (select (content!112 (toList!786 lt!55610)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(declare-fun e!70982 () Bool)

(assert (=> d!30549 (= lt!56134 e!70982)))

(declare-fun res!54050 () Bool)

(assert (=> d!30549 (=> (not res!54050) (not e!70982))))

(assert (=> d!30549 (= res!54050 ((_ is Cons!1600) (toList!786 lt!55610)))))

(assert (=> d!30549 (= (contains!823 (toList!786 lt!55610) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) lt!56134)))

(declare-fun b!109135 () Bool)

(declare-fun e!70983 () Bool)

(assert (=> b!109135 (= e!70982 e!70983)))

(declare-fun res!54049 () Bool)

(assert (=> b!109135 (=> res!54049 e!70983)))

(assert (=> b!109135 (= res!54049 (= (h!2198 (toList!786 lt!55610)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(declare-fun b!109136 () Bool)

(assert (=> b!109136 (= e!70983 (contains!823 (t!5712 (toList!786 lt!55610)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(assert (= (and d!30549 res!54050) b!109135))

(assert (= (and b!109135 (not res!54049)) b!109136))

(declare-fun m!123425 () Bool)

(assert (=> d!30549 m!123425))

(declare-fun m!123427 () Bool)

(assert (=> d!30549 m!123427))

(declare-fun m!123429 () Bool)

(assert (=> b!109136 m!123429))

(assert (=> b!108239 d!30549))

(declare-fun d!30551 () Bool)

(assert (=> d!30551 (isDefined!110 (getValueByKey!158 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!56135 () Unit!3301)

(assert (=> d!30551 (= lt!56135 (choose!686 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70984 () Bool)

(assert (=> d!30551 e!70984))

(declare-fun res!54051 () Bool)

(assert (=> d!30551 (=> (not res!54051) (not e!70984))))

(assert (=> d!30551 (= res!54051 (isStrictlySorted!297 (toList!786 lt!55384)))))

(assert (=> d!30551 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000) lt!56135)))

(declare-fun b!109137 () Bool)

(assert (=> b!109137 (= e!70984 (containsKey!161 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30551 res!54051) b!109137))

(assert (=> d!30551 m!121227))

(assert (=> d!30551 m!121227))

(assert (=> d!30551 m!121229))

(declare-fun m!123431 () Bool)

(assert (=> d!30551 m!123431))

(declare-fun m!123433 () Bool)

(assert (=> d!30551 m!123433))

(assert (=> b!109137 m!121223))

(assert (=> b!107925 d!30551))

(assert (=> b!107925 d!30301))

(assert (=> b!107925 d!30303))

(declare-fun d!30553 () Bool)

(declare-fun e!70985 () Bool)

(assert (=> d!30553 e!70985))

(declare-fun res!54052 () Bool)

(assert (=> d!30553 (=> res!54052 e!70985)))

(declare-fun lt!56136 () Bool)

(assert (=> d!30553 (= res!54052 (not lt!56136))))

(declare-fun lt!56139 () Bool)

(assert (=> d!30553 (= lt!56136 lt!56139)))

(declare-fun lt!56138 () Unit!3301)

(declare-fun e!70986 () Unit!3301)

(assert (=> d!30553 (= lt!56138 e!70986)))

(declare-fun c!19273 () Bool)

(assert (=> d!30553 (= c!19273 lt!56139)))

(assert (=> d!30553 (= lt!56139 (containsKey!161 (toList!786 lt!55557) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30553 (= (contains!820 lt!55557 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) lt!56136)))

(declare-fun b!109138 () Bool)

(declare-fun lt!56137 () Unit!3301)

(assert (=> b!109138 (= e!70986 lt!56137)))

(assert (=> b!109138 (= lt!56137 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55557) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109138 (isDefined!110 (getValueByKey!158 (toList!786 lt!55557) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109139 () Bool)

(declare-fun Unit!3363 () Unit!3301)

(assert (=> b!109139 (= e!70986 Unit!3363)))

(declare-fun b!109140 () Bool)

(assert (=> b!109140 (= e!70985 (isDefined!110 (getValueByKey!158 (toList!786 lt!55557) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!30553 c!19273) b!109138))

(assert (= (and d!30553 (not c!19273)) b!109139))

(assert (= (and d!30553 (not res!54052)) b!109140))

(assert (=> d!30553 m!121169))

(declare-fun m!123435 () Bool)

(assert (=> d!30553 m!123435))

(assert (=> b!109138 m!121169))

(declare-fun m!123437 () Bool)

(assert (=> b!109138 m!123437))

(assert (=> b!109138 m!121169))

(assert (=> b!109138 m!121975))

(assert (=> b!109138 m!121975))

(declare-fun m!123439 () Bool)

(assert (=> b!109138 m!123439))

(assert (=> b!109140 m!121169))

(assert (=> b!109140 m!121975))

(assert (=> b!109140 m!121975))

(assert (=> b!109140 m!123439))

(assert (=> b!108151 d!30553))

(declare-fun d!30555 () Bool)

(assert (=> d!30555 (isDefined!110 (getValueByKey!158 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55377))))

(declare-fun lt!56140 () Unit!3301)

(assert (=> d!30555 (= lt!56140 (choose!686 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55377))))

(declare-fun e!70987 () Bool)

(assert (=> d!30555 e!70987))

(declare-fun res!54053 () Bool)

(assert (=> d!30555 (=> (not res!54053) (not e!70987))))

(assert (=> d!30555 (= res!54053 (isStrictlySorted!297 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30555 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55377) lt!56140)))

(declare-fun b!109141 () Bool)

(assert (=> b!109141 (= e!70987 (containsKey!161 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55377))))

(assert (= (and d!30555 res!54053) b!109141))

(assert (=> d!30555 m!121413))

(assert (=> d!30555 m!121413))

(assert (=> d!30555 m!121415))

(declare-fun m!123441 () Bool)

(assert (=> d!30555 m!123441))

(declare-fun m!123443 () Bool)

(assert (=> d!30555 m!123443))

(assert (=> b!109141 m!121409))

(assert (=> b!108088 d!30555))

(assert (=> b!108088 d!30305))

(assert (=> b!108088 d!30307))

(declare-fun d!30557 () Bool)

(declare-fun lt!56141 () Bool)

(assert (=> d!30557 (= lt!56141 (select (content!112 lt!55441) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(declare-fun e!70988 () Bool)

(assert (=> d!30557 (= lt!56141 e!70988)))

(declare-fun res!54055 () Bool)

(assert (=> d!30557 (=> (not res!54055) (not e!70988))))

(assert (=> d!30557 (= res!54055 ((_ is Cons!1600) lt!55441))))

(assert (=> d!30557 (= (contains!823 lt!55441 (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))) lt!56141)))

(declare-fun b!109142 () Bool)

(declare-fun e!70989 () Bool)

(assert (=> b!109142 (= e!70988 e!70989)))

(declare-fun res!54054 () Bool)

(assert (=> b!109142 (=> res!54054 e!70989)))

(assert (=> b!109142 (= res!54054 (= (h!2198 lt!55441) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(declare-fun b!109143 () Bool)

(assert (=> b!109143 (= e!70989 (contains!823 (t!5712 lt!55441) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(assert (= (and d!30557 res!54055) b!109142))

(assert (= (and b!109142 (not res!54054)) b!109143))

(declare-fun m!123445 () Bool)

(assert (=> d!30557 m!123445))

(declare-fun m!123447 () Bool)

(assert (=> d!30557 m!123447))

(declare-fun m!123449 () Bool)

(assert (=> b!109143 m!123449))

(assert (=> b!107986 d!30557))

(assert (=> b!108338 d!30079))

(declare-fun d!30559 () Bool)

(declare-fun res!54056 () Bool)

(declare-fun e!70990 () Bool)

(assert (=> d!30559 (=> res!54056 e!70990)))

(assert (=> d!30559 (= res!54056 (and ((_ is Cons!1600) (toList!786 call!11389)) (= (_1!1199 (h!2198 (toList!786 call!11389))) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264))))))))

(assert (=> d!30559 (= (containsKey!161 (toList!786 call!11389) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))) e!70990)))

(declare-fun b!109144 () Bool)

(declare-fun e!70991 () Bool)

(assert (=> b!109144 (= e!70990 e!70991)))

(declare-fun res!54057 () Bool)

(assert (=> b!109144 (=> (not res!54057) (not e!70991))))

(assert (=> b!109144 (= res!54057 (and (or (not ((_ is Cons!1600) (toList!786 call!11389))) (bvsle (_1!1199 (h!2198 (toList!786 call!11389))) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264))))) ((_ is Cons!1600) (toList!786 call!11389)) (bvslt (_1!1199 (h!2198 (toList!786 call!11389))) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264))))))))

(declare-fun b!109145 () Bool)

(assert (=> b!109145 (= e!70991 (containsKey!161 (t!5712 (toList!786 call!11389)) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))))

(assert (= (and d!30559 (not res!54056)) b!109144))

(assert (= (and b!109144 res!54057) b!109145))

(declare-fun m!123451 () Bool)

(assert (=> b!109145 m!123451))

(assert (=> d!29985 d!30559))

(declare-fun d!30561 () Bool)

(declare-fun e!70992 () Bool)

(assert (=> d!30561 e!70992))

(declare-fun res!54058 () Bool)

(assert (=> d!30561 (=> res!54058 e!70992)))

(declare-fun lt!56142 () Bool)

(assert (=> d!30561 (= res!54058 (not lt!56142))))

(declare-fun lt!56145 () Bool)

(assert (=> d!30561 (= lt!56142 lt!56145)))

(declare-fun lt!56144 () Unit!3301)

(declare-fun e!70993 () Unit!3301)

(assert (=> d!30561 (= lt!56144 e!70993)))

(declare-fun c!19274 () Bool)

(assert (=> d!30561 (= c!19274 lt!56145)))

(assert (=> d!30561 (= lt!56145 (containsKey!161 (toList!786 lt!55570) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30561 (= (contains!820 lt!55570 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56142)))

(declare-fun b!109146 () Bool)

(declare-fun lt!56143 () Unit!3301)

(assert (=> b!109146 (= e!70993 lt!56143)))

(assert (=> b!109146 (= lt!56143 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55570) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109146 (isDefined!110 (getValueByKey!158 (toList!786 lt!55570) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109147 () Bool)

(declare-fun Unit!3364 () Unit!3301)

(assert (=> b!109147 (= e!70993 Unit!3364)))

(declare-fun b!109148 () Bool)

(assert (=> b!109148 (= e!70992 (isDefined!110 (getValueByKey!158 (toList!786 lt!55570) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30561 c!19274) b!109146))

(assert (= (and d!30561 (not c!19274)) b!109147))

(assert (= (and d!30561 (not res!54058)) b!109148))

(declare-fun m!123453 () Bool)

(assert (=> d!30561 m!123453))

(declare-fun m!123455 () Bool)

(assert (=> b!109146 m!123455))

(declare-fun m!123457 () Bool)

(assert (=> b!109146 m!123457))

(assert (=> b!109146 m!123457))

(declare-fun m!123459 () Bool)

(assert (=> b!109146 m!123459))

(assert (=> b!109148 m!123457))

(assert (=> b!109148 m!123457))

(assert (=> b!109148 m!123459))

(assert (=> b!108198 d!30561))

(declare-fun b!109149 () Bool)

(declare-fun e!70994 () Bool)

(declare-fun call!11576 () Bool)

(assert (=> b!109149 (= e!70994 call!11576)))

(declare-fun b!109150 () Bool)

(declare-fun e!70996 () Bool)

(assert (=> b!109150 (= e!70996 call!11576)))

(declare-fun b!109151 () Bool)

(assert (=> b!109151 (= e!70994 e!70996)))

(declare-fun lt!56148 () (_ BitVec 64))

(assert (=> b!109151 (= lt!56148 (select (arr!2066 (_keys!4315 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!56147 () Unit!3301)

(assert (=> b!109151 (= lt!56147 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4315 newMap!16) lt!56148 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!109151 (arrayContainsKey!0 (_keys!4315 newMap!16) lt!56148 #b00000000000000000000000000000000)))

(declare-fun lt!56146 () Unit!3301)

(assert (=> b!109151 (= lt!56146 lt!56147)))

(declare-fun res!54059 () Bool)

(assert (=> b!109151 (= res!54059 (= (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4315 newMap!16) (mask!6763 newMap!16)) (Found!254 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!109151 (=> (not res!54059) (not e!70996))))

(declare-fun bm!11573 () Bool)

(assert (=> bm!11573 (= call!11576 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(declare-fun d!30563 () Bool)

(declare-fun res!54060 () Bool)

(declare-fun e!70995 () Bool)

(assert (=> d!30563 (=> res!54060 e!70995)))

(assert (=> d!30563 (= res!54060 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30563 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4315 newMap!16) (mask!6763 newMap!16)) e!70995)))

(declare-fun b!109152 () Bool)

(assert (=> b!109152 (= e!70995 e!70994)))

(declare-fun c!19275 () Bool)

(assert (=> b!109152 (= c!19275 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!30563 (not res!54060)) b!109152))

(assert (= (and b!109152 c!19275) b!109151))

(assert (= (and b!109152 (not c!19275)) b!109149))

(assert (= (and b!109151 res!54059) b!109150))

(assert (= (or b!109150 b!109149) bm!11573))

(assert (=> b!109151 m!122335))

(declare-fun m!123461 () Bool)

(assert (=> b!109151 m!123461))

(declare-fun m!123463 () Bool)

(assert (=> b!109151 m!123463))

(assert (=> b!109151 m!122335))

(declare-fun m!123465 () Bool)

(assert (=> b!109151 m!123465))

(declare-fun m!123467 () Bool)

(assert (=> bm!11573 m!123467))

(assert (=> b!109152 m!122335))

(assert (=> b!109152 m!122335))

(assert (=> b!109152 m!122745))

(assert (=> bm!11451 d!30563))

(assert (=> b!108303 d!30129))

(declare-fun d!30565 () Bool)

(assert (=> d!30565 (= (isDefined!110 (getValueByKey!158 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!380 (getValueByKey!158 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4502 () Bool)

(assert (= bs!4502 d!30565))

(assert (=> bs!4502 m!121147))

(declare-fun m!123469 () Bool)

(assert (=> bs!4502 m!123469))

(assert (=> b!108087 d!30565))

(assert (=> b!108087 d!30045))

(declare-fun bm!11574 () Bool)

(declare-fun call!11577 () (_ BitVec 32))

(assert (=> bm!11574 (= call!11577 (arrayCountValidKeys!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun d!30567 () Bool)

(declare-fun lt!56149 () (_ BitVec 32))

(assert (=> d!30567 (and (bvsge lt!56149 #b00000000000000000000000000000000) (bvsle lt!56149 (bvsub (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!70998 () (_ BitVec 32))

(assert (=> d!30567 (= lt!56149 e!70998)))

(declare-fun c!19277 () Bool)

(assert (=> d!30567 (= c!19277 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30567 (and (bvsle #b00000000000000000000000000000000 (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30567 (= (arrayCountValidKeys!0 (_keys!4315 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 (size!2322 (_keys!4315 (v!2914 (underlying!367 thiss!992))))) lt!56149)))

(declare-fun b!109153 () Bool)

(assert (=> b!109153 (= e!70998 #b00000000000000000000000000000000)))

(declare-fun b!109154 () Bool)

(declare-fun e!70997 () (_ BitVec 32))

(assert (=> b!109154 (= e!70997 (bvadd #b00000000000000000000000000000001 call!11577))))

(declare-fun b!109155 () Bool)

(assert (=> b!109155 (= e!70998 e!70997)))

(declare-fun c!19276 () Bool)

(assert (=> b!109155 (= c!19276 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!109156 () Bool)

(assert (=> b!109156 (= e!70997 call!11577)))

(assert (= (and d!30567 c!19277) b!109153))

(assert (= (and d!30567 (not c!19277)) b!109155))

(assert (= (and b!109155 c!19276) b!109154))

(assert (= (and b!109155 (not c!19276)) b!109156))

(assert (= (or b!109154 b!109156) bm!11574))

(declare-fun m!123471 () Bool)

(assert (=> bm!11574 m!123471))

(assert (=> b!109155 m!123211))

(assert (=> b!109155 m!123211))

(assert (=> b!109155 m!123221))

(assert (=> b!108216 d!30567))

(declare-fun d!30569 () Bool)

(declare-fun c!19278 () Bool)

(assert (=> d!30569 (= c!19278 ((_ is Nil!1601) (toList!786 lt!55291)))))

(declare-fun e!70999 () (InoxSet tuple2!2376))

(assert (=> d!30569 (= (content!112 (toList!786 lt!55291)) e!70999)))

(declare-fun b!109157 () Bool)

(assert (=> b!109157 (= e!70999 ((as const (Array tuple2!2376 Bool)) false))))

(declare-fun b!109158 () Bool)

(assert (=> b!109158 (= e!70999 ((_ map or) (store ((as const (Array tuple2!2376 Bool)) false) (h!2198 (toList!786 lt!55291)) true) (content!112 (t!5712 (toList!786 lt!55291)))))))

(assert (= (and d!30569 c!19278) b!109157))

(assert (= (and d!30569 (not c!19278)) b!109158))

(declare-fun m!123473 () Bool)

(assert (=> b!109158 m!123473))

(declare-fun m!123475 () Bool)

(assert (=> b!109158 m!123475))

(assert (=> d!29947 d!30569))

(assert (=> b!108158 d!30129))

(declare-fun b!109162 () Bool)

(declare-fun e!71001 () Option!164)

(assert (=> b!109162 (= e!71001 None!162)))

(declare-fun b!109161 () Bool)

(assert (=> b!109161 (= e!71001 (getValueByKey!158 (t!5712 (toList!786 lt!55522)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!109159 () Bool)

(declare-fun e!71000 () Option!164)

(assert (=> b!109159 (= e!71000 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55522)))))))

(declare-fun d!30571 () Bool)

(declare-fun c!19279 () Bool)

(assert (=> d!30571 (= c!19279 (and ((_ is Cons!1600) (toList!786 lt!55522)) (= (_1!1199 (h!2198 (toList!786 lt!55522))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!30571 (= (getValueByKey!158 (toList!786 lt!55522) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!71000)))

(declare-fun b!109160 () Bool)

(assert (=> b!109160 (= e!71000 e!71001)))

(declare-fun c!19280 () Bool)

(assert (=> b!109160 (= c!19280 (and ((_ is Cons!1600) (toList!786 lt!55522)) (not (= (_1!1199 (h!2198 (toList!786 lt!55522))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1345 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!30571 c!19279) b!109159))

(assert (= (and d!30571 (not c!19279)) b!109160))

(assert (= (and b!109160 c!19280) b!109161))

(assert (= (and b!109160 (not c!19280)) b!109162))

(declare-fun m!123477 () Bool)

(assert (=> b!109161 m!123477))

(assert (=> b!108110 d!30571))

(declare-fun d!30573 () Bool)

(assert (=> d!30573 (isDefined!110 (getValueByKey!158 (toList!786 call!11389) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))))

(declare-fun lt!56150 () Unit!3301)

(assert (=> d!30573 (= lt!56150 (choose!686 (toList!786 call!11389) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))))

(declare-fun e!71002 () Bool)

(assert (=> d!30573 e!71002))

(declare-fun res!54061 () Bool)

(assert (=> d!30573 (=> (not res!54061) (not e!71002))))

(assert (=> d!30573 (= res!54061 (isStrictlySorted!297 (toList!786 call!11389)))))

(assert (=> d!30573 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 call!11389) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))) lt!56150)))

(declare-fun b!109163 () Bool)

(assert (=> b!109163 (= e!71002 (containsKey!161 (toList!786 call!11389) (ite c!18887 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))))

(assert (= (and d!30573 res!54061) b!109163))

(assert (=> d!30573 m!121719))

(assert (=> d!30573 m!121719))

(assert (=> d!30573 m!121721))

(declare-fun m!123479 () Bool)

(assert (=> d!30573 m!123479))

(declare-fun m!123481 () Bool)

(assert (=> d!30573 m!123481))

(assert (=> b!109163 m!121715))

(assert (=> b!108219 d!30573))

(assert (=> b!108219 d!30383))

(assert (=> b!108219 d!30385))

(assert (=> d!29979 d!29799))

(assert (=> b!108329 d!30129))

(declare-fun d!30575 () Bool)

(declare-fun lt!56151 () Bool)

(assert (=> d!30575 (= lt!56151 (select (content!112 lt!55290) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(declare-fun e!71003 () Bool)

(assert (=> d!30575 (= lt!56151 e!71003)))

(declare-fun res!54063 () Bool)

(assert (=> d!30575 (=> (not res!54063) (not e!71003))))

(assert (=> d!30575 (= res!54063 ((_ is Cons!1600) lt!55290))))

(assert (=> d!30575 (= (contains!823 lt!55290 (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))) lt!56151)))

(declare-fun b!109164 () Bool)

(declare-fun e!71004 () Bool)

(assert (=> b!109164 (= e!71003 e!71004)))

(declare-fun res!54062 () Bool)

(assert (=> b!109164 (=> res!54062 e!71004)))

(assert (=> b!109164 (= res!54062 (= (h!2198 lt!55290) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(declare-fun b!109165 () Bool)

(assert (=> b!109165 (= e!71004 (contains!823 (t!5712 lt!55290) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(assert (= (and d!30575 res!54063) b!109164))

(assert (= (and b!109164 (not res!54062)) b!109165))

(declare-fun m!123483 () Bool)

(assert (=> d!30575 m!123483))

(declare-fun m!123485 () Bool)

(assert (=> d!30575 m!123485))

(declare-fun m!123487 () Bool)

(assert (=> b!109165 m!123487))

(assert (=> b!108023 d!30575))

(declare-fun d!30577 () Bool)

(assert (=> d!30577 (= (apply!99 lt!55720 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!786 lt!55720) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4503 () Bool)

(assert (= bs!4503 d!30577))

(assert (=> bs!4503 m!122121))

(assert (=> bs!4503 m!122121))

(declare-fun m!123489 () Bool)

(assert (=> bs!4503 m!123489))

(assert (=> b!108310 d!30577))

(declare-fun d!30579 () Bool)

(declare-fun res!54064 () Bool)

(declare-fun e!71005 () Bool)

(assert (=> d!30579 (=> res!54064 e!71005)))

(assert (=> d!30579 (= res!54064 (and ((_ is Cons!1600) (toList!786 call!11386)) (= (_1!1199 (h!2198 (toList!786 call!11386))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30579 (= (containsKey!161 (toList!786 call!11386) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) e!71005)))

(declare-fun b!109166 () Bool)

(declare-fun e!71006 () Bool)

(assert (=> b!109166 (= e!71005 e!71006)))

(declare-fun res!54065 () Bool)

(assert (=> b!109166 (=> (not res!54065) (not e!71006))))

(assert (=> b!109166 (= res!54065 (and (or (not ((_ is Cons!1600) (toList!786 call!11386))) (bvsle (_1!1199 (h!2198 (toList!786 call!11386))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))) ((_ is Cons!1600) (toList!786 call!11386)) (bvslt (_1!1199 (h!2198 (toList!786 call!11386))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(declare-fun b!109167 () Bool)

(assert (=> b!109167 (= e!71006 (containsKey!161 (t!5712 (toList!786 call!11386)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30579 (not res!54064)) b!109166))

(assert (= (and b!109166 res!54065) b!109167))

(assert (=> b!109167 m!120751))

(declare-fun m!123491 () Bool)

(assert (=> b!109167 m!123491))

(assert (=> d!29849 d!30579))

(declare-fun b!109171 () Bool)

(declare-fun e!71008 () Option!164)

(assert (=> b!109171 (= e!71008 None!162)))

(declare-fun b!109170 () Bool)

(assert (=> b!109170 (= e!71008 (getValueByKey!158 (t!5712 (toList!786 lt!55610)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!109168 () Bool)

(declare-fun e!71007 () Option!164)

(assert (=> b!109168 (= e!71007 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55610)))))))

(declare-fun d!30581 () Bool)

(declare-fun c!19281 () Bool)

(assert (=> d!30581 (= c!19281 (and ((_ is Cons!1600) (toList!786 lt!55610)) (= (_1!1199 (h!2198 (toList!786 lt!55610))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!30581 (= (getValueByKey!158 (toList!786 lt!55610) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) e!71007)))

(declare-fun b!109169 () Bool)

(assert (=> b!109169 (= e!71007 e!71008)))

(declare-fun c!19282 () Bool)

(assert (=> b!109169 (= c!19282 (and ((_ is Cons!1600) (toList!786 lt!55610)) (not (= (_1!1199 (h!2198 (toList!786 lt!55610))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(assert (= (and d!30581 c!19281) b!109168))

(assert (= (and d!30581 (not c!19281)) b!109169))

(assert (= (and b!109169 c!19282) b!109170))

(assert (= (and b!109169 (not c!19282)) b!109171))

(declare-fun m!123493 () Bool)

(assert (=> b!109170 m!123493))

(assert (=> b!108238 d!30581))

(assert (=> bm!11480 d!29891))

(declare-fun bm!11575 () Bool)

(declare-fun call!11578 () (_ BitVec 32))

(assert (=> bm!11575 (= call!11578 (arrayCountValidKeys!0 (_keys!4315 (_2!1200 lt!55269)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2322 (_keys!4315 (_2!1200 lt!55269)))))))

(declare-fun d!30583 () Bool)

(declare-fun lt!56152 () (_ BitVec 32))

(assert (=> d!30583 (and (bvsge lt!56152 #b00000000000000000000000000000000) (bvsle lt!56152 (bvsub (size!2322 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000)))))

(declare-fun e!71010 () (_ BitVec 32))

(assert (=> d!30583 (= lt!56152 e!71010)))

(declare-fun c!19284 () Bool)

(assert (=> d!30583 (= c!19284 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55269)))))))

(assert (=> d!30583 (and (bvsle #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55269)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2322 (_keys!4315 (_2!1200 lt!55269))) (size!2322 (_keys!4315 (_2!1200 lt!55269)))))))

(assert (=> d!30583 (= (arrayCountValidKeys!0 (_keys!4315 (_2!1200 lt!55269)) #b00000000000000000000000000000000 (size!2322 (_keys!4315 (_2!1200 lt!55269)))) lt!56152)))

(declare-fun b!109172 () Bool)

(assert (=> b!109172 (= e!71010 #b00000000000000000000000000000000)))

(declare-fun b!109173 () Bool)

(declare-fun e!71009 () (_ BitVec 32))

(assert (=> b!109173 (= e!71009 (bvadd #b00000000000000000000000000000001 call!11578))))

(declare-fun b!109174 () Bool)

(assert (=> b!109174 (= e!71010 e!71009)))

(declare-fun c!19283 () Bool)

(assert (=> b!109174 (= c!19283 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (_2!1200 lt!55269))) #b00000000000000000000000000000000)))))

(declare-fun b!109175 () Bool)

(assert (=> b!109175 (= e!71009 call!11578)))

(assert (= (and d!30583 c!19284) b!109172))

(assert (= (and d!30583 (not c!19284)) b!109174))

(assert (= (and b!109174 c!19283) b!109173))

(assert (= (and b!109174 (not c!19283)) b!109175))

(assert (= (or b!109173 b!109175) bm!11575))

(declare-fun m!123495 () Bool)

(assert (=> bm!11575 m!123495))

(assert (=> b!109174 m!122131))

(assert (=> b!109174 m!122131))

(assert (=> b!109174 m!122137))

(assert (=> b!108046 d!30583))

(declare-fun d!30585 () Bool)

(declare-fun e!71011 () Bool)

(assert (=> d!30585 e!71011))

(declare-fun res!54066 () Bool)

(assert (=> d!30585 (=> res!54066 e!71011)))

(declare-fun lt!56153 () Bool)

(assert (=> d!30585 (= res!54066 (not lt!56153))))

(declare-fun lt!56156 () Bool)

(assert (=> d!30585 (= lt!56153 lt!56156)))

(declare-fun lt!56155 () Unit!3301)

(declare-fun e!71012 () Unit!3301)

(assert (=> d!30585 (= lt!56155 e!71012)))

(declare-fun c!19285 () Bool)

(assert (=> d!30585 (= c!19285 lt!56156)))

(assert (=> d!30585 (= lt!56156 (containsKey!161 (toList!786 lt!55557) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30585 (= (contains!820 lt!55557 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56153)))

(declare-fun b!109176 () Bool)

(declare-fun lt!56154 () Unit!3301)

(assert (=> b!109176 (= e!71012 lt!56154)))

(assert (=> b!109176 (= lt!56154 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55557) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109176 (isDefined!110 (getValueByKey!158 (toList!786 lt!55557) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109177 () Bool)

(declare-fun Unit!3365 () Unit!3301)

(assert (=> b!109177 (= e!71012 Unit!3365)))

(declare-fun b!109178 () Bool)

(assert (=> b!109178 (= e!71011 (isDefined!110 (getValueByKey!158 (toList!786 lt!55557) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30585 c!19285) b!109176))

(assert (= (and d!30585 (not c!19285)) b!109177))

(assert (= (and d!30585 (not res!54066)) b!109178))

(declare-fun m!123497 () Bool)

(assert (=> d!30585 m!123497))

(declare-fun m!123499 () Bool)

(assert (=> b!109176 m!123499))

(declare-fun m!123501 () Bool)

(assert (=> b!109176 m!123501))

(assert (=> b!109176 m!123501))

(declare-fun m!123503 () Bool)

(assert (=> b!109176 m!123503))

(assert (=> b!109178 m!123501))

(assert (=> b!109178 m!123501))

(assert (=> b!109178 m!123503))

(assert (=> bm!11460 d!30585))

(declare-fun d!30587 () Bool)

(assert (=> d!30587 (contains!820 (getCurrentListMap!472 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!55264)))))

(assert (=> d!30587 true))

(declare-fun _$16!129 () Unit!3301)

(assert (=> d!30587 (= (choose!684 (_keys!4315 newMap!16) lt!55257 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3166 lt!55264) (defaultEntry!2605 newMap!16)) _$16!129)))

(declare-fun bs!4504 () Bool)

(assert (= bs!4504 d!30587))

(assert (=> bs!4504 m!121937))

(assert (=> bs!4504 m!120991))

(assert (=> bs!4504 m!121937))

(assert (=> bs!4504 m!120991))

(assert (=> bs!4504 m!121939))

(assert (=> d!30027 d!30587))

(assert (=> d!30027 d!30057))

(declare-fun d!30589 () Bool)

(declare-fun lt!56157 () Bool)

(assert (=> d!30589 (= lt!56157 (select (content!112 (toList!786 lt!55517)) (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!71013 () Bool)

(assert (=> d!30589 (= lt!56157 e!71013)))

(declare-fun res!54068 () Bool)

(assert (=> d!30589 (=> (not res!54068) (not e!71013))))

(assert (=> d!30589 (= res!54068 ((_ is Cons!1600) (toList!786 lt!55517)))))

(assert (=> d!30589 (= (contains!823 (toList!786 lt!55517) (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!56157)))

(declare-fun b!109179 () Bool)

(declare-fun e!71014 () Bool)

(assert (=> b!109179 (= e!71013 e!71014)))

(declare-fun res!54067 () Bool)

(assert (=> b!109179 (=> res!54067 e!71014)))

(assert (=> b!109179 (= res!54067 (= (h!2198 (toList!786 lt!55517)) (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!109180 () Bool)

(assert (=> b!109180 (= e!71014 (contains!823 (t!5712 (toList!786 lt!55517)) (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30589 res!54068) b!109179))

(assert (= (and b!109179 (not res!54067)) b!109180))

(declare-fun m!123505 () Bool)

(assert (=> d!30589 m!123505))

(declare-fun m!123507 () Bool)

(assert (=> d!30589 m!123507))

(declare-fun m!123509 () Bool)

(assert (=> b!109180 m!123509))

(assert (=> b!108105 d!30589))

(declare-fun d!30591 () Bool)

(assert (=> d!30591 (= (isDefined!110 (getValueByKey!158 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!380 (getValueByKey!158 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4505 () Bool)

(assert (= bs!4505 d!30591))

(assert (=> bs!4505 m!121701))

(declare-fun m!123511 () Bool)

(assert (=> bs!4505 m!123511))

(assert (=> b!108215 d!30591))

(assert (=> b!108215 d!30291))

(declare-fun d!30593 () Bool)

(declare-fun lt!56158 () Bool)

(assert (=> d!30593 (= lt!56158 (select (content!112 lt!55456) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(declare-fun e!71015 () Bool)

(assert (=> d!30593 (= lt!56158 e!71015)))

(declare-fun res!54070 () Bool)

(assert (=> d!30593 (=> (not res!54070) (not e!71015))))

(assert (=> d!30593 (= res!54070 ((_ is Cons!1600) lt!55456))))

(assert (=> d!30593 (= (contains!823 lt!55456 (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))) lt!56158)))

(declare-fun b!109181 () Bool)

(declare-fun e!71016 () Bool)

(assert (=> b!109181 (= e!71015 e!71016)))

(declare-fun res!54069 () Bool)

(assert (=> b!109181 (=> res!54069 e!71016)))

(assert (=> b!109181 (= res!54069 (= (h!2198 lt!55456) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(declare-fun b!109182 () Bool)

(assert (=> b!109182 (= e!71016 (contains!823 (t!5712 lt!55456) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(assert (= (and d!30593 res!54070) b!109181))

(assert (= (and b!109181 (not res!54069)) b!109182))

(declare-fun m!123513 () Bool)

(assert (=> d!30593 m!123513))

(declare-fun m!123515 () Bool)

(assert (=> d!30593 m!123515))

(declare-fun m!123517 () Bool)

(assert (=> b!109182 m!123517))

(assert (=> b!108030 d!30593))

(assert (=> d!29941 d!29945))

(assert (=> d!29941 d!29943))

(declare-fun d!30595 () Bool)

(assert (=> d!30595 (not (contains!820 (+!142 lt!55309 (tuple2!2377 lt!55312 lt!55307)) lt!55308))))

(assert (=> d!30595 true))

(declare-fun _$36!322 () Unit!3301)

(assert (=> d!30595 (= (choose!681 lt!55309 lt!55312 lt!55307 lt!55308) _$36!322)))

(declare-fun bs!4506 () Bool)

(assert (= bs!4506 d!30595))

(assert (=> bs!4506 m!121033))

(assert (=> bs!4506 m!121033))

(assert (=> bs!4506 m!121035))

(assert (=> d!29941 d!30595))

(declare-fun d!30597 () Bool)

(declare-fun e!71017 () Bool)

(assert (=> d!30597 e!71017))

(declare-fun res!54071 () Bool)

(assert (=> d!30597 (=> res!54071 e!71017)))

(declare-fun lt!56159 () Bool)

(assert (=> d!30597 (= res!54071 (not lt!56159))))

(declare-fun lt!56162 () Bool)

(assert (=> d!30597 (= lt!56159 lt!56162)))

(declare-fun lt!56161 () Unit!3301)

(declare-fun e!71018 () Unit!3301)

(assert (=> d!30597 (= lt!56161 e!71018)))

(declare-fun c!19286 () Bool)

(assert (=> d!30597 (= c!19286 lt!56162)))

(assert (=> d!30597 (= lt!56162 (containsKey!161 (toList!786 lt!55309) lt!55308))))

(assert (=> d!30597 (= (contains!820 lt!55309 lt!55308) lt!56159)))

(declare-fun b!109184 () Bool)

(declare-fun lt!56160 () Unit!3301)

(assert (=> b!109184 (= e!71018 lt!56160)))

(assert (=> b!109184 (= lt!56160 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55309) lt!55308))))

(assert (=> b!109184 (isDefined!110 (getValueByKey!158 (toList!786 lt!55309) lt!55308))))

(declare-fun b!109185 () Bool)

(declare-fun Unit!3366 () Unit!3301)

(assert (=> b!109185 (= e!71018 Unit!3366)))

(declare-fun b!109186 () Bool)

(assert (=> b!109186 (= e!71017 (isDefined!110 (getValueByKey!158 (toList!786 lt!55309) lt!55308)))))

(assert (= (and d!30597 c!19286) b!109184))

(assert (= (and d!30597 (not c!19286)) b!109185))

(assert (= (and d!30597 (not res!54071)) b!109186))

(declare-fun m!123519 () Bool)

(assert (=> d!30597 m!123519))

(declare-fun m!123521 () Bool)

(assert (=> b!109184 m!123521))

(declare-fun m!123523 () Bool)

(assert (=> b!109184 m!123523))

(assert (=> b!109184 m!123523))

(declare-fun m!123525 () Bool)

(assert (=> b!109184 m!123525))

(assert (=> b!109186 m!123523))

(assert (=> b!109186 m!123523))

(assert (=> b!109186 m!123525))

(assert (=> d!29941 d!30597))

(assert (=> b!107913 d!30129))

(assert (=> d!29963 d!29961))

(declare-fun d!30599 () Bool)

(assert (=> d!30599 (= (getValueByKey!158 lt!55315 (_1!1199 lt!55093)) (Some!163 (_2!1199 lt!55093)))))

(assert (=> d!30599 true))

(declare-fun _$22!442 () Unit!3301)

(assert (=> d!30599 (= (choose!677 lt!55315 (_1!1199 lt!55093) (_2!1199 lt!55093)) _$22!442)))

(declare-fun bs!4507 () Bool)

(assert (= bs!4507 d!30599))

(assert (=> bs!4507 m!121053))

(assert (=> d!29963 d!30599))

(declare-fun d!30601 () Bool)

(declare-fun res!54072 () Bool)

(declare-fun e!71019 () Bool)

(assert (=> d!30601 (=> res!54072 e!71019)))

(assert (=> d!30601 (= res!54072 (or ((_ is Nil!1601) lt!55315) ((_ is Nil!1601) (t!5712 lt!55315))))))

(assert (=> d!30601 (= (isStrictlySorted!297 lt!55315) e!71019)))

(declare-fun b!109187 () Bool)

(declare-fun e!71020 () Bool)

(assert (=> b!109187 (= e!71019 e!71020)))

(declare-fun res!54073 () Bool)

(assert (=> b!109187 (=> (not res!54073) (not e!71020))))

(assert (=> b!109187 (= res!54073 (bvslt (_1!1199 (h!2198 lt!55315)) (_1!1199 (h!2198 (t!5712 lt!55315)))))))

(declare-fun b!109188 () Bool)

(assert (=> b!109188 (= e!71020 (isStrictlySorted!297 (t!5712 lt!55315)))))

(assert (= (and d!30601 (not res!54072)) b!109187))

(assert (= (and b!109187 res!54073) b!109188))

(declare-fun m!123527 () Bool)

(assert (=> b!109188 m!123527))

(assert (=> d!29963 d!30601))

(assert (=> b!108081 d!30129))

(declare-fun d!30603 () Bool)

(assert (=> d!30603 (= ($colon$colon!81 e!70413 (ite c!19000 (h!2198 (toList!786 lt!55096)) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093)))) (Cons!1600 (ite c!19000 (h!2198 (toList!786 lt!55096)) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))) e!70413))))

(assert (=> bm!11466 d!30603))

(declare-fun d!30605 () Bool)

(assert (=> d!30605 (= (apply!99 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55372) (apply!99 lt!55369 lt!55372))))

(assert (=> d!30605 true))

(declare-fun _$34!899 () Unit!3301)

(assert (=> d!30605 (= (choose!679 lt!55369 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55372) _$34!899)))

(declare-fun bs!4508 () Bool)

(assert (= bs!4508 d!30605))

(assert (=> bs!4508 m!121119))

(assert (=> bs!4508 m!121119))

(assert (=> bs!4508 m!121127))

(assert (=> bs!4508 m!121121))

(assert (=> d!29911 d!30605))

(declare-fun d!30607 () Bool)

(declare-fun e!71021 () Bool)

(assert (=> d!30607 e!71021))

(declare-fun res!54074 () Bool)

(assert (=> d!30607 (=> res!54074 e!71021)))

(declare-fun lt!56163 () Bool)

(assert (=> d!30607 (= res!54074 (not lt!56163))))

(declare-fun lt!56166 () Bool)

(assert (=> d!30607 (= lt!56163 lt!56166)))

(declare-fun lt!56165 () Unit!3301)

(declare-fun e!71022 () Unit!3301)

(assert (=> d!30607 (= lt!56165 e!71022)))

(declare-fun c!19287 () Bool)

(assert (=> d!30607 (= c!19287 lt!56166)))

(assert (=> d!30607 (= lt!56166 (containsKey!161 (toList!786 lt!55369) lt!55372))))

(assert (=> d!30607 (= (contains!820 lt!55369 lt!55372) lt!56163)))

(declare-fun b!109189 () Bool)

(declare-fun lt!56164 () Unit!3301)

(assert (=> b!109189 (= e!71022 lt!56164)))

(assert (=> b!109189 (= lt!56164 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55369) lt!55372))))

(assert (=> b!109189 (isDefined!110 (getValueByKey!158 (toList!786 lt!55369) lt!55372))))

(declare-fun b!109190 () Bool)

(declare-fun Unit!3367 () Unit!3301)

(assert (=> b!109190 (= e!71022 Unit!3367)))

(declare-fun b!109191 () Bool)

(assert (=> b!109191 (= e!71021 (isDefined!110 (getValueByKey!158 (toList!786 lt!55369) lt!55372)))))

(assert (= (and d!30607 c!19287) b!109189))

(assert (= (and d!30607 (not c!19287)) b!109190))

(assert (= (and d!30607 (not res!54074)) b!109191))

(declare-fun m!123529 () Bool)

(assert (=> d!30607 m!123529))

(declare-fun m!123531 () Bool)

(assert (=> b!109189 m!123531))

(assert (=> b!109189 m!121485))

(assert (=> b!109189 m!121485))

(declare-fun m!123533 () Bool)

(assert (=> b!109189 m!123533))

(assert (=> b!109191 m!121485))

(assert (=> b!109191 m!121485))

(assert (=> b!109191 m!123533))

(assert (=> d!29911 d!30607))

(assert (=> d!29911 d!29917))

(assert (=> d!29911 d!29925))

(assert (=> d!29911 d!29927))

(declare-fun d!30609 () Bool)

(assert (=> d!30609 (isDefined!110 (getValueByKey!158 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!56167 () Unit!3301)

(assert (=> d!30609 (= lt!56167 (choose!686 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!71023 () Bool)

(assert (=> d!30609 e!71023))

(declare-fun res!54075 () Bool)

(assert (=> d!30609 (=> (not res!54075) (not e!71023))))

(assert (=> d!30609 (= res!54075 (isStrictlySorted!297 (toList!786 lt!55306)))))

(assert (=> d!30609 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!56167)))

(declare-fun b!109192 () Bool)

(assert (=> b!109192 (= e!71023 (containsKey!161 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30609 res!54075) b!109192))

(assert (=> d!30609 m!120923))

(assert (=> d!30609 m!121377))

(assert (=> d!30609 m!121377))

(assert (=> d!30609 m!121379))

(assert (=> d!30609 m!120923))

(declare-fun m!123535 () Bool)

(assert (=> d!30609 m!123535))

(assert (=> d!30609 m!122795))

(assert (=> b!109192 m!120923))

(assert (=> b!109192 m!121373))

(assert (=> b!108067 d!30609))

(assert (=> b!108067 d!30447))

(assert (=> b!108067 d!30107))

(declare-fun d!30611 () Bool)

(declare-fun res!54076 () Bool)

(declare-fun e!71024 () Bool)

(assert (=> d!30611 (=> res!54076 e!71024)))

(assert (=> d!30611 (= res!54076 (and ((_ is Cons!1600) lt!55450) (= (_1!1199 (h!2198 lt!55450)) (_1!1199 lt!55092))))))

(assert (=> d!30611 (= (containsKey!161 lt!55450 (_1!1199 lt!55092)) e!71024)))

(declare-fun b!109193 () Bool)

(declare-fun e!71025 () Bool)

(assert (=> b!109193 (= e!71024 e!71025)))

(declare-fun res!54077 () Bool)

(assert (=> b!109193 (=> (not res!54077) (not e!71025))))

(assert (=> b!109193 (= res!54077 (and (or (not ((_ is Cons!1600) lt!55450)) (bvsle (_1!1199 (h!2198 lt!55450)) (_1!1199 lt!55092))) ((_ is Cons!1600) lt!55450) (bvslt (_1!1199 (h!2198 lt!55450)) (_1!1199 lt!55092))))))

(declare-fun b!109194 () Bool)

(assert (=> b!109194 (= e!71025 (containsKey!161 (t!5712 lt!55450) (_1!1199 lt!55092)))))

(assert (= (and d!30611 (not res!54076)) b!109193))

(assert (= (and b!109193 res!54077) b!109194))

(declare-fun m!123537 () Bool)

(assert (=> b!109194 m!123537))

(assert (=> b!108006 d!30611))

(declare-fun d!30613 () Bool)

(assert (=> d!30613 (= (isDefined!110 (getValueByKey!158 (toList!786 lt!55291) (_1!1199 lt!55092))) (not (isEmpty!380 (getValueByKey!158 (toList!786 lt!55291) (_1!1199 lt!55092)))))))

(declare-fun bs!4509 () Bool)

(assert (= bs!4509 d!30613))

(assert (=> bs!4509 m!121021))

(declare-fun m!123539 () Bool)

(assert (=> bs!4509 m!123539))

(assert (=> b!108017 d!30613))

(assert (=> b!108017 d!30037))

(declare-fun d!30615 () Bool)

(assert (=> d!30615 (= (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55372)) (v!2920 (getValueByKey!158 (toList!786 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55372)))))

(assert (=> d!29925 d!30615))

(declare-fun b!109198 () Bool)

(declare-fun e!71027 () Option!164)

(assert (=> b!109198 (= e!71027 None!162)))

(declare-fun b!109197 () Bool)

(assert (=> b!109197 (= e!71027 (getValueByKey!158 (t!5712 (toList!786 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) lt!55372))))

(declare-fun e!71026 () Option!164)

(declare-fun b!109195 () Bool)

(assert (=> b!109195 (= e!71026 (Some!163 (_2!1199 (h!2198 (toList!786 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))))))

(declare-fun d!30617 () Bool)

(declare-fun c!19288 () Bool)

(assert (=> d!30617 (= c!19288 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))) lt!55372)))))

(assert (=> d!30617 (= (getValueByKey!158 (toList!786 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55372) e!71026)))

(declare-fun b!109196 () Bool)

(assert (=> b!109196 (= e!71026 e!71027)))

(declare-fun c!19289 () Bool)

(assert (=> b!109196 (= c!19289 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))) (not (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55369 (tuple2!2377 lt!55370 (minValue!2478 (v!2914 (underlying!367 thiss!992)))))))) lt!55372))))))

(assert (= (and d!30617 c!19288) b!109195))

(assert (= (and d!30617 (not c!19288)) b!109196))

(assert (= (and b!109196 c!19289) b!109197))

(assert (= (and b!109196 (not c!19289)) b!109198))

(declare-fun m!123541 () Bool)

(assert (=> b!109197 m!123541))

(assert (=> d!29925 d!30617))

(declare-fun d!30619 () Bool)

(declare-fun e!71028 () Bool)

(assert (=> d!30619 e!71028))

(declare-fun res!54078 () Bool)

(assert (=> d!30619 (=> res!54078 e!71028)))

(declare-fun lt!56168 () Bool)

(assert (=> d!30619 (= res!54078 (not lt!56168))))

(declare-fun lt!56171 () Bool)

(assert (=> d!30619 (= lt!56168 lt!56171)))

(declare-fun lt!56170 () Unit!3301)

(declare-fun e!71029 () Unit!3301)

(assert (=> d!30619 (= lt!56170 e!71029)))

(declare-fun c!19290 () Bool)

(assert (=> d!30619 (= c!19290 lt!56171)))

(assert (=> d!30619 (= lt!56171 (containsKey!161 (toList!786 lt!55610) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> d!30619 (= (contains!820 lt!55610 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) lt!56168)))

(declare-fun b!109199 () Bool)

(declare-fun lt!56169 () Unit!3301)

(assert (=> b!109199 (= e!71029 lt!56169)))

(assert (=> b!109199 (= lt!56169 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55610) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(assert (=> b!109199 (isDefined!110 (getValueByKey!158 (toList!786 lt!55610) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!109200 () Bool)

(declare-fun Unit!3368 () Unit!3301)

(assert (=> b!109200 (= e!71029 Unit!3368)))

(declare-fun b!109201 () Bool)

(assert (=> b!109201 (= e!71028 (isDefined!110 (getValueByKey!158 (toList!786 lt!55610) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (= (and d!30619 c!19290) b!109199))

(assert (= (and d!30619 (not c!19290)) b!109200))

(assert (= (and d!30619 (not res!54078)) b!109201))

(declare-fun m!123543 () Bool)

(assert (=> d!30619 m!123543))

(declare-fun m!123545 () Bool)

(assert (=> b!109199 m!123545))

(assert (=> b!109199 m!121777))

(assert (=> b!109199 m!121777))

(declare-fun m!123547 () Bool)

(assert (=> b!109199 m!123547))

(assert (=> b!109201 m!121777))

(assert (=> b!109201 m!121777))

(assert (=> b!109201 m!123547))

(assert (=> d!30001 d!30619))

(declare-fun b!109205 () Bool)

(declare-fun e!71031 () Option!164)

(assert (=> b!109205 (= e!71031 None!162)))

(declare-fun b!109204 () Bool)

(assert (=> b!109204 (= e!71031 (getValueByKey!158 (t!5712 lt!55609) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!109202 () Bool)

(declare-fun e!71030 () Option!164)

(assert (=> b!109202 (= e!71030 (Some!163 (_2!1199 (h!2198 lt!55609))))))

(declare-fun d!30621 () Bool)

(declare-fun c!19291 () Bool)

(assert (=> d!30621 (= c!19291 (and ((_ is Cons!1600) lt!55609) (= (_1!1199 (h!2198 lt!55609)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!30621 (= (getValueByKey!158 lt!55609 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) e!71030)))

(declare-fun b!109203 () Bool)

(assert (=> b!109203 (= e!71030 e!71031)))

(declare-fun c!19292 () Bool)

(assert (=> b!109203 (= c!19292 (and ((_ is Cons!1600) lt!55609) (not (= (_1!1199 (h!2198 lt!55609)) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(assert (= (and d!30621 c!19291) b!109202))

(assert (= (and d!30621 (not c!19291)) b!109203))

(assert (= (and b!109203 c!19292) b!109204))

(assert (= (and b!109203 (not c!19292)) b!109205))

(declare-fun m!123549 () Bool)

(assert (=> b!109204 m!123549))

(assert (=> d!30001 d!30621))

(declare-fun d!30623 () Bool)

(assert (=> d!30623 (= (getValueByKey!158 lt!55609 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) (Some!163 (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun lt!56172 () Unit!3301)

(assert (=> d!30623 (= lt!56172 (choose!677 lt!55609 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun e!71032 () Bool)

(assert (=> d!30623 e!71032))

(declare-fun res!54079 () Bool)

(assert (=> d!30623 (=> (not res!54079) (not e!71032))))

(assert (=> d!30623 (= res!54079 (isStrictlySorted!297 lt!55609))))

(assert (=> d!30623 (= (lemmaContainsTupThenGetReturnValue!74 lt!55609 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) lt!56172)))

(declare-fun b!109206 () Bool)

(declare-fun res!54080 () Bool)

(assert (=> b!109206 (=> (not res!54080) (not e!71032))))

(assert (=> b!109206 (= res!54080 (containsKey!161 lt!55609 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun b!109207 () Bool)

(assert (=> b!109207 (= e!71032 (contains!823 lt!55609 (tuple2!2377 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (= (and d!30623 res!54079) b!109206))

(assert (= (and b!109206 res!54080) b!109207))

(assert (=> d!30623 m!121771))

(declare-fun m!123551 () Bool)

(assert (=> d!30623 m!123551))

(declare-fun m!123553 () Bool)

(assert (=> d!30623 m!123553))

(declare-fun m!123555 () Bool)

(assert (=> b!109206 m!123555))

(declare-fun m!123557 () Bool)

(assert (=> b!109207 m!123557))

(assert (=> d!30001 d!30623))

(declare-fun b!109208 () Bool)

(declare-fun e!71034 () List!1604)

(declare-fun call!11581 () List!1604)

(assert (=> b!109208 (= e!71034 call!11581)))

(declare-fun b!109210 () Bool)

(declare-fun e!71033 () List!1604)

(assert (=> b!109210 (= e!71034 e!71033)))

(declare-fun c!19295 () Bool)

(assert (=> b!109210 (= c!19295 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun b!109211 () Bool)

(declare-fun call!11579 () List!1604)

(assert (=> b!109211 (= e!71033 call!11579)))

(declare-fun e!71037 () List!1604)

(declare-fun b!109212 () Bool)

(assert (=> b!109212 (= e!71037 (insertStrictlySorted!77 (t!5712 (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun c!19294 () Bool)

(declare-fun b!109213 () Bool)

(assert (=> b!109213 (= e!71037 (ite c!19295 (t!5712 (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (ite c!19294 (Cons!1600 (h!2198 (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (t!5712 (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))) Nil!1601)))))

(declare-fun lt!56173 () List!1604)

(declare-fun b!109214 () Bool)

(declare-fun e!71035 () Bool)

(assert (=> b!109214 (= e!71035 (contains!823 lt!56173 (tuple2!2377 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun bm!11576 () Bool)

(assert (=> bm!11576 (= call!11579 call!11581)))

(declare-fun b!109215 () Bool)

(assert (=> b!109215 (= c!19294 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (bvsgt (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(declare-fun e!71036 () List!1604)

(assert (=> b!109215 (= e!71033 e!71036)))

(declare-fun b!109216 () Bool)

(declare-fun call!11580 () List!1604)

(assert (=> b!109216 (= e!71036 call!11580)))

(declare-fun c!19293 () Bool)

(declare-fun bm!11577 () Bool)

(assert (=> bm!11577 (= call!11581 ($colon$colon!81 e!71037 (ite c!19293 (h!2198 (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (tuple2!2377 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))))

(declare-fun c!19296 () Bool)

(assert (=> bm!11577 (= c!19296 c!19293)))

(declare-fun b!109209 () Bool)

(declare-fun res!54082 () Bool)

(assert (=> b!109209 (=> (not res!54082) (not e!71035))))

(assert (=> b!109209 (= res!54082 (containsKey!161 lt!56173 (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))))))

(declare-fun d!30625 () Bool)

(assert (=> d!30625 e!71035))

(declare-fun res!54081 () Bool)

(assert (=> d!30625 (=> (not res!54081) (not e!71035))))

(assert (=> d!30625 (= res!54081 (isStrictlySorted!297 lt!56173))))

(assert (=> d!30625 (= lt!56173 e!71034)))

(assert (=> d!30625 (= c!19293 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (bvslt (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))))

(assert (=> d!30625 (isStrictlySorted!297 (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30625 (= (insertStrictlySorted!77 (toList!786 (+!142 lt!55096 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (_1!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (_2!1199 (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094))) lt!56173)))

(declare-fun bm!11578 () Bool)

(assert (=> bm!11578 (= call!11580 call!11579)))

(declare-fun b!109217 () Bool)

(assert (=> b!109217 (= e!71036 call!11580)))

(assert (= (and d!30625 c!19293) b!109208))

(assert (= (and d!30625 (not c!19293)) b!109210))

(assert (= (and b!109210 c!19295) b!109211))

(assert (= (and b!109210 (not c!19295)) b!109215))

(assert (= (and b!109215 c!19294) b!109216))

(assert (= (and b!109215 (not c!19294)) b!109217))

(assert (= (or b!109216 b!109217) bm!11578))

(assert (= (or b!109211 bm!11578) bm!11576))

(assert (= (or b!109208 bm!11576) bm!11577))

(assert (= (and bm!11577 c!19296) b!109212))

(assert (= (and bm!11577 (not c!19296)) b!109213))

(assert (= (and d!30625 res!54081) b!109209))

(assert (= (and b!109209 res!54082) b!109214))

(declare-fun m!123559 () Bool)

(assert (=> d!30625 m!123559))

(declare-fun m!123561 () Bool)

(assert (=> d!30625 m!123561))

(declare-fun m!123563 () Bool)

(assert (=> bm!11577 m!123563))

(declare-fun m!123565 () Bool)

(assert (=> b!109212 m!123565))

(declare-fun m!123567 () Bool)

(assert (=> b!109214 m!123567))

(declare-fun m!123569 () Bool)

(assert (=> b!109209 m!123569))

(assert (=> d!30001 d!30625))

(declare-fun d!30627 () Bool)

(declare-fun res!54083 () Bool)

(declare-fun e!71038 () Bool)

(assert (=> d!30627 (=> res!54083 e!71038)))

(assert (=> d!30627 (= res!54083 (and ((_ is Cons!1600) (toList!786 lt!55384)) (= (_1!1199 (h!2198 (toList!786 lt!55384))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30627 (= (containsKey!161 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000) e!71038)))

(declare-fun b!109218 () Bool)

(declare-fun e!71039 () Bool)

(assert (=> b!109218 (= e!71038 e!71039)))

(declare-fun res!54084 () Bool)

(assert (=> b!109218 (=> (not res!54084) (not e!71039))))

(assert (=> b!109218 (= res!54084 (and (or (not ((_ is Cons!1600) (toList!786 lt!55384))) (bvsle (_1!1199 (h!2198 (toList!786 lt!55384))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1600) (toList!786 lt!55384)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55384))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109219 () Bool)

(assert (=> b!109219 (= e!71039 (containsKey!161 (t!5712 (toList!786 lt!55384)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30627 (not res!54083)) b!109218))

(assert (= (and b!109218 res!54084) b!109219))

(declare-fun m!123571 () Bool)

(assert (=> b!109219 m!123571))

(assert (=> d!29845 d!30627))

(declare-fun d!30629 () Bool)

(declare-fun res!54085 () Bool)

(declare-fun e!71040 () Bool)

(assert (=> d!30629 (=> res!54085 e!71040)))

(assert (=> d!30629 (= res!54085 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))) lt!55377)))))

(assert (=> d!30629 (= (containsKey!161 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55377) e!71040)))

(declare-fun b!109220 () Bool)

(declare-fun e!71041 () Bool)

(assert (=> b!109220 (= e!71040 e!71041)))

(declare-fun res!54086 () Bool)

(assert (=> b!109220 (=> (not res!54086) (not e!71041))))

(assert (=> b!109220 (= res!54086 (and (or (not ((_ is Cons!1600) (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))) (bvsle (_1!1199 (h!2198 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))) lt!55377)) ((_ is Cons!1600) (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (bvslt (_1!1199 (h!2198 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))) lt!55377)))))

(declare-fun b!109221 () Bool)

(assert (=> b!109221 (= e!71041 (containsKey!161 (t!5712 (toList!786 (+!142 lt!55375 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) lt!55377))))

(assert (= (and d!30629 (not res!54085)) b!109220))

(assert (= (and b!109220 res!54086) b!109221))

(declare-fun m!123573 () Bool)

(assert (=> b!109221 m!123573))

(assert (=> d!29903 d!30629))

(assert (=> d!29989 d!29891))

(declare-fun d!30631 () Bool)

(declare-fun e!71044 () Bool)

(assert (=> d!30631 e!71044))

(declare-fun res!54092 () Bool)

(assert (=> d!30631 (=> (not res!54092) (not e!71044))))

(declare-fun lt!56176 () SeekEntryResult!254)

(assert (=> d!30631 (= res!54092 ((_ is Found!254) lt!56176))))

(assert (=> d!30631 (= lt!56176 (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(assert (=> d!30631 true))

(declare-fun _$33!93 () Unit!3301)

(assert (=> d!30631 (= (choose!683 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)) _$33!93)))

(declare-fun b!109226 () Bool)

(declare-fun res!54091 () Bool)

(assert (=> b!109226 (=> (not res!54091) (not e!71044))))

(assert (=> b!109226 (= res!54091 (inRange!0 (index!3166 lt!56176) (mask!6763 newMap!16)))))

(declare-fun b!109227 () Bool)

(assert (=> b!109227 (= e!71044 (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!56176)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30631 res!54092) b!109226))

(assert (= (and b!109226 res!54091) b!109227))

(assert (=> d!30631 m!120751))

(assert (=> d!30631 m!120969))

(declare-fun m!123575 () Bool)

(assert (=> b!109226 m!123575))

(declare-fun m!123577 () Bool)

(assert (=> b!109227 m!123577))

(assert (=> d!29989 d!30631))

(assert (=> d!29989 d!30057))

(declare-fun d!30633 () Bool)

(assert (=> d!30633 (= (apply!99 lt!55410 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!786 lt!55410) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4510 () Bool)

(assert (= bs!4510 d!30633))

(assert (=> bs!4510 m!122495))

(assert (=> bs!4510 m!122495))

(declare-fun m!123579 () Bool)

(assert (=> bs!4510 m!123579))

(assert (=> b!107920 d!30633))

(declare-fun d!30635 () Bool)

(declare-fun lt!56177 () Bool)

(assert (=> d!30635 (= lt!56177 (select (content!112 lt!55323) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(declare-fun e!71045 () Bool)

(assert (=> d!30635 (= lt!56177 e!71045)))

(declare-fun res!54094 () Bool)

(assert (=> d!30635 (=> (not res!54094) (not e!71045))))

(assert (=> d!30635 (= res!54094 ((_ is Cons!1600) lt!55323))))

(assert (=> d!30635 (= (contains!823 lt!55323 (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))) lt!56177)))

(declare-fun b!109228 () Bool)

(declare-fun e!71046 () Bool)

(assert (=> b!109228 (= e!71045 e!71046)))

(declare-fun res!54093 () Bool)

(assert (=> b!109228 (=> res!54093 e!71046)))

(assert (=> b!109228 (= res!54093 (= (h!2198 lt!55323) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(declare-fun b!109229 () Bool)

(assert (=> b!109229 (= e!71046 (contains!823 (t!5712 lt!55323) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(assert (= (and d!30635 res!54094) b!109228))

(assert (= (and b!109228 (not res!54093)) b!109229))

(declare-fun m!123581 () Bool)

(assert (=> d!30635 m!123581))

(declare-fun m!123583 () Bool)

(assert (=> d!30635 m!123583))

(declare-fun m!123585 () Bool)

(assert (=> b!109229 m!123585))

(assert (=> b!107959 d!30635))

(declare-fun d!30637 () Bool)

(declare-fun res!54095 () Bool)

(declare-fun e!71047 () Bool)

(assert (=> d!30637 (=> res!54095 e!71047)))

(assert (=> d!30637 (= res!54095 (and ((_ is Cons!1600) lt!55290) (= (_1!1199 (h!2198 lt!55290)) (_1!1199 lt!55092))))))

(assert (=> d!30637 (= (containsKey!161 lt!55290 (_1!1199 lt!55092)) e!71047)))

(declare-fun b!109230 () Bool)

(declare-fun e!71048 () Bool)

(assert (=> b!109230 (= e!71047 e!71048)))

(declare-fun res!54096 () Bool)

(assert (=> b!109230 (=> (not res!54096) (not e!71048))))

(assert (=> b!109230 (= res!54096 (and (or (not ((_ is Cons!1600) lt!55290)) (bvsle (_1!1199 (h!2198 lt!55290)) (_1!1199 lt!55092))) ((_ is Cons!1600) lt!55290) (bvslt (_1!1199 (h!2198 lt!55290)) (_1!1199 lt!55092))))))

(declare-fun b!109231 () Bool)

(assert (=> b!109231 (= e!71048 (containsKey!161 (t!5712 lt!55290) (_1!1199 lt!55092)))))

(assert (= (and d!30637 (not res!54095)) b!109230))

(assert (= (and b!109230 res!54096) b!109231))

(declare-fun m!123587 () Bool)

(assert (=> b!109231 m!123587))

(assert (=> b!108022 d!30637))

(declare-fun d!30639 () Bool)

(declare-fun res!54097 () Bool)

(declare-fun e!71049 () Bool)

(assert (=> d!30639 (=> res!54097 e!71049)))

(assert (=> d!30639 (= res!54097 (or ((_ is Nil!1601) lt!55450) ((_ is Nil!1601) (t!5712 lt!55450))))))

(assert (=> d!30639 (= (isStrictlySorted!297 lt!55450) e!71049)))

(declare-fun b!109232 () Bool)

(declare-fun e!71050 () Bool)

(assert (=> b!109232 (= e!71049 e!71050)))

(declare-fun res!54098 () Bool)

(assert (=> b!109232 (=> (not res!54098) (not e!71050))))

(assert (=> b!109232 (= res!54098 (bvslt (_1!1199 (h!2198 lt!55450)) (_1!1199 (h!2198 (t!5712 lt!55450)))))))

(declare-fun b!109233 () Bool)

(assert (=> b!109233 (= e!71050 (isStrictlySorted!297 (t!5712 lt!55450)))))

(assert (= (and d!30639 (not res!54097)) b!109232))

(assert (= (and b!109232 res!54098) b!109233))

(declare-fun m!123589 () Bool)

(assert (=> b!109233 m!123589))

(assert (=> d!29873 d!30639))

(declare-fun d!30641 () Bool)

(declare-fun res!54099 () Bool)

(declare-fun e!71051 () Bool)

(assert (=> d!30641 (=> res!54099 e!71051)))

(assert (=> d!30641 (= res!54099 (or ((_ is Nil!1601) (toList!786 (+!142 lt!55096 lt!55093))) ((_ is Nil!1601) (t!5712 (toList!786 (+!142 lt!55096 lt!55093))))))))

(assert (=> d!30641 (= (isStrictlySorted!297 (toList!786 (+!142 lt!55096 lt!55093))) e!71051)))

(declare-fun b!109234 () Bool)

(declare-fun e!71052 () Bool)

(assert (=> b!109234 (= e!71051 e!71052)))

(declare-fun res!54100 () Bool)

(assert (=> b!109234 (=> (not res!54100) (not e!71052))))

(assert (=> b!109234 (= res!54100 (bvslt (_1!1199 (h!2198 (toList!786 (+!142 lt!55096 lt!55093)))) (_1!1199 (h!2198 (t!5712 (toList!786 (+!142 lt!55096 lt!55093)))))))))

(declare-fun b!109235 () Bool)

(assert (=> b!109235 (= e!71052 (isStrictlySorted!297 (t!5712 (toList!786 (+!142 lt!55096 lt!55093)))))))

(assert (= (and d!30641 (not res!54099)) b!109234))

(assert (= (and b!109234 res!54100) b!109235))

(assert (=> b!109235 m!123003))

(assert (=> d!29873 d!30641))

(declare-fun bm!11579 () Bool)

(declare-fun call!11582 () (_ BitVec 32))

(assert (=> bm!11579 (= call!11582 (arrayCountValidKeys!0 (_keys!4315 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun d!30643 () Bool)

(declare-fun lt!56178 () (_ BitVec 32))

(assert (=> d!30643 (and (bvsge lt!56178 #b00000000000000000000000000000000) (bvsle lt!56178 (bvsub (size!2322 (_keys!4315 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!71054 () (_ BitVec 32))

(assert (=> d!30643 (= lt!56178 e!71054)))

(declare-fun c!19298 () Bool)

(assert (=> d!30643 (= c!19298 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30643 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2322 (_keys!4315 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2322 (_keys!4315 newMap!16)) (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30643 (= (arrayCountValidKeys!0 (_keys!4315 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2322 (_keys!4315 newMap!16))) lt!56178)))

(declare-fun b!109236 () Bool)

(assert (=> b!109236 (= e!71054 #b00000000000000000000000000000000)))

(declare-fun b!109237 () Bool)

(declare-fun e!71053 () (_ BitVec 32))

(assert (=> b!109237 (= e!71053 (bvadd #b00000000000000000000000000000001 call!11582))))

(declare-fun b!109238 () Bool)

(assert (=> b!109238 (= e!71054 e!71053)))

(declare-fun c!19297 () Bool)

(assert (=> b!109238 (= c!19297 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!109239 () Bool)

(assert (=> b!109239 (= e!71053 call!11582)))

(assert (= (and d!30643 c!19298) b!109236))

(assert (= (and d!30643 (not c!19298)) b!109238))

(assert (= (and b!109238 c!19297) b!109237))

(assert (= (and b!109238 (not c!19297)) b!109239))

(assert (= (or b!109237 b!109239) bm!11579))

(declare-fun m!123591 () Bool)

(assert (=> bm!11579 m!123591))

(assert (=> b!109238 m!122335))

(assert (=> b!109238 m!122335))

(assert (=> b!109238 m!122745))

(assert (=> bm!11490 d!30643))

(declare-fun d!30645 () Bool)

(declare-fun e!71055 () Bool)

(assert (=> d!30645 e!71055))

(declare-fun res!54101 () Bool)

(assert (=> d!30645 (=> res!54101 e!71055)))

(declare-fun lt!56179 () Bool)

(assert (=> d!30645 (= res!54101 (not lt!56179))))

(declare-fun lt!56182 () Bool)

(assert (=> d!30645 (= lt!56179 lt!56182)))

(declare-fun lt!56181 () Unit!3301)

(declare-fun e!71056 () Unit!3301)

(assert (=> d!30645 (= lt!56181 e!71056)))

(declare-fun c!19299 () Bool)

(assert (=> d!30645 (= c!19299 lt!56182)))

(assert (=> d!30645 (= lt!56182 (containsKey!161 (toList!786 lt!55720) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30645 (= (contains!820 lt!55720 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) lt!56179)))

(declare-fun b!109240 () Bool)

(declare-fun lt!56180 () Unit!3301)

(assert (=> b!109240 (= e!71056 lt!56180)))

(assert (=> b!109240 (= lt!56180 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55720) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109240 (isDefined!110 (getValueByKey!158 (toList!786 lt!55720) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109241 () Bool)

(declare-fun Unit!3369 () Unit!3301)

(assert (=> b!109241 (= e!71056 Unit!3369)))

(declare-fun b!109242 () Bool)

(assert (=> b!109242 (= e!71055 (isDefined!110 (getValueByKey!158 (toList!786 lt!55720) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!30645 c!19299) b!109240))

(assert (= (and d!30645 (not c!19299)) b!109241))

(assert (= (and d!30645 (not res!54101)) b!109242))

(assert (=> d!30645 m!121169))

(declare-fun m!123593 () Bool)

(assert (=> d!30645 m!123593))

(assert (=> b!109240 m!121169))

(declare-fun m!123595 () Bool)

(assert (=> b!109240 m!123595))

(assert (=> b!109240 m!121169))

(assert (=> b!109240 m!122759))

(assert (=> b!109240 m!122759))

(declare-fun m!123597 () Bool)

(assert (=> b!109240 m!123597))

(assert (=> b!109242 m!121169))

(assert (=> b!109242 m!122759))

(assert (=> b!109242 m!122759))

(assert (=> b!109242 m!123597))

(assert (=> b!108296 d!30645))

(declare-fun b!109243 () Bool)

(declare-fun e!71058 () List!1604)

(declare-fun call!11585 () List!1604)

(assert (=> b!109243 (= e!71058 call!11585)))

(declare-fun b!109245 () Bool)

(declare-fun e!71057 () List!1604)

(assert (=> b!109245 (= e!71058 e!71057)))

(declare-fun c!19302 () Bool)

(assert (=> b!109245 (= c!19302 (and ((_ is Cons!1600) (t!5712 (toList!786 (+!142 lt!55096 lt!55092)))) (= (_1!1199 (h!2198 (t!5712 (toList!786 (+!142 lt!55096 lt!55092))))) (_1!1199 lt!55093))))))

(declare-fun b!109246 () Bool)

(declare-fun call!11583 () List!1604)

(assert (=> b!109246 (= e!71057 call!11583)))

(declare-fun b!109247 () Bool)

(declare-fun e!71061 () List!1604)

(assert (=> b!109247 (= e!71061 (insertStrictlySorted!77 (t!5712 (t!5712 (toList!786 (+!142 lt!55096 lt!55092)))) (_1!1199 lt!55093) (_2!1199 lt!55093)))))

(declare-fun b!109248 () Bool)

(declare-fun c!19301 () Bool)

(assert (=> b!109248 (= e!71061 (ite c!19302 (t!5712 (t!5712 (toList!786 (+!142 lt!55096 lt!55092)))) (ite c!19301 (Cons!1600 (h!2198 (t!5712 (toList!786 (+!142 lt!55096 lt!55092)))) (t!5712 (t!5712 (toList!786 (+!142 lt!55096 lt!55092))))) Nil!1601)))))

(declare-fun b!109249 () Bool)

(declare-fun e!71059 () Bool)

(declare-fun lt!56183 () List!1604)

(assert (=> b!109249 (= e!71059 (contains!823 lt!56183 (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093))))))

(declare-fun bm!11580 () Bool)

(assert (=> bm!11580 (= call!11583 call!11585)))

(declare-fun b!109250 () Bool)

(assert (=> b!109250 (= c!19301 (and ((_ is Cons!1600) (t!5712 (toList!786 (+!142 lt!55096 lt!55092)))) (bvsgt (_1!1199 (h!2198 (t!5712 (toList!786 (+!142 lt!55096 lt!55092))))) (_1!1199 lt!55093))))))

(declare-fun e!71060 () List!1604)

(assert (=> b!109250 (= e!71057 e!71060)))

(declare-fun b!109251 () Bool)

(declare-fun call!11584 () List!1604)

(assert (=> b!109251 (= e!71060 call!11584)))

(declare-fun bm!11581 () Bool)

(declare-fun c!19300 () Bool)

(assert (=> bm!11581 (= call!11585 ($colon$colon!81 e!71061 (ite c!19300 (h!2198 (t!5712 (toList!786 (+!142 lt!55096 lt!55092)))) (tuple2!2377 (_1!1199 lt!55093) (_2!1199 lt!55093)))))))

(declare-fun c!19303 () Bool)

(assert (=> bm!11581 (= c!19303 c!19300)))

(declare-fun b!109244 () Bool)

(declare-fun res!54103 () Bool)

(assert (=> b!109244 (=> (not res!54103) (not e!71059))))

(assert (=> b!109244 (= res!54103 (containsKey!161 lt!56183 (_1!1199 lt!55093)))))

(declare-fun d!30647 () Bool)

(assert (=> d!30647 e!71059))

(declare-fun res!54102 () Bool)

(assert (=> d!30647 (=> (not res!54102) (not e!71059))))

(assert (=> d!30647 (= res!54102 (isStrictlySorted!297 lt!56183))))

(assert (=> d!30647 (= lt!56183 e!71058)))

(assert (=> d!30647 (= c!19300 (and ((_ is Cons!1600) (t!5712 (toList!786 (+!142 lt!55096 lt!55092)))) (bvslt (_1!1199 (h!2198 (t!5712 (toList!786 (+!142 lt!55096 lt!55092))))) (_1!1199 lt!55093))))))

(assert (=> d!30647 (isStrictlySorted!297 (t!5712 (toList!786 (+!142 lt!55096 lt!55092))))))

(assert (=> d!30647 (= (insertStrictlySorted!77 (t!5712 (toList!786 (+!142 lt!55096 lt!55092))) (_1!1199 lt!55093) (_2!1199 lt!55093)) lt!56183)))

(declare-fun bm!11582 () Bool)

(assert (=> bm!11582 (= call!11584 call!11583)))

(declare-fun b!109252 () Bool)

(assert (=> b!109252 (= e!71060 call!11584)))

(assert (= (and d!30647 c!19300) b!109243))

(assert (= (and d!30647 (not c!19300)) b!109245))

(assert (= (and b!109245 c!19302) b!109246))

(assert (= (and b!109245 (not c!19302)) b!109250))

(assert (= (and b!109250 c!19301) b!109251))

(assert (= (and b!109250 (not c!19301)) b!109252))

(assert (= (or b!109251 b!109252) bm!11582))

(assert (= (or b!109246 bm!11582) bm!11580))

(assert (= (or b!109243 bm!11580) bm!11581))

(assert (= (and bm!11581 c!19303) b!109247))

(assert (= (and bm!11581 (not c!19303)) b!109248))

(assert (= (and d!30647 res!54102) b!109244))

(assert (= (and b!109244 res!54103) b!109249))

(declare-fun m!123599 () Bool)

(assert (=> d!30647 m!123599))

(assert (=> d!30647 m!123149))

(declare-fun m!123601 () Bool)

(assert (=> bm!11581 m!123601))

(declare-fun m!123603 () Bool)

(assert (=> b!109247 m!123603))

(declare-fun m!123605 () Bool)

(assert (=> b!109249 m!123605))

(declare-fun m!123607 () Bool)

(assert (=> b!109244 m!123607))

(assert (=> b!107984 d!30647))

(declare-fun d!30649 () Bool)

(declare-fun res!54104 () Bool)

(declare-fun e!71062 () Bool)

(assert (=> d!30649 (=> res!54104 e!71062)))

(assert (=> d!30649 (= res!54104 (or ((_ is Nil!1601) lt!55569) ((_ is Nil!1601) (t!5712 lt!55569))))))

(assert (=> d!30649 (= (isStrictlySorted!297 lt!55569) e!71062)))

(declare-fun b!109253 () Bool)

(declare-fun e!71063 () Bool)

(assert (=> b!109253 (= e!71062 e!71063)))

(declare-fun res!54105 () Bool)

(assert (=> b!109253 (=> (not res!54105) (not e!71063))))

(assert (=> b!109253 (= res!54105 (bvslt (_1!1199 (h!2198 lt!55569)) (_1!1199 (h!2198 (t!5712 lt!55569)))))))

(declare-fun b!109254 () Bool)

(assert (=> b!109254 (= e!71063 (isStrictlySorted!297 (t!5712 lt!55569)))))

(assert (= (and d!30649 (not res!54104)) b!109253))

(assert (= (and b!109253 res!54105) b!109254))

(declare-fun m!123609 () Bool)

(assert (=> b!109254 m!123609))

(assert (=> d!29965 d!30649))

(assert (=> d!29965 d!30315))

(declare-fun b!109258 () Bool)

(declare-fun e!71065 () Option!164)

(assert (=> b!109258 (= e!71065 None!162)))

(declare-fun b!109257 () Bool)

(assert (=> b!109257 (= e!71065 (getValueByKey!158 (t!5712 (toList!786 lt!55517)) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109255 () Bool)

(declare-fun e!71064 () Option!164)

(assert (=> b!109255 (= e!71064 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55517)))))))

(declare-fun c!19304 () Bool)

(declare-fun d!30651 () Bool)

(assert (=> d!30651 (= c!19304 (and ((_ is Cons!1600) (toList!786 lt!55517)) (= (_1!1199 (h!2198 (toList!786 lt!55517))) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30651 (= (getValueByKey!158 (toList!786 lt!55517) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!71064)))

(declare-fun b!109256 () Bool)

(assert (=> b!109256 (= e!71064 e!71065)))

(declare-fun c!19305 () Bool)

(assert (=> b!109256 (= c!19305 (and ((_ is Cons!1600) (toList!786 lt!55517)) (not (= (_1!1199 (h!2198 (toList!786 lt!55517))) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30651 c!19304) b!109255))

(assert (= (and d!30651 (not c!19304)) b!109256))

(assert (= (and b!109256 c!19305) b!109257))

(assert (= (and b!109256 (not c!19305)) b!109258))

(declare-fun m!123611 () Bool)

(assert (=> b!109257 m!123611))

(assert (=> b!108104 d!30651))

(declare-fun d!30653 () Bool)

(declare-fun c!19306 () Bool)

(assert (=> d!30653 (= c!19306 ((_ is Nil!1601) (toList!786 lt!55324)))))

(declare-fun e!71066 () (InoxSet tuple2!2376))

(assert (=> d!30653 (= (content!112 (toList!786 lt!55324)) e!71066)))

(declare-fun b!109259 () Bool)

(assert (=> b!109259 (= e!71066 ((as const (Array tuple2!2376 Bool)) false))))

(declare-fun b!109260 () Bool)

(assert (=> b!109260 (= e!71066 ((_ map or) (store ((as const (Array tuple2!2376 Bool)) false) (h!2198 (toList!786 lt!55324)) true) (content!112 (t!5712 (toList!786 lt!55324)))))))

(assert (= (and d!30653 c!19306) b!109259))

(assert (= (and d!30653 (not c!19306)) b!109260))

(declare-fun m!123613 () Bool)

(assert (=> b!109260 m!123613))

(declare-fun m!123615 () Bool)

(assert (=> b!109260 m!123615))

(assert (=> d!29949 d!30653))

(declare-fun d!30655 () Bool)

(assert (=> d!30655 (isDefined!110 (getValueByKey!158 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!56184 () Unit!3301)

(assert (=> d!30655 (= lt!56184 (choose!686 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71067 () Bool)

(assert (=> d!30655 e!71067))

(declare-fun res!54106 () Bool)

(assert (=> d!30655 (=> (not res!54106) (not e!71067))))

(assert (=> d!30655 (= res!54106 (isStrictlySorted!297 (toList!786 lt!55384)))))

(assert (=> d!30655 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000) lt!56184)))

(declare-fun b!109261 () Bool)

(assert (=> b!109261 (= e!71067 (containsKey!161 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30655 res!54106) b!109261))

(assert (=> d!30655 m!121147))

(assert (=> d!30655 m!121147))

(assert (=> d!30655 m!121407))

(declare-fun m!123617 () Bool)

(assert (=> d!30655 m!123617))

(assert (=> d!30655 m!123433))

(assert (=> b!109261 m!121403))

(assert (=> b!108085 d!30655))

(assert (=> b!108085 d!30565))

(assert (=> b!108085 d!30045))

(declare-fun b!109265 () Bool)

(declare-fun e!71069 () Option!164)

(assert (=> b!109265 (= e!71069 None!162)))

(declare-fun b!109264 () Bool)

(assert (=> b!109264 (= e!71069 (getValueByKey!158 (t!5712 (t!5712 lt!55290)) (_1!1199 lt!55092)))))

(declare-fun b!109262 () Bool)

(declare-fun e!71068 () Option!164)

(assert (=> b!109262 (= e!71068 (Some!163 (_2!1199 (h!2198 (t!5712 lt!55290)))))))

(declare-fun d!30657 () Bool)

(declare-fun c!19307 () Bool)

(assert (=> d!30657 (= c!19307 (and ((_ is Cons!1600) (t!5712 lt!55290)) (= (_1!1199 (h!2198 (t!5712 lt!55290))) (_1!1199 lt!55092))))))

(assert (=> d!30657 (= (getValueByKey!158 (t!5712 lt!55290) (_1!1199 lt!55092)) e!71068)))

(declare-fun b!109263 () Bool)

(assert (=> b!109263 (= e!71068 e!71069)))

(declare-fun c!19308 () Bool)

(assert (=> b!109263 (= c!19308 (and ((_ is Cons!1600) (t!5712 lt!55290)) (not (= (_1!1199 (h!2198 (t!5712 lt!55290))) (_1!1199 lt!55092)))))))

(assert (= (and d!30657 c!19307) b!109262))

(assert (= (and d!30657 (not c!19307)) b!109263))

(assert (= (and b!109263 c!19308) b!109264))

(assert (= (and b!109263 (not c!19308)) b!109265))

(declare-fun m!123619 () Bool)

(assert (=> b!109264 m!123619))

(assert (=> b!108020 d!30657))

(declare-fun d!30659 () Bool)

(assert (=> d!30659 (= (apply!99 lt!55570 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1350 (getValueByKey!158 (toList!786 lt!55570) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4511 () Bool)

(assert (= bs!4511 d!30659))

(assert (=> bs!4511 m!121659))

(assert (=> bs!4511 m!121993))

(assert (=> bs!4511 m!121993))

(declare-fun m!123621 () Bool)

(assert (=> bs!4511 m!123621))

(assert (=> b!108196 d!30659))

(assert (=> b!108196 d!30325))

(declare-fun d!30661 () Bool)

(assert (=> d!30661 (arrayContainsKey!0 (_keys!4315 newMap!16) lt!55481 #b00000000000000000000000000000000)))

(declare-fun lt!56187 () Unit!3301)

(declare-fun choose!13 (array!4357 (_ BitVec 64) (_ BitVec 32)) Unit!3301)

(assert (=> d!30661 (= lt!56187 (choose!13 (_keys!4315 newMap!16) lt!55481 #b00000000000000000000000000000000))))

(assert (=> d!30661 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!30661 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4315 newMap!16) lt!55481 #b00000000000000000000000000000000) lt!56187)))

(declare-fun bs!4512 () Bool)

(assert (= bs!4512 d!30661))

(assert (=> bs!4512 m!121389))

(declare-fun m!123623 () Bool)

(assert (=> bs!4512 m!123623))

(assert (=> b!108080 d!30661))

(declare-fun d!30663 () Bool)

(declare-fun res!54107 () Bool)

(declare-fun e!71070 () Bool)

(assert (=> d!30663 (=> res!54107 e!71070)))

(assert (=> d!30663 (= res!54107 (= (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) lt!55481))))

(assert (=> d!30663 (= (arrayContainsKey!0 (_keys!4315 newMap!16) lt!55481 #b00000000000000000000000000000000) e!71070)))

(declare-fun b!109266 () Bool)

(declare-fun e!71071 () Bool)

(assert (=> b!109266 (= e!71070 e!71071)))

(declare-fun res!54108 () Bool)

(assert (=> b!109266 (=> (not res!54108) (not e!71071))))

(assert (=> b!109266 (= res!54108 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!109267 () Bool)

(assert (=> b!109267 (= e!71071 (arrayContainsKey!0 (_keys!4315 newMap!16) lt!55481 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30663 (not res!54107)) b!109266))

(assert (= (and b!109266 res!54108) b!109267))

(assert (=> d!30663 m!121169))

(declare-fun m!123625 () Bool)

(assert (=> b!109267 m!123625))

(assert (=> b!108080 d!30663))

(declare-fun b!109268 () Bool)

(declare-fun e!71073 () SeekEntryResult!254)

(declare-fun lt!56189 () SeekEntryResult!254)

(assert (=> b!109268 (= e!71073 (Found!254 (index!3167 lt!56189)))))

(declare-fun b!109269 () Bool)

(declare-fun e!71072 () SeekEntryResult!254)

(assert (=> b!109269 (= e!71072 (seekKeyOrZeroReturnVacant!0 (x!13798 lt!56189) (index!3167 lt!56189) (index!3167 lt!56189) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(declare-fun b!109270 () Bool)

(declare-fun e!71074 () SeekEntryResult!254)

(assert (=> b!109270 (= e!71074 e!71073)))

(declare-fun lt!56190 () (_ BitVec 64))

(assert (=> b!109270 (= lt!56190 (select (arr!2066 (_keys!4315 newMap!16)) (index!3167 lt!56189)))))

(declare-fun c!19311 () Bool)

(assert (=> b!109270 (= c!19311 (= lt!56190 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109271 () Bool)

(declare-fun c!19309 () Bool)

(assert (=> b!109271 (= c!19309 (= lt!56190 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109271 (= e!71073 e!71072)))

(declare-fun d!30665 () Bool)

(declare-fun lt!56188 () SeekEntryResult!254)

(assert (=> d!30665 (and (or ((_ is Undefined!254) lt!56188) (not ((_ is Found!254) lt!56188)) (and (bvsge (index!3166 lt!56188) #b00000000000000000000000000000000) (bvslt (index!3166 lt!56188) (size!2322 (_keys!4315 newMap!16))))) (or ((_ is Undefined!254) lt!56188) ((_ is Found!254) lt!56188) (not ((_ is MissingZero!254) lt!56188)) (and (bvsge (index!3165 lt!56188) #b00000000000000000000000000000000) (bvslt (index!3165 lt!56188) (size!2322 (_keys!4315 newMap!16))))) (or ((_ is Undefined!254) lt!56188) ((_ is Found!254) lt!56188) ((_ is MissingZero!254) lt!56188) (not ((_ is MissingVacant!254) lt!56188)) (and (bvsge (index!3168 lt!56188) #b00000000000000000000000000000000) (bvslt (index!3168 lt!56188) (size!2322 (_keys!4315 newMap!16))))) (or ((_ is Undefined!254) lt!56188) (ite ((_ is Found!254) lt!56188) (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3166 lt!56188)) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!254) lt!56188) (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3165 lt!56188)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!254) lt!56188) (= (select (arr!2066 (_keys!4315 newMap!16)) (index!3168 lt!56188)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30665 (= lt!56188 e!71074)))

(declare-fun c!19310 () Bool)

(assert (=> d!30665 (= c!19310 (and ((_ is Intermediate!254) lt!56189) (undefined!1066 lt!56189)))))

(assert (=> d!30665 (= lt!56189 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) (mask!6763 newMap!16)) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) (_keys!4315 newMap!16) (mask!6763 newMap!16)))))

(assert (=> d!30665 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30665 (= (seekEntryOrOpen!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000) (_keys!4315 newMap!16) (mask!6763 newMap!16)) lt!56188)))

(declare-fun b!109272 () Bool)

(assert (=> b!109272 (= e!71074 Undefined!254)))

(declare-fun b!109273 () Bool)

(assert (=> b!109273 (= e!71072 (MissingZero!254 (index!3167 lt!56189)))))

(assert (= (and d!30665 c!19310) b!109272))

(assert (= (and d!30665 (not c!19310)) b!109270))

(assert (= (and b!109270 c!19311) b!109268))

(assert (= (and b!109270 (not c!19311)) b!109271))

(assert (= (and b!109271 c!19309) b!109273))

(assert (= (and b!109271 (not c!19309)) b!109269))

(assert (=> b!109269 m!121169))

(declare-fun m!123627 () Bool)

(assert (=> b!109269 m!123627))

(declare-fun m!123629 () Bool)

(assert (=> b!109270 m!123629))

(assert (=> d!30665 m!121179))

(declare-fun m!123631 () Bool)

(assert (=> d!30665 m!123631))

(declare-fun m!123633 () Bool)

(assert (=> d!30665 m!123633))

(declare-fun m!123635 () Bool)

(assert (=> d!30665 m!123635))

(declare-fun m!123637 () Bool)

(assert (=> d!30665 m!123637))

(assert (=> d!30665 m!121169))

(declare-fun m!123639 () Bool)

(assert (=> d!30665 m!123639))

(assert (=> d!30665 m!121169))

(assert (=> d!30665 m!123637))

(assert (=> b!108080 d!30665))

(declare-fun d!30667 () Bool)

(declare-fun lt!56191 () Bool)

(assert (=> d!30667 (= lt!56191 (select (content!112 lt!55319) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(declare-fun e!71075 () Bool)

(assert (=> d!30667 (= lt!56191 e!71075)))

(declare-fun res!54110 () Bool)

(assert (=> d!30667 (=> (not res!54110) (not e!71075))))

(assert (=> d!30667 (= res!54110 ((_ is Cons!1600) lt!55319))))

(assert (=> d!30667 (= (contains!823 lt!55319 (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))) lt!56191)))

(declare-fun b!109274 () Bool)

(declare-fun e!71076 () Bool)

(assert (=> b!109274 (= e!71075 e!71076)))

(declare-fun res!54109 () Bool)

(assert (=> b!109274 (=> res!54109 e!71076)))

(assert (=> b!109274 (= res!54109 (= (h!2198 lt!55319) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(declare-fun b!109275 () Bool)

(assert (=> b!109275 (= e!71076 (contains!823 (t!5712 lt!55319) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(assert (= (and d!30667 res!54110) b!109274))

(assert (= (and b!109274 (not res!54109)) b!109275))

(declare-fun m!123641 () Bool)

(assert (=> d!30667 m!123641))

(declare-fun m!123643 () Bool)

(assert (=> d!30667 m!123643))

(declare-fun m!123645 () Bool)

(assert (=> b!109275 m!123645))

(assert (=> b!108004 d!30667))

(assert (=> bm!11462 d!30259))

(declare-fun d!30669 () Bool)

(declare-fun e!71077 () Bool)

(assert (=> d!30669 e!71077))

(declare-fun res!54111 () Bool)

(assert (=> d!30669 (=> res!54111 e!71077)))

(declare-fun lt!56192 () Bool)

(assert (=> d!30669 (= res!54111 (not lt!56192))))

(declare-fun lt!56195 () Bool)

(assert (=> d!30669 (= lt!56192 lt!56195)))

(declare-fun lt!56194 () Unit!3301)

(declare-fun e!71078 () Unit!3301)

(assert (=> d!30669 (= lt!56194 e!71078)))

(declare-fun c!19312 () Bool)

(assert (=> d!30669 (= c!19312 lt!56195)))

(assert (=> d!30669 (= lt!56195 (containsKey!161 (toList!786 lt!55529) (_1!1199 (tuple2!2377 lt!55312 lt!55307))))))

(assert (=> d!30669 (= (contains!820 lt!55529 (_1!1199 (tuple2!2377 lt!55312 lt!55307))) lt!56192)))

(declare-fun b!109276 () Bool)

(declare-fun lt!56193 () Unit!3301)

(assert (=> b!109276 (= e!71078 lt!56193)))

(assert (=> b!109276 (= lt!56193 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55529) (_1!1199 (tuple2!2377 lt!55312 lt!55307))))))

(assert (=> b!109276 (isDefined!110 (getValueByKey!158 (toList!786 lt!55529) (_1!1199 (tuple2!2377 lt!55312 lt!55307))))))

(declare-fun b!109277 () Bool)

(declare-fun Unit!3370 () Unit!3301)

(assert (=> b!109277 (= e!71078 Unit!3370)))

(declare-fun b!109278 () Bool)

(assert (=> b!109278 (= e!71077 (isDefined!110 (getValueByKey!158 (toList!786 lt!55529) (_1!1199 (tuple2!2377 lt!55312 lt!55307)))))))

(assert (= (and d!30669 c!19312) b!109276))

(assert (= (and d!30669 (not c!19312)) b!109277))

(assert (= (and d!30669 (not res!54111)) b!109278))

(declare-fun m!123647 () Bool)

(assert (=> d!30669 m!123647))

(declare-fun m!123649 () Bool)

(assert (=> b!109276 m!123649))

(assert (=> b!109276 m!121541))

(assert (=> b!109276 m!121541))

(declare-fun m!123651 () Bool)

(assert (=> b!109276 m!123651))

(assert (=> b!109278 m!121541))

(assert (=> b!109278 m!121541))

(assert (=> b!109278 m!123651))

(assert (=> d!29943 d!30669))

(declare-fun b!109282 () Bool)

(declare-fun e!71080 () Option!164)

(assert (=> b!109282 (= e!71080 None!162)))

(declare-fun b!109281 () Bool)

(assert (=> b!109281 (= e!71080 (getValueByKey!158 (t!5712 lt!55528) (_1!1199 (tuple2!2377 lt!55312 lt!55307))))))

(declare-fun b!109279 () Bool)

(declare-fun e!71079 () Option!164)

(assert (=> b!109279 (= e!71079 (Some!163 (_2!1199 (h!2198 lt!55528))))))

(declare-fun d!30671 () Bool)

(declare-fun c!19313 () Bool)

(assert (=> d!30671 (= c!19313 (and ((_ is Cons!1600) lt!55528) (= (_1!1199 (h!2198 lt!55528)) (_1!1199 (tuple2!2377 lt!55312 lt!55307)))))))

(assert (=> d!30671 (= (getValueByKey!158 lt!55528 (_1!1199 (tuple2!2377 lt!55312 lt!55307))) e!71079)))

(declare-fun b!109280 () Bool)

(assert (=> b!109280 (= e!71079 e!71080)))

(declare-fun c!19314 () Bool)

(assert (=> b!109280 (= c!19314 (and ((_ is Cons!1600) lt!55528) (not (= (_1!1199 (h!2198 lt!55528)) (_1!1199 (tuple2!2377 lt!55312 lt!55307))))))))

(assert (= (and d!30671 c!19313) b!109279))

(assert (= (and d!30671 (not c!19313)) b!109280))

(assert (= (and b!109280 c!19314) b!109281))

(assert (= (and b!109280 (not c!19314)) b!109282))

(declare-fun m!123653 () Bool)

(assert (=> b!109281 m!123653))

(assert (=> d!29943 d!30671))

(declare-fun d!30673 () Bool)

(assert (=> d!30673 (= (getValueByKey!158 lt!55528 (_1!1199 (tuple2!2377 lt!55312 lt!55307))) (Some!163 (_2!1199 (tuple2!2377 lt!55312 lt!55307))))))

(declare-fun lt!56196 () Unit!3301)

(assert (=> d!30673 (= lt!56196 (choose!677 lt!55528 (_1!1199 (tuple2!2377 lt!55312 lt!55307)) (_2!1199 (tuple2!2377 lt!55312 lt!55307))))))

(declare-fun e!71081 () Bool)

(assert (=> d!30673 e!71081))

(declare-fun res!54112 () Bool)

(assert (=> d!30673 (=> (not res!54112) (not e!71081))))

(assert (=> d!30673 (= res!54112 (isStrictlySorted!297 lt!55528))))

(assert (=> d!30673 (= (lemmaContainsTupThenGetReturnValue!74 lt!55528 (_1!1199 (tuple2!2377 lt!55312 lt!55307)) (_2!1199 (tuple2!2377 lt!55312 lt!55307))) lt!56196)))

(declare-fun b!109283 () Bool)

(declare-fun res!54113 () Bool)

(assert (=> b!109283 (=> (not res!54113) (not e!71081))))

(assert (=> b!109283 (= res!54113 (containsKey!161 lt!55528 (_1!1199 (tuple2!2377 lt!55312 lt!55307))))))

(declare-fun b!109284 () Bool)

(assert (=> b!109284 (= e!71081 (contains!823 lt!55528 (tuple2!2377 (_1!1199 (tuple2!2377 lt!55312 lt!55307)) (_2!1199 (tuple2!2377 lt!55312 lt!55307)))))))

(assert (= (and d!30673 res!54112) b!109283))

(assert (= (and b!109283 res!54113) b!109284))

(assert (=> d!30673 m!121535))

(declare-fun m!123655 () Bool)

(assert (=> d!30673 m!123655))

(declare-fun m!123657 () Bool)

(assert (=> d!30673 m!123657))

(declare-fun m!123659 () Bool)

(assert (=> b!109283 m!123659))

(declare-fun m!123661 () Bool)

(assert (=> b!109284 m!123661))

(assert (=> d!29943 d!30673))

(declare-fun b!109285 () Bool)

(declare-fun e!71083 () List!1604)

(declare-fun call!11588 () List!1604)

(assert (=> b!109285 (= e!71083 call!11588)))

(declare-fun b!109287 () Bool)

(declare-fun e!71082 () List!1604)

(assert (=> b!109287 (= e!71083 e!71082)))

(declare-fun c!19317 () Bool)

(assert (=> b!109287 (= c!19317 (and ((_ is Cons!1600) (toList!786 lt!55309)) (= (_1!1199 (h!2198 (toList!786 lt!55309))) (_1!1199 (tuple2!2377 lt!55312 lt!55307)))))))

(declare-fun b!109288 () Bool)

(declare-fun call!11586 () List!1604)

(assert (=> b!109288 (= e!71082 call!11586)))

(declare-fun b!109289 () Bool)

(declare-fun e!71086 () List!1604)

(assert (=> b!109289 (= e!71086 (insertStrictlySorted!77 (t!5712 (toList!786 lt!55309)) (_1!1199 (tuple2!2377 lt!55312 lt!55307)) (_2!1199 (tuple2!2377 lt!55312 lt!55307))))))

(declare-fun b!109290 () Bool)

(declare-fun c!19316 () Bool)

(assert (=> b!109290 (= e!71086 (ite c!19317 (t!5712 (toList!786 lt!55309)) (ite c!19316 (Cons!1600 (h!2198 (toList!786 lt!55309)) (t!5712 (toList!786 lt!55309))) Nil!1601)))))

(declare-fun lt!56197 () List!1604)

(declare-fun e!71084 () Bool)

(declare-fun b!109291 () Bool)

(assert (=> b!109291 (= e!71084 (contains!823 lt!56197 (tuple2!2377 (_1!1199 (tuple2!2377 lt!55312 lt!55307)) (_2!1199 (tuple2!2377 lt!55312 lt!55307)))))))

(declare-fun bm!11583 () Bool)

(assert (=> bm!11583 (= call!11586 call!11588)))

(declare-fun b!109292 () Bool)

(assert (=> b!109292 (= c!19316 (and ((_ is Cons!1600) (toList!786 lt!55309)) (bvsgt (_1!1199 (h!2198 (toList!786 lt!55309))) (_1!1199 (tuple2!2377 lt!55312 lt!55307)))))))

(declare-fun e!71085 () List!1604)

(assert (=> b!109292 (= e!71082 e!71085)))

(declare-fun b!109293 () Bool)

(declare-fun call!11587 () List!1604)

(assert (=> b!109293 (= e!71085 call!11587)))

(declare-fun c!19315 () Bool)

(declare-fun bm!11584 () Bool)

(assert (=> bm!11584 (= call!11588 ($colon$colon!81 e!71086 (ite c!19315 (h!2198 (toList!786 lt!55309)) (tuple2!2377 (_1!1199 (tuple2!2377 lt!55312 lt!55307)) (_2!1199 (tuple2!2377 lt!55312 lt!55307))))))))

(declare-fun c!19318 () Bool)

(assert (=> bm!11584 (= c!19318 c!19315)))

(declare-fun b!109286 () Bool)

(declare-fun res!54115 () Bool)

(assert (=> b!109286 (=> (not res!54115) (not e!71084))))

(assert (=> b!109286 (= res!54115 (containsKey!161 lt!56197 (_1!1199 (tuple2!2377 lt!55312 lt!55307))))))

(declare-fun d!30675 () Bool)

(assert (=> d!30675 e!71084))

(declare-fun res!54114 () Bool)

(assert (=> d!30675 (=> (not res!54114) (not e!71084))))

(assert (=> d!30675 (= res!54114 (isStrictlySorted!297 lt!56197))))

(assert (=> d!30675 (= lt!56197 e!71083)))

(assert (=> d!30675 (= c!19315 (and ((_ is Cons!1600) (toList!786 lt!55309)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55309))) (_1!1199 (tuple2!2377 lt!55312 lt!55307)))))))

(assert (=> d!30675 (isStrictlySorted!297 (toList!786 lt!55309))))

(assert (=> d!30675 (= (insertStrictlySorted!77 (toList!786 lt!55309) (_1!1199 (tuple2!2377 lt!55312 lt!55307)) (_2!1199 (tuple2!2377 lt!55312 lt!55307))) lt!56197)))

(declare-fun bm!11585 () Bool)

(assert (=> bm!11585 (= call!11587 call!11586)))

(declare-fun b!109294 () Bool)

(assert (=> b!109294 (= e!71085 call!11587)))

(assert (= (and d!30675 c!19315) b!109285))

(assert (= (and d!30675 (not c!19315)) b!109287))

(assert (= (and b!109287 c!19317) b!109288))

(assert (= (and b!109287 (not c!19317)) b!109292))

(assert (= (and b!109292 c!19316) b!109293))

(assert (= (and b!109292 (not c!19316)) b!109294))

(assert (= (or b!109293 b!109294) bm!11585))

(assert (= (or b!109288 bm!11585) bm!11583))

(assert (= (or b!109285 bm!11583) bm!11584))

(assert (= (and bm!11584 c!19318) b!109289))

(assert (= (and bm!11584 (not c!19318)) b!109290))

(assert (= (and d!30675 res!54114) b!109286))

(assert (= (and b!109286 res!54115) b!109291))

(declare-fun m!123663 () Bool)

(assert (=> d!30675 m!123663))

(declare-fun m!123665 () Bool)

(assert (=> d!30675 m!123665))

(declare-fun m!123667 () Bool)

(assert (=> bm!11584 m!123667))

(declare-fun m!123669 () Bool)

(assert (=> b!109289 m!123669))

(declare-fun m!123671 () Bool)

(assert (=> b!109291 m!123671))

(declare-fun m!123673 () Bool)

(assert (=> b!109286 m!123673))

(assert (=> d!29943 d!30675))

(declare-fun d!30677 () Bool)

(assert (=> d!30677 (isDefined!110 (getValueByKey!158 (toList!786 lt!55291) (_1!1199 lt!55092)))))

(declare-fun lt!56198 () Unit!3301)

(assert (=> d!30677 (= lt!56198 (choose!686 (toList!786 lt!55291) (_1!1199 lt!55092)))))

(declare-fun e!71087 () Bool)

(assert (=> d!30677 e!71087))

(declare-fun res!54116 () Bool)

(assert (=> d!30677 (=> (not res!54116) (not e!71087))))

(assert (=> d!30677 (= res!54116 (isStrictlySorted!297 (toList!786 lt!55291)))))

(assert (=> d!30677 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55291) (_1!1199 lt!55092)) lt!56198)))

(declare-fun b!109295 () Bool)

(assert (=> b!109295 (= e!71087 (containsKey!161 (toList!786 lt!55291) (_1!1199 lt!55092)))))

(assert (= (and d!30677 res!54116) b!109295))

(assert (=> d!30677 m!121021))

(assert (=> d!30677 m!121021))

(assert (=> d!30677 m!121325))

(declare-fun m!123675 () Bool)

(assert (=> d!30677 m!123675))

(declare-fun m!123677 () Bool)

(assert (=> d!30677 m!123677))

(assert (=> b!109295 m!121321))

(assert (=> b!108015 d!30677))

(assert (=> b!108015 d!30613))

(assert (=> b!108015 d!30037))

(declare-fun d!30679 () Bool)

(declare-fun e!71088 () Bool)

(assert (=> d!30679 e!71088))

(declare-fun res!54117 () Bool)

(assert (=> d!30679 (=> res!54117 e!71088)))

(declare-fun lt!56199 () Bool)

(assert (=> d!30679 (= res!54117 (not lt!56199))))

(declare-fun lt!56202 () Bool)

(assert (=> d!30679 (= lt!56199 lt!56202)))

(declare-fun lt!56201 () Unit!3301)

(declare-fun e!71089 () Unit!3301)

(assert (=> d!30679 (= lt!56201 e!71089)))

(declare-fun c!19319 () Bool)

(assert (=> d!30679 (= c!19319 lt!56202)))

(assert (=> d!30679 (= lt!56202 (containsKey!161 (toList!786 lt!55598) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30679 (= (contains!820 lt!55598 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!56199)))

(declare-fun b!109296 () Bool)

(declare-fun lt!56200 () Unit!3301)

(assert (=> b!109296 (= e!71089 lt!56200)))

(assert (=> b!109296 (= lt!56200 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55598) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!109296 (isDefined!110 (getValueByKey!158 (toList!786 lt!55598) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109297 () Bool)

(declare-fun Unit!3371 () Unit!3301)

(assert (=> b!109297 (= e!71089 Unit!3371)))

(declare-fun b!109298 () Bool)

(assert (=> b!109298 (= e!71088 (isDefined!110 (getValueByKey!158 (toList!786 lt!55598) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30679 c!19319) b!109296))

(assert (= (and d!30679 (not c!19319)) b!109297))

(assert (= (and d!30679 (not res!54117)) b!109298))

(declare-fun m!123679 () Bool)

(assert (=> d!30679 m!123679))

(declare-fun m!123681 () Bool)

(assert (=> b!109296 m!123681))

(assert (=> b!109296 m!121741))

(assert (=> b!109296 m!121741))

(declare-fun m!123683 () Bool)

(assert (=> b!109296 m!123683))

(assert (=> b!109298 m!121741))

(assert (=> b!109298 m!121741))

(assert (=> b!109298 m!123683))

(assert (=> d!29995 d!30679))

(declare-fun b!109302 () Bool)

(declare-fun e!71091 () Option!164)

(assert (=> b!109302 (= e!71091 None!162)))

(declare-fun b!109301 () Bool)

(assert (=> b!109301 (= e!71091 (getValueByKey!158 (t!5712 lt!55597) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109299 () Bool)

(declare-fun e!71090 () Option!164)

(assert (=> b!109299 (= e!71090 (Some!163 (_2!1199 (h!2198 lt!55597))))))

(declare-fun d!30681 () Bool)

(declare-fun c!19320 () Bool)

(assert (=> d!30681 (= c!19320 (and ((_ is Cons!1600) lt!55597) (= (_1!1199 (h!2198 lt!55597)) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30681 (= (getValueByKey!158 lt!55597 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!71090)))

(declare-fun b!109300 () Bool)

(assert (=> b!109300 (= e!71090 e!71091)))

(declare-fun c!19321 () Bool)

(assert (=> b!109300 (= c!19321 (and ((_ is Cons!1600) lt!55597) (not (= (_1!1199 (h!2198 lt!55597)) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30681 c!19320) b!109299))

(assert (= (and d!30681 (not c!19320)) b!109300))

(assert (= (and b!109300 c!19321) b!109301))

(assert (= (and b!109300 (not c!19321)) b!109302))

(declare-fun m!123685 () Bool)

(assert (=> b!109301 m!123685))

(assert (=> d!29995 d!30681))

(declare-fun d!30683 () Bool)

(assert (=> d!30683 (= (getValueByKey!158 lt!55597 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!56203 () Unit!3301)

(assert (=> d!30683 (= lt!56203 (choose!677 lt!55597 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!71092 () Bool)

(assert (=> d!30683 e!71092))

(declare-fun res!54118 () Bool)

(assert (=> d!30683 (=> (not res!54118) (not e!71092))))

(assert (=> d!30683 (= res!54118 (isStrictlySorted!297 lt!55597))))

(assert (=> d!30683 (= (lemmaContainsTupThenGetReturnValue!74 lt!55597 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!56203)))

(declare-fun b!109303 () Bool)

(declare-fun res!54119 () Bool)

(assert (=> b!109303 (=> (not res!54119) (not e!71092))))

(assert (=> b!109303 (= res!54119 (containsKey!161 lt!55597 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109304 () Bool)

(assert (=> b!109304 (= e!71092 (contains!823 lt!55597 (tuple2!2377 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30683 res!54118) b!109303))

(assert (= (and b!109303 res!54119) b!109304))

(assert (=> d!30683 m!121735))

(declare-fun m!123687 () Bool)

(assert (=> d!30683 m!123687))

(declare-fun m!123689 () Bool)

(assert (=> d!30683 m!123689))

(declare-fun m!123691 () Bool)

(assert (=> b!109303 m!123691))

(declare-fun m!123693 () Bool)

(assert (=> b!109304 m!123693))

(assert (=> d!29995 d!30683))

(declare-fun b!109305 () Bool)

(declare-fun e!71094 () List!1604)

(declare-fun call!11591 () List!1604)

(assert (=> b!109305 (= e!71094 call!11591)))

(declare-fun b!109307 () Bool)

(declare-fun e!71093 () List!1604)

(assert (=> b!109307 (= e!71094 e!71093)))

(declare-fun c!19324 () Bool)

(assert (=> b!109307 (= c!19324 (and ((_ is Cons!1600) (toList!786 lt!55096)) (= (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!109308 () Bool)

(declare-fun call!11589 () List!1604)

(assert (=> b!109308 (= e!71093 call!11589)))

(declare-fun b!109309 () Bool)

(declare-fun e!71097 () List!1604)

(assert (=> b!109309 (= e!71097 (insertStrictlySorted!77 (t!5712 (toList!786 lt!55096)) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109310 () Bool)

(declare-fun c!19323 () Bool)

(assert (=> b!109310 (= e!71097 (ite c!19324 (t!5712 (toList!786 lt!55096)) (ite c!19323 (Cons!1600 (h!2198 (toList!786 lt!55096)) (t!5712 (toList!786 lt!55096))) Nil!1601)))))

(declare-fun b!109311 () Bool)

(declare-fun e!71095 () Bool)

(declare-fun lt!56204 () List!1604)

(assert (=> b!109311 (= e!71095 (contains!823 lt!56204 (tuple2!2377 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun bm!11586 () Bool)

(assert (=> bm!11586 (= call!11589 call!11591)))

(declare-fun b!109312 () Bool)

(assert (=> b!109312 (= c!19323 (and ((_ is Cons!1600) (toList!786 lt!55096)) (bvsgt (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!71096 () List!1604)

(assert (=> b!109312 (= e!71093 e!71096)))

(declare-fun b!109313 () Bool)

(declare-fun call!11590 () List!1604)

(assert (=> b!109313 (= e!71096 call!11590)))

(declare-fun c!19322 () Bool)

(declare-fun bm!11587 () Bool)

(assert (=> bm!11587 (= call!11591 ($colon$colon!81 e!71097 (ite c!19322 (h!2198 (toList!786 lt!55096)) (tuple2!2377 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19325 () Bool)

(assert (=> bm!11587 (= c!19325 c!19322)))

(declare-fun b!109306 () Bool)

(declare-fun res!54121 () Bool)

(assert (=> b!109306 (=> (not res!54121) (not e!71095))))

(assert (=> b!109306 (= res!54121 (containsKey!161 lt!56204 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun d!30685 () Bool)

(assert (=> d!30685 e!71095))

(declare-fun res!54120 () Bool)

(assert (=> d!30685 (=> (not res!54120) (not e!71095))))

(assert (=> d!30685 (= res!54120 (isStrictlySorted!297 lt!56204))))

(assert (=> d!30685 (= lt!56204 e!71094)))

(assert (=> d!30685 (= c!19322 (and ((_ is Cons!1600) (toList!786 lt!55096)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55096))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30685 (isStrictlySorted!297 (toList!786 lt!55096))))

(assert (=> d!30685 (= (insertStrictlySorted!77 (toList!786 lt!55096) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!56204)))

(declare-fun bm!11588 () Bool)

(assert (=> bm!11588 (= call!11590 call!11589)))

(declare-fun b!109314 () Bool)

(assert (=> b!109314 (= e!71096 call!11590)))

(assert (= (and d!30685 c!19322) b!109305))

(assert (= (and d!30685 (not c!19322)) b!109307))

(assert (= (and b!109307 c!19324) b!109308))

(assert (= (and b!109307 (not c!19324)) b!109312))

(assert (= (and b!109312 c!19323) b!109313))

(assert (= (and b!109312 (not c!19323)) b!109314))

(assert (= (or b!109313 b!109314) bm!11588))

(assert (= (or b!109308 bm!11588) bm!11586))

(assert (= (or b!109305 bm!11586) bm!11587))

(assert (= (and bm!11587 c!19325) b!109309))

(assert (= (and bm!11587 (not c!19325)) b!109310))

(assert (= (and d!30685 res!54120) b!109306))

(assert (= (and b!109306 res!54121) b!109311))

(declare-fun m!123695 () Bool)

(assert (=> d!30685 m!123695))

(assert (=> d!30685 m!121339))

(declare-fun m!123697 () Bool)

(assert (=> bm!11587 m!123697))

(declare-fun m!123699 () Bool)

(assert (=> b!109309 m!123699))

(declare-fun m!123701 () Bool)

(assert (=> b!109311 m!123701))

(declare-fun m!123703 () Bool)

(assert (=> b!109306 m!123703))

(assert (=> d!29995 d!30685))

(declare-fun d!30687 () Bool)

(assert (=> d!30687 (= (inRange!0 (ite c!19026 (index!3166 lt!55682) (ite c!19025 (index!3165 lt!55686) (index!3168 lt!55686))) (mask!6763 newMap!16)) (and (bvsge (ite c!19026 (index!3166 lt!55682) (ite c!19025 (index!3165 lt!55686) (index!3168 lt!55686))) #b00000000000000000000000000000000) (bvslt (ite c!19026 (index!3166 lt!55682) (ite c!19025 (index!3165 lt!55686) (index!3168 lt!55686))) (bvadd (mask!6763 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11478 d!30687))

(declare-fun d!30689 () Bool)

(assert (=> d!30689 (= (isEmpty!379 lt!55570) (isEmpty!381 (toList!786 lt!55570)))))

(declare-fun bs!4513 () Bool)

(assert (= bs!4513 d!30689))

(declare-fun m!123705 () Bool)

(assert (=> bs!4513 m!123705))

(assert (=> b!108204 d!30689))

(declare-fun d!30691 () Bool)

(declare-fun res!54122 () Bool)

(declare-fun e!71098 () Bool)

(assert (=> d!30691 (=> res!54122 e!71098)))

(assert (=> d!30691 (= res!54122 (and ((_ is Cons!1600) lt!55323) (= (_1!1199 (h!2198 lt!55323)) (_1!1199 lt!55093))))))

(assert (=> d!30691 (= (containsKey!161 lt!55323 (_1!1199 lt!55093)) e!71098)))

(declare-fun b!109315 () Bool)

(declare-fun e!71099 () Bool)

(assert (=> b!109315 (= e!71098 e!71099)))

(declare-fun res!54123 () Bool)

(assert (=> b!109315 (=> (not res!54123) (not e!71099))))

(assert (=> b!109315 (= res!54123 (and (or (not ((_ is Cons!1600) lt!55323)) (bvsle (_1!1199 (h!2198 lt!55323)) (_1!1199 lt!55093))) ((_ is Cons!1600) lt!55323) (bvslt (_1!1199 (h!2198 lt!55323)) (_1!1199 lt!55093))))))

(declare-fun b!109316 () Bool)

(assert (=> b!109316 (= e!71099 (containsKey!161 (t!5712 lt!55323) (_1!1199 lt!55093)))))

(assert (= (and d!30691 (not res!54122)) b!109315))

(assert (= (and b!109315 res!54123) b!109316))

(declare-fun m!123707 () Bool)

(assert (=> b!109316 m!123707))

(assert (=> b!107958 d!30691))

(declare-fun d!30693 () Bool)

(declare-fun e!71100 () Bool)

(assert (=> d!30693 e!71100))

(declare-fun res!54124 () Bool)

(assert (=> d!30693 (=> res!54124 e!71100)))

(declare-fun lt!56205 () Bool)

(assert (=> d!30693 (= res!54124 (not lt!56205))))

(declare-fun lt!56208 () Bool)

(assert (=> d!30693 (= lt!56205 lt!56208)))

(declare-fun lt!56207 () Unit!3301)

(declare-fun e!71101 () Unit!3301)

(assert (=> d!30693 (= lt!56207 e!71101)))

(declare-fun c!19326 () Bool)

(assert (=> d!30693 (= c!19326 lt!56208)))

(assert (=> d!30693 (= lt!56208 (containsKey!161 (toList!786 lt!55517) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30693 (= (contains!820 lt!55517 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!56205)))

(declare-fun b!109317 () Bool)

(declare-fun lt!56206 () Unit!3301)

(assert (=> b!109317 (= e!71101 lt!56206)))

(assert (=> b!109317 (= lt!56206 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55517) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!109317 (isDefined!110 (getValueByKey!158 (toList!786 lt!55517) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109318 () Bool)

(declare-fun Unit!3372 () Unit!3301)

(assert (=> b!109318 (= e!71101 Unit!3372)))

(declare-fun b!109319 () Bool)

(assert (=> b!109319 (= e!71100 (isDefined!110 (getValueByKey!158 (toList!786 lt!55517) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30693 c!19326) b!109317))

(assert (= (and d!30693 (not c!19326)) b!109318))

(assert (= (and d!30693 (not res!54124)) b!109319))

(declare-fun m!123709 () Bool)

(assert (=> d!30693 m!123709))

(declare-fun m!123711 () Bool)

(assert (=> b!109317 m!123711))

(assert (=> b!109317 m!121501))

(assert (=> b!109317 m!121501))

(declare-fun m!123713 () Bool)

(assert (=> b!109317 m!123713))

(assert (=> b!109319 m!121501))

(assert (=> b!109319 m!121501))

(assert (=> b!109319 m!123713))

(assert (=> d!29931 d!30693))

(declare-fun b!109323 () Bool)

(declare-fun e!71103 () Option!164)

(assert (=> b!109323 (= e!71103 None!162)))

(declare-fun b!109322 () Bool)

(assert (=> b!109322 (= e!71103 (getValueByKey!158 (t!5712 lt!55516) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109320 () Bool)

(declare-fun e!71102 () Option!164)

(assert (=> b!109320 (= e!71102 (Some!163 (_2!1199 (h!2198 lt!55516))))))

(declare-fun d!30695 () Bool)

(declare-fun c!19327 () Bool)

(assert (=> d!30695 (= c!19327 (and ((_ is Cons!1600) lt!55516) (= (_1!1199 (h!2198 lt!55516)) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30695 (= (getValueByKey!158 lt!55516 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!71102)))

(declare-fun b!109321 () Bool)

(assert (=> b!109321 (= e!71102 e!71103)))

(declare-fun c!19328 () Bool)

(assert (=> b!109321 (= c!19328 (and ((_ is Cons!1600) lt!55516) (not (= (_1!1199 (h!2198 lt!55516)) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30695 c!19327) b!109320))

(assert (= (and d!30695 (not c!19327)) b!109321))

(assert (= (and b!109321 c!19328) b!109322))

(assert (= (and b!109321 (not c!19328)) b!109323))

(declare-fun m!123715 () Bool)

(assert (=> b!109322 m!123715))

(assert (=> d!29931 d!30695))

(declare-fun d!30697 () Bool)

(assert (=> d!30697 (= (getValueByKey!158 lt!55516 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) (Some!163 (_2!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!56209 () Unit!3301)

(assert (=> d!30697 (= lt!56209 (choose!677 lt!55516 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!71104 () Bool)

(assert (=> d!30697 e!71104))

(declare-fun res!54125 () Bool)

(assert (=> d!30697 (=> (not res!54125) (not e!71104))))

(assert (=> d!30697 (= res!54125 (isStrictlySorted!297 lt!55516))))

(assert (=> d!30697 (= (lemmaContainsTupThenGetReturnValue!74 lt!55516 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!56209)))

(declare-fun b!109324 () Bool)

(declare-fun res!54126 () Bool)

(assert (=> b!109324 (=> (not res!54126) (not e!71104))))

(assert (=> b!109324 (= res!54126 (containsKey!161 lt!55516 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109325 () Bool)

(assert (=> b!109325 (= e!71104 (contains!823 lt!55516 (tuple2!2377 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30697 res!54125) b!109324))

(assert (= (and b!109324 res!54126) b!109325))

(assert (=> d!30697 m!121495))

(declare-fun m!123717 () Bool)

(assert (=> d!30697 m!123717))

(declare-fun m!123719 () Bool)

(assert (=> d!30697 m!123719))

(declare-fun m!123721 () Bool)

(assert (=> b!109324 m!123721))

(declare-fun m!123723 () Bool)

(assert (=> b!109325 m!123723))

(assert (=> d!29931 d!30697))

(declare-fun b!109326 () Bool)

(declare-fun e!71106 () List!1604)

(declare-fun call!11594 () List!1604)

(assert (=> b!109326 (= e!71106 call!11594)))

(declare-fun b!109328 () Bool)

(declare-fun e!71105 () List!1604)

(assert (=> b!109328 (= e!71106 e!71105)))

(declare-fun c!19331 () Bool)

(assert (=> b!109328 (= c!19331 (and ((_ is Cons!1600) (toList!786 lt!55375)) (= (_1!1199 (h!2198 (toList!786 lt!55375))) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!109329 () Bool)

(declare-fun call!11592 () List!1604)

(assert (=> b!109329 (= e!71105 call!11592)))

(declare-fun e!71109 () List!1604)

(declare-fun b!109330 () Bool)

(assert (=> b!109330 (= e!71109 (insertStrictlySorted!77 (t!5712 (toList!786 lt!55375)) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun c!19330 () Bool)

(declare-fun b!109331 () Bool)

(assert (=> b!109331 (= e!71109 (ite c!19331 (t!5712 (toList!786 lt!55375)) (ite c!19330 (Cons!1600 (h!2198 (toList!786 lt!55375)) (t!5712 (toList!786 lt!55375))) Nil!1601)))))

(declare-fun b!109332 () Bool)

(declare-fun e!71107 () Bool)

(declare-fun lt!56210 () List!1604)

(assert (=> b!109332 (= e!71107 (contains!823 lt!56210 (tuple2!2377 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun bm!11589 () Bool)

(assert (=> bm!11589 (= call!11592 call!11594)))

(declare-fun b!109333 () Bool)

(assert (=> b!109333 (= c!19330 (and ((_ is Cons!1600) (toList!786 lt!55375)) (bvsgt (_1!1199 (h!2198 (toList!786 lt!55375))) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!71108 () List!1604)

(assert (=> b!109333 (= e!71105 e!71108)))

(declare-fun b!109334 () Bool)

(declare-fun call!11593 () List!1604)

(assert (=> b!109334 (= e!71108 call!11593)))

(declare-fun bm!11590 () Bool)

(declare-fun c!19329 () Bool)

(assert (=> bm!11590 (= call!11594 ($colon$colon!81 e!71109 (ite c!19329 (h!2198 (toList!786 lt!55375)) (tuple2!2377 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19332 () Bool)

(assert (=> bm!11590 (= c!19332 c!19329)))

(declare-fun b!109327 () Bool)

(declare-fun res!54128 () Bool)

(assert (=> b!109327 (=> (not res!54128) (not e!71107))))

(assert (=> b!109327 (= res!54128 (containsKey!161 lt!56210 (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun d!30699 () Bool)

(assert (=> d!30699 e!71107))

(declare-fun res!54127 () Bool)

(assert (=> d!30699 (=> (not res!54127) (not e!71107))))

(assert (=> d!30699 (= res!54127 (isStrictlySorted!297 lt!56210))))

(assert (=> d!30699 (= lt!56210 e!71106)))

(assert (=> d!30699 (= c!19329 (and ((_ is Cons!1600) (toList!786 lt!55375)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55375))) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30699 (isStrictlySorted!297 (toList!786 lt!55375))))

(assert (=> d!30699 (= (insertStrictlySorted!77 (toList!786 lt!55375) (_1!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) (_2!1199 (tuple2!2377 lt!55379 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!56210)))

(declare-fun bm!11591 () Bool)

(assert (=> bm!11591 (= call!11593 call!11592)))

(declare-fun b!109335 () Bool)

(assert (=> b!109335 (= e!71108 call!11593)))

(assert (= (and d!30699 c!19329) b!109326))

(assert (= (and d!30699 (not c!19329)) b!109328))

(assert (= (and b!109328 c!19331) b!109329))

(assert (= (and b!109328 (not c!19331)) b!109333))

(assert (= (and b!109333 c!19330) b!109334))

(assert (= (and b!109333 (not c!19330)) b!109335))

(assert (= (or b!109334 b!109335) bm!11591))

(assert (= (or b!109329 bm!11591) bm!11589))

(assert (= (or b!109326 bm!11589) bm!11590))

(assert (= (and bm!11590 c!19332) b!109330))

(assert (= (and bm!11590 (not c!19332)) b!109331))

(assert (= (and d!30699 res!54127) b!109327))

(assert (= (and b!109327 res!54128) b!109332))

(declare-fun m!123725 () Bool)

(assert (=> d!30699 m!123725))

(declare-fun m!123727 () Bool)

(assert (=> d!30699 m!123727))

(declare-fun m!123729 () Bool)

(assert (=> bm!11590 m!123729))

(declare-fun m!123731 () Bool)

(assert (=> b!109330 m!123731))

(declare-fun m!123733 () Bool)

(assert (=> b!109332 m!123733))

(declare-fun m!123735 () Bool)

(assert (=> b!109327 m!123735))

(assert (=> d!29931 d!30699))

(declare-fun d!30701 () Bool)

(declare-fun lt!56211 () Bool)

(assert (=> d!30701 (= lt!56211 (select (content!112 (t!5712 (toList!786 lt!55291))) lt!55092))))

(declare-fun e!71110 () Bool)

(assert (=> d!30701 (= lt!56211 e!71110)))

(declare-fun res!54130 () Bool)

(assert (=> d!30701 (=> (not res!54130) (not e!71110))))

(assert (=> d!30701 (= res!54130 ((_ is Cons!1600) (t!5712 (toList!786 lt!55291))))))

(assert (=> d!30701 (= (contains!823 (t!5712 (toList!786 lt!55291)) lt!55092) lt!56211)))

(declare-fun b!109336 () Bool)

(declare-fun e!71111 () Bool)

(assert (=> b!109336 (= e!71110 e!71111)))

(declare-fun res!54129 () Bool)

(assert (=> b!109336 (=> res!54129 e!71111)))

(assert (=> b!109336 (= res!54129 (= (h!2198 (t!5712 (toList!786 lt!55291))) lt!55092))))

(declare-fun b!109337 () Bool)

(assert (=> b!109337 (= e!71111 (contains!823 (t!5712 (t!5712 (toList!786 lt!55291))) lt!55092))))

(assert (= (and d!30701 res!54130) b!109336))

(assert (= (and b!109336 (not res!54129)) b!109337))

(assert (=> d!30701 m!123475))

(declare-fun m!123737 () Bool)

(assert (=> d!30701 m!123737))

(declare-fun m!123739 () Bool)

(assert (=> b!109337 m!123739))

(assert (=> b!108122 d!30701))

(declare-fun d!30703 () Bool)

(declare-fun lt!56212 () Bool)

(assert (=> d!30703 (= lt!56212 (select (content!112 (toList!786 lt!55529)) (tuple2!2377 lt!55312 lt!55307)))))

(declare-fun e!71112 () Bool)

(assert (=> d!30703 (= lt!56212 e!71112)))

(declare-fun res!54132 () Bool)

(assert (=> d!30703 (=> (not res!54132) (not e!71112))))

(assert (=> d!30703 (= res!54132 ((_ is Cons!1600) (toList!786 lt!55529)))))

(assert (=> d!30703 (= (contains!823 (toList!786 lt!55529) (tuple2!2377 lt!55312 lt!55307)) lt!56212)))

(declare-fun b!109338 () Bool)

(declare-fun e!71113 () Bool)

(assert (=> b!109338 (= e!71112 e!71113)))

(declare-fun res!54131 () Bool)

(assert (=> b!109338 (=> res!54131 e!71113)))

(assert (=> b!109338 (= res!54131 (= (h!2198 (toList!786 lt!55529)) (tuple2!2377 lt!55312 lt!55307)))))

(declare-fun b!109339 () Bool)

(assert (=> b!109339 (= e!71113 (contains!823 (t!5712 (toList!786 lt!55529)) (tuple2!2377 lt!55312 lt!55307)))))

(assert (= (and d!30703 res!54132) b!109338))

(assert (= (and b!109338 (not res!54131)) b!109339))

(declare-fun m!123741 () Bool)

(assert (=> d!30703 m!123741))

(declare-fun m!123743 () Bool)

(assert (=> d!30703 m!123743))

(declare-fun m!123745 () Bool)

(assert (=> b!109339 m!123745))

(assert (=> b!108117 d!30703))

(declare-fun d!30705 () Bool)

(declare-fun lt!56213 () Bool)

(assert (=> d!30705 (= lt!56213 (select (content!112 (toList!786 lt!55598)) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!71114 () Bool)

(assert (=> d!30705 (= lt!56213 e!71114)))

(declare-fun res!54134 () Bool)

(assert (=> d!30705 (=> (not res!54134) (not e!71114))))

(assert (=> d!30705 (= res!54134 ((_ is Cons!1600) (toList!786 lt!55598)))))

(assert (=> d!30705 (= (contains!823 (toList!786 lt!55598) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!56213)))

(declare-fun b!109340 () Bool)

(declare-fun e!71115 () Bool)

(assert (=> b!109340 (= e!71114 e!71115)))

(declare-fun res!54133 () Bool)

(assert (=> b!109340 (=> res!54133 e!71115)))

(assert (=> b!109340 (= res!54133 (= (h!2198 (toList!786 lt!55598)) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!109341 () Bool)

(assert (=> b!109341 (= e!71115 (contains!823 (t!5712 (toList!786 lt!55598)) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30705 res!54134) b!109340))

(assert (= (and b!109340 (not res!54133)) b!109341))

(declare-fun m!123747 () Bool)

(assert (=> d!30705 m!123747))

(declare-fun m!123749 () Bool)

(assert (=> d!30705 m!123749))

(declare-fun m!123751 () Bool)

(assert (=> b!109341 m!123751))

(assert (=> b!108233 d!30705))

(declare-fun d!30707 () Bool)

(assert (=> d!30707 (= (apply!99 lt!55557 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!786 lt!55557) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4514 () Bool)

(assert (= bs!4514 d!30707))

(assert (=> bs!4514 m!123501))

(assert (=> bs!4514 m!123501))

(declare-fun m!123753 () Bool)

(assert (=> bs!4514 m!123753))

(assert (=> b!108162 d!30707))

(declare-fun d!30709 () Bool)

(declare-fun res!54135 () Bool)

(declare-fun e!71116 () Bool)

(assert (=> d!30709 (=> res!54135 e!71116)))

(assert (=> d!30709 (= res!54135 (and ((_ is Cons!1600) lt!55569) (= (_1!1199 (h!2198 lt!55569)) (_1!1199 lt!55093))))))

(assert (=> d!30709 (= (containsKey!161 lt!55569 (_1!1199 lt!55093)) e!71116)))

(declare-fun b!109342 () Bool)

(declare-fun e!71117 () Bool)

(assert (=> b!109342 (= e!71116 e!71117)))

(declare-fun res!54136 () Bool)

(assert (=> b!109342 (=> (not res!54136) (not e!71117))))

(assert (=> b!109342 (= res!54136 (and (or (not ((_ is Cons!1600) lt!55569)) (bvsle (_1!1199 (h!2198 lt!55569)) (_1!1199 lt!55093))) ((_ is Cons!1600) lt!55569) (bvslt (_1!1199 (h!2198 lt!55569)) (_1!1199 lt!55093))))))

(declare-fun b!109343 () Bool)

(assert (=> b!109343 (= e!71117 (containsKey!161 (t!5712 lt!55569) (_1!1199 lt!55093)))))

(assert (= (and d!30709 (not res!54135)) b!109342))

(assert (= (and b!109342 res!54136) b!109343))

(declare-fun m!123755 () Bool)

(assert (=> b!109343 m!123755))

(assert (=> b!108184 d!30709))

(declare-fun d!30711 () Bool)

(assert (=> d!30711 (= (get!1350 (getValueByKey!158 (toList!786 lt!55369) lt!55372)) (v!2920 (getValueByKey!158 (toList!786 lt!55369) lt!55372)))))

(assert (=> d!29927 d!30711))

(declare-fun b!109347 () Bool)

(declare-fun e!71119 () Option!164)

(assert (=> b!109347 (= e!71119 None!162)))

(declare-fun b!109346 () Bool)

(assert (=> b!109346 (= e!71119 (getValueByKey!158 (t!5712 (toList!786 lt!55369)) lt!55372))))

(declare-fun b!109344 () Bool)

(declare-fun e!71118 () Option!164)

(assert (=> b!109344 (= e!71118 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55369)))))))

(declare-fun d!30713 () Bool)

(declare-fun c!19333 () Bool)

(assert (=> d!30713 (= c!19333 (and ((_ is Cons!1600) (toList!786 lt!55369)) (= (_1!1199 (h!2198 (toList!786 lt!55369))) lt!55372)))))

(assert (=> d!30713 (= (getValueByKey!158 (toList!786 lt!55369) lt!55372) e!71118)))

(declare-fun b!109345 () Bool)

(assert (=> b!109345 (= e!71118 e!71119)))

(declare-fun c!19334 () Bool)

(assert (=> b!109345 (= c!19334 (and ((_ is Cons!1600) (toList!786 lt!55369)) (not (= (_1!1199 (h!2198 (toList!786 lt!55369))) lt!55372))))))

(assert (= (and d!30713 c!19333) b!109344))

(assert (= (and d!30713 (not c!19333)) b!109345))

(assert (= (and b!109345 c!19334) b!109346))

(assert (= (and b!109345 (not c!19334)) b!109347))

(declare-fun m!123757 () Bool)

(assert (=> b!109346 m!123757))

(assert (=> d!29927 d!30713))

(declare-fun d!30715 () Bool)

(declare-fun e!71120 () Bool)

(assert (=> d!30715 e!71120))

(declare-fun res!54137 () Bool)

(assert (=> d!30715 (=> res!54137 e!71120)))

(declare-fun lt!56214 () Bool)

(assert (=> d!30715 (= res!54137 (not lt!56214))))

(declare-fun lt!56217 () Bool)

(assert (=> d!30715 (= lt!56214 lt!56217)))

(declare-fun lt!56216 () Unit!3301)

(declare-fun e!71121 () Unit!3301)

(assert (=> d!30715 (= lt!56216 e!71121)))

(declare-fun c!19335 () Bool)

(assert (=> d!30715 (= c!19335 lt!56217)))

(assert (=> d!30715 (= lt!56217 (containsKey!161 (toList!786 lt!55720) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30715 (= (contains!820 lt!55720 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56214)))

(declare-fun b!109348 () Bool)

(declare-fun lt!56215 () Unit!3301)

(assert (=> b!109348 (= e!71121 lt!56215)))

(assert (=> b!109348 (= lt!56215 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55720) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109348 (isDefined!110 (getValueByKey!158 (toList!786 lt!55720) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109349 () Bool)

(declare-fun Unit!3373 () Unit!3301)

(assert (=> b!109349 (= e!71121 Unit!3373)))

(declare-fun b!109350 () Bool)

(assert (=> b!109350 (= e!71120 (isDefined!110 (getValueByKey!158 (toList!786 lt!55720) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30715 c!19335) b!109348))

(assert (= (and d!30715 (not c!19335)) b!109349))

(assert (= (and d!30715 (not res!54137)) b!109350))

(declare-fun m!123759 () Bool)

(assert (=> d!30715 m!123759))

(declare-fun m!123761 () Bool)

(assert (=> b!109348 m!123761))

(declare-fun m!123763 () Bool)

(assert (=> b!109348 m!123763))

(assert (=> b!109348 m!123763))

(declare-fun m!123765 () Bool)

(assert (=> b!109348 m!123765))

(assert (=> b!109350 m!123763))

(assert (=> b!109350 m!123763))

(assert (=> b!109350 m!123765))

(assert (=> bm!11483 d!30715))

(declare-fun d!30717 () Bool)

(assert (=> d!30717 (= (isEmpty!380 (getValueByKey!158 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355))) (not ((_ is Some!163) (getValueByKey!158 (toList!786 lt!55099) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(assert (=> d!29955 d!30717))

(assert (=> b!108120 d!30137))

(assert (=> b!108120 d!30139))

(declare-fun d!30719 () Bool)

(declare-fun e!71122 () Bool)

(assert (=> d!30719 e!71122))

(declare-fun res!54138 () Bool)

(assert (=> d!30719 (=> res!54138 e!71122)))

(declare-fun lt!56218 () Bool)

(assert (=> d!30719 (= res!54138 (not lt!56218))))

(declare-fun lt!56221 () Bool)

(assert (=> d!30719 (= lt!56218 lt!56221)))

(declare-fun lt!56220 () Unit!3301)

(declare-fun e!71123 () Unit!3301)

(assert (=> d!30719 (= lt!56220 e!71123)))

(declare-fun c!19336 () Bool)

(assert (=> d!30719 (= c!19336 lt!56221)))

(assert (=> d!30719 (= lt!56221 (containsKey!161 (toList!786 lt!55410) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30719 (= (contains!820 lt!55410 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) lt!56218)))

(declare-fun b!109351 () Bool)

(declare-fun lt!56219 () Unit!3301)

(assert (=> b!109351 (= e!71123 lt!56219)))

(assert (=> b!109351 (= lt!56219 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55410) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109351 (isDefined!110 (getValueByKey!158 (toList!786 lt!55410) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109352 () Bool)

(declare-fun Unit!3374 () Unit!3301)

(assert (=> b!109352 (= e!71123 Unit!3374)))

(declare-fun b!109353 () Bool)

(assert (=> b!109353 (= e!71122 (isDefined!110 (getValueByKey!158 (toList!786 lt!55410) (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!30719 c!19336) b!109351))

(assert (= (and d!30719 (not c!19336)) b!109352))

(assert (= (and d!30719 (not res!54138)) b!109353))

(assert (=> d!30719 m!121169))

(declare-fun m!123767 () Bool)

(assert (=> d!30719 m!123767))

(assert (=> b!109351 m!121169))

(declare-fun m!123769 () Bool)

(assert (=> b!109351 m!123769))

(assert (=> b!109351 m!121169))

(assert (=> b!109351 m!123015))

(assert (=> b!109351 m!123015))

(declare-fun m!123771 () Bool)

(assert (=> b!109351 m!123771))

(assert (=> b!109353 m!121169))

(assert (=> b!109353 m!123015))

(assert (=> b!109353 m!123015))

(assert (=> b!109353 m!123771))

(assert (=> b!107906 d!30719))

(declare-fun d!30721 () Bool)

(declare-fun res!54139 () Bool)

(declare-fun e!71124 () Bool)

(assert (=> d!30721 (=> res!54139 e!71124)))

(assert (=> d!30721 (= res!54139 (and ((_ is Cons!1600) (toList!786 lt!55306)) (= (_1!1199 (h!2198 (toList!786 lt!55306))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30721 (= (containsKey!161 (toList!786 lt!55306) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!71124)))

(declare-fun b!109354 () Bool)

(declare-fun e!71125 () Bool)

(assert (=> b!109354 (= e!71124 e!71125)))

(declare-fun res!54140 () Bool)

(assert (=> b!109354 (=> (not res!54140) (not e!71125))))

(assert (=> b!109354 (= res!54140 (and (or (not ((_ is Cons!1600) (toList!786 lt!55306))) (bvsle (_1!1199 (h!2198 (toList!786 lt!55306))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1600) (toList!786 lt!55306)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55306))) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!109355 () Bool)

(assert (=> b!109355 (= e!71125 (containsKey!161 (t!5712 (toList!786 lt!55306)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30721 (not res!54139)) b!109354))

(assert (= (and b!109354 res!54140) b!109355))

(assert (=> b!109355 m!120923))

(declare-fun m!123773 () Bool)

(assert (=> b!109355 m!123773))

(assert (=> d!29893 d!30721))

(declare-fun d!30723 () Bool)

(assert (=> d!30723 (isDefined!110 (getValueByKey!158 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!56222 () Unit!3301)

(assert (=> d!30723 (= lt!56222 (choose!686 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!71126 () Bool)

(assert (=> d!30723 e!71126))

(declare-fun res!54141 () Bool)

(assert (=> d!30723 (=> (not res!54141) (not e!71126))))

(assert (=> d!30723 (= res!54141 (isStrictlySorted!297 (toList!786 lt!55384)))))

(assert (=> d!30723 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!56222)))

(declare-fun b!109356 () Bool)

(assert (=> b!109356 (= e!71126 (containsKey!161 (toList!786 lt!55384) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30723 res!54141) b!109356))

(assert (=> d!30723 m!120923))

(assert (=> d!30723 m!121701))

(assert (=> d!30723 m!121701))

(assert (=> d!30723 m!121703))

(assert (=> d!30723 m!120923))

(declare-fun m!123775 () Bool)

(assert (=> d!30723 m!123775))

(assert (=> d!30723 m!123433))

(assert (=> b!109356 m!120923))

(assert (=> b!109356 m!121697))

(assert (=> b!108213 d!30723))

(assert (=> b!108213 d!30591))

(assert (=> b!108213 d!30291))

(declare-fun d!30725 () Bool)

(declare-fun res!54142 () Bool)

(declare-fun e!71127 () Bool)

(assert (=> d!30725 (=> res!54142 e!71127)))

(assert (=> d!30725 (= res!54142 (and ((_ is Cons!1600) (toList!786 lt!55291)) (= (_1!1199 (h!2198 (toList!786 lt!55291))) (_1!1199 lt!55092))))))

(assert (=> d!30725 (= (containsKey!161 (toList!786 lt!55291) (_1!1199 lt!55092)) e!71127)))

(declare-fun b!109357 () Bool)

(declare-fun e!71128 () Bool)

(assert (=> b!109357 (= e!71127 e!71128)))

(declare-fun res!54143 () Bool)

(assert (=> b!109357 (=> (not res!54143) (not e!71128))))

(assert (=> b!109357 (= res!54143 (and (or (not ((_ is Cons!1600) (toList!786 lt!55291))) (bvsle (_1!1199 (h!2198 (toList!786 lt!55291))) (_1!1199 lt!55092))) ((_ is Cons!1600) (toList!786 lt!55291)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55291))) (_1!1199 lt!55092))))))

(declare-fun b!109358 () Bool)

(assert (=> b!109358 (= e!71128 (containsKey!161 (t!5712 (toList!786 lt!55291)) (_1!1199 lt!55092)))))

(assert (= (and d!30725 (not res!54142)) b!109357))

(assert (= (and b!109357 res!54143) b!109358))

(declare-fun m!123777 () Bool)

(assert (=> b!109358 m!123777))

(assert (=> d!29877 d!30725))

(declare-fun d!30727 () Bool)

(declare-fun e!71129 () Bool)

(assert (=> d!30727 e!71129))

(declare-fun res!54145 () Bool)

(assert (=> d!30727 (=> (not res!54145) (not e!71129))))

(declare-fun lt!56226 () ListLongMap!1541)

(assert (=> d!30727 (= res!54145 (contains!820 lt!56226 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094))))))

(declare-fun lt!56225 () List!1604)

(assert (=> d!30727 (= lt!56226 (ListLongMap!1542 lt!56225))))

(declare-fun lt!56223 () Unit!3301)

(declare-fun lt!56224 () Unit!3301)

(assert (=> d!30727 (= lt!56223 lt!56224)))

(assert (=> d!30727 (= (getValueByKey!158 lt!56225 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094))) (Some!163 (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094))))))

(assert (=> d!30727 (= lt!56224 (lemmaContainsTupThenGetReturnValue!74 lt!56225 (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094))))))

(assert (=> d!30727 (= lt!56225 (insertStrictlySorted!77 (toList!786 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094))))))

(assert (=> d!30727 (= (+!142 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094)) lt!56226)))

(declare-fun b!109359 () Bool)

(declare-fun res!54144 () Bool)

(assert (=> b!109359 (=> (not res!54144) (not e!71129))))

(assert (=> b!109359 (= res!54144 (= (getValueByKey!158 (toList!786 lt!56226) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094))) (Some!163 (_2!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094)))))))

(declare-fun b!109360 () Bool)

(assert (=> b!109360 (= e!71129 (contains!823 (toList!786 lt!56226) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094)))))

(assert (= (and d!30727 res!54145) b!109359))

(assert (= (and b!109359 res!54144) b!109360))

(declare-fun m!123779 () Bool)

(assert (=> d!30727 m!123779))

(declare-fun m!123781 () Bool)

(assert (=> d!30727 m!123781))

(declare-fun m!123783 () Bool)

(assert (=> d!30727 m!123783))

(declare-fun m!123785 () Bool)

(assert (=> d!30727 m!123785))

(declare-fun m!123787 () Bool)

(assert (=> b!109359 m!123787))

(declare-fun m!123789 () Bool)

(assert (=> b!109360 m!123789))

(assert (=> d!29853 d!30727))

(assert (=> d!29853 d!30009))

(declare-fun bm!11592 () Bool)

(declare-fun call!11600 () ListLongMap!1541)

(declare-fun call!11595 () ListLongMap!1541)

(assert (=> bm!11592 (= call!11600 call!11595)))

(declare-fun b!109361 () Bool)

(declare-fun e!71131 () ListLongMap!1541)

(declare-fun e!71141 () ListLongMap!1541)

(assert (=> b!109361 (= e!71131 e!71141)))

(declare-fun c!19338 () Bool)

(assert (=> b!109361 (= c!19338 (and (not (= (bvand lt!55270 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!55270 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11593 () Bool)

(declare-fun call!11597 () ListLongMap!1541)

(declare-fun call!11601 () ListLongMap!1541)

(assert (=> bm!11593 (= call!11597 call!11601)))

(declare-fun b!109362 () Bool)

(declare-fun e!71132 () Bool)

(declare-fun e!71140 () Bool)

(assert (=> b!109362 (= e!71132 e!71140)))

(declare-fun res!54153 () Bool)

(declare-fun call!11599 () Bool)

(assert (=> b!109362 (= res!54153 call!11599)))

(assert (=> b!109362 (=> (not res!54153) (not e!71140))))

(declare-fun bm!11594 () Bool)

(declare-fun call!11598 () Bool)

(declare-fun lt!56242 () ListLongMap!1541)

(assert (=> bm!11594 (= call!11598 (contains!820 lt!56242 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109363 () Bool)

(declare-fun e!71130 () Bool)

(declare-fun e!71133 () Bool)

(assert (=> b!109363 (= e!71130 e!71133)))

(declare-fun res!54154 () Bool)

(assert (=> b!109363 (=> (not res!54154) (not e!71133))))

(assert (=> b!109363 (= res!54154 (contains!820 lt!56242 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109363 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!109364 () Bool)

(declare-fun res!54150 () Bool)

(declare-fun e!71142 () Bool)

(assert (=> b!109364 (=> (not res!54150) (not e!71142))))

(assert (=> b!109364 (= res!54150 e!71132)))

(declare-fun c!19337 () Bool)

(assert (=> b!109364 (= c!19337 (not (= (bvand lt!55270 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11595 () Bool)

(declare-fun call!11596 () ListLongMap!1541)

(assert (=> bm!11595 (= call!11596 call!11597)))

(declare-fun b!109365 () Bool)

(declare-fun e!71138 () Bool)

(assert (=> b!109365 (= e!71138 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109366 () Bool)

(assert (=> b!109366 (= e!71141 call!11600)))

(declare-fun b!109367 () Bool)

(declare-fun e!71134 () Bool)

(assert (=> b!109367 (= e!71142 e!71134)))

(declare-fun c!19339 () Bool)

(assert (=> b!109367 (= c!19339 (not (= (bvand lt!55270 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11596 () Bool)

(assert (=> bm!11596 (= call!11601 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55270 lt!55094 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!109368 () Bool)

(declare-fun e!71136 () ListLongMap!1541)

(assert (=> b!109368 (= e!71136 call!11600)))

(declare-fun b!109369 () Bool)

(declare-fun e!71135 () Unit!3301)

(declare-fun Unit!3375 () Unit!3301)

(assert (=> b!109369 (= e!71135 Unit!3375)))

(declare-fun b!109370 () Bool)

(declare-fun e!71137 () Bool)

(assert (=> b!109370 (= e!71137 (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109371 () Bool)

(declare-fun res!54152 () Bool)

(assert (=> b!109371 (=> (not res!54152) (not e!71142))))

(assert (=> b!109371 (= res!54152 e!71130)))

(declare-fun res!54147 () Bool)

(assert (=> b!109371 (=> res!54147 e!71130)))

(assert (=> b!109371 (= res!54147 (not e!71138))))

(declare-fun res!54151 () Bool)

(assert (=> b!109371 (=> (not res!54151) (not e!71138))))

(assert (=> b!109371 (= res!54151 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!109372 () Bool)

(declare-fun e!71139 () Bool)

(assert (=> b!109372 (= e!71134 e!71139)))

(declare-fun res!54146 () Bool)

(assert (=> b!109372 (= res!54146 call!11598)))

(assert (=> b!109372 (=> (not res!54146) (not e!71139))))

(declare-fun b!109373 () Bool)

(declare-fun lt!56232 () Unit!3301)

(assert (=> b!109373 (= e!71135 lt!56232)))

(declare-fun lt!56233 () ListLongMap!1541)

(assert (=> b!109373 (= lt!56233 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55270 lt!55094 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56237 () (_ BitVec 64))

(assert (=> b!109373 (= lt!56237 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56235 () (_ BitVec 64))

(assert (=> b!109373 (= lt!56235 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56238 () Unit!3301)

(assert (=> b!109373 (= lt!56238 (addStillContains!75 lt!56233 lt!56237 lt!55094 lt!56235))))

(assert (=> b!109373 (contains!820 (+!142 lt!56233 (tuple2!2377 lt!56237 lt!55094)) lt!56235)))

(declare-fun lt!56245 () Unit!3301)

(assert (=> b!109373 (= lt!56245 lt!56238)))

(declare-fun lt!56231 () ListLongMap!1541)

(assert (=> b!109373 (= lt!56231 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55270 lt!55094 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56236 () (_ BitVec 64))

(assert (=> b!109373 (= lt!56236 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56239 () (_ BitVec 64))

(assert (=> b!109373 (= lt!56239 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56241 () Unit!3301)

(assert (=> b!109373 (= lt!56241 (addApplyDifferent!75 lt!56231 lt!56236 (minValue!2478 newMap!16) lt!56239))))

(assert (=> b!109373 (= (apply!99 (+!142 lt!56231 (tuple2!2377 lt!56236 (minValue!2478 newMap!16))) lt!56239) (apply!99 lt!56231 lt!56239))))

(declare-fun lt!56234 () Unit!3301)

(assert (=> b!109373 (= lt!56234 lt!56241)))

(declare-fun lt!56229 () ListLongMap!1541)

(assert (=> b!109373 (= lt!56229 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55270 lt!55094 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56248 () (_ BitVec 64))

(assert (=> b!109373 (= lt!56248 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56243 () (_ BitVec 64))

(assert (=> b!109373 (= lt!56243 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56247 () Unit!3301)

(assert (=> b!109373 (= lt!56247 (addApplyDifferent!75 lt!56229 lt!56248 lt!55094 lt!56243))))

(assert (=> b!109373 (= (apply!99 (+!142 lt!56229 (tuple2!2377 lt!56248 lt!55094)) lt!56243) (apply!99 lt!56229 lt!56243))))

(declare-fun lt!56240 () Unit!3301)

(assert (=> b!109373 (= lt!56240 lt!56247)))

(declare-fun lt!56227 () ListLongMap!1541)

(assert (=> b!109373 (= lt!56227 (getCurrentListMapNoExtraKeys!109 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55270 lt!55094 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56228 () (_ BitVec 64))

(assert (=> b!109373 (= lt!56228 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56230 () (_ BitVec 64))

(assert (=> b!109373 (= lt!56230 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109373 (= lt!56232 (addApplyDifferent!75 lt!56227 lt!56228 (minValue!2478 newMap!16) lt!56230))))

(assert (=> b!109373 (= (apply!99 (+!142 lt!56227 (tuple2!2377 lt!56228 (minValue!2478 newMap!16))) lt!56230) (apply!99 lt!56227 lt!56230))))

(declare-fun c!19341 () Bool)

(declare-fun bm!11597 () Bool)

(assert (=> bm!11597 (= call!11595 (+!142 (ite c!19341 call!11601 (ite c!19338 call!11597 call!11596)) (ite (or c!19341 c!19338) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun bm!11598 () Bool)

(assert (=> bm!11598 (= call!11599 (contains!820 lt!56242 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109374 () Bool)

(assert (=> b!109374 (= e!71139 (= (apply!99 lt!56242 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!109375 () Bool)

(assert (=> b!109375 (= e!71136 call!11596)))

(declare-fun b!109376 () Bool)

(declare-fun c!19342 () Bool)

(assert (=> b!109376 (= c!19342 (and (not (= (bvand lt!55270 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!55270 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!109376 (= e!71141 e!71136)))

(declare-fun b!109377 () Bool)

(assert (=> b!109377 (= e!71140 (= (apply!99 lt!56242 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55094))))

(declare-fun b!109378 () Bool)

(assert (=> b!109378 (= e!71134 (not call!11598))))

(declare-fun b!109379 () Bool)

(assert (=> b!109379 (= e!71131 (+!142 call!11595 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun b!109380 () Bool)

(assert (=> b!109380 (= e!71133 (= (apply!99 lt!56242 (select (arr!2066 (_keys!4315 newMap!16)) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109380 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 (_values!2588 newMap!16))))))

(assert (=> b!109380 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(declare-fun b!109381 () Bool)

(assert (=> b!109381 (= e!71132 (not call!11599))))

(declare-fun d!30729 () Bool)

(assert (=> d!30729 e!71142))

(declare-fun res!54148 () Bool)

(assert (=> d!30729 (=> (not res!54148) (not e!71142))))

(assert (=> d!30729 (= res!54148 (or (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))))

(declare-fun lt!56244 () ListLongMap!1541)

(assert (=> d!30729 (= lt!56242 lt!56244)))

(declare-fun lt!56246 () Unit!3301)

(assert (=> d!30729 (= lt!56246 e!71135)))

(declare-fun c!19340 () Bool)

(assert (=> d!30729 (= c!19340 e!71137)))

(declare-fun res!54149 () Bool)

(assert (=> d!30729 (=> (not res!54149) (not e!71137))))

(assert (=> d!30729 (= res!54149 (bvslt #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30729 (= lt!56244 e!71131)))

(assert (=> d!30729 (= c!19341 (and (not (= (bvand lt!55270 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!55270 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30729 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30729 (= (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55270 lt!55094 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!56242)))

(assert (= (and d!30729 c!19341) b!109379))

(assert (= (and d!30729 (not c!19341)) b!109361))

(assert (= (and b!109361 c!19338) b!109366))

(assert (= (and b!109361 (not c!19338)) b!109376))

(assert (= (and b!109376 c!19342) b!109368))

(assert (= (and b!109376 (not c!19342)) b!109375))

(assert (= (or b!109368 b!109375) bm!11595))

(assert (= (or b!109366 bm!11595) bm!11593))

(assert (= (or b!109366 b!109368) bm!11592))

(assert (= (or b!109379 bm!11593) bm!11596))

(assert (= (or b!109379 bm!11592) bm!11597))

(assert (= (and d!30729 res!54149) b!109370))

(assert (= (and d!30729 c!19340) b!109373))

(assert (= (and d!30729 (not c!19340)) b!109369))

(assert (= (and d!30729 res!54148) b!109371))

(assert (= (and b!109371 res!54151) b!109365))

(assert (= (and b!109371 (not res!54147)) b!109363))

(assert (= (and b!109363 res!54154) b!109380))

(assert (= (and b!109371 res!54152) b!109364))

(assert (= (and b!109364 c!19337) b!109362))

(assert (= (and b!109364 (not c!19337)) b!109381))

(assert (= (and b!109362 res!54153) b!109377))

(assert (= (or b!109362 b!109381) bm!11598))

(assert (= (and b!109364 res!54150) b!109367))

(assert (= (and b!109367 c!19339) b!109372))

(assert (= (and b!109367 (not c!19339)) b!109378))

(assert (= (and b!109372 res!54146) b!109374))

(assert (= (or b!109372 b!109378) bm!11594))

(declare-fun b_lambda!4879 () Bool)

(assert (=> (not b_lambda!4879) (not b!109380)))

(assert (=> b!109380 t!5726))

(declare-fun b_and!6733 () Bool)

(assert (= b_and!6729 (and (=> t!5726 result!3505) b_and!6733)))

(assert (=> b!109380 t!5728))

(declare-fun b_and!6735 () Bool)

(assert (= b_and!6731 (and (=> t!5728 result!3507) b_and!6735)))

(declare-fun m!123791 () Bool)

(assert (=> b!109377 m!123791))

(declare-fun m!123793 () Bool)

(assert (=> b!109379 m!123793))

(declare-fun m!123795 () Bool)

(assert (=> bm!11594 m!123795))

(assert (=> b!109363 m!121169))

(assert (=> b!109363 m!121169))

(declare-fun m!123797 () Bool)

(assert (=> b!109363 m!123797))

(declare-fun m!123799 () Bool)

(assert (=> bm!11598 m!123799))

(assert (=> b!109365 m!121169))

(assert (=> b!109365 m!121169))

(assert (=> b!109365 m!121175))

(declare-fun m!123801 () Bool)

(assert (=> b!109374 m!123801))

(assert (=> d!30729 m!121179))

(declare-fun m!123803 () Bool)

(assert (=> b!109373 m!123803))

(declare-fun m!123805 () Bool)

(assert (=> b!109373 m!123805))

(declare-fun m!123807 () Bool)

(assert (=> b!109373 m!123807))

(assert (=> b!109373 m!121169))

(declare-fun m!123809 () Bool)

(assert (=> b!109373 m!123809))

(declare-fun m!123811 () Bool)

(assert (=> b!109373 m!123811))

(declare-fun m!123813 () Bool)

(assert (=> b!109373 m!123813))

(declare-fun m!123815 () Bool)

(assert (=> b!109373 m!123815))

(declare-fun m!123817 () Bool)

(assert (=> b!109373 m!123817))

(declare-fun m!123819 () Bool)

(assert (=> b!109373 m!123819))

(declare-fun m!123821 () Bool)

(assert (=> b!109373 m!123821))

(declare-fun m!123823 () Bool)

(assert (=> b!109373 m!123823))

(declare-fun m!123825 () Bool)

(assert (=> b!109373 m!123825))

(declare-fun m!123827 () Bool)

(assert (=> b!109373 m!123827))

(assert (=> b!109373 m!123821))

(declare-fun m!123829 () Bool)

(assert (=> b!109373 m!123829))

(declare-fun m!123831 () Bool)

(assert (=> b!109373 m!123831))

(assert (=> b!109373 m!123825))

(declare-fun m!123833 () Bool)

(assert (=> b!109373 m!123833))

(assert (=> b!109373 m!123829))

(assert (=> b!109373 m!123809))

(declare-fun m!123835 () Bool)

(assert (=> bm!11597 m!123835))

(assert (=> bm!11596 m!123807))

(assert (=> b!109370 m!121169))

(assert (=> b!109370 m!121169))

(assert (=> b!109370 m!121175))

(assert (=> b!109380 m!121891))

(assert (=> b!109380 m!121891))

(assert (=> b!109380 m!121217))

(assert (=> b!109380 m!121893))

(assert (=> b!109380 m!121169))

(declare-fun m!123837 () Bool)

(assert (=> b!109380 m!123837))

(assert (=> b!109380 m!121169))

(assert (=> b!109380 m!121217))

(assert (=> d!29853 d!30729))

(declare-fun d!30731 () Bool)

(assert (=> d!30731 (= (+!142 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55094)) (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) lt!55270 lt!55094 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(assert (=> d!30731 true))

(declare-fun _$7!95 () Unit!3301)

(assert (=> d!30731 (= (choose!676 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) lt!55270 (zeroValue!2478 newMap!16) lt!55094 (minValue!2478 newMap!16) (defaultEntry!2605 newMap!16)) _$7!95)))

(declare-fun bs!4515 () Bool)

(assert (= bs!4515 d!30731))

(assert (=> bs!4515 m!120987))

(assert (=> bs!4515 m!120987))

(assert (=> bs!4515 m!121241))

(assert (=> bs!4515 m!121245))

(assert (=> d!29853 d!30731))

(assert (=> d!29853 d!30057))

(assert (=> b!107998 d!30147))

(assert (=> b!107998 d!30021))

(assert (=> d!29929 d!29905))

(assert (=> d!29929 d!29907))

(declare-fun d!30733 () Bool)

(assert (=> d!30733 (= (apply!99 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!55385) (apply!99 lt!55371 lt!55385))))

(assert (=> d!30733 true))

(declare-fun _$34!900 () Unit!3301)

(assert (=> d!30733 (= (choose!679 lt!55371 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))) lt!55385) _$34!900)))

(declare-fun bs!4516 () Bool)

(assert (= bs!4516 d!30733))

(assert (=> bs!4516 m!121115))

(assert (=> bs!4516 m!121115))

(assert (=> bs!4516 m!121117))

(assert (=> bs!4516 m!121101))

(assert (=> d!29929 d!30733))

(assert (=> d!29929 d!29913))

(declare-fun d!30735 () Bool)

(declare-fun e!71143 () Bool)

(assert (=> d!30735 e!71143))

(declare-fun res!54155 () Bool)

(assert (=> d!30735 (=> res!54155 e!71143)))

(declare-fun lt!56249 () Bool)

(assert (=> d!30735 (= res!54155 (not lt!56249))))

(declare-fun lt!56252 () Bool)

(assert (=> d!30735 (= lt!56249 lt!56252)))

(declare-fun lt!56251 () Unit!3301)

(declare-fun e!71144 () Unit!3301)

(assert (=> d!30735 (= lt!56251 e!71144)))

(declare-fun c!19343 () Bool)

(assert (=> d!30735 (= c!19343 lt!56252)))

(assert (=> d!30735 (= lt!56252 (containsKey!161 (toList!786 lt!55371) lt!55385))))

(assert (=> d!30735 (= (contains!820 lt!55371 lt!55385) lt!56249)))

(declare-fun b!109382 () Bool)

(declare-fun lt!56250 () Unit!3301)

(assert (=> b!109382 (= e!71144 lt!56250)))

(assert (=> b!109382 (= lt!56250 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55371) lt!55385))))

(assert (=> b!109382 (isDefined!110 (getValueByKey!158 (toList!786 lt!55371) lt!55385))))

(declare-fun b!109383 () Bool)

(declare-fun Unit!3376 () Unit!3301)

(assert (=> b!109383 (= e!71144 Unit!3376)))

(declare-fun b!109384 () Bool)

(assert (=> b!109384 (= e!71143 (isDefined!110 (getValueByKey!158 (toList!786 lt!55371) lt!55385)))))

(assert (= (and d!30735 c!19343) b!109382))

(assert (= (and d!30735 (not c!19343)) b!109383))

(assert (= (and d!30735 (not res!54155)) b!109384))

(declare-fun m!123839 () Bool)

(assert (=> d!30735 m!123839))

(declare-fun m!123841 () Bool)

(assert (=> b!109382 m!123841))

(assert (=> b!109382 m!121429))

(assert (=> b!109382 m!121429))

(declare-fun m!123843 () Bool)

(assert (=> b!109382 m!123843))

(assert (=> b!109384 m!121429))

(assert (=> b!109384 m!121429))

(assert (=> b!109384 m!123843))

(assert (=> d!29929 d!30735))

(declare-fun b!109385 () Bool)

(declare-fun e!71146 () List!1604)

(declare-fun call!11604 () List!1604)

(assert (=> b!109385 (= e!71146 call!11604)))

(declare-fun b!109387 () Bool)

(declare-fun e!71145 () List!1604)

(assert (=> b!109387 (= e!71146 e!71145)))

(declare-fun c!19346 () Bool)

(assert (=> b!109387 (= c!19346 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55096))) (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55096)))) (_1!1199 lt!55092))))))

(declare-fun b!109388 () Bool)

(declare-fun call!11602 () List!1604)

(assert (=> b!109388 (= e!71145 call!11602)))

(declare-fun b!109389 () Bool)

(declare-fun e!71149 () List!1604)

(assert (=> b!109389 (= e!71149 (insertStrictlySorted!77 (t!5712 (t!5712 (toList!786 lt!55096))) (_1!1199 lt!55092) (_2!1199 lt!55092)))))

(declare-fun c!19345 () Bool)

(declare-fun b!109390 () Bool)

(assert (=> b!109390 (= e!71149 (ite c!19346 (t!5712 (t!5712 (toList!786 lt!55096))) (ite c!19345 (Cons!1600 (h!2198 (t!5712 (toList!786 lt!55096))) (t!5712 (t!5712 (toList!786 lt!55096)))) Nil!1601)))))

(declare-fun b!109391 () Bool)

(declare-fun e!71147 () Bool)

(declare-fun lt!56253 () List!1604)

(assert (=> b!109391 (= e!71147 (contains!823 lt!56253 (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092))))))

(declare-fun bm!11599 () Bool)

(assert (=> bm!11599 (= call!11602 call!11604)))

(declare-fun b!109392 () Bool)

(assert (=> b!109392 (= c!19345 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55096))) (bvsgt (_1!1199 (h!2198 (t!5712 (toList!786 lt!55096)))) (_1!1199 lt!55092))))))

(declare-fun e!71148 () List!1604)

(assert (=> b!109392 (= e!71145 e!71148)))

(declare-fun b!109393 () Bool)

(declare-fun call!11603 () List!1604)

(assert (=> b!109393 (= e!71148 call!11603)))

(declare-fun c!19344 () Bool)

(declare-fun bm!11600 () Bool)

(assert (=> bm!11600 (= call!11604 ($colon$colon!81 e!71149 (ite c!19344 (h!2198 (t!5712 (toList!786 lt!55096))) (tuple2!2377 (_1!1199 lt!55092) (_2!1199 lt!55092)))))))

(declare-fun c!19347 () Bool)

(assert (=> bm!11600 (= c!19347 c!19344)))

(declare-fun b!109386 () Bool)

(declare-fun res!54157 () Bool)

(assert (=> b!109386 (=> (not res!54157) (not e!71147))))

(assert (=> b!109386 (= res!54157 (containsKey!161 lt!56253 (_1!1199 lt!55092)))))

(declare-fun d!30737 () Bool)

(assert (=> d!30737 e!71147))

(declare-fun res!54156 () Bool)

(assert (=> d!30737 (=> (not res!54156) (not e!71147))))

(assert (=> d!30737 (= res!54156 (isStrictlySorted!297 lt!56253))))

(assert (=> d!30737 (= lt!56253 e!71146)))

(assert (=> d!30737 (= c!19344 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55096))) (bvslt (_1!1199 (h!2198 (t!5712 (toList!786 lt!55096)))) (_1!1199 lt!55092))))))

(assert (=> d!30737 (isStrictlySorted!297 (t!5712 (toList!786 lt!55096)))))

(assert (=> d!30737 (= (insertStrictlySorted!77 (t!5712 (toList!786 lt!55096)) (_1!1199 lt!55092) (_2!1199 lt!55092)) lt!56253)))

(declare-fun bm!11601 () Bool)

(assert (=> bm!11601 (= call!11603 call!11602)))

(declare-fun b!109394 () Bool)

(assert (=> b!109394 (= e!71148 call!11603)))

(assert (= (and d!30737 c!19344) b!109385))

(assert (= (and d!30737 (not c!19344)) b!109387))

(assert (= (and b!109387 c!19346) b!109388))

(assert (= (and b!109387 (not c!19346)) b!109392))

(assert (= (and b!109392 c!19345) b!109393))

(assert (= (and b!109392 (not c!19345)) b!109394))

(assert (= (or b!109393 b!109394) bm!11601))

(assert (= (or b!109388 bm!11601) bm!11599))

(assert (= (or b!109385 bm!11599) bm!11600))

(assert (= (and bm!11600 c!19347) b!109389))

(assert (= (and bm!11600 (not c!19347)) b!109390))

(assert (= (and d!30737 res!54156) b!109386))

(assert (= (and b!109386 res!54157) b!109391))

(declare-fun m!123845 () Bool)

(assert (=> d!30737 m!123845))

(assert (=> d!30737 m!122791))

(declare-fun m!123847 () Bool)

(assert (=> bm!11600 m!123847))

(declare-fun m!123849 () Bool)

(assert (=> b!109389 m!123849))

(declare-fun m!123851 () Bool)

(assert (=> b!109391 m!123851))

(declare-fun m!123853 () Bool)

(assert (=> b!109386 m!123853))

(assert (=> b!108028 d!30737))

(assert (=> b!108195 d!30187))

(declare-fun d!30739 () Bool)

(assert (=> d!30739 (= (get!1349 (select (arr!2067 (_values!2588 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!387 (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108107 d!30739))

(assert (=> bm!11485 d!30371))

(declare-fun d!30741 () Bool)

(declare-fun res!54158 () Bool)

(declare-fun e!71150 () Bool)

(assert (=> d!30741 (=> res!54158 e!71150)))

(assert (=> d!30741 (= res!54158 (and ((_ is Cons!1600) lt!55319) (= (_1!1199 (h!2198 lt!55319)) (_1!1199 lt!55092))))))

(assert (=> d!30741 (= (containsKey!161 lt!55319 (_1!1199 lt!55092)) e!71150)))

(declare-fun b!109395 () Bool)

(declare-fun e!71151 () Bool)

(assert (=> b!109395 (= e!71150 e!71151)))

(declare-fun res!54159 () Bool)

(assert (=> b!109395 (=> (not res!54159) (not e!71151))))

(assert (=> b!109395 (= res!54159 (and (or (not ((_ is Cons!1600) lt!55319)) (bvsle (_1!1199 (h!2198 lt!55319)) (_1!1199 lt!55092))) ((_ is Cons!1600) lt!55319) (bvslt (_1!1199 (h!2198 lt!55319)) (_1!1199 lt!55092))))))

(declare-fun b!109396 () Bool)

(assert (=> b!109396 (= e!71151 (containsKey!161 (t!5712 lt!55319) (_1!1199 lt!55092)))))

(assert (= (and d!30741 (not res!54158)) b!109395))

(assert (= (and b!109395 res!54159) b!109396))

(declare-fun m!123855 () Bool)

(assert (=> b!109396 m!123855))

(assert (=> b!108003 d!30741))

(declare-fun b!109400 () Bool)

(declare-fun e!71153 () Option!164)

(assert (=> b!109400 (= e!71153 None!162)))

(declare-fun b!109399 () Bool)

(assert (=> b!109399 (= e!71153 (getValueByKey!158 (t!5712 (t!5712 (toList!786 lt!55320))) (_1!1199 lt!55092)))))

(declare-fun b!109397 () Bool)

(declare-fun e!71152 () Option!164)

(assert (=> b!109397 (= e!71152 (Some!163 (_2!1199 (h!2198 (t!5712 (toList!786 lt!55320))))))))

(declare-fun d!30743 () Bool)

(declare-fun c!19348 () Bool)

(assert (=> d!30743 (= c!19348 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55320))) (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55320)))) (_1!1199 lt!55092))))))

(assert (=> d!30743 (= (getValueByKey!158 (t!5712 (toList!786 lt!55320)) (_1!1199 lt!55092)) e!71152)))

(declare-fun b!109398 () Bool)

(assert (=> b!109398 (= e!71152 e!71153)))

(declare-fun c!19349 () Bool)

(assert (=> b!109398 (= c!19349 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55320))) (not (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55320)))) (_1!1199 lt!55092)))))))

(assert (= (and d!30743 c!19348) b!109397))

(assert (= (and d!30743 (not c!19348)) b!109398))

(assert (= (and b!109398 c!19349) b!109399))

(assert (= (and b!109398 (not c!19349)) b!109400))

(declare-fun m!123857 () Bool)

(assert (=> b!109399 m!123857))

(assert (=> b!108345 d!30743))

(declare-fun d!30745 () Bool)

(assert (=> d!30745 (arrayContainsKey!0 lt!55687 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!56254 () Unit!3301)

(assert (=> d!30745 (= lt!56254 (choose!13 lt!55687 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264))))))

(assert (=> d!30745 (bvsge (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000000)))

(assert (=> d!30745 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!55687 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264))) lt!56254)))

(declare-fun bs!4517 () Bool)

(assert (= bs!4517 d!30745))

(assert (=> bs!4517 m!120751))

(assert (=> bs!4517 m!121833))

(assert (=> bs!4517 m!120751))

(declare-fun m!123859 () Bool)

(assert (=> bs!4517 m!123859))

(assert (=> d!30007 d!30745))

(assert (=> d!30007 d!30227))

(assert (=> d!30007 d!30009))

(assert (=> d!30007 d!30011))

(assert (=> d!30007 d!30013))

(declare-fun d!30747 () Bool)

(declare-fun e!71156 () Bool)

(assert (=> d!30747 e!71156))

(declare-fun res!54162 () Bool)

(assert (=> d!30747 (=> (not res!54162) (not e!71156))))

(assert (=> d!30747 (= res!54162 (and (bvsge (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000000) (bvslt (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (size!2322 (_keys!4315 newMap!16)))))))

(declare-fun lt!56257 () Unit!3301)

(declare-fun choose!41 (array!4357 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1605) Unit!3301)

(assert (=> d!30747 (= lt!56257 (choose!41 (_keys!4315 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) lt!55703 lt!55680))))

(assert (=> d!30747 (bvslt (size!2322 (_keys!4315 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!30747 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4315 newMap!16) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) lt!55703 lt!55680) lt!56257)))

(declare-fun b!109403 () Bool)

(assert (=> b!109403 (= e!71156 (arrayNoDuplicates!0 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) lt!55703 lt!55680))))

(assert (= (and d!30747 res!54162) b!109403))

(assert (=> d!30747 m!120751))

(declare-fun m!123861 () Bool)

(assert (=> d!30747 m!123861))

(assert (=> b!109403 m!121835))

(assert (=> b!109403 m!121809))

(assert (=> d!30007 d!30747))

(declare-fun bm!11602 () Bool)

(declare-fun call!11605 () (_ BitVec 32))

(assert (=> bm!11602 (= call!11605 (arrayCountValidKeys!0 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2322 (_keys!4315 newMap!16))))))

(declare-fun d!30749 () Bool)

(declare-fun lt!56258 () (_ BitVec 32))

(assert (=> d!30749 (and (bvsge lt!56258 #b00000000000000000000000000000000) (bvsle lt!56258 (bvsub (size!2322 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!71158 () (_ BitVec 32))

(assert (=> d!30749 (= lt!56258 e!71158)))

(declare-fun c!19351 () Bool)

(assert (=> d!30749 (= c!19351 (bvsge #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))))))

(assert (=> d!30749 (and (bvsle #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2322 (_keys!4315 newMap!16)) (size!2322 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))))))))

(assert (=> d!30749 (= (arrayCountValidKeys!0 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) lt!56258)))

(declare-fun b!109404 () Bool)

(assert (=> b!109404 (= e!71158 #b00000000000000000000000000000000)))

(declare-fun b!109405 () Bool)

(declare-fun e!71157 () (_ BitVec 32))

(assert (=> b!109405 (= e!71157 (bvadd #b00000000000000000000000000000001 call!11605))))

(declare-fun b!109406 () Bool)

(assert (=> b!109406 (= e!71158 e!71157)))

(declare-fun c!19350 () Bool)

(assert (=> b!109406 (= c!19350 (validKeyInArray!0 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!109407 () Bool)

(assert (=> b!109407 (= e!71157 call!11605)))

(assert (= (and d!30749 c!19351) b!109404))

(assert (= (and d!30749 (not c!19351)) b!109406))

(assert (= (and b!109406 c!19350) b!109405))

(assert (= (and b!109406 (not c!19350)) b!109407))

(assert (= (or b!109405 b!109407) bm!11602))

(declare-fun m!123863 () Bool)

(assert (=> bm!11602 m!123863))

(declare-fun m!123865 () Bool)

(assert (=> b!109406 m!123865))

(assert (=> b!109406 m!123865))

(declare-fun m!123867 () Bool)

(assert (=> b!109406 m!123867))

(assert (=> d!30007 d!30749))

(declare-fun d!30751 () Bool)

(declare-fun e!71159 () Bool)

(assert (=> d!30751 e!71159))

(declare-fun res!54163 () Bool)

(assert (=> d!30751 (=> res!54163 e!71159)))

(declare-fun lt!56259 () Bool)

(assert (=> d!30751 (= res!54163 (not lt!56259))))

(declare-fun lt!56262 () Bool)

(assert (=> d!30751 (= lt!56259 lt!56262)))

(declare-fun lt!56261 () Unit!3301)

(declare-fun e!71160 () Unit!3301)

(assert (=> d!30751 (= lt!56261 e!71160)))

(declare-fun c!19352 () Bool)

(assert (=> d!30751 (= c!19352 lt!56262)))

(assert (=> d!30751 (= lt!56262 (containsKey!161 (toList!786 (getCurrentListMap!472 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)))))))

(assert (=> d!30751 (= (contains!820 (getCurrentListMap!472 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)))) lt!56259)))

(declare-fun b!109408 () Bool)

(declare-fun lt!56260 () Unit!3301)

(assert (=> b!109408 (= e!71160 lt!56260)))

(assert (=> b!109408 (= lt!56260 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 (getCurrentListMap!472 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)))))))

(assert (=> b!109408 (isDefined!110 (getValueByKey!158 (toList!786 (getCurrentListMap!472 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)))))))

(declare-fun b!109409 () Bool)

(declare-fun Unit!3377 () Unit!3301)

(assert (=> b!109409 (= e!71160 Unit!3377)))

(declare-fun b!109410 () Bool)

(assert (=> b!109410 (= e!71159 (isDefined!110 (getValueByKey!158 (toList!786 (getCurrentListMap!472 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264))))))))

(assert (= (and d!30751 c!19352) b!109408))

(assert (= (and d!30751 (not c!19352)) b!109409))

(assert (= (and d!30751 (not res!54163)) b!109410))

(assert (=> d!30751 m!121839))

(declare-fun m!123869 () Bool)

(assert (=> d!30751 m!123869))

(assert (=> b!109408 m!121839))

(declare-fun m!123871 () Bool)

(assert (=> b!109408 m!123871))

(assert (=> b!109408 m!121839))

(declare-fun m!123873 () Bool)

(assert (=> b!109408 m!123873))

(assert (=> b!109408 m!123873))

(declare-fun m!123875 () Bool)

(assert (=> b!109408 m!123875))

(assert (=> b!109410 m!121839))

(assert (=> b!109410 m!123873))

(assert (=> b!109410 m!123873))

(assert (=> b!109410 m!123875))

(assert (=> d!30007 d!30751))

(declare-fun b!109411 () Bool)

(declare-fun e!71161 () Bool)

(declare-fun call!11606 () Bool)

(assert (=> b!109411 (= e!71161 call!11606)))

(declare-fun b!109412 () Bool)

(declare-fun e!71163 () Bool)

(assert (=> b!109412 (= e!71163 call!11606)))

(declare-fun b!109413 () Bool)

(assert (=> b!109413 (= e!71161 e!71163)))

(declare-fun lt!56265 () (_ BitVec 64))

(assert (=> b!109413 (= lt!56265 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56264 () Unit!3301)

(assert (=> b!109413 (= lt!56264 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) lt!56265 #b00000000000000000000000000000000))))

(assert (=> b!109413 (arrayContainsKey!0 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) lt!56265 #b00000000000000000000000000000000)))

(declare-fun lt!56263 () Unit!3301)

(assert (=> b!109413 (= lt!56263 lt!56264)))

(declare-fun res!54164 () Bool)

(assert (=> b!109413 (= res!54164 (= (seekEntryOrOpen!0 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000) (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (mask!6763 newMap!16)) (Found!254 #b00000000000000000000000000000000)))))

(assert (=> b!109413 (=> (not res!54164) (not e!71163))))

(declare-fun bm!11603 () Bool)

(assert (=> bm!11603 (= call!11606 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (mask!6763 newMap!16)))))

(declare-fun d!30753 () Bool)

(declare-fun res!54165 () Bool)

(declare-fun e!71162 () Bool)

(assert (=> d!30753 (=> res!54165 e!71162)))

(assert (=> d!30753 (= res!54165 (bvsge #b00000000000000000000000000000000 (size!2322 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))))))))

(assert (=> d!30753 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (mask!6763 newMap!16)) e!71162)))

(declare-fun b!109414 () Bool)

(assert (=> b!109414 (= e!71162 e!71161)))

(declare-fun c!19353 () Bool)

(assert (=> b!109414 (= c!19353 (validKeyInArray!0 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!30753 (not res!54165)) b!109414))

(assert (= (and b!109414 c!19353) b!109413))

(assert (= (and b!109414 (not c!19353)) b!109411))

(assert (= (and b!109413 res!54164) b!109412))

(assert (= (or b!109412 b!109411) bm!11603))

(assert (=> b!109413 m!123865))

(declare-fun m!123877 () Bool)

(assert (=> b!109413 m!123877))

(declare-fun m!123879 () Bool)

(assert (=> b!109413 m!123879))

(assert (=> b!109413 m!123865))

(declare-fun m!123881 () Bool)

(assert (=> b!109413 m!123881))

(declare-fun m!123883 () Bool)

(assert (=> bm!11603 m!123883))

(assert (=> b!109414 m!123865))

(assert (=> b!109414 m!123865))

(assert (=> b!109414 m!123867))

(assert (=> d!30007 d!30753))

(declare-fun bm!11604 () Bool)

(declare-fun call!11612 () ListLongMap!1541)

(declare-fun call!11607 () ListLongMap!1541)

(assert (=> bm!11604 (= call!11612 call!11607)))

(declare-fun b!109415 () Bool)

(declare-fun e!71165 () ListLongMap!1541)

(declare-fun e!71175 () ListLongMap!1541)

(assert (=> b!109415 (= e!71165 e!71175)))

(declare-fun c!19355 () Bool)

(assert (=> b!109415 (= c!19355 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11605 () Bool)

(declare-fun call!11609 () ListLongMap!1541)

(declare-fun call!11613 () ListLongMap!1541)

(assert (=> bm!11605 (= call!11609 call!11613)))

(declare-fun b!109416 () Bool)

(declare-fun e!71166 () Bool)

(declare-fun e!71174 () Bool)

(assert (=> b!109416 (= e!71166 e!71174)))

(declare-fun res!54173 () Bool)

(declare-fun call!11611 () Bool)

(assert (=> b!109416 (= res!54173 call!11611)))

(assert (=> b!109416 (=> (not res!54173) (not e!71174))))

(declare-fun bm!11606 () Bool)

(declare-fun call!11610 () Bool)

(declare-fun lt!56281 () ListLongMap!1541)

(assert (=> bm!11606 (= call!11610 (contains!820 lt!56281 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109417 () Bool)

(declare-fun e!71164 () Bool)

(declare-fun e!71167 () Bool)

(assert (=> b!109417 (= e!71164 e!71167)))

(declare-fun res!54174 () Bool)

(assert (=> b!109417 (=> (not res!54174) (not e!71167))))

(assert (=> b!109417 (= res!54174 (contains!820 lt!56281 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!109417 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))))))))

(declare-fun b!109418 () Bool)

(declare-fun res!54170 () Bool)

(declare-fun e!71176 () Bool)

(assert (=> b!109418 (=> (not res!54170) (not e!71176))))

(assert (=> b!109418 (= res!54170 e!71166)))

(declare-fun c!19354 () Bool)

(assert (=> b!109418 (= c!19354 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11607 () Bool)

(declare-fun call!11608 () ListLongMap!1541)

(assert (=> bm!11607 (= call!11608 call!11609)))

(declare-fun b!109419 () Bool)

(declare-fun e!71172 () Bool)

(assert (=> b!109419 (= e!71172 (validKeyInArray!0 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!109420 () Bool)

(assert (=> b!109420 (= e!71175 call!11612)))

(declare-fun b!109421 () Bool)

(declare-fun e!71168 () Bool)

(assert (=> b!109421 (= e!71176 e!71168)))

(declare-fun c!19356 () Bool)

(assert (=> b!109421 (= c!19356 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11608 () Bool)

(assert (=> bm!11608 (= call!11613 (getCurrentListMapNoExtraKeys!109 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!109422 () Bool)

(declare-fun e!71170 () ListLongMap!1541)

(assert (=> b!109422 (= e!71170 call!11612)))

(declare-fun b!109423 () Bool)

(declare-fun e!71169 () Unit!3301)

(declare-fun Unit!3378 () Unit!3301)

(assert (=> b!109423 (= e!71169 Unit!3378)))

(declare-fun b!109424 () Bool)

(declare-fun e!71171 () Bool)

(assert (=> b!109424 (= e!71171 (validKeyInArray!0 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!109425 () Bool)

(declare-fun res!54172 () Bool)

(assert (=> b!109425 (=> (not res!54172) (not e!71176))))

(assert (=> b!109425 (= res!54172 e!71164)))

(declare-fun res!54167 () Bool)

(assert (=> b!109425 (=> res!54167 e!71164)))

(assert (=> b!109425 (= res!54167 (not e!71172))))

(declare-fun res!54171 () Bool)

(assert (=> b!109425 (=> (not res!54171) (not e!71172))))

(assert (=> b!109425 (= res!54171 (bvslt #b00000000000000000000000000000000 (size!2322 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))))))))

(declare-fun b!109426 () Bool)

(declare-fun e!71173 () Bool)

(assert (=> b!109426 (= e!71168 e!71173)))

(declare-fun res!54166 () Bool)

(assert (=> b!109426 (= res!54166 call!11610)))

(assert (=> b!109426 (=> (not res!54166) (not e!71173))))

(declare-fun b!109427 () Bool)

(declare-fun lt!56271 () Unit!3301)

(assert (=> b!109427 (= e!71169 lt!56271)))

(declare-fun lt!56272 () ListLongMap!1541)

(assert (=> b!109427 (= lt!56272 (getCurrentListMapNoExtraKeys!109 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56276 () (_ BitVec 64))

(assert (=> b!109427 (= lt!56276 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56274 () (_ BitVec 64))

(assert (=> b!109427 (= lt!56274 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56277 () Unit!3301)

(assert (=> b!109427 (= lt!56277 (addStillContains!75 lt!56272 lt!56276 (zeroValue!2478 newMap!16) lt!56274))))

(assert (=> b!109427 (contains!820 (+!142 lt!56272 (tuple2!2377 lt!56276 (zeroValue!2478 newMap!16))) lt!56274)))

(declare-fun lt!56284 () Unit!3301)

(assert (=> b!109427 (= lt!56284 lt!56277)))

(declare-fun lt!56270 () ListLongMap!1541)

(assert (=> b!109427 (= lt!56270 (getCurrentListMapNoExtraKeys!109 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56275 () (_ BitVec 64))

(assert (=> b!109427 (= lt!56275 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56278 () (_ BitVec 64))

(assert (=> b!109427 (= lt!56278 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56280 () Unit!3301)

(assert (=> b!109427 (= lt!56280 (addApplyDifferent!75 lt!56270 lt!56275 (minValue!2478 newMap!16) lt!56278))))

(assert (=> b!109427 (= (apply!99 (+!142 lt!56270 (tuple2!2377 lt!56275 (minValue!2478 newMap!16))) lt!56278) (apply!99 lt!56270 lt!56278))))

(declare-fun lt!56273 () Unit!3301)

(assert (=> b!109427 (= lt!56273 lt!56280)))

(declare-fun lt!56268 () ListLongMap!1541)

(assert (=> b!109427 (= lt!56268 (getCurrentListMapNoExtraKeys!109 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56287 () (_ BitVec 64))

(assert (=> b!109427 (= lt!56287 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56282 () (_ BitVec 64))

(assert (=> b!109427 (= lt!56282 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56286 () Unit!3301)

(assert (=> b!109427 (= lt!56286 (addApplyDifferent!75 lt!56268 lt!56287 (zeroValue!2478 newMap!16) lt!56282))))

(assert (=> b!109427 (= (apply!99 (+!142 lt!56268 (tuple2!2377 lt!56287 (zeroValue!2478 newMap!16))) lt!56282) (apply!99 lt!56268 lt!56282))))

(declare-fun lt!56279 () Unit!3301)

(assert (=> b!109427 (= lt!56279 lt!56286)))

(declare-fun lt!56266 () ListLongMap!1541)

(assert (=> b!109427 (= lt!56266 (getCurrentListMapNoExtraKeys!109 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56267 () (_ BitVec 64))

(assert (=> b!109427 (= lt!56267 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56269 () (_ BitVec 64))

(assert (=> b!109427 (= lt!56269 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!109427 (= lt!56271 (addApplyDifferent!75 lt!56266 lt!56267 (minValue!2478 newMap!16) lt!56269))))

(assert (=> b!109427 (= (apply!99 (+!142 lt!56266 (tuple2!2377 lt!56267 (minValue!2478 newMap!16))) lt!56269) (apply!99 lt!56266 lt!56269))))

(declare-fun c!19358 () Bool)

(declare-fun bm!11609 () Bool)

(assert (=> bm!11609 (= call!11607 (+!142 (ite c!19358 call!11613 (ite c!19355 call!11609 call!11608)) (ite (or c!19358 c!19355) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun bm!11610 () Bool)

(assert (=> bm!11610 (= call!11611 (contains!820 lt!56281 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109428 () Bool)

(assert (=> b!109428 (= e!71173 (= (apply!99 lt!56281 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!109429 () Bool)

(assert (=> b!109429 (= e!71170 call!11608)))

(declare-fun b!109430 () Bool)

(declare-fun c!19359 () Bool)

(assert (=> b!109430 (= c!19359 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!109430 (= e!71175 e!71170)))

(declare-fun b!109431 () Bool)

(assert (=> b!109431 (= e!71174 (= (apply!99 lt!56281 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!109432 () Bool)

(assert (=> b!109432 (= e!71168 (not call!11610))))

(declare-fun b!109433 () Bool)

(assert (=> b!109433 (= e!71165 (+!142 call!11607 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun b!109434 () Bool)

(assert (=> b!109434 (= e!71167 (= (apply!99 lt!56281 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109434 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))))))))

(assert (=> b!109434 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))))))))

(declare-fun b!109435 () Bool)

(assert (=> b!109435 (= e!71166 (not call!11611))))

(declare-fun d!30755 () Bool)

(assert (=> d!30755 e!71176))

(declare-fun res!54168 () Bool)

(assert (=> d!30755 (=> (not res!54168) (not e!71176))))

(assert (=> d!30755 (= res!54168 (or (bvsge #b00000000000000000000000000000000 (size!2322 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))))))))))

(declare-fun lt!56283 () ListLongMap!1541)

(assert (=> d!30755 (= lt!56281 lt!56283)))

(declare-fun lt!56285 () Unit!3301)

(assert (=> d!30755 (= lt!56285 e!71169)))

(declare-fun c!19357 () Bool)

(assert (=> d!30755 (= c!19357 e!71171)))

(declare-fun res!54169 () Bool)

(assert (=> d!30755 (=> (not res!54169) (not e!71171))))

(assert (=> d!30755 (= res!54169 (bvslt #b00000000000000000000000000000000 (size!2322 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))))))))

(assert (=> d!30755 (= lt!56283 e!71165)))

(assert (=> d!30755 (= c!19358 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30755 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30755 (= (getCurrentListMap!472 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!56281)))

(assert (= (and d!30755 c!19358) b!109433))

(assert (= (and d!30755 (not c!19358)) b!109415))

(assert (= (and b!109415 c!19355) b!109420))

(assert (= (and b!109415 (not c!19355)) b!109430))

(assert (= (and b!109430 c!19359) b!109422))

(assert (= (and b!109430 (not c!19359)) b!109429))

(assert (= (or b!109422 b!109429) bm!11607))

(assert (= (or b!109420 bm!11607) bm!11605))

(assert (= (or b!109420 b!109422) bm!11604))

(assert (= (or b!109433 bm!11605) bm!11608))

(assert (= (or b!109433 bm!11604) bm!11609))

(assert (= (and d!30755 res!54169) b!109424))

(assert (= (and d!30755 c!19357) b!109427))

(assert (= (and d!30755 (not c!19357)) b!109423))

(assert (= (and d!30755 res!54168) b!109425))

(assert (= (and b!109425 res!54171) b!109419))

(assert (= (and b!109425 (not res!54167)) b!109417))

(assert (= (and b!109417 res!54174) b!109434))

(assert (= (and b!109425 res!54172) b!109418))

(assert (= (and b!109418 c!19354) b!109416))

(assert (= (and b!109418 (not c!19354)) b!109435))

(assert (= (and b!109416 res!54173) b!109431))

(assert (= (or b!109416 b!109435) bm!11610))

(assert (= (and b!109418 res!54170) b!109421))

(assert (= (and b!109421 c!19356) b!109426))

(assert (= (and b!109421 (not c!19356)) b!109432))

(assert (= (and b!109426 res!54166) b!109428))

(assert (= (or b!109426 b!109432) bm!11606))

(declare-fun b_lambda!4881 () Bool)

(assert (=> (not b_lambda!4881) (not b!109434)))

(assert (=> b!109434 t!5726))

(declare-fun b_and!6737 () Bool)

(assert (= b_and!6733 (and (=> t!5726 result!3505) b_and!6737)))

(assert (=> b!109434 t!5728))

(declare-fun b_and!6739 () Bool)

(assert (= b_and!6735 (and (=> t!5728 result!3507) b_and!6739)))

(declare-fun m!123885 () Bool)

(assert (=> b!109431 m!123885))

(declare-fun m!123887 () Bool)

(assert (=> b!109433 m!123887))

(declare-fun m!123889 () Bool)

(assert (=> bm!11606 m!123889))

(assert (=> b!109417 m!123865))

(assert (=> b!109417 m!123865))

(declare-fun m!123891 () Bool)

(assert (=> b!109417 m!123891))

(declare-fun m!123893 () Bool)

(assert (=> bm!11610 m!123893))

(assert (=> b!109419 m!123865))

(assert (=> b!109419 m!123865))

(assert (=> b!109419 m!123867))

(declare-fun m!123895 () Bool)

(assert (=> b!109428 m!123895))

(assert (=> d!30755 m!121179))

(declare-fun m!123897 () Bool)

(assert (=> b!109427 m!123897))

(declare-fun m!123899 () Bool)

(assert (=> b!109427 m!123899))

(declare-fun m!123901 () Bool)

(assert (=> b!109427 m!123901))

(assert (=> b!109427 m!123865))

(declare-fun m!123903 () Bool)

(assert (=> b!109427 m!123903))

(declare-fun m!123905 () Bool)

(assert (=> b!109427 m!123905))

(declare-fun m!123907 () Bool)

(assert (=> b!109427 m!123907))

(declare-fun m!123909 () Bool)

(assert (=> b!109427 m!123909))

(declare-fun m!123911 () Bool)

(assert (=> b!109427 m!123911))

(declare-fun m!123913 () Bool)

(assert (=> b!109427 m!123913))

(declare-fun m!123915 () Bool)

(assert (=> b!109427 m!123915))

(declare-fun m!123917 () Bool)

(assert (=> b!109427 m!123917))

(declare-fun m!123919 () Bool)

(assert (=> b!109427 m!123919))

(declare-fun m!123921 () Bool)

(assert (=> b!109427 m!123921))

(assert (=> b!109427 m!123915))

(declare-fun m!123923 () Bool)

(assert (=> b!109427 m!123923))

(declare-fun m!123925 () Bool)

(assert (=> b!109427 m!123925))

(assert (=> b!109427 m!123919))

(declare-fun m!123927 () Bool)

(assert (=> b!109427 m!123927))

(assert (=> b!109427 m!123923))

(assert (=> b!109427 m!123903))

(declare-fun m!123929 () Bool)

(assert (=> bm!11609 m!123929))

(assert (=> bm!11608 m!123901))

(assert (=> b!109424 m!123865))

(assert (=> b!109424 m!123865))

(assert (=> b!109424 m!123867))

(declare-fun m!123931 () Bool)

(assert (=> b!109434 m!123931))

(assert (=> b!109434 m!123931))

(assert (=> b!109434 m!121217))

(declare-fun m!123933 () Bool)

(assert (=> b!109434 m!123933))

(assert (=> b!109434 m!123865))

(declare-fun m!123935 () Bool)

(assert (=> b!109434 m!123935))

(assert (=> b!109434 m!123865))

(assert (=> b!109434 m!121217))

(assert (=> d!30007 d!30755))

(declare-fun d!30757 () Bool)

(assert (=> d!30757 (= (arrayCountValidKeys!0 lt!55683 (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (bvadd (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!56290 () Unit!3301)

(declare-fun choose!2 (array!4357 (_ BitVec 32)) Unit!3301)

(assert (=> d!30757 (= lt!56290 (choose!2 lt!55683 (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264))))))

(declare-fun e!71179 () Bool)

(assert (=> d!30757 e!71179))

(declare-fun res!54179 () Bool)

(assert (=> d!30757 (=> (not res!54179) (not e!71179))))

(assert (=> d!30757 (= res!54179 (and (bvsge (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000000) (bvslt (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (size!2322 lt!55683))))))

(assert (=> d!30757 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!55683 (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264))) lt!56290)))

(declare-fun b!109440 () Bool)

(declare-fun res!54180 () Bool)

(assert (=> b!109440 (=> (not res!54180) (not e!71179))))

(assert (=> b!109440 (= res!54180 (validKeyInArray!0 (select (arr!2066 lt!55683) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)))))))

(declare-fun b!109441 () Bool)

(assert (=> b!109441 (= e!71179 (bvslt (size!2322 lt!55683) #b01111111111111111111111111111111))))

(assert (= (and d!30757 res!54179) b!109440))

(assert (= (and b!109440 res!54180) b!109441))

(assert (=> d!30757 m!121821))

(declare-fun m!123937 () Bool)

(assert (=> d!30757 m!123937))

(declare-fun m!123939 () Bool)

(assert (=> b!109440 m!123939))

(assert (=> b!109440 m!123939))

(declare-fun m!123941 () Bool)

(assert (=> b!109440 m!123941))

(assert (=> d!30007 d!30757))

(declare-fun b!109451 () Bool)

(declare-fun res!54190 () Bool)

(declare-fun e!71185 () Bool)

(assert (=> b!109451 (=> (not res!54190) (not e!71185))))

(assert (=> b!109451 (= res!54190 (validKeyInArray!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!71184 () Bool)

(declare-fun b!109453 () Bool)

(assert (=> b!109453 (= e!71184 (= (arrayCountValidKeys!0 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4315 newMap!16) #b00000000000000000000000000000000 (size!2322 (_keys!4315 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!30759 () Bool)

(assert (=> d!30759 e!71184))

(declare-fun res!54192 () Bool)

(assert (=> d!30759 (=> (not res!54192) (not e!71184))))

(assert (=> d!30759 (= res!54192 (and (bvsge (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000000) (bvslt (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (size!2322 (_keys!4315 newMap!16)))))))

(declare-fun lt!56293 () Unit!3301)

(declare-fun choose!1 (array!4357 (_ BitVec 32) (_ BitVec 64)) Unit!3301)

(assert (=> d!30759 (= lt!56293 (choose!1 (_keys!4315 newMap!16) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30759 e!71185))

(declare-fun res!54189 () Bool)

(assert (=> d!30759 (=> (not res!54189) (not e!71185))))

(assert (=> d!30759 (= res!54189 (and (bvsge (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000000) (bvslt (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (size!2322 (_keys!4315 newMap!16)))))))

(assert (=> d!30759 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4315 newMap!16) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!56293)))

(declare-fun b!109450 () Bool)

(declare-fun res!54191 () Bool)

(assert (=> b!109450 (=> (not res!54191) (not e!71185))))

(assert (=> b!109450 (= res!54191 (not (validKeyInArray!0 (select (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264))))))))

(declare-fun b!109452 () Bool)

(assert (=> b!109452 (= e!71185 (bvslt (size!2322 (_keys!4315 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!30759 res!54189) b!109450))

(assert (= (and b!109450 res!54191) b!109451))

(assert (= (and b!109451 res!54190) b!109452))

(assert (= (and d!30759 res!54192) b!109453))

(assert (=> b!109451 m!120751))

(assert (=> b!109451 m!120933))

(assert (=> b!109453 m!121835))

(assert (=> b!109453 m!121807))

(assert (=> b!109453 m!121137))

(assert (=> d!30759 m!120751))

(declare-fun m!123943 () Bool)

(assert (=> d!30759 m!123943))

(declare-fun m!123945 () Bool)

(assert (=> b!109450 m!123945))

(assert (=> b!109450 m!123945))

(declare-fun m!123947 () Bool)

(assert (=> b!109450 m!123947))

(assert (=> d!30007 d!30759))

(declare-fun d!30761 () Bool)

(declare-fun res!54193 () Bool)

(declare-fun e!71186 () Bool)

(assert (=> d!30761 (=> res!54193 e!71186)))

(assert (=> d!30761 (= res!54193 (= (select (arr!2066 lt!55687) #b00000000000000000000000000000000) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30761 (= (arrayContainsKey!0 lt!55687 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000) e!71186)))

(declare-fun b!109454 () Bool)

(declare-fun e!71187 () Bool)

(assert (=> b!109454 (= e!71186 e!71187)))

(declare-fun res!54194 () Bool)

(assert (=> b!109454 (=> (not res!54194) (not e!71187))))

(assert (=> b!109454 (= res!54194 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2322 lt!55687)))))

(declare-fun b!109455 () Bool)

(assert (=> b!109455 (= e!71187 (arrayContainsKey!0 lt!55687 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30761 (not res!54193)) b!109454))

(assert (= (and b!109454 res!54194) b!109455))

(declare-fun m!123949 () Bool)

(assert (=> d!30761 m!123949))

(assert (=> b!109455 m!120751))

(declare-fun m!123951 () Bool)

(assert (=> b!109455 m!123951))

(assert (=> d!30007 d!30761))

(declare-fun d!30763 () Bool)

(declare-fun e!71188 () Bool)

(assert (=> d!30763 e!71188))

(declare-fun res!54195 () Bool)

(assert (=> d!30763 (=> (not res!54195) (not e!71188))))

(assert (=> d!30763 (= res!54195 (and (bvsge (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000000) (bvslt (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (size!2322 lt!55702))))))

(declare-fun lt!56294 () Unit!3301)

(assert (=> d!30763 (= lt!56294 (choose!684 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (defaultEntry!2605 newMap!16)))))

(assert (=> d!30763 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30763 (= (lemmaValidKeyInArrayIsInListMap!108 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (defaultEntry!2605 newMap!16)) lt!56294)))

(declare-fun b!109456 () Bool)

(assert (=> b!109456 (= e!71188 (contains!820 (getCurrentListMap!472 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2066 lt!55702) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)))))))

(assert (= (and d!30763 res!54195) b!109456))

(declare-fun m!123953 () Bool)

(assert (=> d!30763 m!123953))

(assert (=> d!30763 m!121179))

(assert (=> b!109456 m!121831))

(declare-fun m!123955 () Bool)

(assert (=> b!109456 m!123955))

(assert (=> b!109456 m!121831))

(assert (=> b!109456 m!123955))

(declare-fun m!123957 () Bool)

(assert (=> b!109456 m!123957))

(assert (=> d!30007 d!30763))

(assert (=> d!30007 d!30031))

(declare-fun d!30765 () Bool)

(declare-fun e!71191 () Bool)

(assert (=> d!30765 e!71191))

(declare-fun res!54198 () Bool)

(assert (=> d!30765 (=> (not res!54198) (not e!71191))))

(assert (=> d!30765 (= res!54198 (and (bvsge (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000000) (bvslt (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (size!2322 (_keys!4315 newMap!16))) (bvslt (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (size!2323 (_values!2588 newMap!16)))))))

(declare-fun lt!56297 () Unit!3301)

(declare-fun choose!688 (array!4357 array!4359 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) (_ BitVec 64) V!3233 Int) Unit!3301)

(assert (=> d!30765 (= lt!56297 (choose!688 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 (defaultEntry!2605 newMap!16)))))

(assert (=> d!30765 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30765 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!31 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094 (defaultEntry!2605 newMap!16)) lt!56297)))

(declare-fun b!109459 () Bool)

(assert (=> b!109459 (= e!71191 (= (+!142 (getCurrentListMap!472 (_keys!4315 newMap!16) (_values!2588 newMap!16) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) (getCurrentListMap!472 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (array!4360 (store (arr!2067 (_values!2588 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (ValueCellFull!1001 lt!55094)) (size!2323 (_values!2588 newMap!16))) (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))))

(assert (= (and d!30765 res!54198) b!109459))

(assert (=> d!30765 m!120751))

(declare-fun m!123959 () Bool)

(assert (=> d!30765 m!123959))

(assert (=> d!30765 m!121179))

(assert (=> b!109459 m!120987))

(assert (=> b!109459 m!121805))

(assert (=> b!109459 m!121823))

(assert (=> b!109459 m!121819))

(assert (=> b!109459 m!121835))

(assert (=> b!109459 m!120987))

(assert (=> d!30007 d!30765))

(assert (=> d!30007 d!29831))

(declare-fun call!11614 () (_ BitVec 32))

(declare-fun bm!11611 () Bool)

(assert (=> bm!11611 (= call!11614 (arrayCountValidKeys!0 lt!55683 (bvadd (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000001) (bvadd (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000001)))))

(declare-fun lt!56298 () (_ BitVec 32))

(declare-fun d!30767 () Bool)

(assert (=> d!30767 (and (bvsge lt!56298 #b00000000000000000000000000000000) (bvsle lt!56298 (bvsub (size!2322 lt!55683) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)))))))

(declare-fun e!71193 () (_ BitVec 32))

(assert (=> d!30767 (= lt!56298 e!71193)))

(declare-fun c!19361 () Bool)

(assert (=> d!30767 (= c!19361 (bvsge (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (bvadd (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000001)))))

(assert (=> d!30767 (and (bvsle (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (bvadd (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000001)) (bvsge (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000001) (size!2322 lt!55683)))))

(assert (=> d!30767 (= (arrayCountValidKeys!0 lt!55683 (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (bvadd (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000001)) lt!56298)))

(declare-fun b!109460 () Bool)

(assert (=> b!109460 (= e!71193 #b00000000000000000000000000000000)))

(declare-fun b!109461 () Bool)

(declare-fun e!71192 () (_ BitVec 32))

(assert (=> b!109461 (= e!71192 (bvadd #b00000000000000000000000000000001 call!11614))))

(declare-fun b!109462 () Bool)

(assert (=> b!109462 (= e!71193 e!71192)))

(declare-fun c!19360 () Bool)

(assert (=> b!109462 (= c!19360 (validKeyInArray!0 (select (arr!2066 lt!55683) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)))))))

(declare-fun b!109463 () Bool)

(assert (=> b!109463 (= e!71192 call!11614)))

(assert (= (and d!30767 c!19361) b!109460))

(assert (= (and d!30767 (not c!19361)) b!109462))

(assert (= (and b!109462 c!19360) b!109461))

(assert (= (and b!109462 (not c!19360)) b!109463))

(assert (= (or b!109461 b!109463) bm!11611))

(declare-fun m!123961 () Bool)

(assert (=> bm!11611 m!123961))

(assert (=> b!109462 m!123939))

(assert (=> b!109462 m!123939))

(assert (=> b!109462 m!123941))

(assert (=> d!30007 d!30767))

(declare-fun d!30769 () Bool)

(declare-fun e!71196 () Bool)

(assert (=> d!30769 e!71196))

(declare-fun res!54201 () Bool)

(assert (=> d!30769 (=> (not res!54201) (not e!71196))))

(assert (=> d!30769 (= res!54201 (and (bvsge (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) #b00000000000000000000000000000000) (bvslt (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (size!2322 (_keys!4315 newMap!16)))))))

(declare-fun lt!56301 () Unit!3301)

(declare-fun choose!102 ((_ BitVec 64) array!4357 (_ BitVec 32) (_ BitVec 32)) Unit!3301)

(assert (=> d!30769 (= lt!56301 (choose!102 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (mask!6763 newMap!16)))))

(assert (=> d!30769 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30769 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4315 newMap!16) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (mask!6763 newMap!16)) lt!56301)))

(declare-fun b!109466 () Bool)

(assert (=> b!109466 (= e!71196 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (mask!6763 newMap!16)))))

(assert (= (and d!30769 res!54201) b!109466))

(assert (=> d!30769 m!120751))

(declare-fun m!123963 () Bool)

(assert (=> d!30769 m!123963))

(assert (=> d!30769 m!121179))

(assert (=> b!109466 m!121835))

(assert (=> b!109466 m!121811))

(assert (=> d!30007 d!30769))

(declare-fun e!71199 () Bool)

(declare-fun b!109468 () Bool)

(assert (=> b!109468 (= e!71199 (contains!822 lt!55680 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) lt!55703)))))

(declare-fun b!109469 () Bool)

(declare-fun e!71200 () Bool)

(declare-fun call!11615 () Bool)

(assert (=> b!109469 (= e!71200 call!11615)))

(declare-fun c!19362 () Bool)

(declare-fun bm!11612 () Bool)

(assert (=> bm!11612 (= call!11615 (arrayNoDuplicates!0 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) (bvadd lt!55703 #b00000000000000000000000000000001) (ite c!19362 (Cons!1601 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) lt!55703) lt!55680) lt!55680)))))

(declare-fun b!109470 () Bool)

(declare-fun e!71198 () Bool)

(declare-fun e!71197 () Bool)

(assert (=> b!109470 (= e!71198 e!71197)))

(declare-fun res!54204 () Bool)

(assert (=> b!109470 (=> (not res!54204) (not e!71197))))

(assert (=> b!109470 (= res!54204 (not e!71199))))

(declare-fun res!54203 () Bool)

(assert (=> b!109470 (=> (not res!54203) (not e!71199))))

(assert (=> b!109470 (= res!54203 (validKeyInArray!0 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) lt!55703)))))

(declare-fun b!109471 () Bool)

(assert (=> b!109471 (= e!71200 call!11615)))

(declare-fun d!30771 () Bool)

(declare-fun res!54202 () Bool)

(assert (=> d!30771 (=> res!54202 e!71198)))

(assert (=> d!30771 (= res!54202 (bvsge lt!55703 (size!2322 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))))))))

(assert (=> d!30771 (= (arrayNoDuplicates!0 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16))) lt!55703 lt!55680) e!71198)))

(declare-fun b!109467 () Bool)

(assert (=> b!109467 (= e!71197 e!71200)))

(assert (=> b!109467 (= c!19362 (validKeyInArray!0 (select (arr!2066 (array!4358 (store (arr!2066 (_keys!4315 newMap!16)) (ite c!18888 (index!3168 lt!55264) (index!3165 lt!55264)) (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2322 (_keys!4315 newMap!16)))) lt!55703)))))

(assert (= (and d!30771 (not res!54202)) b!109470))

(assert (= (and b!109470 res!54203) b!109468))

(assert (= (and b!109470 res!54204) b!109467))

(assert (= (and b!109467 c!19362) b!109471))

(assert (= (and b!109467 (not c!19362)) b!109469))

(assert (= (or b!109471 b!109469) bm!11612))

(declare-fun m!123965 () Bool)

(assert (=> b!109468 m!123965))

(assert (=> b!109468 m!123965))

(declare-fun m!123967 () Bool)

(assert (=> b!109468 m!123967))

(assert (=> bm!11612 m!123965))

(declare-fun m!123969 () Bool)

(assert (=> bm!11612 m!123969))

(assert (=> b!109470 m!123965))

(assert (=> b!109470 m!123965))

(declare-fun m!123971 () Bool)

(assert (=> b!109470 m!123971))

(assert (=> b!109467 m!123965))

(assert (=> b!109467 m!123965))

(assert (=> b!109467 m!123971))

(assert (=> d!30007 d!30771))

(declare-fun bm!11613 () Bool)

(declare-fun call!11621 () ListLongMap!1541)

(declare-fun call!11616 () ListLongMap!1541)

(assert (=> bm!11613 (= call!11621 call!11616)))

(declare-fun b!109472 () Bool)

(declare-fun e!71202 () ListLongMap!1541)

(declare-fun e!71212 () ListLongMap!1541)

(assert (=> b!109472 (= e!71202 e!71212)))

(declare-fun c!19364 () Bool)

(assert (=> b!109472 (= c!19364 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11614 () Bool)

(declare-fun call!11618 () ListLongMap!1541)

(declare-fun call!11622 () ListLongMap!1541)

(assert (=> bm!11614 (= call!11618 call!11622)))

(declare-fun b!109473 () Bool)

(declare-fun e!71203 () Bool)

(declare-fun e!71211 () Bool)

(assert (=> b!109473 (= e!71203 e!71211)))

(declare-fun res!54212 () Bool)

(declare-fun call!11620 () Bool)

(assert (=> b!109473 (= res!54212 call!11620)))

(assert (=> b!109473 (=> (not res!54212) (not e!71211))))

(declare-fun bm!11615 () Bool)

(declare-fun call!11619 () Bool)

(declare-fun lt!56317 () ListLongMap!1541)

(assert (=> bm!11615 (= call!11619 (contains!820 lt!56317 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109474 () Bool)

(declare-fun e!71201 () Bool)

(declare-fun e!71204 () Bool)

(assert (=> b!109474 (= e!71201 e!71204)))

(declare-fun res!54213 () Bool)

(assert (=> b!109474 (=> (not res!54213) (not e!71204))))

(assert (=> b!109474 (= res!54213 (contains!820 lt!56317 (select (arr!2066 lt!55702) #b00000000000000000000000000000000)))))

(assert (=> b!109474 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 lt!55702)))))

(declare-fun b!109475 () Bool)

(declare-fun res!54209 () Bool)

(declare-fun e!71213 () Bool)

(assert (=> b!109475 (=> (not res!54209) (not e!71213))))

(assert (=> b!109475 (= res!54209 e!71203)))

(declare-fun c!19363 () Bool)

(assert (=> b!109475 (= c!19363 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11616 () Bool)

(declare-fun call!11617 () ListLongMap!1541)

(assert (=> bm!11616 (= call!11617 call!11618)))

(declare-fun b!109476 () Bool)

(declare-fun e!71209 () Bool)

(assert (=> b!109476 (= e!71209 (validKeyInArray!0 (select (arr!2066 lt!55702) #b00000000000000000000000000000000)))))

(declare-fun b!109477 () Bool)

(assert (=> b!109477 (= e!71212 call!11621)))

(declare-fun b!109478 () Bool)

(declare-fun e!71205 () Bool)

(assert (=> b!109478 (= e!71213 e!71205)))

(declare-fun c!19365 () Bool)

(assert (=> b!109478 (= c!19365 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11617 () Bool)

(assert (=> bm!11617 (= call!11622 (getCurrentListMapNoExtraKeys!109 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!109479 () Bool)

(declare-fun e!71207 () ListLongMap!1541)

(assert (=> b!109479 (= e!71207 call!11621)))

(declare-fun b!109480 () Bool)

(declare-fun e!71206 () Unit!3301)

(declare-fun Unit!3379 () Unit!3301)

(assert (=> b!109480 (= e!71206 Unit!3379)))

(declare-fun b!109481 () Bool)

(declare-fun e!71208 () Bool)

(assert (=> b!109481 (= e!71208 (validKeyInArray!0 (select (arr!2066 lt!55702) #b00000000000000000000000000000000)))))

(declare-fun b!109482 () Bool)

(declare-fun res!54211 () Bool)

(assert (=> b!109482 (=> (not res!54211) (not e!71213))))

(assert (=> b!109482 (= res!54211 e!71201)))

(declare-fun res!54206 () Bool)

(assert (=> b!109482 (=> res!54206 e!71201)))

(assert (=> b!109482 (= res!54206 (not e!71209))))

(declare-fun res!54210 () Bool)

(assert (=> b!109482 (=> (not res!54210) (not e!71209))))

(assert (=> b!109482 (= res!54210 (bvslt #b00000000000000000000000000000000 (size!2322 lt!55702)))))

(declare-fun b!109483 () Bool)

(declare-fun e!71210 () Bool)

(assert (=> b!109483 (= e!71205 e!71210)))

(declare-fun res!54205 () Bool)

(assert (=> b!109483 (= res!54205 call!11619)))

(assert (=> b!109483 (=> (not res!54205) (not e!71210))))

(declare-fun b!109484 () Bool)

(declare-fun lt!56307 () Unit!3301)

(assert (=> b!109484 (= e!71206 lt!56307)))

(declare-fun lt!56308 () ListLongMap!1541)

(assert (=> b!109484 (= lt!56308 (getCurrentListMapNoExtraKeys!109 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56312 () (_ BitVec 64))

(assert (=> b!109484 (= lt!56312 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56310 () (_ BitVec 64))

(assert (=> b!109484 (= lt!56310 (select (arr!2066 lt!55702) #b00000000000000000000000000000000))))

(declare-fun lt!56313 () Unit!3301)

(assert (=> b!109484 (= lt!56313 (addStillContains!75 lt!56308 lt!56312 (zeroValue!2478 newMap!16) lt!56310))))

(assert (=> b!109484 (contains!820 (+!142 lt!56308 (tuple2!2377 lt!56312 (zeroValue!2478 newMap!16))) lt!56310)))

(declare-fun lt!56320 () Unit!3301)

(assert (=> b!109484 (= lt!56320 lt!56313)))

(declare-fun lt!56306 () ListLongMap!1541)

(assert (=> b!109484 (= lt!56306 (getCurrentListMapNoExtraKeys!109 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56311 () (_ BitVec 64))

(assert (=> b!109484 (= lt!56311 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56314 () (_ BitVec 64))

(assert (=> b!109484 (= lt!56314 (select (arr!2066 lt!55702) #b00000000000000000000000000000000))))

(declare-fun lt!56316 () Unit!3301)

(assert (=> b!109484 (= lt!56316 (addApplyDifferent!75 lt!56306 lt!56311 (minValue!2478 newMap!16) lt!56314))))

(assert (=> b!109484 (= (apply!99 (+!142 lt!56306 (tuple2!2377 lt!56311 (minValue!2478 newMap!16))) lt!56314) (apply!99 lt!56306 lt!56314))))

(declare-fun lt!56309 () Unit!3301)

(assert (=> b!109484 (= lt!56309 lt!56316)))

(declare-fun lt!56304 () ListLongMap!1541)

(assert (=> b!109484 (= lt!56304 (getCurrentListMapNoExtraKeys!109 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56323 () (_ BitVec 64))

(assert (=> b!109484 (= lt!56323 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56318 () (_ BitVec 64))

(assert (=> b!109484 (= lt!56318 (select (arr!2066 lt!55702) #b00000000000000000000000000000000))))

(declare-fun lt!56322 () Unit!3301)

(assert (=> b!109484 (= lt!56322 (addApplyDifferent!75 lt!56304 lt!56323 (zeroValue!2478 newMap!16) lt!56318))))

(assert (=> b!109484 (= (apply!99 (+!142 lt!56304 (tuple2!2377 lt!56323 (zeroValue!2478 newMap!16))) lt!56318) (apply!99 lt!56304 lt!56318))))

(declare-fun lt!56315 () Unit!3301)

(assert (=> b!109484 (= lt!56315 lt!56322)))

(declare-fun lt!56302 () ListLongMap!1541)

(assert (=> b!109484 (= lt!56302 (getCurrentListMapNoExtraKeys!109 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56303 () (_ BitVec 64))

(assert (=> b!109484 (= lt!56303 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56305 () (_ BitVec 64))

(assert (=> b!109484 (= lt!56305 (select (arr!2066 lt!55702) #b00000000000000000000000000000000))))

(assert (=> b!109484 (= lt!56307 (addApplyDifferent!75 lt!56302 lt!56303 (minValue!2478 newMap!16) lt!56305))))

(assert (=> b!109484 (= (apply!99 (+!142 lt!56302 (tuple2!2377 lt!56303 (minValue!2478 newMap!16))) lt!56305) (apply!99 lt!56302 lt!56305))))

(declare-fun bm!11618 () Bool)

(declare-fun c!19367 () Bool)

(assert (=> bm!11618 (= call!11616 (+!142 (ite c!19367 call!11622 (ite c!19364 call!11618 call!11617)) (ite (or c!19367 c!19364) (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun bm!11619 () Bool)

(assert (=> bm!11619 (= call!11620 (contains!820 lt!56317 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109485 () Bool)

(assert (=> b!109485 (= e!71210 (= (apply!99 lt!56317 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!109486 () Bool)

(assert (=> b!109486 (= e!71207 call!11617)))

(declare-fun b!109487 () Bool)

(declare-fun c!19368 () Bool)

(assert (=> b!109487 (= c!19368 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!109487 (= e!71212 e!71207)))

(declare-fun b!109488 () Bool)

(assert (=> b!109488 (= e!71211 (= (apply!99 lt!56317 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!109489 () Bool)

(assert (=> b!109489 (= e!71205 (not call!11619))))

(declare-fun b!109490 () Bool)

(assert (=> b!109490 (= e!71202 (+!142 call!11616 (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun b!109491 () Bool)

(assert (=> b!109491 (= e!71204 (= (apply!99 lt!56317 (select (arr!2066 lt!55702) #b00000000000000000000000000000000)) (get!1345 (select (arr!2067 lt!55689) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109491 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2323 lt!55689)))))

(assert (=> b!109491 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 lt!55702)))))

(declare-fun b!109492 () Bool)

(assert (=> b!109492 (= e!71203 (not call!11620))))

(declare-fun d!30773 () Bool)

(assert (=> d!30773 e!71213))

(declare-fun res!54207 () Bool)

(assert (=> d!30773 (=> (not res!54207) (not e!71213))))

(assert (=> d!30773 (= res!54207 (or (bvsge #b00000000000000000000000000000000 (size!2322 lt!55702)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2322 lt!55702)))))))

(declare-fun lt!56319 () ListLongMap!1541)

(assert (=> d!30773 (= lt!56317 lt!56319)))

(declare-fun lt!56321 () Unit!3301)

(assert (=> d!30773 (= lt!56321 e!71206)))

(declare-fun c!19366 () Bool)

(assert (=> d!30773 (= c!19366 e!71208)))

(declare-fun res!54208 () Bool)

(assert (=> d!30773 (=> (not res!54208) (not e!71208))))

(assert (=> d!30773 (= res!54208 (bvslt #b00000000000000000000000000000000 (size!2322 lt!55702)))))

(assert (=> d!30773 (= lt!56319 e!71202)))

(assert (=> d!30773 (= c!19367 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30773 (validMask!0 (mask!6763 newMap!16))))

(assert (=> d!30773 (= (getCurrentListMap!472 lt!55702 lt!55689 (mask!6763 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!56317)))

(assert (= (and d!30773 c!19367) b!109490))

(assert (= (and d!30773 (not c!19367)) b!109472))

(assert (= (and b!109472 c!19364) b!109477))

(assert (= (and b!109472 (not c!19364)) b!109487))

(assert (= (and b!109487 c!19368) b!109479))

(assert (= (and b!109487 (not c!19368)) b!109486))

(assert (= (or b!109479 b!109486) bm!11616))

(assert (= (or b!109477 bm!11616) bm!11614))

(assert (= (or b!109477 b!109479) bm!11613))

(assert (= (or b!109490 bm!11614) bm!11617))

(assert (= (or b!109490 bm!11613) bm!11618))

(assert (= (and d!30773 res!54208) b!109481))

(assert (= (and d!30773 c!19366) b!109484))

(assert (= (and d!30773 (not c!19366)) b!109480))

(assert (= (and d!30773 res!54207) b!109482))

(assert (= (and b!109482 res!54210) b!109476))

(assert (= (and b!109482 (not res!54206)) b!109474))

(assert (= (and b!109474 res!54213) b!109491))

(assert (= (and b!109482 res!54211) b!109475))

(assert (= (and b!109475 c!19363) b!109473))

(assert (= (and b!109475 (not c!19363)) b!109492))

(assert (= (and b!109473 res!54212) b!109488))

(assert (= (or b!109473 b!109492) bm!11619))

(assert (= (and b!109475 res!54209) b!109478))

(assert (= (and b!109478 c!19365) b!109483))

(assert (= (and b!109478 (not c!19365)) b!109489))

(assert (= (and b!109483 res!54205) b!109485))

(assert (= (or b!109483 b!109489) bm!11615))

(declare-fun b_lambda!4883 () Bool)

(assert (=> (not b_lambda!4883) (not b!109491)))

(assert (=> b!109491 t!5726))

(declare-fun b_and!6741 () Bool)

(assert (= b_and!6737 (and (=> t!5726 result!3505) b_and!6741)))

(assert (=> b!109491 t!5728))

(declare-fun b_and!6743 () Bool)

(assert (= b_and!6739 (and (=> t!5728 result!3507) b_and!6743)))

(declare-fun m!123973 () Bool)

(assert (=> b!109488 m!123973))

(declare-fun m!123975 () Bool)

(assert (=> b!109490 m!123975))

(declare-fun m!123977 () Bool)

(assert (=> bm!11615 m!123977))

(declare-fun m!123979 () Bool)

(assert (=> b!109474 m!123979))

(assert (=> b!109474 m!123979))

(declare-fun m!123981 () Bool)

(assert (=> b!109474 m!123981))

(declare-fun m!123983 () Bool)

(assert (=> bm!11619 m!123983))

(assert (=> b!109476 m!123979))

(assert (=> b!109476 m!123979))

(declare-fun m!123985 () Bool)

(assert (=> b!109476 m!123985))

(declare-fun m!123987 () Bool)

(assert (=> b!109485 m!123987))

(assert (=> d!30773 m!121179))

(declare-fun m!123989 () Bool)

(assert (=> b!109484 m!123989))

(declare-fun m!123991 () Bool)

(assert (=> b!109484 m!123991))

(declare-fun m!123993 () Bool)

(assert (=> b!109484 m!123993))

(assert (=> b!109484 m!123979))

(declare-fun m!123995 () Bool)

(assert (=> b!109484 m!123995))

(declare-fun m!123997 () Bool)

(assert (=> b!109484 m!123997))

(declare-fun m!123999 () Bool)

(assert (=> b!109484 m!123999))

(declare-fun m!124001 () Bool)

(assert (=> b!109484 m!124001))

(declare-fun m!124003 () Bool)

(assert (=> b!109484 m!124003))

(declare-fun m!124005 () Bool)

(assert (=> b!109484 m!124005))

(declare-fun m!124007 () Bool)

(assert (=> b!109484 m!124007))

(declare-fun m!124009 () Bool)

(assert (=> b!109484 m!124009))

(declare-fun m!124011 () Bool)

(assert (=> b!109484 m!124011))

(declare-fun m!124013 () Bool)

(assert (=> b!109484 m!124013))

(assert (=> b!109484 m!124007))

(declare-fun m!124015 () Bool)

(assert (=> b!109484 m!124015))

(declare-fun m!124017 () Bool)

(assert (=> b!109484 m!124017))

(assert (=> b!109484 m!124011))

(declare-fun m!124019 () Bool)

(assert (=> b!109484 m!124019))

(assert (=> b!109484 m!124015))

(assert (=> b!109484 m!123995))

(declare-fun m!124021 () Bool)

(assert (=> bm!11618 m!124021))

(assert (=> bm!11617 m!123993))

(assert (=> b!109481 m!123979))

(assert (=> b!109481 m!123979))

(assert (=> b!109481 m!123985))

(declare-fun m!124023 () Bool)

(assert (=> b!109491 m!124023))

(assert (=> b!109491 m!124023))

(assert (=> b!109491 m!121217))

(declare-fun m!124025 () Bool)

(assert (=> b!109491 m!124025))

(assert (=> b!109491 m!123979))

(declare-fun m!124027 () Bool)

(assert (=> b!109491 m!124027))

(assert (=> b!109491 m!123979))

(assert (=> b!109491 m!121217))

(assert (=> d!30007 d!30773))

(declare-fun lt!56324 () Bool)

(declare-fun d!30775 () Bool)

(assert (=> d!30775 (= lt!56324 (select (content!112 (toList!786 lt!55580)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(declare-fun e!71214 () Bool)

(assert (=> d!30775 (= lt!56324 e!71214)))

(declare-fun res!54215 () Bool)

(assert (=> d!30775 (=> (not res!54215) (not e!71214))))

(assert (=> d!30775 (= res!54215 ((_ is Cons!1600) (toList!786 lt!55580)))))

(assert (=> d!30775 (= (contains!823 (toList!786 lt!55580) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)) lt!56324)))

(declare-fun b!109493 () Bool)

(declare-fun e!71215 () Bool)

(assert (=> b!109493 (= e!71214 e!71215)))

(declare-fun res!54214 () Bool)

(assert (=> b!109493 (=> res!54214 e!71215)))

(assert (=> b!109493 (= res!54214 (= (h!2198 (toList!786 lt!55580)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(declare-fun b!109494 () Bool)

(assert (=> b!109494 (= e!71215 (contains!823 (t!5712 (toList!786 lt!55580)) (tuple2!2377 (select (arr!2066 (_keys!4315 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55094)))))

(assert (= (and d!30775 res!54215) b!109493))

(assert (= (and b!109493 (not res!54214)) b!109494))

(declare-fun m!124029 () Bool)

(assert (=> d!30775 m!124029))

(declare-fun m!124031 () Bool)

(assert (=> d!30775 m!124031))

(declare-fun m!124033 () Bool)

(assert (=> b!109494 m!124033))

(assert (=> b!108206 d!30775))

(declare-fun d!30777 () Bool)

(declare-fun lt!56325 () Bool)

(assert (=> d!30777 (= lt!56325 (select (content!112 (toList!786 lt!55394)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!71216 () Bool)

(assert (=> d!30777 (= lt!56325 e!71216)))

(declare-fun res!54217 () Bool)

(assert (=> d!30777 (=> (not res!54217) (not e!71216))))

(assert (=> d!30777 (= res!54217 ((_ is Cons!1600) (toList!786 lt!55394)))))

(assert (=> d!30777 (= (contains!823 (toList!786 lt!55394) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))) lt!56325)))

(declare-fun b!109495 () Bool)

(declare-fun e!71217 () Bool)

(assert (=> b!109495 (= e!71216 e!71217)))

(declare-fun res!54216 () Bool)

(assert (=> b!109495 (=> res!54216 e!71217)))

(assert (=> b!109495 (= res!54216 (= (h!2198 (toList!786 lt!55394)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!109496 () Bool)

(assert (=> b!109496 (= e!71217 (contains!823 (t!5712 (toList!786 lt!55394)) (tuple2!2377 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30777 res!54217) b!109495))

(assert (= (and b!109495 (not res!54216)) b!109496))

(declare-fun m!124035 () Bool)

(assert (=> d!30777 m!124035))

(declare-fun m!124037 () Bool)

(assert (=> d!30777 m!124037))

(declare-fun m!124039 () Bool)

(assert (=> b!109496 m!124039))

(assert (=> b!107903 d!30777))

(declare-fun d!30779 () Bool)

(assert (=> d!30779 (= (inRange!0 (ite c!18987 (index!3165 lt!55541) (index!3168 lt!55541)) (mask!6763 newMap!16)) (and (bvsge (ite c!18987 (index!3165 lt!55541) (index!3168 lt!55541)) #b00000000000000000000000000000000) (bvslt (ite c!18987 (index!3165 lt!55541) (index!3168 lt!55541)) (bvadd (mask!6763 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11456 d!30779))

(declare-fun d!30781 () Bool)

(declare-fun lt!56326 () Bool)

(assert (=> d!30781 (= lt!56326 (select (content!112 (t!5712 (toList!786 lt!55324))) lt!55093))))

(declare-fun e!71218 () Bool)

(assert (=> d!30781 (= lt!56326 e!71218)))

(declare-fun res!54219 () Bool)

(assert (=> d!30781 (=> (not res!54219) (not e!71218))))

(assert (=> d!30781 (= res!54219 ((_ is Cons!1600) (t!5712 (toList!786 lt!55324))))))

(assert (=> d!30781 (= (contains!823 (t!5712 (toList!786 lt!55324)) lt!55093) lt!56326)))

(declare-fun b!109497 () Bool)

(declare-fun e!71219 () Bool)

(assert (=> b!109497 (= e!71218 e!71219)))

(declare-fun res!54218 () Bool)

(assert (=> b!109497 (=> res!54218 e!71219)))

(assert (=> b!109497 (= res!54218 (= (h!2198 (t!5712 (toList!786 lt!55324))) lt!55093))))

(declare-fun b!109498 () Bool)

(assert (=> b!109498 (= e!71219 (contains!823 (t!5712 (t!5712 (toList!786 lt!55324))) lt!55093))))

(assert (= (and d!30781 res!54219) b!109497))

(assert (= (and b!109497 (not res!54218)) b!109498))

(assert (=> d!30781 m!123615))

(declare-fun m!124041 () Bool)

(assert (=> d!30781 m!124041))

(declare-fun m!124043 () Bool)

(assert (=> b!109498 m!124043))

(assert (=> b!108124 d!30781))

(declare-fun b!109502 () Bool)

(declare-fun e!71221 () Option!164)

(assert (=> b!109502 (= e!71221 None!162)))

(declare-fun b!109501 () Bool)

(assert (=> b!109501 (= e!71221 (getValueByKey!158 (t!5712 (t!5712 lt!55323)) (_1!1199 lt!55093)))))

(declare-fun b!109499 () Bool)

(declare-fun e!71220 () Option!164)

(assert (=> b!109499 (= e!71220 (Some!163 (_2!1199 (h!2198 (t!5712 lt!55323)))))))

(declare-fun d!30783 () Bool)

(declare-fun c!19369 () Bool)

(assert (=> d!30783 (= c!19369 (and ((_ is Cons!1600) (t!5712 lt!55323)) (= (_1!1199 (h!2198 (t!5712 lt!55323))) (_1!1199 lt!55093))))))

(assert (=> d!30783 (= (getValueByKey!158 (t!5712 lt!55323) (_1!1199 lt!55093)) e!71220)))

(declare-fun b!109500 () Bool)

(assert (=> b!109500 (= e!71220 e!71221)))

(declare-fun c!19370 () Bool)

(assert (=> b!109500 (= c!19370 (and ((_ is Cons!1600) (t!5712 lt!55323)) (not (= (_1!1199 (h!2198 (t!5712 lt!55323))) (_1!1199 lt!55093)))))))

(assert (= (and d!30783 c!19369) b!109499))

(assert (= (and d!30783 (not c!19369)) b!109500))

(assert (= (and b!109500 c!19370) b!109501))

(assert (= (and b!109500 (not c!19370)) b!109502))

(declare-fun m!124045 () Bool)

(assert (=> b!109501 m!124045))

(assert (=> b!107952 d!30783))

(declare-fun d!30785 () Bool)

(assert (=> d!30785 (= (get!1350 (getValueByKey!158 (toList!786 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55385)) (v!2920 (getValueByKey!158 (toList!786 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55385)))))

(assert (=> d!29913 d!30785))

(declare-fun b!109506 () Bool)

(declare-fun e!71223 () Option!164)

(assert (=> b!109506 (= e!71223 None!162)))

(declare-fun b!109505 () Bool)

(assert (=> b!109505 (= e!71223 (getValueByKey!158 (t!5712 (toList!786 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) lt!55385))))

(declare-fun e!71222 () Option!164)

(declare-fun b!109503 () Bool)

(assert (=> b!109503 (= e!71222 (Some!163 (_2!1199 (h!2198 (toList!786 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))))

(declare-fun d!30787 () Bool)

(declare-fun c!19371 () Bool)

(assert (=> d!30787 (= c!19371 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))) lt!55385)))))

(assert (=> d!30787 (= (getValueByKey!158 (toList!786 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) lt!55385) e!71222)))

(declare-fun b!109504 () Bool)

(assert (=> b!109504 (= e!71222 e!71223)))

(declare-fun c!19372 () Bool)

(assert (=> b!109504 (= c!19372 (and ((_ is Cons!1600) (toList!786 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))) (not (= (_1!1199 (h!2198 (toList!786 (+!142 lt!55371 (tuple2!2377 lt!55390 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))) lt!55385))))))

(assert (= (and d!30787 c!19371) b!109503))

(assert (= (and d!30787 (not c!19371)) b!109504))

(assert (= (and b!109504 c!19372) b!109505))

(assert (= (and b!109504 (not c!19372)) b!109506))

(declare-fun m!124047 () Bool)

(assert (=> b!109505 m!124047))

(assert (=> d!29913 d!30787))

(assert (=> b!108044 d!30083))

(declare-fun b!109510 () Bool)

(declare-fun e!71225 () Option!164)

(assert (=> b!109510 (= e!71225 None!162)))

(declare-fun b!109509 () Bool)

(assert (=> b!109509 (= e!71225 (getValueByKey!158 (t!5712 (t!5712 (toList!786 lt!55291))) (_1!1199 lt!55092)))))

(declare-fun b!109507 () Bool)

(declare-fun e!71224 () Option!164)

(assert (=> b!109507 (= e!71224 (Some!163 (_2!1199 (h!2198 (t!5712 (toList!786 lt!55291))))))))

(declare-fun d!30789 () Bool)

(declare-fun c!19373 () Bool)

(assert (=> d!30789 (= c!19373 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55291))) (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55291)))) (_1!1199 lt!55092))))))

(assert (=> d!30789 (= (getValueByKey!158 (t!5712 (toList!786 lt!55291)) (_1!1199 lt!55092)) e!71224)))

(declare-fun b!109508 () Bool)

(assert (=> b!109508 (= e!71224 e!71225)))

(declare-fun c!19374 () Bool)

(assert (=> b!109508 (= c!19374 (and ((_ is Cons!1600) (t!5712 (toList!786 lt!55291))) (not (= (_1!1199 (h!2198 (t!5712 (toList!786 lt!55291)))) (_1!1199 lt!55092)))))))

(assert (= (and d!30789 c!19373) b!109507))

(assert (= (and d!30789 (not c!19373)) b!109508))

(assert (= (and b!109508 c!19374) b!109509))

(assert (= (and b!109508 (not c!19374)) b!109510))

(declare-fun m!124049 () Bool)

(assert (=> b!109509 m!124049))

(assert (=> b!108369 d!30789))

(declare-fun d!30791 () Bool)

(assert (=> d!30791 (= (apply!99 lt!55720 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!786 lt!55720) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4518 () Bool)

(assert (= bs!4518 d!30791))

(assert (=> bs!4518 m!123763))

(assert (=> bs!4518 m!123763))

(declare-fun m!124051 () Bool)

(assert (=> bs!4518 m!124051))

(assert (=> b!108307 d!30791))

(declare-fun d!30793 () Bool)

(declare-fun e!71226 () Bool)

(assert (=> d!30793 e!71226))

(declare-fun res!54220 () Bool)

(assert (=> d!30793 (=> res!54220 e!71226)))

(declare-fun lt!56327 () Bool)

(assert (=> d!30793 (= res!54220 (not lt!56327))))

(declare-fun lt!56330 () Bool)

(assert (=> d!30793 (= lt!56327 lt!56330)))

(declare-fun lt!56329 () Unit!3301)

(declare-fun e!71227 () Unit!3301)

(assert (=> d!30793 (= lt!56329 e!71227)))

(declare-fun c!19375 () Bool)

(assert (=> d!30793 (= c!19375 lt!56330)))

(assert (=> d!30793 (= lt!56330 (containsKey!161 (toList!786 lt!55557) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30793 (= (contains!820 lt!55557 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56327)))

(declare-fun b!109511 () Bool)

(declare-fun lt!56328 () Unit!3301)

(assert (=> b!109511 (= e!71227 lt!56328)))

(assert (=> b!109511 (= lt!56328 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55557) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109511 (isDefined!110 (getValueByKey!158 (toList!786 lt!55557) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109512 () Bool)

(declare-fun Unit!3380 () Unit!3301)

(assert (=> b!109512 (= e!71227 Unit!3380)))

(declare-fun b!109513 () Bool)

(assert (=> b!109513 (= e!71226 (isDefined!110 (getValueByKey!158 (toList!786 lt!55557) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30793 c!19375) b!109511))

(assert (= (and d!30793 (not c!19375)) b!109512))

(assert (= (and d!30793 (not res!54220)) b!109513))

(declare-fun m!124053 () Bool)

(assert (=> d!30793 m!124053))

(declare-fun m!124055 () Bool)

(assert (=> b!109511 m!124055))

(assert (=> b!109511 m!123401))

(assert (=> b!109511 m!123401))

(declare-fun m!124057 () Bool)

(assert (=> b!109511 m!124057))

(assert (=> b!109513 m!123401))

(assert (=> b!109513 m!123401))

(assert (=> b!109513 m!124057))

(assert (=> bm!11464 d!30793))

(assert (=> d!30003 d!29795))

(declare-fun b!109517 () Bool)

(declare-fun e!71229 () Option!164)

(assert (=> b!109517 (= e!71229 None!162)))

(declare-fun b!109516 () Bool)

(assert (=> b!109516 (= e!71229 (getValueByKey!158 (t!5712 (toList!786 lt!55529)) (_1!1199 (tuple2!2377 lt!55312 lt!55307))))))

(declare-fun b!109514 () Bool)

(declare-fun e!71228 () Option!164)

(assert (=> b!109514 (= e!71228 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55529)))))))

(declare-fun c!19376 () Bool)

(declare-fun d!30795 () Bool)

(assert (=> d!30795 (= c!19376 (and ((_ is Cons!1600) (toList!786 lt!55529)) (= (_1!1199 (h!2198 (toList!786 lt!55529))) (_1!1199 (tuple2!2377 lt!55312 lt!55307)))))))

(assert (=> d!30795 (= (getValueByKey!158 (toList!786 lt!55529) (_1!1199 (tuple2!2377 lt!55312 lt!55307))) e!71228)))

(declare-fun b!109515 () Bool)

(assert (=> b!109515 (= e!71228 e!71229)))

(declare-fun c!19377 () Bool)

(assert (=> b!109515 (= c!19377 (and ((_ is Cons!1600) (toList!786 lt!55529)) (not (= (_1!1199 (h!2198 (toList!786 lt!55529))) (_1!1199 (tuple2!2377 lt!55312 lt!55307))))))))

(assert (= (and d!30795 c!19376) b!109514))

(assert (= (and d!30795 (not c!19376)) b!109515))

(assert (= (and b!109515 c!19377) b!109516))

(assert (= (and b!109515 (not c!19377)) b!109517))

(declare-fun m!124059 () Bool)

(assert (=> b!109516 m!124059))

(assert (=> b!108116 d!30795))

(declare-fun b!109521 () Bool)

(declare-fun e!71231 () Option!164)

(assert (=> b!109521 (= e!71231 None!162)))

(declare-fun b!109520 () Bool)

(assert (=> b!109520 (= e!71231 (getValueByKey!158 (t!5712 (toList!786 lt!55598)) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109518 () Bool)

(declare-fun e!71230 () Option!164)

(assert (=> b!109518 (= e!71230 (Some!163 (_2!1199 (h!2198 (toList!786 lt!55598)))))))

(declare-fun d!30797 () Bool)

(declare-fun c!19378 () Bool)

(assert (=> d!30797 (= c!19378 (and ((_ is Cons!1600) (toList!786 lt!55598)) (= (_1!1199 (h!2198 (toList!786 lt!55598))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30797 (= (getValueByKey!158 (toList!786 lt!55598) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))) e!71230)))

(declare-fun b!109519 () Bool)

(assert (=> b!109519 (= e!71230 e!71231)))

(declare-fun c!19379 () Bool)

(assert (=> b!109519 (= c!19379 (and ((_ is Cons!1600) (toList!786 lt!55598)) (not (= (_1!1199 (h!2198 (toList!786 lt!55598))) (_1!1199 (tuple2!2377 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30797 c!19378) b!109518))

(assert (= (and d!30797 (not c!19378)) b!109519))

(assert (= (and b!109519 c!19379) b!109520))

(assert (= (and b!109519 (not c!19379)) b!109521))

(declare-fun m!124061 () Bool)

(assert (=> b!109520 m!124061))

(assert (=> b!108232 d!30797))

(declare-fun d!30799 () Bool)

(declare-fun res!54221 () Bool)

(declare-fun e!71232 () Bool)

(assert (=> d!30799 (=> res!54221 e!71232)))

(assert (=> d!30799 (= res!54221 (and ((_ is Cons!1600) (toList!786 lt!55384)) (= (_1!1199 (h!2198 (toList!786 lt!55384))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30799 (= (containsKey!161 (toList!786 lt!55384) #b0000000000000000000000000000000000000000000000000000000000000000) e!71232)))

(declare-fun b!109522 () Bool)

(declare-fun e!71233 () Bool)

(assert (=> b!109522 (= e!71232 e!71233)))

(declare-fun res!54222 () Bool)

(assert (=> b!109522 (=> (not res!54222) (not e!71233))))

(assert (=> b!109522 (= res!54222 (and (or (not ((_ is Cons!1600) (toList!786 lt!55384))) (bvsle (_1!1199 (h!2198 (toList!786 lt!55384))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1600) (toList!786 lt!55384)) (bvslt (_1!1199 (h!2198 (toList!786 lt!55384))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109523 () Bool)

(assert (=> b!109523 (= e!71233 (containsKey!161 (t!5712 (toList!786 lt!55384)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30799 (not res!54221)) b!109522))

(assert (= (and b!109522 res!54222) b!109523))

(declare-fun m!124063 () Bool)

(assert (=> b!109523 m!124063))

(assert (=> d!29901 d!30799))

(declare-fun d!30801 () Bool)

(declare-fun e!71234 () Bool)

(assert (=> d!30801 e!71234))

(declare-fun res!54223 () Bool)

(assert (=> d!30801 (=> res!54223 e!71234)))

(declare-fun lt!56331 () Bool)

(assert (=> d!30801 (= res!54223 (not lt!56331))))

(declare-fun lt!56334 () Bool)

(assert (=> d!30801 (= lt!56331 lt!56334)))

(declare-fun lt!56333 () Unit!3301)

(declare-fun e!71235 () Unit!3301)

(assert (=> d!30801 (= lt!56333 e!71235)))

(declare-fun c!19380 () Bool)

(assert (=> d!30801 (= c!19380 lt!56334)))

(assert (=> d!30801 (= lt!56334 (containsKey!161 (toList!786 lt!55410) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30801 (= (contains!820 lt!55410 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56331)))

(declare-fun b!109524 () Bool)

(declare-fun lt!56332 () Unit!3301)

(assert (=> b!109524 (= e!71235 lt!56332)))

(assert (=> b!109524 (= lt!56332 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!786 lt!55410) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109524 (isDefined!110 (getValueByKey!158 (toList!786 lt!55410) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109525 () Bool)

(declare-fun Unit!3381 () Unit!3301)

(assert (=> b!109525 (= e!71235 Unit!3381)))

(declare-fun b!109526 () Bool)

(assert (=> b!109526 (= e!71234 (isDefined!110 (getValueByKey!158 (toList!786 lt!55410) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30801 c!19380) b!109524))

(assert (= (and d!30801 (not c!19380)) b!109525))

(assert (= (and d!30801 (not res!54223)) b!109526))

(declare-fun m!124065 () Bool)

(assert (=> d!30801 m!124065))

(declare-fun m!124067 () Bool)

(assert (=> b!109524 m!124067))

(assert (=> b!109524 m!122187))

(assert (=> b!109524 m!122187))

(declare-fun m!124069 () Bool)

(assert (=> b!109524 m!124069))

(assert (=> b!109526 m!122187))

(assert (=> b!109526 m!122187))

(assert (=> b!109526 m!124069))

(assert (=> bm!11429 d!30801))

(declare-fun d!30803 () Bool)

(assert (=> d!30803 (= (get!1350 (getValueByKey!158 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2920 (getValueByKey!158 (toList!786 lt!55384) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30033 d!30803))

(assert (=> d!30033 d!30303))

(declare-fun condMapEmpty!3987 () Bool)

(declare-fun mapDefault!3987 () ValueCell!1001)

(assert (=> mapNonEmpty!3986 (= condMapEmpty!3987 (= mapRest!3986 ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3987)))))

(declare-fun e!71237 () Bool)

(declare-fun mapRes!3987 () Bool)

(assert (=> mapNonEmpty!3986 (= tp!9998 (and e!71237 mapRes!3987))))

(declare-fun b!109528 () Bool)

(assert (=> b!109528 (= e!71237 tp_is_empty!2689)))

(declare-fun b!109527 () Bool)

(declare-fun e!71236 () Bool)

(assert (=> b!109527 (= e!71236 tp_is_empty!2689)))

(declare-fun mapIsEmpty!3987 () Bool)

(assert (=> mapIsEmpty!3987 mapRes!3987))

(declare-fun mapNonEmpty!3987 () Bool)

(declare-fun tp!9999 () Bool)

(assert (=> mapNonEmpty!3987 (= mapRes!3987 (and tp!9999 e!71236))))

(declare-fun mapKey!3987 () (_ BitVec 32))

(declare-fun mapRest!3987 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapValue!3987 () ValueCell!1001)

(assert (=> mapNonEmpty!3987 (= mapRest!3986 (store mapRest!3987 mapKey!3987 mapValue!3987))))

(assert (= (and mapNonEmpty!3986 condMapEmpty!3987) mapIsEmpty!3987))

(assert (= (and mapNonEmpty!3986 (not condMapEmpty!3987)) mapNonEmpty!3987))

(assert (= (and mapNonEmpty!3987 ((_ is ValueCellFull!1001) mapValue!3987)) b!109527))

(assert (= (and mapNonEmpty!3986 ((_ is ValueCellFull!1001) mapDefault!3987)) b!109528))

(declare-fun m!124071 () Bool)

(assert (=> mapNonEmpty!3987 m!124071))

(declare-fun condMapEmpty!3988 () Bool)

(declare-fun mapDefault!3988 () ValueCell!1001)

(assert (=> mapNonEmpty!3985 (= condMapEmpty!3988 (= mapRest!3985 ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3988)))))

(declare-fun e!71239 () Bool)

(declare-fun mapRes!3988 () Bool)

(assert (=> mapNonEmpty!3985 (= tp!9997 (and e!71239 mapRes!3988))))

(declare-fun b!109530 () Bool)

(assert (=> b!109530 (= e!71239 tp_is_empty!2689)))

(declare-fun b!109529 () Bool)

(declare-fun e!71238 () Bool)

(assert (=> b!109529 (= e!71238 tp_is_empty!2689)))

(declare-fun mapIsEmpty!3988 () Bool)

(assert (=> mapIsEmpty!3988 mapRes!3988))

(declare-fun mapNonEmpty!3988 () Bool)

(declare-fun tp!10000 () Bool)

(assert (=> mapNonEmpty!3988 (= mapRes!3988 (and tp!10000 e!71238))))

(declare-fun mapValue!3988 () ValueCell!1001)

(declare-fun mapRest!3988 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapKey!3988 () (_ BitVec 32))

(assert (=> mapNonEmpty!3988 (= mapRest!3985 (store mapRest!3988 mapKey!3988 mapValue!3988))))

(assert (= (and mapNonEmpty!3985 condMapEmpty!3988) mapIsEmpty!3988))

(assert (= (and mapNonEmpty!3985 (not condMapEmpty!3988)) mapNonEmpty!3988))

(assert (= (and mapNonEmpty!3988 ((_ is ValueCellFull!1001) mapValue!3988)) b!109529))

(assert (= (and mapNonEmpty!3985 ((_ is ValueCellFull!1001) mapDefault!3988)) b!109530))

(declare-fun m!124073 () Bool)

(assert (=> mapNonEmpty!3988 m!124073))

(declare-fun b_lambda!4885 () Bool)

(assert (= b_lambda!4867 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4885)))

(declare-fun b_lambda!4887 () Bool)

(assert (= b_lambda!4871 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4887)))

(declare-fun b_lambda!4889 () Bool)

(assert (= b_lambda!4855 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4889)))

(declare-fun b_lambda!4891 () Bool)

(assert (= b_lambda!4861 (or (and b!107466 b_free!2545) (and b!107471 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))))) b_lambda!4891)))

(declare-fun b_lambda!4893 () Bool)

(assert (= b_lambda!4881 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4893)))

(declare-fun b_lambda!4895 () Bool)

(assert (= b_lambda!4879 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4895)))

(declare-fun b_lambda!4897 () Bool)

(assert (= b_lambda!4869 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4897)))

(declare-fun b_lambda!4899 () Bool)

(assert (= b_lambda!4863 (or (and b!107466 b_free!2545) (and b!107471 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))))) b_lambda!4899)))

(declare-fun b_lambda!4901 () Bool)

(assert (= b_lambda!4857 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4901)))

(declare-fun b_lambda!4903 () Bool)

(assert (= b_lambda!4877 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4903)))

(declare-fun b_lambda!4905 () Bool)

(assert (= b_lambda!4873 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4905)))

(declare-fun b_lambda!4907 () Bool)

(assert (= b_lambda!4875 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4907)))

(declare-fun b_lambda!4909 () Bool)

(assert (= b_lambda!4883 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4909)))

(declare-fun b_lambda!4911 () Bool)

(assert (= b_lambda!4859 (or (and b!107466 b_free!2545 (= (defaultEntry!2605 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107471 b_free!2547) b_lambda!4911)))

(check-sat (not b!108468) (not b!108871) (not bm!11525) (not b!108893) (not bm!11522) (not d!30235) (not b!109054) (not b!109219) (not b!108518) (not d!30619) (not b!109076) (not b!109455) (not d!30169) (not b!109470) (not bm!11540) (not b!108590) (not d!30437) (not b!108452) (not b_next!2545) (not d!30369) (not b!108567) (not b!108861) (not b!108588) (not b!108873) (not d!30765) (not d!30321) (not b!109406) (not d!30119) (not d!30735) (not d!30263) (not d!30519) (not d!30309) (not d!30655) (not b!108425) (not b!108743) (not d!30565) (not d!30613) (not bm!11554) (not b!109359) (not b!108829) (not d!30215) (not b!108381) (not b!109296) (not b!109440) (not d!30301) (not b!108949) (not b!109016) (not b!109346) (not b!109260) (not d!30135) (not b!108762) (not d!30087) (not b!109413) (not b!109098) (not b!109036) (not bm!11603) (not b!109410) (not b!108392) (not b!109214) (not b!108867) (not b!109143) (not b!109491) (not d!30677) (not b!109100) (not bm!11572) (not b!108918) (not b!109136) (not b!109064) (not b!109389) (not b!109093) (not d!30387) (not d!30745) (not b!109424) (not bm!11594) (not bm!11514) (not b!109240) (not b!108733) (not b!108906) (not d!30077) (not b!109295) (not d!30623) (not b!109017) (not b!109199) (not b!109204) (not b!108428) (not bm!11574) (not b!108931) (not d!30731) (not b!108632) (not bm!11615) (not b!108592) (not b!109417) (not b!108883) (not bm!11590) (not bm!11543) (not b!109408) (not b_lambda!4899) (not b!108562) (not b!108902) (not d!30219) (not d!30499) (not b!108969) (not b!109264) (not d!30151) (not b!108471) (not d!30249) (not b!109209) (not d!30051) (not d!30729) (not b!109238) (not b!108660) (not b!109509) (not b!109427) (not b!109002) (not b!109038) (not b!108647) (not b!109249) (not d!30317) (not b!108821) (not b_lambda!4821) (not d!30465) (not b!108662) (not b!108769) (not b!108899) (not b!108912) (not b!108890) (not bm!11555) (not b!108670) (not d!30199) (not b!109332) (not b!108753) (not bm!11506) (not b!108699) (not b!109037) (not b!108447) (not d!30635) (not b!109267) (not d!30697) (not b!108412) (not b_lambda!4893) (not bm!11552) (not d!30705) (not b_lambda!4833) (not b!108464) (not b!108789) (not b!109192) (not d!30525) (not d!30345) (not b!109462) (not b!109351) (not b!108681) (not b!109316) (not d!30549) (not bm!11527) (not b!108806) (not b!108880) (not b!108406) (not b!108868) (not d!30143) (not b!109428) (not b_lambda!4853) (not d!30427) (not b!108941) (not b_lambda!4901) (not b!108443) (not d!30347) (not b!108510) (not d!30675) (not b!109275) (not b!108879) (not d!30659) (not d!30751) (not bm!11538) (not b!109189) (not d!30477) (not b!109474) (not d!30475) (not d!30247) (not b!108793) (not b!109055) (not b!108569) (not b!108825) (not bm!11519) (not d!30755) (not d!30585) (not d!30335) (not b_lambda!4885) (not b!108746) (not b!109523) (not b!108668) (not b!109152) (not d!30415) (not d!30357) (not bm!11575) (not d!30631) (not b!109118) (not b!108898) (not b!109022) (not b!109188) (not d!30195) (not bm!11570) (not d!30093) (not d!30261) (not d!30727) (not b!108584) (not b!108395) (not d!30683) (not d!30241) (not b!108436) (not d!30511) (not d!30747) (not b!109353) (not b!108616) (not b!108387) (not b!108965) (not d!30225) (not b!109289) (not b!108779) (not b!108697) (not d!30733) (not b!109000) (not b!109306) (not b!108963) (not b!108810) (not b!109096) (not b!108845) (not b!109112) (not d!30673) (not b!108582) (not b!109161) (not d!30255) (not b_lambda!4911) (not b!108383) (not b!108910) (not b!108704) (not b!108775) (not b!109414) (not b!108776) (not d!30411) (not d!30561) (not bm!11619) (not b!108620) (not b!108860) (not d!30551) (not b!109341) (not d!30063) (not b!109113) (not d!30463) (not bm!11598) (not b!108900) (not b!109074) (not b!109386) (not d!30245) (not b!108722) (not b!108951) (not b!108550) (not d!30131) (not b!109343) (not b!109298) (not d!30171) (not b!108389) (not b!109377) (not d!30495) (not b!109137) (not b!109167) (not d!30257) (not b!108980) (not b!109081) (not b!109242) (not bm!11501) (not b!109511) (not d!30403) (not bm!11513) (not b!108780) (not b_lambda!4845) (not bm!11611) (not d!30577) (not b!108865) (not bm!11548) (not b!108577) (not bm!11529) (not d!30791) (not b!109481) (not b!108553) (not b!108558) (not d!30165) (not b!108933) (not d!30395) (not b!109286) (not d!30383) (not bm!11504) (not b!109456) (not d!30363) (not b!108858) (not b!109132) (not bm!11565) (not d!30591) (not d!30593) (not bm!11567) (not d!30509) (not d!30479) (not b!109108) (not b!109070) b_and!6741 (not b!109451) (not d!30759) (not d!30305) (not d!30097) (not b!108946) (not b!108811) (not b!108875) (not b!109024) (not d!30141) (not d!30109) (not b!109141) (not d!30447) (not b!108838) (not b!108921) (not b!108766) (not b!108830) (not b!108411) (not b!108945) (not b!109121) (not b!109105) (not b!109373) (not b!109125) (not d!30181) (not b!109014) (not d!30701) (not d!30173) (not d!30493) (not b!108878) (not d!30251) (not b!108459) (not b!109327) (not d!30553) (not b!108543) (not b!108728) (not d!30145) (not d!30329) (not b!108575) (not b!108801) (not d!30625) (not b!109269) (not b!108702) (not d!30279) (not d!30155) (not b!108715) (not d!30089) (not d!30207) (not b!109399) (not b!109165) (not d!30719) (not b!108959) (not b!108972) (not b!109126) (not d!30125) (not b!109095) (not b!108828) (not b!109433) (not b!109431) (not b!108983) (not b!109011) b_and!6743 (not b!109049) (not d!30423) (not d!30047) (not b!108804) (not b!108904) (not bm!11617) (not b!109191) (not b!109365) (not d!30763) (not d!30213) (not d!30471) (not d!30707) (not b!108696) (not b!108402) (not bm!11563) (not bm!11609) (not b!109261) (not d!30715) (not bm!11587) (not b!109180) (not d!30595) (not b!109048) (not d!30513) (not b!108598) (not b!108718) (not b_lambda!4895) (not b!109174) (not d!30101) (not b!109206) (not d!30269) (not b!108570) (not b!109505) (not d!30179) (not b!108778) (not b!109278) (not b!109116) (not b!108422) (not b!108925) (not b!108798) (not b!108665) (not b_lambda!4829) (not d!30285) (not d!30527) (not b!108817) (not b!109129) (not d!30201) (not bm!11581) (not d!30391) (not b!108756) (not b!108813) (not b!108978) (not b!109062) (not b!109322) (not b!108448) (not d!30167) (not b!108836) (not b!108512) (not b!108441) (not bm!11606) (not b!108849) (not b!109182) (not b!108742) (not d!30555) (not d!30133) (not d!30353) (not b!108439) (not b!108943) (not d!30401) (not b!108991) (not d!30505) (not bm!11500) (not b!108939) (not b!108689) (not d!30573) (not b!108397) (not d!30669) (not b!108774) (not b!108966) (not b!108467) (not d!30177) (not b!109087) (not d!30441) (not bm!11507) (not d!30071) (not b!108763) (not d!30085) (not b!109304) (not d!30361) (not b!109380) (not bm!11516) (not b!108405) (not d!30429) (not d!30053) (not b!108678) (not b!109148) (not b!109050) (not b!109490) (not d!30467) (not b_lambda!4865) (not b!109158) (not d!30757) (not d!30319) (not b!109303) (not b!108864) (not bm!11584) (not b!108710) (not b!109114) (not b!109516) (not b!109221) (not b!109063) (not b!109151) (not b!108915) (not d!30645) (not b!108594) (not b!109370) (not b!108663) (not b!108869) (not d!30599) (not b!108717) (not b_lambda!4847) (not b!108885) (not b!108876) (not b!108723) (not bm!11577) (not d!30293) (not d!30355) (not b!109029) (not b!108731) (not d!30397) (not b!108986) (not d!30793) (not b!109281) (not d!30557) (not d!30389) (not b!109254) (not d!30371) (not b!108760) (not b!109284) (not d!30769) (not b!108585) (not bm!11596) (not b!109501) (not bm!11612) (not b!109032) (not b_next!2547) (not bm!11602) (not bm!11610) (not b!109019) (not b!108640) (not b!109140) (not b!109065) (not b!108687) (not b!109485) (not bm!11541) (not b!108791) (not b!109384) (not b!108384) (not d!30693) (not b!109356) (not d!30773) (not d!30259) (not bm!11556) (not b!109513) (not b!109363) (not bm!11532) (not d!30605) (not b!108645) (not b!109178) (not d!30231) (not b!108417) (not b!109496) (not b!108654) (not d!30487) (not d!30489) (not b!108637) (not b!109040) (not b!108572) (not b!108757) (not d!30399) (not b!109035) (not b!109058) (not d!30191) (not b!109325) (not b!108474) (not d!30737) (not d!30253) (not b!108679) (not b!109102) (not b!109244) (not b!108634) (not d!30723) (not d!30237) (not b!108886) (not b!108833) (not b!108960) (not b_lambda!4907) (not b!108974) (not d!30483) (not b!109453) (not b!108595) (not b!108942) (not b_lambda!4851) (not b!108713) (not b!109360) (not b!108938) (not b!109337) (not b!109134) (not d!30127) (not b!109466) (not b!109194) (not bm!11600) (not d!30331) (not b!108378) (not b!108390) (not b!108862) (not d!30041) (not b!108454) (not b!108473) (not b_lambda!4831) (not d!30349) (not d!30367) (not b!109257) (not b!109379) (not b!109043) (not d!30323) (not d!30359) (not b!109207) (not b!108944) (not d!30373) (not d!30343) (not bm!11498) (not bm!11545) (not b_lambda!4887) (not b!109047) (not b!108772) (not b_lambda!4897) (not b!109004) (not d!30689) (not bm!11495) (not d!30239) (not b!108891) (not b!109339) (not b!109319) (not b!109201) (not b!108799) (not b!109434) (not d!30365) (not b!108624) (not mapNonEmpty!3987) (not d!30679) (not b!109484) (not d!30589) (not d!30575) (not bm!11499) (not b_lambda!4891) (not b!108416) (not b!109311) (not b!108738) (not b!109006) (not b!109247) (not b_lambda!4903) (not b!109348) (not bm!11558) (not b!108507) (not b!108856) (not b!109498) (not b!108796) (not d!30233) (not b!108556) (not d!30405) (not d!30147) (not d!30223) (not b!108621) (not d!30161) (not d!30667) (not d!30461) (not b!109110) (not b!109184) (not b!108655) (not d!30273) (not d!30095) (not b!108457) (not b!109082) (not b!108894) tp_is_empty!2689 (not d!30229) (not d!30121) (not b!108988) (not b!109526) (not b!109358) (not bm!11539) (not d!30061) (not d!30545) (not b!109235) (not b!109330) (not b!108445) (not b_lambda!4909) (not b!108907) (not d!30775) (not b!108515) (not b!108551) (not d!30409) (not b!109520) (not b!108841) (not b!108783) (not d!30597) (not b!108386) (not b!109146) (not b!109419) (not b!108781) (not d!30341) (not b!108432) (not b!109155) (not b!109229) (not b!109084) (not mapNonEmpty!3988) (not b!109009) (not bm!11536) (not b!108631) (not b!109391) (not d!30587) (not b_lambda!4849) (not b!109317) (not bm!11597) (not b!109231) (not b!108897) (not d!30781) (not b!108619) (not b!108866) (not b!108509) (not b!109403) (not b!109488) (not d!30661) (not b!108730) (not b!108773) (not b!108442) (not b!108896) (not b!109073) (not b!108419) (not b!109459) (not b!108440) (not b!108548) (not d!30633) (not bm!11618) (not d!30351) (not d!30337) (not d!30647) (not b!109226) (not b!108712) (not b!109060) (not d!30113) (not bm!11508) (not d!30685) (not b!109494) (not b!108956) (not b!109476) (not bm!11568) (not b!109374) (not b!108691) (not b!109350) (not b!108676) (not b!109324) (not d!30801) (not d!30481) (not b!108694) (not b!108725) (not d!30777) (not b!109052) (not d!30333) (not b!108564) (not d!30203) (not b!108997) (not b!108765) (not b!108985) (not b!109233) (not b!109524) (not b!108545) (not d!30227) (not b!109197) (not b!108409) (not bm!11561) (not b!108786) (not b!109163) (not d!30469) (not b!108415) (not b!108481) (not d!30217) (not d!30111) (not d!30459) (not b!109008) (not b!108657) (not d!30243) (not d!30473) (not b!108414) (not bm!11608) (not b!108642) (not b!109301) (not b!108901) (not b!108993) (not bm!11573) (not d!30457) (not b_lambda!4889) (not b!109467) (not b!108998) (not b!108675) (not b!108768) (not d!30703) (not b!109291) (not b!109382) (not b!108736) (not b_lambda!4905) (not d!30065) (not d!30609) (not d!30209) (not d!30417) (not b!108863) (not b!108874) (not b!108478) (not d!30267) (not b!109276) (not d!30607) (not b!108892) (not b!109309) (not b!109355) (not d!30503) (not b!108748) (not b!109450) (not b!108451) (not b!109079) (not b!109468) (not b!109212) (not d!30439) (not bm!11579) (not b!108770) (not d!30455) (not d!30699) (not b!108421) (not b!109283) (not b!109059) (not d!30117) (not d!30665) (not b!109186) (not b!108652) (not b!108720) (not bm!11497) (not bm!11546) (not d!30137) (not d!30327) (not b!108928) (not d!30501) (not b!109396) (not b!109089) (not b!108639) (not b!109056) (not b!108785) (not b!109138) (not b!108684) (not b!109170) (not b!109176) (not b!109145))
(check-sat b_and!6741 b_and!6743 (not b_next!2545) (not b_next!2547))
