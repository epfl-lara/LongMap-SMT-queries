; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12522 () Bool)

(assert start!12522)

(declare-fun b!107369 () Bool)

(declare-fun b_free!2545 () Bool)

(declare-fun b_next!2545 () Bool)

(assert (=> b!107369 (= b_free!2545 (not b_next!2545))))

(declare-fun tp!9967 () Bool)

(declare-fun b_and!6609 () Bool)

(assert (=> b!107369 (= tp!9967 b_and!6609)))

(declare-fun b!107358 () Bool)

(declare-fun b_free!2547 () Bool)

(declare-fun b_next!2547 () Bool)

(assert (=> b!107358 (= b_free!2547 (not b_next!2547))))

(declare-fun tp!9968 () Bool)

(declare-fun b_and!6611 () Bool)

(assert (=> b!107358 (= tp!9968 b_and!6611)))

(declare-fun b!107350 () Bool)

(declare-datatypes ((Unit!3307 0))(
  ( (Unit!3308) )
))
(declare-fun e!69879 () Unit!3307)

(declare-fun Unit!3309 () Unit!3307)

(assert (=> b!107350 (= e!69879 Unit!3309)))

(declare-fun b!107351 () Bool)

(declare-fun e!69890 () Bool)

(declare-fun tp_is_empty!2689 () Bool)

(assert (=> b!107351 (= e!69890 tp_is_empty!2689)))

(declare-fun b!107352 () Bool)

(declare-fun e!69881 () Bool)

(declare-fun e!69885 () Bool)

(assert (=> b!107352 (= e!69881 e!69885)))

(declare-fun b!107353 () Bool)

(declare-fun Unit!3310 () Unit!3307)

(assert (=> b!107353 (= e!69879 Unit!3310)))

(declare-fun lt!54987 () Unit!3307)

(declare-datatypes ((V!3233 0))(
  ( (V!3234 (val!1389 Int)) )
))
(declare-datatypes ((array!4351 0))(
  ( (array!4352 (arr!2062 (Array (_ BitVec 32) (_ BitVec 64))) (size!2319 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1001 0))(
  ( (ValueCellFull!1001 (v!2903 V!3233)) (EmptyCell!1001) )
))
(declare-datatypes ((array!4353 0))(
  ( (array!4354 (arr!2063 (Array (_ BitVec 32) ValueCell!1001)) (size!2320 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!910 0))(
  ( (LongMapFixedSize!911 (defaultEntry!2605 Int) (mask!6762 (_ BitVec 32)) (extraKeys!2406 (_ BitVec 32)) (zeroValue!2478 V!3233) (minValue!2478 V!3233) (_size!504 (_ BitVec 32)) (_keys!4314 array!4351) (_values!2588 array!4353) (_vacant!504 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!698 0))(
  ( (Cell!699 (v!2904 LongMapFixedSize!910)) )
))
(declare-datatypes ((LongMap!698 0))(
  ( (LongMap!699 (underlying!360 Cell!698)) )
))
(declare-fun thiss!992 () LongMap!698)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lemmaListMapContainsThenArrayContainsFrom!113 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) (_ BitVec 32) Int) Unit!3307)

(assert (=> b!107353 (= lt!54987 (lemmaListMapContainsThenArrayContainsFrom!113 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4351 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!107353 (arrayContainsKey!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!54986 () Unit!3307)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4351 (_ BitVec 32) (_ BitVec 32)) Unit!3307)

(assert (=> b!107353 (= lt!54986 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1622 0))(
  ( (Nil!1619) (Cons!1618 (h!2216 (_ BitVec 64)) (t!5729 List!1622)) )
))
(declare-fun arrayNoDuplicates!0 (array!4351 (_ BitVec 32) List!1622) Bool)

(assert (=> b!107353 (arrayNoDuplicates!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) from!355 Nil!1619)))

(declare-fun lt!54984 () Unit!3307)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4351 (_ BitVec 32) (_ BitVec 64) List!1622) Unit!3307)

(assert (=> b!107353 (= lt!54984 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619)))))

(assert (=> b!107353 false))

(declare-fun mapNonEmpty!3967 () Bool)

(declare-fun mapRes!3968 () Bool)

(declare-fun tp!9966 () Bool)

(declare-fun e!69894 () Bool)

(assert (=> mapNonEmpty!3967 (= mapRes!3968 (and tp!9966 e!69894))))

(declare-fun mapValue!3968 () ValueCell!1001)

(declare-fun newMap!16 () LongMapFixedSize!910)

(declare-fun mapKey!3967 () (_ BitVec 32))

(declare-fun mapRest!3967 () (Array (_ BitVec 32) ValueCell!1001))

(assert (=> mapNonEmpty!3967 (= (arr!2063 (_values!2588 newMap!16)) (store mapRest!3967 mapKey!3967 mapValue!3968))))

(declare-fun res!53292 () Bool)

(declare-fun e!69886 () Bool)

(assert (=> start!12522 (=> (not res!53292) (not e!69886))))

(declare-fun valid!427 (LongMap!698) Bool)

(assert (=> start!12522 (= res!53292 (valid!427 thiss!992))))

(assert (=> start!12522 e!69886))

(declare-fun e!69887 () Bool)

(assert (=> start!12522 e!69887))

(assert (=> start!12522 true))

(declare-fun e!69893 () Bool)

(assert (=> start!12522 e!69893))

(declare-fun b!107354 () Bool)

(declare-fun e!69884 () Bool)

(assert (=> b!107354 (= e!69884 (or (not (= (size!2320 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6762 (v!2904 (underlying!360 thiss!992)))))) (not (= (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (size!2320 (_values!2588 (v!2904 (underlying!360 thiss!992)))))) (bvslt (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun mapIsEmpty!3967 () Bool)

(assert (=> mapIsEmpty!3967 mapRes!3968))

(declare-fun b!107355 () Bool)

(declare-fun e!69891 () Bool)

(declare-fun e!69892 () Bool)

(assert (=> b!107355 (= e!69891 e!69892)))

(declare-fun res!53293 () Bool)

(assert (=> b!107355 (=> (not res!53293) (not e!69892))))

(declare-datatypes ((tuple2!2390 0))(
  ( (tuple2!2391 (_1!1206 Bool) (_2!1206 LongMapFixedSize!910)) )
))
(declare-fun lt!54983 () tuple2!2390)

(assert (=> b!107355 (= res!53293 (and (_1!1206 lt!54983) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!54980 () Unit!3307)

(assert (=> b!107355 (= lt!54980 e!69879)))

(declare-fun c!18808 () Bool)

(declare-datatypes ((tuple2!2392 0))(
  ( (tuple2!2393 (_1!1207 (_ BitVec 64)) (_2!1207 V!3233)) )
))
(declare-datatypes ((List!1623 0))(
  ( (Nil!1620) (Cons!1619 (h!2217 tuple2!2392) (t!5730 List!1623)) )
))
(declare-datatypes ((ListLongMap!1549 0))(
  ( (ListLongMap!1550 (toList!790 List!1623)) )
))
(declare-fun lt!54978 () ListLongMap!1549)

(declare-fun contains!824 (ListLongMap!1549 (_ BitVec 64)) Bool)

(assert (=> b!107355 (= c!18808 (contains!824 lt!54978 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun lt!54982 () V!3233)

(declare-fun update!161 (LongMapFixedSize!910 (_ BitVec 64) V!3233) tuple2!2390)

(assert (=> b!107355 (= lt!54983 (update!161 newMap!16 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))

(declare-fun b!107356 () Bool)

(declare-fun e!69895 () Bool)

(assert (=> b!107356 (= e!69895 e!69891)))

(declare-fun res!53295 () Bool)

(assert (=> b!107356 (=> (not res!53295) (not e!69891))))

(assert (=> b!107356 (= res!53295 (and (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1341 (ValueCell!1001 V!3233) V!3233)

(declare-fun dynLambda!386 (Int (_ BitVec 64)) V!3233)

(assert (=> b!107356 (= lt!54982 (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) from!355) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107357 () Bool)

(declare-fun e!69883 () Bool)

(declare-fun e!69888 () Bool)

(assert (=> b!107357 (= e!69883 (and e!69888 mapRes!3968))))

(declare-fun condMapEmpty!3968 () Bool)

(declare-fun mapDefault!3967 () ValueCell!1001)

(assert (=> b!107357 (= condMapEmpty!3968 (= (arr!2063 (_values!2588 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3967)))))

(declare-fun mapNonEmpty!3968 () Bool)

(declare-fun mapRes!3967 () Bool)

(declare-fun tp!9965 () Bool)

(assert (=> mapNonEmpty!3968 (= mapRes!3967 (and tp!9965 e!69890))))

(declare-fun mapRest!3968 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapKey!3968 () (_ BitVec 32))

(declare-fun mapValue!3967 () ValueCell!1001)

(assert (=> mapNonEmpty!3968 (= (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (store mapRest!3968 mapKey!3968 mapValue!3967))))

(declare-fun array_inv!1301 (array!4351) Bool)

(declare-fun array_inv!1302 (array!4353) Bool)

(assert (=> b!107358 (= e!69893 (and tp!9968 tp_is_empty!2689 (array_inv!1301 (_keys!4314 newMap!16)) (array_inv!1302 (_values!2588 newMap!16)) e!69883))))

(declare-fun b!107359 () Bool)

(assert (=> b!107359 (= e!69892 (not e!69884))))

(declare-fun res!53291 () Bool)

(assert (=> b!107359 (=> res!53291 e!69884)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!107359 (= res!53291 (not (validMask!0 (mask!6762 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun lt!54981 () ListLongMap!1549)

(declare-fun lt!54977 () tuple2!2392)

(declare-fun lt!54985 () tuple2!2392)

(declare-fun +!137 (ListLongMap!1549 tuple2!2392) ListLongMap!1549)

(assert (=> b!107359 (= (+!137 (+!137 lt!54981 lt!54977) lt!54985) (+!137 (+!137 lt!54981 lt!54985) lt!54977))))

(assert (=> b!107359 (= lt!54985 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))

(assert (=> b!107359 (= lt!54977 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))

(declare-fun lt!54979 () Unit!3307)

(declare-fun addCommutativeForDiffKeys!49 (ListLongMap!1549 (_ BitVec 64) V!3233 (_ BitVec 64) V!3233) Unit!3307)

(assert (=> b!107359 (= lt!54979 (addCommutativeForDiffKeys!49 lt!54981 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!102 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) Int) ListLongMap!1549)

(assert (=> b!107359 (= lt!54981 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!107360 () Bool)

(assert (=> b!107360 (= e!69887 e!69881)))

(declare-fun b!107361 () Bool)

(declare-fun res!53289 () Bool)

(assert (=> b!107361 (=> (not res!53289) (not e!69886))))

(assert (=> b!107361 (= res!53289 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6762 newMap!16)) (_size!504 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!107362 () Bool)

(declare-fun res!53288 () Bool)

(assert (=> b!107362 (=> (not res!53288) (not e!69886))))

(assert (=> b!107362 (= res!53288 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!107363 () Bool)

(declare-fun e!69880 () Bool)

(assert (=> b!107363 (= e!69880 tp_is_empty!2689)))

(declare-fun b!107364 () Bool)

(declare-fun e!69882 () Bool)

(assert (=> b!107364 (= e!69882 (and e!69880 mapRes!3967))))

(declare-fun condMapEmpty!3967 () Bool)

(declare-fun mapDefault!3968 () ValueCell!1001)

(assert (=> b!107364 (= condMapEmpty!3967 (= (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3968)))))

(declare-fun b!107365 () Bool)

(declare-fun res!53290 () Bool)

(assert (=> b!107365 (=> (not res!53290) (not e!69886))))

(declare-fun valid!428 (LongMapFixedSize!910) Bool)

(assert (=> b!107365 (= res!53290 (valid!428 newMap!16))))

(declare-fun b!107366 () Bool)

(assert (=> b!107366 (= e!69894 tp_is_empty!2689)))

(declare-fun b!107367 () Bool)

(assert (=> b!107367 (= e!69886 e!69895)))

(declare-fun res!53294 () Bool)

(assert (=> b!107367 (=> (not res!53294) (not e!69895))))

(declare-fun lt!54976 () ListLongMap!1549)

(assert (=> b!107367 (= res!53294 (= lt!54976 lt!54978))))

(declare-fun map!1277 (LongMapFixedSize!910) ListLongMap!1549)

(assert (=> b!107367 (= lt!54978 (map!1277 newMap!16))))

(declare-fun getCurrentListMap!467 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) Int) ListLongMap!1549)

(assert (=> b!107367 (= lt!54976 (getCurrentListMap!467 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!107368 () Bool)

(assert (=> b!107368 (= e!69888 tp_is_empty!2689)))

(declare-fun mapIsEmpty!3968 () Bool)

(assert (=> mapIsEmpty!3968 mapRes!3967))

(assert (=> b!107369 (= e!69885 (and tp!9967 tp_is_empty!2689 (array_inv!1301 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (array_inv!1302 (_values!2588 (v!2904 (underlying!360 thiss!992)))) e!69882))))

(assert (= (and start!12522 res!53292) b!107362))

(assert (= (and b!107362 res!53288) b!107365))

(assert (= (and b!107365 res!53290) b!107361))

(assert (= (and b!107361 res!53289) b!107367))

(assert (= (and b!107367 res!53294) b!107356))

(assert (= (and b!107356 res!53295) b!107355))

(assert (= (and b!107355 c!18808) b!107353))

(assert (= (and b!107355 (not c!18808)) b!107350))

(assert (= (and b!107355 res!53293) b!107359))

(assert (= (and b!107359 (not res!53291)) b!107354))

(assert (= (and b!107364 condMapEmpty!3967) mapIsEmpty!3968))

(assert (= (and b!107364 (not condMapEmpty!3967)) mapNonEmpty!3968))

(get-info :version)

(assert (= (and mapNonEmpty!3968 ((_ is ValueCellFull!1001) mapValue!3967)) b!107351))

(assert (= (and b!107364 ((_ is ValueCellFull!1001) mapDefault!3968)) b!107363))

(assert (= b!107369 b!107364))

(assert (= b!107352 b!107369))

(assert (= b!107360 b!107352))

(assert (= start!12522 b!107360))

(assert (= (and b!107357 condMapEmpty!3968) mapIsEmpty!3967))

(assert (= (and b!107357 (not condMapEmpty!3968)) mapNonEmpty!3967))

(assert (= (and mapNonEmpty!3967 ((_ is ValueCellFull!1001) mapValue!3968)) b!107366))

(assert (= (and b!107357 ((_ is ValueCellFull!1001) mapDefault!3967)) b!107368))

(assert (= b!107358 b!107357))

(assert (= start!12522 b!107358))

(declare-fun b_lambda!4795 () Bool)

(assert (=> (not b_lambda!4795) (not b!107356)))

(declare-fun t!5726 () Bool)

(declare-fun tb!2073 () Bool)

(assert (=> (and b!107369 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))) t!5726) tb!2073))

(declare-fun result!3485 () Bool)

(assert (=> tb!2073 (= result!3485 tp_is_empty!2689)))

(assert (=> b!107356 t!5726))

(declare-fun b_and!6613 () Bool)

(assert (= b_and!6609 (and (=> t!5726 result!3485) b_and!6613)))

(declare-fun t!5728 () Bool)

(declare-fun tb!2075 () Bool)

(assert (=> (and b!107358 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))) t!5728) tb!2075))

(declare-fun result!3489 () Bool)

(assert (= result!3489 result!3485))

(assert (=> b!107356 t!5728))

(declare-fun b_and!6615 () Bool)

(assert (= b_and!6611 (and (=> t!5728 result!3489) b_and!6615)))

(declare-fun m!120371 () Bool)

(assert (=> b!107367 m!120371))

(declare-fun m!120373 () Bool)

(assert (=> b!107367 m!120373))

(declare-fun m!120375 () Bool)

(assert (=> b!107358 m!120375))

(declare-fun m!120377 () Bool)

(assert (=> b!107358 m!120377))

(declare-fun m!120379 () Bool)

(assert (=> b!107369 m!120379))

(declare-fun m!120381 () Bool)

(assert (=> b!107369 m!120381))

(declare-fun m!120383 () Bool)

(assert (=> start!12522 m!120383))

(declare-fun m!120385 () Bool)

(assert (=> b!107365 m!120385))

(declare-fun m!120387 () Bool)

(assert (=> b!107355 m!120387))

(assert (=> b!107355 m!120387))

(declare-fun m!120389 () Bool)

(assert (=> b!107355 m!120389))

(assert (=> b!107355 m!120387))

(declare-fun m!120391 () Bool)

(assert (=> b!107355 m!120391))

(declare-fun m!120393 () Bool)

(assert (=> mapNonEmpty!3967 m!120393))

(assert (=> b!107356 m!120387))

(declare-fun m!120395 () Bool)

(assert (=> b!107356 m!120395))

(declare-fun m!120397 () Bool)

(assert (=> b!107356 m!120397))

(assert (=> b!107356 m!120395))

(assert (=> b!107356 m!120397))

(declare-fun m!120399 () Bool)

(assert (=> b!107356 m!120399))

(declare-fun m!120401 () Bool)

(assert (=> b!107353 m!120401))

(declare-fun m!120403 () Bool)

(assert (=> b!107353 m!120403))

(assert (=> b!107353 m!120387))

(declare-fun m!120405 () Bool)

(assert (=> b!107353 m!120405))

(assert (=> b!107353 m!120387))

(assert (=> b!107353 m!120387))

(declare-fun m!120407 () Bool)

(assert (=> b!107353 m!120407))

(assert (=> b!107353 m!120387))

(declare-fun m!120409 () Bool)

(assert (=> b!107353 m!120409))

(declare-fun m!120411 () Bool)

(assert (=> b!107359 m!120411))

(declare-fun m!120413 () Bool)

(assert (=> b!107359 m!120413))

(declare-fun m!120415 () Bool)

(assert (=> b!107359 m!120415))

(declare-fun m!120417 () Bool)

(assert (=> b!107359 m!120417))

(assert (=> b!107359 m!120387))

(declare-fun m!120419 () Bool)

(assert (=> b!107359 m!120419))

(assert (=> b!107359 m!120415))

(declare-fun m!120421 () Bool)

(assert (=> b!107359 m!120421))

(assert (=> b!107359 m!120387))

(assert (=> b!107359 m!120411))

(declare-fun m!120423 () Bool)

(assert (=> b!107359 m!120423))

(declare-fun m!120425 () Bool)

(assert (=> mapNonEmpty!3968 m!120425))

(check-sat (not b!107367) b_and!6615 (not b!107355) (not mapNonEmpty!3968) b_and!6613 tp_is_empty!2689 (not b_next!2545) (not b!107358) (not b!107359) (not start!12522) (not b_next!2547) (not b!107356) (not mapNonEmpty!3967) (not b!107369) (not b!107353) (not b_lambda!4795) (not b!107365))
(check-sat b_and!6613 b_and!6615 (not b_next!2545) (not b_next!2547))
(get-model)

(declare-fun b_lambda!4801 () Bool)

(assert (= b_lambda!4795 (or (and b!107369 b_free!2545) (and b!107358 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))))) b_lambda!4801)))

(check-sat (not b!107367) b_and!6615 (not b!107355) (not mapNonEmpty!3968) b_and!6613 tp_is_empty!2689 (not b_lambda!4801) (not b_next!2545) (not b!107358) (not b!107365) (not b!107359) (not start!12522) (not b_next!2547) (not b!107356) (not mapNonEmpty!3967) (not b!107369) (not b!107353))
(check-sat b_and!6613 b_and!6615 (not b_next!2545) (not b_next!2547))
(get-model)

(declare-fun d!29681 () Bool)

(assert (=> d!29681 (= (array_inv!1301 (_keys!4314 newMap!16)) (bvsge (size!2319 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!107358 d!29681))

(declare-fun d!29683 () Bool)

(assert (=> d!29683 (= (array_inv!1302 (_values!2588 newMap!16)) (bvsge (size!2320 (_values!2588 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!107358 d!29683))

(declare-fun d!29685 () Bool)

(assert (=> d!29685 (= (map!1277 newMap!16) (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun bs!4408 () Bool)

(assert (= bs!4408 d!29685))

(declare-fun m!120539 () Bool)

(assert (=> bs!4408 m!120539))

(assert (=> b!107367 d!29685))

(declare-fun b!107538 () Bool)

(declare-fun e!70041 () Unit!3307)

(declare-fun Unit!3316 () Unit!3307)

(assert (=> b!107538 (= e!70041 Unit!3316)))

(declare-fun e!70042 () Bool)

(declare-fun b!107539 () Bool)

(declare-fun lt!55124 () ListLongMap!1549)

(declare-fun apply!99 (ListLongMap!1549 (_ BitVec 64)) V!3233)

(assert (=> b!107539 (= e!70042 (= (apply!99 lt!55124 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107539 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2320 (_values!2588 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> b!107539 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!107540 () Bool)

(declare-fun e!70039 () ListLongMap!1549)

(declare-fun e!70038 () ListLongMap!1549)

(assert (=> b!107540 (= e!70039 e!70038)))

(declare-fun c!18829 () Bool)

(assert (=> b!107540 (= c!18829 (and (not (= (bvand (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11339 () Bool)

(declare-fun call!11342 () Bool)

(assert (=> bm!11339 (= call!11342 (contains!824 lt!55124 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107541 () Bool)

(declare-fun e!70040 () Bool)

(declare-fun e!70036 () Bool)

(assert (=> b!107541 (= e!70040 e!70036)))

(declare-fun res!53362 () Bool)

(declare-fun call!11347 () Bool)

(assert (=> b!107541 (= res!53362 call!11347)))

(assert (=> b!107541 (=> (not res!53362) (not e!70036))))

(declare-fun d!29687 () Bool)

(declare-fun e!70031 () Bool)

(assert (=> d!29687 e!70031))

(declare-fun res!53363 () Bool)

(assert (=> d!29687 (=> (not res!53363) (not e!70031))))

(assert (=> d!29687 (= res!53363 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun lt!55122 () ListLongMap!1549)

(assert (=> d!29687 (= lt!55124 lt!55122)))

(declare-fun lt!55118 () Unit!3307)

(assert (=> d!29687 (= lt!55118 e!70041)))

(declare-fun c!18831 () Bool)

(declare-fun e!70034 () Bool)

(assert (=> d!29687 (= c!18831 e!70034)))

(declare-fun res!53368 () Bool)

(assert (=> d!29687 (=> (not res!53368) (not e!70034))))

(assert (=> d!29687 (= res!53368 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> d!29687 (= lt!55122 e!70039)))

(declare-fun c!18828 () Bool)

(assert (=> d!29687 (= c!18828 (and (not (= (bvand (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29687 (validMask!0 (mask!6762 (v!2904 (underlying!360 thiss!992))))))

(assert (=> d!29687 (= (getCurrentListMap!467 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))) lt!55124)))

(declare-fun b!107542 () Bool)

(assert (=> b!107542 (= e!70040 (not call!11347))))

(declare-fun b!107543 () Bool)

(declare-fun res!53369 () Bool)

(assert (=> b!107543 (=> (not res!53369) (not e!70031))))

(declare-fun e!70043 () Bool)

(assert (=> b!107543 (= res!53369 e!70043)))

(declare-fun res!53370 () Bool)

(assert (=> b!107543 (=> res!53370 e!70043)))

(declare-fun e!70037 () Bool)

(assert (=> b!107543 (= res!53370 (not e!70037))))

(declare-fun res!53365 () Bool)

(assert (=> b!107543 (=> (not res!53365) (not e!70037))))

(assert (=> b!107543 (= res!53365 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!107544 () Bool)

(assert (=> b!107544 (= e!70036 (= (apply!99 lt!55124 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!107545 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!107545 (= e!70037 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!107546 () Bool)

(declare-fun call!11348 () ListLongMap!1549)

(assert (=> b!107546 (= e!70038 call!11348)))

(declare-fun bm!11340 () Bool)

(declare-fun call!11343 () ListLongMap!1549)

(declare-fun call!11345 () ListLongMap!1549)

(assert (=> bm!11340 (= call!11343 call!11345)))

(declare-fun bm!11341 () Bool)

(declare-fun call!11346 () ListLongMap!1549)

(assert (=> bm!11341 (= call!11348 call!11346)))

(declare-fun bm!11342 () Bool)

(assert (=> bm!11342 (= call!11347 (contains!824 lt!55124 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!11344 () ListLongMap!1549)

(declare-fun bm!11343 () Bool)

(assert (=> bm!11343 (= call!11346 (+!137 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344)) (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!107547 () Bool)

(declare-fun e!70033 () Bool)

(declare-fun e!70032 () Bool)

(assert (=> b!107547 (= e!70033 e!70032)))

(declare-fun res!53367 () Bool)

(assert (=> b!107547 (= res!53367 call!11342)))

(assert (=> b!107547 (=> (not res!53367) (not e!70032))))

(declare-fun bm!11344 () Bool)

(assert (=> bm!11344 (= call!11344 call!11343)))

(declare-fun b!107548 () Bool)

(assert (=> b!107548 (= e!70031 e!70033)))

(declare-fun c!18827 () Bool)

(assert (=> b!107548 (= c!18827 (not (= (bvand (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!107549 () Bool)

(assert (=> b!107549 (= e!70043 e!70042)))

(declare-fun res!53364 () Bool)

(assert (=> b!107549 (=> (not res!53364) (not e!70042))))

(assert (=> b!107549 (= res!53364 (contains!824 lt!55124 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107549 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!107550 () Bool)

(declare-fun lt!55107 () Unit!3307)

(assert (=> b!107550 (= e!70041 lt!55107)))

(declare-fun lt!55105 () ListLongMap!1549)

(assert (=> b!107550 (= lt!55105 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun lt!55104 () (_ BitVec 64))

(assert (=> b!107550 (= lt!55104 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55110 () (_ BitVec 64))

(assert (=> b!107550 (= lt!55110 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55117 () Unit!3307)

(declare-fun addStillContains!75 (ListLongMap!1549 (_ BitVec 64) V!3233 (_ BitVec 64)) Unit!3307)

(assert (=> b!107550 (= lt!55117 (addStillContains!75 lt!55105 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55110))))

(assert (=> b!107550 (contains!824 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55110)))

(declare-fun lt!55108 () Unit!3307)

(assert (=> b!107550 (= lt!55108 lt!55117)))

(declare-fun lt!55115 () ListLongMap!1549)

(assert (=> b!107550 (= lt!55115 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun lt!55112 () (_ BitVec 64))

(assert (=> b!107550 (= lt!55112 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55120 () (_ BitVec 64))

(assert (=> b!107550 (= lt!55120 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55114 () Unit!3307)

(declare-fun addApplyDifferent!75 (ListLongMap!1549 (_ BitVec 64) V!3233 (_ BitVec 64)) Unit!3307)

(assert (=> b!107550 (= lt!55114 (addApplyDifferent!75 lt!55115 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55120))))

(assert (=> b!107550 (= (apply!99 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55120) (apply!99 lt!55115 lt!55120))))

(declare-fun lt!55123 () Unit!3307)

(assert (=> b!107550 (= lt!55123 lt!55114)))

(declare-fun lt!55109 () ListLongMap!1549)

(assert (=> b!107550 (= lt!55109 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun lt!55106 () (_ BitVec 64))

(assert (=> b!107550 (= lt!55106 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55125 () (_ BitVec 64))

(assert (=> b!107550 (= lt!55125 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55119 () Unit!3307)

(assert (=> b!107550 (= lt!55119 (addApplyDifferent!75 lt!55109 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55125))))

(assert (=> b!107550 (= (apply!99 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55125) (apply!99 lt!55109 lt!55125))))

(declare-fun lt!55116 () Unit!3307)

(assert (=> b!107550 (= lt!55116 lt!55119)))

(declare-fun lt!55121 () ListLongMap!1549)

(assert (=> b!107550 (= lt!55121 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun lt!55113 () (_ BitVec 64))

(assert (=> b!107550 (= lt!55113 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55111 () (_ BitVec 64))

(assert (=> b!107550 (= lt!55111 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!107550 (= lt!55107 (addApplyDifferent!75 lt!55121 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55111))))

(assert (=> b!107550 (= (apply!99 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55111) (apply!99 lt!55121 lt!55111))))

(declare-fun b!107551 () Bool)

(assert (=> b!107551 (= e!70039 (+!137 call!11346 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun bm!11345 () Bool)

(assert (=> bm!11345 (= call!11345 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!107552 () Bool)

(declare-fun res!53366 () Bool)

(assert (=> b!107552 (=> (not res!53366) (not e!70031))))

(assert (=> b!107552 (= res!53366 e!70040)))

(declare-fun c!18832 () Bool)

(assert (=> b!107552 (= c!18832 (not (= (bvand (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!107553 () Bool)

(assert (=> b!107553 (= e!70034 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!107554 () Bool)

(declare-fun c!18830 () Bool)

(assert (=> b!107554 (= c!18830 (and (not (= (bvand (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70035 () ListLongMap!1549)

(assert (=> b!107554 (= e!70038 e!70035)))

(declare-fun b!107555 () Bool)

(assert (=> b!107555 (= e!70032 (= (apply!99 lt!55124 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!107556 () Bool)

(assert (=> b!107556 (= e!70033 (not call!11342))))

(declare-fun b!107557 () Bool)

(assert (=> b!107557 (= e!70035 call!11348)))

(declare-fun b!107558 () Bool)

(assert (=> b!107558 (= e!70035 call!11344)))

(assert (= (and d!29687 c!18828) b!107551))

(assert (= (and d!29687 (not c!18828)) b!107540))

(assert (= (and b!107540 c!18829) b!107546))

(assert (= (and b!107540 (not c!18829)) b!107554))

(assert (= (and b!107554 c!18830) b!107557))

(assert (= (and b!107554 (not c!18830)) b!107558))

(assert (= (or b!107557 b!107558) bm!11344))

(assert (= (or b!107546 bm!11344) bm!11340))

(assert (= (or b!107546 b!107557) bm!11341))

(assert (= (or b!107551 bm!11340) bm!11345))

(assert (= (or b!107551 bm!11341) bm!11343))

(assert (= (and d!29687 res!53368) b!107553))

(assert (= (and d!29687 c!18831) b!107550))

(assert (= (and d!29687 (not c!18831)) b!107538))

(assert (= (and d!29687 res!53363) b!107543))

(assert (= (and b!107543 res!53365) b!107545))

(assert (= (and b!107543 (not res!53370)) b!107549))

(assert (= (and b!107549 res!53364) b!107539))

(assert (= (and b!107543 res!53369) b!107552))

(assert (= (and b!107552 c!18832) b!107541))

(assert (= (and b!107552 (not c!18832)) b!107542))

(assert (= (and b!107541 res!53362) b!107544))

(assert (= (or b!107541 b!107542) bm!11342))

(assert (= (and b!107552 res!53366) b!107548))

(assert (= (and b!107548 c!18827) b!107547))

(assert (= (and b!107548 (not c!18827)) b!107556))

(assert (= (and b!107547 res!53367) b!107555))

(assert (= (or b!107547 b!107556) bm!11339))

(declare-fun b_lambda!4803 () Bool)

(assert (=> (not b_lambda!4803) (not b!107539)))

(assert (=> b!107539 t!5726))

(declare-fun b_and!6633 () Bool)

(assert (= b_and!6613 (and (=> t!5726 result!3485) b_and!6633)))

(assert (=> b!107539 t!5728))

(declare-fun b_and!6635 () Bool)

(assert (= b_and!6615 (and (=> t!5728 result!3489) b_and!6635)))

(declare-fun m!120541 () Bool)

(assert (=> b!107539 m!120541))

(assert (=> b!107539 m!120397))

(assert (=> b!107539 m!120541))

(assert (=> b!107539 m!120397))

(declare-fun m!120543 () Bool)

(assert (=> b!107539 m!120543))

(declare-fun m!120545 () Bool)

(assert (=> b!107539 m!120545))

(declare-fun m!120547 () Bool)

(assert (=> b!107539 m!120547))

(assert (=> b!107539 m!120545))

(declare-fun m!120549 () Bool)

(assert (=> b!107555 m!120549))

(declare-fun m!120551 () Bool)

(assert (=> bm!11339 m!120551))

(assert (=> bm!11345 m!120423))

(declare-fun m!120553 () Bool)

(assert (=> bm!11342 m!120553))

(assert (=> b!107545 m!120545))

(assert (=> b!107545 m!120545))

(declare-fun m!120555 () Bool)

(assert (=> b!107545 m!120555))

(assert (=> b!107553 m!120545))

(assert (=> b!107553 m!120545))

(assert (=> b!107553 m!120555))

(declare-fun m!120557 () Bool)

(assert (=> bm!11343 m!120557))

(declare-fun m!120559 () Bool)

(assert (=> b!107551 m!120559))

(assert (=> d!29687 m!120417))

(declare-fun m!120561 () Bool)

(assert (=> b!107544 m!120561))

(assert (=> b!107549 m!120545))

(assert (=> b!107549 m!120545))

(declare-fun m!120563 () Bool)

(assert (=> b!107549 m!120563))

(declare-fun m!120565 () Bool)

(assert (=> b!107550 m!120565))

(declare-fun m!120567 () Bool)

(assert (=> b!107550 m!120567))

(declare-fun m!120569 () Bool)

(assert (=> b!107550 m!120569))

(declare-fun m!120571 () Bool)

(assert (=> b!107550 m!120571))

(declare-fun m!120573 () Bool)

(assert (=> b!107550 m!120573))

(declare-fun m!120575 () Bool)

(assert (=> b!107550 m!120575))

(declare-fun m!120577 () Bool)

(assert (=> b!107550 m!120577))

(declare-fun m!120579 () Bool)

(assert (=> b!107550 m!120579))

(assert (=> b!107550 m!120569))

(assert (=> b!107550 m!120575))

(declare-fun m!120581 () Bool)

(assert (=> b!107550 m!120581))

(assert (=> b!107550 m!120423))

(declare-fun m!120583 () Bool)

(assert (=> b!107550 m!120583))

(declare-fun m!120585 () Bool)

(assert (=> b!107550 m!120585))

(declare-fun m!120587 () Bool)

(assert (=> b!107550 m!120587))

(assert (=> b!107550 m!120577))

(declare-fun m!120589 () Bool)

(assert (=> b!107550 m!120589))

(declare-fun m!120591 () Bool)

(assert (=> b!107550 m!120591))

(assert (=> b!107550 m!120545))

(assert (=> b!107550 m!120587))

(declare-fun m!120593 () Bool)

(assert (=> b!107550 m!120593))

(assert (=> b!107367 d!29687))

(declare-fun d!29689 () Bool)

(declare-fun c!18835 () Bool)

(assert (=> d!29689 (= c!18835 ((_ is ValueCellFull!1001) (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun e!70046 () V!3233)

(assert (=> d!29689 (= (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) from!355) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70046)))

(declare-fun b!107563 () Bool)

(declare-fun get!1342 (ValueCell!1001 V!3233) V!3233)

(assert (=> b!107563 (= e!70046 (get!1342 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) from!355) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107564 () Bool)

(declare-fun get!1343 (ValueCell!1001 V!3233) V!3233)

(assert (=> b!107564 (= e!70046 (get!1343 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) from!355) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29689 c!18835) b!107563))

(assert (= (and d!29689 (not c!18835)) b!107564))

(assert (=> b!107563 m!120395))

(assert (=> b!107563 m!120397))

(declare-fun m!120595 () Bool)

(assert (=> b!107563 m!120595))

(assert (=> b!107564 m!120395))

(assert (=> b!107564 m!120397))

(declare-fun m!120597 () Bool)

(assert (=> b!107564 m!120597))

(assert (=> b!107356 d!29689))

(declare-fun d!29691 () Bool)

(assert (=> d!29691 (= (valid!427 thiss!992) (valid!428 (v!2904 (underlying!360 thiss!992))))))

(declare-fun bs!4409 () Bool)

(assert (= bs!4409 d!29691))

(declare-fun m!120599 () Bool)

(assert (=> bs!4409 m!120599))

(assert (=> start!12522 d!29691))

(declare-fun d!29693 () Bool)

(assert (=> d!29693 (not (arrayContainsKey!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55128 () Unit!3307)

(declare-fun choose!68 (array!4351 (_ BitVec 32) (_ BitVec 64) List!1622) Unit!3307)

(assert (=> d!29693 (= lt!55128 (choose!68 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619)))))

(assert (=> d!29693 (bvslt (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!29693 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619)) lt!55128)))

(declare-fun bs!4410 () Bool)

(assert (= bs!4410 d!29693))

(assert (=> bs!4410 m!120387))

(assert (=> bs!4410 m!120407))

(assert (=> bs!4410 m!120387))

(declare-fun m!120601 () Bool)

(assert (=> bs!4410 m!120601))

(assert (=> b!107353 d!29693))

(declare-fun d!29695 () Bool)

(assert (=> d!29695 (arrayNoDuplicates!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) from!355 Nil!1619)))

(declare-fun lt!55131 () Unit!3307)

(declare-fun choose!39 (array!4351 (_ BitVec 32) (_ BitVec 32)) Unit!3307)

(assert (=> d!29695 (= lt!55131 (choose!39 (_keys!4314 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!29695 (bvslt (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!29695 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000 from!355) lt!55131)))

(declare-fun bs!4411 () Bool)

(assert (= bs!4411 d!29695))

(assert (=> bs!4411 m!120403))

(declare-fun m!120603 () Bool)

(assert (=> bs!4411 m!120603))

(assert (=> b!107353 d!29695))

(declare-fun d!29697 () Bool)

(declare-fun res!53375 () Bool)

(declare-fun e!70051 () Bool)

(assert (=> d!29697 (=> res!53375 e!70051)))

(assert (=> d!29697 (= res!53375 (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!29697 (= (arrayContainsKey!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!70051)))

(declare-fun b!107569 () Bool)

(declare-fun e!70052 () Bool)

(assert (=> b!107569 (= e!70051 e!70052)))

(declare-fun res!53376 () Bool)

(assert (=> b!107569 (=> (not res!53376) (not e!70052))))

(assert (=> b!107569 (= res!53376 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!107570 () Bool)

(assert (=> b!107570 (= e!70052 (arrayContainsKey!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!29697 (not res!53375)) b!107569))

(assert (= (and b!107569 res!53376) b!107570))

(assert (=> d!29697 m!120545))

(assert (=> b!107570 m!120387))

(declare-fun m!120605 () Bool)

(assert (=> b!107570 m!120605))

(assert (=> b!107353 d!29697))

(declare-fun d!29699 () Bool)

(declare-fun e!70055 () Bool)

(assert (=> d!29699 e!70055))

(declare-fun c!18838 () Bool)

(assert (=> d!29699 (= c!18838 (and (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!55134 () Unit!3307)

(declare-fun choose!674 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) (_ BitVec 32) Int) Unit!3307)

(assert (=> d!29699 (= lt!55134 (choose!674 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))))))

(assert (=> d!29699 (validMask!0 (mask!6762 (v!2904 (underlying!360 thiss!992))))))

(assert (=> d!29699 (= (lemmaListMapContainsThenArrayContainsFrom!113 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))) lt!55134)))

(declare-fun b!107575 () Bool)

(assert (=> b!107575 (= e!70055 (arrayContainsKey!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!107576 () Bool)

(assert (=> b!107576 (= e!70055 (ite (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!29699 c!18838) b!107575))

(assert (= (and d!29699 (not c!18838)) b!107576))

(assert (=> d!29699 m!120387))

(declare-fun m!120607 () Bool)

(assert (=> d!29699 m!120607))

(assert (=> d!29699 m!120417))

(assert (=> b!107575 m!120387))

(assert (=> b!107575 m!120407))

(assert (=> b!107353 d!29699))

(declare-fun bm!11348 () Bool)

(declare-fun c!18841 () Bool)

(declare-fun call!11351 () Bool)

(assert (=> bm!11348 (= call!11351 (arrayNoDuplicates!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)))))

(declare-fun b!107587 () Bool)

(declare-fun e!70067 () Bool)

(declare-fun contains!825 (List!1622 (_ BitVec 64)) Bool)

(assert (=> b!107587 (= e!70067 (contains!825 Nil!1619 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun d!29701 () Bool)

(declare-fun res!53385 () Bool)

(declare-fun e!70064 () Bool)

(assert (=> d!29701 (=> res!53385 e!70064)))

(assert (=> d!29701 (= res!53385 (bvsge from!355 (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> d!29701 (= (arrayNoDuplicates!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) from!355 Nil!1619) e!70064)))

(declare-fun b!107588 () Bool)

(declare-fun e!70066 () Bool)

(assert (=> b!107588 (= e!70066 call!11351)))

(declare-fun b!107589 () Bool)

(declare-fun e!70065 () Bool)

(assert (=> b!107589 (= e!70064 e!70065)))

(declare-fun res!53384 () Bool)

(assert (=> b!107589 (=> (not res!53384) (not e!70065))))

(assert (=> b!107589 (= res!53384 (not e!70067))))

(declare-fun res!53383 () Bool)

(assert (=> b!107589 (=> (not res!53383) (not e!70067))))

(assert (=> b!107589 (= res!53383 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!107590 () Bool)

(assert (=> b!107590 (= e!70065 e!70066)))

(assert (=> b!107590 (= c!18841 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!107591 () Bool)

(assert (=> b!107591 (= e!70066 call!11351)))

(assert (= (and d!29701 (not res!53385)) b!107589))

(assert (= (and b!107589 res!53383) b!107587))

(assert (= (and b!107589 res!53384) b!107590))

(assert (= (and b!107590 c!18841) b!107588))

(assert (= (and b!107590 (not c!18841)) b!107591))

(assert (= (or b!107588 b!107591) bm!11348))

(assert (=> bm!11348 m!120387))

(declare-fun m!120609 () Bool)

(assert (=> bm!11348 m!120609))

(assert (=> b!107587 m!120387))

(assert (=> b!107587 m!120387))

(declare-fun m!120611 () Bool)

(assert (=> b!107587 m!120611))

(assert (=> b!107589 m!120387))

(assert (=> b!107589 m!120387))

(declare-fun m!120613 () Bool)

(assert (=> b!107589 m!120613))

(assert (=> b!107590 m!120387))

(assert (=> b!107590 m!120387))

(assert (=> b!107590 m!120613))

(assert (=> b!107353 d!29701))

(declare-fun d!29703 () Bool)

(declare-fun res!53392 () Bool)

(declare-fun e!70070 () Bool)

(assert (=> d!29703 (=> (not res!53392) (not e!70070))))

(declare-fun simpleValid!75 (LongMapFixedSize!910) Bool)

(assert (=> d!29703 (= res!53392 (simpleValid!75 newMap!16))))

(assert (=> d!29703 (= (valid!428 newMap!16) e!70070)))

(declare-fun b!107598 () Bool)

(declare-fun res!53393 () Bool)

(assert (=> b!107598 (=> (not res!53393) (not e!70070))))

(declare-fun arrayCountValidKeys!0 (array!4351 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!107598 (= res!53393 (= (arrayCountValidKeys!0 (_keys!4314 newMap!16) #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) (_size!504 newMap!16)))))

(declare-fun b!107599 () Bool)

(declare-fun res!53394 () Bool)

(assert (=> b!107599 (=> (not res!53394) (not e!70070))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4351 (_ BitVec 32)) Bool)

(assert (=> b!107599 (= res!53394 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(declare-fun b!107600 () Bool)

(assert (=> b!107600 (= e!70070 (arrayNoDuplicates!0 (_keys!4314 newMap!16) #b00000000000000000000000000000000 Nil!1619))))

(assert (= (and d!29703 res!53392) b!107598))

(assert (= (and b!107598 res!53393) b!107599))

(assert (= (and b!107599 res!53394) b!107600))

(declare-fun m!120615 () Bool)

(assert (=> d!29703 m!120615))

(declare-fun m!120617 () Bool)

(assert (=> b!107598 m!120617))

(declare-fun m!120619 () Bool)

(assert (=> b!107599 m!120619))

(declare-fun m!120621 () Bool)

(assert (=> b!107600 m!120621))

(assert (=> b!107365 d!29703))

(declare-fun d!29705 () Bool)

(declare-fun e!70073 () Bool)

(assert (=> d!29705 e!70073))

(declare-fun res!53400 () Bool)

(assert (=> d!29705 (=> (not res!53400) (not e!70073))))

(declare-fun lt!55143 () ListLongMap!1549)

(assert (=> d!29705 (= res!53400 (contains!824 lt!55143 (_1!1207 lt!54985)))))

(declare-fun lt!55146 () List!1623)

(assert (=> d!29705 (= lt!55143 (ListLongMap!1550 lt!55146))))

(declare-fun lt!55144 () Unit!3307)

(declare-fun lt!55145 () Unit!3307)

(assert (=> d!29705 (= lt!55144 lt!55145)))

(declare-datatypes ((Option!161 0))(
  ( (Some!160 (v!2910 V!3233)) (None!159) )
))
(declare-fun getValueByKey!155 (List!1623 (_ BitVec 64)) Option!161)

(assert (=> d!29705 (= (getValueByKey!155 lt!55146 (_1!1207 lt!54985)) (Some!160 (_2!1207 lt!54985)))))

(declare-fun lemmaContainsTupThenGetReturnValue!74 (List!1623 (_ BitVec 64) V!3233) Unit!3307)

(assert (=> d!29705 (= lt!55145 (lemmaContainsTupThenGetReturnValue!74 lt!55146 (_1!1207 lt!54985) (_2!1207 lt!54985)))))

(declare-fun insertStrictlySorted!77 (List!1623 (_ BitVec 64) V!3233) List!1623)

(assert (=> d!29705 (= lt!55146 (insertStrictlySorted!77 (toList!790 lt!54981) (_1!1207 lt!54985) (_2!1207 lt!54985)))))

(assert (=> d!29705 (= (+!137 lt!54981 lt!54985) lt!55143)))

(declare-fun b!107605 () Bool)

(declare-fun res!53399 () Bool)

(assert (=> b!107605 (=> (not res!53399) (not e!70073))))

(assert (=> b!107605 (= res!53399 (= (getValueByKey!155 (toList!790 lt!55143) (_1!1207 lt!54985)) (Some!160 (_2!1207 lt!54985))))))

(declare-fun b!107606 () Bool)

(declare-fun contains!826 (List!1623 tuple2!2392) Bool)

(assert (=> b!107606 (= e!70073 (contains!826 (toList!790 lt!55143) lt!54985))))

(assert (= (and d!29705 res!53400) b!107605))

(assert (= (and b!107605 res!53399) b!107606))

(declare-fun m!120623 () Bool)

(assert (=> d!29705 m!120623))

(declare-fun m!120625 () Bool)

(assert (=> d!29705 m!120625))

(declare-fun m!120627 () Bool)

(assert (=> d!29705 m!120627))

(declare-fun m!120629 () Bool)

(assert (=> d!29705 m!120629))

(declare-fun m!120631 () Bool)

(assert (=> b!107605 m!120631))

(declare-fun m!120633 () Bool)

(assert (=> b!107606 m!120633))

(assert (=> b!107359 d!29705))

(declare-fun d!29707 () Bool)

(declare-fun e!70074 () Bool)

(assert (=> d!29707 e!70074))

(declare-fun res!53402 () Bool)

(assert (=> d!29707 (=> (not res!53402) (not e!70074))))

(declare-fun lt!55147 () ListLongMap!1549)

(assert (=> d!29707 (= res!53402 (contains!824 lt!55147 (_1!1207 lt!54977)))))

(declare-fun lt!55150 () List!1623)

(assert (=> d!29707 (= lt!55147 (ListLongMap!1550 lt!55150))))

(declare-fun lt!55148 () Unit!3307)

(declare-fun lt!55149 () Unit!3307)

(assert (=> d!29707 (= lt!55148 lt!55149)))

(assert (=> d!29707 (= (getValueByKey!155 lt!55150 (_1!1207 lt!54977)) (Some!160 (_2!1207 lt!54977)))))

(assert (=> d!29707 (= lt!55149 (lemmaContainsTupThenGetReturnValue!74 lt!55150 (_1!1207 lt!54977) (_2!1207 lt!54977)))))

(assert (=> d!29707 (= lt!55150 (insertStrictlySorted!77 (toList!790 lt!54981) (_1!1207 lt!54977) (_2!1207 lt!54977)))))

(assert (=> d!29707 (= (+!137 lt!54981 lt!54977) lt!55147)))

(declare-fun b!107607 () Bool)

(declare-fun res!53401 () Bool)

(assert (=> b!107607 (=> (not res!53401) (not e!70074))))

(assert (=> b!107607 (= res!53401 (= (getValueByKey!155 (toList!790 lt!55147) (_1!1207 lt!54977)) (Some!160 (_2!1207 lt!54977))))))

(declare-fun b!107608 () Bool)

(assert (=> b!107608 (= e!70074 (contains!826 (toList!790 lt!55147) lt!54977))))

(assert (= (and d!29707 res!53402) b!107607))

(assert (= (and b!107607 res!53401) b!107608))

(declare-fun m!120635 () Bool)

(assert (=> d!29707 m!120635))

(declare-fun m!120637 () Bool)

(assert (=> d!29707 m!120637))

(declare-fun m!120639 () Bool)

(assert (=> d!29707 m!120639))

(declare-fun m!120641 () Bool)

(assert (=> d!29707 m!120641))

(declare-fun m!120643 () Bool)

(assert (=> b!107607 m!120643))

(declare-fun m!120645 () Bool)

(assert (=> b!107608 m!120645))

(assert (=> b!107359 d!29707))

(declare-fun d!29709 () Bool)

(declare-fun e!70075 () Bool)

(assert (=> d!29709 e!70075))

(declare-fun res!53404 () Bool)

(assert (=> d!29709 (=> (not res!53404) (not e!70075))))

(declare-fun lt!55151 () ListLongMap!1549)

(assert (=> d!29709 (= res!53404 (contains!824 lt!55151 (_1!1207 lt!54977)))))

(declare-fun lt!55154 () List!1623)

(assert (=> d!29709 (= lt!55151 (ListLongMap!1550 lt!55154))))

(declare-fun lt!55152 () Unit!3307)

(declare-fun lt!55153 () Unit!3307)

(assert (=> d!29709 (= lt!55152 lt!55153)))

(assert (=> d!29709 (= (getValueByKey!155 lt!55154 (_1!1207 lt!54977)) (Some!160 (_2!1207 lt!54977)))))

(assert (=> d!29709 (= lt!55153 (lemmaContainsTupThenGetReturnValue!74 lt!55154 (_1!1207 lt!54977) (_2!1207 lt!54977)))))

(assert (=> d!29709 (= lt!55154 (insertStrictlySorted!77 (toList!790 (+!137 lt!54981 lt!54985)) (_1!1207 lt!54977) (_2!1207 lt!54977)))))

(assert (=> d!29709 (= (+!137 (+!137 lt!54981 lt!54985) lt!54977) lt!55151)))

(declare-fun b!107609 () Bool)

(declare-fun res!53403 () Bool)

(assert (=> b!107609 (=> (not res!53403) (not e!70075))))

(assert (=> b!107609 (= res!53403 (= (getValueByKey!155 (toList!790 lt!55151) (_1!1207 lt!54977)) (Some!160 (_2!1207 lt!54977))))))

(declare-fun b!107610 () Bool)

(assert (=> b!107610 (= e!70075 (contains!826 (toList!790 lt!55151) lt!54977))))

(assert (= (and d!29709 res!53404) b!107609))

(assert (= (and b!107609 res!53403) b!107610))

(declare-fun m!120647 () Bool)

(assert (=> d!29709 m!120647))

(declare-fun m!120649 () Bool)

(assert (=> d!29709 m!120649))

(declare-fun m!120651 () Bool)

(assert (=> d!29709 m!120651))

(declare-fun m!120653 () Bool)

(assert (=> d!29709 m!120653))

(declare-fun m!120655 () Bool)

(assert (=> b!107609 m!120655))

(declare-fun m!120657 () Bool)

(assert (=> b!107610 m!120657))

(assert (=> b!107359 d!29709))

(declare-fun b!107635 () Bool)

(declare-fun lt!55174 () Unit!3307)

(declare-fun lt!55173 () Unit!3307)

(assert (=> b!107635 (= lt!55174 lt!55173)))

(declare-fun lt!55170 () (_ BitVec 64))

(declare-fun lt!55172 () (_ BitVec 64))

(declare-fun lt!55169 () ListLongMap!1549)

(declare-fun lt!55171 () V!3233)

(assert (=> b!107635 (not (contains!824 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)) lt!55170))))

(declare-fun addStillNotContains!48 (ListLongMap!1549 (_ BitVec 64) V!3233 (_ BitVec 64)) Unit!3307)

(assert (=> b!107635 (= lt!55173 (addStillNotContains!48 lt!55169 lt!55172 lt!55171 lt!55170))))

(assert (=> b!107635 (= lt!55170 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!107635 (= lt!55171 (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!107635 (= lt!55172 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!11354 () ListLongMap!1549)

(assert (=> b!107635 (= lt!55169 call!11354)))

(declare-fun e!70095 () ListLongMap!1549)

(assert (=> b!107635 (= e!70095 (+!137 call!11354 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun lt!55175 () ListLongMap!1549)

(declare-fun b!107636 () Bool)

(declare-fun e!70094 () Bool)

(assert (=> b!107636 (= e!70094 (= lt!55175 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!107637 () Bool)

(assert (=> b!107637 (= e!70095 call!11354)))

(declare-fun b!107638 () Bool)

(declare-fun isEmpty!377 (ListLongMap!1549) Bool)

(assert (=> b!107638 (= e!70094 (isEmpty!377 lt!55175))))

(declare-fun b!107639 () Bool)

(assert (=> b!107639 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> b!107639 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2320 (_values!2588 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun e!70091 () Bool)

(assert (=> b!107639 (= e!70091 (= (apply!99 lt!55175 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!107640 () Bool)

(declare-fun e!70093 () ListLongMap!1549)

(assert (=> b!107640 (= e!70093 (ListLongMap!1550 Nil!1620))))

(declare-fun b!107641 () Bool)

(declare-fun e!70096 () Bool)

(declare-fun e!70090 () Bool)

(assert (=> b!107641 (= e!70096 e!70090)))

(declare-fun c!18851 () Bool)

(declare-fun e!70092 () Bool)

(assert (=> b!107641 (= c!18851 e!70092)))

(declare-fun res!53413 () Bool)

(assert (=> b!107641 (=> (not res!53413) (not e!70092))))

(assert (=> b!107641 (= res!53413 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!107643 () Bool)

(assert (=> b!107643 (= e!70093 e!70095)))

(declare-fun c!18853 () Bool)

(assert (=> b!107643 (= c!18853 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!11351 () Bool)

(assert (=> bm!11351 (= call!11354 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!107644 () Bool)

(declare-fun res!53415 () Bool)

(assert (=> b!107644 (=> (not res!53415) (not e!70096))))

(assert (=> b!107644 (= res!53415 (not (contains!824 lt!55175 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107645 () Bool)

(assert (=> b!107645 (= e!70090 e!70091)))

(assert (=> b!107645 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun res!53416 () Bool)

(assert (=> b!107645 (= res!53416 (contains!824 lt!55175 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107645 (=> (not res!53416) (not e!70091))))

(declare-fun b!107646 () Bool)

(assert (=> b!107646 (= e!70090 e!70094)))

(declare-fun c!18852 () Bool)

(assert (=> b!107646 (= c!18852 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun d!29711 () Bool)

(assert (=> d!29711 e!70096))

(declare-fun res!53414 () Bool)

(assert (=> d!29711 (=> (not res!53414) (not e!70096))))

(assert (=> d!29711 (= res!53414 (not (contains!824 lt!55175 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29711 (= lt!55175 e!70093)))

(declare-fun c!18850 () Bool)

(assert (=> d!29711 (= c!18850 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> d!29711 (validMask!0 (mask!6762 (v!2904 (underlying!360 thiss!992))))))

(assert (=> d!29711 (= (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))) lt!55175)))

(declare-fun b!107642 () Bool)

(assert (=> b!107642 (= e!70092 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107642 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(assert (= (and d!29711 c!18850) b!107640))

(assert (= (and d!29711 (not c!18850)) b!107643))

(assert (= (and b!107643 c!18853) b!107635))

(assert (= (and b!107643 (not c!18853)) b!107637))

(assert (= (or b!107635 b!107637) bm!11351))

(assert (= (and d!29711 res!53414) b!107644))

(assert (= (and b!107644 res!53415) b!107641))

(assert (= (and b!107641 res!53413) b!107642))

(assert (= (and b!107641 c!18851) b!107645))

(assert (= (and b!107641 (not c!18851)) b!107646))

(assert (= (and b!107645 res!53416) b!107639))

(assert (= (and b!107646 c!18852) b!107636))

(assert (= (and b!107646 (not c!18852)) b!107638))

(declare-fun b_lambda!4805 () Bool)

(assert (=> (not b_lambda!4805) (not b!107635)))

(assert (=> b!107635 t!5726))

(declare-fun b_and!6637 () Bool)

(assert (= b_and!6633 (and (=> t!5726 result!3485) b_and!6637)))

(assert (=> b!107635 t!5728))

(declare-fun b_and!6639 () Bool)

(assert (= b_and!6635 (and (=> t!5728 result!3489) b_and!6639)))

(declare-fun b_lambda!4807 () Bool)

(assert (=> (not b_lambda!4807) (not b!107639)))

(assert (=> b!107639 t!5726))

(declare-fun b_and!6641 () Bool)

(assert (= b_and!6637 (and (=> t!5726 result!3485) b_and!6641)))

(assert (=> b!107639 t!5728))

(declare-fun b_and!6643 () Bool)

(assert (= b_and!6639 (and (=> t!5728 result!3489) b_and!6643)))

(assert (=> b!107639 m!120541))

(assert (=> b!107639 m!120397))

(assert (=> b!107639 m!120543))

(assert (=> b!107639 m!120545))

(assert (=> b!107639 m!120397))

(assert (=> b!107639 m!120545))

(declare-fun m!120659 () Bool)

(assert (=> b!107639 m!120659))

(assert (=> b!107639 m!120541))

(declare-fun m!120661 () Bool)

(assert (=> d!29711 m!120661))

(assert (=> d!29711 m!120417))

(assert (=> b!107643 m!120545))

(assert (=> b!107643 m!120545))

(assert (=> b!107643 m!120555))

(declare-fun m!120663 () Bool)

(assert (=> b!107636 m!120663))

(declare-fun m!120665 () Bool)

(assert (=> b!107644 m!120665))

(assert (=> b!107645 m!120545))

(assert (=> b!107645 m!120545))

(declare-fun m!120667 () Bool)

(assert (=> b!107645 m!120667))

(assert (=> b!107635 m!120541))

(assert (=> b!107635 m!120397))

(assert (=> b!107635 m!120543))

(declare-fun m!120669 () Bool)

(assert (=> b!107635 m!120669))

(assert (=> b!107635 m!120669))

(declare-fun m!120671 () Bool)

(assert (=> b!107635 m!120671))

(assert (=> b!107635 m!120397))

(assert (=> b!107635 m!120541))

(declare-fun m!120673 () Bool)

(assert (=> b!107635 m!120673))

(declare-fun m!120675 () Bool)

(assert (=> b!107635 m!120675))

(assert (=> b!107635 m!120545))

(assert (=> b!107642 m!120545))

(assert (=> b!107642 m!120545))

(assert (=> b!107642 m!120555))

(declare-fun m!120677 () Bool)

(assert (=> b!107638 m!120677))

(assert (=> bm!11351 m!120663))

(assert (=> b!107359 d!29711))

(declare-fun d!29713 () Bool)

(declare-fun e!70097 () Bool)

(assert (=> d!29713 e!70097))

(declare-fun res!53418 () Bool)

(assert (=> d!29713 (=> (not res!53418) (not e!70097))))

(declare-fun lt!55176 () ListLongMap!1549)

(assert (=> d!29713 (= res!53418 (contains!824 lt!55176 (_1!1207 lt!54985)))))

(declare-fun lt!55179 () List!1623)

(assert (=> d!29713 (= lt!55176 (ListLongMap!1550 lt!55179))))

(declare-fun lt!55177 () Unit!3307)

(declare-fun lt!55178 () Unit!3307)

(assert (=> d!29713 (= lt!55177 lt!55178)))

(assert (=> d!29713 (= (getValueByKey!155 lt!55179 (_1!1207 lt!54985)) (Some!160 (_2!1207 lt!54985)))))

(assert (=> d!29713 (= lt!55178 (lemmaContainsTupThenGetReturnValue!74 lt!55179 (_1!1207 lt!54985) (_2!1207 lt!54985)))))

(assert (=> d!29713 (= lt!55179 (insertStrictlySorted!77 (toList!790 (+!137 lt!54981 lt!54977)) (_1!1207 lt!54985) (_2!1207 lt!54985)))))

(assert (=> d!29713 (= (+!137 (+!137 lt!54981 lt!54977) lt!54985) lt!55176)))

(declare-fun b!107647 () Bool)

(declare-fun res!53417 () Bool)

(assert (=> b!107647 (=> (not res!53417) (not e!70097))))

(assert (=> b!107647 (= res!53417 (= (getValueByKey!155 (toList!790 lt!55176) (_1!1207 lt!54985)) (Some!160 (_2!1207 lt!54985))))))

(declare-fun b!107648 () Bool)

(assert (=> b!107648 (= e!70097 (contains!826 (toList!790 lt!55176) lt!54985))))

(assert (= (and d!29713 res!53418) b!107647))

(assert (= (and b!107647 res!53417) b!107648))

(declare-fun m!120679 () Bool)

(assert (=> d!29713 m!120679))

(declare-fun m!120681 () Bool)

(assert (=> d!29713 m!120681))

(declare-fun m!120683 () Bool)

(assert (=> d!29713 m!120683))

(declare-fun m!120685 () Bool)

(assert (=> d!29713 m!120685))

(declare-fun m!120687 () Bool)

(assert (=> b!107647 m!120687))

(declare-fun m!120689 () Bool)

(assert (=> b!107648 m!120689))

(assert (=> b!107359 d!29713))

(declare-fun d!29715 () Bool)

(assert (=> d!29715 (= (+!137 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (+!137 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(declare-fun lt!55182 () Unit!3307)

(declare-fun choose!675 (ListLongMap!1549 (_ BitVec 64) V!3233 (_ BitVec 64) V!3233) Unit!3307)

(assert (=> d!29715 (= lt!55182 (choose!675 lt!54981 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))

(assert (=> d!29715 (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29715 (= (addCommutativeForDiffKeys!49 lt!54981 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) lt!55182)))

(declare-fun bs!4412 () Bool)

(assert (= bs!4412 d!29715))

(declare-fun m!120691 () Bool)

(assert (=> bs!4412 m!120691))

(declare-fun m!120693 () Bool)

(assert (=> bs!4412 m!120693))

(declare-fun m!120695 () Bool)

(assert (=> bs!4412 m!120695))

(assert (=> bs!4412 m!120691))

(declare-fun m!120697 () Bool)

(assert (=> bs!4412 m!120697))

(assert (=> bs!4412 m!120387))

(declare-fun m!120699 () Bool)

(assert (=> bs!4412 m!120699))

(assert (=> bs!4412 m!120693))

(assert (=> b!107359 d!29715))

(declare-fun d!29717 () Bool)

(assert (=> d!29717 (= (validMask!0 (mask!6762 (v!2904 (underlying!360 thiss!992)))) (and (or (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000001111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000011111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000001111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000011111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000001111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000011111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000001111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000011111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000001111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000011111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000111111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000001111111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000011111111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000111111111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000001111111111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000011111111111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000111111111111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000001111111111111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000011111111111111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000111111111111111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00001111111111111111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00011111111111111111111111111111) (= (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!107359 d!29717))

(declare-fun d!29719 () Bool)

(declare-fun e!70102 () Bool)

(assert (=> d!29719 e!70102))

(declare-fun res!53421 () Bool)

(assert (=> d!29719 (=> res!53421 e!70102)))

(declare-fun lt!55191 () Bool)

(assert (=> d!29719 (= res!53421 (not lt!55191))))

(declare-fun lt!55192 () Bool)

(assert (=> d!29719 (= lt!55191 lt!55192)))

(declare-fun lt!55194 () Unit!3307)

(declare-fun e!70103 () Unit!3307)

(assert (=> d!29719 (= lt!55194 e!70103)))

(declare-fun c!18856 () Bool)

(assert (=> d!29719 (= c!18856 lt!55192)))

(declare-fun containsKey!159 (List!1623 (_ BitVec 64)) Bool)

(assert (=> d!29719 (= lt!55192 (containsKey!159 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!29719 (= (contains!824 lt!54978 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) lt!55191)))

(declare-fun b!107655 () Bool)

(declare-fun lt!55193 () Unit!3307)

(assert (=> b!107655 (= e!70103 lt!55193)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!108 (List!1623 (_ BitVec 64)) Unit!3307)

(assert (=> b!107655 (= lt!55193 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun isDefined!109 (Option!161) Bool)

(assert (=> b!107655 (isDefined!109 (getValueByKey!155 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!107656 () Bool)

(declare-fun Unit!3317 () Unit!3307)

(assert (=> b!107656 (= e!70103 Unit!3317)))

(declare-fun b!107657 () Bool)

(assert (=> b!107657 (= e!70102 (isDefined!109 (getValueByKey!155 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (= (and d!29719 c!18856) b!107655))

(assert (= (and d!29719 (not c!18856)) b!107656))

(assert (= (and d!29719 (not res!53421)) b!107657))

(assert (=> d!29719 m!120387))

(declare-fun m!120701 () Bool)

(assert (=> d!29719 m!120701))

(assert (=> b!107655 m!120387))

(declare-fun m!120703 () Bool)

(assert (=> b!107655 m!120703))

(assert (=> b!107655 m!120387))

(declare-fun m!120705 () Bool)

(assert (=> b!107655 m!120705))

(assert (=> b!107655 m!120705))

(declare-fun m!120707 () Bool)

(assert (=> b!107655 m!120707))

(assert (=> b!107657 m!120387))

(assert (=> b!107657 m!120705))

(assert (=> b!107657 m!120705))

(assert (=> b!107657 m!120707))

(assert (=> b!107355 d!29719))

(declare-datatypes ((SeekEntryResult!263 0))(
  ( (MissingZero!263 (index!3201 (_ BitVec 32))) (Found!263 (index!3202 (_ BitVec 32))) (Intermediate!263 (undefined!1075 Bool) (index!3203 (_ BitVec 32)) (x!13806 (_ BitVec 32))) (Undefined!263) (MissingVacant!263 (index!3204 (_ BitVec 32))) )
))
(declare-fun lt!55264 () SeekEntryResult!263)

(declare-fun c!18883 () Bool)

(declare-fun c!18894 () Bool)

(declare-fun c!18884 () Bool)

(declare-fun lt!55266 () SeekEntryResult!263)

(declare-fun c!18889 () Bool)

(declare-fun lt!55256 () SeekEntryResult!263)

(declare-fun call!11420 () Bool)

(declare-fun lt!55255 () SeekEntryResult!263)

(declare-fun bm!11400 () Bool)

(declare-fun c!18888 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!11400 (= call!11420 (inRange!0 (ite c!18888 (ite c!18883 (index!3202 lt!55256) (ite c!18894 (index!3201 lt!55266) (index!3204 lt!55266))) (ite c!18884 (index!3202 lt!55255) (ite c!18889 (index!3201 lt!55264) (index!3204 lt!55264)))) (mask!6762 newMap!16)))))

(declare-fun d!29721 () Bool)

(declare-fun e!70160 () Bool)

(assert (=> d!29721 e!70160))

(declare-fun res!53457 () Bool)

(assert (=> d!29721 (=> (not res!53457) (not e!70160))))

(declare-fun lt!55257 () tuple2!2390)

(assert (=> d!29721 (= res!53457 (valid!428 (_2!1206 lt!55257)))))

(declare-fun e!70151 () tuple2!2390)

(assert (=> d!29721 (= lt!55257 e!70151)))

(declare-fun c!18892 () Bool)

(assert (=> d!29721 (= c!18892 (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvneg (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (=> d!29721 (valid!428 newMap!16)))

(assert (=> d!29721 (= (update!161 newMap!16 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982) lt!55257)))

(declare-fun call!11408 () Bool)

(declare-fun bm!11401 () Bool)

(assert (=> bm!11401 (= call!11408 (arrayContainsKey!0 (_keys!4314 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!107738 () Bool)

(declare-fun res!53461 () Bool)

(assert (=> b!107738 (= res!53461 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3204 lt!55264)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70159 () Bool)

(assert (=> b!107738 (=> (not res!53461) (not e!70159))))

(declare-fun bm!11402 () Bool)

(declare-fun c!18885 () Bool)

(assert (=> bm!11402 (= c!18885 c!18888)))

(declare-fun call!11416 () Bool)

(declare-fun e!70158 () ListLongMap!1549)

(assert (=> bm!11402 (= call!11416 (contains!824 e!70158 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!107739 () Bool)

(declare-fun e!70150 () Bool)

(assert (=> b!107739 (= e!70150 ((_ is Undefined!263) lt!55264))))

(declare-fun e!70166 () Bool)

(declare-fun b!107740 () Bool)

(assert (=> b!107740 (= e!70166 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55256)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun bm!11403 () Bool)

(declare-fun call!11423 () SeekEntryResult!263)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4351 (_ BitVec 32)) SeekEntryResult!263)

(assert (=> bm!11403 (= call!11423 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(declare-fun b!107741 () Bool)

(declare-fun res!53453 () Bool)

(declare-fun call!11404 () Bool)

(assert (=> b!107741 (= res!53453 call!11404)))

(declare-fun e!70153 () Bool)

(assert (=> b!107741 (=> (not res!53453) (not e!70153))))

(declare-fun call!11406 () Unit!3307)

(declare-fun bm!11404 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) Int) Unit!3307)

(assert (=> bm!11404 (= call!11406 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)))))

(declare-fun bm!11405 () Bool)

(declare-fun call!11414 () Bool)

(assert (=> bm!11405 (= call!11414 call!11408)))

(declare-fun b!107742 () Bool)

(declare-fun lt!55262 () Unit!3307)

(declare-fun lt!55259 () Unit!3307)

(assert (=> b!107742 (= lt!55262 lt!55259)))

(declare-fun call!11411 () ListLongMap!1549)

(declare-fun call!11403 () ListLongMap!1549)

(assert (=> b!107742 (= call!11411 call!11403)))

(declare-fun lt!55272 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!48 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 V!3233 Int) Unit!3307)

(assert (=> b!107742 (= lt!55259 (lemmaChangeLongMinValueKeyThenAddPairToListMap!48 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) lt!55272 (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) lt!54982 (defaultEntry!2605 newMap!16)))))

(assert (=> b!107742 (= lt!55272 (bvor (extraKeys!2406 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!70164 () tuple2!2390)

(assert (=> b!107742 (= e!70164 (tuple2!2391 true (LongMapFixedSize!911 (defaultEntry!2605 newMap!16) (mask!6762 newMap!16) (bvor (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) (zeroValue!2478 newMap!16) lt!54982 (_size!504 newMap!16) (_keys!4314 newMap!16) (_values!2588 newMap!16) (_vacant!504 newMap!16))))))

(declare-fun b!107743 () Bool)

(declare-fun e!70157 () tuple2!2390)

(declare-fun lt!55258 () tuple2!2390)

(assert (=> b!107743 (= e!70157 (tuple2!2391 (_1!1206 lt!55258) (_2!1206 lt!55258)))))

(declare-fun call!11415 () tuple2!2390)

(assert (=> b!107743 (= lt!55258 call!11415)))

(declare-fun b!107744 () Bool)

(declare-fun res!53451 () Bool)

(declare-fun e!70147 () Bool)

(assert (=> b!107744 (=> (not res!53451) (not e!70147))))

(declare-fun call!11407 () Bool)

(assert (=> b!107744 (= res!53451 call!11407)))

(declare-fun e!70162 () Bool)

(assert (=> b!107744 (= e!70162 e!70147)))

(declare-fun bm!11406 () Bool)

(declare-fun call!11410 () ListLongMap!1549)

(assert (=> bm!11406 (= call!11403 call!11410)))

(declare-fun b!107745 () Bool)

(assert (=> b!107745 (= e!70158 call!11410)))

(declare-fun b!107746 () Bool)

(declare-fun e!70163 () Bool)

(declare-fun call!11422 () Bool)

(assert (=> b!107746 (= e!70163 (not call!11422))))

(declare-fun lt!55253 () SeekEntryResult!263)

(declare-fun bm!11407 () Bool)

(declare-fun c!18895 () Bool)

(declare-fun updateHelperNewKey!48 (LongMapFixedSize!910 (_ BitVec 64) V!3233 (_ BitVec 32)) tuple2!2390)

(assert (=> bm!11407 (= call!11415 (updateHelperNewKey!48 newMap!16 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253))))))

(declare-fun bm!11408 () Bool)

(declare-fun lt!55271 () (_ BitVec 32))

(declare-fun c!18891 () Bool)

(assert (=> bm!11408 (= call!11410 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun bm!11409 () Bool)

(declare-fun call!11421 () ListLongMap!1549)

(assert (=> bm!11409 (= call!11421 (map!1277 newMap!16))))

(declare-fun b!107747 () Bool)

(declare-fun lt!55269 () Unit!3307)

(declare-fun e!70156 () Unit!3307)

(assert (=> b!107747 (= lt!55269 e!70156)))

(assert (=> b!107747 (= c!18883 call!11416)))

(declare-fun e!70148 () tuple2!2390)

(assert (=> b!107747 (= e!70148 (tuple2!2391 false newMap!16))))

(declare-fun b!107748 () Bool)

(declare-fun lt!55275 () Unit!3307)

(declare-fun lt!55261 () Unit!3307)

(assert (=> b!107748 (= lt!55275 lt!55261)))

(assert (=> b!107748 (= call!11411 call!11403)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!48 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 V!3233 Int) Unit!3307)

(assert (=> b!107748 (= lt!55261 (lemmaChangeZeroKeyThenAddPairToListMap!48 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) lt!55271 (zeroValue!2478 newMap!16) lt!54982 (minValue!2478 newMap!16) (defaultEntry!2605 newMap!16)))))

(assert (=> b!107748 (= lt!55271 (bvor (extraKeys!2406 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!107748 (= e!70164 (tuple2!2391 true (LongMapFixedSize!911 (defaultEntry!2605 newMap!16) (mask!6762 newMap!16) (bvor (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) lt!54982 (minValue!2478 newMap!16) (_size!504 newMap!16) (_keys!4314 newMap!16) (_values!2588 newMap!16) (_vacant!504 newMap!16))))))

(declare-fun bm!11410 () Bool)

(declare-fun call!11424 () ListLongMap!1549)

(declare-fun call!11413 () ListLongMap!1549)

(assert (=> bm!11410 (= call!11424 call!11413)))

(declare-fun b!107749 () Bool)

(declare-fun e!70161 () tuple2!2390)

(assert (=> b!107749 (= e!70157 e!70161)))

(declare-fun c!18890 () Bool)

(assert (=> b!107749 (= c!18890 ((_ is MissingZero!263) lt!55253))))

(declare-fun b!107750 () Bool)

(assert (=> b!107750 (= e!70151 e!70148)))

(assert (=> b!107750 (= lt!55253 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(assert (=> b!107750 (= c!18888 ((_ is Undefined!263) lt!55253))))

(declare-fun bm!11411 () Bool)

(declare-fun call!11405 () ListLongMap!1549)

(assert (=> bm!11411 (= call!11405 call!11413)))

(declare-fun b!107751 () Bool)

(declare-fun lt!55250 () Unit!3307)

(declare-fun lt!55273 () Unit!3307)

(assert (=> b!107751 (= lt!55250 lt!55273)))

(declare-fun lt!55252 () array!4353)

(assert (=> b!107751 (contains!824 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253)))))

(declare-fun lemmaValidKeyInArrayIsInListMap!107 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) Int) Unit!3307)

(assert (=> b!107751 (= lt!55273 (lemmaValidKeyInArrayIsInListMap!107 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3202 lt!55253) (defaultEntry!2605 newMap!16)))))

(assert (=> b!107751 (= lt!55252 (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))))))

(declare-fun lt!55274 () Unit!3307)

(declare-fun lt!55263 () Unit!3307)

(assert (=> b!107751 (= lt!55274 lt!55263)))

(declare-fun call!11412 () ListLongMap!1549)

(assert (=> b!107751 (= call!11412 call!11424)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!48 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) (_ BitVec 64) V!3233 Int) Unit!3307)

(assert (=> b!107751 (= lt!55263 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!48 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3202 lt!55253) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55251 () Unit!3307)

(declare-fun e!70149 () Unit!3307)

(assert (=> b!107751 (= lt!55251 e!70149)))

(assert (=> b!107751 (= c!18884 call!11416)))

(assert (=> b!107751 (= e!70161 (tuple2!2391 true (LongMapFixedSize!911 (defaultEntry!2605 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (_size!504 newMap!16) (_keys!4314 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (_vacant!504 newMap!16))))))

(declare-fun b!107752 () Bool)

(declare-fun e!70165 () Bool)

(assert (=> b!107752 (= e!70165 ((_ is Undefined!263) lt!55266))))

(declare-fun b!107753 () Bool)

(declare-fun e!70152 () Bool)

(assert (=> b!107753 (= e!70160 e!70152)))

(declare-fun c!18887 () Bool)

(assert (=> b!107753 (= c!18887 (_1!1206 lt!55257))))

(declare-fun b!107754 () Bool)

(declare-fun call!11426 () ListLongMap!1549)

(assert (=> b!107754 (= e!70152 (= call!11426 call!11421))))

(declare-fun b!107755 () Bool)

(declare-fun Unit!3318 () Unit!3307)

(assert (=> b!107755 (= e!70156 Unit!3318)))

(declare-fun lt!55267 () Unit!3307)

(declare-fun call!11418 () Unit!3307)

(assert (=> b!107755 (= lt!55267 call!11418)))

(declare-fun call!11419 () SeekEntryResult!263)

(assert (=> b!107755 (= lt!55256 call!11419)))

(declare-fun res!53463 () Bool)

(assert (=> b!107755 (= res!53463 ((_ is Found!263) lt!55256))))

(assert (=> b!107755 (=> (not res!53463) (not e!70166))))

(assert (=> b!107755 e!70166))

(declare-fun lt!55260 () Unit!3307)

(assert (=> b!107755 (= lt!55260 lt!55267)))

(assert (=> b!107755 false))

(declare-fun bm!11412 () Bool)

(declare-fun call!11425 () Bool)

(assert (=> bm!11412 (= call!11407 call!11425)))

(declare-fun b!107756 () Bool)

(declare-fun res!53454 () Bool)

(assert (=> b!107756 (= res!53454 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3204 lt!55266)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70155 () Bool)

(assert (=> b!107756 (=> (not res!53454) (not e!70155))))

(declare-fun b!107757 () Bool)

(declare-fun res!53450 () Bool)

(assert (=> b!107757 (= res!53450 call!11425)))

(assert (=> b!107757 (=> (not res!53450) (not e!70166))))

(declare-fun b!107758 () Bool)

(declare-fun res!53459 () Bool)

(assert (=> b!107758 (=> (not res!53459) (not e!70147))))

(assert (=> b!107758 (= res!53459 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3201 lt!55266)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11413 () Bool)

(declare-fun call!11417 () SeekEntryResult!263)

(assert (=> bm!11413 (= call!11417 call!11423)))

(declare-fun b!107759 () Bool)

(assert (=> b!107759 (= e!70147 (not call!11414))))

(declare-fun b!107760 () Bool)

(declare-fun res!53452 () Bool)

(assert (=> b!107760 (=> (not res!53452) (not e!70163))))

(assert (=> b!107760 (= res!53452 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3201 lt!55264)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11414 () Bool)

(declare-fun call!11409 () Bool)

(assert (=> bm!11414 (= call!11409 call!11404)))

(declare-fun b!107761 () Bool)

(declare-fun c!18893 () Bool)

(assert (=> b!107761 (= c!18893 ((_ is MissingVacant!263) lt!55264))))

(declare-fun e!70154 () Bool)

(assert (=> b!107761 (= e!70154 e!70150)))

(declare-fun e!70146 () Bool)

(declare-fun b!107762 () Bool)

(assert (=> b!107762 (= e!70146 (= call!11426 (+!137 call!11421 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!107763 () Bool)

(declare-fun lt!55268 () tuple2!2390)

(assert (=> b!107763 (= lt!55268 call!11415)))

(assert (=> b!107763 (= e!70161 (tuple2!2391 (_1!1206 lt!55268) (_2!1206 lt!55268)))))

(declare-fun b!107764 () Bool)

(assert (=> b!107764 (= e!70155 (not call!11414))))

(declare-fun b!107765 () Bool)

(declare-fun res!53462 () Bool)

(assert (=> b!107765 (=> (not res!53462) (not e!70163))))

(assert (=> b!107765 (= res!53462 call!11409)))

(assert (=> b!107765 (= e!70154 e!70163)))

(declare-fun bm!11415 () Bool)

(assert (=> bm!11415 (= call!11419 call!11423)))

(declare-fun b!107766 () Bool)

(declare-fun c!18886 () Bool)

(assert (=> b!107766 (= c!18886 ((_ is MissingVacant!263) lt!55266))))

(assert (=> b!107766 (= e!70162 e!70165)))

(declare-fun bm!11416 () Bool)

(assert (=> bm!11416 (= call!11413 (getCurrentListMap!467 (_keys!4314 newMap!16) (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!107767 () Bool)

(assert (=> b!107767 (= e!70150 e!70159)))

(declare-fun res!53460 () Bool)

(assert (=> b!107767 (= res!53460 call!11409)))

(assert (=> b!107767 (=> (not res!53460) (not e!70159))))

(declare-fun b!107768 () Bool)

(assert (=> b!107768 (= e!70159 (not call!11422))))

(declare-fun b!107769 () Bool)

(assert (=> b!107769 (= e!70158 call!11424)))

(declare-fun bm!11417 () Bool)

(assert (=> bm!11417 (= call!11412 (+!137 (ite c!18892 call!11405 call!11410) (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!107770 () Bool)

(assert (=> b!107770 (= c!18895 ((_ is MissingVacant!263) lt!55253))))

(assert (=> b!107770 (= e!70148 e!70157)))

(declare-fun bm!11418 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) Int) Unit!3307)

(assert (=> bm!11418 (= call!11418 (lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)))))

(declare-fun b!107771 () Bool)

(assert (=> b!107771 (= e!70153 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55255)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!107772 () Bool)

(declare-fun lt!55254 () Unit!3307)

(assert (=> b!107772 (= e!70149 lt!55254)))

(assert (=> b!107772 (= lt!55254 call!11418)))

(assert (=> b!107772 (= lt!55255 call!11417)))

(declare-fun res!53458 () Bool)

(assert (=> b!107772 (= res!53458 ((_ is Found!263) lt!55255))))

(assert (=> b!107772 (=> (not res!53458) (not e!70153))))

(assert (=> b!107772 e!70153))

(declare-fun bm!11419 () Bool)

(assert (=> bm!11419 (= call!11422 call!11408)))

(declare-fun bm!11420 () Bool)

(assert (=> bm!11420 (= call!11411 call!11412)))

(declare-fun b!107773 () Bool)

(declare-fun lt!55249 () Unit!3307)

(assert (=> b!107773 (= e!70156 lt!55249)))

(assert (=> b!107773 (= lt!55249 call!11406)))

(assert (=> b!107773 (= lt!55266 call!11419)))

(assert (=> b!107773 (= c!18894 ((_ is MissingZero!263) lt!55266))))

(assert (=> b!107773 e!70162))

(declare-fun b!107774 () Bool)

(assert (=> b!107774 (= e!70152 e!70146)))

(declare-fun res!53455 () Bool)

(assert (=> b!107774 (= res!53455 (contains!824 call!11426 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> b!107774 (=> (not res!53455) (not e!70146))))

(declare-fun b!107775 () Bool)

(assert (=> b!107775 (= e!70151 e!70164)))

(assert (=> b!107775 (= c!18891 (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107776 () Bool)

(declare-fun Unit!3319 () Unit!3307)

(assert (=> b!107776 (= e!70149 Unit!3319)))

(declare-fun lt!55270 () Unit!3307)

(assert (=> b!107776 (= lt!55270 call!11406)))

(assert (=> b!107776 (= lt!55264 call!11417)))

(assert (=> b!107776 (= c!18889 ((_ is MissingZero!263) lt!55264))))

(assert (=> b!107776 e!70154))

(declare-fun lt!55265 () Unit!3307)

(assert (=> b!107776 (= lt!55265 lt!55270)))

(assert (=> b!107776 false))

(declare-fun bm!11421 () Bool)

(assert (=> bm!11421 (= call!11426 (map!1277 (_2!1206 lt!55257)))))

(declare-fun bm!11422 () Bool)

(assert (=> bm!11422 (= call!11404 call!11420)))

(declare-fun bm!11423 () Bool)

(assert (=> bm!11423 (= call!11425 call!11420)))

(declare-fun b!107777 () Bool)

(assert (=> b!107777 (= e!70165 e!70155)))

(declare-fun res!53456 () Bool)

(assert (=> b!107777 (= res!53456 call!11407)))

(assert (=> b!107777 (=> (not res!53456) (not e!70155))))

(assert (= (and d!29721 c!18892) b!107775))

(assert (= (and d!29721 (not c!18892)) b!107750))

(assert (= (and b!107775 c!18891) b!107748))

(assert (= (and b!107775 (not c!18891)) b!107742))

(assert (= (or b!107748 b!107742) bm!11406))

(assert (= (or b!107748 b!107742) bm!11411))

(assert (= (or b!107748 b!107742) bm!11420))

(assert (= (and b!107750 c!18888) b!107747))

(assert (= (and b!107750 (not c!18888)) b!107770))

(assert (= (and b!107747 c!18883) b!107755))

(assert (= (and b!107747 (not c!18883)) b!107773))

(assert (= (and b!107755 res!53463) b!107757))

(assert (= (and b!107757 res!53450) b!107740))

(assert (= (and b!107773 c!18894) b!107744))

(assert (= (and b!107773 (not c!18894)) b!107766))

(assert (= (and b!107744 res!53451) b!107758))

(assert (= (and b!107758 res!53459) b!107759))

(assert (= (and b!107766 c!18886) b!107777))

(assert (= (and b!107766 (not c!18886)) b!107752))

(assert (= (and b!107777 res!53456) b!107756))

(assert (= (and b!107756 res!53454) b!107764))

(assert (= (or b!107744 b!107777) bm!11412))

(assert (= (or b!107759 b!107764) bm!11405))

(assert (= (or b!107757 bm!11412) bm!11423))

(assert (= (or b!107755 b!107773) bm!11415))

(assert (= (and b!107770 c!18895) b!107743))

(assert (= (and b!107770 (not c!18895)) b!107749))

(assert (= (and b!107749 c!18890) b!107763))

(assert (= (and b!107749 (not c!18890)) b!107751))

(assert (= (and b!107751 c!18884) b!107772))

(assert (= (and b!107751 (not c!18884)) b!107776))

(assert (= (and b!107772 res!53458) b!107741))

(assert (= (and b!107741 res!53453) b!107771))

(assert (= (and b!107776 c!18889) b!107765))

(assert (= (and b!107776 (not c!18889)) b!107761))

(assert (= (and b!107765 res!53462) b!107760))

(assert (= (and b!107760 res!53452) b!107746))

(assert (= (and b!107761 c!18893) b!107767))

(assert (= (and b!107761 (not c!18893)) b!107739))

(assert (= (and b!107767 res!53460) b!107738))

(assert (= (and b!107738 res!53461) b!107768))

(assert (= (or b!107765 b!107767) bm!11414))

(assert (= (or b!107746 b!107768) bm!11419))

(assert (= (or b!107741 bm!11414) bm!11422))

(assert (= (or b!107772 b!107776) bm!11413))

(assert (= (or b!107743 b!107763) bm!11407))

(assert (= (or bm!11423 bm!11422) bm!11400))

(assert (= (or b!107755 b!107772) bm!11418))

(assert (= (or b!107773 b!107776) bm!11404))

(assert (= (or b!107747 b!107751) bm!11410))

(assert (= (or bm!11415 bm!11413) bm!11403))

(assert (= (or bm!11405 bm!11419) bm!11401))

(assert (= (or b!107747 b!107751) bm!11402))

(assert (= (and bm!11402 c!18885) b!107769))

(assert (= (and bm!11402 (not c!18885)) b!107745))

(assert (= (or bm!11411 bm!11410) bm!11416))

(assert (= (or bm!11406 b!107745 b!107751) bm!11408))

(assert (= (or bm!11420 b!107751) bm!11417))

(assert (= (and d!29721 res!53457) b!107753))

(assert (= (and b!107753 c!18887) b!107774))

(assert (= (and b!107753 (not c!18887)) b!107754))

(assert (= (and b!107774 res!53455) b!107762))

(assert (= (or b!107774 b!107762 b!107754) bm!11421))

(assert (= (or b!107762 b!107754) bm!11409))

(assert (=> b!107750 m!120387))

(declare-fun m!120709 () Bool)

(assert (=> b!107750 m!120709))

(declare-fun m!120711 () Bool)

(assert (=> d!29721 m!120711))

(assert (=> d!29721 m!120385))

(declare-fun m!120713 () Bool)

(assert (=> b!107748 m!120713))

(assert (=> bm!11404 m!120387))

(declare-fun m!120715 () Bool)

(assert (=> bm!11404 m!120715))

(declare-fun m!120717 () Bool)

(assert (=> bm!11421 m!120717))

(declare-fun m!120719 () Bool)

(assert (=> b!107738 m!120719))

(declare-fun m!120721 () Bool)

(assert (=> bm!11408 m!120721))

(assert (=> b!107774 m!120387))

(declare-fun m!120723 () Bool)

(assert (=> b!107774 m!120723))

(declare-fun m!120725 () Bool)

(assert (=> bm!11400 m!120725))

(declare-fun m!120727 () Bool)

(assert (=> b!107751 m!120727))

(assert (=> b!107751 m!120727))

(declare-fun m!120729 () Bool)

(assert (=> b!107751 m!120729))

(declare-fun m!120731 () Bool)

(assert (=> b!107751 m!120731))

(declare-fun m!120733 () Bool)

(assert (=> b!107751 m!120733))

(assert (=> b!107751 m!120729))

(declare-fun m!120735 () Bool)

(assert (=> b!107751 m!120735))

(assert (=> b!107751 m!120387))

(declare-fun m!120737 () Bool)

(assert (=> b!107751 m!120737))

(assert (=> bm!11407 m!120387))

(declare-fun m!120739 () Bool)

(assert (=> bm!11407 m!120739))

(assert (=> bm!11401 m!120387))

(declare-fun m!120741 () Bool)

(assert (=> bm!11401 m!120741))

(declare-fun m!120743 () Bool)

(assert (=> b!107762 m!120743))

(declare-fun m!120745 () Bool)

(assert (=> bm!11417 m!120745))

(declare-fun m!120747 () Bool)

(assert (=> b!107756 m!120747))

(declare-fun m!120749 () Bool)

(assert (=> b!107760 m!120749))

(assert (=> bm!11418 m!120387))

(declare-fun m!120751 () Bool)

(assert (=> bm!11418 m!120751))

(assert (=> bm!11403 m!120387))

(assert (=> bm!11403 m!120709))

(assert (=> bm!11416 m!120735))

(declare-fun m!120753 () Bool)

(assert (=> bm!11416 m!120753))

(declare-fun m!120755 () Bool)

(assert (=> b!107740 m!120755))

(declare-fun m!120757 () Bool)

(assert (=> b!107771 m!120757))

(declare-fun m!120759 () Bool)

(assert (=> b!107758 m!120759))

(assert (=> bm!11402 m!120387))

(declare-fun m!120761 () Bool)

(assert (=> bm!11402 m!120761))

(declare-fun m!120763 () Bool)

(assert (=> b!107742 m!120763))

(assert (=> bm!11409 m!120371))

(assert (=> b!107355 d!29721))

(declare-fun d!29723 () Bool)

(assert (=> d!29723 (= (array_inv!1301 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvsge (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!107369 d!29723))

(declare-fun d!29725 () Bool)

(assert (=> d!29725 (= (array_inv!1302 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvsge (size!2320 (_values!2588 (v!2904 (underlying!360 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!107369 d!29725))

(declare-fun condMapEmpty!3983 () Bool)

(declare-fun mapDefault!3983 () ValueCell!1001)

(assert (=> mapNonEmpty!3968 (= condMapEmpty!3983 (= mapRest!3968 ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3983)))))

(declare-fun e!70172 () Bool)

(declare-fun mapRes!3983 () Bool)

(assert (=> mapNonEmpty!3968 (= tp!9965 (and e!70172 mapRes!3983))))

(declare-fun mapIsEmpty!3983 () Bool)

(assert (=> mapIsEmpty!3983 mapRes!3983))

(declare-fun b!107784 () Bool)

(declare-fun e!70171 () Bool)

(assert (=> b!107784 (= e!70171 tp_is_empty!2689)))

(declare-fun b!107785 () Bool)

(assert (=> b!107785 (= e!70172 tp_is_empty!2689)))

(declare-fun mapNonEmpty!3983 () Bool)

(declare-fun tp!9995 () Bool)

(assert (=> mapNonEmpty!3983 (= mapRes!3983 (and tp!9995 e!70171))))

(declare-fun mapKey!3983 () (_ BitVec 32))

(declare-fun mapRest!3983 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapValue!3983 () ValueCell!1001)

(assert (=> mapNonEmpty!3983 (= mapRest!3968 (store mapRest!3983 mapKey!3983 mapValue!3983))))

(assert (= (and mapNonEmpty!3968 condMapEmpty!3983) mapIsEmpty!3983))

(assert (= (and mapNonEmpty!3968 (not condMapEmpty!3983)) mapNonEmpty!3983))

(assert (= (and mapNonEmpty!3983 ((_ is ValueCellFull!1001) mapValue!3983)) b!107784))

(assert (= (and mapNonEmpty!3968 ((_ is ValueCellFull!1001) mapDefault!3983)) b!107785))

(declare-fun m!120765 () Bool)

(assert (=> mapNonEmpty!3983 m!120765))

(declare-fun condMapEmpty!3984 () Bool)

(declare-fun mapDefault!3984 () ValueCell!1001)

(assert (=> mapNonEmpty!3967 (= condMapEmpty!3984 (= mapRest!3967 ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3984)))))

(declare-fun e!70174 () Bool)

(declare-fun mapRes!3984 () Bool)

(assert (=> mapNonEmpty!3967 (= tp!9966 (and e!70174 mapRes!3984))))

(declare-fun mapIsEmpty!3984 () Bool)

(assert (=> mapIsEmpty!3984 mapRes!3984))

(declare-fun b!107786 () Bool)

(declare-fun e!70173 () Bool)

(assert (=> b!107786 (= e!70173 tp_is_empty!2689)))

(declare-fun b!107787 () Bool)

(assert (=> b!107787 (= e!70174 tp_is_empty!2689)))

(declare-fun mapNonEmpty!3984 () Bool)

(declare-fun tp!9996 () Bool)

(assert (=> mapNonEmpty!3984 (= mapRes!3984 (and tp!9996 e!70173))))

(declare-fun mapRest!3984 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapValue!3984 () ValueCell!1001)

(declare-fun mapKey!3984 () (_ BitVec 32))

(assert (=> mapNonEmpty!3984 (= mapRest!3967 (store mapRest!3984 mapKey!3984 mapValue!3984))))

(assert (= (and mapNonEmpty!3967 condMapEmpty!3984) mapIsEmpty!3984))

(assert (= (and mapNonEmpty!3967 (not condMapEmpty!3984)) mapNonEmpty!3984))

(assert (= (and mapNonEmpty!3984 ((_ is ValueCellFull!1001) mapValue!3984)) b!107786))

(assert (= (and mapNonEmpty!3967 ((_ is ValueCellFull!1001) mapDefault!3984)) b!107787))

(declare-fun m!120767 () Bool)

(assert (=> mapNonEmpty!3984 m!120767))

(declare-fun b_lambda!4809 () Bool)

(assert (= b_lambda!4807 (or (and b!107369 b_free!2545) (and b!107358 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))))) b_lambda!4809)))

(declare-fun b_lambda!4811 () Bool)

(assert (= b_lambda!4805 (or (and b!107369 b_free!2545) (and b!107358 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))))) b_lambda!4811)))

(declare-fun b_lambda!4813 () Bool)

(assert (= b_lambda!4803 (or (and b!107369 b_free!2545) (and b!107358 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))))) b_lambda!4813)))

(check-sat (not bm!11343) (not d!29687) (not b!107647) (not b!107606) (not b!107657) (not bm!11403) (not d!29703) (not bm!11401) (not b!107648) (not d!29707) (not b!107750) (not d!29713) (not b!107751) (not bm!11418) (not b!107635) (not b!107642) (not b!107643) (not bm!11348) b_and!6641 (not b!107605) (not b!107600) (not b!107587) (not b!107774) (not b_lambda!4809) (not b!107599) (not d!29705) (not bm!11339) (not b!107545) (not d!29695) (not b!107610) (not b!107539) (not d!29721) (not mapNonEmpty!3984) (not d!29719) (not mapNonEmpty!3983) (not bm!11408) (not b!107636) (not bm!11404) (not b_next!2547) (not b!107551) (not b!107563) b_and!6643 (not b!107645) (not b!107564) (not bm!11416) (not bm!11351) (not b!107575) (not b!107589) (not b!107553) (not b!107644) (not d!29685) (not b!107655) (not b!107607) (not b_lambda!4813) tp_is_empty!2689 (not bm!11345) (not d!29715) (not d!29711) (not bm!11417) (not b_lambda!4801) (not b!107590) (not b!107762) (not d!29691) (not b!107608) (not b!107638) (not b!107549) (not d!29699) (not b!107609) (not bm!11342) (not b!107742) (not bm!11402) (not b!107544) (not b!107598) (not d!29693) (not b!107550) (not bm!11407) (not b_lambda!4811) (not b_next!2545) (not d!29709) (not b!107639) (not bm!11421) (not b!107570) (not b!107555) (not bm!11409) (not b!107748) (not bm!11400))
(check-sat b_and!6641 b_and!6643 (not b_next!2545) (not b_next!2547))
(get-model)

(declare-fun d!29727 () Bool)

(declare-fun res!53469 () Bool)

(declare-fun e!70182 () Bool)

(assert (=> d!29727 (=> res!53469 e!70182)))

(assert (=> d!29727 (= res!53469 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!29727 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4314 newMap!16) (mask!6762 newMap!16)) e!70182)))

(declare-fun b!107796 () Bool)

(declare-fun e!70181 () Bool)

(declare-fun e!70183 () Bool)

(assert (=> b!107796 (= e!70181 e!70183)))

(declare-fun lt!55283 () (_ BitVec 64))

(assert (=> b!107796 (= lt!55283 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55282 () Unit!3307)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4351 (_ BitVec 64) (_ BitVec 32)) Unit!3307)

(assert (=> b!107796 (= lt!55282 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4314 newMap!16) lt!55283 #b00000000000000000000000000000000))))

(assert (=> b!107796 (arrayContainsKey!0 (_keys!4314 newMap!16) lt!55283 #b00000000000000000000000000000000)))

(declare-fun lt!55284 () Unit!3307)

(assert (=> b!107796 (= lt!55284 lt!55282)))

(declare-fun res!53468 () Bool)

(assert (=> b!107796 (= res!53468 (= (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) (_keys!4314 newMap!16) (mask!6762 newMap!16)) (Found!263 #b00000000000000000000000000000000)))))

(assert (=> b!107796 (=> (not res!53468) (not e!70183))))

(declare-fun bm!11426 () Bool)

(declare-fun call!11429 () Bool)

(assert (=> bm!11426 (= call!11429 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(declare-fun b!107797 () Bool)

(assert (=> b!107797 (= e!70183 call!11429)))

(declare-fun b!107798 () Bool)

(assert (=> b!107798 (= e!70182 e!70181)))

(declare-fun c!18898 () Bool)

(assert (=> b!107798 (= c!18898 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!107799 () Bool)

(assert (=> b!107799 (= e!70181 call!11429)))

(assert (= (and d!29727 (not res!53469)) b!107798))

(assert (= (and b!107798 c!18898) b!107796))

(assert (= (and b!107798 (not c!18898)) b!107799))

(assert (= (and b!107796 res!53468) b!107797))

(assert (= (or b!107797 b!107799) bm!11426))

(declare-fun m!120769 () Bool)

(assert (=> b!107796 m!120769))

(declare-fun m!120771 () Bool)

(assert (=> b!107796 m!120771))

(declare-fun m!120773 () Bool)

(assert (=> b!107796 m!120773))

(assert (=> b!107796 m!120769))

(declare-fun m!120775 () Bool)

(assert (=> b!107796 m!120775))

(declare-fun m!120777 () Bool)

(assert (=> bm!11426 m!120777))

(assert (=> b!107798 m!120769))

(assert (=> b!107798 m!120769))

(declare-fun m!120779 () Bool)

(assert (=> b!107798 m!120779))

(assert (=> b!107599 d!29727))

(declare-fun d!29729 () Bool)

(declare-fun get!1344 (Option!161) V!3233)

(assert (=> d!29729 (= (apply!99 lt!55124 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!155 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4413 () Bool)

(assert (= bs!4413 d!29729))

(declare-fun m!120781 () Bool)

(assert (=> bs!4413 m!120781))

(assert (=> bs!4413 m!120781))

(declare-fun m!120783 () Bool)

(assert (=> bs!4413 m!120783))

(assert (=> b!107544 d!29729))

(declare-fun d!29731 () Bool)

(declare-fun isEmpty!378 (List!1623) Bool)

(assert (=> d!29731 (= (isEmpty!377 lt!55175) (isEmpty!378 (toList!790 lt!55175)))))

(declare-fun bs!4414 () Bool)

(assert (= bs!4414 d!29731))

(declare-fun m!120785 () Bool)

(assert (=> bs!4414 m!120785))

(assert (=> b!107638 d!29731))

(declare-fun b!107808 () Bool)

(declare-fun res!53481 () Bool)

(declare-fun e!70186 () Bool)

(assert (=> b!107808 (=> (not res!53481) (not e!70186))))

(assert (=> b!107808 (= res!53481 (and (= (size!2320 (_values!2588 newMap!16)) (bvadd (mask!6762 newMap!16) #b00000000000000000000000000000001)) (= (size!2319 (_keys!4314 newMap!16)) (size!2320 (_values!2588 newMap!16))) (bvsge (_size!504 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!504 newMap!16) (bvadd (mask!6762 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun d!29733 () Bool)

(declare-fun res!53478 () Bool)

(assert (=> d!29733 (=> (not res!53478) (not e!70186))))

(assert (=> d!29733 (= res!53478 (validMask!0 (mask!6762 newMap!16)))))

(assert (=> d!29733 (= (simpleValid!75 newMap!16) e!70186)))

(declare-fun b!107810 () Bool)

(declare-fun res!53480 () Bool)

(assert (=> b!107810 (=> (not res!53480) (not e!70186))))

(declare-fun size!2325 (LongMapFixedSize!910) (_ BitVec 32))

(assert (=> b!107810 (= res!53480 (= (size!2325 newMap!16) (bvadd (_size!504 newMap!16) (bvsdiv (bvadd (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!107809 () Bool)

(declare-fun res!53479 () Bool)

(assert (=> b!107809 (=> (not res!53479) (not e!70186))))

(assert (=> b!107809 (= res!53479 (bvsge (size!2325 newMap!16) (_size!504 newMap!16)))))

(declare-fun b!107811 () Bool)

(assert (=> b!107811 (= e!70186 (and (bvsge (extraKeys!2406 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2406 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!504 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!29733 res!53478) b!107808))

(assert (= (and b!107808 res!53481) b!107809))

(assert (= (and b!107809 res!53479) b!107810))

(assert (= (and b!107810 res!53480) b!107811))

(declare-fun m!120787 () Bool)

(assert (=> d!29733 m!120787))

(declare-fun m!120789 () Bool)

(assert (=> b!107810 m!120789))

(assert (=> b!107809 m!120789))

(assert (=> d!29703 d!29733))

(assert (=> d!29695 d!29701))

(declare-fun d!29735 () Bool)

(assert (=> d!29735 (arrayNoDuplicates!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) from!355 Nil!1619)))

(assert (=> d!29735 true))

(declare-fun _$71!150 () Unit!3307)

(assert (=> d!29735 (= (choose!39 (_keys!4314 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!150)))

(declare-fun bs!4415 () Bool)

(assert (= bs!4415 d!29735))

(assert (=> bs!4415 m!120403))

(assert (=> d!29695 d!29735))

(declare-fun d!29737 () Bool)

(declare-fun lt!55287 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!111 (List!1623) (InoxSet tuple2!2392))

(assert (=> d!29737 (= lt!55287 (select (content!111 (toList!790 lt!55143)) lt!54985))))

(declare-fun e!70192 () Bool)

(assert (=> d!29737 (= lt!55287 e!70192)))

(declare-fun res!53486 () Bool)

(assert (=> d!29737 (=> (not res!53486) (not e!70192))))

(assert (=> d!29737 (= res!53486 ((_ is Cons!1619) (toList!790 lt!55143)))))

(assert (=> d!29737 (= (contains!826 (toList!790 lt!55143) lt!54985) lt!55287)))

(declare-fun b!107816 () Bool)

(declare-fun e!70191 () Bool)

(assert (=> b!107816 (= e!70192 e!70191)))

(declare-fun res!53487 () Bool)

(assert (=> b!107816 (=> res!53487 e!70191)))

(assert (=> b!107816 (= res!53487 (= (h!2217 (toList!790 lt!55143)) lt!54985))))

(declare-fun b!107817 () Bool)

(assert (=> b!107817 (= e!70191 (contains!826 (t!5730 (toList!790 lt!55143)) lt!54985))))

(assert (= (and d!29737 res!53486) b!107816))

(assert (= (and b!107816 (not res!53487)) b!107817))

(declare-fun m!120791 () Bool)

(assert (=> d!29737 m!120791))

(declare-fun m!120793 () Bool)

(assert (=> d!29737 m!120793))

(declare-fun m!120795 () Bool)

(assert (=> b!107817 m!120795))

(assert (=> b!107606 d!29737))

(assert (=> b!107575 d!29697))

(declare-fun d!29739 () Bool)

(assert (=> d!29739 (= (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107642 d!29739))

(declare-fun d!29741 () Bool)

(declare-fun lt!55288 () Bool)

(assert (=> d!29741 (= lt!55288 (select (content!111 (toList!790 lt!55151)) lt!54977))))

(declare-fun e!70194 () Bool)

(assert (=> d!29741 (= lt!55288 e!70194)))

(declare-fun res!53488 () Bool)

(assert (=> d!29741 (=> (not res!53488) (not e!70194))))

(assert (=> d!29741 (= res!53488 ((_ is Cons!1619) (toList!790 lt!55151)))))

(assert (=> d!29741 (= (contains!826 (toList!790 lt!55151) lt!54977) lt!55288)))

(declare-fun b!107818 () Bool)

(declare-fun e!70193 () Bool)

(assert (=> b!107818 (= e!70194 e!70193)))

(declare-fun res!53489 () Bool)

(assert (=> b!107818 (=> res!53489 e!70193)))

(assert (=> b!107818 (= res!53489 (= (h!2217 (toList!790 lt!55151)) lt!54977))))

(declare-fun b!107819 () Bool)

(assert (=> b!107819 (= e!70193 (contains!826 (t!5730 (toList!790 lt!55151)) lt!54977))))

(assert (= (and d!29741 res!53488) b!107818))

(assert (= (and b!107818 (not res!53489)) b!107819))

(declare-fun m!120797 () Bool)

(assert (=> d!29741 m!120797))

(declare-fun m!120799 () Bool)

(assert (=> d!29741 m!120799))

(declare-fun m!120801 () Bool)

(assert (=> b!107819 m!120801))

(assert (=> b!107610 d!29741))

(declare-fun d!29743 () Bool)

(declare-fun e!70197 () Bool)

(assert (=> d!29743 e!70197))

(declare-fun res!53494 () Bool)

(assert (=> d!29743 (=> (not res!53494) (not e!70197))))

(declare-fun lt!55293 () SeekEntryResult!263)

(assert (=> d!29743 (= res!53494 ((_ is Found!263) lt!55293))))

(assert (=> d!29743 (= lt!55293 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(declare-fun lt!55294 () Unit!3307)

(declare-fun choose!676 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) Int) Unit!3307)

(assert (=> d!29743 (= lt!55294 (choose!676 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)))))

(assert (=> d!29743 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29743 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)) lt!55294)))

(declare-fun b!107824 () Bool)

(declare-fun res!53495 () Bool)

(assert (=> b!107824 (=> (not res!53495) (not e!70197))))

(assert (=> b!107824 (= res!53495 (inRange!0 (index!3202 lt!55293) (mask!6762 newMap!16)))))

(declare-fun b!107825 () Bool)

(assert (=> b!107825 (= e!70197 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55293)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> b!107825 (and (bvsge (index!3202 lt!55293) #b00000000000000000000000000000000) (bvslt (index!3202 lt!55293) (size!2319 (_keys!4314 newMap!16))))))

(assert (= (and d!29743 res!53494) b!107824))

(assert (= (and b!107824 res!53495) b!107825))

(assert (=> d!29743 m!120387))

(assert (=> d!29743 m!120709))

(assert (=> d!29743 m!120387))

(declare-fun m!120803 () Bool)

(assert (=> d!29743 m!120803))

(assert (=> d!29743 m!120787))

(declare-fun m!120805 () Bool)

(assert (=> b!107824 m!120805))

(declare-fun m!120807 () Bool)

(assert (=> b!107825 m!120807))

(assert (=> bm!11418 d!29743))

(declare-fun d!29745 () Bool)

(declare-fun e!70198 () Bool)

(assert (=> d!29745 e!70198))

(declare-fun res!53497 () Bool)

(assert (=> d!29745 (=> (not res!53497) (not e!70198))))

(declare-fun lt!55295 () ListLongMap!1549)

(assert (=> d!29745 (= res!53497 (contains!824 lt!55295 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun lt!55298 () List!1623)

(assert (=> d!29745 (= lt!55295 (ListLongMap!1550 lt!55298))))

(declare-fun lt!55296 () Unit!3307)

(declare-fun lt!55297 () Unit!3307)

(assert (=> d!29745 (= lt!55296 lt!55297)))

(assert (=> d!29745 (= (getValueByKey!155 lt!55298 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) (Some!160 (_2!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!29745 (= lt!55297 (lemmaContainsTupThenGetReturnValue!74 lt!55298 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (_2!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!29745 (= lt!55298 (insertStrictlySorted!77 (toList!790 (ite c!18892 call!11405 call!11410)) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (_2!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!29745 (= (+!137 (ite c!18892 call!11405 call!11410) (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) lt!55295)))

(declare-fun b!107826 () Bool)

(declare-fun res!53496 () Bool)

(assert (=> b!107826 (=> (not res!53496) (not e!70198))))

(assert (=> b!107826 (= res!53496 (= (getValueByKey!155 (toList!790 lt!55295) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) (Some!160 (_2!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(declare-fun b!107827 () Bool)

(assert (=> b!107827 (= e!70198 (contains!826 (toList!790 lt!55295) (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (= (and d!29745 res!53497) b!107826))

(assert (= (and b!107826 res!53496) b!107827))

(declare-fun m!120809 () Bool)

(assert (=> d!29745 m!120809))

(declare-fun m!120811 () Bool)

(assert (=> d!29745 m!120811))

(declare-fun m!120813 () Bool)

(assert (=> d!29745 m!120813))

(declare-fun m!120815 () Bool)

(assert (=> d!29745 m!120815))

(declare-fun m!120817 () Bool)

(assert (=> b!107826 m!120817))

(declare-fun m!120819 () Bool)

(assert (=> b!107827 m!120819))

(assert (=> bm!11417 d!29745))

(declare-fun d!29747 () Bool)

(declare-fun lt!55299 () Bool)

(assert (=> d!29747 (= lt!55299 (select (content!111 (toList!790 lt!55147)) lt!54977))))

(declare-fun e!70200 () Bool)

(assert (=> d!29747 (= lt!55299 e!70200)))

(declare-fun res!53498 () Bool)

(assert (=> d!29747 (=> (not res!53498) (not e!70200))))

(assert (=> d!29747 (= res!53498 ((_ is Cons!1619) (toList!790 lt!55147)))))

(assert (=> d!29747 (= (contains!826 (toList!790 lt!55147) lt!54977) lt!55299)))

(declare-fun b!107828 () Bool)

(declare-fun e!70199 () Bool)

(assert (=> b!107828 (= e!70200 e!70199)))

(declare-fun res!53499 () Bool)

(assert (=> b!107828 (=> res!53499 e!70199)))

(assert (=> b!107828 (= res!53499 (= (h!2217 (toList!790 lt!55147)) lt!54977))))

(declare-fun b!107829 () Bool)

(assert (=> b!107829 (= e!70199 (contains!826 (t!5730 (toList!790 lt!55147)) lt!54977))))

(assert (= (and d!29747 res!53498) b!107828))

(assert (= (and b!107828 (not res!53499)) b!107829))

(declare-fun m!120821 () Bool)

(assert (=> d!29747 m!120821))

(declare-fun m!120823 () Bool)

(assert (=> d!29747 m!120823))

(declare-fun m!120825 () Bool)

(assert (=> b!107829 m!120825))

(assert (=> b!107608 d!29747))

(declare-fun b!107830 () Bool)

(declare-fun lt!55305 () Unit!3307)

(declare-fun lt!55304 () Unit!3307)

(assert (=> b!107830 (= lt!55305 lt!55304)))

(declare-fun lt!55302 () V!3233)

(declare-fun lt!55300 () ListLongMap!1549)

(declare-fun lt!55301 () (_ BitVec 64))

(declare-fun lt!55303 () (_ BitVec 64))

(assert (=> b!107830 (not (contains!824 (+!137 lt!55300 (tuple2!2393 lt!55303 lt!55302)) lt!55301))))

(assert (=> b!107830 (= lt!55304 (addStillNotContains!48 lt!55300 lt!55303 lt!55302 lt!55301))))

(assert (=> b!107830 (= lt!55301 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!107830 (= lt!55302 (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!107830 (= lt!55303 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!11430 () ListLongMap!1549)

(assert (=> b!107830 (= lt!55300 call!11430)))

(declare-fun e!70206 () ListLongMap!1549)

(assert (=> b!107830 (= e!70206 (+!137 call!11430 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!107831 () Bool)

(declare-fun lt!55306 () ListLongMap!1549)

(declare-fun e!70205 () Bool)

(assert (=> b!107831 (= e!70205 (= lt!55306 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!107832 () Bool)

(assert (=> b!107832 (= e!70206 call!11430)))

(declare-fun b!107833 () Bool)

(assert (=> b!107833 (= e!70205 (isEmpty!377 lt!55306))))

(declare-fun b!107834 () Bool)

(assert (=> b!107834 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> b!107834 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2320 (_values!2588 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun e!70202 () Bool)

(assert (=> b!107834 (= e!70202 (= (apply!99 lt!55306 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!107835 () Bool)

(declare-fun e!70204 () ListLongMap!1549)

(assert (=> b!107835 (= e!70204 (ListLongMap!1550 Nil!1620))))

(declare-fun b!107836 () Bool)

(declare-fun e!70207 () Bool)

(declare-fun e!70201 () Bool)

(assert (=> b!107836 (= e!70207 e!70201)))

(declare-fun c!18900 () Bool)

(declare-fun e!70203 () Bool)

(assert (=> b!107836 (= c!18900 e!70203)))

(declare-fun res!53500 () Bool)

(assert (=> b!107836 (=> (not res!53500) (not e!70203))))

(assert (=> b!107836 (= res!53500 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!107838 () Bool)

(assert (=> b!107838 (= e!70204 e!70206)))

(declare-fun c!18902 () Bool)

(assert (=> b!107838 (= c!18902 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!11427 () Bool)

(assert (=> bm!11427 (= call!11430 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!107839 () Bool)

(declare-fun res!53502 () Bool)

(assert (=> b!107839 (=> (not res!53502) (not e!70207))))

(assert (=> b!107839 (= res!53502 (not (contains!824 lt!55306 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107840 () Bool)

(assert (=> b!107840 (= e!70201 e!70202)))

(assert (=> b!107840 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun res!53503 () Bool)

(assert (=> b!107840 (= res!53503 (contains!824 lt!55306 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!107840 (=> (not res!53503) (not e!70202))))

(declare-fun b!107841 () Bool)

(assert (=> b!107841 (= e!70201 e!70205)))

(declare-fun c!18901 () Bool)

(assert (=> b!107841 (= c!18901 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun d!29749 () Bool)

(assert (=> d!29749 e!70207))

(declare-fun res!53501 () Bool)

(assert (=> d!29749 (=> (not res!53501) (not e!70207))))

(assert (=> d!29749 (= res!53501 (not (contains!824 lt!55306 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29749 (= lt!55306 e!70204)))

(declare-fun c!18899 () Bool)

(assert (=> d!29749 (= c!18899 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> d!29749 (validMask!0 (mask!6762 (v!2904 (underlying!360 thiss!992))))))

(assert (=> d!29749 (= (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))) lt!55306)))

(declare-fun b!107837 () Bool)

(assert (=> b!107837 (= e!70203 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!107837 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (= (and d!29749 c!18899) b!107835))

(assert (= (and d!29749 (not c!18899)) b!107838))

(assert (= (and b!107838 c!18902) b!107830))

(assert (= (and b!107838 (not c!18902)) b!107832))

(assert (= (or b!107830 b!107832) bm!11427))

(assert (= (and d!29749 res!53501) b!107839))

(assert (= (and b!107839 res!53502) b!107836))

(assert (= (and b!107836 res!53500) b!107837))

(assert (= (and b!107836 c!18900) b!107840))

(assert (= (and b!107836 (not c!18900)) b!107841))

(assert (= (and b!107840 res!53503) b!107834))

(assert (= (and b!107841 c!18901) b!107831))

(assert (= (and b!107841 (not c!18901)) b!107833))

(declare-fun b_lambda!4815 () Bool)

(assert (=> (not b_lambda!4815) (not b!107830)))

(assert (=> b!107830 t!5726))

(declare-fun b_and!6645 () Bool)

(assert (= b_and!6641 (and (=> t!5726 result!3485) b_and!6645)))

(assert (=> b!107830 t!5728))

(declare-fun b_and!6647 () Bool)

(assert (= b_and!6643 (and (=> t!5728 result!3489) b_and!6647)))

(declare-fun b_lambda!4817 () Bool)

(assert (=> (not b_lambda!4817) (not b!107834)))

(assert (=> b!107834 t!5726))

(declare-fun b_and!6649 () Bool)

(assert (= b_and!6645 (and (=> t!5726 result!3485) b_and!6649)))

(assert (=> b!107834 t!5728))

(declare-fun b_and!6651 () Bool)

(assert (= b_and!6647 (and (=> t!5728 result!3489) b_and!6651)))

(declare-fun m!120827 () Bool)

(assert (=> b!107834 m!120827))

(assert (=> b!107834 m!120397))

(declare-fun m!120829 () Bool)

(assert (=> b!107834 m!120829))

(declare-fun m!120831 () Bool)

(assert (=> b!107834 m!120831))

(assert (=> b!107834 m!120397))

(assert (=> b!107834 m!120831))

(declare-fun m!120833 () Bool)

(assert (=> b!107834 m!120833))

(assert (=> b!107834 m!120827))

(declare-fun m!120835 () Bool)

(assert (=> d!29749 m!120835))

(assert (=> d!29749 m!120417))

(assert (=> b!107838 m!120831))

(assert (=> b!107838 m!120831))

(declare-fun m!120837 () Bool)

(assert (=> b!107838 m!120837))

(declare-fun m!120839 () Bool)

(assert (=> b!107831 m!120839))

(declare-fun m!120841 () Bool)

(assert (=> b!107839 m!120841))

(assert (=> b!107840 m!120831))

(assert (=> b!107840 m!120831))

(declare-fun m!120843 () Bool)

(assert (=> b!107840 m!120843))

(assert (=> b!107830 m!120827))

(assert (=> b!107830 m!120397))

(assert (=> b!107830 m!120829))

(declare-fun m!120845 () Bool)

(assert (=> b!107830 m!120845))

(assert (=> b!107830 m!120845))

(declare-fun m!120847 () Bool)

(assert (=> b!107830 m!120847))

(assert (=> b!107830 m!120397))

(assert (=> b!107830 m!120827))

(declare-fun m!120849 () Bool)

(assert (=> b!107830 m!120849))

(declare-fun m!120851 () Bool)

(assert (=> b!107830 m!120851))

(assert (=> b!107830 m!120831))

(assert (=> b!107837 m!120831))

(assert (=> b!107837 m!120831))

(assert (=> b!107837 m!120837))

(declare-fun m!120853 () Bool)

(assert (=> b!107833 m!120853))

(assert (=> bm!11427 m!120839))

(assert (=> bm!11351 d!29749))

(declare-fun d!29751 () Bool)

(declare-fun lt!55307 () Bool)

(assert (=> d!29751 (= lt!55307 (select (content!111 (toList!790 lt!55176)) lt!54985))))

(declare-fun e!70209 () Bool)

(assert (=> d!29751 (= lt!55307 e!70209)))

(declare-fun res!53504 () Bool)

(assert (=> d!29751 (=> (not res!53504) (not e!70209))))

(assert (=> d!29751 (= res!53504 ((_ is Cons!1619) (toList!790 lt!55176)))))

(assert (=> d!29751 (= (contains!826 (toList!790 lt!55176) lt!54985) lt!55307)))

(declare-fun b!107842 () Bool)

(declare-fun e!70208 () Bool)

(assert (=> b!107842 (= e!70209 e!70208)))

(declare-fun res!53505 () Bool)

(assert (=> b!107842 (=> res!53505 e!70208)))

(assert (=> b!107842 (= res!53505 (= (h!2217 (toList!790 lt!55176)) lt!54985))))

(declare-fun b!107843 () Bool)

(assert (=> b!107843 (= e!70208 (contains!826 (t!5730 (toList!790 lt!55176)) lt!54985))))

(assert (= (and d!29751 res!53504) b!107842))

(assert (= (and b!107842 (not res!53505)) b!107843))

(declare-fun m!120855 () Bool)

(assert (=> d!29751 m!120855))

(declare-fun m!120857 () Bool)

(assert (=> d!29751 m!120857))

(declare-fun m!120859 () Bool)

(assert (=> b!107843 m!120859))

(assert (=> b!107648 d!29751))

(declare-fun d!29753 () Bool)

(declare-fun e!70210 () Bool)

(assert (=> d!29753 e!70210))

(declare-fun res!53506 () Bool)

(assert (=> d!29753 (=> res!53506 e!70210)))

(declare-fun lt!55308 () Bool)

(assert (=> d!29753 (= res!53506 (not lt!55308))))

(declare-fun lt!55309 () Bool)

(assert (=> d!29753 (= lt!55308 lt!55309)))

(declare-fun lt!55311 () Unit!3307)

(declare-fun e!70211 () Unit!3307)

(assert (=> d!29753 (= lt!55311 e!70211)))

(declare-fun c!18903 () Bool)

(assert (=> d!29753 (= c!18903 lt!55309)))

(assert (=> d!29753 (= lt!55309 (containsKey!159 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!29753 (= (contains!824 lt!55175 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!55308)))

(declare-fun b!107844 () Bool)

(declare-fun lt!55310 () Unit!3307)

(assert (=> b!107844 (= e!70211 lt!55310)))

(assert (=> b!107844 (= lt!55310 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107844 (isDefined!109 (getValueByKey!155 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!107845 () Bool)

(declare-fun Unit!3320 () Unit!3307)

(assert (=> b!107845 (= e!70211 Unit!3320)))

(declare-fun b!107846 () Bool)

(assert (=> b!107846 (= e!70210 (isDefined!109 (getValueByKey!155 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!29753 c!18903) b!107844))

(assert (= (and d!29753 (not c!18903)) b!107845))

(assert (= (and d!29753 (not res!53506)) b!107846))

(assert (=> d!29753 m!120545))

(declare-fun m!120861 () Bool)

(assert (=> d!29753 m!120861))

(assert (=> b!107844 m!120545))

(declare-fun m!120863 () Bool)

(assert (=> b!107844 m!120863))

(assert (=> b!107844 m!120545))

(declare-fun m!120865 () Bool)

(assert (=> b!107844 m!120865))

(assert (=> b!107844 m!120865))

(declare-fun m!120867 () Bool)

(assert (=> b!107844 m!120867))

(assert (=> b!107846 m!120545))

(assert (=> b!107846 m!120865))

(assert (=> b!107846 m!120865))

(assert (=> b!107846 m!120867))

(assert (=> b!107645 d!29753))

(declare-fun bm!11428 () Bool)

(declare-fun c!18904 () Bool)

(declare-fun call!11431 () Bool)

(assert (=> bm!11428 (= call!11431 (arrayNoDuplicates!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18904 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619))))))

(declare-fun b!107847 () Bool)

(declare-fun e!70215 () Bool)

(assert (=> b!107847 (= e!70215 (contains!825 (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!29755 () Bool)

(declare-fun res!53509 () Bool)

(declare-fun e!70212 () Bool)

(assert (=> d!29755 (=> res!53509 e!70212)))

(assert (=> d!29755 (= res!53509 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> d!29755 (= (arrayNoDuplicates!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)) e!70212)))

(declare-fun b!107848 () Bool)

(declare-fun e!70214 () Bool)

(assert (=> b!107848 (= e!70214 call!11431)))

(declare-fun b!107849 () Bool)

(declare-fun e!70213 () Bool)

(assert (=> b!107849 (= e!70212 e!70213)))

(declare-fun res!53508 () Bool)

(assert (=> b!107849 (=> (not res!53508) (not e!70213))))

(assert (=> b!107849 (= res!53508 (not e!70215))))

(declare-fun res!53507 () Bool)

(assert (=> b!107849 (=> (not res!53507) (not e!70215))))

(assert (=> b!107849 (= res!53507 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!107850 () Bool)

(assert (=> b!107850 (= e!70213 e!70214)))

(assert (=> b!107850 (= c!18904 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!107851 () Bool)

(assert (=> b!107851 (= e!70214 call!11431)))

(assert (= (and d!29755 (not res!53509)) b!107849))

(assert (= (and b!107849 res!53507) b!107847))

(assert (= (and b!107849 res!53508) b!107850))

(assert (= (and b!107850 c!18904) b!107848))

(assert (= (and b!107850 (not c!18904)) b!107851))

(assert (= (or b!107848 b!107851) bm!11428))

(declare-fun m!120869 () Bool)

(assert (=> bm!11428 m!120869))

(declare-fun m!120871 () Bool)

(assert (=> bm!11428 m!120871))

(assert (=> b!107847 m!120869))

(assert (=> b!107847 m!120869))

(declare-fun m!120873 () Bool)

(assert (=> b!107847 m!120873))

(assert (=> b!107849 m!120869))

(assert (=> b!107849 m!120869))

(declare-fun m!120875 () Bool)

(assert (=> b!107849 m!120875))

(assert (=> b!107850 m!120869))

(assert (=> b!107850 m!120869))

(assert (=> b!107850 m!120875))

(assert (=> bm!11348 d!29755))

(declare-fun d!29757 () Bool)

(declare-fun e!70216 () Bool)

(assert (=> d!29757 e!70216))

(declare-fun res!53511 () Bool)

(assert (=> d!29757 (=> (not res!53511) (not e!70216))))

(declare-fun lt!55312 () ListLongMap!1549)

(assert (=> d!29757 (= res!53511 (contains!824 lt!55312 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun lt!55315 () List!1623)

(assert (=> d!29757 (= lt!55312 (ListLongMap!1550 lt!55315))))

(declare-fun lt!55313 () Unit!3307)

(declare-fun lt!55314 () Unit!3307)

(assert (=> d!29757 (= lt!55313 lt!55314)))

(assert (=> d!29757 (= (getValueByKey!155 lt!55315 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) (Some!160 (_2!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!29757 (= lt!55314 (lemmaContainsTupThenGetReturnValue!74 lt!55315 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (_2!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!29757 (= lt!55315 (insertStrictlySorted!77 (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344))) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (_2!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!29757 (= (+!137 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344)) (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55312)))

(declare-fun b!107852 () Bool)

(declare-fun res!53510 () Bool)

(assert (=> b!107852 (=> (not res!53510) (not e!70216))))

(assert (=> b!107852 (= res!53510 (= (getValueByKey!155 (toList!790 lt!55312) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) (Some!160 (_2!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun b!107853 () Bool)

(assert (=> b!107853 (= e!70216 (contains!826 (toList!790 lt!55312) (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (= (and d!29757 res!53511) b!107852))

(assert (= (and b!107852 res!53510) b!107853))

(declare-fun m!120877 () Bool)

(assert (=> d!29757 m!120877))

(declare-fun m!120879 () Bool)

(assert (=> d!29757 m!120879))

(declare-fun m!120881 () Bool)

(assert (=> d!29757 m!120881))

(declare-fun m!120883 () Bool)

(assert (=> d!29757 m!120883))

(declare-fun m!120885 () Bool)

(assert (=> b!107852 m!120885))

(declare-fun m!120887 () Bool)

(assert (=> b!107853 m!120887))

(assert (=> bm!11343 d!29757))

(declare-fun d!29759 () Bool)

(declare-fun res!53516 () Bool)

(declare-fun e!70221 () Bool)

(assert (=> d!29759 (=> res!53516 e!70221)))

(assert (=> d!29759 (= res!53516 (and ((_ is Cons!1619) (toList!790 lt!54978)) (= (_1!1207 (h!2217 (toList!790 lt!54978))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (=> d!29759 (= (containsKey!159 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) e!70221)))

(declare-fun b!107858 () Bool)

(declare-fun e!70222 () Bool)

(assert (=> b!107858 (= e!70221 e!70222)))

(declare-fun res!53517 () Bool)

(assert (=> b!107858 (=> (not res!53517) (not e!70222))))

(assert (=> b!107858 (= res!53517 (and (or (not ((_ is Cons!1619) (toList!790 lt!54978))) (bvsle (_1!1207 (h!2217 (toList!790 lt!54978))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))) ((_ is Cons!1619) (toList!790 lt!54978)) (bvslt (_1!1207 (h!2217 (toList!790 lt!54978))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(declare-fun b!107859 () Bool)

(assert (=> b!107859 (= e!70222 (containsKey!159 (t!5730 (toList!790 lt!54978)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (= (and d!29759 (not res!53516)) b!107858))

(assert (= (and b!107858 res!53517) b!107859))

(assert (=> b!107859 m!120387))

(declare-fun m!120889 () Bool)

(assert (=> b!107859 m!120889))

(assert (=> d!29719 d!29759))

(declare-fun call!11443 () SeekEntryResult!263)

(declare-fun bm!11437 () Bool)

(assert (=> bm!11437 (= call!11443 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(declare-fun b!107894 () Bool)

(declare-fun res!53540 () Bool)

(declare-fun e!70240 () Bool)

(assert (=> b!107894 (=> (not res!53540) (not e!70240))))

(declare-fun lt!55389 () tuple2!2390)

(assert (=> b!107894 (= res!53540 (valid!428 (_2!1206 lt!55389)))))

(declare-fun call!11440 () Bool)

(declare-fun c!18914 () Bool)

(declare-fun lt!55390 () SeekEntryResult!263)

(declare-fun bm!11438 () Bool)

(declare-fun lt!55393 () SeekEntryResult!263)

(declare-fun c!18916 () Bool)

(assert (=> bm!11438 (= call!11440 (inRange!0 (ite c!18916 (index!3202 lt!55390) (ite c!18914 (index!3201 lt!55393) (index!3204 lt!55393))) (mask!6762 newMap!16)))))

(declare-fun call!11441 () Bool)

(declare-fun bm!11439 () Bool)

(assert (=> bm!11439 (= call!11441 (arrayContainsKey!0 (_keys!4314 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!107895 () Bool)

(declare-fun e!70244 () Bool)

(assert (=> b!107895 (= e!70244 ((_ is Undefined!263) lt!55393))))

(declare-fun b!107897 () Bool)

(declare-fun e!70241 () Bool)

(assert (=> b!107897 (= e!70241 (not call!11441))))

(declare-fun b!107898 () Bool)

(declare-fun res!53542 () Bool)

(assert (=> b!107898 (= res!53542 call!11440)))

(declare-fun e!70239 () Bool)

(assert (=> b!107898 (=> (not res!53542) (not e!70239))))

(declare-fun b!107899 () Bool)

(assert (=> b!107899 (= e!70240 (= (map!1277 (_2!1206 lt!55389)) (+!137 (map!1277 newMap!16) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!107900 () Bool)

(declare-fun e!70242 () Unit!3307)

(declare-fun Unit!3321 () Unit!3307)

(assert (=> b!107900 (= e!70242 Unit!3321)))

(declare-fun b!107901 () Bool)

(declare-fun e!70245 () Unit!3307)

(declare-fun lt!55401 () Unit!3307)

(assert (=> b!107901 (= e!70245 lt!55401)))

(assert (=> b!107901 (= lt!55401 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)))))

(assert (=> b!107901 (= lt!55393 call!11443)))

(assert (=> b!107901 (= c!18914 ((_ is MissingZero!263) lt!55393))))

(declare-fun e!70243 () Bool)

(assert (=> b!107901 e!70243))

(declare-fun b!107902 () Bool)

(declare-fun e!70246 () Bool)

(assert (=> b!107902 (= e!70246 (not call!11441))))

(declare-fun bm!11440 () Bool)

(declare-fun call!11442 () Bool)

(assert (=> bm!11440 (= call!11442 call!11440)))

(declare-fun b!107903 () Bool)

(declare-fun res!53537 () Bool)

(assert (=> b!107903 (=> (not res!53537) (not e!70246))))

(assert (=> b!107903 (= res!53537 call!11442)))

(assert (=> b!107903 (= e!70243 e!70246)))

(declare-fun b!107904 () Bool)

(assert (=> b!107904 (= e!70239 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55390)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!107905 () Bool)

(declare-fun res!53544 () Bool)

(assert (=> b!107905 (=> (not res!53544) (not e!70240))))

(assert (=> b!107905 (= res!53544 (contains!824 (map!1277 (_2!1206 lt!55389)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!107906 () Bool)

(assert (=> b!107906 (= e!70244 e!70241)))

(declare-fun res!53539 () Bool)

(assert (=> b!107906 (= res!53539 call!11442)))

(assert (=> b!107906 (=> (not res!53539) (not e!70241))))

(declare-fun b!107907 () Bool)

(declare-fun res!53536 () Bool)

(assert (=> b!107907 (=> (not res!53536) (not e!70246))))

(assert (=> b!107907 (= res!53536 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3201 lt!55393)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107908 () Bool)

(declare-fun Unit!3322 () Unit!3307)

(assert (=> b!107908 (= e!70242 Unit!3322)))

(declare-fun lt!55397 () Unit!3307)

(declare-fun lemmaArrayContainsKeyThenInListMap!31 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) (_ BitVec 32) Int) Unit!3307)

(assert (=> b!107908 (= lt!55397 (lemmaArrayContainsKeyThenInListMap!31 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(assert (=> b!107908 (contains!824 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))

(declare-fun lt!55378 () Unit!3307)

(assert (=> b!107908 (= lt!55378 lt!55397)))

(assert (=> b!107908 false))

(declare-fun d!29761 () Bool)

(assert (=> d!29761 e!70240))

(declare-fun res!53538 () Bool)

(assert (=> d!29761 (=> (not res!53538) (not e!70240))))

(assert (=> d!29761 (= res!53538 (_1!1206 lt!55389))))

(assert (=> d!29761 (= lt!55389 (tuple2!2391 true (LongMapFixedSize!911 (defaultEntry!2605 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (bvadd (_size!504 newMap!16) #b00000000000000000000000000000001) (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (_vacant!504 newMap!16))))))

(declare-fun lt!55380 () Unit!3307)

(declare-fun lt!55404 () Unit!3307)

(assert (=> d!29761 (= lt!55380 lt!55404)))

(declare-fun lt!55384 () array!4353)

(declare-fun lt!55400 () array!4351)

(assert (=> d!29761 (contains!824 (getCurrentListMap!467 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253))))))

(assert (=> d!29761 (= lt!55404 (lemmaValidKeyInArrayIsInListMap!107 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (defaultEntry!2605 newMap!16)))))

(assert (=> d!29761 (= lt!55384 (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))))))

(assert (=> d!29761 (= lt!55400 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun lt!55382 () Unit!3307)

(declare-fun lt!55399 () Unit!3307)

(assert (=> d!29761 (= lt!55382 lt!55399)))

(declare-fun lt!55403 () array!4351)

(assert (=> d!29761 (= (arrayCountValidKeys!0 lt!55403 (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (bvadd (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4351 (_ BitVec 32)) Unit!3307)

(assert (=> d!29761 (= lt!55399 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!55403 (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253))))))

(assert (=> d!29761 (= lt!55403 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun lt!55376 () Unit!3307)

(declare-fun lt!55391 () Unit!3307)

(assert (=> d!29761 (= lt!55376 lt!55391)))

(declare-fun lt!55392 () array!4351)

(assert (=> d!29761 (arrayContainsKey!0 lt!55392 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!29761 (= lt!55391 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!55392 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253))))))

(assert (=> d!29761 (= lt!55392 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun lt!55396 () Unit!3307)

(declare-fun lt!55398 () Unit!3307)

(assert (=> d!29761 (= lt!55396 lt!55398)))

(assert (=> d!29761 (= (+!137 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (getCurrentListMap!467 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!31 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) (_ BitVec 64) V!3233 Int) Unit!3307)

(assert (=> d!29761 (= lt!55398 (lemmaAddValidKeyToArrayThenAddPairToListMap!31 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55385 () Unit!3307)

(declare-fun lt!55394 () Unit!3307)

(assert (=> d!29761 (= lt!55385 lt!55394)))

(assert (=> d!29761 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (mask!6762 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4351 (_ BitVec 32) (_ BitVec 32)) Unit!3307)

(assert (=> d!29761 (= lt!55394 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (mask!6762 newMap!16)))))

(declare-fun lt!55387 () Unit!3307)

(declare-fun lt!55386 () Unit!3307)

(assert (=> d!29761 (= lt!55387 lt!55386)))

(assert (=> d!29761 (= (arrayCountValidKeys!0 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4314 newMap!16) #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4351 (_ BitVec 32) (_ BitVec 64)) Unit!3307)

(assert (=> d!29761 (= lt!55386 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4314 newMap!16) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun lt!55405 () Unit!3307)

(declare-fun lt!55381 () Unit!3307)

(assert (=> d!29761 (= lt!55405 lt!55381)))

(declare-fun lt!55377 () List!1622)

(declare-fun lt!55383 () (_ BitVec 32))

(assert (=> d!29761 (arrayNoDuplicates!0 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) lt!55383 lt!55377)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4351 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1622) Unit!3307)

(assert (=> d!29761 (= lt!55381 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4314 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) lt!55383 lt!55377))))

(assert (=> d!29761 (= lt!55377 Nil!1619)))

(assert (=> d!29761 (= lt!55383 #b00000000000000000000000000000000)))

(declare-fun lt!55395 () Unit!3307)

(assert (=> d!29761 (= lt!55395 e!70242)))

(declare-fun c!18913 () Bool)

(assert (=> d!29761 (= c!18913 (arrayContainsKey!0 (_keys!4314 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!55379 () Unit!3307)

(assert (=> d!29761 (= lt!55379 e!70245)))

(assert (=> d!29761 (= c!18916 (contains!824 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!29761 (valid!428 newMap!16)))

(assert (=> d!29761 (= (updateHelperNewKey!48 newMap!16 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253))) lt!55389)))

(declare-fun b!107896 () Bool)

(declare-fun res!53543 () Bool)

(assert (=> b!107896 (= res!53543 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3204 lt!55393)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107896 (=> (not res!53543) (not e!70241))))

(declare-fun b!107909 () Bool)

(declare-fun Unit!3323 () Unit!3307)

(assert (=> b!107909 (= e!70245 Unit!3323)))

(declare-fun lt!55402 () Unit!3307)

(assert (=> b!107909 (= lt!55402 (lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)))))

(assert (=> b!107909 (= lt!55390 call!11443)))

(declare-fun res!53541 () Bool)

(assert (=> b!107909 (= res!53541 ((_ is Found!263) lt!55390))))

(assert (=> b!107909 (=> (not res!53541) (not e!70239))))

(assert (=> b!107909 e!70239))

(declare-fun lt!55388 () Unit!3307)

(assert (=> b!107909 (= lt!55388 lt!55402)))

(assert (=> b!107909 false))

(declare-fun b!107910 () Bool)

(declare-fun c!18915 () Bool)

(assert (=> b!107910 (= c!18915 ((_ is MissingVacant!263) lt!55393))))

(assert (=> b!107910 (= e!70243 e!70244)))

(assert (= (and d!29761 c!18916) b!107909))

(assert (= (and d!29761 (not c!18916)) b!107901))

(assert (= (and b!107909 res!53541) b!107898))

(assert (= (and b!107898 res!53542) b!107904))

(assert (= (and b!107901 c!18914) b!107903))

(assert (= (and b!107901 (not c!18914)) b!107910))

(assert (= (and b!107903 res!53537) b!107907))

(assert (= (and b!107907 res!53536) b!107902))

(assert (= (and b!107910 c!18915) b!107906))

(assert (= (and b!107910 (not c!18915)) b!107895))

(assert (= (and b!107906 res!53539) b!107896))

(assert (= (and b!107896 res!53543) b!107897))

(assert (= (or b!107903 b!107906) bm!11440))

(assert (= (or b!107902 b!107897) bm!11439))

(assert (= (or b!107898 bm!11440) bm!11438))

(assert (= (or b!107909 b!107901) bm!11437))

(assert (= (and d!29761 c!18913) b!107908))

(assert (= (and d!29761 (not c!18913)) b!107900))

(assert (= (and d!29761 res!53538) b!107894))

(assert (= (and b!107894 res!53540) b!107905))

(assert (= (and b!107905 res!53544) b!107899))

(declare-fun m!120891 () Bool)

(assert (=> b!107905 m!120891))

(assert (=> b!107905 m!120891))

(assert (=> b!107905 m!120387))

(declare-fun m!120893 () Bool)

(assert (=> b!107905 m!120893))

(declare-fun m!120895 () Bool)

(assert (=> b!107907 m!120895))

(assert (=> b!107909 m!120387))

(assert (=> b!107909 m!120751))

(assert (=> d!29761 m!120539))

(assert (=> d!29761 m!120387))

(declare-fun m!120897 () Bool)

(assert (=> d!29761 m!120897))

(declare-fun m!120899 () Bool)

(assert (=> d!29761 m!120899))

(assert (=> d!29761 m!120387))

(declare-fun m!120901 () Bool)

(assert (=> d!29761 m!120901))

(declare-fun m!120903 () Bool)

(assert (=> d!29761 m!120903))

(assert (=> d!29761 m!120387))

(declare-fun m!120905 () Bool)

(assert (=> d!29761 m!120905))

(assert (=> d!29761 m!120617))

(declare-fun m!120907 () Bool)

(assert (=> d!29761 m!120907))

(declare-fun m!120909 () Bool)

(assert (=> d!29761 m!120909))

(declare-fun m!120911 () Bool)

(assert (=> d!29761 m!120911))

(declare-fun m!120913 () Bool)

(assert (=> d!29761 m!120913))

(assert (=> d!29761 m!120387))

(declare-fun m!120915 () Bool)

(assert (=> d!29761 m!120915))

(assert (=> d!29761 m!120911))

(assert (=> d!29761 m!120909))

(assert (=> d!29761 m!120387))

(assert (=> d!29761 m!120741))

(assert (=> d!29761 m!120539))

(declare-fun m!120917 () Bool)

(assert (=> d!29761 m!120917))

(declare-fun m!120919 () Bool)

(assert (=> d!29761 m!120919))

(assert (=> d!29761 m!120385))

(assert (=> d!29761 m!120387))

(declare-fun m!120921 () Bool)

(assert (=> d!29761 m!120921))

(assert (=> d!29761 m!120387))

(declare-fun m!120923 () Bool)

(assert (=> d!29761 m!120923))

(declare-fun m!120925 () Bool)

(assert (=> d!29761 m!120925))

(declare-fun m!120927 () Bool)

(assert (=> d!29761 m!120927))

(declare-fun m!120929 () Bool)

(assert (=> d!29761 m!120929))

(assert (=> d!29761 m!120387))

(declare-fun m!120931 () Bool)

(assert (=> d!29761 m!120931))

(assert (=> d!29761 m!120539))

(declare-fun m!120933 () Bool)

(assert (=> d!29761 m!120933))

(declare-fun m!120935 () Bool)

(assert (=> d!29761 m!120935))

(declare-fun m!120937 () Bool)

(assert (=> b!107896 m!120937))

(assert (=> bm!11437 m!120387))

(assert (=> bm!11437 m!120709))

(assert (=> bm!11439 m!120387))

(assert (=> bm!11439 m!120741))

(declare-fun m!120939 () Bool)

(assert (=> b!107894 m!120939))

(assert (=> b!107899 m!120891))

(assert (=> b!107899 m!120371))

(assert (=> b!107899 m!120371))

(declare-fun m!120941 () Bool)

(assert (=> b!107899 m!120941))

(assert (=> b!107908 m!120387))

(declare-fun m!120943 () Bool)

(assert (=> b!107908 m!120943))

(assert (=> b!107908 m!120539))

(assert (=> b!107908 m!120539))

(assert (=> b!107908 m!120387))

(assert (=> b!107908 m!120897))

(declare-fun m!120945 () Bool)

(assert (=> bm!11438 m!120945))

(declare-fun m!120947 () Bool)

(assert (=> b!107904 m!120947))

(assert (=> b!107901 m!120387))

(assert (=> b!107901 m!120715))

(assert (=> bm!11407 d!29761))

(declare-fun d!29763 () Bool)

(declare-fun e!70247 () Bool)

(assert (=> d!29763 e!70247))

(declare-fun res!53546 () Bool)

(assert (=> d!29763 (=> (not res!53546) (not e!70247))))

(declare-fun lt!55406 () ListLongMap!1549)

(assert (=> d!29763 (= res!53546 (contains!824 lt!55406 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!55409 () List!1623)

(assert (=> d!29763 (= lt!55406 (ListLongMap!1550 lt!55409))))

(declare-fun lt!55407 () Unit!3307)

(declare-fun lt!55408 () Unit!3307)

(assert (=> d!29763 (= lt!55407 lt!55408)))

(assert (=> d!29763 (= (getValueByKey!155 lt!55409 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29763 (= lt!55408 (lemmaContainsTupThenGetReturnValue!74 lt!55409 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29763 (= lt!55409 (insertStrictlySorted!77 (toList!790 lt!55105) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29763 (= (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55406)))

(declare-fun b!107911 () Bool)

(declare-fun res!53545 () Bool)

(assert (=> b!107911 (=> (not res!53545) (not e!70247))))

(assert (=> b!107911 (= res!53545 (= (getValueByKey!155 (toList!790 lt!55406) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!107912 () Bool)

(assert (=> b!107912 (= e!70247 (contains!826 (toList!790 lt!55406) (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!29763 res!53546) b!107911))

(assert (= (and b!107911 res!53545) b!107912))

(declare-fun m!120949 () Bool)

(assert (=> d!29763 m!120949))

(declare-fun m!120951 () Bool)

(assert (=> d!29763 m!120951))

(declare-fun m!120953 () Bool)

(assert (=> d!29763 m!120953))

(declare-fun m!120955 () Bool)

(assert (=> d!29763 m!120955))

(declare-fun m!120957 () Bool)

(assert (=> b!107911 m!120957))

(declare-fun m!120959 () Bool)

(assert (=> b!107912 m!120959))

(assert (=> b!107550 d!29763))

(declare-fun d!29765 () Bool)

(declare-fun e!70248 () Bool)

(assert (=> d!29765 e!70248))

(declare-fun res!53548 () Bool)

(assert (=> d!29765 (=> (not res!53548) (not e!70248))))

(declare-fun lt!55410 () ListLongMap!1549)

(assert (=> d!29765 (= res!53548 (contains!824 lt!55410 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!55413 () List!1623)

(assert (=> d!29765 (= lt!55410 (ListLongMap!1550 lt!55413))))

(declare-fun lt!55411 () Unit!3307)

(declare-fun lt!55412 () Unit!3307)

(assert (=> d!29765 (= lt!55411 lt!55412)))

(assert (=> d!29765 (= (getValueByKey!155 lt!55413 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29765 (= lt!55412 (lemmaContainsTupThenGetReturnValue!74 lt!55413 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29765 (= lt!55413 (insertStrictlySorted!77 (toList!790 lt!55121) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29765 (= (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55410)))

(declare-fun b!107913 () Bool)

(declare-fun res!53547 () Bool)

(assert (=> b!107913 (=> (not res!53547) (not e!70248))))

(assert (=> b!107913 (= res!53547 (= (getValueByKey!155 (toList!790 lt!55410) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!107914 () Bool)

(assert (=> b!107914 (= e!70248 (contains!826 (toList!790 lt!55410) (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!29765 res!53548) b!107913))

(assert (= (and b!107913 res!53547) b!107914))

(declare-fun m!120961 () Bool)

(assert (=> d!29765 m!120961))

(declare-fun m!120963 () Bool)

(assert (=> d!29765 m!120963))

(declare-fun m!120965 () Bool)

(assert (=> d!29765 m!120965))

(declare-fun m!120967 () Bool)

(assert (=> d!29765 m!120967))

(declare-fun m!120969 () Bool)

(assert (=> b!107913 m!120969))

(declare-fun m!120971 () Bool)

(assert (=> b!107914 m!120971))

(assert (=> b!107550 d!29765))

(declare-fun d!29767 () Bool)

(assert (=> d!29767 (= (apply!99 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55120) (apply!99 lt!55115 lt!55120))))

(declare-fun lt!55416 () Unit!3307)

(declare-fun choose!677 (ListLongMap!1549 (_ BitVec 64) V!3233 (_ BitVec 64)) Unit!3307)

(assert (=> d!29767 (= lt!55416 (choose!677 lt!55115 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55120))))

(declare-fun e!70251 () Bool)

(assert (=> d!29767 e!70251))

(declare-fun res!53551 () Bool)

(assert (=> d!29767 (=> (not res!53551) (not e!70251))))

(assert (=> d!29767 (= res!53551 (contains!824 lt!55115 lt!55120))))

(assert (=> d!29767 (= (addApplyDifferent!75 lt!55115 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55120) lt!55416)))

(declare-fun b!107918 () Bool)

(assert (=> b!107918 (= e!70251 (not (= lt!55120 lt!55112)))))

(assert (= (and d!29767 res!53551) b!107918))

(assert (=> d!29767 m!120591))

(declare-fun m!120973 () Bool)

(assert (=> d!29767 m!120973))

(assert (=> d!29767 m!120569))

(declare-fun m!120975 () Bool)

(assert (=> d!29767 m!120975))

(assert (=> d!29767 m!120569))

(assert (=> d!29767 m!120571))

(assert (=> b!107550 d!29767))

(declare-fun d!29769 () Bool)

(assert (=> d!29769 (= (apply!99 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55125) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55125)))))

(declare-fun bs!4416 () Bool)

(assert (= bs!4416 d!29769))

(declare-fun m!120977 () Bool)

(assert (=> bs!4416 m!120977))

(assert (=> bs!4416 m!120977))

(declare-fun m!120979 () Bool)

(assert (=> bs!4416 m!120979))

(assert (=> b!107550 d!29769))

(assert (=> b!107550 d!29711))

(declare-fun d!29771 () Bool)

(assert (=> d!29771 (contains!824 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55110)))

(declare-fun lt!55419 () Unit!3307)

(declare-fun choose!678 (ListLongMap!1549 (_ BitVec 64) V!3233 (_ BitVec 64)) Unit!3307)

(assert (=> d!29771 (= lt!55419 (choose!678 lt!55105 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55110))))

(assert (=> d!29771 (contains!824 lt!55105 lt!55110)))

(assert (=> d!29771 (= (addStillContains!75 lt!55105 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55110) lt!55419)))

(declare-fun bs!4417 () Bool)

(assert (= bs!4417 d!29771))

(assert (=> bs!4417 m!120577))

(assert (=> bs!4417 m!120577))

(assert (=> bs!4417 m!120589))

(declare-fun m!120981 () Bool)

(assert (=> bs!4417 m!120981))

(declare-fun m!120983 () Bool)

(assert (=> bs!4417 m!120983))

(assert (=> b!107550 d!29771))

(declare-fun d!29773 () Bool)

(assert (=> d!29773 (= (apply!99 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55120) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55120)))))

(declare-fun bs!4418 () Bool)

(assert (= bs!4418 d!29773))

(declare-fun m!120985 () Bool)

(assert (=> bs!4418 m!120985))

(assert (=> bs!4418 m!120985))

(declare-fun m!120987 () Bool)

(assert (=> bs!4418 m!120987))

(assert (=> b!107550 d!29773))

(declare-fun d!29775 () Bool)

(declare-fun e!70252 () Bool)

(assert (=> d!29775 e!70252))

(declare-fun res!53553 () Bool)

(assert (=> d!29775 (=> (not res!53553) (not e!70252))))

(declare-fun lt!55420 () ListLongMap!1549)

(assert (=> d!29775 (= res!53553 (contains!824 lt!55420 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!55423 () List!1623)

(assert (=> d!29775 (= lt!55420 (ListLongMap!1550 lt!55423))))

(declare-fun lt!55421 () Unit!3307)

(declare-fun lt!55422 () Unit!3307)

(assert (=> d!29775 (= lt!55421 lt!55422)))

(assert (=> d!29775 (= (getValueByKey!155 lt!55423 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29775 (= lt!55422 (lemmaContainsTupThenGetReturnValue!74 lt!55423 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29775 (= lt!55423 (insertStrictlySorted!77 (toList!790 lt!55115) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29775 (= (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55420)))

(declare-fun b!107920 () Bool)

(declare-fun res!53552 () Bool)

(assert (=> b!107920 (=> (not res!53552) (not e!70252))))

(assert (=> b!107920 (= res!53552 (= (getValueByKey!155 (toList!790 lt!55420) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!107921 () Bool)

(assert (=> b!107921 (= e!70252 (contains!826 (toList!790 lt!55420) (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!29775 res!53553) b!107920))

(assert (= (and b!107920 res!53552) b!107921))

(declare-fun m!120989 () Bool)

(assert (=> d!29775 m!120989))

(declare-fun m!120991 () Bool)

(assert (=> d!29775 m!120991))

(declare-fun m!120993 () Bool)

(assert (=> d!29775 m!120993))

(declare-fun m!120995 () Bool)

(assert (=> d!29775 m!120995))

(declare-fun m!120997 () Bool)

(assert (=> b!107920 m!120997))

(declare-fun m!120999 () Bool)

(assert (=> b!107921 m!120999))

(assert (=> b!107550 d!29775))

(declare-fun d!29777 () Bool)

(assert (=> d!29777 (= (apply!99 lt!55121 lt!55111) (get!1344 (getValueByKey!155 (toList!790 lt!55121) lt!55111)))))

(declare-fun bs!4419 () Bool)

(assert (= bs!4419 d!29777))

(declare-fun m!121001 () Bool)

(assert (=> bs!4419 m!121001))

(assert (=> bs!4419 m!121001))

(declare-fun m!121003 () Bool)

(assert (=> bs!4419 m!121003))

(assert (=> b!107550 d!29777))

(declare-fun d!29779 () Bool)

(declare-fun e!70253 () Bool)

(assert (=> d!29779 e!70253))

(declare-fun res!53554 () Bool)

(assert (=> d!29779 (=> res!53554 e!70253)))

(declare-fun lt!55424 () Bool)

(assert (=> d!29779 (= res!53554 (not lt!55424))))

(declare-fun lt!55425 () Bool)

(assert (=> d!29779 (= lt!55424 lt!55425)))

(declare-fun lt!55427 () Unit!3307)

(declare-fun e!70254 () Unit!3307)

(assert (=> d!29779 (= lt!55427 e!70254)))

(declare-fun c!18917 () Bool)

(assert (=> d!29779 (= c!18917 lt!55425)))

(assert (=> d!29779 (= lt!55425 (containsKey!159 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55110))))

(assert (=> d!29779 (= (contains!824 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55110) lt!55424)))

(declare-fun b!107922 () Bool)

(declare-fun lt!55426 () Unit!3307)

(assert (=> b!107922 (= e!70254 lt!55426)))

(assert (=> b!107922 (= lt!55426 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55110))))

(assert (=> b!107922 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55110))))

(declare-fun b!107923 () Bool)

(declare-fun Unit!3324 () Unit!3307)

(assert (=> b!107923 (= e!70254 Unit!3324)))

(declare-fun b!107924 () Bool)

(assert (=> b!107924 (= e!70253 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55110)))))

(assert (= (and d!29779 c!18917) b!107922))

(assert (= (and d!29779 (not c!18917)) b!107923))

(assert (= (and d!29779 (not res!53554)) b!107924))

(declare-fun m!121005 () Bool)

(assert (=> d!29779 m!121005))

(declare-fun m!121007 () Bool)

(assert (=> b!107922 m!121007))

(declare-fun m!121009 () Bool)

(assert (=> b!107922 m!121009))

(assert (=> b!107922 m!121009))

(declare-fun m!121011 () Bool)

(assert (=> b!107922 m!121011))

(assert (=> b!107924 m!121009))

(assert (=> b!107924 m!121009))

(assert (=> b!107924 m!121011))

(assert (=> b!107550 d!29779))

(declare-fun d!29781 () Bool)

(declare-fun e!70255 () Bool)

(assert (=> d!29781 e!70255))

(declare-fun res!53556 () Bool)

(assert (=> d!29781 (=> (not res!53556) (not e!70255))))

(declare-fun lt!55428 () ListLongMap!1549)

(assert (=> d!29781 (= res!53556 (contains!824 lt!55428 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!55431 () List!1623)

(assert (=> d!29781 (= lt!55428 (ListLongMap!1550 lt!55431))))

(declare-fun lt!55429 () Unit!3307)

(declare-fun lt!55430 () Unit!3307)

(assert (=> d!29781 (= lt!55429 lt!55430)))

(assert (=> d!29781 (= (getValueByKey!155 lt!55431 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29781 (= lt!55430 (lemmaContainsTupThenGetReturnValue!74 lt!55431 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29781 (= lt!55431 (insertStrictlySorted!77 (toList!790 lt!55109) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29781 (= (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55428)))

(declare-fun b!107925 () Bool)

(declare-fun res!53555 () Bool)

(assert (=> b!107925 (=> (not res!53555) (not e!70255))))

(assert (=> b!107925 (= res!53555 (= (getValueByKey!155 (toList!790 lt!55428) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!107926 () Bool)

(assert (=> b!107926 (= e!70255 (contains!826 (toList!790 lt!55428) (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!29781 res!53556) b!107925))

(assert (= (and b!107925 res!53555) b!107926))

(declare-fun m!121013 () Bool)

(assert (=> d!29781 m!121013))

(declare-fun m!121015 () Bool)

(assert (=> d!29781 m!121015))

(declare-fun m!121017 () Bool)

(assert (=> d!29781 m!121017))

(declare-fun m!121019 () Bool)

(assert (=> d!29781 m!121019))

(declare-fun m!121021 () Bool)

(assert (=> b!107925 m!121021))

(declare-fun m!121023 () Bool)

(assert (=> b!107926 m!121023))

(assert (=> b!107550 d!29781))

(declare-fun d!29783 () Bool)

(assert (=> d!29783 (= (apply!99 lt!55109 lt!55125) (get!1344 (getValueByKey!155 (toList!790 lt!55109) lt!55125)))))

(declare-fun bs!4420 () Bool)

(assert (= bs!4420 d!29783))

(declare-fun m!121025 () Bool)

(assert (=> bs!4420 m!121025))

(assert (=> bs!4420 m!121025))

(declare-fun m!121027 () Bool)

(assert (=> bs!4420 m!121027))

(assert (=> b!107550 d!29783))

(declare-fun d!29785 () Bool)

(assert (=> d!29785 (= (apply!99 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55111) (apply!99 lt!55121 lt!55111))))

(declare-fun lt!55432 () Unit!3307)

(assert (=> d!29785 (= lt!55432 (choose!677 lt!55121 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55111))))

(declare-fun e!70256 () Bool)

(assert (=> d!29785 e!70256))

(declare-fun res!53557 () Bool)

(assert (=> d!29785 (=> (not res!53557) (not e!70256))))

(assert (=> d!29785 (= res!53557 (contains!824 lt!55121 lt!55111))))

(assert (=> d!29785 (= (addApplyDifferent!75 lt!55121 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55111) lt!55432)))

(declare-fun b!107927 () Bool)

(assert (=> b!107927 (= e!70256 (not (= lt!55111 lt!55113)))))

(assert (= (and d!29785 res!53557) b!107927))

(assert (=> d!29785 m!120585))

(declare-fun m!121029 () Bool)

(assert (=> d!29785 m!121029))

(assert (=> d!29785 m!120575))

(declare-fun m!121031 () Bool)

(assert (=> d!29785 m!121031))

(assert (=> d!29785 m!120575))

(assert (=> d!29785 m!120581))

(assert (=> b!107550 d!29785))

(declare-fun d!29787 () Bool)

(assert (=> d!29787 (= (apply!99 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55125) (apply!99 lt!55109 lt!55125))))

(declare-fun lt!55433 () Unit!3307)

(assert (=> d!29787 (= lt!55433 (choose!677 lt!55109 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55125))))

(declare-fun e!70257 () Bool)

(assert (=> d!29787 e!70257))

(declare-fun res!53558 () Bool)

(assert (=> d!29787 (=> (not res!53558) (not e!70257))))

(assert (=> d!29787 (= res!53558 (contains!824 lt!55109 lt!55125))))

(assert (=> d!29787 (= (addApplyDifferent!75 lt!55109 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55125) lt!55433)))

(declare-fun b!107928 () Bool)

(assert (=> b!107928 (= e!70257 (not (= lt!55125 lt!55106)))))

(assert (= (and d!29787 res!53558) b!107928))

(assert (=> d!29787 m!120573))

(declare-fun m!121033 () Bool)

(assert (=> d!29787 m!121033))

(assert (=> d!29787 m!120587))

(declare-fun m!121035 () Bool)

(assert (=> d!29787 m!121035))

(assert (=> d!29787 m!120587))

(assert (=> d!29787 m!120593))

(assert (=> b!107550 d!29787))

(declare-fun d!29789 () Bool)

(assert (=> d!29789 (= (apply!99 lt!55115 lt!55120) (get!1344 (getValueByKey!155 (toList!790 lt!55115) lt!55120)))))

(declare-fun bs!4421 () Bool)

(assert (= bs!4421 d!29789))

(declare-fun m!121037 () Bool)

(assert (=> bs!4421 m!121037))

(assert (=> bs!4421 m!121037))

(declare-fun m!121039 () Bool)

(assert (=> bs!4421 m!121039))

(assert (=> b!107550 d!29789))

(declare-fun d!29791 () Bool)

(assert (=> d!29791 (= (apply!99 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55111) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55111)))))

(declare-fun bs!4422 () Bool)

(assert (= bs!4422 d!29791))

(declare-fun m!121041 () Bool)

(assert (=> bs!4422 m!121041))

(assert (=> bs!4422 m!121041))

(declare-fun m!121043 () Bool)

(assert (=> bs!4422 m!121043))

(assert (=> b!107550 d!29791))

(assert (=> d!29687 d!29717))

(declare-fun d!29793 () Bool)

(declare-fun e!70258 () Bool)

(assert (=> d!29793 e!70258))

(declare-fun res!53559 () Bool)

(assert (=> d!29793 (=> res!53559 e!70258)))

(declare-fun lt!55434 () Bool)

(assert (=> d!29793 (= res!53559 (not lt!55434))))

(declare-fun lt!55435 () Bool)

(assert (=> d!29793 (= lt!55434 lt!55435)))

(declare-fun lt!55437 () Unit!3307)

(declare-fun e!70259 () Unit!3307)

(assert (=> d!29793 (= lt!55437 e!70259)))

(declare-fun c!18918 () Bool)

(assert (=> d!29793 (= c!18918 lt!55435)))

(assert (=> d!29793 (= lt!55435 (containsKey!159 (toList!790 lt!55143) (_1!1207 lt!54985)))))

(assert (=> d!29793 (= (contains!824 lt!55143 (_1!1207 lt!54985)) lt!55434)))

(declare-fun b!107929 () Bool)

(declare-fun lt!55436 () Unit!3307)

(assert (=> b!107929 (= e!70259 lt!55436)))

(assert (=> b!107929 (= lt!55436 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55143) (_1!1207 lt!54985)))))

(assert (=> b!107929 (isDefined!109 (getValueByKey!155 (toList!790 lt!55143) (_1!1207 lt!54985)))))

(declare-fun b!107930 () Bool)

(declare-fun Unit!3325 () Unit!3307)

(assert (=> b!107930 (= e!70259 Unit!3325)))

(declare-fun b!107931 () Bool)

(assert (=> b!107931 (= e!70258 (isDefined!109 (getValueByKey!155 (toList!790 lt!55143) (_1!1207 lt!54985))))))

(assert (= (and d!29793 c!18918) b!107929))

(assert (= (and d!29793 (not c!18918)) b!107930))

(assert (= (and d!29793 (not res!53559)) b!107931))

(declare-fun m!121045 () Bool)

(assert (=> d!29793 m!121045))

(declare-fun m!121047 () Bool)

(assert (=> b!107929 m!121047))

(assert (=> b!107929 m!120631))

(assert (=> b!107929 m!120631))

(declare-fun m!121049 () Bool)

(assert (=> b!107929 m!121049))

(assert (=> b!107931 m!120631))

(assert (=> b!107931 m!120631))

(assert (=> b!107931 m!121049))

(assert (=> d!29705 d!29793))

(declare-fun b!107942 () Bool)

(declare-fun e!70265 () Option!161)

(assert (=> b!107942 (= e!70265 (getValueByKey!155 (t!5730 lt!55146) (_1!1207 lt!54985)))))

(declare-fun b!107941 () Bool)

(declare-fun e!70264 () Option!161)

(assert (=> b!107941 (= e!70264 e!70265)))

(declare-fun c!18924 () Bool)

(assert (=> b!107941 (= c!18924 (and ((_ is Cons!1619) lt!55146) (not (= (_1!1207 (h!2217 lt!55146)) (_1!1207 lt!54985)))))))

(declare-fun d!29795 () Bool)

(declare-fun c!18923 () Bool)

(assert (=> d!29795 (= c!18923 (and ((_ is Cons!1619) lt!55146) (= (_1!1207 (h!2217 lt!55146)) (_1!1207 lt!54985))))))

(assert (=> d!29795 (= (getValueByKey!155 lt!55146 (_1!1207 lt!54985)) e!70264)))

(declare-fun b!107943 () Bool)

(assert (=> b!107943 (= e!70265 None!159)))

(declare-fun b!107940 () Bool)

(assert (=> b!107940 (= e!70264 (Some!160 (_2!1207 (h!2217 lt!55146))))))

(assert (= (and d!29795 c!18923) b!107940))

(assert (= (and d!29795 (not c!18923)) b!107941))

(assert (= (and b!107941 c!18924) b!107942))

(assert (= (and b!107941 (not c!18924)) b!107943))

(declare-fun m!121051 () Bool)

(assert (=> b!107942 m!121051))

(assert (=> d!29705 d!29795))

(declare-fun d!29797 () Bool)

(assert (=> d!29797 (= (getValueByKey!155 lt!55146 (_1!1207 lt!54985)) (Some!160 (_2!1207 lt!54985)))))

(declare-fun lt!55440 () Unit!3307)

(declare-fun choose!679 (List!1623 (_ BitVec 64) V!3233) Unit!3307)

(assert (=> d!29797 (= lt!55440 (choose!679 lt!55146 (_1!1207 lt!54985) (_2!1207 lt!54985)))))

(declare-fun e!70268 () Bool)

(assert (=> d!29797 e!70268))

(declare-fun res!53564 () Bool)

(assert (=> d!29797 (=> (not res!53564) (not e!70268))))

(declare-fun isStrictlySorted!305 (List!1623) Bool)

(assert (=> d!29797 (= res!53564 (isStrictlySorted!305 lt!55146))))

(assert (=> d!29797 (= (lemmaContainsTupThenGetReturnValue!74 lt!55146 (_1!1207 lt!54985) (_2!1207 lt!54985)) lt!55440)))

(declare-fun b!107948 () Bool)

(declare-fun res!53565 () Bool)

(assert (=> b!107948 (=> (not res!53565) (not e!70268))))

(assert (=> b!107948 (= res!53565 (containsKey!159 lt!55146 (_1!1207 lt!54985)))))

(declare-fun b!107949 () Bool)

(assert (=> b!107949 (= e!70268 (contains!826 lt!55146 (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(assert (= (and d!29797 res!53564) b!107948))

(assert (= (and b!107948 res!53565) b!107949))

(assert (=> d!29797 m!120625))

(declare-fun m!121053 () Bool)

(assert (=> d!29797 m!121053))

(declare-fun m!121055 () Bool)

(assert (=> d!29797 m!121055))

(declare-fun m!121057 () Bool)

(assert (=> b!107948 m!121057))

(declare-fun m!121059 () Bool)

(assert (=> b!107949 m!121059))

(assert (=> d!29705 d!29797))

(declare-fun bm!11447 () Bool)

(declare-fun call!11451 () List!1623)

(declare-fun call!11450 () List!1623)

(assert (=> bm!11447 (= call!11451 call!11450)))

(declare-fun b!107970 () Bool)

(declare-fun e!70283 () List!1623)

(assert (=> b!107970 (= e!70283 call!11451)))

(declare-fun b!107972 () Bool)

(declare-fun e!70280 () List!1623)

(declare-fun call!11452 () List!1623)

(assert (=> b!107972 (= e!70280 call!11452)))

(declare-fun b!107973 () Bool)

(declare-fun e!70279 () Bool)

(declare-fun lt!55443 () List!1623)

(assert (=> b!107973 (= e!70279 (contains!826 lt!55443 (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(declare-fun b!107974 () Bool)

(declare-fun e!70281 () List!1623)

(assert (=> b!107974 (= e!70281 (insertStrictlySorted!77 (t!5730 (toList!790 lt!54981)) (_1!1207 lt!54985) (_2!1207 lt!54985)))))

(declare-fun b!107975 () Bool)

(declare-fun e!70282 () List!1623)

(assert (=> b!107975 (= e!70282 call!11450)))

(declare-fun bm!11448 () Bool)

(declare-fun c!18933 () Bool)

(declare-fun $colon$colon!81 (List!1623 tuple2!2392) List!1623)

(assert (=> bm!11448 (= call!11450 ($colon$colon!81 e!70281 (ite c!18933 (h!2217 (toList!790 lt!54981)) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985)))))))

(declare-fun c!18935 () Bool)

(assert (=> bm!11448 (= c!18935 c!18933)))

(declare-fun bm!11449 () Bool)

(assert (=> bm!11449 (= call!11452 call!11451)))

(declare-fun b!107976 () Bool)

(declare-fun c!18936 () Bool)

(assert (=> b!107976 (= c!18936 (and ((_ is Cons!1619) (toList!790 lt!54981)) (bvsgt (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 lt!54985))))))

(assert (=> b!107976 (= e!70283 e!70280)))

(declare-fun b!107971 () Bool)

(declare-fun res!53571 () Bool)

(assert (=> b!107971 (=> (not res!53571) (not e!70279))))

(assert (=> b!107971 (= res!53571 (containsKey!159 lt!55443 (_1!1207 lt!54985)))))

(declare-fun d!29799 () Bool)

(assert (=> d!29799 e!70279))

(declare-fun res!53570 () Bool)

(assert (=> d!29799 (=> (not res!53570) (not e!70279))))

(assert (=> d!29799 (= res!53570 (isStrictlySorted!305 lt!55443))))

(assert (=> d!29799 (= lt!55443 e!70282)))

(assert (=> d!29799 (= c!18933 (and ((_ is Cons!1619) (toList!790 lt!54981)) (bvslt (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 lt!54985))))))

(assert (=> d!29799 (isStrictlySorted!305 (toList!790 lt!54981))))

(assert (=> d!29799 (= (insertStrictlySorted!77 (toList!790 lt!54981) (_1!1207 lt!54985) (_2!1207 lt!54985)) lt!55443)))

(declare-fun b!107977 () Bool)

(assert (=> b!107977 (= e!70280 call!11452)))

(declare-fun c!18934 () Bool)

(declare-fun b!107978 () Bool)

(assert (=> b!107978 (= e!70281 (ite c!18934 (t!5730 (toList!790 lt!54981)) (ite c!18936 (Cons!1619 (h!2217 (toList!790 lt!54981)) (t!5730 (toList!790 lt!54981))) Nil!1620)))))

(declare-fun b!107979 () Bool)

(assert (=> b!107979 (= e!70282 e!70283)))

(assert (=> b!107979 (= c!18934 (and ((_ is Cons!1619) (toList!790 lt!54981)) (= (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 lt!54985))))))

(assert (= (and d!29799 c!18933) b!107975))

(assert (= (and d!29799 (not c!18933)) b!107979))

(assert (= (and b!107979 c!18934) b!107970))

(assert (= (and b!107979 (not c!18934)) b!107976))

(assert (= (and b!107976 c!18936) b!107977))

(assert (= (and b!107976 (not c!18936)) b!107972))

(assert (= (or b!107977 b!107972) bm!11449))

(assert (= (or b!107970 bm!11449) bm!11447))

(assert (= (or b!107975 bm!11447) bm!11448))

(assert (= (and bm!11448 c!18935) b!107974))

(assert (= (and bm!11448 (not c!18935)) b!107978))

(assert (= (and d!29799 res!53570) b!107971))

(assert (= (and b!107971 res!53571) b!107973))

(declare-fun m!121061 () Bool)

(assert (=> b!107973 m!121061))

(declare-fun m!121063 () Bool)

(assert (=> bm!11448 m!121063))

(declare-fun m!121065 () Bool)

(assert (=> b!107971 m!121065))

(declare-fun m!121067 () Bool)

(assert (=> d!29799 m!121067))

(declare-fun m!121069 () Bool)

(assert (=> d!29799 m!121069))

(declare-fun m!121071 () Bool)

(assert (=> b!107974 m!121071))

(assert (=> d!29705 d!29799))

(declare-fun d!29801 () Bool)

(assert (=> d!29801 (= (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (and (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107589 d!29801))

(assert (=> bm!11345 d!29711))

(declare-fun d!29803 () Bool)

(declare-fun res!53572 () Bool)

(declare-fun e!70284 () Bool)

(assert (=> d!29803 (=> res!53572 e!70284)))

(assert (=> d!29803 (= res!53572 (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!29803 (= (arrayContainsKey!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!70284)))

(declare-fun b!107980 () Bool)

(declare-fun e!70285 () Bool)

(assert (=> b!107980 (= e!70284 e!70285)))

(declare-fun res!53573 () Bool)

(assert (=> b!107980 (=> (not res!53573) (not e!70285))))

(assert (=> b!107980 (= res!53573 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!107981 () Bool)

(assert (=> b!107981 (= e!70285 (arrayContainsKey!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29803 (not res!53572)) b!107980))

(assert (= (and b!107980 res!53573) b!107981))

(assert (=> d!29803 m!120831))

(assert (=> b!107981 m!120387))

(declare-fun m!121073 () Bool)

(assert (=> b!107981 m!121073))

(assert (=> b!107570 d!29803))

(declare-fun d!29805 () Bool)

(assert (=> d!29805 (= (get!1342 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) from!355) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2903 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> b!107563 d!29805))

(declare-fun d!29807 () Bool)

(declare-fun res!53574 () Bool)

(declare-fun e!70286 () Bool)

(assert (=> d!29807 (=> (not res!53574) (not e!70286))))

(assert (=> d!29807 (= res!53574 (simpleValid!75 (_2!1206 lt!55257)))))

(assert (=> d!29807 (= (valid!428 (_2!1206 lt!55257)) e!70286)))

(declare-fun b!107982 () Bool)

(declare-fun res!53575 () Bool)

(assert (=> b!107982 (=> (not res!53575) (not e!70286))))

(assert (=> b!107982 (= res!53575 (= (arrayCountValidKeys!0 (_keys!4314 (_2!1206 lt!55257)) #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55257)))) (_size!504 (_2!1206 lt!55257))))))

(declare-fun b!107983 () Bool)

(declare-fun res!53576 () Bool)

(assert (=> b!107983 (=> (not res!53576) (not e!70286))))

(assert (=> b!107983 (= res!53576 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4314 (_2!1206 lt!55257)) (mask!6762 (_2!1206 lt!55257))))))

(declare-fun b!107984 () Bool)

(assert (=> b!107984 (= e!70286 (arrayNoDuplicates!0 (_keys!4314 (_2!1206 lt!55257)) #b00000000000000000000000000000000 Nil!1619))))

(assert (= (and d!29807 res!53574) b!107982))

(assert (= (and b!107982 res!53575) b!107983))

(assert (= (and b!107983 res!53576) b!107984))

(declare-fun m!121075 () Bool)

(assert (=> d!29807 m!121075))

(declare-fun m!121077 () Bool)

(assert (=> b!107982 m!121077))

(declare-fun m!121079 () Bool)

(assert (=> b!107983 m!121079))

(declare-fun m!121081 () Bool)

(assert (=> b!107984 m!121081))

(assert (=> d!29721 d!29807))

(assert (=> d!29721 d!29703))

(declare-fun d!29809 () Bool)

(assert (=> d!29809 (= (map!1277 (_2!1206 lt!55257)) (getCurrentListMap!467 (_keys!4314 (_2!1206 lt!55257)) (_values!2588 (_2!1206 lt!55257)) (mask!6762 (_2!1206 lt!55257)) (extraKeys!2406 (_2!1206 lt!55257)) (zeroValue!2478 (_2!1206 lt!55257)) (minValue!2478 (_2!1206 lt!55257)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1206 lt!55257))))))

(declare-fun bs!4423 () Bool)

(assert (= bs!4423 d!29809))

(declare-fun m!121083 () Bool)

(assert (=> bs!4423 m!121083))

(assert (=> bm!11421 d!29809))

(declare-fun d!29811 () Bool)

(declare-fun e!70287 () Bool)

(assert (=> d!29811 e!70287))

(declare-fun res!53578 () Bool)

(assert (=> d!29811 (=> (not res!53578) (not e!70287))))

(declare-fun lt!55444 () ListLongMap!1549)

(assert (=> d!29811 (= res!53578 (contains!824 lt!55444 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun lt!55447 () List!1623)

(assert (=> d!29811 (= lt!55444 (ListLongMap!1550 lt!55447))))

(declare-fun lt!55445 () Unit!3307)

(declare-fun lt!55446 () Unit!3307)

(assert (=> d!29811 (= lt!55445 lt!55446)))

(assert (=> d!29811 (= (getValueByKey!155 lt!55447 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!29811 (= lt!55446 (lemmaContainsTupThenGetReturnValue!74 lt!55447 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!29811 (= lt!55447 (insertStrictlySorted!77 (toList!790 call!11421) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!29811 (= (+!137 call!11421 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) lt!55444)))

(declare-fun b!107985 () Bool)

(declare-fun res!53577 () Bool)

(assert (=> b!107985 (=> (not res!53577) (not e!70287))))

(assert (=> b!107985 (= res!53577 (= (getValueByKey!155 (toList!790 lt!55444) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun b!107986 () Bool)

(assert (=> b!107986 (= e!70287 (contains!826 (toList!790 lt!55444) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(assert (= (and d!29811 res!53578) b!107985))

(assert (= (and b!107985 res!53577) b!107986))

(declare-fun m!121085 () Bool)

(assert (=> d!29811 m!121085))

(declare-fun m!121087 () Bool)

(assert (=> d!29811 m!121087))

(declare-fun m!121089 () Bool)

(assert (=> d!29811 m!121089))

(declare-fun m!121091 () Bool)

(assert (=> d!29811 m!121091))

(declare-fun m!121093 () Bool)

(assert (=> b!107985 m!121093))

(declare-fun m!121095 () Bool)

(assert (=> b!107986 m!121095))

(assert (=> b!107762 d!29811))

(assert (=> bm!11409 d!29685))

(declare-fun d!29813 () Bool)

(assert (=> d!29813 (= (apply!99 lt!55124 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1344 (getValueByKey!155 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4424 () Bool)

(assert (= bs!4424 d!29813))

(assert (=> bs!4424 m!120545))

(declare-fun m!121097 () Bool)

(assert (=> bs!4424 m!121097))

(assert (=> bs!4424 m!121097))

(declare-fun m!121099 () Bool)

(assert (=> bs!4424 m!121099))

(assert (=> b!107539 d!29813))

(declare-fun d!29815 () Bool)

(declare-fun c!18937 () Bool)

(assert (=> d!29815 (= c!18937 ((_ is ValueCellFull!1001) (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!70288 () V!3233)

(assert (=> d!29815 (= (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70288)))

(declare-fun b!107987 () Bool)

(assert (=> b!107987 (= e!70288 (get!1342 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107988 () Bool)

(assert (=> b!107988 (= e!70288 (get!1343 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29815 c!18937) b!107987))

(assert (= (and d!29815 (not c!18937)) b!107988))

(assert (=> b!107987 m!120541))

(assert (=> b!107987 m!120397))

(declare-fun m!121101 () Bool)

(assert (=> b!107987 m!121101))

(assert (=> b!107988 m!120541))

(assert (=> b!107988 m!120397))

(declare-fun m!121103 () Bool)

(assert (=> b!107988 m!121103))

(assert (=> b!107539 d!29815))

(declare-fun d!29817 () Bool)

(assert (=> d!29817 (= (+!137 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55271 lt!54982 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55450 () Unit!3307)

(declare-fun choose!680 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 V!3233 Int) Unit!3307)

(assert (=> d!29817 (= lt!55450 (choose!680 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) lt!55271 (zeroValue!2478 newMap!16) lt!54982 (minValue!2478 newMap!16) (defaultEntry!2605 newMap!16)))))

(assert (=> d!29817 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29817 (= (lemmaChangeZeroKeyThenAddPairToListMap!48 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) lt!55271 (zeroValue!2478 newMap!16) lt!54982 (minValue!2478 newMap!16) (defaultEntry!2605 newMap!16)) lt!55450)))

(declare-fun bs!4425 () Bool)

(assert (= bs!4425 d!29817))

(assert (=> bs!4425 m!120539))

(assert (=> bs!4425 m!120539))

(declare-fun m!121105 () Bool)

(assert (=> bs!4425 m!121105))

(assert (=> bs!4425 m!120787))

(declare-fun m!121107 () Bool)

(assert (=> bs!4425 m!121107))

(declare-fun m!121109 () Bool)

(assert (=> bs!4425 m!121109))

(assert (=> b!107748 d!29817))

(assert (=> b!107553 d!29739))

(declare-fun b!107989 () Bool)

(declare-fun e!70299 () Unit!3307)

(declare-fun Unit!3326 () Unit!3307)

(assert (=> b!107989 (= e!70299 Unit!3326)))

(declare-fun b!107990 () Bool)

(declare-fun lt!55471 () ListLongMap!1549)

(declare-fun e!70300 () Bool)

(assert (=> b!107990 (= e!70300 (= (apply!99 lt!55471 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107990 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))))))))

(assert (=> b!107990 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!107991 () Bool)

(declare-fun e!70297 () ListLongMap!1549)

(declare-fun e!70296 () ListLongMap!1549)

(assert (=> b!107991 (= e!70297 e!70296)))

(declare-fun c!18940 () Bool)

(assert (=> b!107991 (= c!18940 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11450 () Bool)

(declare-fun call!11453 () Bool)

(assert (=> bm!11450 (= call!11453 (contains!824 lt!55471 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107992 () Bool)

(declare-fun e!70298 () Bool)

(declare-fun e!70294 () Bool)

(assert (=> b!107992 (= e!70298 e!70294)))

(declare-fun res!53579 () Bool)

(declare-fun call!11458 () Bool)

(assert (=> b!107992 (= res!53579 call!11458)))

(assert (=> b!107992 (=> (not res!53579) (not e!70294))))

(declare-fun d!29819 () Bool)

(declare-fun e!70289 () Bool)

(assert (=> d!29819 e!70289))

(declare-fun res!53580 () Bool)

(assert (=> d!29819 (=> (not res!53580) (not e!70289))))

(assert (=> d!29819 (= res!53580 (or (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))))

(declare-fun lt!55469 () ListLongMap!1549)

(assert (=> d!29819 (= lt!55471 lt!55469)))

(declare-fun lt!55465 () Unit!3307)

(assert (=> d!29819 (= lt!55465 e!70299)))

(declare-fun c!18942 () Bool)

(declare-fun e!70292 () Bool)

(assert (=> d!29819 (= c!18942 e!70292)))

(declare-fun res!53585 () Bool)

(assert (=> d!29819 (=> (not res!53585) (not e!70292))))

(assert (=> d!29819 (= res!53585 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!29819 (= lt!55469 e!70297)))

(declare-fun c!18939 () Bool)

(assert (=> d!29819 (= c!18939 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29819 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29819 (= (getCurrentListMap!467 (_keys!4314 newMap!16) (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55471)))

(declare-fun b!107993 () Bool)

(assert (=> b!107993 (= e!70298 (not call!11458))))

(declare-fun b!107994 () Bool)

(declare-fun res!53586 () Bool)

(assert (=> b!107994 (=> (not res!53586) (not e!70289))))

(declare-fun e!70301 () Bool)

(assert (=> b!107994 (= res!53586 e!70301)))

(declare-fun res!53587 () Bool)

(assert (=> b!107994 (=> res!53587 e!70301)))

(declare-fun e!70295 () Bool)

(assert (=> b!107994 (= res!53587 (not e!70295))))

(declare-fun res!53582 () Bool)

(assert (=> b!107994 (=> (not res!53582) (not e!70295))))

(assert (=> b!107994 (= res!53582 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!107995 () Bool)

(assert (=> b!107995 (= e!70294 (= (apply!99 lt!55471 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!107996 () Bool)

(assert (=> b!107996 (= e!70295 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!107997 () Bool)

(declare-fun call!11459 () ListLongMap!1549)

(assert (=> b!107997 (= e!70296 call!11459)))

(declare-fun bm!11451 () Bool)

(declare-fun call!11454 () ListLongMap!1549)

(declare-fun call!11456 () ListLongMap!1549)

(assert (=> bm!11451 (= call!11454 call!11456)))

(declare-fun bm!11452 () Bool)

(declare-fun call!11457 () ListLongMap!1549)

(assert (=> bm!11452 (= call!11459 call!11457)))

(declare-fun bm!11453 () Bool)

(assert (=> bm!11453 (= call!11458 (contains!824 lt!55471 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!11455 () ListLongMap!1549)

(declare-fun bm!11454 () Bool)

(assert (=> bm!11454 (= call!11457 (+!137 (ite c!18939 call!11456 (ite c!18940 call!11454 call!11455)) (ite (or c!18939 c!18940) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun b!107998 () Bool)

(declare-fun e!70291 () Bool)

(declare-fun e!70290 () Bool)

(assert (=> b!107998 (= e!70291 e!70290)))

(declare-fun res!53584 () Bool)

(assert (=> b!107998 (= res!53584 call!11453)))

(assert (=> b!107998 (=> (not res!53584) (not e!70290))))

(declare-fun bm!11455 () Bool)

(assert (=> bm!11455 (= call!11455 call!11454)))

(declare-fun b!107999 () Bool)

(assert (=> b!107999 (= e!70289 e!70291)))

(declare-fun c!18938 () Bool)

(assert (=> b!107999 (= c!18938 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108000 () Bool)

(assert (=> b!108000 (= e!70301 e!70300)))

(declare-fun res!53581 () Bool)

(assert (=> b!108000 (=> (not res!53581) (not e!70300))))

(assert (=> b!108000 (= res!53581 (contains!824 lt!55471 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108000 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108001 () Bool)

(declare-fun lt!55454 () Unit!3307)

(assert (=> b!108001 (= e!70299 lt!55454)))

(declare-fun lt!55452 () ListLongMap!1549)

(assert (=> b!108001 (= lt!55452 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55451 () (_ BitVec 64))

(assert (=> b!108001 (= lt!55451 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55457 () (_ BitVec 64))

(assert (=> b!108001 (= lt!55457 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55464 () Unit!3307)

(assert (=> b!108001 (= lt!55464 (addStillContains!75 lt!55452 lt!55451 (zeroValue!2478 newMap!16) lt!55457))))

(assert (=> b!108001 (contains!824 (+!137 lt!55452 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16))) lt!55457)))

(declare-fun lt!55455 () Unit!3307)

(assert (=> b!108001 (= lt!55455 lt!55464)))

(declare-fun lt!55462 () ListLongMap!1549)

(assert (=> b!108001 (= lt!55462 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55459 () (_ BitVec 64))

(assert (=> b!108001 (= lt!55459 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55467 () (_ BitVec 64))

(assert (=> b!108001 (= lt!55467 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55461 () Unit!3307)

(assert (=> b!108001 (= lt!55461 (addApplyDifferent!75 lt!55462 lt!55459 (minValue!2478 newMap!16) lt!55467))))

(assert (=> b!108001 (= (apply!99 (+!137 lt!55462 (tuple2!2393 lt!55459 (minValue!2478 newMap!16))) lt!55467) (apply!99 lt!55462 lt!55467))))

(declare-fun lt!55470 () Unit!3307)

(assert (=> b!108001 (= lt!55470 lt!55461)))

(declare-fun lt!55456 () ListLongMap!1549)

(assert (=> b!108001 (= lt!55456 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55453 () (_ BitVec 64))

(assert (=> b!108001 (= lt!55453 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55472 () (_ BitVec 64))

(assert (=> b!108001 (= lt!55472 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55466 () Unit!3307)

(assert (=> b!108001 (= lt!55466 (addApplyDifferent!75 lt!55456 lt!55453 (zeroValue!2478 newMap!16) lt!55472))))

(assert (=> b!108001 (= (apply!99 (+!137 lt!55456 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16))) lt!55472) (apply!99 lt!55456 lt!55472))))

(declare-fun lt!55463 () Unit!3307)

(assert (=> b!108001 (= lt!55463 lt!55466)))

(declare-fun lt!55468 () ListLongMap!1549)

(assert (=> b!108001 (= lt!55468 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55460 () (_ BitVec 64))

(assert (=> b!108001 (= lt!55460 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55458 () (_ BitVec 64))

(assert (=> b!108001 (= lt!55458 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108001 (= lt!55454 (addApplyDifferent!75 lt!55468 lt!55460 (minValue!2478 newMap!16) lt!55458))))

(assert (=> b!108001 (= (apply!99 (+!137 lt!55468 (tuple2!2393 lt!55460 (minValue!2478 newMap!16))) lt!55458) (apply!99 lt!55468 lt!55458))))

(declare-fun b!108002 () Bool)

(assert (=> b!108002 (= e!70297 (+!137 call!11457 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun bm!11456 () Bool)

(assert (=> bm!11456 (= call!11456 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!108003 () Bool)

(declare-fun res!53583 () Bool)

(assert (=> b!108003 (=> (not res!53583) (not e!70289))))

(assert (=> b!108003 (= res!53583 e!70298)))

(declare-fun c!18943 () Bool)

(assert (=> b!108003 (= c!18943 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108004 () Bool)

(assert (=> b!108004 (= e!70292 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108005 () Bool)

(declare-fun c!18941 () Bool)

(assert (=> b!108005 (= c!18941 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70293 () ListLongMap!1549)

(assert (=> b!108005 (= e!70296 e!70293)))

(declare-fun b!108006 () Bool)

(assert (=> b!108006 (= e!70290 (= (apply!99 lt!55471 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!108007 () Bool)

(assert (=> b!108007 (= e!70291 (not call!11453))))

(declare-fun b!108008 () Bool)

(assert (=> b!108008 (= e!70293 call!11459)))

(declare-fun b!108009 () Bool)

(assert (=> b!108009 (= e!70293 call!11455)))

(assert (= (and d!29819 c!18939) b!108002))

(assert (= (and d!29819 (not c!18939)) b!107991))

(assert (= (and b!107991 c!18940) b!107997))

(assert (= (and b!107991 (not c!18940)) b!108005))

(assert (= (and b!108005 c!18941) b!108008))

(assert (= (and b!108005 (not c!18941)) b!108009))

(assert (= (or b!108008 b!108009) bm!11455))

(assert (= (or b!107997 bm!11455) bm!11451))

(assert (= (or b!107997 b!108008) bm!11452))

(assert (= (or b!108002 bm!11451) bm!11456))

(assert (= (or b!108002 bm!11452) bm!11454))

(assert (= (and d!29819 res!53585) b!108004))

(assert (= (and d!29819 c!18942) b!108001))

(assert (= (and d!29819 (not c!18942)) b!107989))

(assert (= (and d!29819 res!53580) b!107994))

(assert (= (and b!107994 res!53582) b!107996))

(assert (= (and b!107994 (not res!53587)) b!108000))

(assert (= (and b!108000 res!53581) b!107990))

(assert (= (and b!107994 res!53586) b!108003))

(assert (= (and b!108003 c!18943) b!107992))

(assert (= (and b!108003 (not c!18943)) b!107993))

(assert (= (and b!107992 res!53579) b!107995))

(assert (= (or b!107992 b!107993) bm!11453))

(assert (= (and b!108003 res!53583) b!107999))

(assert (= (and b!107999 c!18938) b!107998))

(assert (= (and b!107999 (not c!18938)) b!108007))

(assert (= (and b!107998 res!53584) b!108006))

(assert (= (or b!107998 b!108007) bm!11450))

(declare-fun b_lambda!4819 () Bool)

(assert (=> (not b_lambda!4819) (not b!107990)))

(declare-fun t!5742 () Bool)

(declare-fun tb!2085 () Bool)

(assert (=> (and b!107369 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16)) t!5742) tb!2085))

(declare-fun result!3505 () Bool)

(assert (=> tb!2085 (= result!3505 tp_is_empty!2689)))

(assert (=> b!107990 t!5742))

(declare-fun b_and!6653 () Bool)

(assert (= b_and!6649 (and (=> t!5742 result!3505) b_and!6653)))

(declare-fun t!5744 () Bool)

(declare-fun tb!2087 () Bool)

(assert (=> (and b!107358 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 newMap!16)) t!5744) tb!2087))

(declare-fun result!3507 () Bool)

(assert (= result!3507 result!3505))

(assert (=> b!107990 t!5744))

(declare-fun b_and!6655 () Bool)

(assert (= b_and!6651 (and (=> t!5744 result!3507) b_and!6655)))

(declare-fun m!121111 () Bool)

(assert (=> b!107990 m!121111))

(declare-fun m!121113 () Bool)

(assert (=> b!107990 m!121113))

(assert (=> b!107990 m!121111))

(assert (=> b!107990 m!121113))

(declare-fun m!121115 () Bool)

(assert (=> b!107990 m!121115))

(assert (=> b!107990 m!120769))

(declare-fun m!121117 () Bool)

(assert (=> b!107990 m!121117))

(assert (=> b!107990 m!120769))

(declare-fun m!121119 () Bool)

(assert (=> b!108006 m!121119))

(declare-fun m!121121 () Bool)

(assert (=> bm!11450 m!121121))

(declare-fun m!121123 () Bool)

(assert (=> bm!11456 m!121123))

(declare-fun m!121125 () Bool)

(assert (=> bm!11453 m!121125))

(assert (=> b!107996 m!120769))

(assert (=> b!107996 m!120769))

(assert (=> b!107996 m!120779))

(assert (=> b!108004 m!120769))

(assert (=> b!108004 m!120769))

(assert (=> b!108004 m!120779))

(declare-fun m!121127 () Bool)

(assert (=> bm!11454 m!121127))

(declare-fun m!121129 () Bool)

(assert (=> b!108002 m!121129))

(assert (=> d!29819 m!120787))

(declare-fun m!121131 () Bool)

(assert (=> b!107995 m!121131))

(assert (=> b!108000 m!120769))

(assert (=> b!108000 m!120769))

(declare-fun m!121133 () Bool)

(assert (=> b!108000 m!121133))

(declare-fun m!121135 () Bool)

(assert (=> b!108001 m!121135))

(declare-fun m!121137 () Bool)

(assert (=> b!108001 m!121137))

(declare-fun m!121139 () Bool)

(assert (=> b!108001 m!121139))

(declare-fun m!121141 () Bool)

(assert (=> b!108001 m!121141))

(declare-fun m!121143 () Bool)

(assert (=> b!108001 m!121143))

(declare-fun m!121145 () Bool)

(assert (=> b!108001 m!121145))

(declare-fun m!121147 () Bool)

(assert (=> b!108001 m!121147))

(declare-fun m!121149 () Bool)

(assert (=> b!108001 m!121149))

(assert (=> b!108001 m!121139))

(assert (=> b!108001 m!121145))

(declare-fun m!121151 () Bool)

(assert (=> b!108001 m!121151))

(assert (=> b!108001 m!121123))

(declare-fun m!121153 () Bool)

(assert (=> b!108001 m!121153))

(declare-fun m!121155 () Bool)

(assert (=> b!108001 m!121155))

(declare-fun m!121157 () Bool)

(assert (=> b!108001 m!121157))

(assert (=> b!108001 m!121147))

(declare-fun m!121159 () Bool)

(assert (=> b!108001 m!121159))

(declare-fun m!121161 () Bool)

(assert (=> b!108001 m!121161))

(assert (=> b!108001 m!120769))

(assert (=> b!108001 m!121157))

(declare-fun m!121163 () Bool)

(assert (=> b!108001 m!121163))

(assert (=> bm!11416 d!29819))

(declare-fun d!29821 () Bool)

(declare-fun e!70302 () Bool)

(assert (=> d!29821 e!70302))

(declare-fun res!53588 () Bool)

(assert (=> d!29821 (=> res!53588 e!70302)))

(declare-fun lt!55473 () Bool)

(assert (=> d!29821 (= res!53588 (not lt!55473))))

(declare-fun lt!55474 () Bool)

(assert (=> d!29821 (= lt!55473 lt!55474)))

(declare-fun lt!55476 () Unit!3307)

(declare-fun e!70303 () Unit!3307)

(assert (=> d!29821 (= lt!55476 e!70303)))

(declare-fun c!18944 () Bool)

(assert (=> d!29821 (= c!18944 lt!55474)))

(assert (=> d!29821 (= lt!55474 (containsKey!159 (toList!790 e!70158) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!29821 (= (contains!824 e!70158 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) lt!55473)))

(declare-fun b!108010 () Bool)

(declare-fun lt!55475 () Unit!3307)

(assert (=> b!108010 (= e!70303 lt!55475)))

(assert (=> b!108010 (= lt!55475 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 e!70158) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> b!108010 (isDefined!109 (getValueByKey!155 (toList!790 e!70158) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!108011 () Bool)

(declare-fun Unit!3327 () Unit!3307)

(assert (=> b!108011 (= e!70303 Unit!3327)))

(declare-fun b!108012 () Bool)

(assert (=> b!108012 (= e!70302 (isDefined!109 (getValueByKey!155 (toList!790 e!70158) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (= (and d!29821 c!18944) b!108010))

(assert (= (and d!29821 (not c!18944)) b!108011))

(assert (= (and d!29821 (not res!53588)) b!108012))

(assert (=> d!29821 m!120387))

(declare-fun m!121165 () Bool)

(assert (=> d!29821 m!121165))

(assert (=> b!108010 m!120387))

(declare-fun m!121167 () Bool)

(assert (=> b!108010 m!121167))

(assert (=> b!108010 m!120387))

(declare-fun m!121169 () Bool)

(assert (=> b!108010 m!121169))

(assert (=> b!108010 m!121169))

(declare-fun m!121171 () Bool)

(assert (=> b!108010 m!121171))

(assert (=> b!108012 m!120387))

(assert (=> b!108012 m!121169))

(assert (=> b!108012 m!121169))

(assert (=> b!108012 m!121171))

(assert (=> bm!11402 d!29821))

(declare-fun d!29823 () Bool)

(assert (=> d!29823 (= (apply!99 lt!55124 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!155 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4426 () Bool)

(assert (= bs!4426 d!29823))

(declare-fun m!121173 () Bool)

(assert (=> bs!4426 m!121173))

(assert (=> bs!4426 m!121173))

(declare-fun m!121175 () Bool)

(assert (=> bs!4426 m!121175))

(assert (=> b!107555 d!29823))

(declare-fun d!29825 () Bool)

(declare-fun res!53589 () Bool)

(declare-fun e!70304 () Bool)

(assert (=> d!29825 (=> res!53589 e!70304)))

(assert (=> d!29825 (= res!53589 (= (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!29825 (= (arrayContainsKey!0 (_keys!4314 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b00000000000000000000000000000000) e!70304)))

(declare-fun b!108013 () Bool)

(declare-fun e!70305 () Bool)

(assert (=> b!108013 (= e!70304 e!70305)))

(declare-fun res!53590 () Bool)

(assert (=> b!108013 (=> (not res!53590) (not e!70305))))

(assert (=> b!108013 (= res!53590 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108014 () Bool)

(assert (=> b!108014 (= e!70305 (arrayContainsKey!0 (_keys!4314 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!29825 (not res!53589)) b!108013))

(assert (= (and b!108013 res!53590) b!108014))

(assert (=> d!29825 m!120769))

(assert (=> b!108014 m!120387))

(declare-fun m!121177 () Bool)

(assert (=> b!108014 m!121177))

(assert (=> bm!11401 d!29825))

(declare-fun d!29827 () Bool)

(declare-fun e!70308 () Bool)

(assert (=> d!29827 e!70308))

(declare-fun c!18947 () Bool)

(assert (=> d!29827 (= c!18947 (and (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!29827 true))

(declare-fun _$29!144 () Unit!3307)

(assert (=> d!29827 (= (choose!674 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))) _$29!144)))

(declare-fun b!108019 () Bool)

(assert (=> b!108019 (= e!70308 (arrayContainsKey!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!108020 () Bool)

(assert (=> b!108020 (= e!70308 (ite (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!29827 c!18947) b!108019))

(assert (= (and d!29827 (not c!18947)) b!108020))

(assert (=> b!108019 m!120387))

(assert (=> b!108019 m!120407))

(assert (=> d!29699 d!29827))

(assert (=> d!29699 d!29717))

(assert (=> b!107636 d!29749))

(declare-fun d!29829 () Bool)

(declare-fun e!70309 () Bool)

(assert (=> d!29829 e!70309))

(declare-fun res!53591 () Bool)

(assert (=> d!29829 (=> res!53591 e!70309)))

(declare-fun lt!55477 () Bool)

(assert (=> d!29829 (= res!53591 (not lt!55477))))

(declare-fun lt!55478 () Bool)

(assert (=> d!29829 (= lt!55477 lt!55478)))

(declare-fun lt!55480 () Unit!3307)

(declare-fun e!70310 () Unit!3307)

(assert (=> d!29829 (= lt!55480 e!70310)))

(declare-fun c!18948 () Bool)

(assert (=> d!29829 (= c!18948 lt!55478)))

(assert (=> d!29829 (= lt!55478 (containsKey!159 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29829 (= (contains!824 lt!55124 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55477)))

(declare-fun b!108021 () Bool)

(declare-fun lt!55479 () Unit!3307)

(assert (=> b!108021 (= e!70310 lt!55479)))

(assert (=> b!108021 (= lt!55479 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108021 (isDefined!109 (getValueByKey!155 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108022 () Bool)

(declare-fun Unit!3328 () Unit!3307)

(assert (=> b!108022 (= e!70310 Unit!3328)))

(declare-fun b!108023 () Bool)

(assert (=> b!108023 (= e!70309 (isDefined!109 (getValueByKey!155 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29829 c!18948) b!108021))

(assert (= (and d!29829 (not c!18948)) b!108022))

(assert (= (and d!29829 (not res!53591)) b!108023))

(declare-fun m!121179 () Bool)

(assert (=> d!29829 m!121179))

(declare-fun m!121181 () Bool)

(assert (=> b!108021 m!121181))

(assert (=> b!108021 m!121173))

(assert (=> b!108021 m!121173))

(declare-fun m!121183 () Bool)

(assert (=> b!108021 m!121183))

(assert (=> b!108023 m!121173))

(assert (=> b!108023 m!121173))

(assert (=> b!108023 m!121183))

(assert (=> bm!11339 d!29829))

(declare-fun b!108026 () Bool)

(declare-fun e!70312 () Option!161)

(assert (=> b!108026 (= e!70312 (getValueByKey!155 (t!5730 (toList!790 lt!55147)) (_1!1207 lt!54977)))))

(declare-fun b!108025 () Bool)

(declare-fun e!70311 () Option!161)

(assert (=> b!108025 (= e!70311 e!70312)))

(declare-fun c!18950 () Bool)

(assert (=> b!108025 (= c!18950 (and ((_ is Cons!1619) (toList!790 lt!55147)) (not (= (_1!1207 (h!2217 (toList!790 lt!55147))) (_1!1207 lt!54977)))))))

(declare-fun d!29831 () Bool)

(declare-fun c!18949 () Bool)

(assert (=> d!29831 (= c!18949 (and ((_ is Cons!1619) (toList!790 lt!55147)) (= (_1!1207 (h!2217 (toList!790 lt!55147))) (_1!1207 lt!54977))))))

(assert (=> d!29831 (= (getValueByKey!155 (toList!790 lt!55147) (_1!1207 lt!54977)) e!70311)))

(declare-fun b!108027 () Bool)

(assert (=> b!108027 (= e!70312 None!159)))

(declare-fun b!108024 () Bool)

(assert (=> b!108024 (= e!70311 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55147)))))))

(assert (= (and d!29831 c!18949) b!108024))

(assert (= (and d!29831 (not c!18949)) b!108025))

(assert (= (and b!108025 c!18950) b!108026))

(assert (= (and b!108025 (not c!18950)) b!108027))

(declare-fun m!121185 () Bool)

(assert (=> b!108026 m!121185))

(assert (=> b!107607 d!29831))

(declare-fun d!29833 () Bool)

(assert (=> d!29833 (isDefined!109 (getValueByKey!155 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun lt!55483 () Unit!3307)

(declare-fun choose!681 (List!1623 (_ BitVec 64)) Unit!3307)

(assert (=> d!29833 (= lt!55483 (choose!681 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun e!70315 () Bool)

(assert (=> d!29833 e!70315))

(declare-fun res!53594 () Bool)

(assert (=> d!29833 (=> (not res!53594) (not e!70315))))

(assert (=> d!29833 (= res!53594 (isStrictlySorted!305 (toList!790 lt!54978)))))

(assert (=> d!29833 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) lt!55483)))

(declare-fun b!108030 () Bool)

(assert (=> b!108030 (= e!70315 (containsKey!159 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (= (and d!29833 res!53594) b!108030))

(assert (=> d!29833 m!120387))

(assert (=> d!29833 m!120705))

(assert (=> d!29833 m!120705))

(assert (=> d!29833 m!120707))

(assert (=> d!29833 m!120387))

(declare-fun m!121187 () Bool)

(assert (=> d!29833 m!121187))

(declare-fun m!121189 () Bool)

(assert (=> d!29833 m!121189))

(assert (=> b!108030 m!120387))

(assert (=> b!108030 m!120701))

(assert (=> b!107655 d!29833))

(declare-fun d!29835 () Bool)

(declare-fun isEmpty!379 (Option!161) Bool)

(assert (=> d!29835 (= (isDefined!109 (getValueByKey!155 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))) (not (isEmpty!379 (getValueByKey!155 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))))

(declare-fun bs!4427 () Bool)

(assert (= bs!4427 d!29835))

(assert (=> bs!4427 m!120705))

(declare-fun m!121191 () Bool)

(assert (=> bs!4427 m!121191))

(assert (=> b!107655 d!29835))

(declare-fun b!108033 () Bool)

(declare-fun e!70317 () Option!161)

(assert (=> b!108033 (= e!70317 (getValueByKey!155 (t!5730 (toList!790 lt!54978)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!108032 () Bool)

(declare-fun e!70316 () Option!161)

(assert (=> b!108032 (= e!70316 e!70317)))

(declare-fun c!18952 () Bool)

(assert (=> b!108032 (= c!18952 (and ((_ is Cons!1619) (toList!790 lt!54978)) (not (= (_1!1207 (h!2217 (toList!790 lt!54978))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))))

(declare-fun d!29837 () Bool)

(declare-fun c!18951 () Bool)

(assert (=> d!29837 (= c!18951 (and ((_ is Cons!1619) (toList!790 lt!54978)) (= (_1!1207 (h!2217 (toList!790 lt!54978))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (=> d!29837 (= (getValueByKey!155 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) e!70316)))

(declare-fun b!108034 () Bool)

(assert (=> b!108034 (= e!70317 None!159)))

(declare-fun b!108031 () Bool)

(assert (=> b!108031 (= e!70316 (Some!160 (_2!1207 (h!2217 (toList!790 lt!54978)))))))

(assert (= (and d!29837 c!18951) b!108031))

(assert (= (and d!29837 (not c!18951)) b!108032))

(assert (= (and b!108032 c!18952) b!108033))

(assert (= (and b!108032 (not c!18952)) b!108034))

(assert (=> b!108033 m!120387))

(declare-fun m!121193 () Bool)

(assert (=> b!108033 m!121193))

(assert (=> b!107655 d!29837))

(declare-fun d!29839 () Bool)

(assert (=> d!29839 (= (apply!99 lt!55175 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1344 (getValueByKey!155 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4428 () Bool)

(assert (= bs!4428 d!29839))

(assert (=> bs!4428 m!120545))

(assert (=> bs!4428 m!120865))

(assert (=> bs!4428 m!120865))

(declare-fun m!121195 () Bool)

(assert (=> bs!4428 m!121195))

(assert (=> b!107639 d!29839))

(assert (=> b!107639 d!29815))

(declare-fun d!29841 () Bool)

(assert (=> d!29841 (= (+!137 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (+!137 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(assert (=> d!29841 true))

(declare-fun _$28!164 () Unit!3307)

(assert (=> d!29841 (= (choose!675 lt!54981 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) _$28!164)))

(declare-fun bs!4429 () Bool)

(assert (= bs!4429 d!29841))

(assert (=> bs!4429 m!120691))

(assert (=> bs!4429 m!120691))

(assert (=> bs!4429 m!120697))

(assert (=> bs!4429 m!120693))

(assert (=> bs!4429 m!120693))

(assert (=> bs!4429 m!120695))

(assert (=> d!29715 d!29841))

(declare-fun d!29843 () Bool)

(declare-fun e!70318 () Bool)

(assert (=> d!29843 e!70318))

(declare-fun res!53596 () Bool)

(assert (=> d!29843 (=> (not res!53596) (not e!70318))))

(declare-fun lt!55484 () ListLongMap!1549)

(assert (=> d!29843 (= res!53596 (contains!824 lt!55484 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!55487 () List!1623)

(assert (=> d!29843 (= lt!55484 (ListLongMap!1550 lt!55487))))

(declare-fun lt!55485 () Unit!3307)

(declare-fun lt!55486 () Unit!3307)

(assert (=> d!29843 (= lt!55485 lt!55486)))

(assert (=> d!29843 (= (getValueByKey!155 lt!55487 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29843 (= lt!55486 (lemmaContainsTupThenGetReturnValue!74 lt!55487 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29843 (= lt!55487 (insertStrictlySorted!77 (toList!790 lt!54981) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29843 (= (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55484)))

(declare-fun b!108035 () Bool)

(declare-fun res!53595 () Bool)

(assert (=> b!108035 (=> (not res!53595) (not e!70318))))

(assert (=> b!108035 (= res!53595 (= (getValueByKey!155 (toList!790 lt!55484) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!108036 () Bool)

(assert (=> b!108036 (= e!70318 (contains!826 (toList!790 lt!55484) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!29843 res!53596) b!108035))

(assert (= (and b!108035 res!53595) b!108036))

(declare-fun m!121197 () Bool)

(assert (=> d!29843 m!121197))

(declare-fun m!121199 () Bool)

(assert (=> d!29843 m!121199))

(declare-fun m!121201 () Bool)

(assert (=> d!29843 m!121201))

(declare-fun m!121203 () Bool)

(assert (=> d!29843 m!121203))

(declare-fun m!121205 () Bool)

(assert (=> b!108035 m!121205))

(declare-fun m!121207 () Bool)

(assert (=> b!108036 m!121207))

(assert (=> d!29715 d!29843))

(declare-fun d!29845 () Bool)

(declare-fun e!70319 () Bool)

(assert (=> d!29845 e!70319))

(declare-fun res!53598 () Bool)

(assert (=> d!29845 (=> (not res!53598) (not e!70319))))

(declare-fun lt!55488 () ListLongMap!1549)

(assert (=> d!29845 (= res!53598 (contains!824 lt!55488 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun lt!55491 () List!1623)

(assert (=> d!29845 (= lt!55488 (ListLongMap!1550 lt!55491))))

(declare-fun lt!55489 () Unit!3307)

(declare-fun lt!55490 () Unit!3307)

(assert (=> d!29845 (= lt!55489 lt!55490)))

(assert (=> d!29845 (= (getValueByKey!155 lt!55491 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!29845 (= lt!55490 (lemmaContainsTupThenGetReturnValue!74 lt!55491 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!29845 (= lt!55491 (insertStrictlySorted!77 (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!29845 (= (+!137 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) lt!55488)))

(declare-fun b!108037 () Bool)

(declare-fun res!53597 () Bool)

(assert (=> b!108037 (=> (not res!53597) (not e!70319))))

(assert (=> b!108037 (= res!53597 (= (getValueByKey!155 (toList!790 lt!55488) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun b!108038 () Bool)

(assert (=> b!108038 (= e!70319 (contains!826 (toList!790 lt!55488) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(assert (= (and d!29845 res!53598) b!108037))

(assert (= (and b!108037 res!53597) b!108038))

(declare-fun m!121209 () Bool)

(assert (=> d!29845 m!121209))

(declare-fun m!121211 () Bool)

(assert (=> d!29845 m!121211))

(declare-fun m!121213 () Bool)

(assert (=> d!29845 m!121213))

(declare-fun m!121215 () Bool)

(assert (=> d!29845 m!121215))

(declare-fun m!121217 () Bool)

(assert (=> b!108037 m!121217))

(declare-fun m!121219 () Bool)

(assert (=> b!108038 m!121219))

(assert (=> d!29715 d!29845))

(declare-fun d!29847 () Bool)

(declare-fun e!70320 () Bool)

(assert (=> d!29847 e!70320))

(declare-fun res!53600 () Bool)

(assert (=> d!29847 (=> (not res!53600) (not e!70320))))

(declare-fun lt!55492 () ListLongMap!1549)

(assert (=> d!29847 (= res!53600 (contains!824 lt!55492 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!55495 () List!1623)

(assert (=> d!29847 (= lt!55492 (ListLongMap!1550 lt!55495))))

(declare-fun lt!55493 () Unit!3307)

(declare-fun lt!55494 () Unit!3307)

(assert (=> d!29847 (= lt!55493 lt!55494)))

(assert (=> d!29847 (= (getValueByKey!155 lt!55495 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29847 (= lt!55494 (lemmaContainsTupThenGetReturnValue!74 lt!55495 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29847 (= lt!55495 (insertStrictlySorted!77 (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29847 (= (+!137 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55492)))

(declare-fun b!108039 () Bool)

(declare-fun res!53599 () Bool)

(assert (=> b!108039 (=> (not res!53599) (not e!70320))))

(assert (=> b!108039 (= res!53599 (= (getValueByKey!155 (toList!790 lt!55492) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!108040 () Bool)

(assert (=> b!108040 (= e!70320 (contains!826 (toList!790 lt!55492) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!29847 res!53600) b!108039))

(assert (= (and b!108039 res!53599) b!108040))

(declare-fun m!121221 () Bool)

(assert (=> d!29847 m!121221))

(declare-fun m!121223 () Bool)

(assert (=> d!29847 m!121223))

(declare-fun m!121225 () Bool)

(assert (=> d!29847 m!121225))

(declare-fun m!121227 () Bool)

(assert (=> d!29847 m!121227))

(declare-fun m!121229 () Bool)

(assert (=> b!108039 m!121229))

(declare-fun m!121231 () Bool)

(assert (=> b!108040 m!121231))

(assert (=> d!29715 d!29847))

(declare-fun d!29849 () Bool)

(declare-fun e!70321 () Bool)

(assert (=> d!29849 e!70321))

(declare-fun res!53602 () Bool)

(assert (=> d!29849 (=> (not res!53602) (not e!70321))))

(declare-fun lt!55496 () ListLongMap!1549)

(assert (=> d!29849 (= res!53602 (contains!824 lt!55496 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun lt!55499 () List!1623)

(assert (=> d!29849 (= lt!55496 (ListLongMap!1550 lt!55499))))

(declare-fun lt!55497 () Unit!3307)

(declare-fun lt!55498 () Unit!3307)

(assert (=> d!29849 (= lt!55497 lt!55498)))

(assert (=> d!29849 (= (getValueByKey!155 lt!55499 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!29849 (= lt!55498 (lemmaContainsTupThenGetReturnValue!74 lt!55499 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!29849 (= lt!55499 (insertStrictlySorted!77 (toList!790 lt!54981) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!29849 (= (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) lt!55496)))

(declare-fun b!108041 () Bool)

(declare-fun res!53601 () Bool)

(assert (=> b!108041 (=> (not res!53601) (not e!70321))))

(assert (=> b!108041 (= res!53601 (= (getValueByKey!155 (toList!790 lt!55496) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun b!108042 () Bool)

(assert (=> b!108042 (= e!70321 (contains!826 (toList!790 lt!55496) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(assert (= (and d!29849 res!53602) b!108041))

(assert (= (and b!108041 res!53601) b!108042))

(declare-fun m!121233 () Bool)

(assert (=> d!29849 m!121233))

(declare-fun m!121235 () Bool)

(assert (=> d!29849 m!121235))

(declare-fun m!121237 () Bool)

(assert (=> d!29849 m!121237))

(declare-fun m!121239 () Bool)

(assert (=> d!29849 m!121239))

(declare-fun m!121241 () Bool)

(assert (=> b!108041 m!121241))

(declare-fun m!121243 () Bool)

(assert (=> b!108042 m!121243))

(assert (=> d!29715 d!29849))

(declare-fun b!108055 () Bool)

(declare-fun c!18959 () Bool)

(declare-fun lt!55508 () (_ BitVec 64))

(assert (=> b!108055 (= c!18959 (= lt!55508 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70329 () SeekEntryResult!263)

(declare-fun e!70328 () SeekEntryResult!263)

(assert (=> b!108055 (= e!70329 e!70328)))

(declare-fun b!108056 () Bool)

(declare-fun e!70330 () SeekEntryResult!263)

(assert (=> b!108056 (= e!70330 Undefined!263)))

(declare-fun lt!55507 () SeekEntryResult!263)

(declare-fun d!29851 () Bool)

(assert (=> d!29851 (and (or ((_ is Undefined!263) lt!55507) (not ((_ is Found!263) lt!55507)) (and (bvsge (index!3202 lt!55507) #b00000000000000000000000000000000) (bvslt (index!3202 lt!55507) (size!2319 (_keys!4314 newMap!16))))) (or ((_ is Undefined!263) lt!55507) ((_ is Found!263) lt!55507) (not ((_ is MissingZero!263) lt!55507)) (and (bvsge (index!3201 lt!55507) #b00000000000000000000000000000000) (bvslt (index!3201 lt!55507) (size!2319 (_keys!4314 newMap!16))))) (or ((_ is Undefined!263) lt!55507) ((_ is Found!263) lt!55507) ((_ is MissingZero!263) lt!55507) (not ((_ is MissingVacant!263) lt!55507)) (and (bvsge (index!3204 lt!55507) #b00000000000000000000000000000000) (bvslt (index!3204 lt!55507) (size!2319 (_keys!4314 newMap!16))))) (or ((_ is Undefined!263) lt!55507) (ite ((_ is Found!263) lt!55507) (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55507)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (ite ((_ is MissingZero!263) lt!55507) (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3201 lt!55507)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!263) lt!55507) (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3204 lt!55507)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29851 (= lt!55507 e!70330)))

(declare-fun c!18961 () Bool)

(declare-fun lt!55506 () SeekEntryResult!263)

(assert (=> d!29851 (= c!18961 (and ((_ is Intermediate!263) lt!55506) (undefined!1075 lt!55506)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4351 (_ BitVec 32)) SeekEntryResult!263)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!29851 (= lt!55506 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (mask!6762 newMap!16)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(assert (=> d!29851 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29851 (= (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)) lt!55507)))

(declare-fun b!108057 () Bool)

(assert (=> b!108057 (= e!70328 (MissingZero!263 (index!3203 lt!55506)))))

(declare-fun b!108058 () Bool)

(assert (=> b!108058 (= e!70330 e!70329)))

(assert (=> b!108058 (= lt!55508 (select (arr!2062 (_keys!4314 newMap!16)) (index!3203 lt!55506)))))

(declare-fun c!18960 () Bool)

(assert (=> b!108058 (= c!18960 (= lt!55508 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!108059 () Bool)

(assert (=> b!108059 (= e!70329 (Found!263 (index!3203 lt!55506)))))

(declare-fun b!108060 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4351 (_ BitVec 32)) SeekEntryResult!263)

(assert (=> b!108060 (= e!70328 (seekKeyOrZeroReturnVacant!0 (x!13806 lt!55506) (index!3203 lt!55506) (index!3203 lt!55506) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(assert (= (and d!29851 c!18961) b!108056))

(assert (= (and d!29851 (not c!18961)) b!108058))

(assert (= (and b!108058 c!18960) b!108059))

(assert (= (and b!108058 (not c!18960)) b!108055))

(assert (= (and b!108055 c!18959) b!108057))

(assert (= (and b!108055 (not c!18959)) b!108060))

(assert (=> d!29851 m!120787))

(declare-fun m!121245 () Bool)

(assert (=> d!29851 m!121245))

(declare-fun m!121247 () Bool)

(assert (=> d!29851 m!121247))

(declare-fun m!121249 () Bool)

(assert (=> d!29851 m!121249))

(assert (=> d!29851 m!120387))

(declare-fun m!121251 () Bool)

(assert (=> d!29851 m!121251))

(assert (=> d!29851 m!120387))

(assert (=> d!29851 m!121249))

(declare-fun m!121253 () Bool)

(assert (=> d!29851 m!121253))

(declare-fun m!121255 () Bool)

(assert (=> b!108058 m!121255))

(assert (=> b!108060 m!120387))

(declare-fun m!121257 () Bool)

(assert (=> b!108060 m!121257))

(assert (=> bm!11403 d!29851))

(declare-fun d!29853 () Bool)

(declare-fun e!70331 () Bool)

(assert (=> d!29853 e!70331))

(declare-fun res!53603 () Bool)

(assert (=> d!29853 (=> res!53603 e!70331)))

(declare-fun lt!55509 () Bool)

(assert (=> d!29853 (= res!53603 (not lt!55509))))

(declare-fun lt!55510 () Bool)

(assert (=> d!29853 (= lt!55509 lt!55510)))

(declare-fun lt!55512 () Unit!3307)

(declare-fun e!70332 () Unit!3307)

(assert (=> d!29853 (= lt!55512 e!70332)))

(declare-fun c!18962 () Bool)

(assert (=> d!29853 (= c!18962 lt!55510)))

(assert (=> d!29853 (= lt!55510 (containsKey!159 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))))))

(assert (=> d!29853 (= (contains!824 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))) lt!55509)))

(declare-fun b!108061 () Bool)

(declare-fun lt!55511 () Unit!3307)

(assert (=> b!108061 (= e!70332 lt!55511)))

(assert (=> b!108061 (= lt!55511 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))))))

(assert (=> b!108061 (isDefined!109 (getValueByKey!155 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))))))

(declare-fun b!108062 () Bool)

(declare-fun Unit!3329 () Unit!3307)

(assert (=> b!108062 (= e!70332 Unit!3329)))

(declare-fun b!108063 () Bool)

(assert (=> b!108063 (= e!70331 (isDefined!109 (getValueByKey!155 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253)))))))

(assert (= (and d!29853 c!18962) b!108061))

(assert (= (and d!29853 (not c!18962)) b!108062))

(assert (= (and d!29853 (not res!53603)) b!108063))

(assert (=> d!29853 m!120729))

(declare-fun m!121259 () Bool)

(assert (=> d!29853 m!121259))

(assert (=> b!108061 m!120729))

(declare-fun m!121261 () Bool)

(assert (=> b!108061 m!121261))

(assert (=> b!108061 m!120729))

(declare-fun m!121263 () Bool)

(assert (=> b!108061 m!121263))

(assert (=> b!108061 m!121263))

(declare-fun m!121265 () Bool)

(assert (=> b!108061 m!121265))

(assert (=> b!108063 m!120729))

(assert (=> b!108063 m!121263))

(assert (=> b!108063 m!121263))

(assert (=> b!108063 m!121265))

(assert (=> b!107751 d!29853))

(declare-fun b!108064 () Bool)

(declare-fun e!70343 () Unit!3307)

(declare-fun Unit!3330 () Unit!3307)

(assert (=> b!108064 (= e!70343 Unit!3330)))

(declare-fun e!70344 () Bool)

(declare-fun lt!55533 () ListLongMap!1549)

(declare-fun b!108065 () Bool)

(assert (=> b!108065 (= e!70344 (= (apply!99 lt!55533 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 lt!55252) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108065 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 lt!55252)))))

(assert (=> b!108065 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108066 () Bool)

(declare-fun e!70341 () ListLongMap!1549)

(declare-fun e!70340 () ListLongMap!1549)

(assert (=> b!108066 (= e!70341 e!70340)))

(declare-fun c!18965 () Bool)

(assert (=> b!108066 (= c!18965 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11457 () Bool)

(declare-fun call!11460 () Bool)

(assert (=> bm!11457 (= call!11460 (contains!824 lt!55533 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108067 () Bool)

(declare-fun e!70342 () Bool)

(declare-fun e!70338 () Bool)

(assert (=> b!108067 (= e!70342 e!70338)))

(declare-fun res!53604 () Bool)

(declare-fun call!11465 () Bool)

(assert (=> b!108067 (= res!53604 call!11465)))

(assert (=> b!108067 (=> (not res!53604) (not e!70338))))

(declare-fun d!29855 () Bool)

(declare-fun e!70333 () Bool)

(assert (=> d!29855 e!70333))

(declare-fun res!53605 () Bool)

(assert (=> d!29855 (=> (not res!53605) (not e!70333))))

(assert (=> d!29855 (= res!53605 (or (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))))

(declare-fun lt!55531 () ListLongMap!1549)

(assert (=> d!29855 (= lt!55533 lt!55531)))

(declare-fun lt!55527 () Unit!3307)

(assert (=> d!29855 (= lt!55527 e!70343)))

(declare-fun c!18967 () Bool)

(declare-fun e!70336 () Bool)

(assert (=> d!29855 (= c!18967 e!70336)))

(declare-fun res!53610 () Bool)

(assert (=> d!29855 (=> (not res!53610) (not e!70336))))

(assert (=> d!29855 (= res!53610 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!29855 (= lt!55531 e!70341)))

(declare-fun c!18964 () Bool)

(assert (=> d!29855 (= c!18964 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29855 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29855 (= (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55533)))

(declare-fun b!108068 () Bool)

(assert (=> b!108068 (= e!70342 (not call!11465))))

(declare-fun b!108069 () Bool)

(declare-fun res!53611 () Bool)

(assert (=> b!108069 (=> (not res!53611) (not e!70333))))

(declare-fun e!70345 () Bool)

(assert (=> b!108069 (= res!53611 e!70345)))

(declare-fun res!53612 () Bool)

(assert (=> b!108069 (=> res!53612 e!70345)))

(declare-fun e!70339 () Bool)

(assert (=> b!108069 (= res!53612 (not e!70339))))

(declare-fun res!53607 () Bool)

(assert (=> b!108069 (=> (not res!53607) (not e!70339))))

(assert (=> b!108069 (= res!53607 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108070 () Bool)

(assert (=> b!108070 (= e!70338 (= (apply!99 lt!55533 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!108071 () Bool)

(assert (=> b!108071 (= e!70339 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108072 () Bool)

(declare-fun call!11466 () ListLongMap!1549)

(assert (=> b!108072 (= e!70340 call!11466)))

(declare-fun bm!11458 () Bool)

(declare-fun call!11461 () ListLongMap!1549)

(declare-fun call!11463 () ListLongMap!1549)

(assert (=> bm!11458 (= call!11461 call!11463)))

(declare-fun bm!11459 () Bool)

(declare-fun call!11464 () ListLongMap!1549)

(assert (=> bm!11459 (= call!11466 call!11464)))

(declare-fun bm!11460 () Bool)

(assert (=> bm!11460 (= call!11465 (contains!824 lt!55533 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11461 () Bool)

(declare-fun call!11462 () ListLongMap!1549)

(assert (=> bm!11461 (= call!11464 (+!137 (ite c!18964 call!11463 (ite c!18965 call!11461 call!11462)) (ite (or c!18964 c!18965) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun b!108073 () Bool)

(declare-fun e!70335 () Bool)

(declare-fun e!70334 () Bool)

(assert (=> b!108073 (= e!70335 e!70334)))

(declare-fun res!53609 () Bool)

(assert (=> b!108073 (= res!53609 call!11460)))

(assert (=> b!108073 (=> (not res!53609) (not e!70334))))

(declare-fun bm!11462 () Bool)

(assert (=> bm!11462 (= call!11462 call!11461)))

(declare-fun b!108074 () Bool)

(assert (=> b!108074 (= e!70333 e!70335)))

(declare-fun c!18963 () Bool)

(assert (=> b!108074 (= c!18963 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108075 () Bool)

(assert (=> b!108075 (= e!70345 e!70344)))

(declare-fun res!53606 () Bool)

(assert (=> b!108075 (=> (not res!53606) (not e!70344))))

(assert (=> b!108075 (= res!53606 (contains!824 lt!55533 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108075 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108076 () Bool)

(declare-fun lt!55516 () Unit!3307)

(assert (=> b!108076 (= e!70343 lt!55516)))

(declare-fun lt!55514 () ListLongMap!1549)

(assert (=> b!108076 (= lt!55514 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55513 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55513 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55519 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55519 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55526 () Unit!3307)

(assert (=> b!108076 (= lt!55526 (addStillContains!75 lt!55514 lt!55513 (zeroValue!2478 newMap!16) lt!55519))))

(assert (=> b!108076 (contains!824 (+!137 lt!55514 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16))) lt!55519)))

(declare-fun lt!55517 () Unit!3307)

(assert (=> b!108076 (= lt!55517 lt!55526)))

(declare-fun lt!55524 () ListLongMap!1549)

(assert (=> b!108076 (= lt!55524 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55521 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55521 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55529 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55529 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55523 () Unit!3307)

(assert (=> b!108076 (= lt!55523 (addApplyDifferent!75 lt!55524 lt!55521 (minValue!2478 newMap!16) lt!55529))))

(assert (=> b!108076 (= (apply!99 (+!137 lt!55524 (tuple2!2393 lt!55521 (minValue!2478 newMap!16))) lt!55529) (apply!99 lt!55524 lt!55529))))

(declare-fun lt!55532 () Unit!3307)

(assert (=> b!108076 (= lt!55532 lt!55523)))

(declare-fun lt!55518 () ListLongMap!1549)

(assert (=> b!108076 (= lt!55518 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55515 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55515 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55534 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55534 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55528 () Unit!3307)

(assert (=> b!108076 (= lt!55528 (addApplyDifferent!75 lt!55518 lt!55515 (zeroValue!2478 newMap!16) lt!55534))))

(assert (=> b!108076 (= (apply!99 (+!137 lt!55518 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16))) lt!55534) (apply!99 lt!55518 lt!55534))))

(declare-fun lt!55525 () Unit!3307)

(assert (=> b!108076 (= lt!55525 lt!55528)))

(declare-fun lt!55530 () ListLongMap!1549)

(assert (=> b!108076 (= lt!55530 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55522 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55522 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55520 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55520 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108076 (= lt!55516 (addApplyDifferent!75 lt!55530 lt!55522 (minValue!2478 newMap!16) lt!55520))))

(assert (=> b!108076 (= (apply!99 (+!137 lt!55530 (tuple2!2393 lt!55522 (minValue!2478 newMap!16))) lt!55520) (apply!99 lt!55530 lt!55520))))

(declare-fun b!108077 () Bool)

(assert (=> b!108077 (= e!70341 (+!137 call!11464 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun bm!11463 () Bool)

(assert (=> bm!11463 (= call!11463 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!108078 () Bool)

(declare-fun res!53608 () Bool)

(assert (=> b!108078 (=> (not res!53608) (not e!70333))))

(assert (=> b!108078 (= res!53608 e!70342)))

(declare-fun c!18968 () Bool)

(assert (=> b!108078 (= c!18968 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108079 () Bool)

(assert (=> b!108079 (= e!70336 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108080 () Bool)

(declare-fun c!18966 () Bool)

(assert (=> b!108080 (= c!18966 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70337 () ListLongMap!1549)

(assert (=> b!108080 (= e!70340 e!70337)))

(declare-fun b!108081 () Bool)

(assert (=> b!108081 (= e!70334 (= (apply!99 lt!55533 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!108082 () Bool)

(assert (=> b!108082 (= e!70335 (not call!11460))))

(declare-fun b!108083 () Bool)

(assert (=> b!108083 (= e!70337 call!11466)))

(declare-fun b!108084 () Bool)

(assert (=> b!108084 (= e!70337 call!11462)))

(assert (= (and d!29855 c!18964) b!108077))

(assert (= (and d!29855 (not c!18964)) b!108066))

(assert (= (and b!108066 c!18965) b!108072))

(assert (= (and b!108066 (not c!18965)) b!108080))

(assert (= (and b!108080 c!18966) b!108083))

(assert (= (and b!108080 (not c!18966)) b!108084))

(assert (= (or b!108083 b!108084) bm!11462))

(assert (= (or b!108072 bm!11462) bm!11458))

(assert (= (or b!108072 b!108083) bm!11459))

(assert (= (or b!108077 bm!11458) bm!11463))

(assert (= (or b!108077 bm!11459) bm!11461))

(assert (= (and d!29855 res!53610) b!108079))

(assert (= (and d!29855 c!18967) b!108076))

(assert (= (and d!29855 (not c!18967)) b!108064))

(assert (= (and d!29855 res!53605) b!108069))

(assert (= (and b!108069 res!53607) b!108071))

(assert (= (and b!108069 (not res!53612)) b!108075))

(assert (= (and b!108075 res!53606) b!108065))

(assert (= (and b!108069 res!53611) b!108078))

(assert (= (and b!108078 c!18968) b!108067))

(assert (= (and b!108078 (not c!18968)) b!108068))

(assert (= (and b!108067 res!53604) b!108070))

(assert (= (or b!108067 b!108068) bm!11460))

(assert (= (and b!108078 res!53608) b!108074))

(assert (= (and b!108074 c!18963) b!108073))

(assert (= (and b!108074 (not c!18963)) b!108082))

(assert (= (and b!108073 res!53609) b!108081))

(assert (= (or b!108073 b!108082) bm!11457))

(declare-fun b_lambda!4821 () Bool)

(assert (=> (not b_lambda!4821) (not b!108065)))

(assert (=> b!108065 t!5742))

(declare-fun b_and!6657 () Bool)

(assert (= b_and!6653 (and (=> t!5742 result!3505) b_and!6657)))

(assert (=> b!108065 t!5744))

(declare-fun b_and!6659 () Bool)

(assert (= b_and!6655 (and (=> t!5744 result!3507) b_and!6659)))

(declare-fun m!121267 () Bool)

(assert (=> b!108065 m!121267))

(assert (=> b!108065 m!121113))

(assert (=> b!108065 m!121267))

(assert (=> b!108065 m!121113))

(declare-fun m!121269 () Bool)

(assert (=> b!108065 m!121269))

(assert (=> b!108065 m!120769))

(declare-fun m!121271 () Bool)

(assert (=> b!108065 m!121271))

(assert (=> b!108065 m!120769))

(declare-fun m!121273 () Bool)

(assert (=> b!108081 m!121273))

(declare-fun m!121275 () Bool)

(assert (=> bm!11457 m!121275))

(declare-fun m!121277 () Bool)

(assert (=> bm!11463 m!121277))

(declare-fun m!121279 () Bool)

(assert (=> bm!11460 m!121279))

(assert (=> b!108071 m!120769))

(assert (=> b!108071 m!120769))

(assert (=> b!108071 m!120779))

(assert (=> b!108079 m!120769))

(assert (=> b!108079 m!120769))

(assert (=> b!108079 m!120779))

(declare-fun m!121281 () Bool)

(assert (=> bm!11461 m!121281))

(declare-fun m!121283 () Bool)

(assert (=> b!108077 m!121283))

(assert (=> d!29855 m!120787))

(declare-fun m!121285 () Bool)

(assert (=> b!108070 m!121285))

(assert (=> b!108075 m!120769))

(assert (=> b!108075 m!120769))

(declare-fun m!121287 () Bool)

(assert (=> b!108075 m!121287))

(declare-fun m!121289 () Bool)

(assert (=> b!108076 m!121289))

(declare-fun m!121291 () Bool)

(assert (=> b!108076 m!121291))

(declare-fun m!121293 () Bool)

(assert (=> b!108076 m!121293))

(declare-fun m!121295 () Bool)

(assert (=> b!108076 m!121295))

(declare-fun m!121297 () Bool)

(assert (=> b!108076 m!121297))

(declare-fun m!121299 () Bool)

(assert (=> b!108076 m!121299))

(declare-fun m!121301 () Bool)

(assert (=> b!108076 m!121301))

(declare-fun m!121303 () Bool)

(assert (=> b!108076 m!121303))

(assert (=> b!108076 m!121293))

(assert (=> b!108076 m!121299))

(declare-fun m!121305 () Bool)

(assert (=> b!108076 m!121305))

(assert (=> b!108076 m!121277))

(declare-fun m!121307 () Bool)

(assert (=> b!108076 m!121307))

(declare-fun m!121309 () Bool)

(assert (=> b!108076 m!121309))

(declare-fun m!121311 () Bool)

(assert (=> b!108076 m!121311))

(assert (=> b!108076 m!121301))

(declare-fun m!121313 () Bool)

(assert (=> b!108076 m!121313))

(declare-fun m!121315 () Bool)

(assert (=> b!108076 m!121315))

(assert (=> b!108076 m!120769))

(assert (=> b!108076 m!121311))

(declare-fun m!121317 () Bool)

(assert (=> b!108076 m!121317))

(assert (=> b!107751 d!29855))

(declare-fun d!29857 () Bool)

(declare-fun e!70348 () Bool)

(assert (=> d!29857 e!70348))

(declare-fun res!53615 () Bool)

(assert (=> d!29857 (=> (not res!53615) (not e!70348))))

(assert (=> d!29857 (= res!53615 (and (bvsge (index!3202 lt!55253) #b00000000000000000000000000000000) (bvslt (index!3202 lt!55253) (size!2319 (_keys!4314 newMap!16)))))))

(declare-fun lt!55537 () Unit!3307)

(declare-fun choose!682 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) Int) Unit!3307)

(assert (=> d!29857 (= lt!55537 (choose!682 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3202 lt!55253) (defaultEntry!2605 newMap!16)))))

(assert (=> d!29857 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29857 (= (lemmaValidKeyInArrayIsInListMap!107 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3202 lt!55253) (defaultEntry!2605 newMap!16)) lt!55537)))

(declare-fun b!108087 () Bool)

(assert (=> b!108087 (= e!70348 (contains!824 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))))))

(assert (= (and d!29857 res!53615) b!108087))

(declare-fun m!121319 () Bool)

(assert (=> d!29857 m!121319))

(assert (=> d!29857 m!120787))

(assert (=> b!108087 m!120727))

(assert (=> b!108087 m!120729))

(assert (=> b!108087 m!120727))

(assert (=> b!108087 m!120729))

(assert (=> b!108087 m!120731))

(assert (=> b!107751 d!29857))

(declare-fun d!29859 () Bool)

(declare-fun e!70351 () Bool)

(assert (=> d!29859 e!70351))

(declare-fun res!53618 () Bool)

(assert (=> d!29859 (=> (not res!53618) (not e!70351))))

(assert (=> d!29859 (= res!53618 (and (bvsge (index!3202 lt!55253) #b00000000000000000000000000000000) (bvslt (index!3202 lt!55253) (size!2320 (_values!2588 newMap!16)))))))

(declare-fun lt!55540 () Unit!3307)

(declare-fun choose!683 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) (_ BitVec 64) V!3233 Int) Unit!3307)

(assert (=> d!29859 (= lt!55540 (choose!683 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3202 lt!55253) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 (defaultEntry!2605 newMap!16)))))

(assert (=> d!29859 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29859 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!48 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3202 lt!55253) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 (defaultEntry!2605 newMap!16)) lt!55540)))

(declare-fun b!108090 () Bool)

(assert (=> b!108090 (= e!70351 (= (+!137 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (getCurrentListMap!467 (_keys!4314 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))))

(assert (= (and d!29859 res!53618) b!108090))

(assert (=> d!29859 m!120387))

(declare-fun m!121321 () Bool)

(assert (=> d!29859 m!121321))

(assert (=> d!29859 m!120787))

(assert (=> b!108090 m!120539))

(assert (=> b!108090 m!120539))

(assert (=> b!108090 m!120933))

(assert (=> b!108090 m!120735))

(declare-fun m!121323 () Bool)

(assert (=> b!108090 m!121323))

(assert (=> b!107751 d!29859))

(declare-fun b!108093 () Bool)

(declare-fun e!70353 () Option!161)

(assert (=> b!108093 (= e!70353 (getValueByKey!155 (t!5730 (toList!790 lt!55143)) (_1!1207 lt!54985)))))

(declare-fun b!108092 () Bool)

(declare-fun e!70352 () Option!161)

(assert (=> b!108092 (= e!70352 e!70353)))

(declare-fun c!18970 () Bool)

(assert (=> b!108092 (= c!18970 (and ((_ is Cons!1619) (toList!790 lt!55143)) (not (= (_1!1207 (h!2217 (toList!790 lt!55143))) (_1!1207 lt!54985)))))))

(declare-fun d!29861 () Bool)

(declare-fun c!18969 () Bool)

(assert (=> d!29861 (= c!18969 (and ((_ is Cons!1619) (toList!790 lt!55143)) (= (_1!1207 (h!2217 (toList!790 lt!55143))) (_1!1207 lt!54985))))))

(assert (=> d!29861 (= (getValueByKey!155 (toList!790 lt!55143) (_1!1207 lt!54985)) e!70352)))

(declare-fun b!108094 () Bool)

(assert (=> b!108094 (= e!70353 None!159)))

(declare-fun b!108091 () Bool)

(assert (=> b!108091 (= e!70352 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55143)))))))

(assert (= (and d!29861 c!18969) b!108091))

(assert (= (and d!29861 (not c!18969)) b!108092))

(assert (= (and b!108092 c!18970) b!108093))

(assert (= (and b!108092 (not c!18970)) b!108094))

(declare-fun m!121325 () Bool)

(assert (=> b!108093 m!121325))

(assert (=> b!107605 d!29861))

(declare-fun d!29863 () Bool)

(declare-fun e!70354 () Bool)

(assert (=> d!29863 e!70354))

(declare-fun res!53619 () Bool)

(assert (=> d!29863 (=> res!53619 e!70354)))

(declare-fun lt!55541 () Bool)

(assert (=> d!29863 (= res!53619 (not lt!55541))))

(declare-fun lt!55542 () Bool)

(assert (=> d!29863 (= lt!55541 lt!55542)))

(declare-fun lt!55544 () Unit!3307)

(declare-fun e!70355 () Unit!3307)

(assert (=> d!29863 (= lt!55544 e!70355)))

(declare-fun c!18971 () Bool)

(assert (=> d!29863 (= c!18971 lt!55542)))

(assert (=> d!29863 (= lt!55542 (containsKey!159 (toList!790 lt!55176) (_1!1207 lt!54985)))))

(assert (=> d!29863 (= (contains!824 lt!55176 (_1!1207 lt!54985)) lt!55541)))

(declare-fun b!108095 () Bool)

(declare-fun lt!55543 () Unit!3307)

(assert (=> b!108095 (= e!70355 lt!55543)))

(assert (=> b!108095 (= lt!55543 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55176) (_1!1207 lt!54985)))))

(assert (=> b!108095 (isDefined!109 (getValueByKey!155 (toList!790 lt!55176) (_1!1207 lt!54985)))))

(declare-fun b!108096 () Bool)

(declare-fun Unit!3331 () Unit!3307)

(assert (=> b!108096 (= e!70355 Unit!3331)))

(declare-fun b!108097 () Bool)

(assert (=> b!108097 (= e!70354 (isDefined!109 (getValueByKey!155 (toList!790 lt!55176) (_1!1207 lt!54985))))))

(assert (= (and d!29863 c!18971) b!108095))

(assert (= (and d!29863 (not c!18971)) b!108096))

(assert (= (and d!29863 (not res!53619)) b!108097))

(declare-fun m!121327 () Bool)

(assert (=> d!29863 m!121327))

(declare-fun m!121329 () Bool)

(assert (=> b!108095 m!121329))

(assert (=> b!108095 m!120687))

(assert (=> b!108095 m!120687))

(declare-fun m!121331 () Bool)

(assert (=> b!108095 m!121331))

(assert (=> b!108097 m!120687))

(assert (=> b!108097 m!120687))

(assert (=> b!108097 m!121331))

(assert (=> d!29713 d!29863))

(declare-fun b!108100 () Bool)

(declare-fun e!70357 () Option!161)

(assert (=> b!108100 (= e!70357 (getValueByKey!155 (t!5730 lt!55179) (_1!1207 lt!54985)))))

(declare-fun b!108099 () Bool)

(declare-fun e!70356 () Option!161)

(assert (=> b!108099 (= e!70356 e!70357)))

(declare-fun c!18973 () Bool)

(assert (=> b!108099 (= c!18973 (and ((_ is Cons!1619) lt!55179) (not (= (_1!1207 (h!2217 lt!55179)) (_1!1207 lt!54985)))))))

(declare-fun d!29865 () Bool)

(declare-fun c!18972 () Bool)

(assert (=> d!29865 (= c!18972 (and ((_ is Cons!1619) lt!55179) (= (_1!1207 (h!2217 lt!55179)) (_1!1207 lt!54985))))))

(assert (=> d!29865 (= (getValueByKey!155 lt!55179 (_1!1207 lt!54985)) e!70356)))

(declare-fun b!108101 () Bool)

(assert (=> b!108101 (= e!70357 None!159)))

(declare-fun b!108098 () Bool)

(assert (=> b!108098 (= e!70356 (Some!160 (_2!1207 (h!2217 lt!55179))))))

(assert (= (and d!29865 c!18972) b!108098))

(assert (= (and d!29865 (not c!18972)) b!108099))

(assert (= (and b!108099 c!18973) b!108100))

(assert (= (and b!108099 (not c!18973)) b!108101))

(declare-fun m!121333 () Bool)

(assert (=> b!108100 m!121333))

(assert (=> d!29713 d!29865))

(declare-fun d!29867 () Bool)

(assert (=> d!29867 (= (getValueByKey!155 lt!55179 (_1!1207 lt!54985)) (Some!160 (_2!1207 lt!54985)))))

(declare-fun lt!55545 () Unit!3307)

(assert (=> d!29867 (= lt!55545 (choose!679 lt!55179 (_1!1207 lt!54985) (_2!1207 lt!54985)))))

(declare-fun e!70358 () Bool)

(assert (=> d!29867 e!70358))

(declare-fun res!53620 () Bool)

(assert (=> d!29867 (=> (not res!53620) (not e!70358))))

(assert (=> d!29867 (= res!53620 (isStrictlySorted!305 lt!55179))))

(assert (=> d!29867 (= (lemmaContainsTupThenGetReturnValue!74 lt!55179 (_1!1207 lt!54985) (_2!1207 lt!54985)) lt!55545)))

(declare-fun b!108102 () Bool)

(declare-fun res!53621 () Bool)

(assert (=> b!108102 (=> (not res!53621) (not e!70358))))

(assert (=> b!108102 (= res!53621 (containsKey!159 lt!55179 (_1!1207 lt!54985)))))

(declare-fun b!108103 () Bool)

(assert (=> b!108103 (= e!70358 (contains!826 lt!55179 (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(assert (= (and d!29867 res!53620) b!108102))

(assert (= (and b!108102 res!53621) b!108103))

(assert (=> d!29867 m!120681))

(declare-fun m!121335 () Bool)

(assert (=> d!29867 m!121335))

(declare-fun m!121337 () Bool)

(assert (=> d!29867 m!121337))

(declare-fun m!121339 () Bool)

(assert (=> b!108102 m!121339))

(declare-fun m!121341 () Bool)

(assert (=> b!108103 m!121341))

(assert (=> d!29713 d!29867))

(declare-fun bm!11464 () Bool)

(declare-fun call!11468 () List!1623)

(declare-fun call!11467 () List!1623)

(assert (=> bm!11464 (= call!11468 call!11467)))

(declare-fun b!108104 () Bool)

(declare-fun e!70363 () List!1623)

(assert (=> b!108104 (= e!70363 call!11468)))

(declare-fun b!108106 () Bool)

(declare-fun e!70360 () List!1623)

(declare-fun call!11469 () List!1623)

(assert (=> b!108106 (= e!70360 call!11469)))

(declare-fun b!108107 () Bool)

(declare-fun e!70359 () Bool)

(declare-fun lt!55546 () List!1623)

(assert (=> b!108107 (= e!70359 (contains!826 lt!55546 (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(declare-fun b!108108 () Bool)

(declare-fun e!70361 () List!1623)

(assert (=> b!108108 (= e!70361 (insertStrictlySorted!77 (t!5730 (toList!790 (+!137 lt!54981 lt!54977))) (_1!1207 lt!54985) (_2!1207 lt!54985)))))

(declare-fun b!108109 () Bool)

(declare-fun e!70362 () List!1623)

(assert (=> b!108109 (= e!70362 call!11467)))

(declare-fun bm!11465 () Bool)

(declare-fun c!18974 () Bool)

(assert (=> bm!11465 (= call!11467 ($colon$colon!81 e!70361 (ite c!18974 (h!2217 (toList!790 (+!137 lt!54981 lt!54977))) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985)))))))

(declare-fun c!18976 () Bool)

(assert (=> bm!11465 (= c!18976 c!18974)))

(declare-fun bm!11466 () Bool)

(assert (=> bm!11466 (= call!11469 call!11468)))

(declare-fun b!108110 () Bool)

(declare-fun c!18977 () Bool)

(assert (=> b!108110 (= c!18977 (and ((_ is Cons!1619) (toList!790 (+!137 lt!54981 lt!54977))) (bvsgt (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 lt!54977)))) (_1!1207 lt!54985))))))

(assert (=> b!108110 (= e!70363 e!70360)))

(declare-fun b!108105 () Bool)

(declare-fun res!53623 () Bool)

(assert (=> b!108105 (=> (not res!53623) (not e!70359))))

(assert (=> b!108105 (= res!53623 (containsKey!159 lt!55546 (_1!1207 lt!54985)))))

(declare-fun d!29869 () Bool)

(assert (=> d!29869 e!70359))

(declare-fun res!53622 () Bool)

(assert (=> d!29869 (=> (not res!53622) (not e!70359))))

(assert (=> d!29869 (= res!53622 (isStrictlySorted!305 lt!55546))))

(assert (=> d!29869 (= lt!55546 e!70362)))

(assert (=> d!29869 (= c!18974 (and ((_ is Cons!1619) (toList!790 (+!137 lt!54981 lt!54977))) (bvslt (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 lt!54977)))) (_1!1207 lt!54985))))))

(assert (=> d!29869 (isStrictlySorted!305 (toList!790 (+!137 lt!54981 lt!54977)))))

(assert (=> d!29869 (= (insertStrictlySorted!77 (toList!790 (+!137 lt!54981 lt!54977)) (_1!1207 lt!54985) (_2!1207 lt!54985)) lt!55546)))

(declare-fun b!108111 () Bool)

(assert (=> b!108111 (= e!70360 call!11469)))

(declare-fun c!18975 () Bool)

(declare-fun b!108112 () Bool)

(assert (=> b!108112 (= e!70361 (ite c!18975 (t!5730 (toList!790 (+!137 lt!54981 lt!54977))) (ite c!18977 (Cons!1619 (h!2217 (toList!790 (+!137 lt!54981 lt!54977))) (t!5730 (toList!790 (+!137 lt!54981 lt!54977)))) Nil!1620)))))

(declare-fun b!108113 () Bool)

(assert (=> b!108113 (= e!70362 e!70363)))

(assert (=> b!108113 (= c!18975 (and ((_ is Cons!1619) (toList!790 (+!137 lt!54981 lt!54977))) (= (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 lt!54977)))) (_1!1207 lt!54985))))))

(assert (= (and d!29869 c!18974) b!108109))

(assert (= (and d!29869 (not c!18974)) b!108113))

(assert (= (and b!108113 c!18975) b!108104))

(assert (= (and b!108113 (not c!18975)) b!108110))

(assert (= (and b!108110 c!18977) b!108111))

(assert (= (and b!108110 (not c!18977)) b!108106))

(assert (= (or b!108111 b!108106) bm!11466))

(assert (= (or b!108104 bm!11466) bm!11464))

(assert (= (or b!108109 bm!11464) bm!11465))

(assert (= (and bm!11465 c!18976) b!108108))

(assert (= (and bm!11465 (not c!18976)) b!108112))

(assert (= (and d!29869 res!53622) b!108105))

(assert (= (and b!108105 res!53623) b!108107))

(declare-fun m!121343 () Bool)

(assert (=> b!108107 m!121343))

(declare-fun m!121345 () Bool)

(assert (=> bm!11465 m!121345))

(declare-fun m!121347 () Bool)

(assert (=> b!108105 m!121347))

(declare-fun m!121349 () Bool)

(assert (=> d!29869 m!121349))

(declare-fun m!121351 () Bool)

(assert (=> d!29869 m!121351))

(declare-fun m!121353 () Bool)

(assert (=> b!108108 m!121353))

(assert (=> d!29713 d!29869))

(declare-fun d!29871 () Bool)

(declare-fun lt!55549 () (_ BitVec 32))

(assert (=> d!29871 (and (bvsge lt!55549 #b00000000000000000000000000000000) (bvsle lt!55549 (bvsub (size!2319 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!70368 () (_ BitVec 32))

(assert (=> d!29871 (= lt!55549 e!70368)))

(declare-fun c!18983 () Bool)

(assert (=> d!29871 (= c!18983 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!29871 (and (bvsle #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2319 (_keys!4314 newMap!16)) (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!29871 (= (arrayCountValidKeys!0 (_keys!4314 newMap!16) #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) lt!55549)))

(declare-fun b!108122 () Bool)

(assert (=> b!108122 (= e!70368 #b00000000000000000000000000000000)))

(declare-fun b!108123 () Bool)

(declare-fun e!70369 () (_ BitVec 32))

(declare-fun call!11472 () (_ BitVec 32))

(assert (=> b!108123 (= e!70369 (bvadd #b00000000000000000000000000000001 call!11472))))

(declare-fun b!108124 () Bool)

(assert (=> b!108124 (= e!70368 e!70369)))

(declare-fun c!18982 () Bool)

(assert (=> b!108124 (= c!18982 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11469 () Bool)

(assert (=> bm!11469 (= call!11472 (arrayCountValidKeys!0 (_keys!4314 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108125 () Bool)

(assert (=> b!108125 (= e!70369 call!11472)))

(assert (= (and d!29871 c!18983) b!108122))

(assert (= (and d!29871 (not c!18983)) b!108124))

(assert (= (and b!108124 c!18982) b!108123))

(assert (= (and b!108124 (not c!18982)) b!108125))

(assert (= (or b!108123 b!108125) bm!11469))

(assert (=> b!108124 m!120769))

(assert (=> b!108124 m!120769))

(assert (=> b!108124 m!120779))

(declare-fun m!121355 () Bool)

(assert (=> bm!11469 m!121355))

(assert (=> b!107598 d!29871))

(declare-fun b!108142 () Bool)

(declare-fun e!70380 () Bool)

(declare-fun lt!55555 () SeekEntryResult!263)

(assert (=> b!108142 (= e!70380 ((_ is Undefined!263) lt!55555))))

(declare-fun d!29873 () Bool)

(declare-fun e!70378 () Bool)

(assert (=> d!29873 e!70378))

(declare-fun c!18989 () Bool)

(assert (=> d!29873 (= c!18989 ((_ is MissingZero!263) lt!55555))))

(assert (=> d!29873 (= lt!55555 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(declare-fun lt!55554 () Unit!3307)

(declare-fun choose!684 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) Int) Unit!3307)

(assert (=> d!29873 (= lt!55554 (choose!684 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)))))

(assert (=> d!29873 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29873 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)) lt!55554)))

(declare-fun b!108143 () Bool)

(assert (=> b!108143 (and (bvsge (index!3201 lt!55555) #b00000000000000000000000000000000) (bvslt (index!3201 lt!55555) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun res!53633 () Bool)

(assert (=> b!108143 (= res!53633 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3201 lt!55555)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70381 () Bool)

(assert (=> b!108143 (=> (not res!53633) (not e!70381))))

(declare-fun bm!11474 () Bool)

(declare-fun call!11477 () Bool)

(assert (=> bm!11474 (= call!11477 (inRange!0 (ite c!18989 (index!3201 lt!55555) (index!3204 lt!55555)) (mask!6762 newMap!16)))))

(declare-fun b!108144 () Bool)

(declare-fun res!53634 () Bool)

(declare-fun e!70379 () Bool)

(assert (=> b!108144 (=> (not res!53634) (not e!70379))))

(assert (=> b!108144 (= res!53634 call!11477)))

(assert (=> b!108144 (= e!70380 e!70379)))

(declare-fun b!108145 () Bool)

(assert (=> b!108145 (= e!70378 e!70380)))

(declare-fun c!18988 () Bool)

(assert (=> b!108145 (= c!18988 ((_ is MissingVacant!263) lt!55555))))

(declare-fun b!108146 () Bool)

(declare-fun call!11478 () Bool)

(assert (=> b!108146 (= e!70379 (not call!11478))))

(declare-fun b!108147 () Bool)

(assert (=> b!108147 (= e!70378 e!70381)))

(declare-fun res!53635 () Bool)

(assert (=> b!108147 (= res!53635 call!11477)))

(assert (=> b!108147 (=> (not res!53635) (not e!70381))))

(declare-fun b!108148 () Bool)

(assert (=> b!108148 (= e!70381 (not call!11478))))

(declare-fun b!108149 () Bool)

(declare-fun res!53632 () Bool)

(assert (=> b!108149 (=> (not res!53632) (not e!70379))))

(assert (=> b!108149 (= res!53632 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3204 lt!55555)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108149 (and (bvsge (index!3204 lt!55555) #b00000000000000000000000000000000) (bvslt (index!3204 lt!55555) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun bm!11475 () Bool)

(assert (=> bm!11475 (= call!11478 (arrayContainsKey!0 (_keys!4314 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!29873 c!18989) b!108147))

(assert (= (and d!29873 (not c!18989)) b!108145))

(assert (= (and b!108147 res!53635) b!108143))

(assert (= (and b!108143 res!53633) b!108148))

(assert (= (and b!108145 c!18988) b!108144))

(assert (= (and b!108145 (not c!18988)) b!108142))

(assert (= (and b!108144 res!53634) b!108149))

(assert (= (and b!108149 res!53632) b!108146))

(assert (= (or b!108147 b!108144) bm!11474))

(assert (= (or b!108148 b!108146) bm!11475))

(declare-fun m!121357 () Bool)

(assert (=> b!108149 m!121357))

(assert (=> bm!11475 m!120387))

(assert (=> bm!11475 m!120741))

(declare-fun m!121359 () Bool)

(assert (=> b!108143 m!121359))

(assert (=> d!29873 m!120387))

(assert (=> d!29873 m!120709))

(assert (=> d!29873 m!120387))

(declare-fun m!121361 () Bool)

(assert (=> d!29873 m!121361))

(assert (=> d!29873 m!120787))

(declare-fun m!121363 () Bool)

(assert (=> bm!11474 m!121363))

(assert (=> bm!11404 d!29873))

(declare-fun b!108150 () Bool)

(declare-fun e!70392 () Unit!3307)

(declare-fun Unit!3332 () Unit!3307)

(assert (=> b!108150 (= e!70392 Unit!3332)))

(declare-fun b!108151 () Bool)

(declare-fun e!70393 () Bool)

(declare-fun lt!55576 () ListLongMap!1549)

(assert (=> b!108151 (= e!70393 (= (apply!99 lt!55576 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108151 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 (_values!2588 newMap!16))))))

(assert (=> b!108151 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108152 () Bool)

(declare-fun e!70390 () ListLongMap!1549)

(declare-fun e!70389 () ListLongMap!1549)

(assert (=> b!108152 (= e!70390 e!70389)))

(declare-fun c!18992 () Bool)

(assert (=> b!108152 (= c!18992 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11476 () Bool)

(declare-fun call!11479 () Bool)

(assert (=> bm!11476 (= call!11479 (contains!824 lt!55576 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108153 () Bool)

(declare-fun e!70391 () Bool)

(declare-fun e!70387 () Bool)

(assert (=> b!108153 (= e!70391 e!70387)))

(declare-fun res!53636 () Bool)

(declare-fun call!11484 () Bool)

(assert (=> b!108153 (= res!53636 call!11484)))

(assert (=> b!108153 (=> (not res!53636) (not e!70387))))

(declare-fun d!29875 () Bool)

(declare-fun e!70382 () Bool)

(assert (=> d!29875 e!70382))

(declare-fun res!53637 () Bool)

(assert (=> d!29875 (=> (not res!53637) (not e!70382))))

(assert (=> d!29875 (= res!53637 (or (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))))

(declare-fun lt!55574 () ListLongMap!1549)

(assert (=> d!29875 (= lt!55576 lt!55574)))

(declare-fun lt!55570 () Unit!3307)

(assert (=> d!29875 (= lt!55570 e!70392)))

(declare-fun c!18994 () Bool)

(declare-fun e!70385 () Bool)

(assert (=> d!29875 (= c!18994 e!70385)))

(declare-fun res!53642 () Bool)

(assert (=> d!29875 (=> (not res!53642) (not e!70385))))

(assert (=> d!29875 (= res!53642 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!29875 (= lt!55574 e!70390)))

(declare-fun c!18991 () Bool)

(assert (=> d!29875 (= c!18991 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29875 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29875 (= (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55576)))

(declare-fun b!108154 () Bool)

(assert (=> b!108154 (= e!70391 (not call!11484))))

(declare-fun b!108155 () Bool)

(declare-fun res!53643 () Bool)

(assert (=> b!108155 (=> (not res!53643) (not e!70382))))

(declare-fun e!70394 () Bool)

(assert (=> b!108155 (= res!53643 e!70394)))

(declare-fun res!53644 () Bool)

(assert (=> b!108155 (=> res!53644 e!70394)))

(declare-fun e!70388 () Bool)

(assert (=> b!108155 (= res!53644 (not e!70388))))

(declare-fun res!53639 () Bool)

(assert (=> b!108155 (=> (not res!53639) (not e!70388))))

(assert (=> b!108155 (= res!53639 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108156 () Bool)

(assert (=> b!108156 (= e!70387 (= (apply!99 lt!55576 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!108157 () Bool)

(assert (=> b!108157 (= e!70388 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108158 () Bool)

(declare-fun call!11485 () ListLongMap!1549)

(assert (=> b!108158 (= e!70389 call!11485)))

(declare-fun bm!11477 () Bool)

(declare-fun call!11480 () ListLongMap!1549)

(declare-fun call!11482 () ListLongMap!1549)

(assert (=> bm!11477 (= call!11480 call!11482)))

(declare-fun bm!11478 () Bool)

(declare-fun call!11483 () ListLongMap!1549)

(assert (=> bm!11478 (= call!11485 call!11483)))

(declare-fun bm!11479 () Bool)

(assert (=> bm!11479 (= call!11484 (contains!824 lt!55576 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11480 () Bool)

(declare-fun call!11481 () ListLongMap!1549)

(assert (=> bm!11480 (= call!11483 (+!137 (ite c!18991 call!11482 (ite c!18992 call!11480 call!11481)) (ite (or c!18991 c!18992) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun b!108159 () Bool)

(declare-fun e!70384 () Bool)

(declare-fun e!70383 () Bool)

(assert (=> b!108159 (= e!70384 e!70383)))

(declare-fun res!53641 () Bool)

(assert (=> b!108159 (= res!53641 call!11479)))

(assert (=> b!108159 (=> (not res!53641) (not e!70383))))

(declare-fun bm!11481 () Bool)

(assert (=> bm!11481 (= call!11481 call!11480)))

(declare-fun b!108160 () Bool)

(assert (=> b!108160 (= e!70382 e!70384)))

(declare-fun c!18990 () Bool)

(assert (=> b!108160 (= c!18990 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108161 () Bool)

(assert (=> b!108161 (= e!70394 e!70393)))

(declare-fun res!53638 () Bool)

(assert (=> b!108161 (=> (not res!53638) (not e!70393))))

(assert (=> b!108161 (= res!53638 (contains!824 lt!55576 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108161 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108162 () Bool)

(declare-fun lt!55559 () Unit!3307)

(assert (=> b!108162 (= e!70392 lt!55559)))

(declare-fun lt!55557 () ListLongMap!1549)

(assert (=> b!108162 (= lt!55557 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55556 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55556 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55562 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55562 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55569 () Unit!3307)

(assert (=> b!108162 (= lt!55569 (addStillContains!75 lt!55557 lt!55556 (zeroValue!2478 newMap!16) lt!55562))))

(assert (=> b!108162 (contains!824 (+!137 lt!55557 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16))) lt!55562)))

(declare-fun lt!55560 () Unit!3307)

(assert (=> b!108162 (= lt!55560 lt!55569)))

(declare-fun lt!55567 () ListLongMap!1549)

(assert (=> b!108162 (= lt!55567 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55564 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55564 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55572 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55572 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55566 () Unit!3307)

(assert (=> b!108162 (= lt!55566 (addApplyDifferent!75 lt!55567 lt!55564 (minValue!2478 newMap!16) lt!55572))))

(assert (=> b!108162 (= (apply!99 (+!137 lt!55567 (tuple2!2393 lt!55564 (minValue!2478 newMap!16))) lt!55572) (apply!99 lt!55567 lt!55572))))

(declare-fun lt!55575 () Unit!3307)

(assert (=> b!108162 (= lt!55575 lt!55566)))

(declare-fun lt!55561 () ListLongMap!1549)

(assert (=> b!108162 (= lt!55561 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55558 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55558 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55577 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55577 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55571 () Unit!3307)

(assert (=> b!108162 (= lt!55571 (addApplyDifferent!75 lt!55561 lt!55558 (zeroValue!2478 newMap!16) lt!55577))))

(assert (=> b!108162 (= (apply!99 (+!137 lt!55561 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16))) lt!55577) (apply!99 lt!55561 lt!55577))))

(declare-fun lt!55568 () Unit!3307)

(assert (=> b!108162 (= lt!55568 lt!55571)))

(declare-fun lt!55573 () ListLongMap!1549)

(assert (=> b!108162 (= lt!55573 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55565 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55565 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55563 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55563 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108162 (= lt!55559 (addApplyDifferent!75 lt!55573 lt!55565 (minValue!2478 newMap!16) lt!55563))))

(assert (=> b!108162 (= (apply!99 (+!137 lt!55573 (tuple2!2393 lt!55565 (minValue!2478 newMap!16))) lt!55563) (apply!99 lt!55573 lt!55563))))

(declare-fun b!108163 () Bool)

(assert (=> b!108163 (= e!70390 (+!137 call!11483 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun bm!11482 () Bool)

(assert (=> bm!11482 (= call!11482 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!108164 () Bool)

(declare-fun res!53640 () Bool)

(assert (=> b!108164 (=> (not res!53640) (not e!70382))))

(assert (=> b!108164 (= res!53640 e!70391)))

(declare-fun c!18995 () Bool)

(assert (=> b!108164 (= c!18995 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108165 () Bool)

(assert (=> b!108165 (= e!70385 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108166 () Bool)

(declare-fun c!18993 () Bool)

(assert (=> b!108166 (= c!18993 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70386 () ListLongMap!1549)

(assert (=> b!108166 (= e!70389 e!70386)))

(declare-fun b!108167 () Bool)

(assert (=> b!108167 (= e!70383 (= (apply!99 lt!55576 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!108168 () Bool)

(assert (=> b!108168 (= e!70384 (not call!11479))))

(declare-fun b!108169 () Bool)

(assert (=> b!108169 (= e!70386 call!11485)))

(declare-fun b!108170 () Bool)

(assert (=> b!108170 (= e!70386 call!11481)))

(assert (= (and d!29875 c!18991) b!108163))

(assert (= (and d!29875 (not c!18991)) b!108152))

(assert (= (and b!108152 c!18992) b!108158))

(assert (= (and b!108152 (not c!18992)) b!108166))

(assert (= (and b!108166 c!18993) b!108169))

(assert (= (and b!108166 (not c!18993)) b!108170))

(assert (= (or b!108169 b!108170) bm!11481))

(assert (= (or b!108158 bm!11481) bm!11477))

(assert (= (or b!108158 b!108169) bm!11478))

(assert (= (or b!108163 bm!11477) bm!11482))

(assert (= (or b!108163 bm!11478) bm!11480))

(assert (= (and d!29875 res!53642) b!108165))

(assert (= (and d!29875 c!18994) b!108162))

(assert (= (and d!29875 (not c!18994)) b!108150))

(assert (= (and d!29875 res!53637) b!108155))

(assert (= (and b!108155 res!53639) b!108157))

(assert (= (and b!108155 (not res!53644)) b!108161))

(assert (= (and b!108161 res!53638) b!108151))

(assert (= (and b!108155 res!53643) b!108164))

(assert (= (and b!108164 c!18995) b!108153))

(assert (= (and b!108164 (not c!18995)) b!108154))

(assert (= (and b!108153 res!53636) b!108156))

(assert (= (or b!108153 b!108154) bm!11479))

(assert (= (and b!108164 res!53640) b!108160))

(assert (= (and b!108160 c!18990) b!108159))

(assert (= (and b!108160 (not c!18990)) b!108168))

(assert (= (and b!108159 res!53641) b!108167))

(assert (= (or b!108159 b!108168) bm!11476))

(declare-fun b_lambda!4823 () Bool)

(assert (=> (not b_lambda!4823) (not b!108151)))

(assert (=> b!108151 t!5742))

(declare-fun b_and!6661 () Bool)

(assert (= b_and!6657 (and (=> t!5742 result!3505) b_and!6661)))

(assert (=> b!108151 t!5744))

(declare-fun b_and!6663 () Bool)

(assert (= b_and!6659 (and (=> t!5744 result!3507) b_and!6663)))

(declare-fun m!121365 () Bool)

(assert (=> b!108151 m!121365))

(assert (=> b!108151 m!121113))

(assert (=> b!108151 m!121365))

(assert (=> b!108151 m!121113))

(declare-fun m!121367 () Bool)

(assert (=> b!108151 m!121367))

(assert (=> b!108151 m!120769))

(declare-fun m!121369 () Bool)

(assert (=> b!108151 m!121369))

(assert (=> b!108151 m!120769))

(declare-fun m!121371 () Bool)

(assert (=> b!108167 m!121371))

(declare-fun m!121373 () Bool)

(assert (=> bm!11476 m!121373))

(declare-fun m!121375 () Bool)

(assert (=> bm!11482 m!121375))

(declare-fun m!121377 () Bool)

(assert (=> bm!11479 m!121377))

(assert (=> b!108157 m!120769))

(assert (=> b!108157 m!120769))

(assert (=> b!108157 m!120779))

(assert (=> b!108165 m!120769))

(assert (=> b!108165 m!120769))

(assert (=> b!108165 m!120779))

(declare-fun m!121379 () Bool)

(assert (=> bm!11480 m!121379))

(declare-fun m!121381 () Bool)

(assert (=> b!108163 m!121381))

(assert (=> d!29875 m!120787))

(declare-fun m!121383 () Bool)

(assert (=> b!108156 m!121383))

(assert (=> b!108161 m!120769))

(assert (=> b!108161 m!120769))

(declare-fun m!121385 () Bool)

(assert (=> b!108161 m!121385))

(declare-fun m!121387 () Bool)

(assert (=> b!108162 m!121387))

(declare-fun m!121389 () Bool)

(assert (=> b!108162 m!121389))

(declare-fun m!121391 () Bool)

(assert (=> b!108162 m!121391))

(declare-fun m!121393 () Bool)

(assert (=> b!108162 m!121393))

(declare-fun m!121395 () Bool)

(assert (=> b!108162 m!121395))

(declare-fun m!121397 () Bool)

(assert (=> b!108162 m!121397))

(declare-fun m!121399 () Bool)

(assert (=> b!108162 m!121399))

(declare-fun m!121401 () Bool)

(assert (=> b!108162 m!121401))

(assert (=> b!108162 m!121391))

(assert (=> b!108162 m!121397))

(declare-fun m!121403 () Bool)

(assert (=> b!108162 m!121403))

(assert (=> b!108162 m!121375))

(declare-fun m!121405 () Bool)

(assert (=> b!108162 m!121405))

(declare-fun m!121407 () Bool)

(assert (=> b!108162 m!121407))

(declare-fun m!121409 () Bool)

(assert (=> b!108162 m!121409))

(assert (=> b!108162 m!121399))

(declare-fun m!121411 () Bool)

(assert (=> b!108162 m!121411))

(declare-fun m!121413 () Bool)

(assert (=> b!108162 m!121413))

(assert (=> b!108162 m!120769))

(assert (=> b!108162 m!121409))

(declare-fun m!121415 () Bool)

(assert (=> b!108162 m!121415))

(assert (=> d!29685 d!29875))

(assert (=> b!107545 d!29739))

(declare-fun bm!11483 () Bool)

(declare-fun call!11486 () Bool)

(declare-fun c!18996 () Bool)

(assert (=> bm!11483 (= call!11486 (arrayNoDuplicates!0 (_keys!4314 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18996 (Cons!1618 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) Nil!1619) Nil!1619)))))

(declare-fun b!108171 () Bool)

(declare-fun e!70398 () Bool)

(assert (=> b!108171 (= e!70398 (contains!825 Nil!1619 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!29877 () Bool)

(declare-fun res!53647 () Bool)

(declare-fun e!70395 () Bool)

(assert (=> d!29877 (=> res!53647 e!70395)))

(assert (=> d!29877 (= res!53647 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!29877 (= (arrayNoDuplicates!0 (_keys!4314 newMap!16) #b00000000000000000000000000000000 Nil!1619) e!70395)))

(declare-fun b!108172 () Bool)

(declare-fun e!70397 () Bool)

(assert (=> b!108172 (= e!70397 call!11486)))

(declare-fun b!108173 () Bool)

(declare-fun e!70396 () Bool)

(assert (=> b!108173 (= e!70395 e!70396)))

(declare-fun res!53646 () Bool)

(assert (=> b!108173 (=> (not res!53646) (not e!70396))))

(assert (=> b!108173 (= res!53646 (not e!70398))))

(declare-fun res!53645 () Bool)

(assert (=> b!108173 (=> (not res!53645) (not e!70398))))

(assert (=> b!108173 (= res!53645 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108174 () Bool)

(assert (=> b!108174 (= e!70396 e!70397)))

(assert (=> b!108174 (= c!18996 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108175 () Bool)

(assert (=> b!108175 (= e!70397 call!11486)))

(assert (= (and d!29877 (not res!53647)) b!108173))

(assert (= (and b!108173 res!53645) b!108171))

(assert (= (and b!108173 res!53646) b!108174))

(assert (= (and b!108174 c!18996) b!108172))

(assert (= (and b!108174 (not c!18996)) b!108175))

(assert (= (or b!108172 b!108175) bm!11483))

(assert (=> bm!11483 m!120769))

(declare-fun m!121417 () Bool)

(assert (=> bm!11483 m!121417))

(assert (=> b!108171 m!120769))

(assert (=> b!108171 m!120769))

(declare-fun m!121419 () Bool)

(assert (=> b!108171 m!121419))

(assert (=> b!108173 m!120769))

(assert (=> b!108173 m!120769))

(assert (=> b!108173 m!120779))

(assert (=> b!108174 m!120769))

(assert (=> b!108174 m!120769))

(assert (=> b!108174 m!120779))

(assert (=> b!107600 d!29877))

(assert (=> b!107657 d!29835))

(assert (=> b!107657 d!29837))

(declare-fun b!108178 () Bool)

(declare-fun e!70400 () Option!161)

(assert (=> b!108178 (= e!70400 (getValueByKey!155 (t!5730 (toList!790 lt!55151)) (_1!1207 lt!54977)))))

(declare-fun b!108177 () Bool)

(declare-fun e!70399 () Option!161)

(assert (=> b!108177 (= e!70399 e!70400)))

(declare-fun c!18998 () Bool)

(assert (=> b!108177 (= c!18998 (and ((_ is Cons!1619) (toList!790 lt!55151)) (not (= (_1!1207 (h!2217 (toList!790 lt!55151))) (_1!1207 lt!54977)))))))

(declare-fun d!29879 () Bool)

(declare-fun c!18997 () Bool)

(assert (=> d!29879 (= c!18997 (and ((_ is Cons!1619) (toList!790 lt!55151)) (= (_1!1207 (h!2217 (toList!790 lt!55151))) (_1!1207 lt!54977))))))

(assert (=> d!29879 (= (getValueByKey!155 (toList!790 lt!55151) (_1!1207 lt!54977)) e!70399)))

(declare-fun b!108179 () Bool)

(assert (=> b!108179 (= e!70400 None!159)))

(declare-fun b!108176 () Bool)

(assert (=> b!108176 (= e!70399 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55151)))))))

(assert (= (and d!29879 c!18997) b!108176))

(assert (= (and d!29879 (not c!18997)) b!108177))

(assert (= (and b!108177 c!18998) b!108178))

(assert (= (and b!108177 (not c!18998)) b!108179))

(declare-fun m!121421 () Bool)

(assert (=> b!108178 m!121421))

(assert (=> b!107609 d!29879))

(declare-fun d!29881 () Bool)

(declare-fun e!70401 () Bool)

(assert (=> d!29881 e!70401))

(declare-fun res!53648 () Bool)

(assert (=> d!29881 (=> res!53648 e!70401)))

(declare-fun lt!55578 () Bool)

(assert (=> d!29881 (= res!53648 (not lt!55578))))

(declare-fun lt!55579 () Bool)

(assert (=> d!29881 (= lt!55578 lt!55579)))

(declare-fun lt!55581 () Unit!3307)

(declare-fun e!70402 () Unit!3307)

(assert (=> d!29881 (= lt!55581 e!70402)))

(declare-fun c!18999 () Bool)

(assert (=> d!29881 (= c!18999 lt!55579)))

(assert (=> d!29881 (= lt!55579 (containsKey!159 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29881 (= (contains!824 lt!55124 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55578)))

(declare-fun b!108180 () Bool)

(declare-fun lt!55580 () Unit!3307)

(assert (=> b!108180 (= e!70402 lt!55580)))

(assert (=> b!108180 (= lt!55580 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108180 (isDefined!109 (getValueByKey!155 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108181 () Bool)

(declare-fun Unit!3333 () Unit!3307)

(assert (=> b!108181 (= e!70402 Unit!3333)))

(declare-fun b!108182 () Bool)

(assert (=> b!108182 (= e!70401 (isDefined!109 (getValueByKey!155 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29881 c!18999) b!108180))

(assert (= (and d!29881 (not c!18999)) b!108181))

(assert (= (and d!29881 (not res!53648)) b!108182))

(declare-fun m!121423 () Bool)

(assert (=> d!29881 m!121423))

(declare-fun m!121425 () Bool)

(assert (=> b!108180 m!121425))

(assert (=> b!108180 m!120781))

(assert (=> b!108180 m!120781))

(declare-fun m!121427 () Bool)

(assert (=> b!108180 m!121427))

(assert (=> b!108182 m!120781))

(assert (=> b!108182 m!120781))

(assert (=> b!108182 m!121427))

(assert (=> bm!11342 d!29881))

(declare-fun d!29883 () Bool)

(declare-fun e!70403 () Bool)

(assert (=> d!29883 e!70403))

(declare-fun res!53649 () Bool)

(assert (=> d!29883 (=> res!53649 e!70403)))

(declare-fun lt!55582 () Bool)

(assert (=> d!29883 (= res!53649 (not lt!55582))))

(declare-fun lt!55583 () Bool)

(assert (=> d!29883 (= lt!55582 lt!55583)))

(declare-fun lt!55585 () Unit!3307)

(declare-fun e!70404 () Unit!3307)

(assert (=> d!29883 (= lt!55585 e!70404)))

(declare-fun c!19000 () Bool)

(assert (=> d!29883 (= c!19000 lt!55583)))

(assert (=> d!29883 (= lt!55583 (containsKey!159 (toList!790 lt!55175) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29883 (= (contains!824 lt!55175 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55582)))

(declare-fun b!108183 () Bool)

(declare-fun lt!55584 () Unit!3307)

(assert (=> b!108183 (= e!70404 lt!55584)))

(assert (=> b!108183 (= lt!55584 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55175) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108183 (isDefined!109 (getValueByKey!155 (toList!790 lt!55175) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108184 () Bool)

(declare-fun Unit!3334 () Unit!3307)

(assert (=> b!108184 (= e!70404 Unit!3334)))

(declare-fun b!108185 () Bool)

(assert (=> b!108185 (= e!70403 (isDefined!109 (getValueByKey!155 (toList!790 lt!55175) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29883 c!19000) b!108183))

(assert (= (and d!29883 (not c!19000)) b!108184))

(assert (= (and d!29883 (not res!53649)) b!108185))

(declare-fun m!121429 () Bool)

(assert (=> d!29883 m!121429))

(declare-fun m!121431 () Bool)

(assert (=> b!108183 m!121431))

(declare-fun m!121433 () Bool)

(assert (=> b!108183 m!121433))

(assert (=> b!108183 m!121433))

(declare-fun m!121435 () Bool)

(assert (=> b!108183 m!121435))

(assert (=> b!108185 m!121433))

(assert (=> b!108185 m!121433))

(assert (=> b!108185 m!121435))

(assert (=> b!107644 d!29883))

(assert (=> d!29693 d!29697))

(declare-fun d!29885 () Bool)

(assert (=> d!29885 (not (arrayContainsKey!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!29885 true))

(declare-fun _$68!109 () Unit!3307)

(assert (=> d!29885 (= (choose!68 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619)) _$68!109)))

(declare-fun bs!4430 () Bool)

(assert (= bs!4430 d!29885))

(assert (=> bs!4430 m!120387))

(assert (=> bs!4430 m!120407))

(assert (=> d!29693 d!29885))

(assert (=> b!107643 d!29739))

(declare-fun d!29887 () Bool)

(assert (=> d!29887 (= (+!137 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55272 (zeroValue!2478 newMap!16) lt!54982 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55588 () Unit!3307)

(declare-fun choose!685 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 V!3233 Int) Unit!3307)

(assert (=> d!29887 (= lt!55588 (choose!685 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) lt!55272 (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) lt!54982 (defaultEntry!2605 newMap!16)))))

(assert (=> d!29887 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29887 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!48 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) lt!55272 (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) lt!54982 (defaultEntry!2605 newMap!16)) lt!55588)))

(declare-fun bs!4431 () Bool)

(assert (= bs!4431 d!29887))

(assert (=> bs!4431 m!120787))

(declare-fun m!121437 () Bool)

(assert (=> bs!4431 m!121437))

(assert (=> bs!4431 m!120539))

(declare-fun m!121439 () Bool)

(assert (=> bs!4431 m!121439))

(declare-fun m!121441 () Bool)

(assert (=> bs!4431 m!121441))

(assert (=> bs!4431 m!120539))

(assert (=> b!107742 d!29887))

(declare-fun d!29889 () Bool)

(declare-fun lt!55591 () Bool)

(declare-fun content!112 (List!1622) (InoxSet (_ BitVec 64)))

(assert (=> d!29889 (= lt!55591 (select (content!112 Nil!1619) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun e!70409 () Bool)

(assert (=> d!29889 (= lt!55591 e!70409)))

(declare-fun res!53654 () Bool)

(assert (=> d!29889 (=> (not res!53654) (not e!70409))))

(assert (=> d!29889 (= res!53654 ((_ is Cons!1618) Nil!1619))))

(assert (=> d!29889 (= (contains!825 Nil!1619 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) lt!55591)))

(declare-fun b!108190 () Bool)

(declare-fun e!70410 () Bool)

(assert (=> b!108190 (= e!70409 e!70410)))

(declare-fun res!53655 () Bool)

(assert (=> b!108190 (=> res!53655 e!70410)))

(assert (=> b!108190 (= res!53655 (= (h!2216 Nil!1619) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!108191 () Bool)

(assert (=> b!108191 (= e!70410 (contains!825 (t!5729 Nil!1619) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (= (and d!29889 res!53654) b!108190))

(assert (= (and b!108190 (not res!53655)) b!108191))

(declare-fun m!121443 () Bool)

(assert (=> d!29889 m!121443))

(assert (=> d!29889 m!120387))

(declare-fun m!121445 () Bool)

(assert (=> d!29889 m!121445))

(assert (=> b!108191 m!120387))

(declare-fun m!121447 () Bool)

(assert (=> b!108191 m!121447))

(assert (=> b!107587 d!29889))

(declare-fun b!108194 () Bool)

(declare-fun e!70412 () Option!161)

(assert (=> b!108194 (= e!70412 (getValueByKey!155 (t!5730 (toList!790 lt!55176)) (_1!1207 lt!54985)))))

(declare-fun b!108193 () Bool)

(declare-fun e!70411 () Option!161)

(assert (=> b!108193 (= e!70411 e!70412)))

(declare-fun c!19002 () Bool)

(assert (=> b!108193 (= c!19002 (and ((_ is Cons!1619) (toList!790 lt!55176)) (not (= (_1!1207 (h!2217 (toList!790 lt!55176))) (_1!1207 lt!54985)))))))

(declare-fun d!29891 () Bool)

(declare-fun c!19001 () Bool)

(assert (=> d!29891 (= c!19001 (and ((_ is Cons!1619) (toList!790 lt!55176)) (= (_1!1207 (h!2217 (toList!790 lt!55176))) (_1!1207 lt!54985))))))

(assert (=> d!29891 (= (getValueByKey!155 (toList!790 lt!55176) (_1!1207 lt!54985)) e!70411)))

(declare-fun b!108195 () Bool)

(assert (=> b!108195 (= e!70412 None!159)))

(declare-fun b!108192 () Bool)

(assert (=> b!108192 (= e!70411 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55176)))))))

(assert (= (and d!29891 c!19001) b!108192))

(assert (= (and d!29891 (not c!19001)) b!108193))

(assert (= (and b!108193 c!19002) b!108194))

(assert (= (and b!108193 (not c!19002)) b!108195))

(declare-fun m!121449 () Bool)

(assert (=> b!108194 m!121449))

(assert (=> b!107647 d!29891))

(assert (=> b!107590 d!29801))

(declare-fun d!29893 () Bool)

(declare-fun e!70413 () Bool)

(assert (=> d!29893 e!70413))

(declare-fun res!53656 () Bool)

(assert (=> d!29893 (=> res!53656 e!70413)))

(declare-fun lt!55592 () Bool)

(assert (=> d!29893 (= res!53656 (not lt!55592))))

(declare-fun lt!55593 () Bool)

(assert (=> d!29893 (= lt!55592 lt!55593)))

(declare-fun lt!55595 () Unit!3307)

(declare-fun e!70414 () Unit!3307)

(assert (=> d!29893 (= lt!55595 e!70414)))

(declare-fun c!19003 () Bool)

(assert (=> d!29893 (= c!19003 lt!55593)))

(assert (=> d!29893 (= lt!55593 (containsKey!159 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!29893 (= (contains!824 lt!55124 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!55592)))

(declare-fun b!108196 () Bool)

(declare-fun lt!55594 () Unit!3307)

(assert (=> b!108196 (= e!70414 lt!55594)))

(assert (=> b!108196 (= lt!55594 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!108196 (isDefined!109 (getValueByKey!155 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108197 () Bool)

(declare-fun Unit!3335 () Unit!3307)

(assert (=> b!108197 (= e!70414 Unit!3335)))

(declare-fun b!108198 () Bool)

(assert (=> b!108198 (= e!70413 (isDefined!109 (getValueByKey!155 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!29893 c!19003) b!108196))

(assert (= (and d!29893 (not c!19003)) b!108197))

(assert (= (and d!29893 (not res!53656)) b!108198))

(assert (=> d!29893 m!120545))

(declare-fun m!121451 () Bool)

(assert (=> d!29893 m!121451))

(assert (=> b!108196 m!120545))

(declare-fun m!121453 () Bool)

(assert (=> b!108196 m!121453))

(assert (=> b!108196 m!120545))

(assert (=> b!108196 m!121097))

(assert (=> b!108196 m!121097))

(declare-fun m!121455 () Bool)

(assert (=> b!108196 m!121455))

(assert (=> b!108198 m!120545))

(assert (=> b!108198 m!121097))

(assert (=> b!108198 m!121097))

(assert (=> b!108198 m!121455))

(assert (=> b!107549 d!29893))

(declare-fun d!29895 () Bool)

(declare-fun e!70415 () Bool)

(assert (=> d!29895 e!70415))

(declare-fun res!53657 () Bool)

(assert (=> d!29895 (=> res!53657 e!70415)))

(declare-fun lt!55596 () Bool)

(assert (=> d!29895 (= res!53657 (not lt!55596))))

(declare-fun lt!55597 () Bool)

(assert (=> d!29895 (= lt!55596 lt!55597)))

(declare-fun lt!55599 () Unit!3307)

(declare-fun e!70416 () Unit!3307)

(assert (=> d!29895 (= lt!55599 e!70416)))

(declare-fun c!19004 () Bool)

(assert (=> d!29895 (= c!19004 lt!55597)))

(assert (=> d!29895 (= lt!55597 (containsKey!159 (toList!790 call!11426) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!29895 (= (contains!824 call!11426 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) lt!55596)))

(declare-fun b!108199 () Bool)

(declare-fun lt!55598 () Unit!3307)

(assert (=> b!108199 (= e!70416 lt!55598)))

(assert (=> b!108199 (= lt!55598 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 call!11426) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> b!108199 (isDefined!109 (getValueByKey!155 (toList!790 call!11426) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!108200 () Bool)

(declare-fun Unit!3336 () Unit!3307)

(assert (=> b!108200 (= e!70416 Unit!3336)))

(declare-fun b!108201 () Bool)

(assert (=> b!108201 (= e!70415 (isDefined!109 (getValueByKey!155 (toList!790 call!11426) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (= (and d!29895 c!19004) b!108199))

(assert (= (and d!29895 (not c!19004)) b!108200))

(assert (= (and d!29895 (not res!53657)) b!108201))

(assert (=> d!29895 m!120387))

(declare-fun m!121457 () Bool)

(assert (=> d!29895 m!121457))

(assert (=> b!108199 m!120387))

(declare-fun m!121459 () Bool)

(assert (=> b!108199 m!121459))

(assert (=> b!108199 m!120387))

(declare-fun m!121461 () Bool)

(assert (=> b!108199 m!121461))

(assert (=> b!108199 m!121461))

(declare-fun m!121463 () Bool)

(assert (=> b!108199 m!121463))

(assert (=> b!108201 m!120387))

(assert (=> b!108201 m!121461))

(assert (=> b!108201 m!121461))

(assert (=> b!108201 m!121463))

(assert (=> b!107774 d!29895))

(declare-fun d!29897 () Bool)

(declare-fun e!70417 () Bool)

(assert (=> d!29897 e!70417))

(declare-fun res!53658 () Bool)

(assert (=> d!29897 (=> res!53658 e!70417)))

(declare-fun lt!55600 () Bool)

(assert (=> d!29897 (= res!53658 (not lt!55600))))

(declare-fun lt!55601 () Bool)

(assert (=> d!29897 (= lt!55600 lt!55601)))

(declare-fun lt!55603 () Unit!3307)

(declare-fun e!70418 () Unit!3307)

(assert (=> d!29897 (= lt!55603 e!70418)))

(declare-fun c!19005 () Bool)

(assert (=> d!29897 (= c!19005 lt!55601)))

(assert (=> d!29897 (= lt!55601 (containsKey!159 (toList!790 lt!55147) (_1!1207 lt!54977)))))

(assert (=> d!29897 (= (contains!824 lt!55147 (_1!1207 lt!54977)) lt!55600)))

(declare-fun b!108202 () Bool)

(declare-fun lt!55602 () Unit!3307)

(assert (=> b!108202 (= e!70418 lt!55602)))

(assert (=> b!108202 (= lt!55602 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55147) (_1!1207 lt!54977)))))

(assert (=> b!108202 (isDefined!109 (getValueByKey!155 (toList!790 lt!55147) (_1!1207 lt!54977)))))

(declare-fun b!108203 () Bool)

(declare-fun Unit!3337 () Unit!3307)

(assert (=> b!108203 (= e!70418 Unit!3337)))

(declare-fun b!108204 () Bool)

(assert (=> b!108204 (= e!70417 (isDefined!109 (getValueByKey!155 (toList!790 lt!55147) (_1!1207 lt!54977))))))

(assert (= (and d!29897 c!19005) b!108202))

(assert (= (and d!29897 (not c!19005)) b!108203))

(assert (= (and d!29897 (not res!53658)) b!108204))

(declare-fun m!121465 () Bool)

(assert (=> d!29897 m!121465))

(declare-fun m!121467 () Bool)

(assert (=> b!108202 m!121467))

(assert (=> b!108202 m!120643))

(assert (=> b!108202 m!120643))

(declare-fun m!121469 () Bool)

(assert (=> b!108202 m!121469))

(assert (=> b!108204 m!120643))

(assert (=> b!108204 m!120643))

(assert (=> b!108204 m!121469))

(assert (=> d!29707 d!29897))

(declare-fun b!108207 () Bool)

(declare-fun e!70420 () Option!161)

(assert (=> b!108207 (= e!70420 (getValueByKey!155 (t!5730 lt!55150) (_1!1207 lt!54977)))))

(declare-fun b!108206 () Bool)

(declare-fun e!70419 () Option!161)

(assert (=> b!108206 (= e!70419 e!70420)))

(declare-fun c!19007 () Bool)

(assert (=> b!108206 (= c!19007 (and ((_ is Cons!1619) lt!55150) (not (= (_1!1207 (h!2217 lt!55150)) (_1!1207 lt!54977)))))))

(declare-fun d!29899 () Bool)

(declare-fun c!19006 () Bool)

(assert (=> d!29899 (= c!19006 (and ((_ is Cons!1619) lt!55150) (= (_1!1207 (h!2217 lt!55150)) (_1!1207 lt!54977))))))

(assert (=> d!29899 (= (getValueByKey!155 lt!55150 (_1!1207 lt!54977)) e!70419)))

(declare-fun b!108208 () Bool)

(assert (=> b!108208 (= e!70420 None!159)))

(declare-fun b!108205 () Bool)

(assert (=> b!108205 (= e!70419 (Some!160 (_2!1207 (h!2217 lt!55150))))))

(assert (= (and d!29899 c!19006) b!108205))

(assert (= (and d!29899 (not c!19006)) b!108206))

(assert (= (and b!108206 c!19007) b!108207))

(assert (= (and b!108206 (not c!19007)) b!108208))

(declare-fun m!121471 () Bool)

(assert (=> b!108207 m!121471))

(assert (=> d!29707 d!29899))

(declare-fun d!29901 () Bool)

(assert (=> d!29901 (= (getValueByKey!155 lt!55150 (_1!1207 lt!54977)) (Some!160 (_2!1207 lt!54977)))))

(declare-fun lt!55604 () Unit!3307)

(assert (=> d!29901 (= lt!55604 (choose!679 lt!55150 (_1!1207 lt!54977) (_2!1207 lt!54977)))))

(declare-fun e!70421 () Bool)

(assert (=> d!29901 e!70421))

(declare-fun res!53659 () Bool)

(assert (=> d!29901 (=> (not res!53659) (not e!70421))))

(assert (=> d!29901 (= res!53659 (isStrictlySorted!305 lt!55150))))

(assert (=> d!29901 (= (lemmaContainsTupThenGetReturnValue!74 lt!55150 (_1!1207 lt!54977) (_2!1207 lt!54977)) lt!55604)))

(declare-fun b!108209 () Bool)

(declare-fun res!53660 () Bool)

(assert (=> b!108209 (=> (not res!53660) (not e!70421))))

(assert (=> b!108209 (= res!53660 (containsKey!159 lt!55150 (_1!1207 lt!54977)))))

(declare-fun b!108210 () Bool)

(assert (=> b!108210 (= e!70421 (contains!826 lt!55150 (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(assert (= (and d!29901 res!53659) b!108209))

(assert (= (and b!108209 res!53660) b!108210))

(assert (=> d!29901 m!120637))

(declare-fun m!121473 () Bool)

(assert (=> d!29901 m!121473))

(declare-fun m!121475 () Bool)

(assert (=> d!29901 m!121475))

(declare-fun m!121477 () Bool)

(assert (=> b!108209 m!121477))

(declare-fun m!121479 () Bool)

(assert (=> b!108210 m!121479))

(assert (=> d!29707 d!29901))

(declare-fun bm!11484 () Bool)

(declare-fun call!11488 () List!1623)

(declare-fun call!11487 () List!1623)

(assert (=> bm!11484 (= call!11488 call!11487)))

(declare-fun b!108211 () Bool)

(declare-fun e!70426 () List!1623)

(assert (=> b!108211 (= e!70426 call!11488)))

(declare-fun b!108213 () Bool)

(declare-fun e!70423 () List!1623)

(declare-fun call!11489 () List!1623)

(assert (=> b!108213 (= e!70423 call!11489)))

(declare-fun b!108214 () Bool)

(declare-fun e!70422 () Bool)

(declare-fun lt!55605 () List!1623)

(assert (=> b!108214 (= e!70422 (contains!826 lt!55605 (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(declare-fun b!108215 () Bool)

(declare-fun e!70424 () List!1623)

(assert (=> b!108215 (= e!70424 (insertStrictlySorted!77 (t!5730 (toList!790 lt!54981)) (_1!1207 lt!54977) (_2!1207 lt!54977)))))

(declare-fun b!108216 () Bool)

(declare-fun e!70425 () List!1623)

(assert (=> b!108216 (= e!70425 call!11487)))

(declare-fun bm!11485 () Bool)

(declare-fun c!19008 () Bool)

(assert (=> bm!11485 (= call!11487 ($colon$colon!81 e!70424 (ite c!19008 (h!2217 (toList!790 lt!54981)) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977)))))))

(declare-fun c!19010 () Bool)

(assert (=> bm!11485 (= c!19010 c!19008)))

(declare-fun bm!11486 () Bool)

(assert (=> bm!11486 (= call!11489 call!11488)))

(declare-fun b!108217 () Bool)

(declare-fun c!19011 () Bool)

(assert (=> b!108217 (= c!19011 (and ((_ is Cons!1619) (toList!790 lt!54981)) (bvsgt (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 lt!54977))))))

(assert (=> b!108217 (= e!70426 e!70423)))

(declare-fun b!108212 () Bool)

(declare-fun res!53662 () Bool)

(assert (=> b!108212 (=> (not res!53662) (not e!70422))))

(assert (=> b!108212 (= res!53662 (containsKey!159 lt!55605 (_1!1207 lt!54977)))))

(declare-fun d!29903 () Bool)

(assert (=> d!29903 e!70422))

(declare-fun res!53661 () Bool)

(assert (=> d!29903 (=> (not res!53661) (not e!70422))))

(assert (=> d!29903 (= res!53661 (isStrictlySorted!305 lt!55605))))

(assert (=> d!29903 (= lt!55605 e!70425)))

(assert (=> d!29903 (= c!19008 (and ((_ is Cons!1619) (toList!790 lt!54981)) (bvslt (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 lt!54977))))))

(assert (=> d!29903 (isStrictlySorted!305 (toList!790 lt!54981))))

(assert (=> d!29903 (= (insertStrictlySorted!77 (toList!790 lt!54981) (_1!1207 lt!54977) (_2!1207 lt!54977)) lt!55605)))

(declare-fun b!108218 () Bool)

(assert (=> b!108218 (= e!70423 call!11489)))

(declare-fun b!108219 () Bool)

(declare-fun c!19009 () Bool)

(assert (=> b!108219 (= e!70424 (ite c!19009 (t!5730 (toList!790 lt!54981)) (ite c!19011 (Cons!1619 (h!2217 (toList!790 lt!54981)) (t!5730 (toList!790 lt!54981))) Nil!1620)))))

(declare-fun b!108220 () Bool)

(assert (=> b!108220 (= e!70425 e!70426)))

(assert (=> b!108220 (= c!19009 (and ((_ is Cons!1619) (toList!790 lt!54981)) (= (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 lt!54977))))))

(assert (= (and d!29903 c!19008) b!108216))

(assert (= (and d!29903 (not c!19008)) b!108220))

(assert (= (and b!108220 c!19009) b!108211))

(assert (= (and b!108220 (not c!19009)) b!108217))

(assert (= (and b!108217 c!19011) b!108218))

(assert (= (and b!108217 (not c!19011)) b!108213))

(assert (= (or b!108218 b!108213) bm!11486))

(assert (= (or b!108211 bm!11486) bm!11484))

(assert (= (or b!108216 bm!11484) bm!11485))

(assert (= (and bm!11485 c!19010) b!108215))

(assert (= (and bm!11485 (not c!19010)) b!108219))

(assert (= (and d!29903 res!53661) b!108212))

(assert (= (and b!108212 res!53662) b!108214))

(declare-fun m!121481 () Bool)

(assert (=> b!108214 m!121481))

(declare-fun m!121483 () Bool)

(assert (=> bm!11485 m!121483))

(declare-fun m!121485 () Bool)

(assert (=> b!108212 m!121485))

(declare-fun m!121487 () Bool)

(assert (=> d!29903 m!121487))

(assert (=> d!29903 m!121069))

(declare-fun m!121489 () Bool)

(assert (=> b!108215 m!121489))

(assert (=> d!29707 d!29903))

(declare-fun d!29905 () Bool)

(assert (=> d!29905 (= (get!1343 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) from!355) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107564 d!29905))

(declare-fun b!108221 () Bool)

(declare-fun e!70437 () Unit!3307)

(declare-fun Unit!3338 () Unit!3307)

(assert (=> b!108221 (= e!70437 Unit!3338)))

(declare-fun b!108222 () Bool)

(declare-fun e!70438 () Bool)

(declare-fun lt!55626 () ListLongMap!1549)

(assert (=> b!108222 (= e!70438 (= (apply!99 lt!55626 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108222 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 (_values!2588 newMap!16))))))

(assert (=> b!108222 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108223 () Bool)

(declare-fun e!70435 () ListLongMap!1549)

(declare-fun e!70434 () ListLongMap!1549)

(assert (=> b!108223 (= e!70435 e!70434)))

(declare-fun c!19014 () Bool)

(assert (=> b!108223 (= c!19014 (and (not (= (bvand (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11487 () Bool)

(declare-fun call!11490 () Bool)

(assert (=> bm!11487 (= call!11490 (contains!824 lt!55626 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108224 () Bool)

(declare-fun e!70436 () Bool)

(declare-fun e!70432 () Bool)

(assert (=> b!108224 (= e!70436 e!70432)))

(declare-fun res!53663 () Bool)

(declare-fun call!11495 () Bool)

(assert (=> b!108224 (= res!53663 call!11495)))

(assert (=> b!108224 (=> (not res!53663) (not e!70432))))

(declare-fun d!29907 () Bool)

(declare-fun e!70427 () Bool)

(assert (=> d!29907 e!70427))

(declare-fun res!53664 () Bool)

(assert (=> d!29907 (=> (not res!53664) (not e!70427))))

(assert (=> d!29907 (= res!53664 (or (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))))

(declare-fun lt!55624 () ListLongMap!1549)

(assert (=> d!29907 (= lt!55626 lt!55624)))

(declare-fun lt!55620 () Unit!3307)

(assert (=> d!29907 (= lt!55620 e!70437)))

(declare-fun c!19016 () Bool)

(declare-fun e!70430 () Bool)

(assert (=> d!29907 (= c!19016 e!70430)))

(declare-fun res!53669 () Bool)

(assert (=> d!29907 (=> (not res!53669) (not e!70430))))

(assert (=> d!29907 (= res!53669 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!29907 (= lt!55624 e!70435)))

(declare-fun c!19013 () Bool)

(assert (=> d!29907 (= c!19013 (and (not (= (bvand (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29907 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29907 (= (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55626)))

(declare-fun b!108225 () Bool)

(assert (=> b!108225 (= e!70436 (not call!11495))))

(declare-fun b!108226 () Bool)

(declare-fun res!53670 () Bool)

(assert (=> b!108226 (=> (not res!53670) (not e!70427))))

(declare-fun e!70439 () Bool)

(assert (=> b!108226 (= res!53670 e!70439)))

(declare-fun res!53671 () Bool)

(assert (=> b!108226 (=> res!53671 e!70439)))

(declare-fun e!70433 () Bool)

(assert (=> b!108226 (= res!53671 (not e!70433))))

(declare-fun res!53666 () Bool)

(assert (=> b!108226 (=> (not res!53666) (not e!70433))))

(assert (=> b!108226 (= res!53666 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108227 () Bool)

(assert (=> b!108227 (= e!70432 (= (apply!99 lt!55626 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))))

(declare-fun b!108228 () Bool)

(assert (=> b!108228 (= e!70433 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108229 () Bool)

(declare-fun call!11496 () ListLongMap!1549)

(assert (=> b!108229 (= e!70434 call!11496)))

(declare-fun bm!11488 () Bool)

(declare-fun call!11491 () ListLongMap!1549)

(declare-fun call!11493 () ListLongMap!1549)

(assert (=> bm!11488 (= call!11491 call!11493)))

(declare-fun bm!11489 () Bool)

(declare-fun call!11494 () ListLongMap!1549)

(assert (=> bm!11489 (= call!11496 call!11494)))

(declare-fun bm!11490 () Bool)

(assert (=> bm!11490 (= call!11495 (contains!824 lt!55626 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!11492 () ListLongMap!1549)

(declare-fun bm!11491 () Bool)

(assert (=> bm!11491 (= call!11494 (+!137 (ite c!19013 call!11493 (ite c!19014 call!11491 call!11492)) (ite (or c!19013 c!19014) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(declare-fun b!108230 () Bool)

(declare-fun e!70429 () Bool)

(declare-fun e!70428 () Bool)

(assert (=> b!108230 (= e!70429 e!70428)))

(declare-fun res!53668 () Bool)

(assert (=> b!108230 (= res!53668 call!11490)))

(assert (=> b!108230 (=> (not res!53668) (not e!70428))))

(declare-fun bm!11492 () Bool)

(assert (=> bm!11492 (= call!11492 call!11491)))

(declare-fun b!108231 () Bool)

(assert (=> b!108231 (= e!70427 e!70429)))

(declare-fun c!19012 () Bool)

(assert (=> b!108231 (= c!19012 (not (= (bvand (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108232 () Bool)

(assert (=> b!108232 (= e!70439 e!70438)))

(declare-fun res!53665 () Bool)

(assert (=> b!108232 (=> (not res!53665) (not e!70438))))

(assert (=> b!108232 (= res!53665 (contains!824 lt!55626 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108232 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108233 () Bool)

(declare-fun lt!55609 () Unit!3307)

(assert (=> b!108233 (= e!70437 lt!55609)))

(declare-fun lt!55607 () ListLongMap!1549)

(assert (=> b!108233 (= lt!55607 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55606 () (_ BitVec 64))

(assert (=> b!108233 (= lt!55606 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55612 () (_ BitVec 64))

(assert (=> b!108233 (= lt!55612 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55619 () Unit!3307)

(assert (=> b!108233 (= lt!55619 (addStillContains!75 lt!55607 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) lt!55612))))

(assert (=> b!108233 (contains!824 (+!137 lt!55607 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))) lt!55612)))

(declare-fun lt!55610 () Unit!3307)

(assert (=> b!108233 (= lt!55610 lt!55619)))

(declare-fun lt!55617 () ListLongMap!1549)

(assert (=> b!108233 (= lt!55617 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55614 () (_ BitVec 64))

(assert (=> b!108233 (= lt!55614 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55622 () (_ BitVec 64))

(assert (=> b!108233 (= lt!55622 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55616 () Unit!3307)

(assert (=> b!108233 (= lt!55616 (addApplyDifferent!75 lt!55617 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) lt!55622))))

(assert (=> b!108233 (= (apply!99 (+!137 lt!55617 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) lt!55622) (apply!99 lt!55617 lt!55622))))

(declare-fun lt!55625 () Unit!3307)

(assert (=> b!108233 (= lt!55625 lt!55616)))

(declare-fun lt!55611 () ListLongMap!1549)

(assert (=> b!108233 (= lt!55611 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55608 () (_ BitVec 64))

(assert (=> b!108233 (= lt!55608 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55627 () (_ BitVec 64))

(assert (=> b!108233 (= lt!55627 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55621 () Unit!3307)

(assert (=> b!108233 (= lt!55621 (addApplyDifferent!75 lt!55611 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) lt!55627))))

(assert (=> b!108233 (= (apply!99 (+!137 lt!55611 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))) lt!55627) (apply!99 lt!55611 lt!55627))))

(declare-fun lt!55618 () Unit!3307)

(assert (=> b!108233 (= lt!55618 lt!55621)))

(declare-fun lt!55623 () ListLongMap!1549)

(assert (=> b!108233 (= lt!55623 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55615 () (_ BitVec 64))

(assert (=> b!108233 (= lt!55615 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55613 () (_ BitVec 64))

(assert (=> b!108233 (= lt!55613 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108233 (= lt!55609 (addApplyDifferent!75 lt!55623 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) lt!55613))))

(assert (=> b!108233 (= (apply!99 (+!137 lt!55623 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) lt!55613) (apply!99 lt!55623 lt!55613))))

(declare-fun b!108234 () Bool)

(assert (=> b!108234 (= e!70435 (+!137 call!11494 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))))

(declare-fun bm!11493 () Bool)

(assert (=> bm!11493 (= call!11493 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!108235 () Bool)

(declare-fun res!53667 () Bool)

(assert (=> b!108235 (=> (not res!53667) (not e!70427))))

(assert (=> b!108235 (= res!53667 e!70436)))

(declare-fun c!19017 () Bool)

(assert (=> b!108235 (= c!19017 (not (= (bvand (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108236 () Bool)

(assert (=> b!108236 (= e!70430 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108237 () Bool)

(declare-fun c!19015 () Bool)

(assert (=> b!108237 (= c!19015 (and (not (= (bvand (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70431 () ListLongMap!1549)

(assert (=> b!108237 (= e!70434 e!70431)))

(declare-fun b!108238 () Bool)

(assert (=> b!108238 (= e!70428 (= (apply!99 lt!55626 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))

(declare-fun b!108239 () Bool)

(assert (=> b!108239 (= e!70429 (not call!11490))))

(declare-fun b!108240 () Bool)

(assert (=> b!108240 (= e!70431 call!11496)))

(declare-fun b!108241 () Bool)

(assert (=> b!108241 (= e!70431 call!11492)))

(assert (= (and d!29907 c!19013) b!108234))

(assert (= (and d!29907 (not c!19013)) b!108223))

(assert (= (and b!108223 c!19014) b!108229))

(assert (= (and b!108223 (not c!19014)) b!108237))

(assert (= (and b!108237 c!19015) b!108240))

(assert (= (and b!108237 (not c!19015)) b!108241))

(assert (= (or b!108240 b!108241) bm!11492))

(assert (= (or b!108229 bm!11492) bm!11488))

(assert (= (or b!108229 b!108240) bm!11489))

(assert (= (or b!108234 bm!11488) bm!11493))

(assert (= (or b!108234 bm!11489) bm!11491))

(assert (= (and d!29907 res!53669) b!108236))

(assert (= (and d!29907 c!19016) b!108233))

(assert (= (and d!29907 (not c!19016)) b!108221))

(assert (= (and d!29907 res!53664) b!108226))

(assert (= (and b!108226 res!53666) b!108228))

(assert (= (and b!108226 (not res!53671)) b!108232))

(assert (= (and b!108232 res!53665) b!108222))

(assert (= (and b!108226 res!53670) b!108235))

(assert (= (and b!108235 c!19017) b!108224))

(assert (= (and b!108235 (not c!19017)) b!108225))

(assert (= (and b!108224 res!53663) b!108227))

(assert (= (or b!108224 b!108225) bm!11490))

(assert (= (and b!108235 res!53667) b!108231))

(assert (= (and b!108231 c!19012) b!108230))

(assert (= (and b!108231 (not c!19012)) b!108239))

(assert (= (and b!108230 res!53668) b!108238))

(assert (= (or b!108230 b!108239) bm!11487))

(declare-fun b_lambda!4825 () Bool)

(assert (=> (not b_lambda!4825) (not b!108222)))

(assert (=> b!108222 t!5742))

(declare-fun b_and!6665 () Bool)

(assert (= b_and!6661 (and (=> t!5742 result!3505) b_and!6665)))

(assert (=> b!108222 t!5744))

(declare-fun b_and!6667 () Bool)

(assert (= b_and!6663 (and (=> t!5744 result!3507) b_and!6667)))

(assert (=> b!108222 m!121365))

(assert (=> b!108222 m!121113))

(assert (=> b!108222 m!121365))

(assert (=> b!108222 m!121113))

(assert (=> b!108222 m!121367))

(assert (=> b!108222 m!120769))

(declare-fun m!121491 () Bool)

(assert (=> b!108222 m!121491))

(assert (=> b!108222 m!120769))

(declare-fun m!121493 () Bool)

(assert (=> b!108238 m!121493))

(declare-fun m!121495 () Bool)

(assert (=> bm!11487 m!121495))

(declare-fun m!121497 () Bool)

(assert (=> bm!11493 m!121497))

(declare-fun m!121499 () Bool)

(assert (=> bm!11490 m!121499))

(assert (=> b!108228 m!120769))

(assert (=> b!108228 m!120769))

(assert (=> b!108228 m!120779))

(assert (=> b!108236 m!120769))

(assert (=> b!108236 m!120769))

(assert (=> b!108236 m!120779))

(declare-fun m!121501 () Bool)

(assert (=> bm!11491 m!121501))

(declare-fun m!121503 () Bool)

(assert (=> b!108234 m!121503))

(assert (=> d!29907 m!120787))

(declare-fun m!121505 () Bool)

(assert (=> b!108227 m!121505))

(assert (=> b!108232 m!120769))

(assert (=> b!108232 m!120769))

(declare-fun m!121507 () Bool)

(assert (=> b!108232 m!121507))

(declare-fun m!121509 () Bool)

(assert (=> b!108233 m!121509))

(declare-fun m!121511 () Bool)

(assert (=> b!108233 m!121511))

(declare-fun m!121513 () Bool)

(assert (=> b!108233 m!121513))

(declare-fun m!121515 () Bool)

(assert (=> b!108233 m!121515))

(declare-fun m!121517 () Bool)

(assert (=> b!108233 m!121517))

(declare-fun m!121519 () Bool)

(assert (=> b!108233 m!121519))

(declare-fun m!121521 () Bool)

(assert (=> b!108233 m!121521))

(declare-fun m!121523 () Bool)

(assert (=> b!108233 m!121523))

(assert (=> b!108233 m!121513))

(assert (=> b!108233 m!121519))

(declare-fun m!121525 () Bool)

(assert (=> b!108233 m!121525))

(assert (=> b!108233 m!121497))

(declare-fun m!121527 () Bool)

(assert (=> b!108233 m!121527))

(declare-fun m!121529 () Bool)

(assert (=> b!108233 m!121529))

(declare-fun m!121531 () Bool)

(assert (=> b!108233 m!121531))

(assert (=> b!108233 m!121521))

(declare-fun m!121533 () Bool)

(assert (=> b!108233 m!121533))

(declare-fun m!121535 () Bool)

(assert (=> b!108233 m!121535))

(assert (=> b!108233 m!120769))

(assert (=> b!108233 m!121531))

(declare-fun m!121537 () Bool)

(assert (=> b!108233 m!121537))

(assert (=> bm!11408 d!29907))

(declare-fun d!29909 () Bool)

(declare-fun e!70440 () Bool)

(assert (=> d!29909 e!70440))

(declare-fun res!53673 () Bool)

(assert (=> d!29909 (=> (not res!53673) (not e!70440))))

(declare-fun lt!55628 () ListLongMap!1549)

(assert (=> d!29909 (= res!53673 (contains!824 lt!55628 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!55631 () List!1623)

(assert (=> d!29909 (= lt!55628 (ListLongMap!1550 lt!55631))))

(declare-fun lt!55629 () Unit!3307)

(declare-fun lt!55630 () Unit!3307)

(assert (=> d!29909 (= lt!55629 lt!55630)))

(assert (=> d!29909 (= (getValueByKey!155 lt!55631 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29909 (= lt!55630 (lemmaContainsTupThenGetReturnValue!74 lt!55631 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29909 (= lt!55631 (insertStrictlySorted!77 (toList!790 call!11346) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29909 (= (+!137 call!11346 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55628)))

(declare-fun b!108242 () Bool)

(declare-fun res!53672 () Bool)

(assert (=> b!108242 (=> (not res!53672) (not e!70440))))

(assert (=> b!108242 (= res!53672 (= (getValueByKey!155 (toList!790 lt!55628) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!108243 () Bool)

(assert (=> b!108243 (= e!70440 (contains!826 (toList!790 lt!55628) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!29909 res!53673) b!108242))

(assert (= (and b!108242 res!53672) b!108243))

(declare-fun m!121539 () Bool)

(assert (=> d!29909 m!121539))

(declare-fun m!121541 () Bool)

(assert (=> d!29909 m!121541))

(declare-fun m!121543 () Bool)

(assert (=> d!29909 m!121543))

(declare-fun m!121545 () Bool)

(assert (=> d!29909 m!121545))

(declare-fun m!121547 () Bool)

(assert (=> b!108242 m!121547))

(declare-fun m!121549 () Bool)

(assert (=> b!108243 m!121549))

(assert (=> b!107551 d!29909))

(declare-fun d!29911 () Bool)

(assert (=> d!29911 (= (inRange!0 (ite c!18888 (ite c!18883 (index!3202 lt!55256) (ite c!18894 (index!3201 lt!55266) (index!3204 lt!55266))) (ite c!18884 (index!3202 lt!55255) (ite c!18889 (index!3201 lt!55264) (index!3204 lt!55264)))) (mask!6762 newMap!16)) (and (bvsge (ite c!18888 (ite c!18883 (index!3202 lt!55256) (ite c!18894 (index!3201 lt!55266) (index!3204 lt!55266))) (ite c!18884 (index!3202 lt!55255) (ite c!18889 (index!3201 lt!55264) (index!3204 lt!55264)))) #b00000000000000000000000000000000) (bvslt (ite c!18888 (ite c!18883 (index!3202 lt!55256) (ite c!18894 (index!3201 lt!55266) (index!3204 lt!55266))) (ite c!18884 (index!3202 lt!55255) (ite c!18889 (index!3201 lt!55264) (index!3204 lt!55264)))) (bvadd (mask!6762 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11400 d!29911))

(declare-fun d!29913 () Bool)

(declare-fun e!70441 () Bool)

(assert (=> d!29913 e!70441))

(declare-fun res!53674 () Bool)

(assert (=> d!29913 (=> res!53674 e!70441)))

(declare-fun lt!55632 () Bool)

(assert (=> d!29913 (= res!53674 (not lt!55632))))

(declare-fun lt!55633 () Bool)

(assert (=> d!29913 (= lt!55632 lt!55633)))

(declare-fun lt!55635 () Unit!3307)

(declare-fun e!70442 () Unit!3307)

(assert (=> d!29913 (= lt!55635 e!70442)))

(declare-fun c!19018 () Bool)

(assert (=> d!29913 (= c!19018 lt!55633)))

(assert (=> d!29913 (= lt!55633 (containsKey!159 (toList!790 lt!55175) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29913 (= (contains!824 lt!55175 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55632)))

(declare-fun b!108244 () Bool)

(declare-fun lt!55634 () Unit!3307)

(assert (=> b!108244 (= e!70442 lt!55634)))

(assert (=> b!108244 (= lt!55634 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55175) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108244 (isDefined!109 (getValueByKey!155 (toList!790 lt!55175) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108245 () Bool)

(declare-fun Unit!3339 () Unit!3307)

(assert (=> b!108245 (= e!70442 Unit!3339)))

(declare-fun b!108246 () Bool)

(assert (=> b!108246 (= e!70441 (isDefined!109 (getValueByKey!155 (toList!790 lt!55175) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29913 c!19018) b!108244))

(assert (= (and d!29913 (not c!19018)) b!108245))

(assert (= (and d!29913 (not res!53674)) b!108246))

(declare-fun m!121551 () Bool)

(assert (=> d!29913 m!121551))

(declare-fun m!121553 () Bool)

(assert (=> b!108244 m!121553))

(declare-fun m!121555 () Bool)

(assert (=> b!108244 m!121555))

(assert (=> b!108244 m!121555))

(declare-fun m!121557 () Bool)

(assert (=> b!108244 m!121557))

(assert (=> b!108246 m!121555))

(assert (=> b!108246 m!121555))

(assert (=> b!108246 m!121557))

(assert (=> d!29711 d!29913))

(assert (=> d!29711 d!29717))

(declare-fun d!29915 () Bool)

(declare-fun e!70443 () Bool)

(assert (=> d!29915 e!70443))

(declare-fun res!53675 () Bool)

(assert (=> d!29915 (=> res!53675 e!70443)))

(declare-fun lt!55636 () Bool)

(assert (=> d!29915 (= res!53675 (not lt!55636))))

(declare-fun lt!55637 () Bool)

(assert (=> d!29915 (= lt!55636 lt!55637)))

(declare-fun lt!55639 () Unit!3307)

(declare-fun e!70444 () Unit!3307)

(assert (=> d!29915 (= lt!55639 e!70444)))

(declare-fun c!19019 () Bool)

(assert (=> d!29915 (= c!19019 lt!55637)))

(assert (=> d!29915 (= lt!55637 (containsKey!159 (toList!790 lt!55151) (_1!1207 lt!54977)))))

(assert (=> d!29915 (= (contains!824 lt!55151 (_1!1207 lt!54977)) lt!55636)))

(declare-fun b!108247 () Bool)

(declare-fun lt!55638 () Unit!3307)

(assert (=> b!108247 (= e!70444 lt!55638)))

(assert (=> b!108247 (= lt!55638 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55151) (_1!1207 lt!54977)))))

(assert (=> b!108247 (isDefined!109 (getValueByKey!155 (toList!790 lt!55151) (_1!1207 lt!54977)))))

(declare-fun b!108248 () Bool)

(declare-fun Unit!3340 () Unit!3307)

(assert (=> b!108248 (= e!70444 Unit!3340)))

(declare-fun b!108249 () Bool)

(assert (=> b!108249 (= e!70443 (isDefined!109 (getValueByKey!155 (toList!790 lt!55151) (_1!1207 lt!54977))))))

(assert (= (and d!29915 c!19019) b!108247))

(assert (= (and d!29915 (not c!19019)) b!108248))

(assert (= (and d!29915 (not res!53675)) b!108249))

(declare-fun m!121559 () Bool)

(assert (=> d!29915 m!121559))

(declare-fun m!121561 () Bool)

(assert (=> b!108247 m!121561))

(assert (=> b!108247 m!120655))

(assert (=> b!108247 m!120655))

(declare-fun m!121563 () Bool)

(assert (=> b!108247 m!121563))

(assert (=> b!108249 m!120655))

(assert (=> b!108249 m!120655))

(assert (=> b!108249 m!121563))

(assert (=> d!29709 d!29915))

(declare-fun b!108252 () Bool)

(declare-fun e!70446 () Option!161)

(assert (=> b!108252 (= e!70446 (getValueByKey!155 (t!5730 lt!55154) (_1!1207 lt!54977)))))

(declare-fun b!108251 () Bool)

(declare-fun e!70445 () Option!161)

(assert (=> b!108251 (= e!70445 e!70446)))

(declare-fun c!19021 () Bool)

(assert (=> b!108251 (= c!19021 (and ((_ is Cons!1619) lt!55154) (not (= (_1!1207 (h!2217 lt!55154)) (_1!1207 lt!54977)))))))

(declare-fun d!29917 () Bool)

(declare-fun c!19020 () Bool)

(assert (=> d!29917 (= c!19020 (and ((_ is Cons!1619) lt!55154) (= (_1!1207 (h!2217 lt!55154)) (_1!1207 lt!54977))))))

(assert (=> d!29917 (= (getValueByKey!155 lt!55154 (_1!1207 lt!54977)) e!70445)))

(declare-fun b!108253 () Bool)

(assert (=> b!108253 (= e!70446 None!159)))

(declare-fun b!108250 () Bool)

(assert (=> b!108250 (= e!70445 (Some!160 (_2!1207 (h!2217 lt!55154))))))

(assert (= (and d!29917 c!19020) b!108250))

(assert (= (and d!29917 (not c!19020)) b!108251))

(assert (= (and b!108251 c!19021) b!108252))

(assert (= (and b!108251 (not c!19021)) b!108253))

(declare-fun m!121565 () Bool)

(assert (=> b!108252 m!121565))

(assert (=> d!29709 d!29917))

(declare-fun d!29919 () Bool)

(assert (=> d!29919 (= (getValueByKey!155 lt!55154 (_1!1207 lt!54977)) (Some!160 (_2!1207 lt!54977)))))

(declare-fun lt!55640 () Unit!3307)

(assert (=> d!29919 (= lt!55640 (choose!679 lt!55154 (_1!1207 lt!54977) (_2!1207 lt!54977)))))

(declare-fun e!70447 () Bool)

(assert (=> d!29919 e!70447))

(declare-fun res!53676 () Bool)

(assert (=> d!29919 (=> (not res!53676) (not e!70447))))

(assert (=> d!29919 (= res!53676 (isStrictlySorted!305 lt!55154))))

(assert (=> d!29919 (= (lemmaContainsTupThenGetReturnValue!74 lt!55154 (_1!1207 lt!54977) (_2!1207 lt!54977)) lt!55640)))

(declare-fun b!108254 () Bool)

(declare-fun res!53677 () Bool)

(assert (=> b!108254 (=> (not res!53677) (not e!70447))))

(assert (=> b!108254 (= res!53677 (containsKey!159 lt!55154 (_1!1207 lt!54977)))))

(declare-fun b!108255 () Bool)

(assert (=> b!108255 (= e!70447 (contains!826 lt!55154 (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(assert (= (and d!29919 res!53676) b!108254))

(assert (= (and b!108254 res!53677) b!108255))

(assert (=> d!29919 m!120649))

(declare-fun m!121567 () Bool)

(assert (=> d!29919 m!121567))

(declare-fun m!121569 () Bool)

(assert (=> d!29919 m!121569))

(declare-fun m!121571 () Bool)

(assert (=> b!108254 m!121571))

(declare-fun m!121573 () Bool)

(assert (=> b!108255 m!121573))

(assert (=> d!29709 d!29919))

(declare-fun bm!11494 () Bool)

(declare-fun call!11498 () List!1623)

(declare-fun call!11497 () List!1623)

(assert (=> bm!11494 (= call!11498 call!11497)))

(declare-fun b!108256 () Bool)

(declare-fun e!70452 () List!1623)

(assert (=> b!108256 (= e!70452 call!11498)))

(declare-fun b!108258 () Bool)

(declare-fun e!70449 () List!1623)

(declare-fun call!11499 () List!1623)

(assert (=> b!108258 (= e!70449 call!11499)))

(declare-fun b!108259 () Bool)

(declare-fun e!70448 () Bool)

(declare-fun lt!55641 () List!1623)

(assert (=> b!108259 (= e!70448 (contains!826 lt!55641 (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(declare-fun b!108260 () Bool)

(declare-fun e!70450 () List!1623)

(assert (=> b!108260 (= e!70450 (insertStrictlySorted!77 (t!5730 (toList!790 (+!137 lt!54981 lt!54985))) (_1!1207 lt!54977) (_2!1207 lt!54977)))))

(declare-fun b!108261 () Bool)

(declare-fun e!70451 () List!1623)

(assert (=> b!108261 (= e!70451 call!11497)))

(declare-fun c!19022 () Bool)

(declare-fun bm!11495 () Bool)

(assert (=> bm!11495 (= call!11497 ($colon$colon!81 e!70450 (ite c!19022 (h!2217 (toList!790 (+!137 lt!54981 lt!54985))) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977)))))))

(declare-fun c!19024 () Bool)

(assert (=> bm!11495 (= c!19024 c!19022)))

(declare-fun bm!11496 () Bool)

(assert (=> bm!11496 (= call!11499 call!11498)))

(declare-fun b!108262 () Bool)

(declare-fun c!19025 () Bool)

(assert (=> b!108262 (= c!19025 (and ((_ is Cons!1619) (toList!790 (+!137 lt!54981 lt!54985))) (bvsgt (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 lt!54985)))) (_1!1207 lt!54977))))))

(assert (=> b!108262 (= e!70452 e!70449)))

(declare-fun b!108257 () Bool)

(declare-fun res!53679 () Bool)

(assert (=> b!108257 (=> (not res!53679) (not e!70448))))

(assert (=> b!108257 (= res!53679 (containsKey!159 lt!55641 (_1!1207 lt!54977)))))

(declare-fun d!29921 () Bool)

(assert (=> d!29921 e!70448))

(declare-fun res!53678 () Bool)

(assert (=> d!29921 (=> (not res!53678) (not e!70448))))

(assert (=> d!29921 (= res!53678 (isStrictlySorted!305 lt!55641))))

(assert (=> d!29921 (= lt!55641 e!70451)))

(assert (=> d!29921 (= c!19022 (and ((_ is Cons!1619) (toList!790 (+!137 lt!54981 lt!54985))) (bvslt (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 lt!54985)))) (_1!1207 lt!54977))))))

(assert (=> d!29921 (isStrictlySorted!305 (toList!790 (+!137 lt!54981 lt!54985)))))

(assert (=> d!29921 (= (insertStrictlySorted!77 (toList!790 (+!137 lt!54981 lt!54985)) (_1!1207 lt!54977) (_2!1207 lt!54977)) lt!55641)))

(declare-fun b!108263 () Bool)

(assert (=> b!108263 (= e!70449 call!11499)))

(declare-fun c!19023 () Bool)

(declare-fun b!108264 () Bool)

(assert (=> b!108264 (= e!70450 (ite c!19023 (t!5730 (toList!790 (+!137 lt!54981 lt!54985))) (ite c!19025 (Cons!1619 (h!2217 (toList!790 (+!137 lt!54981 lt!54985))) (t!5730 (toList!790 (+!137 lt!54981 lt!54985)))) Nil!1620)))))

(declare-fun b!108265 () Bool)

(assert (=> b!108265 (= e!70451 e!70452)))

(assert (=> b!108265 (= c!19023 (and ((_ is Cons!1619) (toList!790 (+!137 lt!54981 lt!54985))) (= (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 lt!54985)))) (_1!1207 lt!54977))))))

(assert (= (and d!29921 c!19022) b!108261))

(assert (= (and d!29921 (not c!19022)) b!108265))

(assert (= (and b!108265 c!19023) b!108256))

(assert (= (and b!108265 (not c!19023)) b!108262))

(assert (= (and b!108262 c!19025) b!108263))

(assert (= (and b!108262 (not c!19025)) b!108258))

(assert (= (or b!108263 b!108258) bm!11496))

(assert (= (or b!108256 bm!11496) bm!11494))

(assert (= (or b!108261 bm!11494) bm!11495))

(assert (= (and bm!11495 c!19024) b!108260))

(assert (= (and bm!11495 (not c!19024)) b!108264))

(assert (= (and d!29921 res!53678) b!108257))

(assert (= (and b!108257 res!53679) b!108259))

(declare-fun m!121575 () Bool)

(assert (=> b!108259 m!121575))

(declare-fun m!121577 () Bool)

(assert (=> bm!11495 m!121577))

(declare-fun m!121579 () Bool)

(assert (=> b!108257 m!121579))

(declare-fun m!121581 () Bool)

(assert (=> d!29921 m!121581))

(declare-fun m!121583 () Bool)

(assert (=> d!29921 m!121583))

(declare-fun m!121585 () Bool)

(assert (=> b!108260 m!121585))

(assert (=> d!29709 d!29921))

(declare-fun d!29923 () Bool)

(declare-fun res!53680 () Bool)

(declare-fun e!70453 () Bool)

(assert (=> d!29923 (=> (not res!53680) (not e!70453))))

(assert (=> d!29923 (= res!53680 (simpleValid!75 (v!2904 (underlying!360 thiss!992))))))

(assert (=> d!29923 (= (valid!428 (v!2904 (underlying!360 thiss!992))) e!70453)))

(declare-fun b!108266 () Bool)

(declare-fun res!53681 () Bool)

(assert (=> b!108266 (=> (not res!53681) (not e!70453))))

(assert (=> b!108266 (= res!53681 (= (arrayCountValidKeys!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000 (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))) (_size!504 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!108267 () Bool)

(declare-fun res!53682 () Bool)

(assert (=> b!108267 (=> (not res!53682) (not e!70453))))

(assert (=> b!108267 (= res!53682 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!108268 () Bool)

(assert (=> b!108268 (= e!70453 (arrayNoDuplicates!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000 Nil!1619))))

(assert (= (and d!29923 res!53680) b!108266))

(assert (= (and b!108266 res!53681) b!108267))

(assert (= (and b!108267 res!53682) b!108268))

(declare-fun m!121587 () Bool)

(assert (=> d!29923 m!121587))

(declare-fun m!121589 () Bool)

(assert (=> b!108266 m!121589))

(declare-fun m!121591 () Bool)

(assert (=> b!108267 m!121591))

(declare-fun m!121593 () Bool)

(assert (=> b!108268 m!121593))

(assert (=> d!29691 d!29923))

(declare-fun d!29925 () Bool)

(assert (=> d!29925 (not (contains!824 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)) lt!55170))))

(declare-fun lt!55644 () Unit!3307)

(declare-fun choose!686 (ListLongMap!1549 (_ BitVec 64) V!3233 (_ BitVec 64)) Unit!3307)

(assert (=> d!29925 (= lt!55644 (choose!686 lt!55169 lt!55172 lt!55171 lt!55170))))

(declare-fun e!70456 () Bool)

(assert (=> d!29925 e!70456))

(declare-fun res!53685 () Bool)

(assert (=> d!29925 (=> (not res!53685) (not e!70456))))

(assert (=> d!29925 (= res!53685 (not (contains!824 lt!55169 lt!55170)))))

(assert (=> d!29925 (= (addStillNotContains!48 lt!55169 lt!55172 lt!55171 lt!55170) lt!55644)))

(declare-fun b!108272 () Bool)

(assert (=> b!108272 (= e!70456 (not (= lt!55172 lt!55170)))))

(assert (= (and d!29925 res!53685) b!108272))

(assert (=> d!29925 m!120669))

(assert (=> d!29925 m!120669))

(assert (=> d!29925 m!120671))

(declare-fun m!121595 () Bool)

(assert (=> d!29925 m!121595))

(declare-fun m!121597 () Bool)

(assert (=> d!29925 m!121597))

(assert (=> b!107635 d!29925))

(declare-fun d!29927 () Bool)

(declare-fun e!70457 () Bool)

(assert (=> d!29927 e!70457))

(declare-fun res!53687 () Bool)

(assert (=> d!29927 (=> (not res!53687) (not e!70457))))

(declare-fun lt!55645 () ListLongMap!1549)

(assert (=> d!29927 (= res!53687 (contains!824 lt!55645 (_1!1207 (tuple2!2393 lt!55172 lt!55171))))))

(declare-fun lt!55648 () List!1623)

(assert (=> d!29927 (= lt!55645 (ListLongMap!1550 lt!55648))))

(declare-fun lt!55646 () Unit!3307)

(declare-fun lt!55647 () Unit!3307)

(assert (=> d!29927 (= lt!55646 lt!55647)))

(assert (=> d!29927 (= (getValueByKey!155 lt!55648 (_1!1207 (tuple2!2393 lt!55172 lt!55171))) (Some!160 (_2!1207 (tuple2!2393 lt!55172 lt!55171))))))

(assert (=> d!29927 (= lt!55647 (lemmaContainsTupThenGetReturnValue!74 lt!55648 (_1!1207 (tuple2!2393 lt!55172 lt!55171)) (_2!1207 (tuple2!2393 lt!55172 lt!55171))))))

(assert (=> d!29927 (= lt!55648 (insertStrictlySorted!77 (toList!790 lt!55169) (_1!1207 (tuple2!2393 lt!55172 lt!55171)) (_2!1207 (tuple2!2393 lt!55172 lt!55171))))))

(assert (=> d!29927 (= (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)) lt!55645)))

(declare-fun b!108273 () Bool)

(declare-fun res!53686 () Bool)

(assert (=> b!108273 (=> (not res!53686) (not e!70457))))

(assert (=> b!108273 (= res!53686 (= (getValueByKey!155 (toList!790 lt!55645) (_1!1207 (tuple2!2393 lt!55172 lt!55171))) (Some!160 (_2!1207 (tuple2!2393 lt!55172 lt!55171)))))))

(declare-fun b!108274 () Bool)

(assert (=> b!108274 (= e!70457 (contains!826 (toList!790 lt!55645) (tuple2!2393 lt!55172 lt!55171)))))

(assert (= (and d!29927 res!53687) b!108273))

(assert (= (and b!108273 res!53686) b!108274))

(declare-fun m!121599 () Bool)

(assert (=> d!29927 m!121599))

(declare-fun m!121601 () Bool)

(assert (=> d!29927 m!121601))

(declare-fun m!121603 () Bool)

(assert (=> d!29927 m!121603))

(declare-fun m!121605 () Bool)

(assert (=> d!29927 m!121605))

(declare-fun m!121607 () Bool)

(assert (=> b!108273 m!121607))

(declare-fun m!121609 () Bool)

(assert (=> b!108274 m!121609))

(assert (=> b!107635 d!29927))

(declare-fun d!29929 () Bool)

(declare-fun e!70458 () Bool)

(assert (=> d!29929 e!70458))

(declare-fun res!53688 () Bool)

(assert (=> d!29929 (=> res!53688 e!70458)))

(declare-fun lt!55649 () Bool)

(assert (=> d!29929 (= res!53688 (not lt!55649))))

(declare-fun lt!55650 () Bool)

(assert (=> d!29929 (= lt!55649 lt!55650)))

(declare-fun lt!55652 () Unit!3307)

(declare-fun e!70459 () Unit!3307)

(assert (=> d!29929 (= lt!55652 e!70459)))

(declare-fun c!19026 () Bool)

(assert (=> d!29929 (= c!19026 lt!55650)))

(assert (=> d!29929 (= lt!55650 (containsKey!159 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))) lt!55170))))

(assert (=> d!29929 (= (contains!824 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)) lt!55170) lt!55649)))

(declare-fun b!108275 () Bool)

(declare-fun lt!55651 () Unit!3307)

(assert (=> b!108275 (= e!70459 lt!55651)))

(assert (=> b!108275 (= lt!55651 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))) lt!55170))))

(assert (=> b!108275 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))) lt!55170))))

(declare-fun b!108276 () Bool)

(declare-fun Unit!3341 () Unit!3307)

(assert (=> b!108276 (= e!70459 Unit!3341)))

(declare-fun b!108277 () Bool)

(assert (=> b!108277 (= e!70458 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))) lt!55170)))))

(assert (= (and d!29929 c!19026) b!108275))

(assert (= (and d!29929 (not c!19026)) b!108276))

(assert (= (and d!29929 (not res!53688)) b!108277))

(declare-fun m!121611 () Bool)

(assert (=> d!29929 m!121611))

(declare-fun m!121613 () Bool)

(assert (=> b!108275 m!121613))

(declare-fun m!121615 () Bool)

(assert (=> b!108275 m!121615))

(assert (=> b!108275 m!121615))

(declare-fun m!121617 () Bool)

(assert (=> b!108275 m!121617))

(assert (=> b!108277 m!121615))

(assert (=> b!108277 m!121615))

(assert (=> b!108277 m!121617))

(assert (=> b!107635 d!29929))

(assert (=> b!107635 d!29815))

(declare-fun d!29931 () Bool)

(declare-fun e!70460 () Bool)

(assert (=> d!29931 e!70460))

(declare-fun res!53690 () Bool)

(assert (=> d!29931 (=> (not res!53690) (not e!70460))))

(declare-fun lt!55653 () ListLongMap!1549)

(assert (=> d!29931 (= res!53690 (contains!824 lt!55653 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!55656 () List!1623)

(assert (=> d!29931 (= lt!55653 (ListLongMap!1550 lt!55656))))

(declare-fun lt!55654 () Unit!3307)

(declare-fun lt!55655 () Unit!3307)

(assert (=> d!29931 (= lt!55654 lt!55655)))

(assert (=> d!29931 (= (getValueByKey!155 lt!55656 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29931 (= lt!55655 (lemmaContainsTupThenGetReturnValue!74 lt!55656 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29931 (= lt!55656 (insertStrictlySorted!77 (toList!790 call!11354) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29931 (= (+!137 call!11354 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!55653)))

(declare-fun b!108278 () Bool)

(declare-fun res!53689 () Bool)

(assert (=> b!108278 (=> (not res!53689) (not e!70460))))

(assert (=> b!108278 (= res!53689 (= (getValueByKey!155 (toList!790 lt!55653) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!108279 () Bool)

(assert (=> b!108279 (= e!70460 (contains!826 (toList!790 lt!55653) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29931 res!53690) b!108278))

(assert (= (and b!108278 res!53689) b!108279))

(declare-fun m!121619 () Bool)

(assert (=> d!29931 m!121619))

(declare-fun m!121621 () Bool)

(assert (=> d!29931 m!121621))

(declare-fun m!121623 () Bool)

(assert (=> d!29931 m!121623))

(declare-fun m!121625 () Bool)

(assert (=> d!29931 m!121625))

(declare-fun m!121627 () Bool)

(assert (=> b!108278 m!121627))

(declare-fun m!121629 () Bool)

(assert (=> b!108279 m!121629))

(assert (=> b!107635 d!29931))

(assert (=> b!107750 d!29851))

(declare-fun condMapEmpty!3985 () Bool)

(declare-fun mapDefault!3985 () ValueCell!1001)

(assert (=> mapNonEmpty!3984 (= condMapEmpty!3985 (= mapRest!3984 ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3985)))))

(declare-fun e!70462 () Bool)

(declare-fun mapRes!3985 () Bool)

(assert (=> mapNonEmpty!3984 (= tp!9996 (and e!70462 mapRes!3985))))

(declare-fun mapIsEmpty!3985 () Bool)

(assert (=> mapIsEmpty!3985 mapRes!3985))

(declare-fun b!108280 () Bool)

(declare-fun e!70461 () Bool)

(assert (=> b!108280 (= e!70461 tp_is_empty!2689)))

(declare-fun b!108281 () Bool)

(assert (=> b!108281 (= e!70462 tp_is_empty!2689)))

(declare-fun mapNonEmpty!3985 () Bool)

(declare-fun tp!9997 () Bool)

(assert (=> mapNonEmpty!3985 (= mapRes!3985 (and tp!9997 e!70461))))

(declare-fun mapRest!3985 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapValue!3985 () ValueCell!1001)

(declare-fun mapKey!3985 () (_ BitVec 32))

(assert (=> mapNonEmpty!3985 (= mapRest!3984 (store mapRest!3985 mapKey!3985 mapValue!3985))))

(assert (= (and mapNonEmpty!3984 condMapEmpty!3985) mapIsEmpty!3985))

(assert (= (and mapNonEmpty!3984 (not condMapEmpty!3985)) mapNonEmpty!3985))

(assert (= (and mapNonEmpty!3985 ((_ is ValueCellFull!1001) mapValue!3985)) b!108280))

(assert (= (and mapNonEmpty!3984 ((_ is ValueCellFull!1001) mapDefault!3985)) b!108281))

(declare-fun m!121631 () Bool)

(assert (=> mapNonEmpty!3985 m!121631))

(declare-fun condMapEmpty!3986 () Bool)

(declare-fun mapDefault!3986 () ValueCell!1001)

(assert (=> mapNonEmpty!3983 (= condMapEmpty!3986 (= mapRest!3983 ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3986)))))

(declare-fun e!70464 () Bool)

(declare-fun mapRes!3986 () Bool)

(assert (=> mapNonEmpty!3983 (= tp!9995 (and e!70464 mapRes!3986))))

(declare-fun mapIsEmpty!3986 () Bool)

(assert (=> mapIsEmpty!3986 mapRes!3986))

(declare-fun b!108282 () Bool)

(declare-fun e!70463 () Bool)

(assert (=> b!108282 (= e!70463 tp_is_empty!2689)))

(declare-fun b!108283 () Bool)

(assert (=> b!108283 (= e!70464 tp_is_empty!2689)))

(declare-fun mapNonEmpty!3986 () Bool)

(declare-fun tp!9998 () Bool)

(assert (=> mapNonEmpty!3986 (= mapRes!3986 (and tp!9998 e!70463))))

(declare-fun mapValue!3986 () ValueCell!1001)

(declare-fun mapKey!3986 () (_ BitVec 32))

(declare-fun mapRest!3986 () (Array (_ BitVec 32) ValueCell!1001))

(assert (=> mapNonEmpty!3986 (= mapRest!3983 (store mapRest!3986 mapKey!3986 mapValue!3986))))

(assert (= (and mapNonEmpty!3983 condMapEmpty!3986) mapIsEmpty!3986))

(assert (= (and mapNonEmpty!3983 (not condMapEmpty!3986)) mapNonEmpty!3986))

(assert (= (and mapNonEmpty!3986 ((_ is ValueCellFull!1001) mapValue!3986)) b!108282))

(assert (= (and mapNonEmpty!3983 ((_ is ValueCellFull!1001) mapDefault!3986)) b!108283))

(declare-fun m!121633 () Bool)

(assert (=> mapNonEmpty!3986 m!121633))

(declare-fun b_lambda!4827 () Bool)

(assert (= b_lambda!4819 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4827)))

(declare-fun b_lambda!4829 () Bool)

(assert (= b_lambda!4815 (or (and b!107369 b_free!2545) (and b!107358 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))))) b_lambda!4829)))

(declare-fun b_lambda!4831 () Bool)

(assert (= b_lambda!4821 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4831)))

(declare-fun b_lambda!4833 () Bool)

(assert (= b_lambda!4817 (or (and b!107369 b_free!2545) (and b!107358 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))))) b_lambda!4833)))

(declare-fun b_lambda!4835 () Bool)

(assert (= b_lambda!4825 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4835)))

(declare-fun b_lambda!4837 () Bool)

(assert (= b_lambda!4823 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4837)))

(check-sat (not b!108279) (not b!108260) (not b!108026) (not b!108215) (not b!107905) (not b!107908) (not b!107909) (not b!107922) (not d!29843) (not bm!11493) (not d!29819) (not b!108023) (not b!108070) (not b_lambda!4835) (not b!108278) (not b!107971) (not b!107901) (not b!107824) (not d!29743) (not d!29821) (not d!29929) (not b!107984) (not d!29817) (not b!108267) (not b!108151) (not d!29729) (not b!108202) (not d!29769) (not b!107853) (not b!108257) (not d!29765) (not b!108273) (not d!29931) (not b!107942) (not bm!11457) (not d!29775) (not b!107840) (not b!108061) (not b!107926) (not d!29883) (not d!29791) (not bm!11448) (not d!29829) (not d!29777) (not b!107809) (not bm!11474) (not d!29797) (not b!108191) (not bm!11490) (not b!107843) (not b!108100) (not b!107996) (not bm!11460) (not b!108002) (not d!29889) (not b!108087) (not b!108060) (not mapNonEmpty!3986) (not b!108174) (not b!107894) (not d!29753) (not b!108107) (not b!108010) (not b!108063) (not d!29863) (not b!108234) (not d!29919) (not b!108014) (not b!107973) (not b!107912) (not b!108247) (not b!108108) (not d!29785) (not b!108042) (not b!108183) (not b!107798) (not b!108124) (not b!108243) (not b!108095) (not b!108277) (not b!107847) (not d!29783) (not d!29833) (not bm!11426) (not b!108076) (not b!108097) (not b!107990) (not bm!11483) (not d!29895) (not b!107831) (not d!29913) (not b!108236) (not b!108038) (not b!107914) (not b_lambda!4809) (not b!108161) (not b!108198) (not bm!11476) (not b!108001) (not d!29823) (not b!107924) (not b!108252) (not b!107826) (not b!107913) (not d!29781) (not d!29903) (not bm!11469) (not b!107810) (not b_lambda!4833) (not bm!11482) (not bm!11465) (not b!107837) (not d!29811) (not bm!11475) (not d!29735) (not b!108041) (not b!107986) (not b!108199) (not b!107929) (not bm!11427) (not b!108182) (not b!107983) (not b!107819) (not d!29737) (not b!107921) (not b!108268) (not d!29793) (not b!107846) (not b!107817) (not b!107899) (not d!29757) (not d!29799) (not d!29809) (not d!29921) (not b!108167) (not b_lambda!4829) (not b!107839) (not d!29841) (not b!108081) (not b!108246) (not b!108037) (not b!108204) (not d!29771) (not d!29881) (not b_next!2547) (not d!29907) (not b!108065) (not b!107982) (not b!107948) (not b!107796) (not b!108071) (not b!108254) (not d!29787) (not d!29897) (not d!29847) (not d!29745) (not b!108090) (not bm!11480) (not b!107949) (not b!108040) (not b!107844) (not bm!11450) (not bm!11479) (not b!108156) (not b!108035) (not b!108178) (not b!107850) (not d!29731) (not d!29887) (not d!29901) (not bm!11454) (not d!29789) (not b_lambda!4813) (not b!108012) (not b!108157) (not d!29925) (not d!29927) (not b!108207) (not d!29849) (not d!29813) (not b!107987) (not b!108227) (not b!108249) (not b_lambda!4831) (not mapNonEmpty!3985) tp_is_empty!2689 (not b!107988) (not b!108266) (not b!107911) (not d!29773) (not d!29869) (not b!108209) (not b!108079) (not b!108165) (not d!29845) (not d!29885) (not d!29733) (not b!108077) (not bm!11487) (not b!108036) (not b!108004) (not b!108210) (not b!108006) (not b!108033) (not b!108102) (not b_lambda!4801) (not d!29859) (not d!29875) (not d!29835) (not b!108212) (not d!29909) (not b!108039) (not b!108233) (not d!29867) (not b!107827) (not b!107833) (not d!29893) (not b!108162) (not b!108000) (not d!29763) (not d!29779) (not d!29851) (not bm!11453) (not b!107859) (not b!108185) (not b!107849) (not b!107974) (not d!29807) (not b!108222) (not d!29855) (not b!107931) b_and!6665 (not bm!11428) (not bm!11485) (not b!108075) (not b_lambda!4837) (not b!107920) (not b!107830) b_and!6667 (not b!108196) (not b!108232) (not b!107834) (not bm!11463) (not bm!11439) (not b!108228) (not b!107985) (not d!29749) (not bm!11437) (not b!108255) (not d!29923) (not b_lambda!4811) (not d!29741) (not b_next!2545) (not b!108173) (not bm!11491) (not b!107981) (not d!29915) (not b!108103) (not b!107852) (not d!29761) (not b!107995) (not b!108021) (not b!107925) (not bm!11461) (not bm!11456) (not d!29751) (not b!108214) (not bm!11438) (not b!108093) (not b!107838) (not b!108180) (not b_lambda!4827) (not b!107829) (not b!108201) (not d!29747) (not b!108019) (not b!108242) (not b!108171) (not d!29839) (not b!108105) (not b!108275) (not d!29853) (not b!108259) (not d!29873) (not b!108238) (not b!108274) (not bm!11495) (not b!108163) (not d!29767) (not b!108194) (not b!108030) (not d!29857) (not b!108244))
(check-sat b_and!6665 b_and!6667 (not b_next!2545) (not b_next!2547))
(get-model)

(declare-fun d!29933 () Bool)

(declare-fun res!53691 () Bool)

(declare-fun e!70465 () Bool)

(assert (=> d!29933 (=> res!53691 e!70465)))

(assert (=> d!29933 (= res!53691 (and ((_ is Cons!1619) (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)))) (= (_1!1207 (h!2217 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))))) lt!55170)))))

(assert (=> d!29933 (= (containsKey!159 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))) lt!55170) e!70465)))

(declare-fun b!108284 () Bool)

(declare-fun e!70466 () Bool)

(assert (=> b!108284 (= e!70465 e!70466)))

(declare-fun res!53692 () Bool)

(assert (=> b!108284 (=> (not res!53692) (not e!70466))))

(assert (=> b!108284 (= res!53692 (and (or (not ((_ is Cons!1619) (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))))) (bvsle (_1!1207 (h!2217 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))))) lt!55170)) ((_ is Cons!1619) (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)))) (bvslt (_1!1207 (h!2217 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))))) lt!55170)))))

(declare-fun b!108285 () Bool)

(assert (=> b!108285 (= e!70466 (containsKey!159 (t!5730 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)))) lt!55170))))

(assert (= (and d!29933 (not res!53691)) b!108284))

(assert (= (and b!108284 res!53692) b!108285))

(declare-fun m!121635 () Bool)

(assert (=> b!108285 m!121635))

(assert (=> d!29929 d!29933))

(declare-fun d!29935 () Bool)

(assert (=> d!29935 (= (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108124 d!29935))

(declare-fun d!29937 () Bool)

(declare-fun lt!55657 () Bool)

(assert (=> d!29937 (= lt!55657 (select (content!111 (toList!790 lt!55484)) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun e!70468 () Bool)

(assert (=> d!29937 (= lt!55657 e!70468)))

(declare-fun res!53693 () Bool)

(assert (=> d!29937 (=> (not res!53693) (not e!70468))))

(assert (=> d!29937 (= res!53693 ((_ is Cons!1619) (toList!790 lt!55484)))))

(assert (=> d!29937 (= (contains!826 (toList!790 lt!55484) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55657)))

(declare-fun b!108286 () Bool)

(declare-fun e!70467 () Bool)

(assert (=> b!108286 (= e!70468 e!70467)))

(declare-fun res!53694 () Bool)

(assert (=> b!108286 (=> res!53694 e!70467)))

(assert (=> b!108286 (= res!53694 (= (h!2217 (toList!790 lt!55484)) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!108287 () Bool)

(assert (=> b!108287 (= e!70467 (contains!826 (t!5730 (toList!790 lt!55484)) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!29937 res!53693) b!108286))

(assert (= (and b!108286 (not res!53694)) b!108287))

(declare-fun m!121637 () Bool)

(assert (=> d!29937 m!121637))

(declare-fun m!121639 () Bool)

(assert (=> d!29937 m!121639))

(declare-fun m!121641 () Bool)

(assert (=> b!108287 m!121641))

(assert (=> b!108036 d!29937))

(declare-fun d!29939 () Bool)

(assert (=> d!29939 (= (+!137 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (getCurrentListMap!467 (_keys!4314 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(assert (=> d!29939 true))

(declare-fun _$5!113 () Unit!3307)

(assert (=> d!29939 (= (choose!683 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3202 lt!55253) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 (defaultEntry!2605 newMap!16)) _$5!113)))

(declare-fun bs!4432 () Bool)

(assert (= bs!4432 d!29939))

(assert (=> bs!4432 m!120539))

(assert (=> bs!4432 m!120539))

(assert (=> bs!4432 m!120933))

(assert (=> bs!4432 m!120735))

(assert (=> bs!4432 m!121323))

(assert (=> d!29859 d!29939))

(declare-fun d!29941 () Bool)

(assert (=> d!29941 (= (validMask!0 (mask!6762 newMap!16)) (and (or (= (mask!6762 newMap!16) #b00000000000000000000000000000111) (= (mask!6762 newMap!16) #b00000000000000000000000000001111) (= (mask!6762 newMap!16) #b00000000000000000000000000011111) (= (mask!6762 newMap!16) #b00000000000000000000000000111111) (= (mask!6762 newMap!16) #b00000000000000000000000001111111) (= (mask!6762 newMap!16) #b00000000000000000000000011111111) (= (mask!6762 newMap!16) #b00000000000000000000000111111111) (= (mask!6762 newMap!16) #b00000000000000000000001111111111) (= (mask!6762 newMap!16) #b00000000000000000000011111111111) (= (mask!6762 newMap!16) #b00000000000000000000111111111111) (= (mask!6762 newMap!16) #b00000000000000000001111111111111) (= (mask!6762 newMap!16) #b00000000000000000011111111111111) (= (mask!6762 newMap!16) #b00000000000000000111111111111111) (= (mask!6762 newMap!16) #b00000000000000001111111111111111) (= (mask!6762 newMap!16) #b00000000000000011111111111111111) (= (mask!6762 newMap!16) #b00000000000000111111111111111111) (= (mask!6762 newMap!16) #b00000000000001111111111111111111) (= (mask!6762 newMap!16) #b00000000000011111111111111111111) (= (mask!6762 newMap!16) #b00000000000111111111111111111111) (= (mask!6762 newMap!16) #b00000000001111111111111111111111) (= (mask!6762 newMap!16) #b00000000011111111111111111111111) (= (mask!6762 newMap!16) #b00000000111111111111111111111111) (= (mask!6762 newMap!16) #b00000001111111111111111111111111) (= (mask!6762 newMap!16) #b00000011111111111111111111111111) (= (mask!6762 newMap!16) #b00000111111111111111111111111111) (= (mask!6762 newMap!16) #b00001111111111111111111111111111) (= (mask!6762 newMap!16) #b00011111111111111111111111111111) (= (mask!6762 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6762 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!29859 d!29941))

(declare-fun bm!11497 () Bool)

(declare-fun call!11500 () Bool)

(declare-fun c!19027 () Bool)

(assert (=> bm!11497 (= call!11500 (arrayNoDuplicates!0 (_keys!4314 (_2!1206 lt!55257)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19027 (Cons!1618 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000) Nil!1619) Nil!1619)))))

(declare-fun b!108288 () Bool)

(declare-fun e!70472 () Bool)

(assert (=> b!108288 (= e!70472 (contains!825 Nil!1619 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000)))))

(declare-fun d!29943 () Bool)

(declare-fun res!53697 () Bool)

(declare-fun e!70469 () Bool)

(assert (=> d!29943 (=> res!53697 e!70469)))

(assert (=> d!29943 (= res!53697 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55257)))))))

(assert (=> d!29943 (= (arrayNoDuplicates!0 (_keys!4314 (_2!1206 lt!55257)) #b00000000000000000000000000000000 Nil!1619) e!70469)))

(declare-fun b!108289 () Bool)

(declare-fun e!70471 () Bool)

(assert (=> b!108289 (= e!70471 call!11500)))

(declare-fun b!108290 () Bool)

(declare-fun e!70470 () Bool)

(assert (=> b!108290 (= e!70469 e!70470)))

(declare-fun res!53696 () Bool)

(assert (=> b!108290 (=> (not res!53696) (not e!70470))))

(assert (=> b!108290 (= res!53696 (not e!70472))))

(declare-fun res!53695 () Bool)

(assert (=> b!108290 (=> (not res!53695) (not e!70472))))

(assert (=> b!108290 (= res!53695 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000)))))

(declare-fun b!108291 () Bool)

(assert (=> b!108291 (= e!70470 e!70471)))

(assert (=> b!108291 (= c!19027 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000)))))

(declare-fun b!108292 () Bool)

(assert (=> b!108292 (= e!70471 call!11500)))

(assert (= (and d!29943 (not res!53697)) b!108290))

(assert (= (and b!108290 res!53695) b!108288))

(assert (= (and b!108290 res!53696) b!108291))

(assert (= (and b!108291 c!19027) b!108289))

(assert (= (and b!108291 (not c!19027)) b!108292))

(assert (= (or b!108289 b!108292) bm!11497))

(declare-fun m!121643 () Bool)

(assert (=> bm!11497 m!121643))

(declare-fun m!121645 () Bool)

(assert (=> bm!11497 m!121645))

(assert (=> b!108288 m!121643))

(assert (=> b!108288 m!121643))

(declare-fun m!121647 () Bool)

(assert (=> b!108288 m!121647))

(assert (=> b!108290 m!121643))

(assert (=> b!108290 m!121643))

(declare-fun m!121649 () Bool)

(assert (=> b!108290 m!121649))

(assert (=> b!108291 m!121643))

(assert (=> b!108291 m!121643))

(assert (=> b!108291 m!121649))

(assert (=> b!107984 d!29943))

(declare-fun d!29945 () Bool)

(declare-fun lt!55658 () (_ BitVec 32))

(assert (=> d!29945 (and (bvsge lt!55658 #b00000000000000000000000000000000) (bvsle lt!55658 (bvsub (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!70473 () (_ BitVec 32))

(assert (=> d!29945 (= lt!55658 e!70473)))

(declare-fun c!19029 () Bool)

(assert (=> d!29945 (= c!19029 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> d!29945 (and (bvsle #b00000000000000000000000000000000 (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> d!29945 (= (arrayCountValidKeys!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000 (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))) lt!55658)))

(declare-fun b!108293 () Bool)

(assert (=> b!108293 (= e!70473 #b00000000000000000000000000000000)))

(declare-fun b!108294 () Bool)

(declare-fun e!70474 () (_ BitVec 32))

(declare-fun call!11501 () (_ BitVec 32))

(assert (=> b!108294 (= e!70474 (bvadd #b00000000000000000000000000000001 call!11501))))

(declare-fun b!108295 () Bool)

(assert (=> b!108295 (= e!70473 e!70474)))

(declare-fun c!19028 () Bool)

(assert (=> b!108295 (= c!19028 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11498 () Bool)

(assert (=> bm!11498 (= call!11501 (arrayCountValidKeys!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!108296 () Bool)

(assert (=> b!108296 (= e!70474 call!11501)))

(assert (= (and d!29945 c!19029) b!108293))

(assert (= (and d!29945 (not c!19029)) b!108295))

(assert (= (and b!108295 c!19028) b!108294))

(assert (= (and b!108295 (not c!19028)) b!108296))

(assert (= (or b!108294 b!108296) bm!11498))

(declare-fun m!121651 () Bool)

(assert (=> b!108295 m!121651))

(assert (=> b!108295 m!121651))

(declare-fun m!121653 () Bool)

(assert (=> b!108295 m!121653))

(declare-fun m!121655 () Bool)

(assert (=> bm!11498 m!121655))

(assert (=> b!108266 d!29945))

(declare-fun e!70476 () Option!161)

(declare-fun b!108299 () Bool)

(assert (=> b!108299 (= e!70476 (getValueByKey!155 (t!5730 (toList!790 lt!55420)) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108298 () Bool)

(declare-fun e!70475 () Option!161)

(assert (=> b!108298 (= e!70475 e!70476)))

(declare-fun c!19031 () Bool)

(assert (=> b!108298 (= c!19031 (and ((_ is Cons!1619) (toList!790 lt!55420)) (not (= (_1!1207 (h!2217 (toList!790 lt!55420))) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun d!29947 () Bool)

(declare-fun c!19030 () Bool)

(assert (=> d!29947 (= c!19030 (and ((_ is Cons!1619) (toList!790 lt!55420)) (= (_1!1207 (h!2217 (toList!790 lt!55420))) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!29947 (= (getValueByKey!155 (toList!790 lt!55420) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!70475)))

(declare-fun b!108300 () Bool)

(assert (=> b!108300 (= e!70476 None!159)))

(declare-fun b!108297 () Bool)

(assert (=> b!108297 (= e!70475 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55420)))))))

(assert (= (and d!29947 c!19030) b!108297))

(assert (= (and d!29947 (not c!19030)) b!108298))

(assert (= (and b!108298 c!19031) b!108299))

(assert (= (and b!108298 (not c!19031)) b!108300))

(declare-fun m!121657 () Bool)

(assert (=> b!108299 m!121657))

(assert (=> b!107920 d!29947))

(declare-fun d!29949 () Bool)

(declare-fun c!19034 () Bool)

(assert (=> d!29949 (= c!19034 ((_ is Nil!1620) (toList!790 lt!55176)))))

(declare-fun e!70479 () (InoxSet tuple2!2392))

(assert (=> d!29949 (= (content!111 (toList!790 lt!55176)) e!70479)))

(declare-fun b!108305 () Bool)

(assert (=> b!108305 (= e!70479 ((as const (Array tuple2!2392 Bool)) false))))

(declare-fun b!108306 () Bool)

(assert (=> b!108306 (= e!70479 ((_ map or) (store ((as const (Array tuple2!2392 Bool)) false) (h!2217 (toList!790 lt!55176)) true) (content!111 (t!5730 (toList!790 lt!55176)))))))

(assert (= (and d!29949 c!19034) b!108305))

(assert (= (and d!29949 (not c!19034)) b!108306))

(declare-fun m!121659 () Bool)

(assert (=> b!108306 m!121659))

(declare-fun m!121661 () Bool)

(assert (=> b!108306 m!121661))

(assert (=> d!29751 d!29949))

(declare-fun b!108307 () Bool)

(declare-fun lt!55664 () Unit!3307)

(declare-fun lt!55663 () Unit!3307)

(assert (=> b!108307 (= lt!55664 lt!55663)))

(declare-fun lt!55661 () V!3233)

(declare-fun lt!55660 () (_ BitVec 64))

(declare-fun lt!55662 () (_ BitVec 64))

(declare-fun lt!55659 () ListLongMap!1549)

(assert (=> b!108307 (not (contains!824 (+!137 lt!55659 (tuple2!2393 lt!55662 lt!55661)) lt!55660))))

(assert (=> b!108307 (= lt!55663 (addStillNotContains!48 lt!55659 lt!55662 lt!55661 lt!55660))))

(assert (=> b!108307 (= lt!55660 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108307 (= lt!55661 (get!1341 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108307 (= lt!55662 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11502 () ListLongMap!1549)

(assert (=> b!108307 (= lt!55659 call!11502)))

(declare-fun e!70485 () ListLongMap!1549)

(assert (=> b!108307 (= e!70485 (+!137 call!11502 (tuple2!2393 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) (get!1341 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108308 () Bool)

(declare-fun e!70484 () Bool)

(declare-fun lt!55665 () ListLongMap!1549)

(assert (=> b!108308 (= e!70484 (= lt!55665 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16))))))

(declare-fun b!108309 () Bool)

(assert (=> b!108309 (= e!70485 call!11502)))

(declare-fun b!108310 () Bool)

(assert (=> b!108310 (= e!70484 (isEmpty!377 lt!55665))))

(declare-fun b!108311 () Bool)

(assert (=> b!108311 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> b!108311 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 (_values!2588 newMap!16))))))

(declare-fun e!70481 () Bool)

(assert (=> b!108311 (= e!70481 (= (apply!99 lt!55665 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108312 () Bool)

(declare-fun e!70483 () ListLongMap!1549)

(assert (=> b!108312 (= e!70483 (ListLongMap!1550 Nil!1620))))

(declare-fun b!108313 () Bool)

(declare-fun e!70486 () Bool)

(declare-fun e!70480 () Bool)

(assert (=> b!108313 (= e!70486 e!70480)))

(declare-fun c!19036 () Bool)

(declare-fun e!70482 () Bool)

(assert (=> b!108313 (= c!19036 e!70482)))

(declare-fun res!53698 () Bool)

(assert (=> b!108313 (=> (not res!53698) (not e!70482))))

(assert (=> b!108313 (= res!53698 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108315 () Bool)

(assert (=> b!108315 (= e!70483 e!70485)))

(declare-fun c!19038 () Bool)

(assert (=> b!108315 (= c!19038 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11499 () Bool)

(assert (=> bm!11499 (= call!11502 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16)))))

(declare-fun b!108316 () Bool)

(declare-fun res!53700 () Bool)

(assert (=> b!108316 (=> (not res!53700) (not e!70486))))

(assert (=> b!108316 (= res!53700 (not (contains!824 lt!55665 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108317 () Bool)

(assert (=> b!108317 (= e!70480 e!70481)))

(assert (=> b!108317 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun res!53701 () Bool)

(assert (=> b!108317 (= res!53701 (contains!824 lt!55665 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108317 (=> (not res!53701) (not e!70481))))

(declare-fun b!108318 () Bool)

(assert (=> b!108318 (= e!70480 e!70484)))

(declare-fun c!19037 () Bool)

(assert (=> b!108318 (= c!19037 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun d!29951 () Bool)

(assert (=> d!29951 e!70486))

(declare-fun res!53699 () Bool)

(assert (=> d!29951 (=> (not res!53699) (not e!70486))))

(assert (=> d!29951 (= res!53699 (not (contains!824 lt!55665 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29951 (= lt!55665 e!70483)))

(declare-fun c!19035 () Bool)

(assert (=> d!29951 (= c!19035 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!29951 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29951 (= (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55665)))

(declare-fun b!108314 () Bool)

(assert (=> b!108314 (= e!70482 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108314 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!29951 c!19035) b!108312))

(assert (= (and d!29951 (not c!19035)) b!108315))

(assert (= (and b!108315 c!19038) b!108307))

(assert (= (and b!108315 (not c!19038)) b!108309))

(assert (= (or b!108307 b!108309) bm!11499))

(assert (= (and d!29951 res!53699) b!108316))

(assert (= (and b!108316 res!53700) b!108313))

(assert (= (and b!108313 res!53698) b!108314))

(assert (= (and b!108313 c!19036) b!108317))

(assert (= (and b!108313 (not c!19036)) b!108318))

(assert (= (and b!108317 res!53701) b!108311))

(assert (= (and b!108318 c!19037) b!108308))

(assert (= (and b!108318 (not c!19037)) b!108310))

(declare-fun b_lambda!4839 () Bool)

(assert (=> (not b_lambda!4839) (not b!108307)))

(assert (=> b!108307 t!5742))

(declare-fun b_and!6669 () Bool)

(assert (= b_and!6665 (and (=> t!5742 result!3505) b_and!6669)))

(assert (=> b!108307 t!5744))

(declare-fun b_and!6671 () Bool)

(assert (= b_and!6667 (and (=> t!5744 result!3507) b_and!6671)))

(declare-fun b_lambda!4841 () Bool)

(assert (=> (not b_lambda!4841) (not b!108311)))

(assert (=> b!108311 t!5742))

(declare-fun b_and!6673 () Bool)

(assert (= b_and!6669 (and (=> t!5742 result!3505) b_and!6673)))

(assert (=> b!108311 t!5744))

(declare-fun b_and!6675 () Bool)

(assert (= b_and!6671 (and (=> t!5744 result!3507) b_and!6675)))

(assert (=> b!108311 m!121365))

(assert (=> b!108311 m!121113))

(assert (=> b!108311 m!121367))

(assert (=> b!108311 m!120769))

(assert (=> b!108311 m!121113))

(assert (=> b!108311 m!120769))

(declare-fun m!121663 () Bool)

(assert (=> b!108311 m!121663))

(assert (=> b!108311 m!121365))

(declare-fun m!121665 () Bool)

(assert (=> d!29951 m!121665))

(assert (=> d!29951 m!120787))

(assert (=> b!108315 m!120769))

(assert (=> b!108315 m!120769))

(assert (=> b!108315 m!120779))

(declare-fun m!121667 () Bool)

(assert (=> b!108308 m!121667))

(declare-fun m!121669 () Bool)

(assert (=> b!108316 m!121669))

(assert (=> b!108317 m!120769))

(assert (=> b!108317 m!120769))

(declare-fun m!121671 () Bool)

(assert (=> b!108317 m!121671))

(assert (=> b!108307 m!121365))

(assert (=> b!108307 m!121113))

(assert (=> b!108307 m!121367))

(declare-fun m!121673 () Bool)

(assert (=> b!108307 m!121673))

(assert (=> b!108307 m!121673))

(declare-fun m!121675 () Bool)

(assert (=> b!108307 m!121675))

(assert (=> b!108307 m!121113))

(assert (=> b!108307 m!121365))

(declare-fun m!121677 () Bool)

(assert (=> b!108307 m!121677))

(declare-fun m!121679 () Bool)

(assert (=> b!108307 m!121679))

(assert (=> b!108307 m!120769))

(assert (=> b!108314 m!120769))

(assert (=> b!108314 m!120769))

(assert (=> b!108314 m!120779))

(declare-fun m!121681 () Bool)

(assert (=> b!108310 m!121681))

(assert (=> bm!11499 m!121667))

(assert (=> bm!11482 d!29951))

(declare-fun d!29953 () Bool)

(declare-fun res!53702 () Bool)

(declare-fun e!70487 () Bool)

(assert (=> d!29953 (=> res!53702 e!70487)))

(assert (=> d!29953 (= res!53702 (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!29953 (= (arrayContainsKey!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!70487)))

(declare-fun b!108319 () Bool)

(declare-fun e!70488 () Bool)

(assert (=> b!108319 (= e!70487 e!70488)))

(declare-fun res!53703 () Bool)

(assert (=> b!108319 (=> (not res!53703) (not e!70488))))

(assert (=> b!108319 (= res!53703 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!108320 () Bool)

(assert (=> b!108320 (= e!70488 (arrayContainsKey!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29953 (not res!53702)) b!108319))

(assert (= (and b!108319 res!53703) b!108320))

(declare-fun m!121683 () Bool)

(assert (=> d!29953 m!121683))

(assert (=> b!108320 m!120387))

(declare-fun m!121685 () Bool)

(assert (=> b!108320 m!121685))

(assert (=> b!107981 d!29953))

(declare-fun d!29955 () Bool)

(declare-fun e!70489 () Bool)

(assert (=> d!29955 e!70489))

(declare-fun res!53705 () Bool)

(assert (=> d!29955 (=> (not res!53705) (not e!70489))))

(declare-fun lt!55666 () ListLongMap!1549)

(assert (=> d!29955 (= res!53705 (contains!824 lt!55666 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun lt!55669 () List!1623)

(assert (=> d!29955 (= lt!55666 (ListLongMap!1550 lt!55669))))

(declare-fun lt!55667 () Unit!3307)

(declare-fun lt!55668 () Unit!3307)

(assert (=> d!29955 (= lt!55667 lt!55668)))

(assert (=> d!29955 (= (getValueByKey!155 lt!55669 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!29955 (= lt!55668 (lemmaContainsTupThenGetReturnValue!74 lt!55669 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!29955 (= lt!55669 (insertStrictlySorted!77 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!29955 (= (+!137 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) lt!55666)))

(declare-fun b!108321 () Bool)

(declare-fun res!53704 () Bool)

(assert (=> b!108321 (=> (not res!53704) (not e!70489))))

(assert (=> b!108321 (= res!53704 (= (getValueByKey!155 (toList!790 lt!55666) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun b!108322 () Bool)

(assert (=> b!108322 (= e!70489 (contains!826 (toList!790 lt!55666) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(assert (= (and d!29955 res!53705) b!108321))

(assert (= (and b!108321 res!53704) b!108322))

(declare-fun m!121687 () Bool)

(assert (=> d!29955 m!121687))

(declare-fun m!121689 () Bool)

(assert (=> d!29955 m!121689))

(declare-fun m!121691 () Bool)

(assert (=> d!29955 m!121691))

(declare-fun m!121693 () Bool)

(assert (=> d!29955 m!121693))

(declare-fun m!121695 () Bool)

(assert (=> b!108321 m!121695))

(declare-fun m!121697 () Bool)

(assert (=> b!108322 m!121697))

(assert (=> b!108090 d!29955))

(assert (=> b!108090 d!29875))

(declare-fun b!108323 () Bool)

(declare-fun e!70500 () Unit!3307)

(declare-fun Unit!3342 () Unit!3307)

(assert (=> b!108323 (= e!70500 Unit!3342)))

(declare-fun lt!55690 () ListLongMap!1549)

(declare-fun e!70501 () Bool)

(declare-fun b!108324 () Bool)

(assert (=> b!108324 (= e!70501 (= (apply!99 lt!55690 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108324 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))))))))

(assert (=> b!108324 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108325 () Bool)

(declare-fun e!70498 () ListLongMap!1549)

(declare-fun e!70497 () ListLongMap!1549)

(assert (=> b!108325 (= e!70498 e!70497)))

(declare-fun c!19041 () Bool)

(assert (=> b!108325 (= c!19041 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11500 () Bool)

(declare-fun call!11503 () Bool)

(assert (=> bm!11500 (= call!11503 (contains!824 lt!55690 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108326 () Bool)

(declare-fun e!70499 () Bool)

(declare-fun e!70495 () Bool)

(assert (=> b!108326 (= e!70499 e!70495)))

(declare-fun res!53706 () Bool)

(declare-fun call!11508 () Bool)

(assert (=> b!108326 (= res!53706 call!11508)))

(assert (=> b!108326 (=> (not res!53706) (not e!70495))))

(declare-fun d!29957 () Bool)

(declare-fun e!70490 () Bool)

(assert (=> d!29957 e!70490))

(declare-fun res!53707 () Bool)

(assert (=> d!29957 (=> (not res!53707) (not e!70490))))

(assert (=> d!29957 (= res!53707 (or (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))))

(declare-fun lt!55688 () ListLongMap!1549)

(assert (=> d!29957 (= lt!55690 lt!55688)))

(declare-fun lt!55684 () Unit!3307)

(assert (=> d!29957 (= lt!55684 e!70500)))

(declare-fun c!19043 () Bool)

(declare-fun e!70493 () Bool)

(assert (=> d!29957 (= c!19043 e!70493)))

(declare-fun res!53712 () Bool)

(assert (=> d!29957 (=> (not res!53712) (not e!70493))))

(assert (=> d!29957 (= res!53712 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!29957 (= lt!55688 e!70498)))

(declare-fun c!19040 () Bool)

(assert (=> d!29957 (= c!19040 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29957 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!29957 (= (getCurrentListMap!467 (_keys!4314 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55690)))

(declare-fun b!108327 () Bool)

(assert (=> b!108327 (= e!70499 (not call!11508))))

(declare-fun b!108328 () Bool)

(declare-fun res!53713 () Bool)

(assert (=> b!108328 (=> (not res!53713) (not e!70490))))

(declare-fun e!70502 () Bool)

(assert (=> b!108328 (= res!53713 e!70502)))

(declare-fun res!53714 () Bool)

(assert (=> b!108328 (=> res!53714 e!70502)))

(declare-fun e!70496 () Bool)

(assert (=> b!108328 (= res!53714 (not e!70496))))

(declare-fun res!53709 () Bool)

(assert (=> b!108328 (=> (not res!53709) (not e!70496))))

(assert (=> b!108328 (= res!53709 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108329 () Bool)

(assert (=> b!108329 (= e!70495 (= (apply!99 lt!55690 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!108330 () Bool)

(assert (=> b!108330 (= e!70496 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108331 () Bool)

(declare-fun call!11509 () ListLongMap!1549)

(assert (=> b!108331 (= e!70497 call!11509)))

(declare-fun bm!11501 () Bool)

(declare-fun call!11504 () ListLongMap!1549)

(declare-fun call!11506 () ListLongMap!1549)

(assert (=> bm!11501 (= call!11504 call!11506)))

(declare-fun bm!11502 () Bool)

(declare-fun call!11507 () ListLongMap!1549)

(assert (=> bm!11502 (= call!11509 call!11507)))

(declare-fun bm!11503 () Bool)

(assert (=> bm!11503 (= call!11508 (contains!824 lt!55690 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!11505 () ListLongMap!1549)

(declare-fun bm!11504 () Bool)

(assert (=> bm!11504 (= call!11507 (+!137 (ite c!19040 call!11506 (ite c!19041 call!11504 call!11505)) (ite (or c!19040 c!19041) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun b!108332 () Bool)

(declare-fun e!70492 () Bool)

(declare-fun e!70491 () Bool)

(assert (=> b!108332 (= e!70492 e!70491)))

(declare-fun res!53711 () Bool)

(assert (=> b!108332 (= res!53711 call!11503)))

(assert (=> b!108332 (=> (not res!53711) (not e!70491))))

(declare-fun bm!11505 () Bool)

(assert (=> bm!11505 (= call!11505 call!11504)))

(declare-fun b!108333 () Bool)

(assert (=> b!108333 (= e!70490 e!70492)))

(declare-fun c!19039 () Bool)

(assert (=> b!108333 (= c!19039 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108334 () Bool)

(assert (=> b!108334 (= e!70502 e!70501)))

(declare-fun res!53708 () Bool)

(assert (=> b!108334 (=> (not res!53708) (not e!70501))))

(assert (=> b!108334 (= res!53708 (contains!824 lt!55690 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108334 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108335 () Bool)

(declare-fun lt!55673 () Unit!3307)

(assert (=> b!108335 (= e!70500 lt!55673)))

(declare-fun lt!55671 () ListLongMap!1549)

(assert (=> b!108335 (= lt!55671 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55670 () (_ BitVec 64))

(assert (=> b!108335 (= lt!55670 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55676 () (_ BitVec 64))

(assert (=> b!108335 (= lt!55676 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55683 () Unit!3307)

(assert (=> b!108335 (= lt!55683 (addStillContains!75 lt!55671 lt!55670 (zeroValue!2478 newMap!16) lt!55676))))

(assert (=> b!108335 (contains!824 (+!137 lt!55671 (tuple2!2393 lt!55670 (zeroValue!2478 newMap!16))) lt!55676)))

(declare-fun lt!55674 () Unit!3307)

(assert (=> b!108335 (= lt!55674 lt!55683)))

(declare-fun lt!55681 () ListLongMap!1549)

(assert (=> b!108335 (= lt!55681 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55678 () (_ BitVec 64))

(assert (=> b!108335 (= lt!55678 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55686 () (_ BitVec 64))

(assert (=> b!108335 (= lt!55686 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55680 () Unit!3307)

(assert (=> b!108335 (= lt!55680 (addApplyDifferent!75 lt!55681 lt!55678 (minValue!2478 newMap!16) lt!55686))))

(assert (=> b!108335 (= (apply!99 (+!137 lt!55681 (tuple2!2393 lt!55678 (minValue!2478 newMap!16))) lt!55686) (apply!99 lt!55681 lt!55686))))

(declare-fun lt!55689 () Unit!3307)

(assert (=> b!108335 (= lt!55689 lt!55680)))

(declare-fun lt!55675 () ListLongMap!1549)

(assert (=> b!108335 (= lt!55675 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55672 () (_ BitVec 64))

(assert (=> b!108335 (= lt!55672 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55691 () (_ BitVec 64))

(assert (=> b!108335 (= lt!55691 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55685 () Unit!3307)

(assert (=> b!108335 (= lt!55685 (addApplyDifferent!75 lt!55675 lt!55672 (zeroValue!2478 newMap!16) lt!55691))))

(assert (=> b!108335 (= (apply!99 (+!137 lt!55675 (tuple2!2393 lt!55672 (zeroValue!2478 newMap!16))) lt!55691) (apply!99 lt!55675 lt!55691))))

(declare-fun lt!55682 () Unit!3307)

(assert (=> b!108335 (= lt!55682 lt!55685)))

(declare-fun lt!55687 () ListLongMap!1549)

(assert (=> b!108335 (= lt!55687 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55679 () (_ BitVec 64))

(assert (=> b!108335 (= lt!55679 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55677 () (_ BitVec 64))

(assert (=> b!108335 (= lt!55677 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108335 (= lt!55673 (addApplyDifferent!75 lt!55687 lt!55679 (minValue!2478 newMap!16) lt!55677))))

(assert (=> b!108335 (= (apply!99 (+!137 lt!55687 (tuple2!2393 lt!55679 (minValue!2478 newMap!16))) lt!55677) (apply!99 lt!55687 lt!55677))))

(declare-fun b!108336 () Bool)

(assert (=> b!108336 (= e!70498 (+!137 call!11507 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun bm!11506 () Bool)

(assert (=> bm!11506 (= call!11506 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!108337 () Bool)

(declare-fun res!53710 () Bool)

(assert (=> b!108337 (=> (not res!53710) (not e!70490))))

(assert (=> b!108337 (= res!53710 e!70499)))

(declare-fun c!19044 () Bool)

(assert (=> b!108337 (= c!19044 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108338 () Bool)

(assert (=> b!108338 (= e!70493 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108339 () Bool)

(declare-fun c!19042 () Bool)

(assert (=> b!108339 (= c!19042 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70494 () ListLongMap!1549)

(assert (=> b!108339 (= e!70497 e!70494)))

(declare-fun b!108340 () Bool)

(assert (=> b!108340 (= e!70491 (= (apply!99 lt!55690 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!108341 () Bool)

(assert (=> b!108341 (= e!70492 (not call!11503))))

(declare-fun b!108342 () Bool)

(assert (=> b!108342 (= e!70494 call!11509)))

(declare-fun b!108343 () Bool)

(assert (=> b!108343 (= e!70494 call!11505)))

(assert (= (and d!29957 c!19040) b!108336))

(assert (= (and d!29957 (not c!19040)) b!108325))

(assert (= (and b!108325 c!19041) b!108331))

(assert (= (and b!108325 (not c!19041)) b!108339))

(assert (= (and b!108339 c!19042) b!108342))

(assert (= (and b!108339 (not c!19042)) b!108343))

(assert (= (or b!108342 b!108343) bm!11505))

(assert (= (or b!108331 bm!11505) bm!11501))

(assert (= (or b!108331 b!108342) bm!11502))

(assert (= (or b!108336 bm!11501) bm!11506))

(assert (= (or b!108336 bm!11502) bm!11504))

(assert (= (and d!29957 res!53712) b!108338))

(assert (= (and d!29957 c!19043) b!108335))

(assert (= (and d!29957 (not c!19043)) b!108323))

(assert (= (and d!29957 res!53707) b!108328))

(assert (= (and b!108328 res!53709) b!108330))

(assert (= (and b!108328 (not res!53714)) b!108334))

(assert (= (and b!108334 res!53708) b!108324))

(assert (= (and b!108328 res!53713) b!108337))

(assert (= (and b!108337 c!19044) b!108326))

(assert (= (and b!108337 (not c!19044)) b!108327))

(assert (= (and b!108326 res!53706) b!108329))

(assert (= (or b!108326 b!108327) bm!11503))

(assert (= (and b!108337 res!53710) b!108333))

(assert (= (and b!108333 c!19039) b!108332))

(assert (= (and b!108333 (not c!19039)) b!108341))

(assert (= (and b!108332 res!53711) b!108340))

(assert (= (or b!108332 b!108341) bm!11500))

(declare-fun b_lambda!4843 () Bool)

(assert (=> (not b_lambda!4843) (not b!108324)))

(assert (=> b!108324 t!5742))

(declare-fun b_and!6677 () Bool)

(assert (= b_and!6673 (and (=> t!5742 result!3505) b_and!6677)))

(assert (=> b!108324 t!5744))

(declare-fun b_and!6679 () Bool)

(assert (= b_and!6675 (and (=> t!5744 result!3507) b_and!6679)))

(declare-fun m!121699 () Bool)

(assert (=> b!108324 m!121699))

(assert (=> b!108324 m!121113))

(assert (=> b!108324 m!121699))

(assert (=> b!108324 m!121113))

(declare-fun m!121701 () Bool)

(assert (=> b!108324 m!121701))

(assert (=> b!108324 m!120769))

(declare-fun m!121703 () Bool)

(assert (=> b!108324 m!121703))

(assert (=> b!108324 m!120769))

(declare-fun m!121705 () Bool)

(assert (=> b!108340 m!121705))

(declare-fun m!121707 () Bool)

(assert (=> bm!11500 m!121707))

(declare-fun m!121709 () Bool)

(assert (=> bm!11506 m!121709))

(declare-fun m!121711 () Bool)

(assert (=> bm!11503 m!121711))

(assert (=> b!108330 m!120769))

(assert (=> b!108330 m!120769))

(assert (=> b!108330 m!120779))

(assert (=> b!108338 m!120769))

(assert (=> b!108338 m!120769))

(assert (=> b!108338 m!120779))

(declare-fun m!121713 () Bool)

(assert (=> bm!11504 m!121713))

(declare-fun m!121715 () Bool)

(assert (=> b!108336 m!121715))

(assert (=> d!29957 m!120787))

(declare-fun m!121717 () Bool)

(assert (=> b!108329 m!121717))

(assert (=> b!108334 m!120769))

(assert (=> b!108334 m!120769))

(declare-fun m!121719 () Bool)

(assert (=> b!108334 m!121719))

(declare-fun m!121721 () Bool)

(assert (=> b!108335 m!121721))

(declare-fun m!121723 () Bool)

(assert (=> b!108335 m!121723))

(declare-fun m!121725 () Bool)

(assert (=> b!108335 m!121725))

(declare-fun m!121727 () Bool)

(assert (=> b!108335 m!121727))

(declare-fun m!121729 () Bool)

(assert (=> b!108335 m!121729))

(declare-fun m!121731 () Bool)

(assert (=> b!108335 m!121731))

(declare-fun m!121733 () Bool)

(assert (=> b!108335 m!121733))

(declare-fun m!121735 () Bool)

(assert (=> b!108335 m!121735))

(assert (=> b!108335 m!121725))

(assert (=> b!108335 m!121731))

(declare-fun m!121737 () Bool)

(assert (=> b!108335 m!121737))

(assert (=> b!108335 m!121709))

(declare-fun m!121739 () Bool)

(assert (=> b!108335 m!121739))

(declare-fun m!121741 () Bool)

(assert (=> b!108335 m!121741))

(declare-fun m!121743 () Bool)

(assert (=> b!108335 m!121743))

(assert (=> b!108335 m!121733))

(declare-fun m!121745 () Bool)

(assert (=> b!108335 m!121745))

(declare-fun m!121747 () Bool)

(assert (=> b!108335 m!121747))

(assert (=> b!108335 m!120769))

(assert (=> b!108335 m!121743))

(declare-fun m!121749 () Bool)

(assert (=> b!108335 m!121749))

(assert (=> b!108090 d!29957))

(declare-fun d!29959 () Bool)

(declare-fun e!70503 () Bool)

(assert (=> d!29959 e!70503))

(declare-fun res!53715 () Bool)

(assert (=> d!29959 (=> res!53715 e!70503)))

(declare-fun lt!55692 () Bool)

(assert (=> d!29959 (= res!53715 (not lt!55692))))

(declare-fun lt!55693 () Bool)

(assert (=> d!29959 (= lt!55692 lt!55693)))

(declare-fun lt!55695 () Unit!3307)

(declare-fun e!70504 () Unit!3307)

(assert (=> d!29959 (= lt!55695 e!70504)))

(declare-fun c!19045 () Bool)

(assert (=> d!29959 (= c!19045 lt!55693)))

(assert (=> d!29959 (= lt!55693 (containsKey!159 (toList!790 lt!55626) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29959 (= (contains!824 lt!55626 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) lt!55692)))

(declare-fun b!108344 () Bool)

(declare-fun lt!55694 () Unit!3307)

(assert (=> b!108344 (= e!70504 lt!55694)))

(assert (=> b!108344 (= lt!55694 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55626) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108344 (isDefined!109 (getValueByKey!155 (toList!790 lt!55626) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108345 () Bool)

(declare-fun Unit!3343 () Unit!3307)

(assert (=> b!108345 (= e!70504 Unit!3343)))

(declare-fun b!108346 () Bool)

(assert (=> b!108346 (= e!70503 (isDefined!109 (getValueByKey!155 (toList!790 lt!55626) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29959 c!19045) b!108344))

(assert (= (and d!29959 (not c!19045)) b!108345))

(assert (= (and d!29959 (not res!53715)) b!108346))

(assert (=> d!29959 m!120769))

(declare-fun m!121751 () Bool)

(assert (=> d!29959 m!121751))

(assert (=> b!108344 m!120769))

(declare-fun m!121753 () Bool)

(assert (=> b!108344 m!121753))

(assert (=> b!108344 m!120769))

(declare-fun m!121755 () Bool)

(assert (=> b!108344 m!121755))

(assert (=> b!108344 m!121755))

(declare-fun m!121757 () Bool)

(assert (=> b!108344 m!121757))

(assert (=> b!108346 m!120769))

(assert (=> b!108346 m!121755))

(assert (=> b!108346 m!121755))

(assert (=> b!108346 m!121757))

(assert (=> b!108232 d!29959))

(declare-fun d!29961 () Bool)

(declare-fun e!70505 () Bool)

(assert (=> d!29961 e!70505))

(declare-fun res!53716 () Bool)

(assert (=> d!29961 (=> res!53716 e!70505)))

(declare-fun lt!55696 () Bool)

(assert (=> d!29961 (= res!53716 (not lt!55696))))

(declare-fun lt!55697 () Bool)

(assert (=> d!29961 (= lt!55696 lt!55697)))

(declare-fun lt!55699 () Unit!3307)

(declare-fun e!70506 () Unit!3307)

(assert (=> d!29961 (= lt!55699 e!70506)))

(declare-fun c!19046 () Bool)

(assert (=> d!29961 (= c!19046 lt!55697)))

(assert (=> d!29961 (= lt!55697 (containsKey!159 (toList!790 lt!55533) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29961 (= (contains!824 lt!55533 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55696)))

(declare-fun b!108347 () Bool)

(declare-fun lt!55698 () Unit!3307)

(assert (=> b!108347 (= e!70506 lt!55698)))

(assert (=> b!108347 (= lt!55698 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55533) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108347 (isDefined!109 (getValueByKey!155 (toList!790 lt!55533) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108348 () Bool)

(declare-fun Unit!3344 () Unit!3307)

(assert (=> b!108348 (= e!70506 Unit!3344)))

(declare-fun b!108349 () Bool)

(assert (=> b!108349 (= e!70505 (isDefined!109 (getValueByKey!155 (toList!790 lt!55533) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29961 c!19046) b!108347))

(assert (= (and d!29961 (not c!19046)) b!108348))

(assert (= (and d!29961 (not res!53716)) b!108349))

(declare-fun m!121759 () Bool)

(assert (=> d!29961 m!121759))

(declare-fun m!121761 () Bool)

(assert (=> b!108347 m!121761))

(declare-fun m!121763 () Bool)

(assert (=> b!108347 m!121763))

(assert (=> b!108347 m!121763))

(declare-fun m!121765 () Bool)

(assert (=> b!108347 m!121765))

(assert (=> b!108349 m!121763))

(assert (=> b!108349 m!121763))

(assert (=> b!108349 m!121765))

(assert (=> bm!11460 d!29961))

(declare-fun d!29963 () Bool)

(assert (=> d!29963 (isDefined!109 (getValueByKey!155 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!55700 () Unit!3307)

(assert (=> d!29963 (= lt!55700 (choose!681 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70507 () Bool)

(assert (=> d!29963 e!70507))

(declare-fun res!53717 () Bool)

(assert (=> d!29963 (=> (not res!53717) (not e!70507))))

(assert (=> d!29963 (= res!53717 (isStrictlySorted!305 (toList!790 lt!55124)))))

(assert (=> d!29963 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000) lt!55700)))

(declare-fun b!108350 () Bool)

(assert (=> b!108350 (= e!70507 (containsKey!159 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29963 res!53717) b!108350))

(assert (=> d!29963 m!120781))

(assert (=> d!29963 m!120781))

(assert (=> d!29963 m!121427))

(declare-fun m!121767 () Bool)

(assert (=> d!29963 m!121767))

(declare-fun m!121769 () Bool)

(assert (=> d!29963 m!121769))

(assert (=> b!108350 m!121423))

(assert (=> b!108180 d!29963))

(declare-fun d!29965 () Bool)

(assert (=> d!29965 (= (isDefined!109 (getValueByKey!155 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!379 (getValueByKey!155 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4433 () Bool)

(assert (= bs!4433 d!29965))

(assert (=> bs!4433 m!120781))

(declare-fun m!121771 () Bool)

(assert (=> bs!4433 m!121771))

(assert (=> b!108180 d!29965))

(declare-fun b!108353 () Bool)

(declare-fun e!70509 () Option!161)

(assert (=> b!108353 (= e!70509 (getValueByKey!155 (t!5730 (toList!790 lt!55124)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108352 () Bool)

(declare-fun e!70508 () Option!161)

(assert (=> b!108352 (= e!70508 e!70509)))

(declare-fun c!19048 () Bool)

(assert (=> b!108352 (= c!19048 (and ((_ is Cons!1619) (toList!790 lt!55124)) (not (= (_1!1207 (h!2217 (toList!790 lt!55124))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!29967 () Bool)

(declare-fun c!19047 () Bool)

(assert (=> d!29967 (= c!19047 (and ((_ is Cons!1619) (toList!790 lt!55124)) (= (_1!1207 (h!2217 (toList!790 lt!55124))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29967 (= (getValueByKey!155 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000) e!70508)))

(declare-fun b!108354 () Bool)

(assert (=> b!108354 (= e!70509 None!159)))

(declare-fun b!108351 () Bool)

(assert (=> b!108351 (= e!70508 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55124)))))))

(assert (= (and d!29967 c!19047) b!108351))

(assert (= (and d!29967 (not c!19047)) b!108352))

(assert (= (and b!108352 c!19048) b!108353))

(assert (= (and b!108352 (not c!19048)) b!108354))

(declare-fun m!121773 () Bool)

(assert (=> b!108353 m!121773))

(assert (=> b!108180 d!29967))

(declare-fun d!29969 () Bool)

(declare-fun e!70510 () Bool)

(assert (=> d!29969 e!70510))

(declare-fun res!53719 () Bool)

(assert (=> d!29969 (=> (not res!53719) (not e!70510))))

(declare-fun lt!55701 () ListLongMap!1549)

(assert (=> d!29969 (= res!53719 (contains!824 lt!55701 (_1!1207 (ite (or c!18964 c!18965) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(declare-fun lt!55704 () List!1623)

(assert (=> d!29969 (= lt!55701 (ListLongMap!1550 lt!55704))))

(declare-fun lt!55702 () Unit!3307)

(declare-fun lt!55703 () Unit!3307)

(assert (=> d!29969 (= lt!55702 lt!55703)))

(assert (=> d!29969 (= (getValueByKey!155 lt!55704 (_1!1207 (ite (or c!18964 c!18965) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))) (Some!160 (_2!1207 (ite (or c!18964 c!18965) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!29969 (= lt!55703 (lemmaContainsTupThenGetReturnValue!74 lt!55704 (_1!1207 (ite (or c!18964 c!18965) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (_2!1207 (ite (or c!18964 c!18965) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!29969 (= lt!55704 (insertStrictlySorted!77 (toList!790 (ite c!18964 call!11463 (ite c!18965 call!11461 call!11462))) (_1!1207 (ite (or c!18964 c!18965) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (_2!1207 (ite (or c!18964 c!18965) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!29969 (= (+!137 (ite c!18964 call!11463 (ite c!18965 call!11461 call!11462)) (ite (or c!18964 c!18965) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) lt!55701)))

(declare-fun b!108355 () Bool)

(declare-fun res!53718 () Bool)

(assert (=> b!108355 (=> (not res!53718) (not e!70510))))

(assert (=> b!108355 (= res!53718 (= (getValueByKey!155 (toList!790 lt!55701) (_1!1207 (ite (or c!18964 c!18965) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))) (Some!160 (_2!1207 (ite (or c!18964 c!18965) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))))

(declare-fun b!108356 () Bool)

(assert (=> b!108356 (= e!70510 (contains!826 (toList!790 lt!55701) (ite (or c!18964 c!18965) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (= (and d!29969 res!53719) b!108355))

(assert (= (and b!108355 res!53718) b!108356))

(declare-fun m!121775 () Bool)

(assert (=> d!29969 m!121775))

(declare-fun m!121777 () Bool)

(assert (=> d!29969 m!121777))

(declare-fun m!121779 () Bool)

(assert (=> d!29969 m!121779))

(declare-fun m!121781 () Bool)

(assert (=> d!29969 m!121781))

(declare-fun m!121783 () Bool)

(assert (=> b!108355 m!121783))

(declare-fun m!121785 () Bool)

(assert (=> b!108356 m!121785))

(assert (=> bm!11461 d!29969))

(declare-fun d!29971 () Bool)

(declare-fun res!53720 () Bool)

(declare-fun e!70511 () Bool)

(assert (=> d!29971 (=> res!53720 e!70511)))

(assert (=> d!29971 (= res!53720 (and ((_ is Cons!1619) lt!55154) (= (_1!1207 (h!2217 lt!55154)) (_1!1207 lt!54977))))))

(assert (=> d!29971 (= (containsKey!159 lt!55154 (_1!1207 lt!54977)) e!70511)))

(declare-fun b!108357 () Bool)

(declare-fun e!70512 () Bool)

(assert (=> b!108357 (= e!70511 e!70512)))

(declare-fun res!53721 () Bool)

(assert (=> b!108357 (=> (not res!53721) (not e!70512))))

(assert (=> b!108357 (= res!53721 (and (or (not ((_ is Cons!1619) lt!55154)) (bvsle (_1!1207 (h!2217 lt!55154)) (_1!1207 lt!54977))) ((_ is Cons!1619) lt!55154) (bvslt (_1!1207 (h!2217 lt!55154)) (_1!1207 lt!54977))))))

(declare-fun b!108358 () Bool)

(assert (=> b!108358 (= e!70512 (containsKey!159 (t!5730 lt!55154) (_1!1207 lt!54977)))))

(assert (= (and d!29971 (not res!53720)) b!108357))

(assert (= (and b!108357 res!53721) b!108358))

(declare-fun m!121787 () Bool)

(assert (=> b!108358 m!121787))

(assert (=> b!108254 d!29971))

(declare-fun d!29973 () Bool)

(assert (=> d!29973 (= (get!1344 (getValueByKey!155 (toList!790 lt!55115) lt!55120)) (v!2910 (getValueByKey!155 (toList!790 lt!55115) lt!55120)))))

(assert (=> d!29789 d!29973))

(declare-fun b!108361 () Bool)

(declare-fun e!70514 () Option!161)

(assert (=> b!108361 (= e!70514 (getValueByKey!155 (t!5730 (toList!790 lt!55115)) lt!55120))))

(declare-fun b!108360 () Bool)

(declare-fun e!70513 () Option!161)

(assert (=> b!108360 (= e!70513 e!70514)))

(declare-fun c!19050 () Bool)

(assert (=> b!108360 (= c!19050 (and ((_ is Cons!1619) (toList!790 lt!55115)) (not (= (_1!1207 (h!2217 (toList!790 lt!55115))) lt!55120))))))

(declare-fun d!29975 () Bool)

(declare-fun c!19049 () Bool)

(assert (=> d!29975 (= c!19049 (and ((_ is Cons!1619) (toList!790 lt!55115)) (= (_1!1207 (h!2217 (toList!790 lt!55115))) lt!55120)))))

(assert (=> d!29975 (= (getValueByKey!155 (toList!790 lt!55115) lt!55120) e!70513)))

(declare-fun b!108362 () Bool)

(assert (=> b!108362 (= e!70514 None!159)))

(declare-fun b!108359 () Bool)

(assert (=> b!108359 (= e!70513 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55115)))))))

(assert (= (and d!29975 c!19049) b!108359))

(assert (= (and d!29975 (not c!19049)) b!108360))

(assert (= (and b!108360 c!19050) b!108361))

(assert (= (and b!108360 (not c!19050)) b!108362))

(declare-fun m!121789 () Bool)

(assert (=> b!108361 m!121789))

(assert (=> d!29789 d!29975))

(declare-fun b!108365 () Bool)

(declare-fun e!70516 () Option!161)

(assert (=> b!108365 (= e!70516 (getValueByKey!155 (t!5730 (toList!790 lt!55406)) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108364 () Bool)

(declare-fun e!70515 () Option!161)

(assert (=> b!108364 (= e!70515 e!70516)))

(declare-fun c!19052 () Bool)

(assert (=> b!108364 (= c!19052 (and ((_ is Cons!1619) (toList!790 lt!55406)) (not (= (_1!1207 (h!2217 (toList!790 lt!55406))) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun c!19051 () Bool)

(declare-fun d!29977 () Bool)

(assert (=> d!29977 (= c!19051 (and ((_ is Cons!1619) (toList!790 lt!55406)) (= (_1!1207 (h!2217 (toList!790 lt!55406))) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!29977 (= (getValueByKey!155 (toList!790 lt!55406) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!70515)))

(declare-fun b!108366 () Bool)

(assert (=> b!108366 (= e!70516 None!159)))

(declare-fun b!108363 () Bool)

(assert (=> b!108363 (= e!70515 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55406)))))))

(assert (= (and d!29977 c!19051) b!108363))

(assert (= (and d!29977 (not c!19051)) b!108364))

(assert (= (and b!108364 c!19052) b!108365))

(assert (= (and b!108364 (not c!19052)) b!108366))

(declare-fun m!121791 () Bool)

(assert (=> b!108365 m!121791))

(assert (=> b!107911 d!29977))

(declare-fun b!108369 () Bool)

(declare-fun e!70518 () Option!161)

(assert (=> b!108369 (= e!70518 (getValueByKey!155 (t!5730 (toList!790 lt!55428)) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108368 () Bool)

(declare-fun e!70517 () Option!161)

(assert (=> b!108368 (= e!70517 e!70518)))

(declare-fun c!19054 () Bool)

(assert (=> b!108368 (= c!19054 (and ((_ is Cons!1619) (toList!790 lt!55428)) (not (= (_1!1207 (h!2217 (toList!790 lt!55428))) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun c!19053 () Bool)

(declare-fun d!29979 () Bool)

(assert (=> d!29979 (= c!19053 (and ((_ is Cons!1619) (toList!790 lt!55428)) (= (_1!1207 (h!2217 (toList!790 lt!55428))) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!29979 (= (getValueByKey!155 (toList!790 lt!55428) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!70517)))

(declare-fun b!108370 () Bool)

(assert (=> b!108370 (= e!70518 None!159)))

(declare-fun b!108367 () Bool)

(assert (=> b!108367 (= e!70517 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55428)))))))

(assert (= (and d!29979 c!19053) b!108367))

(assert (= (and d!29979 (not c!19053)) b!108368))

(assert (= (and b!108368 c!19054) b!108369))

(assert (= (and b!108368 (not c!19054)) b!108370))

(declare-fun m!121793 () Bool)

(assert (=> b!108369 m!121793))

(assert (=> b!107925 d!29979))

(declare-fun d!29981 () Bool)

(assert (=> d!29981 (= (apply!99 lt!55626 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1344 (getValueByKey!155 (toList!790 lt!55626) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4434 () Bool)

(assert (= bs!4434 d!29981))

(assert (=> bs!4434 m!120769))

(assert (=> bs!4434 m!121755))

(assert (=> bs!4434 m!121755))

(declare-fun m!121795 () Bool)

(assert (=> bs!4434 m!121795))

(assert (=> b!108222 d!29981))

(declare-fun d!29983 () Bool)

(declare-fun c!19055 () Bool)

(assert (=> d!29983 (= c!19055 ((_ is ValueCellFull!1001) (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!70519 () V!3233)

(assert (=> d!29983 (= (get!1341 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70519)))

(declare-fun b!108371 () Bool)

(assert (=> b!108371 (= e!70519 (get!1342 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108372 () Bool)

(assert (=> b!108372 (= e!70519 (get!1343 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29983 c!19055) b!108371))

(assert (= (and d!29983 (not c!19055)) b!108372))

(assert (=> b!108371 m!121365))

(assert (=> b!108371 m!121113))

(declare-fun m!121797 () Bool)

(assert (=> b!108371 m!121797))

(assert (=> b!108372 m!121365))

(assert (=> b!108372 m!121113))

(declare-fun m!121799 () Bool)

(assert (=> b!108372 m!121799))

(assert (=> b!108222 d!29983))

(declare-fun bm!11507 () Bool)

(declare-fun call!11511 () List!1623)

(declare-fun call!11510 () List!1623)

(assert (=> bm!11507 (= call!11511 call!11510)))

(declare-fun b!108373 () Bool)

(declare-fun e!70524 () List!1623)

(assert (=> b!108373 (= e!70524 call!11511)))

(declare-fun b!108375 () Bool)

(declare-fun e!70521 () List!1623)

(declare-fun call!11512 () List!1623)

(assert (=> b!108375 (= e!70521 call!11512)))

(declare-fun b!108376 () Bool)

(declare-fun e!70520 () Bool)

(declare-fun lt!55705 () List!1623)

(assert (=> b!108376 (= e!70520 (contains!826 lt!55705 (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(declare-fun b!108377 () Bool)

(declare-fun e!70522 () List!1623)

(assert (=> b!108377 (= e!70522 (insertStrictlySorted!77 (t!5730 (t!5730 (toList!790 lt!54981))) (_1!1207 lt!54977) (_2!1207 lt!54977)))))

(declare-fun b!108378 () Bool)

(declare-fun e!70523 () List!1623)

(assert (=> b!108378 (= e!70523 call!11510)))

(declare-fun c!19056 () Bool)

(declare-fun bm!11508 () Bool)

(assert (=> bm!11508 (= call!11510 ($colon$colon!81 e!70522 (ite c!19056 (h!2217 (t!5730 (toList!790 lt!54981))) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977)))))))

(declare-fun c!19058 () Bool)

(assert (=> bm!11508 (= c!19058 c!19056)))

(declare-fun bm!11509 () Bool)

(assert (=> bm!11509 (= call!11512 call!11511)))

(declare-fun b!108379 () Bool)

(declare-fun c!19059 () Bool)

(assert (=> b!108379 (= c!19059 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!54981))) (bvsgt (_1!1207 (h!2217 (t!5730 (toList!790 lt!54981)))) (_1!1207 lt!54977))))))

(assert (=> b!108379 (= e!70524 e!70521)))

(declare-fun b!108374 () Bool)

(declare-fun res!53723 () Bool)

(assert (=> b!108374 (=> (not res!53723) (not e!70520))))

(assert (=> b!108374 (= res!53723 (containsKey!159 lt!55705 (_1!1207 lt!54977)))))

(declare-fun d!29985 () Bool)

(assert (=> d!29985 e!70520))

(declare-fun res!53722 () Bool)

(assert (=> d!29985 (=> (not res!53722) (not e!70520))))

(assert (=> d!29985 (= res!53722 (isStrictlySorted!305 lt!55705))))

(assert (=> d!29985 (= lt!55705 e!70523)))

(assert (=> d!29985 (= c!19056 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!54981))) (bvslt (_1!1207 (h!2217 (t!5730 (toList!790 lt!54981)))) (_1!1207 lt!54977))))))

(assert (=> d!29985 (isStrictlySorted!305 (t!5730 (toList!790 lt!54981)))))

(assert (=> d!29985 (= (insertStrictlySorted!77 (t!5730 (toList!790 lt!54981)) (_1!1207 lt!54977) (_2!1207 lt!54977)) lt!55705)))

(declare-fun b!108380 () Bool)

(assert (=> b!108380 (= e!70521 call!11512)))

(declare-fun b!108381 () Bool)

(declare-fun c!19057 () Bool)

(assert (=> b!108381 (= e!70522 (ite c!19057 (t!5730 (t!5730 (toList!790 lt!54981))) (ite c!19059 (Cons!1619 (h!2217 (t!5730 (toList!790 lt!54981))) (t!5730 (t!5730 (toList!790 lt!54981)))) Nil!1620)))))

(declare-fun b!108382 () Bool)

(assert (=> b!108382 (= e!70523 e!70524)))

(assert (=> b!108382 (= c!19057 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!54981))) (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!54981)))) (_1!1207 lt!54977))))))

(assert (= (and d!29985 c!19056) b!108378))

(assert (= (and d!29985 (not c!19056)) b!108382))

(assert (= (and b!108382 c!19057) b!108373))

(assert (= (and b!108382 (not c!19057)) b!108379))

(assert (= (and b!108379 c!19059) b!108380))

(assert (= (and b!108379 (not c!19059)) b!108375))

(assert (= (or b!108380 b!108375) bm!11509))

(assert (= (or b!108373 bm!11509) bm!11507))

(assert (= (or b!108378 bm!11507) bm!11508))

(assert (= (and bm!11508 c!19058) b!108377))

(assert (= (and bm!11508 (not c!19058)) b!108381))

(assert (= (and d!29985 res!53722) b!108374))

(assert (= (and b!108374 res!53723) b!108376))

(declare-fun m!121801 () Bool)

(assert (=> b!108376 m!121801))

(declare-fun m!121803 () Bool)

(assert (=> bm!11508 m!121803))

(declare-fun m!121805 () Bool)

(assert (=> b!108374 m!121805))

(declare-fun m!121807 () Bool)

(assert (=> d!29985 m!121807))

(declare-fun m!121809 () Bool)

(assert (=> d!29985 m!121809))

(declare-fun m!121811 () Bool)

(assert (=> b!108377 m!121811))

(assert (=> b!108215 d!29985))

(declare-fun d!29987 () Bool)

(assert (=> d!29987 (= (size!2325 newMap!16) (bvadd (_size!504 newMap!16) (bvsdiv (bvadd (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!107810 d!29987))

(declare-fun d!29989 () Bool)

(assert (=> d!29989 (= (apply!99 lt!55471 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!155 (toList!790 lt!55471) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4435 () Bool)

(assert (= bs!4435 d!29989))

(declare-fun m!121813 () Bool)

(assert (=> bs!4435 m!121813))

(assert (=> bs!4435 m!121813))

(declare-fun m!121815 () Bool)

(assert (=> bs!4435 m!121815))

(assert (=> b!108006 d!29989))

(declare-fun d!29991 () Bool)

(assert (=> d!29991 (= (isDefined!109 (getValueByKey!155 (toList!790 lt!55143) (_1!1207 lt!54985))) (not (isEmpty!379 (getValueByKey!155 (toList!790 lt!55143) (_1!1207 lt!54985)))))))

(declare-fun bs!4436 () Bool)

(assert (= bs!4436 d!29991))

(assert (=> bs!4436 m!120631))

(declare-fun m!121817 () Bool)

(assert (=> bs!4436 m!121817))

(assert (=> b!107931 d!29991))

(assert (=> b!107931 d!29861))

(declare-fun b!108385 () Bool)

(declare-fun e!70526 () Option!161)

(assert (=> b!108385 (= e!70526 (getValueByKey!155 (t!5730 (t!5730 lt!55150)) (_1!1207 lt!54977)))))

(declare-fun b!108384 () Bool)

(declare-fun e!70525 () Option!161)

(assert (=> b!108384 (= e!70525 e!70526)))

(declare-fun c!19061 () Bool)

(assert (=> b!108384 (= c!19061 (and ((_ is Cons!1619) (t!5730 lt!55150)) (not (= (_1!1207 (h!2217 (t!5730 lt!55150))) (_1!1207 lt!54977)))))))

(declare-fun d!29993 () Bool)

(declare-fun c!19060 () Bool)

(assert (=> d!29993 (= c!19060 (and ((_ is Cons!1619) (t!5730 lt!55150)) (= (_1!1207 (h!2217 (t!5730 lt!55150))) (_1!1207 lt!54977))))))

(assert (=> d!29993 (= (getValueByKey!155 (t!5730 lt!55150) (_1!1207 lt!54977)) e!70525)))

(declare-fun b!108386 () Bool)

(assert (=> b!108386 (= e!70526 None!159)))

(declare-fun b!108383 () Bool)

(assert (=> b!108383 (= e!70525 (Some!160 (_2!1207 (h!2217 (t!5730 lt!55150)))))))

(assert (= (and d!29993 c!19060) b!108383))

(assert (= (and d!29993 (not c!19060)) b!108384))

(assert (= (and b!108384 c!19061) b!108385))

(assert (= (and b!108384 (not c!19061)) b!108386))

(declare-fun m!121819 () Bool)

(assert (=> b!108385 m!121819))

(assert (=> b!108207 d!29993))

(declare-fun d!29995 () Bool)

(assert (=> d!29995 (= (apply!99 lt!55471 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!155 (toList!790 lt!55471) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4437 () Bool)

(assert (= bs!4437 d!29995))

(declare-fun m!121821 () Bool)

(assert (=> bs!4437 m!121821))

(assert (=> bs!4437 m!121821))

(declare-fun m!121823 () Bool)

(assert (=> bs!4437 m!121823))

(assert (=> b!107995 d!29995))

(declare-fun d!29997 () Bool)

(declare-fun e!70527 () Bool)

(assert (=> d!29997 e!70527))

(declare-fun res!53724 () Bool)

(assert (=> d!29997 (=> res!53724 e!70527)))

(declare-fun lt!55706 () Bool)

(assert (=> d!29997 (= res!53724 (not lt!55706))))

(declare-fun lt!55707 () Bool)

(assert (=> d!29997 (= lt!55706 lt!55707)))

(declare-fun lt!55709 () Unit!3307)

(declare-fun e!70528 () Unit!3307)

(assert (=> d!29997 (= lt!55709 e!70528)))

(declare-fun c!19062 () Bool)

(assert (=> d!29997 (= c!19062 lt!55707)))

(assert (=> d!29997 (= lt!55707 (containsKey!159 (toList!790 lt!55420) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!29997 (= (contains!824 lt!55420 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55706)))

(declare-fun b!108387 () Bool)

(declare-fun lt!55708 () Unit!3307)

(assert (=> b!108387 (= e!70528 lt!55708)))

(assert (=> b!108387 (= lt!55708 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55420) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> b!108387 (isDefined!109 (getValueByKey!155 (toList!790 lt!55420) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108388 () Bool)

(declare-fun Unit!3345 () Unit!3307)

(assert (=> b!108388 (= e!70528 Unit!3345)))

(declare-fun b!108389 () Bool)

(assert (=> b!108389 (= e!70527 (isDefined!109 (getValueByKey!155 (toList!790 lt!55420) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!29997 c!19062) b!108387))

(assert (= (and d!29997 (not c!19062)) b!108388))

(assert (= (and d!29997 (not res!53724)) b!108389))

(declare-fun m!121825 () Bool)

(assert (=> d!29997 m!121825))

(declare-fun m!121827 () Bool)

(assert (=> b!108387 m!121827))

(assert (=> b!108387 m!120997))

(assert (=> b!108387 m!120997))

(declare-fun m!121829 () Bool)

(assert (=> b!108387 m!121829))

(assert (=> b!108389 m!120997))

(assert (=> b!108389 m!120997))

(assert (=> b!108389 m!121829))

(assert (=> d!29775 d!29997))

(declare-fun b!108392 () Bool)

(declare-fun e!70530 () Option!161)

(assert (=> b!108392 (= e!70530 (getValueByKey!155 (t!5730 lt!55423) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108391 () Bool)

(declare-fun e!70529 () Option!161)

(assert (=> b!108391 (= e!70529 e!70530)))

(declare-fun c!19064 () Bool)

(assert (=> b!108391 (= c!19064 (and ((_ is Cons!1619) lt!55423) (not (= (_1!1207 (h!2217 lt!55423)) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun c!19063 () Bool)

(declare-fun d!29999 () Bool)

(assert (=> d!29999 (= c!19063 (and ((_ is Cons!1619) lt!55423) (= (_1!1207 (h!2217 lt!55423)) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!29999 (= (getValueByKey!155 lt!55423 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!70529)))

(declare-fun b!108393 () Bool)

(assert (=> b!108393 (= e!70530 None!159)))

(declare-fun b!108390 () Bool)

(assert (=> b!108390 (= e!70529 (Some!160 (_2!1207 (h!2217 lt!55423))))))

(assert (= (and d!29999 c!19063) b!108390))

(assert (= (and d!29999 (not c!19063)) b!108391))

(assert (= (and b!108391 c!19064) b!108392))

(assert (= (and b!108391 (not c!19064)) b!108393))

(declare-fun m!121831 () Bool)

(assert (=> b!108392 m!121831))

(assert (=> d!29775 d!29999))

(declare-fun d!30001 () Bool)

(assert (=> d!30001 (= (getValueByKey!155 lt!55423 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!55710 () Unit!3307)

(assert (=> d!30001 (= lt!55710 (choose!679 lt!55423 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun e!70531 () Bool)

(assert (=> d!30001 e!70531))

(declare-fun res!53725 () Bool)

(assert (=> d!30001 (=> (not res!53725) (not e!70531))))

(assert (=> d!30001 (= res!53725 (isStrictlySorted!305 lt!55423))))

(assert (=> d!30001 (= (lemmaContainsTupThenGetReturnValue!74 lt!55423 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55710)))

(declare-fun b!108394 () Bool)

(declare-fun res!53726 () Bool)

(assert (=> b!108394 (=> (not res!53726) (not e!70531))))

(assert (=> b!108394 (= res!53726 (containsKey!159 lt!55423 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108395 () Bool)

(assert (=> b!108395 (= e!70531 (contains!826 lt!55423 (tuple2!2393 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30001 res!53725) b!108394))

(assert (= (and b!108394 res!53726) b!108395))

(assert (=> d!30001 m!120991))

(declare-fun m!121833 () Bool)

(assert (=> d!30001 m!121833))

(declare-fun m!121835 () Bool)

(assert (=> d!30001 m!121835))

(declare-fun m!121837 () Bool)

(assert (=> b!108394 m!121837))

(declare-fun m!121839 () Bool)

(assert (=> b!108395 m!121839))

(assert (=> d!29775 d!30001))

(declare-fun bm!11510 () Bool)

(declare-fun call!11514 () List!1623)

(declare-fun call!11513 () List!1623)

(assert (=> bm!11510 (= call!11514 call!11513)))

(declare-fun b!108396 () Bool)

(declare-fun e!70536 () List!1623)

(assert (=> b!108396 (= e!70536 call!11514)))

(declare-fun b!108398 () Bool)

(declare-fun e!70533 () List!1623)

(declare-fun call!11515 () List!1623)

(assert (=> b!108398 (= e!70533 call!11515)))

(declare-fun e!70532 () Bool)

(declare-fun lt!55711 () List!1623)

(declare-fun b!108399 () Bool)

(assert (=> b!108399 (= e!70532 (contains!826 lt!55711 (tuple2!2393 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun e!70534 () List!1623)

(declare-fun b!108400 () Bool)

(assert (=> b!108400 (= e!70534 (insertStrictlySorted!77 (t!5730 (toList!790 lt!55115)) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108401 () Bool)

(declare-fun e!70535 () List!1623)

(assert (=> b!108401 (= e!70535 call!11513)))

(declare-fun c!19065 () Bool)

(declare-fun bm!11511 () Bool)

(assert (=> bm!11511 (= call!11513 ($colon$colon!81 e!70534 (ite c!19065 (h!2217 (toList!790 lt!55115)) (tuple2!2393 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun c!19067 () Bool)

(assert (=> bm!11511 (= c!19067 c!19065)))

(declare-fun bm!11512 () Bool)

(assert (=> bm!11512 (= call!11515 call!11514)))

(declare-fun b!108402 () Bool)

(declare-fun c!19068 () Bool)

(assert (=> b!108402 (= c!19068 (and ((_ is Cons!1619) (toList!790 lt!55115)) (bvsgt (_1!1207 (h!2217 (toList!790 lt!55115))) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> b!108402 (= e!70536 e!70533)))

(declare-fun b!108397 () Bool)

(declare-fun res!53728 () Bool)

(assert (=> b!108397 (=> (not res!53728) (not e!70532))))

(assert (=> b!108397 (= res!53728 (containsKey!159 lt!55711 (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun d!30003 () Bool)

(assert (=> d!30003 e!70532))

(declare-fun res!53727 () Bool)

(assert (=> d!30003 (=> (not res!53727) (not e!70532))))

(assert (=> d!30003 (= res!53727 (isStrictlySorted!305 lt!55711))))

(assert (=> d!30003 (= lt!55711 e!70535)))

(assert (=> d!30003 (= c!19065 (and ((_ is Cons!1619) (toList!790 lt!55115)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55115))) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30003 (isStrictlySorted!305 (toList!790 lt!55115))))

(assert (=> d!30003 (= (insertStrictlySorted!77 (toList!790 lt!55115) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55711)))

(declare-fun b!108403 () Bool)

(assert (=> b!108403 (= e!70533 call!11515)))

(declare-fun c!19066 () Bool)

(declare-fun b!108404 () Bool)

(assert (=> b!108404 (= e!70534 (ite c!19066 (t!5730 (toList!790 lt!55115)) (ite c!19068 (Cons!1619 (h!2217 (toList!790 lt!55115)) (t!5730 (toList!790 lt!55115))) Nil!1620)))))

(declare-fun b!108405 () Bool)

(assert (=> b!108405 (= e!70535 e!70536)))

(assert (=> b!108405 (= c!19066 (and ((_ is Cons!1619) (toList!790 lt!55115)) (= (_1!1207 (h!2217 (toList!790 lt!55115))) (_1!1207 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30003 c!19065) b!108401))

(assert (= (and d!30003 (not c!19065)) b!108405))

(assert (= (and b!108405 c!19066) b!108396))

(assert (= (and b!108405 (not c!19066)) b!108402))

(assert (= (and b!108402 c!19068) b!108403))

(assert (= (and b!108402 (not c!19068)) b!108398))

(assert (= (or b!108403 b!108398) bm!11512))

(assert (= (or b!108396 bm!11512) bm!11510))

(assert (= (or b!108401 bm!11510) bm!11511))

(assert (= (and bm!11511 c!19067) b!108400))

(assert (= (and bm!11511 (not c!19067)) b!108404))

(assert (= (and d!30003 res!53727) b!108397))

(assert (= (and b!108397 res!53728) b!108399))

(declare-fun m!121841 () Bool)

(assert (=> b!108399 m!121841))

(declare-fun m!121843 () Bool)

(assert (=> bm!11511 m!121843))

(declare-fun m!121845 () Bool)

(assert (=> b!108397 m!121845))

(declare-fun m!121847 () Bool)

(assert (=> d!30003 m!121847))

(declare-fun m!121849 () Bool)

(assert (=> d!30003 m!121849))

(declare-fun m!121851 () Bool)

(assert (=> b!108400 m!121851))

(assert (=> d!29775 d!30003))

(assert (=> d!29907 d!29941))

(declare-fun d!30005 () Bool)

(declare-fun e!70537 () Bool)

(assert (=> d!30005 e!70537))

(declare-fun res!53729 () Bool)

(assert (=> d!30005 (=> res!53729 e!70537)))

(declare-fun lt!55712 () Bool)

(assert (=> d!30005 (= res!53729 (not lt!55712))))

(declare-fun lt!55713 () Bool)

(assert (=> d!30005 (= lt!55712 lt!55713)))

(declare-fun lt!55715 () Unit!3307)

(declare-fun e!70538 () Unit!3307)

(assert (=> d!30005 (= lt!55715 e!70538)))

(declare-fun c!19069 () Bool)

(assert (=> d!30005 (= c!19069 lt!55713)))

(assert (=> d!30005 (= lt!55713 (containsKey!159 (toList!790 lt!55576) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30005 (= (contains!824 lt!55576 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55712)))

(declare-fun b!108406 () Bool)

(declare-fun lt!55714 () Unit!3307)

(assert (=> b!108406 (= e!70538 lt!55714)))

(assert (=> b!108406 (= lt!55714 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55576) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108406 (isDefined!109 (getValueByKey!155 (toList!790 lt!55576) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108407 () Bool)

(declare-fun Unit!3346 () Unit!3307)

(assert (=> b!108407 (= e!70538 Unit!3346)))

(declare-fun b!108408 () Bool)

(assert (=> b!108408 (= e!70537 (isDefined!109 (getValueByKey!155 (toList!790 lt!55576) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30005 c!19069) b!108406))

(assert (= (and d!30005 (not c!19069)) b!108407))

(assert (= (and d!30005 (not res!53729)) b!108408))

(declare-fun m!121853 () Bool)

(assert (=> d!30005 m!121853))

(declare-fun m!121855 () Bool)

(assert (=> b!108406 m!121855))

(declare-fun m!121857 () Bool)

(assert (=> b!108406 m!121857))

(assert (=> b!108406 m!121857))

(declare-fun m!121859 () Bool)

(assert (=> b!108406 m!121859))

(assert (=> b!108408 m!121857))

(assert (=> b!108408 m!121857))

(assert (=> b!108408 m!121859))

(assert (=> bm!11479 d!30005))

(declare-fun d!30007 () Bool)

(assert (=> d!30007 (= (apply!99 lt!55306 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1344 (getValueByKey!155 (toList!790 lt!55306) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4438 () Bool)

(assert (= bs!4438 d!30007))

(assert (=> bs!4438 m!120831))

(declare-fun m!121861 () Bool)

(assert (=> bs!4438 m!121861))

(assert (=> bs!4438 m!121861))

(declare-fun m!121863 () Bool)

(assert (=> bs!4438 m!121863))

(assert (=> b!107834 d!30007))

(declare-fun d!30009 () Bool)

(declare-fun c!19070 () Bool)

(assert (=> d!30009 (= c!19070 ((_ is ValueCellFull!1001) (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!70539 () V!3233)

(assert (=> d!30009 (= (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70539)))

(declare-fun b!108409 () Bool)

(assert (=> b!108409 (= e!70539 (get!1342 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108410 () Bool)

(assert (=> b!108410 (= e!70539 (get!1343 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30009 c!19070) b!108409))

(assert (= (and d!30009 (not c!19070)) b!108410))

(assert (=> b!108409 m!120827))

(assert (=> b!108409 m!120397))

(declare-fun m!121865 () Bool)

(assert (=> b!108409 m!121865))

(assert (=> b!108410 m!120827))

(assert (=> b!108410 m!120397))

(declare-fun m!121867 () Bool)

(assert (=> b!108410 m!121867))

(assert (=> b!107834 d!30009))

(declare-fun d!30011 () Bool)

(assert (=> d!30011 (isDefined!109 (getValueByKey!155 (toList!790 lt!55147) (_1!1207 lt!54977)))))

(declare-fun lt!55716 () Unit!3307)

(assert (=> d!30011 (= lt!55716 (choose!681 (toList!790 lt!55147) (_1!1207 lt!54977)))))

(declare-fun e!70540 () Bool)

(assert (=> d!30011 e!70540))

(declare-fun res!53730 () Bool)

(assert (=> d!30011 (=> (not res!53730) (not e!70540))))

(assert (=> d!30011 (= res!53730 (isStrictlySorted!305 (toList!790 lt!55147)))))

(assert (=> d!30011 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55147) (_1!1207 lt!54977)) lt!55716)))

(declare-fun b!108411 () Bool)

(assert (=> b!108411 (= e!70540 (containsKey!159 (toList!790 lt!55147) (_1!1207 lt!54977)))))

(assert (= (and d!30011 res!53730) b!108411))

(assert (=> d!30011 m!120643))

(assert (=> d!30011 m!120643))

(assert (=> d!30011 m!121469))

(declare-fun m!121869 () Bool)

(assert (=> d!30011 m!121869))

(declare-fun m!121871 () Bool)

(assert (=> d!30011 m!121871))

(assert (=> b!108411 m!121465))

(assert (=> b!108202 d!30011))

(declare-fun d!30013 () Bool)

(assert (=> d!30013 (= (isDefined!109 (getValueByKey!155 (toList!790 lt!55147) (_1!1207 lt!54977))) (not (isEmpty!379 (getValueByKey!155 (toList!790 lt!55147) (_1!1207 lt!54977)))))))

(declare-fun bs!4439 () Bool)

(assert (= bs!4439 d!30013))

(assert (=> bs!4439 m!120643))

(declare-fun m!121873 () Bool)

(assert (=> bs!4439 m!121873))

(assert (=> b!108202 d!30013))

(assert (=> b!108202 d!29831))

(declare-fun d!30015 () Bool)

(declare-fun res!53731 () Bool)

(declare-fun e!70541 () Bool)

(assert (=> d!30015 (=> res!53731 e!70541)))

(assert (=> d!30015 (= res!53731 (and ((_ is Cons!1619) (toList!790 lt!55124)) (= (_1!1207 (h!2217 (toList!790 lt!55124))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30015 (= (containsKey!159 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000) e!70541)))

(declare-fun b!108412 () Bool)

(declare-fun e!70542 () Bool)

(assert (=> b!108412 (= e!70541 e!70542)))

(declare-fun res!53732 () Bool)

(assert (=> b!108412 (=> (not res!53732) (not e!70542))))

(assert (=> b!108412 (= res!53732 (and (or (not ((_ is Cons!1619) (toList!790 lt!55124))) (bvsle (_1!1207 (h!2217 (toList!790 lt!55124))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1619) (toList!790 lt!55124)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55124))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108413 () Bool)

(assert (=> b!108413 (= e!70542 (containsKey!159 (t!5730 (toList!790 lt!55124)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30015 (not res!53731)) b!108412))

(assert (= (and b!108412 res!53732) b!108413))

(declare-fun m!121875 () Bool)

(assert (=> b!108413 m!121875))

(assert (=> d!29881 d!30015))

(declare-fun b!108416 () Bool)

(declare-fun e!70544 () Option!161)

(assert (=> b!108416 (= e!70544 (getValueByKey!155 (t!5730 (toList!790 lt!55484)) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108415 () Bool)

(declare-fun e!70543 () Option!161)

(assert (=> b!108415 (= e!70543 e!70544)))

(declare-fun c!19072 () Bool)

(assert (=> b!108415 (= c!19072 (and ((_ is Cons!1619) (toList!790 lt!55484)) (not (= (_1!1207 (h!2217 (toList!790 lt!55484))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun d!30017 () Bool)

(declare-fun c!19071 () Bool)

(assert (=> d!30017 (= c!19071 (and ((_ is Cons!1619) (toList!790 lt!55484)) (= (_1!1207 (h!2217 (toList!790 lt!55484))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30017 (= (getValueByKey!155 (toList!790 lt!55484) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!70543)))

(declare-fun b!108417 () Bool)

(assert (=> b!108417 (= e!70544 None!159)))

(declare-fun b!108414 () Bool)

(assert (=> b!108414 (= e!70543 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55484)))))))

(assert (= (and d!30017 c!19071) b!108414))

(assert (= (and d!30017 (not c!19071)) b!108415))

(assert (= (and b!108415 c!19072) b!108416))

(assert (= (and b!108415 (not c!19072)) b!108417))

(declare-fun m!121877 () Bool)

(assert (=> b!108416 m!121877))

(assert (=> b!108035 d!30017))

(declare-fun d!30019 () Bool)

(assert (=> d!30019 (contains!824 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253)))))

(assert (=> d!30019 true))

(declare-fun _$16!129 () Unit!3307)

(assert (=> d!30019 (= (choose!682 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (index!3202 lt!55253) (defaultEntry!2605 newMap!16)) _$16!129)))

(declare-fun bs!4440 () Bool)

(assert (= bs!4440 d!30019))

(assert (=> bs!4440 m!120727))

(assert (=> bs!4440 m!120729))

(assert (=> bs!4440 m!120727))

(assert (=> bs!4440 m!120729))

(assert (=> bs!4440 m!120731))

(assert (=> d!29857 d!30019))

(assert (=> d!29857 d!29941))

(declare-fun bm!11513 () Bool)

(declare-fun call!11517 () List!1623)

(declare-fun call!11516 () List!1623)

(assert (=> bm!11513 (= call!11517 call!11516)))

(declare-fun b!108418 () Bool)

(declare-fun e!70549 () List!1623)

(assert (=> b!108418 (= e!70549 call!11517)))

(declare-fun b!108420 () Bool)

(declare-fun e!70546 () List!1623)

(declare-fun call!11518 () List!1623)

(assert (=> b!108420 (= e!70546 call!11518)))

(declare-fun b!108421 () Bool)

(declare-fun e!70545 () Bool)

(declare-fun lt!55717 () List!1623)

(assert (=> b!108421 (= e!70545 (contains!826 lt!55717 (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(declare-fun e!70547 () List!1623)

(declare-fun b!108422 () Bool)

(assert (=> b!108422 (= e!70547 (insertStrictlySorted!77 (t!5730 (t!5730 (toList!790 (+!137 lt!54981 lt!54985)))) (_1!1207 lt!54977) (_2!1207 lt!54977)))))

(declare-fun b!108423 () Bool)

(declare-fun e!70548 () List!1623)

(assert (=> b!108423 (= e!70548 call!11516)))

(declare-fun c!19073 () Bool)

(declare-fun bm!11514 () Bool)

(assert (=> bm!11514 (= call!11516 ($colon$colon!81 e!70547 (ite c!19073 (h!2217 (t!5730 (toList!790 (+!137 lt!54981 lt!54985)))) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977)))))))

(declare-fun c!19075 () Bool)

(assert (=> bm!11514 (= c!19075 c!19073)))

(declare-fun bm!11515 () Bool)

(assert (=> bm!11515 (= call!11518 call!11517)))

(declare-fun c!19076 () Bool)

(declare-fun b!108424 () Bool)

(assert (=> b!108424 (= c!19076 (and ((_ is Cons!1619) (t!5730 (toList!790 (+!137 lt!54981 lt!54985)))) (bvsgt (_1!1207 (h!2217 (t!5730 (toList!790 (+!137 lt!54981 lt!54985))))) (_1!1207 lt!54977))))))

(assert (=> b!108424 (= e!70549 e!70546)))

(declare-fun b!108419 () Bool)

(declare-fun res!53734 () Bool)

(assert (=> b!108419 (=> (not res!53734) (not e!70545))))

(assert (=> b!108419 (= res!53734 (containsKey!159 lt!55717 (_1!1207 lt!54977)))))

(declare-fun d!30021 () Bool)

(assert (=> d!30021 e!70545))

(declare-fun res!53733 () Bool)

(assert (=> d!30021 (=> (not res!53733) (not e!70545))))

(assert (=> d!30021 (= res!53733 (isStrictlySorted!305 lt!55717))))

(assert (=> d!30021 (= lt!55717 e!70548)))

(assert (=> d!30021 (= c!19073 (and ((_ is Cons!1619) (t!5730 (toList!790 (+!137 lt!54981 lt!54985)))) (bvslt (_1!1207 (h!2217 (t!5730 (toList!790 (+!137 lt!54981 lt!54985))))) (_1!1207 lt!54977))))))

(assert (=> d!30021 (isStrictlySorted!305 (t!5730 (toList!790 (+!137 lt!54981 lt!54985))))))

(assert (=> d!30021 (= (insertStrictlySorted!77 (t!5730 (toList!790 (+!137 lt!54981 lt!54985))) (_1!1207 lt!54977) (_2!1207 lt!54977)) lt!55717)))

(declare-fun b!108425 () Bool)

(assert (=> b!108425 (= e!70546 call!11518)))

(declare-fun b!108426 () Bool)

(declare-fun c!19074 () Bool)

(assert (=> b!108426 (= e!70547 (ite c!19074 (t!5730 (t!5730 (toList!790 (+!137 lt!54981 lt!54985)))) (ite c!19076 (Cons!1619 (h!2217 (t!5730 (toList!790 (+!137 lt!54981 lt!54985)))) (t!5730 (t!5730 (toList!790 (+!137 lt!54981 lt!54985))))) Nil!1620)))))

(declare-fun b!108427 () Bool)

(assert (=> b!108427 (= e!70548 e!70549)))

(assert (=> b!108427 (= c!19074 (and ((_ is Cons!1619) (t!5730 (toList!790 (+!137 lt!54981 lt!54985)))) (= (_1!1207 (h!2217 (t!5730 (toList!790 (+!137 lt!54981 lt!54985))))) (_1!1207 lt!54977))))))

(assert (= (and d!30021 c!19073) b!108423))

(assert (= (and d!30021 (not c!19073)) b!108427))

(assert (= (and b!108427 c!19074) b!108418))

(assert (= (and b!108427 (not c!19074)) b!108424))

(assert (= (and b!108424 c!19076) b!108425))

(assert (= (and b!108424 (not c!19076)) b!108420))

(assert (= (or b!108425 b!108420) bm!11515))

(assert (= (or b!108418 bm!11515) bm!11513))

(assert (= (or b!108423 bm!11513) bm!11514))

(assert (= (and bm!11514 c!19075) b!108422))

(assert (= (and bm!11514 (not c!19075)) b!108426))

(assert (= (and d!30021 res!53733) b!108419))

(assert (= (and b!108419 res!53734) b!108421))

(declare-fun m!121879 () Bool)

(assert (=> b!108421 m!121879))

(declare-fun m!121881 () Bool)

(assert (=> bm!11514 m!121881))

(declare-fun m!121883 () Bool)

(assert (=> b!108419 m!121883))

(declare-fun m!121885 () Bool)

(assert (=> d!30021 m!121885))

(declare-fun m!121887 () Bool)

(assert (=> d!30021 m!121887))

(declare-fun m!121889 () Bool)

(assert (=> b!108422 m!121889))

(assert (=> b!108260 d!30021))

(declare-fun b!108430 () Bool)

(declare-fun e!70551 () Option!161)

(assert (=> b!108430 (= e!70551 (getValueByKey!155 (t!5730 (t!5730 lt!55154)) (_1!1207 lt!54977)))))

(declare-fun b!108429 () Bool)

(declare-fun e!70550 () Option!161)

(assert (=> b!108429 (= e!70550 e!70551)))

(declare-fun c!19078 () Bool)

(assert (=> b!108429 (= c!19078 (and ((_ is Cons!1619) (t!5730 lt!55154)) (not (= (_1!1207 (h!2217 (t!5730 lt!55154))) (_1!1207 lt!54977)))))))

(declare-fun d!30023 () Bool)

(declare-fun c!19077 () Bool)

(assert (=> d!30023 (= c!19077 (and ((_ is Cons!1619) (t!5730 lt!55154)) (= (_1!1207 (h!2217 (t!5730 lt!55154))) (_1!1207 lt!54977))))))

(assert (=> d!30023 (= (getValueByKey!155 (t!5730 lt!55154) (_1!1207 lt!54977)) e!70550)))

(declare-fun b!108431 () Bool)

(assert (=> b!108431 (= e!70551 None!159)))

(declare-fun b!108428 () Bool)

(assert (=> b!108428 (= e!70550 (Some!160 (_2!1207 (h!2217 (t!5730 lt!55154)))))))

(assert (= (and d!30023 c!19077) b!108428))

(assert (= (and d!30023 (not c!19077)) b!108429))

(assert (= (and b!108429 c!19078) b!108430))

(assert (= (and b!108429 (not c!19078)) b!108431))

(declare-fun m!121891 () Bool)

(assert (=> b!108430 m!121891))

(assert (=> b!108252 d!30023))

(declare-fun d!30025 () Bool)

(declare-fun e!70552 () Bool)

(assert (=> d!30025 e!70552))

(declare-fun res!53735 () Bool)

(assert (=> d!30025 (=> res!53735 e!70552)))

(declare-fun lt!55718 () Bool)

(assert (=> d!30025 (= res!53735 (not lt!55718))))

(declare-fun lt!55719 () Bool)

(assert (=> d!30025 (= lt!55718 lt!55719)))

(declare-fun lt!55721 () Unit!3307)

(declare-fun e!70553 () Unit!3307)

(assert (=> d!30025 (= lt!55721 e!70553)))

(declare-fun c!19079 () Bool)

(assert (=> d!30025 (= c!19079 lt!55719)))

(assert (=> d!30025 (= lt!55719 (containsKey!159 (toList!790 lt!55533) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30025 (= (contains!824 lt!55533 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55718)))

(declare-fun b!108432 () Bool)

(declare-fun lt!55720 () Unit!3307)

(assert (=> b!108432 (= e!70553 lt!55720)))

(assert (=> b!108432 (= lt!55720 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55533) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108432 (isDefined!109 (getValueByKey!155 (toList!790 lt!55533) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108433 () Bool)

(declare-fun Unit!3347 () Unit!3307)

(assert (=> b!108433 (= e!70553 Unit!3347)))

(declare-fun b!108434 () Bool)

(assert (=> b!108434 (= e!70552 (isDefined!109 (getValueByKey!155 (toList!790 lt!55533) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30025 c!19079) b!108432))

(assert (= (and d!30025 (not c!19079)) b!108433))

(assert (= (and d!30025 (not res!53735)) b!108434))

(declare-fun m!121893 () Bool)

(assert (=> d!30025 m!121893))

(declare-fun m!121895 () Bool)

(assert (=> b!108432 m!121895))

(declare-fun m!121897 () Bool)

(assert (=> b!108432 m!121897))

(assert (=> b!108432 m!121897))

(declare-fun m!121899 () Bool)

(assert (=> b!108432 m!121899))

(assert (=> b!108434 m!121897))

(assert (=> b!108434 m!121897))

(assert (=> b!108434 m!121899))

(assert (=> bm!11457 d!30025))

(declare-fun d!30027 () Bool)

(declare-fun res!53737 () Bool)

(declare-fun e!70555 () Bool)

(assert (=> d!30027 (=> res!53737 e!70555)))

(assert (=> d!30027 (= res!53737 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55257)))))))

(assert (=> d!30027 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4314 (_2!1206 lt!55257)) (mask!6762 (_2!1206 lt!55257))) e!70555)))

(declare-fun b!108435 () Bool)

(declare-fun e!70554 () Bool)

(declare-fun e!70556 () Bool)

(assert (=> b!108435 (= e!70554 e!70556)))

(declare-fun lt!55723 () (_ BitVec 64))

(assert (=> b!108435 (= lt!55723 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000))))

(declare-fun lt!55722 () Unit!3307)

(assert (=> b!108435 (= lt!55722 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4314 (_2!1206 lt!55257)) lt!55723 #b00000000000000000000000000000000))))

(assert (=> b!108435 (arrayContainsKey!0 (_keys!4314 (_2!1206 lt!55257)) lt!55723 #b00000000000000000000000000000000)))

(declare-fun lt!55724 () Unit!3307)

(assert (=> b!108435 (= lt!55724 lt!55722)))

(declare-fun res!53736 () Bool)

(assert (=> b!108435 (= res!53736 (= (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000) (_keys!4314 (_2!1206 lt!55257)) (mask!6762 (_2!1206 lt!55257))) (Found!263 #b00000000000000000000000000000000)))))

(assert (=> b!108435 (=> (not res!53736) (not e!70556))))

(declare-fun bm!11516 () Bool)

(declare-fun call!11519 () Bool)

(assert (=> bm!11516 (= call!11519 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4314 (_2!1206 lt!55257)) (mask!6762 (_2!1206 lt!55257))))))

(declare-fun b!108436 () Bool)

(assert (=> b!108436 (= e!70556 call!11519)))

(declare-fun b!108437 () Bool)

(assert (=> b!108437 (= e!70555 e!70554)))

(declare-fun c!19080 () Bool)

(assert (=> b!108437 (= c!19080 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000)))))

(declare-fun b!108438 () Bool)

(assert (=> b!108438 (= e!70554 call!11519)))

(assert (= (and d!30027 (not res!53737)) b!108437))

(assert (= (and b!108437 c!19080) b!108435))

(assert (= (and b!108437 (not c!19080)) b!108438))

(assert (= (and b!108435 res!53736) b!108436))

(assert (= (or b!108436 b!108438) bm!11516))

(assert (=> b!108435 m!121643))

(declare-fun m!121901 () Bool)

(assert (=> b!108435 m!121901))

(declare-fun m!121903 () Bool)

(assert (=> b!108435 m!121903))

(assert (=> b!108435 m!121643))

(declare-fun m!121905 () Bool)

(assert (=> b!108435 m!121905))

(declare-fun m!121907 () Bool)

(assert (=> bm!11516 m!121907))

(assert (=> b!108437 m!121643))

(assert (=> b!108437 m!121643))

(assert (=> b!108437 m!121649))

(assert (=> b!107983 d!30027))

(assert (=> d!29787 d!29769))

(declare-fun d!30029 () Bool)

(declare-fun e!70557 () Bool)

(assert (=> d!30029 e!70557))

(declare-fun res!53738 () Bool)

(assert (=> d!30029 (=> res!53738 e!70557)))

(declare-fun lt!55725 () Bool)

(assert (=> d!30029 (= res!53738 (not lt!55725))))

(declare-fun lt!55726 () Bool)

(assert (=> d!30029 (= lt!55725 lt!55726)))

(declare-fun lt!55728 () Unit!3307)

(declare-fun e!70558 () Unit!3307)

(assert (=> d!30029 (= lt!55728 e!70558)))

(declare-fun c!19081 () Bool)

(assert (=> d!30029 (= c!19081 lt!55726)))

(assert (=> d!30029 (= lt!55726 (containsKey!159 (toList!790 lt!55109) lt!55125))))

(assert (=> d!30029 (= (contains!824 lt!55109 lt!55125) lt!55725)))

(declare-fun b!108439 () Bool)

(declare-fun lt!55727 () Unit!3307)

(assert (=> b!108439 (= e!70558 lt!55727)))

(assert (=> b!108439 (= lt!55727 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55109) lt!55125))))

(assert (=> b!108439 (isDefined!109 (getValueByKey!155 (toList!790 lt!55109) lt!55125))))

(declare-fun b!108440 () Bool)

(declare-fun Unit!3348 () Unit!3307)

(assert (=> b!108440 (= e!70558 Unit!3348)))

(declare-fun b!108441 () Bool)

(assert (=> b!108441 (= e!70557 (isDefined!109 (getValueByKey!155 (toList!790 lt!55109) lt!55125)))))

(assert (= (and d!30029 c!19081) b!108439))

(assert (= (and d!30029 (not c!19081)) b!108440))

(assert (= (and d!30029 (not res!53738)) b!108441))

(declare-fun m!121909 () Bool)

(assert (=> d!30029 m!121909))

(declare-fun m!121911 () Bool)

(assert (=> b!108439 m!121911))

(assert (=> b!108439 m!121025))

(assert (=> b!108439 m!121025))

(declare-fun m!121913 () Bool)

(assert (=> b!108439 m!121913))

(assert (=> b!108441 m!121025))

(assert (=> b!108441 m!121025))

(assert (=> b!108441 m!121913))

(assert (=> d!29787 d!30029))

(assert (=> d!29787 d!29781))

(declare-fun d!30031 () Bool)

(assert (=> d!30031 (= (apply!99 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55125) (apply!99 lt!55109 lt!55125))))

(assert (=> d!30031 true))

(declare-fun _$34!895 () Unit!3307)

(assert (=> d!30031 (= (choose!677 lt!55109 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55125) _$34!895)))

(declare-fun bs!4441 () Bool)

(assert (= bs!4441 d!30031))

(assert (=> bs!4441 m!120587))

(assert (=> bs!4441 m!120587))

(assert (=> bs!4441 m!120593))

(assert (=> bs!4441 m!120573))

(assert (=> d!29787 d!30031))

(assert (=> d!29787 d!29783))

(declare-fun d!30033 () Bool)

(declare-fun e!70559 () Bool)

(assert (=> d!30033 e!70559))

(declare-fun res!53739 () Bool)

(assert (=> d!30033 (=> res!53739 e!70559)))

(declare-fun lt!55729 () Bool)

(assert (=> d!30033 (= res!53739 (not lt!55729))))

(declare-fun lt!55730 () Bool)

(assert (=> d!30033 (= lt!55729 lt!55730)))

(declare-fun lt!55732 () Unit!3307)

(declare-fun e!70560 () Unit!3307)

(assert (=> d!30033 (= lt!55732 e!70560)))

(declare-fun c!19082 () Bool)

(assert (=> d!30033 (= c!19082 lt!55730)))

(assert (=> d!30033 (= lt!55730 (containsKey!159 (toList!790 lt!55306) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!30033 (= (contains!824 lt!55306 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!55729)))

(declare-fun b!108443 () Bool)

(declare-fun lt!55731 () Unit!3307)

(assert (=> b!108443 (= e!70560 lt!55731)))

(assert (=> b!108443 (= lt!55731 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55306) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!108443 (isDefined!109 (getValueByKey!155 (toList!790 lt!55306) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!108444 () Bool)

(declare-fun Unit!3349 () Unit!3307)

(assert (=> b!108444 (= e!70560 Unit!3349)))

(declare-fun b!108445 () Bool)

(assert (=> b!108445 (= e!70559 (isDefined!109 (getValueByKey!155 (toList!790 lt!55306) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!30033 c!19082) b!108443))

(assert (= (and d!30033 (not c!19082)) b!108444))

(assert (= (and d!30033 (not res!53739)) b!108445))

(assert (=> d!30033 m!120831))

(declare-fun m!121915 () Bool)

(assert (=> d!30033 m!121915))

(assert (=> b!108443 m!120831))

(declare-fun m!121917 () Bool)

(assert (=> b!108443 m!121917))

(assert (=> b!108443 m!120831))

(assert (=> b!108443 m!121861))

(assert (=> b!108443 m!121861))

(declare-fun m!121919 () Bool)

(assert (=> b!108443 m!121919))

(assert (=> b!108445 m!120831))

(assert (=> b!108445 m!121861))

(assert (=> b!108445 m!121861))

(assert (=> b!108445 m!121919))

(assert (=> b!107840 d!30033))

(declare-fun d!30035 () Bool)

(declare-fun res!53740 () Bool)

(declare-fun e!70561 () Bool)

(assert (=> d!30035 (=> res!53740 e!70561)))

(assert (=> d!30035 (= res!53740 (and ((_ is Cons!1619) lt!55546) (= (_1!1207 (h!2217 lt!55546)) (_1!1207 lt!54985))))))

(assert (=> d!30035 (= (containsKey!159 lt!55546 (_1!1207 lt!54985)) e!70561)))

(declare-fun b!108446 () Bool)

(declare-fun e!70562 () Bool)

(assert (=> b!108446 (= e!70561 e!70562)))

(declare-fun res!53741 () Bool)

(assert (=> b!108446 (=> (not res!53741) (not e!70562))))

(assert (=> b!108446 (= res!53741 (and (or (not ((_ is Cons!1619) lt!55546)) (bvsle (_1!1207 (h!2217 lt!55546)) (_1!1207 lt!54985))) ((_ is Cons!1619) lt!55546) (bvslt (_1!1207 (h!2217 lt!55546)) (_1!1207 lt!54985))))))

(declare-fun b!108447 () Bool)

(assert (=> b!108447 (= e!70562 (containsKey!159 (t!5730 lt!55546) (_1!1207 lt!54985)))))

(assert (= (and d!30035 (not res!53740)) b!108446))

(assert (= (and b!108446 res!53741) b!108447))

(declare-fun m!121921 () Bool)

(assert (=> b!108447 m!121921))

(assert (=> b!108105 d!30035))

(declare-fun d!30037 () Bool)

(assert (=> d!30037 (isDefined!109 (getValueByKey!155 (toList!790 lt!55151) (_1!1207 lt!54977)))))

(declare-fun lt!55733 () Unit!3307)

(assert (=> d!30037 (= lt!55733 (choose!681 (toList!790 lt!55151) (_1!1207 lt!54977)))))

(declare-fun e!70563 () Bool)

(assert (=> d!30037 e!70563))

(declare-fun res!53742 () Bool)

(assert (=> d!30037 (=> (not res!53742) (not e!70563))))

(assert (=> d!30037 (= res!53742 (isStrictlySorted!305 (toList!790 lt!55151)))))

(assert (=> d!30037 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55151) (_1!1207 lt!54977)) lt!55733)))

(declare-fun b!108448 () Bool)

(assert (=> b!108448 (= e!70563 (containsKey!159 (toList!790 lt!55151) (_1!1207 lt!54977)))))

(assert (= (and d!30037 res!53742) b!108448))

(assert (=> d!30037 m!120655))

(assert (=> d!30037 m!120655))

(assert (=> d!30037 m!121563))

(declare-fun m!121923 () Bool)

(assert (=> d!30037 m!121923))

(declare-fun m!121925 () Bool)

(assert (=> d!30037 m!121925))

(assert (=> b!108448 m!121559))

(assert (=> b!108247 d!30037))

(declare-fun d!30039 () Bool)

(assert (=> d!30039 (= (isDefined!109 (getValueByKey!155 (toList!790 lt!55151) (_1!1207 lt!54977))) (not (isEmpty!379 (getValueByKey!155 (toList!790 lt!55151) (_1!1207 lt!54977)))))))

(declare-fun bs!4442 () Bool)

(assert (= bs!4442 d!30039))

(assert (=> bs!4442 m!120655))

(declare-fun m!121927 () Bool)

(assert (=> bs!4442 m!121927))

(assert (=> b!108247 d!30039))

(assert (=> b!108247 d!29879))

(declare-fun d!30041 () Bool)

(declare-fun e!70564 () Bool)

(assert (=> d!30041 e!70564))

(declare-fun res!53744 () Bool)

(assert (=> d!30041 (=> (not res!53744) (not e!70564))))

(declare-fun lt!55734 () ListLongMap!1549)

(assert (=> d!30041 (= res!53744 (contains!824 lt!55734 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun lt!55737 () List!1623)

(assert (=> d!30041 (= lt!55734 (ListLongMap!1550 lt!55737))))

(declare-fun lt!55735 () Unit!3307)

(declare-fun lt!55736 () Unit!3307)

(assert (=> d!30041 (= lt!55735 lt!55736)))

(assert (=> d!30041 (= (getValueByKey!155 lt!55737 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30041 (= lt!55736 (lemmaContainsTupThenGetReturnValue!74 lt!55737 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30041 (= lt!55737 (insertStrictlySorted!77 (toList!790 call!11483) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30041 (= (+!137 call!11483 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) lt!55734)))

(declare-fun b!108449 () Bool)

(declare-fun res!53743 () Bool)

(assert (=> b!108449 (=> (not res!53743) (not e!70564))))

(assert (=> b!108449 (= res!53743 (= (getValueByKey!155 (toList!790 lt!55734) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(declare-fun b!108450 () Bool)

(assert (=> b!108450 (= e!70564 (contains!826 (toList!790 lt!55734) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(assert (= (and d!30041 res!53744) b!108449))

(assert (= (and b!108449 res!53743) b!108450))

(declare-fun m!121929 () Bool)

(assert (=> d!30041 m!121929))

(declare-fun m!121931 () Bool)

(assert (=> d!30041 m!121931))

(declare-fun m!121933 () Bool)

(assert (=> d!30041 m!121933))

(declare-fun m!121935 () Bool)

(assert (=> d!30041 m!121935))

(declare-fun m!121937 () Bool)

(assert (=> b!108449 m!121937))

(declare-fun m!121939 () Bool)

(assert (=> b!108450 m!121939))

(assert (=> b!108163 d!30041))

(declare-fun d!30043 () Bool)

(declare-fun e!70565 () Bool)

(assert (=> d!30043 e!70565))

(declare-fun res!53745 () Bool)

(assert (=> d!30043 (=> res!53745 e!70565)))

(declare-fun lt!55738 () Bool)

(assert (=> d!30043 (= res!53745 (not lt!55738))))

(declare-fun lt!55739 () Bool)

(assert (=> d!30043 (= lt!55738 lt!55739)))

(declare-fun lt!55741 () Unit!3307)

(declare-fun e!70566 () Unit!3307)

(assert (=> d!30043 (= lt!55741 e!70566)))

(declare-fun c!19083 () Bool)

(assert (=> d!30043 (= c!19083 lt!55739)))

(assert (=> d!30043 (= lt!55739 (containsKey!159 (toList!790 lt!55410) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!30043 (= (contains!824 lt!55410 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55738)))

(declare-fun b!108451 () Bool)

(declare-fun lt!55740 () Unit!3307)

(assert (=> b!108451 (= e!70566 lt!55740)))

(assert (=> b!108451 (= lt!55740 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55410) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> b!108451 (isDefined!109 (getValueByKey!155 (toList!790 lt!55410) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108452 () Bool)

(declare-fun Unit!3350 () Unit!3307)

(assert (=> b!108452 (= e!70566 Unit!3350)))

(declare-fun b!108453 () Bool)

(assert (=> b!108453 (= e!70565 (isDefined!109 (getValueByKey!155 (toList!790 lt!55410) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30043 c!19083) b!108451))

(assert (= (and d!30043 (not c!19083)) b!108452))

(assert (= (and d!30043 (not res!53745)) b!108453))

(declare-fun m!121941 () Bool)

(assert (=> d!30043 m!121941))

(declare-fun m!121943 () Bool)

(assert (=> b!108451 m!121943))

(assert (=> b!108451 m!120969))

(assert (=> b!108451 m!120969))

(declare-fun m!121945 () Bool)

(assert (=> b!108451 m!121945))

(assert (=> b!108453 m!120969))

(assert (=> b!108453 m!120969))

(assert (=> b!108453 m!121945))

(assert (=> d!29765 d!30043))

(declare-fun b!108456 () Bool)

(declare-fun e!70568 () Option!161)

(assert (=> b!108456 (= e!70568 (getValueByKey!155 (t!5730 lt!55413) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108455 () Bool)

(declare-fun e!70567 () Option!161)

(assert (=> b!108455 (= e!70567 e!70568)))

(declare-fun c!19085 () Bool)

(assert (=> b!108455 (= c!19085 (and ((_ is Cons!1619) lt!55413) (not (= (_1!1207 (h!2217 lt!55413)) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun d!30045 () Bool)

(declare-fun c!19084 () Bool)

(assert (=> d!30045 (= c!19084 (and ((_ is Cons!1619) lt!55413) (= (_1!1207 (h!2217 lt!55413)) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30045 (= (getValueByKey!155 lt!55413 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!70567)))

(declare-fun b!108457 () Bool)

(assert (=> b!108457 (= e!70568 None!159)))

(declare-fun b!108454 () Bool)

(assert (=> b!108454 (= e!70567 (Some!160 (_2!1207 (h!2217 lt!55413))))))

(assert (= (and d!30045 c!19084) b!108454))

(assert (= (and d!30045 (not c!19084)) b!108455))

(assert (= (and b!108455 c!19085) b!108456))

(assert (= (and b!108455 (not c!19085)) b!108457))

(declare-fun m!121947 () Bool)

(assert (=> b!108456 m!121947))

(assert (=> d!29765 d!30045))

(declare-fun d!30047 () Bool)

(assert (=> d!30047 (= (getValueByKey!155 lt!55413 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!55742 () Unit!3307)

(assert (=> d!30047 (= lt!55742 (choose!679 lt!55413 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun e!70569 () Bool)

(assert (=> d!30047 e!70569))

(declare-fun res!53746 () Bool)

(assert (=> d!30047 (=> (not res!53746) (not e!70569))))

(assert (=> d!30047 (= res!53746 (isStrictlySorted!305 lt!55413))))

(assert (=> d!30047 (= (lemmaContainsTupThenGetReturnValue!74 lt!55413 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55742)))

(declare-fun b!108458 () Bool)

(declare-fun res!53747 () Bool)

(assert (=> b!108458 (=> (not res!53747) (not e!70569))))

(assert (=> b!108458 (= res!53747 (containsKey!159 lt!55413 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108459 () Bool)

(assert (=> b!108459 (= e!70569 (contains!826 lt!55413 (tuple2!2393 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30047 res!53746) b!108458))

(assert (= (and b!108458 res!53747) b!108459))

(assert (=> d!30047 m!120963))

(declare-fun m!121949 () Bool)

(assert (=> d!30047 m!121949))

(declare-fun m!121951 () Bool)

(assert (=> d!30047 m!121951))

(declare-fun m!121953 () Bool)

(assert (=> b!108458 m!121953))

(declare-fun m!121955 () Bool)

(assert (=> b!108459 m!121955))

(assert (=> d!29765 d!30047))

(declare-fun bm!11517 () Bool)

(declare-fun call!11521 () List!1623)

(declare-fun call!11520 () List!1623)

(assert (=> bm!11517 (= call!11521 call!11520)))

(declare-fun b!108460 () Bool)

(declare-fun e!70574 () List!1623)

(assert (=> b!108460 (= e!70574 call!11521)))

(declare-fun b!108462 () Bool)

(declare-fun e!70571 () List!1623)

(declare-fun call!11522 () List!1623)

(assert (=> b!108462 (= e!70571 call!11522)))

(declare-fun lt!55743 () List!1623)

(declare-fun b!108463 () Bool)

(declare-fun e!70570 () Bool)

(assert (=> b!108463 (= e!70570 (contains!826 lt!55743 (tuple2!2393 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun e!70572 () List!1623)

(declare-fun b!108464 () Bool)

(assert (=> b!108464 (= e!70572 (insertStrictlySorted!77 (t!5730 (toList!790 lt!55121)) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108465 () Bool)

(declare-fun e!70573 () List!1623)

(assert (=> b!108465 (= e!70573 call!11520)))

(declare-fun bm!11518 () Bool)

(declare-fun c!19086 () Bool)

(assert (=> bm!11518 (= call!11520 ($colon$colon!81 e!70572 (ite c!19086 (h!2217 (toList!790 lt!55121)) (tuple2!2393 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun c!19088 () Bool)

(assert (=> bm!11518 (= c!19088 c!19086)))

(declare-fun bm!11519 () Bool)

(assert (=> bm!11519 (= call!11522 call!11521)))

(declare-fun c!19089 () Bool)

(declare-fun b!108466 () Bool)

(assert (=> b!108466 (= c!19089 (and ((_ is Cons!1619) (toList!790 lt!55121)) (bvsgt (_1!1207 (h!2217 (toList!790 lt!55121))) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> b!108466 (= e!70574 e!70571)))

(declare-fun b!108461 () Bool)

(declare-fun res!53749 () Bool)

(assert (=> b!108461 (=> (not res!53749) (not e!70570))))

(assert (=> b!108461 (= res!53749 (containsKey!159 lt!55743 (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun d!30049 () Bool)

(assert (=> d!30049 e!70570))

(declare-fun res!53748 () Bool)

(assert (=> d!30049 (=> (not res!53748) (not e!70570))))

(assert (=> d!30049 (= res!53748 (isStrictlySorted!305 lt!55743))))

(assert (=> d!30049 (= lt!55743 e!70573)))

(assert (=> d!30049 (= c!19086 (and ((_ is Cons!1619) (toList!790 lt!55121)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55121))) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30049 (isStrictlySorted!305 (toList!790 lt!55121))))

(assert (=> d!30049 (= (insertStrictlySorted!77 (toList!790 lt!55121) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55743)))

(declare-fun b!108467 () Bool)

(assert (=> b!108467 (= e!70571 call!11522)))

(declare-fun b!108468 () Bool)

(declare-fun c!19087 () Bool)

(assert (=> b!108468 (= e!70572 (ite c!19087 (t!5730 (toList!790 lt!55121)) (ite c!19089 (Cons!1619 (h!2217 (toList!790 lt!55121)) (t!5730 (toList!790 lt!55121))) Nil!1620)))))

(declare-fun b!108469 () Bool)

(assert (=> b!108469 (= e!70573 e!70574)))

(assert (=> b!108469 (= c!19087 (and ((_ is Cons!1619) (toList!790 lt!55121)) (= (_1!1207 (h!2217 (toList!790 lt!55121))) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30049 c!19086) b!108465))

(assert (= (and d!30049 (not c!19086)) b!108469))

(assert (= (and b!108469 c!19087) b!108460))

(assert (= (and b!108469 (not c!19087)) b!108466))

(assert (= (and b!108466 c!19089) b!108467))

(assert (= (and b!108466 (not c!19089)) b!108462))

(assert (= (or b!108467 b!108462) bm!11519))

(assert (= (or b!108460 bm!11519) bm!11517))

(assert (= (or b!108465 bm!11517) bm!11518))

(assert (= (and bm!11518 c!19088) b!108464))

(assert (= (and bm!11518 (not c!19088)) b!108468))

(assert (= (and d!30049 res!53748) b!108461))

(assert (= (and b!108461 res!53749) b!108463))

(declare-fun m!121957 () Bool)

(assert (=> b!108463 m!121957))

(declare-fun m!121959 () Bool)

(assert (=> bm!11518 m!121959))

(declare-fun m!121961 () Bool)

(assert (=> b!108461 m!121961))

(declare-fun m!121963 () Bool)

(assert (=> d!30049 m!121963))

(declare-fun m!121965 () Bool)

(assert (=> d!30049 m!121965))

(declare-fun m!121967 () Bool)

(assert (=> b!108464 m!121967))

(assert (=> d!29765 d!30049))

(declare-fun d!30051 () Bool)

(assert (=> d!30051 (= (get!1344 (getValueByKey!155 (toList!790 lt!55109) lt!55125)) (v!2910 (getValueByKey!155 (toList!790 lt!55109) lt!55125)))))

(assert (=> d!29783 d!30051))

(declare-fun b!108472 () Bool)

(declare-fun e!70576 () Option!161)

(assert (=> b!108472 (= e!70576 (getValueByKey!155 (t!5730 (toList!790 lt!55109)) lt!55125))))

(declare-fun b!108471 () Bool)

(declare-fun e!70575 () Option!161)

(assert (=> b!108471 (= e!70575 e!70576)))

(declare-fun c!19091 () Bool)

(assert (=> b!108471 (= c!19091 (and ((_ is Cons!1619) (toList!790 lt!55109)) (not (= (_1!1207 (h!2217 (toList!790 lt!55109))) lt!55125))))))

(declare-fun d!30053 () Bool)

(declare-fun c!19090 () Bool)

(assert (=> d!30053 (= c!19090 (and ((_ is Cons!1619) (toList!790 lt!55109)) (= (_1!1207 (h!2217 (toList!790 lt!55109))) lt!55125)))))

(assert (=> d!30053 (= (getValueByKey!155 (toList!790 lt!55109) lt!55125) e!70575)))

(declare-fun b!108473 () Bool)

(assert (=> b!108473 (= e!70576 None!159)))

(declare-fun b!108470 () Bool)

(assert (=> b!108470 (= e!70575 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55109)))))))

(assert (= (and d!30053 c!19090) b!108470))

(assert (= (and d!30053 (not c!19090)) b!108471))

(assert (= (and b!108471 c!19091) b!108472))

(assert (= (and b!108471 (not c!19091)) b!108473))

(declare-fun m!121969 () Bool)

(assert (=> b!108472 m!121969))

(assert (=> d!29783 d!30053))

(declare-fun d!30055 () Bool)

(declare-fun lt!55744 () Bool)

(assert (=> d!30055 (= lt!55744 (select (content!111 (toList!790 lt!55444)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(declare-fun e!70578 () Bool)

(assert (=> d!30055 (= lt!55744 e!70578)))

(declare-fun res!53750 () Bool)

(assert (=> d!30055 (=> (not res!53750) (not e!70578))))

(assert (=> d!30055 (= res!53750 ((_ is Cons!1619) (toList!790 lt!55444)))))

(assert (=> d!30055 (= (contains!826 (toList!790 lt!55444) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) lt!55744)))

(declare-fun b!108474 () Bool)

(declare-fun e!70577 () Bool)

(assert (=> b!108474 (= e!70578 e!70577)))

(declare-fun res!53751 () Bool)

(assert (=> b!108474 (=> res!53751 e!70577)))

(assert (=> b!108474 (= res!53751 (= (h!2217 (toList!790 lt!55444)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(declare-fun b!108475 () Bool)

(assert (=> b!108475 (= e!70577 (contains!826 (t!5730 (toList!790 lt!55444)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(assert (= (and d!30055 res!53750) b!108474))

(assert (= (and b!108474 (not res!53751)) b!108475))

(declare-fun m!121971 () Bool)

(assert (=> d!30055 m!121971))

(declare-fun m!121973 () Bool)

(assert (=> d!30055 m!121973))

(declare-fun m!121975 () Bool)

(assert (=> b!108475 m!121975))

(assert (=> b!107986 d!30055))

(assert (=> b!107909 d!29743))

(declare-fun d!30057 () Bool)

(assert (=> d!30057 (isDefined!109 (getValueByKey!155 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!55745 () Unit!3307)

(assert (=> d!30057 (= lt!55745 (choose!681 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!70579 () Bool)

(assert (=> d!30057 e!70579))

(declare-fun res!53752 () Bool)

(assert (=> d!30057 (=> (not res!53752) (not e!70579))))

(assert (=> d!30057 (= res!53752 (isStrictlySorted!305 (toList!790 lt!55175)))))

(assert (=> d!30057 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!55745)))

(declare-fun b!108476 () Bool)

(assert (=> b!108476 (= e!70579 (containsKey!159 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30057 res!53752) b!108476))

(assert (=> d!30057 m!120545))

(assert (=> d!30057 m!120865))

(assert (=> d!30057 m!120865))

(assert (=> d!30057 m!120867))

(assert (=> d!30057 m!120545))

(declare-fun m!121977 () Bool)

(assert (=> d!30057 m!121977))

(declare-fun m!121979 () Bool)

(assert (=> d!30057 m!121979))

(assert (=> b!108476 m!120545))

(assert (=> b!108476 m!120861))

(assert (=> b!107844 d!30057))

(declare-fun d!30059 () Bool)

(assert (=> d!30059 (= (isDefined!109 (getValueByKey!155 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!379 (getValueByKey!155 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4443 () Bool)

(assert (= bs!4443 d!30059))

(assert (=> bs!4443 m!120865))

(declare-fun m!121981 () Bool)

(assert (=> bs!4443 m!121981))

(assert (=> b!107844 d!30059))

(declare-fun e!70581 () Option!161)

(declare-fun b!108479 () Bool)

(assert (=> b!108479 (= e!70581 (getValueByKey!155 (t!5730 (toList!790 lt!55175)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108478 () Bool)

(declare-fun e!70580 () Option!161)

(assert (=> b!108478 (= e!70580 e!70581)))

(declare-fun c!19093 () Bool)

(assert (=> b!108478 (= c!19093 (and ((_ is Cons!1619) (toList!790 lt!55175)) (not (= (_1!1207 (h!2217 (toList!790 lt!55175))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun d!30061 () Bool)

(declare-fun c!19092 () Bool)

(assert (=> d!30061 (= c!19092 (and ((_ is Cons!1619) (toList!790 lt!55175)) (= (_1!1207 (h!2217 (toList!790 lt!55175))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30061 (= (getValueByKey!155 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!70580)))

(declare-fun b!108480 () Bool)

(assert (=> b!108480 (= e!70581 None!159)))

(declare-fun b!108477 () Bool)

(assert (=> b!108477 (= e!70580 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55175)))))))

(assert (= (and d!30061 c!19092) b!108477))

(assert (= (and d!30061 (not c!19092)) b!108478))

(assert (= (and b!108478 c!19093) b!108479))

(assert (= (and b!108478 (not c!19093)) b!108480))

(assert (=> b!108479 m!120545))

(declare-fun m!121983 () Bool)

(assert (=> b!108479 m!121983))

(assert (=> b!107844 d!30061))

(declare-fun d!30063 () Bool)

(declare-fun res!53753 () Bool)

(declare-fun e!70582 () Bool)

(assert (=> d!30063 (=> res!53753 e!70582)))

(assert (=> d!30063 (= res!53753 (and ((_ is Cons!1619) (toList!790 lt!55147)) (= (_1!1207 (h!2217 (toList!790 lt!55147))) (_1!1207 lt!54977))))))

(assert (=> d!30063 (= (containsKey!159 (toList!790 lt!55147) (_1!1207 lt!54977)) e!70582)))

(declare-fun b!108481 () Bool)

(declare-fun e!70583 () Bool)

(assert (=> b!108481 (= e!70582 e!70583)))

(declare-fun res!53754 () Bool)

(assert (=> b!108481 (=> (not res!53754) (not e!70583))))

(assert (=> b!108481 (= res!53754 (and (or (not ((_ is Cons!1619) (toList!790 lt!55147))) (bvsle (_1!1207 (h!2217 (toList!790 lt!55147))) (_1!1207 lt!54977))) ((_ is Cons!1619) (toList!790 lt!55147)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55147))) (_1!1207 lt!54977))))))

(declare-fun b!108482 () Bool)

(assert (=> b!108482 (= e!70583 (containsKey!159 (t!5730 (toList!790 lt!55147)) (_1!1207 lt!54977)))))

(assert (= (and d!30063 (not res!53753)) b!108481))

(assert (= (and b!108481 res!53754) b!108482))

(declare-fun m!121985 () Bool)

(assert (=> b!108482 m!121985))

(assert (=> d!29897 d!30063))

(declare-fun d!30065 () Bool)

(declare-fun e!70584 () Bool)

(assert (=> d!30065 e!70584))

(declare-fun res!53755 () Bool)

(assert (=> d!30065 (=> res!53755 e!70584)))

(declare-fun lt!55746 () Bool)

(assert (=> d!30065 (= res!53755 (not lt!55746))))

(declare-fun lt!55747 () Bool)

(assert (=> d!30065 (= lt!55746 lt!55747)))

(declare-fun lt!55749 () Unit!3307)

(declare-fun e!70585 () Unit!3307)

(assert (=> d!30065 (= lt!55749 e!70585)))

(declare-fun c!19094 () Bool)

(assert (=> d!30065 (= c!19094 lt!55747)))

(assert (=> d!30065 (= lt!55747 (containsKey!159 (toList!790 lt!55576) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30065 (= (contains!824 lt!55576 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55746)))

(declare-fun b!108483 () Bool)

(declare-fun lt!55748 () Unit!3307)

(assert (=> b!108483 (= e!70585 lt!55748)))

(assert (=> b!108483 (= lt!55748 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55576) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108483 (isDefined!109 (getValueByKey!155 (toList!790 lt!55576) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108484 () Bool)

(declare-fun Unit!3351 () Unit!3307)

(assert (=> b!108484 (= e!70585 Unit!3351)))

(declare-fun b!108485 () Bool)

(assert (=> b!108485 (= e!70584 (isDefined!109 (getValueByKey!155 (toList!790 lt!55576) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30065 c!19094) b!108483))

(assert (= (and d!30065 (not c!19094)) b!108484))

(assert (= (and d!30065 (not res!53755)) b!108485))

(declare-fun m!121987 () Bool)

(assert (=> d!30065 m!121987))

(declare-fun m!121989 () Bool)

(assert (=> b!108483 m!121989))

(declare-fun m!121991 () Bool)

(assert (=> b!108483 m!121991))

(assert (=> b!108483 m!121991))

(declare-fun m!121993 () Bool)

(assert (=> b!108483 m!121993))

(assert (=> b!108485 m!121991))

(assert (=> b!108485 m!121991))

(assert (=> b!108485 m!121993))

(assert (=> bm!11476 d!30065))

(declare-fun d!30067 () Bool)

(assert (=> d!30067 (= (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107850 d!30067))

(assert (=> b!107809 d!29987))

(assert (=> bm!11439 d!29825))

(declare-fun d!30069 () Bool)

(declare-fun lt!55750 () Bool)

(assert (=> d!30069 (= lt!55750 (select (content!111 lt!55605) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(declare-fun e!70587 () Bool)

(assert (=> d!30069 (= lt!55750 e!70587)))

(declare-fun res!53756 () Bool)

(assert (=> d!30069 (=> (not res!53756) (not e!70587))))

(assert (=> d!30069 (= res!53756 ((_ is Cons!1619) lt!55605))))

(assert (=> d!30069 (= (contains!826 lt!55605 (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))) lt!55750)))

(declare-fun b!108486 () Bool)

(declare-fun e!70586 () Bool)

(assert (=> b!108486 (= e!70587 e!70586)))

(declare-fun res!53757 () Bool)

(assert (=> b!108486 (=> res!53757 e!70586)))

(assert (=> b!108486 (= res!53757 (= (h!2217 lt!55605) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(declare-fun b!108487 () Bool)

(assert (=> b!108487 (= e!70586 (contains!826 (t!5730 lt!55605) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(assert (= (and d!30069 res!53756) b!108486))

(assert (= (and b!108486 (not res!53757)) b!108487))

(declare-fun m!121995 () Bool)

(assert (=> d!30069 m!121995))

(declare-fun m!121997 () Bool)

(assert (=> d!30069 m!121997))

(declare-fun m!121999 () Bool)

(assert (=> b!108487 m!121999))

(assert (=> b!108214 d!30069))

(declare-fun d!30071 () Bool)

(declare-fun e!70588 () Bool)

(assert (=> d!30071 e!70588))

(declare-fun res!53758 () Bool)

(assert (=> d!30071 (=> res!53758 e!70588)))

(declare-fun lt!55751 () Bool)

(assert (=> d!30071 (= res!53758 (not lt!55751))))

(declare-fun lt!55752 () Bool)

(assert (=> d!30071 (= lt!55751 lt!55752)))

(declare-fun lt!55754 () Unit!3307)

(declare-fun e!70589 () Unit!3307)

(assert (=> d!30071 (= lt!55754 e!70589)))

(declare-fun c!19095 () Bool)

(assert (=> d!30071 (= c!19095 lt!55752)))

(assert (=> d!30071 (= lt!55752 (containsKey!159 (toList!790 lt!55484) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!30071 (= (contains!824 lt!55484 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55751)))

(declare-fun b!108488 () Bool)

(declare-fun lt!55753 () Unit!3307)

(assert (=> b!108488 (= e!70589 lt!55753)))

(assert (=> b!108488 (= lt!55753 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55484) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> b!108488 (isDefined!109 (getValueByKey!155 (toList!790 lt!55484) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108489 () Bool)

(declare-fun Unit!3352 () Unit!3307)

(assert (=> b!108489 (= e!70589 Unit!3352)))

(declare-fun b!108490 () Bool)

(assert (=> b!108490 (= e!70588 (isDefined!109 (getValueByKey!155 (toList!790 lt!55484) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30071 c!19095) b!108488))

(assert (= (and d!30071 (not c!19095)) b!108489))

(assert (= (and d!30071 (not res!53758)) b!108490))

(declare-fun m!122001 () Bool)

(assert (=> d!30071 m!122001))

(declare-fun m!122003 () Bool)

(assert (=> b!108488 m!122003))

(assert (=> b!108488 m!121205))

(assert (=> b!108488 m!121205))

(declare-fun m!122005 () Bool)

(assert (=> b!108488 m!122005))

(assert (=> b!108490 m!121205))

(assert (=> b!108490 m!121205))

(assert (=> b!108490 m!122005))

(assert (=> d!29843 d!30071))

(declare-fun b!108493 () Bool)

(declare-fun e!70591 () Option!161)

(assert (=> b!108493 (= e!70591 (getValueByKey!155 (t!5730 lt!55487) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108492 () Bool)

(declare-fun e!70590 () Option!161)

(assert (=> b!108492 (= e!70590 e!70591)))

(declare-fun c!19097 () Bool)

(assert (=> b!108492 (= c!19097 (and ((_ is Cons!1619) lt!55487) (not (= (_1!1207 (h!2217 lt!55487)) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun d!30073 () Bool)

(declare-fun c!19096 () Bool)

(assert (=> d!30073 (= c!19096 (and ((_ is Cons!1619) lt!55487) (= (_1!1207 (h!2217 lt!55487)) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30073 (= (getValueByKey!155 lt!55487 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!70590)))

(declare-fun b!108494 () Bool)

(assert (=> b!108494 (= e!70591 None!159)))

(declare-fun b!108491 () Bool)

(assert (=> b!108491 (= e!70590 (Some!160 (_2!1207 (h!2217 lt!55487))))))

(assert (= (and d!30073 c!19096) b!108491))

(assert (= (and d!30073 (not c!19096)) b!108492))

(assert (= (and b!108492 c!19097) b!108493))

(assert (= (and b!108492 (not c!19097)) b!108494))

(declare-fun m!122007 () Bool)

(assert (=> b!108493 m!122007))

(assert (=> d!29843 d!30073))

(declare-fun d!30075 () Bool)

(assert (=> d!30075 (= (getValueByKey!155 lt!55487 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!55755 () Unit!3307)

(assert (=> d!30075 (= lt!55755 (choose!679 lt!55487 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun e!70592 () Bool)

(assert (=> d!30075 e!70592))

(declare-fun res!53759 () Bool)

(assert (=> d!30075 (=> (not res!53759) (not e!70592))))

(assert (=> d!30075 (= res!53759 (isStrictlySorted!305 lt!55487))))

(assert (=> d!30075 (= (lemmaContainsTupThenGetReturnValue!74 lt!55487 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55755)))

(declare-fun b!108495 () Bool)

(declare-fun res!53760 () Bool)

(assert (=> b!108495 (=> (not res!53760) (not e!70592))))

(assert (=> b!108495 (= res!53760 (containsKey!159 lt!55487 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108496 () Bool)

(assert (=> b!108496 (= e!70592 (contains!826 lt!55487 (tuple2!2393 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30075 res!53759) b!108495))

(assert (= (and b!108495 res!53760) b!108496))

(assert (=> d!30075 m!121199))

(declare-fun m!122009 () Bool)

(assert (=> d!30075 m!122009))

(declare-fun m!122011 () Bool)

(assert (=> d!30075 m!122011))

(declare-fun m!122013 () Bool)

(assert (=> b!108495 m!122013))

(declare-fun m!122015 () Bool)

(assert (=> b!108496 m!122015))

(assert (=> d!29843 d!30075))

(declare-fun bm!11520 () Bool)

(declare-fun call!11524 () List!1623)

(declare-fun call!11523 () List!1623)

(assert (=> bm!11520 (= call!11524 call!11523)))

(declare-fun b!108497 () Bool)

(declare-fun e!70597 () List!1623)

(assert (=> b!108497 (= e!70597 call!11524)))

(declare-fun b!108499 () Bool)

(declare-fun e!70594 () List!1623)

(declare-fun call!11525 () List!1623)

(assert (=> b!108499 (= e!70594 call!11525)))

(declare-fun b!108500 () Bool)

(declare-fun e!70593 () Bool)

(declare-fun lt!55756 () List!1623)

(assert (=> b!108500 (= e!70593 (contains!826 lt!55756 (tuple2!2393 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!108501 () Bool)

(declare-fun e!70595 () List!1623)

(assert (=> b!108501 (= e!70595 (insertStrictlySorted!77 (t!5730 (toList!790 lt!54981)) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108502 () Bool)

(declare-fun e!70596 () List!1623)

(assert (=> b!108502 (= e!70596 call!11523)))

(declare-fun c!19098 () Bool)

(declare-fun bm!11521 () Bool)

(assert (=> bm!11521 (= call!11523 ($colon$colon!81 e!70595 (ite c!19098 (h!2217 (toList!790 lt!54981)) (tuple2!2393 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun c!19100 () Bool)

(assert (=> bm!11521 (= c!19100 c!19098)))

(declare-fun bm!11522 () Bool)

(assert (=> bm!11522 (= call!11525 call!11524)))

(declare-fun b!108503 () Bool)

(declare-fun c!19101 () Bool)

(assert (=> b!108503 (= c!19101 (and ((_ is Cons!1619) (toList!790 lt!54981)) (bvsgt (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> b!108503 (= e!70597 e!70594)))

(declare-fun b!108498 () Bool)

(declare-fun res!53762 () Bool)

(assert (=> b!108498 (=> (not res!53762) (not e!70593))))

(assert (=> b!108498 (= res!53762 (containsKey!159 lt!55756 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun d!30077 () Bool)

(assert (=> d!30077 e!70593))

(declare-fun res!53761 () Bool)

(assert (=> d!30077 (=> (not res!53761) (not e!70593))))

(assert (=> d!30077 (= res!53761 (isStrictlySorted!305 lt!55756))))

(assert (=> d!30077 (= lt!55756 e!70596)))

(assert (=> d!30077 (= c!19098 (and ((_ is Cons!1619) (toList!790 lt!54981)) (bvslt (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30077 (isStrictlySorted!305 (toList!790 lt!54981))))

(assert (=> d!30077 (= (insertStrictlySorted!77 (toList!790 lt!54981) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55756)))

(declare-fun b!108504 () Bool)

(assert (=> b!108504 (= e!70594 call!11525)))

(declare-fun c!19099 () Bool)

(declare-fun b!108505 () Bool)

(assert (=> b!108505 (= e!70595 (ite c!19099 (t!5730 (toList!790 lt!54981)) (ite c!19101 (Cons!1619 (h!2217 (toList!790 lt!54981)) (t!5730 (toList!790 lt!54981))) Nil!1620)))))

(declare-fun b!108506 () Bool)

(assert (=> b!108506 (= e!70596 e!70597)))

(assert (=> b!108506 (= c!19099 (and ((_ is Cons!1619) (toList!790 lt!54981)) (= (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30077 c!19098) b!108502))

(assert (= (and d!30077 (not c!19098)) b!108506))

(assert (= (and b!108506 c!19099) b!108497))

(assert (= (and b!108506 (not c!19099)) b!108503))

(assert (= (and b!108503 c!19101) b!108504))

(assert (= (and b!108503 (not c!19101)) b!108499))

(assert (= (or b!108504 b!108499) bm!11522))

(assert (= (or b!108497 bm!11522) bm!11520))

(assert (= (or b!108502 bm!11520) bm!11521))

(assert (= (and bm!11521 c!19100) b!108501))

(assert (= (and bm!11521 (not c!19100)) b!108505))

(assert (= (and d!30077 res!53761) b!108498))

(assert (= (and b!108498 res!53762) b!108500))

(declare-fun m!122017 () Bool)

(assert (=> b!108500 m!122017))

(declare-fun m!122019 () Bool)

(assert (=> bm!11521 m!122019))

(declare-fun m!122021 () Bool)

(assert (=> b!108498 m!122021))

(declare-fun m!122023 () Bool)

(assert (=> d!30077 m!122023))

(assert (=> d!30077 m!121069))

(declare-fun m!122025 () Bool)

(assert (=> b!108501 m!122025))

(assert (=> d!29843 d!30077))

(declare-fun lt!55757 () Bool)

(declare-fun d!30079 () Bool)

(assert (=> d!30079 (= lt!55757 (select (content!111 (toList!790 lt!55410)) (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun e!70599 () Bool)

(assert (=> d!30079 (= lt!55757 e!70599)))

(declare-fun res!53763 () Bool)

(assert (=> d!30079 (=> (not res!53763) (not e!70599))))

(assert (=> d!30079 (= res!53763 ((_ is Cons!1619) (toList!790 lt!55410)))))

(assert (=> d!30079 (= (contains!826 (toList!790 lt!55410) (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55757)))

(declare-fun b!108507 () Bool)

(declare-fun e!70598 () Bool)

(assert (=> b!108507 (= e!70599 e!70598)))

(declare-fun res!53764 () Bool)

(assert (=> b!108507 (=> res!53764 e!70598)))

(assert (=> b!108507 (= res!53764 (= (h!2217 (toList!790 lt!55410)) (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!108508 () Bool)

(assert (=> b!108508 (= e!70598 (contains!826 (t!5730 (toList!790 lt!55410)) (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!30079 res!53763) b!108507))

(assert (= (and b!108507 (not res!53764)) b!108508))

(declare-fun m!122027 () Bool)

(assert (=> d!30079 m!122027))

(declare-fun m!122029 () Bool)

(assert (=> d!30079 m!122029))

(declare-fun m!122031 () Bool)

(assert (=> b!108508 m!122031))

(assert (=> b!107914 d!30079))

(declare-fun d!30081 () Bool)

(assert (=> d!30081 (= (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55110)) (not (isEmpty!379 (getValueByKey!155 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55110))))))

(declare-fun bs!4444 () Bool)

(assert (= bs!4444 d!30081))

(assert (=> bs!4444 m!121009))

(declare-fun m!122033 () Bool)

(assert (=> bs!4444 m!122033))

(assert (=> b!107924 d!30081))

(declare-fun e!70601 () Option!161)

(declare-fun b!108511 () Bool)

(assert (=> b!108511 (= e!70601 (getValueByKey!155 (t!5730 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) lt!55110))))

(declare-fun b!108510 () Bool)

(declare-fun e!70600 () Option!161)

(assert (=> b!108510 (= e!70600 e!70601)))

(declare-fun c!19103 () Bool)

(assert (=> b!108510 (= c!19103 (and ((_ is Cons!1619) (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (not (= (_1!1207 (h!2217 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))) lt!55110))))))

(declare-fun d!30083 () Bool)

(declare-fun c!19102 () Bool)

(assert (=> d!30083 (= c!19102 (and ((_ is Cons!1619) (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (= (_1!1207 (h!2217 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))) lt!55110)))))

(assert (=> d!30083 (= (getValueByKey!155 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55110) e!70600)))

(declare-fun b!108512 () Bool)

(assert (=> b!108512 (= e!70601 None!159)))

(declare-fun b!108509 () Bool)

(assert (=> b!108509 (= e!70600 (Some!160 (_2!1207 (h!2217 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))))

(assert (= (and d!30083 c!19102) b!108509))

(assert (= (and d!30083 (not c!19102)) b!108510))

(assert (= (and b!108510 c!19103) b!108511))

(assert (= (and b!108510 (not c!19103)) b!108512))

(declare-fun m!122035 () Bool)

(assert (=> b!108511 m!122035))

(assert (=> b!107924 d!30083))

(declare-fun d!30085 () Bool)

(assert (=> d!30085 (= (isEmpty!377 lt!55306) (isEmpty!378 (toList!790 lt!55306)))))

(declare-fun bs!4445 () Bool)

(assert (= bs!4445 d!30085))

(declare-fun m!122037 () Bool)

(assert (=> bs!4445 m!122037))

(assert (=> b!107833 d!30085))

(declare-fun b!108513 () Bool)

(declare-fun lt!55763 () Unit!3307)

(declare-fun lt!55762 () Unit!3307)

(assert (=> b!108513 (= lt!55763 lt!55762)))

(declare-fun lt!55759 () (_ BitVec 64))

(declare-fun lt!55760 () V!3233)

(declare-fun lt!55758 () ListLongMap!1549)

(declare-fun lt!55761 () (_ BitVec 64))

(assert (=> b!108513 (not (contains!824 (+!137 lt!55758 (tuple2!2393 lt!55761 lt!55760)) lt!55759))))

(assert (=> b!108513 (= lt!55762 (addStillNotContains!48 lt!55758 lt!55761 lt!55760 lt!55759))))

(assert (=> b!108513 (= lt!55759 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108513 (= lt!55760 (get!1341 (select (arr!2063 lt!55252) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108513 (= lt!55761 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11526 () ListLongMap!1549)

(assert (=> b!108513 (= lt!55758 call!11526)))

(declare-fun e!70607 () ListLongMap!1549)

(assert (=> b!108513 (= e!70607 (+!137 call!11526 (tuple2!2393 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) (get!1341 (select (arr!2063 lt!55252) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun lt!55764 () ListLongMap!1549)

(declare-fun b!108514 () Bool)

(declare-fun e!70606 () Bool)

(assert (=> b!108514 (= e!70606 (= lt!55764 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16))))))

(declare-fun b!108515 () Bool)

(assert (=> b!108515 (= e!70607 call!11526)))

(declare-fun b!108516 () Bool)

(assert (=> b!108516 (= e!70606 (isEmpty!377 lt!55764))))

(declare-fun b!108517 () Bool)

(assert (=> b!108517 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> b!108517 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 lt!55252)))))

(declare-fun e!70603 () Bool)

(assert (=> b!108517 (= e!70603 (= (apply!99 lt!55764 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 lt!55252) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108518 () Bool)

(declare-fun e!70605 () ListLongMap!1549)

(assert (=> b!108518 (= e!70605 (ListLongMap!1550 Nil!1620))))

(declare-fun b!108519 () Bool)

(declare-fun e!70608 () Bool)

(declare-fun e!70602 () Bool)

(assert (=> b!108519 (= e!70608 e!70602)))

(declare-fun c!19105 () Bool)

(declare-fun e!70604 () Bool)

(assert (=> b!108519 (= c!19105 e!70604)))

(declare-fun res!53765 () Bool)

(assert (=> b!108519 (=> (not res!53765) (not e!70604))))

(assert (=> b!108519 (= res!53765 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108521 () Bool)

(assert (=> b!108521 (= e!70605 e!70607)))

(declare-fun c!19107 () Bool)

(assert (=> b!108521 (= c!19107 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11523 () Bool)

(assert (=> bm!11523 (= call!11526 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16)))))

(declare-fun b!108522 () Bool)

(declare-fun res!53767 () Bool)

(assert (=> b!108522 (=> (not res!53767) (not e!70608))))

(assert (=> b!108522 (= res!53767 (not (contains!824 lt!55764 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108523 () Bool)

(assert (=> b!108523 (= e!70602 e!70603)))

(assert (=> b!108523 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun res!53768 () Bool)

(assert (=> b!108523 (= res!53768 (contains!824 lt!55764 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108523 (=> (not res!53768) (not e!70603))))

(declare-fun b!108524 () Bool)

(assert (=> b!108524 (= e!70602 e!70606)))

(declare-fun c!19106 () Bool)

(assert (=> b!108524 (= c!19106 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun d!30087 () Bool)

(assert (=> d!30087 e!70608))

(declare-fun res!53766 () Bool)

(assert (=> d!30087 (=> (not res!53766) (not e!70608))))

(assert (=> d!30087 (= res!53766 (not (contains!824 lt!55764 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30087 (= lt!55764 e!70605)))

(declare-fun c!19104 () Bool)

(assert (=> d!30087 (= c!19104 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!30087 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30087 (= (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55764)))

(declare-fun b!108520 () Bool)

(assert (=> b!108520 (= e!70604 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108520 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!30087 c!19104) b!108518))

(assert (= (and d!30087 (not c!19104)) b!108521))

(assert (= (and b!108521 c!19107) b!108513))

(assert (= (and b!108521 (not c!19107)) b!108515))

(assert (= (or b!108513 b!108515) bm!11523))

(assert (= (and d!30087 res!53766) b!108522))

(assert (= (and b!108522 res!53767) b!108519))

(assert (= (and b!108519 res!53765) b!108520))

(assert (= (and b!108519 c!19105) b!108523))

(assert (= (and b!108519 (not c!19105)) b!108524))

(assert (= (and b!108523 res!53768) b!108517))

(assert (= (and b!108524 c!19106) b!108514))

(assert (= (and b!108524 (not c!19106)) b!108516))

(declare-fun b_lambda!4845 () Bool)

(assert (=> (not b_lambda!4845) (not b!108513)))

(assert (=> b!108513 t!5742))

(declare-fun b_and!6681 () Bool)

(assert (= b_and!6677 (and (=> t!5742 result!3505) b_and!6681)))

(assert (=> b!108513 t!5744))

(declare-fun b_and!6683 () Bool)

(assert (= b_and!6679 (and (=> t!5744 result!3507) b_and!6683)))

(declare-fun b_lambda!4847 () Bool)

(assert (=> (not b_lambda!4847) (not b!108517)))

(assert (=> b!108517 t!5742))

(declare-fun b_and!6685 () Bool)

(assert (= b_and!6681 (and (=> t!5742 result!3505) b_and!6685)))

(assert (=> b!108517 t!5744))

(declare-fun b_and!6687 () Bool)

(assert (= b_and!6683 (and (=> t!5744 result!3507) b_and!6687)))

(assert (=> b!108517 m!121267))

(assert (=> b!108517 m!121113))

(assert (=> b!108517 m!121269))

(assert (=> b!108517 m!120769))

(assert (=> b!108517 m!121113))

(assert (=> b!108517 m!120769))

(declare-fun m!122039 () Bool)

(assert (=> b!108517 m!122039))

(assert (=> b!108517 m!121267))

(declare-fun m!122041 () Bool)

(assert (=> d!30087 m!122041))

(assert (=> d!30087 m!120787))

(assert (=> b!108521 m!120769))

(assert (=> b!108521 m!120769))

(assert (=> b!108521 m!120779))

(declare-fun m!122043 () Bool)

(assert (=> b!108514 m!122043))

(declare-fun m!122045 () Bool)

(assert (=> b!108522 m!122045))

(assert (=> b!108523 m!120769))

(assert (=> b!108523 m!120769))

(declare-fun m!122047 () Bool)

(assert (=> b!108523 m!122047))

(assert (=> b!108513 m!121267))

(assert (=> b!108513 m!121113))

(assert (=> b!108513 m!121269))

(declare-fun m!122049 () Bool)

(assert (=> b!108513 m!122049))

(assert (=> b!108513 m!122049))

(declare-fun m!122051 () Bool)

(assert (=> b!108513 m!122051))

(assert (=> b!108513 m!121113))

(assert (=> b!108513 m!121267))

(declare-fun m!122053 () Bool)

(assert (=> b!108513 m!122053))

(declare-fun m!122055 () Bool)

(assert (=> b!108513 m!122055))

(assert (=> b!108513 m!120769))

(assert (=> b!108520 m!120769))

(assert (=> b!108520 m!120769))

(assert (=> b!108520 m!120779))

(declare-fun m!122057 () Bool)

(assert (=> b!108516 m!122057))

(assert (=> bm!11523 m!122043))

(assert (=> bm!11463 d!30087))

(declare-fun d!30089 () Bool)

(declare-fun lt!55765 () Bool)

(assert (=> d!30089 (= lt!55765 (select (content!111 (toList!790 lt!55628)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun e!70610 () Bool)

(assert (=> d!30089 (= lt!55765 e!70610)))

(declare-fun res!53769 () Bool)

(assert (=> d!30089 (=> (not res!53769) (not e!70610))))

(assert (=> d!30089 (= res!53769 ((_ is Cons!1619) (toList!790 lt!55628)))))

(assert (=> d!30089 (= (contains!826 (toList!790 lt!55628) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55765)))

(declare-fun b!108525 () Bool)

(declare-fun e!70609 () Bool)

(assert (=> b!108525 (= e!70610 e!70609)))

(declare-fun res!53770 () Bool)

(assert (=> b!108525 (=> res!53770 e!70609)))

(assert (=> b!108525 (= res!53770 (= (h!2217 (toList!790 lt!55628)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!108526 () Bool)

(assert (=> b!108526 (= e!70609 (contains!826 (t!5730 (toList!790 lt!55628)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!30089 res!53769) b!108525))

(assert (= (and b!108525 (not res!53770)) b!108526))

(declare-fun m!122059 () Bool)

(assert (=> d!30089 m!122059))

(declare-fun m!122061 () Bool)

(assert (=> d!30089 m!122061))

(declare-fun m!122063 () Bool)

(assert (=> b!108526 m!122063))

(assert (=> b!108243 d!30089))

(assert (=> d!29735 d!29701))

(declare-fun d!30091 () Bool)

(declare-fun c!19108 () Bool)

(assert (=> d!30091 (= c!19108 ((_ is Nil!1620) (toList!790 lt!55147)))))

(declare-fun e!70611 () (InoxSet tuple2!2392))

(assert (=> d!30091 (= (content!111 (toList!790 lt!55147)) e!70611)))

(declare-fun b!108527 () Bool)

(assert (=> b!108527 (= e!70611 ((as const (Array tuple2!2392 Bool)) false))))

(declare-fun b!108528 () Bool)

(assert (=> b!108528 (= e!70611 ((_ map or) (store ((as const (Array tuple2!2392 Bool)) false) (h!2217 (toList!790 lt!55147)) true) (content!111 (t!5730 (toList!790 lt!55147)))))))

(assert (= (and d!30091 c!19108) b!108527))

(assert (= (and d!30091 (not c!19108)) b!108528))

(declare-fun m!122065 () Bool)

(assert (=> b!108528 m!122065))

(declare-fun m!122067 () Bool)

(assert (=> b!108528 m!122067))

(assert (=> d!29747 d!30091))

(declare-fun b!108547 () Bool)

(declare-fun lt!55771 () SeekEntryResult!263)

(assert (=> b!108547 (and (bvsge (index!3203 lt!55771) #b00000000000000000000000000000000) (bvslt (index!3203 lt!55771) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun e!70625 () Bool)

(assert (=> b!108547 (= e!70625 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3203 lt!55771)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108548 () Bool)

(declare-fun e!70623 () Bool)

(declare-fun e!70622 () Bool)

(assert (=> b!108548 (= e!70623 e!70622)))

(declare-fun res!53779 () Bool)

(assert (=> b!108548 (= res!53779 (and ((_ is Intermediate!263) lt!55771) (not (undefined!1075 lt!55771)) (bvslt (x!13806 lt!55771) #b01111111111111111111111111111110) (bvsge (x!13806 lt!55771) #b00000000000000000000000000000000) (bvsge (x!13806 lt!55771) #b00000000000000000000000000000000)))))

(assert (=> b!108548 (=> (not res!53779) (not e!70622))))

(declare-fun e!70626 () SeekEntryResult!263)

(declare-fun b!108549 () Bool)

(assert (=> b!108549 (= e!70626 (Intermediate!263 true (toIndex!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (mask!6762 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun d!30093 () Bool)

(assert (=> d!30093 e!70623))

(declare-fun c!19116 () Bool)

(assert (=> d!30093 (= c!19116 (and ((_ is Intermediate!263) lt!55771) (undefined!1075 lt!55771)))))

(assert (=> d!30093 (= lt!55771 e!70626)))

(declare-fun c!19115 () Bool)

(assert (=> d!30093 (= c!19115 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!55770 () (_ BitVec 64))

(assert (=> d!30093 (= lt!55770 (select (arr!2062 (_keys!4314 newMap!16)) (toIndex!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (mask!6762 newMap!16))))))

(assert (=> d!30093 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30093 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (mask!6762 newMap!16)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)) lt!55771)))

(declare-fun b!108550 () Bool)

(declare-fun e!70624 () SeekEntryResult!263)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!108550 (= e!70624 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (mask!6762 newMap!16)) #b00000000000000000000000000000000 (mask!6762 newMap!16)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(declare-fun b!108551 () Bool)

(assert (=> b!108551 (= e!70626 e!70624)))

(declare-fun c!19117 () Bool)

(assert (=> b!108551 (= c!19117 (or (= lt!55770 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (= (bvadd lt!55770 lt!55770) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108552 () Bool)

(assert (=> b!108552 (and (bvsge (index!3203 lt!55771) #b00000000000000000000000000000000) (bvslt (index!3203 lt!55771) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun res!53778 () Bool)

(assert (=> b!108552 (= res!53778 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3203 lt!55771)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> b!108552 (=> res!53778 e!70625)))

(assert (=> b!108552 (= e!70622 e!70625)))

(declare-fun b!108553 () Bool)

(assert (=> b!108553 (= e!70624 (Intermediate!263 false (toIndex!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (mask!6762 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!108554 () Bool)

(assert (=> b!108554 (and (bvsge (index!3203 lt!55771) #b00000000000000000000000000000000) (bvslt (index!3203 lt!55771) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun res!53777 () Bool)

(assert (=> b!108554 (= res!53777 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3203 lt!55771)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108554 (=> res!53777 e!70625)))

(declare-fun b!108555 () Bool)

(assert (=> b!108555 (= e!70623 (bvsge (x!13806 lt!55771) #b01111111111111111111111111111110))))

(assert (= (and d!30093 c!19115) b!108549))

(assert (= (and d!30093 (not c!19115)) b!108551))

(assert (= (and b!108551 c!19117) b!108553))

(assert (= (and b!108551 (not c!19117)) b!108550))

(assert (= (and d!30093 c!19116) b!108555))

(assert (= (and d!30093 (not c!19116)) b!108548))

(assert (= (and b!108548 res!53779) b!108552))

(assert (= (and b!108552 (not res!53778)) b!108554))

(assert (= (and b!108554 (not res!53777)) b!108547))

(declare-fun m!122069 () Bool)

(assert (=> b!108554 m!122069))

(assert (=> d!30093 m!121249))

(declare-fun m!122071 () Bool)

(assert (=> d!30093 m!122071))

(assert (=> d!30093 m!120787))

(assert (=> b!108547 m!122069))

(assert (=> b!108550 m!121249))

(declare-fun m!122073 () Bool)

(assert (=> b!108550 m!122073))

(assert (=> b!108550 m!122073))

(assert (=> b!108550 m!120387))

(declare-fun m!122075 () Bool)

(assert (=> b!108550 m!122075))

(assert (=> b!108552 m!122069))

(assert (=> d!29851 d!30093))

(declare-fun d!30095 () Bool)

(declare-fun lt!55777 () (_ BitVec 32))

(declare-fun lt!55776 () (_ BitVec 32))

(assert (=> d!30095 (= lt!55777 (bvmul (bvxor lt!55776 (bvlshr lt!55776 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!30095 (= lt!55776 ((_ extract 31 0) (bvand (bvxor (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvlshr (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!30095 (and (bvsge (mask!6762 newMap!16) #b00000000000000000000000000000000) (let ((res!53780 (let ((h!2220 ((_ extract 31 0) (bvand (bvxor (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvlshr (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!13908 (bvmul (bvxor h!2220 (bvlshr h!2220 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!13908 (bvlshr x!13908 #b00000000000000000000000000001101)) (mask!6762 newMap!16)))))) (and (bvslt res!53780 (bvadd (mask!6762 newMap!16) #b00000000000000000000000000000001)) (bvsge res!53780 #b00000000000000000000000000000000))))))

(assert (=> d!30095 (= (toIndex!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (mask!6762 newMap!16)) (bvand (bvxor lt!55777 (bvlshr lt!55777 #b00000000000000000000000000001101)) (mask!6762 newMap!16)))))

(assert (=> d!29851 d!30095))

(assert (=> d!29851 d!29941))

(assert (=> b!108228 d!29935))

(declare-fun d!30097 () Bool)

(assert (=> d!30097 (= (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55111)) (v!2910 (getValueByKey!155 (toList!790 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55111)))))

(assert (=> d!29791 d!30097))

(declare-fun e!70628 () Option!161)

(declare-fun b!108558 () Bool)

(assert (=> b!108558 (= e!70628 (getValueByKey!155 (t!5730 (toList!790 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) lt!55111))))

(declare-fun b!108557 () Bool)

(declare-fun e!70627 () Option!161)

(assert (=> b!108557 (= e!70627 e!70628)))

(declare-fun c!19119 () Bool)

(assert (=> b!108557 (= c!19119 (and ((_ is Cons!1619) (toList!790 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) (not (= (_1!1207 (h!2217 (toList!790 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))) lt!55111))))))

(declare-fun c!19118 () Bool)

(declare-fun d!30099 () Bool)

(assert (=> d!30099 (= c!19118 (and ((_ is Cons!1619) (toList!790 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) (= (_1!1207 (h!2217 (toList!790 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))) lt!55111)))))

(assert (=> d!30099 (= (getValueByKey!155 (toList!790 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55111) e!70627)))

(declare-fun b!108559 () Bool)

(assert (=> b!108559 (= e!70628 None!159)))

(declare-fun b!108556 () Bool)

(assert (=> b!108556 (= e!70627 (Some!160 (_2!1207 (h!2217 (toList!790 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))))

(assert (= (and d!30099 c!19118) b!108556))

(assert (= (and d!30099 (not c!19118)) b!108557))

(assert (= (and b!108557 c!19119) b!108558))

(assert (= (and b!108557 (not c!19119)) b!108559))

(declare-fun m!122077 () Bool)

(assert (=> b!108558 m!122077))

(assert (=> d!29791 d!30099))

(declare-fun d!30101 () Bool)

(declare-fun lt!55778 () (_ BitVec 32))

(assert (=> d!30101 (and (bvsge lt!55778 #b00000000000000000000000000000000) (bvsle lt!55778 (bvsub (size!2319 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000)))))

(declare-fun e!70629 () (_ BitVec 32))

(assert (=> d!30101 (= lt!55778 e!70629)))

(declare-fun c!19121 () Bool)

(assert (=> d!30101 (= c!19121 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55257)))))))

(assert (=> d!30101 (and (bvsle #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55257)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2319 (_keys!4314 (_2!1206 lt!55257))) (size!2319 (_keys!4314 (_2!1206 lt!55257)))))))

(assert (=> d!30101 (= (arrayCountValidKeys!0 (_keys!4314 (_2!1206 lt!55257)) #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55257)))) lt!55778)))

(declare-fun b!108560 () Bool)

(assert (=> b!108560 (= e!70629 #b00000000000000000000000000000000)))

(declare-fun b!108561 () Bool)

(declare-fun e!70630 () (_ BitVec 32))

(declare-fun call!11527 () (_ BitVec 32))

(assert (=> b!108561 (= e!70630 (bvadd #b00000000000000000000000000000001 call!11527))))

(declare-fun b!108562 () Bool)

(assert (=> b!108562 (= e!70629 e!70630)))

(declare-fun c!19120 () Bool)

(assert (=> b!108562 (= c!19120 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000)))))

(declare-fun bm!11524 () Bool)

(assert (=> bm!11524 (= call!11527 (arrayCountValidKeys!0 (_keys!4314 (_2!1206 lt!55257)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (_2!1206 lt!55257)))))))

(declare-fun b!108563 () Bool)

(assert (=> b!108563 (= e!70630 call!11527)))

(assert (= (and d!30101 c!19121) b!108560))

(assert (= (and d!30101 (not c!19121)) b!108562))

(assert (= (and b!108562 c!19120) b!108561))

(assert (= (and b!108562 (not c!19120)) b!108563))

(assert (= (or b!108561 b!108563) bm!11524))

(assert (=> b!108562 m!121643))

(assert (=> b!108562 m!121643))

(assert (=> b!108562 m!121649))

(declare-fun m!122079 () Bool)

(assert (=> bm!11524 m!122079))

(assert (=> b!107982 d!30101))

(declare-fun d!30103 () Bool)

(assert (=> d!30103 (= (isDefined!109 (getValueByKey!155 (toList!790 call!11426) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))) (not (isEmpty!379 (getValueByKey!155 (toList!790 call!11426) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))))

(declare-fun bs!4446 () Bool)

(assert (= bs!4446 d!30103))

(assert (=> bs!4446 m!121461))

(declare-fun m!122081 () Bool)

(assert (=> bs!4446 m!122081))

(assert (=> b!108201 d!30103))

(declare-fun b!108566 () Bool)

(declare-fun e!70632 () Option!161)

(assert (=> b!108566 (= e!70632 (getValueByKey!155 (t!5730 (toList!790 call!11426)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!108565 () Bool)

(declare-fun e!70631 () Option!161)

(assert (=> b!108565 (= e!70631 e!70632)))

(declare-fun c!19123 () Bool)

(assert (=> b!108565 (= c!19123 (and ((_ is Cons!1619) (toList!790 call!11426)) (not (= (_1!1207 (h!2217 (toList!790 call!11426))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))))

(declare-fun d!30105 () Bool)

(declare-fun c!19122 () Bool)

(assert (=> d!30105 (= c!19122 (and ((_ is Cons!1619) (toList!790 call!11426)) (= (_1!1207 (h!2217 (toList!790 call!11426))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (=> d!30105 (= (getValueByKey!155 (toList!790 call!11426) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) e!70631)))

(declare-fun b!108567 () Bool)

(assert (=> b!108567 (= e!70632 None!159)))

(declare-fun b!108564 () Bool)

(assert (=> b!108564 (= e!70631 (Some!160 (_2!1207 (h!2217 (toList!790 call!11426)))))))

(assert (= (and d!30105 c!19122) b!108564))

(assert (= (and d!30105 (not c!19122)) b!108565))

(assert (= (and b!108565 c!19123) b!108566))

(assert (= (and b!108565 (not c!19123)) b!108567))

(assert (=> b!108566 m!120387))

(declare-fun m!122083 () Bool)

(assert (=> b!108566 m!122083))

(assert (=> b!108201 d!30105))

(declare-fun d!30107 () Bool)

(declare-fun e!70633 () Bool)

(assert (=> d!30107 e!70633))

(declare-fun res!53781 () Bool)

(assert (=> d!30107 (=> res!53781 e!70633)))

(declare-fun lt!55779 () Bool)

(assert (=> d!30107 (= res!53781 (not lt!55779))))

(declare-fun lt!55780 () Bool)

(assert (=> d!30107 (= lt!55779 lt!55780)))

(declare-fun lt!55782 () Unit!3307)

(declare-fun e!70634 () Unit!3307)

(assert (=> d!30107 (= lt!55782 e!70634)))

(declare-fun c!19124 () Bool)

(assert (=> d!30107 (= c!19124 lt!55780)))

(assert (=> d!30107 (= lt!55780 (containsKey!159 (toList!790 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30107 (= (contains!824 lt!55306 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55779)))

(declare-fun b!108568 () Bool)

(declare-fun lt!55781 () Unit!3307)

(assert (=> b!108568 (= e!70634 lt!55781)))

(assert (=> b!108568 (= lt!55781 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108568 (isDefined!109 (getValueByKey!155 (toList!790 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108569 () Bool)

(declare-fun Unit!3353 () Unit!3307)

(assert (=> b!108569 (= e!70634 Unit!3353)))

(declare-fun b!108570 () Bool)

(assert (=> b!108570 (= e!70633 (isDefined!109 (getValueByKey!155 (toList!790 lt!55306) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30107 c!19124) b!108568))

(assert (= (and d!30107 (not c!19124)) b!108569))

(assert (= (and d!30107 (not res!53781)) b!108570))

(declare-fun m!122085 () Bool)

(assert (=> d!30107 m!122085))

(declare-fun m!122087 () Bool)

(assert (=> b!108568 m!122087))

(declare-fun m!122089 () Bool)

(assert (=> b!108568 m!122089))

(assert (=> b!108568 m!122089))

(declare-fun m!122091 () Bool)

(assert (=> b!108568 m!122091))

(assert (=> b!108570 m!122089))

(assert (=> b!108570 m!122089))

(assert (=> b!108570 m!122091))

(assert (=> b!107839 d!30107))

(declare-fun d!30109 () Bool)

(declare-fun lt!55783 () Bool)

(assert (=> d!30109 (= lt!55783 (select (content!111 (toList!790 lt!55488)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(declare-fun e!70636 () Bool)

(assert (=> d!30109 (= lt!55783 e!70636)))

(declare-fun res!53782 () Bool)

(assert (=> d!30109 (=> (not res!53782) (not e!70636))))

(assert (=> d!30109 (= res!53782 ((_ is Cons!1619) (toList!790 lt!55488)))))

(assert (=> d!30109 (= (contains!826 (toList!790 lt!55488) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) lt!55783)))

(declare-fun b!108571 () Bool)

(declare-fun e!70635 () Bool)

(assert (=> b!108571 (= e!70636 e!70635)))

(declare-fun res!53783 () Bool)

(assert (=> b!108571 (=> res!53783 e!70635)))

(assert (=> b!108571 (= res!53783 (= (h!2217 (toList!790 lt!55488)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(declare-fun b!108572 () Bool)

(assert (=> b!108572 (= e!70635 (contains!826 (t!5730 (toList!790 lt!55488)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(assert (= (and d!30109 res!53782) b!108571))

(assert (= (and b!108571 (not res!53783)) b!108572))

(declare-fun m!122093 () Bool)

(assert (=> d!30109 m!122093))

(declare-fun m!122095 () Bool)

(assert (=> d!30109 m!122095))

(declare-fun m!122097 () Bool)

(assert (=> b!108572 m!122097))

(assert (=> b!108038 d!30109))

(declare-fun d!30111 () Bool)

(declare-fun lt!55784 () Bool)

(assert (=> d!30111 (= lt!55784 (select (content!111 (t!5730 (toList!790 lt!55147))) lt!54977))))

(declare-fun e!70638 () Bool)

(assert (=> d!30111 (= lt!55784 e!70638)))

(declare-fun res!53784 () Bool)

(assert (=> d!30111 (=> (not res!53784) (not e!70638))))

(assert (=> d!30111 (= res!53784 ((_ is Cons!1619) (t!5730 (toList!790 lt!55147))))))

(assert (=> d!30111 (= (contains!826 (t!5730 (toList!790 lt!55147)) lt!54977) lt!55784)))

(declare-fun b!108573 () Bool)

(declare-fun e!70637 () Bool)

(assert (=> b!108573 (= e!70638 e!70637)))

(declare-fun res!53785 () Bool)

(assert (=> b!108573 (=> res!53785 e!70637)))

(assert (=> b!108573 (= res!53785 (= (h!2217 (t!5730 (toList!790 lt!55147))) lt!54977))))

(declare-fun b!108574 () Bool)

(assert (=> b!108574 (= e!70637 (contains!826 (t!5730 (t!5730 (toList!790 lt!55147))) lt!54977))))

(assert (= (and d!30111 res!53784) b!108573))

(assert (= (and b!108573 (not res!53785)) b!108574))

(assert (=> d!30111 m!122067))

(declare-fun m!122099 () Bool)

(assert (=> d!30111 m!122099))

(declare-fun m!122101 () Bool)

(assert (=> b!108574 m!122101))

(assert (=> b!107829 d!30111))

(declare-fun d!30113 () Bool)

(assert (=> d!30113 (= ($colon$colon!81 e!70281 (ite c!18933 (h!2217 (toList!790 lt!54981)) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985)))) (Cons!1619 (ite c!18933 (h!2217 (toList!790 lt!54981)) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))) e!70281))))

(assert (=> bm!11448 d!30113))

(declare-fun d!30115 () Bool)

(declare-fun res!53790 () Bool)

(declare-fun e!70643 () Bool)

(assert (=> d!30115 (=> res!53790 e!70643)))

(assert (=> d!30115 (= res!53790 (or ((_ is Nil!1620) lt!55443) ((_ is Nil!1620) (t!5730 lt!55443))))))

(assert (=> d!30115 (= (isStrictlySorted!305 lt!55443) e!70643)))

(declare-fun b!108579 () Bool)

(declare-fun e!70644 () Bool)

(assert (=> b!108579 (= e!70643 e!70644)))

(declare-fun res!53791 () Bool)

(assert (=> b!108579 (=> (not res!53791) (not e!70644))))

(assert (=> b!108579 (= res!53791 (bvslt (_1!1207 (h!2217 lt!55443)) (_1!1207 (h!2217 (t!5730 lt!55443)))))))

(declare-fun b!108580 () Bool)

(assert (=> b!108580 (= e!70644 (isStrictlySorted!305 (t!5730 lt!55443)))))

(assert (= (and d!30115 (not res!53790)) b!108579))

(assert (= (and b!108579 res!53791) b!108580))

(declare-fun m!122103 () Bool)

(assert (=> b!108580 m!122103))

(assert (=> d!29799 d!30115))

(declare-fun d!30117 () Bool)

(declare-fun res!53792 () Bool)

(declare-fun e!70645 () Bool)

(assert (=> d!30117 (=> res!53792 e!70645)))

(assert (=> d!30117 (= res!53792 (or ((_ is Nil!1620) (toList!790 lt!54981)) ((_ is Nil!1620) (t!5730 (toList!790 lt!54981)))))))

(assert (=> d!30117 (= (isStrictlySorted!305 (toList!790 lt!54981)) e!70645)))

(declare-fun b!108581 () Bool)

(declare-fun e!70646 () Bool)

(assert (=> b!108581 (= e!70645 e!70646)))

(declare-fun res!53793 () Bool)

(assert (=> b!108581 (=> (not res!53793) (not e!70646))))

(assert (=> b!108581 (= res!53793 (bvslt (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 (h!2217 (t!5730 (toList!790 lt!54981))))))))

(declare-fun b!108582 () Bool)

(assert (=> b!108582 (= e!70646 (isStrictlySorted!305 (t!5730 (toList!790 lt!54981))))))

(assert (= (and d!30117 (not res!53792)) b!108581))

(assert (= (and b!108581 res!53793) b!108582))

(assert (=> b!108582 m!121809))

(assert (=> d!29799 d!30117))

(declare-fun d!30119 () Bool)

(declare-fun e!70647 () Bool)

(assert (=> d!30119 e!70647))

(declare-fun res!53795 () Bool)

(assert (=> d!30119 (=> (not res!53795) (not e!70647))))

(declare-fun lt!55785 () ListLongMap!1549)

(assert (=> d!30119 (= res!53795 (contains!824 lt!55785 (_1!1207 (ite (or c!18939 c!18940) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(declare-fun lt!55788 () List!1623)

(assert (=> d!30119 (= lt!55785 (ListLongMap!1550 lt!55788))))

(declare-fun lt!55786 () Unit!3307)

(declare-fun lt!55787 () Unit!3307)

(assert (=> d!30119 (= lt!55786 lt!55787)))

(assert (=> d!30119 (= (getValueByKey!155 lt!55788 (_1!1207 (ite (or c!18939 c!18940) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))) (Some!160 (_2!1207 (ite (or c!18939 c!18940) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!30119 (= lt!55787 (lemmaContainsTupThenGetReturnValue!74 lt!55788 (_1!1207 (ite (or c!18939 c!18940) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (_2!1207 (ite (or c!18939 c!18940) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!30119 (= lt!55788 (insertStrictlySorted!77 (toList!790 (ite c!18939 call!11456 (ite c!18940 call!11454 call!11455))) (_1!1207 (ite (or c!18939 c!18940) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (_2!1207 (ite (or c!18939 c!18940) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!30119 (= (+!137 (ite c!18939 call!11456 (ite c!18940 call!11454 call!11455)) (ite (or c!18939 c!18940) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) lt!55785)))

(declare-fun b!108583 () Bool)

(declare-fun res!53794 () Bool)

(assert (=> b!108583 (=> (not res!53794) (not e!70647))))

(assert (=> b!108583 (= res!53794 (= (getValueByKey!155 (toList!790 lt!55785) (_1!1207 (ite (or c!18939 c!18940) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))) (Some!160 (_2!1207 (ite (or c!18939 c!18940) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))))

(declare-fun b!108584 () Bool)

(assert (=> b!108584 (= e!70647 (contains!826 (toList!790 lt!55785) (ite (or c!18939 c!18940) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (= (and d!30119 res!53795) b!108583))

(assert (= (and b!108583 res!53794) b!108584))

(declare-fun m!122105 () Bool)

(assert (=> d!30119 m!122105))

(declare-fun m!122107 () Bool)

(assert (=> d!30119 m!122107))

(declare-fun m!122109 () Bool)

(assert (=> d!30119 m!122109))

(declare-fun m!122111 () Bool)

(assert (=> d!30119 m!122111))

(declare-fun m!122113 () Bool)

(assert (=> b!108583 m!122113))

(declare-fun m!122115 () Bool)

(assert (=> b!108584 m!122115))

(assert (=> bm!11454 d!30119))

(declare-fun d!30121 () Bool)

(assert (=> d!30121 (= (get!1344 (getValueByKey!155 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2910 (getValueByKey!155 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29823 d!30121))

(declare-fun b!108587 () Bool)

(declare-fun e!70649 () Option!161)

(assert (=> b!108587 (= e!70649 (getValueByKey!155 (t!5730 (toList!790 lt!55124)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108586 () Bool)

(declare-fun e!70648 () Option!161)

(assert (=> b!108586 (= e!70648 e!70649)))

(declare-fun c!19126 () Bool)

(assert (=> b!108586 (= c!19126 (and ((_ is Cons!1619) (toList!790 lt!55124)) (not (= (_1!1207 (h!2217 (toList!790 lt!55124))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!30123 () Bool)

(declare-fun c!19125 () Bool)

(assert (=> d!30123 (= c!19125 (and ((_ is Cons!1619) (toList!790 lt!55124)) (= (_1!1207 (h!2217 (toList!790 lt!55124))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30123 (= (getValueByKey!155 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000) e!70648)))

(declare-fun b!108588 () Bool)

(assert (=> b!108588 (= e!70649 None!159)))

(declare-fun b!108585 () Bool)

(assert (=> b!108585 (= e!70648 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55124)))))))

(assert (= (and d!30123 c!19125) b!108585))

(assert (= (and d!30123 (not c!19125)) b!108586))

(assert (= (and b!108586 c!19126) b!108587))

(assert (= (and b!108586 (not c!19126)) b!108588))

(declare-fun m!122117 () Bool)

(assert (=> b!108587 m!122117))

(assert (=> d!29823 d!30123))

(declare-fun b!108591 () Bool)

(declare-fun e!70651 () Option!161)

(assert (=> b!108591 (= e!70651 (getValueByKey!155 (t!5730 (toList!790 lt!55444)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!108590 () Bool)

(declare-fun e!70650 () Option!161)

(assert (=> b!108590 (= e!70650 e!70651)))

(declare-fun c!19128 () Bool)

(assert (=> b!108590 (= c!19128 (and ((_ is Cons!1619) (toList!790 lt!55444)) (not (= (_1!1207 (h!2217 (toList!790 lt!55444))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(declare-fun c!19127 () Bool)

(declare-fun d!30125 () Bool)

(assert (=> d!30125 (= c!19127 (and ((_ is Cons!1619) (toList!790 lt!55444)) (= (_1!1207 (h!2217 (toList!790 lt!55444))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!30125 (= (getValueByKey!155 (toList!790 lt!55444) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) e!70650)))

(declare-fun b!108592 () Bool)

(assert (=> b!108592 (= e!70651 None!159)))

(declare-fun b!108589 () Bool)

(assert (=> b!108589 (= e!70650 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55444)))))))

(assert (= (and d!30125 c!19127) b!108589))

(assert (= (and d!30125 (not c!19127)) b!108590))

(assert (= (and b!108590 c!19128) b!108591))

(assert (= (and b!108590 (not c!19128)) b!108592))

(declare-fun m!122119 () Bool)

(assert (=> b!108591 m!122119))

(assert (=> b!107985 d!30125))

(declare-fun d!30127 () Bool)

(assert (=> d!30127 (contains!824 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))

(declare-fun lt!55791 () Unit!3307)

(declare-fun choose!687 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 64) (_ BitVec 32) Int) Unit!3307)

(assert (=> d!30127 (= lt!55791 (choose!687 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(assert (=> d!30127 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30127 (= (lemmaArrayContainsKeyThenInListMap!31 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55791)))

(declare-fun bs!4447 () Bool)

(assert (= bs!4447 d!30127))

(assert (=> bs!4447 m!120539))

(assert (=> bs!4447 m!120539))

(assert (=> bs!4447 m!120387))

(assert (=> bs!4447 m!120897))

(assert (=> bs!4447 m!120387))

(declare-fun m!122121 () Bool)

(assert (=> bs!4447 m!122121))

(assert (=> bs!4447 m!120787))

(assert (=> b!107908 d!30127))

(declare-fun d!30129 () Bool)

(declare-fun e!70652 () Bool)

(assert (=> d!30129 e!70652))

(declare-fun res!53796 () Bool)

(assert (=> d!30129 (=> res!53796 e!70652)))

(declare-fun lt!55792 () Bool)

(assert (=> d!30129 (= res!53796 (not lt!55792))))

(declare-fun lt!55793 () Bool)

(assert (=> d!30129 (= lt!55792 lt!55793)))

(declare-fun lt!55795 () Unit!3307)

(declare-fun e!70653 () Unit!3307)

(assert (=> d!30129 (= lt!55795 e!70653)))

(declare-fun c!19129 () Bool)

(assert (=> d!30129 (= c!19129 lt!55793)))

(assert (=> d!30129 (= lt!55793 (containsKey!159 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!30129 (= (contains!824 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) lt!55792)))

(declare-fun b!108593 () Bool)

(declare-fun lt!55794 () Unit!3307)

(assert (=> b!108593 (= e!70653 lt!55794)))

(assert (=> b!108593 (= lt!55794 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> b!108593 (isDefined!109 (getValueByKey!155 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!108594 () Bool)

(declare-fun Unit!3354 () Unit!3307)

(assert (=> b!108594 (= e!70653 Unit!3354)))

(declare-fun b!108595 () Bool)

(assert (=> b!108595 (= e!70652 (isDefined!109 (getValueByKey!155 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (= (and d!30129 c!19129) b!108593))

(assert (= (and d!30129 (not c!19129)) b!108594))

(assert (= (and d!30129 (not res!53796)) b!108595))

(assert (=> d!30129 m!120387))

(declare-fun m!122123 () Bool)

(assert (=> d!30129 m!122123))

(assert (=> b!108593 m!120387))

(declare-fun m!122125 () Bool)

(assert (=> b!108593 m!122125))

(assert (=> b!108593 m!120387))

(declare-fun m!122127 () Bool)

(assert (=> b!108593 m!122127))

(assert (=> b!108593 m!122127))

(declare-fun m!122129 () Bool)

(assert (=> b!108593 m!122129))

(assert (=> b!108595 m!120387))

(assert (=> b!108595 m!122127))

(assert (=> b!108595 m!122127))

(assert (=> b!108595 m!122129))

(assert (=> b!107908 d!30129))

(assert (=> b!107908 d!29875))

(assert (=> b!108019 d!29697))

(declare-fun d!30131 () Bool)

(declare-fun res!53797 () Bool)

(declare-fun e!70654 () Bool)

(assert (=> d!30131 (=> res!53797 e!70654)))

(assert (=> d!30131 (= res!53797 (and ((_ is Cons!1619) (toList!790 lt!55143)) (= (_1!1207 (h!2217 (toList!790 lt!55143))) (_1!1207 lt!54985))))))

(assert (=> d!30131 (= (containsKey!159 (toList!790 lt!55143) (_1!1207 lt!54985)) e!70654)))

(declare-fun b!108596 () Bool)

(declare-fun e!70655 () Bool)

(assert (=> b!108596 (= e!70654 e!70655)))

(declare-fun res!53798 () Bool)

(assert (=> b!108596 (=> (not res!53798) (not e!70655))))

(assert (=> b!108596 (= res!53798 (and (or (not ((_ is Cons!1619) (toList!790 lt!55143))) (bvsle (_1!1207 (h!2217 (toList!790 lt!55143))) (_1!1207 lt!54985))) ((_ is Cons!1619) (toList!790 lt!55143)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55143))) (_1!1207 lt!54985))))))

(declare-fun b!108597 () Bool)

(assert (=> b!108597 (= e!70655 (containsKey!159 (t!5730 (toList!790 lt!55143)) (_1!1207 lt!54985)))))

(assert (= (and d!30131 (not res!53797)) b!108596))

(assert (= (and b!108596 res!53798) b!108597))

(declare-fun m!122131 () Bool)

(assert (=> b!108597 m!122131))

(assert (=> d!29793 d!30131))

(declare-fun d!30133 () Bool)

(assert (=> d!30133 (= (apply!99 lt!55561 lt!55577) (get!1344 (getValueByKey!155 (toList!790 lt!55561) lt!55577)))))

(declare-fun bs!4448 () Bool)

(assert (= bs!4448 d!30133))

(declare-fun m!122133 () Bool)

(assert (=> bs!4448 m!122133))

(assert (=> bs!4448 m!122133))

(declare-fun m!122135 () Bool)

(assert (=> bs!4448 m!122135))

(assert (=> b!108162 d!30133))

(declare-fun d!30135 () Bool)

(declare-fun e!70656 () Bool)

(assert (=> d!30135 e!70656))

(declare-fun res!53800 () Bool)

(assert (=> d!30135 (=> (not res!53800) (not e!70656))))

(declare-fun lt!55796 () ListLongMap!1549)

(assert (=> d!30135 (= res!53800 (contains!824 lt!55796 (_1!1207 (tuple2!2393 lt!55564 (minValue!2478 newMap!16)))))))

(declare-fun lt!55799 () List!1623)

(assert (=> d!30135 (= lt!55796 (ListLongMap!1550 lt!55799))))

(declare-fun lt!55797 () Unit!3307)

(declare-fun lt!55798 () Unit!3307)

(assert (=> d!30135 (= lt!55797 lt!55798)))

(assert (=> d!30135 (= (getValueByKey!155 lt!55799 (_1!1207 (tuple2!2393 lt!55564 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55564 (minValue!2478 newMap!16)))))))

(assert (=> d!30135 (= lt!55798 (lemmaContainsTupThenGetReturnValue!74 lt!55799 (_1!1207 (tuple2!2393 lt!55564 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55564 (minValue!2478 newMap!16)))))))

(assert (=> d!30135 (= lt!55799 (insertStrictlySorted!77 (toList!790 lt!55567) (_1!1207 (tuple2!2393 lt!55564 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55564 (minValue!2478 newMap!16)))))))

(assert (=> d!30135 (= (+!137 lt!55567 (tuple2!2393 lt!55564 (minValue!2478 newMap!16))) lt!55796)))

(declare-fun b!108598 () Bool)

(declare-fun res!53799 () Bool)

(assert (=> b!108598 (=> (not res!53799) (not e!70656))))

(assert (=> b!108598 (= res!53799 (= (getValueByKey!155 (toList!790 lt!55796) (_1!1207 (tuple2!2393 lt!55564 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55564 (minValue!2478 newMap!16))))))))

(declare-fun b!108599 () Bool)

(assert (=> b!108599 (= e!70656 (contains!826 (toList!790 lt!55796) (tuple2!2393 lt!55564 (minValue!2478 newMap!16))))))

(assert (= (and d!30135 res!53800) b!108598))

(assert (= (and b!108598 res!53799) b!108599))

(declare-fun m!122137 () Bool)

(assert (=> d!30135 m!122137))

(declare-fun m!122139 () Bool)

(assert (=> d!30135 m!122139))

(declare-fun m!122141 () Bool)

(assert (=> d!30135 m!122141))

(declare-fun m!122143 () Bool)

(assert (=> d!30135 m!122143))

(declare-fun m!122145 () Bool)

(assert (=> b!108598 m!122145))

(declare-fun m!122147 () Bool)

(assert (=> b!108599 m!122147))

(assert (=> b!108162 d!30135))

(declare-fun d!30137 () Bool)

(assert (=> d!30137 (= (apply!99 (+!137 lt!55573 (tuple2!2393 lt!55565 (minValue!2478 newMap!16))) lt!55563) (apply!99 lt!55573 lt!55563))))

(declare-fun lt!55800 () Unit!3307)

(assert (=> d!30137 (= lt!55800 (choose!677 lt!55573 lt!55565 (minValue!2478 newMap!16) lt!55563))))

(declare-fun e!70657 () Bool)

(assert (=> d!30137 e!70657))

(declare-fun res!53801 () Bool)

(assert (=> d!30137 (=> (not res!53801) (not e!70657))))

(assert (=> d!30137 (= res!53801 (contains!824 lt!55573 lt!55563))))

(assert (=> d!30137 (= (addApplyDifferent!75 lt!55573 lt!55565 (minValue!2478 newMap!16) lt!55563) lt!55800)))

(declare-fun b!108600 () Bool)

(assert (=> b!108600 (= e!70657 (not (= lt!55563 lt!55565)))))

(assert (= (and d!30137 res!53801) b!108600))

(assert (=> d!30137 m!121407))

(declare-fun m!122149 () Bool)

(assert (=> d!30137 m!122149))

(assert (=> d!30137 m!121397))

(declare-fun m!122151 () Bool)

(assert (=> d!30137 m!122151))

(assert (=> d!30137 m!121397))

(assert (=> d!30137 m!121403))

(assert (=> b!108162 d!30137))

(declare-fun d!30139 () Bool)

(assert (=> d!30139 (= (apply!99 lt!55573 lt!55563) (get!1344 (getValueByKey!155 (toList!790 lt!55573) lt!55563)))))

(declare-fun bs!4449 () Bool)

(assert (= bs!4449 d!30139))

(declare-fun m!122153 () Bool)

(assert (=> bs!4449 m!122153))

(assert (=> bs!4449 m!122153))

(declare-fun m!122155 () Bool)

(assert (=> bs!4449 m!122155))

(assert (=> b!108162 d!30139))

(declare-fun d!30141 () Bool)

(declare-fun e!70658 () Bool)

(assert (=> d!30141 e!70658))

(declare-fun res!53803 () Bool)

(assert (=> d!30141 (=> (not res!53803) (not e!70658))))

(declare-fun lt!55801 () ListLongMap!1549)

(assert (=> d!30141 (= res!53803 (contains!824 lt!55801 (_1!1207 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16)))))))

(declare-fun lt!55804 () List!1623)

(assert (=> d!30141 (= lt!55801 (ListLongMap!1550 lt!55804))))

(declare-fun lt!55802 () Unit!3307)

(declare-fun lt!55803 () Unit!3307)

(assert (=> d!30141 (= lt!55802 lt!55803)))

(assert (=> d!30141 (= (getValueByKey!155 lt!55804 (_1!1207 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30141 (= lt!55803 (lemmaContainsTupThenGetReturnValue!74 lt!55804 (_1!1207 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30141 (= lt!55804 (insertStrictlySorted!77 (toList!790 lt!55557) (_1!1207 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30141 (= (+!137 lt!55557 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16))) lt!55801)))

(declare-fun b!108601 () Bool)

(declare-fun res!53802 () Bool)

(assert (=> b!108601 (=> (not res!53802) (not e!70658))))

(assert (=> b!108601 (= res!53802 (= (getValueByKey!155 (toList!790 lt!55801) (_1!1207 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16))))))))

(declare-fun b!108602 () Bool)

(assert (=> b!108602 (= e!70658 (contains!826 (toList!790 lt!55801) (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16))))))

(assert (= (and d!30141 res!53803) b!108601))

(assert (= (and b!108601 res!53802) b!108602))

(declare-fun m!122157 () Bool)

(assert (=> d!30141 m!122157))

(declare-fun m!122159 () Bool)

(assert (=> d!30141 m!122159))

(declare-fun m!122161 () Bool)

(assert (=> d!30141 m!122161))

(declare-fun m!122163 () Bool)

(assert (=> d!30141 m!122163))

(declare-fun m!122165 () Bool)

(assert (=> b!108601 m!122165))

(declare-fun m!122167 () Bool)

(assert (=> b!108602 m!122167))

(assert (=> b!108162 d!30141))

(declare-fun d!30143 () Bool)

(declare-fun e!70659 () Bool)

(assert (=> d!30143 e!70659))

(declare-fun res!53805 () Bool)

(assert (=> d!30143 (=> (not res!53805) (not e!70659))))

(declare-fun lt!55805 () ListLongMap!1549)

(assert (=> d!30143 (= res!53805 (contains!824 lt!55805 (_1!1207 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16)))))))

(declare-fun lt!55808 () List!1623)

(assert (=> d!30143 (= lt!55805 (ListLongMap!1550 lt!55808))))

(declare-fun lt!55806 () Unit!3307)

(declare-fun lt!55807 () Unit!3307)

(assert (=> d!30143 (= lt!55806 lt!55807)))

(assert (=> d!30143 (= (getValueByKey!155 lt!55808 (_1!1207 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30143 (= lt!55807 (lemmaContainsTupThenGetReturnValue!74 lt!55808 (_1!1207 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30143 (= lt!55808 (insertStrictlySorted!77 (toList!790 lt!55561) (_1!1207 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30143 (= (+!137 lt!55561 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16))) lt!55805)))

(declare-fun b!108603 () Bool)

(declare-fun res!53804 () Bool)

(assert (=> b!108603 (=> (not res!53804) (not e!70659))))

(assert (=> b!108603 (= res!53804 (= (getValueByKey!155 (toList!790 lt!55805) (_1!1207 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16))))))))

(declare-fun b!108604 () Bool)

(assert (=> b!108604 (= e!70659 (contains!826 (toList!790 lt!55805) (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16))))))

(assert (= (and d!30143 res!53805) b!108603))

(assert (= (and b!108603 res!53804) b!108604))

(declare-fun m!122169 () Bool)

(assert (=> d!30143 m!122169))

(declare-fun m!122171 () Bool)

(assert (=> d!30143 m!122171))

(declare-fun m!122173 () Bool)

(assert (=> d!30143 m!122173))

(declare-fun m!122175 () Bool)

(assert (=> d!30143 m!122175))

(declare-fun m!122177 () Bool)

(assert (=> b!108603 m!122177))

(declare-fun m!122179 () Bool)

(assert (=> b!108604 m!122179))

(assert (=> b!108162 d!30143))

(declare-fun d!30145 () Bool)

(assert (=> d!30145 (= (apply!99 (+!137 lt!55567 (tuple2!2393 lt!55564 (minValue!2478 newMap!16))) lt!55572) (apply!99 lt!55567 lt!55572))))

(declare-fun lt!55809 () Unit!3307)

(assert (=> d!30145 (= lt!55809 (choose!677 lt!55567 lt!55564 (minValue!2478 newMap!16) lt!55572))))

(declare-fun e!70660 () Bool)

(assert (=> d!30145 e!70660))

(declare-fun res!53806 () Bool)

(assert (=> d!30145 (=> (not res!53806) (not e!70660))))

(assert (=> d!30145 (= res!53806 (contains!824 lt!55567 lt!55572))))

(assert (=> d!30145 (= (addApplyDifferent!75 lt!55567 lt!55564 (minValue!2478 newMap!16) lt!55572) lt!55809)))

(declare-fun b!108605 () Bool)

(assert (=> b!108605 (= e!70660 (not (= lt!55572 lt!55564)))))

(assert (= (and d!30145 res!53806) b!108605))

(assert (=> d!30145 m!121413))

(declare-fun m!122181 () Bool)

(assert (=> d!30145 m!122181))

(assert (=> d!30145 m!121391))

(declare-fun m!122183 () Bool)

(assert (=> d!30145 m!122183))

(assert (=> d!30145 m!121391))

(assert (=> d!30145 m!121393))

(assert (=> b!108162 d!30145))

(declare-fun d!30147 () Bool)

(assert (=> d!30147 (= (apply!99 (+!137 lt!55573 (tuple2!2393 lt!55565 (minValue!2478 newMap!16))) lt!55563) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55573 (tuple2!2393 lt!55565 (minValue!2478 newMap!16)))) lt!55563)))))

(declare-fun bs!4450 () Bool)

(assert (= bs!4450 d!30147))

(declare-fun m!122185 () Bool)

(assert (=> bs!4450 m!122185))

(assert (=> bs!4450 m!122185))

(declare-fun m!122187 () Bool)

(assert (=> bs!4450 m!122187))

(assert (=> b!108162 d!30147))

(assert (=> b!108162 d!29951))

(declare-fun d!30149 () Bool)

(declare-fun e!70661 () Bool)

(assert (=> d!30149 e!70661))

(declare-fun res!53807 () Bool)

(assert (=> d!30149 (=> res!53807 e!70661)))

(declare-fun lt!55810 () Bool)

(assert (=> d!30149 (= res!53807 (not lt!55810))))

(declare-fun lt!55811 () Bool)

(assert (=> d!30149 (= lt!55810 lt!55811)))

(declare-fun lt!55813 () Unit!3307)

(declare-fun e!70662 () Unit!3307)

(assert (=> d!30149 (= lt!55813 e!70662)))

(declare-fun c!19130 () Bool)

(assert (=> d!30149 (= c!19130 lt!55811)))

(assert (=> d!30149 (= lt!55811 (containsKey!159 (toList!790 (+!137 lt!55557 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16)))) lt!55562))))

(assert (=> d!30149 (= (contains!824 (+!137 lt!55557 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16))) lt!55562) lt!55810)))

(declare-fun b!108606 () Bool)

(declare-fun lt!55812 () Unit!3307)

(assert (=> b!108606 (= e!70662 lt!55812)))

(assert (=> b!108606 (= lt!55812 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (+!137 lt!55557 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16)))) lt!55562))))

(assert (=> b!108606 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55557 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16)))) lt!55562))))

(declare-fun b!108607 () Bool)

(declare-fun Unit!3355 () Unit!3307)

(assert (=> b!108607 (= e!70662 Unit!3355)))

(declare-fun b!108608 () Bool)

(assert (=> b!108608 (= e!70661 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55557 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16)))) lt!55562)))))

(assert (= (and d!30149 c!19130) b!108606))

(assert (= (and d!30149 (not c!19130)) b!108607))

(assert (= (and d!30149 (not res!53807)) b!108608))

(declare-fun m!122189 () Bool)

(assert (=> d!30149 m!122189))

(declare-fun m!122191 () Bool)

(assert (=> b!108606 m!122191))

(declare-fun m!122193 () Bool)

(assert (=> b!108606 m!122193))

(assert (=> b!108606 m!122193))

(declare-fun m!122195 () Bool)

(assert (=> b!108606 m!122195))

(assert (=> b!108608 m!122193))

(assert (=> b!108608 m!122193))

(assert (=> b!108608 m!122195))

(assert (=> b!108162 d!30149))

(declare-fun d!30151 () Bool)

(assert (=> d!30151 (= (apply!99 lt!55567 lt!55572) (get!1344 (getValueByKey!155 (toList!790 lt!55567) lt!55572)))))

(declare-fun bs!4451 () Bool)

(assert (= bs!4451 d!30151))

(declare-fun m!122197 () Bool)

(assert (=> bs!4451 m!122197))

(assert (=> bs!4451 m!122197))

(declare-fun m!122199 () Bool)

(assert (=> bs!4451 m!122199))

(assert (=> b!108162 d!30151))

(declare-fun d!30153 () Bool)

(assert (=> d!30153 (= (apply!99 (+!137 lt!55561 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16))) lt!55577) (apply!99 lt!55561 lt!55577))))

(declare-fun lt!55814 () Unit!3307)

(assert (=> d!30153 (= lt!55814 (choose!677 lt!55561 lt!55558 (zeroValue!2478 newMap!16) lt!55577))))

(declare-fun e!70663 () Bool)

(assert (=> d!30153 e!70663))

(declare-fun res!53808 () Bool)

(assert (=> d!30153 (=> (not res!53808) (not e!70663))))

(assert (=> d!30153 (= res!53808 (contains!824 lt!55561 lt!55577))))

(assert (=> d!30153 (= (addApplyDifferent!75 lt!55561 lt!55558 (zeroValue!2478 newMap!16) lt!55577) lt!55814)))

(declare-fun b!108609 () Bool)

(assert (=> b!108609 (= e!70663 (not (= lt!55577 lt!55558)))))

(assert (= (and d!30153 res!53808) b!108609))

(assert (=> d!30153 m!121395))

(declare-fun m!122201 () Bool)

(assert (=> d!30153 m!122201))

(assert (=> d!30153 m!121409))

(declare-fun m!122203 () Bool)

(assert (=> d!30153 m!122203))

(assert (=> d!30153 m!121409))

(assert (=> d!30153 m!121415))

(assert (=> b!108162 d!30153))

(declare-fun d!30155 () Bool)

(assert (=> d!30155 (= (apply!99 (+!137 lt!55567 (tuple2!2393 lt!55564 (minValue!2478 newMap!16))) lt!55572) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55567 (tuple2!2393 lt!55564 (minValue!2478 newMap!16)))) lt!55572)))))

(declare-fun bs!4452 () Bool)

(assert (= bs!4452 d!30155))

(declare-fun m!122205 () Bool)

(assert (=> bs!4452 m!122205))

(assert (=> bs!4452 m!122205))

(declare-fun m!122207 () Bool)

(assert (=> bs!4452 m!122207))

(assert (=> b!108162 d!30155))

(declare-fun d!30157 () Bool)

(assert (=> d!30157 (contains!824 (+!137 lt!55557 (tuple2!2393 lt!55556 (zeroValue!2478 newMap!16))) lt!55562)))

(declare-fun lt!55815 () Unit!3307)

(assert (=> d!30157 (= lt!55815 (choose!678 lt!55557 lt!55556 (zeroValue!2478 newMap!16) lt!55562))))

(assert (=> d!30157 (contains!824 lt!55557 lt!55562)))

(assert (=> d!30157 (= (addStillContains!75 lt!55557 lt!55556 (zeroValue!2478 newMap!16) lt!55562) lt!55815)))

(declare-fun bs!4453 () Bool)

(assert (= bs!4453 d!30157))

(assert (=> bs!4453 m!121399))

(assert (=> bs!4453 m!121399))

(assert (=> bs!4453 m!121411))

(declare-fun m!122209 () Bool)

(assert (=> bs!4453 m!122209))

(declare-fun m!122211 () Bool)

(assert (=> bs!4453 m!122211))

(assert (=> b!108162 d!30157))

(declare-fun d!30159 () Bool)

(declare-fun e!70664 () Bool)

(assert (=> d!30159 e!70664))

(declare-fun res!53810 () Bool)

(assert (=> d!30159 (=> (not res!53810) (not e!70664))))

(declare-fun lt!55816 () ListLongMap!1549)

(assert (=> d!30159 (= res!53810 (contains!824 lt!55816 (_1!1207 (tuple2!2393 lt!55565 (minValue!2478 newMap!16)))))))

(declare-fun lt!55819 () List!1623)

(assert (=> d!30159 (= lt!55816 (ListLongMap!1550 lt!55819))))

(declare-fun lt!55817 () Unit!3307)

(declare-fun lt!55818 () Unit!3307)

(assert (=> d!30159 (= lt!55817 lt!55818)))

(assert (=> d!30159 (= (getValueByKey!155 lt!55819 (_1!1207 (tuple2!2393 lt!55565 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55565 (minValue!2478 newMap!16)))))))

(assert (=> d!30159 (= lt!55818 (lemmaContainsTupThenGetReturnValue!74 lt!55819 (_1!1207 (tuple2!2393 lt!55565 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55565 (minValue!2478 newMap!16)))))))

(assert (=> d!30159 (= lt!55819 (insertStrictlySorted!77 (toList!790 lt!55573) (_1!1207 (tuple2!2393 lt!55565 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55565 (minValue!2478 newMap!16)))))))

(assert (=> d!30159 (= (+!137 lt!55573 (tuple2!2393 lt!55565 (minValue!2478 newMap!16))) lt!55816)))

(declare-fun b!108610 () Bool)

(declare-fun res!53809 () Bool)

(assert (=> b!108610 (=> (not res!53809) (not e!70664))))

(assert (=> b!108610 (= res!53809 (= (getValueByKey!155 (toList!790 lt!55816) (_1!1207 (tuple2!2393 lt!55565 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55565 (minValue!2478 newMap!16))))))))

(declare-fun b!108611 () Bool)

(assert (=> b!108611 (= e!70664 (contains!826 (toList!790 lt!55816) (tuple2!2393 lt!55565 (minValue!2478 newMap!16))))))

(assert (= (and d!30159 res!53810) b!108610))

(assert (= (and b!108610 res!53809) b!108611))

(declare-fun m!122213 () Bool)

(assert (=> d!30159 m!122213))

(declare-fun m!122215 () Bool)

(assert (=> d!30159 m!122215))

(declare-fun m!122217 () Bool)

(assert (=> d!30159 m!122217))

(declare-fun m!122219 () Bool)

(assert (=> d!30159 m!122219))

(declare-fun m!122221 () Bool)

(assert (=> b!108610 m!122221))

(declare-fun m!122223 () Bool)

(assert (=> b!108611 m!122223))

(assert (=> b!108162 d!30159))

(declare-fun d!30161 () Bool)

(assert (=> d!30161 (= (apply!99 (+!137 lt!55561 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16))) lt!55577) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55561 (tuple2!2393 lt!55558 (zeroValue!2478 newMap!16)))) lt!55577)))))

(declare-fun bs!4454 () Bool)

(assert (= bs!4454 d!30161))

(declare-fun m!122225 () Bool)

(assert (=> bs!4454 m!122225))

(assert (=> bs!4454 m!122225))

(declare-fun m!122227 () Bool)

(assert (=> bs!4454 m!122227))

(assert (=> b!108162 d!30161))

(declare-fun d!30163 () Bool)

(declare-fun c!19131 () Bool)

(assert (=> d!30163 (= c!19131 ((_ is Nil!1620) (toList!790 lt!55151)))))

(declare-fun e!70665 () (InoxSet tuple2!2392))

(assert (=> d!30163 (= (content!111 (toList!790 lt!55151)) e!70665)))

(declare-fun b!108612 () Bool)

(assert (=> b!108612 (= e!70665 ((as const (Array tuple2!2392 Bool)) false))))

(declare-fun b!108613 () Bool)

(assert (=> b!108613 (= e!70665 ((_ map or) (store ((as const (Array tuple2!2392 Bool)) false) (h!2217 (toList!790 lt!55151)) true) (content!111 (t!5730 (toList!790 lt!55151)))))))

(assert (= (and d!30163 c!19131) b!108612))

(assert (= (and d!30163 (not c!19131)) b!108613))

(declare-fun m!122229 () Bool)

(assert (=> b!108613 m!122229))

(declare-fun m!122231 () Bool)

(assert (=> b!108613 m!122231))

(assert (=> d!29741 d!30163))

(assert (=> d!29873 d!29851))

(declare-fun bm!11529 () Bool)

(declare-fun call!11532 () Bool)

(declare-fun lt!55822 () SeekEntryResult!263)

(declare-fun c!19137 () Bool)

(assert (=> bm!11529 (= call!11532 (inRange!0 (ite c!19137 (index!3201 lt!55822) (index!3204 lt!55822)) (mask!6762 newMap!16)))))

(declare-fun b!108630 () Bool)

(declare-fun res!53820 () Bool)

(assert (=> b!108630 (= res!53820 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3201 lt!55822)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70675 () Bool)

(assert (=> b!108630 (=> (not res!53820) (not e!70675))))

(declare-fun b!108631 () Bool)

(declare-fun e!70676 () Bool)

(declare-fun e!70677 () Bool)

(assert (=> b!108631 (= e!70676 e!70677)))

(declare-fun c!19136 () Bool)

(assert (=> b!108631 (= c!19136 ((_ is MissingVacant!263) lt!55822))))

(declare-fun call!11533 () Bool)

(declare-fun bm!11530 () Bool)

(assert (=> bm!11530 (= call!11533 (arrayContainsKey!0 (_keys!4314 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!108632 () Bool)

(assert (=> b!108632 (= e!70677 ((_ is Undefined!263) lt!55822))))

(declare-fun d!30165 () Bool)

(assert (=> d!30165 e!70676))

(assert (=> d!30165 (= c!19137 ((_ is MissingZero!263) lt!55822))))

(assert (=> d!30165 (= lt!55822 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(assert (=> d!30165 true))

(declare-fun _$34!898 () Unit!3307)

(assert (=> d!30165 (= (choose!684 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)) _$34!898)))

(declare-fun b!108633 () Bool)

(declare-fun e!70674 () Bool)

(assert (=> b!108633 (= e!70674 (not call!11533))))

(declare-fun b!108634 () Bool)

(assert (=> b!108634 (= e!70675 (not call!11533))))

(declare-fun b!108635 () Bool)

(assert (=> b!108635 (= e!70676 e!70675)))

(declare-fun res!53822 () Bool)

(assert (=> b!108635 (= res!53822 call!11532)))

(assert (=> b!108635 (=> (not res!53822) (not e!70675))))

(declare-fun b!108636 () Bool)

(declare-fun res!53819 () Bool)

(assert (=> b!108636 (=> (not res!53819) (not e!70674))))

(assert (=> b!108636 (= res!53819 call!11532)))

(assert (=> b!108636 (= e!70677 e!70674)))

(declare-fun b!108637 () Bool)

(declare-fun res!53821 () Bool)

(assert (=> b!108637 (=> (not res!53821) (not e!70674))))

(assert (=> b!108637 (= res!53821 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3204 lt!55822)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30165 c!19137) b!108635))

(assert (= (and d!30165 (not c!19137)) b!108631))

(assert (= (and b!108635 res!53822) b!108630))

(assert (= (and b!108630 res!53820) b!108634))

(assert (= (and b!108631 c!19136) b!108636))

(assert (= (and b!108631 (not c!19136)) b!108632))

(assert (= (and b!108636 res!53819) b!108637))

(assert (= (and b!108637 res!53821) b!108633))

(assert (= (or b!108635 b!108636) bm!11529))

(assert (= (or b!108634 b!108633) bm!11530))

(declare-fun m!122233 () Bool)

(assert (=> b!108630 m!122233))

(declare-fun m!122235 () Bool)

(assert (=> b!108637 m!122235))

(assert (=> d!30165 m!120387))

(assert (=> d!30165 m!120709))

(assert (=> bm!11530 m!120387))

(assert (=> bm!11530 m!120741))

(declare-fun m!122237 () Bool)

(assert (=> bm!11529 m!122237))

(assert (=> d!29873 d!30165))

(assert (=> d!29873 d!29941))

(declare-fun d!30167 () Bool)

(declare-fun res!53823 () Bool)

(declare-fun e!70678 () Bool)

(assert (=> d!30167 (=> (not res!53823) (not e!70678))))

(assert (=> d!30167 (= res!53823 (simpleValid!75 (_2!1206 lt!55389)))))

(assert (=> d!30167 (= (valid!428 (_2!1206 lt!55389)) e!70678)))

(declare-fun b!108638 () Bool)

(declare-fun res!53824 () Bool)

(assert (=> b!108638 (=> (not res!53824) (not e!70678))))

(assert (=> b!108638 (= res!53824 (= (arrayCountValidKeys!0 (_keys!4314 (_2!1206 lt!55389)) #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55389)))) (_size!504 (_2!1206 lt!55389))))))

(declare-fun b!108639 () Bool)

(declare-fun res!53825 () Bool)

(assert (=> b!108639 (=> (not res!53825) (not e!70678))))

(assert (=> b!108639 (= res!53825 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4314 (_2!1206 lt!55389)) (mask!6762 (_2!1206 lt!55389))))))

(declare-fun b!108640 () Bool)

(assert (=> b!108640 (= e!70678 (arrayNoDuplicates!0 (_keys!4314 (_2!1206 lt!55389)) #b00000000000000000000000000000000 Nil!1619))))

(assert (= (and d!30167 res!53823) b!108638))

(assert (= (and b!108638 res!53824) b!108639))

(assert (= (and b!108639 res!53825) b!108640))

(declare-fun m!122239 () Bool)

(assert (=> d!30167 m!122239))

(declare-fun m!122241 () Bool)

(assert (=> b!108638 m!122241))

(declare-fun m!122243 () Bool)

(assert (=> b!108639 m!122243))

(declare-fun m!122245 () Bool)

(assert (=> b!108640 m!122245))

(assert (=> b!107894 d!30167))

(declare-fun d!30169 () Bool)

(assert (=> d!30169 (= (get!1342 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2903 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107987 d!30169))

(declare-fun d!30171 () Bool)

(declare-fun res!53826 () Bool)

(declare-fun e!70679 () Bool)

(assert (=> d!30171 (=> res!53826 e!70679)))

(assert (=> d!30171 (= res!53826 (or ((_ is Nil!1620) lt!55546) ((_ is Nil!1620) (t!5730 lt!55546))))))

(assert (=> d!30171 (= (isStrictlySorted!305 lt!55546) e!70679)))

(declare-fun b!108641 () Bool)

(declare-fun e!70680 () Bool)

(assert (=> b!108641 (= e!70679 e!70680)))

(declare-fun res!53827 () Bool)

(assert (=> b!108641 (=> (not res!53827) (not e!70680))))

(assert (=> b!108641 (= res!53827 (bvslt (_1!1207 (h!2217 lt!55546)) (_1!1207 (h!2217 (t!5730 lt!55546)))))))

(declare-fun b!108642 () Bool)

(assert (=> b!108642 (= e!70680 (isStrictlySorted!305 (t!5730 lt!55546)))))

(assert (= (and d!30171 (not res!53826)) b!108641))

(assert (= (and b!108641 res!53827) b!108642))

(declare-fun m!122247 () Bool)

(assert (=> b!108642 m!122247))

(assert (=> d!29869 d!30171))

(declare-fun d!30173 () Bool)

(declare-fun res!53828 () Bool)

(declare-fun e!70681 () Bool)

(assert (=> d!30173 (=> res!53828 e!70681)))

(assert (=> d!30173 (= res!53828 (or ((_ is Nil!1620) (toList!790 (+!137 lt!54981 lt!54977))) ((_ is Nil!1620) (t!5730 (toList!790 (+!137 lt!54981 lt!54977))))))))

(assert (=> d!30173 (= (isStrictlySorted!305 (toList!790 (+!137 lt!54981 lt!54977))) e!70681)))

(declare-fun b!108643 () Bool)

(declare-fun e!70682 () Bool)

(assert (=> b!108643 (= e!70681 e!70682)))

(declare-fun res!53829 () Bool)

(assert (=> b!108643 (=> (not res!53829) (not e!70682))))

(assert (=> b!108643 (= res!53829 (bvslt (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 lt!54977)))) (_1!1207 (h!2217 (t!5730 (toList!790 (+!137 lt!54981 lt!54977)))))))))

(declare-fun b!108644 () Bool)

(assert (=> b!108644 (= e!70682 (isStrictlySorted!305 (t!5730 (toList!790 (+!137 lt!54981 lt!54977)))))))

(assert (= (and d!30173 (not res!53828)) b!108643))

(assert (= (and b!108643 res!53829) b!108644))

(declare-fun m!122249 () Bool)

(assert (=> b!108644 m!122249))

(assert (=> d!29869 d!30173))

(declare-fun d!30175 () Bool)

(assert (=> d!30175 (= (apply!99 lt!55576 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1344 (getValueByKey!155 (toList!790 lt!55576) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4455 () Bool)

(assert (= bs!4455 d!30175))

(assert (=> bs!4455 m!120769))

(declare-fun m!122251 () Bool)

(assert (=> bs!4455 m!122251))

(assert (=> bs!4455 m!122251))

(declare-fun m!122253 () Bool)

(assert (=> bs!4455 m!122253))

(assert (=> b!108151 d!30175))

(assert (=> b!108151 d!29983))

(declare-fun d!30177 () Bool)

(declare-fun lt!55823 () Bool)

(assert (=> d!30177 (= lt!55823 (select (content!111 (t!5730 (toList!790 lt!55176))) lt!54985))))

(declare-fun e!70684 () Bool)

(assert (=> d!30177 (= lt!55823 e!70684)))

(declare-fun res!53830 () Bool)

(assert (=> d!30177 (=> (not res!53830) (not e!70684))))

(assert (=> d!30177 (= res!53830 ((_ is Cons!1619) (t!5730 (toList!790 lt!55176))))))

(assert (=> d!30177 (= (contains!826 (t!5730 (toList!790 lt!55176)) lt!54985) lt!55823)))

(declare-fun b!108645 () Bool)

(declare-fun e!70683 () Bool)

(assert (=> b!108645 (= e!70684 e!70683)))

(declare-fun res!53831 () Bool)

(assert (=> b!108645 (=> res!53831 e!70683)))

(assert (=> b!108645 (= res!53831 (= (h!2217 (t!5730 (toList!790 lt!55176))) lt!54985))))

(declare-fun b!108646 () Bool)

(assert (=> b!108646 (= e!70683 (contains!826 (t!5730 (t!5730 (toList!790 lt!55176))) lt!54985))))

(assert (= (and d!30177 res!53830) b!108645))

(assert (= (and b!108645 (not res!53831)) b!108646))

(assert (=> d!30177 m!121661))

(declare-fun m!122255 () Bool)

(assert (=> d!30177 m!122255))

(declare-fun m!122257 () Bool)

(assert (=> b!108646 m!122257))

(assert (=> b!107843 d!30177))

(declare-fun d!30179 () Bool)

(assert (=> d!30179 (= (inRange!0 (ite c!18916 (index!3202 lt!55390) (ite c!18914 (index!3201 lt!55393) (index!3204 lt!55393))) (mask!6762 newMap!16)) (and (bvsge (ite c!18916 (index!3202 lt!55390) (ite c!18914 (index!3201 lt!55393) (index!3204 lt!55393))) #b00000000000000000000000000000000) (bvslt (ite c!18916 (index!3202 lt!55390) (ite c!18914 (index!3201 lt!55393) (index!3204 lt!55393))) (bvadd (mask!6762 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11438 d!30179))

(declare-fun d!30181 () Bool)

(assert (=> d!30181 (= (content!112 Nil!1619) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!29889 d!30181))

(declare-fun d!30183 () Bool)

(declare-fun e!70685 () Bool)

(assert (=> d!30183 e!70685))

(declare-fun res!53832 () Bool)

(assert (=> d!30183 (=> res!53832 e!70685)))

(declare-fun lt!55824 () Bool)

(assert (=> d!30183 (= res!53832 (not lt!55824))))

(declare-fun lt!55825 () Bool)

(assert (=> d!30183 (= lt!55824 lt!55825)))

(declare-fun lt!55827 () Unit!3307)

(declare-fun e!70686 () Unit!3307)

(assert (=> d!30183 (= lt!55827 e!70686)))

(declare-fun c!19138 () Bool)

(assert (=> d!30183 (= c!19138 lt!55825)))

(assert (=> d!30183 (= lt!55825 (containsKey!159 (toList!790 lt!55628) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!30183 (= (contains!824 lt!55628 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55824)))

(declare-fun b!108647 () Bool)

(declare-fun lt!55826 () Unit!3307)

(assert (=> b!108647 (= e!70686 lt!55826)))

(assert (=> b!108647 (= lt!55826 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55628) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> b!108647 (isDefined!109 (getValueByKey!155 (toList!790 lt!55628) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108648 () Bool)

(declare-fun Unit!3356 () Unit!3307)

(assert (=> b!108648 (= e!70686 Unit!3356)))

(declare-fun b!108649 () Bool)

(assert (=> b!108649 (= e!70685 (isDefined!109 (getValueByKey!155 (toList!790 lt!55628) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30183 c!19138) b!108647))

(assert (= (and d!30183 (not c!19138)) b!108648))

(assert (= (and d!30183 (not res!53832)) b!108649))

(declare-fun m!122259 () Bool)

(assert (=> d!30183 m!122259))

(declare-fun m!122261 () Bool)

(assert (=> b!108647 m!122261))

(assert (=> b!108647 m!121547))

(assert (=> b!108647 m!121547))

(declare-fun m!122263 () Bool)

(assert (=> b!108647 m!122263))

(assert (=> b!108649 m!121547))

(assert (=> b!108649 m!121547))

(assert (=> b!108649 m!122263))

(assert (=> d!29909 d!30183))

(declare-fun b!108652 () Bool)

(declare-fun e!70688 () Option!161)

(assert (=> b!108652 (= e!70688 (getValueByKey!155 (t!5730 lt!55631) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108651 () Bool)

(declare-fun e!70687 () Option!161)

(assert (=> b!108651 (= e!70687 e!70688)))

(declare-fun c!19140 () Bool)

(assert (=> b!108651 (= c!19140 (and ((_ is Cons!1619) lt!55631) (not (= (_1!1207 (h!2217 lt!55631)) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun d!30185 () Bool)

(declare-fun c!19139 () Bool)

(assert (=> d!30185 (= c!19139 (and ((_ is Cons!1619) lt!55631) (= (_1!1207 (h!2217 lt!55631)) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30185 (= (getValueByKey!155 lt!55631 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!70687)))

(declare-fun b!108653 () Bool)

(assert (=> b!108653 (= e!70688 None!159)))

(declare-fun b!108650 () Bool)

(assert (=> b!108650 (= e!70687 (Some!160 (_2!1207 (h!2217 lt!55631))))))

(assert (= (and d!30185 c!19139) b!108650))

(assert (= (and d!30185 (not c!19139)) b!108651))

(assert (= (and b!108651 c!19140) b!108652))

(assert (= (and b!108651 (not c!19140)) b!108653))

(declare-fun m!122265 () Bool)

(assert (=> b!108652 m!122265))

(assert (=> d!29909 d!30185))

(declare-fun d!30187 () Bool)

(assert (=> d!30187 (= (getValueByKey!155 lt!55631 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!55828 () Unit!3307)

(assert (=> d!30187 (= lt!55828 (choose!679 lt!55631 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun e!70689 () Bool)

(assert (=> d!30187 e!70689))

(declare-fun res!53833 () Bool)

(assert (=> d!30187 (=> (not res!53833) (not e!70689))))

(assert (=> d!30187 (= res!53833 (isStrictlySorted!305 lt!55631))))

(assert (=> d!30187 (= (lemmaContainsTupThenGetReturnValue!74 lt!55631 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55828)))

(declare-fun b!108654 () Bool)

(declare-fun res!53834 () Bool)

(assert (=> b!108654 (=> (not res!53834) (not e!70689))))

(assert (=> b!108654 (= res!53834 (containsKey!159 lt!55631 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108655 () Bool)

(assert (=> b!108655 (= e!70689 (contains!826 lt!55631 (tuple2!2393 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30187 res!53833) b!108654))

(assert (= (and b!108654 res!53834) b!108655))

(assert (=> d!30187 m!121541))

(declare-fun m!122267 () Bool)

(assert (=> d!30187 m!122267))

(declare-fun m!122269 () Bool)

(assert (=> d!30187 m!122269))

(declare-fun m!122271 () Bool)

(assert (=> b!108654 m!122271))

(declare-fun m!122273 () Bool)

(assert (=> b!108655 m!122273))

(assert (=> d!29909 d!30187))

(declare-fun bm!11531 () Bool)

(declare-fun call!11535 () List!1623)

(declare-fun call!11534 () List!1623)

(assert (=> bm!11531 (= call!11535 call!11534)))

(declare-fun b!108656 () Bool)

(declare-fun e!70694 () List!1623)

(assert (=> b!108656 (= e!70694 call!11535)))

(declare-fun b!108658 () Bool)

(declare-fun e!70691 () List!1623)

(declare-fun call!11536 () List!1623)

(assert (=> b!108658 (= e!70691 call!11536)))

(declare-fun b!108659 () Bool)

(declare-fun e!70690 () Bool)

(declare-fun lt!55829 () List!1623)

(assert (=> b!108659 (= e!70690 (contains!826 lt!55829 (tuple2!2393 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!108660 () Bool)

(declare-fun e!70692 () List!1623)

(assert (=> b!108660 (= e!70692 (insertStrictlySorted!77 (t!5730 (toList!790 call!11346)) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108661 () Bool)

(declare-fun e!70693 () List!1623)

(assert (=> b!108661 (= e!70693 call!11534)))

(declare-fun c!19141 () Bool)

(declare-fun bm!11532 () Bool)

(assert (=> bm!11532 (= call!11534 ($colon$colon!81 e!70692 (ite c!19141 (h!2217 (toList!790 call!11346)) (tuple2!2393 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun c!19143 () Bool)

(assert (=> bm!11532 (= c!19143 c!19141)))

(declare-fun bm!11533 () Bool)

(assert (=> bm!11533 (= call!11536 call!11535)))

(declare-fun b!108662 () Bool)

(declare-fun c!19144 () Bool)

(assert (=> b!108662 (= c!19144 (and ((_ is Cons!1619) (toList!790 call!11346)) (bvsgt (_1!1207 (h!2217 (toList!790 call!11346))) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> b!108662 (= e!70694 e!70691)))

(declare-fun b!108657 () Bool)

(declare-fun res!53836 () Bool)

(assert (=> b!108657 (=> (not res!53836) (not e!70690))))

(assert (=> b!108657 (= res!53836 (containsKey!159 lt!55829 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun d!30189 () Bool)

(assert (=> d!30189 e!70690))

(declare-fun res!53835 () Bool)

(assert (=> d!30189 (=> (not res!53835) (not e!70690))))

(assert (=> d!30189 (= res!53835 (isStrictlySorted!305 lt!55829))))

(assert (=> d!30189 (= lt!55829 e!70693)))

(assert (=> d!30189 (= c!19141 (and ((_ is Cons!1619) (toList!790 call!11346)) (bvslt (_1!1207 (h!2217 (toList!790 call!11346))) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30189 (isStrictlySorted!305 (toList!790 call!11346))))

(assert (=> d!30189 (= (insertStrictlySorted!77 (toList!790 call!11346) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55829)))

(declare-fun b!108663 () Bool)

(assert (=> b!108663 (= e!70691 call!11536)))

(declare-fun b!108664 () Bool)

(declare-fun c!19142 () Bool)

(assert (=> b!108664 (= e!70692 (ite c!19142 (t!5730 (toList!790 call!11346)) (ite c!19144 (Cons!1619 (h!2217 (toList!790 call!11346)) (t!5730 (toList!790 call!11346))) Nil!1620)))))

(declare-fun b!108665 () Bool)

(assert (=> b!108665 (= e!70693 e!70694)))

(assert (=> b!108665 (= c!19142 (and ((_ is Cons!1619) (toList!790 call!11346)) (= (_1!1207 (h!2217 (toList!790 call!11346))) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30189 c!19141) b!108661))

(assert (= (and d!30189 (not c!19141)) b!108665))

(assert (= (and b!108665 c!19142) b!108656))

(assert (= (and b!108665 (not c!19142)) b!108662))

(assert (= (and b!108662 c!19144) b!108663))

(assert (= (and b!108662 (not c!19144)) b!108658))

(assert (= (or b!108663 b!108658) bm!11533))

(assert (= (or b!108656 bm!11533) bm!11531))

(assert (= (or b!108661 bm!11531) bm!11532))

(assert (= (and bm!11532 c!19143) b!108660))

(assert (= (and bm!11532 (not c!19143)) b!108664))

(assert (= (and d!30189 res!53835) b!108657))

(assert (= (and b!108657 res!53836) b!108659))

(declare-fun m!122275 () Bool)

(assert (=> b!108659 m!122275))

(declare-fun m!122277 () Bool)

(assert (=> bm!11532 m!122277))

(declare-fun m!122279 () Bool)

(assert (=> b!108657 m!122279))

(declare-fun m!122281 () Bool)

(assert (=> d!30189 m!122281))

(declare-fun m!122283 () Bool)

(assert (=> d!30189 m!122283))

(declare-fun m!122285 () Bool)

(assert (=> b!108660 m!122285))

(assert (=> d!29909 d!30189))

(declare-fun d!30191 () Bool)

(assert (=> d!30191 (= (get!1343 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107988 d!30191))

(assert (=> b!108004 d!29935))

(assert (=> b!107849 d!30067))

(assert (=> d!29797 d!29795))

(declare-fun d!30193 () Bool)

(assert (=> d!30193 (= (getValueByKey!155 lt!55146 (_1!1207 lt!54985)) (Some!160 (_2!1207 lt!54985)))))

(assert (=> d!30193 true))

(declare-fun _$22!439 () Unit!3307)

(assert (=> d!30193 (= (choose!679 lt!55146 (_1!1207 lt!54985) (_2!1207 lt!54985)) _$22!439)))

(declare-fun bs!4456 () Bool)

(assert (= bs!4456 d!30193))

(assert (=> bs!4456 m!120625))

(assert (=> d!29797 d!30193))

(declare-fun d!30195 () Bool)

(declare-fun res!53837 () Bool)

(declare-fun e!70695 () Bool)

(assert (=> d!30195 (=> res!53837 e!70695)))

(assert (=> d!30195 (= res!53837 (or ((_ is Nil!1620) lt!55146) ((_ is Nil!1620) (t!5730 lt!55146))))))

(assert (=> d!30195 (= (isStrictlySorted!305 lt!55146) e!70695)))

(declare-fun b!108666 () Bool)

(declare-fun e!70696 () Bool)

(assert (=> b!108666 (= e!70695 e!70696)))

(declare-fun res!53838 () Bool)

(assert (=> b!108666 (=> (not res!53838) (not e!70696))))

(assert (=> b!108666 (= res!53838 (bvslt (_1!1207 (h!2217 lt!55146)) (_1!1207 (h!2217 (t!5730 lt!55146)))))))

(declare-fun b!108667 () Bool)

(assert (=> b!108667 (= e!70696 (isStrictlySorted!305 (t!5730 lt!55146)))))

(assert (= (and d!30195 (not res!53837)) b!108666))

(assert (= (and b!108666 res!53838) b!108667))

(declare-fun m!122287 () Bool)

(assert (=> b!108667 m!122287))

(assert (=> d!29797 d!30195))

(declare-fun e!70698 () Option!161)

(declare-fun b!108670 () Bool)

(assert (=> b!108670 (= e!70698 (getValueByKey!155 (t!5730 (toList!790 lt!55410)) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108669 () Bool)

(declare-fun e!70697 () Option!161)

(assert (=> b!108669 (= e!70697 e!70698)))

(declare-fun c!19146 () Bool)

(assert (=> b!108669 (= c!19146 (and ((_ is Cons!1619) (toList!790 lt!55410)) (not (= (_1!1207 (h!2217 (toList!790 lt!55410))) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun c!19145 () Bool)

(declare-fun d!30197 () Bool)

(assert (=> d!30197 (= c!19145 (and ((_ is Cons!1619) (toList!790 lt!55410)) (= (_1!1207 (h!2217 (toList!790 lt!55410))) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30197 (= (getValueByKey!155 (toList!790 lt!55410) (_1!1207 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!70697)))

(declare-fun b!108671 () Bool)

(assert (=> b!108671 (= e!70698 None!159)))

(declare-fun b!108668 () Bool)

(assert (=> b!108668 (= e!70697 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55410)))))))

(assert (= (and d!30197 c!19145) b!108668))

(assert (= (and d!30197 (not c!19145)) b!108669))

(assert (= (and b!108669 c!19146) b!108670))

(assert (= (and b!108669 (not c!19146)) b!108671))

(declare-fun m!122289 () Bool)

(assert (=> b!108670 m!122289))

(assert (=> b!107913 d!30197))

(declare-fun d!30199 () Bool)

(assert (not d!30199))

(assert (=> b!108191 d!30199))

(assert (=> d!29867 d!29865))

(declare-fun d!30201 () Bool)

(assert (=> d!30201 (= (getValueByKey!155 lt!55179 (_1!1207 lt!54985)) (Some!160 (_2!1207 lt!54985)))))

(assert (=> d!30201 true))

(declare-fun _$22!440 () Unit!3307)

(assert (=> d!30201 (= (choose!679 lt!55179 (_1!1207 lt!54985) (_2!1207 lt!54985)) _$22!440)))

(declare-fun bs!4457 () Bool)

(assert (= bs!4457 d!30201))

(assert (=> bs!4457 m!120681))

(assert (=> d!29867 d!30201))

(declare-fun d!30203 () Bool)

(declare-fun res!53839 () Bool)

(declare-fun e!70699 () Bool)

(assert (=> d!30203 (=> res!53839 e!70699)))

(assert (=> d!30203 (= res!53839 (or ((_ is Nil!1620) lt!55179) ((_ is Nil!1620) (t!5730 lt!55179))))))

(assert (=> d!30203 (= (isStrictlySorted!305 lt!55179) e!70699)))

(declare-fun b!108672 () Bool)

(declare-fun e!70700 () Bool)

(assert (=> b!108672 (= e!70699 e!70700)))

(declare-fun res!53840 () Bool)

(assert (=> b!108672 (=> (not res!53840) (not e!70700))))

(assert (=> b!108672 (= res!53840 (bvslt (_1!1207 (h!2217 lt!55179)) (_1!1207 (h!2217 (t!5730 lt!55179)))))))

(declare-fun b!108673 () Bool)

(assert (=> b!108673 (= e!70700 (isStrictlySorted!305 (t!5730 lt!55179)))))

(assert (= (and d!30203 (not res!53839)) b!108672))

(assert (= (and b!108672 res!53840) b!108673))

(declare-fun m!122291 () Bool)

(assert (=> b!108673 m!122291))

(assert (=> d!29867 d!30203))

(declare-fun d!30205 () Bool)

(assert (=> d!30205 (= (apply!99 lt!55626 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!155 (toList!790 lt!55626) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4458 () Bool)

(assert (= bs!4458 d!30205))

(declare-fun m!122293 () Bool)

(assert (=> bs!4458 m!122293))

(assert (=> bs!4458 m!122293))

(declare-fun m!122295 () Bool)

(assert (=> bs!4458 m!122295))

(assert (=> b!108238 d!30205))

(declare-fun d!30207 () Bool)

(assert (=> d!30207 (isDefined!109 (getValueByKey!155 (toList!790 lt!55143) (_1!1207 lt!54985)))))

(declare-fun lt!55830 () Unit!3307)

(assert (=> d!30207 (= lt!55830 (choose!681 (toList!790 lt!55143) (_1!1207 lt!54985)))))

(declare-fun e!70701 () Bool)

(assert (=> d!30207 e!70701))

(declare-fun res!53841 () Bool)

(assert (=> d!30207 (=> (not res!53841) (not e!70701))))

(assert (=> d!30207 (= res!53841 (isStrictlySorted!305 (toList!790 lt!55143)))))

(assert (=> d!30207 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55143) (_1!1207 lt!54985)) lt!55830)))

(declare-fun b!108674 () Bool)

(assert (=> b!108674 (= e!70701 (containsKey!159 (toList!790 lt!55143) (_1!1207 lt!54985)))))

(assert (= (and d!30207 res!53841) b!108674))

(assert (=> d!30207 m!120631))

(assert (=> d!30207 m!120631))

(assert (=> d!30207 m!121049))

(declare-fun m!122297 () Bool)

(assert (=> d!30207 m!122297))

(declare-fun m!122299 () Bool)

(assert (=> d!30207 m!122299))

(assert (=> b!108674 m!121045))

(assert (=> b!107929 d!30207))

(assert (=> b!107929 d!29991))

(assert (=> b!107929 d!29861))

(assert (=> d!29833 d!29835))

(assert (=> d!29833 d!29837))

(declare-fun d!30209 () Bool)

(assert (=> d!30209 (isDefined!109 (getValueByKey!155 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!30209 true))

(declare-fun _$12!356 () Unit!3307)

(assert (=> d!30209 (= (choose!681 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) _$12!356)))

(declare-fun bs!4459 () Bool)

(assert (= bs!4459 d!30209))

(assert (=> bs!4459 m!120387))

(assert (=> bs!4459 m!120705))

(assert (=> bs!4459 m!120705))

(assert (=> bs!4459 m!120707))

(assert (=> d!29833 d!30209))

(declare-fun d!30211 () Bool)

(declare-fun res!53842 () Bool)

(declare-fun e!70702 () Bool)

(assert (=> d!30211 (=> res!53842 e!70702)))

(assert (=> d!30211 (= res!53842 (or ((_ is Nil!1620) (toList!790 lt!54978)) ((_ is Nil!1620) (t!5730 (toList!790 lt!54978)))))))

(assert (=> d!30211 (= (isStrictlySorted!305 (toList!790 lt!54978)) e!70702)))

(declare-fun b!108675 () Bool)

(declare-fun e!70703 () Bool)

(assert (=> b!108675 (= e!70702 e!70703)))

(declare-fun res!53843 () Bool)

(assert (=> b!108675 (=> (not res!53843) (not e!70703))))

(assert (=> b!108675 (= res!53843 (bvslt (_1!1207 (h!2217 (toList!790 lt!54978))) (_1!1207 (h!2217 (t!5730 (toList!790 lt!54978))))))))

(declare-fun b!108676 () Bool)

(assert (=> b!108676 (= e!70703 (isStrictlySorted!305 (t!5730 (toList!790 lt!54978))))))

(assert (= (and d!30211 (not res!53842)) b!108675))

(assert (= (and b!108675 res!53843) b!108676))

(declare-fun m!122301 () Bool)

(assert (=> b!108676 m!122301))

(assert (=> d!29833 d!30211))

(declare-fun d!30213 () Bool)

(assert (=> d!30213 (= (get!1344 (getValueByKey!155 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2910 (getValueByKey!155 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29839 d!30213))

(assert (=> d!29839 d!30061))

(declare-fun d!30215 () Bool)

(declare-fun e!70704 () Bool)

(assert (=> d!30215 e!70704))

(declare-fun res!53845 () Bool)

(assert (=> d!30215 (=> (not res!53845) (not e!70704))))

(declare-fun lt!55831 () ListLongMap!1549)

(assert (=> d!30215 (= res!53845 (contains!824 lt!55831 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun lt!55834 () List!1623)

(assert (=> d!30215 (= lt!55831 (ListLongMap!1550 lt!55834))))

(declare-fun lt!55832 () Unit!3307)

(declare-fun lt!55833 () Unit!3307)

(assert (=> d!30215 (= lt!55832 lt!55833)))

(assert (=> d!30215 (= (getValueByKey!155 lt!55834 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30215 (= lt!55833 (lemmaContainsTupThenGetReturnValue!74 lt!55834 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30215 (= lt!55834 (insertStrictlySorted!77 (toList!790 call!11464) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30215 (= (+!137 call!11464 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) lt!55831)))

(declare-fun b!108677 () Bool)

(declare-fun res!53844 () Bool)

(assert (=> b!108677 (=> (not res!53844) (not e!70704))))

(assert (=> b!108677 (= res!53844 (= (getValueByKey!155 (toList!790 lt!55831) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(declare-fun b!108678 () Bool)

(assert (=> b!108678 (= e!70704 (contains!826 (toList!790 lt!55831) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(assert (= (and d!30215 res!53845) b!108677))

(assert (= (and b!108677 res!53844) b!108678))

(declare-fun m!122303 () Bool)

(assert (=> d!30215 m!122303))

(declare-fun m!122305 () Bool)

(assert (=> d!30215 m!122305))

(declare-fun m!122307 () Bool)

(assert (=> d!30215 m!122307))

(declare-fun m!122309 () Bool)

(assert (=> d!30215 m!122309))

(declare-fun m!122311 () Bool)

(assert (=> b!108677 m!122311))

(declare-fun m!122313 () Bool)

(assert (=> b!108678 m!122313))

(assert (=> b!108077 d!30215))

(declare-fun d!30217 () Bool)

(declare-fun res!53846 () Bool)

(declare-fun e!70705 () Bool)

(assert (=> d!30217 (=> res!53846 e!70705)))

(assert (=> d!30217 (= res!53846 (and ((_ is Cons!1619) (toList!790 lt!55151)) (= (_1!1207 (h!2217 (toList!790 lt!55151))) (_1!1207 lt!54977))))))

(assert (=> d!30217 (= (containsKey!159 (toList!790 lt!55151) (_1!1207 lt!54977)) e!70705)))

(declare-fun b!108679 () Bool)

(declare-fun e!70706 () Bool)

(assert (=> b!108679 (= e!70705 e!70706)))

(declare-fun res!53847 () Bool)

(assert (=> b!108679 (=> (not res!53847) (not e!70706))))

(assert (=> b!108679 (= res!53847 (and (or (not ((_ is Cons!1619) (toList!790 lt!55151))) (bvsle (_1!1207 (h!2217 (toList!790 lt!55151))) (_1!1207 lt!54977))) ((_ is Cons!1619) (toList!790 lt!55151)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55151))) (_1!1207 lt!54977))))))

(declare-fun b!108680 () Bool)

(assert (=> b!108680 (= e!70706 (containsKey!159 (t!5730 (toList!790 lt!55151)) (_1!1207 lt!54977)))))

(assert (= (and d!30217 (not res!53846)) b!108679))

(assert (= (and b!108679 res!53847) b!108680))

(declare-fun m!122315 () Bool)

(assert (=> b!108680 m!122315))

(assert (=> d!29915 d!30217))

(declare-fun d!30219 () Bool)

(declare-fun res!53848 () Bool)

(declare-fun e!70707 () Bool)

(assert (=> d!30219 (=> res!53848 e!70707)))

(assert (=> d!30219 (= res!53848 (and ((_ is Cons!1619) (toList!790 lt!55175)) (= (_1!1207 (h!2217 (toList!790 lt!55175))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30219 (= (containsKey!159 (toList!790 lt!55175) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!70707)))

(declare-fun b!108681 () Bool)

(declare-fun e!70708 () Bool)

(assert (=> b!108681 (= e!70707 e!70708)))

(declare-fun res!53849 () Bool)

(assert (=> b!108681 (=> (not res!53849) (not e!70708))))

(assert (=> b!108681 (= res!53849 (and (or (not ((_ is Cons!1619) (toList!790 lt!55175))) (bvsle (_1!1207 (h!2217 (toList!790 lt!55175))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1619) (toList!790 lt!55175)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55175))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!108682 () Bool)

(assert (=> b!108682 (= e!70708 (containsKey!159 (t!5730 (toList!790 lt!55175)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30219 (not res!53848)) b!108681))

(assert (= (and b!108681 res!53849) b!108682))

(assert (=> b!108682 m!120545))

(declare-fun m!122317 () Bool)

(assert (=> b!108682 m!122317))

(assert (=> d!29753 d!30219))

(declare-fun d!30221 () Bool)

(declare-fun e!70709 () Bool)

(assert (=> d!30221 e!70709))

(declare-fun res!53850 () Bool)

(assert (=> d!30221 (=> res!53850 e!70709)))

(declare-fun lt!55835 () Bool)

(assert (=> d!30221 (= res!53850 (not lt!55835))))

(declare-fun lt!55836 () Bool)

(assert (=> d!30221 (= lt!55835 lt!55836)))

(declare-fun lt!55838 () Unit!3307)

(declare-fun e!70710 () Unit!3307)

(assert (=> d!30221 (= lt!55838 e!70710)))

(declare-fun c!19147 () Bool)

(assert (=> d!30221 (= c!19147 lt!55836)))

(assert (=> d!30221 (= lt!55836 (containsKey!159 (toList!790 lt!55444) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!30221 (= (contains!824 lt!55444 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) lt!55835)))

(declare-fun b!108683 () Bool)

(declare-fun lt!55837 () Unit!3307)

(assert (=> b!108683 (= e!70710 lt!55837)))

(assert (=> b!108683 (= lt!55837 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55444) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> b!108683 (isDefined!109 (getValueByKey!155 (toList!790 lt!55444) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!108684 () Bool)

(declare-fun Unit!3357 () Unit!3307)

(assert (=> b!108684 (= e!70710 Unit!3357)))

(declare-fun b!108685 () Bool)

(assert (=> b!108685 (= e!70709 (isDefined!109 (getValueByKey!155 (toList!790 lt!55444) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (= (and d!30221 c!19147) b!108683))

(assert (= (and d!30221 (not c!19147)) b!108684))

(assert (= (and d!30221 (not res!53850)) b!108685))

(declare-fun m!122319 () Bool)

(assert (=> d!30221 m!122319))

(declare-fun m!122321 () Bool)

(assert (=> b!108683 m!122321))

(assert (=> b!108683 m!121093))

(assert (=> b!108683 m!121093))

(declare-fun m!122323 () Bool)

(assert (=> b!108683 m!122323))

(assert (=> b!108685 m!121093))

(assert (=> b!108685 m!121093))

(assert (=> b!108685 m!122323))

(assert (=> d!29811 d!30221))

(declare-fun e!70712 () Option!161)

(declare-fun b!108688 () Bool)

(assert (=> b!108688 (= e!70712 (getValueByKey!155 (t!5730 lt!55447) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!108687 () Bool)

(declare-fun e!70711 () Option!161)

(assert (=> b!108687 (= e!70711 e!70712)))

(declare-fun c!19149 () Bool)

(assert (=> b!108687 (= c!19149 (and ((_ is Cons!1619) lt!55447) (not (= (_1!1207 (h!2217 lt!55447)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(declare-fun d!30223 () Bool)

(declare-fun c!19148 () Bool)

(assert (=> d!30223 (= c!19148 (and ((_ is Cons!1619) lt!55447) (= (_1!1207 (h!2217 lt!55447)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!30223 (= (getValueByKey!155 lt!55447 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) e!70711)))

(declare-fun b!108689 () Bool)

(assert (=> b!108689 (= e!70712 None!159)))

(declare-fun b!108686 () Bool)

(assert (=> b!108686 (= e!70711 (Some!160 (_2!1207 (h!2217 lt!55447))))))

(assert (= (and d!30223 c!19148) b!108686))

(assert (= (and d!30223 (not c!19148)) b!108687))

(assert (= (and b!108687 c!19149) b!108688))

(assert (= (and b!108687 (not c!19149)) b!108689))

(declare-fun m!122325 () Bool)

(assert (=> b!108688 m!122325))

(assert (=> d!29811 d!30223))

(declare-fun d!30225 () Bool)

(assert (=> d!30225 (= (getValueByKey!155 lt!55447 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun lt!55839 () Unit!3307)

(assert (=> d!30225 (= lt!55839 (choose!679 lt!55447 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun e!70713 () Bool)

(assert (=> d!30225 e!70713))

(declare-fun res!53851 () Bool)

(assert (=> d!30225 (=> (not res!53851) (not e!70713))))

(assert (=> d!30225 (= res!53851 (isStrictlySorted!305 lt!55447))))

(assert (=> d!30225 (= (lemmaContainsTupThenGetReturnValue!74 lt!55447 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) lt!55839)))

(declare-fun b!108690 () Bool)

(declare-fun res!53852 () Bool)

(assert (=> b!108690 (=> (not res!53852) (not e!70713))))

(assert (=> b!108690 (= res!53852 (containsKey!159 lt!55447 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!108691 () Bool)

(assert (=> b!108691 (= e!70713 (contains!826 lt!55447 (tuple2!2393 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (= (and d!30225 res!53851) b!108690))

(assert (= (and b!108690 res!53852) b!108691))

(assert (=> d!30225 m!121087))

(declare-fun m!122327 () Bool)

(assert (=> d!30225 m!122327))

(declare-fun m!122329 () Bool)

(assert (=> d!30225 m!122329))

(declare-fun m!122331 () Bool)

(assert (=> b!108690 m!122331))

(declare-fun m!122333 () Bool)

(assert (=> b!108691 m!122333))

(assert (=> d!29811 d!30225))

(declare-fun bm!11534 () Bool)

(declare-fun call!11538 () List!1623)

(declare-fun call!11537 () List!1623)

(assert (=> bm!11534 (= call!11538 call!11537)))

(declare-fun b!108692 () Bool)

(declare-fun e!70718 () List!1623)

(assert (=> b!108692 (= e!70718 call!11538)))

(declare-fun b!108694 () Bool)

(declare-fun e!70715 () List!1623)

(declare-fun call!11539 () List!1623)

(assert (=> b!108694 (= e!70715 call!11539)))

(declare-fun b!108695 () Bool)

(declare-fun lt!55840 () List!1623)

(declare-fun e!70714 () Bool)

(assert (=> b!108695 (= e!70714 (contains!826 lt!55840 (tuple2!2393 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun e!70716 () List!1623)

(declare-fun b!108696 () Bool)

(assert (=> b!108696 (= e!70716 (insertStrictlySorted!77 (t!5730 (toList!790 call!11421)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!108697 () Bool)

(declare-fun e!70717 () List!1623)

(assert (=> b!108697 (= e!70717 call!11537)))

(declare-fun bm!11535 () Bool)

(declare-fun c!19150 () Bool)

(assert (=> bm!11535 (= call!11537 ($colon$colon!81 e!70716 (ite c!19150 (h!2217 (toList!790 call!11421)) (tuple2!2393 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(declare-fun c!19152 () Bool)

(assert (=> bm!11535 (= c!19152 c!19150)))

(declare-fun bm!11536 () Bool)

(assert (=> bm!11536 (= call!11539 call!11538)))

(declare-fun b!108698 () Bool)

(declare-fun c!19153 () Bool)

(assert (=> b!108698 (= c!19153 (and ((_ is Cons!1619) (toList!790 call!11421)) (bvsgt (_1!1207 (h!2217 (toList!790 call!11421))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> b!108698 (= e!70718 e!70715)))

(declare-fun b!108693 () Bool)

(declare-fun res!53854 () Bool)

(assert (=> b!108693 (=> (not res!53854) (not e!70714))))

(assert (=> b!108693 (= res!53854 (containsKey!159 lt!55840 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun d!30227 () Bool)

(assert (=> d!30227 e!70714))

(declare-fun res!53853 () Bool)

(assert (=> d!30227 (=> (not res!53853) (not e!70714))))

(assert (=> d!30227 (= res!53853 (isStrictlySorted!305 lt!55840))))

(assert (=> d!30227 (= lt!55840 e!70717)))

(assert (=> d!30227 (= c!19150 (and ((_ is Cons!1619) (toList!790 call!11421)) (bvslt (_1!1207 (h!2217 (toList!790 call!11421))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!30227 (isStrictlySorted!305 (toList!790 call!11421))))

(assert (=> d!30227 (= (insertStrictlySorted!77 (toList!790 call!11421) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) lt!55840)))

(declare-fun b!108699 () Bool)

(assert (=> b!108699 (= e!70715 call!11539)))

(declare-fun b!108700 () Bool)

(declare-fun c!19151 () Bool)

(assert (=> b!108700 (= e!70716 (ite c!19151 (t!5730 (toList!790 call!11421)) (ite c!19153 (Cons!1619 (h!2217 (toList!790 call!11421)) (t!5730 (toList!790 call!11421))) Nil!1620)))))

(declare-fun b!108701 () Bool)

(assert (=> b!108701 (= e!70717 e!70718)))

(assert (=> b!108701 (= c!19151 (and ((_ is Cons!1619) (toList!790 call!11421)) (= (_1!1207 (h!2217 (toList!790 call!11421))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (= (and d!30227 c!19150) b!108697))

(assert (= (and d!30227 (not c!19150)) b!108701))

(assert (= (and b!108701 c!19151) b!108692))

(assert (= (and b!108701 (not c!19151)) b!108698))

(assert (= (and b!108698 c!19153) b!108699))

(assert (= (and b!108698 (not c!19153)) b!108694))

(assert (= (or b!108699 b!108694) bm!11536))

(assert (= (or b!108692 bm!11536) bm!11534))

(assert (= (or b!108697 bm!11534) bm!11535))

(assert (= (and bm!11535 c!19152) b!108696))

(assert (= (and bm!11535 (not c!19152)) b!108700))

(assert (= (and d!30227 res!53853) b!108693))

(assert (= (and b!108693 res!53854) b!108695))

(declare-fun m!122335 () Bool)

(assert (=> b!108695 m!122335))

(declare-fun m!122337 () Bool)

(assert (=> bm!11535 m!122337))

(declare-fun m!122339 () Bool)

(assert (=> b!108693 m!122339))

(declare-fun m!122341 () Bool)

(assert (=> d!30227 m!122341))

(declare-fun m!122343 () Bool)

(assert (=> d!30227 m!122343))

(declare-fun m!122345 () Bool)

(assert (=> b!108696 m!122345))

(assert (=> d!29811 d!30227))

(assert (=> b!107901 d!29873))

(declare-fun b!108704 () Bool)

(declare-fun e!70720 () Option!161)

(assert (=> b!108704 (= e!70720 (getValueByKey!155 (t!5730 (toList!790 lt!55628)) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108703 () Bool)

(declare-fun e!70719 () Option!161)

(assert (=> b!108703 (= e!70719 e!70720)))

(declare-fun c!19155 () Bool)

(assert (=> b!108703 (= c!19155 (and ((_ is Cons!1619) (toList!790 lt!55628)) (not (= (_1!1207 (h!2217 (toList!790 lt!55628))) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun d!30229 () Bool)

(declare-fun c!19154 () Bool)

(assert (=> d!30229 (= c!19154 (and ((_ is Cons!1619) (toList!790 lt!55628)) (= (_1!1207 (h!2217 (toList!790 lt!55628))) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30229 (= (getValueByKey!155 (toList!790 lt!55628) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!70719)))

(declare-fun b!108705 () Bool)

(assert (=> b!108705 (= e!70720 None!159)))

(declare-fun b!108702 () Bool)

(assert (=> b!108702 (= e!70719 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55628)))))))

(assert (= (and d!30229 c!19154) b!108702))

(assert (= (and d!30229 (not c!19154)) b!108703))

(assert (= (and b!108703 c!19155) b!108704))

(assert (= (and b!108703 (not c!19155)) b!108705))

(declare-fun m!122347 () Bool)

(assert (=> b!108704 m!122347))

(assert (=> b!108242 d!30229))

(declare-fun d!30231 () Bool)

(assert (=> d!30231 (= (apply!99 lt!55626 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!155 (toList!790 lt!55626) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4460 () Bool)

(assert (= bs!4460 d!30231))

(declare-fun m!122349 () Bool)

(assert (=> bs!4460 m!122349))

(assert (=> bs!4460 m!122349))

(declare-fun m!122351 () Bool)

(assert (=> bs!4460 m!122351))

(assert (=> b!108227 d!30231))

(declare-fun d!30233 () Bool)

(assert (=> d!30233 (= (get!1344 (getValueByKey!155 (toList!790 lt!55121) lt!55111)) (v!2910 (getValueByKey!155 (toList!790 lt!55121) lt!55111)))))

(assert (=> d!29777 d!30233))

(declare-fun b!108708 () Bool)

(declare-fun e!70722 () Option!161)

(assert (=> b!108708 (= e!70722 (getValueByKey!155 (t!5730 (toList!790 lt!55121)) lt!55111))))

(declare-fun b!108707 () Bool)

(declare-fun e!70721 () Option!161)

(assert (=> b!108707 (= e!70721 e!70722)))

(declare-fun c!19157 () Bool)

(assert (=> b!108707 (= c!19157 (and ((_ is Cons!1619) (toList!790 lt!55121)) (not (= (_1!1207 (h!2217 (toList!790 lt!55121))) lt!55111))))))

(declare-fun d!30235 () Bool)

(declare-fun c!19156 () Bool)

(assert (=> d!30235 (= c!19156 (and ((_ is Cons!1619) (toList!790 lt!55121)) (= (_1!1207 (h!2217 (toList!790 lt!55121))) lt!55111)))))

(assert (=> d!30235 (= (getValueByKey!155 (toList!790 lt!55121) lt!55111) e!70721)))

(declare-fun b!108709 () Bool)

(assert (=> b!108709 (= e!70722 None!159)))

(declare-fun b!108706 () Bool)

(assert (=> b!108706 (= e!70721 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55121)))))))

(assert (= (and d!30235 c!19156) b!108706))

(assert (= (and d!30235 (not c!19156)) b!108707))

(assert (= (and b!108707 c!19157) b!108708))

(assert (= (and b!108707 (not c!19157)) b!108709))

(declare-fun m!122353 () Bool)

(assert (=> b!108708 m!122353))

(assert (=> d!29777 d!30235))

(declare-fun d!30237 () Bool)

(declare-fun lt!55841 () Bool)

(assert (=> d!30237 (= lt!55841 (select (content!111 lt!55641) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(declare-fun e!70724 () Bool)

(assert (=> d!30237 (= lt!55841 e!70724)))

(declare-fun res!53855 () Bool)

(assert (=> d!30237 (=> (not res!53855) (not e!70724))))

(assert (=> d!30237 (= res!53855 ((_ is Cons!1619) lt!55641))))

(assert (=> d!30237 (= (contains!826 lt!55641 (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))) lt!55841)))

(declare-fun b!108710 () Bool)

(declare-fun e!70723 () Bool)

(assert (=> b!108710 (= e!70724 e!70723)))

(declare-fun res!53856 () Bool)

(assert (=> b!108710 (=> res!53856 e!70723)))

(assert (=> b!108710 (= res!53856 (= (h!2217 lt!55641) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(declare-fun b!108711 () Bool)

(assert (=> b!108711 (= e!70723 (contains!826 (t!5730 lt!55641) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(assert (= (and d!30237 res!53855) b!108710))

(assert (= (and b!108710 (not res!53856)) b!108711))

(declare-fun m!122355 () Bool)

(assert (=> d!30237 m!122355))

(declare-fun m!122357 () Bool)

(assert (=> d!30237 m!122357))

(declare-fun m!122359 () Bool)

(assert (=> b!108711 m!122359))

(assert (=> b!108259 d!30237))

(declare-fun d!30239 () Bool)

(declare-fun res!53857 () Bool)

(declare-fun e!70725 () Bool)

(assert (=> d!30239 (=> res!53857 e!70725)))

(assert (=> d!30239 (= res!53857 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!54978))) (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!54978)))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (=> d!30239 (= (containsKey!159 (t!5730 (toList!790 lt!54978)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) e!70725)))

(declare-fun b!108712 () Bool)

(declare-fun e!70726 () Bool)

(assert (=> b!108712 (= e!70725 e!70726)))

(declare-fun res!53858 () Bool)

(assert (=> b!108712 (=> (not res!53858) (not e!70726))))

(assert (=> b!108712 (= res!53858 (and (or (not ((_ is Cons!1619) (t!5730 (toList!790 lt!54978)))) (bvsle (_1!1207 (h!2217 (t!5730 (toList!790 lt!54978)))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))) ((_ is Cons!1619) (t!5730 (toList!790 lt!54978))) (bvslt (_1!1207 (h!2217 (t!5730 (toList!790 lt!54978)))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(declare-fun b!108713 () Bool)

(assert (=> b!108713 (= e!70726 (containsKey!159 (t!5730 (t!5730 (toList!790 lt!54978))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (= (and d!30239 (not res!53857)) b!108712))

(assert (= (and b!108712 res!53858) b!108713))

(assert (=> b!108713 m!120387))

(declare-fun m!122361 () Bool)

(assert (=> b!108713 m!122361))

(assert (=> b!107859 d!30239))

(declare-fun d!30241 () Bool)

(declare-fun e!70727 () Bool)

(assert (=> d!30241 e!70727))

(declare-fun res!53859 () Bool)

(assert (=> d!30241 (=> res!53859 e!70727)))

(declare-fun lt!55842 () Bool)

(assert (=> d!30241 (= res!53859 (not lt!55842))))

(declare-fun lt!55843 () Bool)

(assert (=> d!30241 (= lt!55842 lt!55843)))

(declare-fun lt!55845 () Unit!3307)

(declare-fun e!70728 () Unit!3307)

(assert (=> d!30241 (= lt!55845 e!70728)))

(declare-fun c!19158 () Bool)

(assert (=> d!30241 (= c!19158 lt!55843)))

(assert (=> d!30241 (= lt!55843 (containsKey!159 (toList!790 lt!55471) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30241 (= (contains!824 lt!55471 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55842)))

(declare-fun b!108714 () Bool)

(declare-fun lt!55844 () Unit!3307)

(assert (=> b!108714 (= e!70728 lt!55844)))

(assert (=> b!108714 (= lt!55844 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55471) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108714 (isDefined!109 (getValueByKey!155 (toList!790 lt!55471) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108715 () Bool)

(declare-fun Unit!3358 () Unit!3307)

(assert (=> b!108715 (= e!70728 Unit!3358)))

(declare-fun b!108716 () Bool)

(assert (=> b!108716 (= e!70727 (isDefined!109 (getValueByKey!155 (toList!790 lt!55471) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30241 c!19158) b!108714))

(assert (= (and d!30241 (not c!19158)) b!108715))

(assert (= (and d!30241 (not res!53859)) b!108716))

(declare-fun m!122363 () Bool)

(assert (=> d!30241 m!122363))

(declare-fun m!122365 () Bool)

(assert (=> b!108714 m!122365))

(assert (=> b!108714 m!121821))

(assert (=> b!108714 m!121821))

(declare-fun m!122367 () Bool)

(assert (=> b!108714 m!122367))

(assert (=> b!108716 m!121821))

(assert (=> b!108716 m!121821))

(assert (=> b!108716 m!122367))

(assert (=> bm!11453 d!30241))

(declare-fun b!108719 () Bool)

(declare-fun e!70730 () Option!161)

(assert (=> b!108719 (= e!70730 (getValueByKey!155 (t!5730 (toList!790 lt!55488)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!108718 () Bool)

(declare-fun e!70729 () Option!161)

(assert (=> b!108718 (= e!70729 e!70730)))

(declare-fun c!19160 () Bool)

(assert (=> b!108718 (= c!19160 (and ((_ is Cons!1619) (toList!790 lt!55488)) (not (= (_1!1207 (h!2217 (toList!790 lt!55488))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(declare-fun c!19159 () Bool)

(declare-fun d!30243 () Bool)

(assert (=> d!30243 (= c!19159 (and ((_ is Cons!1619) (toList!790 lt!55488)) (= (_1!1207 (h!2217 (toList!790 lt!55488))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!30243 (= (getValueByKey!155 (toList!790 lt!55488) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) e!70729)))

(declare-fun b!108720 () Bool)

(assert (=> b!108720 (= e!70730 None!159)))

(declare-fun b!108717 () Bool)

(assert (=> b!108717 (= e!70729 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55488)))))))

(assert (= (and d!30243 c!19159) b!108717))

(assert (= (and d!30243 (not c!19159)) b!108718))

(assert (= (and b!108718 c!19160) b!108719))

(assert (= (and b!108718 (not c!19160)) b!108720))

(declare-fun m!122369 () Bool)

(assert (=> b!108719 m!122369))

(assert (=> b!108037 d!30243))

(assert (=> b!108174 d!29935))

(declare-fun b!108721 () Bool)

(declare-fun lt!55851 () Unit!3307)

(declare-fun lt!55850 () Unit!3307)

(assert (=> b!108721 (= lt!55851 lt!55850)))

(declare-fun lt!55848 () V!3233)

(declare-fun lt!55849 () (_ BitVec 64))

(declare-fun lt!55846 () ListLongMap!1549)

(declare-fun lt!55847 () (_ BitVec 64))

(assert (=> b!108721 (not (contains!824 (+!137 lt!55846 (tuple2!2393 lt!55849 lt!55848)) lt!55847))))

(assert (=> b!108721 (= lt!55850 (addStillNotContains!48 lt!55846 lt!55849 lt!55848 lt!55847))))

(assert (=> b!108721 (= lt!55847 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108721 (= lt!55848 (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108721 (= lt!55849 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!11540 () ListLongMap!1549)

(assert (=> b!108721 (= lt!55846 call!11540)))

(declare-fun e!70736 () ListLongMap!1549)

(assert (=> b!108721 (= e!70736 (+!137 call!11540 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!70735 () Bool)

(declare-fun lt!55852 () ListLongMap!1549)

(declare-fun b!108722 () Bool)

(assert (=> b!108722 (= e!70735 (= lt!55852 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!108723 () Bool)

(assert (=> b!108723 (= e!70736 call!11540)))

(declare-fun b!108724 () Bool)

(assert (=> b!108724 (= e!70735 (isEmpty!377 lt!55852))))

(declare-fun b!108725 () Bool)

(assert (=> b!108725 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> b!108725 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2320 (_values!2588 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun e!70732 () Bool)

(assert (=> b!108725 (= e!70732 (= (apply!99 lt!55852 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108726 () Bool)

(declare-fun e!70734 () ListLongMap!1549)

(assert (=> b!108726 (= e!70734 (ListLongMap!1550 Nil!1620))))

(declare-fun b!108727 () Bool)

(declare-fun e!70737 () Bool)

(declare-fun e!70731 () Bool)

(assert (=> b!108727 (= e!70737 e!70731)))

(declare-fun c!19162 () Bool)

(declare-fun e!70733 () Bool)

(assert (=> b!108727 (= c!19162 e!70733)))

(declare-fun res!53860 () Bool)

(assert (=> b!108727 (=> (not res!53860) (not e!70733))))

(assert (=> b!108727 (= res!53860 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!108729 () Bool)

(assert (=> b!108729 (= e!70734 e!70736)))

(declare-fun c!19164 () Bool)

(assert (=> b!108729 (= c!19164 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!11537 () Bool)

(assert (=> bm!11537 (= call!11540 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!108730 () Bool)

(declare-fun res!53862 () Bool)

(assert (=> b!108730 (=> (not res!53862) (not e!70737))))

(assert (=> b!108730 (= res!53862 (not (contains!824 lt!55852 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108731 () Bool)

(assert (=> b!108731 (= e!70731 e!70732)))

(assert (=> b!108731 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun res!53863 () Bool)

(assert (=> b!108731 (= res!53863 (contains!824 lt!55852 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!108731 (=> (not res!53863) (not e!70732))))

(declare-fun b!108732 () Bool)

(assert (=> b!108732 (= e!70731 e!70735)))

(declare-fun c!19163 () Bool)

(assert (=> b!108732 (= c!19163 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun d!30245 () Bool)

(assert (=> d!30245 e!70737))

(declare-fun res!53861 () Bool)

(assert (=> d!30245 (=> (not res!53861) (not e!70737))))

(assert (=> d!30245 (= res!53861 (not (contains!824 lt!55852 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30245 (= lt!55852 e!70734)))

(declare-fun c!19161 () Bool)

(assert (=> d!30245 (= c!19161 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> d!30245 (validMask!0 (mask!6762 (v!2904 (underlying!360 thiss!992))))))

(assert (=> d!30245 (= (getCurrentListMapNoExtraKeys!102 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (_values!2588 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992))) (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) (minValue!2478 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992)))) lt!55852)))

(declare-fun b!108728 () Bool)

(assert (=> b!108728 (= e!70733 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!108728 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (= (and d!30245 c!19161) b!108726))

(assert (= (and d!30245 (not c!19161)) b!108729))

(assert (= (and b!108729 c!19164) b!108721))

(assert (= (and b!108729 (not c!19164)) b!108723))

(assert (= (or b!108721 b!108723) bm!11537))

(assert (= (and d!30245 res!53861) b!108730))

(assert (= (and b!108730 res!53862) b!108727))

(assert (= (and b!108727 res!53860) b!108728))

(assert (= (and b!108727 c!19162) b!108731))

(assert (= (and b!108727 (not c!19162)) b!108732))

(assert (= (and b!108731 res!53863) b!108725))

(assert (= (and b!108732 c!19163) b!108722))

(assert (= (and b!108732 (not c!19163)) b!108724))

(declare-fun b_lambda!4849 () Bool)

(assert (=> (not b_lambda!4849) (not b!108721)))

(assert (=> b!108721 t!5726))

(declare-fun b_and!6689 () Bool)

(assert (= b_and!6685 (and (=> t!5726 result!3485) b_and!6689)))

(assert (=> b!108721 t!5728))

(declare-fun b_and!6691 () Bool)

(assert (= b_and!6687 (and (=> t!5728 result!3489) b_and!6691)))

(declare-fun b_lambda!4851 () Bool)

(assert (=> (not b_lambda!4851) (not b!108725)))

(assert (=> b!108725 t!5726))

(declare-fun b_and!6693 () Bool)

(assert (= b_and!6689 (and (=> t!5726 result!3485) b_and!6693)))

(assert (=> b!108725 t!5728))

(declare-fun b_and!6695 () Bool)

(assert (= b_and!6691 (and (=> t!5728 result!3489) b_and!6695)))

(declare-fun m!122371 () Bool)

(assert (=> b!108725 m!122371))

(assert (=> b!108725 m!120397))

(declare-fun m!122373 () Bool)

(assert (=> b!108725 m!122373))

(assert (=> b!108725 m!121683))

(assert (=> b!108725 m!120397))

(assert (=> b!108725 m!121683))

(declare-fun m!122375 () Bool)

(assert (=> b!108725 m!122375))

(assert (=> b!108725 m!122371))

(declare-fun m!122377 () Bool)

(assert (=> d!30245 m!122377))

(assert (=> d!30245 m!120417))

(assert (=> b!108729 m!121683))

(assert (=> b!108729 m!121683))

(declare-fun m!122379 () Bool)

(assert (=> b!108729 m!122379))

(declare-fun m!122381 () Bool)

(assert (=> b!108722 m!122381))

(declare-fun m!122383 () Bool)

(assert (=> b!108730 m!122383))

(assert (=> b!108731 m!121683))

(assert (=> b!108731 m!121683))

(declare-fun m!122385 () Bool)

(assert (=> b!108731 m!122385))

(assert (=> b!108721 m!122371))

(assert (=> b!108721 m!120397))

(assert (=> b!108721 m!122373))

(declare-fun m!122387 () Bool)

(assert (=> b!108721 m!122387))

(assert (=> b!108721 m!122387))

(declare-fun m!122389 () Bool)

(assert (=> b!108721 m!122389))

(assert (=> b!108721 m!120397))

(assert (=> b!108721 m!122371))

(declare-fun m!122391 () Bool)

(assert (=> b!108721 m!122391))

(declare-fun m!122393 () Bool)

(assert (=> b!108721 m!122393))

(assert (=> b!108721 m!121683))

(assert (=> b!108728 m!121683))

(assert (=> b!108728 m!121683))

(assert (=> b!108728 m!122379))

(declare-fun m!122395 () Bool)

(assert (=> b!108724 m!122395))

(assert (=> bm!11537 m!122381))

(assert (=> bm!11427 d!30245))

(declare-fun d!30247 () Bool)

(declare-fun e!70738 () Bool)

(assert (=> d!30247 e!70738))

(declare-fun res!53864 () Bool)

(assert (=> d!30247 (=> res!53864 e!70738)))

(declare-fun lt!55853 () Bool)

(assert (=> d!30247 (= res!53864 (not lt!55853))))

(declare-fun lt!55854 () Bool)

(assert (=> d!30247 (= lt!55853 lt!55854)))

(declare-fun lt!55856 () Unit!3307)

(declare-fun e!70739 () Unit!3307)

(assert (=> d!30247 (= lt!55856 e!70739)))

(declare-fun c!19165 () Bool)

(assert (=> d!30247 (= c!19165 lt!55854)))

(assert (=> d!30247 (= lt!55854 (containsKey!159 (toList!790 lt!55576) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30247 (= (contains!824 lt!55576 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) lt!55853)))

(declare-fun b!108733 () Bool)

(declare-fun lt!55855 () Unit!3307)

(assert (=> b!108733 (= e!70739 lt!55855)))

(assert (=> b!108733 (= lt!55855 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55576) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108733 (isDefined!109 (getValueByKey!155 (toList!790 lt!55576) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108734 () Bool)

(declare-fun Unit!3359 () Unit!3307)

(assert (=> b!108734 (= e!70739 Unit!3359)))

(declare-fun b!108735 () Bool)

(assert (=> b!108735 (= e!70738 (isDefined!109 (getValueByKey!155 (toList!790 lt!55576) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!30247 c!19165) b!108733))

(assert (= (and d!30247 (not c!19165)) b!108734))

(assert (= (and d!30247 (not res!53864)) b!108735))

(assert (=> d!30247 m!120769))

(declare-fun m!122397 () Bool)

(assert (=> d!30247 m!122397))

(assert (=> b!108733 m!120769))

(declare-fun m!122399 () Bool)

(assert (=> b!108733 m!122399))

(assert (=> b!108733 m!120769))

(assert (=> b!108733 m!122251))

(assert (=> b!108733 m!122251))

(declare-fun m!122401 () Bool)

(assert (=> b!108733 m!122401))

(assert (=> b!108735 m!120769))

(assert (=> b!108735 m!122251))

(assert (=> b!108735 m!122251))

(assert (=> b!108735 m!122401))

(assert (=> b!108161 d!30247))

(assert (=> d!29855 d!29941))

(declare-fun d!30249 () Bool)

(declare-fun res!53865 () Bool)

(declare-fun e!70740 () Bool)

(assert (=> d!30249 (=> res!53865 e!70740)))

(assert (=> d!30249 (= res!53865 (and ((_ is Cons!1619) (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (= (_1!1207 (h!2217 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))) lt!55110)))))

(assert (=> d!30249 (= (containsKey!159 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55110) e!70740)))

(declare-fun b!108736 () Bool)

(declare-fun e!70741 () Bool)

(assert (=> b!108736 (= e!70740 e!70741)))

(declare-fun res!53866 () Bool)

(assert (=> b!108736 (=> (not res!53866) (not e!70741))))

(assert (=> b!108736 (= res!53866 (and (or (not ((_ is Cons!1619) (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))) (bvsle (_1!1207 (h!2217 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))) lt!55110)) ((_ is Cons!1619) (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (bvslt (_1!1207 (h!2217 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))) lt!55110)))))

(declare-fun b!108737 () Bool)

(assert (=> b!108737 (= e!70741 (containsKey!159 (t!5730 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) lt!55110))))

(assert (= (and d!30249 (not res!53865)) b!108736))

(assert (= (and b!108736 res!53866) b!108737))

(declare-fun m!122403 () Bool)

(assert (=> b!108737 m!122403))

(assert (=> d!29779 d!30249))

(assert (=> d!29767 d!29773))

(assert (=> d!29767 d!29775))

(declare-fun d!30251 () Bool)

(declare-fun e!70742 () Bool)

(assert (=> d!30251 e!70742))

(declare-fun res!53867 () Bool)

(assert (=> d!30251 (=> res!53867 e!70742)))

(declare-fun lt!55857 () Bool)

(assert (=> d!30251 (= res!53867 (not lt!55857))))

(declare-fun lt!55858 () Bool)

(assert (=> d!30251 (= lt!55857 lt!55858)))

(declare-fun lt!55860 () Unit!3307)

(declare-fun e!70743 () Unit!3307)

(assert (=> d!30251 (= lt!55860 e!70743)))

(declare-fun c!19166 () Bool)

(assert (=> d!30251 (= c!19166 lt!55858)))

(assert (=> d!30251 (= lt!55858 (containsKey!159 (toList!790 lt!55115) lt!55120))))

(assert (=> d!30251 (= (contains!824 lt!55115 lt!55120) lt!55857)))

(declare-fun b!108738 () Bool)

(declare-fun lt!55859 () Unit!3307)

(assert (=> b!108738 (= e!70743 lt!55859)))

(assert (=> b!108738 (= lt!55859 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55115) lt!55120))))

(assert (=> b!108738 (isDefined!109 (getValueByKey!155 (toList!790 lt!55115) lt!55120))))

(declare-fun b!108739 () Bool)

(declare-fun Unit!3360 () Unit!3307)

(assert (=> b!108739 (= e!70743 Unit!3360)))

(declare-fun b!108740 () Bool)

(assert (=> b!108740 (= e!70742 (isDefined!109 (getValueByKey!155 (toList!790 lt!55115) lt!55120)))))

(assert (= (and d!30251 c!19166) b!108738))

(assert (= (and d!30251 (not c!19166)) b!108739))

(assert (= (and d!30251 (not res!53867)) b!108740))

(declare-fun m!122405 () Bool)

(assert (=> d!30251 m!122405))

(declare-fun m!122407 () Bool)

(assert (=> b!108738 m!122407))

(assert (=> b!108738 m!121037))

(assert (=> b!108738 m!121037))

(declare-fun m!122409 () Bool)

(assert (=> b!108738 m!122409))

(assert (=> b!108740 m!121037))

(assert (=> b!108740 m!121037))

(assert (=> b!108740 m!122409))

(assert (=> d!29767 d!30251))

(assert (=> d!29767 d!29789))

(declare-fun d!30253 () Bool)

(assert (=> d!30253 (= (apply!99 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55120) (apply!99 lt!55115 lt!55120))))

(assert (=> d!30253 true))

(declare-fun _$34!899 () Unit!3307)

(assert (=> d!30253 (= (choose!677 lt!55115 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55120) _$34!899)))

(declare-fun bs!4461 () Bool)

(assert (= bs!4461 d!30253))

(assert (=> bs!4461 m!120569))

(assert (=> bs!4461 m!120569))

(assert (=> bs!4461 m!120571))

(assert (=> bs!4461 m!120591))

(assert (=> d!29767 d!30253))

(assert (=> d!29733 d!29941))

(declare-fun lt!55861 () Bool)

(declare-fun d!30255 () Bool)

(assert (=> d!30255 (= lt!55861 (select (content!112 (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!70744 () Bool)

(assert (=> d!30255 (= lt!55861 e!70744)))

(declare-fun res!53868 () Bool)

(assert (=> d!30255 (=> (not res!53868) (not e!70744))))

(assert (=> d!30255 (= res!53868 ((_ is Cons!1618) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)))))

(assert (=> d!30255 (= (contains!825 (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!55861)))

(declare-fun b!108741 () Bool)

(declare-fun e!70745 () Bool)

(assert (=> b!108741 (= e!70744 e!70745)))

(declare-fun res!53869 () Bool)

(assert (=> b!108741 (=> res!53869 e!70745)))

(assert (=> b!108741 (= res!53869 (= (h!2216 (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!108742 () Bool)

(assert (=> b!108742 (= e!70745 (contains!825 (t!5729 (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!30255 res!53868) b!108741))

(assert (= (and b!108741 (not res!53869)) b!108742))

(declare-fun m!122411 () Bool)

(assert (=> d!30255 m!122411))

(assert (=> d!30255 m!120869))

(declare-fun m!122413 () Bool)

(assert (=> d!30255 m!122413))

(assert (=> b!108742 m!120869))

(declare-fun m!122415 () Bool)

(assert (=> b!108742 m!122415))

(assert (=> b!107847 d!30255))

(declare-fun b!108745 () Bool)

(declare-fun e!70747 () Option!161)

(assert (=> b!108745 (= e!70747 (getValueByKey!155 (t!5730 (t!5730 (toList!790 lt!55176))) (_1!1207 lt!54985)))))

(declare-fun b!108744 () Bool)

(declare-fun e!70746 () Option!161)

(assert (=> b!108744 (= e!70746 e!70747)))

(declare-fun c!19168 () Bool)

(assert (=> b!108744 (= c!19168 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!55176))) (not (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!55176)))) (_1!1207 lt!54985)))))))

(declare-fun d!30257 () Bool)

(declare-fun c!19167 () Bool)

(assert (=> d!30257 (= c!19167 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!55176))) (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!55176)))) (_1!1207 lt!54985))))))

(assert (=> d!30257 (= (getValueByKey!155 (t!5730 (toList!790 lt!55176)) (_1!1207 lt!54985)) e!70746)))

(declare-fun b!108746 () Bool)

(assert (=> b!108746 (= e!70747 None!159)))

(declare-fun b!108743 () Bool)

(assert (=> b!108743 (= e!70746 (Some!160 (_2!1207 (h!2217 (t!5730 (toList!790 lt!55176))))))))

(assert (= (and d!30257 c!19167) b!108743))

(assert (= (and d!30257 (not c!19167)) b!108744))

(assert (= (and b!108744 c!19168) b!108745))

(assert (= (and b!108744 (not c!19168)) b!108746))

(declare-fun m!122417 () Bool)

(assert (=> b!108745 m!122417))

(assert (=> b!108194 d!30257))

(declare-fun d!30259 () Bool)

(assert (=> d!30259 (= (isDefined!109 (getValueByKey!155 (toList!790 lt!55175) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!379 (getValueByKey!155 (toList!790 lt!55175) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4462 () Bool)

(assert (= bs!4462 d!30259))

(assert (=> bs!4462 m!121555))

(declare-fun m!122419 () Bool)

(assert (=> bs!4462 m!122419))

(assert (=> b!108246 d!30259))

(declare-fun b!108749 () Bool)

(declare-fun e!70749 () Option!161)

(assert (=> b!108749 (= e!70749 (getValueByKey!155 (t!5730 (toList!790 lt!55175)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108748 () Bool)

(declare-fun e!70748 () Option!161)

(assert (=> b!108748 (= e!70748 e!70749)))

(declare-fun c!19170 () Bool)

(assert (=> b!108748 (= c!19170 (and ((_ is Cons!1619) (toList!790 lt!55175)) (not (= (_1!1207 (h!2217 (toList!790 lt!55175))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!30261 () Bool)

(declare-fun c!19169 () Bool)

(assert (=> d!30261 (= c!19169 (and ((_ is Cons!1619) (toList!790 lt!55175)) (= (_1!1207 (h!2217 (toList!790 lt!55175))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30261 (= (getValueByKey!155 (toList!790 lt!55175) #b0000000000000000000000000000000000000000000000000000000000000000) e!70748)))

(declare-fun b!108750 () Bool)

(assert (=> b!108750 (= e!70749 None!159)))

(declare-fun b!108747 () Bool)

(assert (=> b!108747 (= e!70748 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55175)))))))

(assert (= (and d!30261 c!19169) b!108747))

(assert (= (and d!30261 (not c!19169)) b!108748))

(assert (= (and b!108748 c!19170) b!108749))

(assert (= (and b!108748 (not c!19170)) b!108750))

(declare-fun m!122421 () Bool)

(assert (=> b!108749 m!122421))

(assert (=> b!108246 d!30261))

(declare-fun lt!55862 () Bool)

(declare-fun d!30263 () Bool)

(assert (=> d!30263 (= lt!55862 (select (content!111 (toList!790 lt!55653)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!70751 () Bool)

(assert (=> d!30263 (= lt!55862 e!70751)))

(declare-fun res!53870 () Bool)

(assert (=> d!30263 (=> (not res!53870) (not e!70751))))

(assert (=> d!30263 (= res!53870 ((_ is Cons!1619) (toList!790 lt!55653)))))

(assert (=> d!30263 (= (contains!826 (toList!790 lt!55653) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!55862)))

(declare-fun b!108751 () Bool)

(declare-fun e!70750 () Bool)

(assert (=> b!108751 (= e!70751 e!70750)))

(declare-fun res!53871 () Bool)

(assert (=> b!108751 (=> res!53871 e!70750)))

(assert (=> b!108751 (= res!53871 (= (h!2217 (toList!790 lt!55653)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108752 () Bool)

(assert (=> b!108752 (= e!70750 (contains!826 (t!5730 (toList!790 lt!55653)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30263 res!53870) b!108751))

(assert (= (and b!108751 (not res!53871)) b!108752))

(declare-fun m!122423 () Bool)

(assert (=> d!30263 m!122423))

(declare-fun m!122425 () Bool)

(assert (=> d!30263 m!122425))

(declare-fun m!122427 () Bool)

(assert (=> b!108752 m!122427))

(assert (=> b!108279 d!30263))

(assert (=> bm!11437 d!29851))

(declare-fun d!30265 () Bool)

(declare-fun e!70752 () Bool)

(assert (=> d!30265 e!70752))

(declare-fun res!53872 () Bool)

(assert (=> d!30265 (=> res!53872 e!70752)))

(declare-fun lt!55863 () Bool)

(assert (=> d!30265 (= res!53872 (not lt!55863))))

(declare-fun lt!55864 () Bool)

(assert (=> d!30265 (= lt!55863 lt!55864)))

(declare-fun lt!55866 () Unit!3307)

(declare-fun e!70753 () Unit!3307)

(assert (=> d!30265 (= lt!55866 e!70753)))

(declare-fun c!19171 () Bool)

(assert (=> d!30265 (= c!19171 lt!55864)))

(assert (=> d!30265 (= lt!55864 (containsKey!159 (toList!790 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30265 (= (contains!824 lt!55306 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55863)))

(declare-fun b!108753 () Bool)

(declare-fun lt!55865 () Unit!3307)

(assert (=> b!108753 (= e!70753 lt!55865)))

(assert (=> b!108753 (= lt!55865 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108753 (isDefined!109 (getValueByKey!155 (toList!790 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108754 () Bool)

(declare-fun Unit!3361 () Unit!3307)

(assert (=> b!108754 (= e!70753 Unit!3361)))

(declare-fun b!108755 () Bool)

(assert (=> b!108755 (= e!70752 (isDefined!109 (getValueByKey!155 (toList!790 lt!55306) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30265 c!19171) b!108753))

(assert (= (and d!30265 (not c!19171)) b!108754))

(assert (= (and d!30265 (not res!53872)) b!108755))

(declare-fun m!122429 () Bool)

(assert (=> d!30265 m!122429))

(declare-fun m!122431 () Bool)

(assert (=> b!108753 m!122431))

(declare-fun m!122433 () Bool)

(assert (=> b!108753 m!122433))

(assert (=> b!108753 m!122433))

(declare-fun m!122435 () Bool)

(assert (=> b!108753 m!122435))

(assert (=> b!108755 m!122433))

(assert (=> b!108755 m!122433))

(assert (=> b!108755 m!122435))

(assert (=> d!29749 d!30265))

(assert (=> d!29749 d!29717))

(assert (=> b!108030 d!29759))

(declare-fun d!30267 () Bool)

(declare-fun res!53873 () Bool)

(declare-fun e!70754 () Bool)

(assert (=> d!30267 (=> res!53873 e!70754)))

(assert (=> d!30267 (= res!53873 (and ((_ is Cons!1619) lt!55605) (= (_1!1207 (h!2217 lt!55605)) (_1!1207 lt!54977))))))

(assert (=> d!30267 (= (containsKey!159 lt!55605 (_1!1207 lt!54977)) e!70754)))

(declare-fun b!108756 () Bool)

(declare-fun e!70755 () Bool)

(assert (=> b!108756 (= e!70754 e!70755)))

(declare-fun res!53874 () Bool)

(assert (=> b!108756 (=> (not res!53874) (not e!70755))))

(assert (=> b!108756 (= res!53874 (and (or (not ((_ is Cons!1619) lt!55605)) (bvsle (_1!1207 (h!2217 lt!55605)) (_1!1207 lt!54977))) ((_ is Cons!1619) lt!55605) (bvslt (_1!1207 (h!2217 lt!55605)) (_1!1207 lt!54977))))))

(declare-fun b!108757 () Bool)

(assert (=> b!108757 (= e!70755 (containsKey!159 (t!5730 lt!55605) (_1!1207 lt!54977)))))

(assert (= (and d!30267 (not res!53873)) b!108756))

(assert (= (and b!108756 res!53874) b!108757))

(declare-fun m!122437 () Bool)

(assert (=> b!108757 m!122437))

(assert (=> b!108212 d!30267))

(declare-fun d!30269 () Bool)

(assert (=> d!30269 (= (apply!99 (+!137 lt!55121 (tuple2!2393 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55111) (apply!99 lt!55121 lt!55111))))

(assert (=> d!30269 true))

(declare-fun _$34!900 () Unit!3307)

(assert (=> d!30269 (= (choose!677 lt!55121 lt!55113 (minValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55111) _$34!900)))

(declare-fun bs!4463 () Bool)

(assert (= bs!4463 d!30269))

(assert (=> bs!4463 m!120575))

(assert (=> bs!4463 m!120575))

(assert (=> bs!4463 m!120581))

(assert (=> bs!4463 m!120585))

(assert (=> d!29785 d!30269))

(assert (=> d!29785 d!29765))

(declare-fun d!30271 () Bool)

(declare-fun e!70756 () Bool)

(assert (=> d!30271 e!70756))

(declare-fun res!53875 () Bool)

(assert (=> d!30271 (=> res!53875 e!70756)))

(declare-fun lt!55867 () Bool)

(assert (=> d!30271 (= res!53875 (not lt!55867))))

(declare-fun lt!55868 () Bool)

(assert (=> d!30271 (= lt!55867 lt!55868)))

(declare-fun lt!55870 () Unit!3307)

(declare-fun e!70757 () Unit!3307)

(assert (=> d!30271 (= lt!55870 e!70757)))

(declare-fun c!19172 () Bool)

(assert (=> d!30271 (= c!19172 lt!55868)))

(assert (=> d!30271 (= lt!55868 (containsKey!159 (toList!790 lt!55121) lt!55111))))

(assert (=> d!30271 (= (contains!824 lt!55121 lt!55111) lt!55867)))

(declare-fun b!108758 () Bool)

(declare-fun lt!55869 () Unit!3307)

(assert (=> b!108758 (= e!70757 lt!55869)))

(assert (=> b!108758 (= lt!55869 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55121) lt!55111))))

(assert (=> b!108758 (isDefined!109 (getValueByKey!155 (toList!790 lt!55121) lt!55111))))

(declare-fun b!108759 () Bool)

(declare-fun Unit!3362 () Unit!3307)

(assert (=> b!108759 (= e!70757 Unit!3362)))

(declare-fun b!108760 () Bool)

(assert (=> b!108760 (= e!70756 (isDefined!109 (getValueByKey!155 (toList!790 lt!55121) lt!55111)))))

(assert (= (and d!30271 c!19172) b!108758))

(assert (= (and d!30271 (not c!19172)) b!108759))

(assert (= (and d!30271 (not res!53875)) b!108760))

(declare-fun m!122439 () Bool)

(assert (=> d!30271 m!122439))

(declare-fun m!122441 () Bool)

(assert (=> b!108758 m!122441))

(assert (=> b!108758 m!121001))

(assert (=> b!108758 m!121001))

(declare-fun m!122443 () Bool)

(assert (=> b!108758 m!122443))

(assert (=> b!108760 m!121001))

(assert (=> b!108760 m!121001))

(assert (=> b!108760 m!122443))

(assert (=> d!29785 d!30271))

(assert (=> d!29785 d!29777))

(assert (=> d!29785 d!29791))

(declare-fun d!30273 () Bool)

(assert (=> d!30273 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55110))))

(declare-fun lt!55871 () Unit!3307)

(assert (=> d!30273 (= lt!55871 (choose!681 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55110))))

(declare-fun e!70758 () Bool)

(assert (=> d!30273 e!70758))

(declare-fun res!53876 () Bool)

(assert (=> d!30273 (=> (not res!53876) (not e!70758))))

(assert (=> d!30273 (= res!53876 (isStrictlySorted!305 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30273 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55110) lt!55871)))

(declare-fun b!108761 () Bool)

(assert (=> b!108761 (= e!70758 (containsKey!159 (toList!790 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55110))))

(assert (= (and d!30273 res!53876) b!108761))

(assert (=> d!30273 m!121009))

(assert (=> d!30273 m!121009))

(assert (=> d!30273 m!121011))

(declare-fun m!122445 () Bool)

(assert (=> d!30273 m!122445))

(declare-fun m!122447 () Bool)

(assert (=> d!30273 m!122447))

(assert (=> b!108761 m!121005))

(assert (=> b!107922 d!30273))

(assert (=> b!107922 d!30081))

(assert (=> b!107922 d!30083))

(assert (=> d!29875 d!29941))

(declare-fun d!30275 () Bool)

(declare-fun e!70759 () Bool)

(assert (=> d!30275 e!70759))

(declare-fun res!53877 () Bool)

(assert (=> d!30275 (=> res!53877 e!70759)))

(declare-fun lt!55872 () Bool)

(assert (=> d!30275 (= res!53877 (not lt!55872))))

(declare-fun lt!55873 () Bool)

(assert (=> d!30275 (= lt!55872 lt!55873)))

(declare-fun lt!55875 () Unit!3307)

(declare-fun e!70760 () Unit!3307)

(assert (=> d!30275 (= lt!55875 e!70760)))

(declare-fun c!19173 () Bool)

(assert (=> d!30275 (= c!19173 lt!55873)))

(assert (=> d!30275 (= lt!55873 (containsKey!159 (toList!790 lt!55488) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!30275 (= (contains!824 lt!55488 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) lt!55872)))

(declare-fun b!108762 () Bool)

(declare-fun lt!55874 () Unit!3307)

(assert (=> b!108762 (= e!70760 lt!55874)))

(assert (=> b!108762 (= lt!55874 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55488) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> b!108762 (isDefined!109 (getValueByKey!155 (toList!790 lt!55488) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!108763 () Bool)

(declare-fun Unit!3363 () Unit!3307)

(assert (=> b!108763 (= e!70760 Unit!3363)))

(declare-fun b!108764 () Bool)

(assert (=> b!108764 (= e!70759 (isDefined!109 (getValueByKey!155 (toList!790 lt!55488) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (= (and d!30275 c!19173) b!108762))

(assert (= (and d!30275 (not c!19173)) b!108763))

(assert (= (and d!30275 (not res!53877)) b!108764))

(declare-fun m!122449 () Bool)

(assert (=> d!30275 m!122449))

(declare-fun m!122451 () Bool)

(assert (=> b!108762 m!122451))

(assert (=> b!108762 m!121217))

(assert (=> b!108762 m!121217))

(declare-fun m!122453 () Bool)

(assert (=> b!108762 m!122453))

(assert (=> b!108764 m!121217))

(assert (=> b!108764 m!121217))

(assert (=> b!108764 m!122453))

(assert (=> d!29845 d!30275))

(declare-fun b!108767 () Bool)

(declare-fun e!70762 () Option!161)

(assert (=> b!108767 (= e!70762 (getValueByKey!155 (t!5730 lt!55491) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!108766 () Bool)

(declare-fun e!70761 () Option!161)

(assert (=> b!108766 (= e!70761 e!70762)))

(declare-fun c!19175 () Bool)

(assert (=> b!108766 (= c!19175 (and ((_ is Cons!1619) lt!55491) (not (= (_1!1207 (h!2217 lt!55491)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(declare-fun c!19174 () Bool)

(declare-fun d!30277 () Bool)

(assert (=> d!30277 (= c!19174 (and ((_ is Cons!1619) lt!55491) (= (_1!1207 (h!2217 lt!55491)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!30277 (= (getValueByKey!155 lt!55491 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) e!70761)))

(declare-fun b!108768 () Bool)

(assert (=> b!108768 (= e!70762 None!159)))

(declare-fun b!108765 () Bool)

(assert (=> b!108765 (= e!70761 (Some!160 (_2!1207 (h!2217 lt!55491))))))

(assert (= (and d!30277 c!19174) b!108765))

(assert (= (and d!30277 (not c!19174)) b!108766))

(assert (= (and b!108766 c!19175) b!108767))

(assert (= (and b!108766 (not c!19175)) b!108768))

(declare-fun m!122455 () Bool)

(assert (=> b!108767 m!122455))

(assert (=> d!29845 d!30277))

(declare-fun d!30279 () Bool)

(assert (=> d!30279 (= (getValueByKey!155 lt!55491 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun lt!55876 () Unit!3307)

(assert (=> d!30279 (= lt!55876 (choose!679 lt!55491 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun e!70763 () Bool)

(assert (=> d!30279 e!70763))

(declare-fun res!53878 () Bool)

(assert (=> d!30279 (=> (not res!53878) (not e!70763))))

(assert (=> d!30279 (= res!53878 (isStrictlySorted!305 lt!55491))))

(assert (=> d!30279 (= (lemmaContainsTupThenGetReturnValue!74 lt!55491 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) lt!55876)))

(declare-fun b!108769 () Bool)

(declare-fun res!53879 () Bool)

(assert (=> b!108769 (=> (not res!53879) (not e!70763))))

(assert (=> b!108769 (= res!53879 (containsKey!159 lt!55491 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!108770 () Bool)

(assert (=> b!108770 (= e!70763 (contains!826 lt!55491 (tuple2!2393 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (= (and d!30279 res!53878) b!108769))

(assert (= (and b!108769 res!53879) b!108770))

(assert (=> d!30279 m!121211))

(declare-fun m!122457 () Bool)

(assert (=> d!30279 m!122457))

(declare-fun m!122459 () Bool)

(assert (=> d!30279 m!122459))

(declare-fun m!122461 () Bool)

(assert (=> b!108769 m!122461))

(declare-fun m!122463 () Bool)

(assert (=> b!108770 m!122463))

(assert (=> d!29845 d!30279))

(declare-fun bm!11538 () Bool)

(declare-fun call!11542 () List!1623)

(declare-fun call!11541 () List!1623)

(assert (=> bm!11538 (= call!11542 call!11541)))

(declare-fun b!108771 () Bool)

(declare-fun e!70768 () List!1623)

(assert (=> b!108771 (= e!70768 call!11542)))

(declare-fun b!108773 () Bool)

(declare-fun e!70765 () List!1623)

(declare-fun call!11543 () List!1623)

(assert (=> b!108773 (= e!70765 call!11543)))

(declare-fun b!108774 () Bool)

(declare-fun e!70764 () Bool)

(declare-fun lt!55877 () List!1623)

(assert (=> b!108774 (= e!70764 (contains!826 lt!55877 (tuple2!2393 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun b!108775 () Bool)

(declare-fun e!70766 () List!1623)

(assert (=> b!108775 (= e!70766 (insertStrictlySorted!77 (t!5730 (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!108776 () Bool)

(declare-fun e!70767 () List!1623)

(assert (=> b!108776 (= e!70767 call!11541)))

(declare-fun c!19176 () Bool)

(declare-fun bm!11539 () Bool)

(assert (=> bm!11539 (= call!11541 ($colon$colon!81 e!70766 (ite c!19176 (h!2217 (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (tuple2!2393 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(declare-fun c!19178 () Bool)

(assert (=> bm!11539 (= c!19178 c!19176)))

(declare-fun bm!11540 () Bool)

(assert (=> bm!11540 (= call!11543 call!11542)))

(declare-fun c!19179 () Bool)

(declare-fun b!108777 () Bool)

(assert (=> b!108777 (= c!19179 (and ((_ is Cons!1619) (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (bvsgt (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> b!108777 (= e!70768 e!70765)))

(declare-fun b!108772 () Bool)

(declare-fun res!53881 () Bool)

(assert (=> b!108772 (=> (not res!53881) (not e!70764))))

(assert (=> b!108772 (= res!53881 (containsKey!159 lt!55877 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun d!30281 () Bool)

(assert (=> d!30281 e!70764))

(declare-fun res!53880 () Bool)

(assert (=> d!30281 (=> (not res!53880) (not e!70764))))

(assert (=> d!30281 (= res!53880 (isStrictlySorted!305 lt!55877))))

(assert (=> d!30281 (= lt!55877 e!70767)))

(assert (=> d!30281 (= c!19176 (and ((_ is Cons!1619) (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (bvslt (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!30281 (isStrictlySorted!305 (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!30281 (= (insertStrictlySorted!77 (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) lt!55877)))

(declare-fun b!108778 () Bool)

(assert (=> b!108778 (= e!70765 call!11543)))

(declare-fun b!108779 () Bool)

(declare-fun c!19177 () Bool)

(assert (=> b!108779 (= e!70766 (ite c!19177 (t!5730 (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (ite c!19179 (Cons!1619 (h!2217 (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (t!5730 (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))) Nil!1620)))))

(declare-fun b!108780 () Bool)

(assert (=> b!108780 (= e!70767 e!70768)))

(assert (=> b!108780 (= c!19177 (and ((_ is Cons!1619) (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (= (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (= (and d!30281 c!19176) b!108776))

(assert (= (and d!30281 (not c!19176)) b!108780))

(assert (= (and b!108780 c!19177) b!108771))

(assert (= (and b!108780 (not c!19177)) b!108777))

(assert (= (and b!108777 c!19179) b!108778))

(assert (= (and b!108777 (not c!19179)) b!108773))

(assert (= (or b!108778 b!108773) bm!11540))

(assert (= (or b!108771 bm!11540) bm!11538))

(assert (= (or b!108776 bm!11538) bm!11539))

(assert (= (and bm!11539 c!19178) b!108775))

(assert (= (and bm!11539 (not c!19178)) b!108779))

(assert (= (and d!30281 res!53880) b!108772))

(assert (= (and b!108772 res!53881) b!108774))

(declare-fun m!122465 () Bool)

(assert (=> b!108774 m!122465))

(declare-fun m!122467 () Bool)

(assert (=> bm!11539 m!122467))

(declare-fun m!122469 () Bool)

(assert (=> b!108772 m!122469))

(declare-fun m!122471 () Bool)

(assert (=> d!30281 m!122471))

(declare-fun m!122473 () Bool)

(assert (=> d!30281 m!122473))

(declare-fun m!122475 () Bool)

(assert (=> b!108775 m!122475))

(assert (=> d!29845 d!30281))

(declare-fun d!30283 () Bool)

(assert (=> d!30283 (= (apply!99 (+!137 lt!55530 (tuple2!2393 lt!55522 (minValue!2478 newMap!16))) lt!55520) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55530 (tuple2!2393 lt!55522 (minValue!2478 newMap!16)))) lt!55520)))))

(declare-fun bs!4464 () Bool)

(assert (= bs!4464 d!30283))

(declare-fun m!122477 () Bool)

(assert (=> bs!4464 m!122477))

(assert (=> bs!4464 m!122477))

(declare-fun m!122479 () Bool)

(assert (=> bs!4464 m!122479))

(assert (=> b!108076 d!30283))

(declare-fun d!30285 () Bool)

(declare-fun e!70769 () Bool)

(assert (=> d!30285 e!70769))

(declare-fun res!53883 () Bool)

(assert (=> d!30285 (=> (not res!53883) (not e!70769))))

(declare-fun lt!55878 () ListLongMap!1549)

(assert (=> d!30285 (= res!53883 (contains!824 lt!55878 (_1!1207 (tuple2!2393 lt!55521 (minValue!2478 newMap!16)))))))

(declare-fun lt!55881 () List!1623)

(assert (=> d!30285 (= lt!55878 (ListLongMap!1550 lt!55881))))

(declare-fun lt!55879 () Unit!3307)

(declare-fun lt!55880 () Unit!3307)

(assert (=> d!30285 (= lt!55879 lt!55880)))

(assert (=> d!30285 (= (getValueByKey!155 lt!55881 (_1!1207 (tuple2!2393 lt!55521 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55521 (minValue!2478 newMap!16)))))))

(assert (=> d!30285 (= lt!55880 (lemmaContainsTupThenGetReturnValue!74 lt!55881 (_1!1207 (tuple2!2393 lt!55521 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55521 (minValue!2478 newMap!16)))))))

(assert (=> d!30285 (= lt!55881 (insertStrictlySorted!77 (toList!790 lt!55524) (_1!1207 (tuple2!2393 lt!55521 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55521 (minValue!2478 newMap!16)))))))

(assert (=> d!30285 (= (+!137 lt!55524 (tuple2!2393 lt!55521 (minValue!2478 newMap!16))) lt!55878)))

(declare-fun b!108781 () Bool)

(declare-fun res!53882 () Bool)

(assert (=> b!108781 (=> (not res!53882) (not e!70769))))

(assert (=> b!108781 (= res!53882 (= (getValueByKey!155 (toList!790 lt!55878) (_1!1207 (tuple2!2393 lt!55521 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55521 (minValue!2478 newMap!16))))))))

(declare-fun b!108782 () Bool)

(assert (=> b!108782 (= e!70769 (contains!826 (toList!790 lt!55878) (tuple2!2393 lt!55521 (minValue!2478 newMap!16))))))

(assert (= (and d!30285 res!53883) b!108781))

(assert (= (and b!108781 res!53882) b!108782))

(declare-fun m!122481 () Bool)

(assert (=> d!30285 m!122481))

(declare-fun m!122483 () Bool)

(assert (=> d!30285 m!122483))

(declare-fun m!122485 () Bool)

(assert (=> d!30285 m!122485))

(declare-fun m!122487 () Bool)

(assert (=> d!30285 m!122487))

(declare-fun m!122489 () Bool)

(assert (=> b!108781 m!122489))

(declare-fun m!122491 () Bool)

(assert (=> b!108782 m!122491))

(assert (=> b!108076 d!30285))

(declare-fun d!30287 () Bool)

(declare-fun e!70770 () Bool)

(assert (=> d!30287 e!70770))

(declare-fun res!53885 () Bool)

(assert (=> d!30287 (=> (not res!53885) (not e!70770))))

(declare-fun lt!55882 () ListLongMap!1549)

(assert (=> d!30287 (= res!53885 (contains!824 lt!55882 (_1!1207 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16)))))))

(declare-fun lt!55885 () List!1623)

(assert (=> d!30287 (= lt!55882 (ListLongMap!1550 lt!55885))))

(declare-fun lt!55883 () Unit!3307)

(declare-fun lt!55884 () Unit!3307)

(assert (=> d!30287 (= lt!55883 lt!55884)))

(assert (=> d!30287 (= (getValueByKey!155 lt!55885 (_1!1207 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30287 (= lt!55884 (lemmaContainsTupThenGetReturnValue!74 lt!55885 (_1!1207 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30287 (= lt!55885 (insertStrictlySorted!77 (toList!790 lt!55518) (_1!1207 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30287 (= (+!137 lt!55518 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16))) lt!55882)))

(declare-fun b!108783 () Bool)

(declare-fun res!53884 () Bool)

(assert (=> b!108783 (=> (not res!53884) (not e!70770))))

(assert (=> b!108783 (= res!53884 (= (getValueByKey!155 (toList!790 lt!55882) (_1!1207 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16))))))))

(declare-fun b!108784 () Bool)

(assert (=> b!108784 (= e!70770 (contains!826 (toList!790 lt!55882) (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16))))))

(assert (= (and d!30287 res!53885) b!108783))

(assert (= (and b!108783 res!53884) b!108784))

(declare-fun m!122493 () Bool)

(assert (=> d!30287 m!122493))

(declare-fun m!122495 () Bool)

(assert (=> d!30287 m!122495))

(declare-fun m!122497 () Bool)

(assert (=> d!30287 m!122497))

(declare-fun m!122499 () Bool)

(assert (=> d!30287 m!122499))

(declare-fun m!122501 () Bool)

(assert (=> b!108783 m!122501))

(declare-fun m!122503 () Bool)

(assert (=> b!108784 m!122503))

(assert (=> b!108076 d!30287))

(declare-fun d!30289 () Bool)

(assert (=> d!30289 (contains!824 (+!137 lt!55514 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16))) lt!55519)))

(declare-fun lt!55886 () Unit!3307)

(assert (=> d!30289 (= lt!55886 (choose!678 lt!55514 lt!55513 (zeroValue!2478 newMap!16) lt!55519))))

(assert (=> d!30289 (contains!824 lt!55514 lt!55519)))

(assert (=> d!30289 (= (addStillContains!75 lt!55514 lt!55513 (zeroValue!2478 newMap!16) lt!55519) lt!55886)))

(declare-fun bs!4465 () Bool)

(assert (= bs!4465 d!30289))

(assert (=> bs!4465 m!121301))

(assert (=> bs!4465 m!121301))

(assert (=> bs!4465 m!121313))

(declare-fun m!122505 () Bool)

(assert (=> bs!4465 m!122505))

(declare-fun m!122507 () Bool)

(assert (=> bs!4465 m!122507))

(assert (=> b!108076 d!30289))

(declare-fun d!30291 () Bool)

(assert (=> d!30291 (= (apply!99 (+!137 lt!55524 (tuple2!2393 lt!55521 (minValue!2478 newMap!16))) lt!55529) (apply!99 lt!55524 lt!55529))))

(declare-fun lt!55887 () Unit!3307)

(assert (=> d!30291 (= lt!55887 (choose!677 lt!55524 lt!55521 (minValue!2478 newMap!16) lt!55529))))

(declare-fun e!70771 () Bool)

(assert (=> d!30291 e!70771))

(declare-fun res!53886 () Bool)

(assert (=> d!30291 (=> (not res!53886) (not e!70771))))

(assert (=> d!30291 (= res!53886 (contains!824 lt!55524 lt!55529))))

(assert (=> d!30291 (= (addApplyDifferent!75 lt!55524 lt!55521 (minValue!2478 newMap!16) lt!55529) lt!55887)))

(declare-fun b!108785 () Bool)

(assert (=> b!108785 (= e!70771 (not (= lt!55529 lt!55521)))))

(assert (= (and d!30291 res!53886) b!108785))

(assert (=> d!30291 m!121315))

(declare-fun m!122509 () Bool)

(assert (=> d!30291 m!122509))

(assert (=> d!30291 m!121293))

(declare-fun m!122511 () Bool)

(assert (=> d!30291 m!122511))

(assert (=> d!30291 m!121293))

(assert (=> d!30291 m!121295))

(assert (=> b!108076 d!30291))

(declare-fun d!30293 () Bool)

(assert (=> d!30293 (= (apply!99 lt!55524 lt!55529) (get!1344 (getValueByKey!155 (toList!790 lt!55524) lt!55529)))))

(declare-fun bs!4466 () Bool)

(assert (= bs!4466 d!30293))

(declare-fun m!122513 () Bool)

(assert (=> bs!4466 m!122513))

(assert (=> bs!4466 m!122513))

(declare-fun m!122515 () Bool)

(assert (=> bs!4466 m!122515))

(assert (=> b!108076 d!30293))

(declare-fun d!30295 () Bool)

(assert (=> d!30295 (= (apply!99 (+!137 lt!55530 (tuple2!2393 lt!55522 (minValue!2478 newMap!16))) lt!55520) (apply!99 lt!55530 lt!55520))))

(declare-fun lt!55888 () Unit!3307)

(assert (=> d!30295 (= lt!55888 (choose!677 lt!55530 lt!55522 (minValue!2478 newMap!16) lt!55520))))

(declare-fun e!70772 () Bool)

(assert (=> d!30295 e!70772))

(declare-fun res!53887 () Bool)

(assert (=> d!30295 (=> (not res!53887) (not e!70772))))

(assert (=> d!30295 (= res!53887 (contains!824 lt!55530 lt!55520))))

(assert (=> d!30295 (= (addApplyDifferent!75 lt!55530 lt!55522 (minValue!2478 newMap!16) lt!55520) lt!55888)))

(declare-fun b!108786 () Bool)

(assert (=> b!108786 (= e!70772 (not (= lt!55520 lt!55522)))))

(assert (= (and d!30295 res!53887) b!108786))

(assert (=> d!30295 m!121309))

(declare-fun m!122517 () Bool)

(assert (=> d!30295 m!122517))

(assert (=> d!30295 m!121299))

(declare-fun m!122519 () Bool)

(assert (=> d!30295 m!122519))

(assert (=> d!30295 m!121299))

(assert (=> d!30295 m!121305))

(assert (=> b!108076 d!30295))

(assert (=> b!108076 d!30087))

(declare-fun d!30297 () Bool)

(assert (=> d!30297 (= (apply!99 lt!55530 lt!55520) (get!1344 (getValueByKey!155 (toList!790 lt!55530) lt!55520)))))

(declare-fun bs!4467 () Bool)

(assert (= bs!4467 d!30297))

(declare-fun m!122521 () Bool)

(assert (=> bs!4467 m!122521))

(assert (=> bs!4467 m!122521))

(declare-fun m!122523 () Bool)

(assert (=> bs!4467 m!122523))

(assert (=> b!108076 d!30297))

(declare-fun d!30299 () Bool)

(declare-fun e!70773 () Bool)

(assert (=> d!30299 e!70773))

(declare-fun res!53888 () Bool)

(assert (=> d!30299 (=> res!53888 e!70773)))

(declare-fun lt!55889 () Bool)

(assert (=> d!30299 (= res!53888 (not lt!55889))))

(declare-fun lt!55890 () Bool)

(assert (=> d!30299 (= lt!55889 lt!55890)))

(declare-fun lt!55892 () Unit!3307)

(declare-fun e!70774 () Unit!3307)

(assert (=> d!30299 (= lt!55892 e!70774)))

(declare-fun c!19180 () Bool)

(assert (=> d!30299 (= c!19180 lt!55890)))

(assert (=> d!30299 (= lt!55890 (containsKey!159 (toList!790 (+!137 lt!55514 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16)))) lt!55519))))

(assert (=> d!30299 (= (contains!824 (+!137 lt!55514 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16))) lt!55519) lt!55889)))

(declare-fun b!108787 () Bool)

(declare-fun lt!55891 () Unit!3307)

(assert (=> b!108787 (= e!70774 lt!55891)))

(assert (=> b!108787 (= lt!55891 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (+!137 lt!55514 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16)))) lt!55519))))

(assert (=> b!108787 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55514 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16)))) lt!55519))))

(declare-fun b!108788 () Bool)

(declare-fun Unit!3364 () Unit!3307)

(assert (=> b!108788 (= e!70774 Unit!3364)))

(declare-fun b!108789 () Bool)

(assert (=> b!108789 (= e!70773 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55514 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16)))) lt!55519)))))

(assert (= (and d!30299 c!19180) b!108787))

(assert (= (and d!30299 (not c!19180)) b!108788))

(assert (= (and d!30299 (not res!53888)) b!108789))

(declare-fun m!122525 () Bool)

(assert (=> d!30299 m!122525))

(declare-fun m!122527 () Bool)

(assert (=> b!108787 m!122527))

(declare-fun m!122529 () Bool)

(assert (=> b!108787 m!122529))

(assert (=> b!108787 m!122529))

(declare-fun m!122531 () Bool)

(assert (=> b!108787 m!122531))

(assert (=> b!108789 m!122529))

(assert (=> b!108789 m!122529))

(assert (=> b!108789 m!122531))

(assert (=> b!108076 d!30299))

(declare-fun d!30301 () Bool)

(declare-fun e!70775 () Bool)

(assert (=> d!30301 e!70775))

(declare-fun res!53890 () Bool)

(assert (=> d!30301 (=> (not res!53890) (not e!70775))))

(declare-fun lt!55893 () ListLongMap!1549)

(assert (=> d!30301 (= res!53890 (contains!824 lt!55893 (_1!1207 (tuple2!2393 lt!55522 (minValue!2478 newMap!16)))))))

(declare-fun lt!55896 () List!1623)

(assert (=> d!30301 (= lt!55893 (ListLongMap!1550 lt!55896))))

(declare-fun lt!55894 () Unit!3307)

(declare-fun lt!55895 () Unit!3307)

(assert (=> d!30301 (= lt!55894 lt!55895)))

(assert (=> d!30301 (= (getValueByKey!155 lt!55896 (_1!1207 (tuple2!2393 lt!55522 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55522 (minValue!2478 newMap!16)))))))

(assert (=> d!30301 (= lt!55895 (lemmaContainsTupThenGetReturnValue!74 lt!55896 (_1!1207 (tuple2!2393 lt!55522 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55522 (minValue!2478 newMap!16)))))))

(assert (=> d!30301 (= lt!55896 (insertStrictlySorted!77 (toList!790 lt!55530) (_1!1207 (tuple2!2393 lt!55522 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55522 (minValue!2478 newMap!16)))))))

(assert (=> d!30301 (= (+!137 lt!55530 (tuple2!2393 lt!55522 (minValue!2478 newMap!16))) lt!55893)))

(declare-fun b!108790 () Bool)

(declare-fun res!53889 () Bool)

(assert (=> b!108790 (=> (not res!53889) (not e!70775))))

(assert (=> b!108790 (= res!53889 (= (getValueByKey!155 (toList!790 lt!55893) (_1!1207 (tuple2!2393 lt!55522 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55522 (minValue!2478 newMap!16))))))))

(declare-fun b!108791 () Bool)

(assert (=> b!108791 (= e!70775 (contains!826 (toList!790 lt!55893) (tuple2!2393 lt!55522 (minValue!2478 newMap!16))))))

(assert (= (and d!30301 res!53890) b!108790))

(assert (= (and b!108790 res!53889) b!108791))

(declare-fun m!122533 () Bool)

(assert (=> d!30301 m!122533))

(declare-fun m!122535 () Bool)

(assert (=> d!30301 m!122535))

(declare-fun m!122537 () Bool)

(assert (=> d!30301 m!122537))

(declare-fun m!122539 () Bool)

(assert (=> d!30301 m!122539))

(declare-fun m!122541 () Bool)

(assert (=> b!108790 m!122541))

(declare-fun m!122543 () Bool)

(assert (=> b!108791 m!122543))

(assert (=> b!108076 d!30301))

(declare-fun d!30303 () Bool)

(assert (=> d!30303 (= (apply!99 (+!137 lt!55518 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16))) lt!55534) (apply!99 lt!55518 lt!55534))))

(declare-fun lt!55897 () Unit!3307)

(assert (=> d!30303 (= lt!55897 (choose!677 lt!55518 lt!55515 (zeroValue!2478 newMap!16) lt!55534))))

(declare-fun e!70776 () Bool)

(assert (=> d!30303 e!70776))

(declare-fun res!53891 () Bool)

(assert (=> d!30303 (=> (not res!53891) (not e!70776))))

(assert (=> d!30303 (= res!53891 (contains!824 lt!55518 lt!55534))))

(assert (=> d!30303 (= (addApplyDifferent!75 lt!55518 lt!55515 (zeroValue!2478 newMap!16) lt!55534) lt!55897)))

(declare-fun b!108792 () Bool)

(assert (=> b!108792 (= e!70776 (not (= lt!55534 lt!55515)))))

(assert (= (and d!30303 res!53891) b!108792))

(assert (=> d!30303 m!121297))

(declare-fun m!122545 () Bool)

(assert (=> d!30303 m!122545))

(assert (=> d!30303 m!121311))

(declare-fun m!122547 () Bool)

(assert (=> d!30303 m!122547))

(assert (=> d!30303 m!121311))

(assert (=> d!30303 m!121317))

(assert (=> b!108076 d!30303))

(declare-fun d!30305 () Bool)

(assert (=> d!30305 (= (apply!99 (+!137 lt!55524 (tuple2!2393 lt!55521 (minValue!2478 newMap!16))) lt!55529) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55524 (tuple2!2393 lt!55521 (minValue!2478 newMap!16)))) lt!55529)))))

(declare-fun bs!4468 () Bool)

(assert (= bs!4468 d!30305))

(declare-fun m!122549 () Bool)

(assert (=> bs!4468 m!122549))

(assert (=> bs!4468 m!122549))

(declare-fun m!122551 () Bool)

(assert (=> bs!4468 m!122551))

(assert (=> b!108076 d!30305))

(declare-fun d!30307 () Bool)

(declare-fun e!70777 () Bool)

(assert (=> d!30307 e!70777))

(declare-fun res!53893 () Bool)

(assert (=> d!30307 (=> (not res!53893) (not e!70777))))

(declare-fun lt!55898 () ListLongMap!1549)

(assert (=> d!30307 (= res!53893 (contains!824 lt!55898 (_1!1207 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16)))))))

(declare-fun lt!55901 () List!1623)

(assert (=> d!30307 (= lt!55898 (ListLongMap!1550 lt!55901))))

(declare-fun lt!55899 () Unit!3307)

(declare-fun lt!55900 () Unit!3307)

(assert (=> d!30307 (= lt!55899 lt!55900)))

(assert (=> d!30307 (= (getValueByKey!155 lt!55901 (_1!1207 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30307 (= lt!55900 (lemmaContainsTupThenGetReturnValue!74 lt!55901 (_1!1207 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30307 (= lt!55901 (insertStrictlySorted!77 (toList!790 lt!55514) (_1!1207 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30307 (= (+!137 lt!55514 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16))) lt!55898)))

(declare-fun b!108793 () Bool)

(declare-fun res!53892 () Bool)

(assert (=> b!108793 (=> (not res!53892) (not e!70777))))

(assert (=> b!108793 (= res!53892 (= (getValueByKey!155 (toList!790 lt!55898) (_1!1207 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16))))))))

(declare-fun b!108794 () Bool)

(assert (=> b!108794 (= e!70777 (contains!826 (toList!790 lt!55898) (tuple2!2393 lt!55513 (zeroValue!2478 newMap!16))))))

(assert (= (and d!30307 res!53893) b!108793))

(assert (= (and b!108793 res!53892) b!108794))

(declare-fun m!122553 () Bool)

(assert (=> d!30307 m!122553))

(declare-fun m!122555 () Bool)

(assert (=> d!30307 m!122555))

(declare-fun m!122557 () Bool)

(assert (=> d!30307 m!122557))

(declare-fun m!122559 () Bool)

(assert (=> d!30307 m!122559))

(declare-fun m!122561 () Bool)

(assert (=> b!108793 m!122561))

(declare-fun m!122563 () Bool)

(assert (=> b!108794 m!122563))

(assert (=> b!108076 d!30307))

(declare-fun d!30309 () Bool)

(assert (=> d!30309 (= (apply!99 (+!137 lt!55518 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16))) lt!55534) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55518 (tuple2!2393 lt!55515 (zeroValue!2478 newMap!16)))) lt!55534)))))

(declare-fun bs!4469 () Bool)

(assert (= bs!4469 d!30309))

(declare-fun m!122565 () Bool)

(assert (=> bs!4469 m!122565))

(assert (=> bs!4469 m!122565))

(declare-fun m!122567 () Bool)

(assert (=> bs!4469 m!122567))

(assert (=> b!108076 d!30309))

(declare-fun d!30311 () Bool)

(assert (=> d!30311 (= (apply!99 lt!55518 lt!55534) (get!1344 (getValueByKey!155 (toList!790 lt!55518) lt!55534)))))

(declare-fun bs!4470 () Bool)

(assert (= bs!4470 d!30311))

(declare-fun m!122569 () Bool)

(assert (=> bs!4470 m!122569))

(assert (=> bs!4470 m!122569))

(declare-fun m!122571 () Bool)

(assert (=> bs!4470 m!122571))

(assert (=> b!108076 d!30311))

(assert (=> b!107831 d!30245))

(assert (=> d!29885 d!29697))

(declare-fun d!30313 () Bool)

(assert (=> d!30313 (= (inRange!0 (ite c!18989 (index!3201 lt!55555) (index!3204 lt!55555)) (mask!6762 newMap!16)) (and (bvsge (ite c!18989 (index!3201 lt!55555) (index!3204 lt!55555)) #b00000000000000000000000000000000) (bvslt (ite c!18989 (index!3201 lt!55555) (index!3204 lt!55555)) (bvadd (mask!6762 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11474 d!30313))

(declare-fun d!30315 () Bool)

(assert (=> d!30315 (= (apply!99 lt!55533 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1344 (getValueByKey!155 (toList!790 lt!55533) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4471 () Bool)

(assert (= bs!4471 d!30315))

(assert (=> bs!4471 m!120769))

(declare-fun m!122573 () Bool)

(assert (=> bs!4471 m!122573))

(assert (=> bs!4471 m!122573))

(declare-fun m!122575 () Bool)

(assert (=> bs!4471 m!122575))

(assert (=> b!108065 d!30315))

(declare-fun d!30317 () Bool)

(declare-fun c!19181 () Bool)

(assert (=> d!30317 (= c!19181 ((_ is ValueCellFull!1001) (select (arr!2063 lt!55252) #b00000000000000000000000000000000)))))

(declare-fun e!70778 () V!3233)

(assert (=> d!30317 (= (get!1341 (select (arr!2063 lt!55252) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70778)))

(declare-fun b!108795 () Bool)

(assert (=> b!108795 (= e!70778 (get!1342 (select (arr!2063 lt!55252) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108796 () Bool)

(assert (=> b!108796 (= e!70778 (get!1343 (select (arr!2063 lt!55252) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30317 c!19181) b!108795))

(assert (= (and d!30317 (not c!19181)) b!108796))

(assert (=> b!108795 m!121267))

(assert (=> b!108795 m!121113))

(declare-fun m!122577 () Bool)

(assert (=> b!108795 m!122577))

(assert (=> b!108796 m!121267))

(assert (=> b!108796 m!121113))

(declare-fun m!122579 () Bool)

(assert (=> b!108796 m!122579))

(assert (=> b!108065 d!30317))

(assert (=> d!29901 d!29899))

(declare-fun d!30319 () Bool)

(assert (=> d!30319 (= (getValueByKey!155 lt!55150 (_1!1207 lt!54977)) (Some!160 (_2!1207 lt!54977)))))

(assert (=> d!30319 true))

(declare-fun _$22!441 () Unit!3307)

(assert (=> d!30319 (= (choose!679 lt!55150 (_1!1207 lt!54977) (_2!1207 lt!54977)) _$22!441)))

(declare-fun bs!4472 () Bool)

(assert (= bs!4472 d!30319))

(assert (=> bs!4472 m!120637))

(assert (=> d!29901 d!30319))

(declare-fun d!30321 () Bool)

(declare-fun res!53894 () Bool)

(declare-fun e!70779 () Bool)

(assert (=> d!30321 (=> res!53894 e!70779)))

(assert (=> d!30321 (= res!53894 (or ((_ is Nil!1620) lt!55150) ((_ is Nil!1620) (t!5730 lt!55150))))))

(assert (=> d!30321 (= (isStrictlySorted!305 lt!55150) e!70779)))

(declare-fun b!108797 () Bool)

(declare-fun e!70780 () Bool)

(assert (=> b!108797 (= e!70779 e!70780)))

(declare-fun res!53895 () Bool)

(assert (=> b!108797 (=> (not res!53895) (not e!70780))))

(assert (=> b!108797 (= res!53895 (bvslt (_1!1207 (h!2217 lt!55150)) (_1!1207 (h!2217 (t!5730 lt!55150)))))))

(declare-fun b!108798 () Bool)

(assert (=> b!108798 (= e!70780 (isStrictlySorted!305 (t!5730 lt!55150)))))

(assert (= (and d!30321 (not res!53894)) b!108797))

(assert (= (and b!108797 res!53895) b!108798))

(declare-fun m!122581 () Bool)

(assert (=> b!108798 m!122581))

(assert (=> d!29901 d!30321))

(declare-fun d!30323 () Bool)

(assert (=> d!30323 (= (isEmpty!378 (toList!790 lt!55175)) ((_ is Nil!1620) (toList!790 lt!55175)))))

(assert (=> d!29731 d!30323))

(declare-fun bm!11541 () Bool)

(declare-fun call!11545 () List!1623)

(declare-fun call!11544 () List!1623)

(assert (=> bm!11541 (= call!11545 call!11544)))

(declare-fun b!108799 () Bool)

(declare-fun e!70785 () List!1623)

(assert (=> b!108799 (= e!70785 call!11545)))

(declare-fun b!108801 () Bool)

(declare-fun e!70782 () List!1623)

(declare-fun call!11546 () List!1623)

(assert (=> b!108801 (= e!70782 call!11546)))

(declare-fun b!108802 () Bool)

(declare-fun e!70781 () Bool)

(declare-fun lt!55902 () List!1623)

(assert (=> b!108802 (= e!70781 (contains!826 lt!55902 (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(declare-fun b!108803 () Bool)

(declare-fun e!70783 () List!1623)

(assert (=> b!108803 (= e!70783 (insertStrictlySorted!77 (t!5730 (t!5730 (toList!790 lt!54981))) (_1!1207 lt!54985) (_2!1207 lt!54985)))))

(declare-fun b!108804 () Bool)

(declare-fun e!70784 () List!1623)

(assert (=> b!108804 (= e!70784 call!11544)))

(declare-fun c!19182 () Bool)

(declare-fun bm!11542 () Bool)

(assert (=> bm!11542 (= call!11544 ($colon$colon!81 e!70783 (ite c!19182 (h!2217 (t!5730 (toList!790 lt!54981))) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985)))))))

(declare-fun c!19184 () Bool)

(assert (=> bm!11542 (= c!19184 c!19182)))

(declare-fun bm!11543 () Bool)

(assert (=> bm!11543 (= call!11546 call!11545)))

(declare-fun b!108805 () Bool)

(declare-fun c!19185 () Bool)

(assert (=> b!108805 (= c!19185 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!54981))) (bvsgt (_1!1207 (h!2217 (t!5730 (toList!790 lt!54981)))) (_1!1207 lt!54985))))))

(assert (=> b!108805 (= e!70785 e!70782)))

(declare-fun b!108800 () Bool)

(declare-fun res!53897 () Bool)

(assert (=> b!108800 (=> (not res!53897) (not e!70781))))

(assert (=> b!108800 (= res!53897 (containsKey!159 lt!55902 (_1!1207 lt!54985)))))

(declare-fun d!30325 () Bool)

(assert (=> d!30325 e!70781))

(declare-fun res!53896 () Bool)

(assert (=> d!30325 (=> (not res!53896) (not e!70781))))

(assert (=> d!30325 (= res!53896 (isStrictlySorted!305 lt!55902))))

(assert (=> d!30325 (= lt!55902 e!70784)))

(assert (=> d!30325 (= c!19182 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!54981))) (bvslt (_1!1207 (h!2217 (t!5730 (toList!790 lt!54981)))) (_1!1207 lt!54985))))))

(assert (=> d!30325 (isStrictlySorted!305 (t!5730 (toList!790 lt!54981)))))

(assert (=> d!30325 (= (insertStrictlySorted!77 (t!5730 (toList!790 lt!54981)) (_1!1207 lt!54985) (_2!1207 lt!54985)) lt!55902)))

(declare-fun b!108806 () Bool)

(assert (=> b!108806 (= e!70782 call!11546)))

(declare-fun b!108807 () Bool)

(declare-fun c!19183 () Bool)

(assert (=> b!108807 (= e!70783 (ite c!19183 (t!5730 (t!5730 (toList!790 lt!54981))) (ite c!19185 (Cons!1619 (h!2217 (t!5730 (toList!790 lt!54981))) (t!5730 (t!5730 (toList!790 lt!54981)))) Nil!1620)))))

(declare-fun b!108808 () Bool)

(assert (=> b!108808 (= e!70784 e!70785)))

(assert (=> b!108808 (= c!19183 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!54981))) (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!54981)))) (_1!1207 lt!54985))))))

(assert (= (and d!30325 c!19182) b!108804))

(assert (= (and d!30325 (not c!19182)) b!108808))

(assert (= (and b!108808 c!19183) b!108799))

(assert (= (and b!108808 (not c!19183)) b!108805))

(assert (= (and b!108805 c!19185) b!108806))

(assert (= (and b!108805 (not c!19185)) b!108801))

(assert (= (or b!108806 b!108801) bm!11543))

(assert (= (or b!108799 bm!11543) bm!11541))

(assert (= (or b!108804 bm!11541) bm!11542))

(assert (= (and bm!11542 c!19184) b!108803))

(assert (= (and bm!11542 (not c!19184)) b!108807))

(assert (= (and d!30325 res!53896) b!108800))

(assert (= (and b!108800 res!53897) b!108802))

(declare-fun m!122583 () Bool)

(assert (=> b!108802 m!122583))

(declare-fun m!122585 () Bool)

(assert (=> bm!11542 m!122585))

(declare-fun m!122587 () Bool)

(assert (=> b!108800 m!122587))

(declare-fun m!122589 () Bool)

(assert (=> d!30325 m!122589))

(assert (=> d!30325 m!121809))

(declare-fun m!122591 () Bool)

(assert (=> b!108803 m!122591))

(assert (=> b!107974 d!30325))

(assert (=> b!108087 d!29853))

(assert (=> b!108087 d!29855))

(declare-fun d!30327 () Bool)

(declare-fun e!70786 () Bool)

(assert (=> d!30327 e!70786))

(declare-fun res!53898 () Bool)

(assert (=> d!30327 (=> res!53898 e!70786)))

(declare-fun lt!55903 () Bool)

(assert (=> d!30327 (= res!53898 (not lt!55903))))

(declare-fun lt!55904 () Bool)

(assert (=> d!30327 (= lt!55903 lt!55904)))

(declare-fun lt!55906 () Unit!3307)

(declare-fun e!70787 () Unit!3307)

(assert (=> d!30327 (= lt!55906 e!70787)))

(declare-fun c!19186 () Bool)

(assert (=> d!30327 (= c!19186 lt!55904)))

(assert (=> d!30327 (= lt!55904 (containsKey!159 (toList!790 lt!55653) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30327 (= (contains!824 lt!55653 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!55903)))

(declare-fun b!108809 () Bool)

(declare-fun lt!55905 () Unit!3307)

(assert (=> b!108809 (= e!70787 lt!55905)))

(assert (=> b!108809 (= lt!55905 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55653) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!108809 (isDefined!109 (getValueByKey!155 (toList!790 lt!55653) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!108810 () Bool)

(declare-fun Unit!3365 () Unit!3307)

(assert (=> b!108810 (= e!70787 Unit!3365)))

(declare-fun b!108811 () Bool)

(assert (=> b!108811 (= e!70786 (isDefined!109 (getValueByKey!155 (toList!790 lt!55653) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!30327 c!19186) b!108809))

(assert (= (and d!30327 (not c!19186)) b!108810))

(assert (= (and d!30327 (not res!53898)) b!108811))

(declare-fun m!122593 () Bool)

(assert (=> d!30327 m!122593))

(declare-fun m!122595 () Bool)

(assert (=> b!108809 m!122595))

(assert (=> b!108809 m!121627))

(assert (=> b!108809 m!121627))

(declare-fun m!122597 () Bool)

(assert (=> b!108809 m!122597))

(assert (=> b!108811 m!121627))

(assert (=> b!108811 m!121627))

(assert (=> b!108811 m!122597))

(assert (=> d!29931 d!30327))

(declare-fun e!70789 () Option!161)

(declare-fun b!108814 () Bool)

(assert (=> b!108814 (= e!70789 (getValueByKey!155 (t!5730 lt!55656) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!108813 () Bool)

(declare-fun e!70788 () Option!161)

(assert (=> b!108813 (= e!70788 e!70789)))

(declare-fun c!19188 () Bool)

(assert (=> b!108813 (= c!19188 (and ((_ is Cons!1619) lt!55656) (not (= (_1!1207 (h!2217 lt!55656)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!19187 () Bool)

(declare-fun d!30329 () Bool)

(assert (=> d!30329 (= c!19187 (and ((_ is Cons!1619) lt!55656) (= (_1!1207 (h!2217 lt!55656)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!30329 (= (getValueByKey!155 lt!55656 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!70788)))

(declare-fun b!108815 () Bool)

(assert (=> b!108815 (= e!70789 None!159)))

(declare-fun b!108812 () Bool)

(assert (=> b!108812 (= e!70788 (Some!160 (_2!1207 (h!2217 lt!55656))))))

(assert (= (and d!30329 c!19187) b!108812))

(assert (= (and d!30329 (not c!19187)) b!108813))

(assert (= (and b!108813 c!19188) b!108814))

(assert (= (and b!108813 (not c!19188)) b!108815))

(declare-fun m!122599 () Bool)

(assert (=> b!108814 m!122599))

(assert (=> d!29931 d!30329))

(declare-fun d!30331 () Bool)

(assert (=> d!30331 (= (getValueByKey!155 lt!55656 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!55907 () Unit!3307)

(assert (=> d!30331 (= lt!55907 (choose!679 lt!55656 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!70790 () Bool)

(assert (=> d!30331 e!70790))

(declare-fun res!53899 () Bool)

(assert (=> d!30331 (=> (not res!53899) (not e!70790))))

(assert (=> d!30331 (= res!53899 (isStrictlySorted!305 lt!55656))))

(assert (=> d!30331 (= (lemmaContainsTupThenGetReturnValue!74 lt!55656 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!55907)))

(declare-fun b!108816 () Bool)

(declare-fun res!53900 () Bool)

(assert (=> b!108816 (=> (not res!53900) (not e!70790))))

(assert (=> b!108816 (= res!53900 (containsKey!159 lt!55656 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!108817 () Bool)

(assert (=> b!108817 (= e!70790 (contains!826 lt!55656 (tuple2!2393 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!30331 res!53899) b!108816))

(assert (= (and b!108816 res!53900) b!108817))

(assert (=> d!30331 m!121621))

(declare-fun m!122601 () Bool)

(assert (=> d!30331 m!122601))

(declare-fun m!122603 () Bool)

(assert (=> d!30331 m!122603))

(declare-fun m!122605 () Bool)

(assert (=> b!108816 m!122605))

(declare-fun m!122607 () Bool)

(assert (=> b!108817 m!122607))

(assert (=> d!29931 d!30331))

(declare-fun bm!11544 () Bool)

(declare-fun call!11548 () List!1623)

(declare-fun call!11547 () List!1623)

(assert (=> bm!11544 (= call!11548 call!11547)))

(declare-fun b!108818 () Bool)

(declare-fun e!70795 () List!1623)

(assert (=> b!108818 (= e!70795 call!11548)))

(declare-fun b!108820 () Bool)

(declare-fun e!70792 () List!1623)

(declare-fun call!11549 () List!1623)

(assert (=> b!108820 (= e!70792 call!11549)))

(declare-fun b!108821 () Bool)

(declare-fun lt!55908 () List!1623)

(declare-fun e!70791 () Bool)

(assert (=> b!108821 (= e!70791 (contains!826 lt!55908 (tuple2!2393 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!70793 () List!1623)

(declare-fun b!108822 () Bool)

(assert (=> b!108822 (= e!70793 (insertStrictlySorted!77 (t!5730 (toList!790 call!11354)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!108823 () Bool)

(declare-fun e!70794 () List!1623)

(assert (=> b!108823 (= e!70794 call!11547)))

(declare-fun bm!11545 () Bool)

(declare-fun c!19189 () Bool)

(assert (=> bm!11545 (= call!11547 ($colon$colon!81 e!70793 (ite c!19189 (h!2217 (toList!790 call!11354)) (tuple2!2393 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!19191 () Bool)

(assert (=> bm!11545 (= c!19191 c!19189)))

(declare-fun bm!11546 () Bool)

(assert (=> bm!11546 (= call!11549 call!11548)))

(declare-fun c!19192 () Bool)

(declare-fun b!108824 () Bool)

(assert (=> b!108824 (= c!19192 (and ((_ is Cons!1619) (toList!790 call!11354)) (bvsgt (_1!1207 (h!2217 (toList!790 call!11354))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!108824 (= e!70795 e!70792)))

(declare-fun b!108819 () Bool)

(declare-fun res!53902 () Bool)

(assert (=> b!108819 (=> (not res!53902) (not e!70791))))

(assert (=> b!108819 (= res!53902 (containsKey!159 lt!55908 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!30333 () Bool)

(assert (=> d!30333 e!70791))

(declare-fun res!53901 () Bool)

(assert (=> d!30333 (=> (not res!53901) (not e!70791))))

(assert (=> d!30333 (= res!53901 (isStrictlySorted!305 lt!55908))))

(assert (=> d!30333 (= lt!55908 e!70794)))

(assert (=> d!30333 (= c!19189 (and ((_ is Cons!1619) (toList!790 call!11354)) (bvslt (_1!1207 (h!2217 (toList!790 call!11354))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!30333 (isStrictlySorted!305 (toList!790 call!11354))))

(assert (=> d!30333 (= (insertStrictlySorted!77 (toList!790 call!11354) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!55908)))

(declare-fun b!108825 () Bool)

(assert (=> b!108825 (= e!70792 call!11549)))

(declare-fun b!108826 () Bool)

(declare-fun c!19190 () Bool)

(assert (=> b!108826 (= e!70793 (ite c!19190 (t!5730 (toList!790 call!11354)) (ite c!19192 (Cons!1619 (h!2217 (toList!790 call!11354)) (t!5730 (toList!790 call!11354))) Nil!1620)))))

(declare-fun b!108827 () Bool)

(assert (=> b!108827 (= e!70794 e!70795)))

(assert (=> b!108827 (= c!19190 (and ((_ is Cons!1619) (toList!790 call!11354)) (= (_1!1207 (h!2217 (toList!790 call!11354))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!30333 c!19189) b!108823))

(assert (= (and d!30333 (not c!19189)) b!108827))

(assert (= (and b!108827 c!19190) b!108818))

(assert (= (and b!108827 (not c!19190)) b!108824))

(assert (= (and b!108824 c!19192) b!108825))

(assert (= (and b!108824 (not c!19192)) b!108820))

(assert (= (or b!108825 b!108820) bm!11546))

(assert (= (or b!108818 bm!11546) bm!11544))

(assert (= (or b!108823 bm!11544) bm!11545))

(assert (= (and bm!11545 c!19191) b!108822))

(assert (= (and bm!11545 (not c!19191)) b!108826))

(assert (= (and d!30333 res!53901) b!108819))

(assert (= (and b!108819 res!53902) b!108821))

(declare-fun m!122609 () Bool)

(assert (=> b!108821 m!122609))

(declare-fun m!122611 () Bool)

(assert (=> bm!11545 m!122611))

(declare-fun m!122613 () Bool)

(assert (=> b!108819 m!122613))

(declare-fun m!122615 () Bool)

(assert (=> d!30333 m!122615))

(declare-fun m!122617 () Bool)

(assert (=> d!30333 m!122617))

(declare-fun m!122619 () Bool)

(assert (=> b!108822 m!122619))

(assert (=> d!29931 d!30333))

(declare-fun d!30335 () Bool)

(assert (=> d!30335 (= (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107838 d!30335))

(declare-fun b!108830 () Bool)

(declare-fun e!70797 () Option!161)

(assert (=> b!108830 (= e!70797 (getValueByKey!155 (t!5730 (t!5730 (toList!790 lt!55143))) (_1!1207 lt!54985)))))

(declare-fun b!108829 () Bool)

(declare-fun e!70796 () Option!161)

(assert (=> b!108829 (= e!70796 e!70797)))

(declare-fun c!19194 () Bool)

(assert (=> b!108829 (= c!19194 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!55143))) (not (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!55143)))) (_1!1207 lt!54985)))))))

(declare-fun d!30337 () Bool)

(declare-fun c!19193 () Bool)

(assert (=> d!30337 (= c!19193 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!55143))) (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!55143)))) (_1!1207 lt!54985))))))

(assert (=> d!30337 (= (getValueByKey!155 (t!5730 (toList!790 lt!55143)) (_1!1207 lt!54985)) e!70796)))

(declare-fun b!108831 () Bool)

(assert (=> b!108831 (= e!70797 None!159)))

(declare-fun b!108828 () Bool)

(assert (=> b!108828 (= e!70796 (Some!160 (_2!1207 (h!2217 (t!5730 (toList!790 lt!55143))))))))

(assert (= (and d!30337 c!19193) b!108828))

(assert (= (and d!30337 (not c!19193)) b!108829))

(assert (= (and b!108829 c!19194) b!108830))

(assert (= (and b!108829 (not c!19194)) b!108831))

(declare-fun m!122621 () Bool)

(assert (=> b!108830 m!122621))

(assert (=> b!108093 d!30337))

(assert (=> b!108173 d!29935))

(declare-fun d!30339 () Bool)

(assert (=> d!30339 (= (isDefined!109 (getValueByKey!155 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!379 (getValueByKey!155 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4473 () Bool)

(assert (= bs!4473 d!30339))

(assert (=> bs!4473 m!121097))

(declare-fun m!122623 () Bool)

(assert (=> bs!4473 m!122623))

(assert (=> b!108198 d!30339))

(declare-fun e!70799 () Option!161)

(declare-fun b!108834 () Bool)

(assert (=> b!108834 (= e!70799 (getValueByKey!155 (t!5730 (toList!790 lt!55124)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108833 () Bool)

(declare-fun e!70798 () Option!161)

(assert (=> b!108833 (= e!70798 e!70799)))

(declare-fun c!19196 () Bool)

(assert (=> b!108833 (= c!19196 (and ((_ is Cons!1619) (toList!790 lt!55124)) (not (= (_1!1207 (h!2217 (toList!790 lt!55124))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun c!19195 () Bool)

(declare-fun d!30341 () Bool)

(assert (=> d!30341 (= c!19195 (and ((_ is Cons!1619) (toList!790 lt!55124)) (= (_1!1207 (h!2217 (toList!790 lt!55124))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30341 (= (getValueByKey!155 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!70798)))

(declare-fun b!108835 () Bool)

(assert (=> b!108835 (= e!70799 None!159)))

(declare-fun b!108832 () Bool)

(assert (=> b!108832 (= e!70798 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55124)))))))

(assert (= (and d!30341 c!19195) b!108832))

(assert (= (and d!30341 (not c!19195)) b!108833))

(assert (= (and b!108833 c!19196) b!108834))

(assert (= (and b!108833 (not c!19196)) b!108835))

(assert (=> b!108834 m!120545))

(declare-fun m!122625 () Bool)

(assert (=> b!108834 m!122625))

(assert (=> b!108198 d!30341))

(assert (=> bm!11475 d!29825))

(declare-fun d!30343 () Bool)

(declare-fun e!70800 () Bool)

(assert (=> d!30343 e!70800))

(declare-fun res!53904 () Bool)

(assert (=> d!30343 (=> (not res!53904) (not e!70800))))

(declare-fun lt!55909 () ListLongMap!1549)

(assert (=> d!30343 (= res!53904 (contains!824 lt!55909 (_1!1207 (ite (or c!19013 c!19014) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))))))

(declare-fun lt!55912 () List!1623)

(assert (=> d!30343 (= lt!55909 (ListLongMap!1550 lt!55912))))

(declare-fun lt!55910 () Unit!3307)

(declare-fun lt!55911 () Unit!3307)

(assert (=> d!30343 (= lt!55910 lt!55911)))

(assert (=> d!30343 (= (getValueByKey!155 lt!55912 (_1!1207 (ite (or c!19013 c!19014) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))) (Some!160 (_2!1207 (ite (or c!19013 c!19014) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))))))

(assert (=> d!30343 (= lt!55911 (lemmaContainsTupThenGetReturnValue!74 lt!55912 (_1!1207 (ite (or c!19013 c!19014) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))) (_2!1207 (ite (or c!19013 c!19014) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))))))

(assert (=> d!30343 (= lt!55912 (insertStrictlySorted!77 (toList!790 (ite c!19013 call!11493 (ite c!19014 call!11491 call!11492))) (_1!1207 (ite (or c!19013 c!19014) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))) (_2!1207 (ite (or c!19013 c!19014) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))))))

(assert (=> d!30343 (= (+!137 (ite c!19013 call!11493 (ite c!19014 call!11491 call!11492)) (ite (or c!19013 c!19014) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))) lt!55909)))

(declare-fun b!108836 () Bool)

(declare-fun res!53903 () Bool)

(assert (=> b!108836 (=> (not res!53903) (not e!70800))))

(assert (=> b!108836 (= res!53903 (= (getValueByKey!155 (toList!790 lt!55909) (_1!1207 (ite (or c!19013 c!19014) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))) (Some!160 (_2!1207 (ite (or c!19013 c!19014) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))))

(declare-fun b!108837 () Bool)

(assert (=> b!108837 (= e!70800 (contains!826 (toList!790 lt!55909) (ite (or c!19013 c!19014) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(assert (= (and d!30343 res!53904) b!108836))

(assert (= (and b!108836 res!53903) b!108837))

(declare-fun m!122627 () Bool)

(assert (=> d!30343 m!122627))

(declare-fun m!122629 () Bool)

(assert (=> d!30343 m!122629))

(declare-fun m!122631 () Bool)

(assert (=> d!30343 m!122631))

(declare-fun m!122633 () Bool)

(assert (=> d!30343 m!122633))

(declare-fun m!122635 () Bool)

(assert (=> b!108836 m!122635))

(declare-fun m!122637 () Bool)

(assert (=> b!108837 m!122637))

(assert (=> bm!11491 d!30343))

(assert (=> b!108071 d!29935))

(declare-fun d!30345 () Bool)

(declare-fun lt!55913 () Bool)

(assert (=> d!30345 (= lt!55913 (select (content!111 (toList!790 lt!55492)) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun e!70802 () Bool)

(assert (=> d!30345 (= lt!55913 e!70802)))

(declare-fun res!53905 () Bool)

(assert (=> d!30345 (=> (not res!53905) (not e!70802))))

(assert (=> d!30345 (= res!53905 ((_ is Cons!1619) (toList!790 lt!55492)))))

(assert (=> d!30345 (= (contains!826 (toList!790 lt!55492) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55913)))

(declare-fun b!108838 () Bool)

(declare-fun e!70801 () Bool)

(assert (=> b!108838 (= e!70802 e!70801)))

(declare-fun res!53906 () Bool)

(assert (=> b!108838 (=> res!53906 e!70801)))

(assert (=> b!108838 (= res!53906 (= (h!2217 (toList!790 lt!55492)) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!108839 () Bool)

(assert (=> b!108839 (= e!70801 (contains!826 (t!5730 (toList!790 lt!55492)) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!30345 res!53905) b!108838))

(assert (= (and b!108838 (not res!53906)) b!108839))

(declare-fun m!122639 () Bool)

(assert (=> d!30345 m!122639))

(declare-fun m!122641 () Bool)

(assert (=> d!30345 m!122641))

(declare-fun m!122643 () Bool)

(assert (=> b!108839 m!122643))

(assert (=> b!108040 d!30345))

(assert (=> d!29919 d!29917))

(declare-fun d!30347 () Bool)

(assert (=> d!30347 (= (getValueByKey!155 lt!55154 (_1!1207 lt!54977)) (Some!160 (_2!1207 lt!54977)))))

(assert (=> d!30347 true))

(declare-fun _$22!442 () Unit!3307)

(assert (=> d!30347 (= (choose!679 lt!55154 (_1!1207 lt!54977) (_2!1207 lt!54977)) _$22!442)))

(declare-fun bs!4474 () Bool)

(assert (= bs!4474 d!30347))

(assert (=> bs!4474 m!120649))

(assert (=> d!29919 d!30347))

(declare-fun d!30349 () Bool)

(declare-fun res!53907 () Bool)

(declare-fun e!70803 () Bool)

(assert (=> d!30349 (=> res!53907 e!70803)))

(assert (=> d!30349 (= res!53907 (or ((_ is Nil!1620) lt!55154) ((_ is Nil!1620) (t!5730 lt!55154))))))

(assert (=> d!30349 (= (isStrictlySorted!305 lt!55154) e!70803)))

(declare-fun b!108840 () Bool)

(declare-fun e!70804 () Bool)

(assert (=> b!108840 (= e!70803 e!70804)))

(declare-fun res!53908 () Bool)

(assert (=> b!108840 (=> (not res!53908) (not e!70804))))

(assert (=> b!108840 (= res!53908 (bvslt (_1!1207 (h!2217 lt!55154)) (_1!1207 (h!2217 (t!5730 lt!55154)))))))

(declare-fun b!108841 () Bool)

(assert (=> b!108841 (= e!70804 (isStrictlySorted!305 (t!5730 lt!55154)))))

(assert (= (and d!30349 (not res!53907)) b!108840))

(assert (= (and b!108840 res!53908) b!108841))

(declare-fun m!122645 () Bool)

(assert (=> b!108841 m!122645))

(assert (=> d!29919 d!30349))

(declare-fun e!70806 () Option!161)

(declare-fun b!108844 () Bool)

(assert (=> b!108844 (= e!70806 (getValueByKey!155 (t!5730 (toList!790 lt!55653)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!108843 () Bool)

(declare-fun e!70805 () Option!161)

(assert (=> b!108843 (= e!70805 e!70806)))

(declare-fun c!19198 () Bool)

(assert (=> b!108843 (= c!19198 (and ((_ is Cons!1619) (toList!790 lt!55653)) (not (= (_1!1207 (h!2217 (toList!790 lt!55653))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!30351 () Bool)

(declare-fun c!19197 () Bool)

(assert (=> d!30351 (= c!19197 (and ((_ is Cons!1619) (toList!790 lt!55653)) (= (_1!1207 (h!2217 (toList!790 lt!55653))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!30351 (= (getValueByKey!155 (toList!790 lt!55653) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!70805)))

(declare-fun b!108845 () Bool)

(assert (=> b!108845 (= e!70806 None!159)))

(declare-fun b!108842 () Bool)

(assert (=> b!108842 (= e!70805 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55653)))))))

(assert (= (and d!30351 c!19197) b!108842))

(assert (= (and d!30351 (not c!19197)) b!108843))

(assert (= (and b!108843 c!19198) b!108844))

(assert (= (and b!108843 (not c!19198)) b!108845))

(declare-fun m!122647 () Bool)

(assert (=> b!108844 m!122647))

(assert (=> b!108278 d!30351))

(declare-fun d!30353 () Bool)

(declare-fun e!70807 () Bool)

(assert (=> d!30353 e!70807))

(declare-fun res!53910 () Bool)

(assert (=> d!30353 (=> (not res!53910) (not e!70807))))

(declare-fun lt!55914 () ListLongMap!1549)

(assert (=> d!30353 (= res!53910 (contains!824 lt!55914 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun lt!55917 () List!1623)

(assert (=> d!30353 (= lt!55914 (ListLongMap!1550 lt!55917))))

(declare-fun lt!55915 () Unit!3307)

(declare-fun lt!55916 () Unit!3307)

(assert (=> d!30353 (= lt!55915 lt!55916)))

(assert (=> d!30353 (= (getValueByKey!155 lt!55917 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30353 (= lt!55916 (lemmaContainsTupThenGetReturnValue!74 lt!55917 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30353 (= lt!55917 (insertStrictlySorted!77 (toList!790 call!11457) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (=> d!30353 (= (+!137 call!11457 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))) lt!55914)))

(declare-fun b!108846 () Bool)

(declare-fun res!53909 () Bool)

(assert (=> b!108846 (=> (not res!53909) (not e!70807))))

(assert (=> b!108846 (= res!53909 (= (getValueByKey!155 (toList!790 lt!55914) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(declare-fun b!108847 () Bool)

(assert (=> b!108847 (= e!70807 (contains!826 (toList!790 lt!55914) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(assert (= (and d!30353 res!53910) b!108846))

(assert (= (and b!108846 res!53909) b!108847))

(declare-fun m!122649 () Bool)

(assert (=> d!30353 m!122649))

(declare-fun m!122651 () Bool)

(assert (=> d!30353 m!122651))

(declare-fun m!122653 () Bool)

(assert (=> d!30353 m!122653))

(declare-fun m!122655 () Bool)

(assert (=> d!30353 m!122655))

(declare-fun m!122657 () Bool)

(assert (=> b!108846 m!122657))

(declare-fun m!122659 () Bool)

(assert (=> b!108847 m!122659))

(assert (=> b!108002 d!30353))

(declare-fun d!30355 () Bool)

(assert (=> d!30355 (= (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55125)) (v!2910 (getValueByKey!155 (toList!790 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55125)))))

(assert (=> d!29769 d!30355))

(declare-fun e!70809 () Option!161)

(declare-fun b!108850 () Bool)

(assert (=> b!108850 (= e!70809 (getValueByKey!155 (t!5730 (toList!790 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) lt!55125))))

(declare-fun b!108849 () Bool)

(declare-fun e!70808 () Option!161)

(assert (=> b!108849 (= e!70808 e!70809)))

(declare-fun c!19200 () Bool)

(assert (=> b!108849 (= c!19200 (and ((_ is Cons!1619) (toList!790 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (not (= (_1!1207 (h!2217 (toList!790 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))) lt!55125))))))

(declare-fun c!19199 () Bool)

(declare-fun d!30357 () Bool)

(assert (=> d!30357 (= c!19199 (and ((_ is Cons!1619) (toList!790 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))) (= (_1!1207 (h!2217 (toList!790 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))) lt!55125)))))

(assert (=> d!30357 (= (getValueByKey!155 (toList!790 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55125) e!70808)))

(declare-fun b!108851 () Bool)

(assert (=> b!108851 (= e!70809 None!159)))

(declare-fun b!108848 () Bool)

(assert (=> b!108848 (= e!70808 (Some!160 (_2!1207 (h!2217 (toList!790 (+!137 lt!55109 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))))

(assert (= (and d!30357 c!19199) b!108848))

(assert (= (and d!30357 (not c!19199)) b!108849))

(assert (= (and b!108849 c!19200) b!108850))

(assert (= (and b!108849 (not c!19200)) b!108851))

(declare-fun m!122661 () Bool)

(assert (=> b!108850 m!122661))

(assert (=> d!29769 d!30357))

(declare-fun call!11550 () Bool)

(declare-fun bm!11547 () Bool)

(declare-fun c!19201 () Bool)

(assert (=> bm!11547 (= call!11550 (arrayNoDuplicates!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19201 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!18904 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619))) (ite c!18904 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)))))))

(declare-fun b!108852 () Bool)

(declare-fun e!70813 () Bool)

(assert (=> b!108852 (= e!70813 (contains!825 (ite c!18904 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!30359 () Bool)

(declare-fun res!53913 () Bool)

(declare-fun e!70810 () Bool)

(assert (=> d!30359 (=> res!53913 e!70810)))

(assert (=> d!30359 (= res!53913 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> d!30359 (= (arrayNoDuplicates!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18904 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619)) (ite c!18841 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) Nil!1619) Nil!1619))) e!70810)))

(declare-fun b!108853 () Bool)

(declare-fun e!70812 () Bool)

(assert (=> b!108853 (= e!70812 call!11550)))

(declare-fun b!108854 () Bool)

(declare-fun e!70811 () Bool)

(assert (=> b!108854 (= e!70810 e!70811)))

(declare-fun res!53912 () Bool)

(assert (=> b!108854 (=> (not res!53912) (not e!70811))))

(assert (=> b!108854 (= res!53912 (not e!70813))))

(declare-fun res!53911 () Bool)

(assert (=> b!108854 (=> (not res!53911) (not e!70813))))

(assert (=> b!108854 (= res!53911 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!108855 () Bool)

(assert (=> b!108855 (= e!70811 e!70812)))

(assert (=> b!108855 (= c!19201 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!108856 () Bool)

(assert (=> b!108856 (= e!70812 call!11550)))

(assert (= (and d!30359 (not res!53913)) b!108854))

(assert (= (and b!108854 res!53911) b!108852))

(assert (= (and b!108854 res!53912) b!108855))

(assert (= (and b!108855 c!19201) b!108853))

(assert (= (and b!108855 (not c!19201)) b!108856))

(assert (= (or b!108853 b!108856) bm!11547))

(declare-fun m!122663 () Bool)

(assert (=> bm!11547 m!122663))

(declare-fun m!122665 () Bool)

(assert (=> bm!11547 m!122665))

(assert (=> b!108852 m!122663))

(assert (=> b!108852 m!122663))

(declare-fun m!122667 () Bool)

(assert (=> b!108852 m!122667))

(assert (=> b!108854 m!122663))

(assert (=> b!108854 m!122663))

(declare-fun m!122669 () Bool)

(assert (=> b!108854 m!122669))

(assert (=> b!108855 m!122663))

(assert (=> b!108855 m!122663))

(assert (=> b!108855 m!122669))

(assert (=> bm!11428 d!30359))

(declare-fun d!30361 () Bool)

(assert (=> d!30361 (= (isDefined!109 (getValueByKey!155 (toList!790 lt!55175) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!379 (getValueByKey!155 (toList!790 lt!55175) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4475 () Bool)

(assert (= bs!4475 d!30361))

(assert (=> bs!4475 m!121433))

(declare-fun m!122671 () Bool)

(assert (=> bs!4475 m!122671))

(assert (=> b!108185 d!30361))

(declare-fun b!108859 () Bool)

(declare-fun e!70815 () Option!161)

(assert (=> b!108859 (= e!70815 (getValueByKey!155 (t!5730 (toList!790 lt!55175)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108858 () Bool)

(declare-fun e!70814 () Option!161)

(assert (=> b!108858 (= e!70814 e!70815)))

(declare-fun c!19203 () Bool)

(assert (=> b!108858 (= c!19203 (and ((_ is Cons!1619) (toList!790 lt!55175)) (not (= (_1!1207 (h!2217 (toList!790 lt!55175))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!30363 () Bool)

(declare-fun c!19202 () Bool)

(assert (=> d!30363 (= c!19202 (and ((_ is Cons!1619) (toList!790 lt!55175)) (= (_1!1207 (h!2217 (toList!790 lt!55175))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30363 (= (getValueByKey!155 (toList!790 lt!55175) #b1000000000000000000000000000000000000000000000000000000000000000) e!70814)))

(declare-fun b!108860 () Bool)

(assert (=> b!108860 (= e!70815 None!159)))

(declare-fun b!108857 () Bool)

(assert (=> b!108857 (= e!70814 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55175)))))))

(assert (= (and d!30363 c!19202) b!108857))

(assert (= (and d!30363 (not c!19202)) b!108858))

(assert (= (and b!108858 c!19203) b!108859))

(assert (= (and b!108858 (not c!19203)) b!108860))

(declare-fun m!122673 () Bool)

(assert (=> b!108859 m!122673))

(assert (=> b!108185 d!30363))

(declare-fun b!108861 () Bool)

(declare-fun lt!55923 () Unit!3307)

(declare-fun lt!55922 () Unit!3307)

(assert (=> b!108861 (= lt!55923 lt!55922)))

(declare-fun lt!55918 () ListLongMap!1549)

(declare-fun lt!55919 () (_ BitVec 64))

(declare-fun lt!55921 () (_ BitVec 64))

(declare-fun lt!55920 () V!3233)

(assert (=> b!108861 (not (contains!824 (+!137 lt!55918 (tuple2!2393 lt!55921 lt!55920)) lt!55919))))

(assert (=> b!108861 (= lt!55922 (addStillNotContains!48 lt!55918 lt!55921 lt!55920 lt!55919))))

(assert (=> b!108861 (= lt!55919 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108861 (= lt!55920 (get!1341 (select (arr!2063 (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108861 (= lt!55921 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11551 () ListLongMap!1549)

(assert (=> b!108861 (= lt!55918 call!11551)))

(declare-fun e!70821 () ListLongMap!1549)

(assert (=> b!108861 (= e!70821 (+!137 call!11551 (tuple2!2393 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) (get!1341 (select (arr!2063 (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!70820 () Bool)

(declare-fun lt!55924 () ListLongMap!1549)

(declare-fun b!108862 () Bool)

(assert (=> b!108862 (= e!70820 (= lt!55924 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16))))))

(declare-fun b!108863 () Bool)

(assert (=> b!108863 (= e!70821 call!11551)))

(declare-fun b!108864 () Bool)

(assert (=> b!108864 (= e!70820 (isEmpty!377 lt!55924))))

(declare-fun b!108865 () Bool)

(assert (=> b!108865 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> b!108865 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))))))))

(declare-fun e!70817 () Bool)

(assert (=> b!108865 (= e!70817 (= (apply!99 lt!55924 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108866 () Bool)

(declare-fun e!70819 () ListLongMap!1549)

(assert (=> b!108866 (= e!70819 (ListLongMap!1550 Nil!1620))))

(declare-fun b!108867 () Bool)

(declare-fun e!70822 () Bool)

(declare-fun e!70816 () Bool)

(assert (=> b!108867 (= e!70822 e!70816)))

(declare-fun c!19205 () Bool)

(declare-fun e!70818 () Bool)

(assert (=> b!108867 (= c!19205 e!70818)))

(declare-fun res!53914 () Bool)

(assert (=> b!108867 (=> (not res!53914) (not e!70818))))

(assert (=> b!108867 (= res!53914 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108869 () Bool)

(assert (=> b!108869 (= e!70819 e!70821)))

(declare-fun c!19207 () Bool)

(assert (=> b!108869 (= c!19207 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11548 () Bool)

(assert (=> bm!11548 (= call!11551 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16)))))

(declare-fun b!108870 () Bool)

(declare-fun res!53916 () Bool)

(assert (=> b!108870 (=> (not res!53916) (not e!70822))))

(assert (=> b!108870 (= res!53916 (not (contains!824 lt!55924 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108871 () Bool)

(assert (=> b!108871 (= e!70816 e!70817)))

(assert (=> b!108871 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun res!53917 () Bool)

(assert (=> b!108871 (= res!53917 (contains!824 lt!55924 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108871 (=> (not res!53917) (not e!70817))))

(declare-fun b!108872 () Bool)

(assert (=> b!108872 (= e!70816 e!70820)))

(declare-fun c!19206 () Bool)

(assert (=> b!108872 (= c!19206 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun d!30365 () Bool)

(assert (=> d!30365 e!70822))

(declare-fun res!53915 () Bool)

(assert (=> d!30365 (=> (not res!53915) (not e!70822))))

(assert (=> d!30365 (= res!53915 (not (contains!824 lt!55924 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30365 (= lt!55924 e!70819)))

(declare-fun c!19204 () Bool)

(assert (=> d!30365 (= c!19204 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!30365 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30365 (= (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55924)))

(declare-fun b!108868 () Bool)

(assert (=> b!108868 (= e!70818 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108868 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!30365 c!19204) b!108866))

(assert (= (and d!30365 (not c!19204)) b!108869))

(assert (= (and b!108869 c!19207) b!108861))

(assert (= (and b!108869 (not c!19207)) b!108863))

(assert (= (or b!108861 b!108863) bm!11548))

(assert (= (and d!30365 res!53915) b!108870))

(assert (= (and b!108870 res!53916) b!108867))

(assert (= (and b!108867 res!53914) b!108868))

(assert (= (and b!108867 c!19205) b!108871))

(assert (= (and b!108867 (not c!19205)) b!108872))

(assert (= (and b!108871 res!53917) b!108865))

(assert (= (and b!108872 c!19206) b!108862))

(assert (= (and b!108872 (not c!19206)) b!108864))

(declare-fun b_lambda!4853 () Bool)

(assert (=> (not b_lambda!4853) (not b!108861)))

(assert (=> b!108861 t!5742))

(declare-fun b_and!6697 () Bool)

(assert (= b_and!6693 (and (=> t!5742 result!3505) b_and!6697)))

(assert (=> b!108861 t!5744))

(declare-fun b_and!6699 () Bool)

(assert (= b_and!6695 (and (=> t!5744 result!3507) b_and!6699)))

(declare-fun b_lambda!4855 () Bool)

(assert (=> (not b_lambda!4855) (not b!108865)))

(assert (=> b!108865 t!5742))

(declare-fun b_and!6701 () Bool)

(assert (= b_and!6697 (and (=> t!5742 result!3505) b_and!6701)))

(assert (=> b!108865 t!5744))

(declare-fun b_and!6703 () Bool)

(assert (= b_and!6699 (and (=> t!5744 result!3507) b_and!6703)))

(assert (=> b!108865 m!121111))

(assert (=> b!108865 m!121113))

(assert (=> b!108865 m!121115))

(assert (=> b!108865 m!120769))

(assert (=> b!108865 m!121113))

(assert (=> b!108865 m!120769))

(declare-fun m!122675 () Bool)

(assert (=> b!108865 m!122675))

(assert (=> b!108865 m!121111))

(declare-fun m!122677 () Bool)

(assert (=> d!30365 m!122677))

(assert (=> d!30365 m!120787))

(assert (=> b!108869 m!120769))

(assert (=> b!108869 m!120769))

(assert (=> b!108869 m!120779))

(declare-fun m!122679 () Bool)

(assert (=> b!108862 m!122679))

(declare-fun m!122681 () Bool)

(assert (=> b!108870 m!122681))

(assert (=> b!108871 m!120769))

(assert (=> b!108871 m!120769))

(declare-fun m!122683 () Bool)

(assert (=> b!108871 m!122683))

(assert (=> b!108861 m!121111))

(assert (=> b!108861 m!121113))

(assert (=> b!108861 m!121115))

(declare-fun m!122685 () Bool)

(assert (=> b!108861 m!122685))

(assert (=> b!108861 m!122685))

(declare-fun m!122687 () Bool)

(assert (=> b!108861 m!122687))

(assert (=> b!108861 m!121113))

(assert (=> b!108861 m!121111))

(declare-fun m!122689 () Bool)

(assert (=> b!108861 m!122689))

(declare-fun m!122691 () Bool)

(assert (=> b!108861 m!122691))

(assert (=> b!108861 m!120769))

(assert (=> b!108868 m!120769))

(assert (=> b!108868 m!120769))

(assert (=> b!108868 m!120779))

(declare-fun m!122693 () Bool)

(assert (=> b!108864 m!122693))

(assert (=> bm!11548 m!122679))

(assert (=> bm!11456 d!30365))

(declare-fun d!30367 () Bool)

(declare-fun lt!55925 () Bool)

(assert (=> d!30367 (= lt!55925 (select (content!111 (t!5730 (toList!790 lt!55151))) lt!54977))))

(declare-fun e!70824 () Bool)

(assert (=> d!30367 (= lt!55925 e!70824)))

(declare-fun res!53918 () Bool)

(assert (=> d!30367 (=> (not res!53918) (not e!70824))))

(assert (=> d!30367 (= res!53918 ((_ is Cons!1619) (t!5730 (toList!790 lt!55151))))))

(assert (=> d!30367 (= (contains!826 (t!5730 (toList!790 lt!55151)) lt!54977) lt!55925)))

(declare-fun b!108873 () Bool)

(declare-fun e!70823 () Bool)

(assert (=> b!108873 (= e!70824 e!70823)))

(declare-fun res!53919 () Bool)

(assert (=> b!108873 (=> res!53919 e!70823)))

(assert (=> b!108873 (= res!53919 (= (h!2217 (t!5730 (toList!790 lt!55151))) lt!54977))))

(declare-fun b!108874 () Bool)

(assert (=> b!108874 (= e!70823 (contains!826 (t!5730 (t!5730 (toList!790 lt!55151))) lt!54977))))

(assert (= (and d!30367 res!53918) b!108873))

(assert (= (and b!108873 (not res!53919)) b!108874))

(assert (=> d!30367 m!122231))

(declare-fun m!122695 () Bool)

(assert (=> d!30367 m!122695))

(declare-fun m!122697 () Bool)

(assert (=> b!108874 m!122697))

(assert (=> b!107819 d!30367))

(assert (=> b!108236 d!29935))

(assert (=> b!107798 d!29935))

(assert (=> b!107830 d!30009))

(declare-fun d!30369 () Bool)

(declare-fun e!70825 () Bool)

(assert (=> d!30369 e!70825))

(declare-fun res!53920 () Bool)

(assert (=> d!30369 (=> res!53920 e!70825)))

(declare-fun lt!55926 () Bool)

(assert (=> d!30369 (= res!53920 (not lt!55926))))

(declare-fun lt!55927 () Bool)

(assert (=> d!30369 (= lt!55926 lt!55927)))

(declare-fun lt!55929 () Unit!3307)

(declare-fun e!70826 () Unit!3307)

(assert (=> d!30369 (= lt!55929 e!70826)))

(declare-fun c!19208 () Bool)

(assert (=> d!30369 (= c!19208 lt!55927)))

(assert (=> d!30369 (= lt!55927 (containsKey!159 (toList!790 (+!137 lt!55300 (tuple2!2393 lt!55303 lt!55302))) lt!55301))))

(assert (=> d!30369 (= (contains!824 (+!137 lt!55300 (tuple2!2393 lt!55303 lt!55302)) lt!55301) lt!55926)))

(declare-fun b!108875 () Bool)

(declare-fun lt!55928 () Unit!3307)

(assert (=> b!108875 (= e!70826 lt!55928)))

(assert (=> b!108875 (= lt!55928 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (+!137 lt!55300 (tuple2!2393 lt!55303 lt!55302))) lt!55301))))

(assert (=> b!108875 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55300 (tuple2!2393 lt!55303 lt!55302))) lt!55301))))

(declare-fun b!108876 () Bool)

(declare-fun Unit!3366 () Unit!3307)

(assert (=> b!108876 (= e!70826 Unit!3366)))

(declare-fun b!108877 () Bool)

(assert (=> b!108877 (= e!70825 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55300 (tuple2!2393 lt!55303 lt!55302))) lt!55301)))))

(assert (= (and d!30369 c!19208) b!108875))

(assert (= (and d!30369 (not c!19208)) b!108876))

(assert (= (and d!30369 (not res!53920)) b!108877))

(declare-fun m!122699 () Bool)

(assert (=> d!30369 m!122699))

(declare-fun m!122701 () Bool)

(assert (=> b!108875 m!122701))

(declare-fun m!122703 () Bool)

(assert (=> b!108875 m!122703))

(assert (=> b!108875 m!122703))

(declare-fun m!122705 () Bool)

(assert (=> b!108875 m!122705))

(assert (=> b!108877 m!122703))

(assert (=> b!108877 m!122703))

(assert (=> b!108877 m!122705))

(assert (=> b!107830 d!30369))

(declare-fun d!30371 () Bool)

(assert (=> d!30371 (not (contains!824 (+!137 lt!55300 (tuple2!2393 lt!55303 lt!55302)) lt!55301))))

(declare-fun lt!55930 () Unit!3307)

(assert (=> d!30371 (= lt!55930 (choose!686 lt!55300 lt!55303 lt!55302 lt!55301))))

(declare-fun e!70827 () Bool)

(assert (=> d!30371 e!70827))

(declare-fun res!53921 () Bool)

(assert (=> d!30371 (=> (not res!53921) (not e!70827))))

(assert (=> d!30371 (= res!53921 (not (contains!824 lt!55300 lt!55301)))))

(assert (=> d!30371 (= (addStillNotContains!48 lt!55300 lt!55303 lt!55302 lt!55301) lt!55930)))

(declare-fun b!108878 () Bool)

(assert (=> b!108878 (= e!70827 (not (= lt!55303 lt!55301)))))

(assert (= (and d!30371 res!53921) b!108878))

(assert (=> d!30371 m!120845))

(assert (=> d!30371 m!120845))

(assert (=> d!30371 m!120847))

(declare-fun m!122707 () Bool)

(assert (=> d!30371 m!122707))

(declare-fun m!122709 () Bool)

(assert (=> d!30371 m!122709))

(assert (=> b!107830 d!30371))

(declare-fun d!30373 () Bool)

(declare-fun e!70828 () Bool)

(assert (=> d!30373 e!70828))

(declare-fun res!53923 () Bool)

(assert (=> d!30373 (=> (not res!53923) (not e!70828))))

(declare-fun lt!55931 () ListLongMap!1549)

(assert (=> d!30373 (= res!53923 (contains!824 lt!55931 (_1!1207 (tuple2!2393 lt!55303 lt!55302))))))

(declare-fun lt!55934 () List!1623)

(assert (=> d!30373 (= lt!55931 (ListLongMap!1550 lt!55934))))

(declare-fun lt!55932 () Unit!3307)

(declare-fun lt!55933 () Unit!3307)

(assert (=> d!30373 (= lt!55932 lt!55933)))

(assert (=> d!30373 (= (getValueByKey!155 lt!55934 (_1!1207 (tuple2!2393 lt!55303 lt!55302))) (Some!160 (_2!1207 (tuple2!2393 lt!55303 lt!55302))))))

(assert (=> d!30373 (= lt!55933 (lemmaContainsTupThenGetReturnValue!74 lt!55934 (_1!1207 (tuple2!2393 lt!55303 lt!55302)) (_2!1207 (tuple2!2393 lt!55303 lt!55302))))))

(assert (=> d!30373 (= lt!55934 (insertStrictlySorted!77 (toList!790 lt!55300) (_1!1207 (tuple2!2393 lt!55303 lt!55302)) (_2!1207 (tuple2!2393 lt!55303 lt!55302))))))

(assert (=> d!30373 (= (+!137 lt!55300 (tuple2!2393 lt!55303 lt!55302)) lt!55931)))

(declare-fun b!108879 () Bool)

(declare-fun res!53922 () Bool)

(assert (=> b!108879 (=> (not res!53922) (not e!70828))))

(assert (=> b!108879 (= res!53922 (= (getValueByKey!155 (toList!790 lt!55931) (_1!1207 (tuple2!2393 lt!55303 lt!55302))) (Some!160 (_2!1207 (tuple2!2393 lt!55303 lt!55302)))))))

(declare-fun b!108880 () Bool)

(assert (=> b!108880 (= e!70828 (contains!826 (toList!790 lt!55931) (tuple2!2393 lt!55303 lt!55302)))))

(assert (= (and d!30373 res!53923) b!108879))

(assert (= (and b!108879 res!53922) b!108880))

(declare-fun m!122711 () Bool)

(assert (=> d!30373 m!122711))

(declare-fun m!122713 () Bool)

(assert (=> d!30373 m!122713))

(declare-fun m!122715 () Bool)

(assert (=> d!30373 m!122715))

(declare-fun m!122717 () Bool)

(assert (=> d!30373 m!122717))

(declare-fun m!122719 () Bool)

(assert (=> b!108879 m!122719))

(declare-fun m!122721 () Bool)

(assert (=> b!108880 m!122721))

(assert (=> b!107830 d!30373))

(declare-fun d!30375 () Bool)

(declare-fun e!70829 () Bool)

(assert (=> d!30375 e!70829))

(declare-fun res!53925 () Bool)

(assert (=> d!30375 (=> (not res!53925) (not e!70829))))

(declare-fun lt!55935 () ListLongMap!1549)

(assert (=> d!30375 (= res!53925 (contains!824 lt!55935 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!55938 () List!1623)

(assert (=> d!30375 (= lt!55935 (ListLongMap!1550 lt!55938))))

(declare-fun lt!55936 () Unit!3307)

(declare-fun lt!55937 () Unit!3307)

(assert (=> d!30375 (= lt!55936 lt!55937)))

(assert (=> d!30375 (= (getValueByKey!155 lt!55938 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30375 (= lt!55937 (lemmaContainsTupThenGetReturnValue!74 lt!55938 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30375 (= lt!55938 (insertStrictlySorted!77 (toList!790 call!11430) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30375 (= (+!137 call!11430 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!55935)))

(declare-fun b!108881 () Bool)

(declare-fun res!53924 () Bool)

(assert (=> b!108881 (=> (not res!53924) (not e!70829))))

(assert (=> b!108881 (= res!53924 (= (getValueByKey!155 (toList!790 lt!55935) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!108882 () Bool)

(assert (=> b!108882 (= e!70829 (contains!826 (toList!790 lt!55935) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2063 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!386 (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30375 res!53925) b!108881))

(assert (= (and b!108881 res!53924) b!108882))

(declare-fun m!122723 () Bool)

(assert (=> d!30375 m!122723))

(declare-fun m!122725 () Bool)

(assert (=> d!30375 m!122725))

(declare-fun m!122727 () Bool)

(assert (=> d!30375 m!122727))

(declare-fun m!122729 () Bool)

(assert (=> d!30375 m!122729))

(declare-fun m!122731 () Bool)

(assert (=> b!108881 m!122731))

(declare-fun m!122733 () Bool)

(assert (=> b!108882 m!122733))

(assert (=> b!107830 d!30375))

(declare-fun d!30377 () Bool)

(declare-fun lt!55939 () Bool)

(assert (=> d!30377 (= lt!55939 (select (content!111 lt!55146) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(declare-fun e!70831 () Bool)

(assert (=> d!30377 (= lt!55939 e!70831)))

(declare-fun res!53926 () Bool)

(assert (=> d!30377 (=> (not res!53926) (not e!70831))))

(assert (=> d!30377 (= res!53926 ((_ is Cons!1619) lt!55146))))

(assert (=> d!30377 (= (contains!826 lt!55146 (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))) lt!55939)))

(declare-fun b!108883 () Bool)

(declare-fun e!70830 () Bool)

(assert (=> b!108883 (= e!70831 e!70830)))

(declare-fun res!53927 () Bool)

(assert (=> b!108883 (=> res!53927 e!70830)))

(assert (=> b!108883 (= res!53927 (= (h!2217 lt!55146) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(declare-fun b!108884 () Bool)

(assert (=> b!108884 (= e!70830 (contains!826 (t!5730 lt!55146) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(assert (= (and d!30377 res!53926) b!108883))

(assert (= (and b!108883 (not res!53927)) b!108884))

(declare-fun m!122735 () Bool)

(assert (=> d!30377 m!122735))

(declare-fun m!122737 () Bool)

(assert (=> d!30377 m!122737))

(declare-fun m!122739 () Bool)

(assert (=> b!108884 m!122739))

(assert (=> b!107949 d!30377))

(declare-fun d!30379 () Bool)

(declare-fun e!70832 () Bool)

(assert (=> d!30379 e!70832))

(declare-fun res!53928 () Bool)

(assert (=> d!30379 (=> res!53928 e!70832)))

(declare-fun lt!55940 () Bool)

(assert (=> d!30379 (= res!53928 (not lt!55940))))

(declare-fun lt!55941 () Bool)

(assert (=> d!30379 (= lt!55940 lt!55941)))

(declare-fun lt!55943 () Unit!3307)

(declare-fun e!70833 () Unit!3307)

(assert (=> d!30379 (= lt!55943 e!70833)))

(declare-fun c!19209 () Bool)

(assert (=> d!30379 (= c!19209 lt!55941)))

(assert (=> d!30379 (= lt!55941 (containsKey!159 (toList!790 lt!55533) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30379 (= (contains!824 lt!55533 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) lt!55940)))

(declare-fun b!108885 () Bool)

(declare-fun lt!55942 () Unit!3307)

(assert (=> b!108885 (= e!70833 lt!55942)))

(assert (=> b!108885 (= lt!55942 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55533) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108885 (isDefined!109 (getValueByKey!155 (toList!790 lt!55533) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108886 () Bool)

(declare-fun Unit!3367 () Unit!3307)

(assert (=> b!108886 (= e!70833 Unit!3367)))

(declare-fun b!108887 () Bool)

(assert (=> b!108887 (= e!70832 (isDefined!109 (getValueByKey!155 (toList!790 lt!55533) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!30379 c!19209) b!108885))

(assert (= (and d!30379 (not c!19209)) b!108886))

(assert (= (and d!30379 (not res!53928)) b!108887))

(assert (=> d!30379 m!120769))

(declare-fun m!122741 () Bool)

(assert (=> d!30379 m!122741))

(assert (=> b!108885 m!120769))

(declare-fun m!122743 () Bool)

(assert (=> b!108885 m!122743))

(assert (=> b!108885 m!120769))

(assert (=> b!108885 m!122573))

(assert (=> b!108885 m!122573))

(declare-fun m!122745 () Bool)

(assert (=> b!108885 m!122745))

(assert (=> b!108887 m!120769))

(assert (=> b!108887 m!122573))

(assert (=> b!108887 m!122573))

(assert (=> b!108887 m!122745))

(assert (=> b!108075 d!30379))

(declare-fun d!30381 () Bool)

(declare-fun e!70834 () Bool)

(assert (=> d!30381 e!70834))

(declare-fun res!53929 () Bool)

(assert (=> d!30381 (=> res!53929 e!70834)))

(declare-fun lt!55944 () Bool)

(assert (=> d!30381 (= res!53929 (not lt!55944))))

(declare-fun lt!55945 () Bool)

(assert (=> d!30381 (= lt!55944 lt!55945)))

(declare-fun lt!55947 () Unit!3307)

(declare-fun e!70835 () Unit!3307)

(assert (=> d!30381 (= lt!55947 e!70835)))

(declare-fun c!19210 () Bool)

(assert (=> d!30381 (= c!19210 lt!55945)))

(assert (=> d!30381 (= lt!55945 (containsKey!159 (toList!790 lt!55471) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30381 (= (contains!824 lt!55471 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55944)))

(declare-fun b!108888 () Bool)

(declare-fun lt!55946 () Unit!3307)

(assert (=> b!108888 (= e!70835 lt!55946)))

(assert (=> b!108888 (= lt!55946 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55471) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108888 (isDefined!109 (getValueByKey!155 (toList!790 lt!55471) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108889 () Bool)

(declare-fun Unit!3368 () Unit!3307)

(assert (=> b!108889 (= e!70835 Unit!3368)))

(declare-fun b!108890 () Bool)

(assert (=> b!108890 (= e!70834 (isDefined!109 (getValueByKey!155 (toList!790 lt!55471) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30381 c!19210) b!108888))

(assert (= (and d!30381 (not c!19210)) b!108889))

(assert (= (and d!30381 (not res!53929)) b!108890))

(declare-fun m!122747 () Bool)

(assert (=> d!30381 m!122747))

(declare-fun m!122749 () Bool)

(assert (=> b!108888 m!122749))

(assert (=> b!108888 m!121813))

(assert (=> b!108888 m!121813))

(declare-fun m!122751 () Bool)

(assert (=> b!108888 m!122751))

(assert (=> b!108890 m!121813))

(assert (=> b!108890 m!121813))

(assert (=> b!108890 m!122751))

(assert (=> bm!11450 d!30381))

(declare-fun d!30383 () Bool)

(declare-fun res!53930 () Bool)

(declare-fun e!70836 () Bool)

(assert (=> d!30383 (=> res!53930 e!70836)))

(assert (=> d!30383 (= res!53930 (or ((_ is Nil!1620) lt!55605) ((_ is Nil!1620) (t!5730 lt!55605))))))

(assert (=> d!30383 (= (isStrictlySorted!305 lt!55605) e!70836)))

(declare-fun b!108891 () Bool)

(declare-fun e!70837 () Bool)

(assert (=> b!108891 (= e!70836 e!70837)))

(declare-fun res!53931 () Bool)

(assert (=> b!108891 (=> (not res!53931) (not e!70837))))

(assert (=> b!108891 (= res!53931 (bvslt (_1!1207 (h!2217 lt!55605)) (_1!1207 (h!2217 (t!5730 lt!55605)))))))

(declare-fun b!108892 () Bool)

(assert (=> b!108892 (= e!70837 (isStrictlySorted!305 (t!5730 lt!55605)))))

(assert (= (and d!30383 (not res!53930)) b!108891))

(assert (= (and b!108891 res!53931) b!108892))

(declare-fun m!122753 () Bool)

(assert (=> b!108892 m!122753))

(assert (=> d!29903 d!30383))

(assert (=> d!29903 d!30117))

(assert (=> b!108157 d!29935))

(declare-fun b!108893 () Bool)

(declare-fun e!70848 () Unit!3307)

(declare-fun Unit!3369 () Unit!3307)

(assert (=> b!108893 (= e!70848 Unit!3369)))

(declare-fun b!108894 () Bool)

(declare-fun e!70849 () Bool)

(declare-fun lt!55968 () ListLongMap!1549)

(assert (=> b!108894 (= e!70849 (= (apply!99 lt!55968 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108894 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 (_values!2588 newMap!16))))))

(assert (=> b!108894 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108895 () Bool)

(declare-fun e!70846 () ListLongMap!1549)

(declare-fun e!70845 () ListLongMap!1549)

(assert (=> b!108895 (= e!70846 e!70845)))

(declare-fun c!19213 () Bool)

(assert (=> b!108895 (= c!19213 (and (not (= (bvand lt!55271 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!55271 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11549 () Bool)

(declare-fun call!11552 () Bool)

(assert (=> bm!11549 (= call!11552 (contains!824 lt!55968 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108896 () Bool)

(declare-fun e!70847 () Bool)

(declare-fun e!70843 () Bool)

(assert (=> b!108896 (= e!70847 e!70843)))

(declare-fun res!53932 () Bool)

(declare-fun call!11557 () Bool)

(assert (=> b!108896 (= res!53932 call!11557)))

(assert (=> b!108896 (=> (not res!53932) (not e!70843))))

(declare-fun d!30385 () Bool)

(declare-fun e!70838 () Bool)

(assert (=> d!30385 e!70838))

(declare-fun res!53933 () Bool)

(assert (=> d!30385 (=> (not res!53933) (not e!70838))))

(assert (=> d!30385 (= res!53933 (or (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))))

(declare-fun lt!55966 () ListLongMap!1549)

(assert (=> d!30385 (= lt!55968 lt!55966)))

(declare-fun lt!55962 () Unit!3307)

(assert (=> d!30385 (= lt!55962 e!70848)))

(declare-fun c!19215 () Bool)

(declare-fun e!70841 () Bool)

(assert (=> d!30385 (= c!19215 e!70841)))

(declare-fun res!53938 () Bool)

(assert (=> d!30385 (=> (not res!53938) (not e!70841))))

(assert (=> d!30385 (= res!53938 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!30385 (= lt!55966 e!70846)))

(declare-fun c!19212 () Bool)

(assert (=> d!30385 (= c!19212 (and (not (= (bvand lt!55271 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!55271 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30385 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30385 (= (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55271 lt!54982 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!55968)))

(declare-fun b!108897 () Bool)

(assert (=> b!108897 (= e!70847 (not call!11557))))

(declare-fun b!108898 () Bool)

(declare-fun res!53939 () Bool)

(assert (=> b!108898 (=> (not res!53939) (not e!70838))))

(declare-fun e!70850 () Bool)

(assert (=> b!108898 (= res!53939 e!70850)))

(declare-fun res!53940 () Bool)

(assert (=> b!108898 (=> res!53940 e!70850)))

(declare-fun e!70844 () Bool)

(assert (=> b!108898 (= res!53940 (not e!70844))))

(declare-fun res!53935 () Bool)

(assert (=> b!108898 (=> (not res!53935) (not e!70844))))

(assert (=> b!108898 (= res!53935 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108899 () Bool)

(assert (=> b!108899 (= e!70843 (= (apply!99 lt!55968 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54982))))

(declare-fun b!108900 () Bool)

(assert (=> b!108900 (= e!70844 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108901 () Bool)

(declare-fun call!11558 () ListLongMap!1549)

(assert (=> b!108901 (= e!70845 call!11558)))

(declare-fun bm!11550 () Bool)

(declare-fun call!11553 () ListLongMap!1549)

(declare-fun call!11555 () ListLongMap!1549)

(assert (=> bm!11550 (= call!11553 call!11555)))

(declare-fun bm!11551 () Bool)

(declare-fun call!11556 () ListLongMap!1549)

(assert (=> bm!11551 (= call!11558 call!11556)))

(declare-fun bm!11552 () Bool)

(assert (=> bm!11552 (= call!11557 (contains!824 lt!55968 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11553 () Bool)

(declare-fun call!11554 () ListLongMap!1549)

(assert (=> bm!11553 (= call!11556 (+!137 (ite c!19212 call!11555 (ite c!19213 call!11553 call!11554)) (ite (or c!19212 c!19213) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun b!108902 () Bool)

(declare-fun e!70840 () Bool)

(declare-fun e!70839 () Bool)

(assert (=> b!108902 (= e!70840 e!70839)))

(declare-fun res!53937 () Bool)

(assert (=> b!108902 (= res!53937 call!11552)))

(assert (=> b!108902 (=> (not res!53937) (not e!70839))))

(declare-fun bm!11554 () Bool)

(assert (=> bm!11554 (= call!11554 call!11553)))

(declare-fun b!108903 () Bool)

(assert (=> b!108903 (= e!70838 e!70840)))

(declare-fun c!19211 () Bool)

(assert (=> b!108903 (= c!19211 (not (= (bvand lt!55271 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108904 () Bool)

(assert (=> b!108904 (= e!70850 e!70849)))

(declare-fun res!53934 () Bool)

(assert (=> b!108904 (=> (not res!53934) (not e!70849))))

(assert (=> b!108904 (= res!53934 (contains!824 lt!55968 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108904 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!108905 () Bool)

(declare-fun lt!55951 () Unit!3307)

(assert (=> b!108905 (= e!70848 lt!55951)))

(declare-fun lt!55949 () ListLongMap!1549)

(assert (=> b!108905 (= lt!55949 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55271 lt!54982 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55948 () (_ BitVec 64))

(assert (=> b!108905 (= lt!55948 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55954 () (_ BitVec 64))

(assert (=> b!108905 (= lt!55954 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55961 () Unit!3307)

(assert (=> b!108905 (= lt!55961 (addStillContains!75 lt!55949 lt!55948 lt!54982 lt!55954))))

(assert (=> b!108905 (contains!824 (+!137 lt!55949 (tuple2!2393 lt!55948 lt!54982)) lt!55954)))

(declare-fun lt!55952 () Unit!3307)

(assert (=> b!108905 (= lt!55952 lt!55961)))

(declare-fun lt!55959 () ListLongMap!1549)

(assert (=> b!108905 (= lt!55959 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55271 lt!54982 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55956 () (_ BitVec 64))

(assert (=> b!108905 (= lt!55956 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55964 () (_ BitVec 64))

(assert (=> b!108905 (= lt!55964 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55958 () Unit!3307)

(assert (=> b!108905 (= lt!55958 (addApplyDifferent!75 lt!55959 lt!55956 (minValue!2478 newMap!16) lt!55964))))

(assert (=> b!108905 (= (apply!99 (+!137 lt!55959 (tuple2!2393 lt!55956 (minValue!2478 newMap!16))) lt!55964) (apply!99 lt!55959 lt!55964))))

(declare-fun lt!55967 () Unit!3307)

(assert (=> b!108905 (= lt!55967 lt!55958)))

(declare-fun lt!55953 () ListLongMap!1549)

(assert (=> b!108905 (= lt!55953 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55271 lt!54982 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55950 () (_ BitVec 64))

(assert (=> b!108905 (= lt!55950 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55969 () (_ BitVec 64))

(assert (=> b!108905 (= lt!55969 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55963 () Unit!3307)

(assert (=> b!108905 (= lt!55963 (addApplyDifferent!75 lt!55953 lt!55950 lt!54982 lt!55969))))

(assert (=> b!108905 (= (apply!99 (+!137 lt!55953 (tuple2!2393 lt!55950 lt!54982)) lt!55969) (apply!99 lt!55953 lt!55969))))

(declare-fun lt!55960 () Unit!3307)

(assert (=> b!108905 (= lt!55960 lt!55963)))

(declare-fun lt!55965 () ListLongMap!1549)

(assert (=> b!108905 (= lt!55965 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55271 lt!54982 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!55957 () (_ BitVec 64))

(assert (=> b!108905 (= lt!55957 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55955 () (_ BitVec 64))

(assert (=> b!108905 (= lt!55955 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108905 (= lt!55951 (addApplyDifferent!75 lt!55965 lt!55957 (minValue!2478 newMap!16) lt!55955))))

(assert (=> b!108905 (= (apply!99 (+!137 lt!55965 (tuple2!2393 lt!55957 (minValue!2478 newMap!16))) lt!55955) (apply!99 lt!55965 lt!55955))))

(declare-fun b!108906 () Bool)

(assert (=> b!108906 (= e!70846 (+!137 call!11556 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun bm!11555 () Bool)

(assert (=> bm!11555 (= call!11555 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55271 lt!54982 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!108907 () Bool)

(declare-fun res!53936 () Bool)

(assert (=> b!108907 (=> (not res!53936) (not e!70838))))

(assert (=> b!108907 (= res!53936 e!70847)))

(declare-fun c!19216 () Bool)

(assert (=> b!108907 (= c!19216 (not (= (bvand lt!55271 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108908 () Bool)

(assert (=> b!108908 (= e!70841 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108909 () Bool)

(declare-fun c!19214 () Bool)

(assert (=> b!108909 (= c!19214 (and (not (= (bvand lt!55271 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!55271 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70842 () ListLongMap!1549)

(assert (=> b!108909 (= e!70845 e!70842)))

(declare-fun b!108910 () Bool)

(assert (=> b!108910 (= e!70839 (= (apply!99 lt!55968 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!108911 () Bool)

(assert (=> b!108911 (= e!70840 (not call!11552))))

(declare-fun b!108912 () Bool)

(assert (=> b!108912 (= e!70842 call!11558)))

(declare-fun b!108913 () Bool)

(assert (=> b!108913 (= e!70842 call!11554)))

(assert (= (and d!30385 c!19212) b!108906))

(assert (= (and d!30385 (not c!19212)) b!108895))

(assert (= (and b!108895 c!19213) b!108901))

(assert (= (and b!108895 (not c!19213)) b!108909))

(assert (= (and b!108909 c!19214) b!108912))

(assert (= (and b!108909 (not c!19214)) b!108913))

(assert (= (or b!108912 b!108913) bm!11554))

(assert (= (or b!108901 bm!11554) bm!11550))

(assert (= (or b!108901 b!108912) bm!11551))

(assert (= (or b!108906 bm!11550) bm!11555))

(assert (= (or b!108906 bm!11551) bm!11553))

(assert (= (and d!30385 res!53938) b!108908))

(assert (= (and d!30385 c!19215) b!108905))

(assert (= (and d!30385 (not c!19215)) b!108893))

(assert (= (and d!30385 res!53933) b!108898))

(assert (= (and b!108898 res!53935) b!108900))

(assert (= (and b!108898 (not res!53940)) b!108904))

(assert (= (and b!108904 res!53934) b!108894))

(assert (= (and b!108898 res!53939) b!108907))

(assert (= (and b!108907 c!19216) b!108896))

(assert (= (and b!108907 (not c!19216)) b!108897))

(assert (= (and b!108896 res!53932) b!108899))

(assert (= (or b!108896 b!108897) bm!11552))

(assert (= (and b!108907 res!53936) b!108903))

(assert (= (and b!108903 c!19211) b!108902))

(assert (= (and b!108903 (not c!19211)) b!108911))

(assert (= (and b!108902 res!53937) b!108910))

(assert (= (or b!108902 b!108911) bm!11549))

(declare-fun b_lambda!4857 () Bool)

(assert (=> (not b_lambda!4857) (not b!108894)))

(assert (=> b!108894 t!5742))

(declare-fun b_and!6705 () Bool)

(assert (= b_and!6701 (and (=> t!5742 result!3505) b_and!6705)))

(assert (=> b!108894 t!5744))

(declare-fun b_and!6707 () Bool)

(assert (= b_and!6703 (and (=> t!5744 result!3507) b_and!6707)))

(assert (=> b!108894 m!121365))

(assert (=> b!108894 m!121113))

(assert (=> b!108894 m!121365))

(assert (=> b!108894 m!121113))

(assert (=> b!108894 m!121367))

(assert (=> b!108894 m!120769))

(declare-fun m!122755 () Bool)

(assert (=> b!108894 m!122755))

(assert (=> b!108894 m!120769))

(declare-fun m!122757 () Bool)

(assert (=> b!108910 m!122757))

(declare-fun m!122759 () Bool)

(assert (=> bm!11549 m!122759))

(declare-fun m!122761 () Bool)

(assert (=> bm!11555 m!122761))

(declare-fun m!122763 () Bool)

(assert (=> bm!11552 m!122763))

(assert (=> b!108900 m!120769))

(assert (=> b!108900 m!120769))

(assert (=> b!108900 m!120779))

(assert (=> b!108908 m!120769))

(assert (=> b!108908 m!120769))

(assert (=> b!108908 m!120779))

(declare-fun m!122765 () Bool)

(assert (=> bm!11553 m!122765))

(declare-fun m!122767 () Bool)

(assert (=> b!108906 m!122767))

(assert (=> d!30385 m!120787))

(declare-fun m!122769 () Bool)

(assert (=> b!108899 m!122769))

(assert (=> b!108904 m!120769))

(assert (=> b!108904 m!120769))

(declare-fun m!122771 () Bool)

(assert (=> b!108904 m!122771))

(declare-fun m!122773 () Bool)

(assert (=> b!108905 m!122773))

(declare-fun m!122775 () Bool)

(assert (=> b!108905 m!122775))

(declare-fun m!122777 () Bool)

(assert (=> b!108905 m!122777))

(declare-fun m!122779 () Bool)

(assert (=> b!108905 m!122779))

(declare-fun m!122781 () Bool)

(assert (=> b!108905 m!122781))

(declare-fun m!122783 () Bool)

(assert (=> b!108905 m!122783))

(declare-fun m!122785 () Bool)

(assert (=> b!108905 m!122785))

(declare-fun m!122787 () Bool)

(assert (=> b!108905 m!122787))

(assert (=> b!108905 m!122777))

(assert (=> b!108905 m!122783))

(declare-fun m!122789 () Bool)

(assert (=> b!108905 m!122789))

(assert (=> b!108905 m!122761))

(declare-fun m!122791 () Bool)

(assert (=> b!108905 m!122791))

(declare-fun m!122793 () Bool)

(assert (=> b!108905 m!122793))

(declare-fun m!122795 () Bool)

(assert (=> b!108905 m!122795))

(assert (=> b!108905 m!122785))

(declare-fun m!122797 () Bool)

(assert (=> b!108905 m!122797))

(declare-fun m!122799 () Bool)

(assert (=> b!108905 m!122799))

(assert (=> b!108905 m!120769))

(assert (=> b!108905 m!122795))

(declare-fun m!122801 () Bool)

(assert (=> b!108905 m!122801))

(assert (=> d!29817 d!30385))

(assert (=> d!29817 d!29875))

(declare-fun d!30387 () Bool)

(assert (=> d!30387 (= (+!137 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55271 lt!54982 (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(assert (=> d!30387 true))

(declare-fun _$7!95 () Unit!3307)

(assert (=> d!30387 (= (choose!680 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) lt!55271 (zeroValue!2478 newMap!16) lt!54982 (minValue!2478 newMap!16) (defaultEntry!2605 newMap!16)) _$7!95)))

(declare-fun bs!4476 () Bool)

(assert (= bs!4476 d!30387))

(assert (=> bs!4476 m!120539))

(assert (=> bs!4476 m!120539))

(assert (=> bs!4476 m!121105))

(assert (=> bs!4476 m!121109))

(assert (=> d!29817 d!30387))

(declare-fun d!30389 () Bool)

(declare-fun e!70851 () Bool)

(assert (=> d!30389 e!70851))

(declare-fun res!53942 () Bool)

(assert (=> d!30389 (=> (not res!53942) (not e!70851))))

(declare-fun lt!55970 () ListLongMap!1549)

(assert (=> d!30389 (= res!53942 (contains!824 lt!55970 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982))))))

(declare-fun lt!55973 () List!1623)

(assert (=> d!30389 (= lt!55970 (ListLongMap!1550 lt!55973))))

(declare-fun lt!55971 () Unit!3307)

(declare-fun lt!55972 () Unit!3307)

(assert (=> d!30389 (= lt!55971 lt!55972)))

(assert (=> d!30389 (= (getValueByKey!155 lt!55973 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982))) (Some!160 (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982))))))

(assert (=> d!30389 (= lt!55972 (lemmaContainsTupThenGetReturnValue!74 lt!55973 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982))))))

(assert (=> d!30389 (= lt!55973 (insertStrictlySorted!77 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982))))))

(assert (=> d!30389 (= (+!137 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982)) lt!55970)))

(declare-fun b!108914 () Bool)

(declare-fun res!53941 () Bool)

(assert (=> b!108914 (=> (not res!53941) (not e!70851))))

(assert (=> b!108914 (= res!53941 (= (getValueByKey!155 (toList!790 lt!55970) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982))) (Some!160 (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982)))))))

(declare-fun b!108915 () Bool)

(assert (=> b!108915 (= e!70851 (contains!826 (toList!790 lt!55970) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982)))))

(assert (= (and d!30389 res!53942) b!108914))

(assert (= (and b!108914 res!53941) b!108915))

(declare-fun m!122803 () Bool)

(assert (=> d!30389 m!122803))

(declare-fun m!122805 () Bool)

(assert (=> d!30389 m!122805))

(declare-fun m!122807 () Bool)

(assert (=> d!30389 m!122807))

(declare-fun m!122809 () Bool)

(assert (=> d!30389 m!122809))

(declare-fun m!122811 () Bool)

(assert (=> b!108914 m!122811))

(declare-fun m!122813 () Bool)

(assert (=> b!108915 m!122813))

(assert (=> d!29817 d!30389))

(assert (=> d!29817 d!29941))

(declare-fun d!30391 () Bool)

(assert (=> d!30391 (= (isDefined!109 (getValueByKey!155 (toList!790 e!70158) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))) (not (isEmpty!379 (getValueByKey!155 (toList!790 e!70158) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))))

(declare-fun bs!4477 () Bool)

(assert (= bs!4477 d!30391))

(assert (=> bs!4477 m!121169))

(declare-fun m!122815 () Bool)

(assert (=> bs!4477 m!122815))

(assert (=> b!108012 d!30391))

(declare-fun e!70853 () Option!161)

(declare-fun b!108918 () Bool)

(assert (=> b!108918 (= e!70853 (getValueByKey!155 (t!5730 (toList!790 e!70158)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!108917 () Bool)

(declare-fun e!70852 () Option!161)

(assert (=> b!108917 (= e!70852 e!70853)))

(declare-fun c!19218 () Bool)

(assert (=> b!108917 (= c!19218 (and ((_ is Cons!1619) (toList!790 e!70158)) (not (= (_1!1207 (h!2217 (toList!790 e!70158))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))))

(declare-fun d!30393 () Bool)

(declare-fun c!19217 () Bool)

(assert (=> d!30393 (= c!19217 (and ((_ is Cons!1619) (toList!790 e!70158)) (= (_1!1207 (h!2217 (toList!790 e!70158))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (=> d!30393 (= (getValueByKey!155 (toList!790 e!70158) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) e!70852)))

(declare-fun b!108919 () Bool)

(assert (=> b!108919 (= e!70853 None!159)))

(declare-fun b!108916 () Bool)

(assert (=> b!108916 (= e!70852 (Some!160 (_2!1207 (h!2217 (toList!790 e!70158)))))))

(assert (= (and d!30393 c!19217) b!108916))

(assert (= (and d!30393 (not c!19217)) b!108917))

(assert (= (and b!108917 c!19218) b!108918))

(assert (= (and b!108917 (not c!19218)) b!108919))

(assert (=> b!108918 m!120387))

(declare-fun m!122817 () Bool)

(assert (=> b!108918 m!122817))

(assert (=> b!108012 d!30393))

(declare-fun d!30395 () Bool)

(assert (=> d!30395 (= (map!1277 (_2!1206 lt!55389)) (getCurrentListMap!467 (_keys!4314 (_2!1206 lt!55389)) (_values!2588 (_2!1206 lt!55389)) (mask!6762 (_2!1206 lt!55389)) (extraKeys!2406 (_2!1206 lt!55389)) (zeroValue!2478 (_2!1206 lt!55389)) (minValue!2478 (_2!1206 lt!55389)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1206 lt!55389))))))

(declare-fun bs!4478 () Bool)

(assert (= bs!4478 d!30395))

(declare-fun m!122819 () Bool)

(assert (=> bs!4478 m!122819))

(assert (=> b!107899 d!30395))

(declare-fun d!30397 () Bool)

(declare-fun e!70854 () Bool)

(assert (=> d!30397 e!70854))

(declare-fun res!53944 () Bool)

(assert (=> d!30397 (=> (not res!53944) (not e!70854))))

(declare-fun lt!55974 () ListLongMap!1549)

(assert (=> d!30397 (= res!53944 (contains!824 lt!55974 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun lt!55977 () List!1623)

(assert (=> d!30397 (= lt!55974 (ListLongMap!1550 lt!55977))))

(declare-fun lt!55975 () Unit!3307)

(declare-fun lt!55976 () Unit!3307)

(assert (=> d!30397 (= lt!55975 lt!55976)))

(assert (=> d!30397 (= (getValueByKey!155 lt!55977 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!30397 (= lt!55976 (lemmaContainsTupThenGetReturnValue!74 lt!55977 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!30397 (= lt!55977 (insertStrictlySorted!77 (toList!790 (map!1277 newMap!16)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!30397 (= (+!137 (map!1277 newMap!16) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) lt!55974)))

(declare-fun b!108920 () Bool)

(declare-fun res!53943 () Bool)

(assert (=> b!108920 (=> (not res!53943) (not e!70854))))

(assert (=> b!108920 (= res!53943 (= (getValueByKey!155 (toList!790 lt!55974) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun b!108921 () Bool)

(assert (=> b!108921 (= e!70854 (contains!826 (toList!790 lt!55974) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(assert (= (and d!30397 res!53944) b!108920))

(assert (= (and b!108920 res!53943) b!108921))

(declare-fun m!122821 () Bool)

(assert (=> d!30397 m!122821))

(declare-fun m!122823 () Bool)

(assert (=> d!30397 m!122823))

(declare-fun m!122825 () Bool)

(assert (=> d!30397 m!122825))

(declare-fun m!122827 () Bool)

(assert (=> d!30397 m!122827))

(declare-fun m!122829 () Bool)

(assert (=> b!108920 m!122829))

(declare-fun m!122831 () Bool)

(assert (=> b!108921 m!122831))

(assert (=> b!107899 d!30397))

(assert (=> b!107899 d!29685))

(declare-fun d!30399 () Bool)

(declare-fun res!53945 () Bool)

(declare-fun e!70855 () Bool)

(assert (=> d!30399 (=> res!53945 e!70855)))

(assert (=> d!30399 (= res!53945 (and ((_ is Cons!1619) lt!55641) (= (_1!1207 (h!2217 lt!55641)) (_1!1207 lt!54977))))))

(assert (=> d!30399 (= (containsKey!159 lt!55641 (_1!1207 lt!54977)) e!70855)))

(declare-fun b!108922 () Bool)

(declare-fun e!70856 () Bool)

(assert (=> b!108922 (= e!70855 e!70856)))

(declare-fun res!53946 () Bool)

(assert (=> b!108922 (=> (not res!53946) (not e!70856))))

(assert (=> b!108922 (= res!53946 (and (or (not ((_ is Cons!1619) lt!55641)) (bvsle (_1!1207 (h!2217 lt!55641)) (_1!1207 lt!54977))) ((_ is Cons!1619) lt!55641) (bvslt (_1!1207 (h!2217 lt!55641)) (_1!1207 lt!54977))))))

(declare-fun b!108923 () Bool)

(assert (=> b!108923 (= e!70856 (containsKey!159 (t!5730 lt!55641) (_1!1207 lt!54977)))))

(assert (= (and d!30399 (not res!53945)) b!108922))

(assert (= (and b!108922 res!53946) b!108923))

(declare-fun m!122833 () Bool)

(assert (=> b!108923 m!122833))

(assert (=> b!108257 d!30399))

(assert (=> d!29743 d!29851))

(declare-fun d!30401 () Bool)

(declare-fun e!70859 () Bool)

(assert (=> d!30401 e!70859))

(declare-fun res!53951 () Bool)

(assert (=> d!30401 (=> (not res!53951) (not e!70859))))

(declare-fun lt!55980 () SeekEntryResult!263)

(assert (=> d!30401 (= res!53951 ((_ is Found!263) lt!55980))))

(assert (=> d!30401 (= lt!55980 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(assert (=> d!30401 true))

(declare-fun _$33!93 () Unit!3307)

(assert (=> d!30401 (= (choose!676 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (defaultEntry!2605 newMap!16)) _$33!93)))

(declare-fun b!108928 () Bool)

(declare-fun res!53952 () Bool)

(assert (=> b!108928 (=> (not res!53952) (not e!70859))))

(assert (=> b!108928 (= res!53952 (inRange!0 (index!3202 lt!55980) (mask!6762 newMap!16)))))

(declare-fun b!108929 () Bool)

(assert (=> b!108929 (= e!70859 (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55980)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (= (and d!30401 res!53951) b!108928))

(assert (= (and b!108928 res!53952) b!108929))

(assert (=> d!30401 m!120387))

(assert (=> d!30401 m!120709))

(declare-fun m!122835 () Bool)

(assert (=> b!108928 m!122835))

(declare-fun m!122837 () Bool)

(assert (=> b!108929 m!122837))

(assert (=> d!29743 d!30401))

(assert (=> d!29743 d!29941))

(declare-fun d!30403 () Bool)

(assert (=> d!30403 (= (get!1344 (getValueByKey!155 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2910 (getValueByKey!155 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29813 d!30403))

(assert (=> d!29813 d!30341))

(declare-fun d!30405 () Bool)

(assert (=> d!30405 (isDefined!109 (getValueByKey!155 (toList!790 call!11426) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun lt!55981 () Unit!3307)

(assert (=> d!30405 (= lt!55981 (choose!681 (toList!790 call!11426) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun e!70860 () Bool)

(assert (=> d!30405 e!70860))

(declare-fun res!53953 () Bool)

(assert (=> d!30405 (=> (not res!53953) (not e!70860))))

(assert (=> d!30405 (= res!53953 (isStrictlySorted!305 (toList!790 call!11426)))))

(assert (=> d!30405 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 call!11426) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) lt!55981)))

(declare-fun b!108930 () Bool)

(assert (=> b!108930 (= e!70860 (containsKey!159 (toList!790 call!11426) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (= (and d!30405 res!53953) b!108930))

(assert (=> d!30405 m!120387))

(assert (=> d!30405 m!121461))

(assert (=> d!30405 m!121461))

(assert (=> d!30405 m!121463))

(assert (=> d!30405 m!120387))

(declare-fun m!122839 () Bool)

(assert (=> d!30405 m!122839))

(declare-fun m!122841 () Bool)

(assert (=> d!30405 m!122841))

(assert (=> b!108930 m!120387))

(assert (=> b!108930 m!121457))

(assert (=> b!108199 d!30405))

(assert (=> b!108199 d!30103))

(assert (=> b!108199 d!30105))

(declare-fun d!30407 () Bool)

(declare-fun lt!55982 () Bool)

(assert (=> d!30407 (= lt!55982 (select (content!111 lt!55179) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(declare-fun e!70862 () Bool)

(assert (=> d!30407 (= lt!55982 e!70862)))

(declare-fun res!53954 () Bool)

(assert (=> d!30407 (=> (not res!53954) (not e!70862))))

(assert (=> d!30407 (= res!53954 ((_ is Cons!1619) lt!55179))))

(assert (=> d!30407 (= (contains!826 lt!55179 (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))) lt!55982)))

(declare-fun b!108931 () Bool)

(declare-fun e!70861 () Bool)

(assert (=> b!108931 (= e!70862 e!70861)))

(declare-fun res!53955 () Bool)

(assert (=> b!108931 (=> res!53955 e!70861)))

(assert (=> b!108931 (= res!53955 (= (h!2217 lt!55179) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(declare-fun b!108932 () Bool)

(assert (=> b!108932 (= e!70861 (contains!826 (t!5730 lt!55179) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(assert (= (and d!30407 res!53954) b!108931))

(assert (= (and b!108931 (not res!53955)) b!108932))

(declare-fun m!122843 () Bool)

(assert (=> d!30407 m!122843))

(declare-fun m!122845 () Bool)

(assert (=> d!30407 m!122845))

(declare-fun m!122847 () Bool)

(assert (=> b!108932 m!122847))

(assert (=> b!108103 d!30407))

(declare-fun b!108933 () Bool)

(declare-fun res!53959 () Bool)

(declare-fun e!70863 () Bool)

(assert (=> b!108933 (=> (not res!53959) (not e!70863))))

(assert (=> b!108933 (= res!53959 (and (= (size!2320 (_values!2588 (v!2904 (underlying!360 thiss!992)))) (bvadd (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000001)) (= (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (size!2320 (_values!2588 (v!2904 (underlying!360 thiss!992))))) (bvsge (_size!504 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!504 (v!2904 (underlying!360 thiss!992))) (bvadd (mask!6762 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun d!30409 () Bool)

(declare-fun res!53956 () Bool)

(assert (=> d!30409 (=> (not res!53956) (not e!70863))))

(assert (=> d!30409 (= res!53956 (validMask!0 (mask!6762 (v!2904 (underlying!360 thiss!992)))))))

(assert (=> d!30409 (= (simpleValid!75 (v!2904 (underlying!360 thiss!992))) e!70863)))

(declare-fun b!108935 () Bool)

(declare-fun res!53958 () Bool)

(assert (=> b!108935 (=> (not res!53958) (not e!70863))))

(assert (=> b!108935 (= res!53958 (= (size!2325 (v!2904 (underlying!360 thiss!992))) (bvadd (_size!504 (v!2904 (underlying!360 thiss!992))) (bvsdiv (bvadd (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!108934 () Bool)

(declare-fun res!53957 () Bool)

(assert (=> b!108934 (=> (not res!53957) (not e!70863))))

(assert (=> b!108934 (= res!53957 (bvsge (size!2325 (v!2904 (underlying!360 thiss!992))) (_size!504 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!108936 () Bool)

(assert (=> b!108936 (= e!70863 (and (bvsge (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2406 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!504 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!30409 res!53956) b!108933))

(assert (= (and b!108933 res!53959) b!108934))

(assert (= (and b!108934 res!53957) b!108935))

(assert (= (and b!108935 res!53958) b!108936))

(assert (=> d!30409 m!120417))

(declare-fun m!122849 () Bool)

(assert (=> b!108935 m!122849))

(assert (=> b!108934 m!122849))

(assert (=> d!29923 d!30409))

(declare-fun d!30411 () Bool)

(assert (=> d!30411 (= (apply!99 lt!55533 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!155 (toList!790 lt!55533) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4479 () Bool)

(assert (= bs!4479 d!30411))

(assert (=> bs!4479 m!121897))

(assert (=> bs!4479 m!121897))

(declare-fun m!122851 () Bool)

(assert (=> bs!4479 m!122851))

(assert (=> b!108081 d!30411))

(declare-fun d!30413 () Bool)

(declare-fun res!53960 () Bool)

(declare-fun e!70864 () Bool)

(assert (=> d!30413 (=> res!53960 e!70864)))

(assert (=> d!30413 (= res!53960 (or ((_ is Nil!1620) lt!55641) ((_ is Nil!1620) (t!5730 lt!55641))))))

(assert (=> d!30413 (= (isStrictlySorted!305 lt!55641) e!70864)))

(declare-fun b!108937 () Bool)

(declare-fun e!70865 () Bool)

(assert (=> b!108937 (= e!70864 e!70865)))

(declare-fun res!53961 () Bool)

(assert (=> b!108937 (=> (not res!53961) (not e!70865))))

(assert (=> b!108937 (= res!53961 (bvslt (_1!1207 (h!2217 lt!55641)) (_1!1207 (h!2217 (t!5730 lt!55641)))))))

(declare-fun b!108938 () Bool)

(assert (=> b!108938 (= e!70865 (isStrictlySorted!305 (t!5730 lt!55641)))))

(assert (= (and d!30413 (not res!53960)) b!108937))

(assert (= (and b!108937 res!53961) b!108938))

(declare-fun m!122853 () Bool)

(assert (=> b!108938 m!122853))

(assert (=> d!29921 d!30413))

(declare-fun d!30415 () Bool)

(declare-fun res!53962 () Bool)

(declare-fun e!70866 () Bool)

(assert (=> d!30415 (=> res!53962 e!70866)))

(assert (=> d!30415 (= res!53962 (or ((_ is Nil!1620) (toList!790 (+!137 lt!54981 lt!54985))) ((_ is Nil!1620) (t!5730 (toList!790 (+!137 lt!54981 lt!54985))))))))

(assert (=> d!30415 (= (isStrictlySorted!305 (toList!790 (+!137 lt!54981 lt!54985))) e!70866)))

(declare-fun b!108939 () Bool)

(declare-fun e!70867 () Bool)

(assert (=> b!108939 (= e!70866 e!70867)))

(declare-fun res!53963 () Bool)

(assert (=> b!108939 (=> (not res!53963) (not e!70867))))

(assert (=> b!108939 (= res!53963 (bvslt (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 lt!54985)))) (_1!1207 (h!2217 (t!5730 (toList!790 (+!137 lt!54981 lt!54985)))))))))

(declare-fun b!108940 () Bool)

(assert (=> b!108940 (= e!70867 (isStrictlySorted!305 (t!5730 (toList!790 (+!137 lt!54981 lt!54985)))))))

(assert (= (and d!30415 (not res!53962)) b!108939))

(assert (= (and b!108939 res!53963) b!108940))

(assert (=> b!108940 m!121887))

(assert (=> d!29921 d!30415))

(declare-fun d!30417 () Bool)

(declare-fun lt!55983 () Bool)

(assert (=> d!30417 (= lt!55983 (select (content!111 lt!55443) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(declare-fun e!70869 () Bool)

(assert (=> d!30417 (= lt!55983 e!70869)))

(declare-fun res!53964 () Bool)

(assert (=> d!30417 (=> (not res!53964) (not e!70869))))

(assert (=> d!30417 (= res!53964 ((_ is Cons!1619) lt!55443))))

(assert (=> d!30417 (= (contains!826 lt!55443 (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))) lt!55983)))

(declare-fun b!108941 () Bool)

(declare-fun e!70868 () Bool)

(assert (=> b!108941 (= e!70869 e!70868)))

(declare-fun res!53965 () Bool)

(assert (=> b!108941 (=> res!53965 e!70868)))

(assert (=> b!108941 (= res!53965 (= (h!2217 lt!55443) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(declare-fun b!108942 () Bool)

(assert (=> b!108942 (= e!70868 (contains!826 (t!5730 lt!55443) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(assert (= (and d!30417 res!53964) b!108941))

(assert (= (and b!108941 (not res!53965)) b!108942))

(declare-fun m!122855 () Bool)

(assert (=> d!30417 m!122855))

(declare-fun m!122857 () Bool)

(assert (=> d!30417 m!122857))

(declare-fun m!122859 () Bool)

(assert (=> b!108942 m!122859))

(assert (=> b!107973 d!30417))

(assert (=> b!107837 d!30335))

(assert (=> d!29841 d!29847))

(assert (=> d!29841 d!29849))

(assert (=> d!29841 d!29845))

(assert (=> d!29841 d!29843))

(declare-fun d!30419 () Bool)

(declare-fun e!70870 () Bool)

(assert (=> d!30419 e!70870))

(declare-fun res!53966 () Bool)

(assert (=> d!30419 (=> res!53966 e!70870)))

(declare-fun lt!55984 () Bool)

(assert (=> d!30419 (= res!53966 (not lt!55984))))

(declare-fun lt!55985 () Bool)

(assert (=> d!30419 (= lt!55984 lt!55985)))

(declare-fun lt!55987 () Unit!3307)

(declare-fun e!70871 () Unit!3307)

(assert (=> d!30419 (= lt!55987 e!70871)))

(declare-fun c!19219 () Bool)

(assert (=> d!30419 (= c!19219 lt!55985)))

(assert (=> d!30419 (= lt!55985 (containsKey!159 (toList!790 (map!1277 (_2!1206 lt!55389))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!30419 (= (contains!824 (map!1277 (_2!1206 lt!55389)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) lt!55984)))

(declare-fun b!108943 () Bool)

(declare-fun lt!55986 () Unit!3307)

(assert (=> b!108943 (= e!70871 lt!55986)))

(assert (=> b!108943 (= lt!55986 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (map!1277 (_2!1206 lt!55389))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> b!108943 (isDefined!109 (getValueByKey!155 (toList!790 (map!1277 (_2!1206 lt!55389))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!108944 () Bool)

(declare-fun Unit!3370 () Unit!3307)

(assert (=> b!108944 (= e!70871 Unit!3370)))

(declare-fun b!108945 () Bool)

(assert (=> b!108945 (= e!70870 (isDefined!109 (getValueByKey!155 (toList!790 (map!1277 (_2!1206 lt!55389))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (= (and d!30419 c!19219) b!108943))

(assert (= (and d!30419 (not c!19219)) b!108944))

(assert (= (and d!30419 (not res!53966)) b!108945))

(assert (=> d!30419 m!120387))

(declare-fun m!122861 () Bool)

(assert (=> d!30419 m!122861))

(assert (=> b!108943 m!120387))

(declare-fun m!122863 () Bool)

(assert (=> b!108943 m!122863))

(assert (=> b!108943 m!120387))

(declare-fun m!122865 () Bool)

(assert (=> b!108943 m!122865))

(assert (=> b!108943 m!122865))

(declare-fun m!122867 () Bool)

(assert (=> b!108943 m!122867))

(assert (=> b!108945 m!120387))

(assert (=> b!108945 m!122865))

(assert (=> b!108945 m!122865))

(assert (=> b!108945 m!122867))

(assert (=> b!107905 d!30419))

(assert (=> b!107905 d!30395))

(declare-fun d!30421 () Bool)

(declare-fun e!70872 () Bool)

(assert (=> d!30421 e!70872))

(declare-fun res!53967 () Bool)

(assert (=> d!30421 (=> res!53967 e!70872)))

(declare-fun lt!55988 () Bool)

(assert (=> d!30421 (= res!53967 (not lt!55988))))

(declare-fun lt!55989 () Bool)

(assert (=> d!30421 (= lt!55988 lt!55989)))

(declare-fun lt!55991 () Unit!3307)

(declare-fun e!70873 () Unit!3307)

(assert (=> d!30421 (= lt!55991 e!70873)))

(declare-fun c!19220 () Bool)

(assert (=> d!30421 (= c!19220 lt!55989)))

(assert (=> d!30421 (= lt!55989 (containsKey!159 (toList!790 lt!55626) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30421 (= (contains!824 lt!55626 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55988)))

(declare-fun b!108946 () Bool)

(declare-fun lt!55990 () Unit!3307)

(assert (=> b!108946 (= e!70873 lt!55990)))

(assert (=> b!108946 (= lt!55990 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55626) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108946 (isDefined!109 (getValueByKey!155 (toList!790 lt!55626) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108947 () Bool)

(declare-fun Unit!3371 () Unit!3307)

(assert (=> b!108947 (= e!70873 Unit!3371)))

(declare-fun b!108948 () Bool)

(assert (=> b!108948 (= e!70872 (isDefined!109 (getValueByKey!155 (toList!790 lt!55626) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30421 c!19220) b!108946))

(assert (= (and d!30421 (not c!19220)) b!108947))

(assert (= (and d!30421 (not res!53967)) b!108948))

(declare-fun m!122869 () Bool)

(assert (=> d!30421 m!122869))

(declare-fun m!122871 () Bool)

(assert (=> b!108946 m!122871))

(assert (=> b!108946 m!122349))

(assert (=> b!108946 m!122349))

(declare-fun m!122873 () Bool)

(assert (=> b!108946 m!122873))

(assert (=> b!108948 m!122349))

(assert (=> b!108948 m!122349))

(assert (=> b!108948 m!122873))

(assert (=> bm!11490 d!30421))

(declare-fun b!108951 () Bool)

(declare-fun e!70875 () Option!161)

(assert (=> b!108951 (= e!70875 (getValueByKey!155 (t!5730 (toList!790 lt!55492)) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108950 () Bool)

(declare-fun e!70874 () Option!161)

(assert (=> b!108950 (= e!70874 e!70875)))

(declare-fun c!19222 () Bool)

(assert (=> b!108950 (= c!19222 (and ((_ is Cons!1619) (toList!790 lt!55492)) (not (= (_1!1207 (h!2217 (toList!790 lt!55492))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun d!30423 () Bool)

(declare-fun c!19221 () Bool)

(assert (=> d!30423 (= c!19221 (and ((_ is Cons!1619) (toList!790 lt!55492)) (= (_1!1207 (h!2217 (toList!790 lt!55492))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30423 (= (getValueByKey!155 (toList!790 lt!55492) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!70874)))

(declare-fun b!108952 () Bool)

(assert (=> b!108952 (= e!70875 None!159)))

(declare-fun b!108949 () Bool)

(assert (=> b!108949 (= e!70874 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55492)))))))

(assert (= (and d!30423 c!19221) b!108949))

(assert (= (and d!30423 (not c!19221)) b!108950))

(assert (= (and b!108950 c!19222) b!108951))

(assert (= (and b!108950 (not c!19222)) b!108952))

(declare-fun m!122875 () Bool)

(assert (=> b!108951 m!122875))

(assert (=> b!108039 d!30423))

(declare-fun d!30425 () Bool)

(assert (=> d!30425 (= (apply!99 lt!55533 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!155 (toList!790 lt!55533) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4480 () Bool)

(assert (= bs!4480 d!30425))

(assert (=> bs!4480 m!121763))

(assert (=> bs!4480 m!121763))

(declare-fun m!122877 () Bool)

(assert (=> bs!4480 m!122877))

(assert (=> b!108070 d!30425))

(declare-fun d!30427 () Bool)

(declare-fun lt!55992 () Bool)

(assert (=> d!30427 (= lt!55992 (select (content!111 lt!55150) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(declare-fun e!70877 () Bool)

(assert (=> d!30427 (= lt!55992 e!70877)))

(declare-fun res!53968 () Bool)

(assert (=> d!30427 (=> (not res!53968) (not e!70877))))

(assert (=> d!30427 (= res!53968 ((_ is Cons!1619) lt!55150))))

(assert (=> d!30427 (= (contains!826 lt!55150 (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))) lt!55992)))

(declare-fun b!108953 () Bool)

(declare-fun e!70876 () Bool)

(assert (=> b!108953 (= e!70877 e!70876)))

(declare-fun res!53969 () Bool)

(assert (=> b!108953 (=> res!53969 e!70876)))

(assert (=> b!108953 (= res!53969 (= (h!2217 lt!55150) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(declare-fun b!108954 () Bool)

(assert (=> b!108954 (= e!70876 (contains!826 (t!5730 lt!55150) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(assert (= (and d!30427 res!53968) b!108953))

(assert (= (and b!108953 (not res!53969)) b!108954))

(declare-fun m!122879 () Bool)

(assert (=> d!30427 m!122879))

(declare-fun m!122881 () Bool)

(assert (=> d!30427 m!122881))

(declare-fun m!122883 () Bool)

(assert (=> b!108954 m!122883))

(assert (=> b!108210 d!30427))

(declare-fun d!30429 () Bool)

(assert (=> d!30429 (isDefined!109 (getValueByKey!155 (toList!790 lt!55175) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!55993 () Unit!3307)

(assert (=> d!30429 (= lt!55993 (choose!681 (toList!790 lt!55175) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70878 () Bool)

(assert (=> d!30429 e!70878))

(declare-fun res!53970 () Bool)

(assert (=> d!30429 (=> (not res!53970) (not e!70878))))

(assert (=> d!30429 (= res!53970 (isStrictlySorted!305 (toList!790 lt!55175)))))

(assert (=> d!30429 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55175) #b0000000000000000000000000000000000000000000000000000000000000000) lt!55993)))

(declare-fun b!108955 () Bool)

(assert (=> b!108955 (= e!70878 (containsKey!159 (toList!790 lt!55175) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30429 res!53970) b!108955))

(assert (=> d!30429 m!121555))

(assert (=> d!30429 m!121555))

(assert (=> d!30429 m!121557))

(declare-fun m!122885 () Bool)

(assert (=> d!30429 m!122885))

(assert (=> d!30429 m!121979))

(assert (=> b!108955 m!121551))

(assert (=> b!108244 d!30429))

(assert (=> b!108244 d!30259))

(assert (=> b!108244 d!30261))

(declare-fun lt!55994 () Bool)

(declare-fun d!30431 () Bool)

(assert (=> d!30431 (= lt!55994 (select (content!111 (toList!790 lt!55645)) (tuple2!2393 lt!55172 lt!55171)))))

(declare-fun e!70880 () Bool)

(assert (=> d!30431 (= lt!55994 e!70880)))

(declare-fun res!53971 () Bool)

(assert (=> d!30431 (=> (not res!53971) (not e!70880))))

(assert (=> d!30431 (= res!53971 ((_ is Cons!1619) (toList!790 lt!55645)))))

(assert (=> d!30431 (= (contains!826 (toList!790 lt!55645) (tuple2!2393 lt!55172 lt!55171)) lt!55994)))

(declare-fun b!108956 () Bool)

(declare-fun e!70879 () Bool)

(assert (=> b!108956 (= e!70880 e!70879)))

(declare-fun res!53972 () Bool)

(assert (=> b!108956 (=> res!53972 e!70879)))

(assert (=> b!108956 (= res!53972 (= (h!2217 (toList!790 lt!55645)) (tuple2!2393 lt!55172 lt!55171)))))

(declare-fun b!108957 () Bool)

(assert (=> b!108957 (= e!70879 (contains!826 (t!5730 (toList!790 lt!55645)) (tuple2!2393 lt!55172 lt!55171)))))

(assert (= (and d!30431 res!53971) b!108956))

(assert (= (and b!108956 (not res!53972)) b!108957))

(declare-fun m!122887 () Bool)

(assert (=> d!30431 m!122887))

(declare-fun m!122889 () Bool)

(assert (=> d!30431 m!122889))

(declare-fun m!122891 () Bool)

(assert (=> b!108957 m!122891))

(assert (=> b!108274 d!30431))

(declare-fun d!30433 () Bool)

(assert (=> d!30433 (= (apply!99 (+!137 lt!55468 (tuple2!2393 lt!55460 (minValue!2478 newMap!16))) lt!55458) (apply!99 lt!55468 lt!55458))))

(declare-fun lt!55995 () Unit!3307)

(assert (=> d!30433 (= lt!55995 (choose!677 lt!55468 lt!55460 (minValue!2478 newMap!16) lt!55458))))

(declare-fun e!70881 () Bool)

(assert (=> d!30433 e!70881))

(declare-fun res!53973 () Bool)

(assert (=> d!30433 (=> (not res!53973) (not e!70881))))

(assert (=> d!30433 (= res!53973 (contains!824 lt!55468 lt!55458))))

(assert (=> d!30433 (= (addApplyDifferent!75 lt!55468 lt!55460 (minValue!2478 newMap!16) lt!55458) lt!55995)))

(declare-fun b!108958 () Bool)

(assert (=> b!108958 (= e!70881 (not (= lt!55458 lt!55460)))))

(assert (= (and d!30433 res!53973) b!108958))

(assert (=> d!30433 m!121155))

(declare-fun m!122893 () Bool)

(assert (=> d!30433 m!122893))

(assert (=> d!30433 m!121145))

(declare-fun m!122895 () Bool)

(assert (=> d!30433 m!122895))

(assert (=> d!30433 m!121145))

(assert (=> d!30433 m!121151))

(assert (=> b!108001 d!30433))

(declare-fun d!30435 () Bool)

(assert (=> d!30435 (= (apply!99 lt!55462 lt!55467) (get!1344 (getValueByKey!155 (toList!790 lt!55462) lt!55467)))))

(declare-fun bs!4481 () Bool)

(assert (= bs!4481 d!30435))

(declare-fun m!122897 () Bool)

(assert (=> bs!4481 m!122897))

(assert (=> bs!4481 m!122897))

(declare-fun m!122899 () Bool)

(assert (=> bs!4481 m!122899))

(assert (=> b!108001 d!30435))

(declare-fun d!30437 () Bool)

(assert (=> d!30437 (= (apply!99 (+!137 lt!55468 (tuple2!2393 lt!55460 (minValue!2478 newMap!16))) lt!55458) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55468 (tuple2!2393 lt!55460 (minValue!2478 newMap!16)))) lt!55458)))))

(declare-fun bs!4482 () Bool)

(assert (= bs!4482 d!30437))

(declare-fun m!122901 () Bool)

(assert (=> bs!4482 m!122901))

(assert (=> bs!4482 m!122901))

(declare-fun m!122903 () Bool)

(assert (=> bs!4482 m!122903))

(assert (=> b!108001 d!30437))

(declare-fun d!30439 () Bool)

(declare-fun e!70882 () Bool)

(assert (=> d!30439 e!70882))

(declare-fun res!53974 () Bool)

(assert (=> d!30439 (=> res!53974 e!70882)))

(declare-fun lt!55996 () Bool)

(assert (=> d!30439 (= res!53974 (not lt!55996))))

(declare-fun lt!55997 () Bool)

(assert (=> d!30439 (= lt!55996 lt!55997)))

(declare-fun lt!55999 () Unit!3307)

(declare-fun e!70883 () Unit!3307)

(assert (=> d!30439 (= lt!55999 e!70883)))

(declare-fun c!19223 () Bool)

(assert (=> d!30439 (= c!19223 lt!55997)))

(assert (=> d!30439 (= lt!55997 (containsKey!159 (toList!790 (+!137 lt!55452 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16)))) lt!55457))))

(assert (=> d!30439 (= (contains!824 (+!137 lt!55452 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16))) lt!55457) lt!55996)))

(declare-fun b!108959 () Bool)

(declare-fun lt!55998 () Unit!3307)

(assert (=> b!108959 (= e!70883 lt!55998)))

(assert (=> b!108959 (= lt!55998 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (+!137 lt!55452 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16)))) lt!55457))))

(assert (=> b!108959 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55452 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16)))) lt!55457))))

(declare-fun b!108960 () Bool)

(declare-fun Unit!3372 () Unit!3307)

(assert (=> b!108960 (= e!70883 Unit!3372)))

(declare-fun b!108961 () Bool)

(assert (=> b!108961 (= e!70882 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55452 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16)))) lt!55457)))))

(assert (= (and d!30439 c!19223) b!108959))

(assert (= (and d!30439 (not c!19223)) b!108960))

(assert (= (and d!30439 (not res!53974)) b!108961))

(declare-fun m!122905 () Bool)

(assert (=> d!30439 m!122905))

(declare-fun m!122907 () Bool)

(assert (=> b!108959 m!122907))

(declare-fun m!122909 () Bool)

(assert (=> b!108959 m!122909))

(assert (=> b!108959 m!122909))

(declare-fun m!122911 () Bool)

(assert (=> b!108959 m!122911))

(assert (=> b!108961 m!122909))

(assert (=> b!108961 m!122909))

(assert (=> b!108961 m!122911))

(assert (=> b!108001 d!30439))

(declare-fun d!30441 () Bool)

(declare-fun e!70884 () Bool)

(assert (=> d!30441 e!70884))

(declare-fun res!53976 () Bool)

(assert (=> d!30441 (=> (not res!53976) (not e!70884))))

(declare-fun lt!56000 () ListLongMap!1549)

(assert (=> d!30441 (= res!53976 (contains!824 lt!56000 (_1!1207 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16)))))))

(declare-fun lt!56003 () List!1623)

(assert (=> d!30441 (= lt!56000 (ListLongMap!1550 lt!56003))))

(declare-fun lt!56001 () Unit!3307)

(declare-fun lt!56002 () Unit!3307)

(assert (=> d!30441 (= lt!56001 lt!56002)))

(assert (=> d!30441 (= (getValueByKey!155 lt!56003 (_1!1207 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30441 (= lt!56002 (lemmaContainsTupThenGetReturnValue!74 lt!56003 (_1!1207 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30441 (= lt!56003 (insertStrictlySorted!77 (toList!790 lt!55452) (_1!1207 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30441 (= (+!137 lt!55452 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16))) lt!56000)))

(declare-fun b!108962 () Bool)

(declare-fun res!53975 () Bool)

(assert (=> b!108962 (=> (not res!53975) (not e!70884))))

(assert (=> b!108962 (= res!53975 (= (getValueByKey!155 (toList!790 lt!56000) (_1!1207 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16))))))))

(declare-fun b!108963 () Bool)

(assert (=> b!108963 (= e!70884 (contains!826 (toList!790 lt!56000) (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16))))))

(assert (= (and d!30441 res!53976) b!108962))

(assert (= (and b!108962 res!53975) b!108963))

(declare-fun m!122913 () Bool)

(assert (=> d!30441 m!122913))

(declare-fun m!122915 () Bool)

(assert (=> d!30441 m!122915))

(declare-fun m!122917 () Bool)

(assert (=> d!30441 m!122917))

(declare-fun m!122919 () Bool)

(assert (=> d!30441 m!122919))

(declare-fun m!122921 () Bool)

(assert (=> b!108962 m!122921))

(declare-fun m!122923 () Bool)

(assert (=> b!108963 m!122923))

(assert (=> b!108001 d!30441))

(declare-fun d!30443 () Bool)

(declare-fun e!70885 () Bool)

(assert (=> d!30443 e!70885))

(declare-fun res!53978 () Bool)

(assert (=> d!30443 (=> (not res!53978) (not e!70885))))

(declare-fun lt!56004 () ListLongMap!1549)

(assert (=> d!30443 (= res!53978 (contains!824 lt!56004 (_1!1207 (tuple2!2393 lt!55459 (minValue!2478 newMap!16)))))))

(declare-fun lt!56007 () List!1623)

(assert (=> d!30443 (= lt!56004 (ListLongMap!1550 lt!56007))))

(declare-fun lt!56005 () Unit!3307)

(declare-fun lt!56006 () Unit!3307)

(assert (=> d!30443 (= lt!56005 lt!56006)))

(assert (=> d!30443 (= (getValueByKey!155 lt!56007 (_1!1207 (tuple2!2393 lt!55459 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55459 (minValue!2478 newMap!16)))))))

(assert (=> d!30443 (= lt!56006 (lemmaContainsTupThenGetReturnValue!74 lt!56007 (_1!1207 (tuple2!2393 lt!55459 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55459 (minValue!2478 newMap!16)))))))

(assert (=> d!30443 (= lt!56007 (insertStrictlySorted!77 (toList!790 lt!55462) (_1!1207 (tuple2!2393 lt!55459 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55459 (minValue!2478 newMap!16)))))))

(assert (=> d!30443 (= (+!137 lt!55462 (tuple2!2393 lt!55459 (minValue!2478 newMap!16))) lt!56004)))

(declare-fun b!108964 () Bool)

(declare-fun res!53977 () Bool)

(assert (=> b!108964 (=> (not res!53977) (not e!70885))))

(assert (=> b!108964 (= res!53977 (= (getValueByKey!155 (toList!790 lt!56004) (_1!1207 (tuple2!2393 lt!55459 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55459 (minValue!2478 newMap!16))))))))

(declare-fun b!108965 () Bool)

(assert (=> b!108965 (= e!70885 (contains!826 (toList!790 lt!56004) (tuple2!2393 lt!55459 (minValue!2478 newMap!16))))))

(assert (= (and d!30443 res!53978) b!108964))

(assert (= (and b!108964 res!53977) b!108965))

(declare-fun m!122925 () Bool)

(assert (=> d!30443 m!122925))

(declare-fun m!122927 () Bool)

(assert (=> d!30443 m!122927))

(declare-fun m!122929 () Bool)

(assert (=> d!30443 m!122929))

(declare-fun m!122931 () Bool)

(assert (=> d!30443 m!122931))

(declare-fun m!122933 () Bool)

(assert (=> b!108964 m!122933))

(declare-fun m!122935 () Bool)

(assert (=> b!108965 m!122935))

(assert (=> b!108001 d!30443))

(declare-fun d!30445 () Bool)

(assert (=> d!30445 (= (apply!99 (+!137 lt!55462 (tuple2!2393 lt!55459 (minValue!2478 newMap!16))) lt!55467) (apply!99 lt!55462 lt!55467))))

(declare-fun lt!56008 () Unit!3307)

(assert (=> d!30445 (= lt!56008 (choose!677 lt!55462 lt!55459 (minValue!2478 newMap!16) lt!55467))))

(declare-fun e!70886 () Bool)

(assert (=> d!30445 e!70886))

(declare-fun res!53979 () Bool)

(assert (=> d!30445 (=> (not res!53979) (not e!70886))))

(assert (=> d!30445 (= res!53979 (contains!824 lt!55462 lt!55467))))

(assert (=> d!30445 (= (addApplyDifferent!75 lt!55462 lt!55459 (minValue!2478 newMap!16) lt!55467) lt!56008)))

(declare-fun b!108966 () Bool)

(assert (=> b!108966 (= e!70886 (not (= lt!55467 lt!55459)))))

(assert (= (and d!30445 res!53979) b!108966))

(assert (=> d!30445 m!121161))

(declare-fun m!122937 () Bool)

(assert (=> d!30445 m!122937))

(assert (=> d!30445 m!121139))

(declare-fun m!122939 () Bool)

(assert (=> d!30445 m!122939))

(assert (=> d!30445 m!121139))

(assert (=> d!30445 m!121141))

(assert (=> b!108001 d!30445))

(declare-fun d!30447 () Bool)

(declare-fun e!70887 () Bool)

(assert (=> d!30447 e!70887))

(declare-fun res!53981 () Bool)

(assert (=> d!30447 (=> (not res!53981) (not e!70887))))

(declare-fun lt!56009 () ListLongMap!1549)

(assert (=> d!30447 (= res!53981 (contains!824 lt!56009 (_1!1207 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16)))))))

(declare-fun lt!56012 () List!1623)

(assert (=> d!30447 (= lt!56009 (ListLongMap!1550 lt!56012))))

(declare-fun lt!56010 () Unit!3307)

(declare-fun lt!56011 () Unit!3307)

(assert (=> d!30447 (= lt!56010 lt!56011)))

(assert (=> d!30447 (= (getValueByKey!155 lt!56012 (_1!1207 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30447 (= lt!56011 (lemmaContainsTupThenGetReturnValue!74 lt!56012 (_1!1207 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30447 (= lt!56012 (insertStrictlySorted!77 (toList!790 lt!55456) (_1!1207 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16)))))))

(assert (=> d!30447 (= (+!137 lt!55456 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16))) lt!56009)))

(declare-fun b!108967 () Bool)

(declare-fun res!53980 () Bool)

(assert (=> b!108967 (=> (not res!53980) (not e!70887))))

(assert (=> b!108967 (= res!53980 (= (getValueByKey!155 (toList!790 lt!56009) (_1!1207 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16))))))))

(declare-fun b!108968 () Bool)

(assert (=> b!108968 (= e!70887 (contains!826 (toList!790 lt!56009) (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16))))))

(assert (= (and d!30447 res!53981) b!108967))

(assert (= (and b!108967 res!53980) b!108968))

(declare-fun m!122941 () Bool)

(assert (=> d!30447 m!122941))

(declare-fun m!122943 () Bool)

(assert (=> d!30447 m!122943))

(declare-fun m!122945 () Bool)

(assert (=> d!30447 m!122945))

(declare-fun m!122947 () Bool)

(assert (=> d!30447 m!122947))

(declare-fun m!122949 () Bool)

(assert (=> b!108967 m!122949))

(declare-fun m!122951 () Bool)

(assert (=> b!108968 m!122951))

(assert (=> b!108001 d!30447))

(declare-fun d!30449 () Bool)

(assert (=> d!30449 (= (apply!99 lt!55468 lt!55458) (get!1344 (getValueByKey!155 (toList!790 lt!55468) lt!55458)))))

(declare-fun bs!4483 () Bool)

(assert (= bs!4483 d!30449))

(declare-fun m!122953 () Bool)

(assert (=> bs!4483 m!122953))

(assert (=> bs!4483 m!122953))

(declare-fun m!122955 () Bool)

(assert (=> bs!4483 m!122955))

(assert (=> b!108001 d!30449))

(declare-fun d!30451 () Bool)

(declare-fun e!70888 () Bool)

(assert (=> d!30451 e!70888))

(declare-fun res!53983 () Bool)

(assert (=> d!30451 (=> (not res!53983) (not e!70888))))

(declare-fun lt!56013 () ListLongMap!1549)

(assert (=> d!30451 (= res!53983 (contains!824 lt!56013 (_1!1207 (tuple2!2393 lt!55460 (minValue!2478 newMap!16)))))))

(declare-fun lt!56016 () List!1623)

(assert (=> d!30451 (= lt!56013 (ListLongMap!1550 lt!56016))))

(declare-fun lt!56014 () Unit!3307)

(declare-fun lt!56015 () Unit!3307)

(assert (=> d!30451 (= lt!56014 lt!56015)))

(assert (=> d!30451 (= (getValueByKey!155 lt!56016 (_1!1207 (tuple2!2393 lt!55460 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55460 (minValue!2478 newMap!16)))))))

(assert (=> d!30451 (= lt!56015 (lemmaContainsTupThenGetReturnValue!74 lt!56016 (_1!1207 (tuple2!2393 lt!55460 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55460 (minValue!2478 newMap!16)))))))

(assert (=> d!30451 (= lt!56016 (insertStrictlySorted!77 (toList!790 lt!55468) (_1!1207 (tuple2!2393 lt!55460 (minValue!2478 newMap!16))) (_2!1207 (tuple2!2393 lt!55460 (minValue!2478 newMap!16)))))))

(assert (=> d!30451 (= (+!137 lt!55468 (tuple2!2393 lt!55460 (minValue!2478 newMap!16))) lt!56013)))

(declare-fun b!108969 () Bool)

(declare-fun res!53982 () Bool)

(assert (=> b!108969 (=> (not res!53982) (not e!70888))))

(assert (=> b!108969 (= res!53982 (= (getValueByKey!155 (toList!790 lt!56013) (_1!1207 (tuple2!2393 lt!55460 (minValue!2478 newMap!16)))) (Some!160 (_2!1207 (tuple2!2393 lt!55460 (minValue!2478 newMap!16))))))))

(declare-fun b!108970 () Bool)

(assert (=> b!108970 (= e!70888 (contains!826 (toList!790 lt!56013) (tuple2!2393 lt!55460 (minValue!2478 newMap!16))))))

(assert (= (and d!30451 res!53983) b!108969))

(assert (= (and b!108969 res!53982) b!108970))

(declare-fun m!122957 () Bool)

(assert (=> d!30451 m!122957))

(declare-fun m!122959 () Bool)

(assert (=> d!30451 m!122959))

(declare-fun m!122961 () Bool)

(assert (=> d!30451 m!122961))

(declare-fun m!122963 () Bool)

(assert (=> d!30451 m!122963))

(declare-fun m!122965 () Bool)

(assert (=> b!108969 m!122965))

(declare-fun m!122967 () Bool)

(assert (=> b!108970 m!122967))

(assert (=> b!108001 d!30451))

(declare-fun d!30453 () Bool)

(assert (=> d!30453 (= (apply!99 (+!137 lt!55462 (tuple2!2393 lt!55459 (minValue!2478 newMap!16))) lt!55467) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55462 (tuple2!2393 lt!55459 (minValue!2478 newMap!16)))) lt!55467)))))

(declare-fun bs!4484 () Bool)

(assert (= bs!4484 d!30453))

(declare-fun m!122969 () Bool)

(assert (=> bs!4484 m!122969))

(assert (=> bs!4484 m!122969))

(declare-fun m!122971 () Bool)

(assert (=> bs!4484 m!122971))

(assert (=> b!108001 d!30453))

(declare-fun d!30455 () Bool)

(assert (=> d!30455 (= (apply!99 (+!137 lt!55456 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16))) lt!55472) (apply!99 lt!55456 lt!55472))))

(declare-fun lt!56017 () Unit!3307)

(assert (=> d!30455 (= lt!56017 (choose!677 lt!55456 lt!55453 (zeroValue!2478 newMap!16) lt!55472))))

(declare-fun e!70889 () Bool)

(assert (=> d!30455 e!70889))

(declare-fun res!53984 () Bool)

(assert (=> d!30455 (=> (not res!53984) (not e!70889))))

(assert (=> d!30455 (= res!53984 (contains!824 lt!55456 lt!55472))))

(assert (=> d!30455 (= (addApplyDifferent!75 lt!55456 lt!55453 (zeroValue!2478 newMap!16) lt!55472) lt!56017)))

(declare-fun b!108971 () Bool)

(assert (=> b!108971 (= e!70889 (not (= lt!55472 lt!55453)))))

(assert (= (and d!30455 res!53984) b!108971))

(assert (=> d!30455 m!121143))

(declare-fun m!122973 () Bool)

(assert (=> d!30455 m!122973))

(assert (=> d!30455 m!121157))

(declare-fun m!122975 () Bool)

(assert (=> d!30455 m!122975))

(assert (=> d!30455 m!121157))

(assert (=> d!30455 m!121163))

(assert (=> b!108001 d!30455))

(declare-fun d!30457 () Bool)

(assert (=> d!30457 (= (apply!99 lt!55456 lt!55472) (get!1344 (getValueByKey!155 (toList!790 lt!55456) lt!55472)))))

(declare-fun bs!4485 () Bool)

(assert (= bs!4485 d!30457))

(declare-fun m!122977 () Bool)

(assert (=> bs!4485 m!122977))

(assert (=> bs!4485 m!122977))

(declare-fun m!122979 () Bool)

(assert (=> bs!4485 m!122979))

(assert (=> b!108001 d!30457))

(assert (=> b!108001 d!30365))

(declare-fun d!30459 () Bool)

(assert (=> d!30459 (= (apply!99 (+!137 lt!55456 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16))) lt!55472) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55456 (tuple2!2393 lt!55453 (zeroValue!2478 newMap!16)))) lt!55472)))))

(declare-fun bs!4486 () Bool)

(assert (= bs!4486 d!30459))

(declare-fun m!122981 () Bool)

(assert (=> bs!4486 m!122981))

(assert (=> bs!4486 m!122981))

(declare-fun m!122983 () Bool)

(assert (=> bs!4486 m!122983))

(assert (=> b!108001 d!30459))

(declare-fun d!30461 () Bool)

(assert (=> d!30461 (contains!824 (+!137 lt!55452 (tuple2!2393 lt!55451 (zeroValue!2478 newMap!16))) lt!55457)))

(declare-fun lt!56018 () Unit!3307)

(assert (=> d!30461 (= lt!56018 (choose!678 lt!55452 lt!55451 (zeroValue!2478 newMap!16) lt!55457))))

(assert (=> d!30461 (contains!824 lt!55452 lt!55457)))

(assert (=> d!30461 (= (addStillContains!75 lt!55452 lt!55451 (zeroValue!2478 newMap!16) lt!55457) lt!56018)))

(declare-fun bs!4487 () Bool)

(assert (= bs!4487 d!30461))

(assert (=> bs!4487 m!121147))

(assert (=> bs!4487 m!121147))

(assert (=> bs!4487 m!121159))

(declare-fun m!122985 () Bool)

(assert (=> bs!4487 m!122985))

(declare-fun m!122987 () Bool)

(assert (=> bs!4487 m!122987))

(assert (=> b!108001 d!30461))

(declare-fun d!30463 () Bool)

(assert (=> d!30463 (= (get!1344 (getValueByKey!155 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2910 (getValueByKey!155 (toList!790 lt!55124) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29729 d!30463))

(assert (=> d!29729 d!29967))

(declare-fun d!30465 () Bool)

(assert (=> d!30465 (= (apply!99 lt!55576 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!155 (toList!790 lt!55576) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4488 () Bool)

(assert (= bs!4488 d!30465))

(assert (=> bs!4488 m!121991))

(assert (=> bs!4488 m!121991))

(declare-fun m!122989 () Bool)

(assert (=> bs!4488 m!122989))

(assert (=> b!108167 d!30465))

(declare-fun d!30467 () Bool)

(declare-fun res!53985 () Bool)

(declare-fun e!70890 () Bool)

(assert (=> d!30467 (=> res!53985 e!70890)))

(assert (=> d!30467 (= res!53985 (and ((_ is Cons!1619) (toList!790 call!11426)) (= (_1!1207 (h!2217 (toList!790 call!11426))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (=> d!30467 (= (containsKey!159 (toList!790 call!11426) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) e!70890)))

(declare-fun b!108972 () Bool)

(declare-fun e!70891 () Bool)

(assert (=> b!108972 (= e!70890 e!70891)))

(declare-fun res!53986 () Bool)

(assert (=> b!108972 (=> (not res!53986) (not e!70891))))

(assert (=> b!108972 (= res!53986 (and (or (not ((_ is Cons!1619) (toList!790 call!11426))) (bvsle (_1!1207 (h!2217 (toList!790 call!11426))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))) ((_ is Cons!1619) (toList!790 call!11426)) (bvslt (_1!1207 (h!2217 (toList!790 call!11426))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(declare-fun b!108973 () Bool)

(assert (=> b!108973 (= e!70891 (containsKey!159 (t!5730 (toList!790 call!11426)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (= (and d!30467 (not res!53985)) b!108972))

(assert (= (and b!108972 res!53986) b!108973))

(assert (=> b!108973 m!120387))

(declare-fun m!122991 () Bool)

(assert (=> b!108973 m!122991))

(assert (=> d!29895 d!30467))

(declare-fun d!30469 () Bool)

(assert (=> d!30469 (= ($colon$colon!81 e!70361 (ite c!18974 (h!2217 (toList!790 (+!137 lt!54981 lt!54977))) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985)))) (Cons!1619 (ite c!18974 (h!2217 (toList!790 (+!137 lt!54981 lt!54977))) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))) e!70361))))

(assert (=> bm!11465 d!30469))

(declare-fun d!30471 () Bool)

(assert (=> d!30471 (= (apply!99 lt!55576 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!155 (toList!790 lt!55576) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4489 () Bool)

(assert (= bs!4489 d!30471))

(assert (=> bs!4489 m!121857))

(assert (=> bs!4489 m!121857))

(declare-fun m!122993 () Bool)

(assert (=> bs!4489 m!122993))

(assert (=> b!108156 d!30471))

(declare-fun d!30473 () Bool)

(assert (=> d!30473 (= (isDefined!109 (getValueByKey!155 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253)))) (not (isEmpty!379 (getValueByKey!155 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))))))))

(declare-fun bs!4490 () Bool)

(assert (= bs!4490 d!30473))

(assert (=> bs!4490 m!121263))

(declare-fun m!122995 () Bool)

(assert (=> bs!4490 m!122995))

(assert (=> b!108063 d!30473))

(declare-fun b!108976 () Bool)

(declare-fun e!70893 () Option!161)

(assert (=> b!108976 (= e!70893 (getValueByKey!155 (t!5730 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))))))

(declare-fun b!108975 () Bool)

(declare-fun e!70892 () Option!161)

(assert (=> b!108975 (= e!70892 e!70893)))

(declare-fun c!19225 () Bool)

(assert (=> b!108975 (= c!19225 (and ((_ is Cons!1619) (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))) (not (= (_1!1207 (h!2217 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))))))))

(declare-fun d!30475 () Bool)

(declare-fun c!19224 () Bool)

(assert (=> d!30475 (= c!19224 (and ((_ is Cons!1619) (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))) (= (_1!1207 (h!2217 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253)))))))

(assert (=> d!30475 (= (getValueByKey!155 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))) e!70892)))

(declare-fun b!108977 () Bool)

(assert (=> b!108977 (= e!70893 None!159)))

(declare-fun b!108974 () Bool)

(assert (=> b!108974 (= e!70892 (Some!160 (_2!1207 (h!2217 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))))))

(assert (= (and d!30475 c!19224) b!108974))

(assert (= (and d!30475 (not c!19224)) b!108975))

(assert (= (and b!108975 c!19225) b!108976))

(assert (= (and b!108975 (not c!19225)) b!108977))

(assert (=> b!108976 m!120729))

(declare-fun m!122997 () Bool)

(assert (=> b!108976 m!122997))

(assert (=> b!108063 d!30475))

(declare-fun d!30477 () Bool)

(declare-fun res!53987 () Bool)

(declare-fun e!70894 () Bool)

(assert (=> d!30477 (=> res!53987 e!70894)))

(assert (=> d!30477 (= res!53987 (and ((_ is Cons!1619) lt!55146) (= (_1!1207 (h!2217 lt!55146)) (_1!1207 lt!54985))))))

(assert (=> d!30477 (= (containsKey!159 lt!55146 (_1!1207 lt!54985)) e!70894)))

(declare-fun b!108978 () Bool)

(declare-fun e!70895 () Bool)

(assert (=> b!108978 (= e!70894 e!70895)))

(declare-fun res!53988 () Bool)

(assert (=> b!108978 (=> (not res!53988) (not e!70895))))

(assert (=> b!108978 (= res!53988 (and (or (not ((_ is Cons!1619) lt!55146)) (bvsle (_1!1207 (h!2217 lt!55146)) (_1!1207 lt!54985))) ((_ is Cons!1619) lt!55146) (bvslt (_1!1207 (h!2217 lt!55146)) (_1!1207 lt!54985))))))

(declare-fun b!108979 () Bool)

(assert (=> b!108979 (= e!70895 (containsKey!159 (t!5730 lt!55146) (_1!1207 lt!54985)))))

(assert (= (and d!30477 (not res!53987)) b!108978))

(assert (= (and b!108978 res!53988) b!108979))

(declare-fun m!122999 () Bool)

(assert (=> b!108979 m!122999))

(assert (=> b!107948 d!30477))

(declare-fun d!30479 () Bool)

(assert (=> d!30479 (= (isDefined!109 (getValueByKey!155 (toList!790 lt!55176) (_1!1207 lt!54985))) (not (isEmpty!379 (getValueByKey!155 (toList!790 lt!55176) (_1!1207 lt!54985)))))))

(declare-fun bs!4491 () Bool)

(assert (= bs!4491 d!30479))

(assert (=> bs!4491 m!120687))

(declare-fun m!123001 () Bool)

(assert (=> bs!4491 m!123001))

(assert (=> b!108097 d!30479))

(assert (=> b!108097 d!29891))

(assert (=> d!29925 d!29929))

(assert (=> d!29925 d!29927))

(declare-fun d!30481 () Bool)

(assert (=> d!30481 (not (contains!824 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)) lt!55170))))

(assert (=> d!30481 true))

(declare-fun _$36!322 () Unit!3307)

(assert (=> d!30481 (= (choose!686 lt!55169 lt!55172 lt!55171 lt!55170) _$36!322)))

(declare-fun bs!4492 () Bool)

(assert (= bs!4492 d!30481))

(assert (=> bs!4492 m!120669))

(assert (=> bs!4492 m!120669))

(assert (=> bs!4492 m!120671))

(assert (=> d!29925 d!30481))

(declare-fun d!30483 () Bool)

(declare-fun e!70896 () Bool)

(assert (=> d!30483 e!70896))

(declare-fun res!53989 () Bool)

(assert (=> d!30483 (=> res!53989 e!70896)))

(declare-fun lt!56019 () Bool)

(assert (=> d!30483 (= res!53989 (not lt!56019))))

(declare-fun lt!56020 () Bool)

(assert (=> d!30483 (= lt!56019 lt!56020)))

(declare-fun lt!56022 () Unit!3307)

(declare-fun e!70897 () Unit!3307)

(assert (=> d!30483 (= lt!56022 e!70897)))

(declare-fun c!19226 () Bool)

(assert (=> d!30483 (= c!19226 lt!56020)))

(assert (=> d!30483 (= lt!56020 (containsKey!159 (toList!790 lt!55169) lt!55170))))

(assert (=> d!30483 (= (contains!824 lt!55169 lt!55170) lt!56019)))

(declare-fun b!108981 () Bool)

(declare-fun lt!56021 () Unit!3307)

(assert (=> b!108981 (= e!70897 lt!56021)))

(assert (=> b!108981 (= lt!56021 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55169) lt!55170))))

(assert (=> b!108981 (isDefined!109 (getValueByKey!155 (toList!790 lt!55169) lt!55170))))

(declare-fun b!108982 () Bool)

(declare-fun Unit!3373 () Unit!3307)

(assert (=> b!108982 (= e!70897 Unit!3373)))

(declare-fun b!108983 () Bool)

(assert (=> b!108983 (= e!70896 (isDefined!109 (getValueByKey!155 (toList!790 lt!55169) lt!55170)))))

(assert (= (and d!30483 c!19226) b!108981))

(assert (= (and d!30483 (not c!19226)) b!108982))

(assert (= (and d!30483 (not res!53989)) b!108983))

(declare-fun m!123003 () Bool)

(assert (=> d!30483 m!123003))

(declare-fun m!123005 () Bool)

(assert (=> b!108981 m!123005))

(declare-fun m!123007 () Bool)

(assert (=> b!108981 m!123007))

(assert (=> b!108981 m!123007))

(declare-fun m!123009 () Bool)

(assert (=> b!108981 m!123009))

(assert (=> b!108983 m!123007))

(assert (=> b!108983 m!123007))

(assert (=> b!108983 m!123009))

(assert (=> d!29925 d!30483))

(declare-fun d!30485 () Bool)

(declare-fun e!70898 () Bool)

(assert (=> d!30485 e!70898))

(declare-fun res!53990 () Bool)

(assert (=> d!30485 (=> res!53990 e!70898)))

(declare-fun lt!56023 () Bool)

(assert (=> d!30485 (= res!53990 (not lt!56023))))

(declare-fun lt!56024 () Bool)

(assert (=> d!30485 (= lt!56023 lt!56024)))

(declare-fun lt!56026 () Unit!3307)

(declare-fun e!70899 () Unit!3307)

(assert (=> d!30485 (= lt!56026 e!70899)))

(declare-fun c!19227 () Bool)

(assert (=> d!30485 (= c!19227 lt!56024)))

(assert (=> d!30485 (= lt!56024 (containsKey!159 (toList!790 lt!55492) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!30485 (= (contains!824 lt!55492 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!56023)))

(declare-fun b!108984 () Bool)

(declare-fun lt!56025 () Unit!3307)

(assert (=> b!108984 (= e!70899 lt!56025)))

(assert (=> b!108984 (= lt!56025 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55492) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> b!108984 (isDefined!109 (getValueByKey!155 (toList!790 lt!55492) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108985 () Bool)

(declare-fun Unit!3374 () Unit!3307)

(assert (=> b!108985 (= e!70899 Unit!3374)))

(declare-fun b!108986 () Bool)

(assert (=> b!108986 (= e!70898 (isDefined!109 (getValueByKey!155 (toList!790 lt!55492) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30485 c!19227) b!108984))

(assert (= (and d!30485 (not c!19227)) b!108985))

(assert (= (and d!30485 (not res!53990)) b!108986))

(declare-fun m!123011 () Bool)

(assert (=> d!30485 m!123011))

(declare-fun m!123013 () Bool)

(assert (=> b!108984 m!123013))

(assert (=> b!108984 m!121229))

(assert (=> b!108984 m!121229))

(declare-fun m!123015 () Bool)

(assert (=> b!108984 m!123015))

(assert (=> b!108986 m!121229))

(assert (=> b!108986 m!121229))

(assert (=> b!108986 m!123015))

(assert (=> d!29847 d!30485))

(declare-fun b!108989 () Bool)

(declare-fun e!70901 () Option!161)

(assert (=> b!108989 (= e!70901 (getValueByKey!155 (t!5730 lt!55495) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108988 () Bool)

(declare-fun e!70900 () Option!161)

(assert (=> b!108988 (= e!70900 e!70901)))

(declare-fun c!19229 () Bool)

(assert (=> b!108988 (= c!19229 (and ((_ is Cons!1619) lt!55495) (not (= (_1!1207 (h!2217 lt!55495)) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun d!30487 () Bool)

(declare-fun c!19228 () Bool)

(assert (=> d!30487 (= c!19228 (and ((_ is Cons!1619) lt!55495) (= (_1!1207 (h!2217 lt!55495)) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30487 (= (getValueByKey!155 lt!55495 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!70900)))

(declare-fun b!108990 () Bool)

(assert (=> b!108990 (= e!70901 None!159)))

(declare-fun b!108987 () Bool)

(assert (=> b!108987 (= e!70900 (Some!160 (_2!1207 (h!2217 lt!55495))))))

(assert (= (and d!30487 c!19228) b!108987))

(assert (= (and d!30487 (not c!19228)) b!108988))

(assert (= (and b!108988 c!19229) b!108989))

(assert (= (and b!108988 (not c!19229)) b!108990))

(declare-fun m!123017 () Bool)

(assert (=> b!108989 m!123017))

(assert (=> d!29847 d!30487))

(declare-fun d!30489 () Bool)

(assert (=> d!30489 (= (getValueByKey!155 lt!55495 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!56027 () Unit!3307)

(assert (=> d!30489 (= lt!56027 (choose!679 lt!55495 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun e!70902 () Bool)

(assert (=> d!30489 e!70902))

(declare-fun res!53991 () Bool)

(assert (=> d!30489 (=> (not res!53991) (not e!70902))))

(assert (=> d!30489 (= res!53991 (isStrictlySorted!305 lt!55495))))

(assert (=> d!30489 (= (lemmaContainsTupThenGetReturnValue!74 lt!55495 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!56027)))

(declare-fun b!108991 () Bool)

(declare-fun res!53992 () Bool)

(assert (=> b!108991 (=> (not res!53992) (not e!70902))))

(assert (=> b!108991 (= res!53992 (containsKey!159 lt!55495 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108992 () Bool)

(assert (=> b!108992 (= e!70902 (contains!826 lt!55495 (tuple2!2393 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30489 res!53991) b!108991))

(assert (= (and b!108991 res!53992) b!108992))

(assert (=> d!30489 m!121223))

(declare-fun m!123019 () Bool)

(assert (=> d!30489 m!123019))

(declare-fun m!123021 () Bool)

(assert (=> d!30489 m!123021))

(declare-fun m!123023 () Bool)

(assert (=> b!108991 m!123023))

(declare-fun m!123025 () Bool)

(assert (=> b!108992 m!123025))

(assert (=> d!29847 d!30489))

(declare-fun bm!11556 () Bool)

(declare-fun call!11560 () List!1623)

(declare-fun call!11559 () List!1623)

(assert (=> bm!11556 (= call!11560 call!11559)))

(declare-fun b!108993 () Bool)

(declare-fun e!70907 () List!1623)

(assert (=> b!108993 (= e!70907 call!11560)))

(declare-fun b!108995 () Bool)

(declare-fun e!70904 () List!1623)

(declare-fun call!11561 () List!1623)

(assert (=> b!108995 (= e!70904 call!11561)))

(declare-fun b!108996 () Bool)

(declare-fun e!70903 () Bool)

(declare-fun lt!56028 () List!1623)

(assert (=> b!108996 (= e!70903 (contains!826 lt!56028 (tuple2!2393 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!108997 () Bool)

(declare-fun e!70905 () List!1623)

(assert (=> b!108997 (= e!70905 (insertStrictlySorted!77 (t!5730 (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!108998 () Bool)

(declare-fun e!70906 () List!1623)

(assert (=> b!108998 (= e!70906 call!11559)))

(declare-fun c!19230 () Bool)

(declare-fun bm!11557 () Bool)

(assert (=> bm!11557 (= call!11559 ($colon$colon!81 e!70905 (ite c!19230 (h!2217 (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) (tuple2!2393 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun c!19232 () Bool)

(assert (=> bm!11557 (= c!19232 c!19230)))

(declare-fun bm!11558 () Bool)

(assert (=> bm!11558 (= call!11561 call!11560)))

(declare-fun c!19233 () Bool)

(declare-fun b!108999 () Bool)

(assert (=> b!108999 (= c!19233 (and ((_ is Cons!1619) (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) (bvsgt (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> b!108999 (= e!70907 e!70904)))

(declare-fun b!108994 () Bool)

(declare-fun res!53994 () Bool)

(assert (=> b!108994 (=> (not res!53994) (not e!70903))))

(assert (=> b!108994 (= res!53994 (containsKey!159 lt!56028 (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun d!30491 () Bool)

(assert (=> d!30491 e!70903))

(declare-fun res!53993 () Bool)

(assert (=> d!30491 (=> (not res!53993) (not e!70903))))

(assert (=> d!30491 (= res!53993 (isStrictlySorted!305 lt!56028))))

(assert (=> d!30491 (= lt!56028 e!70906)))

(assert (=> d!30491 (= c!19230 (and ((_ is Cons!1619) (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) (bvslt (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30491 (isStrictlySorted!305 (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!30491 (= (insertStrictlySorted!77 (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!56028)))

(declare-fun b!109000 () Bool)

(assert (=> b!109000 (= e!70904 call!11561)))

(declare-fun c!19231 () Bool)

(declare-fun b!109001 () Bool)

(assert (=> b!109001 (= e!70905 (ite c!19231 (t!5730 (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) (ite c!19233 (Cons!1619 (h!2217 (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) (t!5730 (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))) Nil!1620)))))

(declare-fun b!109002 () Bool)

(assert (=> b!109002 (= e!70906 e!70907)))

(assert (=> b!109002 (= c!19231 (and ((_ is Cons!1619) (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) (= (_1!1207 (h!2217 (toList!790 (+!137 lt!54981 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))) (_1!1207 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30491 c!19230) b!108998))

(assert (= (and d!30491 (not c!19230)) b!109002))

(assert (= (and b!109002 c!19231) b!108993))

(assert (= (and b!109002 (not c!19231)) b!108999))

(assert (= (and b!108999 c!19233) b!109000))

(assert (= (and b!108999 (not c!19233)) b!108995))

(assert (= (or b!109000 b!108995) bm!11558))

(assert (= (or b!108993 bm!11558) bm!11556))

(assert (= (or b!108998 bm!11556) bm!11557))

(assert (= (and bm!11557 c!19232) b!108997))

(assert (= (and bm!11557 (not c!19232)) b!109001))

(assert (= (and d!30491 res!53993) b!108994))

(assert (= (and b!108994 res!53994) b!108996))

(declare-fun m!123027 () Bool)

(assert (=> b!108996 m!123027))

(declare-fun m!123029 () Bool)

(assert (=> bm!11557 m!123029))

(declare-fun m!123031 () Bool)

(assert (=> b!108994 m!123031))

(declare-fun m!123033 () Bool)

(assert (=> d!30491 m!123033))

(declare-fun m!123035 () Bool)

(assert (=> d!30491 m!123035))

(declare-fun m!123037 () Bool)

(assert (=> b!108997 m!123037))

(assert (=> d!29847 d!30491))

(declare-fun d!30493 () Bool)

(assert (=> d!30493 (= (isDefined!109 (getValueByKey!155 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!379 (getValueByKey!155 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4493 () Bool)

(assert (= bs!4493 d!30493))

(assert (=> bs!4493 m!121173))

(declare-fun m!123039 () Bool)

(assert (=> bs!4493 m!123039))

(assert (=> b!108023 d!30493))

(assert (=> b!108023 d!30123))

(declare-fun d!30495 () Bool)

(declare-fun res!53995 () Bool)

(declare-fun e!70908 () Bool)

(assert (=> d!30495 (=> res!53995 e!70908)))

(assert (=> d!30495 (= res!53995 (and ((_ is Cons!1619) lt!55179) (= (_1!1207 (h!2217 lt!55179)) (_1!1207 lt!54985))))))

(assert (=> d!30495 (= (containsKey!159 lt!55179 (_1!1207 lt!54985)) e!70908)))

(declare-fun b!109003 () Bool)

(declare-fun e!70909 () Bool)

(assert (=> b!109003 (= e!70908 e!70909)))

(declare-fun res!53996 () Bool)

(assert (=> b!109003 (=> (not res!53996) (not e!70909))))

(assert (=> b!109003 (= res!53996 (and (or (not ((_ is Cons!1619) lt!55179)) (bvsle (_1!1207 (h!2217 lt!55179)) (_1!1207 lt!54985))) ((_ is Cons!1619) lt!55179) (bvslt (_1!1207 (h!2217 lt!55179)) (_1!1207 lt!54985))))))

(declare-fun b!109004 () Bool)

(assert (=> b!109004 (= e!70909 (containsKey!159 (t!5730 lt!55179) (_1!1207 lt!54985)))))

(assert (= (and d!30495 (not res!53995)) b!109003))

(assert (= (and b!109003 res!53996) b!109004))

(declare-fun m!123041 () Bool)

(assert (=> b!109004 m!123041))

(assert (=> b!108102 d!30495))

(declare-fun d!30497 () Bool)

(assert (=> d!30497 (= (isEmpty!379 (getValueByKey!155 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))) (not ((_ is Some!160) (getValueByKey!155 (toList!790 lt!54978) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))))

(assert (=> d!29835 d!30497))

(assert (=> b!108204 d!30013))

(assert (=> b!108204 d!29831))

(declare-fun d!30499 () Bool)

(declare-fun lt!56029 () Bool)

(assert (=> d!30499 (= lt!56029 (select (content!112 Nil!1619) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!70910 () Bool)

(assert (=> d!30499 (= lt!56029 e!70910)))

(declare-fun res!53997 () Bool)

(assert (=> d!30499 (=> (not res!53997) (not e!70910))))

(assert (=> d!30499 (= res!53997 ((_ is Cons!1618) Nil!1619))))

(assert (=> d!30499 (= (contains!825 Nil!1619 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) lt!56029)))

(declare-fun b!109005 () Bool)

(declare-fun e!70911 () Bool)

(assert (=> b!109005 (= e!70910 e!70911)))

(declare-fun res!53998 () Bool)

(assert (=> b!109005 (=> res!53998 e!70911)))

(assert (=> b!109005 (= res!53998 (= (h!2216 Nil!1619) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109006 () Bool)

(assert (=> b!109006 (= e!70911 (contains!825 (t!5729 Nil!1619) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!30499 res!53997) b!109005))

(assert (= (and b!109005 (not res!53998)) b!109006))

(assert (=> d!30499 m!121443))

(assert (=> d!30499 m!120769))

(declare-fun m!123043 () Bool)

(assert (=> d!30499 m!123043))

(assert (=> b!109006 m!120769))

(declare-fun m!123045 () Bool)

(assert (=> b!109006 m!123045))

(assert (=> b!108171 d!30499))

(declare-fun d!30501 () Bool)

(declare-fun e!70912 () Bool)

(assert (=> d!30501 e!70912))

(declare-fun res!53999 () Bool)

(assert (=> d!30501 (=> res!53999 e!70912)))

(declare-fun lt!56030 () Bool)

(assert (=> d!30501 (= res!53999 (not lt!56030))))

(declare-fun lt!56031 () Bool)

(assert (=> d!30501 (= lt!56030 lt!56031)))

(declare-fun lt!56033 () Unit!3307)

(declare-fun e!70913 () Unit!3307)

(assert (=> d!30501 (= lt!56033 e!70913)))

(declare-fun c!19234 () Bool)

(assert (=> d!30501 (= c!19234 lt!56031)))

(assert (=> d!30501 (= lt!56031 (containsKey!159 (toList!790 lt!55312) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30501 (= (contains!824 lt!55312 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) lt!56030)))

(declare-fun b!109007 () Bool)

(declare-fun lt!56032 () Unit!3307)

(assert (=> b!109007 (= e!70913 lt!56032)))

(assert (=> b!109007 (= lt!56032 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55312) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> b!109007 (isDefined!109 (getValueByKey!155 (toList!790 lt!55312) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!109008 () Bool)

(declare-fun Unit!3375 () Unit!3307)

(assert (=> b!109008 (= e!70913 Unit!3375)))

(declare-fun b!109009 () Bool)

(assert (=> b!109009 (= e!70912 (isDefined!109 (getValueByKey!155 (toList!790 lt!55312) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(assert (= (and d!30501 c!19234) b!109007))

(assert (= (and d!30501 (not c!19234)) b!109008))

(assert (= (and d!30501 (not res!53999)) b!109009))

(declare-fun m!123047 () Bool)

(assert (=> d!30501 m!123047))

(declare-fun m!123049 () Bool)

(assert (=> b!109007 m!123049))

(assert (=> b!109007 m!120885))

(assert (=> b!109007 m!120885))

(declare-fun m!123051 () Bool)

(assert (=> b!109007 m!123051))

(assert (=> b!109009 m!120885))

(assert (=> b!109009 m!120885))

(assert (=> b!109009 m!123051))

(assert (=> d!29757 d!30501))

(declare-fun e!70915 () Option!161)

(declare-fun b!109012 () Bool)

(assert (=> b!109012 (= e!70915 (getValueByKey!155 (t!5730 lt!55315) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!109011 () Bool)

(declare-fun e!70914 () Option!161)

(assert (=> b!109011 (= e!70914 e!70915)))

(declare-fun c!19236 () Bool)

(assert (=> b!109011 (= c!19236 (and ((_ is Cons!1619) lt!55315) (not (= (_1!1207 (h!2217 lt!55315)) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))))

(declare-fun d!30503 () Bool)

(declare-fun c!19235 () Bool)

(assert (=> d!30503 (= c!19235 (and ((_ is Cons!1619) lt!55315) (= (_1!1207 (h!2217 lt!55315)) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(assert (=> d!30503 (= (getValueByKey!155 lt!55315 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) e!70914)))

(declare-fun b!109013 () Bool)

(assert (=> b!109013 (= e!70915 None!159)))

(declare-fun b!109010 () Bool)

(assert (=> b!109010 (= e!70914 (Some!160 (_2!1207 (h!2217 lt!55315))))))

(assert (= (and d!30503 c!19235) b!109010))

(assert (= (and d!30503 (not c!19235)) b!109011))

(assert (= (and b!109011 c!19236) b!109012))

(assert (= (and b!109011 (not c!19236)) b!109013))

(declare-fun m!123053 () Bool)

(assert (=> b!109012 m!123053))

(assert (=> d!29757 d!30503))

(declare-fun d!30505 () Bool)

(assert (=> d!30505 (= (getValueByKey!155 lt!55315 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) (Some!160 (_2!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun lt!56034 () Unit!3307)

(assert (=> d!30505 (= lt!56034 (choose!679 lt!55315 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (_2!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun e!70916 () Bool)

(assert (=> d!30505 e!70916))

(declare-fun res!54000 () Bool)

(assert (=> d!30505 (=> (not res!54000) (not e!70916))))

(assert (=> d!30505 (= res!54000 (isStrictlySorted!305 lt!55315))))

(assert (=> d!30505 (= (lemmaContainsTupThenGetReturnValue!74 lt!55315 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (_2!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) lt!56034)))

(declare-fun b!109014 () Bool)

(declare-fun res!54001 () Bool)

(assert (=> b!109014 (=> (not res!54001) (not e!70916))))

(assert (=> b!109014 (= res!54001 (containsKey!159 lt!55315 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!109015 () Bool)

(assert (=> b!109015 (= e!70916 (contains!826 lt!55315 (tuple2!2393 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (_2!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(assert (= (and d!30505 res!54000) b!109014))

(assert (= (and b!109014 res!54001) b!109015))

(assert (=> d!30505 m!120879))

(declare-fun m!123055 () Bool)

(assert (=> d!30505 m!123055))

(declare-fun m!123057 () Bool)

(assert (=> d!30505 m!123057))

(declare-fun m!123059 () Bool)

(assert (=> b!109014 m!123059))

(declare-fun m!123061 () Bool)

(assert (=> b!109015 m!123061))

(assert (=> d!29757 d!30505))

(declare-fun bm!11559 () Bool)

(declare-fun call!11563 () List!1623)

(declare-fun call!11562 () List!1623)

(assert (=> bm!11559 (= call!11563 call!11562)))

(declare-fun b!109016 () Bool)

(declare-fun e!70921 () List!1623)

(assert (=> b!109016 (= e!70921 call!11563)))

(declare-fun b!109018 () Bool)

(declare-fun e!70918 () List!1623)

(declare-fun call!11564 () List!1623)

(assert (=> b!109018 (= e!70918 call!11564)))

(declare-fun b!109019 () Bool)

(declare-fun lt!56035 () List!1623)

(declare-fun e!70917 () Bool)

(assert (=> b!109019 (= e!70917 (contains!826 lt!56035 (tuple2!2393 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (_2!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun e!70919 () List!1623)

(declare-fun b!109020 () Bool)

(assert (=> b!109020 (= e!70919 (insertStrictlySorted!77 (t!5730 (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344)))) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (_2!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!109021 () Bool)

(declare-fun e!70920 () List!1623)

(assert (=> b!109021 (= e!70920 call!11562)))

(declare-fun bm!11560 () Bool)

(declare-fun c!19237 () Bool)

(assert (=> bm!11560 (= call!11562 ($colon$colon!81 e!70919 (ite c!19237 (h!2217 (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344)))) (tuple2!2393 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (_2!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))))

(declare-fun c!19239 () Bool)

(assert (=> bm!11560 (= c!19239 c!19237)))

(declare-fun bm!11561 () Bool)

(assert (=> bm!11561 (= call!11564 call!11563)))

(declare-fun c!19240 () Bool)

(declare-fun b!109022 () Bool)

(assert (=> b!109022 (= c!19240 (and ((_ is Cons!1619) (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344)))) (bvsgt (_1!1207 (h!2217 (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344))))) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(assert (=> b!109022 (= e!70921 e!70918)))

(declare-fun b!109017 () Bool)

(declare-fun res!54003 () Bool)

(assert (=> b!109017 (=> (not res!54003) (not e!70917))))

(assert (=> b!109017 (= res!54003 (containsKey!159 lt!56035 (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun d!30507 () Bool)

(assert (=> d!30507 e!70917))

(declare-fun res!54002 () Bool)

(assert (=> d!30507 (=> (not res!54002) (not e!70917))))

(assert (=> d!30507 (= res!54002 (isStrictlySorted!305 lt!56035))))

(assert (=> d!30507 (= lt!56035 e!70920)))

(assert (=> d!30507 (= c!19237 (and ((_ is Cons!1619) (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344)))) (bvslt (_1!1207 (h!2217 (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344))))) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(assert (=> d!30507 (isStrictlySorted!305 (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344))))))

(assert (=> d!30507 (= (insertStrictlySorted!77 (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344))) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) (_2!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) lt!56035)))

(declare-fun b!109023 () Bool)

(assert (=> b!109023 (= e!70918 call!11564)))

(declare-fun c!19238 () Bool)

(declare-fun b!109024 () Bool)

(assert (=> b!109024 (= e!70919 (ite c!19238 (t!5730 (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344)))) (ite c!19240 (Cons!1619 (h!2217 (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344)))) (t!5730 (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344))))) Nil!1620)))))

(declare-fun b!109025 () Bool)

(assert (=> b!109025 (= e!70920 e!70921)))

(assert (=> b!109025 (= c!19238 (and ((_ is Cons!1619) (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344)))) (= (_1!1207 (h!2217 (toList!790 (ite c!18828 call!11345 (ite c!18829 call!11343 call!11344))))) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(assert (= (and d!30507 c!19237) b!109021))

(assert (= (and d!30507 (not c!19237)) b!109025))

(assert (= (and b!109025 c!19238) b!109016))

(assert (= (and b!109025 (not c!19238)) b!109022))

(assert (= (and b!109022 c!19240) b!109023))

(assert (= (and b!109022 (not c!19240)) b!109018))

(assert (= (or b!109023 b!109018) bm!11561))

(assert (= (or b!109016 bm!11561) bm!11559))

(assert (= (or b!109021 bm!11559) bm!11560))

(assert (= (and bm!11560 c!19239) b!109020))

(assert (= (and bm!11560 (not c!19239)) b!109024))

(assert (= (and d!30507 res!54002) b!109017))

(assert (= (and b!109017 res!54003) b!109019))

(declare-fun m!123063 () Bool)

(assert (=> b!109019 m!123063))

(declare-fun m!123065 () Bool)

(assert (=> bm!11560 m!123065))

(declare-fun m!123067 () Bool)

(assert (=> b!109017 m!123067))

(declare-fun m!123069 () Bool)

(assert (=> d!30507 m!123069))

(declare-fun m!123071 () Bool)

(assert (=> d!30507 m!123071))

(declare-fun m!123073 () Bool)

(assert (=> b!109020 m!123073))

(assert (=> d!29757 d!30507))

(declare-fun d!30509 () Bool)

(assert (=> d!30509 (isDefined!109 (getValueByKey!155 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!56036 () Unit!3307)

(assert (=> d!30509 (= lt!56036 (choose!681 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!70922 () Bool)

(assert (=> d!30509 e!70922))

(declare-fun res!54004 () Bool)

(assert (=> d!30509 (=> (not res!54004) (not e!70922))))

(assert (=> d!30509 (= res!54004 (isStrictlySorted!305 (toList!790 lt!55124)))))

(assert (=> d!30509 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!56036)))

(declare-fun b!109026 () Bool)

(assert (=> b!109026 (= e!70922 (containsKey!159 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30509 res!54004) b!109026))

(assert (=> d!30509 m!120545))

(assert (=> d!30509 m!121097))

(assert (=> d!30509 m!121097))

(assert (=> d!30509 m!121455))

(assert (=> d!30509 m!120545))

(declare-fun m!123075 () Bool)

(assert (=> d!30509 m!123075))

(assert (=> d!30509 m!121769))

(assert (=> b!109026 m!120545))

(assert (=> b!109026 m!121451))

(assert (=> b!108196 d!30509))

(assert (=> b!108196 d!30339))

(assert (=> b!108196 d!30341))

(declare-fun lt!56037 () Bool)

(declare-fun d!30511 () Bool)

(assert (=> d!30511 (= lt!56037 (select (content!111 (toList!790 lt!55295)) (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun e!70924 () Bool)

(assert (=> d!30511 (= lt!56037 e!70924)))

(declare-fun res!54005 () Bool)

(assert (=> d!30511 (=> (not res!54005) (not e!70924))))

(assert (=> d!30511 (= res!54005 ((_ is Cons!1619) (toList!790 lt!55295)))))

(assert (=> d!30511 (= (contains!826 (toList!790 lt!55295) (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) lt!56037)))

(declare-fun b!109027 () Bool)

(declare-fun e!70923 () Bool)

(assert (=> b!109027 (= e!70924 e!70923)))

(declare-fun res!54006 () Bool)

(assert (=> b!109027 (=> res!54006 e!70923)))

(assert (=> b!109027 (= res!54006 (= (h!2217 (toList!790 lt!55295)) (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!109028 () Bool)

(assert (=> b!109028 (= e!70923 (contains!826 (t!5730 (toList!790 lt!55295)) (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (= (and d!30511 res!54005) b!109027))

(assert (= (and b!109027 (not res!54006)) b!109028))

(declare-fun m!123077 () Bool)

(assert (=> d!30511 m!123077))

(declare-fun m!123079 () Bool)

(assert (=> d!30511 m!123079))

(declare-fun m!123081 () Bool)

(assert (=> b!109028 m!123081))

(assert (=> b!107827 d!30511))

(declare-fun d!30513 () Bool)

(declare-fun res!54007 () Bool)

(declare-fun e!70925 () Bool)

(assert (=> d!30513 (=> res!54007 e!70925)))

(assert (=> d!30513 (= res!54007 (and ((_ is Cons!1619) lt!55150) (= (_1!1207 (h!2217 lt!55150)) (_1!1207 lt!54977))))))

(assert (=> d!30513 (= (containsKey!159 lt!55150 (_1!1207 lt!54977)) e!70925)))

(declare-fun b!109029 () Bool)

(declare-fun e!70926 () Bool)

(assert (=> b!109029 (= e!70925 e!70926)))

(declare-fun res!54008 () Bool)

(assert (=> b!109029 (=> (not res!54008) (not e!70926))))

(assert (=> b!109029 (= res!54008 (and (or (not ((_ is Cons!1619) lt!55150)) (bvsle (_1!1207 (h!2217 lt!55150)) (_1!1207 lt!54977))) ((_ is Cons!1619) lt!55150) (bvslt (_1!1207 (h!2217 lt!55150)) (_1!1207 lt!54977))))))

(declare-fun b!109030 () Bool)

(assert (=> b!109030 (= e!70926 (containsKey!159 (t!5730 lt!55150) (_1!1207 lt!54977)))))

(assert (= (and d!30513 (not res!54007)) b!109029))

(assert (= (and b!109029 res!54008) b!109030))

(declare-fun m!123083 () Bool)

(assert (=> b!109030 m!123083))

(assert (=> b!108209 d!30513))

(declare-fun d!30515 () Bool)

(assert (=> d!30515 (isDefined!109 (getValueByKey!155 (toList!790 lt!55175) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!56038 () Unit!3307)

(assert (=> d!30515 (= lt!56038 (choose!681 (toList!790 lt!55175) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70927 () Bool)

(assert (=> d!30515 e!70927))

(declare-fun res!54009 () Bool)

(assert (=> d!30515 (=> (not res!54009) (not e!70927))))

(assert (=> d!30515 (= res!54009 (isStrictlySorted!305 (toList!790 lt!55175)))))

(assert (=> d!30515 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55175) #b1000000000000000000000000000000000000000000000000000000000000000) lt!56038)))

(declare-fun b!109031 () Bool)

(assert (=> b!109031 (= e!70927 (containsKey!159 (toList!790 lt!55175) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30515 res!54009) b!109031))

(assert (=> d!30515 m!121433))

(assert (=> d!30515 m!121433))

(assert (=> d!30515 m!121435))

(declare-fun m!123085 () Bool)

(assert (=> d!30515 m!123085))

(assert (=> d!30515 m!121979))

(assert (=> b!109031 m!121429))

(assert (=> b!108183 d!30515))

(assert (=> b!108183 d!30361))

(assert (=> b!108183 d!30363))

(declare-fun e!70929 () Option!161)

(declare-fun b!109034 () Bool)

(assert (=> b!109034 (= e!70929 (getValueByKey!155 (t!5730 (toList!790 lt!55645)) (_1!1207 (tuple2!2393 lt!55172 lt!55171))))))

(declare-fun b!109033 () Bool)

(declare-fun e!70928 () Option!161)

(assert (=> b!109033 (= e!70928 e!70929)))

(declare-fun c!19242 () Bool)

(assert (=> b!109033 (= c!19242 (and ((_ is Cons!1619) (toList!790 lt!55645)) (not (= (_1!1207 (h!2217 (toList!790 lt!55645))) (_1!1207 (tuple2!2393 lt!55172 lt!55171))))))))

(declare-fun c!19241 () Bool)

(declare-fun d!30517 () Bool)

(assert (=> d!30517 (= c!19241 (and ((_ is Cons!1619) (toList!790 lt!55645)) (= (_1!1207 (h!2217 (toList!790 lt!55645))) (_1!1207 (tuple2!2393 lt!55172 lt!55171)))))))

(assert (=> d!30517 (= (getValueByKey!155 (toList!790 lt!55645) (_1!1207 (tuple2!2393 lt!55172 lt!55171))) e!70928)))

(declare-fun b!109035 () Bool)

(assert (=> b!109035 (= e!70929 None!159)))

(declare-fun b!109032 () Bool)

(assert (=> b!109032 (= e!70928 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55645)))))))

(assert (= (and d!30517 c!19241) b!109032))

(assert (= (and d!30517 (not c!19241)) b!109033))

(assert (= (and b!109033 c!19242) b!109034))

(assert (= (and b!109033 (not c!19242)) b!109035))

(declare-fun m!123087 () Bool)

(assert (=> b!109034 m!123087))

(assert (=> b!108273 d!30517))

(declare-fun d!30519 () Bool)

(declare-fun res!54010 () Bool)

(declare-fun e!70930 () Bool)

(assert (=> d!30519 (=> res!54010 e!70930)))

(assert (=> d!30519 (= res!54010 (and ((_ is Cons!1619) (toList!790 e!70158)) (= (_1!1207 (h!2217 (toList!790 e!70158))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (=> d!30519 (= (containsKey!159 (toList!790 e!70158) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) e!70930)))

(declare-fun b!109036 () Bool)

(declare-fun e!70931 () Bool)

(assert (=> b!109036 (= e!70930 e!70931)))

(declare-fun res!54011 () Bool)

(assert (=> b!109036 (=> (not res!54011) (not e!70931))))

(assert (=> b!109036 (= res!54011 (and (or (not ((_ is Cons!1619) (toList!790 e!70158))) (bvsle (_1!1207 (h!2217 (toList!790 e!70158))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))) ((_ is Cons!1619) (toList!790 e!70158)) (bvslt (_1!1207 (h!2217 (toList!790 e!70158))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(declare-fun b!109037 () Bool)

(assert (=> b!109037 (= e!70931 (containsKey!159 (t!5730 (toList!790 e!70158)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (= (and d!30519 (not res!54010)) b!109036))

(assert (= (and b!109036 res!54011) b!109037))

(assert (=> b!109037 m!120387))

(declare-fun m!123089 () Bool)

(assert (=> b!109037 m!123089))

(assert (=> d!29821 d!30519))

(declare-fun d!30521 () Bool)

(declare-fun lt!56039 () Bool)

(assert (=> d!30521 (= lt!56039 (select (content!111 (toList!790 lt!55496)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(declare-fun e!70933 () Bool)

(assert (=> d!30521 (= lt!56039 e!70933)))

(declare-fun res!54012 () Bool)

(assert (=> d!30521 (=> (not res!54012) (not e!70933))))

(assert (=> d!30521 (= res!54012 ((_ is Cons!1619) (toList!790 lt!55496)))))

(assert (=> d!30521 (= (contains!826 (toList!790 lt!55496) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) lt!56039)))

(declare-fun b!109038 () Bool)

(declare-fun e!70932 () Bool)

(assert (=> b!109038 (= e!70933 e!70932)))

(declare-fun res!54013 () Bool)

(assert (=> b!109038 (=> res!54013 e!70932)))

(assert (=> b!109038 (= res!54013 (= (h!2217 (toList!790 lt!55496)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(declare-fun b!109039 () Bool)

(assert (=> b!109039 (= e!70932 (contains!826 (t!5730 (toList!790 lt!55496)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))

(assert (= (and d!30521 res!54012) b!109038))

(assert (= (and b!109038 (not res!54013)) b!109039))

(declare-fun m!123091 () Bool)

(assert (=> d!30521 m!123091))

(declare-fun m!123093 () Bool)

(assert (=> d!30521 m!123093))

(declare-fun m!123095 () Bool)

(assert (=> b!109039 m!123095))

(assert (=> b!108042 d!30521))

(declare-fun bm!11562 () Bool)

(declare-fun call!11565 () Bool)

(declare-fun c!19243 () Bool)

(assert (=> bm!11562 (= call!11565 (arrayNoDuplicates!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19243 (Cons!1618 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) #b00000000000000000000000000000000) Nil!1619) Nil!1619)))))

(declare-fun b!109040 () Bool)

(declare-fun e!70937 () Bool)

(assert (=> b!109040 (= e!70937 (contains!825 Nil!1619 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!30523 () Bool)

(declare-fun res!54016 () Bool)

(declare-fun e!70934 () Bool)

(assert (=> d!30523 (=> res!54016 e!70934)))

(assert (=> d!30523 (= res!54016 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> d!30523 (= (arrayNoDuplicates!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) #b00000000000000000000000000000000 Nil!1619) e!70934)))

(declare-fun b!109041 () Bool)

(declare-fun e!70936 () Bool)

(assert (=> b!109041 (= e!70936 call!11565)))

(declare-fun b!109042 () Bool)

(declare-fun e!70935 () Bool)

(assert (=> b!109042 (= e!70934 e!70935)))

(declare-fun res!54015 () Bool)

(assert (=> b!109042 (=> (not res!54015) (not e!70935))))

(assert (=> b!109042 (= res!54015 (not e!70937))))

(declare-fun res!54014 () Bool)

(assert (=> b!109042 (=> (not res!54014) (not e!70937))))

(assert (=> b!109042 (= res!54014 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!109043 () Bool)

(assert (=> b!109043 (= e!70935 e!70936)))

(assert (=> b!109043 (= c!19243 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!109044 () Bool)

(assert (=> b!109044 (= e!70936 call!11565)))

(assert (= (and d!30523 (not res!54016)) b!109042))

(assert (= (and b!109042 res!54014) b!109040))

(assert (= (and b!109042 res!54015) b!109043))

(assert (= (and b!109043 c!19243) b!109041))

(assert (= (and b!109043 (not c!19243)) b!109044))

(assert (= (or b!109041 b!109044) bm!11562))

(assert (=> bm!11562 m!121651))

(declare-fun m!123097 () Bool)

(assert (=> bm!11562 m!123097))

(assert (=> b!109040 m!121651))

(assert (=> b!109040 m!121651))

(declare-fun m!123099 () Bool)

(assert (=> b!109040 m!123099))

(assert (=> b!109042 m!121651))

(assert (=> b!109042 m!121651))

(assert (=> b!109042 m!121653))

(assert (=> b!109043 m!121651))

(assert (=> b!109043 m!121651))

(assert (=> b!109043 m!121653))

(assert (=> b!108268 d!30523))

(declare-fun b!109047 () Bool)

(declare-fun e!70939 () Option!161)

(assert (=> b!109047 (= e!70939 (getValueByKey!155 (t!5730 (t!5730 lt!55146)) (_1!1207 lt!54985)))))

(declare-fun b!109046 () Bool)

(declare-fun e!70938 () Option!161)

(assert (=> b!109046 (= e!70938 e!70939)))

(declare-fun c!19245 () Bool)

(assert (=> b!109046 (= c!19245 (and ((_ is Cons!1619) (t!5730 lt!55146)) (not (= (_1!1207 (h!2217 (t!5730 lt!55146))) (_1!1207 lt!54985)))))))

(declare-fun d!30525 () Bool)

(declare-fun c!19244 () Bool)

(assert (=> d!30525 (= c!19244 (and ((_ is Cons!1619) (t!5730 lt!55146)) (= (_1!1207 (h!2217 (t!5730 lt!55146))) (_1!1207 lt!54985))))))

(assert (=> d!30525 (= (getValueByKey!155 (t!5730 lt!55146) (_1!1207 lt!54985)) e!70938)))

(declare-fun b!109048 () Bool)

(assert (=> b!109048 (= e!70939 None!159)))

(declare-fun b!109045 () Bool)

(assert (=> b!109045 (= e!70938 (Some!160 (_2!1207 (h!2217 (t!5730 lt!55146)))))))

(assert (= (and d!30525 c!19244) b!109045))

(assert (= (and d!30525 (not c!19244)) b!109046))

(assert (= (and b!109046 c!19245) b!109047))

(assert (= (and b!109046 (not c!19245)) b!109048))

(declare-fun m!123101 () Bool)

(assert (=> b!109047 m!123101))

(assert (=> b!107942 d!30525))

(declare-fun bm!11563 () Bool)

(declare-fun call!11567 () List!1623)

(declare-fun call!11566 () List!1623)

(assert (=> bm!11563 (= call!11567 call!11566)))

(declare-fun b!109049 () Bool)

(declare-fun e!70944 () List!1623)

(assert (=> b!109049 (= e!70944 call!11567)))

(declare-fun b!109051 () Bool)

(declare-fun e!70941 () List!1623)

(declare-fun call!11568 () List!1623)

(assert (=> b!109051 (= e!70941 call!11568)))

(declare-fun b!109052 () Bool)

(declare-fun e!70940 () Bool)

(declare-fun lt!56040 () List!1623)

(assert (=> b!109052 (= e!70940 (contains!826 lt!56040 (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(declare-fun b!109053 () Bool)

(declare-fun e!70942 () List!1623)

(assert (=> b!109053 (= e!70942 (insertStrictlySorted!77 (t!5730 (t!5730 (toList!790 (+!137 lt!54981 lt!54977)))) (_1!1207 lt!54985) (_2!1207 lt!54985)))))

(declare-fun b!109054 () Bool)

(declare-fun e!70943 () List!1623)

(assert (=> b!109054 (= e!70943 call!11566)))

(declare-fun bm!11564 () Bool)

(declare-fun c!19246 () Bool)

(assert (=> bm!11564 (= call!11566 ($colon$colon!81 e!70942 (ite c!19246 (h!2217 (t!5730 (toList!790 (+!137 lt!54981 lt!54977)))) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985)))))))

(declare-fun c!19248 () Bool)

(assert (=> bm!11564 (= c!19248 c!19246)))

(declare-fun bm!11565 () Bool)

(assert (=> bm!11565 (= call!11568 call!11567)))

(declare-fun c!19249 () Bool)

(declare-fun b!109055 () Bool)

(assert (=> b!109055 (= c!19249 (and ((_ is Cons!1619) (t!5730 (toList!790 (+!137 lt!54981 lt!54977)))) (bvsgt (_1!1207 (h!2217 (t!5730 (toList!790 (+!137 lt!54981 lt!54977))))) (_1!1207 lt!54985))))))

(assert (=> b!109055 (= e!70944 e!70941)))

(declare-fun b!109050 () Bool)

(declare-fun res!54018 () Bool)

(assert (=> b!109050 (=> (not res!54018) (not e!70940))))

(assert (=> b!109050 (= res!54018 (containsKey!159 lt!56040 (_1!1207 lt!54985)))))

(declare-fun d!30527 () Bool)

(assert (=> d!30527 e!70940))

(declare-fun res!54017 () Bool)

(assert (=> d!30527 (=> (not res!54017) (not e!70940))))

(assert (=> d!30527 (= res!54017 (isStrictlySorted!305 lt!56040))))

(assert (=> d!30527 (= lt!56040 e!70943)))

(assert (=> d!30527 (= c!19246 (and ((_ is Cons!1619) (t!5730 (toList!790 (+!137 lt!54981 lt!54977)))) (bvslt (_1!1207 (h!2217 (t!5730 (toList!790 (+!137 lt!54981 lt!54977))))) (_1!1207 lt!54985))))))

(assert (=> d!30527 (isStrictlySorted!305 (t!5730 (toList!790 (+!137 lt!54981 lt!54977))))))

(assert (=> d!30527 (= (insertStrictlySorted!77 (t!5730 (toList!790 (+!137 lt!54981 lt!54977))) (_1!1207 lt!54985) (_2!1207 lt!54985)) lt!56040)))

(declare-fun b!109056 () Bool)

(assert (=> b!109056 (= e!70941 call!11568)))

(declare-fun c!19247 () Bool)

(declare-fun b!109057 () Bool)

(assert (=> b!109057 (= e!70942 (ite c!19247 (t!5730 (t!5730 (toList!790 (+!137 lt!54981 lt!54977)))) (ite c!19249 (Cons!1619 (h!2217 (t!5730 (toList!790 (+!137 lt!54981 lt!54977)))) (t!5730 (t!5730 (toList!790 (+!137 lt!54981 lt!54977))))) Nil!1620)))))

(declare-fun b!109058 () Bool)

(assert (=> b!109058 (= e!70943 e!70944)))

(assert (=> b!109058 (= c!19247 (and ((_ is Cons!1619) (t!5730 (toList!790 (+!137 lt!54981 lt!54977)))) (= (_1!1207 (h!2217 (t!5730 (toList!790 (+!137 lt!54981 lt!54977))))) (_1!1207 lt!54985))))))

(assert (= (and d!30527 c!19246) b!109054))

(assert (= (and d!30527 (not c!19246)) b!109058))

(assert (= (and b!109058 c!19247) b!109049))

(assert (= (and b!109058 (not c!19247)) b!109055))

(assert (= (and b!109055 c!19249) b!109056))

(assert (= (and b!109055 (not c!19249)) b!109051))

(assert (= (or b!109056 b!109051) bm!11565))

(assert (= (or b!109049 bm!11565) bm!11563))

(assert (= (or b!109054 bm!11563) bm!11564))

(assert (= (and bm!11564 c!19248) b!109053))

(assert (= (and bm!11564 (not c!19248)) b!109057))

(assert (= (and d!30527 res!54017) b!109050))

(assert (= (and b!109050 res!54018) b!109052))

(declare-fun m!123103 () Bool)

(assert (=> b!109052 m!123103))

(declare-fun m!123105 () Bool)

(assert (=> bm!11564 m!123105))

(declare-fun m!123107 () Bool)

(assert (=> b!109050 m!123107))

(declare-fun m!123109 () Bool)

(assert (=> d!30527 m!123109))

(assert (=> d!30527 m!122249))

(declare-fun m!123111 () Bool)

(assert (=> b!109053 m!123111))

(assert (=> b!108108 d!30527))

(declare-fun b!109061 () Bool)

(declare-fun e!70946 () Option!161)

(assert (=> b!109061 (= e!70946 (getValueByKey!155 (t!5730 (toList!790 lt!55312)) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun b!109060 () Bool)

(declare-fun e!70945 () Option!161)

(assert (=> b!109060 (= e!70945 e!70946)))

(declare-fun c!19251 () Bool)

(assert (=> b!109060 (= c!19251 (and ((_ is Cons!1619) (toList!790 lt!55312)) (not (= (_1!1207 (h!2217 (toList!790 lt!55312))) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))))

(declare-fun c!19250 () Bool)

(declare-fun d!30529 () Bool)

(assert (=> d!30529 (= c!19250 (and ((_ is Cons!1619) (toList!790 lt!55312)) (= (_1!1207 (h!2217 (toList!790 lt!55312))) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(assert (=> d!30529 (= (getValueByKey!155 (toList!790 lt!55312) (_1!1207 (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) e!70945)))

(declare-fun b!109062 () Bool)

(assert (=> b!109062 (= e!70946 None!159)))

(declare-fun b!109059 () Bool)

(assert (=> b!109059 (= e!70945 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55312)))))))

(assert (= (and d!30529 c!19250) b!109059))

(assert (= (and d!30529 (not c!19250)) b!109060))

(assert (= (and b!109060 c!19251) b!109061))

(assert (= (and b!109060 (not c!19251)) b!109062))

(declare-fun m!123113 () Bool)

(assert (=> b!109061 m!123113))

(assert (=> b!107852 d!30529))

(declare-fun d!30531 () Bool)

(declare-fun e!70947 () Bool)

(assert (=> d!30531 e!70947))

(declare-fun res!54019 () Bool)

(assert (=> d!30531 (=> res!54019 e!70947)))

(declare-fun lt!56041 () Bool)

(assert (=> d!30531 (= res!54019 (not lt!56041))))

(declare-fun lt!56042 () Bool)

(assert (=> d!30531 (= lt!56041 lt!56042)))

(declare-fun lt!56044 () Unit!3307)

(declare-fun e!70948 () Unit!3307)

(assert (=> d!30531 (= lt!56044 e!70948)))

(declare-fun c!19252 () Bool)

(assert (=> d!30531 (= c!19252 lt!56042)))

(assert (=> d!30531 (= lt!56042 (containsKey!159 (toList!790 lt!55471) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30531 (= (contains!824 lt!55471 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) lt!56041)))

(declare-fun b!109063 () Bool)

(declare-fun lt!56043 () Unit!3307)

(assert (=> b!109063 (= e!70948 lt!56043)))

(assert (=> b!109063 (= lt!56043 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55471) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109063 (isDefined!109 (getValueByKey!155 (toList!790 lt!55471) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109064 () Bool)

(declare-fun Unit!3376 () Unit!3307)

(assert (=> b!109064 (= e!70948 Unit!3376)))

(declare-fun b!109065 () Bool)

(assert (=> b!109065 (= e!70947 (isDefined!109 (getValueByKey!155 (toList!790 lt!55471) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!30531 c!19252) b!109063))

(assert (= (and d!30531 (not c!19252)) b!109064))

(assert (= (and d!30531 (not res!54019)) b!109065))

(assert (=> d!30531 m!120769))

(declare-fun m!123115 () Bool)

(assert (=> d!30531 m!123115))

(assert (=> b!109063 m!120769))

(declare-fun m!123117 () Bool)

(assert (=> b!109063 m!123117))

(assert (=> b!109063 m!120769))

(declare-fun m!123119 () Bool)

(assert (=> b!109063 m!123119))

(assert (=> b!109063 m!123119))

(declare-fun m!123121 () Bool)

(assert (=> b!109063 m!123121))

(assert (=> b!109065 m!120769))

(assert (=> b!109065 m!123119))

(assert (=> b!109065 m!123119))

(assert (=> b!109065 m!123121))

(assert (=> b!108000 d!30531))

(declare-fun b!109078 () Bool)

(declare-fun e!70955 () SeekEntryResult!263)

(assert (=> b!109078 (= e!70955 (Found!263 (index!3203 lt!55506)))))

(declare-fun b!109079 () Bool)

(declare-fun e!70957 () SeekEntryResult!263)

(assert (=> b!109079 (= e!70957 Undefined!263)))

(declare-fun b!109080 () Bool)

(assert (=> b!109080 (= e!70957 e!70955)))

(declare-fun lt!56049 () (_ BitVec 64))

(declare-fun c!19259 () Bool)

(assert (=> b!109080 (= c!19259 (= lt!56049 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun lt!56050 () SeekEntryResult!263)

(declare-fun d!30533 () Bool)

(assert (=> d!30533 (and (or ((_ is Undefined!263) lt!56050) (not ((_ is Found!263) lt!56050)) (and (bvsge (index!3202 lt!56050) #b00000000000000000000000000000000) (bvslt (index!3202 lt!56050) (size!2319 (_keys!4314 newMap!16))))) (or ((_ is Undefined!263) lt!56050) ((_ is Found!263) lt!56050) (not ((_ is MissingVacant!263) lt!56050)) (not (= (index!3204 lt!56050) (index!3203 lt!55506))) (and (bvsge (index!3204 lt!56050) #b00000000000000000000000000000000) (bvslt (index!3204 lt!56050) (size!2319 (_keys!4314 newMap!16))))) (or ((_ is Undefined!263) lt!56050) (ite ((_ is Found!263) lt!56050) (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!56050)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (and ((_ is MissingVacant!263) lt!56050) (= (index!3204 lt!56050) (index!3203 lt!55506)) (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3204 lt!56050)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!30533 (= lt!56050 e!70957)))

(declare-fun c!19260 () Bool)

(assert (=> d!30533 (= c!19260 (bvsge (x!13806 lt!55506) #b01111111111111111111111111111110))))

(assert (=> d!30533 (= lt!56049 (select (arr!2062 (_keys!4314 newMap!16)) (index!3203 lt!55506)))))

(assert (=> d!30533 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30533 (= (seekKeyOrZeroReturnVacant!0 (x!13806 lt!55506) (index!3203 lt!55506) (index!3203 lt!55506) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)) lt!56050)))

(declare-fun b!109081 () Bool)

(declare-fun e!70956 () SeekEntryResult!263)

(assert (=> b!109081 (= e!70956 (MissingVacant!263 (index!3203 lt!55506)))))

(declare-fun b!109082 () Bool)

(assert (=> b!109082 (= e!70956 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13806 lt!55506) #b00000000000000000000000000000001) (nextIndex!0 (index!3203 lt!55506) (x!13806 lt!55506) (mask!6762 newMap!16)) (index!3203 lt!55506) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(declare-fun b!109083 () Bool)

(declare-fun c!19261 () Bool)

(assert (=> b!109083 (= c!19261 (= lt!56049 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109083 (= e!70955 e!70956)))

(assert (= (and d!30533 c!19260) b!109079))

(assert (= (and d!30533 (not c!19260)) b!109080))

(assert (= (and b!109080 c!19259) b!109078))

(assert (= (and b!109080 (not c!19259)) b!109083))

(assert (= (and b!109083 c!19261) b!109081))

(assert (= (and b!109083 (not c!19261)) b!109082))

(declare-fun m!123123 () Bool)

(assert (=> d!30533 m!123123))

(declare-fun m!123125 () Bool)

(assert (=> d!30533 m!123125))

(assert (=> d!30533 m!121255))

(assert (=> d!30533 m!120787))

(declare-fun m!123127 () Bool)

(assert (=> b!109082 m!123127))

(assert (=> b!109082 m!123127))

(assert (=> b!109082 m!120387))

(declare-fun m!123129 () Bool)

(assert (=> b!109082 m!123129))

(assert (=> b!108060 d!30533))

(assert (=> b!108165 d!29935))

(declare-fun b!109086 () Bool)

(declare-fun e!70959 () Option!161)

(assert (=> b!109086 (= e!70959 (getValueByKey!155 (t!5730 (t!5730 lt!55179)) (_1!1207 lt!54985)))))

(declare-fun b!109085 () Bool)

(declare-fun e!70958 () Option!161)

(assert (=> b!109085 (= e!70958 e!70959)))

(declare-fun c!19263 () Bool)

(assert (=> b!109085 (= c!19263 (and ((_ is Cons!1619) (t!5730 lt!55179)) (not (= (_1!1207 (h!2217 (t!5730 lt!55179))) (_1!1207 lt!54985)))))))

(declare-fun d!30535 () Bool)

(declare-fun c!19262 () Bool)

(assert (=> d!30535 (= c!19262 (and ((_ is Cons!1619) (t!5730 lt!55179)) (= (_1!1207 (h!2217 (t!5730 lt!55179))) (_1!1207 lt!54985))))))

(assert (=> d!30535 (= (getValueByKey!155 (t!5730 lt!55179) (_1!1207 lt!54985)) e!70958)))

(declare-fun b!109087 () Bool)

(assert (=> b!109087 (= e!70959 None!159)))

(declare-fun b!109084 () Bool)

(assert (=> b!109084 (= e!70958 (Some!160 (_2!1207 (h!2217 (t!5730 lt!55179)))))))

(assert (= (and d!30535 c!19262) b!109084))

(assert (= (and d!30535 (not c!19262)) b!109085))

(assert (= (and b!109085 c!19263) b!109086))

(assert (= (and b!109085 (not c!19263)) b!109087))

(declare-fun m!123131 () Bool)

(assert (=> b!109086 m!123131))

(assert (=> b!108100 d!30535))

(declare-fun b!109088 () Bool)

(declare-fun lt!56056 () Unit!3307)

(declare-fun lt!56055 () Unit!3307)

(assert (=> b!109088 (= lt!56056 lt!56055)))

(declare-fun lt!56052 () (_ BitVec 64))

(declare-fun lt!56051 () ListLongMap!1549)

(declare-fun lt!56054 () (_ BitVec 64))

(declare-fun lt!56053 () V!3233)

(assert (=> b!109088 (not (contains!824 (+!137 lt!56051 (tuple2!2393 lt!56054 lt!56053)) lt!56052))))

(assert (=> b!109088 (= lt!56055 (addStillNotContains!48 lt!56051 lt!56054 lt!56053 lt!56052))))

(assert (=> b!109088 (= lt!56052 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!109088 (= lt!56053 (get!1341 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!109088 (= lt!56054 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11569 () ListLongMap!1549)

(assert (=> b!109088 (= lt!56051 call!11569)))

(declare-fun e!70965 () ListLongMap!1549)

(assert (=> b!109088 (= e!70965 (+!137 call!11569 (tuple2!2393 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) (get!1341 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!70964 () Bool)

(declare-fun b!109089 () Bool)

(declare-fun lt!56057 () ListLongMap!1549)

(assert (=> b!109089 (= e!70964 (= lt!56057 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16))))))

(declare-fun b!109090 () Bool)

(assert (=> b!109090 (= e!70965 call!11569)))

(declare-fun b!109091 () Bool)

(assert (=> b!109091 (= e!70964 (isEmpty!377 lt!56057))))

(declare-fun b!109092 () Bool)

(assert (=> b!109092 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> b!109092 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 (_values!2588 newMap!16))))))

(declare-fun e!70961 () Bool)

(assert (=> b!109092 (= e!70961 (= (apply!99 lt!56057 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!109093 () Bool)

(declare-fun e!70963 () ListLongMap!1549)

(assert (=> b!109093 (= e!70963 (ListLongMap!1550 Nil!1620))))

(declare-fun b!109094 () Bool)

(declare-fun e!70966 () Bool)

(declare-fun e!70960 () Bool)

(assert (=> b!109094 (= e!70966 e!70960)))

(declare-fun c!19265 () Bool)

(declare-fun e!70962 () Bool)

(assert (=> b!109094 (= c!19265 e!70962)))

(declare-fun res!54020 () Bool)

(assert (=> b!109094 (=> (not res!54020) (not e!70962))))

(assert (=> b!109094 (= res!54020 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!109096 () Bool)

(assert (=> b!109096 (= e!70963 e!70965)))

(declare-fun c!19267 () Bool)

(assert (=> b!109096 (= c!19267 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11566 () Bool)

(assert (=> bm!11566 (= call!11569 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2605 newMap!16)))))

(declare-fun b!109097 () Bool)

(declare-fun res!54022 () Bool)

(assert (=> b!109097 (=> (not res!54022) (not e!70966))))

(assert (=> b!109097 (= res!54022 (not (contains!824 lt!56057 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109098 () Bool)

(assert (=> b!109098 (= e!70960 e!70961)))

(assert (=> b!109098 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun res!54023 () Bool)

(assert (=> b!109098 (= res!54023 (contains!824 lt!56057 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109098 (=> (not res!54023) (not e!70961))))

(declare-fun b!109099 () Bool)

(assert (=> b!109099 (= e!70960 e!70964)))

(declare-fun c!19266 () Bool)

(assert (=> b!109099 (= c!19266 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun d!30537 () Bool)

(assert (=> d!30537 e!70966))

(declare-fun res!54021 () Bool)

(assert (=> d!30537 (=> (not res!54021) (not e!70966))))

(assert (=> d!30537 (= res!54021 (not (contains!824 lt!56057 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30537 (= lt!56057 e!70963)))

(declare-fun c!19264 () Bool)

(assert (=> d!30537 (= c!19264 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!30537 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30537 (= (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (ite c!18892 (ite c!18891 lt!55271 lt!55272) (extraKeys!2406 newMap!16)) (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!56057)))

(declare-fun b!109095 () Bool)

(assert (=> b!109095 (= e!70962 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109095 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!30537 c!19264) b!109093))

(assert (= (and d!30537 (not c!19264)) b!109096))

(assert (= (and b!109096 c!19267) b!109088))

(assert (= (and b!109096 (not c!19267)) b!109090))

(assert (= (or b!109088 b!109090) bm!11566))

(assert (= (and d!30537 res!54021) b!109097))

(assert (= (and b!109097 res!54022) b!109094))

(assert (= (and b!109094 res!54020) b!109095))

(assert (= (and b!109094 c!19265) b!109098))

(assert (= (and b!109094 (not c!19265)) b!109099))

(assert (= (and b!109098 res!54023) b!109092))

(assert (= (and b!109099 c!19266) b!109089))

(assert (= (and b!109099 (not c!19266)) b!109091))

(declare-fun b_lambda!4859 () Bool)

(assert (=> (not b_lambda!4859) (not b!109088)))

(assert (=> b!109088 t!5742))

(declare-fun b_and!6709 () Bool)

(assert (= b_and!6705 (and (=> t!5742 result!3505) b_and!6709)))

(assert (=> b!109088 t!5744))

(declare-fun b_and!6711 () Bool)

(assert (= b_and!6707 (and (=> t!5744 result!3507) b_and!6711)))

(declare-fun b_lambda!4861 () Bool)

(assert (=> (not b_lambda!4861) (not b!109092)))

(assert (=> b!109092 t!5742))

(declare-fun b_and!6713 () Bool)

(assert (= b_and!6709 (and (=> t!5742 result!3505) b_and!6713)))

(assert (=> b!109092 t!5744))

(declare-fun b_and!6715 () Bool)

(assert (= b_and!6711 (and (=> t!5744 result!3507) b_and!6715)))

(assert (=> b!109092 m!121365))

(assert (=> b!109092 m!121113))

(assert (=> b!109092 m!121367))

(assert (=> b!109092 m!120769))

(assert (=> b!109092 m!121113))

(assert (=> b!109092 m!120769))

(declare-fun m!123133 () Bool)

(assert (=> b!109092 m!123133))

(assert (=> b!109092 m!121365))

(declare-fun m!123135 () Bool)

(assert (=> d!30537 m!123135))

(assert (=> d!30537 m!120787))

(assert (=> b!109096 m!120769))

(assert (=> b!109096 m!120769))

(assert (=> b!109096 m!120779))

(declare-fun m!123137 () Bool)

(assert (=> b!109089 m!123137))

(declare-fun m!123139 () Bool)

(assert (=> b!109097 m!123139))

(assert (=> b!109098 m!120769))

(assert (=> b!109098 m!120769))

(declare-fun m!123141 () Bool)

(assert (=> b!109098 m!123141))

(assert (=> b!109088 m!121365))

(assert (=> b!109088 m!121113))

(assert (=> b!109088 m!121367))

(declare-fun m!123143 () Bool)

(assert (=> b!109088 m!123143))

(assert (=> b!109088 m!123143))

(declare-fun m!123145 () Bool)

(assert (=> b!109088 m!123145))

(assert (=> b!109088 m!121113))

(assert (=> b!109088 m!121365))

(declare-fun m!123147 () Bool)

(assert (=> b!109088 m!123147))

(declare-fun m!123149 () Bool)

(assert (=> b!109088 m!123149))

(assert (=> b!109088 m!120769))

(assert (=> b!109095 m!120769))

(assert (=> b!109095 m!120769))

(assert (=> b!109095 m!120779))

(declare-fun m!123151 () Bool)

(assert (=> b!109091 m!123151))

(assert (=> bm!11566 m!123137))

(assert (=> bm!11493 d!30537))

(declare-fun d!30539 () Bool)

(declare-fun res!54025 () Bool)

(declare-fun e!70968 () Bool)

(assert (=> d!30539 (=> res!54025 e!70968)))

(assert (=> d!30539 (= res!54025 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!30539 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4314 newMap!16) (mask!6762 newMap!16)) e!70968)))

(declare-fun b!109100 () Bool)

(declare-fun e!70967 () Bool)

(declare-fun e!70969 () Bool)

(assert (=> b!109100 (= e!70967 e!70969)))

(declare-fun lt!56059 () (_ BitVec 64))

(assert (=> b!109100 (= lt!56059 (select (arr!2062 (_keys!4314 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!56058 () Unit!3307)

(assert (=> b!109100 (= lt!56058 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4314 newMap!16) lt!56059 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!109100 (arrayContainsKey!0 (_keys!4314 newMap!16) lt!56059 #b00000000000000000000000000000000)))

(declare-fun lt!56060 () Unit!3307)

(assert (=> b!109100 (= lt!56060 lt!56058)))

(declare-fun res!54024 () Bool)

(assert (=> b!109100 (= res!54024 (= (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4314 newMap!16) (mask!6762 newMap!16)) (Found!263 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!109100 (=> (not res!54024) (not e!70969))))

(declare-fun bm!11567 () Bool)

(declare-fun call!11570 () Bool)

(assert (=> bm!11567 (= call!11570 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(declare-fun b!109101 () Bool)

(assert (=> b!109101 (= e!70969 call!11570)))

(declare-fun b!109102 () Bool)

(assert (=> b!109102 (= e!70968 e!70967)))

(declare-fun c!19268 () Bool)

(assert (=> b!109102 (= c!19268 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!109103 () Bool)

(assert (=> b!109103 (= e!70967 call!11570)))

(assert (= (and d!30539 (not res!54025)) b!109102))

(assert (= (and b!109102 c!19268) b!109100))

(assert (= (and b!109102 (not c!19268)) b!109103))

(assert (= (and b!109100 res!54024) b!109101))

(assert (= (or b!109101 b!109103) bm!11567))

(declare-fun m!123153 () Bool)

(assert (=> b!109100 m!123153))

(declare-fun m!123155 () Bool)

(assert (=> b!109100 m!123155))

(declare-fun m!123157 () Bool)

(assert (=> b!109100 m!123157))

(assert (=> b!109100 m!123153))

(declare-fun m!123159 () Bool)

(assert (=> b!109100 m!123159))

(declare-fun m!123161 () Bool)

(assert (=> bm!11567 m!123161))

(assert (=> b!109102 m!123153))

(assert (=> b!109102 m!123153))

(declare-fun m!123163 () Bool)

(assert (=> b!109102 m!123163))

(assert (=> bm!11426 d!30539))

(declare-fun d!30541 () Bool)

(assert (=> d!30541 (= (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))) lt!55170)) (not (isEmpty!379 (getValueByKey!155 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))) lt!55170))))))

(declare-fun bs!4494 () Bool)

(assert (= bs!4494 d!30541))

(assert (=> bs!4494 m!121615))

(declare-fun m!123165 () Bool)

(assert (=> bs!4494 m!123165))

(assert (=> b!108277 d!30541))

(declare-fun e!70971 () Option!161)

(declare-fun b!109106 () Bool)

(assert (=> b!109106 (= e!70971 (getValueByKey!155 (t!5730 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)))) lt!55170))))

(declare-fun b!109105 () Bool)

(declare-fun e!70970 () Option!161)

(assert (=> b!109105 (= e!70970 e!70971)))

(declare-fun c!19270 () Bool)

(assert (=> b!109105 (= c!19270 (and ((_ is Cons!1619) (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)))) (not (= (_1!1207 (h!2217 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))))) lt!55170))))))

(declare-fun d!30543 () Bool)

(declare-fun c!19269 () Bool)

(assert (=> d!30543 (= c!19269 (and ((_ is Cons!1619) (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)))) (= (_1!1207 (h!2217 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))))) lt!55170)))))

(assert (=> d!30543 (= (getValueByKey!155 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))) lt!55170) e!70970)))

(declare-fun b!109107 () Bool)

(assert (=> b!109107 (= e!70971 None!159)))

(declare-fun b!109104 () Bool)

(assert (=> b!109104 (= e!70970 (Some!160 (_2!1207 (h!2217 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)))))))))

(assert (= (and d!30543 c!19269) b!109104))

(assert (= (and d!30543 (not c!19269)) b!109105))

(assert (= (and b!109105 c!19270) b!109106))

(assert (= (and b!109105 (not c!19270)) b!109107))

(declare-fun m!123167 () Bool)

(assert (=> b!109106 m!123167))

(assert (=> b!108277 d!30543))

(declare-fun lt!56061 () Bool)

(declare-fun d!30545 () Bool)

(assert (=> d!30545 (= lt!56061 (select (content!111 (toList!790 lt!55312)) (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun e!70973 () Bool)

(assert (=> d!30545 (= lt!56061 e!70973)))

(declare-fun res!54026 () Bool)

(assert (=> d!30545 (=> (not res!54026) (not e!70973))))

(assert (=> d!30545 (= res!54026 ((_ is Cons!1619) (toList!790 lt!55312)))))

(assert (=> d!30545 (= (contains!826 (toList!790 lt!55312) (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!56061)))

(declare-fun b!109108 () Bool)

(declare-fun e!70972 () Bool)

(assert (=> b!109108 (= e!70973 e!70972)))

(declare-fun res!54027 () Bool)

(assert (=> b!109108 (=> res!54027 e!70972)))

(assert (=> b!109108 (= res!54027 (= (h!2217 (toList!790 lt!55312)) (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!109109 () Bool)

(assert (=> b!109109 (= e!70972 (contains!826 (t!5730 (toList!790 lt!55312)) (ite (or c!18828 c!18829) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (= (and d!30545 res!54026) b!109108))

(assert (= (and b!109108 (not res!54027)) b!109109))

(declare-fun m!123169 () Bool)

(assert (=> d!30545 m!123169))

(declare-fun m!123171 () Bool)

(assert (=> d!30545 m!123171))

(declare-fun m!123173 () Bool)

(assert (=> b!109109 m!123173))

(assert (=> b!107853 d!30545))

(declare-fun d!30547 () Bool)

(assert (=> d!30547 (= (apply!99 lt!55471 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1344 (getValueByKey!155 (toList!790 lt!55471) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4495 () Bool)

(assert (= bs!4495 d!30547))

(assert (=> bs!4495 m!120769))

(assert (=> bs!4495 m!123119))

(assert (=> bs!4495 m!123119))

(declare-fun m!123175 () Bool)

(assert (=> bs!4495 m!123175))

(assert (=> b!107990 d!30547))

(declare-fun c!19271 () Bool)

(declare-fun d!30549 () Bool)

(assert (=> d!30549 (= c!19271 ((_ is ValueCellFull!1001) (select (arr!2063 (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!70974 () V!3233)

(assert (=> d!30549 (= (get!1341 (select (arr!2063 (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70974)))

(declare-fun b!109110 () Bool)

(assert (=> b!109110 (= e!70974 (get!1342 (select (arr!2063 (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109111 () Bool)

(assert (=> b!109111 (= e!70974 (get!1343 (select (arr!2063 (ite (or c!18892 c!18888) (_values!2588 newMap!16) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (index!3202 lt!55253) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30549 c!19271) b!109110))

(assert (= (and d!30549 (not c!19271)) b!109111))

(assert (=> b!109110 m!121111))

(assert (=> b!109110 m!121113))

(declare-fun m!123177 () Bool)

(assert (=> b!109110 m!123177))

(assert (=> b!109111 m!121111))

(assert (=> b!109111 m!121113))

(declare-fun m!123179 () Bool)

(assert (=> b!109111 m!123179))

(assert (=> b!107990 d!30549))

(declare-fun d!30551 () Bool)

(assert (=> d!30551 (isDefined!109 (getValueByKey!155 (toList!790 e!70158) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun lt!56062 () Unit!3307)

(assert (=> d!30551 (= lt!56062 (choose!681 (toList!790 e!70158) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun e!70975 () Bool)

(assert (=> d!30551 e!70975))

(declare-fun res!54028 () Bool)

(assert (=> d!30551 (=> (not res!54028) (not e!70975))))

(assert (=> d!30551 (= res!54028 (isStrictlySorted!305 (toList!790 e!70158)))))

(assert (=> d!30551 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 e!70158) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) lt!56062)))

(declare-fun b!109112 () Bool)

(assert (=> b!109112 (= e!70975 (containsKey!159 (toList!790 e!70158) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (= (and d!30551 res!54028) b!109112))

(assert (=> d!30551 m!120387))

(assert (=> d!30551 m!121169))

(assert (=> d!30551 m!121169))

(assert (=> d!30551 m!121171))

(assert (=> d!30551 m!120387))

(declare-fun m!123181 () Bool)

(assert (=> d!30551 m!123181))

(declare-fun m!123183 () Bool)

(assert (=> d!30551 m!123183))

(assert (=> b!109112 m!120387))

(assert (=> b!109112 m!121165))

(assert (=> b!108010 d!30551))

(assert (=> b!108010 d!30391))

(assert (=> b!108010 d!30393))

(assert (=> d!29771 d!29779))

(assert (=> d!29771 d!29763))

(declare-fun d!30553 () Bool)

(assert (=> d!30553 (contains!824 (+!137 lt!55105 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!55110)))

(assert (=> d!30553 true))

(declare-fun _$35!351 () Unit!3307)

(assert (=> d!30553 (= (choose!678 lt!55105 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))) lt!55110) _$35!351)))

(declare-fun bs!4496 () Bool)

(assert (= bs!4496 d!30553))

(assert (=> bs!4496 m!120577))

(assert (=> bs!4496 m!120577))

(assert (=> bs!4496 m!120589))

(assert (=> d!29771 d!30553))

(declare-fun d!30555 () Bool)

(declare-fun e!70976 () Bool)

(assert (=> d!30555 e!70976))

(declare-fun res!54029 () Bool)

(assert (=> d!30555 (=> res!54029 e!70976)))

(declare-fun lt!56063 () Bool)

(assert (=> d!30555 (= res!54029 (not lt!56063))))

(declare-fun lt!56064 () Bool)

(assert (=> d!30555 (= lt!56063 lt!56064)))

(declare-fun lt!56066 () Unit!3307)

(declare-fun e!70977 () Unit!3307)

(assert (=> d!30555 (= lt!56066 e!70977)))

(declare-fun c!19272 () Bool)

(assert (=> d!30555 (= c!19272 lt!56064)))

(assert (=> d!30555 (= lt!56064 (containsKey!159 (toList!790 lt!55105) lt!55110))))

(assert (=> d!30555 (= (contains!824 lt!55105 lt!55110) lt!56063)))

(declare-fun b!109114 () Bool)

(declare-fun lt!56065 () Unit!3307)

(assert (=> b!109114 (= e!70977 lt!56065)))

(assert (=> b!109114 (= lt!56065 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55105) lt!55110))))

(assert (=> b!109114 (isDefined!109 (getValueByKey!155 (toList!790 lt!55105) lt!55110))))

(declare-fun b!109115 () Bool)

(declare-fun Unit!3377 () Unit!3307)

(assert (=> b!109115 (= e!70977 Unit!3377)))

(declare-fun b!109116 () Bool)

(assert (=> b!109116 (= e!70976 (isDefined!109 (getValueByKey!155 (toList!790 lt!55105) lt!55110)))))

(assert (= (and d!30555 c!19272) b!109114))

(assert (= (and d!30555 (not c!19272)) b!109115))

(assert (= (and d!30555 (not res!54029)) b!109116))

(declare-fun m!123185 () Bool)

(assert (=> d!30555 m!123185))

(declare-fun m!123187 () Bool)

(assert (=> b!109114 m!123187))

(declare-fun m!123189 () Bool)

(assert (=> b!109114 m!123189))

(assert (=> b!109114 m!123189))

(declare-fun m!123191 () Bool)

(assert (=> b!109114 m!123191))

(assert (=> b!109116 m!123189))

(assert (=> b!109116 m!123189))

(assert (=> b!109116 m!123191))

(assert (=> d!29771 d!30555))

(declare-fun b!109119 () Bool)

(declare-fun e!70979 () Option!161)

(assert (=> b!109119 (= e!70979 (getValueByKey!155 (t!5730 (t!5730 (toList!790 lt!55151))) (_1!1207 lt!54977)))))

(declare-fun b!109118 () Bool)

(declare-fun e!70978 () Option!161)

(assert (=> b!109118 (= e!70978 e!70979)))

(declare-fun c!19274 () Bool)

(assert (=> b!109118 (= c!19274 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!55151))) (not (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!55151)))) (_1!1207 lt!54977)))))))

(declare-fun d!30557 () Bool)

(declare-fun c!19273 () Bool)

(assert (=> d!30557 (= c!19273 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!55151))) (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!55151)))) (_1!1207 lt!54977))))))

(assert (=> d!30557 (= (getValueByKey!155 (t!5730 (toList!790 lt!55151)) (_1!1207 lt!54977)) e!70978)))

(declare-fun b!109120 () Bool)

(assert (=> b!109120 (= e!70979 None!159)))

(declare-fun b!109117 () Bool)

(assert (=> b!109117 (= e!70978 (Some!160 (_2!1207 (h!2217 (t!5730 (toList!790 lt!55151))))))))

(assert (= (and d!30557 c!19273) b!109117))

(assert (= (and d!30557 (not c!19273)) b!109118))

(assert (= (and b!109118 c!19274) b!109119))

(assert (= (and b!109118 (not c!19274)) b!109120))

(declare-fun m!123193 () Bool)

(assert (=> b!109119 m!123193))

(assert (=> b!108178 d!30557))

(declare-fun d!30559 () Bool)

(declare-fun e!70980 () Bool)

(assert (=> d!30559 e!70980))

(declare-fun res!54030 () Bool)

(assert (=> d!30559 (=> res!54030 e!70980)))

(declare-fun lt!56067 () Bool)

(assert (=> d!30559 (= res!54030 (not lt!56067))))

(declare-fun lt!56068 () Bool)

(assert (=> d!30559 (= lt!56067 lt!56068)))

(declare-fun lt!56070 () Unit!3307)

(declare-fun e!70981 () Unit!3307)

(assert (=> d!30559 (= lt!56070 e!70981)))

(declare-fun c!19275 () Bool)

(assert (=> d!30559 (= c!19275 lt!56068)))

(assert (=> d!30559 (= lt!56068 (containsKey!159 (toList!790 lt!55626) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30559 (= (contains!824 lt!55626 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56067)))

(declare-fun b!109121 () Bool)

(declare-fun lt!56069 () Unit!3307)

(assert (=> b!109121 (= e!70981 lt!56069)))

(assert (=> b!109121 (= lt!56069 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55626) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109121 (isDefined!109 (getValueByKey!155 (toList!790 lt!55626) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109122 () Bool)

(declare-fun Unit!3378 () Unit!3307)

(assert (=> b!109122 (= e!70981 Unit!3378)))

(declare-fun b!109123 () Bool)

(assert (=> b!109123 (= e!70980 (isDefined!109 (getValueByKey!155 (toList!790 lt!55626) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30559 c!19275) b!109121))

(assert (= (and d!30559 (not c!19275)) b!109122))

(assert (= (and d!30559 (not res!54030)) b!109123))

(declare-fun m!123195 () Bool)

(assert (=> d!30559 m!123195))

(declare-fun m!123197 () Bool)

(assert (=> b!109121 m!123197))

(assert (=> b!109121 m!122293))

(assert (=> b!109121 m!122293))

(declare-fun m!123199 () Bool)

(assert (=> b!109121 m!123199))

(assert (=> b!109123 m!122293))

(assert (=> b!109123 m!122293))

(assert (=> b!109123 m!123199))

(assert (=> bm!11487 d!30559))

(assert (=> d!29819 d!29941))

(declare-fun d!30561 () Bool)

(assert (=> d!30561 (= ($colon$colon!81 e!70424 (ite c!19008 (h!2217 (toList!790 lt!54981)) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977)))) (Cons!1619 (ite c!19008 (h!2217 (toList!790 lt!54981)) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))) e!70424))))

(assert (=> bm!11485 d!30561))

(declare-fun d!30563 () Bool)

(declare-fun res!54031 () Bool)

(declare-fun e!70982 () Bool)

(assert (=> d!30563 (=> res!54031 e!70982)))

(assert (=> d!30563 (= res!54031 (and ((_ is Cons!1619) (toList!790 lt!55175)) (= (_1!1207 (h!2217 (toList!790 lt!55175))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30563 (= (containsKey!159 (toList!790 lt!55175) #b0000000000000000000000000000000000000000000000000000000000000000) e!70982)))

(declare-fun b!109124 () Bool)

(declare-fun e!70983 () Bool)

(assert (=> b!109124 (= e!70982 e!70983)))

(declare-fun res!54032 () Bool)

(assert (=> b!109124 (=> (not res!54032) (not e!70983))))

(assert (=> b!109124 (= res!54032 (and (or (not ((_ is Cons!1619) (toList!790 lt!55175))) (bvsle (_1!1207 (h!2217 (toList!790 lt!55175))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1619) (toList!790 lt!55175)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55175))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109125 () Bool)

(assert (=> b!109125 (= e!70983 (containsKey!159 (t!5730 (toList!790 lt!55175)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30563 (not res!54031)) b!109124))

(assert (= (and b!109124 res!54032) b!109125))

(declare-fun m!123201 () Bool)

(assert (=> b!109125 m!123201))

(assert (=> d!29913 d!30563))

(declare-fun d!30565 () Bool)

(declare-fun res!54033 () Bool)

(declare-fun e!70984 () Bool)

(assert (=> d!30565 (=> res!54033 e!70984)))

(assert (=> d!30565 (= res!54033 (= (select (arr!2062 (_keys!4314 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!30565 (= (arrayContainsKey!0 (_keys!4314 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!70984)))

(declare-fun b!109126 () Bool)

(declare-fun e!70985 () Bool)

(assert (=> b!109126 (= e!70984 e!70985)))

(declare-fun res!54034 () Bool)

(assert (=> b!109126 (=> (not res!54034) (not e!70985))))

(assert (=> b!109126 (= res!54034 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!109127 () Bool)

(assert (=> b!109127 (= e!70985 (arrayContainsKey!0 (_keys!4314 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!30565 (not res!54033)) b!109126))

(assert (= (and b!109126 res!54034) b!109127))

(assert (=> d!30565 m!123153))

(assert (=> b!109127 m!120387))

(declare-fun m!123203 () Bool)

(assert (=> b!109127 m!123203))

(assert (=> b!108014 d!30565))

(declare-fun d!30567 () Bool)

(declare-fun e!70986 () Bool)

(assert (=> d!30567 e!70986))

(declare-fun res!54035 () Bool)

(assert (=> d!30567 (=> res!54035 e!70986)))

(declare-fun lt!56071 () Bool)

(assert (=> d!30567 (= res!54035 (not lt!56071))))

(declare-fun lt!56072 () Bool)

(assert (=> d!30567 (= lt!56071 lt!56072)))

(declare-fun lt!56074 () Unit!3307)

(declare-fun e!70987 () Unit!3307)

(assert (=> d!30567 (= lt!56074 e!70987)))

(declare-fun c!19276 () Bool)

(assert (=> d!30567 (= c!19276 lt!56072)))

(assert (=> d!30567 (= lt!56072 (containsKey!159 (toList!790 lt!55645) (_1!1207 (tuple2!2393 lt!55172 lt!55171))))))

(assert (=> d!30567 (= (contains!824 lt!55645 (_1!1207 (tuple2!2393 lt!55172 lt!55171))) lt!56071)))

(declare-fun b!109128 () Bool)

(declare-fun lt!56073 () Unit!3307)

(assert (=> b!109128 (= e!70987 lt!56073)))

(assert (=> b!109128 (= lt!56073 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55645) (_1!1207 (tuple2!2393 lt!55172 lt!55171))))))

(assert (=> b!109128 (isDefined!109 (getValueByKey!155 (toList!790 lt!55645) (_1!1207 (tuple2!2393 lt!55172 lt!55171))))))

(declare-fun b!109129 () Bool)

(declare-fun Unit!3379 () Unit!3307)

(assert (=> b!109129 (= e!70987 Unit!3379)))

(declare-fun b!109130 () Bool)

(assert (=> b!109130 (= e!70986 (isDefined!109 (getValueByKey!155 (toList!790 lt!55645) (_1!1207 (tuple2!2393 lt!55172 lt!55171)))))))

(assert (= (and d!30567 c!19276) b!109128))

(assert (= (and d!30567 (not c!19276)) b!109129))

(assert (= (and d!30567 (not res!54035)) b!109130))

(declare-fun m!123205 () Bool)

(assert (=> d!30567 m!123205))

(declare-fun m!123207 () Bool)

(assert (=> b!109128 m!123207))

(assert (=> b!109128 m!121607))

(assert (=> b!109128 m!121607))

(declare-fun m!123209 () Bool)

(assert (=> b!109128 m!123209))

(assert (=> b!109130 m!121607))

(assert (=> b!109130 m!121607))

(assert (=> b!109130 m!123209))

(assert (=> d!29927 d!30567))

(declare-fun e!70989 () Option!161)

(declare-fun b!109133 () Bool)

(assert (=> b!109133 (= e!70989 (getValueByKey!155 (t!5730 lt!55648) (_1!1207 (tuple2!2393 lt!55172 lt!55171))))))

(declare-fun b!109132 () Bool)

(declare-fun e!70988 () Option!161)

(assert (=> b!109132 (= e!70988 e!70989)))

(declare-fun c!19278 () Bool)

(assert (=> b!109132 (= c!19278 (and ((_ is Cons!1619) lt!55648) (not (= (_1!1207 (h!2217 lt!55648)) (_1!1207 (tuple2!2393 lt!55172 lt!55171))))))))

(declare-fun c!19277 () Bool)

(declare-fun d!30569 () Bool)

(assert (=> d!30569 (= c!19277 (and ((_ is Cons!1619) lt!55648) (= (_1!1207 (h!2217 lt!55648)) (_1!1207 (tuple2!2393 lt!55172 lt!55171)))))))

(assert (=> d!30569 (= (getValueByKey!155 lt!55648 (_1!1207 (tuple2!2393 lt!55172 lt!55171))) e!70988)))

(declare-fun b!109134 () Bool)

(assert (=> b!109134 (= e!70989 None!159)))

(declare-fun b!109131 () Bool)

(assert (=> b!109131 (= e!70988 (Some!160 (_2!1207 (h!2217 lt!55648))))))

(assert (= (and d!30569 c!19277) b!109131))

(assert (= (and d!30569 (not c!19277)) b!109132))

(assert (= (and b!109132 c!19278) b!109133))

(assert (= (and b!109132 (not c!19278)) b!109134))

(declare-fun m!123211 () Bool)

(assert (=> b!109133 m!123211))

(assert (=> d!29927 d!30569))

(declare-fun d!30571 () Bool)

(assert (=> d!30571 (= (getValueByKey!155 lt!55648 (_1!1207 (tuple2!2393 lt!55172 lt!55171))) (Some!160 (_2!1207 (tuple2!2393 lt!55172 lt!55171))))))

(declare-fun lt!56075 () Unit!3307)

(assert (=> d!30571 (= lt!56075 (choose!679 lt!55648 (_1!1207 (tuple2!2393 lt!55172 lt!55171)) (_2!1207 (tuple2!2393 lt!55172 lt!55171))))))

(declare-fun e!70990 () Bool)

(assert (=> d!30571 e!70990))

(declare-fun res!54036 () Bool)

(assert (=> d!30571 (=> (not res!54036) (not e!70990))))

(assert (=> d!30571 (= res!54036 (isStrictlySorted!305 lt!55648))))

(assert (=> d!30571 (= (lemmaContainsTupThenGetReturnValue!74 lt!55648 (_1!1207 (tuple2!2393 lt!55172 lt!55171)) (_2!1207 (tuple2!2393 lt!55172 lt!55171))) lt!56075)))

(declare-fun b!109135 () Bool)

(declare-fun res!54037 () Bool)

(assert (=> b!109135 (=> (not res!54037) (not e!70990))))

(assert (=> b!109135 (= res!54037 (containsKey!159 lt!55648 (_1!1207 (tuple2!2393 lt!55172 lt!55171))))))

(declare-fun b!109136 () Bool)

(assert (=> b!109136 (= e!70990 (contains!826 lt!55648 (tuple2!2393 (_1!1207 (tuple2!2393 lt!55172 lt!55171)) (_2!1207 (tuple2!2393 lt!55172 lt!55171)))))))

(assert (= (and d!30571 res!54036) b!109135))

(assert (= (and b!109135 res!54037) b!109136))

(assert (=> d!30571 m!121601))

(declare-fun m!123213 () Bool)

(assert (=> d!30571 m!123213))

(declare-fun m!123215 () Bool)

(assert (=> d!30571 m!123215))

(declare-fun m!123217 () Bool)

(assert (=> b!109135 m!123217))

(declare-fun m!123219 () Bool)

(assert (=> b!109136 m!123219))

(assert (=> d!29927 d!30571))

(declare-fun bm!11568 () Bool)

(declare-fun call!11572 () List!1623)

(declare-fun call!11571 () List!1623)

(assert (=> bm!11568 (= call!11572 call!11571)))

(declare-fun b!109137 () Bool)

(declare-fun e!70995 () List!1623)

(assert (=> b!109137 (= e!70995 call!11572)))

(declare-fun b!109139 () Bool)

(declare-fun e!70992 () List!1623)

(declare-fun call!11573 () List!1623)

(assert (=> b!109139 (= e!70992 call!11573)))

(declare-fun lt!56076 () List!1623)

(declare-fun e!70991 () Bool)

(declare-fun b!109140 () Bool)

(assert (=> b!109140 (= e!70991 (contains!826 lt!56076 (tuple2!2393 (_1!1207 (tuple2!2393 lt!55172 lt!55171)) (_2!1207 (tuple2!2393 lt!55172 lt!55171)))))))

(declare-fun e!70993 () List!1623)

(declare-fun b!109141 () Bool)

(assert (=> b!109141 (= e!70993 (insertStrictlySorted!77 (t!5730 (toList!790 lt!55169)) (_1!1207 (tuple2!2393 lt!55172 lt!55171)) (_2!1207 (tuple2!2393 lt!55172 lt!55171))))))

(declare-fun b!109142 () Bool)

(declare-fun e!70994 () List!1623)

(assert (=> b!109142 (= e!70994 call!11571)))

(declare-fun bm!11569 () Bool)

(declare-fun c!19279 () Bool)

(assert (=> bm!11569 (= call!11571 ($colon$colon!81 e!70993 (ite c!19279 (h!2217 (toList!790 lt!55169)) (tuple2!2393 (_1!1207 (tuple2!2393 lt!55172 lt!55171)) (_2!1207 (tuple2!2393 lt!55172 lt!55171))))))))

(declare-fun c!19281 () Bool)

(assert (=> bm!11569 (= c!19281 c!19279)))

(declare-fun bm!11570 () Bool)

(assert (=> bm!11570 (= call!11573 call!11572)))

(declare-fun c!19282 () Bool)

(declare-fun b!109143 () Bool)

(assert (=> b!109143 (= c!19282 (and ((_ is Cons!1619) (toList!790 lt!55169)) (bvsgt (_1!1207 (h!2217 (toList!790 lt!55169))) (_1!1207 (tuple2!2393 lt!55172 lt!55171)))))))

(assert (=> b!109143 (= e!70995 e!70992)))

(declare-fun b!109138 () Bool)

(declare-fun res!54039 () Bool)

(assert (=> b!109138 (=> (not res!54039) (not e!70991))))

(assert (=> b!109138 (= res!54039 (containsKey!159 lt!56076 (_1!1207 (tuple2!2393 lt!55172 lt!55171))))))

(declare-fun d!30573 () Bool)

(assert (=> d!30573 e!70991))

(declare-fun res!54038 () Bool)

(assert (=> d!30573 (=> (not res!54038) (not e!70991))))

(assert (=> d!30573 (= res!54038 (isStrictlySorted!305 lt!56076))))

(assert (=> d!30573 (= lt!56076 e!70994)))

(assert (=> d!30573 (= c!19279 (and ((_ is Cons!1619) (toList!790 lt!55169)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55169))) (_1!1207 (tuple2!2393 lt!55172 lt!55171)))))))

(assert (=> d!30573 (isStrictlySorted!305 (toList!790 lt!55169))))

(assert (=> d!30573 (= (insertStrictlySorted!77 (toList!790 lt!55169) (_1!1207 (tuple2!2393 lt!55172 lt!55171)) (_2!1207 (tuple2!2393 lt!55172 lt!55171))) lt!56076)))

(declare-fun b!109144 () Bool)

(assert (=> b!109144 (= e!70992 call!11573)))

(declare-fun b!109145 () Bool)

(declare-fun c!19280 () Bool)

(assert (=> b!109145 (= e!70993 (ite c!19280 (t!5730 (toList!790 lt!55169)) (ite c!19282 (Cons!1619 (h!2217 (toList!790 lt!55169)) (t!5730 (toList!790 lt!55169))) Nil!1620)))))

(declare-fun b!109146 () Bool)

(assert (=> b!109146 (= e!70994 e!70995)))

(assert (=> b!109146 (= c!19280 (and ((_ is Cons!1619) (toList!790 lt!55169)) (= (_1!1207 (h!2217 (toList!790 lt!55169))) (_1!1207 (tuple2!2393 lt!55172 lt!55171)))))))

(assert (= (and d!30573 c!19279) b!109142))

(assert (= (and d!30573 (not c!19279)) b!109146))

(assert (= (and b!109146 c!19280) b!109137))

(assert (= (and b!109146 (not c!19280)) b!109143))

(assert (= (and b!109143 c!19282) b!109144))

(assert (= (and b!109143 (not c!19282)) b!109139))

(assert (= (or b!109144 b!109139) bm!11570))

(assert (= (or b!109137 bm!11570) bm!11568))

(assert (= (or b!109142 bm!11568) bm!11569))

(assert (= (and bm!11569 c!19281) b!109141))

(assert (= (and bm!11569 (not c!19281)) b!109145))

(assert (= (and d!30573 res!54038) b!109138))

(assert (= (and b!109138 res!54039) b!109140))

(declare-fun m!123221 () Bool)

(assert (=> b!109140 m!123221))

(declare-fun m!123223 () Bool)

(assert (=> bm!11569 m!123223))

(declare-fun m!123225 () Bool)

(assert (=> b!109138 m!123225))

(declare-fun m!123227 () Bool)

(assert (=> d!30573 m!123227))

(declare-fun m!123229 () Bool)

(assert (=> d!30573 m!123229))

(declare-fun m!123231 () Bool)

(assert (=> b!109141 m!123231))

(assert (=> d!29927 d!30573))

(declare-fun d!30575 () Bool)

(declare-fun e!70996 () Bool)

(assert (=> d!30575 e!70996))

(declare-fun res!54041 () Bool)

(assert (=> d!30575 (=> (not res!54041) (not e!70996))))

(declare-fun lt!56077 () ListLongMap!1549)

(assert (=> d!30575 (= res!54041 (contains!824 lt!56077 (_1!1207 (ite (or c!18991 c!18992) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(declare-fun lt!56080 () List!1623)

(assert (=> d!30575 (= lt!56077 (ListLongMap!1550 lt!56080))))

(declare-fun lt!56078 () Unit!3307)

(declare-fun lt!56079 () Unit!3307)

(assert (=> d!30575 (= lt!56078 lt!56079)))

(assert (=> d!30575 (= (getValueByKey!155 lt!56080 (_1!1207 (ite (or c!18991 c!18992) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))) (Some!160 (_2!1207 (ite (or c!18991 c!18992) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!30575 (= lt!56079 (lemmaContainsTupThenGetReturnValue!74 lt!56080 (_1!1207 (ite (or c!18991 c!18992) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (_2!1207 (ite (or c!18991 c!18992) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!30575 (= lt!56080 (insertStrictlySorted!77 (toList!790 (ite c!18991 call!11482 (ite c!18992 call!11480 call!11481))) (_1!1207 (ite (or c!18991 c!18992) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) (_2!1207 (ite (or c!18991 c!18992) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))))

(assert (=> d!30575 (= (+!137 (ite c!18991 call!11482 (ite c!18992 call!11480 call!11481)) (ite (or c!18991 c!18992) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))) lt!56077)))

(declare-fun b!109147 () Bool)

(declare-fun res!54040 () Bool)

(assert (=> b!109147 (=> (not res!54040) (not e!70996))))

(assert (=> b!109147 (= res!54040 (= (getValueByKey!155 (toList!790 lt!56077) (_1!1207 (ite (or c!18991 c!18992) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))) (Some!160 (_2!1207 (ite (or c!18991 c!18992) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))))

(declare-fun b!109148 () Bool)

(assert (=> b!109148 (= e!70996 (contains!826 (toList!790 lt!56077) (ite (or c!18991 c!18992) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(assert (= (and d!30575 res!54041) b!109147))

(assert (= (and b!109147 res!54040) b!109148))

(declare-fun m!123233 () Bool)

(assert (=> d!30575 m!123233))

(declare-fun m!123235 () Bool)

(assert (=> d!30575 m!123235))

(declare-fun m!123237 () Bool)

(assert (=> d!30575 m!123237))

(declare-fun m!123239 () Bool)

(assert (=> d!30575 m!123239))

(declare-fun m!123241 () Bool)

(assert (=> b!109147 m!123241))

(declare-fun m!123243 () Bool)

(assert (=> b!109148 m!123243))

(assert (=> bm!11480 d!30575))

(declare-fun e!70998 () Option!161)

(declare-fun b!109151 () Bool)

(assert (=> b!109151 (= e!70998 (getValueByKey!155 (t!5730 (toList!790 lt!55295)) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun b!109150 () Bool)

(declare-fun e!70997 () Option!161)

(assert (=> b!109150 (= e!70997 e!70998)))

(declare-fun c!19284 () Bool)

(assert (=> b!109150 (= c!19284 (and ((_ is Cons!1619) (toList!790 lt!55295)) (not (= (_1!1207 (h!2217 (toList!790 lt!55295))) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))))

(declare-fun d!30577 () Bool)

(declare-fun c!19283 () Bool)

(assert (=> d!30577 (= c!19283 (and ((_ is Cons!1619) (toList!790 lt!55295)) (= (_1!1207 (h!2217 (toList!790 lt!55295))) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(assert (=> d!30577 (= (getValueByKey!155 (toList!790 lt!55295) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) e!70997)))

(declare-fun b!109152 () Bool)

(assert (=> b!109152 (= e!70998 None!159)))

(declare-fun b!109149 () Bool)

(assert (=> b!109149 (= e!70997 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55295)))))))

(assert (= (and d!30577 c!19283) b!109149))

(assert (= (and d!30577 (not c!19283)) b!109150))

(assert (= (and b!109150 c!19284) b!109151))

(assert (= (and b!109150 (not c!19284)) b!109152))

(declare-fun m!123245 () Bool)

(assert (=> b!109151 m!123245))

(assert (=> b!107826 d!30577))

(declare-fun d!30579 () Bool)

(assert (=> d!30579 (= ($colon$colon!81 e!70450 (ite c!19022 (h!2217 (toList!790 (+!137 lt!54981 lt!54985))) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977)))) (Cons!1619 (ite c!19022 (h!2217 (toList!790 (+!137 lt!54981 lt!54985))) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))) e!70450))))

(assert (=> bm!11495 d!30579))

(declare-fun d!30581 () Bool)

(declare-fun lt!56081 () (_ BitVec 32))

(assert (=> d!30581 (and (bvsge lt!56081 #b00000000000000000000000000000000) (bvsle lt!56081 (bvsub (size!2319 (_keys!4314 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!70999 () (_ BitVec 32))

(assert (=> d!30581 (= lt!56081 e!70999)))

(declare-fun c!19286 () Bool)

(assert (=> d!30581 (= c!19286 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!30581 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2319 (_keys!4314 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2319 (_keys!4314 newMap!16)) (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!30581 (= (arrayCountValidKeys!0 (_keys!4314 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2319 (_keys!4314 newMap!16))) lt!56081)))

(declare-fun b!109153 () Bool)

(assert (=> b!109153 (= e!70999 #b00000000000000000000000000000000)))

(declare-fun b!109154 () Bool)

(declare-fun e!71000 () (_ BitVec 32))

(declare-fun call!11574 () (_ BitVec 32))

(assert (=> b!109154 (= e!71000 (bvadd #b00000000000000000000000000000001 call!11574))))

(declare-fun b!109155 () Bool)

(assert (=> b!109155 (= e!70999 e!71000)))

(declare-fun c!19285 () Bool)

(assert (=> b!109155 (= c!19285 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!11571 () Bool)

(assert (=> bm!11571 (= call!11574 (arrayCountValidKeys!0 (_keys!4314 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!109156 () Bool)

(assert (=> b!109156 (= e!71000 call!11574)))

(assert (= (and d!30581 c!19286) b!109153))

(assert (= (and d!30581 (not c!19286)) b!109155))

(assert (= (and b!109155 c!19285) b!109154))

(assert (= (and b!109155 (not c!19285)) b!109156))

(assert (= (or b!109154 b!109156) bm!11571))

(assert (=> b!109155 m!123153))

(assert (=> b!109155 m!123153))

(assert (=> b!109155 m!123163))

(declare-fun m!123247 () Bool)

(assert (=> bm!11571 m!123247))

(assert (=> bm!11469 d!30581))

(declare-fun d!30583 () Bool)

(declare-fun res!54042 () Bool)

(declare-fun e!71001 () Bool)

(assert (=> d!30583 (=> res!54042 e!71001)))

(assert (=> d!30583 (= res!54042 (and ((_ is Cons!1619) (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))) (= (_1!1207 (h!2217 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253)))))))

(assert (=> d!30583 (= (containsKey!159 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))) e!71001)))

(declare-fun b!109157 () Bool)

(declare-fun e!71002 () Bool)

(assert (=> b!109157 (= e!71001 e!71002)))

(declare-fun res!54043 () Bool)

(assert (=> b!109157 (=> (not res!54043) (not e!71002))))

(assert (=> b!109157 (= res!54043 (and (or (not ((_ is Cons!1619) (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))) (bvsle (_1!1207 (h!2217 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253)))) ((_ is Cons!1619) (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))) (bvslt (_1!1207 (h!2217 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253)))))))

(declare-fun b!109158 () Bool)

(assert (=> b!109158 (= e!71002 (containsKey!159 (t!5730 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))))))

(assert (= (and d!30583 (not res!54042)) b!109157))

(assert (= (and b!109157 res!54043) b!109158))

(assert (=> b!109158 m!120729))

(declare-fun m!123249 () Bool)

(assert (=> b!109158 m!123249))

(assert (=> d!29853 d!30583))

(declare-fun d!30585 () Bool)

(declare-fun res!54044 () Bool)

(declare-fun e!71003 () Bool)

(assert (=> d!30585 (=> res!54044 e!71003)))

(assert (=> d!30585 (= res!54044 (and ((_ is Cons!1619) (toList!790 lt!55176)) (= (_1!1207 (h!2217 (toList!790 lt!55176))) (_1!1207 lt!54985))))))

(assert (=> d!30585 (= (containsKey!159 (toList!790 lt!55176) (_1!1207 lt!54985)) e!71003)))

(declare-fun b!109159 () Bool)

(declare-fun e!71004 () Bool)

(assert (=> b!109159 (= e!71003 e!71004)))

(declare-fun res!54045 () Bool)

(assert (=> b!109159 (=> (not res!54045) (not e!71004))))

(assert (=> b!109159 (= res!54045 (and (or (not ((_ is Cons!1619) (toList!790 lt!55176))) (bvsle (_1!1207 (h!2217 (toList!790 lt!55176))) (_1!1207 lt!54985))) ((_ is Cons!1619) (toList!790 lt!55176)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55176))) (_1!1207 lt!54985))))))

(declare-fun b!109160 () Bool)

(assert (=> b!109160 (= e!71004 (containsKey!159 (t!5730 (toList!790 lt!55176)) (_1!1207 lt!54985)))))

(assert (= (and d!30585 (not res!54044)) b!109159))

(assert (= (and b!109159 res!54045) b!109160))

(declare-fun m!123251 () Bool)

(assert (=> b!109160 m!123251))

(assert (=> d!29863 d!30585))

(declare-fun d!30587 () Bool)

(declare-fun e!71005 () Bool)

(assert (=> d!30587 e!71005))

(declare-fun res!54046 () Bool)

(assert (=> d!30587 (=> res!54046 e!71005)))

(declare-fun lt!56082 () Bool)

(assert (=> d!30587 (= res!54046 (not lt!56082))))

(declare-fun lt!56083 () Bool)

(assert (=> d!30587 (= lt!56082 lt!56083)))

(declare-fun lt!56085 () Unit!3307)

(declare-fun e!71006 () Unit!3307)

(assert (=> d!30587 (= lt!56085 e!71006)))

(declare-fun c!19287 () Bool)

(assert (=> d!30587 (= c!19287 lt!56083)))

(assert (=> d!30587 (= lt!56083 (containsKey!159 (toList!790 lt!55406) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!30587 (= (contains!824 lt!55406 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!56082)))

(declare-fun b!109161 () Bool)

(declare-fun lt!56084 () Unit!3307)

(assert (=> b!109161 (= e!71006 lt!56084)))

(assert (=> b!109161 (= lt!56084 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55406) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> b!109161 (isDefined!109 (getValueByKey!155 (toList!790 lt!55406) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!109162 () Bool)

(declare-fun Unit!3380 () Unit!3307)

(assert (=> b!109162 (= e!71006 Unit!3380)))

(declare-fun b!109163 () Bool)

(assert (=> b!109163 (= e!71005 (isDefined!109 (getValueByKey!155 (toList!790 lt!55406) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30587 c!19287) b!109161))

(assert (= (and d!30587 (not c!19287)) b!109162))

(assert (= (and d!30587 (not res!54046)) b!109163))

(declare-fun m!123253 () Bool)

(assert (=> d!30587 m!123253))

(declare-fun m!123255 () Bool)

(assert (=> b!109161 m!123255))

(assert (=> b!109161 m!120957))

(assert (=> b!109161 m!120957))

(declare-fun m!123257 () Bool)

(assert (=> b!109161 m!123257))

(assert (=> b!109163 m!120957))

(assert (=> b!109163 m!120957))

(assert (=> b!109163 m!123257))

(assert (=> d!29763 d!30587))

(declare-fun e!71008 () Option!161)

(declare-fun b!109166 () Bool)

(assert (=> b!109166 (= e!71008 (getValueByKey!155 (t!5730 lt!55409) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!109165 () Bool)

(declare-fun e!71007 () Option!161)

(assert (=> b!109165 (= e!71007 e!71008)))

(declare-fun c!19289 () Bool)

(assert (=> b!109165 (= c!19289 (and ((_ is Cons!1619) lt!55409) (not (= (_1!1207 (h!2217 lt!55409)) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun d!30589 () Bool)

(declare-fun c!19288 () Bool)

(assert (=> d!30589 (= c!19288 (and ((_ is Cons!1619) lt!55409) (= (_1!1207 (h!2217 lt!55409)) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30589 (= (getValueByKey!155 lt!55409 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!71007)))

(declare-fun b!109167 () Bool)

(assert (=> b!109167 (= e!71008 None!159)))

(declare-fun b!109164 () Bool)

(assert (=> b!109164 (= e!71007 (Some!160 (_2!1207 (h!2217 lt!55409))))))

(assert (= (and d!30589 c!19288) b!109164))

(assert (= (and d!30589 (not c!19288)) b!109165))

(assert (= (and b!109165 c!19289) b!109166))

(assert (= (and b!109165 (not c!19289)) b!109167))

(declare-fun m!123259 () Bool)

(assert (=> b!109166 m!123259))

(assert (=> d!29763 d!30589))

(declare-fun d!30591 () Bool)

(assert (=> d!30591 (= (getValueByKey!155 lt!55409 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!56086 () Unit!3307)

(assert (=> d!30591 (= lt!56086 (choose!679 lt!55409 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun e!71009 () Bool)

(assert (=> d!30591 e!71009))

(declare-fun res!54047 () Bool)

(assert (=> d!30591 (=> (not res!54047) (not e!71009))))

(assert (=> d!30591 (= res!54047 (isStrictlySorted!305 lt!55409))))

(assert (=> d!30591 (= (lemmaContainsTupThenGetReturnValue!74 lt!55409 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!56086)))

(declare-fun b!109168 () Bool)

(declare-fun res!54048 () Bool)

(assert (=> b!109168 (=> (not res!54048) (not e!71009))))

(assert (=> b!109168 (= res!54048 (containsKey!159 lt!55409 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!109169 () Bool)

(assert (=> b!109169 (= e!71009 (contains!826 lt!55409 (tuple2!2393 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30591 res!54047) b!109168))

(assert (= (and b!109168 res!54048) b!109169))

(assert (=> d!30591 m!120951))

(declare-fun m!123261 () Bool)

(assert (=> d!30591 m!123261))

(declare-fun m!123263 () Bool)

(assert (=> d!30591 m!123263))

(declare-fun m!123265 () Bool)

(assert (=> b!109168 m!123265))

(declare-fun m!123267 () Bool)

(assert (=> b!109169 m!123267))

(assert (=> d!29763 d!30591))

(declare-fun bm!11572 () Bool)

(declare-fun call!11576 () List!1623)

(declare-fun call!11575 () List!1623)

(assert (=> bm!11572 (= call!11576 call!11575)))

(declare-fun b!109170 () Bool)

(declare-fun e!71014 () List!1623)

(assert (=> b!109170 (= e!71014 call!11576)))

(declare-fun b!109172 () Bool)

(declare-fun e!71011 () List!1623)

(declare-fun call!11577 () List!1623)

(assert (=> b!109172 (= e!71011 call!11577)))

(declare-fun e!71010 () Bool)

(declare-fun lt!56087 () List!1623)

(declare-fun b!109173 () Bool)

(assert (=> b!109173 (= e!71010 (contains!826 lt!56087 (tuple2!2393 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun e!71012 () List!1623)

(declare-fun b!109174 () Bool)

(assert (=> b!109174 (= e!71012 (insertStrictlySorted!77 (t!5730 (toList!790 lt!55105)) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!109175 () Bool)

(declare-fun e!71013 () List!1623)

(assert (=> b!109175 (= e!71013 call!11575)))

(declare-fun bm!11573 () Bool)

(declare-fun c!19290 () Bool)

(assert (=> bm!11573 (= call!11575 ($colon$colon!81 e!71012 (ite c!19290 (h!2217 (toList!790 lt!55105)) (tuple2!2393 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun c!19292 () Bool)

(assert (=> bm!11573 (= c!19292 c!19290)))

(declare-fun bm!11574 () Bool)

(assert (=> bm!11574 (= call!11577 call!11576)))

(declare-fun c!19293 () Bool)

(declare-fun b!109176 () Bool)

(assert (=> b!109176 (= c!19293 (and ((_ is Cons!1619) (toList!790 lt!55105)) (bvsgt (_1!1207 (h!2217 (toList!790 lt!55105))) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> b!109176 (= e!71014 e!71011)))

(declare-fun b!109171 () Bool)

(declare-fun res!54050 () Bool)

(assert (=> b!109171 (=> (not res!54050) (not e!71010))))

(assert (=> b!109171 (= res!54050 (containsKey!159 lt!56087 (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun d!30593 () Bool)

(assert (=> d!30593 e!71010))

(declare-fun res!54049 () Bool)

(assert (=> d!30593 (=> (not res!54049) (not e!71010))))

(assert (=> d!30593 (= res!54049 (isStrictlySorted!305 lt!56087))))

(assert (=> d!30593 (= lt!56087 e!71013)))

(assert (=> d!30593 (= c!19290 (and ((_ is Cons!1619) (toList!790 lt!55105)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55105))) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30593 (isStrictlySorted!305 (toList!790 lt!55105))))

(assert (=> d!30593 (= (insertStrictlySorted!77 (toList!790 lt!55105) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!56087)))

(declare-fun b!109177 () Bool)

(assert (=> b!109177 (= e!71011 call!11577)))

(declare-fun c!19291 () Bool)

(declare-fun b!109178 () Bool)

(assert (=> b!109178 (= e!71012 (ite c!19291 (t!5730 (toList!790 lt!55105)) (ite c!19293 (Cons!1619 (h!2217 (toList!790 lt!55105)) (t!5730 (toList!790 lt!55105))) Nil!1620)))))

(declare-fun b!109179 () Bool)

(assert (=> b!109179 (= e!71013 e!71014)))

(assert (=> b!109179 (= c!19291 (and ((_ is Cons!1619) (toList!790 lt!55105)) (= (_1!1207 (h!2217 (toList!790 lt!55105))) (_1!1207 (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30593 c!19290) b!109175))

(assert (= (and d!30593 (not c!19290)) b!109179))

(assert (= (and b!109179 c!19291) b!109170))

(assert (= (and b!109179 (not c!19291)) b!109176))

(assert (= (and b!109176 c!19293) b!109177))

(assert (= (and b!109176 (not c!19293)) b!109172))

(assert (= (or b!109177 b!109172) bm!11574))

(assert (= (or b!109170 bm!11574) bm!11572))

(assert (= (or b!109175 bm!11572) bm!11573))

(assert (= (and bm!11573 c!19292) b!109174))

(assert (= (and bm!11573 (not c!19292)) b!109178))

(assert (= (and d!30593 res!54049) b!109171))

(assert (= (and b!109171 res!54050) b!109173))

(declare-fun m!123269 () Bool)

(assert (=> b!109173 m!123269))

(declare-fun m!123271 () Bool)

(assert (=> bm!11573 m!123271))

(declare-fun m!123273 () Bool)

(assert (=> b!109171 m!123273))

(declare-fun m!123275 () Bool)

(assert (=> d!30593 m!123275))

(declare-fun m!123277 () Bool)

(assert (=> d!30593 m!123277))

(declare-fun m!123279 () Bool)

(assert (=> b!109174 m!123279))

(assert (=> d!29763 d!30593))

(declare-fun d!30595 () Bool)

(declare-fun lt!56088 () Bool)

(assert (=> d!30595 (= lt!56088 (select (content!111 (toList!790 lt!55420)) (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun e!71016 () Bool)

(assert (=> d!30595 (= lt!56088 e!71016)))

(declare-fun res!54051 () Bool)

(assert (=> d!30595 (=> (not res!54051) (not e!71016))))

(assert (=> d!30595 (= res!54051 ((_ is Cons!1619) (toList!790 lt!55420)))))

(assert (=> d!30595 (= (contains!826 (toList!790 lt!55420) (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!56088)))

(declare-fun b!109180 () Bool)

(declare-fun e!71015 () Bool)

(assert (=> b!109180 (= e!71016 e!71015)))

(declare-fun res!54052 () Bool)

(assert (=> b!109180 (=> res!54052 e!71015)))

(assert (=> b!109180 (= res!54052 (= (h!2217 (toList!790 lt!55420)) (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!109181 () Bool)

(assert (=> b!109181 (= e!71015 (contains!826 (t!5730 (toList!790 lt!55420)) (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!30595 res!54051) b!109180))

(assert (= (and b!109180 (not res!54052)) b!109181))

(declare-fun m!123281 () Bool)

(assert (=> d!30595 m!123281))

(declare-fun m!123283 () Bool)

(assert (=> d!30595 m!123283))

(declare-fun m!123285 () Bool)

(assert (=> b!109181 m!123285))

(assert (=> b!107921 d!30595))

(declare-fun b!109184 () Bool)

(declare-fun e!71018 () Option!161)

(assert (=> b!109184 (= e!71018 (getValueByKey!155 (t!5730 (toList!790 lt!55496)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!109183 () Bool)

(declare-fun e!71017 () Option!161)

(assert (=> b!109183 (= e!71017 e!71018)))

(declare-fun c!19295 () Bool)

(assert (=> b!109183 (= c!19295 (and ((_ is Cons!1619) (toList!790 lt!55496)) (not (= (_1!1207 (h!2217 (toList!790 lt!55496))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(declare-fun d!30597 () Bool)

(declare-fun c!19294 () Bool)

(assert (=> d!30597 (= c!19294 (and ((_ is Cons!1619) (toList!790 lt!55496)) (= (_1!1207 (h!2217 (toList!790 lt!55496))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!30597 (= (getValueByKey!155 (toList!790 lt!55496) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) e!71017)))

(declare-fun b!109185 () Bool)

(assert (=> b!109185 (= e!71018 None!159)))

(declare-fun b!109182 () Bool)

(assert (=> b!109182 (= e!71017 (Some!160 (_2!1207 (h!2217 (toList!790 lt!55496)))))))

(assert (= (and d!30597 c!19294) b!109182))

(assert (= (and d!30597 (not c!19294)) b!109183))

(assert (= (and b!109183 c!19295) b!109184))

(assert (= (and b!109183 (not c!19295)) b!109185))

(declare-fun m!123287 () Bool)

(assert (=> b!109184 m!123287))

(assert (=> b!108041 d!30597))

(declare-fun d!30599 () Bool)

(declare-fun e!71019 () Bool)

(assert (=> d!30599 e!71019))

(declare-fun res!54053 () Bool)

(assert (=> d!30599 (=> res!54053 e!71019)))

(declare-fun lt!56089 () Bool)

(assert (=> d!30599 (= res!54053 (not lt!56089))))

(declare-fun lt!56090 () Bool)

(assert (=> d!30599 (= lt!56089 lt!56090)))

(declare-fun lt!56092 () Unit!3307)

(declare-fun e!71020 () Unit!3307)

(assert (=> d!30599 (= lt!56092 e!71020)))

(declare-fun c!19296 () Bool)

(assert (=> d!30599 (= c!19296 lt!56090)))

(assert (=> d!30599 (= lt!56090 (containsKey!159 (toList!790 lt!55428) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> d!30599 (= (contains!824 lt!55428 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!56089)))

(declare-fun b!109186 () Bool)

(declare-fun lt!56091 () Unit!3307)

(assert (=> b!109186 (= e!71020 lt!56091)))

(assert (=> b!109186 (= lt!56091 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55428) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(assert (=> b!109186 (isDefined!109 (getValueByKey!155 (toList!790 lt!55428) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!109187 () Bool)

(declare-fun Unit!3381 () Unit!3307)

(assert (=> b!109187 (= e!71020 Unit!3381)))

(declare-fun b!109188 () Bool)

(assert (=> b!109188 (= e!71019 (isDefined!109 (getValueByKey!155 (toList!790 lt!55428) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30599 c!19296) b!109186))

(assert (= (and d!30599 (not c!19296)) b!109187))

(assert (= (and d!30599 (not res!54053)) b!109188))

(declare-fun m!123289 () Bool)

(assert (=> d!30599 m!123289))

(declare-fun m!123291 () Bool)

(assert (=> b!109186 m!123291))

(assert (=> b!109186 m!121021))

(assert (=> b!109186 m!121021))

(declare-fun m!123293 () Bool)

(assert (=> b!109186 m!123293))

(assert (=> b!109188 m!121021))

(assert (=> b!109188 m!121021))

(assert (=> b!109188 m!123293))

(assert (=> d!29781 d!30599))

(declare-fun e!71022 () Option!161)

(declare-fun b!109191 () Bool)

(assert (=> b!109191 (= e!71022 (getValueByKey!155 (t!5730 lt!55431) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!109190 () Bool)

(declare-fun e!71021 () Option!161)

(assert (=> b!109190 (= e!71021 e!71022)))

(declare-fun c!19298 () Bool)

(assert (=> b!109190 (= c!19298 (and ((_ is Cons!1619) lt!55431) (not (= (_1!1207 (h!2217 lt!55431)) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun d!30601 () Bool)

(declare-fun c!19297 () Bool)

(assert (=> d!30601 (= c!19297 (and ((_ is Cons!1619) lt!55431) (= (_1!1207 (h!2217 lt!55431)) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30601 (= (getValueByKey!155 lt!55431 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) e!71021)))

(declare-fun b!109192 () Bool)

(assert (=> b!109192 (= e!71022 None!159)))

(declare-fun b!109189 () Bool)

(assert (=> b!109189 (= e!71021 (Some!160 (_2!1207 (h!2217 lt!55431))))))

(assert (= (and d!30601 c!19297) b!109189))

(assert (= (and d!30601 (not c!19297)) b!109190))

(assert (= (and b!109190 c!19298) b!109191))

(assert (= (and b!109190 (not c!19298)) b!109192))

(declare-fun m!123295 () Bool)

(assert (=> b!109191 m!123295))

(assert (=> d!29781 d!30601))

(declare-fun d!30603 () Bool)

(assert (=> d!30603 (= (getValueByKey!155 lt!55431 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) (Some!160 (_2!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun lt!56093 () Unit!3307)

(assert (=> d!30603 (= lt!56093 (choose!679 lt!55431 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun e!71023 () Bool)

(assert (=> d!30603 e!71023))

(declare-fun res!54054 () Bool)

(assert (=> d!30603 (=> (not res!54054) (not e!71023))))

(assert (=> d!30603 (= res!54054 (isStrictlySorted!305 lt!55431))))

(assert (=> d!30603 (= (lemmaContainsTupThenGetReturnValue!74 lt!55431 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!56093)))

(declare-fun b!109193 () Bool)

(declare-fun res!54055 () Bool)

(assert (=> b!109193 (=> (not res!54055) (not e!71023))))

(assert (=> b!109193 (= res!54055 (containsKey!159 lt!55431 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!109194 () Bool)

(assert (=> b!109194 (= e!71023 (contains!826 lt!55431 (tuple2!2393 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30603 res!54054) b!109193))

(assert (= (and b!109193 res!54055) b!109194))

(assert (=> d!30603 m!121015))

(declare-fun m!123297 () Bool)

(assert (=> d!30603 m!123297))

(declare-fun m!123299 () Bool)

(assert (=> d!30603 m!123299))

(declare-fun m!123301 () Bool)

(assert (=> b!109193 m!123301))

(declare-fun m!123303 () Bool)

(assert (=> b!109194 m!123303))

(assert (=> d!29781 d!30603))

(declare-fun bm!11575 () Bool)

(declare-fun call!11579 () List!1623)

(declare-fun call!11578 () List!1623)

(assert (=> bm!11575 (= call!11579 call!11578)))

(declare-fun b!109195 () Bool)

(declare-fun e!71028 () List!1623)

(assert (=> b!109195 (= e!71028 call!11579)))

(declare-fun b!109197 () Bool)

(declare-fun e!71025 () List!1623)

(declare-fun call!11580 () List!1623)

(assert (=> b!109197 (= e!71025 call!11580)))

(declare-fun e!71024 () Bool)

(declare-fun lt!56094 () List!1623)

(declare-fun b!109198 () Bool)

(assert (=> b!109198 (= e!71024 (contains!826 lt!56094 (tuple2!2393 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(declare-fun e!71026 () List!1623)

(declare-fun b!109199 () Bool)

(assert (=> b!109199 (= e!71026 (insertStrictlySorted!77 (t!5730 (toList!790 lt!55109)) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun b!109200 () Bool)

(declare-fun e!71027 () List!1623)

(assert (=> b!109200 (= e!71027 call!11578)))

(declare-fun c!19299 () Bool)

(declare-fun bm!11576 () Bool)

(assert (=> bm!11576 (= call!11578 ($colon$colon!81 e!71026 (ite c!19299 (h!2217 (toList!790 lt!55109)) (tuple2!2393 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))))

(declare-fun c!19301 () Bool)

(assert (=> bm!11576 (= c!19301 c!19299)))

(declare-fun bm!11577 () Bool)

(assert (=> bm!11577 (= call!11580 call!11579)))

(declare-fun b!109201 () Bool)

(declare-fun c!19302 () Bool)

(assert (=> b!109201 (= c!19302 (and ((_ is Cons!1619) (toList!790 lt!55109)) (bvsgt (_1!1207 (h!2217 (toList!790 lt!55109))) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> b!109201 (= e!71028 e!71025)))

(declare-fun b!109196 () Bool)

(declare-fun res!54057 () Bool)

(assert (=> b!109196 (=> (not res!54057) (not e!71024))))

(assert (=> b!109196 (= res!54057 (containsKey!159 lt!56094 (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))))))

(declare-fun d!30605 () Bool)

(assert (=> d!30605 e!71024))

(declare-fun res!54056 () Bool)

(assert (=> d!30605 (=> (not res!54056) (not e!71024))))

(assert (=> d!30605 (= res!54056 (isStrictlySorted!305 lt!56094))))

(assert (=> d!30605 (= lt!56094 e!71027)))

(assert (=> d!30605 (= c!19299 (and ((_ is Cons!1619) (toList!790 lt!55109)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55109))) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (=> d!30605 (isStrictlySorted!305 (toList!790 lt!55109))))

(assert (=> d!30605 (= (insertStrictlySorted!77 (toList!790 lt!55109) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) (_2!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!56094)))

(declare-fun b!109202 () Bool)

(assert (=> b!109202 (= e!71025 call!11580)))

(declare-fun b!109203 () Bool)

(declare-fun c!19300 () Bool)

(assert (=> b!109203 (= e!71026 (ite c!19300 (t!5730 (toList!790 lt!55109)) (ite c!19302 (Cons!1619 (h!2217 (toList!790 lt!55109)) (t!5730 (toList!790 lt!55109))) Nil!1620)))))

(declare-fun b!109204 () Bool)

(assert (=> b!109204 (= e!71027 e!71028)))

(assert (=> b!109204 (= c!19300 (and ((_ is Cons!1619) (toList!790 lt!55109)) (= (_1!1207 (h!2217 (toList!790 lt!55109))) (_1!1207 (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))))

(assert (= (and d!30605 c!19299) b!109200))

(assert (= (and d!30605 (not c!19299)) b!109204))

(assert (= (and b!109204 c!19300) b!109195))

(assert (= (and b!109204 (not c!19300)) b!109201))

(assert (= (and b!109201 c!19302) b!109202))

(assert (= (and b!109201 (not c!19302)) b!109197))

(assert (= (or b!109202 b!109197) bm!11577))

(assert (= (or b!109195 bm!11577) bm!11575))

(assert (= (or b!109200 bm!11575) bm!11576))

(assert (= (and bm!11576 c!19301) b!109199))

(assert (= (and bm!11576 (not c!19301)) b!109203))

(assert (= (and d!30605 res!54056) b!109196))

(assert (= (and b!109196 res!54057) b!109198))

(declare-fun m!123305 () Bool)

(assert (=> b!109198 m!123305))

(declare-fun m!123307 () Bool)

(assert (=> bm!11576 m!123307))

(declare-fun m!123309 () Bool)

(assert (=> b!109196 m!123309))

(declare-fun m!123311 () Bool)

(assert (=> d!30605 m!123311))

(declare-fun m!123313 () Bool)

(assert (=> d!30605 m!123313))

(declare-fun m!123315 () Bool)

(assert (=> b!109199 m!123315))

(assert (=> d!29781 d!30605))

(declare-fun d!30607 () Bool)

(declare-fun res!54059 () Bool)

(declare-fun e!71030 () Bool)

(assert (=> d!30607 (=> res!54059 e!71030)))

(assert (=> d!30607 (= res!54059 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 (v!2904 (underlying!360 thiss!992))))))))

(assert (=> d!30607 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4314 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992)))) e!71030)))

(declare-fun b!109205 () Bool)

(declare-fun e!71029 () Bool)

(declare-fun e!71031 () Bool)

(assert (=> b!109205 (= e!71029 e!71031)))

(declare-fun lt!56096 () (_ BitVec 64))

(assert (=> b!109205 (= lt!56096 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!56095 () Unit!3307)

(assert (=> b!109205 (= lt!56095 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) lt!56096 #b00000000000000000000000000000000))))

(assert (=> b!109205 (arrayContainsKey!0 (_keys!4314 (v!2904 (underlying!360 thiss!992))) lt!56096 #b00000000000000000000000000000000)))

(declare-fun lt!56097 () Unit!3307)

(assert (=> b!109205 (= lt!56097 lt!56095)))

(declare-fun res!54058 () Bool)

(assert (=> b!109205 (= res!54058 (= (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) #b00000000000000000000000000000000) (_keys!4314 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992)))) (Found!263 #b00000000000000000000000000000000)))))

(assert (=> b!109205 (=> (not res!54058) (not e!71031))))

(declare-fun bm!11578 () Bool)

(declare-fun call!11581 () Bool)

(assert (=> bm!11578 (= call!11581 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4314 (v!2904 (underlying!360 thiss!992))) (mask!6762 (v!2904 (underlying!360 thiss!992)))))))

(declare-fun b!109206 () Bool)

(assert (=> b!109206 (= e!71031 call!11581)))

(declare-fun b!109207 () Bool)

(assert (=> b!109207 (= e!71030 e!71029)))

(declare-fun c!19303 () Bool)

(assert (=> b!109207 (= c!19303 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!109208 () Bool)

(assert (=> b!109208 (= e!71029 call!11581)))

(assert (= (and d!30607 (not res!54059)) b!109207))

(assert (= (and b!109207 c!19303) b!109205))

(assert (= (and b!109207 (not c!19303)) b!109208))

(assert (= (and b!109205 res!54058) b!109206))

(assert (= (or b!109206 b!109208) bm!11578))

(assert (=> b!109205 m!121651))

(declare-fun m!123317 () Bool)

(assert (=> b!109205 m!123317))

(declare-fun m!123319 () Bool)

(assert (=> b!109205 m!123319))

(assert (=> b!109205 m!121651))

(declare-fun m!123321 () Bool)

(assert (=> b!109205 m!123321))

(declare-fun m!123323 () Bool)

(assert (=> bm!11578 m!123323))

(assert (=> b!109207 m!121651))

(assert (=> b!109207 m!121651))

(assert (=> b!109207 m!121653))

(assert (=> b!108267 d!30607))

(assert (=> b!108249 d!30039))

(assert (=> b!108249 d!29879))

(declare-fun d!30609 () Bool)

(declare-fun res!54060 () Bool)

(declare-fun e!71032 () Bool)

(assert (=> d!30609 (=> res!54060 e!71032)))

(assert (=> d!30609 (= res!54060 (and ((_ is Cons!1619) (toList!790 lt!55124)) (= (_1!1207 (h!2217 (toList!790 lt!55124))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30609 (= (containsKey!159 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000) e!71032)))

(declare-fun b!109209 () Bool)

(declare-fun e!71033 () Bool)

(assert (=> b!109209 (= e!71032 e!71033)))

(declare-fun res!54061 () Bool)

(assert (=> b!109209 (=> (not res!54061) (not e!71033))))

(assert (=> b!109209 (= res!54061 (and (or (not ((_ is Cons!1619) (toList!790 lt!55124))) (bvsle (_1!1207 (h!2217 (toList!790 lt!55124))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1619) (toList!790 lt!55124)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55124))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109210 () Bool)

(assert (=> b!109210 (= e!71033 (containsKey!159 (t!5730 (toList!790 lt!55124)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30609 (not res!54060)) b!109209))

(assert (= (and b!109209 res!54061) b!109210))

(declare-fun m!123325 () Bool)

(assert (=> b!109210 m!123325))

(assert (=> d!29829 d!30609))

(assert (=> b!107846 d!30059))

(assert (=> b!107846 d!30061))

(declare-fun d!30611 () Bool)

(declare-fun lt!56098 () Bool)

(assert (=> d!30611 (= lt!56098 (select (content!111 lt!55546) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(declare-fun e!71035 () Bool)

(assert (=> d!30611 (= lt!56098 e!71035)))

(declare-fun res!54062 () Bool)

(assert (=> d!30611 (=> (not res!54062) (not e!71035))))

(assert (=> d!30611 (= res!54062 ((_ is Cons!1619) lt!55546))))

(assert (=> d!30611 (= (contains!826 lt!55546 (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))) lt!56098)))

(declare-fun b!109211 () Bool)

(declare-fun e!71034 () Bool)

(assert (=> b!109211 (= e!71035 e!71034)))

(declare-fun res!54063 () Bool)

(assert (=> b!109211 (=> res!54063 e!71034)))

(assert (=> b!109211 (= res!54063 (= (h!2217 lt!55546) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(declare-fun b!109212 () Bool)

(assert (=> b!109212 (= e!71034 (contains!826 (t!5730 lt!55546) (tuple2!2393 (_1!1207 lt!54985) (_2!1207 lt!54985))))))

(assert (= (and d!30611 res!54062) b!109211))

(assert (= (and b!109211 (not res!54063)) b!109212))

(declare-fun m!123327 () Bool)

(assert (=> d!30611 m!123327))

(declare-fun m!123329 () Bool)

(assert (=> d!30611 m!123329))

(declare-fun m!123331 () Bool)

(assert (=> b!109212 m!123331))

(assert (=> b!108107 d!30611))

(assert (=> d!29887 d!29875))

(declare-fun b!109213 () Bool)

(declare-fun e!71046 () Unit!3307)

(declare-fun Unit!3382 () Unit!3307)

(assert (=> b!109213 (= e!71046 Unit!3382)))

(declare-fun b!109214 () Bool)

(declare-fun e!71047 () Bool)

(declare-fun lt!56119 () ListLongMap!1549)

(assert (=> b!109214 (= e!71047 (= (apply!99 lt!56119 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 (_values!2588 newMap!16)) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109214 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 (_values!2588 newMap!16))))))

(assert (=> b!109214 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!109215 () Bool)

(declare-fun e!71044 () ListLongMap!1549)

(declare-fun e!71043 () ListLongMap!1549)

(assert (=> b!109215 (= e!71044 e!71043)))

(declare-fun c!19306 () Bool)

(assert (=> b!109215 (= c!19306 (and (not (= (bvand lt!55272 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!55272 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11579 () Bool)

(declare-fun call!11582 () Bool)

(assert (=> bm!11579 (= call!11582 (contains!824 lt!56119 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109216 () Bool)

(declare-fun e!71045 () Bool)

(declare-fun e!71041 () Bool)

(assert (=> b!109216 (= e!71045 e!71041)))

(declare-fun res!54064 () Bool)

(declare-fun call!11587 () Bool)

(assert (=> b!109216 (= res!54064 call!11587)))

(assert (=> b!109216 (=> (not res!54064) (not e!71041))))

(declare-fun d!30613 () Bool)

(declare-fun e!71036 () Bool)

(assert (=> d!30613 e!71036))

(declare-fun res!54065 () Bool)

(assert (=> d!30613 (=> (not res!54065) (not e!71036))))

(assert (=> d!30613 (= res!54065 (or (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))))

(declare-fun lt!56117 () ListLongMap!1549)

(assert (=> d!30613 (= lt!56119 lt!56117)))

(declare-fun lt!56113 () Unit!3307)

(assert (=> d!30613 (= lt!56113 e!71046)))

(declare-fun c!19308 () Bool)

(declare-fun e!71039 () Bool)

(assert (=> d!30613 (= c!19308 e!71039)))

(declare-fun res!54070 () Bool)

(assert (=> d!30613 (=> (not res!54070) (not e!71039))))

(assert (=> d!30613 (= res!54070 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!30613 (= lt!56117 e!71044)))

(declare-fun c!19305 () Bool)

(assert (=> d!30613 (= c!19305 (and (not (= (bvand lt!55272 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!55272 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30613 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30613 (= (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55272 (zeroValue!2478 newMap!16) lt!54982 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!56119)))

(declare-fun b!109217 () Bool)

(assert (=> b!109217 (= e!71045 (not call!11587))))

(declare-fun b!109218 () Bool)

(declare-fun res!54071 () Bool)

(assert (=> b!109218 (=> (not res!54071) (not e!71036))))

(declare-fun e!71048 () Bool)

(assert (=> b!109218 (= res!54071 e!71048)))

(declare-fun res!54072 () Bool)

(assert (=> b!109218 (=> res!54072 e!71048)))

(declare-fun e!71042 () Bool)

(assert (=> b!109218 (= res!54072 (not e!71042))))

(declare-fun res!54067 () Bool)

(assert (=> b!109218 (=> (not res!54067) (not e!71042))))

(assert (=> b!109218 (= res!54067 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!109219 () Bool)

(assert (=> b!109219 (= e!71041 (= (apply!99 lt!56119 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!109220 () Bool)

(assert (=> b!109220 (= e!71042 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109221 () Bool)

(declare-fun call!11588 () ListLongMap!1549)

(assert (=> b!109221 (= e!71043 call!11588)))

(declare-fun bm!11580 () Bool)

(declare-fun call!11583 () ListLongMap!1549)

(declare-fun call!11585 () ListLongMap!1549)

(assert (=> bm!11580 (= call!11583 call!11585)))

(declare-fun bm!11581 () Bool)

(declare-fun call!11586 () ListLongMap!1549)

(assert (=> bm!11581 (= call!11588 call!11586)))

(declare-fun bm!11582 () Bool)

(assert (=> bm!11582 (= call!11587 (contains!824 lt!56119 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!11584 () ListLongMap!1549)

(declare-fun bm!11583 () Bool)

(assert (=> bm!11583 (= call!11586 (+!137 (ite c!19305 call!11585 (ite c!19306 call!11583 call!11584)) (ite (or c!19305 c!19306) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982))))))

(declare-fun b!109222 () Bool)

(declare-fun e!71038 () Bool)

(declare-fun e!71037 () Bool)

(assert (=> b!109222 (= e!71038 e!71037)))

(declare-fun res!54069 () Bool)

(assert (=> b!109222 (= res!54069 call!11582)))

(assert (=> b!109222 (=> (not res!54069) (not e!71037))))

(declare-fun bm!11584 () Bool)

(assert (=> bm!11584 (= call!11584 call!11583)))

(declare-fun b!109223 () Bool)

(assert (=> b!109223 (= e!71036 e!71038)))

(declare-fun c!19304 () Bool)

(assert (=> b!109223 (= c!19304 (not (= (bvand lt!55272 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!109224 () Bool)

(assert (=> b!109224 (= e!71048 e!71047)))

(declare-fun res!54066 () Bool)

(assert (=> b!109224 (=> (not res!54066) (not e!71047))))

(assert (=> b!109224 (= res!54066 (contains!824 lt!56119 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109224 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!109225 () Bool)

(declare-fun lt!56102 () Unit!3307)

(assert (=> b!109225 (= e!71046 lt!56102)))

(declare-fun lt!56100 () ListLongMap!1549)

(assert (=> b!109225 (= lt!56100 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55272 (zeroValue!2478 newMap!16) lt!54982 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56099 () (_ BitVec 64))

(assert (=> b!109225 (= lt!56099 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56105 () (_ BitVec 64))

(assert (=> b!109225 (= lt!56105 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56112 () Unit!3307)

(assert (=> b!109225 (= lt!56112 (addStillContains!75 lt!56100 lt!56099 (zeroValue!2478 newMap!16) lt!56105))))

(assert (=> b!109225 (contains!824 (+!137 lt!56100 (tuple2!2393 lt!56099 (zeroValue!2478 newMap!16))) lt!56105)))

(declare-fun lt!56103 () Unit!3307)

(assert (=> b!109225 (= lt!56103 lt!56112)))

(declare-fun lt!56110 () ListLongMap!1549)

(assert (=> b!109225 (= lt!56110 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55272 (zeroValue!2478 newMap!16) lt!54982 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56107 () (_ BitVec 64))

(assert (=> b!109225 (= lt!56107 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56115 () (_ BitVec 64))

(assert (=> b!109225 (= lt!56115 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56109 () Unit!3307)

(assert (=> b!109225 (= lt!56109 (addApplyDifferent!75 lt!56110 lt!56107 lt!54982 lt!56115))))

(assert (=> b!109225 (= (apply!99 (+!137 lt!56110 (tuple2!2393 lt!56107 lt!54982)) lt!56115) (apply!99 lt!56110 lt!56115))))

(declare-fun lt!56118 () Unit!3307)

(assert (=> b!109225 (= lt!56118 lt!56109)))

(declare-fun lt!56104 () ListLongMap!1549)

(assert (=> b!109225 (= lt!56104 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55272 (zeroValue!2478 newMap!16) lt!54982 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56101 () (_ BitVec 64))

(assert (=> b!109225 (= lt!56101 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56120 () (_ BitVec 64))

(assert (=> b!109225 (= lt!56120 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56114 () Unit!3307)

(assert (=> b!109225 (= lt!56114 (addApplyDifferent!75 lt!56104 lt!56101 (zeroValue!2478 newMap!16) lt!56120))))

(assert (=> b!109225 (= (apply!99 (+!137 lt!56104 (tuple2!2393 lt!56101 (zeroValue!2478 newMap!16))) lt!56120) (apply!99 lt!56104 lt!56120))))

(declare-fun lt!56111 () Unit!3307)

(assert (=> b!109225 (= lt!56111 lt!56114)))

(declare-fun lt!56116 () ListLongMap!1549)

(assert (=> b!109225 (= lt!56116 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55272 (zeroValue!2478 newMap!16) lt!54982 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56108 () (_ BitVec 64))

(assert (=> b!109225 (= lt!56108 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56106 () (_ BitVec 64))

(assert (=> b!109225 (= lt!56106 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109225 (= lt!56102 (addApplyDifferent!75 lt!56116 lt!56108 lt!54982 lt!56106))))

(assert (=> b!109225 (= (apply!99 (+!137 lt!56116 (tuple2!2393 lt!56108 lt!54982)) lt!56106) (apply!99 lt!56116 lt!56106))))

(declare-fun b!109226 () Bool)

(assert (=> b!109226 (= e!71044 (+!137 call!11586 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)))))

(declare-fun bm!11585 () Bool)

(assert (=> bm!11585 (= call!11585 (getCurrentListMapNoExtraKeys!102 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55272 (zeroValue!2478 newMap!16) lt!54982 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!109227 () Bool)

(declare-fun res!54068 () Bool)

(assert (=> b!109227 (=> (not res!54068) (not e!71036))))

(assert (=> b!109227 (= res!54068 e!71045)))

(declare-fun c!19309 () Bool)

(assert (=> b!109227 (= c!19309 (not (= (bvand lt!55272 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!109228 () Bool)

(assert (=> b!109228 (= e!71039 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109229 () Bool)

(declare-fun c!19307 () Bool)

(assert (=> b!109229 (= c!19307 (and (not (= (bvand lt!55272 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!55272 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71040 () ListLongMap!1549)

(assert (=> b!109229 (= e!71043 e!71040)))

(declare-fun b!109230 () Bool)

(assert (=> b!109230 (= e!71037 (= (apply!99 lt!56119 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54982))))

(declare-fun b!109231 () Bool)

(assert (=> b!109231 (= e!71038 (not call!11582))))

(declare-fun b!109232 () Bool)

(assert (=> b!109232 (= e!71040 call!11588)))

(declare-fun b!109233 () Bool)

(assert (=> b!109233 (= e!71040 call!11584)))

(assert (= (and d!30613 c!19305) b!109226))

(assert (= (and d!30613 (not c!19305)) b!109215))

(assert (= (and b!109215 c!19306) b!109221))

(assert (= (and b!109215 (not c!19306)) b!109229))

(assert (= (and b!109229 c!19307) b!109232))

(assert (= (and b!109229 (not c!19307)) b!109233))

(assert (= (or b!109232 b!109233) bm!11584))

(assert (= (or b!109221 bm!11584) bm!11580))

(assert (= (or b!109221 b!109232) bm!11581))

(assert (= (or b!109226 bm!11580) bm!11585))

(assert (= (or b!109226 bm!11581) bm!11583))

(assert (= (and d!30613 res!54070) b!109228))

(assert (= (and d!30613 c!19308) b!109225))

(assert (= (and d!30613 (not c!19308)) b!109213))

(assert (= (and d!30613 res!54065) b!109218))

(assert (= (and b!109218 res!54067) b!109220))

(assert (= (and b!109218 (not res!54072)) b!109224))

(assert (= (and b!109224 res!54066) b!109214))

(assert (= (and b!109218 res!54071) b!109227))

(assert (= (and b!109227 c!19309) b!109216))

(assert (= (and b!109227 (not c!19309)) b!109217))

(assert (= (and b!109216 res!54064) b!109219))

(assert (= (or b!109216 b!109217) bm!11582))

(assert (= (and b!109227 res!54068) b!109223))

(assert (= (and b!109223 c!19304) b!109222))

(assert (= (and b!109223 (not c!19304)) b!109231))

(assert (= (and b!109222 res!54069) b!109230))

(assert (= (or b!109222 b!109231) bm!11579))

(declare-fun b_lambda!4863 () Bool)

(assert (=> (not b_lambda!4863) (not b!109214)))

(assert (=> b!109214 t!5742))

(declare-fun b_and!6717 () Bool)

(assert (= b_and!6713 (and (=> t!5742 result!3505) b_and!6717)))

(assert (=> b!109214 t!5744))

(declare-fun b_and!6719 () Bool)

(assert (= b_and!6715 (and (=> t!5744 result!3507) b_and!6719)))

(assert (=> b!109214 m!121365))

(assert (=> b!109214 m!121113))

(assert (=> b!109214 m!121365))

(assert (=> b!109214 m!121113))

(assert (=> b!109214 m!121367))

(assert (=> b!109214 m!120769))

(declare-fun m!123333 () Bool)

(assert (=> b!109214 m!123333))

(assert (=> b!109214 m!120769))

(declare-fun m!123335 () Bool)

(assert (=> b!109230 m!123335))

(declare-fun m!123337 () Bool)

(assert (=> bm!11579 m!123337))

(declare-fun m!123339 () Bool)

(assert (=> bm!11585 m!123339))

(declare-fun m!123341 () Bool)

(assert (=> bm!11582 m!123341))

(assert (=> b!109220 m!120769))

(assert (=> b!109220 m!120769))

(assert (=> b!109220 m!120779))

(assert (=> b!109228 m!120769))

(assert (=> b!109228 m!120769))

(assert (=> b!109228 m!120779))

(declare-fun m!123343 () Bool)

(assert (=> bm!11583 m!123343))

(declare-fun m!123345 () Bool)

(assert (=> b!109226 m!123345))

(assert (=> d!30613 m!120787))

(declare-fun m!123347 () Bool)

(assert (=> b!109219 m!123347))

(assert (=> b!109224 m!120769))

(assert (=> b!109224 m!120769))

(declare-fun m!123349 () Bool)

(assert (=> b!109224 m!123349))

(declare-fun m!123351 () Bool)

(assert (=> b!109225 m!123351))

(declare-fun m!123353 () Bool)

(assert (=> b!109225 m!123353))

(declare-fun m!123355 () Bool)

(assert (=> b!109225 m!123355))

(declare-fun m!123357 () Bool)

(assert (=> b!109225 m!123357))

(declare-fun m!123359 () Bool)

(assert (=> b!109225 m!123359))

(declare-fun m!123361 () Bool)

(assert (=> b!109225 m!123361))

(declare-fun m!123363 () Bool)

(assert (=> b!109225 m!123363))

(declare-fun m!123365 () Bool)

(assert (=> b!109225 m!123365))

(assert (=> b!109225 m!123355))

(assert (=> b!109225 m!123361))

(declare-fun m!123367 () Bool)

(assert (=> b!109225 m!123367))

(assert (=> b!109225 m!123339))

(declare-fun m!123369 () Bool)

(assert (=> b!109225 m!123369))

(declare-fun m!123371 () Bool)

(assert (=> b!109225 m!123371))

(declare-fun m!123373 () Bool)

(assert (=> b!109225 m!123373))

(assert (=> b!109225 m!123363))

(declare-fun m!123375 () Bool)

(assert (=> b!109225 m!123375))

(declare-fun m!123377 () Bool)

(assert (=> b!109225 m!123377))

(assert (=> b!109225 m!120769))

(assert (=> b!109225 m!123373))

(declare-fun m!123379 () Bool)

(assert (=> b!109225 m!123379))

(assert (=> d!29887 d!30613))

(declare-fun d!30615 () Bool)

(assert (=> d!30615 (= (+!137 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) lt!55272 (zeroValue!2478 newMap!16) lt!54982 #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(assert (=> d!30615 true))

(declare-fun _$8!97 () Unit!3307)

(assert (=> d!30615 (= (choose!685 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) lt!55272 (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) lt!54982 (defaultEntry!2605 newMap!16)) _$8!97)))

(declare-fun bs!4497 () Bool)

(assert (= bs!4497 d!30615))

(assert (=> bs!4497 m!120539))

(assert (=> bs!4497 m!120539))

(assert (=> bs!4497 m!121439))

(assert (=> bs!4497 m!121437))

(assert (=> d!29887 d!30615))

(declare-fun d!30617 () Bool)

(declare-fun e!71049 () Bool)

(assert (=> d!30617 e!71049))

(declare-fun res!54074 () Bool)

(assert (=> d!30617 (=> (not res!54074) (not e!71049))))

(declare-fun lt!56121 () ListLongMap!1549)

(assert (=> d!30617 (= res!54074 (contains!824 lt!56121 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982))))))

(declare-fun lt!56124 () List!1623)

(assert (=> d!30617 (= lt!56121 (ListLongMap!1550 lt!56124))))

(declare-fun lt!56122 () Unit!3307)

(declare-fun lt!56123 () Unit!3307)

(assert (=> d!30617 (= lt!56122 lt!56123)))

(assert (=> d!30617 (= (getValueByKey!155 lt!56124 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982))))))

(assert (=> d!30617 (= lt!56123 (lemmaContainsTupThenGetReturnValue!74 lt!56124 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982))))))

(assert (=> d!30617 (= lt!56124 (insertStrictlySorted!77 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982))))))

(assert (=> d!30617 (= (+!137 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) lt!56121)))

(declare-fun b!109234 () Bool)

(declare-fun res!54073 () Bool)

(assert (=> b!109234 (=> (not res!54073) (not e!71049))))

(assert (=> b!109234 (= res!54073 (= (getValueByKey!155 (toList!790 lt!56121) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)))))))

(declare-fun b!109235 () Bool)

(assert (=> b!109235 (= e!71049 (contains!826 (toList!790 lt!56121) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)))))

(assert (= (and d!30617 res!54074) b!109234))

(assert (= (and b!109234 res!54073) b!109235))

(declare-fun m!123381 () Bool)

(assert (=> d!30617 m!123381))

(declare-fun m!123383 () Bool)

(assert (=> d!30617 m!123383))

(declare-fun m!123385 () Bool)

(assert (=> d!30617 m!123385))

(declare-fun m!123387 () Bool)

(assert (=> d!30617 m!123387))

(declare-fun m!123389 () Bool)

(assert (=> b!109234 m!123389))

(declare-fun m!123391 () Bool)

(assert (=> b!109235 m!123391))

(assert (=> d!29887 d!30617))

(assert (=> d!29887 d!29941))

(assert (=> b!108233 d!30537))

(declare-fun d!30619 () Bool)

(assert (=> d!30619 (= (apply!99 (+!137 lt!55623 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) lt!55613) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55623 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))) lt!55613)))))

(declare-fun bs!4498 () Bool)

(assert (= bs!4498 d!30619))

(declare-fun m!123393 () Bool)

(assert (=> bs!4498 m!123393))

(assert (=> bs!4498 m!123393))

(declare-fun m!123395 () Bool)

(assert (=> bs!4498 m!123395))

(assert (=> b!108233 d!30619))

(declare-fun d!30621 () Bool)

(declare-fun e!71050 () Bool)

(assert (=> d!30621 e!71050))

(declare-fun res!54076 () Bool)

(assert (=> d!30621 (=> (not res!54076) (not e!71050))))

(declare-fun lt!56125 () ListLongMap!1549)

(assert (=> d!30621 (= res!54076 (contains!824 lt!56125 (_1!1207 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))))))

(declare-fun lt!56128 () List!1623)

(assert (=> d!30621 (= lt!56125 (ListLongMap!1550 lt!56128))))

(declare-fun lt!56126 () Unit!3307)

(declare-fun lt!56127 () Unit!3307)

(assert (=> d!30621 (= lt!56126 lt!56127)))

(assert (=> d!30621 (= (getValueByKey!155 lt!56128 (_1!1207 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))) (Some!160 (_2!1207 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))))))

(assert (=> d!30621 (= lt!56127 (lemmaContainsTupThenGetReturnValue!74 lt!56128 (_1!1207 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))) (_2!1207 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))))))

(assert (=> d!30621 (= lt!56128 (insertStrictlySorted!77 (toList!790 lt!55607) (_1!1207 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))) (_2!1207 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))))))

(assert (=> d!30621 (= (+!137 lt!55607 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))) lt!56125)))

(declare-fun b!109236 () Bool)

(declare-fun res!54075 () Bool)

(assert (=> b!109236 (=> (not res!54075) (not e!71050))))

(assert (=> b!109236 (= res!54075 (= (getValueByKey!155 (toList!790 lt!56125) (_1!1207 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))) (Some!160 (_2!1207 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))))))))

(declare-fun b!109237 () Bool)

(assert (=> b!109237 (= e!71050 (contains!826 (toList!790 lt!56125) (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))))))

(assert (= (and d!30621 res!54076) b!109236))

(assert (= (and b!109236 res!54075) b!109237))

(declare-fun m!123397 () Bool)

(assert (=> d!30621 m!123397))

(declare-fun m!123399 () Bool)

(assert (=> d!30621 m!123399))

(declare-fun m!123401 () Bool)

(assert (=> d!30621 m!123401))

(declare-fun m!123403 () Bool)

(assert (=> d!30621 m!123403))

(declare-fun m!123405 () Bool)

(assert (=> b!109236 m!123405))

(declare-fun m!123407 () Bool)

(assert (=> b!109237 m!123407))

(assert (=> b!108233 d!30621))

(declare-fun d!30623 () Bool)

(assert (=> d!30623 (= (apply!99 lt!55617 lt!55622) (get!1344 (getValueByKey!155 (toList!790 lt!55617) lt!55622)))))

(declare-fun bs!4499 () Bool)

(assert (= bs!4499 d!30623))

(declare-fun m!123409 () Bool)

(assert (=> bs!4499 m!123409))

(assert (=> bs!4499 m!123409))

(declare-fun m!123411 () Bool)

(assert (=> bs!4499 m!123411))

(assert (=> b!108233 d!30623))

(declare-fun d!30625 () Bool)

(assert (=> d!30625 (contains!824 (+!137 lt!55607 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))) lt!55612)))

(declare-fun lt!56129 () Unit!3307)

(assert (=> d!30625 (= lt!56129 (choose!678 lt!55607 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) lt!55612))))

(assert (=> d!30625 (contains!824 lt!55607 lt!55612)))

(assert (=> d!30625 (= (addStillContains!75 lt!55607 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) lt!55612) lt!56129)))

(declare-fun bs!4500 () Bool)

(assert (= bs!4500 d!30625))

(assert (=> bs!4500 m!121521))

(assert (=> bs!4500 m!121521))

(assert (=> bs!4500 m!121533))

(declare-fun m!123413 () Bool)

(assert (=> bs!4500 m!123413))

(declare-fun m!123415 () Bool)

(assert (=> bs!4500 m!123415))

(assert (=> b!108233 d!30625))

(declare-fun d!30627 () Bool)

(assert (=> d!30627 (= (apply!99 (+!137 lt!55623 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) lt!55613) (apply!99 lt!55623 lt!55613))))

(declare-fun lt!56130 () Unit!3307)

(assert (=> d!30627 (= lt!56130 (choose!677 lt!55623 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) lt!55613))))

(declare-fun e!71051 () Bool)

(assert (=> d!30627 e!71051))

(declare-fun res!54077 () Bool)

(assert (=> d!30627 (=> (not res!54077) (not e!71051))))

(assert (=> d!30627 (= res!54077 (contains!824 lt!55623 lt!55613))))

(assert (=> d!30627 (= (addApplyDifferent!75 lt!55623 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) lt!55613) lt!56130)))

(declare-fun b!109238 () Bool)

(assert (=> b!109238 (= e!71051 (not (= lt!55613 lt!55615)))))

(assert (= (and d!30627 res!54077) b!109238))

(assert (=> d!30627 m!121529))

(declare-fun m!123417 () Bool)

(assert (=> d!30627 m!123417))

(assert (=> d!30627 m!121519))

(declare-fun m!123419 () Bool)

(assert (=> d!30627 m!123419))

(assert (=> d!30627 m!121519))

(assert (=> d!30627 m!121525))

(assert (=> b!108233 d!30627))

(declare-fun d!30629 () Bool)

(assert (=> d!30629 (= (apply!99 (+!137 lt!55611 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))) lt!55627) (apply!99 lt!55611 lt!55627))))

(declare-fun lt!56131 () Unit!3307)

(assert (=> d!30629 (= lt!56131 (choose!677 lt!55611 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) lt!55627))))

(declare-fun e!71052 () Bool)

(assert (=> d!30629 e!71052))

(declare-fun res!54078 () Bool)

(assert (=> d!30629 (=> (not res!54078) (not e!71052))))

(assert (=> d!30629 (= res!54078 (contains!824 lt!55611 lt!55627))))

(assert (=> d!30629 (= (addApplyDifferent!75 lt!55611 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)) lt!55627) lt!56131)))

(declare-fun b!109239 () Bool)

(assert (=> b!109239 (= e!71052 (not (= lt!55627 lt!55608)))))

(assert (= (and d!30629 res!54078) b!109239))

(assert (=> d!30629 m!121517))

(declare-fun m!123421 () Bool)

(assert (=> d!30629 m!123421))

(assert (=> d!30629 m!121531))

(declare-fun m!123423 () Bool)

(assert (=> d!30629 m!123423))

(assert (=> d!30629 m!121531))

(assert (=> d!30629 m!121537))

(assert (=> b!108233 d!30629))

(declare-fun d!30631 () Bool)

(assert (=> d!30631 (= (apply!99 (+!137 lt!55617 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) lt!55622) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55617 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))) lt!55622)))))

(declare-fun bs!4501 () Bool)

(assert (= bs!4501 d!30631))

(declare-fun m!123425 () Bool)

(assert (=> bs!4501 m!123425))

(assert (=> bs!4501 m!123425))

(declare-fun m!123427 () Bool)

(assert (=> bs!4501 m!123427))

(assert (=> b!108233 d!30631))

(declare-fun d!30633 () Bool)

(declare-fun e!71053 () Bool)

(assert (=> d!30633 e!71053))

(declare-fun res!54079 () Bool)

(assert (=> d!30633 (=> res!54079 e!71053)))

(declare-fun lt!56132 () Bool)

(assert (=> d!30633 (= res!54079 (not lt!56132))))

(declare-fun lt!56133 () Bool)

(assert (=> d!30633 (= lt!56132 lt!56133)))

(declare-fun lt!56135 () Unit!3307)

(declare-fun e!71054 () Unit!3307)

(assert (=> d!30633 (= lt!56135 e!71054)))

(declare-fun c!19310 () Bool)

(assert (=> d!30633 (= c!19310 lt!56133)))

(assert (=> d!30633 (= lt!56133 (containsKey!159 (toList!790 (+!137 lt!55607 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))) lt!55612))))

(assert (=> d!30633 (= (contains!824 (+!137 lt!55607 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))) lt!55612) lt!56132)))

(declare-fun b!109240 () Bool)

(declare-fun lt!56134 () Unit!3307)

(assert (=> b!109240 (= e!71054 lt!56134)))

(assert (=> b!109240 (= lt!56134 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (+!137 lt!55607 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))) lt!55612))))

(assert (=> b!109240 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55607 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))) lt!55612))))

(declare-fun b!109241 () Bool)

(declare-fun Unit!3383 () Unit!3307)

(assert (=> b!109241 (= e!71054 Unit!3383)))

(declare-fun b!109242 () Bool)

(assert (=> b!109242 (= e!71053 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55607 (tuple2!2393 lt!55606 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))) lt!55612)))))

(assert (= (and d!30633 c!19310) b!109240))

(assert (= (and d!30633 (not c!19310)) b!109241))

(assert (= (and d!30633 (not res!54079)) b!109242))

(declare-fun m!123429 () Bool)

(assert (=> d!30633 m!123429))

(declare-fun m!123431 () Bool)

(assert (=> b!109240 m!123431))

(declare-fun m!123433 () Bool)

(assert (=> b!109240 m!123433))

(assert (=> b!109240 m!123433))

(declare-fun m!123435 () Bool)

(assert (=> b!109240 m!123435))

(assert (=> b!109242 m!123433))

(assert (=> b!109242 m!123433))

(assert (=> b!109242 m!123435))

(assert (=> b!108233 d!30633))

(declare-fun d!30635 () Bool)

(declare-fun e!71055 () Bool)

(assert (=> d!30635 e!71055))

(declare-fun res!54081 () Bool)

(assert (=> d!30635 (=> (not res!54081) (not e!71055))))

(declare-fun lt!56136 () ListLongMap!1549)

(assert (=> d!30635 (= res!54081 (contains!824 lt!56136 (_1!1207 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(declare-fun lt!56139 () List!1623)

(assert (=> d!30635 (= lt!56136 (ListLongMap!1550 lt!56139))))

(declare-fun lt!56137 () Unit!3307)

(declare-fun lt!56138 () Unit!3307)

(assert (=> d!30635 (= lt!56137 lt!56138)))

(assert (=> d!30635 (= (getValueByKey!155 lt!56139 (_1!1207 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))) (Some!160 (_2!1207 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(assert (=> d!30635 (= lt!56138 (lemmaContainsTupThenGetReturnValue!74 lt!56139 (_1!1207 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) (_2!1207 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(assert (=> d!30635 (= lt!56139 (insertStrictlySorted!77 (toList!790 lt!55623) (_1!1207 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) (_2!1207 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(assert (=> d!30635 (= (+!137 lt!55623 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) lt!56136)))

(declare-fun b!109243 () Bool)

(declare-fun res!54080 () Bool)

(assert (=> b!109243 (=> (not res!54080) (not e!71055))))

(assert (=> b!109243 (= res!54080 (= (getValueByKey!155 (toList!790 lt!56136) (_1!1207 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))) (Some!160 (_2!1207 (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))))))

(declare-fun b!109244 () Bool)

(assert (=> b!109244 (= e!71055 (contains!826 (toList!790 lt!56136) (tuple2!2393 lt!55615 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))))

(assert (= (and d!30635 res!54081) b!109243))

(assert (= (and b!109243 res!54080) b!109244))

(declare-fun m!123437 () Bool)

(assert (=> d!30635 m!123437))

(declare-fun m!123439 () Bool)

(assert (=> d!30635 m!123439))

(declare-fun m!123441 () Bool)

(assert (=> d!30635 m!123441))

(declare-fun m!123443 () Bool)

(assert (=> d!30635 m!123443))

(declare-fun m!123445 () Bool)

(assert (=> b!109243 m!123445))

(declare-fun m!123447 () Bool)

(assert (=> b!109244 m!123447))

(assert (=> b!108233 d!30635))

(declare-fun d!30637 () Bool)

(declare-fun e!71056 () Bool)

(assert (=> d!30637 e!71056))

(declare-fun res!54083 () Bool)

(assert (=> d!30637 (=> (not res!54083) (not e!71056))))

(declare-fun lt!56140 () ListLongMap!1549)

(assert (=> d!30637 (= res!54083 (contains!824 lt!56140 (_1!1207 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(declare-fun lt!56143 () List!1623)

(assert (=> d!30637 (= lt!56140 (ListLongMap!1550 lt!56143))))

(declare-fun lt!56141 () Unit!3307)

(declare-fun lt!56142 () Unit!3307)

(assert (=> d!30637 (= lt!56141 lt!56142)))

(assert (=> d!30637 (= (getValueByKey!155 lt!56143 (_1!1207 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))) (Some!160 (_2!1207 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(assert (=> d!30637 (= lt!56142 (lemmaContainsTupThenGetReturnValue!74 lt!56143 (_1!1207 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) (_2!1207 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(assert (=> d!30637 (= lt!56143 (insertStrictlySorted!77 (toList!790 lt!55617) (_1!1207 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) (_2!1207 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(assert (=> d!30637 (= (+!137 lt!55617 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) lt!56140)))

(declare-fun b!109245 () Bool)

(declare-fun res!54082 () Bool)

(assert (=> b!109245 (=> (not res!54082) (not e!71056))))

(assert (=> b!109245 (= res!54082 (= (getValueByKey!155 (toList!790 lt!56140) (_1!1207 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))) (Some!160 (_2!1207 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))))))

(declare-fun b!109246 () Bool)

(assert (=> b!109246 (= e!71056 (contains!826 (toList!790 lt!56140) (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))))

(assert (= (and d!30637 res!54083) b!109245))

(assert (= (and b!109245 res!54082) b!109246))

(declare-fun m!123449 () Bool)

(assert (=> d!30637 m!123449))

(declare-fun m!123451 () Bool)

(assert (=> d!30637 m!123451))

(declare-fun m!123453 () Bool)

(assert (=> d!30637 m!123453))

(declare-fun m!123455 () Bool)

(assert (=> d!30637 m!123455))

(declare-fun m!123457 () Bool)

(assert (=> b!109245 m!123457))

(declare-fun m!123459 () Bool)

(assert (=> b!109246 m!123459))

(assert (=> b!108233 d!30637))

(declare-fun d!30639 () Bool)

(assert (=> d!30639 (= (apply!99 (+!137 lt!55617 (tuple2!2393 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) lt!55622) (apply!99 lt!55617 lt!55622))))

(declare-fun lt!56144 () Unit!3307)

(assert (=> d!30639 (= lt!56144 (choose!677 lt!55617 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) lt!55622))))

(declare-fun e!71057 () Bool)

(assert (=> d!30639 e!71057))

(declare-fun res!54084 () Bool)

(assert (=> d!30639 (=> (not res!54084) (not e!71057))))

(assert (=> d!30639 (= res!54084 (contains!824 lt!55617 lt!55622))))

(assert (=> d!30639 (= (addApplyDifferent!75 lt!55617 lt!55614 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)) lt!55622) lt!56144)))

(declare-fun b!109247 () Bool)

(assert (=> b!109247 (= e!71057 (not (= lt!55622 lt!55614)))))

(assert (= (and d!30639 res!54084) b!109247))

(assert (=> d!30639 m!121535))

(declare-fun m!123461 () Bool)

(assert (=> d!30639 m!123461))

(assert (=> d!30639 m!121513))

(declare-fun m!123463 () Bool)

(assert (=> d!30639 m!123463))

(assert (=> d!30639 m!121513))

(assert (=> d!30639 m!121515))

(assert (=> b!108233 d!30639))

(declare-fun d!30641 () Bool)

(assert (=> d!30641 (= (apply!99 (+!137 lt!55611 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))) lt!55627) (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55611 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))) lt!55627)))))

(declare-fun bs!4502 () Bool)

(assert (= bs!4502 d!30641))

(declare-fun m!123465 () Bool)

(assert (=> bs!4502 m!123465))

(assert (=> bs!4502 m!123465))

(declare-fun m!123467 () Bool)

(assert (=> bs!4502 m!123467))

(assert (=> b!108233 d!30641))

(declare-fun d!30643 () Bool)

(assert (=> d!30643 (= (apply!99 lt!55623 lt!55613) (get!1344 (getValueByKey!155 (toList!790 lt!55623) lt!55613)))))

(declare-fun bs!4503 () Bool)

(assert (= bs!4503 d!30643))

(declare-fun m!123469 () Bool)

(assert (=> bs!4503 m!123469))

(assert (=> bs!4503 m!123469))

(declare-fun m!123471 () Bool)

(assert (=> bs!4503 m!123471))

(assert (=> b!108233 d!30643))

(declare-fun d!30645 () Bool)

(assert (=> d!30645 (= (apply!99 lt!55611 lt!55627) (get!1344 (getValueByKey!155 (toList!790 lt!55611) lt!55627)))))

(declare-fun bs!4504 () Bool)

(assert (= bs!4504 d!30645))

(declare-fun m!123473 () Bool)

(assert (=> bs!4504 m!123473))

(assert (=> bs!4504 m!123473))

(declare-fun m!123475 () Bool)

(assert (=> bs!4504 m!123475))

(assert (=> b!108233 d!30645))

(declare-fun d!30647 () Bool)

(declare-fun e!71058 () Bool)

(assert (=> d!30647 e!71058))

(declare-fun res!54086 () Bool)

(assert (=> d!30647 (=> (not res!54086) (not e!71058))))

(declare-fun lt!56145 () ListLongMap!1549)

(assert (=> d!30647 (= res!54086 (contains!824 lt!56145 (_1!1207 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))))))

(declare-fun lt!56148 () List!1623)

(assert (=> d!30647 (= lt!56145 (ListLongMap!1550 lt!56148))))

(declare-fun lt!56146 () Unit!3307)

(declare-fun lt!56147 () Unit!3307)

(assert (=> d!30647 (= lt!56146 lt!56147)))

(assert (=> d!30647 (= (getValueByKey!155 lt!56148 (_1!1207 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))) (Some!160 (_2!1207 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))))))

(assert (=> d!30647 (= lt!56147 (lemmaContainsTupThenGetReturnValue!74 lt!56148 (_1!1207 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))) (_2!1207 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))))))

(assert (=> d!30647 (= lt!56148 (insertStrictlySorted!77 (toList!790 lt!55611) (_1!1207 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))) (_2!1207 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))))))

(assert (=> d!30647 (= (+!137 lt!55611 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))) lt!56145)))

(declare-fun b!109248 () Bool)

(declare-fun res!54085 () Bool)

(assert (=> b!109248 (=> (not res!54085) (not e!71058))))

(assert (=> b!109248 (= res!54085 (= (getValueByKey!155 (toList!790 lt!56145) (_1!1207 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16))))) (Some!160 (_2!1207 (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))))))))

(declare-fun b!109249 () Bool)

(assert (=> b!109249 (= e!71058 (contains!826 (toList!790 lt!56145) (tuple2!2393 lt!55608 (ite (and c!18892 c!18891) lt!54982 (zeroValue!2478 newMap!16)))))))

(assert (= (and d!30647 res!54086) b!109248))

(assert (= (and b!109248 res!54085) b!109249))

(declare-fun m!123477 () Bool)

(assert (=> d!30647 m!123477))

(declare-fun m!123479 () Bool)

(assert (=> d!30647 m!123479))

(declare-fun m!123481 () Bool)

(assert (=> d!30647 m!123481))

(declare-fun m!123483 () Bool)

(assert (=> d!30647 m!123483))

(declare-fun m!123485 () Bool)

(assert (=> b!109248 m!123485))

(declare-fun m!123487 () Bool)

(assert (=> b!109249 m!123487))

(assert (=> b!108233 d!30647))

(declare-fun d!30649 () Bool)

(assert (=> d!30649 (= (inRange!0 (index!3202 lt!55293) (mask!6762 newMap!16)) (and (bvsge (index!3202 lt!55293) #b00000000000000000000000000000000) (bvslt (index!3202 lt!55293) (bvadd (mask!6762 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!107824 d!30649))

(declare-fun d!30651 () Bool)

(assert (=> d!30651 (isDefined!109 (getValueByKey!155 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))) lt!55170))))

(declare-fun lt!56149 () Unit!3307)

(assert (=> d!30651 (= lt!56149 (choose!681 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))) lt!55170))))

(declare-fun e!71059 () Bool)

(assert (=> d!30651 e!71059))

(declare-fun res!54087 () Bool)

(assert (=> d!30651 (=> (not res!54087) (not e!71059))))

(assert (=> d!30651 (= res!54087 (isStrictlySorted!305 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171)))))))

(assert (=> d!30651 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))) lt!55170) lt!56149)))

(declare-fun b!109250 () Bool)

(assert (=> b!109250 (= e!71059 (containsKey!159 (toList!790 (+!137 lt!55169 (tuple2!2393 lt!55172 lt!55171))) lt!55170))))

(assert (= (and d!30651 res!54087) b!109250))

(assert (=> d!30651 m!121615))

(assert (=> d!30651 m!121615))

(assert (=> d!30651 m!121617))

(declare-fun m!123489 () Bool)

(assert (=> d!30651 m!123489))

(declare-fun m!123491 () Bool)

(assert (=> d!30651 m!123491))

(assert (=> b!109250 m!121611))

(assert (=> b!108275 d!30651))

(assert (=> b!108275 d!30541))

(assert (=> b!108275 d!30543))

(declare-fun d!30653 () Bool)

(declare-fun res!54088 () Bool)

(declare-fun e!71060 () Bool)

(assert (=> d!30653 (=> res!54088 e!71060)))

(assert (=> d!30653 (= res!54088 (= (select (arr!2062 lt!55392) #b00000000000000000000000000000000) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!30653 (= (arrayContainsKey!0 lt!55392 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b00000000000000000000000000000000) e!71060)))

(declare-fun b!109251 () Bool)

(declare-fun e!71061 () Bool)

(assert (=> b!109251 (= e!71060 e!71061)))

(declare-fun res!54089 () Bool)

(assert (=> b!109251 (=> (not res!54089) (not e!71061))))

(assert (=> b!109251 (= res!54089 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2319 lt!55392)))))

(declare-fun b!109252 () Bool)

(assert (=> b!109252 (= e!71061 (arrayContainsKey!0 lt!55392 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30653 (not res!54088)) b!109251))

(assert (= (and b!109251 res!54089) b!109252))

(declare-fun m!123493 () Bool)

(assert (=> d!30653 m!123493))

(assert (=> b!109252 m!120387))

(declare-fun m!123495 () Bool)

(assert (=> b!109252 m!123495))

(assert (=> d!29761 d!30653))

(declare-fun b!109253 () Bool)

(declare-fun e!71072 () Unit!3307)

(declare-fun Unit!3384 () Unit!3307)

(assert (=> b!109253 (= e!71072 Unit!3384)))

(declare-fun e!71073 () Bool)

(declare-fun lt!56170 () ListLongMap!1549)

(declare-fun b!109254 () Bool)

(assert (=> b!109254 (= e!71073 (= (apply!99 lt!56170 (select (arr!2062 lt!55400) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 lt!55384) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109254 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 lt!55384)))))

(assert (=> b!109254 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 lt!55400)))))

(declare-fun b!109255 () Bool)

(declare-fun e!71070 () ListLongMap!1549)

(declare-fun e!71069 () ListLongMap!1549)

(assert (=> b!109255 (= e!71070 e!71069)))

(declare-fun c!19313 () Bool)

(assert (=> b!109255 (= c!19313 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11586 () Bool)

(declare-fun call!11589 () Bool)

(assert (=> bm!11586 (= call!11589 (contains!824 lt!56170 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109256 () Bool)

(declare-fun e!71071 () Bool)

(declare-fun e!71067 () Bool)

(assert (=> b!109256 (= e!71071 e!71067)))

(declare-fun res!54090 () Bool)

(declare-fun call!11594 () Bool)

(assert (=> b!109256 (= res!54090 call!11594)))

(assert (=> b!109256 (=> (not res!54090) (not e!71067))))

(declare-fun d!30655 () Bool)

(declare-fun e!71062 () Bool)

(assert (=> d!30655 e!71062))

(declare-fun res!54091 () Bool)

(assert (=> d!30655 (=> (not res!54091) (not e!71062))))

(assert (=> d!30655 (= res!54091 (or (bvsge #b00000000000000000000000000000000 (size!2319 lt!55400)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 lt!55400)))))))

(declare-fun lt!56168 () ListLongMap!1549)

(assert (=> d!30655 (= lt!56170 lt!56168)))

(declare-fun lt!56164 () Unit!3307)

(assert (=> d!30655 (= lt!56164 e!71072)))

(declare-fun c!19315 () Bool)

(declare-fun e!71065 () Bool)

(assert (=> d!30655 (= c!19315 e!71065)))

(declare-fun res!54096 () Bool)

(assert (=> d!30655 (=> (not res!54096) (not e!71065))))

(assert (=> d!30655 (= res!54096 (bvslt #b00000000000000000000000000000000 (size!2319 lt!55400)))))

(assert (=> d!30655 (= lt!56168 e!71070)))

(declare-fun c!19312 () Bool)

(assert (=> d!30655 (= c!19312 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30655 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30655 (= (getCurrentListMap!467 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!56170)))

(declare-fun b!109257 () Bool)

(assert (=> b!109257 (= e!71071 (not call!11594))))

(declare-fun b!109258 () Bool)

(declare-fun res!54097 () Bool)

(assert (=> b!109258 (=> (not res!54097) (not e!71062))))

(declare-fun e!71074 () Bool)

(assert (=> b!109258 (= res!54097 e!71074)))

(declare-fun res!54098 () Bool)

(assert (=> b!109258 (=> res!54098 e!71074)))

(declare-fun e!71068 () Bool)

(assert (=> b!109258 (= res!54098 (not e!71068))))

(declare-fun res!54093 () Bool)

(assert (=> b!109258 (=> (not res!54093) (not e!71068))))

(assert (=> b!109258 (= res!54093 (bvslt #b00000000000000000000000000000000 (size!2319 lt!55400)))))

(declare-fun b!109259 () Bool)

(assert (=> b!109259 (= e!71067 (= (apply!99 lt!56170 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!109260 () Bool)

(assert (=> b!109260 (= e!71068 (validKeyInArray!0 (select (arr!2062 lt!55400) #b00000000000000000000000000000000)))))

(declare-fun b!109261 () Bool)

(declare-fun call!11595 () ListLongMap!1549)

(assert (=> b!109261 (= e!71069 call!11595)))

(declare-fun bm!11587 () Bool)

(declare-fun call!11590 () ListLongMap!1549)

(declare-fun call!11592 () ListLongMap!1549)

(assert (=> bm!11587 (= call!11590 call!11592)))

(declare-fun bm!11588 () Bool)

(declare-fun call!11593 () ListLongMap!1549)

(assert (=> bm!11588 (= call!11595 call!11593)))

(declare-fun bm!11589 () Bool)

(assert (=> bm!11589 (= call!11594 (contains!824 lt!56170 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!11591 () ListLongMap!1549)

(declare-fun bm!11590 () Bool)

(assert (=> bm!11590 (= call!11593 (+!137 (ite c!19312 call!11592 (ite c!19313 call!11590 call!11591)) (ite (or c!19312 c!19313) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun b!109262 () Bool)

(declare-fun e!71064 () Bool)

(declare-fun e!71063 () Bool)

(assert (=> b!109262 (= e!71064 e!71063)))

(declare-fun res!54095 () Bool)

(assert (=> b!109262 (= res!54095 call!11589)))

(assert (=> b!109262 (=> (not res!54095) (not e!71063))))

(declare-fun bm!11591 () Bool)

(assert (=> bm!11591 (= call!11591 call!11590)))

(declare-fun b!109263 () Bool)

(assert (=> b!109263 (= e!71062 e!71064)))

(declare-fun c!19311 () Bool)

(assert (=> b!109263 (= c!19311 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!109264 () Bool)

(assert (=> b!109264 (= e!71074 e!71073)))

(declare-fun res!54092 () Bool)

(assert (=> b!109264 (=> (not res!54092) (not e!71073))))

(assert (=> b!109264 (= res!54092 (contains!824 lt!56170 (select (arr!2062 lt!55400) #b00000000000000000000000000000000)))))

(assert (=> b!109264 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 lt!55400)))))

(declare-fun b!109265 () Bool)

(declare-fun lt!56153 () Unit!3307)

(assert (=> b!109265 (= e!71072 lt!56153)))

(declare-fun lt!56151 () ListLongMap!1549)

(assert (=> b!109265 (= lt!56151 (getCurrentListMapNoExtraKeys!102 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56150 () (_ BitVec 64))

(assert (=> b!109265 (= lt!56150 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56156 () (_ BitVec 64))

(assert (=> b!109265 (= lt!56156 (select (arr!2062 lt!55400) #b00000000000000000000000000000000))))

(declare-fun lt!56163 () Unit!3307)

(assert (=> b!109265 (= lt!56163 (addStillContains!75 lt!56151 lt!56150 (zeroValue!2478 newMap!16) lt!56156))))

(assert (=> b!109265 (contains!824 (+!137 lt!56151 (tuple2!2393 lt!56150 (zeroValue!2478 newMap!16))) lt!56156)))

(declare-fun lt!56154 () Unit!3307)

(assert (=> b!109265 (= lt!56154 lt!56163)))

(declare-fun lt!56161 () ListLongMap!1549)

(assert (=> b!109265 (= lt!56161 (getCurrentListMapNoExtraKeys!102 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56158 () (_ BitVec 64))

(assert (=> b!109265 (= lt!56158 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56166 () (_ BitVec 64))

(assert (=> b!109265 (= lt!56166 (select (arr!2062 lt!55400) #b00000000000000000000000000000000))))

(declare-fun lt!56160 () Unit!3307)

(assert (=> b!109265 (= lt!56160 (addApplyDifferent!75 lt!56161 lt!56158 (minValue!2478 newMap!16) lt!56166))))

(assert (=> b!109265 (= (apply!99 (+!137 lt!56161 (tuple2!2393 lt!56158 (minValue!2478 newMap!16))) lt!56166) (apply!99 lt!56161 lt!56166))))

(declare-fun lt!56169 () Unit!3307)

(assert (=> b!109265 (= lt!56169 lt!56160)))

(declare-fun lt!56155 () ListLongMap!1549)

(assert (=> b!109265 (= lt!56155 (getCurrentListMapNoExtraKeys!102 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56152 () (_ BitVec 64))

(assert (=> b!109265 (= lt!56152 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56171 () (_ BitVec 64))

(assert (=> b!109265 (= lt!56171 (select (arr!2062 lt!55400) #b00000000000000000000000000000000))))

(declare-fun lt!56165 () Unit!3307)

(assert (=> b!109265 (= lt!56165 (addApplyDifferent!75 lt!56155 lt!56152 (zeroValue!2478 newMap!16) lt!56171))))

(assert (=> b!109265 (= (apply!99 (+!137 lt!56155 (tuple2!2393 lt!56152 (zeroValue!2478 newMap!16))) lt!56171) (apply!99 lt!56155 lt!56171))))

(declare-fun lt!56162 () Unit!3307)

(assert (=> b!109265 (= lt!56162 lt!56165)))

(declare-fun lt!56167 () ListLongMap!1549)

(assert (=> b!109265 (= lt!56167 (getCurrentListMapNoExtraKeys!102 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56159 () (_ BitVec 64))

(assert (=> b!109265 (= lt!56159 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56157 () (_ BitVec 64))

(assert (=> b!109265 (= lt!56157 (select (arr!2062 lt!55400) #b00000000000000000000000000000000))))

(assert (=> b!109265 (= lt!56153 (addApplyDifferent!75 lt!56167 lt!56159 (minValue!2478 newMap!16) lt!56157))))

(assert (=> b!109265 (= (apply!99 (+!137 lt!56167 (tuple2!2393 lt!56159 (minValue!2478 newMap!16))) lt!56157) (apply!99 lt!56167 lt!56157))))

(declare-fun b!109266 () Bool)

(assert (=> b!109266 (= e!71070 (+!137 call!11593 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun bm!11592 () Bool)

(assert (=> bm!11592 (= call!11592 (getCurrentListMapNoExtraKeys!102 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!109267 () Bool)

(declare-fun res!54094 () Bool)

(assert (=> b!109267 (=> (not res!54094) (not e!71062))))

(assert (=> b!109267 (= res!54094 e!71071)))

(declare-fun c!19316 () Bool)

(assert (=> b!109267 (= c!19316 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!109268 () Bool)

(assert (=> b!109268 (= e!71065 (validKeyInArray!0 (select (arr!2062 lt!55400) #b00000000000000000000000000000000)))))

(declare-fun b!109269 () Bool)

(declare-fun c!19314 () Bool)

(assert (=> b!109269 (= c!19314 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71066 () ListLongMap!1549)

(assert (=> b!109269 (= e!71069 e!71066)))

(declare-fun b!109270 () Bool)

(assert (=> b!109270 (= e!71063 (= (apply!99 lt!56170 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!109271 () Bool)

(assert (=> b!109271 (= e!71064 (not call!11589))))

(declare-fun b!109272 () Bool)

(assert (=> b!109272 (= e!71066 call!11595)))

(declare-fun b!109273 () Bool)

(assert (=> b!109273 (= e!71066 call!11591)))

(assert (= (and d!30655 c!19312) b!109266))

(assert (= (and d!30655 (not c!19312)) b!109255))

(assert (= (and b!109255 c!19313) b!109261))

(assert (= (and b!109255 (not c!19313)) b!109269))

(assert (= (and b!109269 c!19314) b!109272))

(assert (= (and b!109269 (not c!19314)) b!109273))

(assert (= (or b!109272 b!109273) bm!11591))

(assert (= (or b!109261 bm!11591) bm!11587))

(assert (= (or b!109261 b!109272) bm!11588))

(assert (= (or b!109266 bm!11587) bm!11592))

(assert (= (or b!109266 bm!11588) bm!11590))

(assert (= (and d!30655 res!54096) b!109268))

(assert (= (and d!30655 c!19315) b!109265))

(assert (= (and d!30655 (not c!19315)) b!109253))

(assert (= (and d!30655 res!54091) b!109258))

(assert (= (and b!109258 res!54093) b!109260))

(assert (= (and b!109258 (not res!54098)) b!109264))

(assert (= (and b!109264 res!54092) b!109254))

(assert (= (and b!109258 res!54097) b!109267))

(assert (= (and b!109267 c!19316) b!109256))

(assert (= (and b!109267 (not c!19316)) b!109257))

(assert (= (and b!109256 res!54090) b!109259))

(assert (= (or b!109256 b!109257) bm!11589))

(assert (= (and b!109267 res!54094) b!109263))

(assert (= (and b!109263 c!19311) b!109262))

(assert (= (and b!109263 (not c!19311)) b!109271))

(assert (= (and b!109262 res!54095) b!109270))

(assert (= (or b!109262 b!109271) bm!11586))

(declare-fun b_lambda!4865 () Bool)

(assert (=> (not b_lambda!4865) (not b!109254)))

(assert (=> b!109254 t!5742))

(declare-fun b_and!6721 () Bool)

(assert (= b_and!6717 (and (=> t!5742 result!3505) b_and!6721)))

(assert (=> b!109254 t!5744))

(declare-fun b_and!6723 () Bool)

(assert (= b_and!6719 (and (=> t!5744 result!3507) b_and!6723)))

(declare-fun m!123497 () Bool)

(assert (=> b!109254 m!123497))

(assert (=> b!109254 m!121113))

(assert (=> b!109254 m!123497))

(assert (=> b!109254 m!121113))

(declare-fun m!123499 () Bool)

(assert (=> b!109254 m!123499))

(declare-fun m!123501 () Bool)

(assert (=> b!109254 m!123501))

(declare-fun m!123503 () Bool)

(assert (=> b!109254 m!123503))

(assert (=> b!109254 m!123501))

(declare-fun m!123505 () Bool)

(assert (=> b!109270 m!123505))

(declare-fun m!123507 () Bool)

(assert (=> bm!11586 m!123507))

(declare-fun m!123509 () Bool)

(assert (=> bm!11592 m!123509))

(declare-fun m!123511 () Bool)

(assert (=> bm!11589 m!123511))

(assert (=> b!109260 m!123501))

(assert (=> b!109260 m!123501))

(declare-fun m!123513 () Bool)

(assert (=> b!109260 m!123513))

(assert (=> b!109268 m!123501))

(assert (=> b!109268 m!123501))

(assert (=> b!109268 m!123513))

(declare-fun m!123515 () Bool)

(assert (=> bm!11590 m!123515))

(declare-fun m!123517 () Bool)

(assert (=> b!109266 m!123517))

(assert (=> d!30655 m!120787))

(declare-fun m!123519 () Bool)

(assert (=> b!109259 m!123519))

(assert (=> b!109264 m!123501))

(assert (=> b!109264 m!123501))

(declare-fun m!123521 () Bool)

(assert (=> b!109264 m!123521))

(declare-fun m!123523 () Bool)

(assert (=> b!109265 m!123523))

(declare-fun m!123525 () Bool)

(assert (=> b!109265 m!123525))

(declare-fun m!123527 () Bool)

(assert (=> b!109265 m!123527))

(declare-fun m!123529 () Bool)

(assert (=> b!109265 m!123529))

(declare-fun m!123531 () Bool)

(assert (=> b!109265 m!123531))

(declare-fun m!123533 () Bool)

(assert (=> b!109265 m!123533))

(declare-fun m!123535 () Bool)

(assert (=> b!109265 m!123535))

(declare-fun m!123537 () Bool)

(assert (=> b!109265 m!123537))

(assert (=> b!109265 m!123527))

(assert (=> b!109265 m!123533))

(declare-fun m!123539 () Bool)

(assert (=> b!109265 m!123539))

(assert (=> b!109265 m!123509))

(declare-fun m!123541 () Bool)

(assert (=> b!109265 m!123541))

(declare-fun m!123543 () Bool)

(assert (=> b!109265 m!123543))

(declare-fun m!123545 () Bool)

(assert (=> b!109265 m!123545))

(assert (=> b!109265 m!123535))

(declare-fun m!123547 () Bool)

(assert (=> b!109265 m!123547))

(declare-fun m!123549 () Bool)

(assert (=> b!109265 m!123549))

(assert (=> b!109265 m!123501))

(assert (=> b!109265 m!123545))

(declare-fun m!123551 () Bool)

(assert (=> b!109265 m!123551))

(assert (=> d!29761 d!30655))

(declare-fun lt!56172 () (_ BitVec 32))

(declare-fun d!30657 () Bool)

(assert (=> d!30657 (and (bvsge lt!56172 #b00000000000000000000000000000000) (bvsle lt!56172 (bvsub (size!2319 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!71075 () (_ BitVec 32))

(assert (=> d!30657 (= lt!56172 e!71075)))

(declare-fun c!19318 () Bool)

(assert (=> d!30657 (= c!19318 (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!30657 (and (bvsle #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2319 (_keys!4314 newMap!16)) (size!2319 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))))))))

(assert (=> d!30657 (= (arrayCountValidKeys!0 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) lt!56172)))

(declare-fun b!109274 () Bool)

(assert (=> b!109274 (= e!71075 #b00000000000000000000000000000000)))

(declare-fun b!109275 () Bool)

(declare-fun e!71076 () (_ BitVec 32))

(declare-fun call!11596 () (_ BitVec 32))

(assert (=> b!109275 (= e!71076 (bvadd #b00000000000000000000000000000001 call!11596))))

(declare-fun b!109276 () Bool)

(assert (=> b!109276 (= e!71075 e!71076)))

(declare-fun c!19317 () Bool)

(assert (=> b!109276 (= c!19317 (validKeyInArray!0 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11593 () Bool)

(assert (=> bm!11593 (= call!11596 (arrayCountValidKeys!0 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!109277 () Bool)

(assert (=> b!109277 (= e!71076 call!11596)))

(assert (= (and d!30657 c!19318) b!109274))

(assert (= (and d!30657 (not c!19318)) b!109276))

(assert (= (and b!109276 c!19317) b!109275))

(assert (= (and b!109276 (not c!19317)) b!109277))

(assert (= (or b!109275 b!109277) bm!11593))

(declare-fun m!123553 () Bool)

(assert (=> b!109276 m!123553))

(assert (=> b!109276 m!123553))

(declare-fun m!123555 () Bool)

(assert (=> b!109276 m!123555))

(declare-fun m!123557 () Bool)

(assert (=> bm!11593 m!123557))

(assert (=> d!29761 d!30657))

(declare-fun lt!56173 () (_ BitVec 32))

(declare-fun d!30659 () Bool)

(assert (=> d!30659 (and (bvsge lt!56173 #b00000000000000000000000000000000) (bvsle lt!56173 (bvsub (size!2319 lt!55403) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)))))))

(declare-fun e!71077 () (_ BitVec 32))

(assert (=> d!30659 (= lt!56173 e!71077)))

(declare-fun c!19320 () Bool)

(assert (=> d!30659 (= c!19320 (bvsge (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (bvadd (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000001)))))

(assert (=> d!30659 (and (bvsle (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (bvadd (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000001)) (bvsge (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000001) (size!2319 lt!55403)))))

(assert (=> d!30659 (= (arrayCountValidKeys!0 lt!55403 (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (bvadd (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000001)) lt!56173)))

(declare-fun b!109278 () Bool)

(assert (=> b!109278 (= e!71077 #b00000000000000000000000000000000)))

(declare-fun b!109279 () Bool)

(declare-fun e!71078 () (_ BitVec 32))

(declare-fun call!11597 () (_ BitVec 32))

(assert (=> b!109279 (= e!71078 (bvadd #b00000000000000000000000000000001 call!11597))))

(declare-fun b!109280 () Bool)

(assert (=> b!109280 (= e!71077 e!71078)))

(declare-fun c!19319 () Bool)

(assert (=> b!109280 (= c!19319 (validKeyInArray!0 (select (arr!2062 lt!55403) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)))))))

(declare-fun bm!11594 () Bool)

(assert (=> bm!11594 (= call!11597 (arrayCountValidKeys!0 lt!55403 (bvadd (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000001) (bvadd (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000001)))))

(declare-fun b!109281 () Bool)

(assert (=> b!109281 (= e!71078 call!11597)))

(assert (= (and d!30659 c!19320) b!109278))

(assert (= (and d!30659 (not c!19320)) b!109280))

(assert (= (and b!109280 c!19319) b!109279))

(assert (= (and b!109280 (not c!19319)) b!109281))

(assert (= (or b!109279 b!109281) bm!11594))

(declare-fun m!123559 () Bool)

(assert (=> b!109280 m!123559))

(assert (=> b!109280 m!123559))

(declare-fun m!123561 () Bool)

(assert (=> b!109280 m!123561))

(declare-fun m!123563 () Bool)

(assert (=> bm!11594 m!123563))

(assert (=> d!29761 d!30659))

(assert (=> d!29761 d!29825))

(assert (=> d!29761 d!29871))

(declare-fun d!30661 () Bool)

(assert (=> d!30661 (arrayContainsKey!0 lt!55392 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!56176 () Unit!3307)

(declare-fun choose!13 (array!4351 (_ BitVec 64) (_ BitVec 32)) Unit!3307)

(assert (=> d!30661 (= lt!56176 (choose!13 lt!55392 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253))))))

(assert (=> d!30661 (bvsge (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000000)))

(assert (=> d!30661 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!55392 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253))) lt!56176)))

(declare-fun bs!4505 () Bool)

(assert (= bs!4505 d!30661))

(assert (=> bs!4505 m!120387))

(assert (=> bs!4505 m!120901))

(assert (=> bs!4505 m!120387))

(declare-fun m!123565 () Bool)

(assert (=> bs!4505 m!123565))

(assert (=> d!29761 d!30661))

(declare-fun d!30663 () Bool)

(assert (=> d!30663 (= (arrayCountValidKeys!0 lt!55403 (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (bvadd (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!56179 () Unit!3307)

(declare-fun choose!2 (array!4351 (_ BitVec 32)) Unit!3307)

(assert (=> d!30663 (= lt!56179 (choose!2 lt!55403 (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253))))))

(declare-fun e!71081 () Bool)

(assert (=> d!30663 e!71081))

(declare-fun res!54103 () Bool)

(assert (=> d!30663 (=> (not res!54103) (not e!71081))))

(assert (=> d!30663 (= res!54103 (and (bvsge (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000000) (bvslt (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (size!2319 lt!55403))))))

(assert (=> d!30663 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!55403 (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253))) lt!56179)))

(declare-fun b!109286 () Bool)

(declare-fun res!54104 () Bool)

(assert (=> b!109286 (=> (not res!54104) (not e!71081))))

(assert (=> b!109286 (= res!54104 (validKeyInArray!0 (select (arr!2062 lt!55403) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)))))))

(declare-fun b!109287 () Bool)

(assert (=> b!109287 (= e!71081 (bvslt (size!2319 lt!55403) #b01111111111111111111111111111111))))

(assert (= (and d!30663 res!54103) b!109286))

(assert (= (and b!109286 res!54104) b!109287))

(assert (=> d!30663 m!120927))

(declare-fun m!123567 () Bool)

(assert (=> d!30663 m!123567))

(assert (=> b!109286 m!123559))

(assert (=> b!109286 m!123559))

(assert (=> b!109286 m!123561))

(assert (=> d!29761 d!30663))

(declare-fun d!30665 () Bool)

(declare-fun e!71082 () Bool)

(assert (=> d!30665 e!71082))

(declare-fun res!54105 () Bool)

(assert (=> d!30665 (=> res!54105 e!71082)))

(declare-fun lt!56180 () Bool)

(assert (=> d!30665 (= res!54105 (not lt!56180))))

(declare-fun lt!56181 () Bool)

(assert (=> d!30665 (= lt!56180 lt!56181)))

(declare-fun lt!56183 () Unit!3307)

(declare-fun e!71083 () Unit!3307)

(assert (=> d!30665 (= lt!56183 e!71083)))

(declare-fun c!19321 () Bool)

(assert (=> d!30665 (= c!19321 lt!56181)))

(assert (=> d!30665 (= lt!56181 (containsKey!159 (toList!790 (getCurrentListMap!467 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)))))))

(assert (=> d!30665 (= (contains!824 (getCurrentListMap!467 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)))) lt!56180)))

(declare-fun b!109288 () Bool)

(declare-fun lt!56182 () Unit!3307)

(assert (=> b!109288 (= e!71083 lt!56182)))

(assert (=> b!109288 (= lt!56182 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (getCurrentListMap!467 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)))))))

(assert (=> b!109288 (isDefined!109 (getValueByKey!155 (toList!790 (getCurrentListMap!467 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)))))))

(declare-fun b!109289 () Bool)

(declare-fun Unit!3385 () Unit!3307)

(assert (=> b!109289 (= e!71083 Unit!3385)))

(declare-fun b!109290 () Bool)

(assert (=> b!109290 (= e!71082 (isDefined!109 (getValueByKey!155 (toList!790 (getCurrentListMap!467 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253))))))))

(assert (= (and d!30665 c!19321) b!109288))

(assert (= (and d!30665 (not c!19321)) b!109289))

(assert (= (and d!30665 (not res!54105)) b!109290))

(assert (=> d!30665 m!120911))

(declare-fun m!123569 () Bool)

(assert (=> d!30665 m!123569))

(assert (=> b!109288 m!120911))

(declare-fun m!123571 () Bool)

(assert (=> b!109288 m!123571))

(assert (=> b!109288 m!120911))

(declare-fun m!123573 () Bool)

(assert (=> b!109288 m!123573))

(assert (=> b!109288 m!123573))

(declare-fun m!123575 () Bool)

(assert (=> b!109288 m!123575))

(assert (=> b!109290 m!120911))

(assert (=> b!109290 m!123573))

(assert (=> b!109290 m!123573))

(assert (=> b!109290 m!123575))

(assert (=> d!29761 d!30665))

(declare-fun d!30667 () Bool)

(declare-fun e!71086 () Bool)

(assert (=> d!30667 e!71086))

(declare-fun res!54108 () Bool)

(assert (=> d!30667 (=> (not res!54108) (not e!71086))))

(assert (=> d!30667 (= res!54108 (and (bvsge (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000000) (bvslt (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (size!2319 (_keys!4314 newMap!16)))))))

(declare-fun lt!56186 () Unit!3307)

(declare-fun choose!41 (array!4351 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1622) Unit!3307)

(assert (=> d!30667 (= lt!56186 (choose!41 (_keys!4314 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) lt!55383 lt!55377))))

(assert (=> d!30667 (bvslt (size!2319 (_keys!4314 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!30667 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4314 newMap!16) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) lt!55383 lt!55377) lt!56186)))

(declare-fun b!109293 () Bool)

(assert (=> b!109293 (= e!71086 (arrayNoDuplicates!0 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) lt!55383 lt!55377))))

(assert (= (and d!30667 res!54108) b!109293))

(assert (=> d!30667 m!120387))

(declare-fun m!123577 () Bool)

(assert (=> d!30667 m!123577))

(assert (=> b!109293 m!120903))

(assert (=> b!109293 m!120925))

(assert (=> d!29761 d!30667))

(assert (=> d!29761 d!29955))

(declare-fun d!30669 () Bool)

(declare-fun res!54110 () Bool)

(declare-fun e!71088 () Bool)

(assert (=> d!30669 (=> res!54110 e!71088)))

(assert (=> d!30669 (= res!54110 (bvsge #b00000000000000000000000000000000 (size!2319 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))))))))

(assert (=> d!30669 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (mask!6762 newMap!16)) e!71088)))

(declare-fun b!109294 () Bool)

(declare-fun e!71087 () Bool)

(declare-fun e!71089 () Bool)

(assert (=> b!109294 (= e!71087 e!71089)))

(declare-fun lt!56188 () (_ BitVec 64))

(assert (=> b!109294 (= lt!56188 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56187 () Unit!3307)

(assert (=> b!109294 (= lt!56187 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) lt!56188 #b00000000000000000000000000000000))))

(assert (=> b!109294 (arrayContainsKey!0 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) lt!56188 #b00000000000000000000000000000000)))

(declare-fun lt!56189 () Unit!3307)

(assert (=> b!109294 (= lt!56189 lt!56187)))

(declare-fun res!54109 () Bool)

(assert (=> b!109294 (= res!54109 (= (seekEntryOrOpen!0 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000) (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (mask!6762 newMap!16)) (Found!263 #b00000000000000000000000000000000)))))

(assert (=> b!109294 (=> (not res!54109) (not e!71089))))

(declare-fun call!11598 () Bool)

(declare-fun bm!11595 () Bool)

(assert (=> bm!11595 (= call!11598 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (mask!6762 newMap!16)))))

(declare-fun b!109295 () Bool)

(assert (=> b!109295 (= e!71089 call!11598)))

(declare-fun b!109296 () Bool)

(assert (=> b!109296 (= e!71088 e!71087)))

(declare-fun c!19322 () Bool)

(assert (=> b!109296 (= c!19322 (validKeyInArray!0 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!109297 () Bool)

(assert (=> b!109297 (= e!71087 call!11598)))

(assert (= (and d!30669 (not res!54110)) b!109296))

(assert (= (and b!109296 c!19322) b!109294))

(assert (= (and b!109296 (not c!19322)) b!109297))

(assert (= (and b!109294 res!54109) b!109295))

(assert (= (or b!109295 b!109297) bm!11595))

(assert (=> b!109294 m!123553))

(declare-fun m!123579 () Bool)

(assert (=> b!109294 m!123579))

(declare-fun m!123581 () Bool)

(assert (=> b!109294 m!123581))

(assert (=> b!109294 m!123553))

(declare-fun m!123583 () Bool)

(assert (=> b!109294 m!123583))

(declare-fun m!123585 () Bool)

(assert (=> bm!11595 m!123585))

(assert (=> b!109296 m!123553))

(assert (=> b!109296 m!123553))

(assert (=> b!109296 m!123555))

(assert (=> d!29761 d!30669))

(declare-fun d!30671 () Bool)

(declare-fun e!71092 () Bool)

(assert (=> d!30671 e!71092))

(declare-fun res!54113 () Bool)

(assert (=> d!30671 (=> (not res!54113) (not e!71092))))

(assert (=> d!30671 (= res!54113 (and (bvsge (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000000) (bvslt (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (size!2319 (_keys!4314 newMap!16))) (bvslt (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (size!2320 (_values!2588 newMap!16)))))))

(declare-fun lt!56192 () Unit!3307)

(declare-fun choose!688 (array!4351 array!4353 (_ BitVec 32) (_ BitVec 32) V!3233 V!3233 (_ BitVec 32) (_ BitVec 64) V!3233 Int) Unit!3307)

(assert (=> d!30671 (= lt!56192 (choose!688 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 (defaultEntry!2605 newMap!16)))))

(assert (=> d!30671 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30671 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!31 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982 (defaultEntry!2605 newMap!16)) lt!56192)))

(declare-fun b!109300 () Bool)

(assert (=> b!109300 (= e!71092 (= (+!137 (getCurrentListMap!467 (_keys!4314 newMap!16) (_values!2588 newMap!16) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (getCurrentListMap!467 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))))))

(assert (= (and d!30671 res!54113) b!109300))

(assert (=> d!30671 m!120387))

(declare-fun m!123587 () Bool)

(assert (=> d!30671 m!123587))

(assert (=> d!30671 m!120787))

(assert (=> b!109300 m!120539))

(assert (=> b!109300 m!120935))

(assert (=> b!109300 m!120907))

(assert (=> b!109300 m!120903))

(assert (=> b!109300 m!120539))

(assert (=> b!109300 m!120933))

(assert (=> d!29761 d!30671))

(declare-fun d!30673 () Bool)

(declare-fun e!71093 () Bool)

(assert (=> d!30673 e!71093))

(declare-fun res!54114 () Bool)

(assert (=> d!30673 (=> (not res!54114) (not e!71093))))

(assert (=> d!30673 (= res!54114 (and (bvsge (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000000) (bvslt (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (size!2319 lt!55400))))))

(declare-fun lt!56193 () Unit!3307)

(assert (=> d!30673 (= lt!56193 (choose!682 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (defaultEntry!2605 newMap!16)))))

(assert (=> d!30673 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30673 (= (lemmaValidKeyInArrayIsInListMap!107 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (defaultEntry!2605 newMap!16)) lt!56193)))

(declare-fun b!109301 () Bool)

(assert (=> b!109301 (= e!71093 (contains!824 (getCurrentListMap!467 lt!55400 lt!55384 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) (select (arr!2062 lt!55400) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)))))))

(assert (= (and d!30673 res!54114) b!109301))

(declare-fun m!123589 () Bool)

(assert (=> d!30673 m!123589))

(assert (=> d!30673 m!120787))

(assert (=> b!109301 m!120909))

(declare-fun m!123591 () Bool)

(assert (=> b!109301 m!123591))

(assert (=> b!109301 m!120909))

(assert (=> b!109301 m!123591))

(declare-fun m!123593 () Bool)

(assert (=> b!109301 m!123593))

(assert (=> d!29761 d!30673))

(assert (=> d!29761 d!30129))

(declare-fun b!109310 () Bool)

(declare-fun res!54124 () Bool)

(declare-fun e!71098 () Bool)

(assert (=> b!109310 (=> (not res!54124) (not e!71098))))

(assert (=> b!109310 (= res!54124 (not (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253))))))))

(declare-fun b!109311 () Bool)

(declare-fun res!54126 () Bool)

(assert (=> b!109311 (=> (not res!54126) (not e!71098))))

(assert (=> b!109311 (= res!54126 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun d!30675 () Bool)

(declare-fun e!71099 () Bool)

(assert (=> d!30675 e!71099))

(declare-fun res!54123 () Bool)

(assert (=> d!30675 (=> (not res!54123) (not e!71099))))

(assert (=> d!30675 (= res!54123 (and (bvsge (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000000) (bvslt (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (size!2319 (_keys!4314 newMap!16)))))))

(declare-fun lt!56196 () Unit!3307)

(declare-fun choose!1 (array!4351 (_ BitVec 32) (_ BitVec 64)) Unit!3307)

(assert (=> d!30675 (= lt!56196 (choose!1 (_keys!4314 newMap!16) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(assert (=> d!30675 e!71098))

(declare-fun res!54125 () Bool)

(assert (=> d!30675 (=> (not res!54125) (not e!71098))))

(assert (=> d!30675 (= res!54125 (and (bvsge (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000000) (bvslt (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (size!2319 (_keys!4314 newMap!16)))))))

(assert (=> d!30675 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4314 newMap!16) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) lt!56196)))

(declare-fun b!109312 () Bool)

(assert (=> b!109312 (= e!71098 (bvslt (size!2319 (_keys!4314 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!109313 () Bool)

(assert (=> b!109313 (= e!71099 (= (arrayCountValidKeys!0 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4314 newMap!16) #b00000000000000000000000000000000 (size!2319 (_keys!4314 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!30675 res!54125) b!109310))

(assert (= (and b!109310 res!54124) b!109311))

(assert (= (and b!109311 res!54126) b!109312))

(assert (= (and d!30675 res!54123) b!109313))

(declare-fun m!123595 () Bool)

(assert (=> b!109310 m!123595))

(assert (=> b!109310 m!123595))

(declare-fun m!123597 () Bool)

(assert (=> b!109310 m!123597))

(assert (=> b!109311 m!120387))

(assert (=> b!109311 m!120613))

(assert (=> d!30675 m!120387))

(declare-fun m!123599 () Bool)

(assert (=> d!30675 m!123599))

(assert (=> b!109313 m!120903))

(assert (=> b!109313 m!120917))

(assert (=> b!109313 m!120617))

(assert (=> d!29761 d!30675))

(assert (=> d!29761 d!29875))

(declare-fun call!11599 () Bool)

(declare-fun bm!11596 () Bool)

(declare-fun c!19323 () Bool)

(assert (=> bm!11596 (= call!11599 (arrayNoDuplicates!0 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (bvadd lt!55383 #b00000000000000000000000000000001) (ite c!19323 (Cons!1618 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) lt!55383) lt!55377) lt!55377)))))

(declare-fun e!71103 () Bool)

(declare-fun b!109314 () Bool)

(assert (=> b!109314 (= e!71103 (contains!825 lt!55377 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) lt!55383)))))

(declare-fun d!30677 () Bool)

(declare-fun res!54129 () Bool)

(declare-fun e!71100 () Bool)

(assert (=> d!30677 (=> res!54129 e!71100)))

(assert (=> d!30677 (= res!54129 (bvsge lt!55383 (size!2319 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))))))))

(assert (=> d!30677 (= (arrayNoDuplicates!0 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) lt!55383 lt!55377) e!71100)))

(declare-fun b!109315 () Bool)

(declare-fun e!71102 () Bool)

(assert (=> b!109315 (= e!71102 call!11599)))

(declare-fun b!109316 () Bool)

(declare-fun e!71101 () Bool)

(assert (=> b!109316 (= e!71100 e!71101)))

(declare-fun res!54128 () Bool)

(assert (=> b!109316 (=> (not res!54128) (not e!71101))))

(assert (=> b!109316 (= res!54128 (not e!71103))))

(declare-fun res!54127 () Bool)

(assert (=> b!109316 (=> (not res!54127) (not e!71103))))

(assert (=> b!109316 (= res!54127 (validKeyInArray!0 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) lt!55383)))))

(declare-fun b!109317 () Bool)

(assert (=> b!109317 (= e!71101 e!71102)))

(assert (=> b!109317 (= c!19323 (validKeyInArray!0 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) lt!55383)))))

(declare-fun b!109318 () Bool)

(assert (=> b!109318 (= e!71102 call!11599)))

(assert (= (and d!30677 (not res!54129)) b!109316))

(assert (= (and b!109316 res!54127) b!109314))

(assert (= (and b!109316 res!54128) b!109317))

(assert (= (and b!109317 c!19323) b!109315))

(assert (= (and b!109317 (not c!19323)) b!109318))

(assert (= (or b!109315 b!109318) bm!11596))

(declare-fun m!123601 () Bool)

(assert (=> bm!11596 m!123601))

(declare-fun m!123603 () Bool)

(assert (=> bm!11596 m!123603))

(assert (=> b!109314 m!123601))

(assert (=> b!109314 m!123601))

(declare-fun m!123605 () Bool)

(assert (=> b!109314 m!123605))

(assert (=> b!109316 m!123601))

(assert (=> b!109316 m!123601))

(declare-fun m!123607 () Bool)

(assert (=> b!109316 m!123607))

(assert (=> b!109317 m!123601))

(assert (=> b!109317 m!123601))

(assert (=> b!109317 m!123607))

(assert (=> d!29761 d!30677))

(declare-fun b!109319 () Bool)

(declare-fun e!71114 () Unit!3307)

(declare-fun Unit!3386 () Unit!3307)

(assert (=> b!109319 (= e!71114 Unit!3386)))

(declare-fun b!109320 () Bool)

(declare-fun lt!56217 () ListLongMap!1549)

(declare-fun e!71115 () Bool)

(assert (=> b!109320 (= e!71115 (= (apply!99 lt!56217 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109320 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))))))))

(assert (=> b!109320 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))))))))

(declare-fun b!109321 () Bool)

(declare-fun e!71112 () ListLongMap!1549)

(declare-fun e!71111 () ListLongMap!1549)

(assert (=> b!109321 (= e!71112 e!71111)))

(declare-fun c!19326 () Bool)

(assert (=> b!109321 (= c!19326 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11597 () Bool)

(declare-fun call!11600 () Bool)

(assert (=> bm!11597 (= call!11600 (contains!824 lt!56217 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109322 () Bool)

(declare-fun e!71113 () Bool)

(declare-fun e!71109 () Bool)

(assert (=> b!109322 (= e!71113 e!71109)))

(declare-fun res!54130 () Bool)

(declare-fun call!11605 () Bool)

(assert (=> b!109322 (= res!54130 call!11605)))

(assert (=> b!109322 (=> (not res!54130) (not e!71109))))

(declare-fun d!30679 () Bool)

(declare-fun e!71104 () Bool)

(assert (=> d!30679 e!71104))

(declare-fun res!54131 () Bool)

(assert (=> d!30679 (=> (not res!54131) (not e!71104))))

(assert (=> d!30679 (= res!54131 (or (bvsge #b00000000000000000000000000000000 (size!2319 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))))))))))

(declare-fun lt!56215 () ListLongMap!1549)

(assert (=> d!30679 (= lt!56217 lt!56215)))

(declare-fun lt!56211 () Unit!3307)

(assert (=> d!30679 (= lt!56211 e!71114)))

(declare-fun c!19328 () Bool)

(declare-fun e!71107 () Bool)

(assert (=> d!30679 (= c!19328 e!71107)))

(declare-fun res!54136 () Bool)

(assert (=> d!30679 (=> (not res!54136) (not e!71107))))

(assert (=> d!30679 (= res!54136 (bvslt #b00000000000000000000000000000000 (size!2319 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))))))))

(assert (=> d!30679 (= lt!56215 e!71112)))

(declare-fun c!19325 () Bool)

(assert (=> d!30679 (= c!19325 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30679 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30679 (= (getCurrentListMap!467 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)) lt!56217)))

(declare-fun b!109323 () Bool)

(assert (=> b!109323 (= e!71113 (not call!11605))))

(declare-fun b!109324 () Bool)

(declare-fun res!54137 () Bool)

(assert (=> b!109324 (=> (not res!54137) (not e!71104))))

(declare-fun e!71116 () Bool)

(assert (=> b!109324 (= res!54137 e!71116)))

(declare-fun res!54138 () Bool)

(assert (=> b!109324 (=> res!54138 e!71116)))

(declare-fun e!71110 () Bool)

(assert (=> b!109324 (= res!54138 (not e!71110))))

(declare-fun res!54133 () Bool)

(assert (=> b!109324 (=> (not res!54133) (not e!71110))))

(assert (=> b!109324 (= res!54133 (bvslt #b00000000000000000000000000000000 (size!2319 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))))))))

(declare-fun b!109325 () Bool)

(assert (=> b!109325 (= e!71109 (= (apply!99 lt!56217 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 newMap!16)))))

(declare-fun b!109326 () Bool)

(assert (=> b!109326 (= e!71110 (validKeyInArray!0 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!109327 () Bool)

(declare-fun call!11606 () ListLongMap!1549)

(assert (=> b!109327 (= e!71111 call!11606)))

(declare-fun bm!11598 () Bool)

(declare-fun call!11601 () ListLongMap!1549)

(declare-fun call!11603 () ListLongMap!1549)

(assert (=> bm!11598 (= call!11601 call!11603)))

(declare-fun bm!11599 () Bool)

(declare-fun call!11604 () ListLongMap!1549)

(assert (=> bm!11599 (= call!11606 call!11604)))

(declare-fun bm!11600 () Bool)

(assert (=> bm!11600 (= call!11605 (contains!824 lt!56217 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!11602 () ListLongMap!1549)

(declare-fun bm!11601 () Bool)

(assert (=> bm!11601 (= call!11604 (+!137 (ite c!19325 call!11603 (ite c!19326 call!11601 call!11602)) (ite (or c!19325 c!19326) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 newMap!16)) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16)))))))

(declare-fun b!109328 () Bool)

(declare-fun e!71106 () Bool)

(declare-fun e!71105 () Bool)

(assert (=> b!109328 (= e!71106 e!71105)))

(declare-fun res!54135 () Bool)

(assert (=> b!109328 (= res!54135 call!11600)))

(assert (=> b!109328 (=> (not res!54135) (not e!71105))))

(declare-fun bm!11602 () Bool)

(assert (=> bm!11602 (= call!11602 call!11601)))

(declare-fun b!109329 () Bool)

(assert (=> b!109329 (= e!71104 e!71106)))

(declare-fun c!19324 () Bool)

(assert (=> b!109329 (= c!19324 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!109330 () Bool)

(assert (=> b!109330 (= e!71116 e!71115)))

(declare-fun res!54132 () Bool)

(assert (=> b!109330 (=> (not res!54132) (not e!71115))))

(assert (=> b!109330 (= res!54132 (contains!824 lt!56217 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!109330 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))))))))

(declare-fun b!109331 () Bool)

(declare-fun lt!56200 () Unit!3307)

(assert (=> b!109331 (= e!71114 lt!56200)))

(declare-fun lt!56198 () ListLongMap!1549)

(assert (=> b!109331 (= lt!56198 (getCurrentListMapNoExtraKeys!102 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56197 () (_ BitVec 64))

(assert (=> b!109331 (= lt!56197 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56203 () (_ BitVec 64))

(assert (=> b!109331 (= lt!56203 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56210 () Unit!3307)

(assert (=> b!109331 (= lt!56210 (addStillContains!75 lt!56198 lt!56197 (zeroValue!2478 newMap!16) lt!56203))))

(assert (=> b!109331 (contains!824 (+!137 lt!56198 (tuple2!2393 lt!56197 (zeroValue!2478 newMap!16))) lt!56203)))

(declare-fun lt!56201 () Unit!3307)

(assert (=> b!109331 (= lt!56201 lt!56210)))

(declare-fun lt!56208 () ListLongMap!1549)

(assert (=> b!109331 (= lt!56208 (getCurrentListMapNoExtraKeys!102 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56205 () (_ BitVec 64))

(assert (=> b!109331 (= lt!56205 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56213 () (_ BitVec 64))

(assert (=> b!109331 (= lt!56213 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56207 () Unit!3307)

(assert (=> b!109331 (= lt!56207 (addApplyDifferent!75 lt!56208 lt!56205 (minValue!2478 newMap!16) lt!56213))))

(assert (=> b!109331 (= (apply!99 (+!137 lt!56208 (tuple2!2393 lt!56205 (minValue!2478 newMap!16))) lt!56213) (apply!99 lt!56208 lt!56213))))

(declare-fun lt!56216 () Unit!3307)

(assert (=> b!109331 (= lt!56216 lt!56207)))

(declare-fun lt!56202 () ListLongMap!1549)

(assert (=> b!109331 (= lt!56202 (getCurrentListMapNoExtraKeys!102 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56199 () (_ BitVec 64))

(assert (=> b!109331 (= lt!56199 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56218 () (_ BitVec 64))

(assert (=> b!109331 (= lt!56218 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56212 () Unit!3307)

(assert (=> b!109331 (= lt!56212 (addApplyDifferent!75 lt!56202 lt!56199 (zeroValue!2478 newMap!16) lt!56218))))

(assert (=> b!109331 (= (apply!99 (+!137 lt!56202 (tuple2!2393 lt!56199 (zeroValue!2478 newMap!16))) lt!56218) (apply!99 lt!56202 lt!56218))))

(declare-fun lt!56209 () Unit!3307)

(assert (=> b!109331 (= lt!56209 lt!56212)))

(declare-fun lt!56214 () ListLongMap!1549)

(assert (=> b!109331 (= lt!56214 (getCurrentListMapNoExtraKeys!102 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun lt!56206 () (_ BitVec 64))

(assert (=> b!109331 (= lt!56206 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56204 () (_ BitVec 64))

(assert (=> b!109331 (= lt!56204 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!109331 (= lt!56200 (addApplyDifferent!75 lt!56214 lt!56206 (minValue!2478 newMap!16) lt!56204))))

(assert (=> b!109331 (= (apply!99 (+!137 lt!56214 (tuple2!2393 lt!56206 (minValue!2478 newMap!16))) lt!56204) (apply!99 lt!56214 lt!56204))))

(declare-fun b!109332 () Bool)

(assert (=> b!109332 (= e!71112 (+!137 call!11604 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 newMap!16))))))

(declare-fun bm!11603 () Bool)

(assert (=> bm!11603 (= call!11603 (getCurrentListMapNoExtraKeys!102 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (array!4354 (store (arr!2063 (_values!2588 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (ValueCellFull!1001 lt!54982)) (size!2320 (_values!2588 newMap!16))) (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))

(declare-fun b!109333 () Bool)

(declare-fun res!54134 () Bool)

(assert (=> b!109333 (=> (not res!54134) (not e!71104))))

(assert (=> b!109333 (= res!54134 e!71113)))

(declare-fun c!19329 () Bool)

(assert (=> b!109333 (= c!19329 (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!109334 () Bool)

(assert (=> b!109334 (= e!71107 (validKeyInArray!0 (select (arr!2062 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!109335 () Bool)

(declare-fun c!19327 () Bool)

(assert (=> b!109335 (= c!19327 (and (not (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71108 () ListLongMap!1549)

(assert (=> b!109335 (= e!71111 e!71108)))

(declare-fun b!109336 () Bool)

(assert (=> b!109336 (= e!71105 (= (apply!99 lt!56217 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 newMap!16)))))

(declare-fun b!109337 () Bool)

(assert (=> b!109337 (= e!71106 (not call!11600))))

(declare-fun b!109338 () Bool)

(assert (=> b!109338 (= e!71108 call!11606)))

(declare-fun b!109339 () Bool)

(assert (=> b!109339 (= e!71108 call!11602)))

(assert (= (and d!30679 c!19325) b!109332))

(assert (= (and d!30679 (not c!19325)) b!109321))

(assert (= (and b!109321 c!19326) b!109327))

(assert (= (and b!109321 (not c!19326)) b!109335))

(assert (= (and b!109335 c!19327) b!109338))

(assert (= (and b!109335 (not c!19327)) b!109339))

(assert (= (or b!109338 b!109339) bm!11602))

(assert (= (or b!109327 bm!11602) bm!11598))

(assert (= (or b!109327 b!109338) bm!11599))

(assert (= (or b!109332 bm!11598) bm!11603))

(assert (= (or b!109332 bm!11599) bm!11601))

(assert (= (and d!30679 res!54136) b!109334))

(assert (= (and d!30679 c!19328) b!109331))

(assert (= (and d!30679 (not c!19328)) b!109319))

(assert (= (and d!30679 res!54131) b!109324))

(assert (= (and b!109324 res!54133) b!109326))

(assert (= (and b!109324 (not res!54138)) b!109330))

(assert (= (and b!109330 res!54132) b!109320))

(assert (= (and b!109324 res!54137) b!109333))

(assert (= (and b!109333 c!19329) b!109322))

(assert (= (and b!109333 (not c!19329)) b!109323))

(assert (= (and b!109322 res!54130) b!109325))

(assert (= (or b!109322 b!109323) bm!11600))

(assert (= (and b!109333 res!54134) b!109329))

(assert (= (and b!109329 c!19324) b!109328))

(assert (= (and b!109329 (not c!19324)) b!109337))

(assert (= (and b!109328 res!54135) b!109336))

(assert (= (or b!109328 b!109337) bm!11597))

(declare-fun b_lambda!4867 () Bool)

(assert (=> (not b_lambda!4867) (not b!109320)))

(assert (=> b!109320 t!5742))

(declare-fun b_and!6725 () Bool)

(assert (= b_and!6721 (and (=> t!5742 result!3505) b_and!6725)))

(assert (=> b!109320 t!5744))

(declare-fun b_and!6727 () Bool)

(assert (= b_and!6723 (and (=> t!5744 result!3507) b_and!6727)))

(declare-fun m!123609 () Bool)

(assert (=> b!109320 m!123609))

(assert (=> b!109320 m!121113))

(assert (=> b!109320 m!123609))

(assert (=> b!109320 m!121113))

(declare-fun m!123611 () Bool)

(assert (=> b!109320 m!123611))

(assert (=> b!109320 m!123553))

(declare-fun m!123613 () Bool)

(assert (=> b!109320 m!123613))

(assert (=> b!109320 m!123553))

(declare-fun m!123615 () Bool)

(assert (=> b!109336 m!123615))

(declare-fun m!123617 () Bool)

(assert (=> bm!11597 m!123617))

(declare-fun m!123619 () Bool)

(assert (=> bm!11603 m!123619))

(declare-fun m!123621 () Bool)

(assert (=> bm!11600 m!123621))

(assert (=> b!109326 m!123553))

(assert (=> b!109326 m!123553))

(assert (=> b!109326 m!123555))

(assert (=> b!109334 m!123553))

(assert (=> b!109334 m!123553))

(assert (=> b!109334 m!123555))

(declare-fun m!123623 () Bool)

(assert (=> bm!11601 m!123623))

(declare-fun m!123625 () Bool)

(assert (=> b!109332 m!123625))

(assert (=> d!30679 m!120787))

(declare-fun m!123627 () Bool)

(assert (=> b!109325 m!123627))

(assert (=> b!109330 m!123553))

(assert (=> b!109330 m!123553))

(declare-fun m!123629 () Bool)

(assert (=> b!109330 m!123629))

(declare-fun m!123631 () Bool)

(assert (=> b!109331 m!123631))

(declare-fun m!123633 () Bool)

(assert (=> b!109331 m!123633))

(declare-fun m!123635 () Bool)

(assert (=> b!109331 m!123635))

(declare-fun m!123637 () Bool)

(assert (=> b!109331 m!123637))

(declare-fun m!123639 () Bool)

(assert (=> b!109331 m!123639))

(declare-fun m!123641 () Bool)

(assert (=> b!109331 m!123641))

(declare-fun m!123643 () Bool)

(assert (=> b!109331 m!123643))

(declare-fun m!123645 () Bool)

(assert (=> b!109331 m!123645))

(assert (=> b!109331 m!123635))

(assert (=> b!109331 m!123641))

(declare-fun m!123647 () Bool)

(assert (=> b!109331 m!123647))

(assert (=> b!109331 m!123619))

(declare-fun m!123649 () Bool)

(assert (=> b!109331 m!123649))

(declare-fun m!123651 () Bool)

(assert (=> b!109331 m!123651))

(declare-fun m!123653 () Bool)

(assert (=> b!109331 m!123653))

(assert (=> b!109331 m!123643))

(declare-fun m!123655 () Bool)

(assert (=> b!109331 m!123655))

(declare-fun m!123657 () Bool)

(assert (=> b!109331 m!123657))

(assert (=> b!109331 m!123553))

(assert (=> b!109331 m!123653))

(declare-fun m!123659 () Bool)

(assert (=> b!109331 m!123659))

(assert (=> d!29761 d!30679))

(declare-fun d!30681 () Bool)

(declare-fun e!71119 () Bool)

(assert (=> d!30681 e!71119))

(declare-fun res!54141 () Bool)

(assert (=> d!30681 (=> (not res!54141) (not e!71119))))

(assert (=> d!30681 (= res!54141 (and (bvsge (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) #b00000000000000000000000000000000) (bvslt (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (size!2319 (_keys!4314 newMap!16)))))))

(declare-fun lt!56221 () Unit!3307)

(declare-fun choose!102 ((_ BitVec 64) array!4351 (_ BitVec 32) (_ BitVec 32)) Unit!3307)

(assert (=> d!30681 (= lt!56221 (choose!102 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (mask!6762 newMap!16)))))

(assert (=> d!30681 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30681 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) (_keys!4314 newMap!16) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (mask!6762 newMap!16)) lt!56221)))

(declare-fun b!109342 () Bool)

(assert (=> b!109342 (= e!71119 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4352 (store (arr!2062 (_keys!4314 newMap!16)) (ite c!18895 (index!3204 lt!55253) (index!3201 lt!55253)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) (size!2319 (_keys!4314 newMap!16))) (mask!6762 newMap!16)))))

(assert (= (and d!30681 res!54141) b!109342))

(assert (=> d!30681 m!120387))

(declare-fun m!123661 () Bool)

(assert (=> d!30681 m!123661))

(assert (=> d!30681 m!120787))

(assert (=> b!109342 m!120903))

(assert (=> b!109342 m!120899))

(assert (=> d!29761 d!30681))

(assert (=> d!29761 d!29703))

(declare-fun d!30683 () Bool)

(assert (=> d!30683 (arrayContainsKey!0 (_keys!4314 newMap!16) lt!55283 #b00000000000000000000000000000000)))

(declare-fun lt!56222 () Unit!3307)

(assert (=> d!30683 (= lt!56222 (choose!13 (_keys!4314 newMap!16) lt!55283 #b00000000000000000000000000000000))))

(assert (=> d!30683 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!30683 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4314 newMap!16) lt!55283 #b00000000000000000000000000000000) lt!56222)))

(declare-fun bs!4506 () Bool)

(assert (= bs!4506 d!30683))

(assert (=> bs!4506 m!120773))

(declare-fun m!123663 () Bool)

(assert (=> bs!4506 m!123663))

(assert (=> b!107796 d!30683))

(declare-fun d!30685 () Bool)

(declare-fun res!54142 () Bool)

(declare-fun e!71120 () Bool)

(assert (=> d!30685 (=> res!54142 e!71120)))

(assert (=> d!30685 (= res!54142 (= (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) lt!55283))))

(assert (=> d!30685 (= (arrayContainsKey!0 (_keys!4314 newMap!16) lt!55283 #b00000000000000000000000000000000) e!71120)))

(declare-fun b!109343 () Bool)

(declare-fun e!71121 () Bool)

(assert (=> b!109343 (= e!71120 e!71121)))

(declare-fun res!54143 () Bool)

(assert (=> b!109343 (=> (not res!54143) (not e!71121))))

(assert (=> b!109343 (= res!54143 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2319 (_keys!4314 newMap!16))))))

(declare-fun b!109344 () Bool)

(assert (=> b!109344 (= e!71121 (arrayContainsKey!0 (_keys!4314 newMap!16) lt!55283 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30685 (not res!54142)) b!109343))

(assert (= (and b!109343 res!54143) b!109344))

(assert (=> d!30685 m!120769))

(declare-fun m!123665 () Bool)

(assert (=> b!109344 m!123665))

(assert (=> b!107796 d!30685))

(declare-fun b!109345 () Bool)

(declare-fun c!19330 () Bool)

(declare-fun lt!56225 () (_ BitVec 64))

(assert (=> b!109345 (= c!19330 (= lt!56225 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71123 () SeekEntryResult!263)

(declare-fun e!71122 () SeekEntryResult!263)

(assert (=> b!109345 (= e!71123 e!71122)))

(declare-fun b!109346 () Bool)

(declare-fun e!71124 () SeekEntryResult!263)

(assert (=> b!109346 (= e!71124 Undefined!263)))

(declare-fun d!30687 () Bool)

(declare-fun lt!56224 () SeekEntryResult!263)

(assert (=> d!30687 (and (or ((_ is Undefined!263) lt!56224) (not ((_ is Found!263) lt!56224)) (and (bvsge (index!3202 lt!56224) #b00000000000000000000000000000000) (bvslt (index!3202 lt!56224) (size!2319 (_keys!4314 newMap!16))))) (or ((_ is Undefined!263) lt!56224) ((_ is Found!263) lt!56224) (not ((_ is MissingZero!263) lt!56224)) (and (bvsge (index!3201 lt!56224) #b00000000000000000000000000000000) (bvslt (index!3201 lt!56224) (size!2319 (_keys!4314 newMap!16))))) (or ((_ is Undefined!263) lt!56224) ((_ is Found!263) lt!56224) ((_ is MissingZero!263) lt!56224) (not ((_ is MissingVacant!263) lt!56224)) (and (bvsge (index!3204 lt!56224) #b00000000000000000000000000000000) (bvslt (index!3204 lt!56224) (size!2319 (_keys!4314 newMap!16))))) (or ((_ is Undefined!263) lt!56224) (ite ((_ is Found!263) lt!56224) (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!56224)) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!263) lt!56224) (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3201 lt!56224)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!263) lt!56224) (= (select (arr!2062 (_keys!4314 newMap!16)) (index!3204 lt!56224)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30687 (= lt!56224 e!71124)))

(declare-fun c!19332 () Bool)

(declare-fun lt!56223 () SeekEntryResult!263)

(assert (=> d!30687 (= c!19332 (and ((_ is Intermediate!263) lt!56223) (undefined!1075 lt!56223)))))

(assert (=> d!30687 (= lt!56223 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) (mask!6762 newMap!16)) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(assert (=> d!30687 (validMask!0 (mask!6762 newMap!16))))

(assert (=> d!30687 (= (seekEntryOrOpen!0 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) (_keys!4314 newMap!16) (mask!6762 newMap!16)) lt!56224)))

(declare-fun b!109347 () Bool)

(assert (=> b!109347 (= e!71122 (MissingZero!263 (index!3203 lt!56223)))))

(declare-fun b!109348 () Bool)

(assert (=> b!109348 (= e!71124 e!71123)))

(assert (=> b!109348 (= lt!56225 (select (arr!2062 (_keys!4314 newMap!16)) (index!3203 lt!56223)))))

(declare-fun c!19331 () Bool)

(assert (=> b!109348 (= c!19331 (= lt!56225 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109349 () Bool)

(assert (=> b!109349 (= e!71123 (Found!263 (index!3203 lt!56223)))))

(declare-fun b!109350 () Bool)

(assert (=> b!109350 (= e!71122 (seekKeyOrZeroReturnVacant!0 (x!13806 lt!56223) (index!3203 lt!56223) (index!3203 lt!56223) (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) (_keys!4314 newMap!16) (mask!6762 newMap!16)))))

(assert (= (and d!30687 c!19332) b!109346))

(assert (= (and d!30687 (not c!19332)) b!109348))

(assert (= (and b!109348 c!19331) b!109349))

(assert (= (and b!109348 (not c!19331)) b!109345))

(assert (= (and b!109345 c!19330) b!109347))

(assert (= (and b!109345 (not c!19330)) b!109350))

(assert (=> d!30687 m!120787))

(declare-fun m!123667 () Bool)

(assert (=> d!30687 m!123667))

(declare-fun m!123669 () Bool)

(assert (=> d!30687 m!123669))

(declare-fun m!123671 () Bool)

(assert (=> d!30687 m!123671))

(assert (=> d!30687 m!120769))

(declare-fun m!123673 () Bool)

(assert (=> d!30687 m!123673))

(assert (=> d!30687 m!120769))

(assert (=> d!30687 m!123671))

(declare-fun m!123675 () Bool)

(assert (=> d!30687 m!123675))

(declare-fun m!123677 () Bool)

(assert (=> b!109348 m!123677))

(assert (=> b!109350 m!120769))

(declare-fun m!123679 () Bool)

(assert (=> b!109350 m!123679))

(assert (=> b!107796 d!30687))

(declare-fun d!30689 () Bool)

(assert (=> d!30689 (= (get!1344 (getValueByKey!155 (toList!790 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55120)) (v!2910 (getValueByKey!155 (toList!790 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55120)))))

(assert (=> d!29773 d!30689))

(declare-fun e!71126 () Option!161)

(declare-fun b!109353 () Bool)

(assert (=> b!109353 (= e!71126 (getValueByKey!155 (t!5730 (toList!790 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) lt!55120))))

(declare-fun b!109352 () Bool)

(declare-fun e!71125 () Option!161)

(assert (=> b!109352 (= e!71125 e!71126)))

(declare-fun c!19334 () Bool)

(assert (=> b!109352 (= c!19334 (and ((_ is Cons!1619) (toList!790 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) (not (= (_1!1207 (h!2217 (toList!790 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))) lt!55120))))))

(declare-fun c!19333 () Bool)

(declare-fun d!30691 () Bool)

(assert (=> d!30691 (= c!19333 (and ((_ is Cons!1619) (toList!790 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))) (= (_1!1207 (h!2217 (toList!790 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))))) lt!55120)))))

(assert (=> d!30691 (= (getValueByKey!155 (toList!790 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992)))))) lt!55120) e!71125)))

(declare-fun b!109354 () Bool)

(assert (=> b!109354 (= e!71126 None!159)))

(declare-fun b!109351 () Bool)

(assert (=> b!109351 (= e!71125 (Some!160 (_2!1207 (h!2217 (toList!790 (+!137 lt!55115 (tuple2!2393 lt!55112 (minValue!2478 (v!2904 (underlying!360 thiss!992))))))))))))

(assert (= (and d!30691 c!19333) b!109351))

(assert (= (and d!30691 (not c!19333)) b!109352))

(assert (= (and b!109352 c!19334) b!109353))

(assert (= (and b!109352 (not c!19334)) b!109354))

(declare-fun m!123681 () Bool)

(assert (=> b!109353 m!123681))

(assert (=> d!29773 d!30691))

(assert (=> b!108182 d!29965))

(assert (=> b!108182 d!29967))

(declare-fun d!30693 () Bool)

(declare-fun e!71127 () Bool)

(assert (=> d!30693 e!71127))

(declare-fun res!54145 () Bool)

(assert (=> d!30693 (=> (not res!54145) (not e!71127))))

(declare-fun lt!56226 () ListLongMap!1549)

(assert (=> d!30693 (= res!54145 (contains!824 lt!56226 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(declare-fun lt!56229 () List!1623)

(assert (=> d!30693 (= lt!56226 (ListLongMap!1550 lt!56229))))

(declare-fun lt!56227 () Unit!3307)

(declare-fun lt!56228 () Unit!3307)

(assert (=> d!30693 (= lt!56227 lt!56228)))

(assert (=> d!30693 (= (getValueByKey!155 lt!56229 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(assert (=> d!30693 (= lt!56228 (lemmaContainsTupThenGetReturnValue!74 lt!56229 (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(assert (=> d!30693 (= lt!56229 (insertStrictlySorted!77 (toList!790 call!11494) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))))))

(assert (=> d!30693 (= (+!137 call!11494 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))) lt!56226)))

(declare-fun b!109355 () Bool)

(declare-fun res!54144 () Bool)

(assert (=> b!109355 (=> (not res!54144) (not e!71127))))

(assert (=> b!109355 (= res!54144 (= (getValueByKey!155 (toList!790 lt!56226) (_1!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16))))) (Some!160 (_2!1207 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))))))

(declare-fun b!109356 () Bool)

(assert (=> b!109356 (= e!71127 (contains!826 (toList!790 lt!56226) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18892 (ite c!18891 (minValue!2478 newMap!16) lt!54982) (minValue!2478 newMap!16)))))))

(assert (= (and d!30693 res!54145) b!109355))

(assert (= (and b!109355 res!54144) b!109356))

(declare-fun m!123683 () Bool)

(assert (=> d!30693 m!123683))

(declare-fun m!123685 () Bool)

(assert (=> d!30693 m!123685))

(declare-fun m!123687 () Bool)

(assert (=> d!30693 m!123687))

(declare-fun m!123689 () Bool)

(assert (=> d!30693 m!123689))

(declare-fun m!123691 () Bool)

(assert (=> b!109355 m!123691))

(declare-fun m!123693 () Bool)

(assert (=> b!109356 m!123693))

(assert (=> b!108234 d!30693))

(declare-fun d!30695 () Bool)

(declare-fun c!19335 () Bool)

(assert (=> d!30695 (= c!19335 ((_ is Nil!1620) (toList!790 lt!55143)))))

(declare-fun e!71128 () (InoxSet tuple2!2392))

(assert (=> d!30695 (= (content!111 (toList!790 lt!55143)) e!71128)))

(declare-fun b!109357 () Bool)

(assert (=> b!109357 (= e!71128 ((as const (Array tuple2!2392 Bool)) false))))

(declare-fun b!109358 () Bool)

(assert (=> b!109358 (= e!71128 ((_ map or) (store ((as const (Array tuple2!2392 Bool)) false) (h!2217 (toList!790 lt!55143)) true) (content!111 (t!5730 (toList!790 lt!55143)))))))

(assert (= (and d!30695 c!19335) b!109357))

(assert (= (and d!30695 (not c!19335)) b!109358))

(declare-fun m!123695 () Bool)

(assert (=> b!109358 m!123695))

(declare-fun m!123697 () Bool)

(assert (=> b!109358 m!123697))

(assert (=> d!29737 d!30695))

(declare-fun lt!56230 () Bool)

(declare-fun d!30697 () Bool)

(assert (=> d!30697 (= lt!56230 (select (content!111 (toList!790 lt!55406)) (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun e!71130 () Bool)

(assert (=> d!30697 (= lt!56230 e!71130)))

(declare-fun res!54146 () Bool)

(assert (=> d!30697 (=> (not res!54146) (not e!71130))))

(assert (=> d!30697 (= res!54146 ((_ is Cons!1619) (toList!790 lt!55406)))))

(assert (=> d!30697 (= (contains!826 (toList!790 lt!55406) (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!56230)))

(declare-fun b!109359 () Bool)

(declare-fun e!71129 () Bool)

(assert (=> b!109359 (= e!71130 e!71129)))

(declare-fun res!54147 () Bool)

(assert (=> b!109359 (=> res!54147 e!71129)))

(assert (=> b!109359 (= res!54147 (= (h!2217 (toList!790 lt!55406)) (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!109360 () Bool)

(assert (=> b!109360 (= e!71129 (contains!826 (t!5730 (toList!790 lt!55406)) (tuple2!2393 lt!55104 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!30697 res!54146) b!109359))

(assert (= (and b!109359 (not res!54147)) b!109360))

(declare-fun m!123699 () Bool)

(assert (=> d!30697 m!123699))

(declare-fun m!123701 () Bool)

(assert (=> d!30697 m!123701))

(declare-fun m!123703 () Bool)

(assert (=> b!109360 m!123703))

(assert (=> b!107912 d!30697))

(declare-fun d!30699 () Bool)

(declare-fun lt!56231 () Bool)

(assert (=> d!30699 (= lt!56231 (select (content!111 lt!55154) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(declare-fun e!71132 () Bool)

(assert (=> d!30699 (= lt!56231 e!71132)))

(declare-fun res!54148 () Bool)

(assert (=> d!30699 (=> (not res!54148) (not e!71132))))

(assert (=> d!30699 (= res!54148 ((_ is Cons!1619) lt!55154))))

(assert (=> d!30699 (= (contains!826 lt!55154 (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))) lt!56231)))

(declare-fun b!109361 () Bool)

(declare-fun e!71131 () Bool)

(assert (=> b!109361 (= e!71132 e!71131)))

(declare-fun res!54149 () Bool)

(assert (=> b!109361 (=> res!54149 e!71131)))

(assert (=> b!109361 (= res!54149 (= (h!2217 lt!55154) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(declare-fun b!109362 () Bool)

(assert (=> b!109362 (= e!71131 (contains!826 (t!5730 lt!55154) (tuple2!2393 (_1!1207 lt!54977) (_2!1207 lt!54977))))))

(assert (= (and d!30699 res!54148) b!109361))

(assert (= (and b!109361 (not res!54149)) b!109362))

(declare-fun m!123705 () Bool)

(assert (=> d!30699 m!123705))

(declare-fun m!123707 () Bool)

(assert (=> d!30699 m!123707))

(declare-fun m!123709 () Bool)

(assert (=> b!109362 m!123709))

(assert (=> b!108255 d!30699))

(declare-fun b!109365 () Bool)

(declare-fun e!71134 () Option!161)

(assert (=> b!109365 (= e!71134 (getValueByKey!155 (t!5730 (t!5730 (toList!790 lt!54978))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))

(declare-fun b!109364 () Bool)

(declare-fun e!71133 () Option!161)

(assert (=> b!109364 (= e!71133 e!71134)))

(declare-fun c!19337 () Bool)

(assert (=> b!109364 (= c!19337 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!54978))) (not (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!54978)))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)))))))

(declare-fun c!19336 () Bool)

(declare-fun d!30701 () Bool)

(assert (=> d!30701 (= c!19336 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!54978))) (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!54978)))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355))))))

(assert (=> d!30701 (= (getValueByKey!155 (t!5730 (toList!790 lt!54978)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355)) e!71133)))

(declare-fun b!109366 () Bool)

(assert (=> b!109366 (= e!71134 None!159)))

(declare-fun b!109363 () Bool)

(assert (=> b!109363 (= e!71133 (Some!160 (_2!1207 (h!2217 (t!5730 (toList!790 lt!54978))))))))

(assert (= (and d!30701 c!19336) b!109363))

(assert (= (and d!30701 (not c!19336)) b!109364))

(assert (= (and b!109364 c!19337) b!109365))

(assert (= (and b!109364 (not c!19337)) b!109366))

(assert (=> b!109365 m!120387))

(declare-fun m!123711 () Bool)

(assert (=> b!109365 m!123711))

(assert (=> b!108033 d!30701))

(declare-fun b!109367 () Bool)

(declare-fun e!71145 () Unit!3307)

(declare-fun Unit!3387 () Unit!3307)

(assert (=> b!109367 (= e!71145 Unit!3387)))

(declare-fun b!109368 () Bool)

(declare-fun e!71146 () Bool)

(declare-fun lt!56252 () ListLongMap!1549)

(assert (=> b!109368 (= e!71146 (= (apply!99 lt!56252 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000)) (get!1341 (select (arr!2063 (_values!2588 (_2!1206 lt!55257))) #b00000000000000000000000000000000) (dynLambda!386 (defaultEntry!2605 (_2!1206 lt!55257)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109368 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2320 (_values!2588 (_2!1206 lt!55257)))))))

(assert (=> b!109368 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55257)))))))

(declare-fun b!109369 () Bool)

(declare-fun e!71143 () ListLongMap!1549)

(declare-fun e!71142 () ListLongMap!1549)

(assert (=> b!109369 (= e!71143 e!71142)))

(declare-fun c!19340 () Bool)

(assert (=> b!109369 (= c!19340 (and (not (= (bvand (extraKeys!2406 (_2!1206 lt!55257)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 (_2!1206 lt!55257)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11604 () Bool)

(declare-fun call!11607 () Bool)

(assert (=> bm!11604 (= call!11607 (contains!824 lt!56252 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109370 () Bool)

(declare-fun e!71144 () Bool)

(declare-fun e!71140 () Bool)

(assert (=> b!109370 (= e!71144 e!71140)))

(declare-fun res!54150 () Bool)

(declare-fun call!11612 () Bool)

(assert (=> b!109370 (= res!54150 call!11612)))

(assert (=> b!109370 (=> (not res!54150) (not e!71140))))

(declare-fun d!30703 () Bool)

(declare-fun e!71135 () Bool)

(assert (=> d!30703 e!71135))

(declare-fun res!54151 () Bool)

(assert (=> d!30703 (=> (not res!54151) (not e!71135))))

(assert (=> d!30703 (= res!54151 (or (bvsge #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55257)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55257)))))))))

(declare-fun lt!56250 () ListLongMap!1549)

(assert (=> d!30703 (= lt!56252 lt!56250)))

(declare-fun lt!56246 () Unit!3307)

(assert (=> d!30703 (= lt!56246 e!71145)))

(declare-fun c!19342 () Bool)

(declare-fun e!71138 () Bool)

(assert (=> d!30703 (= c!19342 e!71138)))

(declare-fun res!54156 () Bool)

(assert (=> d!30703 (=> (not res!54156) (not e!71138))))

(assert (=> d!30703 (= res!54156 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55257)))))))

(assert (=> d!30703 (= lt!56250 e!71143)))

(declare-fun c!19339 () Bool)

(assert (=> d!30703 (= c!19339 (and (not (= (bvand (extraKeys!2406 (_2!1206 lt!55257)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2406 (_2!1206 lt!55257)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30703 (validMask!0 (mask!6762 (_2!1206 lt!55257)))))

(assert (=> d!30703 (= (getCurrentListMap!467 (_keys!4314 (_2!1206 lt!55257)) (_values!2588 (_2!1206 lt!55257)) (mask!6762 (_2!1206 lt!55257)) (extraKeys!2406 (_2!1206 lt!55257)) (zeroValue!2478 (_2!1206 lt!55257)) (minValue!2478 (_2!1206 lt!55257)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1206 lt!55257))) lt!56252)))

(declare-fun b!109371 () Bool)

(assert (=> b!109371 (= e!71144 (not call!11612))))

(declare-fun b!109372 () Bool)

(declare-fun res!54157 () Bool)

(assert (=> b!109372 (=> (not res!54157) (not e!71135))))

(declare-fun e!71147 () Bool)

(assert (=> b!109372 (= res!54157 e!71147)))

(declare-fun res!54158 () Bool)

(assert (=> b!109372 (=> res!54158 e!71147)))

(declare-fun e!71141 () Bool)

(assert (=> b!109372 (= res!54158 (not e!71141))))

(declare-fun res!54153 () Bool)

(assert (=> b!109372 (=> (not res!54153) (not e!71141))))

(assert (=> b!109372 (= res!54153 (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55257)))))))

(declare-fun b!109373 () Bool)

(assert (=> b!109373 (= e!71140 (= (apply!99 lt!56252 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2478 (_2!1206 lt!55257))))))

(declare-fun b!109374 () Bool)

(assert (=> b!109374 (= e!71141 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000)))))

(declare-fun b!109375 () Bool)

(declare-fun call!11613 () ListLongMap!1549)

(assert (=> b!109375 (= e!71142 call!11613)))

(declare-fun bm!11605 () Bool)

(declare-fun call!11608 () ListLongMap!1549)

(declare-fun call!11610 () ListLongMap!1549)

(assert (=> bm!11605 (= call!11608 call!11610)))

(declare-fun bm!11606 () Bool)

(declare-fun call!11611 () ListLongMap!1549)

(assert (=> bm!11606 (= call!11613 call!11611)))

(declare-fun bm!11607 () Bool)

(assert (=> bm!11607 (= call!11612 (contains!824 lt!56252 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11608 () Bool)

(declare-fun call!11609 () ListLongMap!1549)

(assert (=> bm!11608 (= call!11611 (+!137 (ite c!19339 call!11610 (ite c!19340 call!11608 call!11609)) (ite (or c!19339 c!19340) (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2478 (_2!1206 lt!55257))) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (_2!1206 lt!55257))))))))

(declare-fun b!109376 () Bool)

(declare-fun e!71137 () Bool)

(declare-fun e!71136 () Bool)

(assert (=> b!109376 (= e!71137 e!71136)))

(declare-fun res!54155 () Bool)

(assert (=> b!109376 (= res!54155 call!11607)))

(assert (=> b!109376 (=> (not res!54155) (not e!71136))))

(declare-fun bm!11609 () Bool)

(assert (=> bm!11609 (= call!11609 call!11608)))

(declare-fun b!109377 () Bool)

(assert (=> b!109377 (= e!71135 e!71137)))

(declare-fun c!19338 () Bool)

(assert (=> b!109377 (= c!19338 (not (= (bvand (extraKeys!2406 (_2!1206 lt!55257)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!109378 () Bool)

(assert (=> b!109378 (= e!71147 e!71146)))

(declare-fun res!54152 () Bool)

(assert (=> b!109378 (=> (not res!54152) (not e!71146))))

(assert (=> b!109378 (= res!54152 (contains!824 lt!56252 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000)))))

(assert (=> b!109378 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_keys!4314 (_2!1206 lt!55257)))))))

(declare-fun b!109379 () Bool)

(declare-fun lt!56235 () Unit!3307)

(assert (=> b!109379 (= e!71145 lt!56235)))

(declare-fun lt!56233 () ListLongMap!1549)

(assert (=> b!109379 (= lt!56233 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (_2!1206 lt!55257)) (_values!2588 (_2!1206 lt!55257)) (mask!6762 (_2!1206 lt!55257)) (extraKeys!2406 (_2!1206 lt!55257)) (zeroValue!2478 (_2!1206 lt!55257)) (minValue!2478 (_2!1206 lt!55257)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1206 lt!55257))))))

(declare-fun lt!56232 () (_ BitVec 64))

(assert (=> b!109379 (= lt!56232 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56238 () (_ BitVec 64))

(assert (=> b!109379 (= lt!56238 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000))))

(declare-fun lt!56245 () Unit!3307)

(assert (=> b!109379 (= lt!56245 (addStillContains!75 lt!56233 lt!56232 (zeroValue!2478 (_2!1206 lt!55257)) lt!56238))))

(assert (=> b!109379 (contains!824 (+!137 lt!56233 (tuple2!2393 lt!56232 (zeroValue!2478 (_2!1206 lt!55257)))) lt!56238)))

(declare-fun lt!56236 () Unit!3307)

(assert (=> b!109379 (= lt!56236 lt!56245)))

(declare-fun lt!56243 () ListLongMap!1549)

(assert (=> b!109379 (= lt!56243 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (_2!1206 lt!55257)) (_values!2588 (_2!1206 lt!55257)) (mask!6762 (_2!1206 lt!55257)) (extraKeys!2406 (_2!1206 lt!55257)) (zeroValue!2478 (_2!1206 lt!55257)) (minValue!2478 (_2!1206 lt!55257)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1206 lt!55257))))))

(declare-fun lt!56240 () (_ BitVec 64))

(assert (=> b!109379 (= lt!56240 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56248 () (_ BitVec 64))

(assert (=> b!109379 (= lt!56248 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000))))

(declare-fun lt!56242 () Unit!3307)

(assert (=> b!109379 (= lt!56242 (addApplyDifferent!75 lt!56243 lt!56240 (minValue!2478 (_2!1206 lt!55257)) lt!56248))))

(assert (=> b!109379 (= (apply!99 (+!137 lt!56243 (tuple2!2393 lt!56240 (minValue!2478 (_2!1206 lt!55257)))) lt!56248) (apply!99 lt!56243 lt!56248))))

(declare-fun lt!56251 () Unit!3307)

(assert (=> b!109379 (= lt!56251 lt!56242)))

(declare-fun lt!56237 () ListLongMap!1549)

(assert (=> b!109379 (= lt!56237 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (_2!1206 lt!55257)) (_values!2588 (_2!1206 lt!55257)) (mask!6762 (_2!1206 lt!55257)) (extraKeys!2406 (_2!1206 lt!55257)) (zeroValue!2478 (_2!1206 lt!55257)) (minValue!2478 (_2!1206 lt!55257)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1206 lt!55257))))))

(declare-fun lt!56234 () (_ BitVec 64))

(assert (=> b!109379 (= lt!56234 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56253 () (_ BitVec 64))

(assert (=> b!109379 (= lt!56253 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000))))

(declare-fun lt!56247 () Unit!3307)

(assert (=> b!109379 (= lt!56247 (addApplyDifferent!75 lt!56237 lt!56234 (zeroValue!2478 (_2!1206 lt!55257)) lt!56253))))

(assert (=> b!109379 (= (apply!99 (+!137 lt!56237 (tuple2!2393 lt!56234 (zeroValue!2478 (_2!1206 lt!55257)))) lt!56253) (apply!99 lt!56237 lt!56253))))

(declare-fun lt!56244 () Unit!3307)

(assert (=> b!109379 (= lt!56244 lt!56247)))

(declare-fun lt!56249 () ListLongMap!1549)

(assert (=> b!109379 (= lt!56249 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (_2!1206 lt!55257)) (_values!2588 (_2!1206 lt!55257)) (mask!6762 (_2!1206 lt!55257)) (extraKeys!2406 (_2!1206 lt!55257)) (zeroValue!2478 (_2!1206 lt!55257)) (minValue!2478 (_2!1206 lt!55257)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1206 lt!55257))))))

(declare-fun lt!56241 () (_ BitVec 64))

(assert (=> b!109379 (= lt!56241 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56239 () (_ BitVec 64))

(assert (=> b!109379 (= lt!56239 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000))))

(assert (=> b!109379 (= lt!56235 (addApplyDifferent!75 lt!56249 lt!56241 (minValue!2478 (_2!1206 lt!55257)) lt!56239))))

(assert (=> b!109379 (= (apply!99 (+!137 lt!56249 (tuple2!2393 lt!56241 (minValue!2478 (_2!1206 lt!55257)))) lt!56239) (apply!99 lt!56249 lt!56239))))

(declare-fun b!109380 () Bool)

(assert (=> b!109380 (= e!71143 (+!137 call!11611 (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2478 (_2!1206 lt!55257)))))))

(declare-fun bm!11610 () Bool)

(assert (=> bm!11610 (= call!11610 (getCurrentListMapNoExtraKeys!102 (_keys!4314 (_2!1206 lt!55257)) (_values!2588 (_2!1206 lt!55257)) (mask!6762 (_2!1206 lt!55257)) (extraKeys!2406 (_2!1206 lt!55257)) (zeroValue!2478 (_2!1206 lt!55257)) (minValue!2478 (_2!1206 lt!55257)) #b00000000000000000000000000000000 (defaultEntry!2605 (_2!1206 lt!55257))))))

(declare-fun b!109381 () Bool)

(declare-fun res!54154 () Bool)

(assert (=> b!109381 (=> (not res!54154) (not e!71135))))

(assert (=> b!109381 (= res!54154 e!71144)))

(declare-fun c!19343 () Bool)

(assert (=> b!109381 (= c!19343 (not (= (bvand (extraKeys!2406 (_2!1206 lt!55257)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!109382 () Bool)

(assert (=> b!109382 (= e!71138 (validKeyInArray!0 (select (arr!2062 (_keys!4314 (_2!1206 lt!55257))) #b00000000000000000000000000000000)))))

(declare-fun b!109383 () Bool)

(declare-fun c!19341 () Bool)

(assert (=> b!109383 (= c!19341 (and (not (= (bvand (extraKeys!2406 (_2!1206 lt!55257)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2406 (_2!1206 lt!55257)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71139 () ListLongMap!1549)

(assert (=> b!109383 (= e!71142 e!71139)))

(declare-fun b!109384 () Bool)

(assert (=> b!109384 (= e!71136 (= (apply!99 lt!56252 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2478 (_2!1206 lt!55257))))))

(declare-fun b!109385 () Bool)

(assert (=> b!109385 (= e!71137 (not call!11607))))

(declare-fun b!109386 () Bool)

(assert (=> b!109386 (= e!71139 call!11613)))

(declare-fun b!109387 () Bool)

(assert (=> b!109387 (= e!71139 call!11609)))

(assert (= (and d!30703 c!19339) b!109380))

(assert (= (and d!30703 (not c!19339)) b!109369))

(assert (= (and b!109369 c!19340) b!109375))

(assert (= (and b!109369 (not c!19340)) b!109383))

(assert (= (and b!109383 c!19341) b!109386))

(assert (= (and b!109383 (not c!19341)) b!109387))

(assert (= (or b!109386 b!109387) bm!11609))

(assert (= (or b!109375 bm!11609) bm!11605))

(assert (= (or b!109375 b!109386) bm!11606))

(assert (= (or b!109380 bm!11605) bm!11610))

(assert (= (or b!109380 bm!11606) bm!11608))

(assert (= (and d!30703 res!54156) b!109382))

(assert (= (and d!30703 c!19342) b!109379))

(assert (= (and d!30703 (not c!19342)) b!109367))

(assert (= (and d!30703 res!54151) b!109372))

(assert (= (and b!109372 res!54153) b!109374))

(assert (= (and b!109372 (not res!54158)) b!109378))

(assert (= (and b!109378 res!54152) b!109368))

(assert (= (and b!109372 res!54157) b!109381))

(assert (= (and b!109381 c!19343) b!109370))

(assert (= (and b!109381 (not c!19343)) b!109371))

(assert (= (and b!109370 res!54150) b!109373))

(assert (= (or b!109370 b!109371) bm!11607))

(assert (= (and b!109381 res!54154) b!109377))

(assert (= (and b!109377 c!19338) b!109376))

(assert (= (and b!109377 (not c!19338)) b!109385))

(assert (= (and b!109376 res!54155) b!109384))

(assert (= (or b!109376 b!109385) bm!11604))

(declare-fun b_lambda!4869 () Bool)

(assert (=> (not b_lambda!4869) (not b!109368)))

(declare-fun t!5747 () Bool)

(declare-fun tb!2089 () Bool)

(assert (=> (and b!107369 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 (_2!1206 lt!55257))) t!5747) tb!2089))

(declare-fun result!3509 () Bool)

(assert (=> tb!2089 (= result!3509 tp_is_empty!2689)))

(assert (=> b!109368 t!5747))

(declare-fun b_and!6729 () Bool)

(assert (= b_and!6725 (and (=> t!5747 result!3509) b_and!6729)))

(declare-fun tb!2091 () Bool)

(declare-fun t!5749 () Bool)

(assert (=> (and b!107358 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (_2!1206 lt!55257))) t!5749) tb!2091))

(declare-fun result!3511 () Bool)

(assert (= result!3511 result!3509))

(assert (=> b!109368 t!5749))

(declare-fun b_and!6731 () Bool)

(assert (= b_and!6727 (and (=> t!5749 result!3511) b_and!6731)))

(declare-fun m!123713 () Bool)

(assert (=> b!109368 m!123713))

(declare-fun m!123715 () Bool)

(assert (=> b!109368 m!123715))

(assert (=> b!109368 m!123713))

(assert (=> b!109368 m!123715))

(declare-fun m!123717 () Bool)

(assert (=> b!109368 m!123717))

(assert (=> b!109368 m!121643))

(declare-fun m!123719 () Bool)

(assert (=> b!109368 m!123719))

(assert (=> b!109368 m!121643))

(declare-fun m!123721 () Bool)

(assert (=> b!109384 m!123721))

(declare-fun m!123723 () Bool)

(assert (=> bm!11604 m!123723))

(declare-fun m!123725 () Bool)

(assert (=> bm!11610 m!123725))

(declare-fun m!123727 () Bool)

(assert (=> bm!11607 m!123727))

(assert (=> b!109374 m!121643))

(assert (=> b!109374 m!121643))

(assert (=> b!109374 m!121649))

(assert (=> b!109382 m!121643))

(assert (=> b!109382 m!121643))

(assert (=> b!109382 m!121649))

(declare-fun m!123729 () Bool)

(assert (=> bm!11608 m!123729))

(declare-fun m!123731 () Bool)

(assert (=> b!109380 m!123731))

(declare-fun m!123733 () Bool)

(assert (=> d!30703 m!123733))

(declare-fun m!123735 () Bool)

(assert (=> b!109373 m!123735))

(assert (=> b!109378 m!121643))

(assert (=> b!109378 m!121643))

(declare-fun m!123737 () Bool)

(assert (=> b!109378 m!123737))

(declare-fun m!123739 () Bool)

(assert (=> b!109379 m!123739))

(declare-fun m!123741 () Bool)

(assert (=> b!109379 m!123741))

(declare-fun m!123743 () Bool)

(assert (=> b!109379 m!123743))

(declare-fun m!123745 () Bool)

(assert (=> b!109379 m!123745))

(declare-fun m!123747 () Bool)

(assert (=> b!109379 m!123747))

(declare-fun m!123749 () Bool)

(assert (=> b!109379 m!123749))

(declare-fun m!123751 () Bool)

(assert (=> b!109379 m!123751))

(declare-fun m!123753 () Bool)

(assert (=> b!109379 m!123753))

(assert (=> b!109379 m!123743))

(assert (=> b!109379 m!123749))

(declare-fun m!123755 () Bool)

(assert (=> b!109379 m!123755))

(assert (=> b!109379 m!123725))

(declare-fun m!123757 () Bool)

(assert (=> b!109379 m!123757))

(declare-fun m!123759 () Bool)

(assert (=> b!109379 m!123759))

(declare-fun m!123761 () Bool)

(assert (=> b!109379 m!123761))

(assert (=> b!109379 m!123751))

(declare-fun m!123763 () Bool)

(assert (=> b!109379 m!123763))

(declare-fun m!123765 () Bool)

(assert (=> b!109379 m!123765))

(assert (=> b!109379 m!121643))

(assert (=> b!109379 m!123761))

(declare-fun m!123767 () Bool)

(assert (=> b!109379 m!123767))

(assert (=> d!29809 d!30703))

(declare-fun d!30705 () Bool)

(declare-fun res!54159 () Bool)

(declare-fun e!71148 () Bool)

(assert (=> d!30705 (=> res!54159 e!71148)))

(assert (=> d!30705 (= res!54159 (and ((_ is Cons!1619) (toList!790 lt!55124)) (= (_1!1207 (h!2217 (toList!790 lt!55124))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30705 (= (containsKey!159 (toList!790 lt!55124) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!71148)))

(declare-fun b!109388 () Bool)

(declare-fun e!71149 () Bool)

(assert (=> b!109388 (= e!71148 e!71149)))

(declare-fun res!54160 () Bool)

(assert (=> b!109388 (=> (not res!54160) (not e!71149))))

(assert (=> b!109388 (= res!54160 (and (or (not ((_ is Cons!1619) (toList!790 lt!55124))) (bvsle (_1!1207 (h!2217 (toList!790 lt!55124))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1619) (toList!790 lt!55124)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55124))) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!109389 () Bool)

(assert (=> b!109389 (= e!71149 (containsKey!159 (t!5730 (toList!790 lt!55124)) (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30705 (not res!54159)) b!109388))

(assert (= (and b!109388 res!54160) b!109389))

(assert (=> b!109389 m!120545))

(declare-fun m!123769 () Bool)

(assert (=> b!109389 m!123769))

(assert (=> d!29893 d!30705))

(declare-fun d!30707 () Bool)

(assert (=> d!30707 (isDefined!109 (getValueByKey!155 (toList!790 lt!55176) (_1!1207 lt!54985)))))

(declare-fun lt!56254 () Unit!3307)

(assert (=> d!30707 (= lt!56254 (choose!681 (toList!790 lt!55176) (_1!1207 lt!54985)))))

(declare-fun e!71150 () Bool)

(assert (=> d!30707 e!71150))

(declare-fun res!54161 () Bool)

(assert (=> d!30707 (=> (not res!54161) (not e!71150))))

(assert (=> d!30707 (= res!54161 (isStrictlySorted!305 (toList!790 lt!55176)))))

(assert (=> d!30707 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55176) (_1!1207 lt!54985)) lt!56254)))

(declare-fun b!109390 () Bool)

(assert (=> b!109390 (= e!71150 (containsKey!159 (toList!790 lt!55176) (_1!1207 lt!54985)))))

(assert (= (and d!30707 res!54161) b!109390))

(assert (=> d!30707 m!120687))

(assert (=> d!30707 m!120687))

(assert (=> d!30707 m!121331))

(declare-fun m!123771 () Bool)

(assert (=> d!30707 m!123771))

(declare-fun m!123773 () Bool)

(assert (=> d!30707 m!123773))

(assert (=> b!109390 m!121327))

(assert (=> b!108095 d!30707))

(assert (=> b!108095 d!30479))

(assert (=> b!108095 d!29891))

(declare-fun b!109393 () Bool)

(declare-fun e!71152 () Option!161)

(assert (=> b!109393 (= e!71152 (getValueByKey!155 (t!5730 (t!5730 (toList!790 lt!55147))) (_1!1207 lt!54977)))))

(declare-fun b!109392 () Bool)

(declare-fun e!71151 () Option!161)

(assert (=> b!109392 (= e!71151 e!71152)))

(declare-fun c!19345 () Bool)

(assert (=> b!109392 (= c!19345 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!55147))) (not (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!55147)))) (_1!1207 lt!54977)))))))

(declare-fun d!30709 () Bool)

(declare-fun c!19344 () Bool)

(assert (=> d!30709 (= c!19344 (and ((_ is Cons!1619) (t!5730 (toList!790 lt!55147))) (= (_1!1207 (h!2217 (t!5730 (toList!790 lt!55147)))) (_1!1207 lt!54977))))))

(assert (=> d!30709 (= (getValueByKey!155 (t!5730 (toList!790 lt!55147)) (_1!1207 lt!54977)) e!71151)))

(declare-fun b!109394 () Bool)

(assert (=> b!109394 (= e!71152 None!159)))

(declare-fun b!109391 () Bool)

(assert (=> b!109391 (= e!71151 (Some!160 (_2!1207 (h!2217 (t!5730 (toList!790 lt!55147))))))))

(assert (= (and d!30709 c!19344) b!109391))

(assert (= (and d!30709 (not c!19344)) b!109392))

(assert (= (and b!109392 c!19345) b!109393))

(assert (= (and b!109392 (not c!19345)) b!109394))

(declare-fun m!123775 () Bool)

(assert (=> b!109393 m!123775))

(assert (=> b!108026 d!30709))

(declare-fun d!30711 () Bool)

(assert (=> d!30711 (isDefined!109 (getValueByKey!155 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))))))

(declare-fun lt!56255 () Unit!3307)

(assert (=> d!30711 (= lt!56255 (choose!681 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))))))

(declare-fun e!71153 () Bool)

(assert (=> d!30711 e!71153))

(declare-fun res!54162 () Bool)

(assert (=> d!30711 (=> (not res!54162) (not e!71153))))

(assert (=> d!30711 (= res!54162 (isStrictlySorted!305 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16)))))))

(assert (=> d!30711 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))) lt!56255)))

(declare-fun b!109395 () Bool)

(assert (=> b!109395 (= e!71153 (containsKey!159 (toList!790 (getCurrentListMap!467 (_keys!4314 newMap!16) lt!55252 (mask!6762 newMap!16) (extraKeys!2406 newMap!16) (zeroValue!2478 newMap!16) (minValue!2478 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2605 newMap!16))) (select (arr!2062 (_keys!4314 newMap!16)) (index!3202 lt!55253))))))

(assert (= (and d!30711 res!54162) b!109395))

(assert (=> d!30711 m!120729))

(assert (=> d!30711 m!121263))

(assert (=> d!30711 m!121263))

(assert (=> d!30711 m!121265))

(assert (=> d!30711 m!120729))

(declare-fun m!123777 () Bool)

(assert (=> d!30711 m!123777))

(declare-fun m!123779 () Bool)

(assert (=> d!30711 m!123779))

(assert (=> b!109395 m!120729))

(assert (=> b!109395 m!121259))

(assert (=> b!108061 d!30711))

(assert (=> b!108061 d!30473))

(assert (=> b!108061 d!30475))

(declare-fun d!30713 () Bool)

(declare-fun lt!56256 () Bool)

(assert (=> d!30713 (= lt!56256 (select (content!111 (t!5730 (toList!790 lt!55143))) lt!54985))))

(declare-fun e!71155 () Bool)

(assert (=> d!30713 (= lt!56256 e!71155)))

(declare-fun res!54163 () Bool)

(assert (=> d!30713 (=> (not res!54163) (not e!71155))))

(assert (=> d!30713 (= res!54163 ((_ is Cons!1619) (t!5730 (toList!790 lt!55143))))))

(assert (=> d!30713 (= (contains!826 (t!5730 (toList!790 lt!55143)) lt!54985) lt!56256)))

(declare-fun b!109396 () Bool)

(declare-fun e!71154 () Bool)

(assert (=> b!109396 (= e!71155 e!71154)))

(declare-fun res!54164 () Bool)

(assert (=> b!109396 (=> res!54164 e!71154)))

(assert (=> b!109396 (= res!54164 (= (h!2217 (t!5730 (toList!790 lt!55143))) lt!54985))))

(declare-fun b!109397 () Bool)

(assert (=> b!109397 (= e!71154 (contains!826 (t!5730 (t!5730 (toList!790 lt!55143))) lt!54985))))

(assert (= (and d!30713 res!54163) b!109396))

(assert (= (and b!109396 (not res!54164)) b!109397))

(assert (=> d!30713 m!123697))

(declare-fun m!123781 () Bool)

(assert (=> d!30713 m!123781))

(declare-fun m!123783 () Bool)

(assert (=> b!109397 m!123783))

(assert (=> b!107817 d!30713))

(declare-fun lt!56257 () Bool)

(declare-fun d!30715 () Bool)

(assert (=> d!30715 (= lt!56257 (select (content!111 (toList!790 lt!55428)) (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun e!71157 () Bool)

(assert (=> d!30715 (= lt!56257 e!71157)))

(declare-fun res!54165 () Bool)

(assert (=> d!30715 (=> (not res!54165) (not e!71157))))

(assert (=> d!30715 (= res!54165 ((_ is Cons!1619) (toList!790 lt!55428)))))

(assert (=> d!30715 (= (contains!826 (toList!790 lt!55428) (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))) lt!56257)))

(declare-fun b!109398 () Bool)

(declare-fun e!71156 () Bool)

(assert (=> b!109398 (= e!71157 e!71156)))

(declare-fun res!54166 () Bool)

(assert (=> b!109398 (=> res!54166 e!71156)))

(assert (=> b!109398 (= res!54166 (= (h!2217 (toList!790 lt!55428)) (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(declare-fun b!109399 () Bool)

(assert (=> b!109399 (= e!71156 (contains!826 (t!5730 (toList!790 lt!55428)) (tuple2!2393 lt!55106 (zeroValue!2478 (v!2904 (underlying!360 thiss!992))))))))

(assert (= (and d!30715 res!54165) b!109398))

(assert (= (and b!109398 (not res!54166)) b!109399))

(declare-fun m!123785 () Bool)

(assert (=> d!30715 m!123785))

(declare-fun m!123787 () Bool)

(assert (=> d!30715 m!123787))

(declare-fun m!123789 () Bool)

(assert (=> b!109399 m!123789))

(assert (=> b!107926 d!30715))

(declare-fun d!30717 () Bool)

(declare-fun e!71158 () Bool)

(assert (=> d!30717 e!71158))

(declare-fun res!54167 () Bool)

(assert (=> d!30717 (=> res!54167 e!71158)))

(declare-fun lt!56258 () Bool)

(assert (=> d!30717 (= res!54167 (not lt!56258))))

(declare-fun lt!56259 () Bool)

(assert (=> d!30717 (= lt!56258 lt!56259)))

(declare-fun lt!56261 () Unit!3307)

(declare-fun e!71159 () Unit!3307)

(assert (=> d!30717 (= lt!56261 e!71159)))

(declare-fun c!19346 () Bool)

(assert (=> d!30717 (= c!19346 lt!56259)))

(assert (=> d!30717 (= lt!56259 (containsKey!159 (toList!790 lt!55295) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!30717 (= (contains!824 lt!55295 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) lt!56258)))

(declare-fun b!109400 () Bool)

(declare-fun lt!56260 () Unit!3307)

(assert (=> b!109400 (= e!71159 lt!56260)))

(assert (=> b!109400 (= lt!56260 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55295) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> b!109400 (isDefined!109 (getValueByKey!155 (toList!790 lt!55295) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun b!109401 () Bool)

(declare-fun Unit!3388 () Unit!3307)

(assert (=> b!109401 (= e!71159 Unit!3388)))

(declare-fun b!109402 () Bool)

(assert (=> b!109402 (= e!71158 (isDefined!109 (getValueByKey!155 (toList!790 lt!55295) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(assert (= (and d!30717 c!19346) b!109400))

(assert (= (and d!30717 (not c!19346)) b!109401))

(assert (= (and d!30717 (not res!54167)) b!109402))

(declare-fun m!123791 () Bool)

(assert (=> d!30717 m!123791))

(declare-fun m!123793 () Bool)

(assert (=> b!109400 m!123793))

(assert (=> b!109400 m!120817))

(assert (=> b!109400 m!120817))

(declare-fun m!123795 () Bool)

(assert (=> b!109400 m!123795))

(assert (=> b!109402 m!120817))

(assert (=> b!109402 m!120817))

(assert (=> b!109402 m!123795))

(assert (=> d!29745 d!30717))

(declare-fun b!109405 () Bool)

(declare-fun e!71161 () Option!161)

(assert (=> b!109405 (= e!71161 (getValueByKey!155 (t!5730 lt!55298) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun b!109404 () Bool)

(declare-fun e!71160 () Option!161)

(assert (=> b!109404 (= e!71160 e!71161)))

(declare-fun c!19348 () Bool)

(assert (=> b!109404 (= c!19348 (and ((_ is Cons!1619) lt!55298) (not (= (_1!1207 (h!2217 lt!55298)) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))))

(declare-fun d!30719 () Bool)

(declare-fun c!19347 () Bool)

(assert (=> d!30719 (= c!19347 (and ((_ is Cons!1619) lt!55298) (= (_1!1207 (h!2217 lt!55298)) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(assert (=> d!30719 (= (getValueByKey!155 lt!55298 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) e!71160)))

(declare-fun b!109406 () Bool)

(assert (=> b!109406 (= e!71161 None!159)))

(declare-fun b!109403 () Bool)

(assert (=> b!109403 (= e!71160 (Some!160 (_2!1207 (h!2217 lt!55298))))))

(assert (= (and d!30719 c!19347) b!109403))

(assert (= (and d!30719 (not c!19347)) b!109404))

(assert (= (and b!109404 c!19348) b!109405))

(assert (= (and b!109404 (not c!19348)) b!109406))

(declare-fun m!123797 () Bool)

(assert (=> b!109405 m!123797))

(assert (=> d!29745 d!30719))

(declare-fun d!30721 () Bool)

(assert (=> d!30721 (= (getValueByKey!155 lt!55298 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) (Some!160 (_2!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun lt!56262 () Unit!3307)

(assert (=> d!30721 (= lt!56262 (choose!679 lt!55298 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (_2!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun e!71162 () Bool)

(assert (=> d!30721 e!71162))

(declare-fun res!54168 () Bool)

(assert (=> d!30721 (=> (not res!54168) (not e!71162))))

(assert (=> d!30721 (= res!54168 (isStrictlySorted!305 lt!55298))))

(assert (=> d!30721 (= (lemmaContainsTupThenGetReturnValue!74 lt!55298 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (_2!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) lt!56262)))

(declare-fun b!109407 () Bool)

(declare-fun res!54169 () Bool)

(assert (=> b!109407 (=> (not res!54169) (not e!71162))))

(assert (=> b!109407 (= res!54169 (containsKey!159 lt!55298 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun b!109408 () Bool)

(assert (=> b!109408 (= e!71162 (contains!826 lt!55298 (tuple2!2393 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (_2!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(assert (= (and d!30721 res!54168) b!109407))

(assert (= (and b!109407 res!54169) b!109408))

(assert (=> d!30721 m!120811))

(declare-fun m!123799 () Bool)

(assert (=> d!30721 m!123799))

(declare-fun m!123801 () Bool)

(assert (=> d!30721 m!123801))

(declare-fun m!123803 () Bool)

(assert (=> b!109407 m!123803))

(declare-fun m!123805 () Bool)

(assert (=> b!109408 m!123805))

(assert (=> d!29745 d!30721))

(declare-fun bm!11611 () Bool)

(declare-fun call!11615 () List!1623)

(declare-fun call!11614 () List!1623)

(assert (=> bm!11611 (= call!11615 call!11614)))

(declare-fun b!109409 () Bool)

(declare-fun e!71167 () List!1623)

(assert (=> b!109409 (= e!71167 call!11615)))

(declare-fun b!109411 () Bool)

(declare-fun e!71164 () List!1623)

(declare-fun call!11616 () List!1623)

(assert (=> b!109411 (= e!71164 call!11616)))

(declare-fun b!109412 () Bool)

(declare-fun lt!56263 () List!1623)

(declare-fun e!71163 () Bool)

(assert (=> b!109412 (= e!71163 (contains!826 lt!56263 (tuple2!2393 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (_2!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(declare-fun b!109413 () Bool)

(declare-fun e!71165 () List!1623)

(assert (=> b!109413 (= e!71165 (insertStrictlySorted!77 (t!5730 (toList!790 (ite c!18892 call!11405 call!11410))) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (_2!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun b!109414 () Bool)

(declare-fun e!71166 () List!1623)

(assert (=> b!109414 (= e!71166 call!11614)))

(declare-fun bm!11612 () Bool)

(declare-fun c!19349 () Bool)

(assert (=> bm!11612 (= call!11614 ($colon$colon!81 e!71165 (ite c!19349 (h!2217 (toList!790 (ite c!18892 call!11405 call!11410))) (tuple2!2393 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (_2!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))))

(declare-fun c!19351 () Bool)

(assert (=> bm!11612 (= c!19351 c!19349)))

(declare-fun bm!11613 () Bool)

(assert (=> bm!11613 (= call!11616 call!11615)))

(declare-fun b!109415 () Bool)

(declare-fun c!19352 () Bool)

(assert (=> b!109415 (= c!19352 (and ((_ is Cons!1619) (toList!790 (ite c!18892 call!11405 call!11410))) (bvsgt (_1!1207 (h!2217 (toList!790 (ite c!18892 call!11405 call!11410)))) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(assert (=> b!109415 (= e!71167 e!71164)))

(declare-fun b!109410 () Bool)

(declare-fun res!54171 () Bool)

(assert (=> b!109410 (=> (not res!54171) (not e!71163))))

(assert (=> b!109410 (= res!54171 (containsKey!159 lt!56263 (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun d!30723 () Bool)

(assert (=> d!30723 e!71163))

(declare-fun res!54170 () Bool)

(assert (=> d!30723 (=> (not res!54170) (not e!71163))))

(assert (=> d!30723 (= res!54170 (isStrictlySorted!305 lt!56263))))

(assert (=> d!30723 (= lt!56263 e!71166)))

(assert (=> d!30723 (= c!19349 (and ((_ is Cons!1619) (toList!790 (ite c!18892 call!11405 call!11410))) (bvslt (_1!1207 (h!2217 (toList!790 (ite c!18892 call!11405 call!11410)))) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(assert (=> d!30723 (isStrictlySorted!305 (toList!790 (ite c!18892 call!11405 call!11410)))))

(assert (=> d!30723 (= (insertStrictlySorted!77 (toList!790 (ite c!18892 call!11405 call!11410)) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (_2!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))) lt!56263)))

(declare-fun b!109416 () Bool)

(assert (=> b!109416 (= e!71164 call!11616)))

(declare-fun c!19350 () Bool)

(declare-fun b!109417 () Bool)

(assert (=> b!109417 (= e!71165 (ite c!19350 (t!5730 (toList!790 (ite c!18892 call!11405 call!11410))) (ite c!19352 (Cons!1619 (h!2217 (toList!790 (ite c!18892 call!11405 call!11410))) (t!5730 (toList!790 (ite c!18892 call!11405 call!11410)))) Nil!1620)))))

(declare-fun b!109418 () Bool)

(assert (=> b!109418 (= e!71166 e!71167)))

(assert (=> b!109418 (= c!19350 (and ((_ is Cons!1619) (toList!790 (ite c!18892 call!11405 call!11410))) (= (_1!1207 (h!2217 (toList!790 (ite c!18892 call!11405 call!11410)))) (_1!1207 (ite c!18892 (ite c!18891 (tuple2!2393 #b0000000000000000000000000000000000000000000000000000000000000000 lt!54982) (tuple2!2393 #b1000000000000000000000000000000000000000000000000000000000000000 lt!54982)) (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(assert (= (and d!30723 c!19349) b!109414))

(assert (= (and d!30723 (not c!19349)) b!109418))

(assert (= (and b!109418 c!19350) b!109409))

(assert (= (and b!109418 (not c!19350)) b!109415))

(assert (= (and b!109415 c!19352) b!109416))

(assert (= (and b!109415 (not c!19352)) b!109411))

(assert (= (or b!109416 b!109411) bm!11613))

(assert (= (or b!109409 bm!11613) bm!11611))

(assert (= (or b!109414 bm!11611) bm!11612))

(assert (= (and bm!11612 c!19351) b!109413))

(assert (= (and bm!11612 (not c!19351)) b!109417))

(assert (= (and d!30723 res!54170) b!109410))

(assert (= (and b!109410 res!54171) b!109412))

(declare-fun m!123807 () Bool)

(assert (=> b!109412 m!123807))

(declare-fun m!123809 () Bool)

(assert (=> bm!11612 m!123809))

(declare-fun m!123811 () Bool)

(assert (=> b!109410 m!123811))

(declare-fun m!123813 () Bool)

(assert (=> d!30723 m!123813))

(declare-fun m!123815 () Bool)

(assert (=> d!30723 m!123815))

(declare-fun m!123817 () Bool)

(assert (=> b!109413 m!123817))

(assert (=> d!29745 d!30723))

(declare-fun d!30725 () Bool)

(assert (=> d!30725 (isDefined!109 (getValueByKey!155 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!56264 () Unit!3307)

(assert (=> d!30725 (= lt!56264 (choose!681 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71168 () Bool)

(assert (=> d!30725 e!71168))

(declare-fun res!54172 () Bool)

(assert (=> d!30725 (=> (not res!54172) (not e!71168))))

(assert (=> d!30725 (= res!54172 (isStrictlySorted!305 (toList!790 lt!55124)))))

(assert (=> d!30725 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000) lt!56264)))

(declare-fun b!109419 () Bool)

(assert (=> b!109419 (= e!71168 (containsKey!159 (toList!790 lt!55124) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30725 res!54172) b!109419))

(assert (=> d!30725 m!121173))

(assert (=> d!30725 m!121173))

(assert (=> d!30725 m!121183))

(declare-fun m!123819 () Bool)

(assert (=> d!30725 m!123819))

(assert (=> d!30725 m!121769))

(assert (=> b!109419 m!121179))

(assert (=> b!108021 d!30725))

(assert (=> b!108021 d!30493))

(assert (=> b!108021 d!30123))

(declare-fun d!30727 () Bool)

(declare-fun e!71169 () Bool)

(assert (=> d!30727 e!71169))

(declare-fun res!54173 () Bool)

(assert (=> d!30727 (=> res!54173 e!71169)))

(declare-fun lt!56265 () Bool)

(assert (=> d!30727 (= res!54173 (not lt!56265))))

(declare-fun lt!56266 () Bool)

(assert (=> d!30727 (= lt!56265 lt!56266)))

(declare-fun lt!56268 () Unit!3307)

(declare-fun e!71170 () Unit!3307)

(assert (=> d!30727 (= lt!56268 e!71170)))

(declare-fun c!19353 () Bool)

(assert (=> d!30727 (= c!19353 lt!56266)))

(assert (=> d!30727 (= lt!56266 (containsKey!159 (toList!790 lt!55496) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> d!30727 (= (contains!824 lt!55496 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) lt!56265)))

(declare-fun b!109420 () Bool)

(declare-fun lt!56267 () Unit!3307)

(assert (=> b!109420 (= e!71170 lt!56267)))

(assert (=> b!109420 (= lt!56267 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!790 lt!55496) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(assert (=> b!109420 (isDefined!109 (getValueByKey!155 (toList!790 lt!55496) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!109421 () Bool)

(declare-fun Unit!3389 () Unit!3307)

(assert (=> b!109421 (= e!71170 Unit!3389)))

(declare-fun b!109422 () Bool)

(assert (=> b!109422 (= e!71169 (isDefined!109 (getValueByKey!155 (toList!790 lt!55496) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (= (and d!30727 c!19353) b!109420))

(assert (= (and d!30727 (not c!19353)) b!109421))

(assert (= (and d!30727 (not res!54173)) b!109422))

(declare-fun m!123821 () Bool)

(assert (=> d!30727 m!123821))

(declare-fun m!123823 () Bool)

(assert (=> b!109420 m!123823))

(assert (=> b!109420 m!121241))

(assert (=> b!109420 m!121241))

(declare-fun m!123825 () Bool)

(assert (=> b!109420 m!123825))

(assert (=> b!109422 m!121241))

(assert (=> b!109422 m!121241))

(assert (=> b!109422 m!123825))

(assert (=> d!29849 d!30727))

(declare-fun b!109425 () Bool)

(declare-fun e!71172 () Option!161)

(assert (=> b!109425 (= e!71172 (getValueByKey!155 (t!5730 lt!55499) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!109424 () Bool)

(declare-fun e!71171 () Option!161)

(assert (=> b!109424 (= e!71171 e!71172)))

(declare-fun c!19355 () Bool)

(assert (=> b!109424 (= c!19355 (and ((_ is Cons!1619) lt!55499) (not (= (_1!1207 (h!2217 lt!55499)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(declare-fun d!30729 () Bool)

(declare-fun c!19354 () Bool)

(assert (=> d!30729 (= c!19354 (and ((_ is Cons!1619) lt!55499) (= (_1!1207 (h!2217 lt!55499)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!30729 (= (getValueByKey!155 lt!55499 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) e!71171)))

(declare-fun b!109426 () Bool)

(assert (=> b!109426 (= e!71172 None!159)))

(declare-fun b!109423 () Bool)

(assert (=> b!109423 (= e!71171 (Some!160 (_2!1207 (h!2217 lt!55499))))))

(assert (= (and d!30729 c!19354) b!109423))

(assert (= (and d!30729 (not c!19354)) b!109424))

(assert (= (and b!109424 c!19355) b!109425))

(assert (= (and b!109424 (not c!19355)) b!109426))

(declare-fun m!123827 () Bool)

(assert (=> b!109425 m!123827))

(assert (=> d!29849 d!30729))

(declare-fun d!30731 () Bool)

(assert (=> d!30731 (= (getValueByKey!155 lt!55499 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) (Some!160 (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun lt!56269 () Unit!3307)

(assert (=> d!30731 (= lt!56269 (choose!679 lt!55499 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun e!71173 () Bool)

(assert (=> d!30731 e!71173))

(declare-fun res!54174 () Bool)

(assert (=> d!30731 (=> (not res!54174) (not e!71173))))

(assert (=> d!30731 (= res!54174 (isStrictlySorted!305 lt!55499))))

(assert (=> d!30731 (= (lemmaContainsTupThenGetReturnValue!74 lt!55499 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) lt!56269)))

(declare-fun b!109427 () Bool)

(declare-fun res!54175 () Bool)

(assert (=> b!109427 (=> (not res!54175) (not e!71173))))

(assert (=> b!109427 (= res!54175 (containsKey!159 lt!55499 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!109428 () Bool)

(assert (=> b!109428 (= e!71173 (contains!826 lt!55499 (tuple2!2393 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (= (and d!30731 res!54174) b!109427))

(assert (= (and b!109427 res!54175) b!109428))

(assert (=> d!30731 m!121235))

(declare-fun m!123829 () Bool)

(assert (=> d!30731 m!123829))

(declare-fun m!123831 () Bool)

(assert (=> d!30731 m!123831))

(declare-fun m!123833 () Bool)

(assert (=> b!109427 m!123833))

(declare-fun m!123835 () Bool)

(assert (=> b!109428 m!123835))

(assert (=> d!29849 d!30731))

(declare-fun bm!11614 () Bool)

(declare-fun call!11618 () List!1623)

(declare-fun call!11617 () List!1623)

(assert (=> bm!11614 (= call!11618 call!11617)))

(declare-fun b!109429 () Bool)

(declare-fun e!71178 () List!1623)

(assert (=> b!109429 (= e!71178 call!11618)))

(declare-fun b!109431 () Bool)

(declare-fun e!71175 () List!1623)

(declare-fun call!11619 () List!1623)

(assert (=> b!109431 (= e!71175 call!11619)))

(declare-fun e!71174 () Bool)

(declare-fun lt!56270 () List!1623)

(declare-fun b!109432 () Bool)

(assert (=> b!109432 (= e!71174 (contains!826 lt!56270 (tuple2!2393 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(declare-fun b!109433 () Bool)

(declare-fun e!71176 () List!1623)

(assert (=> b!109433 (= e!71176 (insertStrictlySorted!77 (t!5730 (toList!790 lt!54981)) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun b!109434 () Bool)

(declare-fun e!71177 () List!1623)

(assert (=> b!109434 (= e!71177 call!11617)))

(declare-fun bm!11615 () Bool)

(declare-fun c!19356 () Bool)

(assert (=> bm!11615 (= call!11617 ($colon$colon!81 e!71176 (ite c!19356 (h!2217 (toList!790 lt!54981)) (tuple2!2393 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))))

(declare-fun c!19358 () Bool)

(assert (=> bm!11615 (= c!19358 c!19356)))

(declare-fun bm!11616 () Bool)

(assert (=> bm!11616 (= call!11619 call!11618)))

(declare-fun c!19359 () Bool)

(declare-fun b!109435 () Bool)

(assert (=> b!109435 (= c!19359 (and ((_ is Cons!1619) (toList!790 lt!54981)) (bvsgt (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> b!109435 (= e!71178 e!71175)))

(declare-fun b!109430 () Bool)

(declare-fun res!54177 () Bool)

(assert (=> b!109430 (=> (not res!54177) (not e!71174))))

(assert (=> b!109430 (= res!54177 (containsKey!159 lt!56270 (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))))))

(declare-fun d!30733 () Bool)

(assert (=> d!30733 e!71174))

(declare-fun res!54176 () Bool)

(assert (=> d!30733 (=> (not res!54176) (not e!71174))))

(assert (=> d!30733 (= res!54176 (isStrictlySorted!305 lt!56270))))

(assert (=> d!30733 (= lt!56270 e!71177)))

(assert (=> d!30733 (= c!19356 (and ((_ is Cons!1619) (toList!790 lt!54981)) (bvslt (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (=> d!30733 (isStrictlySorted!305 (toList!790 lt!54981))))

(assert (=> d!30733 (= (insertStrictlySorted!77 (toList!790 lt!54981) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)) (_2!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982))) lt!56270)))

(declare-fun b!109436 () Bool)

(assert (=> b!109436 (= e!71175 call!11619)))

(declare-fun c!19357 () Bool)

(declare-fun b!109437 () Bool)

(assert (=> b!109437 (= e!71176 (ite c!19357 (t!5730 (toList!790 lt!54981)) (ite c!19359 (Cons!1619 (h!2217 (toList!790 lt!54981)) (t!5730 (toList!790 lt!54981))) Nil!1620)))))

(declare-fun b!109438 () Bool)

(assert (=> b!109438 (= e!71177 e!71178)))

(assert (=> b!109438 (= c!19357 (and ((_ is Cons!1619) (toList!790 lt!54981)) (= (_1!1207 (h!2217 (toList!790 lt!54981))) (_1!1207 (tuple2!2393 (select (arr!2062 (_keys!4314 (v!2904 (underlying!360 thiss!992)))) from!355) lt!54982)))))))

(assert (= (and d!30733 c!19356) b!109434))

(assert (= (and d!30733 (not c!19356)) b!109438))

(assert (= (and b!109438 c!19357) b!109429))

(assert (= (and b!109438 (not c!19357)) b!109435))

(assert (= (and b!109435 c!19359) b!109436))

(assert (= (and b!109435 (not c!19359)) b!109431))

(assert (= (or b!109436 b!109431) bm!11616))

(assert (= (or b!109429 bm!11616) bm!11614))

(assert (= (or b!109434 bm!11614) bm!11615))

(assert (= (and bm!11615 c!19358) b!109433))

(assert (= (and bm!11615 (not c!19358)) b!109437))

(assert (= (and d!30733 res!54176) b!109430))

(assert (= (and b!109430 res!54177) b!109432))

(declare-fun m!123837 () Bool)

(assert (=> b!109432 m!123837))

(declare-fun m!123839 () Bool)

(assert (=> bm!11615 m!123839))

(declare-fun m!123841 () Bool)

(assert (=> b!109430 m!123841))

(declare-fun m!123843 () Bool)

(assert (=> d!30733 m!123843))

(assert (=> d!30733 m!121069))

(declare-fun m!123845 () Bool)

(assert (=> b!109433 m!123845))

(assert (=> d!29849 d!30733))

(declare-fun d!30735 () Bool)

(declare-fun res!54178 () Bool)

(declare-fun e!71179 () Bool)

(assert (=> d!30735 (=> res!54178 e!71179)))

(assert (=> d!30735 (= res!54178 (and ((_ is Cons!1619) lt!55443) (= (_1!1207 (h!2217 lt!55443)) (_1!1207 lt!54985))))))

(assert (=> d!30735 (= (containsKey!159 lt!55443 (_1!1207 lt!54985)) e!71179)))

(declare-fun b!109439 () Bool)

(declare-fun e!71180 () Bool)

(assert (=> b!109439 (= e!71179 e!71180)))

(declare-fun res!54179 () Bool)

(assert (=> b!109439 (=> (not res!54179) (not e!71180))))

(assert (=> b!109439 (= res!54179 (and (or (not ((_ is Cons!1619) lt!55443)) (bvsle (_1!1207 (h!2217 lt!55443)) (_1!1207 lt!54985))) ((_ is Cons!1619) lt!55443) (bvslt (_1!1207 (h!2217 lt!55443)) (_1!1207 lt!54985))))))

(declare-fun b!109440 () Bool)

(assert (=> b!109440 (= e!71180 (containsKey!159 (t!5730 lt!55443) (_1!1207 lt!54985)))))

(assert (= (and d!30735 (not res!54178)) b!109439))

(assert (= (and b!109439 res!54179) b!109440))

(declare-fun m!123847 () Bool)

(assert (=> b!109440 m!123847))

(assert (=> b!107971 d!30735))

(declare-fun d!30737 () Bool)

(declare-fun res!54180 () Bool)

(declare-fun e!71181 () Bool)

(assert (=> d!30737 (=> res!54180 e!71181)))

(assert (=> d!30737 (= res!54180 (and ((_ is Cons!1619) (toList!790 lt!55175)) (= (_1!1207 (h!2217 (toList!790 lt!55175))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30737 (= (containsKey!159 (toList!790 lt!55175) #b1000000000000000000000000000000000000000000000000000000000000000) e!71181)))

(declare-fun b!109441 () Bool)

(declare-fun e!71182 () Bool)

(assert (=> b!109441 (= e!71181 e!71182)))

(declare-fun res!54181 () Bool)

(assert (=> b!109441 (=> (not res!54181) (not e!71182))))

(assert (=> b!109441 (= res!54181 (and (or (not ((_ is Cons!1619) (toList!790 lt!55175))) (bvsle (_1!1207 (h!2217 (toList!790 lt!55175))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1619) (toList!790 lt!55175)) (bvslt (_1!1207 (h!2217 (toList!790 lt!55175))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109442 () Bool)

(assert (=> b!109442 (= e!71182 (containsKey!159 (t!5730 (toList!790 lt!55175)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30737 (not res!54180)) b!109441))

(assert (= (and b!109441 res!54181) b!109442))

(declare-fun m!123849 () Bool)

(assert (=> b!109442 m!123849))

(assert (=> d!29883 d!30737))

(declare-fun b!109443 () Bool)

(declare-fun res!54185 () Bool)

(declare-fun e!71183 () Bool)

(assert (=> b!109443 (=> (not res!54185) (not e!71183))))

(assert (=> b!109443 (= res!54185 (and (= (size!2320 (_values!2588 (_2!1206 lt!55257))) (bvadd (mask!6762 (_2!1206 lt!55257)) #b00000000000000000000000000000001)) (= (size!2319 (_keys!4314 (_2!1206 lt!55257))) (size!2320 (_values!2588 (_2!1206 lt!55257)))) (bvsge (_size!504 (_2!1206 lt!55257)) #b00000000000000000000000000000000) (bvsle (_size!504 (_2!1206 lt!55257)) (bvadd (mask!6762 (_2!1206 lt!55257)) #b00000000000000000000000000000001))))))

(declare-fun d!30739 () Bool)

(declare-fun res!54182 () Bool)

(assert (=> d!30739 (=> (not res!54182) (not e!71183))))

(assert (=> d!30739 (= res!54182 (validMask!0 (mask!6762 (_2!1206 lt!55257))))))

(assert (=> d!30739 (= (simpleValid!75 (_2!1206 lt!55257)) e!71183)))

(declare-fun b!109445 () Bool)

(declare-fun res!54184 () Bool)

(assert (=> b!109445 (=> (not res!54184) (not e!71183))))

(assert (=> b!109445 (= res!54184 (= (size!2325 (_2!1206 lt!55257)) (bvadd (_size!504 (_2!1206 lt!55257)) (bvsdiv (bvadd (extraKeys!2406 (_2!1206 lt!55257)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!109444 () Bool)

(declare-fun res!54183 () Bool)

(assert (=> b!109444 (=> (not res!54183) (not e!71183))))

(assert (=> b!109444 (= res!54183 (bvsge (size!2325 (_2!1206 lt!55257)) (_size!504 (_2!1206 lt!55257))))))

(declare-fun b!109446 () Bool)

(assert (=> b!109446 (= e!71183 (and (bvsge (extraKeys!2406 (_2!1206 lt!55257)) #b00000000000000000000000000000000) (bvsle (extraKeys!2406 (_2!1206 lt!55257)) #b00000000000000000000000000000011) (bvsge (_vacant!504 (_2!1206 lt!55257)) #b00000000000000000000000000000000)))))

(assert (= (and d!30739 res!54182) b!109443))

(assert (= (and b!109443 res!54185) b!109444))

(assert (= (and b!109444 res!54183) b!109445))

(assert (= (and b!109445 res!54184) b!109446))

(assert (=> d!30739 m!123733))

(declare-fun m!123851 () Bool)

(assert (=> b!109445 m!123851))

(assert (=> b!109444 m!123851))

(assert (=> d!29807 d!30739))

(assert (=> b!107996 d!29935))

(declare-fun call!11620 () Bool)

(declare-fun bm!11617 () Bool)

(declare-fun c!19360 () Bool)

(assert (=> bm!11617 (= call!11620 (arrayNoDuplicates!0 (_keys!4314 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19360 (Cons!1618 (select (arr!2062 (_keys!4314 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!18996 (Cons!1618 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) Nil!1619) Nil!1619)) (ite c!18996 (Cons!1618 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) Nil!1619) Nil!1619))))))

(declare-fun b!109447 () Bool)

(declare-fun e!71187 () Bool)

(assert (=> b!109447 (= e!71187 (contains!825 (ite c!18996 (Cons!1618 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) Nil!1619) Nil!1619) (select (arr!2062 (_keys!4314 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!30741 () Bool)

(declare-fun res!54188 () Bool)

(declare-fun e!71184 () Bool)

(assert (=> d!30741 (=> res!54188 e!71184)))

(assert (=> d!30741 (= res!54188 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2319 (_keys!4314 newMap!16))))))

(assert (=> d!30741 (= (arrayNoDuplicates!0 (_keys!4314 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18996 (Cons!1618 (select (arr!2062 (_keys!4314 newMap!16)) #b00000000000000000000000000000000) Nil!1619) Nil!1619)) e!71184)))

(declare-fun b!109448 () Bool)

(declare-fun e!71186 () Bool)

(assert (=> b!109448 (= e!71186 call!11620)))

(declare-fun b!109449 () Bool)

(declare-fun e!71185 () Bool)

(assert (=> b!109449 (= e!71184 e!71185)))

(declare-fun res!54187 () Bool)

(assert (=> b!109449 (=> (not res!54187) (not e!71185))))

(assert (=> b!109449 (= res!54187 (not e!71187))))

(declare-fun res!54186 () Bool)

(assert (=> b!109449 (=> (not res!54186) (not e!71187))))

(assert (=> b!109449 (= res!54186 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!109450 () Bool)

(assert (=> b!109450 (= e!71185 e!71186)))

(assert (=> b!109450 (= c!19360 (validKeyInArray!0 (select (arr!2062 (_keys!4314 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!109451 () Bool)

(assert (=> b!109451 (= e!71186 call!11620)))

(assert (= (and d!30741 (not res!54188)) b!109449))

(assert (= (and b!109449 res!54186) b!109447))

(assert (= (and b!109449 res!54187) b!109450))

(assert (= (and b!109450 c!19360) b!109448))

(assert (= (and b!109450 (not c!19360)) b!109451))

(assert (= (or b!109448 b!109451) bm!11617))

(assert (=> bm!11617 m!123153))

(declare-fun m!123853 () Bool)

(assert (=> bm!11617 m!123853))

(assert (=> b!109447 m!123153))

(assert (=> b!109447 m!123153))

(declare-fun m!123855 () Bool)

(assert (=> b!109447 m!123855))

(assert (=> b!109449 m!123153))

(assert (=> b!109449 m!123153))

(assert (=> b!109449 m!123163))

(assert (=> b!109450 m!123153))

(assert (=> b!109450 m!123153))

(assert (=> b!109450 m!123163))

(assert (=> bm!11483 d!30741))

(assert (=> b!108079 d!29935))

(declare-fun condMapEmpty!3987 () Bool)

(declare-fun mapDefault!3987 () ValueCell!1001)

(assert (=> mapNonEmpty!3985 (= condMapEmpty!3987 (= mapRest!3985 ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3987)))))

(declare-fun e!71189 () Bool)

(declare-fun mapRes!3987 () Bool)

(assert (=> mapNonEmpty!3985 (= tp!9997 (and e!71189 mapRes!3987))))

(declare-fun mapIsEmpty!3987 () Bool)

(assert (=> mapIsEmpty!3987 mapRes!3987))

(declare-fun b!109452 () Bool)

(declare-fun e!71188 () Bool)

(assert (=> b!109452 (= e!71188 tp_is_empty!2689)))

(declare-fun b!109453 () Bool)

(assert (=> b!109453 (= e!71189 tp_is_empty!2689)))

(declare-fun mapNonEmpty!3987 () Bool)

(declare-fun tp!9999 () Bool)

(assert (=> mapNonEmpty!3987 (= mapRes!3987 (and tp!9999 e!71188))))

(declare-fun mapValue!3987 () ValueCell!1001)

(declare-fun mapKey!3987 () (_ BitVec 32))

(declare-fun mapRest!3987 () (Array (_ BitVec 32) ValueCell!1001))

(assert (=> mapNonEmpty!3987 (= mapRest!3985 (store mapRest!3987 mapKey!3987 mapValue!3987))))

(assert (= (and mapNonEmpty!3985 condMapEmpty!3987) mapIsEmpty!3987))

(assert (= (and mapNonEmpty!3985 (not condMapEmpty!3987)) mapNonEmpty!3987))

(assert (= (and mapNonEmpty!3987 ((_ is ValueCellFull!1001) mapValue!3987)) b!109452))

(assert (= (and mapNonEmpty!3985 ((_ is ValueCellFull!1001) mapDefault!3987)) b!109453))

(declare-fun m!123857 () Bool)

(assert (=> mapNonEmpty!3987 m!123857))

(declare-fun condMapEmpty!3988 () Bool)

(declare-fun mapDefault!3988 () ValueCell!1001)

(assert (=> mapNonEmpty!3986 (= condMapEmpty!3988 (= mapRest!3986 ((as const (Array (_ BitVec 32) ValueCell!1001)) mapDefault!3988)))))

(declare-fun e!71191 () Bool)

(declare-fun mapRes!3988 () Bool)

(assert (=> mapNonEmpty!3986 (= tp!9998 (and e!71191 mapRes!3988))))

(declare-fun mapIsEmpty!3988 () Bool)

(assert (=> mapIsEmpty!3988 mapRes!3988))

(declare-fun b!109454 () Bool)

(declare-fun e!71190 () Bool)

(assert (=> b!109454 (= e!71190 tp_is_empty!2689)))

(declare-fun b!109455 () Bool)

(assert (=> b!109455 (= e!71191 tp_is_empty!2689)))

(declare-fun mapNonEmpty!3988 () Bool)

(declare-fun tp!10000 () Bool)

(assert (=> mapNonEmpty!3988 (= mapRes!3988 (and tp!10000 e!71190))))

(declare-fun mapRest!3988 () (Array (_ BitVec 32) ValueCell!1001))

(declare-fun mapValue!3988 () ValueCell!1001)

(declare-fun mapKey!3988 () (_ BitVec 32))

(assert (=> mapNonEmpty!3988 (= mapRest!3986 (store mapRest!3988 mapKey!3988 mapValue!3988))))

(assert (= (and mapNonEmpty!3986 condMapEmpty!3988) mapIsEmpty!3988))

(assert (= (and mapNonEmpty!3986 (not condMapEmpty!3988)) mapNonEmpty!3988))

(assert (= (and mapNonEmpty!3988 ((_ is ValueCellFull!1001) mapValue!3988)) b!109454))

(assert (= (and mapNonEmpty!3986 ((_ is ValueCellFull!1001) mapDefault!3988)) b!109455))

(declare-fun m!123859 () Bool)

(assert (=> mapNonEmpty!3988 m!123859))

(declare-fun b_lambda!4871 () Bool)

(assert (= b_lambda!4839 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4871)))

(declare-fun b_lambda!4873 () Bool)

(assert (= b_lambda!4855 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4873)))

(declare-fun b_lambda!4875 () Bool)

(assert (= b_lambda!4863 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4875)))

(declare-fun b_lambda!4877 () Bool)

(assert (= b_lambda!4849 (or (and b!107369 b_free!2545) (and b!107358 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))))) b_lambda!4877)))

(declare-fun b_lambda!4879 () Bool)

(assert (= b_lambda!4865 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4879)))

(declare-fun b_lambda!4881 () Bool)

(assert (= b_lambda!4845 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4881)))

(declare-fun b_lambda!4883 () Bool)

(assert (= b_lambda!4859 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4883)))

(declare-fun b_lambda!4885 () Bool)

(assert (= b_lambda!4851 (or (and b!107369 b_free!2545) (and b!107358 b_free!2547 (= (defaultEntry!2605 newMap!16) (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))))) b_lambda!4885)))

(declare-fun b_lambda!4887 () Bool)

(assert (= b_lambda!4841 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4887)))

(declare-fun b_lambda!4889 () Bool)

(assert (= b_lambda!4843 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4889)))

(declare-fun b_lambda!4891 () Bool)

(assert (= b_lambda!4853 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4891)))

(declare-fun b_lambda!4893 () Bool)

(assert (= b_lambda!4861 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4893)))

(declare-fun b_lambda!4895 () Bool)

(assert (= b_lambda!4847 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4895)))

(declare-fun b_lambda!4897 () Bool)

(assert (= b_lambda!4867 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4897)))

(declare-fun b_lambda!4899 () Bool)

(assert (= b_lambda!4857 (or (and b!107369 b_free!2545 (= (defaultEntry!2605 (v!2904 (underlying!360 thiss!992))) (defaultEntry!2605 newMap!16))) (and b!107358 b_free!2547) b_lambda!4899)))

(check-sat (not d!30255) (not b!108597) (not b!109252) (not b!109413) (not b_lambda!4883) (not b!108344) (not b!108670) (not b!109116) (not b!109246) (not b!109020) (not d!30633) (not d!29957) (not b!108582) (not d!30651) (not d!30527) (not b!109155) (not d!30629) (not b!108753) (not b!109358) (not bm!11592) (not d!30227) (not b!108371) (not b!108890) (not b!108447) (not b!108904) (not b!109110) (not d!30603) (not b!108299) (not d!30571) (not b!108782) (not d!30447) (not d!30531) (not b!108770) (not d!30127) (not b_lambda!4835) (not b!109102) (not d!30059) (not b!109228) (not d!30295) (not b!108752) (not b!108964) (not d!30245) (not b!109270) (not b!109112) (not bm!11529) (not b_lambda!4897) (not b!108714) (not d!30567) (not b!109007) (not d!30353) (not d!30405) (not d!29939) (not b!109095) (not bm!11524) (not d!30141) (not b!108996) (not b!108764) (not b!108793) (not b!109014) (not b!109397) (not b!108445) (not b!108884) (not b!109440) (not b_lambda!4885) (not b!108667) (not b!109168) (not bm!11537) (not b!108762) (not d!30367) (not b!109384) (not b!108601) (not b!108385) (not b!108688) (not b!108775) (not d!30491) (not b_lambda!4895) (not b!109234) (not d!30119) (not b!108456) (not b!108353) (not b!109136) (not b!108450) (not d!30081) (not b!108449) (not b!109444) (not b!108437) (not b!108915) (not b!108361) (not d!30375) (not b!108991) (not b!109037) (not d!30289) (not b!108500) (not d!30085) (not b!109399) (not d!30391) (not b!109160) (not d!30731) (not b!108526) (not bm!11608) (not b!108769) (not d!30161) (not b!108310) (not b!108847) (not b!109245) (not bm!11586) (not b!108973) (not d!30679) (not b!109355) (not b!108908) (not b!108816) (not d!30301) (not b!108955) (not d!30031) (not bm!11521) (not d!29955) (not d!30545) (not b!108521) (not b!108959) (not bm!11579) (not b!108693) (not b!109393) (not d!30021) (not b!108757) (not b!108516) (not b!108983) (not d!30605) (not b!108758) (not d!30707) (not d!30263) (not b!109220) (not bm!11590) (not b!108905) (not b!108493) (not d!30451) (not b!109128) (not d!30699) (not d!30187) (not b!109405) (not b!108910) (not bm!11571) (not d!30421) (not b!108482) (not b!108781) (not d!30407) (not d!30147) (not b!108695) (not b!109412) (not b!108399) (not d!30667) (not d!30159) (not b!108335) (not d!30693) (not bm!11594) (not b!108882) (not b!108892) (not b!108320) (not b!108794) (not d!30167) (not b!108598) (not b!108654) (not d!30621) (not d!30595) (not d!30281) (not d!30431) (not b!109254) (not d!30071) (not b!109169) (not b!108761) (not d!30555) (not b!108461) (not d!29961) (not b!108593) (not d!30275) (not d!30107) (not b!108846) (not b!108923) (not bm!11518) (not b!108599) (not b!109109) (not b!108728) (not b!108376) (not b!108409) (not b!108602) (not b!109390) (not d!30269) (not d!30703) (not b!108733) (not bm!11539) (not b!108570) (not b!108760) (not d!30005) (not b!108459) (not d!30675) (not d!29991) (not d!30647) (not b!109350) (not b!109450) (not b!108821) (not b!109395) (not d!30411) (not d!30089) (not d!30619) (not b!108725) (not b!108834) (not d!30437) (not d!30389) (not d!30293) (not b!108487) (not b!109266) (not b!108613) (not b!108963) (not d!30103) (not b!108713) (not d!30655) (not b!108814) (not b!108906) (not b!109133) (not b!108479) b_and!6729 (not d!30025) (not bm!11545) (not b!109313) (not d!30713) (not b!109148) (not d!30697) (not b!108422) (not b!109378) (not b!108646) (not b!109091) (not bm!11597) (not b!108495) (not b_lambda!4809) (not b!109331) (not b!108432) (not b!108580) (not b!109125) (not bm!11566) (not b!108321) (not d!30453) (not d!30221) (not bm!11569) (not b!108934) (not d!30377) (not b!109314) (not d!30617) (not bm!11600) (not b!108738) (not b!108685) (not d!30343) (not b!108490) (not b!108737) (not b!109288) (not bm!11578) (not b!108517) (not d!30593) (not b!108441) (not b!108644) (not d!30259) (not d!30441) (not b!108508) (not b!109127) (not b!108749) (not b!108674) (not b!109226) (not b!109181) (not b!109235) (not bm!11573) (not b!108574) (not d!30137) (not b_lambda!4869) (not b!108392) (not d!30465) (not d!30011) (not b!108740) (not b!108334) (not b!108881) (not b!108790) (not d!30139) (not b_lambda!4873) (not b!109053) (not b!109400) (not bm!11553) (not b!108464) (not d!30029) (not b_lambda!4833) (not d!30449) (not b!109194) (not b!109061) (not d!30311) (not b!108935) (not b!108942) (not b!108930) (not d!30271) (not b!109230) (not bm!11610) (not b!108954) (not b!109196) (not d!30007) (not b!108311) (not d!30297) (not b!109317) (not bm!11576) (not d!30037) (not b!109166) (not b!109242) (not b!109207) (not d!30049) (not b!108900) (not d!29959) (not b!108855) (not b!108322) (not b!108387) (not b!109140) (not b!108315) (not b!109442) (not b!109432) (not d!30425) (not b!108678) (not b!108288) (not b!108830) (not b!108673) (not b!108683) (not b!108932) (not b!108885) (not b!108659) (not d!30251) (not bm!11583) (not b!109419) (not d!29995) (not d!30265) (not b!108943) (not d!30435) (not b!109086) (not d!30319) (not d!29989) (not b!109004) (not d!30145) (not b!108899) (not d!30215) (not d!30445) (not b!109276) (not b!108774) (not d!30129) (not d!30587) (not b!109356) (not d!30717) (not d!29985) (not b!108528) (not b!109065) (not b!108472) (not b!108802) (not d!30623) (not b!109199) (not b!108772) (not bm!11498) (not b!108800) (not d!30727) (not b!108968) (not d!30207) (not b!108347) (not b!109380) (not d!30291) (not b_lambda!4829) (not b!108604) (not d!30611) (not b!109019) (not b!108584) (not d!30575) (not b_lambda!4887) (not b!108520) (not bm!11612) (not d!30459) (not b!108992) (not b!108374) (not bm!11542) (not d!30055) (not d!30041) (not d!30373) (not d!30237) (not b!108365) (not b!109368) (not b!108690) (not b!109268) (not b!109100) (not d!30201) (not b!109320) (not d!30069) (not d!30175) (not b!108691) (not b!109290) (not b_next!2547) (not b!108453) (not b!109198) (not b!108989) (not d!30189) (not b!108610) (not b!108859) (not d!30711) (not b!108591) (not bm!11603) (not d!30371) (not bm!11562) (not b!109342) (not d!30573) (not b!108411) (not b!109047) (not b!109410) (not b!108994) (not b!109260) (not d!30247) (not d!30079) (not b!108611) (not b!108476) (not b!109373) (not d!30507) (not b!109026) (not b!108285) (not b!108704) (not d!30397) (not b!109106) (not bm!11582) (not d!30253) (not b!109173) (not b!108638) (not d!30455) (not b!108721) (not b!109425) (not d!30673) (not b!108655) (not b!108558) (not b!108969) (not d!30153) (not b!108568) (not d!30205) (not b!109174) (not b!109092) (not b!108784) (not d!30481) (not d!30627) (not b!108940) (not b!109240) (not b!109330) (not b!109111) (not d!30047) (not b!108888) (not d!29997) (not b!108970) (not b!108920) (not d!30429) (not b!109374) (not b!108416) (not b!109334) (not b!109286) (not b!109191) (not b!108330) (not b!108945) (not b!109039) (not d!30315) (not b!108682) (not b!109407) (not d!30077) (not b!108443) (not d!30003) (not d!29937) (not b!108803) (not d!30681) (not b!108287) (not d!30273) (not b!109119) (not b!108439) (not b!108880) (not b!108918) (not b!108862) (not d!30471) (not b!108951) (not bm!11601) (not b!108798) (not b!109171) (not b!108729) (not d!30241) (not b!108811) (not b!108413) (not b!108475) (not d!30547) (not bm!11604) (not b!109236) (not b!109428) (not b!108852) (not b!109293) (not d!30427) (not b!109360) (not b_lambda!4813) (not b!109214) (not d!30287) (not b!108434) (not b_lambda!4831) (not b_lambda!4875) (not b!109365) (not b!108608) (not d!30419) (not b!108854) (not b!108986) (not bm!11508) (not b!109449) (not bm!11535) (not b!108822) (not b!108791) (not b!108879) (not b!109294) (not b!108946) (not d!30387) (not b!108997) (not d!30457) (not d!30645) (not b!108711) (not b!109121) (not b!108938) (not b!108389) (not b!109147) (not b!108796) (not b!108372) (not d!30307) (not b_lambda!4881) (not d!30721) (not b!108870) (not d!30225) (not b!108562) (not b!109017) (not d!30439) (not b!109098) (not b!108981) tp_is_empty!2689 (not b!109163) (not b!109012) (not b!109006) (not bm!11595) (not b!108522) (not b!109188) (not d!30143) (not d!30401) (not b!108408) (not d!30433) (not b!109034) (not b!109210) (not b_lambda!4893) (not d!30723) (not b!108355) (not b!109420) (not b!108716) (not b!109015) (not b!108640) (not b!108787) (not d!30461) (not b!109088) (not d!30541) (not b!108587) (not bm!11499) (not b!108677) (not b!108566) (not b!109310) (not b!108783) (not b!108724) (not d!30559) (not d!30057) (not b!109224) (not b_lambda!4871) (not b!109205) (not b!108306) (not b!109031) (not b!109114) (not b!109250) (not bm!11557) (not b!108844) (not d!30599) (not d!30671) (not b!108745) (not b!108730) (not b!108295) (not b!108887) (not b_lambda!4877) (not b!108395) (not d!30177) (not bm!11523) (not d!30231) (not b!109243) (not bm!11617) (not d!30615) (not d!30473) (not b_lambda!4801) (not d!30683) (not b!108307) (not d!30149) (not b!108976) (not bm!11560) (not b!108962) (not b_lambda!4899) (not b!108767) (not b!108984) (not d!30443) (not b!108369) (not b!108523) (not b!109301) (not d!30365) (not d!30305) (not b!108789) (not d!30327) (not b_lambda!4879) (not b!108419) (not d!30165) (not b!108483) (not b!108496) (not d!30505) (not b!108877) (not b!108894) (not b!109408) (not b!108928) (not b!108513) (not d!30643) (not b!108400) (not d!30093) (not d!29963) (not d!30333) (not b!108358) (not d!30551) (not b!109280) (not b_lambda!4889) (not b!108435) (not b!109259) (not b!108595) (not b!109332) (not b!108850) (not bm!11500) (not d!30109) (not bm!11504) (not b!108652) (not d!30013) (not d!30665) (not d!30625) (not b!108871) (not b!109193) (not d!30661) (not b!108451) (not bm!11503) (not b!108865) (not b!108606) (not d!30485) (not mapNonEmpty!3988) (not b!108680) (not d!30511) (not bm!11548) (not d!30591) (not b!109344) (not d!30331) (not b!108647) (not d!30135) (not d!30019) (not b!108957) (not d!30739) (not d!30151) (not bm!11593) (not b!108340) (not bm!11497) (not d!30489) (not d!30637) (not b!108485) (not b!108649) (not d!30613) (not b!109186) (not d!30409) (not b!109151) (not d!30209) (not b!108755) (not b!108410) (not b!108314) (not bm!11589) (not d!29981) (not b!108338) (not b!108406) (not b_lambda!4891) (not d!30303) (not d!30553) (not bm!11506) (not b_lambda!4837) (not b!108967) (not b!109138) (not b!108394) (not d!29969) (not b!108742) (not b!109336) (not bm!11615) (not d!30537) (not b!108642) (not bm!11555) (not bm!11567) (not d!30395) (not bm!11549) (not b!109445) (not b!108463) (not b!109362) (not d!30309) (not d!30687) (not b!108837) (not b!109300) (not b!108839) (not b!108498) (not b!108961) (not b!109379) (not b!108356) (not b!108864) (not b!109296) (not d!30285) (not d!30641) (not d!30157) (not b!109184) (not d!30183) (not b!109043) (not b!109433) (not b!109042) (not b!108377) (not d!30087) (not b!109249) (not b!108501) (not bm!11564) (not d!30325) (not b_next!2545) (not b!109219) (not d!29951) (not b!108948) (not d!30075) (not bm!11532) (not b!108308) (not b_lambda!4811) (not d!30501) (not b!108583) (not d!30193) (not b!109123) (not b!109382) (not d!30635) (not b!109052) (not d!30533) (not b!109430) (not b!108735) (not mapNonEmpty!3987) (not b!109422) (not d!30361) (not b!109212) (not b!109311) (not b!108291) (not bm!11607) (not b!108921) (not b!108397) (not d!30279) (not b!108346) (not d!30347) (not d!30631) (not bm!11585) (not b!108836) (not d!30001) (not b!108660) (not b!108448) (not b!108488) (not b!109325) (not b!108809) (not bm!11516) (not d!30639) (not bm!11530) (not b!108708) (not b!108603) (not d!30417) (not b!109082) (not b!108817) (not b!109028) (not b!108514) (not b!108861) (not b!109248) (not bm!11596) (not b!109427) (not d!30379) (not b_lambda!4827) (not d!30515) (not b!108550) (not b!108914) (not b!109237) (not b!108868) (not b!108639) (not d!30043) (not d!30521) (not b!108819) (not d!30479) (not b!109097) (not b!108719) (not d!30039) (not b!108795) (not b!108965) (not b!109326) (not d!30339) (not d!30509) (not b!108329) (not d!30065) (not d!30663) (not bm!11511) (not b!108316) (not b!109050) (not b!108336) (not b!109402) (not b!109135) (not b!108572) (not b!108869) (not d!30033) (not b!108511) (not b!109063) (not d!30133) (not b!108875) (not b!108317) (not b!108722) (not d!30155) (not b!108458) (not d!30715) (not b!108841) (not b!109316) (not b!109264) (not bm!11547) (not b!108349) (not b!108290) (not d!30369) (not bm!11552) (not bm!11514) (not d!30345) (not b!109130) (not d!30725) (not d!30381) (not b!108676) (not b!109096) (not b!109141) (not b!109030) (not b!109447) (not b!109225) (not d!30493) (not b!108324) (not b!109089) (not b!109244) (not d!30483) (not b!108696) (not b!109389) (not d!30385) (not b!109040) (not b!108874) (not b!109353) (not b!108350) (not b!108979) (not b!108430) (not b!109265) (not d!30499) (not b!109009) (not d!30299) (not b!109161) (not d!30111) (not d!30733) (not d!29965) (not b!108731) b_and!6731 (not b!108421) (not d!30283) (not b!109158) (not b!108657))
(check-sat b_and!6729 b_and!6731 (not b_next!2545) (not b_next!2547))
