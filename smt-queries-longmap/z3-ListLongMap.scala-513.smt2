; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12520 () Bool)

(assert start!12520)

(declare-fun b!107580 () Bool)

(declare-fun b_free!2549 () Bool)

(declare-fun b_next!2549 () Bool)

(assert (=> b!107580 (= b_free!2549 (not b_next!2549))))

(declare-fun tp!9978 () Bool)

(declare-fun b_and!6643 () Bool)

(assert (=> b!107580 (= tp!9978 b_and!6643)))

(declare-fun b!107593 () Bool)

(declare-fun b_free!2551 () Bool)

(declare-fun b_next!2551 () Bool)

(assert (=> b!107593 (= b_free!2551 (not b_next!2551))))

(declare-fun tp!9980 () Bool)

(declare-fun b_and!6645 () Bool)

(assert (=> b!107593 (= tp!9980 b_and!6645)))

(declare-fun b!107577 () Bool)

(declare-fun res!53404 () Bool)

(declare-fun e!70055 () Bool)

(assert (=> b!107577 (=> (not res!53404) (not e!70055))))

(declare-datatypes ((V!3235 0))(
  ( (V!3236 (val!1390 Int)) )
))
(declare-datatypes ((array!4375 0))(
  ( (array!4376 (arr!2075 (Array (_ BitVec 32) (_ BitVec 64))) (size!2331 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1002 0))(
  ( (ValueCellFull!1002 (v!2913 V!3235)) (EmptyCell!1002) )
))
(declare-datatypes ((array!4377 0))(
  ( (array!4378 (arr!2076 (Array (_ BitVec 32) ValueCell!1002)) (size!2332 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!912 0))(
  ( (LongMapFixedSize!913 (defaultEntry!2606 Int) (mask!6764 (_ BitVec 32)) (extraKeys!2407 (_ BitVec 32)) (zeroValue!2479 V!3235) (minValue!2479 V!3235) (_size!505 (_ BitVec 32)) (_keys!4316 array!4375) (_values!2589 array!4377) (_vacant!505 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!912)

(declare-fun valid!426 (LongMapFixedSize!912) Bool)

(assert (=> b!107577 (= res!53404 (valid!426 newMap!16))))

(declare-fun b!107578 () Bool)

(declare-fun e!70052 () Bool)

(declare-fun e!70048 () Bool)

(assert (=> b!107578 (= e!70052 e!70048)))

(declare-fun res!53405 () Bool)

(assert (=> start!12520 (=> (not res!53405) (not e!70055))))

(declare-datatypes ((Cell!712 0))(
  ( (Cell!713 (v!2914 LongMapFixedSize!912)) )
))
(declare-datatypes ((LongMap!712 0))(
  ( (LongMap!713 (underlying!367 Cell!712)) )
))
(declare-fun thiss!992 () LongMap!712)

(declare-fun valid!427 (LongMap!712) Bool)

(assert (=> start!12520 (= res!53405 (valid!427 thiss!992))))

(assert (=> start!12520 e!70055))

(declare-fun e!70042 () Bool)

(assert (=> start!12520 e!70042))

(assert (=> start!12520 true))

(declare-fun e!70057 () Bool)

(assert (=> start!12520 e!70057))

(declare-fun b!107579 () Bool)

(declare-fun e!70047 () Bool)

(assert (=> b!107579 (= e!70055 e!70047)))

(declare-fun res!53407 () Bool)

(assert (=> b!107579 (=> (not res!53407) (not e!70047))))

(declare-datatypes ((tuple2!2428 0))(
  ( (tuple2!2429 (_1!1225 (_ BitVec 64)) (_2!1225 V!3235)) )
))
(declare-datatypes ((List!1625 0))(
  ( (Nil!1622) (Cons!1621 (h!2219 tuple2!2428) (t!5741 List!1625)) )
))
(declare-datatypes ((ListLongMap!1585 0))(
  ( (ListLongMap!1586 (toList!808 List!1625)) )
))
(declare-fun lt!55189 () ListLongMap!1585)

(declare-fun lt!55190 () ListLongMap!1585)

(assert (=> b!107579 (= res!53407 (= lt!55189 lt!55190))))

(declare-fun map!1294 (LongMapFixedSize!912) ListLongMap!1585)

(assert (=> b!107579 (= lt!55190 (map!1294 newMap!16))))

(declare-fun from!355 () (_ BitVec 32))

(declare-fun getCurrentListMap!493 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) Int) ListLongMap!1585)

(assert (=> b!107579 (= lt!55189 (getCurrentListMap!493 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun mapNonEmpty!3973 () Bool)

(declare-fun mapRes!3973 () Bool)

(declare-fun tp!9979 () Bool)

(declare-fun e!70049 () Bool)

(assert (=> mapNonEmpty!3973 (= mapRes!3973 (and tp!9979 e!70049))))

(declare-fun mapRest!3974 () (Array (_ BitVec 32) ValueCell!1002))

(declare-fun mapKey!3974 () (_ BitVec 32))

(declare-fun mapValue!3974 () ValueCell!1002)

(assert (=> mapNonEmpty!3973 (= (arr!2076 (_values!2589 newMap!16)) (store mapRest!3974 mapKey!3974 mapValue!3974))))

(declare-fun e!70053 () Bool)

(declare-fun tp_is_empty!2691 () Bool)

(declare-fun array_inv!1307 (array!4375) Bool)

(declare-fun array_inv!1308 (array!4377) Bool)

(assert (=> b!107580 (= e!70048 (and tp!9978 tp_is_empty!2691 (array_inv!1307 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (array_inv!1308 (_values!2589 (v!2914 (underlying!367 thiss!992)))) e!70053))))

(declare-fun b!107581 () Bool)

(declare-datatypes ((Unit!3321 0))(
  ( (Unit!3322) )
))
(declare-fun e!70043 () Unit!3321)

(declare-fun Unit!3323 () Unit!3321)

(assert (=> b!107581 (= e!70043 Unit!3323)))

(declare-fun lt!55186 () Unit!3321)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!109 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) (_ BitVec 32) Int) Unit!3321)

(assert (=> b!107581 (= lt!55186 (lemmaListMapContainsThenArrayContainsFrom!109 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4375 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!107581 (arrayContainsKey!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!55180 () Unit!3321)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4375 (_ BitVec 32) (_ BitVec 32)) Unit!3321)

(assert (=> b!107581 (= lt!55180 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1626 0))(
  ( (Nil!1623) (Cons!1622 (h!2220 (_ BitVec 64)) (t!5742 List!1626)) )
))
(declare-fun arrayNoDuplicates!0 (array!4375 (_ BitVec 32) List!1626) Bool)

(assert (=> b!107581 (arrayNoDuplicates!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) from!355 Nil!1623)))

(declare-fun lt!55187 () Unit!3321)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4375 (_ BitVec 32) (_ BitVec 64) List!1626) Unit!3321)

(assert (=> b!107581 (= lt!55187 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623)))))

(assert (=> b!107581 false))

(declare-fun b!107582 () Bool)

(declare-fun e!70056 () Bool)

(assert (=> b!107582 (= e!70056 (or (not (= (size!2332 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6764 (v!2914 (underlying!367 thiss!992)))))) (not (= (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (size!2332 (_values!2589 (v!2914 (underlying!367 thiss!992)))))) (bvslt (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!107583 () Bool)

(declare-fun e!70051 () Bool)

(declare-fun e!70050 () Bool)

(assert (=> b!107583 (= e!70051 e!70050)))

(declare-fun res!53402 () Bool)

(assert (=> b!107583 (=> (not res!53402) (not e!70050))))

(declare-datatypes ((tuple2!2430 0))(
  ( (tuple2!2431 (_1!1226 Bool) (_2!1226 LongMapFixedSize!912)) )
))
(declare-fun lt!55191 () tuple2!2430)

(assert (=> b!107583 (= res!53402 (and (_1!1226 lt!55191) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!55181 () Unit!3321)

(assert (=> b!107583 (= lt!55181 e!70043)))

(declare-fun c!18849 () Bool)

(declare-fun contains!834 (ListLongMap!1585 (_ BitVec 64)) Bool)

(assert (=> b!107583 (= c!18849 (contains!834 lt!55190 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!55184 () V!3235)

(declare-fun update!160 (LongMapFixedSize!912 (_ BitVec 64) V!3235) tuple2!2430)

(assert (=> b!107583 (= lt!55191 (update!160 newMap!16 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))

(declare-fun b!107584 () Bool)

(declare-fun e!70046 () Bool)

(assert (=> b!107584 (= e!70046 tp_is_empty!2691)))

(declare-fun b!107585 () Bool)

(declare-fun res!53401 () Bool)

(assert (=> b!107585 (=> (not res!53401) (not e!70055))))

(assert (=> b!107585 (= res!53401 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6764 newMap!16)) (_size!505 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!107586 () Bool)

(declare-fun e!70044 () Bool)

(assert (=> b!107586 (= e!70044 tp_is_empty!2691)))

(declare-fun b!107587 () Bool)

(declare-fun mapRes!3974 () Bool)

(assert (=> b!107587 (= e!70053 (and e!70044 mapRes!3974))))

(declare-fun condMapEmpty!3973 () Bool)

(declare-fun mapDefault!3974 () ValueCell!1002)

(assert (=> b!107587 (= condMapEmpty!3973 (= (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3974)))))

(declare-fun b!107588 () Bool)

(declare-fun Unit!3324 () Unit!3321)

(assert (=> b!107588 (= e!70043 Unit!3324)))

(declare-fun b!107589 () Bool)

(declare-fun e!70054 () Bool)

(assert (=> b!107589 (= e!70054 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3973 () Bool)

(assert (=> mapIsEmpty!3973 mapRes!3974))

(declare-fun b!107590 () Bool)

(assert (=> b!107590 (= e!70042 e!70052)))

(declare-fun mapNonEmpty!3974 () Bool)

(declare-fun tp!9977 () Bool)

(assert (=> mapNonEmpty!3974 (= mapRes!3974 (and tp!9977 e!70046))))

(declare-fun mapRest!3973 () (Array (_ BitVec 32) ValueCell!1002))

(declare-fun mapKey!3973 () (_ BitVec 32))

(declare-fun mapValue!3973 () ValueCell!1002)

(assert (=> mapNonEmpty!3974 (= (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (store mapRest!3973 mapKey!3973 mapValue!3973))))

(declare-fun b!107591 () Bool)

(assert (=> b!107591 (= e!70047 e!70051)))

(declare-fun res!53406 () Bool)

(assert (=> b!107591 (=> (not res!53406) (not e!70051))))

(assert (=> b!107591 (= res!53406 (and (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1341 (ValueCell!1002 V!3235) V!3235)

(declare-fun dynLambda!389 (Int (_ BitVec 64)) V!3235)

(assert (=> b!107591 (= lt!55184 (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) from!355) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107592 () Bool)

(assert (=> b!107592 (= e!70049 tp_is_empty!2691)))

(declare-fun e!70041 () Bool)

(assert (=> b!107593 (= e!70057 (and tp!9980 tp_is_empty!2691 (array_inv!1307 (_keys!4316 newMap!16)) (array_inv!1308 (_values!2589 newMap!16)) e!70041))))

(declare-fun b!107594 () Bool)

(assert (=> b!107594 (= e!70050 (not e!70056))))

(declare-fun res!53403 () Bool)

(assert (=> b!107594 (=> res!53403 e!70056)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!107594 (= res!53403 (not (validMask!0 (mask!6764 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun lt!55185 () ListLongMap!1585)

(declare-fun lt!55182 () tuple2!2428)

(declare-fun lt!55183 () tuple2!2428)

(declare-fun +!148 (ListLongMap!1585 tuple2!2428) ListLongMap!1585)

(assert (=> b!107594 (= (+!148 (+!148 lt!55185 lt!55182) lt!55183) (+!148 (+!148 lt!55185 lt!55183) lt!55182))))

(assert (=> b!107594 (= lt!55183 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))

(assert (=> b!107594 (= lt!55182 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))

(declare-fun lt!55188 () Unit!3321)

(declare-fun addCommutativeForDiffKeys!60 (ListLongMap!1585 (_ BitVec 64) V!3235 (_ BitVec 64) V!3235) Unit!3321)

(assert (=> b!107594 (= lt!55188 (addCommutativeForDiffKeys!60 lt!55185 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!114 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) Int) ListLongMap!1585)

(assert (=> b!107594 (= lt!55185 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!107595 () Bool)

(assert (=> b!107595 (= e!70041 (and e!70054 mapRes!3973))))

(declare-fun condMapEmpty!3974 () Bool)

(declare-fun mapDefault!3973 () ValueCell!1002)

(assert (=> b!107595 (= condMapEmpty!3974 (= (arr!2076 (_values!2589 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3973)))))

(declare-fun b!107596 () Bool)

(declare-fun res!53408 () Bool)

(assert (=> b!107596 (=> (not res!53408) (not e!70055))))

(assert (=> b!107596 (= res!53408 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun mapIsEmpty!3974 () Bool)

(assert (=> mapIsEmpty!3974 mapRes!3973))

(assert (= (and start!12520 res!53405) b!107596))

(assert (= (and b!107596 res!53408) b!107577))

(assert (= (and b!107577 res!53404) b!107585))

(assert (= (and b!107585 res!53401) b!107579))

(assert (= (and b!107579 res!53407) b!107591))

(assert (= (and b!107591 res!53406) b!107583))

(assert (= (and b!107583 c!18849) b!107581))

(assert (= (and b!107583 (not c!18849)) b!107588))

(assert (= (and b!107583 res!53402) b!107594))

(assert (= (and b!107594 (not res!53403)) b!107582))

(assert (= (and b!107587 condMapEmpty!3973) mapIsEmpty!3973))

(assert (= (and b!107587 (not condMapEmpty!3973)) mapNonEmpty!3974))

(get-info :version)

(assert (= (and mapNonEmpty!3974 ((_ is ValueCellFull!1002) mapValue!3973)) b!107584))

(assert (= (and b!107587 ((_ is ValueCellFull!1002) mapDefault!3974)) b!107586))

(assert (= b!107580 b!107587))

(assert (= b!107578 b!107580))

(assert (= b!107590 b!107578))

(assert (= start!12520 b!107590))

(assert (= (and b!107595 condMapEmpty!3974) mapIsEmpty!3974))

(assert (= (and b!107595 (not condMapEmpty!3974)) mapNonEmpty!3973))

(assert (= (and mapNonEmpty!3973 ((_ is ValueCellFull!1002) mapValue!3974)) b!107592))

(assert (= (and b!107595 ((_ is ValueCellFull!1002) mapDefault!3973)) b!107589))

(assert (= b!107593 b!107595))

(assert (= start!12520 b!107593))

(declare-fun b_lambda!4819 () Bool)

(assert (=> (not b_lambda!4819) (not b!107591)))

(declare-fun t!5738 () Bool)

(declare-fun tb!2081 () Bool)

(assert (=> (and b!107580 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))) t!5738) tb!2081))

(declare-fun result!3495 () Bool)

(assert (=> tb!2081 (= result!3495 tp_is_empty!2691)))

(assert (=> b!107591 t!5738))

(declare-fun b_and!6647 () Bool)

(assert (= b_and!6643 (and (=> t!5738 result!3495) b_and!6647)))

(declare-fun t!5740 () Bool)

(declare-fun tb!2083 () Bool)

(assert (=> (and b!107593 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))) t!5740) tb!2083))

(declare-fun result!3499 () Bool)

(assert (= result!3499 result!3495))

(assert (=> b!107591 t!5740))

(declare-fun b_and!6649 () Bool)

(assert (= b_and!6645 (and (=> t!5740 result!3499) b_and!6649)))

(declare-fun m!120977 () Bool)

(assert (=> mapNonEmpty!3973 m!120977))

(declare-fun m!120979 () Bool)

(assert (=> b!107583 m!120979))

(assert (=> b!107583 m!120979))

(declare-fun m!120981 () Bool)

(assert (=> b!107583 m!120981))

(assert (=> b!107583 m!120979))

(declare-fun m!120983 () Bool)

(assert (=> b!107583 m!120983))

(assert (=> b!107594 m!120979))

(declare-fun m!120985 () Bool)

(assert (=> b!107594 m!120985))

(declare-fun m!120987 () Bool)

(assert (=> b!107594 m!120987))

(assert (=> b!107594 m!120979))

(declare-fun m!120989 () Bool)

(assert (=> b!107594 m!120989))

(declare-fun m!120991 () Bool)

(assert (=> b!107594 m!120991))

(declare-fun m!120993 () Bool)

(assert (=> b!107594 m!120993))

(declare-fun m!120995 () Bool)

(assert (=> b!107594 m!120995))

(assert (=> b!107594 m!120991))

(assert (=> b!107594 m!120989))

(declare-fun m!120997 () Bool)

(assert (=> b!107594 m!120997))

(declare-fun m!120999 () Bool)

(assert (=> b!107581 m!120999))

(declare-fun m!121001 () Bool)

(assert (=> b!107581 m!121001))

(assert (=> b!107581 m!120979))

(declare-fun m!121003 () Bool)

(assert (=> b!107581 m!121003))

(assert (=> b!107581 m!120979))

(assert (=> b!107581 m!120979))

(declare-fun m!121005 () Bool)

(assert (=> b!107581 m!121005))

(assert (=> b!107581 m!120979))

(declare-fun m!121007 () Bool)

(assert (=> b!107581 m!121007))

(declare-fun m!121009 () Bool)

(assert (=> b!107593 m!121009))

(declare-fun m!121011 () Bool)

(assert (=> b!107593 m!121011))

(assert (=> b!107591 m!120979))

(declare-fun m!121013 () Bool)

(assert (=> b!107591 m!121013))

(declare-fun m!121015 () Bool)

(assert (=> b!107591 m!121015))

(assert (=> b!107591 m!121013))

(assert (=> b!107591 m!121015))

(declare-fun m!121017 () Bool)

(assert (=> b!107591 m!121017))

(declare-fun m!121019 () Bool)

(assert (=> b!107577 m!121019))

(declare-fun m!121021 () Bool)

(assert (=> mapNonEmpty!3974 m!121021))

(declare-fun m!121023 () Bool)

(assert (=> b!107580 m!121023))

(declare-fun m!121025 () Bool)

(assert (=> b!107580 m!121025))

(declare-fun m!121027 () Bool)

(assert (=> start!12520 m!121027))

(declare-fun m!121029 () Bool)

(assert (=> b!107579 m!121029))

(declare-fun m!121031 () Bool)

(assert (=> b!107579 m!121031))

(check-sat (not b!107580) b_and!6647 (not b!107583) (not b_next!2549) (not b_lambda!4819) (not b!107577) (not b!107579) (not b!107593) (not start!12520) b_and!6649 (not b!107591) (not mapNonEmpty!3973) (not b!107581) (not mapNonEmpty!3974) (not b_next!2551) (not b!107594) tp_is_empty!2691)
(check-sat b_and!6647 b_and!6649 (not b_next!2549) (not b_next!2551))
(get-model)

(declare-fun b_lambda!4823 () Bool)

(assert (= b_lambda!4819 (or (and b!107580 b_free!2549) (and b!107593 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))))) b_lambda!4823)))

(check-sat (not b!107580) b_and!6647 (not b!107583) (not b_next!2549) (not b_lambda!4823) (not b!107577) (not b!107579) (not b!107593) (not start!12520) b_and!6649 (not b!107591) (not mapNonEmpty!3973) (not b!107581) (not mapNonEmpty!3974) (not b_next!2551) (not b!107594) tp_is_empty!2691)
(check-sat b_and!6647 b_and!6649 (not b_next!2549) (not b_next!2551))
(get-model)

(declare-fun d!29801 () Bool)

(assert (=> d!29801 (= (array_inv!1307 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvsge (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!107580 d!29801))

(declare-fun d!29803 () Bool)

(assert (=> d!29803 (= (array_inv!1308 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvsge (size!2332 (_values!2589 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!107580 d!29803))

(declare-fun d!29805 () Bool)

(declare-fun e!70114 () Bool)

(assert (=> d!29805 e!70114))

(declare-fun res!53437 () Bool)

(assert (=> d!29805 (=> (not res!53437) (not e!70114))))

(declare-fun lt!55236 () ListLongMap!1585)

(assert (=> d!29805 (= res!53437 (contains!834 lt!55236 (_1!1225 lt!55183)))))

(declare-fun lt!55238 () List!1625)

(assert (=> d!29805 (= lt!55236 (ListLongMap!1586 lt!55238))))

(declare-fun lt!55237 () Unit!3321)

(declare-fun lt!55239 () Unit!3321)

(assert (=> d!29805 (= lt!55237 lt!55239)))

(declare-datatypes ((Option!163 0))(
  ( (Some!162 (v!2918 V!3235)) (None!161) )
))
(declare-fun getValueByKey!157 (List!1625 (_ BitVec 64)) Option!163)

(assert (=> d!29805 (= (getValueByKey!157 lt!55238 (_1!1225 lt!55183)) (Some!162 (_2!1225 lt!55183)))))

(declare-fun lemmaContainsTupThenGetReturnValue!73 (List!1625 (_ BitVec 64) V!3235) Unit!3321)

(assert (=> d!29805 (= lt!55239 (lemmaContainsTupThenGetReturnValue!73 lt!55238 (_1!1225 lt!55183) (_2!1225 lt!55183)))))

(declare-fun insertStrictlySorted!76 (List!1625 (_ BitVec 64) V!3235) List!1625)

(assert (=> d!29805 (= lt!55238 (insertStrictlySorted!76 (toList!808 lt!55185) (_1!1225 lt!55183) (_2!1225 lt!55183)))))

(assert (=> d!29805 (= (+!148 lt!55185 lt!55183) lt!55236)))

(declare-fun b!107665 () Bool)

(declare-fun res!53438 () Bool)

(assert (=> b!107665 (=> (not res!53438) (not e!70114))))

(assert (=> b!107665 (= res!53438 (= (getValueByKey!157 (toList!808 lt!55236) (_1!1225 lt!55183)) (Some!162 (_2!1225 lt!55183))))))

(declare-fun b!107666 () Bool)

(declare-fun contains!836 (List!1625 tuple2!2428) Bool)

(assert (=> b!107666 (= e!70114 (contains!836 (toList!808 lt!55236) lt!55183))))

(assert (= (and d!29805 res!53437) b!107665))

(assert (= (and b!107665 res!53438) b!107666))

(declare-fun m!121089 () Bool)

(assert (=> d!29805 m!121089))

(declare-fun m!121091 () Bool)

(assert (=> d!29805 m!121091))

(declare-fun m!121093 () Bool)

(assert (=> d!29805 m!121093))

(declare-fun m!121095 () Bool)

(assert (=> d!29805 m!121095))

(declare-fun m!121097 () Bool)

(assert (=> b!107665 m!121097))

(declare-fun m!121099 () Bool)

(assert (=> b!107666 m!121099))

(assert (=> b!107594 d!29805))

(declare-fun d!29807 () Bool)

(declare-fun e!70115 () Bool)

(assert (=> d!29807 e!70115))

(declare-fun res!53439 () Bool)

(assert (=> d!29807 (=> (not res!53439) (not e!70115))))

(declare-fun lt!55240 () ListLongMap!1585)

(assert (=> d!29807 (= res!53439 (contains!834 lt!55240 (_1!1225 lt!55183)))))

(declare-fun lt!55242 () List!1625)

(assert (=> d!29807 (= lt!55240 (ListLongMap!1586 lt!55242))))

(declare-fun lt!55241 () Unit!3321)

(declare-fun lt!55243 () Unit!3321)

(assert (=> d!29807 (= lt!55241 lt!55243)))

(assert (=> d!29807 (= (getValueByKey!157 lt!55242 (_1!1225 lt!55183)) (Some!162 (_2!1225 lt!55183)))))

(assert (=> d!29807 (= lt!55243 (lemmaContainsTupThenGetReturnValue!73 lt!55242 (_1!1225 lt!55183) (_2!1225 lt!55183)))))

(assert (=> d!29807 (= lt!55242 (insertStrictlySorted!76 (toList!808 (+!148 lt!55185 lt!55182)) (_1!1225 lt!55183) (_2!1225 lt!55183)))))

(assert (=> d!29807 (= (+!148 (+!148 lt!55185 lt!55182) lt!55183) lt!55240)))

(declare-fun b!107667 () Bool)

(declare-fun res!53440 () Bool)

(assert (=> b!107667 (=> (not res!53440) (not e!70115))))

(assert (=> b!107667 (= res!53440 (= (getValueByKey!157 (toList!808 lt!55240) (_1!1225 lt!55183)) (Some!162 (_2!1225 lt!55183))))))

(declare-fun b!107668 () Bool)

(assert (=> b!107668 (= e!70115 (contains!836 (toList!808 lt!55240) lt!55183))))

(assert (= (and d!29807 res!53439) b!107667))

(assert (= (and b!107667 res!53440) b!107668))

(declare-fun m!121101 () Bool)

(assert (=> d!29807 m!121101))

(declare-fun m!121103 () Bool)

(assert (=> d!29807 m!121103))

(declare-fun m!121105 () Bool)

(assert (=> d!29807 m!121105))

(declare-fun m!121107 () Bool)

(assert (=> d!29807 m!121107))

(declare-fun m!121109 () Bool)

(assert (=> b!107667 m!121109))

(declare-fun m!121111 () Bool)

(assert (=> b!107668 m!121111))

(assert (=> b!107594 d!29807))

(declare-fun b!107693 () Bool)

(declare-fun e!70135 () ListLongMap!1585)

(declare-fun e!70131 () ListLongMap!1585)

(assert (=> b!107693 (= e!70135 e!70131)))

(declare-fun c!18863 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!107693 (= c!18863 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!107694 () Bool)

(assert (=> b!107694 (= e!70135 (ListLongMap!1586 Nil!1622))))

(declare-fun bm!11351 () Bool)

(declare-fun call!11354 () ListLongMap!1585)

(assert (=> bm!11351 (= call!11354 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun e!70134 () Bool)

(declare-fun lt!55258 () ListLongMap!1585)

(declare-fun b!107695 () Bool)

(assert (=> b!107695 (= e!70134 (= lt!55258 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun d!29809 () Bool)

(declare-fun e!70132 () Bool)

(assert (=> d!29809 e!70132))

(declare-fun res!53449 () Bool)

(assert (=> d!29809 (=> (not res!53449) (not e!70132))))

(assert (=> d!29809 (= res!53449 (not (contains!834 lt!55258 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29809 (= lt!55258 e!70135)))

(declare-fun c!18861 () Bool)

(assert (=> d!29809 (= c!18861 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!29809 (validMask!0 (mask!6764 (v!2914 (underlying!367 thiss!992))))))

(assert (=> d!29809 (= (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))) lt!55258)))

(declare-fun b!107696 () Bool)

(declare-fun e!70133 () Bool)

(declare-fun e!70130 () Bool)

(assert (=> b!107696 (= e!70133 e!70130)))

(assert (=> b!107696 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun res!53451 () Bool)

(assert (=> b!107696 (= res!53451 (contains!834 lt!55258 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107696 (=> (not res!53451) (not e!70130))))

(declare-fun b!107697 () Bool)

(assert (=> b!107697 (= e!70132 e!70133)))

(declare-fun c!18864 () Bool)

(declare-fun e!70136 () Bool)

(assert (=> b!107697 (= c!18864 e!70136)))

(declare-fun res!53450 () Bool)

(assert (=> b!107697 (=> (not res!53450) (not e!70136))))

(assert (=> b!107697 (= res!53450 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!107698 () Bool)

(assert (=> b!107698 (= e!70136 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107698 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!107699 () Bool)

(assert (=> b!107699 (= e!70133 e!70134)))

(declare-fun c!18862 () Bool)

(assert (=> b!107699 (= c!18862 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!107700 () Bool)

(declare-fun isEmpty!373 (ListLongMap!1585) Bool)

(assert (=> b!107700 (= e!70134 (isEmpty!373 lt!55258))))

(declare-fun b!107701 () Bool)

(assert (=> b!107701 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> b!107701 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2332 (_values!2589 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun apply!99 (ListLongMap!1585 (_ BitVec 64)) V!3235)

(assert (=> b!107701 (= e!70130 (= (apply!99 lt!55258 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!107702 () Bool)

(assert (=> b!107702 (= e!70131 call!11354)))

(declare-fun b!107703 () Bool)

(declare-fun res!53452 () Bool)

(assert (=> b!107703 (=> (not res!53452) (not e!70132))))

(assert (=> b!107703 (= res!53452 (not (contains!834 lt!55258 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107704 () Bool)

(declare-fun lt!55260 () Unit!3321)

(declare-fun lt!55259 () Unit!3321)

(assert (=> b!107704 (= lt!55260 lt!55259)))

(declare-fun lt!55263 () (_ BitVec 64))

(declare-fun lt!55261 () ListLongMap!1585)

(declare-fun lt!55264 () (_ BitVec 64))

(declare-fun lt!55262 () V!3235)

(assert (=> b!107704 (not (contains!834 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)) lt!55264))))

(declare-fun addStillNotContains!47 (ListLongMap!1585 (_ BitVec 64) V!3235 (_ BitVec 64)) Unit!3321)

(assert (=> b!107704 (= lt!55259 (addStillNotContains!47 lt!55261 lt!55263 lt!55262 lt!55264))))

(assert (=> b!107704 (= lt!55264 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!107704 (= lt!55262 (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!107704 (= lt!55263 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!107704 (= lt!55261 call!11354)))

(assert (=> b!107704 (= e!70131 (+!148 call!11354 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29809 c!18861) b!107694))

(assert (= (and d!29809 (not c!18861)) b!107693))

(assert (= (and b!107693 c!18863) b!107704))

(assert (= (and b!107693 (not c!18863)) b!107702))

(assert (= (or b!107704 b!107702) bm!11351))

(assert (= (and d!29809 res!53449) b!107703))

(assert (= (and b!107703 res!53452) b!107697))

(assert (= (and b!107697 res!53450) b!107698))

(assert (= (and b!107697 c!18864) b!107696))

(assert (= (and b!107697 (not c!18864)) b!107699))

(assert (= (and b!107696 res!53451) b!107701))

(assert (= (and b!107699 c!18862) b!107695))

(assert (= (and b!107699 (not c!18862)) b!107700))

(declare-fun b_lambda!4825 () Bool)

(assert (=> (not b_lambda!4825) (not b!107701)))

(assert (=> b!107701 t!5738))

(declare-fun b_and!6659 () Bool)

(assert (= b_and!6647 (and (=> t!5738 result!3495) b_and!6659)))

(assert (=> b!107701 t!5740))

(declare-fun b_and!6661 () Bool)

(assert (= b_and!6649 (and (=> t!5740 result!3499) b_and!6661)))

(declare-fun b_lambda!4827 () Bool)

(assert (=> (not b_lambda!4827) (not b!107704)))

(assert (=> b!107704 t!5738))

(declare-fun b_and!6663 () Bool)

(assert (= b_and!6659 (and (=> t!5738 result!3495) b_and!6663)))

(assert (=> b!107704 t!5740))

(declare-fun b_and!6665 () Bool)

(assert (= b_and!6661 (and (=> t!5740 result!3499) b_and!6665)))

(declare-fun m!121113 () Bool)

(assert (=> b!107703 m!121113))

(declare-fun m!121115 () Bool)

(assert (=> bm!11351 m!121115))

(declare-fun m!121117 () Bool)

(assert (=> b!107698 m!121117))

(assert (=> b!107698 m!121117))

(declare-fun m!121119 () Bool)

(assert (=> b!107698 m!121119))

(declare-fun m!121121 () Bool)

(assert (=> b!107701 m!121121))

(assert (=> b!107701 m!121015))

(declare-fun m!121123 () Bool)

(assert (=> b!107701 m!121123))

(assert (=> b!107701 m!121117))

(assert (=> b!107701 m!121015))

(assert (=> b!107701 m!121121))

(assert (=> b!107701 m!121117))

(declare-fun m!121125 () Bool)

(assert (=> b!107701 m!121125))

(declare-fun m!121127 () Bool)

(assert (=> b!107700 m!121127))

(declare-fun m!121129 () Bool)

(assert (=> d!29809 m!121129))

(assert (=> d!29809 m!120987))

(assert (=> b!107695 m!121115))

(assert (=> b!107693 m!121117))

(assert (=> b!107693 m!121117))

(assert (=> b!107693 m!121119))

(assert (=> b!107704 m!121121))

(assert (=> b!107704 m!121015))

(assert (=> b!107704 m!121123))

(declare-fun m!121131 () Bool)

(assert (=> b!107704 m!121131))

(declare-fun m!121133 () Bool)

(assert (=> b!107704 m!121133))

(assert (=> b!107704 m!121117))

(assert (=> b!107704 m!121015))

(declare-fun m!121135 () Bool)

(assert (=> b!107704 m!121135))

(assert (=> b!107704 m!121121))

(assert (=> b!107704 m!121131))

(declare-fun m!121137 () Bool)

(assert (=> b!107704 m!121137))

(assert (=> b!107696 m!121117))

(assert (=> b!107696 m!121117))

(declare-fun m!121139 () Bool)

(assert (=> b!107696 m!121139))

(assert (=> b!107594 d!29809))

(declare-fun d!29811 () Bool)

(assert (=> d!29811 (= (+!148 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (+!148 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(declare-fun lt!55267 () Unit!3321)

(declare-fun choose!667 (ListLongMap!1585 (_ BitVec 64) V!3235 (_ BitVec 64) V!3235) Unit!3321)

(assert (=> d!29811 (= lt!55267 (choose!667 lt!55185 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))

(assert (=> d!29811 (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29811 (= (addCommutativeForDiffKeys!60 lt!55185 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) lt!55267)))

(declare-fun bs!4430 () Bool)

(assert (= bs!4430 d!29811))

(assert (=> bs!4430 m!120979))

(declare-fun m!121141 () Bool)

(assert (=> bs!4430 m!121141))

(declare-fun m!121143 () Bool)

(assert (=> bs!4430 m!121143))

(declare-fun m!121145 () Bool)

(assert (=> bs!4430 m!121145))

(declare-fun m!121147 () Bool)

(assert (=> bs!4430 m!121147))

(assert (=> bs!4430 m!121147))

(declare-fun m!121149 () Bool)

(assert (=> bs!4430 m!121149))

(assert (=> bs!4430 m!121143))

(assert (=> b!107594 d!29811))

(declare-fun d!29813 () Bool)

(declare-fun e!70137 () Bool)

(assert (=> d!29813 e!70137))

(declare-fun res!53453 () Bool)

(assert (=> d!29813 (=> (not res!53453) (not e!70137))))

(declare-fun lt!55268 () ListLongMap!1585)

(assert (=> d!29813 (= res!53453 (contains!834 lt!55268 (_1!1225 lt!55182)))))

(declare-fun lt!55270 () List!1625)

(assert (=> d!29813 (= lt!55268 (ListLongMap!1586 lt!55270))))

(declare-fun lt!55269 () Unit!3321)

(declare-fun lt!55271 () Unit!3321)

(assert (=> d!29813 (= lt!55269 lt!55271)))

(assert (=> d!29813 (= (getValueByKey!157 lt!55270 (_1!1225 lt!55182)) (Some!162 (_2!1225 lt!55182)))))

(assert (=> d!29813 (= lt!55271 (lemmaContainsTupThenGetReturnValue!73 lt!55270 (_1!1225 lt!55182) (_2!1225 lt!55182)))))

(assert (=> d!29813 (= lt!55270 (insertStrictlySorted!76 (toList!808 lt!55185) (_1!1225 lt!55182) (_2!1225 lt!55182)))))

(assert (=> d!29813 (= (+!148 lt!55185 lt!55182) lt!55268)))

(declare-fun b!107705 () Bool)

(declare-fun res!53454 () Bool)

(assert (=> b!107705 (=> (not res!53454) (not e!70137))))

(assert (=> b!107705 (= res!53454 (= (getValueByKey!157 (toList!808 lt!55268) (_1!1225 lt!55182)) (Some!162 (_2!1225 lt!55182))))))

(declare-fun b!107706 () Bool)

(assert (=> b!107706 (= e!70137 (contains!836 (toList!808 lt!55268) lt!55182))))

(assert (= (and d!29813 res!53453) b!107705))

(assert (= (and b!107705 res!53454) b!107706))

(declare-fun m!121151 () Bool)

(assert (=> d!29813 m!121151))

(declare-fun m!121153 () Bool)

(assert (=> d!29813 m!121153))

(declare-fun m!121155 () Bool)

(assert (=> d!29813 m!121155))

(declare-fun m!121157 () Bool)

(assert (=> d!29813 m!121157))

(declare-fun m!121159 () Bool)

(assert (=> b!107705 m!121159))

(declare-fun m!121161 () Bool)

(assert (=> b!107706 m!121161))

(assert (=> b!107594 d!29813))

(declare-fun d!29815 () Bool)

(declare-fun e!70138 () Bool)

(assert (=> d!29815 e!70138))

(declare-fun res!53455 () Bool)

(assert (=> d!29815 (=> (not res!53455) (not e!70138))))

(declare-fun lt!55272 () ListLongMap!1585)

(assert (=> d!29815 (= res!53455 (contains!834 lt!55272 (_1!1225 lt!55182)))))

(declare-fun lt!55274 () List!1625)

(assert (=> d!29815 (= lt!55272 (ListLongMap!1586 lt!55274))))

(declare-fun lt!55273 () Unit!3321)

(declare-fun lt!55275 () Unit!3321)

(assert (=> d!29815 (= lt!55273 lt!55275)))

(assert (=> d!29815 (= (getValueByKey!157 lt!55274 (_1!1225 lt!55182)) (Some!162 (_2!1225 lt!55182)))))

(assert (=> d!29815 (= lt!55275 (lemmaContainsTupThenGetReturnValue!73 lt!55274 (_1!1225 lt!55182) (_2!1225 lt!55182)))))

(assert (=> d!29815 (= lt!55274 (insertStrictlySorted!76 (toList!808 (+!148 lt!55185 lt!55183)) (_1!1225 lt!55182) (_2!1225 lt!55182)))))

(assert (=> d!29815 (= (+!148 (+!148 lt!55185 lt!55183) lt!55182) lt!55272)))

(declare-fun b!107707 () Bool)

(declare-fun res!53456 () Bool)

(assert (=> b!107707 (=> (not res!53456) (not e!70138))))

(assert (=> b!107707 (= res!53456 (= (getValueByKey!157 (toList!808 lt!55272) (_1!1225 lt!55182)) (Some!162 (_2!1225 lt!55182))))))

(declare-fun b!107708 () Bool)

(assert (=> b!107708 (= e!70138 (contains!836 (toList!808 lt!55272) lt!55182))))

(assert (= (and d!29815 res!53455) b!107707))

(assert (= (and b!107707 res!53456) b!107708))

(declare-fun m!121163 () Bool)

(assert (=> d!29815 m!121163))

(declare-fun m!121165 () Bool)

(assert (=> d!29815 m!121165))

(declare-fun m!121167 () Bool)

(assert (=> d!29815 m!121167))

(declare-fun m!121169 () Bool)

(assert (=> d!29815 m!121169))

(declare-fun m!121171 () Bool)

(assert (=> b!107707 m!121171))

(declare-fun m!121173 () Bool)

(assert (=> b!107708 m!121173))

(assert (=> b!107594 d!29815))

(declare-fun d!29817 () Bool)

(assert (=> d!29817 (= (validMask!0 (mask!6764 (v!2914 (underlying!367 thiss!992)))) (and (or (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000001111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000011111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000001111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000011111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000001111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000011111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000001111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000011111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000001111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000011111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000111111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000001111111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000011111111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000111111111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000001111111111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000011111111111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000111111111111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000001111111111111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000011111111111111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000111111111111111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00001111111111111111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00011111111111111111111111111111) (= (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!107594 d!29817))

(declare-fun d!29819 () Bool)

(assert (=> d!29819 (= (map!1294 newMap!16) (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun bs!4431 () Bool)

(assert (= bs!4431 d!29819))

(declare-fun m!121175 () Bool)

(assert (=> bs!4431 m!121175))

(assert (=> b!107579 d!29819))

(declare-fun bm!11366 () Bool)

(declare-fun call!11369 () Bool)

(declare-fun lt!55326 () ListLongMap!1585)

(assert (=> bm!11366 (= call!11369 (contains!834 lt!55326 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107751 () Bool)

(declare-fun e!70168 () Unit!3321)

(declare-fun lt!55332 () Unit!3321)

(assert (=> b!107751 (= e!70168 lt!55332)))

(declare-fun lt!55320 () ListLongMap!1585)

(assert (=> b!107751 (= lt!55320 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun lt!55338 () (_ BitVec 64))

(assert (=> b!107751 (= lt!55338 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55335 () (_ BitVec 64))

(assert (=> b!107751 (= lt!55335 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55333 () Unit!3321)

(declare-fun addStillContains!75 (ListLongMap!1585 (_ BitVec 64) V!3235 (_ BitVec 64)) Unit!3321)

(assert (=> b!107751 (= lt!55333 (addStillContains!75 lt!55320 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55335))))

(assert (=> b!107751 (contains!834 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55335)))

(declare-fun lt!55325 () Unit!3321)

(assert (=> b!107751 (= lt!55325 lt!55333)))

(declare-fun lt!55328 () ListLongMap!1585)

(assert (=> b!107751 (= lt!55328 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun lt!55337 () (_ BitVec 64))

(assert (=> b!107751 (= lt!55337 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55340 () (_ BitVec 64))

(assert (=> b!107751 (= lt!55340 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55336 () Unit!3321)

(declare-fun addApplyDifferent!75 (ListLongMap!1585 (_ BitVec 64) V!3235 (_ BitVec 64)) Unit!3321)

(assert (=> b!107751 (= lt!55336 (addApplyDifferent!75 lt!55328 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55340))))

(assert (=> b!107751 (= (apply!99 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55340) (apply!99 lt!55328 lt!55340))))

(declare-fun lt!55341 () Unit!3321)

(assert (=> b!107751 (= lt!55341 lt!55336)))

(declare-fun lt!55331 () ListLongMap!1585)

(assert (=> b!107751 (= lt!55331 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun lt!55321 () (_ BitVec 64))

(assert (=> b!107751 (= lt!55321 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55334 () (_ BitVec 64))

(assert (=> b!107751 (= lt!55334 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55330 () Unit!3321)

(assert (=> b!107751 (= lt!55330 (addApplyDifferent!75 lt!55331 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55334))))

(assert (=> b!107751 (= (apply!99 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55334) (apply!99 lt!55331 lt!55334))))

(declare-fun lt!55322 () Unit!3321)

(assert (=> b!107751 (= lt!55322 lt!55330)))

(declare-fun lt!55327 () ListLongMap!1585)

(assert (=> b!107751 (= lt!55327 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun lt!55324 () (_ BitVec 64))

(assert (=> b!107751 (= lt!55324 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55339 () (_ BitVec 64))

(assert (=> b!107751 (= lt!55339 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!107751 (= lt!55332 (addApplyDifferent!75 lt!55327 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55339))))

(assert (=> b!107751 (= (apply!99 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55339) (apply!99 lt!55327 lt!55339))))

(declare-fun bm!11367 () Bool)

(declare-fun call!11370 () ListLongMap!1585)

(declare-fun call!11375 () ListLongMap!1585)

(assert (=> bm!11367 (= call!11370 call!11375)))

(declare-fun b!107752 () Bool)

(declare-fun e!70165 () Bool)

(assert (=> b!107752 (= e!70165 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!107754 () Bool)

(declare-fun res!53480 () Bool)

(declare-fun e!70172 () Bool)

(assert (=> b!107754 (=> (not res!53480) (not e!70172))))

(declare-fun e!70175 () Bool)

(assert (=> b!107754 (= res!53480 e!70175)))

(declare-fun c!18881 () Bool)

(assert (=> b!107754 (= c!18881 (not (= (bvand (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!107755 () Bool)

(declare-fun e!70176 () ListLongMap!1585)

(assert (=> b!107755 (= e!70176 call!11370)))

(declare-fun b!107756 () Bool)

(declare-fun e!70169 () ListLongMap!1585)

(assert (=> b!107756 (= e!70169 call!11370)))

(declare-fun b!107757 () Bool)

(declare-fun res!53477 () Bool)

(assert (=> b!107757 (=> (not res!53477) (not e!70172))))

(declare-fun e!70177 () Bool)

(assert (=> b!107757 (= res!53477 e!70177)))

(declare-fun res!53475 () Bool)

(assert (=> b!107757 (=> res!53475 e!70177)))

(assert (=> b!107757 (= res!53475 (not e!70165))))

(declare-fun res!53476 () Bool)

(assert (=> b!107757 (=> (not res!53476) (not e!70165))))

(assert (=> b!107757 (= res!53476 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun bm!11368 () Bool)

(declare-fun call!11374 () ListLongMap!1585)

(assert (=> bm!11368 (= call!11374 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun call!11373 () ListLongMap!1585)

(declare-fun call!11372 () ListLongMap!1585)

(declare-fun bm!11369 () Bool)

(declare-fun c!18880 () Bool)

(declare-fun c!18882 () Bool)

(assert (=> bm!11369 (= call!11375 (+!148 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373)) (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!107758 () Bool)

(declare-fun Unit!3329 () Unit!3321)

(assert (=> b!107758 (= e!70168 Unit!3329)))

(declare-fun b!107759 () Bool)

(declare-fun e!70171 () Bool)

(assert (=> b!107759 (= e!70175 e!70171)))

(declare-fun res!53483 () Bool)

(assert (=> b!107759 (= res!53483 call!11369)))

(assert (=> b!107759 (=> (not res!53483) (not e!70171))))

(declare-fun d!29821 () Bool)

(assert (=> d!29821 e!70172))

(declare-fun res!53482 () Bool)

(assert (=> d!29821 (=> (not res!53482) (not e!70172))))

(assert (=> d!29821 (= res!53482 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun lt!55329 () ListLongMap!1585)

(assert (=> d!29821 (= lt!55326 lt!55329)))

(declare-fun lt!55323 () Unit!3321)

(assert (=> d!29821 (= lt!55323 e!70168)))

(declare-fun c!18879 () Bool)

(declare-fun e!70173 () Bool)

(assert (=> d!29821 (= c!18879 e!70173)))

(declare-fun res!53478 () Bool)

(assert (=> d!29821 (=> (not res!53478) (not e!70173))))

(assert (=> d!29821 (= res!53478 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!70166 () ListLongMap!1585)

(assert (=> d!29821 (= lt!55329 e!70166)))

(assert (=> d!29821 (= c!18880 (and (not (= (bvand (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29821 (validMask!0 (mask!6764 (v!2914 (underlying!367 thiss!992))))))

(assert (=> d!29821 (= (getCurrentListMap!493 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))) lt!55326)))

(declare-fun b!107753 () Bool)

(declare-fun c!18877 () Bool)

(assert (=> b!107753 (= c!18877 (and (not (= (bvand (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!107753 (= e!70176 e!70169)))

(declare-fun b!107760 () Bool)

(assert (=> b!107760 (= e!70173 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!107761 () Bool)

(assert (=> b!107761 (= e!70175 (not call!11369))))

(declare-fun b!107762 () Bool)

(declare-fun e!70174 () Bool)

(declare-fun call!11371 () Bool)

(assert (=> b!107762 (= e!70174 (not call!11371))))

(declare-fun b!107763 () Bool)

(assert (=> b!107763 (= e!70172 e!70174)))

(declare-fun c!18878 () Bool)

(assert (=> b!107763 (= c!18878 (not (= (bvand (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!107764 () Bool)

(declare-fun e!70170 () Bool)

(assert (=> b!107764 (= e!70177 e!70170)))

(declare-fun res!53479 () Bool)

(assert (=> b!107764 (=> (not res!53479) (not e!70170))))

(assert (=> b!107764 (= res!53479 (contains!834 lt!55326 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107764 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun bm!11370 () Bool)

(assert (=> bm!11370 (= call!11373 call!11372)))

(declare-fun b!107765 () Bool)

(declare-fun e!70167 () Bool)

(assert (=> b!107765 (= e!70167 (= (apply!99 lt!55326 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun bm!11371 () Bool)

(assert (=> bm!11371 (= call!11371 (contains!834 lt!55326 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107766 () Bool)

(assert (=> b!107766 (= e!70169 call!11373)))

(declare-fun b!107767 () Bool)

(assert (=> b!107767 (= e!70170 (= (apply!99 lt!55326 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107767 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2332 (_values!2589 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> b!107767 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!107768 () Bool)

(assert (=> b!107768 (= e!70166 (+!148 call!11375 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!107769 () Bool)

(assert (=> b!107769 (= e!70171 (= (apply!99 lt!55326 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!107770 () Bool)

(assert (=> b!107770 (= e!70166 e!70176)))

(assert (=> b!107770 (= c!18882 (and (not (= (bvand (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!107771 () Bool)

(assert (=> b!107771 (= e!70174 e!70167)))

(declare-fun res!53481 () Bool)

(assert (=> b!107771 (= res!53481 call!11371)))

(assert (=> b!107771 (=> (not res!53481) (not e!70167))))

(declare-fun bm!11372 () Bool)

(assert (=> bm!11372 (= call!11372 call!11374)))

(assert (= (and d!29821 c!18880) b!107768))

(assert (= (and d!29821 (not c!18880)) b!107770))

(assert (= (and b!107770 c!18882) b!107755))

(assert (= (and b!107770 (not c!18882)) b!107753))

(assert (= (and b!107753 c!18877) b!107756))

(assert (= (and b!107753 (not c!18877)) b!107766))

(assert (= (or b!107756 b!107766) bm!11370))

(assert (= (or b!107755 bm!11370) bm!11372))

(assert (= (or b!107755 b!107756) bm!11367))

(assert (= (or b!107768 bm!11372) bm!11368))

(assert (= (or b!107768 bm!11367) bm!11369))

(assert (= (and d!29821 res!53478) b!107760))

(assert (= (and d!29821 c!18879) b!107751))

(assert (= (and d!29821 (not c!18879)) b!107758))

(assert (= (and d!29821 res!53482) b!107757))

(assert (= (and b!107757 res!53476) b!107752))

(assert (= (and b!107757 (not res!53475)) b!107764))

(assert (= (and b!107764 res!53479) b!107767))

(assert (= (and b!107757 res!53477) b!107754))

(assert (= (and b!107754 c!18881) b!107759))

(assert (= (and b!107754 (not c!18881)) b!107761))

(assert (= (and b!107759 res!53483) b!107769))

(assert (= (or b!107759 b!107761) bm!11366))

(assert (= (and b!107754 res!53480) b!107763))

(assert (= (and b!107763 c!18878) b!107771))

(assert (= (and b!107763 (not c!18878)) b!107762))

(assert (= (and b!107771 res!53481) b!107765))

(assert (= (or b!107771 b!107762) bm!11371))

(declare-fun b_lambda!4829 () Bool)

(assert (=> (not b_lambda!4829) (not b!107767)))

(assert (=> b!107767 t!5738))

(declare-fun b_and!6667 () Bool)

(assert (= b_and!6663 (and (=> t!5738 result!3495) b_and!6667)))

(assert (=> b!107767 t!5740))

(declare-fun b_and!6669 () Bool)

(assert (= b_and!6665 (and (=> t!5740 result!3499) b_and!6669)))

(declare-fun m!121177 () Bool)

(assert (=> bm!11366 m!121177))

(assert (=> b!107764 m!121117))

(assert (=> b!107764 m!121117))

(declare-fun m!121179 () Bool)

(assert (=> b!107764 m!121179))

(assert (=> b!107760 m!121117))

(assert (=> b!107760 m!121117))

(assert (=> b!107760 m!121119))

(declare-fun m!121181 () Bool)

(assert (=> bm!11371 m!121181))

(declare-fun m!121183 () Bool)

(assert (=> b!107751 m!121183))

(declare-fun m!121185 () Bool)

(assert (=> b!107751 m!121185))

(declare-fun m!121187 () Bool)

(assert (=> b!107751 m!121187))

(declare-fun m!121189 () Bool)

(assert (=> b!107751 m!121189))

(declare-fun m!121191 () Bool)

(assert (=> b!107751 m!121191))

(declare-fun m!121193 () Bool)

(assert (=> b!107751 m!121193))

(declare-fun m!121195 () Bool)

(assert (=> b!107751 m!121195))

(declare-fun m!121197 () Bool)

(assert (=> b!107751 m!121197))

(declare-fun m!121199 () Bool)

(assert (=> b!107751 m!121199))

(declare-fun m!121201 () Bool)

(assert (=> b!107751 m!121201))

(assert (=> b!107751 m!120995))

(assert (=> b!107751 m!121185))

(assert (=> b!107751 m!121197))

(declare-fun m!121203 () Bool)

(assert (=> b!107751 m!121203))

(declare-fun m!121205 () Bool)

(assert (=> b!107751 m!121205))

(declare-fun m!121207 () Bool)

(assert (=> b!107751 m!121207))

(assert (=> b!107751 m!121191))

(declare-fun m!121209 () Bool)

(assert (=> b!107751 m!121209))

(assert (=> b!107751 m!121117))

(declare-fun m!121211 () Bool)

(assert (=> b!107751 m!121211))

(assert (=> b!107751 m!121199))

(declare-fun m!121213 () Bool)

(assert (=> b!107768 m!121213))

(assert (=> b!107767 m!121117))

(assert (=> b!107767 m!121117))

(declare-fun m!121215 () Bool)

(assert (=> b!107767 m!121215))

(assert (=> b!107767 m!121121))

(assert (=> b!107767 m!121015))

(assert (=> b!107767 m!121123))

(assert (=> b!107767 m!121015))

(assert (=> b!107767 m!121121))

(assert (=> bm!11368 m!120995))

(assert (=> b!107752 m!121117))

(assert (=> b!107752 m!121117))

(assert (=> b!107752 m!121119))

(declare-fun m!121217 () Bool)

(assert (=> b!107765 m!121217))

(declare-fun m!121219 () Bool)

(assert (=> bm!11369 m!121219))

(declare-fun m!121221 () Bool)

(assert (=> b!107769 m!121221))

(assert (=> d!29821 m!120987))

(assert (=> b!107579 d!29821))

(declare-fun d!29823 () Bool)

(assert (=> d!29823 (= (array_inv!1307 (_keys!4316 newMap!16)) (bvsge (size!2331 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!107593 d!29823))

(declare-fun d!29825 () Bool)

(assert (=> d!29825 (= (array_inv!1308 (_values!2589 newMap!16)) (bvsge (size!2332 (_values!2589 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!107593 d!29825))

(declare-fun d!29827 () Bool)

(assert (=> d!29827 (= (valid!427 thiss!992) (valid!426 (v!2914 (underlying!367 thiss!992))))))

(declare-fun bs!4432 () Bool)

(assert (= bs!4432 d!29827))

(declare-fun m!121223 () Bool)

(assert (=> bs!4432 m!121223))

(assert (=> start!12520 d!29827))

(declare-fun d!29829 () Bool)

(declare-fun c!18885 () Bool)

(assert (=> d!29829 (= c!18885 ((_ is ValueCellFull!1002) (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70180 () V!3235)

(assert (=> d!29829 (= (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) from!355) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70180)))

(declare-fun b!107776 () Bool)

(declare-fun get!1342 (ValueCell!1002 V!3235) V!3235)

(assert (=> b!107776 (= e!70180 (get!1342 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) from!355) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107777 () Bool)

(declare-fun get!1343 (ValueCell!1002 V!3235) V!3235)

(assert (=> b!107777 (= e!70180 (get!1343 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) from!355) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29829 c!18885) b!107776))

(assert (= (and d!29829 (not c!18885)) b!107777))

(assert (=> b!107776 m!121013))

(assert (=> b!107776 m!121015))

(declare-fun m!121225 () Bool)

(assert (=> b!107776 m!121225))

(assert (=> b!107777 m!121013))

(assert (=> b!107777 m!121015))

(declare-fun m!121227 () Bool)

(assert (=> b!107777 m!121227))

(assert (=> b!107591 d!29829))

(declare-fun d!29831 () Bool)

(declare-fun e!70186 () Bool)

(assert (=> d!29831 e!70186))

(declare-fun res!53486 () Bool)

(assert (=> d!29831 (=> res!53486 e!70186)))

(declare-fun lt!55351 () Bool)

(assert (=> d!29831 (= res!53486 (not lt!55351))))

(declare-fun lt!55352 () Bool)

(assert (=> d!29831 (= lt!55351 lt!55352)))

(declare-fun lt!55350 () Unit!3321)

(declare-fun e!70185 () Unit!3321)

(assert (=> d!29831 (= lt!55350 e!70185)))

(declare-fun c!18888 () Bool)

(assert (=> d!29831 (= c!18888 lt!55352)))

(declare-fun containsKey!161 (List!1625 (_ BitVec 64)) Bool)

(assert (=> d!29831 (= lt!55352 (containsKey!161 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!29831 (= (contains!834 lt!55190 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55351)))

(declare-fun b!107784 () Bool)

(declare-fun lt!55353 () Unit!3321)

(assert (=> b!107784 (= e!70185 lt!55353)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!109 (List!1625 (_ BitVec 64)) Unit!3321)

(assert (=> b!107784 (= lt!55353 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun isDefined!110 (Option!163) Bool)

(assert (=> b!107784 (isDefined!110 (getValueByKey!157 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!107785 () Bool)

(declare-fun Unit!3330 () Unit!3321)

(assert (=> b!107785 (= e!70185 Unit!3330)))

(declare-fun b!107786 () Bool)

(assert (=> b!107786 (= e!70186 (isDefined!110 (getValueByKey!157 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!29831 c!18888) b!107784))

(assert (= (and d!29831 (not c!18888)) b!107785))

(assert (= (and d!29831 (not res!53486)) b!107786))

(assert (=> d!29831 m!120979))

(declare-fun m!121229 () Bool)

(assert (=> d!29831 m!121229))

(assert (=> b!107784 m!120979))

(declare-fun m!121231 () Bool)

(assert (=> b!107784 m!121231))

(assert (=> b!107784 m!120979))

(declare-fun m!121233 () Bool)

(assert (=> b!107784 m!121233))

(assert (=> b!107784 m!121233))

(declare-fun m!121235 () Bool)

(assert (=> b!107784 m!121235))

(assert (=> b!107786 m!120979))

(assert (=> b!107786 m!121233))

(assert (=> b!107786 m!121233))

(assert (=> b!107786 m!121235))

(assert (=> b!107583 d!29831))

(declare-fun bm!11421 () Bool)

(declare-fun call!11440 () ListLongMap!1585)

(declare-fun call!11424 () ListLongMap!1585)

(assert (=> bm!11421 (= call!11440 call!11424)))

(declare-fun bm!11422 () Bool)

(declare-fun c!18920 () Bool)

(declare-fun c!18917 () Bool)

(assert (=> bm!11422 (= c!18920 c!18917)))

(declare-fun call!11438 () Bool)

(declare-fun e!70240 () ListLongMap!1585)

(assert (=> bm!11422 (= call!11438 (contains!834 e!70240 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!107871 () Bool)

(declare-fun e!70252 () Bool)

(declare-fun e!70232 () Bool)

(assert (=> b!107871 (= e!70252 e!70232)))

(declare-fun call!11426 () ListLongMap!1585)

(declare-fun res!53522 () Bool)

(assert (=> b!107871 (= res!53522 (contains!834 call!11426 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!107871 (=> (not res!53522) (not e!70232))))

(declare-fun b!107872 () Bool)

(declare-fun e!70235 () ListLongMap!1585)

(assert (=> b!107872 (= e!70235 call!11440)))

(declare-fun b!107873 () Bool)

(declare-datatypes ((SeekEntryResult!260 0))(
  ( (MissingZero!260 (index!3189 (_ BitVec 32))) (Found!260 (index!3190 (_ BitVec 32))) (Intermediate!260 (undefined!1072 Bool) (index!3191 (_ BitVec 32)) (x!13804 (_ BitVec 32))) (Undefined!260) (MissingVacant!260 (index!3192 (_ BitVec 32))) )
))
(declare-fun lt!55423 () SeekEntryResult!260)

(declare-fun e!70242 () Bool)

(assert (=> b!107873 (= e!70242 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55423)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!107874 () Bool)

(declare-fun c!18918 () Bool)

(declare-fun lt!55411 () SeekEntryResult!260)

(assert (=> b!107874 (= c!18918 ((_ is MissingVacant!260) lt!55411))))

(declare-fun e!70246 () tuple2!2430)

(declare-fun e!70248 () tuple2!2430)

(assert (=> b!107874 (= e!70246 e!70248)))

(declare-fun bm!11423 () Bool)

(declare-fun call!11441 () Bool)

(declare-fun call!11430 () Bool)

(assert (=> bm!11423 (= call!11441 call!11430)))

(declare-fun b!107875 () Bool)

(declare-fun res!53528 () Bool)

(declare-fun e!70236 () Bool)

(assert (=> b!107875 (=> (not res!53528) (not e!70236))))

(declare-fun lt!55431 () SeekEntryResult!260)

(assert (=> b!107875 (= res!53528 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3189 lt!55431)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107876 () Bool)

(declare-fun e!70238 () Unit!3321)

(declare-fun lt!55418 () Unit!3321)

(assert (=> b!107876 (= e!70238 lt!55418)))

(declare-fun call!11442 () Unit!3321)

(assert (=> b!107876 (= lt!55418 call!11442)))

(declare-fun call!11428 () SeekEntryResult!260)

(assert (=> b!107876 (= lt!55423 call!11428)))

(declare-fun res!53520 () Bool)

(assert (=> b!107876 (= res!53520 ((_ is Found!260) lt!55423))))

(assert (=> b!107876 (=> (not res!53520) (not e!70242))))

(assert (=> b!107876 e!70242))

(declare-fun bm!11424 () Bool)

(declare-fun call!11433 () ListLongMap!1585)

(assert (=> bm!11424 (= call!11433 (map!1294 newMap!16))))

(declare-fun b!107877 () Bool)

(assert (=> b!107877 (= e!70235 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!107878 () Bool)

(declare-fun lt!55413 () Unit!3321)

(declare-fun lt!55425 () Unit!3321)

(assert (=> b!107878 (= lt!55413 lt!55425)))

(declare-fun call!11446 () ListLongMap!1585)

(declare-fun call!11432 () ListLongMap!1585)

(assert (=> b!107878 (= call!11446 call!11432)))

(declare-fun lt!55410 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!48 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 V!3235 Int) Unit!3321)

(assert (=> b!107878 (= lt!55425 (lemmaChangeLongMinValueKeyThenAddPairToListMap!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55410 (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) lt!55184 (defaultEntry!2606 newMap!16)))))

(assert (=> b!107878 (= lt!55410 (bvor (extraKeys!2407 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!70241 () tuple2!2430)

(assert (=> b!107878 (= e!70241 (tuple2!2431 true (LongMapFixedSize!913 (defaultEntry!2606 newMap!16) (mask!6764 newMap!16) (bvor (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) (zeroValue!2479 newMap!16) lt!55184 (_size!505 newMap!16) (_keys!4316 newMap!16) (_values!2589 newMap!16) (_vacant!505 newMap!16))))))

(declare-fun b!107879 () Bool)

(declare-fun e!70243 () Bool)

(assert (=> b!107879 (= e!70243 e!70252)))

(declare-fun c!18929 () Bool)

(declare-fun lt!55419 () tuple2!2430)

(assert (=> b!107879 (= c!18929 (_1!1226 lt!55419))))

(declare-fun bm!11425 () Bool)

(declare-fun call!11427 () tuple2!2430)

(declare-fun updateHelperNewKey!48 (LongMapFixedSize!912 (_ BitVec 64) V!3235 (_ BitVec 32)) tuple2!2430)

(assert (=> bm!11425 (= call!11427 (updateHelperNewKey!48 newMap!16 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411))))))

(declare-fun b!107880 () Bool)

(declare-fun lt!55415 () tuple2!2430)

(assert (=> b!107880 (= lt!55415 call!11427)))

(declare-fun e!70237 () tuple2!2430)

(assert (=> b!107880 (= e!70237 (tuple2!2431 (_1!1226 lt!55415) (_2!1226 lt!55415)))))

(declare-fun b!107881 () Bool)

(assert (=> b!107881 (= e!70252 (= call!11426 call!11433))))

(declare-fun b!107882 () Bool)

(declare-fun call!11447 () ListLongMap!1585)

(assert (=> b!107882 (= e!70240 call!11447)))

(declare-fun b!107883 () Bool)

(declare-fun e!70250 () Bool)

(declare-fun call!11444 () Bool)

(assert (=> b!107883 (= e!70250 (not call!11444))))

(declare-fun b!107884 () Bool)

(assert (=> b!107884 (= e!70240 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun d!29833 () Bool)

(assert (=> d!29833 e!70243))

(declare-fun res!53519 () Bool)

(assert (=> d!29833 (=> (not res!53519) (not e!70243))))

(assert (=> d!29833 (= res!53519 (valid!426 (_2!1226 lt!55419)))))

(declare-fun e!70244 () tuple2!2430)

(assert (=> d!29833 (= lt!55419 e!70244)))

(declare-fun c!18921 () Bool)

(assert (=> d!29833 (= c!18921 (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvneg (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!29833 (valid!426 newMap!16)))

(assert (=> d!29833 (= (update!160 newMap!16 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184) lt!55419)))

(declare-fun bm!11426 () Bool)

(declare-fun call!11425 () Bool)

(declare-fun call!11437 () Bool)

(assert (=> bm!11426 (= call!11425 call!11437)))

(declare-fun b!107885 () Bool)

(declare-fun res!53515 () Bool)

(declare-fun e!70234 () Bool)

(assert (=> b!107885 (=> (not res!53515) (not e!70234))))

(declare-fun lt!55433 () SeekEntryResult!260)

(assert (=> b!107885 (= res!53515 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3189 lt!55433)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!11434 () Bool)

(declare-fun bm!11427 () Bool)

(assert (=> bm!11427 (= call!11434 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!107886 () Bool)

(assert (=> b!107886 (= e!70232 (= call!11426 (+!148 call!11433 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun c!18930 () Bool)

(declare-fun c!18919 () Bool)

(declare-fun c!18925 () Bool)

(declare-fun bm!11428 () Bool)

(declare-fun c!18926 () Bool)

(declare-fun lt!55434 () SeekEntryResult!260)

(declare-fun call!11429 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!11428 (= call!11429 (inRange!0 (ite c!18917 (ite c!18919 (index!3190 lt!55434) (ite c!18925 (index!3189 lt!55433) (index!3192 lt!55433))) (ite c!18930 (index!3190 lt!55423) (ite c!18926 (index!3189 lt!55431) (index!3192 lt!55431)))) (mask!6764 newMap!16)))))

(declare-fun b!107887 () Bool)

(declare-fun e!70251 () Unit!3321)

(declare-fun lt!55409 () Unit!3321)

(assert (=> b!107887 (= e!70251 lt!55409)))

(declare-fun call!11436 () Unit!3321)

(assert (=> b!107887 (= lt!55409 call!11436)))

(declare-fun call!11439 () SeekEntryResult!260)

(assert (=> b!107887 (= lt!55433 call!11439)))

(assert (=> b!107887 (= c!18925 ((_ is MissingZero!260) lt!55433))))

(declare-fun e!70233 () Bool)

(assert (=> b!107887 e!70233))

(declare-fun b!107888 () Bool)

(declare-fun lt!55421 () Unit!3321)

(assert (=> b!107888 (= lt!55421 e!70251)))

(assert (=> b!107888 (= c!18919 call!11438)))

(assert (=> b!107888 (= e!70246 (tuple2!2431 false newMap!16))))

(declare-fun bm!11429 () Bool)

(assert (=> bm!11429 (= call!11430 call!11429)))

(declare-fun bm!11430 () Bool)

(declare-fun call!11445 () SeekEntryResult!260)

(assert (=> bm!11430 (= call!11428 call!11445)))

(declare-fun bm!11431 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) Int) Unit!3321)

(assert (=> bm!11431 (= call!11436 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)))))

(declare-fun bm!11432 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) Int) Unit!3321)

(assert (=> bm!11432 (= call!11442 (lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)))))

(declare-fun b!107889 () Bool)

(declare-fun res!53521 () Bool)

(assert (=> b!107889 (= res!53521 call!11430)))

(declare-fun e!70245 () Bool)

(assert (=> b!107889 (=> (not res!53521) (not e!70245))))

(declare-fun lt!55420 () array!4377)

(declare-fun bm!11433 () Bool)

(assert (=> bm!11433 (= call!11424 (getCurrentListMap!493 (_keys!4316 newMap!16) (ite c!18921 (_values!2589 newMap!16) lt!55420) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!107890 () Bool)

(declare-fun lt!55424 () Unit!3321)

(declare-fun lt!55417 () Unit!3321)

(assert (=> b!107890 (= lt!55424 lt!55417)))

(assert (=> b!107890 (= call!11446 call!11432)))

(declare-fun lt!55432 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!48 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 V!3235 Int) Unit!3321)

(assert (=> b!107890 (= lt!55417 (lemmaChangeZeroKeyThenAddPairToListMap!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55432 (zeroValue!2479 newMap!16) lt!55184 (minValue!2479 newMap!16) (defaultEntry!2606 newMap!16)))))

(assert (=> b!107890 (= lt!55432 (bvor (extraKeys!2407 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!107890 (= e!70241 (tuple2!2431 true (LongMapFixedSize!913 (defaultEntry!2606 newMap!16) (mask!6764 newMap!16) (bvor (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) lt!55184 (minValue!2479 newMap!16) (_size!505 newMap!16) (_keys!4316 newMap!16) (_values!2589 newMap!16) (_vacant!505 newMap!16))))))

(declare-fun b!107891 () Bool)

(declare-fun e!70239 () Bool)

(declare-fun call!11431 () Bool)

(assert (=> b!107891 (= e!70239 (not call!11431))))

(declare-fun bm!11434 () Bool)

(declare-fun call!11443 () ListLongMap!1585)

(assert (=> bm!11434 (= call!11447 call!11443)))

(declare-fun c!18923 () Bool)

(declare-fun bm!11435 () Bool)

(assert (=> bm!11435 (= call!11443 (getCurrentListMap!493 (_keys!4316 newMap!16) (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!107892 () Bool)

(assert (=> b!107892 (= e!70234 (not call!11444))))

(declare-fun b!107893 () Bool)

(assert (=> b!107893 (= e!70248 e!70237)))

(declare-fun c!18927 () Bool)

(assert (=> b!107893 (= c!18927 ((_ is MissingZero!260) lt!55411))))

(declare-fun b!107894 () Bool)

(assert (=> b!107894 (= e!70245 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55434)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun bm!11436 () Bool)

(declare-fun call!11435 () ListLongMap!1585)

(assert (=> bm!11436 (= call!11435 (+!148 e!70235 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun c!18924 () Bool)

(assert (=> bm!11436 (= c!18924 c!18921)))

(declare-fun bm!11437 () Bool)

(assert (=> bm!11437 (= call!11439 call!11445)))

(declare-fun bm!11438 () Bool)

(assert (=> bm!11438 (= call!11432 call!11443)))

(declare-fun b!107895 () Bool)

(declare-fun res!53525 () Bool)

(assert (=> b!107895 (=> (not res!53525) (not e!70236))))

(assert (=> b!107895 (= res!53525 call!11425)))

(declare-fun e!70249 () Bool)

(assert (=> b!107895 (= e!70249 e!70236)))

(declare-fun bm!11439 () Bool)

(assert (=> bm!11439 (= call!11446 call!11435)))

(declare-fun b!107896 () Bool)

(declare-fun lt!55427 () tuple2!2430)

(assert (=> b!107896 (= e!70248 (tuple2!2431 (_1!1226 lt!55427) (_2!1226 lt!55427)))))

(assert (=> b!107896 (= lt!55427 call!11427)))

(declare-fun bm!11440 () Bool)

(assert (=> bm!11440 (= call!11426 (map!1294 (_2!1226 lt!55419)))))

(declare-fun b!107897 () Bool)

(declare-fun res!53523 () Bool)

(assert (=> b!107897 (= res!53523 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3192 lt!55431)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107897 (=> (not res!53523) (not e!70239))))

(declare-fun b!107898 () Bool)

(declare-fun c!18922 () Bool)

(assert (=> b!107898 (= c!18922 ((_ is MissingVacant!260) lt!55433))))

(declare-fun e!70247 () Bool)

(assert (=> b!107898 (= e!70233 e!70247)))

(declare-fun b!107899 () Bool)

(declare-fun Unit!3331 () Unit!3321)

(assert (=> b!107899 (= e!70238 Unit!3331)))

(declare-fun lt!55429 () Unit!3321)

(assert (=> b!107899 (= lt!55429 call!11436)))

(assert (=> b!107899 (= lt!55431 call!11428)))

(assert (=> b!107899 (= c!18926 ((_ is MissingZero!260) lt!55431))))

(assert (=> b!107899 e!70249))

(declare-fun lt!55408 () Unit!3321)

(assert (=> b!107899 (= lt!55408 lt!55429)))

(assert (=> b!107899 false))

(declare-fun b!107900 () Bool)

(declare-fun e!70231 () Bool)

(assert (=> b!107900 (= e!70231 e!70239)))

(declare-fun res!53517 () Bool)

(assert (=> b!107900 (= res!53517 call!11425)))

(assert (=> b!107900 (=> (not res!53517) (not e!70239))))

(declare-fun bm!11441 () Bool)

(assert (=> bm!11441 (= call!11437 call!11429)))

(declare-fun bm!11442 () Bool)

(assert (=> bm!11442 (= call!11444 call!11434)))

(declare-fun b!107901 () Bool)

(assert (=> b!107901 (= e!70236 (not call!11431))))

(declare-fun b!107902 () Bool)

(declare-fun res!53524 () Bool)

(assert (=> b!107902 (= res!53524 call!11437)))

(assert (=> b!107902 (=> (not res!53524) (not e!70242))))

(declare-fun b!107903 () Bool)

(assert (=> b!107903 (= e!70247 ((_ is Undefined!260) lt!55433))))

(declare-fun b!107904 () Bool)

(assert (=> b!107904 (= e!70247 e!70250)))

(declare-fun res!53518 () Bool)

(assert (=> b!107904 (= res!53518 call!11441)))

(assert (=> b!107904 (=> (not res!53518) (not e!70250))))

(declare-fun b!107905 () Bool)

(assert (=> b!107905 (= e!70244 e!70241)))

(assert (=> b!107905 (= c!18923 (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107906 () Bool)

(declare-fun Unit!3332 () Unit!3321)

(assert (=> b!107906 (= e!70251 Unit!3332)))

(declare-fun lt!55422 () Unit!3321)

(assert (=> b!107906 (= lt!55422 call!11442)))

(assert (=> b!107906 (= lt!55434 call!11439)))

(declare-fun res!53527 () Bool)

(assert (=> b!107906 (= res!53527 ((_ is Found!260) lt!55434))))

(assert (=> b!107906 (=> (not res!53527) (not e!70245))))

(assert (=> b!107906 e!70245))

(declare-fun lt!55416 () Unit!3321)

(assert (=> b!107906 (= lt!55416 lt!55422)))

(assert (=> b!107906 false))

(declare-fun bm!11443 () Bool)

(assert (=> bm!11443 (= call!11431 call!11434)))

(declare-fun b!107907 () Bool)

(declare-fun lt!55412 () Unit!3321)

(declare-fun lt!55428 () Unit!3321)

(assert (=> b!107907 (= lt!55412 lt!55428)))

(assert (=> b!107907 (contains!834 call!11424 (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411)))))

(declare-fun lemmaValidKeyInArrayIsInListMap!109 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) Int) Unit!3321)

(assert (=> b!107907 (= lt!55428 (lemmaValidKeyInArrayIsInListMap!109 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3190 lt!55411) (defaultEntry!2606 newMap!16)))))

(assert (=> b!107907 (= lt!55420 (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))))))

(declare-fun lt!55430 () Unit!3321)

(declare-fun lt!55426 () Unit!3321)

(assert (=> b!107907 (= lt!55430 lt!55426)))

(assert (=> b!107907 (= call!11435 call!11447)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!48 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) (_ BitVec 64) V!3235 Int) Unit!3321)

(assert (=> b!107907 (= lt!55426 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3190 lt!55411) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55414 () Unit!3321)

(assert (=> b!107907 (= lt!55414 e!70238)))

(assert (=> b!107907 (= c!18930 call!11438)))

(assert (=> b!107907 (= e!70237 (tuple2!2431 true (LongMapFixedSize!913 (defaultEntry!2606 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (_size!505 newMap!16) (_keys!4316 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (_vacant!505 newMap!16))))))

(declare-fun bm!11444 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4375 (_ BitVec 32)) SeekEntryResult!260)

(assert (=> bm!11444 (= call!11445 (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun b!107908 () Bool)

(declare-fun res!53526 () Bool)

(assert (=> b!107908 (=> (not res!53526) (not e!70234))))

(assert (=> b!107908 (= res!53526 call!11441)))

(assert (=> b!107908 (= e!70233 e!70234)))

(declare-fun b!107909 () Bool)

(assert (=> b!107909 (= e!70231 ((_ is Undefined!260) lt!55431))))

(declare-fun b!107910 () Bool)

(assert (=> b!107910 (= e!70244 e!70246)))

(assert (=> b!107910 (= lt!55411 (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(assert (=> b!107910 (= c!18917 ((_ is Undefined!260) lt!55411))))

(declare-fun b!107911 () Bool)

(declare-fun res!53516 () Bool)

(assert (=> b!107911 (= res!53516 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3192 lt!55433)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107911 (=> (not res!53516) (not e!70250))))

(declare-fun b!107912 () Bool)

(declare-fun c!18928 () Bool)

(assert (=> b!107912 (= c!18928 ((_ is MissingVacant!260) lt!55431))))

(assert (=> b!107912 (= e!70249 e!70231)))

(assert (= (and d!29833 c!18921) b!107905))

(assert (= (and d!29833 (not c!18921)) b!107910))

(assert (= (and b!107905 c!18923) b!107890))

(assert (= (and b!107905 (not c!18923)) b!107878))

(assert (= (or b!107890 b!107878) bm!11438))

(assert (= (or b!107890 b!107878) bm!11421))

(assert (= (or b!107890 b!107878) bm!11439))

(assert (= (and b!107910 c!18917) b!107888))

(assert (= (and b!107910 (not c!18917)) b!107874))

(assert (= (and b!107888 c!18919) b!107906))

(assert (= (and b!107888 (not c!18919)) b!107887))

(assert (= (and b!107906 res!53527) b!107889))

(assert (= (and b!107889 res!53521) b!107894))

(assert (= (and b!107887 c!18925) b!107908))

(assert (= (and b!107887 (not c!18925)) b!107898))

(assert (= (and b!107908 res!53526) b!107885))

(assert (= (and b!107885 res!53515) b!107892))

(assert (= (and b!107898 c!18922) b!107904))

(assert (= (and b!107898 (not c!18922)) b!107903))

(assert (= (and b!107904 res!53518) b!107911))

(assert (= (and b!107911 res!53516) b!107883))

(assert (= (or b!107908 b!107904) bm!11423))

(assert (= (or b!107892 b!107883) bm!11442))

(assert (= (or b!107889 bm!11423) bm!11429))

(assert (= (or b!107906 b!107887) bm!11437))

(assert (= (and b!107874 c!18918) b!107896))

(assert (= (and b!107874 (not c!18918)) b!107893))

(assert (= (and b!107893 c!18927) b!107880))

(assert (= (and b!107893 (not c!18927)) b!107907))

(assert (= (and b!107907 c!18930) b!107876))

(assert (= (and b!107907 (not c!18930)) b!107899))

(assert (= (and b!107876 res!53520) b!107902))

(assert (= (and b!107902 res!53524) b!107873))

(assert (= (and b!107899 c!18926) b!107895))

(assert (= (and b!107899 (not c!18926)) b!107912))

(assert (= (and b!107895 res!53525) b!107875))

(assert (= (and b!107875 res!53528) b!107901))

(assert (= (and b!107912 c!18928) b!107900))

(assert (= (and b!107912 (not c!18928)) b!107909))

(assert (= (and b!107900 res!53517) b!107897))

(assert (= (and b!107897 res!53523) b!107891))

(assert (= (or b!107895 b!107900) bm!11426))

(assert (= (or b!107901 b!107891) bm!11443))

(assert (= (or b!107902 bm!11426) bm!11441))

(assert (= (or b!107876 b!107899) bm!11430))

(assert (= (or b!107896 b!107880) bm!11425))

(assert (= (or bm!11442 bm!11443) bm!11427))

(assert (= (or b!107888 b!107907) bm!11434))

(assert (= (or b!107906 b!107876) bm!11432))

(assert (= (or b!107887 b!107899) bm!11431))

(assert (= (or bm!11437 bm!11430) bm!11444))

(assert (= (or bm!11429 bm!11441) bm!11428))

(assert (= (or b!107888 b!107907) bm!11422))

(assert (= (and bm!11422 c!18920) b!107882))

(assert (= (and bm!11422 (not c!18920)) b!107884))

(assert (= (or bm!11438 bm!11434) bm!11435))

(assert (= (or bm!11421 b!107907) bm!11433))

(assert (= (or bm!11439 b!107907) bm!11436))

(assert (= (and bm!11436 c!18924) b!107872))

(assert (= (and bm!11436 (not c!18924)) b!107877))

(assert (= (and d!29833 res!53519) b!107879))

(assert (= (and b!107879 c!18929) b!107871))

(assert (= (and b!107879 (not c!18929)) b!107881))

(assert (= (and b!107871 res!53522) b!107886))

(assert (= (or b!107886 b!107881) bm!11424))

(assert (= (or b!107871 b!107886 b!107881) bm!11440))

(declare-fun m!121237 () Bool)

(assert (=> b!107886 m!121237))

(assert (=> bm!11444 m!120979))

(declare-fun m!121239 () Bool)

(assert (=> bm!11444 m!121239))

(assert (=> bm!11427 m!120979))

(declare-fun m!121241 () Bool)

(assert (=> bm!11427 m!121241))

(declare-fun m!121243 () Bool)

(assert (=> bm!11436 m!121243))

(assert (=> bm!11432 m!120979))

(declare-fun m!121245 () Bool)

(assert (=> bm!11432 m!121245))

(assert (=> b!107877 m!121175))

(declare-fun m!121247 () Bool)

(assert (=> d!29833 m!121247))

(assert (=> d!29833 m!121019))

(declare-fun m!121249 () Bool)

(assert (=> b!107885 m!121249))

(declare-fun m!121251 () Bool)

(assert (=> bm!11428 m!121251))

(assert (=> bm!11424 m!121029))

(declare-fun m!121253 () Bool)

(assert (=> b!107897 m!121253))

(assert (=> bm!11425 m!120979))

(declare-fun m!121255 () Bool)

(assert (=> bm!11425 m!121255))

(assert (=> b!107910 m!120979))

(assert (=> b!107910 m!121239))

(assert (=> bm!11431 m!120979))

(declare-fun m!121257 () Bool)

(assert (=> bm!11431 m!121257))

(declare-fun m!121259 () Bool)

(assert (=> b!107911 m!121259))

(declare-fun m!121261 () Bool)

(assert (=> b!107890 m!121261))

(assert (=> b!107871 m!120979))

(declare-fun m!121263 () Bool)

(assert (=> b!107871 m!121263))

(declare-fun m!121265 () Bool)

(assert (=> b!107907 m!121265))

(assert (=> b!107907 m!121265))

(declare-fun m!121267 () Bool)

(assert (=> b!107907 m!121267))

(assert (=> b!107907 m!120979))

(declare-fun m!121269 () Bool)

(assert (=> b!107907 m!121269))

(declare-fun m!121271 () Bool)

(assert (=> b!107907 m!121271))

(declare-fun m!121273 () Bool)

(assert (=> b!107907 m!121273))

(assert (=> b!107884 m!121175))

(declare-fun m!121275 () Bool)

(assert (=> b!107894 m!121275))

(declare-fun m!121277 () Bool)

(assert (=> b!107878 m!121277))

(declare-fun m!121279 () Bool)

(assert (=> b!107873 m!121279))

(assert (=> bm!11435 m!121273))

(declare-fun m!121281 () Bool)

(assert (=> bm!11435 m!121281))

(assert (=> bm!11422 m!120979))

(declare-fun m!121283 () Bool)

(assert (=> bm!11422 m!121283))

(declare-fun m!121285 () Bool)

(assert (=> bm!11433 m!121285))

(declare-fun m!121287 () Bool)

(assert (=> bm!11440 m!121287))

(declare-fun m!121289 () Bool)

(assert (=> b!107875 m!121289))

(assert (=> b!107583 d!29833))

(declare-fun d!29835 () Bool)

(assert (=> d!29835 (not (arrayContainsKey!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55437 () Unit!3321)

(declare-fun choose!68 (array!4375 (_ BitVec 32) (_ BitVec 64) List!1626) Unit!3321)

(assert (=> d!29835 (= lt!55437 (choose!68 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623)))))

(assert (=> d!29835 (bvslt (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!29835 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623)) lt!55437)))

(declare-fun bs!4433 () Bool)

(assert (= bs!4433 d!29835))

(assert (=> bs!4433 m!120979))

(assert (=> bs!4433 m!121005))

(assert (=> bs!4433 m!120979))

(declare-fun m!121291 () Bool)

(assert (=> bs!4433 m!121291))

(assert (=> b!107581 d!29835))

(declare-fun d!29837 () Bool)

(assert (=> d!29837 (arrayNoDuplicates!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) from!355 Nil!1623)))

(declare-fun lt!55440 () Unit!3321)

(declare-fun choose!39 (array!4375 (_ BitVec 32) (_ BitVec 32)) Unit!3321)

(assert (=> d!29837 (= lt!55440 (choose!39 (_keys!4316 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!29837 (bvslt (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!29837 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 from!355) lt!55440)))

(declare-fun bs!4434 () Bool)

(assert (= bs!4434 d!29837))

(assert (=> bs!4434 m!121001))

(declare-fun m!121293 () Bool)

(assert (=> bs!4434 m!121293))

(assert (=> b!107581 d!29837))

(declare-fun d!29839 () Bool)

(declare-fun res!53533 () Bool)

(declare-fun e!70257 () Bool)

(assert (=> d!29839 (=> res!53533 e!70257)))

(assert (=> d!29839 (= res!53533 (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!29839 (= (arrayContainsKey!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!70257)))

(declare-fun b!107917 () Bool)

(declare-fun e!70258 () Bool)

(assert (=> b!107917 (= e!70257 e!70258)))

(declare-fun res!53534 () Bool)

(assert (=> b!107917 (=> (not res!53534) (not e!70258))))

(assert (=> b!107917 (= res!53534 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!107918 () Bool)

(assert (=> b!107918 (= e!70258 (arrayContainsKey!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!29839 (not res!53533)) b!107917))

(assert (= (and b!107917 res!53534) b!107918))

(assert (=> d!29839 m!121117))

(assert (=> b!107918 m!120979))

(declare-fun m!121295 () Bool)

(assert (=> b!107918 m!121295))

(assert (=> b!107581 d!29839))

(declare-fun d!29841 () Bool)

(declare-fun e!70261 () Bool)

(assert (=> d!29841 e!70261))

(declare-fun c!18933 () Bool)

(assert (=> d!29841 (= c!18933 (and (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!55443 () Unit!3321)

(declare-fun choose!668 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) (_ BitVec 32) Int) Unit!3321)

(assert (=> d!29841 (= lt!55443 (choose!668 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))))))

(assert (=> d!29841 (validMask!0 (mask!6764 (v!2914 (underlying!367 thiss!992))))))

(assert (=> d!29841 (= (lemmaListMapContainsThenArrayContainsFrom!109 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))) lt!55443)))

(declare-fun b!107923 () Bool)

(assert (=> b!107923 (= e!70261 (arrayContainsKey!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!107924 () Bool)

(assert (=> b!107924 (= e!70261 (ite (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!29841 c!18933) b!107923))

(assert (= (and d!29841 (not c!18933)) b!107924))

(assert (=> d!29841 m!120979))

(declare-fun m!121297 () Bool)

(assert (=> d!29841 m!121297))

(assert (=> d!29841 m!120987))

(assert (=> b!107923 m!120979))

(assert (=> b!107923 m!121005))

(assert (=> b!107581 d!29841))

(declare-fun b!107935 () Bool)

(declare-fun e!70272 () Bool)

(declare-fun call!11450 () Bool)

(assert (=> b!107935 (= e!70272 call!11450)))

(declare-fun b!107936 () Bool)

(declare-fun e!70273 () Bool)

(declare-fun contains!837 (List!1626 (_ BitVec 64)) Bool)

(assert (=> b!107936 (= e!70273 (contains!837 Nil!1623 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun c!18936 () Bool)

(declare-fun bm!11447 () Bool)

(assert (=> bm!11447 (= call!11450 (arrayNoDuplicates!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)))))

(declare-fun b!107938 () Bool)

(assert (=> b!107938 (= e!70272 call!11450)))

(declare-fun b!107939 () Bool)

(declare-fun e!70270 () Bool)

(declare-fun e!70271 () Bool)

(assert (=> b!107939 (= e!70270 e!70271)))

(declare-fun res!53543 () Bool)

(assert (=> b!107939 (=> (not res!53543) (not e!70271))))

(assert (=> b!107939 (= res!53543 (not e!70273))))

(declare-fun res!53541 () Bool)

(assert (=> b!107939 (=> (not res!53541) (not e!70273))))

(assert (=> b!107939 (= res!53541 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun d!29843 () Bool)

(declare-fun res!53542 () Bool)

(assert (=> d!29843 (=> res!53542 e!70270)))

(assert (=> d!29843 (= res!53542 (bvsge from!355 (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!29843 (= (arrayNoDuplicates!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) from!355 Nil!1623) e!70270)))

(declare-fun b!107937 () Bool)

(assert (=> b!107937 (= e!70271 e!70272)))

(assert (=> b!107937 (= c!18936 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!29843 (not res!53542)) b!107939))

(assert (= (and b!107939 res!53541) b!107936))

(assert (= (and b!107939 res!53543) b!107937))

(assert (= (and b!107937 c!18936) b!107938))

(assert (= (and b!107937 (not c!18936)) b!107935))

(assert (= (or b!107938 b!107935) bm!11447))

(assert (=> b!107936 m!120979))

(assert (=> b!107936 m!120979))

(declare-fun m!121299 () Bool)

(assert (=> b!107936 m!121299))

(assert (=> bm!11447 m!120979))

(declare-fun m!121301 () Bool)

(assert (=> bm!11447 m!121301))

(assert (=> b!107939 m!120979))

(assert (=> b!107939 m!120979))

(declare-fun m!121303 () Bool)

(assert (=> b!107939 m!121303))

(assert (=> b!107937 m!120979))

(assert (=> b!107937 m!120979))

(assert (=> b!107937 m!121303))

(assert (=> b!107581 d!29843))

(declare-fun d!29845 () Bool)

(declare-fun res!53550 () Bool)

(declare-fun e!70276 () Bool)

(assert (=> d!29845 (=> (not res!53550) (not e!70276))))

(declare-fun simpleValid!75 (LongMapFixedSize!912) Bool)

(assert (=> d!29845 (= res!53550 (simpleValid!75 newMap!16))))

(assert (=> d!29845 (= (valid!426 newMap!16) e!70276)))

(declare-fun b!107946 () Bool)

(declare-fun res!53551 () Bool)

(assert (=> b!107946 (=> (not res!53551) (not e!70276))))

(declare-fun arrayCountValidKeys!0 (array!4375 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!107946 (= res!53551 (= (arrayCountValidKeys!0 (_keys!4316 newMap!16) #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) (_size!505 newMap!16)))))

(declare-fun b!107947 () Bool)

(declare-fun res!53552 () Bool)

(assert (=> b!107947 (=> (not res!53552) (not e!70276))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4375 (_ BitVec 32)) Bool)

(assert (=> b!107947 (= res!53552 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun b!107948 () Bool)

(assert (=> b!107948 (= e!70276 (arrayNoDuplicates!0 (_keys!4316 newMap!16) #b00000000000000000000000000000000 Nil!1623))))

(assert (= (and d!29845 res!53550) b!107946))

(assert (= (and b!107946 res!53551) b!107947))

(assert (= (and b!107947 res!53552) b!107948))

(declare-fun m!121305 () Bool)

(assert (=> d!29845 m!121305))

(declare-fun m!121307 () Bool)

(assert (=> b!107946 m!121307))

(declare-fun m!121309 () Bool)

(assert (=> b!107947 m!121309))

(declare-fun m!121311 () Bool)

(assert (=> b!107948 m!121311))

(assert (=> b!107577 d!29845))

(declare-fun condMapEmpty!3983 () Bool)

(declare-fun mapDefault!3983 () ValueCell!1002)

(assert (=> mapNonEmpty!3973 (= condMapEmpty!3983 (= mapRest!3974 ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3983)))))

(declare-fun e!70281 () Bool)

(declare-fun mapRes!3983 () Bool)

(assert (=> mapNonEmpty!3973 (= tp!9979 (and e!70281 mapRes!3983))))

(declare-fun b!107955 () Bool)

(declare-fun e!70282 () Bool)

(assert (=> b!107955 (= e!70282 tp_is_empty!2691)))

(declare-fun b!107956 () Bool)

(assert (=> b!107956 (= e!70281 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3983 () Bool)

(assert (=> mapIsEmpty!3983 mapRes!3983))

(declare-fun mapNonEmpty!3983 () Bool)

(declare-fun tp!9995 () Bool)

(assert (=> mapNonEmpty!3983 (= mapRes!3983 (and tp!9995 e!70282))))

(declare-fun mapKey!3983 () (_ BitVec 32))

(declare-fun mapRest!3983 () (Array (_ BitVec 32) ValueCell!1002))

(declare-fun mapValue!3983 () ValueCell!1002)

(assert (=> mapNonEmpty!3983 (= mapRest!3974 (store mapRest!3983 mapKey!3983 mapValue!3983))))

(assert (= (and mapNonEmpty!3973 condMapEmpty!3983) mapIsEmpty!3983))

(assert (= (and mapNonEmpty!3973 (not condMapEmpty!3983)) mapNonEmpty!3983))

(assert (= (and mapNonEmpty!3983 ((_ is ValueCellFull!1002) mapValue!3983)) b!107955))

(assert (= (and mapNonEmpty!3973 ((_ is ValueCellFull!1002) mapDefault!3983)) b!107956))

(declare-fun m!121313 () Bool)

(assert (=> mapNonEmpty!3983 m!121313))

(declare-fun condMapEmpty!3984 () Bool)

(declare-fun mapDefault!3984 () ValueCell!1002)

(assert (=> mapNonEmpty!3974 (= condMapEmpty!3984 (= mapRest!3973 ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3984)))))

(declare-fun e!70283 () Bool)

(declare-fun mapRes!3984 () Bool)

(assert (=> mapNonEmpty!3974 (= tp!9977 (and e!70283 mapRes!3984))))

(declare-fun b!107957 () Bool)

(declare-fun e!70284 () Bool)

(assert (=> b!107957 (= e!70284 tp_is_empty!2691)))

(declare-fun b!107958 () Bool)

(assert (=> b!107958 (= e!70283 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3984 () Bool)

(assert (=> mapIsEmpty!3984 mapRes!3984))

(declare-fun mapNonEmpty!3984 () Bool)

(declare-fun tp!9996 () Bool)

(assert (=> mapNonEmpty!3984 (= mapRes!3984 (and tp!9996 e!70284))))

(declare-fun mapValue!3984 () ValueCell!1002)

(declare-fun mapKey!3984 () (_ BitVec 32))

(declare-fun mapRest!3984 () (Array (_ BitVec 32) ValueCell!1002))

(assert (=> mapNonEmpty!3984 (= mapRest!3973 (store mapRest!3984 mapKey!3984 mapValue!3984))))

(assert (= (and mapNonEmpty!3974 condMapEmpty!3984) mapIsEmpty!3984))

(assert (= (and mapNonEmpty!3974 (not condMapEmpty!3984)) mapNonEmpty!3984))

(assert (= (and mapNonEmpty!3984 ((_ is ValueCellFull!1002) mapValue!3984)) b!107957))

(assert (= (and mapNonEmpty!3974 ((_ is ValueCellFull!1002) mapDefault!3984)) b!107958))

(declare-fun m!121315 () Bool)

(assert (=> mapNonEmpty!3984 m!121315))

(declare-fun b_lambda!4831 () Bool)

(assert (= b_lambda!4829 (or (and b!107580 b_free!2549) (and b!107593 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))))) b_lambda!4831)))

(declare-fun b_lambda!4833 () Bool)

(assert (= b_lambda!4825 (or (and b!107580 b_free!2549) (and b!107593 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))))) b_lambda!4833)))

(declare-fun b_lambda!4835 () Bool)

(assert (= b_lambda!4827 (or (and b!107580 b_free!2549) (and b!107593 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))))) b_lambda!4835)))

(check-sat (not b!107703) (not b!107948) (not bm!11427) (not b!107936) (not b_lambda!4823) (not bm!11425) b_and!6669 (not d!29809) (not b!107765) (not bm!11440) (not b!107877) (not bm!11368) (not d!29835) (not d!29813) (not b!107937) (not bm!11366) (not b!107886) (not b!107786) (not b!107700) (not b!107752) (not bm!11351) (not b!107918) (not d!29819) (not b!107910) (not d!29805) (not d!29833) (not mapNonEmpty!3984) (not bm!11433) (not b!107777) (not b!107784) (not b!107695) (not b!107884) (not b!107667) (not b_lambda!4831) (not b!107769) (not b!107764) (not b!107693) (not bm!11447) (not d!29815) (not b_next!2549) (not b!107939) (not d!29831) b_and!6667 (not b_lambda!4835) (not d!29845) (not d!29807) (not b!107698) (not bm!11431) (not b!107665) (not bm!11436) (not b!107708) (not b!107907) (not b!107668) (not b_lambda!4833) (not bm!11444) (not b!107947) (not d!29827) (not b!107760) (not b!107705) (not b!107707) (not mapNonEmpty!3983) (not b!107878) (not b!107923) (not d!29811) (not bm!11422) (not bm!11432) (not b!107890) (not bm!11369) (not b!107706) (not bm!11435) (not b!107701) (not b!107666) (not b!107767) (not b!107768) (not bm!11371) (not d!29821) (not d!29837) (not b!107751) (not d!29841) (not b!107696) (not b_next!2551) (not b!107704) (not b!107946) tp_is_empty!2691 (not bm!11424) (not b!107776) (not b!107871) (not bm!11428))
(check-sat b_and!6667 b_and!6669 (not b_next!2549) (not b_next!2551))
(get-model)

(declare-fun d!29847 () Bool)

(declare-fun e!70286 () Bool)

(assert (=> d!29847 e!70286))

(declare-fun res!53553 () Bool)

(assert (=> d!29847 (=> res!53553 e!70286)))

(declare-fun lt!55445 () Bool)

(assert (=> d!29847 (= res!53553 (not lt!55445))))

(declare-fun lt!55446 () Bool)

(assert (=> d!29847 (= lt!55445 lt!55446)))

(declare-fun lt!55444 () Unit!3321)

(declare-fun e!70285 () Unit!3321)

(assert (=> d!29847 (= lt!55444 e!70285)))

(declare-fun c!18937 () Bool)

(assert (=> d!29847 (= c!18937 lt!55446)))

(assert (=> d!29847 (= lt!55446 (containsKey!161 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!29847 (= (contains!834 lt!55258 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!55445)))

(declare-fun b!107959 () Bool)

(declare-fun lt!55447 () Unit!3321)

(assert (=> b!107959 (= e!70285 lt!55447)))

(assert (=> b!107959 (= lt!55447 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107959 (isDefined!110 (getValueByKey!157 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!107960 () Bool)

(declare-fun Unit!3333 () Unit!3321)

(assert (=> b!107960 (= e!70285 Unit!3333)))

(declare-fun b!107961 () Bool)

(assert (=> b!107961 (= e!70286 (isDefined!110 (getValueByKey!157 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!29847 c!18937) b!107959))

(assert (= (and d!29847 (not c!18937)) b!107960))

(assert (= (and d!29847 (not res!53553)) b!107961))

(assert (=> d!29847 m!121117))

(declare-fun m!121317 () Bool)

(assert (=> d!29847 m!121317))

(assert (=> b!107959 m!121117))

(declare-fun m!121319 () Bool)

(assert (=> b!107959 m!121319))

(assert (=> b!107959 m!121117))

(declare-fun m!121321 () Bool)

(assert (=> b!107959 m!121321))

(assert (=> b!107959 m!121321))

(declare-fun m!121323 () Bool)

(assert (=> b!107959 m!121323))

(assert (=> b!107961 m!121117))

(assert (=> b!107961 m!121321))

(assert (=> b!107961 m!121321))

(assert (=> b!107961 m!121323))

(assert (=> b!107696 d!29847))

(assert (=> b!107923 d!29839))

(declare-fun d!29849 () Bool)

(declare-fun c!18942 () Bool)

(assert (=> d!29849 (= c!18942 (and ((_ is Cons!1621) (toList!808 lt!55236)) (= (_1!1225 (h!2219 (toList!808 lt!55236))) (_1!1225 lt!55183))))))

(declare-fun e!70291 () Option!163)

(assert (=> d!29849 (= (getValueByKey!157 (toList!808 lt!55236) (_1!1225 lt!55183)) e!70291)))

(declare-fun b!107971 () Bool)

(declare-fun e!70292 () Option!163)

(assert (=> b!107971 (= e!70291 e!70292)))

(declare-fun c!18943 () Bool)

(assert (=> b!107971 (= c!18943 (and ((_ is Cons!1621) (toList!808 lt!55236)) (not (= (_1!1225 (h!2219 (toList!808 lt!55236))) (_1!1225 lt!55183)))))))

(declare-fun b!107972 () Bool)

(assert (=> b!107972 (= e!70292 (getValueByKey!157 (t!5741 (toList!808 lt!55236)) (_1!1225 lt!55183)))))

(declare-fun b!107970 () Bool)

(assert (=> b!107970 (= e!70291 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55236)))))))

(declare-fun b!107973 () Bool)

(assert (=> b!107973 (= e!70292 None!161)))

(assert (= (and d!29849 c!18942) b!107970))

(assert (= (and d!29849 (not c!18942)) b!107971))

(assert (= (and b!107971 c!18943) b!107972))

(assert (= (and b!107971 (not c!18943)) b!107973))

(declare-fun m!121325 () Bool)

(assert (=> b!107972 m!121325))

(assert (=> b!107665 d!29849))

(declare-fun d!29851 () Bool)

(declare-fun res!53563 () Bool)

(declare-fun e!70295 () Bool)

(assert (=> d!29851 (=> (not res!53563) (not e!70295))))

(assert (=> d!29851 (= res!53563 (validMask!0 (mask!6764 newMap!16)))))

(assert (=> d!29851 (= (simpleValid!75 newMap!16) e!70295)))

(declare-fun b!107984 () Bool)

(declare-fun res!53565 () Bool)

(assert (=> b!107984 (=> (not res!53565) (not e!70295))))

(declare-fun size!2335 (LongMapFixedSize!912) (_ BitVec 32))

(assert (=> b!107984 (= res!53565 (= (size!2335 newMap!16) (bvadd (_size!505 newMap!16) (bvsdiv (bvadd (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!107983 () Bool)

(declare-fun res!53564 () Bool)

(assert (=> b!107983 (=> (not res!53564) (not e!70295))))

(assert (=> b!107983 (= res!53564 (bvsge (size!2335 newMap!16) (_size!505 newMap!16)))))

(declare-fun b!107985 () Bool)

(assert (=> b!107985 (= e!70295 (and (bvsge (extraKeys!2407 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2407 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!505 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!107982 () Bool)

(declare-fun res!53562 () Bool)

(assert (=> b!107982 (=> (not res!53562) (not e!70295))))

(assert (=> b!107982 (= res!53562 (and (= (size!2332 (_values!2589 newMap!16)) (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001)) (= (size!2331 (_keys!4316 newMap!16)) (size!2332 (_values!2589 newMap!16))) (bvsge (_size!505 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!505 newMap!16) (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001))))))

(assert (= (and d!29851 res!53563) b!107982))

(assert (= (and b!107982 res!53562) b!107983))

(assert (= (and b!107983 res!53564) b!107984))

(assert (= (and b!107984 res!53565) b!107985))

(declare-fun m!121327 () Bool)

(assert (=> d!29851 m!121327))

(declare-fun m!121329 () Bool)

(assert (=> b!107984 m!121329))

(assert (=> b!107983 m!121329))

(assert (=> d!29845 d!29851))

(assert (=> d!29837 d!29843))

(declare-fun d!29853 () Bool)

(assert (=> d!29853 (arrayNoDuplicates!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) from!355 Nil!1623)))

(assert (=> d!29853 true))

(declare-fun _$71!150 () Unit!3321)

(assert (=> d!29853 (= (choose!39 (_keys!4316 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!150)))

(declare-fun bs!4435 () Bool)

(assert (= bs!4435 d!29853))

(assert (=> bs!4435 m!121001))

(assert (=> d!29837 d!29853))

(assert (=> bm!11424 d!29819))

(declare-fun bm!11450 () Bool)

(declare-fun call!11453 () Bool)

(assert (=> bm!11450 (= call!11453 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun d!29855 () Bool)

(declare-fun res!53571 () Bool)

(declare-fun e!70303 () Bool)

(assert (=> d!29855 (=> res!53571 e!70303)))

(assert (=> d!29855 (= res!53571 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(assert (=> d!29855 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 newMap!16) (mask!6764 newMap!16)) e!70303)))

(declare-fun b!107994 () Bool)

(declare-fun e!70302 () Bool)

(assert (=> b!107994 (= e!70302 call!11453)))

(declare-fun b!107995 () Bool)

(declare-fun e!70304 () Bool)

(assert (=> b!107995 (= e!70302 e!70304)))

(declare-fun lt!55454 () (_ BitVec 64))

(assert (=> b!107995 (= lt!55454 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55456 () Unit!3321)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4375 (_ BitVec 64) (_ BitVec 32)) Unit!3321)

(assert (=> b!107995 (= lt!55456 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4316 newMap!16) lt!55454 #b00000000000000000000000000000000))))

(assert (=> b!107995 (arrayContainsKey!0 (_keys!4316 newMap!16) lt!55454 #b00000000000000000000000000000000)))

(declare-fun lt!55455 () Unit!3321)

(assert (=> b!107995 (= lt!55455 lt!55456)))

(declare-fun res!53570 () Bool)

(assert (=> b!107995 (= res!53570 (= (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (_keys!4316 newMap!16) (mask!6764 newMap!16)) (Found!260 #b00000000000000000000000000000000)))))

(assert (=> b!107995 (=> (not res!53570) (not e!70304))))

(declare-fun b!107996 () Bool)

(assert (=> b!107996 (= e!70304 call!11453)))

(declare-fun b!107997 () Bool)

(assert (=> b!107997 (= e!70303 e!70302)))

(declare-fun c!18946 () Bool)

(assert (=> b!107997 (= c!18946 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!29855 (not res!53571)) b!107997))

(assert (= (and b!107997 c!18946) b!107995))

(assert (= (and b!107997 (not c!18946)) b!107994))

(assert (= (and b!107995 res!53570) b!107996))

(assert (= (or b!107996 b!107994) bm!11450))

(declare-fun m!121331 () Bool)

(assert (=> bm!11450 m!121331))

(declare-fun m!121333 () Bool)

(assert (=> b!107995 m!121333))

(declare-fun m!121335 () Bool)

(assert (=> b!107995 m!121335))

(declare-fun m!121337 () Bool)

(assert (=> b!107995 m!121337))

(assert (=> b!107995 m!121333))

(declare-fun m!121339 () Bool)

(assert (=> b!107995 m!121339))

(assert (=> b!107997 m!121333))

(assert (=> b!107997 m!121333))

(declare-fun m!121341 () Bool)

(assert (=> b!107997 m!121341))

(assert (=> b!107947 d!29855))

(declare-fun d!29857 () Bool)

(assert (=> d!29857 (= (+!148 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55432 lt!55184 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55459 () Unit!3321)

(declare-fun choose!669 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 V!3235 Int) Unit!3321)

(assert (=> d!29857 (= lt!55459 (choose!669 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55432 (zeroValue!2479 newMap!16) lt!55184 (minValue!2479 newMap!16) (defaultEntry!2606 newMap!16)))))

(assert (=> d!29857 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29857 (= (lemmaChangeZeroKeyThenAddPairToListMap!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55432 (zeroValue!2479 newMap!16) lt!55184 (minValue!2479 newMap!16) (defaultEntry!2606 newMap!16)) lt!55459)))

(declare-fun bs!4436 () Bool)

(assert (= bs!4436 d!29857))

(declare-fun m!121343 () Bool)

(assert (=> bs!4436 m!121343))

(declare-fun m!121345 () Bool)

(assert (=> bs!4436 m!121345))

(assert (=> bs!4436 m!121327))

(assert (=> bs!4436 m!121175))

(declare-fun m!121347 () Bool)

(assert (=> bs!4436 m!121347))

(assert (=> bs!4436 m!121175))

(assert (=> b!107890 d!29857))

(declare-fun d!29859 () Bool)

(declare-fun c!18947 () Bool)

(assert (=> d!29859 (= c!18947 (and ((_ is Cons!1621) (toList!808 lt!55240)) (= (_1!1225 (h!2219 (toList!808 lt!55240))) (_1!1225 lt!55183))))))

(declare-fun e!70305 () Option!163)

(assert (=> d!29859 (= (getValueByKey!157 (toList!808 lt!55240) (_1!1225 lt!55183)) e!70305)))

(declare-fun b!107999 () Bool)

(declare-fun e!70306 () Option!163)

(assert (=> b!107999 (= e!70305 e!70306)))

(declare-fun c!18948 () Bool)

(assert (=> b!107999 (= c!18948 (and ((_ is Cons!1621) (toList!808 lt!55240)) (not (= (_1!1225 (h!2219 (toList!808 lt!55240))) (_1!1225 lt!55183)))))))

(declare-fun b!108000 () Bool)

(assert (=> b!108000 (= e!70306 (getValueByKey!157 (t!5741 (toList!808 lt!55240)) (_1!1225 lt!55183)))))

(declare-fun b!107998 () Bool)

(assert (=> b!107998 (= e!70305 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55240)))))))

(declare-fun b!108001 () Bool)

(assert (=> b!108001 (= e!70306 None!161)))

(assert (= (and d!29859 c!18947) b!107998))

(assert (= (and d!29859 (not c!18947)) b!107999))

(assert (= (and b!107999 c!18948) b!108000))

(assert (= (and b!107999 (not c!18948)) b!108001))

(declare-fun m!121349 () Bool)

(assert (=> b!108000 m!121349))

(assert (=> b!107667 d!29859))

(declare-fun d!29861 () Bool)

(assert (=> d!29861 (= (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107698 d!29861))

(declare-fun d!29863 () Bool)

(assert (=> d!29863 (= (+!148 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55410 (zeroValue!2479 newMap!16) lt!55184 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55462 () Unit!3321)

(declare-fun choose!670 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 V!3235 Int) Unit!3321)

(assert (=> d!29863 (= lt!55462 (choose!670 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55410 (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) lt!55184 (defaultEntry!2606 newMap!16)))))

(assert (=> d!29863 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29863 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55410 (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) lt!55184 (defaultEntry!2606 newMap!16)) lt!55462)))

(declare-fun bs!4437 () Bool)

(assert (= bs!4437 d!29863))

(assert (=> bs!4437 m!121327))

(assert (=> bs!4437 m!121175))

(declare-fun m!121351 () Bool)

(assert (=> bs!4437 m!121351))

(declare-fun m!121353 () Bool)

(assert (=> bs!4437 m!121353))

(declare-fun m!121355 () Bool)

(assert (=> bs!4437 m!121355))

(assert (=> bs!4437 m!121175))

(assert (=> b!107878 d!29863))

(declare-fun lt!55549 () SeekEntryResult!260)

(declare-fun call!11462 () Bool)

(declare-fun c!18957 () Bool)

(declare-fun bm!11459 () Bool)

(declare-fun c!18958 () Bool)

(declare-fun lt!55523 () SeekEntryResult!260)

(assert (=> bm!11459 (= call!11462 (inRange!0 (ite c!18958 (index!3190 lt!55549) (ite c!18957 (index!3189 lt!55523) (index!3192 lt!55523))) (mask!6764 newMap!16)))))

(declare-fun b!108036 () Bool)

(declare-fun e!70330 () Bool)

(declare-fun call!11463 () Bool)

(assert (=> b!108036 (= e!70330 (not call!11463))))

(declare-fun b!108037 () Bool)

(declare-fun e!70326 () Bool)

(declare-fun lt!55533 () tuple2!2430)

(assert (=> b!108037 (= e!70326 (= (map!1294 (_2!1226 lt!55533)) (+!148 (map!1294 newMap!16) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!108038 () Bool)

(declare-fun e!70328 () Unit!3321)

(declare-fun Unit!3334 () Unit!3321)

(assert (=> b!108038 (= e!70328 Unit!3334)))

(declare-fun lt!55528 () Unit!3321)

(assert (=> b!108038 (= lt!55528 (lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)))))

(declare-fun call!11464 () SeekEntryResult!260)

(assert (=> b!108038 (= lt!55549 call!11464)))

(declare-fun res!53595 () Bool)

(assert (=> b!108038 (= res!53595 ((_ is Found!260) lt!55549))))

(declare-fun e!70323 () Bool)

(assert (=> b!108038 (=> (not res!53595) (not e!70323))))

(assert (=> b!108038 e!70323))

(declare-fun lt!55548 () Unit!3321)

(assert (=> b!108038 (= lt!55548 lt!55528)))

(assert (=> b!108038 false))

(declare-fun b!108039 () Bool)

(declare-fun res!53596 () Bool)

(assert (=> b!108039 (= res!53596 call!11462)))

(assert (=> b!108039 (=> (not res!53596) (not e!70323))))

(declare-fun b!108040 () Bool)

(declare-fun e!70324 () Bool)

(assert (=> b!108040 (= e!70324 e!70330)))

(declare-fun res!53598 () Bool)

(declare-fun call!11465 () Bool)

(assert (=> b!108040 (= res!53598 call!11465)))

(assert (=> b!108040 (=> (not res!53598) (not e!70330))))

(declare-fun b!108041 () Bool)

(assert (=> b!108041 (= e!70323 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55549)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108043 () Bool)

(declare-fun res!53591 () Bool)

(assert (=> b!108043 (= res!53591 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3192 lt!55523)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108043 (=> (not res!53591) (not e!70330))))

(declare-fun b!108044 () Bool)

(assert (=> b!108044 (= e!70324 ((_ is Undefined!260) lt!55523))))

(declare-fun b!108045 () Bool)

(declare-fun e!70325 () Unit!3321)

(declare-fun Unit!3335 () Unit!3321)

(assert (=> b!108045 (= e!70325 Unit!3335)))

(declare-fun lt!55550 () Unit!3321)

(declare-fun lemmaArrayContainsKeyThenInListMap!31 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) (_ BitVec 32) Int) Unit!3321)

(assert (=> b!108045 (= lt!55550 (lemmaArrayContainsKeyThenInListMap!31 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(assert (=> b!108045 (contains!834 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))

(declare-fun lt!55531 () Unit!3321)

(assert (=> b!108045 (= lt!55531 lt!55550)))

(assert (=> b!108045 false))

(declare-fun b!108046 () Bool)

(declare-fun e!70329 () Bool)

(assert (=> b!108046 (= e!70329 (not call!11463))))

(declare-fun bm!11460 () Bool)

(assert (=> bm!11460 (= call!11463 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!108047 () Bool)

(declare-fun res!53597 () Bool)

(assert (=> b!108047 (=> (not res!53597) (not e!70329))))

(assert (=> b!108047 (= res!53597 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3189 lt!55523)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11461 () Bool)

(assert (=> bm!11461 (= call!11464 (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun b!108048 () Bool)

(declare-fun lt!55540 () Unit!3321)

(assert (=> b!108048 (= e!70328 lt!55540)))

(assert (=> b!108048 (= lt!55540 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)))))

(assert (=> b!108048 (= lt!55523 call!11464)))

(assert (=> b!108048 (= c!18957 ((_ is MissingZero!260) lt!55523))))

(declare-fun e!70327 () Bool)

(assert (=> b!108048 e!70327))

(declare-fun b!108049 () Bool)

(declare-fun res!53590 () Bool)

(assert (=> b!108049 (=> (not res!53590) (not e!70326))))

(assert (=> b!108049 (= res!53590 (contains!834 (map!1294 (_2!1226 lt!55533)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun bm!11462 () Bool)

(assert (=> bm!11462 (= call!11465 call!11462)))

(declare-fun b!108042 () Bool)

(declare-fun res!53594 () Bool)

(assert (=> b!108042 (=> (not res!53594) (not e!70329))))

(assert (=> b!108042 (= res!53594 call!11465)))

(assert (=> b!108042 (= e!70327 e!70329)))

(declare-fun d!29865 () Bool)

(assert (=> d!29865 e!70326))

(declare-fun res!53592 () Bool)

(assert (=> d!29865 (=> (not res!53592) (not e!70326))))

(assert (=> d!29865 (= res!53592 (_1!1226 lt!55533))))

(assert (=> d!29865 (= lt!55533 (tuple2!2431 true (LongMapFixedSize!913 (defaultEntry!2606 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (bvadd (_size!505 newMap!16) #b00000000000000000000000000000001) (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (_vacant!505 newMap!16))))))

(declare-fun lt!55534 () Unit!3321)

(declare-fun lt!55551 () Unit!3321)

(assert (=> d!29865 (= lt!55534 lt!55551)))

(declare-fun lt!55542 () array!4375)

(declare-fun lt!55537 () array!4377)

(assert (=> d!29865 (contains!834 (getCurrentListMap!493 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411))))))

(assert (=> d!29865 (= lt!55551 (lemmaValidKeyInArrayIsInListMap!109 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (defaultEntry!2606 newMap!16)))))

(assert (=> d!29865 (= lt!55537 (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))))))

(assert (=> d!29865 (= lt!55542 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun lt!55525 () Unit!3321)

(declare-fun lt!55529 () Unit!3321)

(assert (=> d!29865 (= lt!55525 lt!55529)))

(declare-fun lt!55526 () array!4375)

(assert (=> d!29865 (= (arrayCountValidKeys!0 lt!55526 (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (bvadd (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4375 (_ BitVec 32)) Unit!3321)

(assert (=> d!29865 (= lt!55529 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!55526 (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411))))))

(assert (=> d!29865 (= lt!55526 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun lt!55552 () Unit!3321)

(declare-fun lt!55544 () Unit!3321)

(assert (=> d!29865 (= lt!55552 lt!55544)))

(declare-fun lt!55536 () array!4375)

(assert (=> d!29865 (arrayContainsKey!0 lt!55536 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!29865 (= lt!55544 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!55536 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411))))))

(assert (=> d!29865 (= lt!55536 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun lt!55545 () Unit!3321)

(declare-fun lt!55547 () Unit!3321)

(assert (=> d!29865 (= lt!55545 lt!55547)))

(assert (=> d!29865 (= (+!148 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (getCurrentListMap!493 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!31 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) (_ BitVec 64) V!3235 Int) Unit!3321)

(assert (=> d!29865 (= lt!55547 (lemmaAddValidKeyToArrayThenAddPairToListMap!31 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55524 () Unit!3321)

(declare-fun lt!55539 () Unit!3321)

(assert (=> d!29865 (= lt!55524 lt!55539)))

(assert (=> d!29865 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (mask!6764 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4375 (_ BitVec 32) (_ BitVec 32)) Unit!3321)

(assert (=> d!29865 (= lt!55539 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (mask!6764 newMap!16)))))

(declare-fun lt!55535 () Unit!3321)

(declare-fun lt!55530 () Unit!3321)

(assert (=> d!29865 (= lt!55535 lt!55530)))

(assert (=> d!29865 (= (arrayCountValidKeys!0 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4316 newMap!16) #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4375 (_ BitVec 32) (_ BitVec 64)) Unit!3321)

(assert (=> d!29865 (= lt!55530 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4316 newMap!16) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!55543 () Unit!3321)

(declare-fun lt!55541 () Unit!3321)

(assert (=> d!29865 (= lt!55543 lt!55541)))

(declare-fun lt!55538 () (_ BitVec 32))

(declare-fun lt!55546 () List!1626)

(assert (=> d!29865 (arrayNoDuplicates!0 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) lt!55538 lt!55546)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4375 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1626) Unit!3321)

(assert (=> d!29865 (= lt!55541 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4316 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) lt!55538 lt!55546))))

(assert (=> d!29865 (= lt!55546 Nil!1623)))

(assert (=> d!29865 (= lt!55538 #b00000000000000000000000000000000)))

(declare-fun lt!55527 () Unit!3321)

(assert (=> d!29865 (= lt!55527 e!70325)))

(declare-fun c!18960 () Bool)

(assert (=> d!29865 (= c!18960 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!55532 () Unit!3321)

(assert (=> d!29865 (= lt!55532 e!70328)))

(assert (=> d!29865 (= c!18958 (contains!834 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!29865 (valid!426 newMap!16)))

(assert (=> d!29865 (= (updateHelperNewKey!48 newMap!16 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411))) lt!55533)))

(declare-fun b!108050 () Bool)

(declare-fun res!53593 () Bool)

(assert (=> b!108050 (=> (not res!53593) (not e!70326))))

(assert (=> b!108050 (= res!53593 (valid!426 (_2!1226 lt!55533)))))

(declare-fun b!108051 () Bool)

(declare-fun c!18959 () Bool)

(assert (=> b!108051 (= c!18959 ((_ is MissingVacant!260) lt!55523))))

(assert (=> b!108051 (= e!70327 e!70324)))

(declare-fun b!108052 () Bool)

(declare-fun Unit!3336 () Unit!3321)

(assert (=> b!108052 (= e!70325 Unit!3336)))

(assert (= (and d!29865 c!18958) b!108038))

(assert (= (and d!29865 (not c!18958)) b!108048))

(assert (= (and b!108038 res!53595) b!108039))

(assert (= (and b!108039 res!53596) b!108041))

(assert (= (and b!108048 c!18957) b!108042))

(assert (= (and b!108048 (not c!18957)) b!108051))

(assert (= (and b!108042 res!53594) b!108047))

(assert (= (and b!108047 res!53597) b!108046))

(assert (= (and b!108051 c!18959) b!108040))

(assert (= (and b!108051 (not c!18959)) b!108044))

(assert (= (and b!108040 res!53598) b!108043))

(assert (= (and b!108043 res!53591) b!108036))

(assert (= (or b!108042 b!108040) bm!11462))

(assert (= (or b!108046 b!108036) bm!11460))

(assert (= (or b!108039 bm!11462) bm!11459))

(assert (= (or b!108038 b!108048) bm!11461))

(assert (= (and d!29865 c!18960) b!108045))

(assert (= (and d!29865 (not c!18960)) b!108052))

(assert (= (and d!29865 res!53592) b!108050))

(assert (= (and b!108050 res!53593) b!108049))

(assert (= (and b!108049 res!53590) b!108037))

(assert (=> b!108048 m!120979))

(assert (=> b!108048 m!121257))

(declare-fun m!121357 () Bool)

(assert (=> d!29865 m!121357))

(declare-fun m!121359 () Bool)

(assert (=> d!29865 m!121359))

(declare-fun m!121361 () Bool)

(assert (=> d!29865 m!121361))

(assert (=> d!29865 m!120979))

(declare-fun m!121363 () Bool)

(assert (=> d!29865 m!121363))

(assert (=> d!29865 m!120979))

(declare-fun m!121365 () Bool)

(assert (=> d!29865 m!121365))

(assert (=> d!29865 m!121175))

(declare-fun m!121367 () Bool)

(assert (=> d!29865 m!121367))

(declare-fun m!121369 () Bool)

(assert (=> d!29865 m!121369))

(declare-fun m!121371 () Bool)

(assert (=> d!29865 m!121371))

(declare-fun m!121373 () Bool)

(assert (=> d!29865 m!121373))

(declare-fun m!121375 () Bool)

(assert (=> d!29865 m!121375))

(assert (=> d!29865 m!121361))

(declare-fun m!121377 () Bool)

(assert (=> d!29865 m!121377))

(assert (=> d!29865 m!121175))

(assert (=> d!29865 m!120979))

(declare-fun m!121379 () Bool)

(assert (=> d!29865 m!121379))

(declare-fun m!121381 () Bool)

(assert (=> d!29865 m!121381))

(assert (=> d!29865 m!120979))

(declare-fun m!121383 () Bool)

(assert (=> d!29865 m!121383))

(assert (=> d!29865 m!120979))

(assert (=> d!29865 m!121241))

(declare-fun m!121385 () Bool)

(assert (=> d!29865 m!121385))

(assert (=> d!29865 m!121175))

(assert (=> d!29865 m!120979))

(declare-fun m!121387 () Bool)

(assert (=> d!29865 m!121387))

(declare-fun m!121389 () Bool)

(assert (=> d!29865 m!121389))

(assert (=> d!29865 m!121019))

(assert (=> d!29865 m!120979))

(declare-fun m!121391 () Bool)

(assert (=> d!29865 m!121391))

(assert (=> d!29865 m!120979))

(declare-fun m!121393 () Bool)

(assert (=> d!29865 m!121393))

(declare-fun m!121395 () Bool)

(assert (=> d!29865 m!121395))

(assert (=> d!29865 m!121307))

(assert (=> d!29865 m!121375))

(assert (=> b!108038 m!120979))

(assert (=> b!108038 m!121245))

(declare-fun m!121397 () Bool)

(assert (=> b!108047 m!121397))

(declare-fun m!121399 () Bool)

(assert (=> b!108043 m!121399))

(assert (=> bm!11461 m!120979))

(assert (=> bm!11461 m!121239))

(declare-fun m!121401 () Bool)

(assert (=> b!108049 m!121401))

(assert (=> b!108049 m!121401))

(assert (=> b!108049 m!120979))

(declare-fun m!121403 () Bool)

(assert (=> b!108049 m!121403))

(declare-fun m!121405 () Bool)

(assert (=> b!108041 m!121405))

(assert (=> b!108045 m!120979))

(declare-fun m!121407 () Bool)

(assert (=> b!108045 m!121407))

(assert (=> b!108045 m!121175))

(assert (=> b!108045 m!121175))

(assert (=> b!108045 m!120979))

(assert (=> b!108045 m!121387))

(declare-fun m!121409 () Bool)

(assert (=> b!108050 m!121409))

(declare-fun m!121411 () Bool)

(assert (=> bm!11459 m!121411))

(assert (=> bm!11460 m!120979))

(assert (=> bm!11460 m!121241))

(assert (=> b!108037 m!121401))

(assert (=> b!108037 m!121029))

(assert (=> b!108037 m!121029))

(declare-fun m!121413 () Bool)

(assert (=> b!108037 m!121413))

(assert (=> bm!11425 d!29865))

(declare-fun d!29867 () Bool)

(declare-fun isEmpty!374 (List!1625) Bool)

(assert (=> d!29867 (= (isEmpty!373 lt!55258) (isEmpty!374 (toList!808 lt!55258)))))

(declare-fun bs!4438 () Bool)

(assert (= bs!4438 d!29867))

(declare-fun m!121415 () Bool)

(assert (=> bs!4438 m!121415))

(assert (=> b!107700 d!29867))

(assert (=> d!29821 d!29817))

(declare-fun d!29869 () Bool)

(declare-fun e!70332 () Bool)

(assert (=> d!29869 e!70332))

(declare-fun res!53599 () Bool)

(assert (=> d!29869 (=> res!53599 e!70332)))

(declare-fun lt!55554 () Bool)

(assert (=> d!29869 (= res!53599 (not lt!55554))))

(declare-fun lt!55555 () Bool)

(assert (=> d!29869 (= lt!55554 lt!55555)))

(declare-fun lt!55553 () Unit!3321)

(declare-fun e!70331 () Unit!3321)

(assert (=> d!29869 (= lt!55553 e!70331)))

(declare-fun c!18961 () Bool)

(assert (=> d!29869 (= c!18961 lt!55555)))

(assert (=> d!29869 (= lt!55555 (containsKey!161 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29869 (= (contains!834 lt!55326 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55554)))

(declare-fun b!108053 () Bool)

(declare-fun lt!55556 () Unit!3321)

(assert (=> b!108053 (= e!70331 lt!55556)))

(assert (=> b!108053 (= lt!55556 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108053 (isDefined!110 (getValueByKey!157 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108054 () Bool)

(declare-fun Unit!3337 () Unit!3321)

(assert (=> b!108054 (= e!70331 Unit!3337)))

(declare-fun b!108055 () Bool)

(assert (=> b!108055 (= e!70332 (isDefined!110 (getValueByKey!157 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29869 c!18961) b!108053))

(assert (= (and d!29869 (not c!18961)) b!108054))

(assert (= (and d!29869 (not res!53599)) b!108055))

(declare-fun m!121417 () Bool)

(assert (=> d!29869 m!121417))

(declare-fun m!121419 () Bool)

(assert (=> b!108053 m!121419))

(declare-fun m!121421 () Bool)

(assert (=> b!108053 m!121421))

(assert (=> b!108053 m!121421))

(declare-fun m!121423 () Bool)

(assert (=> b!108053 m!121423))

(assert (=> b!108055 m!121421))

(assert (=> b!108055 m!121421))

(assert (=> b!108055 m!121423))

(assert (=> bm!11371 d!29869))

(declare-fun d!29871 () Bool)

(declare-fun c!18962 () Bool)

(assert (=> d!29871 (= c!18962 ((_ is ValueCellFull!1002) (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!70333 () V!3235)

(assert (=> d!29871 (= (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70333)))

(declare-fun b!108056 () Bool)

(assert (=> b!108056 (= e!70333 (get!1342 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108057 () Bool)

(assert (=> b!108057 (= e!70333 (get!1343 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29871 c!18962) b!108056))

(assert (= (and d!29871 (not c!18962)) b!108057))

(assert (=> b!108056 m!121121))

(assert (=> b!108056 m!121015))

(declare-fun m!121425 () Bool)

(assert (=> b!108056 m!121425))

(assert (=> b!108057 m!121121))

(assert (=> b!108057 m!121015))

(declare-fun m!121427 () Bool)

(assert (=> b!108057 m!121427))

(assert (=> b!107704 d!29871))

(declare-fun d!29873 () Bool)

(declare-fun e!70334 () Bool)

(assert (=> d!29873 e!70334))

(declare-fun res!53600 () Bool)

(assert (=> d!29873 (=> (not res!53600) (not e!70334))))

(declare-fun lt!55557 () ListLongMap!1585)

(assert (=> d!29873 (= res!53600 (contains!834 lt!55557 (_1!1225 (tuple2!2429 lt!55263 lt!55262))))))

(declare-fun lt!55559 () List!1625)

(assert (=> d!29873 (= lt!55557 (ListLongMap!1586 lt!55559))))

(declare-fun lt!55558 () Unit!3321)

(declare-fun lt!55560 () Unit!3321)

(assert (=> d!29873 (= lt!55558 lt!55560)))

(assert (=> d!29873 (= (getValueByKey!157 lt!55559 (_1!1225 (tuple2!2429 lt!55263 lt!55262))) (Some!162 (_2!1225 (tuple2!2429 lt!55263 lt!55262))))))

(assert (=> d!29873 (= lt!55560 (lemmaContainsTupThenGetReturnValue!73 lt!55559 (_1!1225 (tuple2!2429 lt!55263 lt!55262)) (_2!1225 (tuple2!2429 lt!55263 lt!55262))))))

(assert (=> d!29873 (= lt!55559 (insertStrictlySorted!76 (toList!808 lt!55261) (_1!1225 (tuple2!2429 lt!55263 lt!55262)) (_2!1225 (tuple2!2429 lt!55263 lt!55262))))))

(assert (=> d!29873 (= (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)) lt!55557)))

(declare-fun b!108058 () Bool)

(declare-fun res!53601 () Bool)

(assert (=> b!108058 (=> (not res!53601) (not e!70334))))

(assert (=> b!108058 (= res!53601 (= (getValueByKey!157 (toList!808 lt!55557) (_1!1225 (tuple2!2429 lt!55263 lt!55262))) (Some!162 (_2!1225 (tuple2!2429 lt!55263 lt!55262)))))))

(declare-fun b!108059 () Bool)

(assert (=> b!108059 (= e!70334 (contains!836 (toList!808 lt!55557) (tuple2!2429 lt!55263 lt!55262)))))

(assert (= (and d!29873 res!53600) b!108058))

(assert (= (and b!108058 res!53601) b!108059))

(declare-fun m!121429 () Bool)

(assert (=> d!29873 m!121429))

(declare-fun m!121431 () Bool)

(assert (=> d!29873 m!121431))

(declare-fun m!121433 () Bool)

(assert (=> d!29873 m!121433))

(declare-fun m!121435 () Bool)

(assert (=> d!29873 m!121435))

(declare-fun m!121437 () Bool)

(assert (=> b!108058 m!121437))

(declare-fun m!121439 () Bool)

(assert (=> b!108059 m!121439))

(assert (=> b!107704 d!29873))

(declare-fun d!29875 () Bool)

(assert (=> d!29875 (not (contains!834 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)) lt!55264))))

(declare-fun lt!55563 () Unit!3321)

(declare-fun choose!671 (ListLongMap!1585 (_ BitVec 64) V!3235 (_ BitVec 64)) Unit!3321)

(assert (=> d!29875 (= lt!55563 (choose!671 lt!55261 lt!55263 lt!55262 lt!55264))))

(declare-fun e!70337 () Bool)

(assert (=> d!29875 e!70337))

(declare-fun res!53604 () Bool)

(assert (=> d!29875 (=> (not res!53604) (not e!70337))))

(assert (=> d!29875 (= res!53604 (not (contains!834 lt!55261 lt!55264)))))

(assert (=> d!29875 (= (addStillNotContains!47 lt!55261 lt!55263 lt!55262 lt!55264) lt!55563)))

(declare-fun b!108063 () Bool)

(assert (=> b!108063 (= e!70337 (not (= lt!55263 lt!55264)))))

(assert (= (and d!29875 res!53604) b!108063))

(assert (=> d!29875 m!121131))

(assert (=> d!29875 m!121131))

(assert (=> d!29875 m!121133))

(declare-fun m!121441 () Bool)

(assert (=> d!29875 m!121441))

(declare-fun m!121443 () Bool)

(assert (=> d!29875 m!121443))

(assert (=> b!107704 d!29875))

(declare-fun d!29877 () Bool)

(declare-fun e!70339 () Bool)

(assert (=> d!29877 e!70339))

(declare-fun res!53605 () Bool)

(assert (=> d!29877 (=> res!53605 e!70339)))

(declare-fun lt!55565 () Bool)

(assert (=> d!29877 (= res!53605 (not lt!55565))))

(declare-fun lt!55566 () Bool)

(assert (=> d!29877 (= lt!55565 lt!55566)))

(declare-fun lt!55564 () Unit!3321)

(declare-fun e!70338 () Unit!3321)

(assert (=> d!29877 (= lt!55564 e!70338)))

(declare-fun c!18963 () Bool)

(assert (=> d!29877 (= c!18963 lt!55566)))

(assert (=> d!29877 (= lt!55566 (containsKey!161 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))) lt!55264))))

(assert (=> d!29877 (= (contains!834 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)) lt!55264) lt!55565)))

(declare-fun b!108064 () Bool)

(declare-fun lt!55567 () Unit!3321)

(assert (=> b!108064 (= e!70338 lt!55567)))

(assert (=> b!108064 (= lt!55567 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))) lt!55264))))

(assert (=> b!108064 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))) lt!55264))))

(declare-fun b!108065 () Bool)

(declare-fun Unit!3338 () Unit!3321)

(assert (=> b!108065 (= e!70338 Unit!3338)))

(declare-fun b!108066 () Bool)

(assert (=> b!108066 (= e!70339 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))) lt!55264)))))

(assert (= (and d!29877 c!18963) b!108064))

(assert (= (and d!29877 (not c!18963)) b!108065))

(assert (= (and d!29877 (not res!53605)) b!108066))

(declare-fun m!121445 () Bool)

(assert (=> d!29877 m!121445))

(declare-fun m!121447 () Bool)

(assert (=> b!108064 m!121447))

(declare-fun m!121449 () Bool)

(assert (=> b!108064 m!121449))

(assert (=> b!108064 m!121449))

(declare-fun m!121451 () Bool)

(assert (=> b!108064 m!121451))

(assert (=> b!108066 m!121449))

(assert (=> b!108066 m!121449))

(assert (=> b!108066 m!121451))

(assert (=> b!107704 d!29877))

(declare-fun d!29879 () Bool)

(declare-fun e!70340 () Bool)

(assert (=> d!29879 e!70340))

(declare-fun res!53606 () Bool)

(assert (=> d!29879 (=> (not res!53606) (not e!70340))))

(declare-fun lt!55568 () ListLongMap!1585)

(assert (=> d!29879 (= res!53606 (contains!834 lt!55568 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!55570 () List!1625)

(assert (=> d!29879 (= lt!55568 (ListLongMap!1586 lt!55570))))

(declare-fun lt!55569 () Unit!3321)

(declare-fun lt!55571 () Unit!3321)

(assert (=> d!29879 (= lt!55569 lt!55571)))

(assert (=> d!29879 (= (getValueByKey!157 lt!55570 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29879 (= lt!55571 (lemmaContainsTupThenGetReturnValue!73 lt!55570 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29879 (= lt!55570 (insertStrictlySorted!76 (toList!808 call!11354) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29879 (= (+!148 call!11354 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!55568)))

(declare-fun b!108067 () Bool)

(declare-fun res!53607 () Bool)

(assert (=> b!108067 (=> (not res!53607) (not e!70340))))

(assert (=> b!108067 (= res!53607 (= (getValueByKey!157 (toList!808 lt!55568) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!108068 () Bool)

(assert (=> b!108068 (= e!70340 (contains!836 (toList!808 lt!55568) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29879 res!53606) b!108067))

(assert (= (and b!108067 res!53607) b!108068))

(declare-fun m!121453 () Bool)

(assert (=> d!29879 m!121453))

(declare-fun m!121455 () Bool)

(assert (=> d!29879 m!121455))

(declare-fun m!121457 () Bool)

(assert (=> d!29879 m!121457))

(declare-fun m!121459 () Bool)

(assert (=> d!29879 m!121459))

(declare-fun m!121461 () Bool)

(assert (=> b!108067 m!121461))

(declare-fun m!121463 () Bool)

(assert (=> b!108068 m!121463))

(assert (=> b!107704 d!29879))

(declare-fun d!29881 () Bool)

(declare-fun res!53608 () Bool)

(declare-fun e!70341 () Bool)

(assert (=> d!29881 (=> (not res!53608) (not e!70341))))

(assert (=> d!29881 (= res!53608 (simpleValid!75 (v!2914 (underlying!367 thiss!992))))))

(assert (=> d!29881 (= (valid!426 (v!2914 (underlying!367 thiss!992))) e!70341)))

(declare-fun b!108069 () Bool)

(declare-fun res!53609 () Bool)

(assert (=> b!108069 (=> (not res!53609) (not e!70341))))

(assert (=> b!108069 (= res!53609 (= (arrayCountValidKeys!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))) (_size!505 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!108070 () Bool)

(declare-fun res!53610 () Bool)

(assert (=> b!108070 (=> (not res!53610) (not e!70341))))

(assert (=> b!108070 (= res!53610 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!108071 () Bool)

(assert (=> b!108071 (= e!70341 (arrayNoDuplicates!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 Nil!1623))))

(assert (= (and d!29881 res!53608) b!108069))

(assert (= (and b!108069 res!53609) b!108070))

(assert (= (and b!108070 res!53610) b!108071))

(declare-fun m!121465 () Bool)

(assert (=> d!29881 m!121465))

(declare-fun m!121467 () Bool)

(assert (=> b!108069 m!121467))

(declare-fun m!121469 () Bool)

(assert (=> b!108070 m!121469))

(declare-fun m!121471 () Bool)

(assert (=> b!108071 m!121471))

(assert (=> d!29827 d!29881))

(declare-fun d!29883 () Bool)

(declare-fun e!70343 () Bool)

(assert (=> d!29883 e!70343))

(declare-fun res!53611 () Bool)

(assert (=> d!29883 (=> res!53611 e!70343)))

(declare-fun lt!55573 () Bool)

(assert (=> d!29883 (= res!53611 (not lt!55573))))

(declare-fun lt!55574 () Bool)

(assert (=> d!29883 (= lt!55573 lt!55574)))

(declare-fun lt!55572 () Unit!3321)

(declare-fun e!70342 () Unit!3321)

(assert (=> d!29883 (= lt!55572 e!70342)))

(declare-fun c!18964 () Bool)

(assert (=> d!29883 (= c!18964 lt!55574)))

(assert (=> d!29883 (= lt!55574 (containsKey!161 (toList!808 lt!55268) (_1!1225 lt!55182)))))

(assert (=> d!29883 (= (contains!834 lt!55268 (_1!1225 lt!55182)) lt!55573)))

(declare-fun b!108072 () Bool)

(declare-fun lt!55575 () Unit!3321)

(assert (=> b!108072 (= e!70342 lt!55575)))

(assert (=> b!108072 (= lt!55575 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55268) (_1!1225 lt!55182)))))

(assert (=> b!108072 (isDefined!110 (getValueByKey!157 (toList!808 lt!55268) (_1!1225 lt!55182)))))

(declare-fun b!108073 () Bool)

(declare-fun Unit!3339 () Unit!3321)

(assert (=> b!108073 (= e!70342 Unit!3339)))

(declare-fun b!108074 () Bool)

(assert (=> b!108074 (= e!70343 (isDefined!110 (getValueByKey!157 (toList!808 lt!55268) (_1!1225 lt!55182))))))

(assert (= (and d!29883 c!18964) b!108072))

(assert (= (and d!29883 (not c!18964)) b!108073))

(assert (= (and d!29883 (not res!53611)) b!108074))

(declare-fun m!121473 () Bool)

(assert (=> d!29883 m!121473))

(declare-fun m!121475 () Bool)

(assert (=> b!108072 m!121475))

(assert (=> b!108072 m!121159))

(assert (=> b!108072 m!121159))

(declare-fun m!121477 () Bool)

(assert (=> b!108072 m!121477))

(assert (=> b!108074 m!121159))

(assert (=> b!108074 m!121159))

(assert (=> b!108074 m!121477))

(assert (=> d!29813 d!29883))

(declare-fun d!29885 () Bool)

(declare-fun c!18965 () Bool)

(assert (=> d!29885 (= c!18965 (and ((_ is Cons!1621) lt!55270) (= (_1!1225 (h!2219 lt!55270)) (_1!1225 lt!55182))))))

(declare-fun e!70344 () Option!163)

(assert (=> d!29885 (= (getValueByKey!157 lt!55270 (_1!1225 lt!55182)) e!70344)))

(declare-fun b!108076 () Bool)

(declare-fun e!70345 () Option!163)

(assert (=> b!108076 (= e!70344 e!70345)))

(declare-fun c!18966 () Bool)

(assert (=> b!108076 (= c!18966 (and ((_ is Cons!1621) lt!55270) (not (= (_1!1225 (h!2219 lt!55270)) (_1!1225 lt!55182)))))))

(declare-fun b!108077 () Bool)

(assert (=> b!108077 (= e!70345 (getValueByKey!157 (t!5741 lt!55270) (_1!1225 lt!55182)))))

(declare-fun b!108075 () Bool)

(assert (=> b!108075 (= e!70344 (Some!162 (_2!1225 (h!2219 lt!55270))))))

(declare-fun b!108078 () Bool)

(assert (=> b!108078 (= e!70345 None!161)))

(assert (= (and d!29885 c!18965) b!108075))

(assert (= (and d!29885 (not c!18965)) b!108076))

(assert (= (and b!108076 c!18966) b!108077))

(assert (= (and b!108076 (not c!18966)) b!108078))

(declare-fun m!121479 () Bool)

(assert (=> b!108077 m!121479))

(assert (=> d!29813 d!29885))

(declare-fun d!29887 () Bool)

(assert (=> d!29887 (= (getValueByKey!157 lt!55270 (_1!1225 lt!55182)) (Some!162 (_2!1225 lt!55182)))))

(declare-fun lt!55578 () Unit!3321)

(declare-fun choose!672 (List!1625 (_ BitVec 64) V!3235) Unit!3321)

(assert (=> d!29887 (= lt!55578 (choose!672 lt!55270 (_1!1225 lt!55182) (_2!1225 lt!55182)))))

(declare-fun e!70348 () Bool)

(assert (=> d!29887 e!70348))

(declare-fun res!53616 () Bool)

(assert (=> d!29887 (=> (not res!53616) (not e!70348))))

(declare-fun isStrictlySorted!310 (List!1625) Bool)

(assert (=> d!29887 (= res!53616 (isStrictlySorted!310 lt!55270))))

(assert (=> d!29887 (= (lemmaContainsTupThenGetReturnValue!73 lt!55270 (_1!1225 lt!55182) (_2!1225 lt!55182)) lt!55578)))

(declare-fun b!108083 () Bool)

(declare-fun res!53617 () Bool)

(assert (=> b!108083 (=> (not res!53617) (not e!70348))))

(assert (=> b!108083 (= res!53617 (containsKey!161 lt!55270 (_1!1225 lt!55182)))))

(declare-fun b!108084 () Bool)

(assert (=> b!108084 (= e!70348 (contains!836 lt!55270 (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(assert (= (and d!29887 res!53616) b!108083))

(assert (= (and b!108083 res!53617) b!108084))

(assert (=> d!29887 m!121153))

(declare-fun m!121481 () Bool)

(assert (=> d!29887 m!121481))

(declare-fun m!121483 () Bool)

(assert (=> d!29887 m!121483))

(declare-fun m!121485 () Bool)

(assert (=> b!108083 m!121485))

(declare-fun m!121487 () Bool)

(assert (=> b!108084 m!121487))

(assert (=> d!29813 d!29887))

(declare-fun b!108105 () Bool)

(declare-fun e!70362 () List!1625)

(declare-fun e!70360 () List!1625)

(assert (=> b!108105 (= e!70362 e!70360)))

(declare-fun c!18977 () Bool)

(assert (=> b!108105 (= c!18977 (and ((_ is Cons!1621) (toList!808 lt!55185)) (= (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 lt!55182))))))

(declare-fun c!18976 () Bool)

(declare-fun e!70359 () List!1625)

(declare-fun call!11473 () List!1625)

(declare-fun bm!11469 () Bool)

(declare-fun $colon$colon!82 (List!1625 tuple2!2428) List!1625)

(assert (=> bm!11469 (= call!11473 ($colon$colon!82 e!70359 (ite c!18976 (h!2219 (toList!808 lt!55185)) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182)))))))

(declare-fun c!18975 () Bool)

(assert (=> bm!11469 (= c!18975 c!18976)))

(declare-fun b!108106 () Bool)

(assert (=> b!108106 (= e!70359 (insertStrictlySorted!76 (t!5741 (toList!808 lt!55185)) (_1!1225 lt!55182) (_2!1225 lt!55182)))))

(declare-fun c!18978 () Bool)

(declare-fun b!108107 () Bool)

(assert (=> b!108107 (= e!70359 (ite c!18977 (t!5741 (toList!808 lt!55185)) (ite c!18978 (Cons!1621 (h!2219 (toList!808 lt!55185)) (t!5741 (toList!808 lt!55185))) Nil!1622)))))

(declare-fun b!108108 () Bool)

(declare-fun e!70363 () List!1625)

(declare-fun call!11472 () List!1625)

(assert (=> b!108108 (= e!70363 call!11472)))

(declare-fun bm!11470 () Bool)

(declare-fun call!11474 () List!1625)

(assert (=> bm!11470 (= call!11472 call!11474)))

(declare-fun b!108109 () Bool)

(assert (=> b!108109 (= e!70362 call!11473)))

(declare-fun d!29889 () Bool)

(declare-fun e!70361 () Bool)

(assert (=> d!29889 e!70361))

(declare-fun res!53622 () Bool)

(assert (=> d!29889 (=> (not res!53622) (not e!70361))))

(declare-fun lt!55581 () List!1625)

(assert (=> d!29889 (= res!53622 (isStrictlySorted!310 lt!55581))))

(assert (=> d!29889 (= lt!55581 e!70362)))

(assert (=> d!29889 (= c!18976 (and ((_ is Cons!1621) (toList!808 lt!55185)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 lt!55182))))))

(assert (=> d!29889 (isStrictlySorted!310 (toList!808 lt!55185))))

(assert (=> d!29889 (= (insertStrictlySorted!76 (toList!808 lt!55185) (_1!1225 lt!55182) (_2!1225 lt!55182)) lt!55581)))

(declare-fun b!108110 () Bool)

(assert (=> b!108110 (= e!70363 call!11472)))

(declare-fun bm!11471 () Bool)

(assert (=> bm!11471 (= call!11474 call!11473)))

(declare-fun b!108111 () Bool)

(assert (=> b!108111 (= c!18978 (and ((_ is Cons!1621) (toList!808 lt!55185)) (bvsgt (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 lt!55182))))))

(assert (=> b!108111 (= e!70360 e!70363)))

(declare-fun b!108112 () Bool)

(assert (=> b!108112 (= e!70360 call!11474)))

(declare-fun b!108113 () Bool)

(declare-fun res!53623 () Bool)

(assert (=> b!108113 (=> (not res!53623) (not e!70361))))

(assert (=> b!108113 (= res!53623 (containsKey!161 lt!55581 (_1!1225 lt!55182)))))

(declare-fun b!108114 () Bool)

(assert (=> b!108114 (= e!70361 (contains!836 lt!55581 (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(assert (= (and d!29889 c!18976) b!108109))

(assert (= (and d!29889 (not c!18976)) b!108105))

(assert (= (and b!108105 c!18977) b!108112))

(assert (= (and b!108105 (not c!18977)) b!108111))

(assert (= (and b!108111 c!18978) b!108110))

(assert (= (and b!108111 (not c!18978)) b!108108))

(assert (= (or b!108110 b!108108) bm!11470))

(assert (= (or b!108112 bm!11470) bm!11471))

(assert (= (or b!108109 bm!11471) bm!11469))

(assert (= (and bm!11469 c!18975) b!108106))

(assert (= (and bm!11469 (not c!18975)) b!108107))

(assert (= (and d!29889 res!53622) b!108113))

(assert (= (and b!108113 res!53623) b!108114))

(declare-fun m!121489 () Bool)

(assert (=> bm!11469 m!121489))

(declare-fun m!121491 () Bool)

(assert (=> b!108113 m!121491))

(declare-fun m!121493 () Bool)

(assert (=> b!108114 m!121493))

(declare-fun m!121495 () Bool)

(assert (=> d!29889 m!121495))

(declare-fun m!121497 () Bool)

(assert (=> d!29889 m!121497))

(declare-fun m!121499 () Bool)

(assert (=> b!108106 m!121499))

(assert (=> d!29813 d!29889))

(declare-fun b!108115 () Bool)

(declare-fun e!70366 () Bool)

(declare-fun call!11475 () Bool)

(assert (=> b!108115 (= e!70366 call!11475)))

(declare-fun b!108116 () Bool)

(declare-fun e!70367 () Bool)

(assert (=> b!108116 (= e!70367 (contains!837 (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!11472 () Bool)

(declare-fun c!18979 () Bool)

(assert (=> bm!11472 (= call!11475 (arrayNoDuplicates!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18979 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623))))))

(declare-fun b!108118 () Bool)

(assert (=> b!108118 (= e!70366 call!11475)))

(declare-fun b!108119 () Bool)

(declare-fun e!70364 () Bool)

(declare-fun e!70365 () Bool)

(assert (=> b!108119 (= e!70364 e!70365)))

(declare-fun res!53626 () Bool)

(assert (=> b!108119 (=> (not res!53626) (not e!70365))))

(assert (=> b!108119 (= res!53626 (not e!70367))))

(declare-fun res!53624 () Bool)

(assert (=> b!108119 (=> (not res!53624) (not e!70367))))

(assert (=> b!108119 (= res!53624 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!29891 () Bool)

(declare-fun res!53625 () Bool)

(assert (=> d!29891 (=> res!53625 e!70364)))

(assert (=> d!29891 (= res!53625 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!29891 (= (arrayNoDuplicates!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)) e!70364)))

(declare-fun b!108117 () Bool)

(assert (=> b!108117 (= e!70365 e!70366)))

(assert (=> b!108117 (= c!18979 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!29891 (not res!53625)) b!108119))

(assert (= (and b!108119 res!53624) b!108116))

(assert (= (and b!108119 res!53626) b!108117))

(assert (= (and b!108117 c!18979) b!108118))

(assert (= (and b!108117 (not c!18979)) b!108115))

(assert (= (or b!108118 b!108115) bm!11472))

(declare-fun m!121501 () Bool)

(assert (=> b!108116 m!121501))

(assert (=> b!108116 m!121501))

(declare-fun m!121503 () Bool)

(assert (=> b!108116 m!121503))

(assert (=> bm!11472 m!121501))

(declare-fun m!121505 () Bool)

(assert (=> bm!11472 m!121505))

(assert (=> b!108119 m!121501))

(assert (=> b!108119 m!121501))

(declare-fun m!121507 () Bool)

(assert (=> b!108119 m!121507))

(assert (=> b!108117 m!121501))

(assert (=> b!108117 m!121501))

(assert (=> b!108117 m!121507))

(assert (=> bm!11447 d!29891))

(declare-fun d!29893 () Bool)

(assert (=> d!29893 (= (get!1342 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) from!355) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2913 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!107776 d!29893))

(declare-fun d!29895 () Bool)

(declare-fun e!70368 () Bool)

(assert (=> d!29895 e!70368))

(declare-fun res!53627 () Bool)

(assert (=> d!29895 (=> (not res!53627) (not e!70368))))

(declare-fun lt!55582 () ListLongMap!1585)

(assert (=> d!29895 (= res!53627 (contains!834 lt!55582 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55584 () List!1625)

(assert (=> d!29895 (= lt!55582 (ListLongMap!1586 lt!55584))))

(declare-fun lt!55583 () Unit!3321)

(declare-fun lt!55585 () Unit!3321)

(assert (=> d!29895 (= lt!55583 lt!55585)))

(assert (=> d!29895 (= (getValueByKey!157 lt!55584 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29895 (= lt!55585 (lemmaContainsTupThenGetReturnValue!73 lt!55584 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29895 (= lt!55584 (insertStrictlySorted!76 (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29895 (= (+!148 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55582)))

(declare-fun b!108120 () Bool)

(declare-fun res!53628 () Bool)

(assert (=> b!108120 (=> (not res!53628) (not e!70368))))

(assert (=> b!108120 (= res!53628 (= (getValueByKey!157 (toList!808 lt!55582) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108121 () Bool)

(assert (=> b!108121 (= e!70368 (contains!836 (toList!808 lt!55582) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29895 res!53627) b!108120))

(assert (= (and b!108120 res!53628) b!108121))

(declare-fun m!121509 () Bool)

(assert (=> d!29895 m!121509))

(declare-fun m!121511 () Bool)

(assert (=> d!29895 m!121511))

(declare-fun m!121513 () Bool)

(assert (=> d!29895 m!121513))

(declare-fun m!121515 () Bool)

(assert (=> d!29895 m!121515))

(declare-fun m!121517 () Bool)

(assert (=> b!108120 m!121517))

(declare-fun m!121519 () Bool)

(assert (=> b!108121 m!121519))

(assert (=> d!29811 d!29895))

(declare-fun d!29897 () Bool)

(declare-fun e!70369 () Bool)

(assert (=> d!29897 e!70369))

(declare-fun res!53629 () Bool)

(assert (=> d!29897 (=> (not res!53629) (not e!70369))))

(declare-fun lt!55586 () ListLongMap!1585)

(assert (=> d!29897 (= res!53629 (contains!834 lt!55586 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun lt!55588 () List!1625)

(assert (=> d!29897 (= lt!55586 (ListLongMap!1586 lt!55588))))

(declare-fun lt!55587 () Unit!3321)

(declare-fun lt!55589 () Unit!3321)

(assert (=> d!29897 (= lt!55587 lt!55589)))

(assert (=> d!29897 (= (getValueByKey!157 lt!55588 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!29897 (= lt!55589 (lemmaContainsTupThenGetReturnValue!73 lt!55588 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!29897 (= lt!55588 (insertStrictlySorted!76 (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!29897 (= (+!148 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) lt!55586)))

(declare-fun b!108122 () Bool)

(declare-fun res!53630 () Bool)

(assert (=> b!108122 (=> (not res!53630) (not e!70369))))

(assert (=> b!108122 (= res!53630 (= (getValueByKey!157 (toList!808 lt!55586) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun b!108123 () Bool)

(assert (=> b!108123 (= e!70369 (contains!836 (toList!808 lt!55586) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(assert (= (and d!29897 res!53629) b!108122))

(assert (= (and b!108122 res!53630) b!108123))

(declare-fun m!121521 () Bool)

(assert (=> d!29897 m!121521))

(declare-fun m!121523 () Bool)

(assert (=> d!29897 m!121523))

(declare-fun m!121525 () Bool)

(assert (=> d!29897 m!121525))

(declare-fun m!121527 () Bool)

(assert (=> d!29897 m!121527))

(declare-fun m!121529 () Bool)

(assert (=> b!108122 m!121529))

(declare-fun m!121531 () Bool)

(assert (=> b!108123 m!121531))

(assert (=> d!29811 d!29897))

(declare-fun d!29899 () Bool)

(assert (=> d!29899 (= (+!148 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (+!148 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(assert (=> d!29899 true))

(declare-fun _$28!164 () Unit!3321)

(assert (=> d!29899 (= (choose!667 lt!55185 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) _$28!164)))

(declare-fun bs!4439 () Bool)

(assert (= bs!4439 d!29899))

(assert (=> bs!4439 m!121147))

(assert (=> bs!4439 m!121147))

(assert (=> bs!4439 m!121149))

(assert (=> bs!4439 m!121143))

(assert (=> bs!4439 m!121143))

(assert (=> bs!4439 m!121145))

(assert (=> d!29811 d!29899))

(declare-fun d!29901 () Bool)

(declare-fun e!70370 () Bool)

(assert (=> d!29901 e!70370))

(declare-fun res!53631 () Bool)

(assert (=> d!29901 (=> (not res!53631) (not e!70370))))

(declare-fun lt!55590 () ListLongMap!1585)

(assert (=> d!29901 (= res!53631 (contains!834 lt!55590 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun lt!55592 () List!1625)

(assert (=> d!29901 (= lt!55590 (ListLongMap!1586 lt!55592))))

(declare-fun lt!55591 () Unit!3321)

(declare-fun lt!55593 () Unit!3321)

(assert (=> d!29901 (= lt!55591 lt!55593)))

(assert (=> d!29901 (= (getValueByKey!157 lt!55592 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!29901 (= lt!55593 (lemmaContainsTupThenGetReturnValue!73 lt!55592 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!29901 (= lt!55592 (insertStrictlySorted!76 (toList!808 lt!55185) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!29901 (= (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) lt!55590)))

(declare-fun b!108124 () Bool)

(declare-fun res!53632 () Bool)

(assert (=> b!108124 (=> (not res!53632) (not e!70370))))

(assert (=> b!108124 (= res!53632 (= (getValueByKey!157 (toList!808 lt!55590) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun b!108125 () Bool)

(assert (=> b!108125 (= e!70370 (contains!836 (toList!808 lt!55590) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(assert (= (and d!29901 res!53631) b!108124))

(assert (= (and b!108124 res!53632) b!108125))

(declare-fun m!121533 () Bool)

(assert (=> d!29901 m!121533))

(declare-fun m!121535 () Bool)

(assert (=> d!29901 m!121535))

(declare-fun m!121537 () Bool)

(assert (=> d!29901 m!121537))

(declare-fun m!121539 () Bool)

(assert (=> d!29901 m!121539))

(declare-fun m!121541 () Bool)

(assert (=> b!108124 m!121541))

(declare-fun m!121543 () Bool)

(assert (=> b!108125 m!121543))

(assert (=> d!29811 d!29901))

(declare-fun d!29903 () Bool)

(declare-fun e!70371 () Bool)

(assert (=> d!29903 e!70371))

(declare-fun res!53633 () Bool)

(assert (=> d!29903 (=> (not res!53633) (not e!70371))))

(declare-fun lt!55594 () ListLongMap!1585)

(assert (=> d!29903 (= res!53633 (contains!834 lt!55594 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55596 () List!1625)

(assert (=> d!29903 (= lt!55594 (ListLongMap!1586 lt!55596))))

(declare-fun lt!55595 () Unit!3321)

(declare-fun lt!55597 () Unit!3321)

(assert (=> d!29903 (= lt!55595 lt!55597)))

(assert (=> d!29903 (= (getValueByKey!157 lt!55596 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29903 (= lt!55597 (lemmaContainsTupThenGetReturnValue!73 lt!55596 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29903 (= lt!55596 (insertStrictlySorted!76 (toList!808 lt!55185) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29903 (= (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55594)))

(declare-fun b!108126 () Bool)

(declare-fun res!53634 () Bool)

(assert (=> b!108126 (=> (not res!53634) (not e!70371))))

(assert (=> b!108126 (= res!53634 (= (getValueByKey!157 (toList!808 lt!55594) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108127 () Bool)

(assert (=> b!108127 (= e!70371 (contains!836 (toList!808 lt!55594) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29903 res!53633) b!108126))

(assert (= (and b!108126 res!53634) b!108127))

(declare-fun m!121545 () Bool)

(assert (=> d!29903 m!121545))

(declare-fun m!121547 () Bool)

(assert (=> d!29903 m!121547))

(declare-fun m!121549 () Bool)

(assert (=> d!29903 m!121549))

(declare-fun m!121551 () Bool)

(assert (=> d!29903 m!121551))

(declare-fun m!121553 () Bool)

(assert (=> b!108126 m!121553))

(declare-fun m!121555 () Bool)

(assert (=> b!108127 m!121555))

(assert (=> d!29811 d!29903))

(declare-fun d!29905 () Bool)

(declare-fun e!70372 () Bool)

(assert (=> d!29905 e!70372))

(declare-fun res!53635 () Bool)

(assert (=> d!29905 (=> (not res!53635) (not e!70372))))

(declare-fun lt!55598 () ListLongMap!1585)

(assert (=> d!29905 (= res!53635 (contains!834 lt!55598 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55600 () List!1625)

(assert (=> d!29905 (= lt!55598 (ListLongMap!1586 lt!55600))))

(declare-fun lt!55599 () Unit!3321)

(declare-fun lt!55601 () Unit!3321)

(assert (=> d!29905 (= lt!55599 lt!55601)))

(assert (=> d!29905 (= (getValueByKey!157 lt!55600 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29905 (= lt!55601 (lemmaContainsTupThenGetReturnValue!73 lt!55600 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29905 (= lt!55600 (insertStrictlySorted!76 (toList!808 lt!55320) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29905 (= (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55598)))

(declare-fun b!108128 () Bool)

(declare-fun res!53636 () Bool)

(assert (=> b!108128 (=> (not res!53636) (not e!70372))))

(assert (=> b!108128 (= res!53636 (= (getValueByKey!157 (toList!808 lt!55598) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108129 () Bool)

(assert (=> b!108129 (= e!70372 (contains!836 (toList!808 lt!55598) (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29905 res!53635) b!108128))

(assert (= (and b!108128 res!53636) b!108129))

(declare-fun m!121557 () Bool)

(assert (=> d!29905 m!121557))

(declare-fun m!121559 () Bool)

(assert (=> d!29905 m!121559))

(declare-fun m!121561 () Bool)

(assert (=> d!29905 m!121561))

(declare-fun m!121563 () Bool)

(assert (=> d!29905 m!121563))

(declare-fun m!121565 () Bool)

(assert (=> b!108128 m!121565))

(declare-fun m!121567 () Bool)

(assert (=> b!108129 m!121567))

(assert (=> b!107751 d!29905))

(declare-fun d!29907 () Bool)

(declare-fun get!1344 (Option!163) V!3235)

(assert (=> d!29907 (= (apply!99 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55340) (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55340)))))

(declare-fun bs!4440 () Bool)

(assert (= bs!4440 d!29907))

(declare-fun m!121569 () Bool)

(assert (=> bs!4440 m!121569))

(assert (=> bs!4440 m!121569))

(declare-fun m!121571 () Bool)

(assert (=> bs!4440 m!121571))

(assert (=> b!107751 d!29907))

(declare-fun d!29909 () Bool)

(assert (=> d!29909 (= (apply!99 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55339) (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55339)))))

(declare-fun bs!4441 () Bool)

(assert (= bs!4441 d!29909))

(declare-fun m!121573 () Bool)

(assert (=> bs!4441 m!121573))

(assert (=> bs!4441 m!121573))

(declare-fun m!121575 () Bool)

(assert (=> bs!4441 m!121575))

(assert (=> b!107751 d!29909))

(assert (=> b!107751 d!29809))

(declare-fun d!29911 () Bool)

(declare-fun e!70374 () Bool)

(assert (=> d!29911 e!70374))

(declare-fun res!53637 () Bool)

(assert (=> d!29911 (=> res!53637 e!70374)))

(declare-fun lt!55603 () Bool)

(assert (=> d!29911 (= res!53637 (not lt!55603))))

(declare-fun lt!55604 () Bool)

(assert (=> d!29911 (= lt!55603 lt!55604)))

(declare-fun lt!55602 () Unit!3321)

(declare-fun e!70373 () Unit!3321)

(assert (=> d!29911 (= lt!55602 e!70373)))

(declare-fun c!18980 () Bool)

(assert (=> d!29911 (= c!18980 lt!55604)))

(assert (=> d!29911 (= lt!55604 (containsKey!161 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55335))))

(assert (=> d!29911 (= (contains!834 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55335) lt!55603)))

(declare-fun b!108130 () Bool)

(declare-fun lt!55605 () Unit!3321)

(assert (=> b!108130 (= e!70373 lt!55605)))

(assert (=> b!108130 (= lt!55605 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55335))))

(assert (=> b!108130 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55335))))

(declare-fun b!108131 () Bool)

(declare-fun Unit!3340 () Unit!3321)

(assert (=> b!108131 (= e!70373 Unit!3340)))

(declare-fun b!108132 () Bool)

(assert (=> b!108132 (= e!70374 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55335)))))

(assert (= (and d!29911 c!18980) b!108130))

(assert (= (and d!29911 (not c!18980)) b!108131))

(assert (= (and d!29911 (not res!53637)) b!108132))

(declare-fun m!121577 () Bool)

(assert (=> d!29911 m!121577))

(declare-fun m!121579 () Bool)

(assert (=> b!108130 m!121579))

(declare-fun m!121581 () Bool)

(assert (=> b!108130 m!121581))

(assert (=> b!108130 m!121581))

(declare-fun m!121583 () Bool)

(assert (=> b!108130 m!121583))

(assert (=> b!108132 m!121581))

(assert (=> b!108132 m!121581))

(assert (=> b!108132 m!121583))

(assert (=> b!107751 d!29911))

(declare-fun d!29913 () Bool)

(declare-fun e!70375 () Bool)

(assert (=> d!29913 e!70375))

(declare-fun res!53638 () Bool)

(assert (=> d!29913 (=> (not res!53638) (not e!70375))))

(declare-fun lt!55606 () ListLongMap!1585)

(assert (=> d!29913 (= res!53638 (contains!834 lt!55606 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55608 () List!1625)

(assert (=> d!29913 (= lt!55606 (ListLongMap!1586 lt!55608))))

(declare-fun lt!55607 () Unit!3321)

(declare-fun lt!55609 () Unit!3321)

(assert (=> d!29913 (= lt!55607 lt!55609)))

(assert (=> d!29913 (= (getValueByKey!157 lt!55608 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29913 (= lt!55609 (lemmaContainsTupThenGetReturnValue!73 lt!55608 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29913 (= lt!55608 (insertStrictlySorted!76 (toList!808 lt!55327) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29913 (= (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55606)))

(declare-fun b!108133 () Bool)

(declare-fun res!53639 () Bool)

(assert (=> b!108133 (=> (not res!53639) (not e!70375))))

(assert (=> b!108133 (= res!53639 (= (getValueByKey!157 (toList!808 lt!55606) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108134 () Bool)

(assert (=> b!108134 (= e!70375 (contains!836 (toList!808 lt!55606) (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29913 res!53638) b!108133))

(assert (= (and b!108133 res!53639) b!108134))

(declare-fun m!121585 () Bool)

(assert (=> d!29913 m!121585))

(declare-fun m!121587 () Bool)

(assert (=> d!29913 m!121587))

(declare-fun m!121589 () Bool)

(assert (=> d!29913 m!121589))

(declare-fun m!121591 () Bool)

(assert (=> d!29913 m!121591))

(declare-fun m!121593 () Bool)

(assert (=> b!108133 m!121593))

(declare-fun m!121595 () Bool)

(assert (=> b!108134 m!121595))

(assert (=> b!107751 d!29913))

(declare-fun d!29915 () Bool)

(assert (=> d!29915 (= (apply!99 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55334) (apply!99 lt!55331 lt!55334))))

(declare-fun lt!55612 () Unit!3321)

(declare-fun choose!673 (ListLongMap!1585 (_ BitVec 64) V!3235 (_ BitVec 64)) Unit!3321)

(assert (=> d!29915 (= lt!55612 (choose!673 lt!55331 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55334))))

(declare-fun e!70378 () Bool)

(assert (=> d!29915 e!70378))

(declare-fun res!53642 () Bool)

(assert (=> d!29915 (=> (not res!53642) (not e!70378))))

(assert (=> d!29915 (= res!53642 (contains!834 lt!55331 lt!55334))))

(assert (=> d!29915 (= (addApplyDifferent!75 lt!55331 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55334) lt!55612)))

(declare-fun b!108138 () Bool)

(assert (=> b!108138 (= e!70378 (not (= lt!55334 lt!55321)))))

(assert (= (and d!29915 res!53642) b!108138))

(assert (=> d!29915 m!121185))

(assert (=> d!29915 m!121187))

(assert (=> d!29915 m!121195))

(assert (=> d!29915 m!121185))

(declare-fun m!121597 () Bool)

(assert (=> d!29915 m!121597))

(declare-fun m!121599 () Bool)

(assert (=> d!29915 m!121599))

(assert (=> b!107751 d!29915))

(declare-fun d!29917 () Bool)

(assert (=> d!29917 (= (apply!99 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55339) (apply!99 lt!55327 lt!55339))))

(declare-fun lt!55613 () Unit!3321)

(assert (=> d!29917 (= lt!55613 (choose!673 lt!55327 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55339))))

(declare-fun e!70379 () Bool)

(assert (=> d!29917 e!70379))

(declare-fun res!53643 () Bool)

(assert (=> d!29917 (=> (not res!53643) (not e!70379))))

(assert (=> d!29917 (= res!53643 (contains!834 lt!55327 lt!55339))))

(assert (=> d!29917 (= (addApplyDifferent!75 lt!55327 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55339) lt!55613)))

(declare-fun b!108139 () Bool)

(assert (=> b!108139 (= e!70379 (not (= lt!55339 lt!55324)))))

(assert (= (and d!29917 res!53643) b!108139))

(assert (=> d!29917 m!121191))

(assert (=> d!29917 m!121193))

(assert (=> d!29917 m!121183))

(assert (=> d!29917 m!121191))

(declare-fun m!121601 () Bool)

(assert (=> d!29917 m!121601))

(declare-fun m!121603 () Bool)

(assert (=> d!29917 m!121603))

(assert (=> b!107751 d!29917))

(declare-fun d!29919 () Bool)

(assert (=> d!29919 (= (apply!99 lt!55331 lt!55334) (get!1344 (getValueByKey!157 (toList!808 lt!55331) lt!55334)))))

(declare-fun bs!4442 () Bool)

(assert (= bs!4442 d!29919))

(declare-fun m!121605 () Bool)

(assert (=> bs!4442 m!121605))

(assert (=> bs!4442 m!121605))

(declare-fun m!121607 () Bool)

(assert (=> bs!4442 m!121607))

(assert (=> b!107751 d!29919))

(declare-fun d!29921 () Bool)

(assert (=> d!29921 (contains!834 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55335)))

(declare-fun lt!55616 () Unit!3321)

(declare-fun choose!674 (ListLongMap!1585 (_ BitVec 64) V!3235 (_ BitVec 64)) Unit!3321)

(assert (=> d!29921 (= lt!55616 (choose!674 lt!55320 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55335))))

(assert (=> d!29921 (contains!834 lt!55320 lt!55335)))

(assert (=> d!29921 (= (addStillContains!75 lt!55320 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55335) lt!55616)))

(declare-fun bs!4443 () Bool)

(assert (= bs!4443 d!29921))

(assert (=> bs!4443 m!121199))

(assert (=> bs!4443 m!121199))

(assert (=> bs!4443 m!121201))

(declare-fun m!121609 () Bool)

(assert (=> bs!4443 m!121609))

(declare-fun m!121611 () Bool)

(assert (=> bs!4443 m!121611))

(assert (=> b!107751 d!29921))

(declare-fun d!29923 () Bool)

(assert (=> d!29923 (= (apply!99 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55340) (apply!99 lt!55328 lt!55340))))

(declare-fun lt!55617 () Unit!3321)

(assert (=> d!29923 (= lt!55617 (choose!673 lt!55328 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55340))))

(declare-fun e!70380 () Bool)

(assert (=> d!29923 e!70380))

(declare-fun res!53644 () Bool)

(assert (=> d!29923 (=> (not res!53644) (not e!70380))))

(assert (=> d!29923 (= res!53644 (contains!834 lt!55328 lt!55340))))

(assert (=> d!29923 (= (addApplyDifferent!75 lt!55328 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55340) lt!55617)))

(declare-fun b!108141 () Bool)

(assert (=> b!108141 (= e!70380 (not (= lt!55340 lt!55337)))))

(assert (= (and d!29923 res!53644) b!108141))

(assert (=> d!29923 m!121197))

(assert (=> d!29923 m!121203))

(assert (=> d!29923 m!121189))

(assert (=> d!29923 m!121197))

(declare-fun m!121613 () Bool)

(assert (=> d!29923 m!121613))

(declare-fun m!121615 () Bool)

(assert (=> d!29923 m!121615))

(assert (=> b!107751 d!29923))

(declare-fun d!29925 () Bool)

(assert (=> d!29925 (= (apply!99 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55334) (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55334)))))

(declare-fun bs!4444 () Bool)

(assert (= bs!4444 d!29925))

(declare-fun m!121617 () Bool)

(assert (=> bs!4444 m!121617))

(assert (=> bs!4444 m!121617))

(declare-fun m!121619 () Bool)

(assert (=> bs!4444 m!121619))

(assert (=> b!107751 d!29925))

(declare-fun d!29927 () Bool)

(assert (=> d!29927 (= (apply!99 lt!55327 lt!55339) (get!1344 (getValueByKey!157 (toList!808 lt!55327) lt!55339)))))

(declare-fun bs!4445 () Bool)

(assert (= bs!4445 d!29927))

(declare-fun m!121621 () Bool)

(assert (=> bs!4445 m!121621))

(assert (=> bs!4445 m!121621))

(declare-fun m!121623 () Bool)

(assert (=> bs!4445 m!121623))

(assert (=> b!107751 d!29927))

(declare-fun d!29929 () Bool)

(declare-fun e!70381 () Bool)

(assert (=> d!29929 e!70381))

(declare-fun res!53645 () Bool)

(assert (=> d!29929 (=> (not res!53645) (not e!70381))))

(declare-fun lt!55618 () ListLongMap!1585)

(assert (=> d!29929 (= res!53645 (contains!834 lt!55618 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55620 () List!1625)

(assert (=> d!29929 (= lt!55618 (ListLongMap!1586 lt!55620))))

(declare-fun lt!55619 () Unit!3321)

(declare-fun lt!55621 () Unit!3321)

(assert (=> d!29929 (= lt!55619 lt!55621)))

(assert (=> d!29929 (= (getValueByKey!157 lt!55620 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29929 (= lt!55621 (lemmaContainsTupThenGetReturnValue!73 lt!55620 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29929 (= lt!55620 (insertStrictlySorted!76 (toList!808 lt!55331) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29929 (= (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55618)))

(declare-fun b!108142 () Bool)

(declare-fun res!53646 () Bool)

(assert (=> b!108142 (=> (not res!53646) (not e!70381))))

(assert (=> b!108142 (= res!53646 (= (getValueByKey!157 (toList!808 lt!55618) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108143 () Bool)

(assert (=> b!108143 (= e!70381 (contains!836 (toList!808 lt!55618) (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29929 res!53645) b!108142))

(assert (= (and b!108142 res!53646) b!108143))

(declare-fun m!121625 () Bool)

(assert (=> d!29929 m!121625))

(declare-fun m!121627 () Bool)

(assert (=> d!29929 m!121627))

(declare-fun m!121629 () Bool)

(assert (=> d!29929 m!121629))

(declare-fun m!121631 () Bool)

(assert (=> d!29929 m!121631))

(declare-fun m!121633 () Bool)

(assert (=> b!108142 m!121633))

(declare-fun m!121635 () Bool)

(assert (=> b!108143 m!121635))

(assert (=> b!107751 d!29929))

(declare-fun d!29931 () Bool)

(declare-fun e!70382 () Bool)

(assert (=> d!29931 e!70382))

(declare-fun res!53647 () Bool)

(assert (=> d!29931 (=> (not res!53647) (not e!70382))))

(declare-fun lt!55622 () ListLongMap!1585)

(assert (=> d!29931 (= res!53647 (contains!834 lt!55622 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55624 () List!1625)

(assert (=> d!29931 (= lt!55622 (ListLongMap!1586 lt!55624))))

(declare-fun lt!55623 () Unit!3321)

(declare-fun lt!55625 () Unit!3321)

(assert (=> d!29931 (= lt!55623 lt!55625)))

(assert (=> d!29931 (= (getValueByKey!157 lt!55624 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29931 (= lt!55625 (lemmaContainsTupThenGetReturnValue!73 lt!55624 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29931 (= lt!55624 (insertStrictlySorted!76 (toList!808 lt!55328) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!29931 (= (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55622)))

(declare-fun b!108144 () Bool)

(declare-fun res!53648 () Bool)

(assert (=> b!108144 (=> (not res!53648) (not e!70382))))

(assert (=> b!108144 (= res!53648 (= (getValueByKey!157 (toList!808 lt!55622) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108145 () Bool)

(assert (=> b!108145 (= e!70382 (contains!836 (toList!808 lt!55622) (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!29931 res!53647) b!108144))

(assert (= (and b!108144 res!53648) b!108145))

(declare-fun m!121637 () Bool)

(assert (=> d!29931 m!121637))

(declare-fun m!121639 () Bool)

(assert (=> d!29931 m!121639))

(declare-fun m!121641 () Bool)

(assert (=> d!29931 m!121641))

(declare-fun m!121643 () Bool)

(assert (=> d!29931 m!121643))

(declare-fun m!121645 () Bool)

(assert (=> b!108144 m!121645))

(declare-fun m!121647 () Bool)

(assert (=> b!108145 m!121647))

(assert (=> b!107751 d!29931))

(declare-fun d!29933 () Bool)

(assert (=> d!29933 (= (apply!99 lt!55328 lt!55340) (get!1344 (getValueByKey!157 (toList!808 lt!55328) lt!55340)))))

(declare-fun bs!4446 () Bool)

(assert (= bs!4446 d!29933))

(declare-fun m!121649 () Bool)

(assert (=> bs!4446 m!121649))

(assert (=> bs!4446 m!121649))

(declare-fun m!121651 () Bool)

(assert (=> bs!4446 m!121651))

(assert (=> b!107751 d!29933))

(declare-fun d!29935 () Bool)

(declare-fun e!70384 () Bool)

(assert (=> d!29935 e!70384))

(declare-fun res!53649 () Bool)

(assert (=> d!29935 (=> res!53649 e!70384)))

(declare-fun lt!55627 () Bool)

(assert (=> d!29935 (= res!53649 (not lt!55627))))

(declare-fun lt!55628 () Bool)

(assert (=> d!29935 (= lt!55627 lt!55628)))

(declare-fun lt!55626 () Unit!3321)

(declare-fun e!70383 () Unit!3321)

(assert (=> d!29935 (= lt!55626 e!70383)))

(declare-fun c!18981 () Bool)

(assert (=> d!29935 (= c!18981 lt!55628)))

(assert (=> d!29935 (= lt!55628 (containsKey!161 (toList!808 call!11424) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))

(assert (=> d!29935 (= (contains!834 call!11424 (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))) lt!55627)))

(declare-fun b!108146 () Bool)

(declare-fun lt!55629 () Unit!3321)

(assert (=> b!108146 (= e!70383 lt!55629)))

(assert (=> b!108146 (= lt!55629 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 call!11424) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))

(assert (=> b!108146 (isDefined!110 (getValueByKey!157 (toList!808 call!11424) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))

(declare-fun b!108147 () Bool)

(declare-fun Unit!3341 () Unit!3321)

(assert (=> b!108147 (= e!70383 Unit!3341)))

(declare-fun b!108148 () Bool)

(assert (=> b!108148 (= e!70384 (isDefined!110 (getValueByKey!157 (toList!808 call!11424) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411)))))))

(assert (= (and d!29935 c!18981) b!108146))

(assert (= (and d!29935 (not c!18981)) b!108147))

(assert (= (and d!29935 (not res!53649)) b!108148))

(assert (=> d!29935 m!121265))

(declare-fun m!121653 () Bool)

(assert (=> d!29935 m!121653))

(assert (=> b!108146 m!121265))

(declare-fun m!121655 () Bool)

(assert (=> b!108146 m!121655))

(assert (=> b!108146 m!121265))

(declare-fun m!121657 () Bool)

(assert (=> b!108146 m!121657))

(assert (=> b!108146 m!121657))

(declare-fun m!121659 () Bool)

(assert (=> b!108146 m!121659))

(assert (=> b!108148 m!121265))

(assert (=> b!108148 m!121657))

(assert (=> b!108148 m!121657))

(assert (=> b!108148 m!121659))

(assert (=> b!107907 d!29935))

(declare-fun d!29937 () Bool)

(declare-fun e!70387 () Bool)

(assert (=> d!29937 e!70387))

(declare-fun res!53652 () Bool)

(assert (=> d!29937 (=> (not res!53652) (not e!70387))))

(assert (=> d!29937 (= res!53652 (and (bvsge (index!3190 lt!55411) #b00000000000000000000000000000000) (bvslt (index!3190 lt!55411) (size!2331 (_keys!4316 newMap!16)))))))

(declare-fun lt!55632 () Unit!3321)

(declare-fun choose!675 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) Int) Unit!3321)

(assert (=> d!29937 (= lt!55632 (choose!675 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3190 lt!55411) (defaultEntry!2606 newMap!16)))))

(assert (=> d!29937 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29937 (= (lemmaValidKeyInArrayIsInListMap!109 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3190 lt!55411) (defaultEntry!2606 newMap!16)) lt!55632)))

(declare-fun b!108151 () Bool)

(assert (=> b!108151 (= e!70387 (contains!834 (getCurrentListMap!493 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))

(assert (= (and d!29937 res!53652) b!108151))

(declare-fun m!121661 () Bool)

(assert (=> d!29937 m!121661))

(assert (=> d!29937 m!121327))

(declare-fun m!121663 () Bool)

(assert (=> b!108151 m!121663))

(assert (=> b!108151 m!121265))

(assert (=> b!108151 m!121663))

(assert (=> b!108151 m!121265))

(declare-fun m!121665 () Bool)

(assert (=> b!108151 m!121665))

(assert (=> b!107907 d!29937))

(declare-fun d!29939 () Bool)

(declare-fun e!70390 () Bool)

(assert (=> d!29939 e!70390))

(declare-fun res!53655 () Bool)

(assert (=> d!29939 (=> (not res!53655) (not e!70390))))

(assert (=> d!29939 (= res!53655 (and (bvsge (index!3190 lt!55411) #b00000000000000000000000000000000) (bvslt (index!3190 lt!55411) (size!2332 (_values!2589 newMap!16)))))))

(declare-fun lt!55635 () Unit!3321)

(declare-fun choose!676 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) (_ BitVec 64) V!3235 Int) Unit!3321)

(assert (=> d!29939 (= lt!55635 (choose!676 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3190 lt!55411) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 (defaultEntry!2606 newMap!16)))))

(assert (=> d!29939 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29939 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3190 lt!55411) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 (defaultEntry!2606 newMap!16)) lt!55635)))

(declare-fun b!108154 () Bool)

(assert (=> b!108154 (= e!70390 (= (+!148 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (getCurrentListMap!493 (_keys!4316 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))))))

(assert (= (and d!29939 res!53655) b!108154))

(assert (=> d!29939 m!120979))

(declare-fun m!121667 () Bool)

(assert (=> d!29939 m!121667))

(assert (=> d!29939 m!121327))

(assert (=> b!108154 m!121175))

(assert (=> b!108154 m!121175))

(assert (=> b!108154 m!121367))

(assert (=> b!108154 m!121273))

(declare-fun m!121669 () Bool)

(assert (=> b!108154 m!121669))

(assert (=> b!107907 d!29939))

(declare-fun d!29941 () Bool)

(assert (=> d!29941 (isDefined!110 (getValueByKey!157 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!55638 () Unit!3321)

(declare-fun choose!677 (List!1625 (_ BitVec 64)) Unit!3321)

(assert (=> d!29941 (= lt!55638 (choose!677 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70393 () Bool)

(assert (=> d!29941 e!70393))

(declare-fun res!53658 () Bool)

(assert (=> d!29941 (=> (not res!53658) (not e!70393))))

(assert (=> d!29941 (= res!53658 (isStrictlySorted!310 (toList!808 lt!55190)))))

(assert (=> d!29941 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55638)))

(declare-fun b!108157 () Bool)

(assert (=> b!108157 (= e!70393 (containsKey!161 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!29941 res!53658) b!108157))

(assert (=> d!29941 m!120979))

(assert (=> d!29941 m!121233))

(assert (=> d!29941 m!121233))

(assert (=> d!29941 m!121235))

(assert (=> d!29941 m!120979))

(declare-fun m!121671 () Bool)

(assert (=> d!29941 m!121671))

(declare-fun m!121673 () Bool)

(assert (=> d!29941 m!121673))

(assert (=> b!108157 m!120979))

(assert (=> b!108157 m!121229))

(assert (=> b!107784 d!29941))

(declare-fun d!29943 () Bool)

(declare-fun isEmpty!375 (Option!163) Bool)

(assert (=> d!29943 (= (isDefined!110 (getValueByKey!157 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))) (not (isEmpty!375 (getValueByKey!157 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun bs!4447 () Bool)

(assert (= bs!4447 d!29943))

(assert (=> bs!4447 m!121233))

(declare-fun m!121675 () Bool)

(assert (=> bs!4447 m!121675))

(assert (=> b!107784 d!29943))

(declare-fun d!29945 () Bool)

(declare-fun c!18982 () Bool)

(assert (=> d!29945 (= c!18982 (and ((_ is Cons!1621) (toList!808 lt!55190)) (= (_1!1225 (h!2219 (toList!808 lt!55190))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(declare-fun e!70394 () Option!163)

(assert (=> d!29945 (= (getValueByKey!157 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70394)))

(declare-fun b!108159 () Bool)

(declare-fun e!70395 () Option!163)

(assert (=> b!108159 (= e!70394 e!70395)))

(declare-fun c!18983 () Bool)

(assert (=> b!108159 (= c!18983 (and ((_ is Cons!1621) (toList!808 lt!55190)) (not (= (_1!1225 (h!2219 (toList!808 lt!55190))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun b!108160 () Bool)

(assert (=> b!108160 (= e!70395 (getValueByKey!157 (t!5741 (toList!808 lt!55190)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108158 () Bool)

(assert (=> b!108158 (= e!70394 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55190)))))))

(declare-fun b!108161 () Bool)

(assert (=> b!108161 (= e!70395 None!161)))

(assert (= (and d!29945 c!18982) b!108158))

(assert (= (and d!29945 (not c!18982)) b!108159))

(assert (= (and b!108159 c!18983) b!108160))

(assert (= (and b!108159 (not c!18983)) b!108161))

(assert (=> b!108160 m!120979))

(declare-fun m!121677 () Bool)

(assert (=> b!108160 m!121677))

(assert (=> b!107784 d!29945))

(declare-fun d!29947 () Bool)

(assert (=> d!29947 (= (apply!99 lt!55326 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1344 (getValueByKey!157 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4448 () Bool)

(assert (= bs!4448 d!29947))

(assert (=> bs!4448 m!121117))

(declare-fun m!121679 () Bool)

(assert (=> bs!4448 m!121679))

(assert (=> bs!4448 m!121679))

(declare-fun m!121681 () Bool)

(assert (=> bs!4448 m!121681))

(assert (=> b!107767 d!29947))

(assert (=> b!107767 d!29871))

(declare-fun d!29949 () Bool)

(assert (=> d!29949 (= (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (and (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107937 d!29949))

(declare-fun bm!11473 () Bool)

(declare-fun call!11476 () Bool)

(declare-fun lt!55645 () ListLongMap!1585)

(assert (=> bm!11473 (= call!11476 (contains!834 lt!55645 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108162 () Bool)

(declare-fun e!70399 () Unit!3321)

(declare-fun lt!55651 () Unit!3321)

(assert (=> b!108162 (= e!70399 lt!55651)))

(declare-fun lt!55639 () ListLongMap!1585)

(assert (=> b!108162 (= lt!55639 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55657 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55657 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55654 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55654 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55652 () Unit!3321)

(assert (=> b!108162 (= lt!55652 (addStillContains!75 lt!55639 lt!55657 (zeroValue!2479 newMap!16) lt!55654))))

(assert (=> b!108162 (contains!834 (+!148 lt!55639 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16))) lt!55654)))

(declare-fun lt!55644 () Unit!3321)

(assert (=> b!108162 (= lt!55644 lt!55652)))

(declare-fun lt!55647 () ListLongMap!1585)

(assert (=> b!108162 (= lt!55647 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55656 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55656 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55659 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55659 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55655 () Unit!3321)

(assert (=> b!108162 (= lt!55655 (addApplyDifferent!75 lt!55647 lt!55656 (minValue!2479 newMap!16) lt!55659))))

(assert (=> b!108162 (= (apply!99 (+!148 lt!55647 (tuple2!2429 lt!55656 (minValue!2479 newMap!16))) lt!55659) (apply!99 lt!55647 lt!55659))))

(declare-fun lt!55660 () Unit!3321)

(assert (=> b!108162 (= lt!55660 lt!55655)))

(declare-fun lt!55650 () ListLongMap!1585)

(assert (=> b!108162 (= lt!55650 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55640 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55640 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55653 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55653 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55649 () Unit!3321)

(assert (=> b!108162 (= lt!55649 (addApplyDifferent!75 lt!55650 lt!55640 (zeroValue!2479 newMap!16) lt!55653))))

(assert (=> b!108162 (= (apply!99 (+!148 lt!55650 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16))) lt!55653) (apply!99 lt!55650 lt!55653))))

(declare-fun lt!55641 () Unit!3321)

(assert (=> b!108162 (= lt!55641 lt!55649)))

(declare-fun lt!55646 () ListLongMap!1585)

(assert (=> b!108162 (= lt!55646 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55643 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55643 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55658 () (_ BitVec 64))

(assert (=> b!108162 (= lt!55658 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108162 (= lt!55651 (addApplyDifferent!75 lt!55646 lt!55643 (minValue!2479 newMap!16) lt!55658))))

(assert (=> b!108162 (= (apply!99 (+!148 lt!55646 (tuple2!2429 lt!55643 (minValue!2479 newMap!16))) lt!55658) (apply!99 lt!55646 lt!55658))))

(declare-fun bm!11474 () Bool)

(declare-fun call!11477 () ListLongMap!1585)

(declare-fun call!11482 () ListLongMap!1585)

(assert (=> bm!11474 (= call!11477 call!11482)))

(declare-fun b!108163 () Bool)

(declare-fun e!70396 () Bool)

(assert (=> b!108163 (= e!70396 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108165 () Bool)

(declare-fun res!53664 () Bool)

(declare-fun e!70403 () Bool)

(assert (=> b!108165 (=> (not res!53664) (not e!70403))))

(declare-fun e!70406 () Bool)

(assert (=> b!108165 (= res!53664 e!70406)))

(declare-fun c!18988 () Bool)

(assert (=> b!108165 (= c!18988 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108166 () Bool)

(declare-fun e!70407 () ListLongMap!1585)

(assert (=> b!108166 (= e!70407 call!11477)))

(declare-fun b!108167 () Bool)

(declare-fun e!70400 () ListLongMap!1585)

(assert (=> b!108167 (= e!70400 call!11477)))

(declare-fun b!108168 () Bool)

(declare-fun res!53661 () Bool)

(assert (=> b!108168 (=> (not res!53661) (not e!70403))))

(declare-fun e!70408 () Bool)

(assert (=> b!108168 (= res!53661 e!70408)))

(declare-fun res!53659 () Bool)

(assert (=> b!108168 (=> res!53659 e!70408)))

(assert (=> b!108168 (= res!53659 (not e!70396))))

(declare-fun res!53660 () Bool)

(assert (=> b!108168 (=> (not res!53660) (not e!70396))))

(assert (=> b!108168 (= res!53660 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun bm!11475 () Bool)

(declare-fun call!11481 () ListLongMap!1585)

(assert (=> bm!11475 (= call!11481 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun call!11479 () ListLongMap!1585)

(declare-fun c!18989 () Bool)

(declare-fun c!18987 () Bool)

(declare-fun bm!11476 () Bool)

(declare-fun call!11480 () ListLongMap!1585)

(assert (=> bm!11476 (= call!11482 (+!148 (ite c!18987 call!11481 (ite c!18989 call!11479 call!11480)) (ite (or c!18987 c!18989) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!108169 () Bool)

(declare-fun Unit!3342 () Unit!3321)

(assert (=> b!108169 (= e!70399 Unit!3342)))

(declare-fun b!108170 () Bool)

(declare-fun e!70402 () Bool)

(assert (=> b!108170 (= e!70406 e!70402)))

(declare-fun res!53667 () Bool)

(assert (=> b!108170 (= res!53667 call!11476)))

(assert (=> b!108170 (=> (not res!53667) (not e!70402))))

(declare-fun d!29951 () Bool)

(assert (=> d!29951 e!70403))

(declare-fun res!53666 () Bool)

(assert (=> d!29951 (=> (not res!53666) (not e!70403))))

(assert (=> d!29951 (= res!53666 (or (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))))

(declare-fun lt!55648 () ListLongMap!1585)

(assert (=> d!29951 (= lt!55645 lt!55648)))

(declare-fun lt!55642 () Unit!3321)

(assert (=> d!29951 (= lt!55642 e!70399)))

(declare-fun c!18986 () Bool)

(declare-fun e!70404 () Bool)

(assert (=> d!29951 (= c!18986 e!70404)))

(declare-fun res!53662 () Bool)

(assert (=> d!29951 (=> (not res!53662) (not e!70404))))

(assert (=> d!29951 (= res!53662 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun e!70397 () ListLongMap!1585)

(assert (=> d!29951 (= lt!55648 e!70397)))

(assert (=> d!29951 (= c!18987 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29951 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29951 (= (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55645)))

(declare-fun b!108164 () Bool)

(declare-fun c!18984 () Bool)

(assert (=> b!108164 (= c!18984 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108164 (= e!70407 e!70400)))

(declare-fun b!108171 () Bool)

(assert (=> b!108171 (= e!70404 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108172 () Bool)

(assert (=> b!108172 (= e!70406 (not call!11476))))

(declare-fun b!108173 () Bool)

(declare-fun e!70405 () Bool)

(declare-fun call!11478 () Bool)

(assert (=> b!108173 (= e!70405 (not call!11478))))

(declare-fun b!108174 () Bool)

(assert (=> b!108174 (= e!70403 e!70405)))

(declare-fun c!18985 () Bool)

(assert (=> b!108174 (= c!18985 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108175 () Bool)

(declare-fun e!70401 () Bool)

(assert (=> b!108175 (= e!70408 e!70401)))

(declare-fun res!53663 () Bool)

(assert (=> b!108175 (=> (not res!53663) (not e!70401))))

(assert (=> b!108175 (= res!53663 (contains!834 lt!55645 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108175 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun bm!11477 () Bool)

(assert (=> bm!11477 (= call!11480 call!11479)))

(declare-fun b!108176 () Bool)

(declare-fun e!70398 () Bool)

(assert (=> b!108176 (= e!70398 (= (apply!99 lt!55645 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun bm!11478 () Bool)

(assert (=> bm!11478 (= call!11478 (contains!834 lt!55645 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108177 () Bool)

(assert (=> b!108177 (= e!70400 call!11480)))

(declare-fun b!108178 () Bool)

(assert (=> b!108178 (= e!70401 (= (apply!99 lt!55645 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108178 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 (_values!2589 newMap!16))))))

(assert (=> b!108178 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108179 () Bool)

(assert (=> b!108179 (= e!70397 (+!148 call!11482 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun b!108180 () Bool)

(assert (=> b!108180 (= e!70402 (= (apply!99 lt!55645 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!108181 () Bool)

(assert (=> b!108181 (= e!70397 e!70407)))

(assert (=> b!108181 (= c!18989 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108182 () Bool)

(assert (=> b!108182 (= e!70405 e!70398)))

(declare-fun res!53665 () Bool)

(assert (=> b!108182 (= res!53665 call!11478)))

(assert (=> b!108182 (=> (not res!53665) (not e!70398))))

(declare-fun bm!11479 () Bool)

(assert (=> bm!11479 (= call!11479 call!11481)))

(assert (= (and d!29951 c!18987) b!108179))

(assert (= (and d!29951 (not c!18987)) b!108181))

(assert (= (and b!108181 c!18989) b!108166))

(assert (= (and b!108181 (not c!18989)) b!108164))

(assert (= (and b!108164 c!18984) b!108167))

(assert (= (and b!108164 (not c!18984)) b!108177))

(assert (= (or b!108167 b!108177) bm!11477))

(assert (= (or b!108166 bm!11477) bm!11479))

(assert (= (or b!108166 b!108167) bm!11474))

(assert (= (or b!108179 bm!11479) bm!11475))

(assert (= (or b!108179 bm!11474) bm!11476))

(assert (= (and d!29951 res!53662) b!108171))

(assert (= (and d!29951 c!18986) b!108162))

(assert (= (and d!29951 (not c!18986)) b!108169))

(assert (= (and d!29951 res!53666) b!108168))

(assert (= (and b!108168 res!53660) b!108163))

(assert (= (and b!108168 (not res!53659)) b!108175))

(assert (= (and b!108175 res!53663) b!108178))

(assert (= (and b!108168 res!53661) b!108165))

(assert (= (and b!108165 c!18988) b!108170))

(assert (= (and b!108165 (not c!18988)) b!108172))

(assert (= (and b!108170 res!53667) b!108180))

(assert (= (or b!108170 b!108172) bm!11473))

(assert (= (and b!108165 res!53664) b!108174))

(assert (= (and b!108174 c!18985) b!108182))

(assert (= (and b!108174 (not c!18985)) b!108173))

(assert (= (and b!108182 res!53665) b!108176))

(assert (= (or b!108182 b!108173) bm!11478))

(declare-fun b_lambda!4837 () Bool)

(assert (=> (not b_lambda!4837) (not b!108178)))

(declare-fun tb!2089 () Bool)

(declare-fun t!5750 () Bool)

(assert (=> (and b!107580 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16)) t!5750) tb!2089))

(declare-fun result!3509 () Bool)

(assert (=> tb!2089 (= result!3509 tp_is_empty!2691)))

(assert (=> b!108178 t!5750))

(declare-fun b_and!6671 () Bool)

(assert (= b_and!6667 (and (=> t!5750 result!3509) b_and!6671)))

(declare-fun t!5752 () Bool)

(declare-fun tb!2091 () Bool)

(assert (=> (and b!107593 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 newMap!16)) t!5752) tb!2091))

(declare-fun result!3511 () Bool)

(assert (= result!3511 result!3509))

(assert (=> b!108178 t!5752))

(declare-fun b_and!6673 () Bool)

(assert (= b_and!6669 (and (=> t!5752 result!3511) b_and!6673)))

(declare-fun m!121683 () Bool)

(assert (=> bm!11473 m!121683))

(assert (=> b!108175 m!121333))

(assert (=> b!108175 m!121333))

(declare-fun m!121685 () Bool)

(assert (=> b!108175 m!121685))

(assert (=> b!108171 m!121333))

(assert (=> b!108171 m!121333))

(assert (=> b!108171 m!121341))

(declare-fun m!121687 () Bool)

(assert (=> bm!11478 m!121687))

(declare-fun m!121689 () Bool)

(assert (=> b!108162 m!121689))

(declare-fun m!121691 () Bool)

(assert (=> b!108162 m!121691))

(declare-fun m!121693 () Bool)

(assert (=> b!108162 m!121693))

(declare-fun m!121695 () Bool)

(assert (=> b!108162 m!121695))

(declare-fun m!121697 () Bool)

(assert (=> b!108162 m!121697))

(declare-fun m!121699 () Bool)

(assert (=> b!108162 m!121699))

(declare-fun m!121701 () Bool)

(assert (=> b!108162 m!121701))

(declare-fun m!121703 () Bool)

(assert (=> b!108162 m!121703))

(declare-fun m!121705 () Bool)

(assert (=> b!108162 m!121705))

(declare-fun m!121707 () Bool)

(assert (=> b!108162 m!121707))

(declare-fun m!121709 () Bool)

(assert (=> b!108162 m!121709))

(assert (=> b!108162 m!121691))

(assert (=> b!108162 m!121703))

(declare-fun m!121711 () Bool)

(assert (=> b!108162 m!121711))

(declare-fun m!121713 () Bool)

(assert (=> b!108162 m!121713))

(declare-fun m!121715 () Bool)

(assert (=> b!108162 m!121715))

(assert (=> b!108162 m!121697))

(declare-fun m!121717 () Bool)

(assert (=> b!108162 m!121717))

(assert (=> b!108162 m!121333))

(declare-fun m!121719 () Bool)

(assert (=> b!108162 m!121719))

(assert (=> b!108162 m!121705))

(declare-fun m!121721 () Bool)

(assert (=> b!108179 m!121721))

(assert (=> b!108178 m!121333))

(assert (=> b!108178 m!121333))

(declare-fun m!121723 () Bool)

(assert (=> b!108178 m!121723))

(declare-fun m!121725 () Bool)

(assert (=> b!108178 m!121725))

(declare-fun m!121727 () Bool)

(assert (=> b!108178 m!121727))

(declare-fun m!121729 () Bool)

(assert (=> b!108178 m!121729))

(assert (=> b!108178 m!121727))

(assert (=> b!108178 m!121725))

(assert (=> bm!11475 m!121709))

(assert (=> b!108163 m!121333))

(assert (=> b!108163 m!121333))

(assert (=> b!108163 m!121341))

(declare-fun m!121731 () Bool)

(assert (=> b!108176 m!121731))

(declare-fun m!121733 () Bool)

(assert (=> bm!11476 m!121733))

(declare-fun m!121735 () Bool)

(assert (=> b!108180 m!121735))

(assert (=> d!29951 m!121327))

(assert (=> b!107884 d!29951))

(declare-fun d!29953 () Bool)

(assert (=> d!29953 (= (get!1343 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) from!355) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107777 d!29953))

(declare-fun d!29955 () Bool)

(declare-fun e!70409 () Bool)

(assert (=> d!29955 e!70409))

(declare-fun res!53668 () Bool)

(assert (=> d!29955 (=> (not res!53668) (not e!70409))))

(declare-fun lt!55661 () ListLongMap!1585)

(assert (=> d!29955 (= res!53668 (contains!834 lt!55661 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun lt!55663 () List!1625)

(assert (=> d!29955 (= lt!55661 (ListLongMap!1586 lt!55663))))

(declare-fun lt!55662 () Unit!3321)

(declare-fun lt!55664 () Unit!3321)

(assert (=> d!29955 (= lt!55662 lt!55664)))

(assert (=> d!29955 (= (getValueByKey!157 lt!55663 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) (Some!162 (_2!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (=> d!29955 (= lt!55664 (lemmaContainsTupThenGetReturnValue!73 lt!55663 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (_2!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (=> d!29955 (= lt!55663 (insertStrictlySorted!76 (toList!808 e!70235) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (_2!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (=> d!29955 (= (+!148 e!70235 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) lt!55661)))

(declare-fun b!108183 () Bool)

(declare-fun res!53669 () Bool)

(assert (=> b!108183 (=> (not res!53669) (not e!70409))))

(assert (=> b!108183 (= res!53669 (= (getValueByKey!157 (toList!808 lt!55661) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) (Some!162 (_2!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun b!108184 () Bool)

(assert (=> b!108184 (= e!70409 (contains!836 (toList!808 lt!55661) (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (= (and d!29955 res!53668) b!108183))

(assert (= (and b!108183 res!53669) b!108184))

(declare-fun m!121737 () Bool)

(assert (=> d!29955 m!121737))

(declare-fun m!121739 () Bool)

(assert (=> d!29955 m!121739))

(declare-fun m!121741 () Bool)

(assert (=> d!29955 m!121741))

(declare-fun m!121743 () Bool)

(assert (=> d!29955 m!121743))

(declare-fun m!121745 () Bool)

(assert (=> b!108183 m!121745))

(declare-fun m!121747 () Bool)

(assert (=> b!108184 m!121747))

(assert (=> bm!11436 d!29955))

(assert (=> b!107939 d!29949))

(declare-fun d!29957 () Bool)

(declare-fun e!70411 () Bool)

(assert (=> d!29957 e!70411))

(declare-fun res!53670 () Bool)

(assert (=> d!29957 (=> res!53670 e!70411)))

(declare-fun lt!55666 () Bool)

(assert (=> d!29957 (= res!53670 (not lt!55666))))

(declare-fun lt!55667 () Bool)

(assert (=> d!29957 (= lt!55666 lt!55667)))

(declare-fun lt!55665 () Unit!3321)

(declare-fun e!70410 () Unit!3321)

(assert (=> d!29957 (= lt!55665 e!70410)))

(declare-fun c!18990 () Bool)

(assert (=> d!29957 (= c!18990 lt!55667)))

(assert (=> d!29957 (= lt!55667 (containsKey!161 (toList!808 e!70240) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!29957 (= (contains!834 e!70240 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55666)))

(declare-fun b!108185 () Bool)

(declare-fun lt!55668 () Unit!3321)

(assert (=> b!108185 (= e!70410 lt!55668)))

(assert (=> b!108185 (= lt!55668 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 e!70240) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108185 (isDefined!110 (getValueByKey!157 (toList!808 e!70240) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108186 () Bool)

(declare-fun Unit!3343 () Unit!3321)

(assert (=> b!108186 (= e!70410 Unit!3343)))

(declare-fun b!108187 () Bool)

(assert (=> b!108187 (= e!70411 (isDefined!110 (getValueByKey!157 (toList!808 e!70240) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!29957 c!18990) b!108185))

(assert (= (and d!29957 (not c!18990)) b!108186))

(assert (= (and d!29957 (not res!53670)) b!108187))

(assert (=> d!29957 m!120979))

(declare-fun m!121749 () Bool)

(assert (=> d!29957 m!121749))

(assert (=> b!108185 m!120979))

(declare-fun m!121751 () Bool)

(assert (=> b!108185 m!121751))

(assert (=> b!108185 m!120979))

(declare-fun m!121753 () Bool)

(assert (=> b!108185 m!121753))

(assert (=> b!108185 m!121753))

(declare-fun m!121755 () Bool)

(assert (=> b!108185 m!121755))

(assert (=> b!108187 m!120979))

(assert (=> b!108187 m!121753))

(assert (=> b!108187 m!121753))

(assert (=> b!108187 m!121755))

(assert (=> bm!11422 d!29957))

(declare-fun d!29959 () Bool)

(declare-fun e!70412 () Bool)

(assert (=> d!29959 e!70412))

(declare-fun res!53671 () Bool)

(assert (=> d!29959 (=> (not res!53671) (not e!70412))))

(declare-fun lt!55669 () ListLongMap!1585)

(assert (=> d!29959 (= res!53671 (contains!834 lt!55669 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun lt!55671 () List!1625)

(assert (=> d!29959 (= lt!55669 (ListLongMap!1586 lt!55671))))

(declare-fun lt!55670 () Unit!3321)

(declare-fun lt!55672 () Unit!3321)

(assert (=> d!29959 (= lt!55670 lt!55672)))

(assert (=> d!29959 (= (getValueByKey!157 lt!55671 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!29959 (= lt!55672 (lemmaContainsTupThenGetReturnValue!73 lt!55671 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!29959 (= lt!55671 (insertStrictlySorted!76 (toList!808 call!11433) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!29959 (= (+!148 call!11433 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) lt!55669)))

(declare-fun b!108188 () Bool)

(declare-fun res!53672 () Bool)

(assert (=> b!108188 (=> (not res!53672) (not e!70412))))

(assert (=> b!108188 (= res!53672 (= (getValueByKey!157 (toList!808 lt!55669) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun b!108189 () Bool)

(assert (=> b!108189 (= e!70412 (contains!836 (toList!808 lt!55669) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(assert (= (and d!29959 res!53671) b!108188))

(assert (= (and b!108188 res!53672) b!108189))

(declare-fun m!121757 () Bool)

(assert (=> d!29959 m!121757))

(declare-fun m!121759 () Bool)

(assert (=> d!29959 m!121759))

(declare-fun m!121761 () Bool)

(assert (=> d!29959 m!121761))

(declare-fun m!121763 () Bool)

(assert (=> d!29959 m!121763))

(declare-fun m!121765 () Bool)

(assert (=> b!108188 m!121765))

(declare-fun m!121767 () Bool)

(assert (=> b!108189 m!121767))

(assert (=> b!107886 d!29959))

(declare-fun d!29961 () Bool)

(declare-fun res!53673 () Bool)

(declare-fun e!70413 () Bool)

(assert (=> d!29961 (=> res!53673 e!70413)))

(assert (=> d!29961 (= res!53673 (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!29961 (= (arrayContainsKey!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!70413)))

(declare-fun b!108190 () Bool)

(declare-fun e!70414 () Bool)

(assert (=> b!108190 (= e!70413 e!70414)))

(declare-fun res!53674 () Bool)

(assert (=> b!108190 (=> (not res!53674) (not e!70414))))

(assert (=> b!108190 (= res!53674 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108191 () Bool)

(assert (=> b!108191 (= e!70414 (arrayContainsKey!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29961 (not res!53673)) b!108190))

(assert (= (and b!108190 res!53674) b!108191))

(declare-fun m!121769 () Bool)

(assert (=> d!29961 m!121769))

(assert (=> b!108191 m!120979))

(declare-fun m!121771 () Bool)

(assert (=> b!108191 m!121771))

(assert (=> b!107918 d!29961))

(declare-fun d!29963 () Bool)

(declare-fun res!53679 () Bool)

(declare-fun e!70419 () Bool)

(assert (=> d!29963 (=> res!53679 e!70419)))

(assert (=> d!29963 (= res!53679 (and ((_ is Cons!1621) (toList!808 lt!55190)) (= (_1!1225 (h!2219 (toList!808 lt!55190))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!29963 (= (containsKey!161 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70419)))

(declare-fun b!108196 () Bool)

(declare-fun e!70420 () Bool)

(assert (=> b!108196 (= e!70419 e!70420)))

(declare-fun res!53680 () Bool)

(assert (=> b!108196 (=> (not res!53680) (not e!70420))))

(assert (=> b!108196 (= res!53680 (and (or (not ((_ is Cons!1621) (toList!808 lt!55190))) (bvsle (_1!1225 (h!2219 (toList!808 lt!55190))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))) ((_ is Cons!1621) (toList!808 lt!55190)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55190))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(declare-fun b!108197 () Bool)

(assert (=> b!108197 (= e!70420 (containsKey!161 (t!5741 (toList!808 lt!55190)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!29963 (not res!53679)) b!108196))

(assert (= (and b!108196 res!53680) b!108197))

(assert (=> b!108197 m!120979))

(declare-fun m!121773 () Bool)

(assert (=> b!108197 m!121773))

(assert (=> d!29831 d!29963))

(declare-fun d!29965 () Bool)

(assert (=> d!29965 (= (map!1294 (_2!1226 lt!55419)) (getCurrentListMap!493 (_keys!4316 (_2!1226 lt!55419)) (_values!2589 (_2!1226 lt!55419)) (mask!6764 (_2!1226 lt!55419)) (extraKeys!2407 (_2!1226 lt!55419)) (zeroValue!2479 (_2!1226 lt!55419)) (minValue!2479 (_2!1226 lt!55419)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1226 lt!55419))))))

(declare-fun bs!4449 () Bool)

(assert (= bs!4449 d!29965))

(declare-fun m!121775 () Bool)

(assert (=> bs!4449 m!121775))

(assert (=> bm!11440 d!29965))

(declare-fun d!29967 () Bool)

(declare-fun e!70422 () Bool)

(assert (=> d!29967 e!70422))

(declare-fun res!53681 () Bool)

(assert (=> d!29967 (=> res!53681 e!70422)))

(declare-fun lt!55674 () Bool)

(assert (=> d!29967 (= res!53681 (not lt!55674))))

(declare-fun lt!55675 () Bool)

(assert (=> d!29967 (= lt!55674 lt!55675)))

(declare-fun lt!55673 () Unit!3321)

(declare-fun e!70421 () Unit!3321)

(assert (=> d!29967 (= lt!55673 e!70421)))

(declare-fun c!18991 () Bool)

(assert (=> d!29967 (= c!18991 lt!55675)))

(assert (=> d!29967 (= lt!55675 (containsKey!161 (toList!808 lt!55258) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29967 (= (contains!834 lt!55258 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55674)))

(declare-fun b!108198 () Bool)

(declare-fun lt!55676 () Unit!3321)

(assert (=> b!108198 (= e!70421 lt!55676)))

(assert (=> b!108198 (= lt!55676 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55258) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108198 (isDefined!110 (getValueByKey!157 (toList!808 lt!55258) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108199 () Bool)

(declare-fun Unit!3344 () Unit!3321)

(assert (=> b!108199 (= e!70421 Unit!3344)))

(declare-fun b!108200 () Bool)

(assert (=> b!108200 (= e!70422 (isDefined!110 (getValueByKey!157 (toList!808 lt!55258) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29967 c!18991) b!108198))

(assert (= (and d!29967 (not c!18991)) b!108199))

(assert (= (and d!29967 (not res!53681)) b!108200))

(declare-fun m!121777 () Bool)

(assert (=> d!29967 m!121777))

(declare-fun m!121779 () Bool)

(assert (=> b!108198 m!121779))

(declare-fun m!121781 () Bool)

(assert (=> b!108198 m!121781))

(assert (=> b!108198 m!121781))

(declare-fun m!121783 () Bool)

(assert (=> b!108198 m!121783))

(assert (=> b!108200 m!121781))

(assert (=> b!108200 m!121781))

(assert (=> b!108200 m!121783))

(assert (=> d!29809 d!29967))

(assert (=> d!29809 d!29817))

(declare-fun d!29969 () Bool)

(declare-fun e!70424 () Bool)

(assert (=> d!29969 e!70424))

(declare-fun res!53682 () Bool)

(assert (=> d!29969 (=> res!53682 e!70424)))

(declare-fun lt!55678 () Bool)

(assert (=> d!29969 (= res!53682 (not lt!55678))))

(declare-fun lt!55679 () Bool)

(assert (=> d!29969 (= lt!55678 lt!55679)))

(declare-fun lt!55677 () Unit!3321)

(declare-fun e!70423 () Unit!3321)

(assert (=> d!29969 (= lt!55677 e!70423)))

(declare-fun c!18992 () Bool)

(assert (=> d!29969 (= c!18992 lt!55679)))

(assert (=> d!29969 (= lt!55679 (containsKey!161 (toList!808 lt!55240) (_1!1225 lt!55183)))))

(assert (=> d!29969 (= (contains!834 lt!55240 (_1!1225 lt!55183)) lt!55678)))

(declare-fun b!108201 () Bool)

(declare-fun lt!55680 () Unit!3321)

(assert (=> b!108201 (= e!70423 lt!55680)))

(assert (=> b!108201 (= lt!55680 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55240) (_1!1225 lt!55183)))))

(assert (=> b!108201 (isDefined!110 (getValueByKey!157 (toList!808 lt!55240) (_1!1225 lt!55183)))))

(declare-fun b!108202 () Bool)

(declare-fun Unit!3345 () Unit!3321)

(assert (=> b!108202 (= e!70423 Unit!3345)))

(declare-fun b!108203 () Bool)

(assert (=> b!108203 (= e!70424 (isDefined!110 (getValueByKey!157 (toList!808 lt!55240) (_1!1225 lt!55183))))))

(assert (= (and d!29969 c!18992) b!108201))

(assert (= (and d!29969 (not c!18992)) b!108202))

(assert (= (and d!29969 (not res!53682)) b!108203))

(declare-fun m!121785 () Bool)

(assert (=> d!29969 m!121785))

(declare-fun m!121787 () Bool)

(assert (=> b!108201 m!121787))

(assert (=> b!108201 m!121109))

(assert (=> b!108201 m!121109))

(declare-fun m!121789 () Bool)

(assert (=> b!108201 m!121789))

(assert (=> b!108203 m!121109))

(assert (=> b!108203 m!121109))

(assert (=> b!108203 m!121789))

(assert (=> d!29807 d!29969))

(declare-fun d!29971 () Bool)

(declare-fun c!18993 () Bool)

(assert (=> d!29971 (= c!18993 (and ((_ is Cons!1621) lt!55242) (= (_1!1225 (h!2219 lt!55242)) (_1!1225 lt!55183))))))

(declare-fun e!70425 () Option!163)

(assert (=> d!29971 (= (getValueByKey!157 lt!55242 (_1!1225 lt!55183)) e!70425)))

(declare-fun b!108205 () Bool)

(declare-fun e!70426 () Option!163)

(assert (=> b!108205 (= e!70425 e!70426)))

(declare-fun c!18994 () Bool)

(assert (=> b!108205 (= c!18994 (and ((_ is Cons!1621) lt!55242) (not (= (_1!1225 (h!2219 lt!55242)) (_1!1225 lt!55183)))))))

(declare-fun b!108206 () Bool)

(assert (=> b!108206 (= e!70426 (getValueByKey!157 (t!5741 lt!55242) (_1!1225 lt!55183)))))

(declare-fun b!108204 () Bool)

(assert (=> b!108204 (= e!70425 (Some!162 (_2!1225 (h!2219 lt!55242))))))

(declare-fun b!108207 () Bool)

(assert (=> b!108207 (= e!70426 None!161)))

(assert (= (and d!29971 c!18993) b!108204))

(assert (= (and d!29971 (not c!18993)) b!108205))

(assert (= (and b!108205 c!18994) b!108206))

(assert (= (and b!108205 (not c!18994)) b!108207))

(declare-fun m!121791 () Bool)

(assert (=> b!108206 m!121791))

(assert (=> d!29807 d!29971))

(declare-fun d!29973 () Bool)

(assert (=> d!29973 (= (getValueByKey!157 lt!55242 (_1!1225 lt!55183)) (Some!162 (_2!1225 lt!55183)))))

(declare-fun lt!55681 () Unit!3321)

(assert (=> d!29973 (= lt!55681 (choose!672 lt!55242 (_1!1225 lt!55183) (_2!1225 lt!55183)))))

(declare-fun e!70427 () Bool)

(assert (=> d!29973 e!70427))

(declare-fun res!53683 () Bool)

(assert (=> d!29973 (=> (not res!53683) (not e!70427))))

(assert (=> d!29973 (= res!53683 (isStrictlySorted!310 lt!55242))))

(assert (=> d!29973 (= (lemmaContainsTupThenGetReturnValue!73 lt!55242 (_1!1225 lt!55183) (_2!1225 lt!55183)) lt!55681)))

(declare-fun b!108208 () Bool)

(declare-fun res!53684 () Bool)

(assert (=> b!108208 (=> (not res!53684) (not e!70427))))

(assert (=> b!108208 (= res!53684 (containsKey!161 lt!55242 (_1!1225 lt!55183)))))

(declare-fun b!108209 () Bool)

(assert (=> b!108209 (= e!70427 (contains!836 lt!55242 (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(assert (= (and d!29973 res!53683) b!108208))

(assert (= (and b!108208 res!53684) b!108209))

(assert (=> d!29973 m!121103))

(declare-fun m!121793 () Bool)

(assert (=> d!29973 m!121793))

(declare-fun m!121795 () Bool)

(assert (=> d!29973 m!121795))

(declare-fun m!121797 () Bool)

(assert (=> b!108208 m!121797))

(declare-fun m!121799 () Bool)

(assert (=> b!108209 m!121799))

(assert (=> d!29807 d!29973))

(declare-fun b!108210 () Bool)

(declare-fun e!70431 () List!1625)

(declare-fun e!70429 () List!1625)

(assert (=> b!108210 (= e!70431 e!70429)))

(declare-fun c!18997 () Bool)

(assert (=> b!108210 (= c!18997 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55185 lt!55182))) (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 lt!55182)))) (_1!1225 lt!55183))))))

(declare-fun e!70428 () List!1625)

(declare-fun bm!11480 () Bool)

(declare-fun call!11484 () List!1625)

(declare-fun c!18996 () Bool)

(assert (=> bm!11480 (= call!11484 ($colon$colon!82 e!70428 (ite c!18996 (h!2219 (toList!808 (+!148 lt!55185 lt!55182))) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183)))))))

(declare-fun c!18995 () Bool)

(assert (=> bm!11480 (= c!18995 c!18996)))

(declare-fun b!108211 () Bool)

(assert (=> b!108211 (= e!70428 (insertStrictlySorted!76 (t!5741 (toList!808 (+!148 lt!55185 lt!55182))) (_1!1225 lt!55183) (_2!1225 lt!55183)))))

(declare-fun c!18998 () Bool)

(declare-fun b!108212 () Bool)

(assert (=> b!108212 (= e!70428 (ite c!18997 (t!5741 (toList!808 (+!148 lt!55185 lt!55182))) (ite c!18998 (Cons!1621 (h!2219 (toList!808 (+!148 lt!55185 lt!55182))) (t!5741 (toList!808 (+!148 lt!55185 lt!55182)))) Nil!1622)))))

(declare-fun b!108213 () Bool)

(declare-fun e!70432 () List!1625)

(declare-fun call!11483 () List!1625)

(assert (=> b!108213 (= e!70432 call!11483)))

(declare-fun bm!11481 () Bool)

(declare-fun call!11485 () List!1625)

(assert (=> bm!11481 (= call!11483 call!11485)))

(declare-fun b!108214 () Bool)

(assert (=> b!108214 (= e!70431 call!11484)))

(declare-fun d!29975 () Bool)

(declare-fun e!70430 () Bool)

(assert (=> d!29975 e!70430))

(declare-fun res!53685 () Bool)

(assert (=> d!29975 (=> (not res!53685) (not e!70430))))

(declare-fun lt!55682 () List!1625)

(assert (=> d!29975 (= res!53685 (isStrictlySorted!310 lt!55682))))

(assert (=> d!29975 (= lt!55682 e!70431)))

(assert (=> d!29975 (= c!18996 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55185 lt!55182))) (bvslt (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 lt!55182)))) (_1!1225 lt!55183))))))

(assert (=> d!29975 (isStrictlySorted!310 (toList!808 (+!148 lt!55185 lt!55182)))))

(assert (=> d!29975 (= (insertStrictlySorted!76 (toList!808 (+!148 lt!55185 lt!55182)) (_1!1225 lt!55183) (_2!1225 lt!55183)) lt!55682)))

(declare-fun b!108215 () Bool)

(assert (=> b!108215 (= e!70432 call!11483)))

(declare-fun bm!11482 () Bool)

(assert (=> bm!11482 (= call!11485 call!11484)))

(declare-fun b!108216 () Bool)

(assert (=> b!108216 (= c!18998 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55185 lt!55182))) (bvsgt (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 lt!55182)))) (_1!1225 lt!55183))))))

(assert (=> b!108216 (= e!70429 e!70432)))

(declare-fun b!108217 () Bool)

(assert (=> b!108217 (= e!70429 call!11485)))

(declare-fun b!108218 () Bool)

(declare-fun res!53686 () Bool)

(assert (=> b!108218 (=> (not res!53686) (not e!70430))))

(assert (=> b!108218 (= res!53686 (containsKey!161 lt!55682 (_1!1225 lt!55183)))))

(declare-fun b!108219 () Bool)

(assert (=> b!108219 (= e!70430 (contains!836 lt!55682 (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(assert (= (and d!29975 c!18996) b!108214))

(assert (= (and d!29975 (not c!18996)) b!108210))

(assert (= (and b!108210 c!18997) b!108217))

(assert (= (and b!108210 (not c!18997)) b!108216))

(assert (= (and b!108216 c!18998) b!108215))

(assert (= (and b!108216 (not c!18998)) b!108213))

(assert (= (or b!108215 b!108213) bm!11481))

(assert (= (or b!108217 bm!11481) bm!11482))

(assert (= (or b!108214 bm!11482) bm!11480))

(assert (= (and bm!11480 c!18995) b!108211))

(assert (= (and bm!11480 (not c!18995)) b!108212))

(assert (= (and d!29975 res!53685) b!108218))

(assert (= (and b!108218 res!53686) b!108219))

(declare-fun m!121801 () Bool)

(assert (=> bm!11480 m!121801))

(declare-fun m!121803 () Bool)

(assert (=> b!108218 m!121803))

(declare-fun m!121805 () Bool)

(assert (=> b!108219 m!121805))

(declare-fun m!121807 () Bool)

(assert (=> d!29975 m!121807))

(declare-fun m!121809 () Bool)

(assert (=> d!29975 m!121809))

(declare-fun m!121811 () Bool)

(assert (=> b!108211 m!121811))

(assert (=> d!29807 d!29975))

(declare-fun b!108220 () Bool)

(declare-fun e!70438 () ListLongMap!1585)

(declare-fun e!70434 () ListLongMap!1585)

(assert (=> b!108220 (= e!70438 e!70434)))

(declare-fun c!19001 () Bool)

(assert (=> b!108220 (= c!19001 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!108221 () Bool)

(assert (=> b!108221 (= e!70438 (ListLongMap!1586 Nil!1622))))

(declare-fun bm!11483 () Bool)

(declare-fun call!11486 () ListLongMap!1585)

(assert (=> bm!11483 (= call!11486 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun e!70437 () Bool)

(declare-fun b!108222 () Bool)

(declare-fun lt!55683 () ListLongMap!1585)

(assert (=> b!108222 (= e!70437 (= lt!55683 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun d!29977 () Bool)

(declare-fun e!70435 () Bool)

(assert (=> d!29977 e!70435))

(declare-fun res!53687 () Bool)

(assert (=> d!29977 (=> (not res!53687) (not e!70435))))

(assert (=> d!29977 (= res!53687 (not (contains!834 lt!55683 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29977 (= lt!55683 e!70438)))

(declare-fun c!18999 () Bool)

(assert (=> d!29977 (= c!18999 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!29977 (validMask!0 (mask!6764 (v!2914 (underlying!367 thiss!992))))))

(assert (=> d!29977 (= (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))) lt!55683)))

(declare-fun b!108223 () Bool)

(declare-fun e!70436 () Bool)

(declare-fun e!70433 () Bool)

(assert (=> b!108223 (= e!70436 e!70433)))

(assert (=> b!108223 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun res!53689 () Bool)

(assert (=> b!108223 (= res!53689 (contains!834 lt!55683 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!108223 (=> (not res!53689) (not e!70433))))

(declare-fun b!108224 () Bool)

(assert (=> b!108224 (= e!70435 e!70436)))

(declare-fun c!19002 () Bool)

(declare-fun e!70439 () Bool)

(assert (=> b!108224 (= c!19002 e!70439)))

(declare-fun res!53688 () Bool)

(assert (=> b!108224 (=> (not res!53688) (not e!70439))))

(assert (=> b!108224 (= res!53688 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108225 () Bool)

(assert (=> b!108225 (= e!70439 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!108225 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!108226 () Bool)

(assert (=> b!108226 (= e!70436 e!70437)))

(declare-fun c!19000 () Bool)

(assert (=> b!108226 (= c!19000 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108227 () Bool)

(assert (=> b!108227 (= e!70437 (isEmpty!373 lt!55683))))

(declare-fun b!108228 () Bool)

(assert (=> b!108228 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> b!108228 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2332 (_values!2589 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> b!108228 (= e!70433 (= (apply!99 lt!55683 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108229 () Bool)

(assert (=> b!108229 (= e!70434 call!11486)))

(declare-fun b!108230 () Bool)

(declare-fun res!53690 () Bool)

(assert (=> b!108230 (=> (not res!53690) (not e!70435))))

(assert (=> b!108230 (= res!53690 (not (contains!834 lt!55683 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108231 () Bool)

(declare-fun lt!55685 () Unit!3321)

(declare-fun lt!55684 () Unit!3321)

(assert (=> b!108231 (= lt!55685 lt!55684)))

(declare-fun lt!55688 () (_ BitVec 64))

(declare-fun lt!55686 () ListLongMap!1585)

(declare-fun lt!55687 () V!3235)

(declare-fun lt!55689 () (_ BitVec 64))

(assert (=> b!108231 (not (contains!834 (+!148 lt!55686 (tuple2!2429 lt!55688 lt!55687)) lt!55689))))

(assert (=> b!108231 (= lt!55684 (addStillNotContains!47 lt!55686 lt!55688 lt!55687 lt!55689))))

(assert (=> b!108231 (= lt!55689 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108231 (= lt!55687 (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108231 (= lt!55688 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!108231 (= lt!55686 call!11486)))

(assert (=> b!108231 (= e!70434 (+!148 call!11486 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29977 c!18999) b!108221))

(assert (= (and d!29977 (not c!18999)) b!108220))

(assert (= (and b!108220 c!19001) b!108231))

(assert (= (and b!108220 (not c!19001)) b!108229))

(assert (= (or b!108231 b!108229) bm!11483))

(assert (= (and d!29977 res!53687) b!108230))

(assert (= (and b!108230 res!53690) b!108224))

(assert (= (and b!108224 res!53688) b!108225))

(assert (= (and b!108224 c!19002) b!108223))

(assert (= (and b!108224 (not c!19002)) b!108226))

(assert (= (and b!108223 res!53689) b!108228))

(assert (= (and b!108226 c!19000) b!108222))

(assert (= (and b!108226 (not c!19000)) b!108227))

(declare-fun b_lambda!4839 () Bool)

(assert (=> (not b_lambda!4839) (not b!108228)))

(assert (=> b!108228 t!5738))

(declare-fun b_and!6675 () Bool)

(assert (= b_and!6671 (and (=> t!5738 result!3495) b_and!6675)))

(assert (=> b!108228 t!5740))

(declare-fun b_and!6677 () Bool)

(assert (= b_and!6673 (and (=> t!5740 result!3499) b_and!6677)))

(declare-fun b_lambda!4841 () Bool)

(assert (=> (not b_lambda!4841) (not b!108231)))

(assert (=> b!108231 t!5738))

(declare-fun b_and!6679 () Bool)

(assert (= b_and!6675 (and (=> t!5738 result!3495) b_and!6679)))

(assert (=> b!108231 t!5740))

(declare-fun b_and!6681 () Bool)

(assert (= b_and!6677 (and (=> t!5740 result!3499) b_and!6681)))

(declare-fun m!121813 () Bool)

(assert (=> b!108230 m!121813))

(declare-fun m!121815 () Bool)

(assert (=> bm!11483 m!121815))

(assert (=> b!108225 m!121769))

(assert (=> b!108225 m!121769))

(declare-fun m!121817 () Bool)

(assert (=> b!108225 m!121817))

(declare-fun m!121819 () Bool)

(assert (=> b!108228 m!121819))

(assert (=> b!108228 m!121015))

(declare-fun m!121821 () Bool)

(assert (=> b!108228 m!121821))

(assert (=> b!108228 m!121769))

(assert (=> b!108228 m!121015))

(assert (=> b!108228 m!121819))

(assert (=> b!108228 m!121769))

(declare-fun m!121823 () Bool)

(assert (=> b!108228 m!121823))

(declare-fun m!121825 () Bool)

(assert (=> b!108227 m!121825))

(declare-fun m!121827 () Bool)

(assert (=> d!29977 m!121827))

(assert (=> d!29977 m!120987))

(assert (=> b!108222 m!121815))

(assert (=> b!108220 m!121769))

(assert (=> b!108220 m!121769))

(assert (=> b!108220 m!121817))

(assert (=> b!108231 m!121819))

(assert (=> b!108231 m!121015))

(assert (=> b!108231 m!121821))

(declare-fun m!121829 () Bool)

(assert (=> b!108231 m!121829))

(declare-fun m!121831 () Bool)

(assert (=> b!108231 m!121831))

(assert (=> b!108231 m!121769))

(assert (=> b!108231 m!121015))

(declare-fun m!121833 () Bool)

(assert (=> b!108231 m!121833))

(assert (=> b!108231 m!121819))

(assert (=> b!108231 m!121829))

(declare-fun m!121835 () Bool)

(assert (=> b!108231 m!121835))

(assert (=> b!108223 m!121769))

(assert (=> b!108223 m!121769))

(declare-fun m!121837 () Bool)

(assert (=> b!108223 m!121837))

(assert (=> bm!11351 d!29977))

(declare-fun d!29979 () Bool)

(declare-fun lt!55692 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!111 (List!1625) (InoxSet tuple2!2428))

(assert (=> d!29979 (= lt!55692 (select (content!111 (toList!808 lt!55272)) lt!55182))))

(declare-fun e!70445 () Bool)

(assert (=> d!29979 (= lt!55692 e!70445)))

(declare-fun res!53696 () Bool)

(assert (=> d!29979 (=> (not res!53696) (not e!70445))))

(assert (=> d!29979 (= res!53696 ((_ is Cons!1621) (toList!808 lt!55272)))))

(assert (=> d!29979 (= (contains!836 (toList!808 lt!55272) lt!55182) lt!55692)))

(declare-fun b!108236 () Bool)

(declare-fun e!70444 () Bool)

(assert (=> b!108236 (= e!70445 e!70444)))

(declare-fun res!53695 () Bool)

(assert (=> b!108236 (=> res!53695 e!70444)))

(assert (=> b!108236 (= res!53695 (= (h!2219 (toList!808 lt!55272)) lt!55182))))

(declare-fun b!108237 () Bool)

(assert (=> b!108237 (= e!70444 (contains!836 (t!5741 (toList!808 lt!55272)) lt!55182))))

(assert (= (and d!29979 res!53696) b!108236))

(assert (= (and b!108236 (not res!53695)) b!108237))

(declare-fun m!121839 () Bool)

(assert (=> d!29979 m!121839))

(declare-fun m!121841 () Bool)

(assert (=> d!29979 m!121841))

(declare-fun m!121843 () Bool)

(assert (=> b!108237 m!121843))

(assert (=> b!107708 d!29979))

(declare-fun d!29981 () Bool)

(declare-fun e!70448 () Bool)

(assert (=> d!29981 e!70448))

(declare-fun c!19005 () Bool)

(assert (=> d!29981 (= c!19005 (and (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!29981 true))

(declare-fun _$29!144 () Unit!3321)

(assert (=> d!29981 (= (choose!668 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))) _$29!144)))

(declare-fun b!108242 () Bool)

(assert (=> b!108242 (= e!70448 (arrayContainsKey!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!108243 () Bool)

(assert (=> b!108243 (= e!70448 (ite (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!29981 c!19005) b!108242))

(assert (= (and d!29981 (not c!19005)) b!108243))

(assert (=> b!108242 m!120979))

(assert (=> b!108242 m!121005))

(assert (=> d!29841 d!29981))

(assert (=> d!29841 d!29817))

(declare-fun d!29983 () Bool)

(declare-fun e!70449 () Bool)

(assert (=> d!29983 e!70449))

(declare-fun res!53697 () Bool)

(assert (=> d!29983 (=> (not res!53697) (not e!70449))))

(declare-fun lt!55693 () ListLongMap!1585)

(assert (=> d!29983 (= res!53697 (contains!834 lt!55693 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun lt!55695 () List!1625)

(assert (=> d!29983 (= lt!55693 (ListLongMap!1586 lt!55695))))

(declare-fun lt!55694 () Unit!3321)

(declare-fun lt!55696 () Unit!3321)

(assert (=> d!29983 (= lt!55694 lt!55696)))

(assert (=> d!29983 (= (getValueByKey!157 lt!55695 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) (Some!162 (_2!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!29983 (= lt!55696 (lemmaContainsTupThenGetReturnValue!73 lt!55695 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (_2!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!29983 (= lt!55695 (insertStrictlySorted!76 (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373))) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (_2!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!29983 (= (+!148 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373)) (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55693)))

(declare-fun b!108244 () Bool)

(declare-fun res!53698 () Bool)

(assert (=> b!108244 (=> (not res!53698) (not e!70449))))

(assert (=> b!108244 (= res!53698 (= (getValueByKey!157 (toList!808 lt!55693) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) (Some!162 (_2!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!108245 () Bool)

(assert (=> b!108245 (= e!70449 (contains!836 (toList!808 lt!55693) (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (= (and d!29983 res!53697) b!108244))

(assert (= (and b!108244 res!53698) b!108245))

(declare-fun m!121845 () Bool)

(assert (=> d!29983 m!121845))

(declare-fun m!121847 () Bool)

(assert (=> d!29983 m!121847))

(declare-fun m!121849 () Bool)

(assert (=> d!29983 m!121849))

(declare-fun m!121851 () Bool)

(assert (=> d!29983 m!121851))

(declare-fun m!121853 () Bool)

(assert (=> b!108244 m!121853))

(declare-fun m!121855 () Bool)

(assert (=> b!108245 m!121855))

(assert (=> bm!11369 d!29983))

(assert (=> d!29819 d!29951))

(assert (=> b!107693 d!29861))

(declare-fun b!108262 () Bool)

(declare-fun e!70458 () Bool)

(declare-fun call!11491 () Bool)

(assert (=> b!108262 (= e!70458 (not call!11491))))

(declare-fun b!108263 () Bool)

(declare-fun e!70461 () Bool)

(declare-fun e!70459 () Bool)

(assert (=> b!108263 (= e!70461 e!70459)))

(declare-fun res!53707 () Bool)

(declare-fun call!11492 () Bool)

(assert (=> b!108263 (= res!53707 call!11492)))

(assert (=> b!108263 (=> (not res!53707) (not e!70459))))

(declare-fun b!108264 () Bool)

(declare-fun e!70460 () Bool)

(declare-fun lt!55701 () SeekEntryResult!260)

(assert (=> b!108264 (= e!70460 ((_ is Undefined!260) lt!55701))))

(declare-fun bm!11488 () Bool)

(assert (=> bm!11488 (= call!11491 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!108265 () Bool)

(assert (=> b!108265 (= e!70459 (not call!11491))))

(declare-fun d!29985 () Bool)

(assert (=> d!29985 e!70461))

(declare-fun c!19011 () Bool)

(assert (=> d!29985 (= c!19011 ((_ is MissingZero!260) lt!55701))))

(assert (=> d!29985 (= lt!55701 (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun lt!55702 () Unit!3321)

(declare-fun choose!678 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) Int) Unit!3321)

(assert (=> d!29985 (= lt!55702 (choose!678 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)))))

(assert (=> d!29985 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29985 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)) lt!55702)))

(declare-fun b!108266 () Bool)

(declare-fun res!53710 () Bool)

(assert (=> b!108266 (=> (not res!53710) (not e!70458))))

(assert (=> b!108266 (= res!53710 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3192 lt!55701)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108266 (and (bvsge (index!3192 lt!55701) #b00000000000000000000000000000000) (bvslt (index!3192 lt!55701) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108267 () Bool)

(assert (=> b!108267 (= e!70461 e!70460)))

(declare-fun c!19010 () Bool)

(assert (=> b!108267 (= c!19010 ((_ is MissingVacant!260) lt!55701))))

(declare-fun b!108268 () Bool)

(assert (=> b!108268 (and (bvsge (index!3189 lt!55701) #b00000000000000000000000000000000) (bvslt (index!3189 lt!55701) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun res!53709 () Bool)

(assert (=> b!108268 (= res!53709 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3189 lt!55701)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108268 (=> (not res!53709) (not e!70459))))

(declare-fun b!108269 () Bool)

(declare-fun res!53708 () Bool)

(assert (=> b!108269 (=> (not res!53708) (not e!70458))))

(assert (=> b!108269 (= res!53708 call!11492)))

(assert (=> b!108269 (= e!70460 e!70458)))

(declare-fun bm!11489 () Bool)

(assert (=> bm!11489 (= call!11492 (inRange!0 (ite c!19011 (index!3189 lt!55701) (index!3192 lt!55701)) (mask!6764 newMap!16)))))

(assert (= (and d!29985 c!19011) b!108263))

(assert (= (and d!29985 (not c!19011)) b!108267))

(assert (= (and b!108263 res!53707) b!108268))

(assert (= (and b!108268 res!53709) b!108265))

(assert (= (and b!108267 c!19010) b!108269))

(assert (= (and b!108267 (not c!19010)) b!108264))

(assert (= (and b!108269 res!53708) b!108266))

(assert (= (and b!108266 res!53710) b!108262))

(assert (= (or b!108263 b!108269) bm!11489))

(assert (= (or b!108265 b!108262) bm!11488))

(assert (=> bm!11488 m!120979))

(assert (=> bm!11488 m!121241))

(declare-fun m!121857 () Bool)

(assert (=> b!108268 m!121857))

(declare-fun m!121859 () Bool)

(assert (=> b!108266 m!121859))

(declare-fun m!121861 () Bool)

(assert (=> bm!11489 m!121861))

(assert (=> d!29985 m!120979))

(assert (=> d!29985 m!121239))

(assert (=> d!29985 m!120979))

(declare-fun m!121863 () Bool)

(assert (=> d!29985 m!121863))

(assert (=> d!29985 m!121327))

(assert (=> bm!11431 d!29985))

(declare-fun d!29987 () Bool)

(declare-fun lt!55703 () Bool)

(assert (=> d!29987 (= lt!55703 (select (content!111 (toList!808 lt!55268)) lt!55182))))

(declare-fun e!70463 () Bool)

(assert (=> d!29987 (= lt!55703 e!70463)))

(declare-fun res!53712 () Bool)

(assert (=> d!29987 (=> (not res!53712) (not e!70463))))

(assert (=> d!29987 (= res!53712 ((_ is Cons!1621) (toList!808 lt!55268)))))

(assert (=> d!29987 (= (contains!836 (toList!808 lt!55268) lt!55182) lt!55703)))

(declare-fun b!108270 () Bool)

(declare-fun e!70462 () Bool)

(assert (=> b!108270 (= e!70463 e!70462)))

(declare-fun res!53711 () Bool)

(assert (=> b!108270 (=> res!53711 e!70462)))

(assert (=> b!108270 (= res!53711 (= (h!2219 (toList!808 lt!55268)) lt!55182))))

(declare-fun b!108271 () Bool)

(assert (=> b!108271 (= e!70462 (contains!836 (t!5741 (toList!808 lt!55268)) lt!55182))))

(assert (= (and d!29987 res!53712) b!108270))

(assert (= (and b!108270 (not res!53711)) b!108271))

(declare-fun m!121865 () Bool)

(assert (=> d!29987 m!121865))

(declare-fun m!121867 () Bool)

(assert (=> d!29987 m!121867))

(declare-fun m!121869 () Bool)

(assert (=> b!108271 m!121869))

(assert (=> b!107706 d!29987))

(declare-fun bm!11492 () Bool)

(declare-fun call!11495 () (_ BitVec 32))

(assert (=> bm!11492 (= call!11495 (arrayCountValidKeys!0 (_keys!4316 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108280 () Bool)

(declare-fun e!70468 () (_ BitVec 32))

(declare-fun e!70469 () (_ BitVec 32))

(assert (=> b!108280 (= e!70468 e!70469)))

(declare-fun c!19017 () Bool)

(assert (=> b!108280 (= c!19017 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108281 () Bool)

(assert (=> b!108281 (= e!70469 (bvadd #b00000000000000000000000000000001 call!11495))))

(declare-fun d!29989 () Bool)

(declare-fun lt!55706 () (_ BitVec 32))

(assert (=> d!29989 (and (bvsge lt!55706 #b00000000000000000000000000000000) (bvsle lt!55706 (bvsub (size!2331 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29989 (= lt!55706 e!70468)))

(declare-fun c!19016 () Bool)

(assert (=> d!29989 (= c!19016 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(assert (=> d!29989 (and (bvsle #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2331 (_keys!4316 newMap!16)) (size!2331 (_keys!4316 newMap!16))))))

(assert (=> d!29989 (= (arrayCountValidKeys!0 (_keys!4316 newMap!16) #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) lt!55706)))

(declare-fun b!108282 () Bool)

(assert (=> b!108282 (= e!70468 #b00000000000000000000000000000000)))

(declare-fun b!108283 () Bool)

(assert (=> b!108283 (= e!70469 call!11495)))

(assert (= (and d!29989 c!19016) b!108282))

(assert (= (and d!29989 (not c!19016)) b!108280))

(assert (= (and b!108280 c!19017) b!108281))

(assert (= (and b!108280 (not c!19017)) b!108283))

(assert (= (or b!108281 b!108283) bm!11492))

(declare-fun m!121871 () Bool)

(assert (=> bm!11492 m!121871))

(assert (=> b!108280 m!121333))

(assert (=> b!108280 m!121333))

(assert (=> b!108280 m!121341))

(assert (=> b!107946 d!29989))

(declare-fun d!29991 () Bool)

(declare-fun e!70472 () Bool)

(assert (=> d!29991 e!70472))

(declare-fun res!53718 () Bool)

(assert (=> d!29991 (=> (not res!53718) (not e!70472))))

(declare-fun lt!55712 () SeekEntryResult!260)

(assert (=> d!29991 (= res!53718 ((_ is Found!260) lt!55712))))

(assert (=> d!29991 (= lt!55712 (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun lt!55711 () Unit!3321)

(declare-fun choose!679 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) Int) Unit!3321)

(assert (=> d!29991 (= lt!55711 (choose!679 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)))))

(assert (=> d!29991 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29991 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)) lt!55711)))

(declare-fun b!108288 () Bool)

(declare-fun res!53717 () Bool)

(assert (=> b!108288 (=> (not res!53717) (not e!70472))))

(assert (=> b!108288 (= res!53717 (inRange!0 (index!3190 lt!55712) (mask!6764 newMap!16)))))

(declare-fun b!108289 () Bool)

(assert (=> b!108289 (= e!70472 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55712)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108289 (and (bvsge (index!3190 lt!55712) #b00000000000000000000000000000000) (bvslt (index!3190 lt!55712) (size!2331 (_keys!4316 newMap!16))))))

(assert (= (and d!29991 res!53718) b!108288))

(assert (= (and b!108288 res!53717) b!108289))

(assert (=> d!29991 m!120979))

(assert (=> d!29991 m!121239))

(assert (=> d!29991 m!120979))

(declare-fun m!121873 () Bool)

(assert (=> d!29991 m!121873))

(assert (=> d!29991 m!121327))

(declare-fun m!121875 () Bool)

(assert (=> b!108288 m!121875))

(declare-fun m!121877 () Bool)

(assert (=> b!108289 m!121877))

(assert (=> bm!11432 d!29991))

(assert (=> b!107760 d!29861))

(declare-fun d!29993 () Bool)

(declare-fun res!53719 () Bool)

(declare-fun e!70473 () Bool)

(assert (=> d!29993 (=> (not res!53719) (not e!70473))))

(assert (=> d!29993 (= res!53719 (simpleValid!75 (_2!1226 lt!55419)))))

(assert (=> d!29993 (= (valid!426 (_2!1226 lt!55419)) e!70473)))

(declare-fun b!108290 () Bool)

(declare-fun res!53720 () Bool)

(assert (=> b!108290 (=> (not res!53720) (not e!70473))))

(assert (=> b!108290 (= res!53720 (= (arrayCountValidKeys!0 (_keys!4316 (_2!1226 lt!55419)) #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55419)))) (_size!505 (_2!1226 lt!55419))))))

(declare-fun b!108291 () Bool)

(declare-fun res!53721 () Bool)

(assert (=> b!108291 (=> (not res!53721) (not e!70473))))

(assert (=> b!108291 (= res!53721 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 (_2!1226 lt!55419)) (mask!6764 (_2!1226 lt!55419))))))

(declare-fun b!108292 () Bool)

(assert (=> b!108292 (= e!70473 (arrayNoDuplicates!0 (_keys!4316 (_2!1226 lt!55419)) #b00000000000000000000000000000000 Nil!1623))))

(assert (= (and d!29993 res!53719) b!108290))

(assert (= (and b!108290 res!53720) b!108291))

(assert (= (and b!108291 res!53721) b!108292))

(declare-fun m!121879 () Bool)

(assert (=> d!29993 m!121879))

(declare-fun m!121881 () Bool)

(assert (=> b!108290 m!121881))

(declare-fun m!121883 () Bool)

(assert (=> b!108291 m!121883))

(declare-fun m!121885 () Bool)

(assert (=> b!108292 m!121885))

(assert (=> d!29833 d!29993))

(assert (=> d!29833 d!29845))

(assert (=> b!107695 d!29977))

(declare-fun d!29995 () Bool)

(declare-fun lt!55713 () Bool)

(assert (=> d!29995 (= lt!55713 (select (content!111 (toList!808 lt!55240)) lt!55183))))

(declare-fun e!70475 () Bool)

(assert (=> d!29995 (= lt!55713 e!70475)))

(declare-fun res!53723 () Bool)

(assert (=> d!29995 (=> (not res!53723) (not e!70475))))

(assert (=> d!29995 (= res!53723 ((_ is Cons!1621) (toList!808 lt!55240)))))

(assert (=> d!29995 (= (contains!836 (toList!808 lt!55240) lt!55183) lt!55713)))

(declare-fun b!108293 () Bool)

(declare-fun e!70474 () Bool)

(assert (=> b!108293 (= e!70475 e!70474)))

(declare-fun res!53722 () Bool)

(assert (=> b!108293 (=> res!53722 e!70474)))

(assert (=> b!108293 (= res!53722 (= (h!2219 (toList!808 lt!55240)) lt!55183))))

(declare-fun b!108294 () Bool)

(assert (=> b!108294 (= e!70474 (contains!836 (t!5741 (toList!808 lt!55240)) lt!55183))))

(assert (= (and d!29995 res!53723) b!108293))

(assert (= (and b!108293 (not res!53722)) b!108294))

(declare-fun m!121887 () Bool)

(assert (=> d!29995 m!121887))

(declare-fun m!121889 () Bool)

(assert (=> d!29995 m!121889))

(declare-fun m!121891 () Bool)

(assert (=> b!108294 m!121891))

(assert (=> b!107668 d!29995))

(assert (=> b!107877 d!29951))

(declare-fun b!108295 () Bool)

(declare-fun e!70478 () Bool)

(declare-fun call!11496 () Bool)

(assert (=> b!108295 (= e!70478 call!11496)))

(declare-fun b!108296 () Bool)

(declare-fun e!70479 () Bool)

(assert (=> b!108296 (= e!70479 (contains!837 Nil!1623 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11493 () Bool)

(declare-fun c!19018 () Bool)

(assert (=> bm!11493 (= call!11496 (arrayNoDuplicates!0 (_keys!4316 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19018 (Cons!1622 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) Nil!1623) Nil!1623)))))

(declare-fun b!108298 () Bool)

(assert (=> b!108298 (= e!70478 call!11496)))

(declare-fun b!108299 () Bool)

(declare-fun e!70476 () Bool)

(declare-fun e!70477 () Bool)

(assert (=> b!108299 (= e!70476 e!70477)))

(declare-fun res!53726 () Bool)

(assert (=> b!108299 (=> (not res!53726) (not e!70477))))

(assert (=> b!108299 (= res!53726 (not e!70479))))

(declare-fun res!53724 () Bool)

(assert (=> b!108299 (=> (not res!53724) (not e!70479))))

(assert (=> b!108299 (= res!53724 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!29997 () Bool)

(declare-fun res!53725 () Bool)

(assert (=> d!29997 (=> res!53725 e!70476)))

(assert (=> d!29997 (= res!53725 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(assert (=> d!29997 (= (arrayNoDuplicates!0 (_keys!4316 newMap!16) #b00000000000000000000000000000000 Nil!1623) e!70476)))

(declare-fun b!108297 () Bool)

(assert (=> b!108297 (= e!70477 e!70478)))

(assert (=> b!108297 (= c!19018 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!29997 (not res!53725)) b!108299))

(assert (= (and b!108299 res!53724) b!108296))

(assert (= (and b!108299 res!53726) b!108297))

(assert (= (and b!108297 c!19018) b!108298))

(assert (= (and b!108297 (not c!19018)) b!108295))

(assert (= (or b!108298 b!108295) bm!11493))

(assert (=> b!108296 m!121333))

(assert (=> b!108296 m!121333))

(declare-fun m!121893 () Bool)

(assert (=> b!108296 m!121893))

(assert (=> bm!11493 m!121333))

(declare-fun m!121895 () Bool)

(assert (=> bm!11493 m!121895))

(assert (=> b!108299 m!121333))

(assert (=> b!108299 m!121333))

(assert (=> b!108299 m!121341))

(assert (=> b!108297 m!121333))

(assert (=> b!108297 m!121333))

(assert (=> b!108297 m!121341))

(assert (=> b!107948 d!29997))

(declare-fun bm!11494 () Bool)

(declare-fun call!11497 () Bool)

(declare-fun lt!55720 () ListLongMap!1585)

(assert (=> bm!11494 (= call!11497 (contains!834 lt!55720 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108300 () Bool)

(declare-fun e!70483 () Unit!3321)

(declare-fun lt!55726 () Unit!3321)

(assert (=> b!108300 (= e!70483 lt!55726)))

(declare-fun lt!55714 () ListLongMap!1585)

(assert (=> b!108300 (= lt!55714 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite c!18921 (_values!2589 newMap!16) lt!55420) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55732 () (_ BitVec 64))

(assert (=> b!108300 (= lt!55732 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55729 () (_ BitVec 64))

(assert (=> b!108300 (= lt!55729 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55727 () Unit!3321)

(assert (=> b!108300 (= lt!55727 (addStillContains!75 lt!55714 lt!55732 (zeroValue!2479 newMap!16) lt!55729))))

(assert (=> b!108300 (contains!834 (+!148 lt!55714 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16))) lt!55729)))

(declare-fun lt!55719 () Unit!3321)

(assert (=> b!108300 (= lt!55719 lt!55727)))

(declare-fun lt!55722 () ListLongMap!1585)

(assert (=> b!108300 (= lt!55722 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite c!18921 (_values!2589 newMap!16) lt!55420) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55731 () (_ BitVec 64))

(assert (=> b!108300 (= lt!55731 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55734 () (_ BitVec 64))

(assert (=> b!108300 (= lt!55734 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55730 () Unit!3321)

(assert (=> b!108300 (= lt!55730 (addApplyDifferent!75 lt!55722 lt!55731 (minValue!2479 newMap!16) lt!55734))))

(assert (=> b!108300 (= (apply!99 (+!148 lt!55722 (tuple2!2429 lt!55731 (minValue!2479 newMap!16))) lt!55734) (apply!99 lt!55722 lt!55734))))

(declare-fun lt!55735 () Unit!3321)

(assert (=> b!108300 (= lt!55735 lt!55730)))

(declare-fun lt!55725 () ListLongMap!1585)

(assert (=> b!108300 (= lt!55725 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite c!18921 (_values!2589 newMap!16) lt!55420) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55715 () (_ BitVec 64))

(assert (=> b!108300 (= lt!55715 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55728 () (_ BitVec 64))

(assert (=> b!108300 (= lt!55728 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55724 () Unit!3321)

(assert (=> b!108300 (= lt!55724 (addApplyDifferent!75 lt!55725 lt!55715 (zeroValue!2479 newMap!16) lt!55728))))

(assert (=> b!108300 (= (apply!99 (+!148 lt!55725 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16))) lt!55728) (apply!99 lt!55725 lt!55728))))

(declare-fun lt!55716 () Unit!3321)

(assert (=> b!108300 (= lt!55716 lt!55724)))

(declare-fun lt!55721 () ListLongMap!1585)

(assert (=> b!108300 (= lt!55721 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite c!18921 (_values!2589 newMap!16) lt!55420) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55718 () (_ BitVec 64))

(assert (=> b!108300 (= lt!55718 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55733 () (_ BitVec 64))

(assert (=> b!108300 (= lt!55733 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108300 (= lt!55726 (addApplyDifferent!75 lt!55721 lt!55718 (minValue!2479 newMap!16) lt!55733))))

(assert (=> b!108300 (= (apply!99 (+!148 lt!55721 (tuple2!2429 lt!55718 (minValue!2479 newMap!16))) lt!55733) (apply!99 lt!55721 lt!55733))))

(declare-fun bm!11495 () Bool)

(declare-fun call!11498 () ListLongMap!1585)

(declare-fun call!11503 () ListLongMap!1585)

(assert (=> bm!11495 (= call!11498 call!11503)))

(declare-fun b!108301 () Bool)

(declare-fun e!70480 () Bool)

(assert (=> b!108301 (= e!70480 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108303 () Bool)

(declare-fun res!53732 () Bool)

(declare-fun e!70487 () Bool)

(assert (=> b!108303 (=> (not res!53732) (not e!70487))))

(declare-fun e!70490 () Bool)

(assert (=> b!108303 (= res!53732 e!70490)))

(declare-fun c!19023 () Bool)

(assert (=> b!108303 (= c!19023 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108304 () Bool)

(declare-fun e!70491 () ListLongMap!1585)

(assert (=> b!108304 (= e!70491 call!11498)))

(declare-fun b!108305 () Bool)

(declare-fun e!70484 () ListLongMap!1585)

(assert (=> b!108305 (= e!70484 call!11498)))

(declare-fun b!108306 () Bool)

(declare-fun res!53729 () Bool)

(assert (=> b!108306 (=> (not res!53729) (not e!70487))))

(declare-fun e!70492 () Bool)

(assert (=> b!108306 (= res!53729 e!70492)))

(declare-fun res!53727 () Bool)

(assert (=> b!108306 (=> res!53727 e!70492)))

(assert (=> b!108306 (= res!53727 (not e!70480))))

(declare-fun res!53728 () Bool)

(assert (=> b!108306 (=> (not res!53728) (not e!70480))))

(assert (=> b!108306 (= res!53728 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun call!11502 () ListLongMap!1585)

(declare-fun bm!11496 () Bool)

(assert (=> bm!11496 (= call!11502 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite c!18921 (_values!2589 newMap!16) lt!55420) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun c!19024 () Bool)

(declare-fun c!19022 () Bool)

(declare-fun bm!11497 () Bool)

(declare-fun call!11500 () ListLongMap!1585)

(declare-fun call!11501 () ListLongMap!1585)

(assert (=> bm!11497 (= call!11503 (+!148 (ite c!19022 call!11502 (ite c!19024 call!11500 call!11501)) (ite (or c!19022 c!19024) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!108307 () Bool)

(declare-fun Unit!3346 () Unit!3321)

(assert (=> b!108307 (= e!70483 Unit!3346)))

(declare-fun b!108308 () Bool)

(declare-fun e!70486 () Bool)

(assert (=> b!108308 (= e!70490 e!70486)))

(declare-fun res!53735 () Bool)

(assert (=> b!108308 (= res!53735 call!11497)))

(assert (=> b!108308 (=> (not res!53735) (not e!70486))))

(declare-fun d!29999 () Bool)

(assert (=> d!29999 e!70487))

(declare-fun res!53734 () Bool)

(assert (=> d!29999 (=> (not res!53734) (not e!70487))))

(assert (=> d!29999 (= res!53734 (or (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))))

(declare-fun lt!55723 () ListLongMap!1585)

(assert (=> d!29999 (= lt!55720 lt!55723)))

(declare-fun lt!55717 () Unit!3321)

(assert (=> d!29999 (= lt!55717 e!70483)))

(declare-fun c!19021 () Bool)

(declare-fun e!70488 () Bool)

(assert (=> d!29999 (= c!19021 e!70488)))

(declare-fun res!53730 () Bool)

(assert (=> d!29999 (=> (not res!53730) (not e!70488))))

(assert (=> d!29999 (= res!53730 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun e!70481 () ListLongMap!1585)

(assert (=> d!29999 (= lt!55723 e!70481)))

(assert (=> d!29999 (= c!19022 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29999 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29999 (= (getCurrentListMap!493 (_keys!4316 newMap!16) (ite c!18921 (_values!2589 newMap!16) lt!55420) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55720)))

(declare-fun b!108302 () Bool)

(declare-fun c!19019 () Bool)

(assert (=> b!108302 (= c!19019 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108302 (= e!70491 e!70484)))

(declare-fun b!108309 () Bool)

(assert (=> b!108309 (= e!70488 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108310 () Bool)

(assert (=> b!108310 (= e!70490 (not call!11497))))

(declare-fun b!108311 () Bool)

(declare-fun e!70489 () Bool)

(declare-fun call!11499 () Bool)

(assert (=> b!108311 (= e!70489 (not call!11499))))

(declare-fun b!108312 () Bool)

(assert (=> b!108312 (= e!70487 e!70489)))

(declare-fun c!19020 () Bool)

(assert (=> b!108312 (= c!19020 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108313 () Bool)

(declare-fun e!70485 () Bool)

(assert (=> b!108313 (= e!70492 e!70485)))

(declare-fun res!53731 () Bool)

(assert (=> b!108313 (=> (not res!53731) (not e!70485))))

(assert (=> b!108313 (= res!53731 (contains!834 lt!55720 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108313 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun bm!11498 () Bool)

(assert (=> bm!11498 (= call!11501 call!11500)))

(declare-fun b!108314 () Bool)

(declare-fun e!70482 () Bool)

(assert (=> b!108314 (= e!70482 (= (apply!99 lt!55720 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun bm!11499 () Bool)

(assert (=> bm!11499 (= call!11499 (contains!834 lt!55720 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108315 () Bool)

(assert (=> b!108315 (= e!70484 call!11501)))

(declare-fun b!108316 () Bool)

(assert (=> b!108316 (= e!70485 (= (apply!99 lt!55720 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 (ite c!18921 (_values!2589 newMap!16) lt!55420)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108316 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 (ite c!18921 (_values!2589 newMap!16) lt!55420))))))

(assert (=> b!108316 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108317 () Bool)

(assert (=> b!108317 (= e!70481 (+!148 call!11503 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun b!108318 () Bool)

(assert (=> b!108318 (= e!70486 (= (apply!99 lt!55720 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!108319 () Bool)

(assert (=> b!108319 (= e!70481 e!70491)))

(assert (=> b!108319 (= c!19024 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108320 () Bool)

(assert (=> b!108320 (= e!70489 e!70482)))

(declare-fun res!53733 () Bool)

(assert (=> b!108320 (= res!53733 call!11499)))

(assert (=> b!108320 (=> (not res!53733) (not e!70482))))

(declare-fun bm!11500 () Bool)

(assert (=> bm!11500 (= call!11500 call!11502)))

(assert (= (and d!29999 c!19022) b!108317))

(assert (= (and d!29999 (not c!19022)) b!108319))

(assert (= (and b!108319 c!19024) b!108304))

(assert (= (and b!108319 (not c!19024)) b!108302))

(assert (= (and b!108302 c!19019) b!108305))

(assert (= (and b!108302 (not c!19019)) b!108315))

(assert (= (or b!108305 b!108315) bm!11498))

(assert (= (or b!108304 bm!11498) bm!11500))

(assert (= (or b!108304 b!108305) bm!11495))

(assert (= (or b!108317 bm!11500) bm!11496))

(assert (= (or b!108317 bm!11495) bm!11497))

(assert (= (and d!29999 res!53730) b!108309))

(assert (= (and d!29999 c!19021) b!108300))

(assert (= (and d!29999 (not c!19021)) b!108307))

(assert (= (and d!29999 res!53734) b!108306))

(assert (= (and b!108306 res!53728) b!108301))

(assert (= (and b!108306 (not res!53727)) b!108313))

(assert (= (and b!108313 res!53731) b!108316))

(assert (= (and b!108306 res!53729) b!108303))

(assert (= (and b!108303 c!19023) b!108308))

(assert (= (and b!108303 (not c!19023)) b!108310))

(assert (= (and b!108308 res!53735) b!108318))

(assert (= (or b!108308 b!108310) bm!11494))

(assert (= (and b!108303 res!53732) b!108312))

(assert (= (and b!108312 c!19020) b!108320))

(assert (= (and b!108312 (not c!19020)) b!108311))

(assert (= (and b!108320 res!53733) b!108314))

(assert (= (or b!108320 b!108311) bm!11499))

(declare-fun b_lambda!4843 () Bool)

(assert (=> (not b_lambda!4843) (not b!108316)))

(assert (=> b!108316 t!5750))

(declare-fun b_and!6683 () Bool)

(assert (= b_and!6679 (and (=> t!5750 result!3509) b_and!6683)))

(assert (=> b!108316 t!5752))

(declare-fun b_and!6685 () Bool)

(assert (= b_and!6681 (and (=> t!5752 result!3511) b_and!6685)))

(declare-fun m!121897 () Bool)

(assert (=> bm!11494 m!121897))

(assert (=> b!108313 m!121333))

(assert (=> b!108313 m!121333))

(declare-fun m!121899 () Bool)

(assert (=> b!108313 m!121899))

(assert (=> b!108309 m!121333))

(assert (=> b!108309 m!121333))

(assert (=> b!108309 m!121341))

(declare-fun m!121901 () Bool)

(assert (=> bm!11499 m!121901))

(declare-fun m!121903 () Bool)

(assert (=> b!108300 m!121903))

(declare-fun m!121905 () Bool)

(assert (=> b!108300 m!121905))

(declare-fun m!121907 () Bool)

(assert (=> b!108300 m!121907))

(declare-fun m!121909 () Bool)

(assert (=> b!108300 m!121909))

(declare-fun m!121911 () Bool)

(assert (=> b!108300 m!121911))

(declare-fun m!121913 () Bool)

(assert (=> b!108300 m!121913))

(declare-fun m!121915 () Bool)

(assert (=> b!108300 m!121915))

(declare-fun m!121917 () Bool)

(assert (=> b!108300 m!121917))

(declare-fun m!121919 () Bool)

(assert (=> b!108300 m!121919))

(declare-fun m!121921 () Bool)

(assert (=> b!108300 m!121921))

(declare-fun m!121923 () Bool)

(assert (=> b!108300 m!121923))

(assert (=> b!108300 m!121905))

(assert (=> b!108300 m!121917))

(declare-fun m!121925 () Bool)

(assert (=> b!108300 m!121925))

(declare-fun m!121927 () Bool)

(assert (=> b!108300 m!121927))

(declare-fun m!121929 () Bool)

(assert (=> b!108300 m!121929))

(assert (=> b!108300 m!121911))

(declare-fun m!121931 () Bool)

(assert (=> b!108300 m!121931))

(assert (=> b!108300 m!121333))

(declare-fun m!121933 () Bool)

(assert (=> b!108300 m!121933))

(assert (=> b!108300 m!121919))

(declare-fun m!121935 () Bool)

(assert (=> b!108317 m!121935))

(assert (=> b!108316 m!121333))

(assert (=> b!108316 m!121333))

(declare-fun m!121937 () Bool)

(assert (=> b!108316 m!121937))

(declare-fun m!121939 () Bool)

(assert (=> b!108316 m!121939))

(assert (=> b!108316 m!121727))

(declare-fun m!121941 () Bool)

(assert (=> b!108316 m!121941))

(assert (=> b!108316 m!121727))

(assert (=> b!108316 m!121939))

(assert (=> bm!11496 m!121923))

(assert (=> b!108301 m!121333))

(assert (=> b!108301 m!121333))

(assert (=> b!108301 m!121341))

(declare-fun m!121943 () Bool)

(assert (=> b!108314 m!121943))

(declare-fun m!121945 () Bool)

(assert (=> bm!11497 m!121945))

(declare-fun m!121947 () Bool)

(assert (=> b!108318 m!121947))

(assert (=> d!29999 m!121327))

(assert (=> bm!11433 d!29999))

(declare-fun d!30001 () Bool)

(declare-fun lt!55736 () Bool)

(assert (=> d!30001 (= lt!55736 (select (content!111 (toList!808 lt!55236)) lt!55183))))

(declare-fun e!70494 () Bool)

(assert (=> d!30001 (= lt!55736 e!70494)))

(declare-fun res!53737 () Bool)

(assert (=> d!30001 (=> (not res!53737) (not e!70494))))

(assert (=> d!30001 (= res!53737 ((_ is Cons!1621) (toList!808 lt!55236)))))

(assert (=> d!30001 (= (contains!836 (toList!808 lt!55236) lt!55183) lt!55736)))

(declare-fun b!108321 () Bool)

(declare-fun e!70493 () Bool)

(assert (=> b!108321 (= e!70494 e!70493)))

(declare-fun res!53736 () Bool)

(assert (=> b!108321 (=> res!53736 e!70493)))

(assert (=> b!108321 (= res!53736 (= (h!2219 (toList!808 lt!55236)) lt!55183))))

(declare-fun b!108322 () Bool)

(assert (=> b!108322 (= e!70493 (contains!836 (t!5741 (toList!808 lt!55236)) lt!55183))))

(assert (= (and d!30001 res!53737) b!108321))

(assert (= (and b!108321 (not res!53736)) b!108322))

(declare-fun m!121949 () Bool)

(assert (=> d!30001 m!121949))

(declare-fun m!121951 () Bool)

(assert (=> d!30001 m!121951))

(declare-fun m!121953 () Bool)

(assert (=> b!108322 m!121953))

(assert (=> b!107666 d!30001))

(declare-fun d!30003 () Bool)

(declare-fun e!70496 () Bool)

(assert (=> d!30003 e!70496))

(declare-fun res!53738 () Bool)

(assert (=> d!30003 (=> res!53738 e!70496)))

(declare-fun lt!55738 () Bool)

(assert (=> d!30003 (= res!53738 (not lt!55738))))

(declare-fun lt!55739 () Bool)

(assert (=> d!30003 (= lt!55738 lt!55739)))

(declare-fun lt!55737 () Unit!3321)

(declare-fun e!70495 () Unit!3321)

(assert (=> d!30003 (= lt!55737 e!70495)))

(declare-fun c!19025 () Bool)

(assert (=> d!30003 (= c!19025 lt!55739)))

(assert (=> d!30003 (= lt!55739 (containsKey!161 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!30003 (= (contains!834 lt!55326 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!55738)))

(declare-fun b!108323 () Bool)

(declare-fun lt!55740 () Unit!3321)

(assert (=> b!108323 (= e!70495 lt!55740)))

(assert (=> b!108323 (= lt!55740 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!108323 (isDefined!110 (getValueByKey!157 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108324 () Bool)

(declare-fun Unit!3347 () Unit!3321)

(assert (=> b!108324 (= e!70495 Unit!3347)))

(declare-fun b!108325 () Bool)

(assert (=> b!108325 (= e!70496 (isDefined!110 (getValueByKey!157 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!30003 c!19025) b!108323))

(assert (= (and d!30003 (not c!19025)) b!108324))

(assert (= (and d!30003 (not res!53738)) b!108325))

(assert (=> d!30003 m!121117))

(declare-fun m!121955 () Bool)

(assert (=> d!30003 m!121955))

(assert (=> b!108323 m!121117))

(declare-fun m!121957 () Bool)

(assert (=> b!108323 m!121957))

(assert (=> b!108323 m!121117))

(assert (=> b!108323 m!121679))

(assert (=> b!108323 m!121679))

(declare-fun m!121959 () Bool)

(assert (=> b!108323 m!121959))

(assert (=> b!108325 m!121117))

(assert (=> b!108325 m!121679))

(assert (=> b!108325 m!121679))

(assert (=> b!108325 m!121959))

(assert (=> b!107764 d!30003))

(declare-fun d!30005 () Bool)

(assert (=> d!30005 (= (apply!99 lt!55326 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!157 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4450 () Bool)

(assert (= bs!4450 d!30005))

(assert (=> bs!4450 m!121421))

(assert (=> bs!4450 m!121421))

(declare-fun m!121961 () Bool)

(assert (=> bs!4450 m!121961))

(assert (=> b!107765 d!30005))

(assert (=> d!29835 d!29839))

(declare-fun d!30007 () Bool)

(assert (=> d!30007 (not (arrayContainsKey!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!30007 true))

(declare-fun _$68!109 () Unit!3321)

(assert (=> d!30007 (= (choose!68 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623)) _$68!109)))

(declare-fun bs!4451 () Bool)

(assert (= bs!4451 d!30007))

(assert (=> bs!4451 m!120979))

(assert (=> bs!4451 m!121005))

(assert (=> d!29835 d!30007))

(declare-fun d!30009 () Bool)

(assert (=> d!30009 (= (apply!99 lt!55258 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1344 (getValueByKey!157 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4452 () Bool)

(assert (= bs!4452 d!30009))

(assert (=> bs!4452 m!121117))

(assert (=> bs!4452 m!121321))

(assert (=> bs!4452 m!121321))

(declare-fun m!121963 () Bool)

(assert (=> bs!4452 m!121963))

(assert (=> b!107701 d!30009))

(assert (=> b!107701 d!29871))

(declare-fun bm!11501 () Bool)

(declare-fun call!11504 () Bool)

(declare-fun lt!55747 () ListLongMap!1585)

(assert (=> bm!11501 (= call!11504 (contains!834 lt!55747 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108326 () Bool)

(declare-fun e!70500 () Unit!3321)

(declare-fun lt!55753 () Unit!3321)

(assert (=> b!108326 (= e!70500 lt!55753)))

(declare-fun lt!55741 () ListLongMap!1585)

(assert (=> b!108326 (= lt!55741 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55759 () (_ BitVec 64))

(assert (=> b!108326 (= lt!55759 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55756 () (_ BitVec 64))

(assert (=> b!108326 (= lt!55756 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55754 () Unit!3321)

(assert (=> b!108326 (= lt!55754 (addStillContains!75 lt!55741 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) lt!55756))))

(assert (=> b!108326 (contains!834 (+!148 lt!55741 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))) lt!55756)))

(declare-fun lt!55746 () Unit!3321)

(assert (=> b!108326 (= lt!55746 lt!55754)))

(declare-fun lt!55749 () ListLongMap!1585)

(assert (=> b!108326 (= lt!55749 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55758 () (_ BitVec 64))

(assert (=> b!108326 (= lt!55758 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55761 () (_ BitVec 64))

(assert (=> b!108326 (= lt!55761 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55757 () Unit!3321)

(assert (=> b!108326 (= lt!55757 (addApplyDifferent!75 lt!55749 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) lt!55761))))

(assert (=> b!108326 (= (apply!99 (+!148 lt!55749 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) lt!55761) (apply!99 lt!55749 lt!55761))))

(declare-fun lt!55762 () Unit!3321)

(assert (=> b!108326 (= lt!55762 lt!55757)))

(declare-fun lt!55752 () ListLongMap!1585)

(assert (=> b!108326 (= lt!55752 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55742 () (_ BitVec 64))

(assert (=> b!108326 (= lt!55742 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55755 () (_ BitVec 64))

(assert (=> b!108326 (= lt!55755 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55751 () Unit!3321)

(assert (=> b!108326 (= lt!55751 (addApplyDifferent!75 lt!55752 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) lt!55755))))

(assert (=> b!108326 (= (apply!99 (+!148 lt!55752 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))) lt!55755) (apply!99 lt!55752 lt!55755))))

(declare-fun lt!55743 () Unit!3321)

(assert (=> b!108326 (= lt!55743 lt!55751)))

(declare-fun lt!55748 () ListLongMap!1585)

(assert (=> b!108326 (= lt!55748 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55745 () (_ BitVec 64))

(assert (=> b!108326 (= lt!55745 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55760 () (_ BitVec 64))

(assert (=> b!108326 (= lt!55760 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108326 (= lt!55753 (addApplyDifferent!75 lt!55748 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) lt!55760))))

(assert (=> b!108326 (= (apply!99 (+!148 lt!55748 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) lt!55760) (apply!99 lt!55748 lt!55760))))

(declare-fun bm!11502 () Bool)

(declare-fun call!11505 () ListLongMap!1585)

(declare-fun call!11510 () ListLongMap!1585)

(assert (=> bm!11502 (= call!11505 call!11510)))

(declare-fun b!108327 () Bool)

(declare-fun e!70497 () Bool)

(assert (=> b!108327 (= e!70497 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108329 () Bool)

(declare-fun res!53744 () Bool)

(declare-fun e!70504 () Bool)

(assert (=> b!108329 (=> (not res!53744) (not e!70504))))

(declare-fun e!70507 () Bool)

(assert (=> b!108329 (= res!53744 e!70507)))

(declare-fun c!19030 () Bool)

(assert (=> b!108329 (= c!19030 (not (= (bvand (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108330 () Bool)

(declare-fun e!70508 () ListLongMap!1585)

(assert (=> b!108330 (= e!70508 call!11505)))

(declare-fun b!108331 () Bool)

(declare-fun e!70501 () ListLongMap!1585)

(assert (=> b!108331 (= e!70501 call!11505)))

(declare-fun b!108332 () Bool)

(declare-fun res!53741 () Bool)

(assert (=> b!108332 (=> (not res!53741) (not e!70504))))

(declare-fun e!70509 () Bool)

(assert (=> b!108332 (= res!53741 e!70509)))

(declare-fun res!53739 () Bool)

(assert (=> b!108332 (=> res!53739 e!70509)))

(assert (=> b!108332 (= res!53739 (not e!70497))))

(declare-fun res!53740 () Bool)

(assert (=> b!108332 (=> (not res!53740) (not e!70497))))

(assert (=> b!108332 (= res!53740 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun bm!11503 () Bool)

(declare-fun call!11509 () ListLongMap!1585)

(assert (=> bm!11503 (= call!11509 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun bm!11504 () Bool)

(declare-fun call!11507 () ListLongMap!1585)

(declare-fun c!19029 () Bool)

(declare-fun c!19031 () Bool)

(declare-fun call!11508 () ListLongMap!1585)

(assert (=> bm!11504 (= call!11510 (+!148 (ite c!19029 call!11509 (ite c!19031 call!11507 call!11508)) (ite (or c!19029 c!19031) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(declare-fun b!108333 () Bool)

(declare-fun Unit!3348 () Unit!3321)

(assert (=> b!108333 (= e!70500 Unit!3348)))

(declare-fun b!108334 () Bool)

(declare-fun e!70503 () Bool)

(assert (=> b!108334 (= e!70507 e!70503)))

(declare-fun res!53747 () Bool)

(assert (=> b!108334 (= res!53747 call!11504)))

(assert (=> b!108334 (=> (not res!53747) (not e!70503))))

(declare-fun d!30011 () Bool)

(assert (=> d!30011 e!70504))

(declare-fun res!53746 () Bool)

(assert (=> d!30011 (=> (not res!53746) (not e!70504))))

(assert (=> d!30011 (= res!53746 (or (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))))

(declare-fun lt!55750 () ListLongMap!1585)

(assert (=> d!30011 (= lt!55747 lt!55750)))

(declare-fun lt!55744 () Unit!3321)

(assert (=> d!30011 (= lt!55744 e!70500)))

(declare-fun c!19028 () Bool)

(declare-fun e!70505 () Bool)

(assert (=> d!30011 (= c!19028 e!70505)))

(declare-fun res!53742 () Bool)

(assert (=> d!30011 (=> (not res!53742) (not e!70505))))

(assert (=> d!30011 (= res!53742 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun e!70498 () ListLongMap!1585)

(assert (=> d!30011 (= lt!55750 e!70498)))

(assert (=> d!30011 (= c!19029 (and (not (= (bvand (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30011 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30011 (= (getCurrentListMap!493 (_keys!4316 newMap!16) (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55747)))

(declare-fun c!19026 () Bool)

(declare-fun b!108328 () Bool)

(assert (=> b!108328 (= c!19026 (and (not (= (bvand (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108328 (= e!70508 e!70501)))

(declare-fun b!108335 () Bool)

(assert (=> b!108335 (= e!70505 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108336 () Bool)

(assert (=> b!108336 (= e!70507 (not call!11504))))

(declare-fun b!108337 () Bool)

(declare-fun e!70506 () Bool)

(declare-fun call!11506 () Bool)

(assert (=> b!108337 (= e!70506 (not call!11506))))

(declare-fun b!108338 () Bool)

(assert (=> b!108338 (= e!70504 e!70506)))

(declare-fun c!19027 () Bool)

(assert (=> b!108338 (= c!19027 (not (= (bvand (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108339 () Bool)

(declare-fun e!70502 () Bool)

(assert (=> b!108339 (= e!70509 e!70502)))

(declare-fun res!53743 () Bool)

(assert (=> b!108339 (=> (not res!53743) (not e!70502))))

(assert (=> b!108339 (= res!53743 (contains!834 lt!55747 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108339 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun bm!11505 () Bool)

(assert (=> bm!11505 (= call!11508 call!11507)))

(declare-fun b!108340 () Bool)

(declare-fun e!70499 () Bool)

(assert (=> b!108340 (= e!70499 (= (apply!99 lt!55747 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))

(declare-fun bm!11506 () Bool)

(assert (=> bm!11506 (= call!11506 (contains!834 lt!55747 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108341 () Bool)

(assert (=> b!108341 (= e!70501 call!11508)))

(declare-fun b!108342 () Bool)

(assert (=> b!108342 (= e!70502 (= (apply!99 lt!55747 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108342 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))))))))

(assert (=> b!108342 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108343 () Bool)

(assert (=> b!108343 (= e!70498 (+!148 call!11510 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))))

(declare-fun b!108344 () Bool)

(assert (=> b!108344 (= e!70503 (= (apply!99 lt!55747 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))))

(declare-fun b!108345 () Bool)

(assert (=> b!108345 (= e!70498 e!70508)))

(assert (=> b!108345 (= c!19031 (and (not (= (bvand (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108346 () Bool)

(assert (=> b!108346 (= e!70506 e!70499)))

(declare-fun res!53745 () Bool)

(assert (=> b!108346 (= res!53745 call!11506)))

(assert (=> b!108346 (=> (not res!53745) (not e!70499))))

(declare-fun bm!11507 () Bool)

(assert (=> bm!11507 (= call!11507 call!11509)))

(assert (= (and d!30011 c!19029) b!108343))

(assert (= (and d!30011 (not c!19029)) b!108345))

(assert (= (and b!108345 c!19031) b!108330))

(assert (= (and b!108345 (not c!19031)) b!108328))

(assert (= (and b!108328 c!19026) b!108331))

(assert (= (and b!108328 (not c!19026)) b!108341))

(assert (= (or b!108331 b!108341) bm!11505))

(assert (= (or b!108330 bm!11505) bm!11507))

(assert (= (or b!108330 b!108331) bm!11502))

(assert (= (or b!108343 bm!11507) bm!11503))

(assert (= (or b!108343 bm!11502) bm!11504))

(assert (= (and d!30011 res!53742) b!108335))

(assert (= (and d!30011 c!19028) b!108326))

(assert (= (and d!30011 (not c!19028)) b!108333))

(assert (= (and d!30011 res!53746) b!108332))

(assert (= (and b!108332 res!53740) b!108327))

(assert (= (and b!108332 (not res!53739)) b!108339))

(assert (= (and b!108339 res!53743) b!108342))

(assert (= (and b!108332 res!53741) b!108329))

(assert (= (and b!108329 c!19030) b!108334))

(assert (= (and b!108329 (not c!19030)) b!108336))

(assert (= (and b!108334 res!53747) b!108344))

(assert (= (or b!108334 b!108336) bm!11501))

(assert (= (and b!108329 res!53744) b!108338))

(assert (= (and b!108338 c!19027) b!108346))

(assert (= (and b!108338 (not c!19027)) b!108337))

(assert (= (and b!108346 res!53745) b!108340))

(assert (= (or b!108346 b!108337) bm!11506))

(declare-fun b_lambda!4845 () Bool)

(assert (=> (not b_lambda!4845) (not b!108342)))

(assert (=> b!108342 t!5750))

(declare-fun b_and!6687 () Bool)

(assert (= b_and!6683 (and (=> t!5750 result!3509) b_and!6687)))

(assert (=> b!108342 t!5752))

(declare-fun b_and!6689 () Bool)

(assert (= b_and!6685 (and (=> t!5752 result!3511) b_and!6689)))

(declare-fun m!121965 () Bool)

(assert (=> bm!11501 m!121965))

(assert (=> b!108339 m!121333))

(assert (=> b!108339 m!121333))

(declare-fun m!121967 () Bool)

(assert (=> b!108339 m!121967))

(assert (=> b!108335 m!121333))

(assert (=> b!108335 m!121333))

(assert (=> b!108335 m!121341))

(declare-fun m!121969 () Bool)

(assert (=> bm!11506 m!121969))

(declare-fun m!121971 () Bool)

(assert (=> b!108326 m!121971))

(declare-fun m!121973 () Bool)

(assert (=> b!108326 m!121973))

(declare-fun m!121975 () Bool)

(assert (=> b!108326 m!121975))

(declare-fun m!121977 () Bool)

(assert (=> b!108326 m!121977))

(declare-fun m!121979 () Bool)

(assert (=> b!108326 m!121979))

(declare-fun m!121981 () Bool)

(assert (=> b!108326 m!121981))

(declare-fun m!121983 () Bool)

(assert (=> b!108326 m!121983))

(declare-fun m!121985 () Bool)

(assert (=> b!108326 m!121985))

(declare-fun m!121987 () Bool)

(assert (=> b!108326 m!121987))

(declare-fun m!121989 () Bool)

(assert (=> b!108326 m!121989))

(declare-fun m!121991 () Bool)

(assert (=> b!108326 m!121991))

(assert (=> b!108326 m!121973))

(assert (=> b!108326 m!121985))

(declare-fun m!121993 () Bool)

(assert (=> b!108326 m!121993))

(declare-fun m!121995 () Bool)

(assert (=> b!108326 m!121995))

(declare-fun m!121997 () Bool)

(assert (=> b!108326 m!121997))

(assert (=> b!108326 m!121979))

(declare-fun m!121999 () Bool)

(assert (=> b!108326 m!121999))

(assert (=> b!108326 m!121333))

(declare-fun m!122001 () Bool)

(assert (=> b!108326 m!122001))

(assert (=> b!108326 m!121987))

(declare-fun m!122003 () Bool)

(assert (=> b!108343 m!122003))

(assert (=> b!108342 m!121333))

(assert (=> b!108342 m!121333))

(declare-fun m!122005 () Bool)

(assert (=> b!108342 m!122005))

(declare-fun m!122007 () Bool)

(assert (=> b!108342 m!122007))

(assert (=> b!108342 m!121727))

(declare-fun m!122009 () Bool)

(assert (=> b!108342 m!122009))

(assert (=> b!108342 m!121727))

(assert (=> b!108342 m!122007))

(assert (=> bm!11503 m!121991))

(assert (=> b!108327 m!121333))

(assert (=> b!108327 m!121333))

(assert (=> b!108327 m!121341))

(declare-fun m!122011 () Bool)

(assert (=> b!108340 m!122011))

(declare-fun m!122013 () Bool)

(assert (=> bm!11504 m!122013))

(declare-fun m!122015 () Bool)

(assert (=> b!108344 m!122015))

(assert (=> d!30011 m!121327))

(assert (=> bm!11435 d!30011))

(declare-fun d!30013 () Bool)

(declare-fun e!70511 () Bool)

(assert (=> d!30013 e!70511))

(declare-fun res!53748 () Bool)

(assert (=> d!30013 (=> res!53748 e!70511)))

(declare-fun lt!55764 () Bool)

(assert (=> d!30013 (= res!53748 (not lt!55764))))

(declare-fun lt!55765 () Bool)

(assert (=> d!30013 (= lt!55764 lt!55765)))

(declare-fun lt!55763 () Unit!3321)

(declare-fun e!70510 () Unit!3321)

(assert (=> d!30013 (= lt!55763 e!70510)))

(declare-fun c!19032 () Bool)

(assert (=> d!30013 (= c!19032 lt!55765)))

(assert (=> d!30013 (= lt!55765 (containsKey!161 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30013 (= (contains!834 lt!55326 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55764)))

(declare-fun b!108347 () Bool)

(declare-fun lt!55766 () Unit!3321)

(assert (=> b!108347 (= e!70510 lt!55766)))

(assert (=> b!108347 (= lt!55766 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108347 (isDefined!110 (getValueByKey!157 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108348 () Bool)

(declare-fun Unit!3349 () Unit!3321)

(assert (=> b!108348 (= e!70510 Unit!3349)))

(declare-fun b!108349 () Bool)

(assert (=> b!108349 (= e!70511 (isDefined!110 (getValueByKey!157 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30013 c!19032) b!108347))

(assert (= (and d!30013 (not c!19032)) b!108348))

(assert (= (and d!30013 (not res!53748)) b!108349))

(declare-fun m!122017 () Bool)

(assert (=> d!30013 m!122017))

(declare-fun m!122019 () Bool)

(assert (=> b!108347 m!122019))

(declare-fun m!122021 () Bool)

(assert (=> b!108347 m!122021))

(assert (=> b!108347 m!122021))

(declare-fun m!122023 () Bool)

(assert (=> b!108347 m!122023))

(assert (=> b!108349 m!122021))

(assert (=> b!108349 m!122021))

(assert (=> b!108349 m!122023))

(assert (=> bm!11366 d!30013))

(declare-fun b!108362 () Bool)

(declare-fun e!70520 () SeekEntryResult!260)

(declare-fun lt!55775 () SeekEntryResult!260)

(assert (=> b!108362 (= e!70520 (MissingZero!260 (index!3191 lt!55775)))))

(declare-fun b!108363 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4375 (_ BitVec 32)) SeekEntryResult!260)

(assert (=> b!108363 (= e!70520 (seekKeyOrZeroReturnVacant!0 (x!13804 lt!55775) (index!3191 lt!55775) (index!3191 lt!55775) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun lt!55773 () SeekEntryResult!260)

(declare-fun d!30015 () Bool)

(assert (=> d!30015 (and (or ((_ is Undefined!260) lt!55773) (not ((_ is Found!260) lt!55773)) (and (bvsge (index!3190 lt!55773) #b00000000000000000000000000000000) (bvslt (index!3190 lt!55773) (size!2331 (_keys!4316 newMap!16))))) (or ((_ is Undefined!260) lt!55773) ((_ is Found!260) lt!55773) (not ((_ is MissingZero!260) lt!55773)) (and (bvsge (index!3189 lt!55773) #b00000000000000000000000000000000) (bvslt (index!3189 lt!55773) (size!2331 (_keys!4316 newMap!16))))) (or ((_ is Undefined!260) lt!55773) ((_ is Found!260) lt!55773) ((_ is MissingZero!260) lt!55773) (not ((_ is MissingVacant!260) lt!55773)) (and (bvsge (index!3192 lt!55773) #b00000000000000000000000000000000) (bvslt (index!3192 lt!55773) (size!2331 (_keys!4316 newMap!16))))) (or ((_ is Undefined!260) lt!55773) (ite ((_ is Found!260) lt!55773) (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55773)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite ((_ is MissingZero!260) lt!55773) (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3189 lt!55773)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!260) lt!55773) (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3192 lt!55773)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!70518 () SeekEntryResult!260)

(assert (=> d!30015 (= lt!55773 e!70518)))

(declare-fun c!19040 () Bool)

(assert (=> d!30015 (= c!19040 (and ((_ is Intermediate!260) lt!55775) (undefined!1072 lt!55775)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4375 (_ BitVec 32)) SeekEntryResult!260)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!30015 (= lt!55775 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(assert (=> d!30015 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30015 (= (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)) lt!55773)))

(declare-fun b!108364 () Bool)

(declare-fun e!70519 () SeekEntryResult!260)

(assert (=> b!108364 (= e!70519 (Found!260 (index!3191 lt!55775)))))

(declare-fun b!108365 () Bool)

(declare-fun c!19041 () Bool)

(declare-fun lt!55774 () (_ BitVec 64))

(assert (=> b!108365 (= c!19041 (= lt!55774 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108365 (= e!70519 e!70520)))

(declare-fun b!108366 () Bool)

(assert (=> b!108366 (= e!70518 Undefined!260)))

(declare-fun b!108367 () Bool)

(assert (=> b!108367 (= e!70518 e!70519)))

(assert (=> b!108367 (= lt!55774 (select (arr!2075 (_keys!4316 newMap!16)) (index!3191 lt!55775)))))

(declare-fun c!19039 () Bool)

(assert (=> b!108367 (= c!19039 (= lt!55774 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30015 c!19040) b!108366))

(assert (= (and d!30015 (not c!19040)) b!108367))

(assert (= (and b!108367 c!19039) b!108364))

(assert (= (and b!108367 (not c!19039)) b!108365))

(assert (= (and b!108365 c!19041) b!108362))

(assert (= (and b!108365 (not c!19041)) b!108363))

(assert (=> b!108363 m!120979))

(declare-fun m!122025 () Bool)

(assert (=> b!108363 m!122025))

(declare-fun m!122027 () Bool)

(assert (=> d!30015 m!122027))

(assert (=> d!30015 m!120979))

(declare-fun m!122029 () Bool)

(assert (=> d!30015 m!122029))

(assert (=> d!30015 m!122029))

(assert (=> d!30015 m!120979))

(declare-fun m!122031 () Bool)

(assert (=> d!30015 m!122031))

(assert (=> d!30015 m!121327))

(declare-fun m!122033 () Bool)

(assert (=> d!30015 m!122033))

(declare-fun m!122035 () Bool)

(assert (=> d!30015 m!122035))

(declare-fun m!122037 () Bool)

(assert (=> b!108367 m!122037))

(assert (=> bm!11444 d!30015))

(declare-fun d!30017 () Bool)

(declare-fun e!70521 () Bool)

(assert (=> d!30017 e!70521))

(declare-fun res!53749 () Bool)

(assert (=> d!30017 (=> (not res!53749) (not e!70521))))

(declare-fun lt!55776 () ListLongMap!1585)

(assert (=> d!30017 (= res!53749 (contains!834 lt!55776 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55778 () List!1625)

(assert (=> d!30017 (= lt!55776 (ListLongMap!1586 lt!55778))))

(declare-fun lt!55777 () Unit!3321)

(declare-fun lt!55779 () Unit!3321)

(assert (=> d!30017 (= lt!55777 lt!55779)))

(assert (=> d!30017 (= (getValueByKey!157 lt!55778 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30017 (= lt!55779 (lemmaContainsTupThenGetReturnValue!73 lt!55778 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30017 (= lt!55778 (insertStrictlySorted!76 (toList!808 call!11375) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30017 (= (+!148 call!11375 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55776)))

(declare-fun b!108368 () Bool)

(declare-fun res!53750 () Bool)

(assert (=> b!108368 (=> (not res!53750) (not e!70521))))

(assert (=> b!108368 (= res!53750 (= (getValueByKey!157 (toList!808 lt!55776) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!108369 () Bool)

(assert (=> b!108369 (= e!70521 (contains!836 (toList!808 lt!55776) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30017 res!53749) b!108368))

(assert (= (and b!108368 res!53750) b!108369))

(declare-fun m!122039 () Bool)

(assert (=> d!30017 m!122039))

(declare-fun m!122041 () Bool)

(assert (=> d!30017 m!122041))

(declare-fun m!122043 () Bool)

(assert (=> d!30017 m!122043))

(declare-fun m!122045 () Bool)

(assert (=> d!30017 m!122045))

(declare-fun m!122047 () Bool)

(assert (=> b!108368 m!122047))

(declare-fun m!122049 () Bool)

(assert (=> b!108369 m!122049))

(assert (=> b!107768 d!30017))

(declare-fun d!30019 () Bool)

(declare-fun e!70523 () Bool)

(assert (=> d!30019 e!70523))

(declare-fun res!53751 () Bool)

(assert (=> d!30019 (=> res!53751 e!70523)))

(declare-fun lt!55781 () Bool)

(assert (=> d!30019 (= res!53751 (not lt!55781))))

(declare-fun lt!55782 () Bool)

(assert (=> d!30019 (= lt!55781 lt!55782)))

(declare-fun lt!55780 () Unit!3321)

(declare-fun e!70522 () Unit!3321)

(assert (=> d!30019 (= lt!55780 e!70522)))

(declare-fun c!19042 () Bool)

(assert (=> d!30019 (= c!19042 lt!55782)))

(assert (=> d!30019 (= lt!55782 (containsKey!161 (toList!808 lt!55258) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30019 (= (contains!834 lt!55258 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55781)))

(declare-fun b!108370 () Bool)

(declare-fun lt!55783 () Unit!3321)

(assert (=> b!108370 (= e!70522 lt!55783)))

(assert (=> b!108370 (= lt!55783 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55258) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108370 (isDefined!110 (getValueByKey!157 (toList!808 lt!55258) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108371 () Bool)

(declare-fun Unit!3350 () Unit!3321)

(assert (=> b!108371 (= e!70522 Unit!3350)))

(declare-fun b!108372 () Bool)

(assert (=> b!108372 (= e!70523 (isDefined!110 (getValueByKey!157 (toList!808 lt!55258) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30019 c!19042) b!108370))

(assert (= (and d!30019 (not c!19042)) b!108371))

(assert (= (and d!30019 (not res!53751)) b!108372))

(declare-fun m!122051 () Bool)

(assert (=> d!30019 m!122051))

(declare-fun m!122053 () Bool)

(assert (=> b!108370 m!122053))

(declare-fun m!122055 () Bool)

(assert (=> b!108370 m!122055))

(assert (=> b!108370 m!122055))

(declare-fun m!122057 () Bool)

(assert (=> b!108370 m!122057))

(assert (=> b!108372 m!122055))

(assert (=> b!108372 m!122055))

(assert (=> b!108372 m!122057))

(assert (=> b!107703 d!30019))

(declare-fun d!30021 () Bool)

(declare-fun lt!55786 () Bool)

(declare-fun content!112 (List!1626) (InoxSet (_ BitVec 64)))

(assert (=> d!30021 (= lt!55786 (select (content!112 Nil!1623) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70529 () Bool)

(assert (=> d!30021 (= lt!55786 e!70529)))

(declare-fun res!53757 () Bool)

(assert (=> d!30021 (=> (not res!53757) (not e!70529))))

(assert (=> d!30021 (= res!53757 ((_ is Cons!1622) Nil!1623))))

(assert (=> d!30021 (= (contains!837 Nil!1623 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55786)))

(declare-fun b!108377 () Bool)

(declare-fun e!70528 () Bool)

(assert (=> b!108377 (= e!70529 e!70528)))

(declare-fun res!53756 () Bool)

(assert (=> b!108377 (=> res!53756 e!70528)))

(assert (=> b!108377 (= res!53756 (= (h!2220 Nil!1623) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108378 () Bool)

(assert (=> b!108378 (= e!70528 (contains!837 (t!5742 Nil!1623) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30021 res!53757) b!108377))

(assert (= (and b!108377 (not res!53756)) b!108378))

(declare-fun m!122059 () Bool)

(assert (=> d!30021 m!122059))

(assert (=> d!30021 m!120979))

(declare-fun m!122061 () Bool)

(assert (=> d!30021 m!122061))

(assert (=> b!108378 m!120979))

(declare-fun m!122063 () Bool)

(assert (=> b!108378 m!122063))

(assert (=> b!107936 d!30021))

(declare-fun d!30023 () Bool)

(declare-fun e!70531 () Bool)

(assert (=> d!30023 e!70531))

(declare-fun res!53758 () Bool)

(assert (=> d!30023 (=> res!53758 e!70531)))

(declare-fun lt!55788 () Bool)

(assert (=> d!30023 (= res!53758 (not lt!55788))))

(declare-fun lt!55789 () Bool)

(assert (=> d!30023 (= lt!55788 lt!55789)))

(declare-fun lt!55787 () Unit!3321)

(declare-fun e!70530 () Unit!3321)

(assert (=> d!30023 (= lt!55787 e!70530)))

(declare-fun c!19043 () Bool)

(assert (=> d!30023 (= c!19043 lt!55789)))

(assert (=> d!30023 (= lt!55789 (containsKey!161 (toList!808 lt!55272) (_1!1225 lt!55182)))))

(assert (=> d!30023 (= (contains!834 lt!55272 (_1!1225 lt!55182)) lt!55788)))

(declare-fun b!108379 () Bool)

(declare-fun lt!55790 () Unit!3321)

(assert (=> b!108379 (= e!70530 lt!55790)))

(assert (=> b!108379 (= lt!55790 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55272) (_1!1225 lt!55182)))))

(assert (=> b!108379 (isDefined!110 (getValueByKey!157 (toList!808 lt!55272) (_1!1225 lt!55182)))))

(declare-fun b!108380 () Bool)

(declare-fun Unit!3351 () Unit!3321)

(assert (=> b!108380 (= e!70530 Unit!3351)))

(declare-fun b!108381 () Bool)

(assert (=> b!108381 (= e!70531 (isDefined!110 (getValueByKey!157 (toList!808 lt!55272) (_1!1225 lt!55182))))))

(assert (= (and d!30023 c!19043) b!108379))

(assert (= (and d!30023 (not c!19043)) b!108380))

(assert (= (and d!30023 (not res!53758)) b!108381))

(declare-fun m!122065 () Bool)

(assert (=> d!30023 m!122065))

(declare-fun m!122067 () Bool)

(assert (=> b!108379 m!122067))

(assert (=> b!108379 m!121171))

(assert (=> b!108379 m!121171))

(declare-fun m!122069 () Bool)

(assert (=> b!108379 m!122069))

(assert (=> b!108381 m!121171))

(assert (=> b!108381 m!121171))

(assert (=> b!108381 m!122069))

(assert (=> d!29815 d!30023))

(declare-fun d!30025 () Bool)

(declare-fun c!19044 () Bool)

(assert (=> d!30025 (= c!19044 (and ((_ is Cons!1621) lt!55274) (= (_1!1225 (h!2219 lt!55274)) (_1!1225 lt!55182))))))

(declare-fun e!70532 () Option!163)

(assert (=> d!30025 (= (getValueByKey!157 lt!55274 (_1!1225 lt!55182)) e!70532)))

(declare-fun b!108383 () Bool)

(declare-fun e!70533 () Option!163)

(assert (=> b!108383 (= e!70532 e!70533)))

(declare-fun c!19045 () Bool)

(assert (=> b!108383 (= c!19045 (and ((_ is Cons!1621) lt!55274) (not (= (_1!1225 (h!2219 lt!55274)) (_1!1225 lt!55182)))))))

(declare-fun b!108384 () Bool)

(assert (=> b!108384 (= e!70533 (getValueByKey!157 (t!5741 lt!55274) (_1!1225 lt!55182)))))

(declare-fun b!108382 () Bool)

(assert (=> b!108382 (= e!70532 (Some!162 (_2!1225 (h!2219 lt!55274))))))

(declare-fun b!108385 () Bool)

(assert (=> b!108385 (= e!70533 None!161)))

(assert (= (and d!30025 c!19044) b!108382))

(assert (= (and d!30025 (not c!19044)) b!108383))

(assert (= (and b!108383 c!19045) b!108384))

(assert (= (and b!108383 (not c!19045)) b!108385))

(declare-fun m!122071 () Bool)

(assert (=> b!108384 m!122071))

(assert (=> d!29815 d!30025))

(declare-fun d!30027 () Bool)

(assert (=> d!30027 (= (getValueByKey!157 lt!55274 (_1!1225 lt!55182)) (Some!162 (_2!1225 lt!55182)))))

(declare-fun lt!55791 () Unit!3321)

(assert (=> d!30027 (= lt!55791 (choose!672 lt!55274 (_1!1225 lt!55182) (_2!1225 lt!55182)))))

(declare-fun e!70534 () Bool)

(assert (=> d!30027 e!70534))

(declare-fun res!53759 () Bool)

(assert (=> d!30027 (=> (not res!53759) (not e!70534))))

(assert (=> d!30027 (= res!53759 (isStrictlySorted!310 lt!55274))))

(assert (=> d!30027 (= (lemmaContainsTupThenGetReturnValue!73 lt!55274 (_1!1225 lt!55182) (_2!1225 lt!55182)) lt!55791)))

(declare-fun b!108386 () Bool)

(declare-fun res!53760 () Bool)

(assert (=> b!108386 (=> (not res!53760) (not e!70534))))

(assert (=> b!108386 (= res!53760 (containsKey!161 lt!55274 (_1!1225 lt!55182)))))

(declare-fun b!108387 () Bool)

(assert (=> b!108387 (= e!70534 (contains!836 lt!55274 (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(assert (= (and d!30027 res!53759) b!108386))

(assert (= (and b!108386 res!53760) b!108387))

(assert (=> d!30027 m!121165))

(declare-fun m!122073 () Bool)

(assert (=> d!30027 m!122073))

(declare-fun m!122075 () Bool)

(assert (=> d!30027 m!122075))

(declare-fun m!122077 () Bool)

(assert (=> b!108386 m!122077))

(declare-fun m!122079 () Bool)

(assert (=> b!108387 m!122079))

(assert (=> d!29815 d!30027))

(declare-fun b!108388 () Bool)

(declare-fun e!70538 () List!1625)

(declare-fun e!70536 () List!1625)

(assert (=> b!108388 (= e!70538 e!70536)))

(declare-fun c!19048 () Bool)

(assert (=> b!108388 (= c!19048 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55185 lt!55183))) (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 lt!55183)))) (_1!1225 lt!55182))))))

(declare-fun call!11512 () List!1625)

(declare-fun c!19047 () Bool)

(declare-fun e!70535 () List!1625)

(declare-fun bm!11508 () Bool)

(assert (=> bm!11508 (= call!11512 ($colon$colon!82 e!70535 (ite c!19047 (h!2219 (toList!808 (+!148 lt!55185 lt!55183))) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182)))))))

(declare-fun c!19046 () Bool)

(assert (=> bm!11508 (= c!19046 c!19047)))

(declare-fun b!108389 () Bool)

(assert (=> b!108389 (= e!70535 (insertStrictlySorted!76 (t!5741 (toList!808 (+!148 lt!55185 lt!55183))) (_1!1225 lt!55182) (_2!1225 lt!55182)))))

(declare-fun b!108390 () Bool)

(declare-fun c!19049 () Bool)

(assert (=> b!108390 (= e!70535 (ite c!19048 (t!5741 (toList!808 (+!148 lt!55185 lt!55183))) (ite c!19049 (Cons!1621 (h!2219 (toList!808 (+!148 lt!55185 lt!55183))) (t!5741 (toList!808 (+!148 lt!55185 lt!55183)))) Nil!1622)))))

(declare-fun b!108391 () Bool)

(declare-fun e!70539 () List!1625)

(declare-fun call!11511 () List!1625)

(assert (=> b!108391 (= e!70539 call!11511)))

(declare-fun bm!11509 () Bool)

(declare-fun call!11513 () List!1625)

(assert (=> bm!11509 (= call!11511 call!11513)))

(declare-fun b!108392 () Bool)

(assert (=> b!108392 (= e!70538 call!11512)))

(declare-fun d!30029 () Bool)

(declare-fun e!70537 () Bool)

(assert (=> d!30029 e!70537))

(declare-fun res!53761 () Bool)

(assert (=> d!30029 (=> (not res!53761) (not e!70537))))

(declare-fun lt!55792 () List!1625)

(assert (=> d!30029 (= res!53761 (isStrictlySorted!310 lt!55792))))

(assert (=> d!30029 (= lt!55792 e!70538)))

(assert (=> d!30029 (= c!19047 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55185 lt!55183))) (bvslt (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 lt!55183)))) (_1!1225 lt!55182))))))

(assert (=> d!30029 (isStrictlySorted!310 (toList!808 (+!148 lt!55185 lt!55183)))))

(assert (=> d!30029 (= (insertStrictlySorted!76 (toList!808 (+!148 lt!55185 lt!55183)) (_1!1225 lt!55182) (_2!1225 lt!55182)) lt!55792)))

(declare-fun b!108393 () Bool)

(assert (=> b!108393 (= e!70539 call!11511)))

(declare-fun bm!11510 () Bool)

(assert (=> bm!11510 (= call!11513 call!11512)))

(declare-fun b!108394 () Bool)

(assert (=> b!108394 (= c!19049 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55185 lt!55183))) (bvsgt (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 lt!55183)))) (_1!1225 lt!55182))))))

(assert (=> b!108394 (= e!70536 e!70539)))

(declare-fun b!108395 () Bool)

(assert (=> b!108395 (= e!70536 call!11513)))

(declare-fun b!108396 () Bool)

(declare-fun res!53762 () Bool)

(assert (=> b!108396 (=> (not res!53762) (not e!70537))))

(assert (=> b!108396 (= res!53762 (containsKey!161 lt!55792 (_1!1225 lt!55182)))))

(declare-fun b!108397 () Bool)

(assert (=> b!108397 (= e!70537 (contains!836 lt!55792 (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(assert (= (and d!30029 c!19047) b!108392))

(assert (= (and d!30029 (not c!19047)) b!108388))

(assert (= (and b!108388 c!19048) b!108395))

(assert (= (and b!108388 (not c!19048)) b!108394))

(assert (= (and b!108394 c!19049) b!108393))

(assert (= (and b!108394 (not c!19049)) b!108391))

(assert (= (or b!108393 b!108391) bm!11509))

(assert (= (or b!108395 bm!11509) bm!11510))

(assert (= (or b!108392 bm!11510) bm!11508))

(assert (= (and bm!11508 c!19046) b!108389))

(assert (= (and bm!11508 (not c!19046)) b!108390))

(assert (= (and d!30029 res!53761) b!108396))

(assert (= (and b!108396 res!53762) b!108397))

(declare-fun m!122081 () Bool)

(assert (=> bm!11508 m!122081))

(declare-fun m!122083 () Bool)

(assert (=> b!108396 m!122083))

(declare-fun m!122085 () Bool)

(assert (=> b!108397 m!122085))

(declare-fun m!122087 () Bool)

(assert (=> d!30029 m!122087))

(declare-fun m!122089 () Bool)

(assert (=> d!30029 m!122089))

(declare-fun m!122091 () Bool)

(assert (=> b!108389 m!122091))

(assert (=> d!29815 d!30029))

(assert (=> b!107752 d!29861))

(assert (=> b!107786 d!29943))

(assert (=> b!107786 d!29945))

(declare-fun d!30031 () Bool)

(assert (=> d!30031 (= (apply!99 lt!55326 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!157 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4453 () Bool)

(assert (= bs!4453 d!30031))

(assert (=> bs!4453 m!122021))

(assert (=> bs!4453 m!122021))

(declare-fun m!122093 () Bool)

(assert (=> bs!4453 m!122093))

(assert (=> b!107769 d!30031))

(declare-fun d!30033 () Bool)

(declare-fun res!53763 () Bool)

(declare-fun e!70540 () Bool)

(assert (=> d!30033 (=> res!53763 e!70540)))

(assert (=> d!30033 (= res!53763 (= (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30033 (= (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000) e!70540)))

(declare-fun b!108398 () Bool)

(declare-fun e!70541 () Bool)

(assert (=> b!108398 (= e!70540 e!70541)))

(declare-fun res!53764 () Bool)

(assert (=> b!108398 (=> (not res!53764) (not e!70541))))

(assert (=> b!108398 (= res!53764 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108399 () Bool)

(assert (=> b!108399 (= e!70541 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30033 (not res!53763)) b!108398))

(assert (= (and b!108398 res!53764) b!108399))

(assert (=> d!30033 m!121333))

(assert (=> b!108399 m!120979))

(declare-fun m!122095 () Bool)

(assert (=> b!108399 m!122095))

(assert (=> bm!11427 d!30033))

(assert (=> b!107910 d!30015))

(declare-fun d!30035 () Bool)

(declare-fun e!70543 () Bool)

(assert (=> d!30035 e!70543))

(declare-fun res!53765 () Bool)

(assert (=> d!30035 (=> res!53765 e!70543)))

(declare-fun lt!55794 () Bool)

(assert (=> d!30035 (= res!53765 (not lt!55794))))

(declare-fun lt!55795 () Bool)

(assert (=> d!30035 (= lt!55794 lt!55795)))

(declare-fun lt!55793 () Unit!3321)

(declare-fun e!70542 () Unit!3321)

(assert (=> d!30035 (= lt!55793 e!70542)))

(declare-fun c!19050 () Bool)

(assert (=> d!30035 (= c!19050 lt!55795)))

(assert (=> d!30035 (= lt!55795 (containsKey!161 (toList!808 lt!55236) (_1!1225 lt!55183)))))

(assert (=> d!30035 (= (contains!834 lt!55236 (_1!1225 lt!55183)) lt!55794)))

(declare-fun b!108400 () Bool)

(declare-fun lt!55796 () Unit!3321)

(assert (=> b!108400 (= e!70542 lt!55796)))

(assert (=> b!108400 (= lt!55796 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55236) (_1!1225 lt!55183)))))

(assert (=> b!108400 (isDefined!110 (getValueByKey!157 (toList!808 lt!55236) (_1!1225 lt!55183)))))

(declare-fun b!108401 () Bool)

(declare-fun Unit!3352 () Unit!3321)

(assert (=> b!108401 (= e!70542 Unit!3352)))

(declare-fun b!108402 () Bool)

(assert (=> b!108402 (= e!70543 (isDefined!110 (getValueByKey!157 (toList!808 lt!55236) (_1!1225 lt!55183))))))

(assert (= (and d!30035 c!19050) b!108400))

(assert (= (and d!30035 (not c!19050)) b!108401))

(assert (= (and d!30035 (not res!53765)) b!108402))

(declare-fun m!122097 () Bool)

(assert (=> d!30035 m!122097))

(declare-fun m!122099 () Bool)

(assert (=> b!108400 m!122099))

(assert (=> b!108400 m!121097))

(assert (=> b!108400 m!121097))

(declare-fun m!122101 () Bool)

(assert (=> b!108400 m!122101))

(assert (=> b!108402 m!121097))

(assert (=> b!108402 m!121097))

(assert (=> b!108402 m!122101))

(assert (=> d!29805 d!30035))

(declare-fun d!30037 () Bool)

(declare-fun c!19051 () Bool)

(assert (=> d!30037 (= c!19051 (and ((_ is Cons!1621) lt!55238) (= (_1!1225 (h!2219 lt!55238)) (_1!1225 lt!55183))))))

(declare-fun e!70544 () Option!163)

(assert (=> d!30037 (= (getValueByKey!157 lt!55238 (_1!1225 lt!55183)) e!70544)))

(declare-fun b!108404 () Bool)

(declare-fun e!70545 () Option!163)

(assert (=> b!108404 (= e!70544 e!70545)))

(declare-fun c!19052 () Bool)

(assert (=> b!108404 (= c!19052 (and ((_ is Cons!1621) lt!55238) (not (= (_1!1225 (h!2219 lt!55238)) (_1!1225 lt!55183)))))))

(declare-fun b!108405 () Bool)

(assert (=> b!108405 (= e!70545 (getValueByKey!157 (t!5741 lt!55238) (_1!1225 lt!55183)))))

(declare-fun b!108403 () Bool)

(assert (=> b!108403 (= e!70544 (Some!162 (_2!1225 (h!2219 lt!55238))))))

(declare-fun b!108406 () Bool)

(assert (=> b!108406 (= e!70545 None!161)))

(assert (= (and d!30037 c!19051) b!108403))

(assert (= (and d!30037 (not c!19051)) b!108404))

(assert (= (and b!108404 c!19052) b!108405))

(assert (= (and b!108404 (not c!19052)) b!108406))

(declare-fun m!122103 () Bool)

(assert (=> b!108405 m!122103))

(assert (=> d!29805 d!30037))

(declare-fun d!30039 () Bool)

(assert (=> d!30039 (= (getValueByKey!157 lt!55238 (_1!1225 lt!55183)) (Some!162 (_2!1225 lt!55183)))))

(declare-fun lt!55797 () Unit!3321)

(assert (=> d!30039 (= lt!55797 (choose!672 lt!55238 (_1!1225 lt!55183) (_2!1225 lt!55183)))))

(declare-fun e!70546 () Bool)

(assert (=> d!30039 e!70546))

(declare-fun res!53766 () Bool)

(assert (=> d!30039 (=> (not res!53766) (not e!70546))))

(assert (=> d!30039 (= res!53766 (isStrictlySorted!310 lt!55238))))

(assert (=> d!30039 (= (lemmaContainsTupThenGetReturnValue!73 lt!55238 (_1!1225 lt!55183) (_2!1225 lt!55183)) lt!55797)))

(declare-fun b!108407 () Bool)

(declare-fun res!53767 () Bool)

(assert (=> b!108407 (=> (not res!53767) (not e!70546))))

(assert (=> b!108407 (= res!53767 (containsKey!161 lt!55238 (_1!1225 lt!55183)))))

(declare-fun b!108408 () Bool)

(assert (=> b!108408 (= e!70546 (contains!836 lt!55238 (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(assert (= (and d!30039 res!53766) b!108407))

(assert (= (and b!108407 res!53767) b!108408))

(assert (=> d!30039 m!121091))

(declare-fun m!122105 () Bool)

(assert (=> d!30039 m!122105))

(declare-fun m!122107 () Bool)

(assert (=> d!30039 m!122107))

(declare-fun m!122109 () Bool)

(assert (=> b!108407 m!122109))

(declare-fun m!122111 () Bool)

(assert (=> b!108408 m!122111))

(assert (=> d!29805 d!30039))

(declare-fun b!108409 () Bool)

(declare-fun e!70550 () List!1625)

(declare-fun e!70548 () List!1625)

(assert (=> b!108409 (= e!70550 e!70548)))

(declare-fun c!19055 () Bool)

(assert (=> b!108409 (= c!19055 (and ((_ is Cons!1621) (toList!808 lt!55185)) (= (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 lt!55183))))))

(declare-fun bm!11511 () Bool)

(declare-fun call!11515 () List!1625)

(declare-fun e!70547 () List!1625)

(declare-fun c!19054 () Bool)

(assert (=> bm!11511 (= call!11515 ($colon$colon!82 e!70547 (ite c!19054 (h!2219 (toList!808 lt!55185)) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183)))))))

(declare-fun c!19053 () Bool)

(assert (=> bm!11511 (= c!19053 c!19054)))

(declare-fun b!108410 () Bool)

(assert (=> b!108410 (= e!70547 (insertStrictlySorted!76 (t!5741 (toList!808 lt!55185)) (_1!1225 lt!55183) (_2!1225 lt!55183)))))

(declare-fun c!19056 () Bool)

(declare-fun b!108411 () Bool)

(assert (=> b!108411 (= e!70547 (ite c!19055 (t!5741 (toList!808 lt!55185)) (ite c!19056 (Cons!1621 (h!2219 (toList!808 lt!55185)) (t!5741 (toList!808 lt!55185))) Nil!1622)))))

(declare-fun b!108412 () Bool)

(declare-fun e!70551 () List!1625)

(declare-fun call!11514 () List!1625)

(assert (=> b!108412 (= e!70551 call!11514)))

(declare-fun bm!11512 () Bool)

(declare-fun call!11516 () List!1625)

(assert (=> bm!11512 (= call!11514 call!11516)))

(declare-fun b!108413 () Bool)

(assert (=> b!108413 (= e!70550 call!11515)))

(declare-fun d!30041 () Bool)

(declare-fun e!70549 () Bool)

(assert (=> d!30041 e!70549))

(declare-fun res!53768 () Bool)

(assert (=> d!30041 (=> (not res!53768) (not e!70549))))

(declare-fun lt!55798 () List!1625)

(assert (=> d!30041 (= res!53768 (isStrictlySorted!310 lt!55798))))

(assert (=> d!30041 (= lt!55798 e!70550)))

(assert (=> d!30041 (= c!19054 (and ((_ is Cons!1621) (toList!808 lt!55185)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 lt!55183))))))

(assert (=> d!30041 (isStrictlySorted!310 (toList!808 lt!55185))))

(assert (=> d!30041 (= (insertStrictlySorted!76 (toList!808 lt!55185) (_1!1225 lt!55183) (_2!1225 lt!55183)) lt!55798)))

(declare-fun b!108414 () Bool)

(assert (=> b!108414 (= e!70551 call!11514)))

(declare-fun bm!11513 () Bool)

(assert (=> bm!11513 (= call!11516 call!11515)))

(declare-fun b!108415 () Bool)

(assert (=> b!108415 (= c!19056 (and ((_ is Cons!1621) (toList!808 lt!55185)) (bvsgt (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 lt!55183))))))

(assert (=> b!108415 (= e!70548 e!70551)))

(declare-fun b!108416 () Bool)

(assert (=> b!108416 (= e!70548 call!11516)))

(declare-fun b!108417 () Bool)

(declare-fun res!53769 () Bool)

(assert (=> b!108417 (=> (not res!53769) (not e!70549))))

(assert (=> b!108417 (= res!53769 (containsKey!161 lt!55798 (_1!1225 lt!55183)))))

(declare-fun b!108418 () Bool)

(assert (=> b!108418 (= e!70549 (contains!836 lt!55798 (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(assert (= (and d!30041 c!19054) b!108413))

(assert (= (and d!30041 (not c!19054)) b!108409))

(assert (= (and b!108409 c!19055) b!108416))

(assert (= (and b!108409 (not c!19055)) b!108415))

(assert (= (and b!108415 c!19056) b!108414))

(assert (= (and b!108415 (not c!19056)) b!108412))

(assert (= (or b!108414 b!108412) bm!11512))

(assert (= (or b!108416 bm!11512) bm!11513))

(assert (= (or b!108413 bm!11513) bm!11511))

(assert (= (and bm!11511 c!19053) b!108410))

(assert (= (and bm!11511 (not c!19053)) b!108411))

(assert (= (and d!30041 res!53768) b!108417))

(assert (= (and b!108417 res!53769) b!108418))

(declare-fun m!122113 () Bool)

(assert (=> bm!11511 m!122113))

(declare-fun m!122115 () Bool)

(assert (=> b!108417 m!122115))

(declare-fun m!122117 () Bool)

(assert (=> b!108418 m!122117))

(declare-fun m!122119 () Bool)

(assert (=> d!30041 m!122119))

(assert (=> d!30041 m!121497))

(declare-fun m!122121 () Bool)

(assert (=> b!108410 m!122121))

(assert (=> d!29805 d!30041))

(declare-fun d!30043 () Bool)

(declare-fun e!70553 () Bool)

(assert (=> d!30043 e!70553))

(declare-fun res!53770 () Bool)

(assert (=> d!30043 (=> res!53770 e!70553)))

(declare-fun lt!55800 () Bool)

(assert (=> d!30043 (= res!53770 (not lt!55800))))

(declare-fun lt!55801 () Bool)

(assert (=> d!30043 (= lt!55800 lt!55801)))

(declare-fun lt!55799 () Unit!3321)

(declare-fun e!70552 () Unit!3321)

(assert (=> d!30043 (= lt!55799 e!70552)))

(declare-fun c!19057 () Bool)

(assert (=> d!30043 (= c!19057 lt!55801)))

(assert (=> d!30043 (= lt!55801 (containsKey!161 (toList!808 call!11426) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30043 (= (contains!834 call!11426 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55800)))

(declare-fun b!108419 () Bool)

(declare-fun lt!55802 () Unit!3321)

(assert (=> b!108419 (= e!70552 lt!55802)))

(assert (=> b!108419 (= lt!55802 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 call!11426) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108419 (isDefined!110 (getValueByKey!157 (toList!808 call!11426) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108420 () Bool)

(declare-fun Unit!3353 () Unit!3321)

(assert (=> b!108420 (= e!70552 Unit!3353)))

(declare-fun b!108421 () Bool)

(assert (=> b!108421 (= e!70553 (isDefined!110 (getValueByKey!157 (toList!808 call!11426) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!30043 c!19057) b!108419))

(assert (= (and d!30043 (not c!19057)) b!108420))

(assert (= (and d!30043 (not res!53770)) b!108421))

(assert (=> d!30043 m!120979))

(declare-fun m!122123 () Bool)

(assert (=> d!30043 m!122123))

(assert (=> b!108419 m!120979))

(declare-fun m!122125 () Bool)

(assert (=> b!108419 m!122125))

(assert (=> b!108419 m!120979))

(declare-fun m!122127 () Bool)

(assert (=> b!108419 m!122127))

(assert (=> b!108419 m!122127))

(declare-fun m!122129 () Bool)

(assert (=> b!108419 m!122129))

(assert (=> b!108421 m!120979))

(assert (=> b!108421 m!122127))

(assert (=> b!108421 m!122127))

(assert (=> b!108421 m!122129))

(assert (=> b!107871 d!30043))

(declare-fun d!30045 () Bool)

(declare-fun c!19058 () Bool)

(assert (=> d!30045 (= c!19058 (and ((_ is Cons!1621) (toList!808 lt!55268)) (= (_1!1225 (h!2219 (toList!808 lt!55268))) (_1!1225 lt!55182))))))

(declare-fun e!70554 () Option!163)

(assert (=> d!30045 (= (getValueByKey!157 (toList!808 lt!55268) (_1!1225 lt!55182)) e!70554)))

(declare-fun b!108423 () Bool)

(declare-fun e!70555 () Option!163)

(assert (=> b!108423 (= e!70554 e!70555)))

(declare-fun c!19059 () Bool)

(assert (=> b!108423 (= c!19059 (and ((_ is Cons!1621) (toList!808 lt!55268)) (not (= (_1!1225 (h!2219 (toList!808 lt!55268))) (_1!1225 lt!55182)))))))

(declare-fun b!108424 () Bool)

(assert (=> b!108424 (= e!70555 (getValueByKey!157 (t!5741 (toList!808 lt!55268)) (_1!1225 lt!55182)))))

(declare-fun b!108422 () Bool)

(assert (=> b!108422 (= e!70554 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55268)))))))

(declare-fun b!108425 () Bool)

(assert (=> b!108425 (= e!70555 None!161)))

(assert (= (and d!30045 c!19058) b!108422))

(assert (= (and d!30045 (not c!19058)) b!108423))

(assert (= (and b!108423 c!19059) b!108424))

(assert (= (and b!108423 (not c!19059)) b!108425))

(declare-fun m!122131 () Bool)

(assert (=> b!108424 m!122131))

(assert (=> b!107705 d!30045))

(declare-fun d!30047 () Bool)

(assert (=> d!30047 (= (inRange!0 (ite c!18917 (ite c!18919 (index!3190 lt!55434) (ite c!18925 (index!3189 lt!55433) (index!3192 lt!55433))) (ite c!18930 (index!3190 lt!55423) (ite c!18926 (index!3189 lt!55431) (index!3192 lt!55431)))) (mask!6764 newMap!16)) (and (bvsge (ite c!18917 (ite c!18919 (index!3190 lt!55434) (ite c!18925 (index!3189 lt!55433) (index!3192 lt!55433))) (ite c!18930 (index!3190 lt!55423) (ite c!18926 (index!3189 lt!55431) (index!3192 lt!55431)))) #b00000000000000000000000000000000) (bvslt (ite c!18917 (ite c!18919 (index!3190 lt!55434) (ite c!18925 (index!3189 lt!55433) (index!3192 lt!55433))) (ite c!18930 (index!3190 lt!55423) (ite c!18926 (index!3189 lt!55431) (index!3192 lt!55431)))) (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11428 d!30047))

(assert (=> bm!11368 d!29809))

(declare-fun d!30049 () Bool)

(declare-fun c!19060 () Bool)

(assert (=> d!30049 (= c!19060 (and ((_ is Cons!1621) (toList!808 lt!55272)) (= (_1!1225 (h!2219 (toList!808 lt!55272))) (_1!1225 lt!55182))))))

(declare-fun e!70556 () Option!163)

(assert (=> d!30049 (= (getValueByKey!157 (toList!808 lt!55272) (_1!1225 lt!55182)) e!70556)))

(declare-fun b!108427 () Bool)

(declare-fun e!70557 () Option!163)

(assert (=> b!108427 (= e!70556 e!70557)))

(declare-fun c!19061 () Bool)

(assert (=> b!108427 (= c!19061 (and ((_ is Cons!1621) (toList!808 lt!55272)) (not (= (_1!1225 (h!2219 (toList!808 lt!55272))) (_1!1225 lt!55182)))))))

(declare-fun b!108428 () Bool)

(assert (=> b!108428 (= e!70557 (getValueByKey!157 (t!5741 (toList!808 lt!55272)) (_1!1225 lt!55182)))))

(declare-fun b!108426 () Bool)

(assert (=> b!108426 (= e!70556 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55272)))))))

(declare-fun b!108429 () Bool)

(assert (=> b!108429 (= e!70557 None!161)))

(assert (= (and d!30049 c!19060) b!108426))

(assert (= (and d!30049 (not c!19060)) b!108427))

(assert (= (and b!108427 c!19061) b!108428))

(assert (= (and b!108427 (not c!19061)) b!108429))

(declare-fun m!122133 () Bool)

(assert (=> b!108428 m!122133))

(assert (=> b!107707 d!30049))

(declare-fun condMapEmpty!3985 () Bool)

(declare-fun mapDefault!3985 () ValueCell!1002)

(assert (=> mapNonEmpty!3983 (= condMapEmpty!3985 (= mapRest!3983 ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3985)))))

(declare-fun e!70558 () Bool)

(declare-fun mapRes!3985 () Bool)

(assert (=> mapNonEmpty!3983 (= tp!9995 (and e!70558 mapRes!3985))))

(declare-fun b!108430 () Bool)

(declare-fun e!70559 () Bool)

(assert (=> b!108430 (= e!70559 tp_is_empty!2691)))

(declare-fun b!108431 () Bool)

(assert (=> b!108431 (= e!70558 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3985 () Bool)

(assert (=> mapIsEmpty!3985 mapRes!3985))

(declare-fun mapNonEmpty!3985 () Bool)

(declare-fun tp!9997 () Bool)

(assert (=> mapNonEmpty!3985 (= mapRes!3985 (and tp!9997 e!70559))))

(declare-fun mapKey!3985 () (_ BitVec 32))

(declare-fun mapRest!3985 () (Array (_ BitVec 32) ValueCell!1002))

(declare-fun mapValue!3985 () ValueCell!1002)

(assert (=> mapNonEmpty!3985 (= mapRest!3983 (store mapRest!3985 mapKey!3985 mapValue!3985))))

(assert (= (and mapNonEmpty!3983 condMapEmpty!3985) mapIsEmpty!3985))

(assert (= (and mapNonEmpty!3983 (not condMapEmpty!3985)) mapNonEmpty!3985))

(assert (= (and mapNonEmpty!3985 ((_ is ValueCellFull!1002) mapValue!3985)) b!108430))

(assert (= (and mapNonEmpty!3983 ((_ is ValueCellFull!1002) mapDefault!3985)) b!108431))

(declare-fun m!122135 () Bool)

(assert (=> mapNonEmpty!3985 m!122135))

(declare-fun condMapEmpty!3986 () Bool)

(declare-fun mapDefault!3986 () ValueCell!1002)

(assert (=> mapNonEmpty!3984 (= condMapEmpty!3986 (= mapRest!3984 ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3986)))))

(declare-fun e!70560 () Bool)

(declare-fun mapRes!3986 () Bool)

(assert (=> mapNonEmpty!3984 (= tp!9996 (and e!70560 mapRes!3986))))

(declare-fun b!108432 () Bool)

(declare-fun e!70561 () Bool)

(assert (=> b!108432 (= e!70561 tp_is_empty!2691)))

(declare-fun b!108433 () Bool)

(assert (=> b!108433 (= e!70560 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3986 () Bool)

(assert (=> mapIsEmpty!3986 mapRes!3986))

(declare-fun mapNonEmpty!3986 () Bool)

(declare-fun tp!9998 () Bool)

(assert (=> mapNonEmpty!3986 (= mapRes!3986 (and tp!9998 e!70561))))

(declare-fun mapValue!3986 () ValueCell!1002)

(declare-fun mapKey!3986 () (_ BitVec 32))

(declare-fun mapRest!3986 () (Array (_ BitVec 32) ValueCell!1002))

(assert (=> mapNonEmpty!3986 (= mapRest!3984 (store mapRest!3986 mapKey!3986 mapValue!3986))))

(assert (= (and mapNonEmpty!3984 condMapEmpty!3986) mapIsEmpty!3986))

(assert (= (and mapNonEmpty!3984 (not condMapEmpty!3986)) mapNonEmpty!3986))

(assert (= (and mapNonEmpty!3986 ((_ is ValueCellFull!1002) mapValue!3986)) b!108432))

(assert (= (and mapNonEmpty!3984 ((_ is ValueCellFull!1002) mapDefault!3986)) b!108433))

(declare-fun m!122137 () Bool)

(assert (=> mapNonEmpty!3986 m!122137))

(declare-fun b_lambda!4847 () Bool)

(assert (= b_lambda!4839 (or (and b!107580 b_free!2549) (and b!107593 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))))) b_lambda!4847)))

(declare-fun b_lambda!4849 () Bool)

(assert (= b_lambda!4845 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4849)))

(declare-fun b_lambda!4851 () Bool)

(assert (= b_lambda!4841 (or (and b!107580 b_free!2549) (and b!107593 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))))) b_lambda!4851)))

(declare-fun b_lambda!4853 () Bool)

(assert (= b_lambda!4843 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4853)))

(declare-fun b_lambda!4855 () Bool)

(assert (= b_lambda!4837 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4855)))

(check-sat (not b!108230) (not d!29937) (not b!108184) (not b!108122) (not d!29873) (not bm!11472) (not d!30041) (not d!29879) (not b!108325) (not d!29905) (not b!108069) (not b!107984) (not b!108203) (not b!108313) (not b!107995) (not d!29975) (not b!108162) (not b!108318) (not d!30017) (not d!30019) (not b!108038) (not d!29983) (not b!108123) (not d!29923) (not b!108113) (not b!108125) (not bm!11489) (not b!108428) (not b!108297) (not b!108185) (not b!108053) (not b!108037) (not d!29919) (not b!108223) (not bm!11461) (not b!108314) (not b!108066) (not b!108128) (not b!108424) (not b!108300) (not b!108370) (not b_lambda!4851) (not b!108218) (not b!108130) (not d!29887) (not d!29973) (not d!30005) (not b!108132) (not b!108049) (not b!108074) (not d!29985) (not d!29939) (not d!30039) (not b!107961) (not d!29951) (not bm!11480) (not d!29965) (not b!108399) (not b!108187) (not b!108290) (not b!108070) (not bm!11499) (not d!29935) (not d!30015) (not d!29867) (not b!108386) (not d!29967) (not bm!11483) (not d!30021) (not b!108381) (not d!30003) (not d!29957) (not b!108339) (not b!108335) (not b!108231) (not b!108410) (not b!108418) (not b!108114) (not b!108072) (not b!108317) (not b!108124) (not b!108183) (not b_lambda!4831) (not bm!11503) (not b!108220) (not d!29863) (not b!108045) (not d!29931) (not bm!11506) (not b!108400) (not b!108197) (not b!108144) (not d!29999) (not b!108228) (not b!108368) (not b!108340) (not b!108148) (not d!30035) (not d!29909) (not b!108327) (not b!108143) (not b!108116) (not bm!11488) (not b!108323) (not b!108068) (not bm!11511) (not b_next!2549) (not b!108163) (not b!108058) (not b!108126) (not bm!11493) (not b!108201) (not b!108421) (not b!108178) (not b!108180) (not b!108244) (not b!108288) (not d!29993) (not d!29921) (not b!108059) (not b!108084) (not b!108344) (not d!29959) (not d!29943) (not d!29925) (not b!108225) (not d!29899) (not b!108048) (not b!108316) (not b!108405) (not d!29977) (not d!29889) (not b_lambda!4823) (not b!108188) (not b!108189) (not b!108301) (not bm!11459) (not b_lambda!4847) (not bm!11476) (not bm!11494) (not d!30029) (not d!29877) (not b!108407) (not d!29969) (not d!29897) (not b_lambda!4835) (not d!29881) (not b!108347) (not d!30027) (not d!30013) (not d!29903) (not b_lambda!4855) (not b!108050) (not b!108057) (not b!108106) (not bm!11478) (not d!29995) (not b!108237) (not d!29941) (not d!29979) (not bm!11475) (not d!29875) (not b!108242) (not b!108408) (not b!108211) (not b!108145) (not b!108417) (not b!108127) (not b!108309) (not d!29955) (not d!29911) (not b_lambda!4833) (not b!108206) (not b!108000) (not bm!11450) (not d!29917) (not b!108200) (not b!108342) (not d!29947) (not b!108343) b_and!6689 (not d!30043) (not bm!11492) (not d!30009) (not b!108198) (not d!30023) (not b!108219) (not b!108402) (not b!108227) b_and!6687 (not b!108071) (not b!108292) (not b!108419) (not b!108294) (not b!108372) (not b!108133) (not b!108387) (not d!29907) (not b!108369) (not b!108326) (not b!108191) (not b!108296) (not b!108280) (not b!108119) (not b!108396) (not b!107972) (not mapNonEmpty!3985) (not bm!11504) (not b!108154) (not d!29851) (not b!108171) (not b!108175) (not b!108129) (not b!108363) (not d!30031) (not d!29933) (not b!108142) (not b!108056) (not bm!11469) (not b!108397) (not b!108146) (not d!29991) (not b_lambda!4849) (not b!108160) (not d!29857) (not b!107959) (not b!108055) (not b!107997) (not bm!11460) (not d!30007) (not b!108378) (not b!108067) (not b_lambda!4853) (not b!108134) (not b!108299) (not d!30001) (not d!29847) (not b!108322) (not bm!11473) (not b!108389) (not b!107983) (not b!108120) (not b!108151) (not d!29883) (not d!29865) (not d!29987) (not b!108384) (not mapNonEmpty!3986) (not b!108349) (not b!108121) (not d!29901) (not b!108083) (not b!108179) (not b!108222) (not b!108209) (not bm!11497) (not b!108208) (not b!108117) (not d!29915) (not d!30011) (not d!29853) tp_is_empty!2691 (not b!108176) (not b!108271) (not b_next!2551) (not b!108077) (not b!108157) (not d!29929) (not b!108379) (not d!29895) (not d!29913) (not bm!11496) (not b!108245) (not d!29869) (not b!108291) (not bm!11508) (not d!29927) (not b!108064) (not bm!11501))
(check-sat b_and!6687 b_and!6689 (not b_next!2549) (not b_next!2551))
(get-model)

(declare-fun d!30051 () Bool)

(declare-fun lt!55803 () Bool)

(assert (=> d!30051 (= lt!55803 (select (content!111 (toList!808 lt!55776)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!70563 () Bool)

(assert (=> d!30051 (= lt!55803 e!70563)))

(declare-fun res!53772 () Bool)

(assert (=> d!30051 (=> (not res!53772) (not e!70563))))

(assert (=> d!30051 (= res!53772 ((_ is Cons!1621) (toList!808 lt!55776)))))

(assert (=> d!30051 (= (contains!836 (toList!808 lt!55776) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55803)))

(declare-fun b!108434 () Bool)

(declare-fun e!70562 () Bool)

(assert (=> b!108434 (= e!70563 e!70562)))

(declare-fun res!53771 () Bool)

(assert (=> b!108434 (=> res!53771 e!70562)))

(assert (=> b!108434 (= res!53771 (= (h!2219 (toList!808 lt!55776)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108435 () Bool)

(assert (=> b!108435 (= e!70562 (contains!836 (t!5741 (toList!808 lt!55776)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30051 res!53772) b!108434))

(assert (= (and b!108434 (not res!53771)) b!108435))

(declare-fun m!122139 () Bool)

(assert (=> d!30051 m!122139))

(declare-fun m!122141 () Bool)

(assert (=> d!30051 m!122141))

(declare-fun m!122143 () Bool)

(assert (=> b!108435 m!122143))

(assert (=> b!108369 d!30051))

(declare-fun lt!55804 () Bool)

(declare-fun d!30053 () Bool)

(assert (=> d!30053 (= lt!55804 (select (content!111 (toList!808 lt!55590)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(declare-fun e!70565 () Bool)

(assert (=> d!30053 (= lt!55804 e!70565)))

(declare-fun res!53774 () Bool)

(assert (=> d!30053 (=> (not res!53774) (not e!70565))))

(assert (=> d!30053 (= res!53774 ((_ is Cons!1621) (toList!808 lt!55590)))))

(assert (=> d!30053 (= (contains!836 (toList!808 lt!55590) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) lt!55804)))

(declare-fun b!108436 () Bool)

(declare-fun e!70564 () Bool)

(assert (=> b!108436 (= e!70565 e!70564)))

(declare-fun res!53773 () Bool)

(assert (=> b!108436 (=> res!53773 e!70564)))

(assert (=> b!108436 (= res!53773 (= (h!2219 (toList!808 lt!55590)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(declare-fun b!108437 () Bool)

(assert (=> b!108437 (= e!70564 (contains!836 (t!5741 (toList!808 lt!55590)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(assert (= (and d!30053 res!53774) b!108436))

(assert (= (and b!108436 (not res!53773)) b!108437))

(declare-fun m!122145 () Bool)

(assert (=> d!30053 m!122145))

(declare-fun m!122147 () Bool)

(assert (=> d!30053 m!122147))

(declare-fun m!122149 () Bool)

(assert (=> b!108437 m!122149))

(assert (=> b!108125 d!30053))

(declare-fun d!30055 () Bool)

(assert (=> d!30055 (contains!834 (getCurrentListMap!493 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411)))))

(assert (=> d!30055 true))

(declare-fun _$16!129 () Unit!3321)

(assert (=> d!30055 (= (choose!675 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3190 lt!55411) (defaultEntry!2606 newMap!16)) _$16!129)))

(declare-fun bs!4454 () Bool)

(assert (= bs!4454 d!30055))

(assert (=> bs!4454 m!121663))

(assert (=> bs!4454 m!121265))

(assert (=> bs!4454 m!121663))

(assert (=> bs!4454 m!121265))

(assert (=> bs!4454 m!121665))

(assert (=> d!29937 d!30055))

(declare-fun d!30057 () Bool)

(assert (=> d!30057 (= (validMask!0 (mask!6764 newMap!16)) (and (or (= (mask!6764 newMap!16) #b00000000000000000000000000000111) (= (mask!6764 newMap!16) #b00000000000000000000000000001111) (= (mask!6764 newMap!16) #b00000000000000000000000000011111) (= (mask!6764 newMap!16) #b00000000000000000000000000111111) (= (mask!6764 newMap!16) #b00000000000000000000000001111111) (= (mask!6764 newMap!16) #b00000000000000000000000011111111) (= (mask!6764 newMap!16) #b00000000000000000000000111111111) (= (mask!6764 newMap!16) #b00000000000000000000001111111111) (= (mask!6764 newMap!16) #b00000000000000000000011111111111) (= (mask!6764 newMap!16) #b00000000000000000000111111111111) (= (mask!6764 newMap!16) #b00000000000000000001111111111111) (= (mask!6764 newMap!16) #b00000000000000000011111111111111) (= (mask!6764 newMap!16) #b00000000000000000111111111111111) (= (mask!6764 newMap!16) #b00000000000000001111111111111111) (= (mask!6764 newMap!16) #b00000000000000011111111111111111) (= (mask!6764 newMap!16) #b00000000000000111111111111111111) (= (mask!6764 newMap!16) #b00000000000001111111111111111111) (= (mask!6764 newMap!16) #b00000000000011111111111111111111) (= (mask!6764 newMap!16) #b00000000000111111111111111111111) (= (mask!6764 newMap!16) #b00000000001111111111111111111111) (= (mask!6764 newMap!16) #b00000000011111111111111111111111) (= (mask!6764 newMap!16) #b00000000111111111111111111111111) (= (mask!6764 newMap!16) #b00000001111111111111111111111111) (= (mask!6764 newMap!16) #b00000011111111111111111111111111) (= (mask!6764 newMap!16) #b00000111111111111111111111111111) (= (mask!6764 newMap!16) #b00001111111111111111111111111111) (= (mask!6764 newMap!16) #b00011111111111111111111111111111) (= (mask!6764 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6764 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!29937 d!30057))

(declare-fun bm!11514 () Bool)

(declare-fun call!11517 () Bool)

(assert (=> bm!11514 (= call!11517 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4316 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun d!30059 () Bool)

(declare-fun res!53776 () Bool)

(declare-fun e!70567 () Bool)

(assert (=> d!30059 (=> res!53776 e!70567)))

(assert (=> d!30059 (= res!53776 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30059 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992)))) e!70567)))

(declare-fun b!108438 () Bool)

(declare-fun e!70566 () Bool)

(assert (=> b!108438 (= e!70566 call!11517)))

(declare-fun b!108439 () Bool)

(declare-fun e!70568 () Bool)

(assert (=> b!108439 (= e!70566 e!70568)))

(declare-fun lt!55805 () (_ BitVec 64))

(assert (=> b!108439 (= lt!55805 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!55807 () Unit!3321)

(assert (=> b!108439 (= lt!55807 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) lt!55805 #b00000000000000000000000000000000))))

(assert (=> b!108439 (arrayContainsKey!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) lt!55805 #b00000000000000000000000000000000)))

(declare-fun lt!55806 () Unit!3321)

(assert (=> b!108439 (= lt!55806 lt!55807)))

(declare-fun res!53775 () Bool)

(assert (=> b!108439 (= res!53775 (= (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000) (_keys!4316 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992)))) (Found!260 #b00000000000000000000000000000000)))))

(assert (=> b!108439 (=> (not res!53775) (not e!70568))))

(declare-fun b!108440 () Bool)

(assert (=> b!108440 (= e!70568 call!11517)))

(declare-fun b!108441 () Bool)

(assert (=> b!108441 (= e!70567 e!70566)))

(declare-fun c!19062 () Bool)

(assert (=> b!108441 (= c!19062 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!30059 (not res!53776)) b!108441))

(assert (= (and b!108441 c!19062) b!108439))

(assert (= (and b!108441 (not c!19062)) b!108438))

(assert (= (and b!108439 res!53775) b!108440))

(assert (= (or b!108440 b!108438) bm!11514))

(declare-fun m!122151 () Bool)

(assert (=> bm!11514 m!122151))

(declare-fun m!122153 () Bool)

(assert (=> b!108439 m!122153))

(declare-fun m!122155 () Bool)

(assert (=> b!108439 m!122155))

(declare-fun m!122157 () Bool)

(assert (=> b!108439 m!122157))

(assert (=> b!108439 m!122153))

(declare-fun m!122159 () Bool)

(assert (=> b!108439 m!122159))

(assert (=> b!108441 m!122153))

(assert (=> b!108441 m!122153))

(declare-fun m!122161 () Bool)

(assert (=> b!108441 m!122161))

(assert (=> b!108070 d!30059))

(declare-fun d!30061 () Bool)

(declare-fun e!70570 () Bool)

(assert (=> d!30061 e!70570))

(declare-fun res!53777 () Bool)

(assert (=> d!30061 (=> res!53777 e!70570)))

(declare-fun lt!55809 () Bool)

(assert (=> d!30061 (= res!53777 (not lt!55809))))

(declare-fun lt!55810 () Bool)

(assert (=> d!30061 (= lt!55809 lt!55810)))

(declare-fun lt!55808 () Unit!3321)

(declare-fun e!70569 () Unit!3321)

(assert (=> d!30061 (= lt!55808 e!70569)))

(declare-fun c!19063 () Bool)

(assert (=> d!30061 (= c!19063 lt!55810)))

(assert (=> d!30061 (= lt!55810 (containsKey!161 (toList!808 lt!55661) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (=> d!30061 (= (contains!834 lt!55661 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) lt!55809)))

(declare-fun b!108442 () Bool)

(declare-fun lt!55811 () Unit!3321)

(assert (=> b!108442 (= e!70569 lt!55811)))

(assert (=> b!108442 (= lt!55811 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55661) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (=> b!108442 (isDefined!110 (getValueByKey!157 (toList!808 lt!55661) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun b!108443 () Bool)

(declare-fun Unit!3354 () Unit!3321)

(assert (=> b!108443 (= e!70569 Unit!3354)))

(declare-fun b!108444 () Bool)

(assert (=> b!108444 (= e!70570 (isDefined!110 (getValueByKey!157 (toList!808 lt!55661) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(assert (= (and d!30061 c!19063) b!108442))

(assert (= (and d!30061 (not c!19063)) b!108443))

(assert (= (and d!30061 (not res!53777)) b!108444))

(declare-fun m!122163 () Bool)

(assert (=> d!30061 m!122163))

(declare-fun m!122165 () Bool)

(assert (=> b!108442 m!122165))

(assert (=> b!108442 m!121745))

(assert (=> b!108442 m!121745))

(declare-fun m!122167 () Bool)

(assert (=> b!108442 m!122167))

(assert (=> b!108444 m!121745))

(assert (=> b!108444 m!121745))

(assert (=> b!108444 m!122167))

(assert (=> d!29955 d!30061))

(declare-fun d!30063 () Bool)

(declare-fun c!19064 () Bool)

(assert (=> d!30063 (= c!19064 (and ((_ is Cons!1621) lt!55663) (= (_1!1225 (h!2219 lt!55663)) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun e!70571 () Option!163)

(assert (=> d!30063 (= (getValueByKey!157 lt!55663 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) e!70571)))

(declare-fun b!108446 () Bool)

(declare-fun e!70572 () Option!163)

(assert (=> b!108446 (= e!70571 e!70572)))

(declare-fun c!19065 () Bool)

(assert (=> b!108446 (= c!19065 (and ((_ is Cons!1621) lt!55663) (not (= (_1!1225 (h!2219 lt!55663)) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))))

(declare-fun b!108447 () Bool)

(assert (=> b!108447 (= e!70572 (getValueByKey!157 (t!5741 lt!55663) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun b!108445 () Bool)

(assert (=> b!108445 (= e!70571 (Some!162 (_2!1225 (h!2219 lt!55663))))))

(declare-fun b!108448 () Bool)

(assert (=> b!108448 (= e!70572 None!161)))

(assert (= (and d!30063 c!19064) b!108445))

(assert (= (and d!30063 (not c!19064)) b!108446))

(assert (= (and b!108446 c!19065) b!108447))

(assert (= (and b!108446 (not c!19065)) b!108448))

(declare-fun m!122169 () Bool)

(assert (=> b!108447 m!122169))

(assert (=> d!29955 d!30063))

(declare-fun d!30065 () Bool)

(assert (=> d!30065 (= (getValueByKey!157 lt!55663 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) (Some!162 (_2!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun lt!55812 () Unit!3321)

(assert (=> d!30065 (= lt!55812 (choose!672 lt!55663 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (_2!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun e!70573 () Bool)

(assert (=> d!30065 e!70573))

(declare-fun res!53778 () Bool)

(assert (=> d!30065 (=> (not res!53778) (not e!70573))))

(assert (=> d!30065 (= res!53778 (isStrictlySorted!310 lt!55663))))

(assert (=> d!30065 (= (lemmaContainsTupThenGetReturnValue!73 lt!55663 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (_2!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) lt!55812)))

(declare-fun b!108449 () Bool)

(declare-fun res!53779 () Bool)

(assert (=> b!108449 (=> (not res!53779) (not e!70573))))

(assert (=> b!108449 (= res!53779 (containsKey!161 lt!55663 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun b!108450 () Bool)

(assert (=> b!108450 (= e!70573 (contains!836 lt!55663 (tuple2!2429 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (_2!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(assert (= (and d!30065 res!53778) b!108449))

(assert (= (and b!108449 res!53779) b!108450))

(assert (=> d!30065 m!121739))

(declare-fun m!122171 () Bool)

(assert (=> d!30065 m!122171))

(declare-fun m!122173 () Bool)

(assert (=> d!30065 m!122173))

(declare-fun m!122175 () Bool)

(assert (=> b!108449 m!122175))

(declare-fun m!122177 () Bool)

(assert (=> b!108450 m!122177))

(assert (=> d!29955 d!30065))

(declare-fun b!108451 () Bool)

(declare-fun e!70577 () List!1625)

(declare-fun e!70575 () List!1625)

(assert (=> b!108451 (= e!70577 e!70575)))

(declare-fun c!19068 () Bool)

(assert (=> b!108451 (= c!19068 (and ((_ is Cons!1621) (toList!808 e!70235)) (= (_1!1225 (h!2219 (toList!808 e!70235))) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun bm!11515 () Bool)

(declare-fun c!19067 () Bool)

(declare-fun call!11519 () List!1625)

(declare-fun e!70574 () List!1625)

(assert (=> bm!11515 (= call!11519 ($colon$colon!82 e!70574 (ite c!19067 (h!2219 (toList!808 e!70235)) (tuple2!2429 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (_2!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))))

(declare-fun c!19066 () Bool)

(assert (=> bm!11515 (= c!19066 c!19067)))

(declare-fun b!108452 () Bool)

(assert (=> b!108452 (= e!70574 (insertStrictlySorted!76 (t!5741 (toList!808 e!70235)) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (_2!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun b!108453 () Bool)

(declare-fun c!19069 () Bool)

(assert (=> b!108453 (= e!70574 (ite c!19068 (t!5741 (toList!808 e!70235)) (ite c!19069 (Cons!1621 (h!2219 (toList!808 e!70235)) (t!5741 (toList!808 e!70235))) Nil!1622)))))

(declare-fun b!108454 () Bool)

(declare-fun e!70578 () List!1625)

(declare-fun call!11518 () List!1625)

(assert (=> b!108454 (= e!70578 call!11518)))

(declare-fun bm!11516 () Bool)

(declare-fun call!11520 () List!1625)

(assert (=> bm!11516 (= call!11518 call!11520)))

(declare-fun b!108455 () Bool)

(assert (=> b!108455 (= e!70577 call!11519)))

(declare-fun d!30067 () Bool)

(declare-fun e!70576 () Bool)

(assert (=> d!30067 e!70576))

(declare-fun res!53780 () Bool)

(assert (=> d!30067 (=> (not res!53780) (not e!70576))))

(declare-fun lt!55813 () List!1625)

(assert (=> d!30067 (= res!53780 (isStrictlySorted!310 lt!55813))))

(assert (=> d!30067 (= lt!55813 e!70577)))

(assert (=> d!30067 (= c!19067 (and ((_ is Cons!1621) (toList!808 e!70235)) (bvslt (_1!1225 (h!2219 (toList!808 e!70235))) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(assert (=> d!30067 (isStrictlySorted!310 (toList!808 e!70235))))

(assert (=> d!30067 (= (insertStrictlySorted!76 (toList!808 e!70235) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (_2!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) lt!55813)))

(declare-fun b!108456 () Bool)

(assert (=> b!108456 (= e!70578 call!11518)))

(declare-fun bm!11517 () Bool)

(assert (=> bm!11517 (= call!11520 call!11519)))

(declare-fun b!108457 () Bool)

(assert (=> b!108457 (= c!19069 (and ((_ is Cons!1621) (toList!808 e!70235)) (bvsgt (_1!1225 (h!2219 (toList!808 e!70235))) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(assert (=> b!108457 (= e!70575 e!70578)))

(declare-fun b!108458 () Bool)

(assert (=> b!108458 (= e!70575 call!11520)))

(declare-fun b!108459 () Bool)

(declare-fun res!53781 () Bool)

(assert (=> b!108459 (=> (not res!53781) (not e!70576))))

(assert (=> b!108459 (= res!53781 (containsKey!161 lt!55813 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun b!108460 () Bool)

(assert (=> b!108460 (= e!70576 (contains!836 lt!55813 (tuple2!2429 (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (_2!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(assert (= (and d!30067 c!19067) b!108455))

(assert (= (and d!30067 (not c!19067)) b!108451))

(assert (= (and b!108451 c!19068) b!108458))

(assert (= (and b!108451 (not c!19068)) b!108457))

(assert (= (and b!108457 c!19069) b!108456))

(assert (= (and b!108457 (not c!19069)) b!108454))

(assert (= (or b!108456 b!108454) bm!11516))

(assert (= (or b!108458 bm!11516) bm!11517))

(assert (= (or b!108455 bm!11517) bm!11515))

(assert (= (and bm!11515 c!19066) b!108452))

(assert (= (and bm!11515 (not c!19066)) b!108453))

(assert (= (and d!30067 res!53780) b!108459))

(assert (= (and b!108459 res!53781) b!108460))

(declare-fun m!122179 () Bool)

(assert (=> bm!11515 m!122179))

(declare-fun m!122181 () Bool)

(assert (=> b!108459 m!122181))

(declare-fun m!122183 () Bool)

(assert (=> b!108460 m!122183))

(declare-fun m!122185 () Bool)

(assert (=> d!30067 m!122185))

(declare-fun m!122187 () Bool)

(assert (=> d!30067 m!122187))

(declare-fun m!122189 () Bool)

(assert (=> b!108452 m!122189))

(assert (=> d!29955 d!30067))

(declare-fun lt!55814 () Bool)

(declare-fun d!30069 () Bool)

(assert (=> d!30069 (= lt!55814 (select (content!111 (toList!808 lt!55622)) (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!70580 () Bool)

(assert (=> d!30069 (= lt!55814 e!70580)))

(declare-fun res!53783 () Bool)

(assert (=> d!30069 (=> (not res!53783) (not e!70580))))

(assert (=> d!30069 (= res!53783 ((_ is Cons!1621) (toList!808 lt!55622)))))

(assert (=> d!30069 (= (contains!836 (toList!808 lt!55622) (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55814)))

(declare-fun b!108461 () Bool)

(declare-fun e!70579 () Bool)

(assert (=> b!108461 (= e!70580 e!70579)))

(declare-fun res!53782 () Bool)

(assert (=> b!108461 (=> res!53782 e!70579)))

(assert (=> b!108461 (= res!53782 (= (h!2219 (toList!808 lt!55622)) (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108462 () Bool)

(assert (=> b!108462 (= e!70579 (contains!836 (t!5741 (toList!808 lt!55622)) (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30069 res!53783) b!108461))

(assert (= (and b!108461 (not res!53782)) b!108462))

(declare-fun m!122191 () Bool)

(assert (=> d!30069 m!122191))

(declare-fun m!122193 () Bool)

(assert (=> d!30069 m!122193))

(declare-fun m!122195 () Bool)

(assert (=> b!108462 m!122195))

(assert (=> b!108145 d!30069))

(assert (=> d!29887 d!29885))

(declare-fun d!30071 () Bool)

(assert (=> d!30071 (= (getValueByKey!157 lt!55270 (_1!1225 lt!55182)) (Some!162 (_2!1225 lt!55182)))))

(assert (=> d!30071 true))

(declare-fun _$22!439 () Unit!3321)

(assert (=> d!30071 (= (choose!672 lt!55270 (_1!1225 lt!55182) (_2!1225 lt!55182)) _$22!439)))

(declare-fun bs!4455 () Bool)

(assert (= bs!4455 d!30071))

(assert (=> bs!4455 m!121153))

(assert (=> d!29887 d!30071))

(declare-fun d!30073 () Bool)

(declare-fun res!53788 () Bool)

(declare-fun e!70585 () Bool)

(assert (=> d!30073 (=> res!53788 e!70585)))

(assert (=> d!30073 (= res!53788 (or ((_ is Nil!1622) lt!55270) ((_ is Nil!1622) (t!5741 lt!55270))))))

(assert (=> d!30073 (= (isStrictlySorted!310 lt!55270) e!70585)))

(declare-fun b!108467 () Bool)

(declare-fun e!70586 () Bool)

(assert (=> b!108467 (= e!70585 e!70586)))

(declare-fun res!53789 () Bool)

(assert (=> b!108467 (=> (not res!53789) (not e!70586))))

(assert (=> b!108467 (= res!53789 (bvslt (_1!1225 (h!2219 lt!55270)) (_1!1225 (h!2219 (t!5741 lt!55270)))))))

(declare-fun b!108468 () Bool)

(assert (=> b!108468 (= e!70586 (isStrictlySorted!310 (t!5741 lt!55270)))))

(assert (= (and d!30073 (not res!53788)) b!108467))

(assert (= (and b!108467 res!53789) b!108468))

(declare-fun m!122197 () Bool)

(assert (=> b!108468 m!122197))

(assert (=> d!29887 d!30073))

(declare-fun d!30075 () Bool)

(assert (=> d!30075 (= (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108119 d!30075))

(declare-fun d!30077 () Bool)

(declare-fun e!70587 () Bool)

(assert (=> d!30077 e!70587))

(declare-fun res!53790 () Bool)

(assert (=> d!30077 (=> (not res!53790) (not e!70587))))

(declare-fun lt!55815 () ListLongMap!1585)

(assert (=> d!30077 (= res!53790 (contains!834 lt!55815 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun lt!55817 () List!1625)

(assert (=> d!30077 (= lt!55815 (ListLongMap!1586 lt!55817))))

(declare-fun lt!55816 () Unit!3321)

(declare-fun lt!55818 () Unit!3321)

(assert (=> d!30077 (= lt!55816 lt!55818)))

(assert (=> d!30077 (= (getValueByKey!157 lt!55817 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (=> d!30077 (= lt!55818 (lemmaContainsTupThenGetReturnValue!73 lt!55817 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (=> d!30077 (= lt!55817 (insertStrictlySorted!76 (toList!808 call!11482) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (=> d!30077 (= (+!148 call!11482 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))) lt!55815)))

(declare-fun b!108469 () Bool)

(declare-fun res!53791 () Bool)

(assert (=> b!108469 (=> (not res!53791) (not e!70587))))

(assert (=> b!108469 (= res!53791 (= (getValueByKey!157 (toList!808 lt!55815) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(declare-fun b!108470 () Bool)

(assert (=> b!108470 (= e!70587 (contains!836 (toList!808 lt!55815) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(assert (= (and d!30077 res!53790) b!108469))

(assert (= (and b!108469 res!53791) b!108470))

(declare-fun m!122199 () Bool)

(assert (=> d!30077 m!122199))

(declare-fun m!122201 () Bool)

(assert (=> d!30077 m!122201))

(declare-fun m!122203 () Bool)

(assert (=> d!30077 m!122203))

(declare-fun m!122205 () Bool)

(assert (=> d!30077 m!122205))

(declare-fun m!122207 () Bool)

(assert (=> b!108469 m!122207))

(declare-fun m!122209 () Bool)

(assert (=> b!108470 m!122209))

(assert (=> b!108179 d!30077))

(assert (=> d!29999 d!30057))

(declare-fun d!30079 () Bool)

(assert (=> d!30079 (= (isDefined!110 (getValueByKey!157 (toList!808 lt!55258) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!375 (getValueByKey!157 (toList!808 lt!55258) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4456 () Bool)

(assert (= bs!4456 d!30079))

(assert (=> bs!4456 m!122055))

(declare-fun m!122211 () Bool)

(assert (=> bs!4456 m!122211))

(assert (=> b!108372 d!30079))

(declare-fun d!30081 () Bool)

(declare-fun c!19070 () Bool)

(assert (=> d!30081 (= c!19070 (and ((_ is Cons!1621) (toList!808 lt!55258)) (= (_1!1225 (h!2219 (toList!808 lt!55258))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!70588 () Option!163)

(assert (=> d!30081 (= (getValueByKey!157 (toList!808 lt!55258) #b1000000000000000000000000000000000000000000000000000000000000000) e!70588)))

(declare-fun b!108472 () Bool)

(declare-fun e!70589 () Option!163)

(assert (=> b!108472 (= e!70588 e!70589)))

(declare-fun c!19071 () Bool)

(assert (=> b!108472 (= c!19071 (and ((_ is Cons!1621) (toList!808 lt!55258)) (not (= (_1!1225 (h!2219 (toList!808 lt!55258))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108473 () Bool)

(assert (=> b!108473 (= e!70589 (getValueByKey!157 (t!5741 (toList!808 lt!55258)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108471 () Bool)

(assert (=> b!108471 (= e!70588 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55258)))))))

(declare-fun b!108474 () Bool)

(assert (=> b!108474 (= e!70589 None!161)))

(assert (= (and d!30081 c!19070) b!108471))

(assert (= (and d!30081 (not c!19070)) b!108472))

(assert (= (and b!108472 c!19071) b!108473))

(assert (= (and b!108472 (not c!19071)) b!108474))

(declare-fun m!122213 () Bool)

(assert (=> b!108473 m!122213))

(assert (=> b!108372 d!30081))

(declare-fun b!108475 () Bool)

(declare-fun e!70595 () ListLongMap!1585)

(declare-fun e!70591 () ListLongMap!1585)

(assert (=> b!108475 (= e!70595 e!70591)))

(declare-fun c!19074 () Bool)

(assert (=> b!108475 (= c!19074 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108476 () Bool)

(assert (=> b!108476 (= e!70595 (ListLongMap!1586 Nil!1622))))

(declare-fun bm!11518 () Bool)

(declare-fun call!11521 () ListLongMap!1585)

(assert (=> bm!11518 (= call!11521 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite c!18921 (_values!2589 newMap!16) lt!55420) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55819 () ListLongMap!1585)

(declare-fun b!108477 () Bool)

(declare-fun e!70594 () Bool)

(assert (=> b!108477 (= e!70594 (= lt!55819 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite c!18921 (_values!2589 newMap!16) lt!55420) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2606 newMap!16))))))

(declare-fun d!30083 () Bool)

(declare-fun e!70592 () Bool)

(assert (=> d!30083 e!70592))

(declare-fun res!53792 () Bool)

(assert (=> d!30083 (=> (not res!53792) (not e!70592))))

(assert (=> d!30083 (= res!53792 (not (contains!834 lt!55819 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30083 (= lt!55819 e!70595)))

(declare-fun c!19072 () Bool)

(assert (=> d!30083 (= c!19072 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(assert (=> d!30083 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30083 (= (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite c!18921 (_values!2589 newMap!16) lt!55420) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55819)))

(declare-fun b!108478 () Bool)

(declare-fun e!70593 () Bool)

(declare-fun e!70590 () Bool)

(assert (=> b!108478 (= e!70593 e!70590)))

(assert (=> b!108478 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun res!53794 () Bool)

(assert (=> b!108478 (= res!53794 (contains!834 lt!55819 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108478 (=> (not res!53794) (not e!70590))))

(declare-fun b!108479 () Bool)

(assert (=> b!108479 (= e!70592 e!70593)))

(declare-fun c!19075 () Bool)

(declare-fun e!70596 () Bool)

(assert (=> b!108479 (= c!19075 e!70596)))

(declare-fun res!53793 () Bool)

(assert (=> b!108479 (=> (not res!53793) (not e!70596))))

(assert (=> b!108479 (= res!53793 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108480 () Bool)

(assert (=> b!108480 (= e!70596 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108480 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!108481 () Bool)

(assert (=> b!108481 (= e!70593 e!70594)))

(declare-fun c!19073 () Bool)

(assert (=> b!108481 (= c!19073 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108482 () Bool)

(assert (=> b!108482 (= e!70594 (isEmpty!373 lt!55819))))

(declare-fun b!108483 () Bool)

(assert (=> b!108483 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(assert (=> b!108483 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 (ite c!18921 (_values!2589 newMap!16) lt!55420))))))

(assert (=> b!108483 (= e!70590 (= (apply!99 lt!55819 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 (ite c!18921 (_values!2589 newMap!16) lt!55420)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108484 () Bool)

(assert (=> b!108484 (= e!70591 call!11521)))

(declare-fun b!108485 () Bool)

(declare-fun res!53795 () Bool)

(assert (=> b!108485 (=> (not res!53795) (not e!70592))))

(assert (=> b!108485 (= res!53795 (not (contains!834 lt!55819 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108486 () Bool)

(declare-fun lt!55821 () Unit!3321)

(declare-fun lt!55820 () Unit!3321)

(assert (=> b!108486 (= lt!55821 lt!55820)))

(declare-fun lt!55822 () ListLongMap!1585)

(declare-fun lt!55824 () (_ BitVec 64))

(declare-fun lt!55825 () (_ BitVec 64))

(declare-fun lt!55823 () V!3235)

(assert (=> b!108486 (not (contains!834 (+!148 lt!55822 (tuple2!2429 lt!55824 lt!55823)) lt!55825))))

(assert (=> b!108486 (= lt!55820 (addStillNotContains!47 lt!55822 lt!55824 lt!55823 lt!55825))))

(assert (=> b!108486 (= lt!55825 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108486 (= lt!55823 (get!1341 (select (arr!2076 (ite c!18921 (_values!2589 newMap!16) lt!55420)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108486 (= lt!55824 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108486 (= lt!55822 call!11521)))

(assert (=> b!108486 (= e!70591 (+!148 call!11521 (tuple2!2429 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (get!1341 (select (arr!2076 (ite c!18921 (_values!2589 newMap!16) lt!55420)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30083 c!19072) b!108476))

(assert (= (and d!30083 (not c!19072)) b!108475))

(assert (= (and b!108475 c!19074) b!108486))

(assert (= (and b!108475 (not c!19074)) b!108484))

(assert (= (or b!108486 b!108484) bm!11518))

(assert (= (and d!30083 res!53792) b!108485))

(assert (= (and b!108485 res!53795) b!108479))

(assert (= (and b!108479 res!53793) b!108480))

(assert (= (and b!108479 c!19075) b!108478))

(assert (= (and b!108479 (not c!19075)) b!108481))

(assert (= (and b!108478 res!53794) b!108483))

(assert (= (and b!108481 c!19073) b!108477))

(assert (= (and b!108481 (not c!19073)) b!108482))

(declare-fun b_lambda!4857 () Bool)

(assert (=> (not b_lambda!4857) (not b!108483)))

(assert (=> b!108483 t!5750))

(declare-fun b_and!6691 () Bool)

(assert (= b_and!6687 (and (=> t!5750 result!3509) b_and!6691)))

(assert (=> b!108483 t!5752))

(declare-fun b_and!6693 () Bool)

(assert (= b_and!6689 (and (=> t!5752 result!3511) b_and!6693)))

(declare-fun b_lambda!4859 () Bool)

(assert (=> (not b_lambda!4859) (not b!108486)))

(assert (=> b!108486 t!5750))

(declare-fun b_and!6695 () Bool)

(assert (= b_and!6691 (and (=> t!5750 result!3509) b_and!6695)))

(assert (=> b!108486 t!5752))

(declare-fun b_and!6697 () Bool)

(assert (= b_and!6693 (and (=> t!5752 result!3511) b_and!6697)))

(declare-fun m!122215 () Bool)

(assert (=> b!108485 m!122215))

(declare-fun m!122217 () Bool)

(assert (=> bm!11518 m!122217))

(assert (=> b!108480 m!121333))

(assert (=> b!108480 m!121333))

(assert (=> b!108480 m!121341))

(assert (=> b!108483 m!121939))

(assert (=> b!108483 m!121727))

(assert (=> b!108483 m!121941))

(assert (=> b!108483 m!121333))

(assert (=> b!108483 m!121727))

(assert (=> b!108483 m!121939))

(assert (=> b!108483 m!121333))

(declare-fun m!122219 () Bool)

(assert (=> b!108483 m!122219))

(declare-fun m!122221 () Bool)

(assert (=> b!108482 m!122221))

(declare-fun m!122223 () Bool)

(assert (=> d!30083 m!122223))

(assert (=> d!30083 m!121327))

(assert (=> b!108477 m!122217))

(assert (=> b!108475 m!121333))

(assert (=> b!108475 m!121333))

(assert (=> b!108475 m!121341))

(assert (=> b!108486 m!121939))

(assert (=> b!108486 m!121727))

(assert (=> b!108486 m!121941))

(declare-fun m!122225 () Bool)

(assert (=> b!108486 m!122225))

(declare-fun m!122227 () Bool)

(assert (=> b!108486 m!122227))

(assert (=> b!108486 m!121333))

(assert (=> b!108486 m!121727))

(declare-fun m!122229 () Bool)

(assert (=> b!108486 m!122229))

(assert (=> b!108486 m!121939))

(assert (=> b!108486 m!122225))

(declare-fun m!122231 () Bool)

(assert (=> b!108486 m!122231))

(assert (=> b!108478 m!121333))

(assert (=> b!108478 m!121333))

(declare-fun m!122233 () Bool)

(assert (=> b!108478 m!122233))

(assert (=> bm!11496 d!30083))

(declare-fun d!30085 () Bool)

(declare-fun lt!55826 () Bool)

(assert (=> d!30085 (= lt!55826 (select (content!111 (toList!808 lt!55582)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!70598 () Bool)

(assert (=> d!30085 (= lt!55826 e!70598)))

(declare-fun res!53797 () Bool)

(assert (=> d!30085 (=> (not res!53797) (not e!70598))))

(assert (=> d!30085 (= res!53797 ((_ is Cons!1621) (toList!808 lt!55582)))))

(assert (=> d!30085 (= (contains!836 (toList!808 lt!55582) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55826)))

(declare-fun b!108487 () Bool)

(declare-fun e!70597 () Bool)

(assert (=> b!108487 (= e!70598 e!70597)))

(declare-fun res!53796 () Bool)

(assert (=> b!108487 (=> res!53796 e!70597)))

(assert (=> b!108487 (= res!53796 (= (h!2219 (toList!808 lt!55582)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108488 () Bool)

(assert (=> b!108488 (= e!70597 (contains!836 (t!5741 (toList!808 lt!55582)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30085 res!53797) b!108487))

(assert (= (and b!108487 (not res!53796)) b!108488))

(declare-fun m!122235 () Bool)

(assert (=> d!30085 m!122235))

(declare-fun m!122237 () Bool)

(assert (=> d!30085 m!122237))

(declare-fun m!122239 () Bool)

(assert (=> b!108488 m!122239))

(assert (=> b!108121 d!30085))

(declare-fun d!30087 () Bool)

(assert (=> d!30087 (= (apply!99 (+!148 lt!55748 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) lt!55760) (apply!99 lt!55748 lt!55760))))

(declare-fun lt!55827 () Unit!3321)

(assert (=> d!30087 (= lt!55827 (choose!673 lt!55748 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) lt!55760))))

(declare-fun e!70599 () Bool)

(assert (=> d!30087 e!70599))

(declare-fun res!53798 () Bool)

(assert (=> d!30087 (=> (not res!53798) (not e!70599))))

(assert (=> d!30087 (= res!53798 (contains!834 lt!55748 lt!55760))))

(assert (=> d!30087 (= (addApplyDifferent!75 lt!55748 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) lt!55760) lt!55827)))

(declare-fun b!108489 () Bool)

(assert (=> b!108489 (= e!70599 (not (= lt!55760 lt!55745)))))

(assert (= (and d!30087 res!53798) b!108489))

(assert (=> d!30087 m!121979))

(assert (=> d!30087 m!121981))

(assert (=> d!30087 m!121971))

(assert (=> d!30087 m!121979))

(declare-fun m!122241 () Bool)

(assert (=> d!30087 m!122241))

(declare-fun m!122243 () Bool)

(assert (=> d!30087 m!122243))

(assert (=> b!108326 d!30087))

(declare-fun d!30089 () Bool)

(declare-fun e!70600 () Bool)

(assert (=> d!30089 e!70600))

(declare-fun res!53799 () Bool)

(assert (=> d!30089 (=> (not res!53799) (not e!70600))))

(declare-fun lt!55828 () ListLongMap!1585)

(assert (=> d!30089 (= res!53799 (contains!834 lt!55828 (_1!1225 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(declare-fun lt!55830 () List!1625)

(assert (=> d!30089 (= lt!55828 (ListLongMap!1586 lt!55830))))

(declare-fun lt!55829 () Unit!3321)

(declare-fun lt!55831 () Unit!3321)

(assert (=> d!30089 (= lt!55829 lt!55831)))

(assert (=> d!30089 (= (getValueByKey!157 lt!55830 (_1!1225 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))) (Some!162 (_2!1225 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(assert (=> d!30089 (= lt!55831 (lemmaContainsTupThenGetReturnValue!73 lt!55830 (_1!1225 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) (_2!1225 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(assert (=> d!30089 (= lt!55830 (insertStrictlySorted!76 (toList!808 lt!55748) (_1!1225 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) (_2!1225 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(assert (=> d!30089 (= (+!148 lt!55748 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) lt!55828)))

(declare-fun b!108490 () Bool)

(declare-fun res!53800 () Bool)

(assert (=> b!108490 (=> (not res!53800) (not e!70600))))

(assert (=> b!108490 (= res!53800 (= (getValueByKey!157 (toList!808 lt!55828) (_1!1225 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))) (Some!162 (_2!1225 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))))))

(declare-fun b!108491 () Bool)

(assert (=> b!108491 (= e!70600 (contains!836 (toList!808 lt!55828) (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))))

(assert (= (and d!30089 res!53799) b!108490))

(assert (= (and b!108490 res!53800) b!108491))

(declare-fun m!122245 () Bool)

(assert (=> d!30089 m!122245))

(declare-fun m!122247 () Bool)

(assert (=> d!30089 m!122247))

(declare-fun m!122249 () Bool)

(assert (=> d!30089 m!122249))

(declare-fun m!122251 () Bool)

(assert (=> d!30089 m!122251))

(declare-fun m!122253 () Bool)

(assert (=> b!108490 m!122253))

(declare-fun m!122255 () Bool)

(assert (=> b!108491 m!122255))

(assert (=> b!108326 d!30089))

(declare-fun d!30091 () Bool)

(assert (=> d!30091 (= (apply!99 (+!148 lt!55748 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) lt!55760) (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55748 (tuple2!2429 lt!55745 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))) lt!55760)))))

(declare-fun bs!4457 () Bool)

(assert (= bs!4457 d!30091))

(declare-fun m!122257 () Bool)

(assert (=> bs!4457 m!122257))

(assert (=> bs!4457 m!122257))

(declare-fun m!122259 () Bool)

(assert (=> bs!4457 m!122259))

(assert (=> b!108326 d!30091))

(declare-fun d!30093 () Bool)

(assert (=> d!30093 (= (apply!99 lt!55752 lt!55755) (get!1344 (getValueByKey!157 (toList!808 lt!55752) lt!55755)))))

(declare-fun bs!4458 () Bool)

(assert (= bs!4458 d!30093))

(declare-fun m!122261 () Bool)

(assert (=> bs!4458 m!122261))

(assert (=> bs!4458 m!122261))

(declare-fun m!122263 () Bool)

(assert (=> bs!4458 m!122263))

(assert (=> b!108326 d!30093))

(declare-fun d!30095 () Bool)

(assert (=> d!30095 (= (apply!99 (+!148 lt!55752 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))) lt!55755) (apply!99 lt!55752 lt!55755))))

(declare-fun lt!55832 () Unit!3321)

(assert (=> d!30095 (= lt!55832 (choose!673 lt!55752 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) lt!55755))))

(declare-fun e!70601 () Bool)

(assert (=> d!30095 e!70601))

(declare-fun res!53801 () Bool)

(assert (=> d!30095 (=> (not res!53801) (not e!70601))))

(assert (=> d!30095 (= res!53801 (contains!834 lt!55752 lt!55755))))

(assert (=> d!30095 (= (addApplyDifferent!75 lt!55752 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) lt!55755) lt!55832)))

(declare-fun b!108492 () Bool)

(assert (=> b!108492 (= e!70601 (not (= lt!55755 lt!55742)))))

(assert (= (and d!30095 res!53801) b!108492))

(assert (=> d!30095 m!121973))

(assert (=> d!30095 m!121975))

(assert (=> d!30095 m!121983))

(assert (=> d!30095 m!121973))

(declare-fun m!122265 () Bool)

(assert (=> d!30095 m!122265))

(declare-fun m!122267 () Bool)

(assert (=> d!30095 m!122267))

(assert (=> b!108326 d!30095))

(declare-fun d!30097 () Bool)

(declare-fun e!70602 () Bool)

(assert (=> d!30097 e!70602))

(declare-fun res!53802 () Bool)

(assert (=> d!30097 (=> (not res!53802) (not e!70602))))

(declare-fun lt!55833 () ListLongMap!1585)

(assert (=> d!30097 (= res!53802 (contains!834 lt!55833 (_1!1225 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))))))

(declare-fun lt!55835 () List!1625)

(assert (=> d!30097 (= lt!55833 (ListLongMap!1586 lt!55835))))

(declare-fun lt!55834 () Unit!3321)

(declare-fun lt!55836 () Unit!3321)

(assert (=> d!30097 (= lt!55834 lt!55836)))

(assert (=> d!30097 (= (getValueByKey!157 lt!55835 (_1!1225 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))) (Some!162 (_2!1225 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))))))

(assert (=> d!30097 (= lt!55836 (lemmaContainsTupThenGetReturnValue!73 lt!55835 (_1!1225 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))) (_2!1225 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))))))

(assert (=> d!30097 (= lt!55835 (insertStrictlySorted!76 (toList!808 lt!55741) (_1!1225 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))) (_2!1225 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))))))

(assert (=> d!30097 (= (+!148 lt!55741 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))) lt!55833)))

(declare-fun b!108493 () Bool)

(declare-fun res!53803 () Bool)

(assert (=> b!108493 (=> (not res!53803) (not e!70602))))

(assert (=> b!108493 (= res!53803 (= (getValueByKey!157 (toList!808 lt!55833) (_1!1225 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))) (Some!162 (_2!1225 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))))))))

(declare-fun b!108494 () Bool)

(assert (=> b!108494 (= e!70602 (contains!836 (toList!808 lt!55833) (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))))))

(assert (= (and d!30097 res!53802) b!108493))

(assert (= (and b!108493 res!53803) b!108494))

(declare-fun m!122269 () Bool)

(assert (=> d!30097 m!122269))

(declare-fun m!122271 () Bool)

(assert (=> d!30097 m!122271))

(declare-fun m!122273 () Bool)

(assert (=> d!30097 m!122273))

(declare-fun m!122275 () Bool)

(assert (=> d!30097 m!122275))

(declare-fun m!122277 () Bool)

(assert (=> b!108493 m!122277))

(declare-fun m!122279 () Bool)

(assert (=> b!108494 m!122279))

(assert (=> b!108326 d!30097))

(declare-fun d!30099 () Bool)

(declare-fun e!70604 () Bool)

(assert (=> d!30099 e!70604))

(declare-fun res!53804 () Bool)

(assert (=> d!30099 (=> res!53804 e!70604)))

(declare-fun lt!55838 () Bool)

(assert (=> d!30099 (= res!53804 (not lt!55838))))

(declare-fun lt!55839 () Bool)

(assert (=> d!30099 (= lt!55838 lt!55839)))

(declare-fun lt!55837 () Unit!3321)

(declare-fun e!70603 () Unit!3321)

(assert (=> d!30099 (= lt!55837 e!70603)))

(declare-fun c!19076 () Bool)

(assert (=> d!30099 (= c!19076 lt!55839)))

(assert (=> d!30099 (= lt!55839 (containsKey!161 (toList!808 (+!148 lt!55741 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))) lt!55756))))

(assert (=> d!30099 (= (contains!834 (+!148 lt!55741 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))) lt!55756) lt!55838)))

(declare-fun b!108495 () Bool)

(declare-fun lt!55840 () Unit!3321)

(assert (=> b!108495 (= e!70603 lt!55840)))

(assert (=> b!108495 (= lt!55840 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 (+!148 lt!55741 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))) lt!55756))))

(assert (=> b!108495 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55741 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))) lt!55756))))

(declare-fun b!108496 () Bool)

(declare-fun Unit!3355 () Unit!3321)

(assert (=> b!108496 (= e!70603 Unit!3355)))

(declare-fun b!108497 () Bool)

(assert (=> b!108497 (= e!70604 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55741 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))) lt!55756)))))

(assert (= (and d!30099 c!19076) b!108495))

(assert (= (and d!30099 (not c!19076)) b!108496))

(assert (= (and d!30099 (not res!53804)) b!108497))

(declare-fun m!122281 () Bool)

(assert (=> d!30099 m!122281))

(declare-fun m!122283 () Bool)

(assert (=> b!108495 m!122283))

(declare-fun m!122285 () Bool)

(assert (=> b!108495 m!122285))

(assert (=> b!108495 m!122285))

(declare-fun m!122287 () Bool)

(assert (=> b!108495 m!122287))

(assert (=> b!108497 m!122285))

(assert (=> b!108497 m!122285))

(assert (=> b!108497 m!122287))

(assert (=> b!108326 d!30099))

(declare-fun d!30101 () Bool)

(assert (=> d!30101 (= (apply!99 (+!148 lt!55749 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) lt!55761) (apply!99 lt!55749 lt!55761))))

(declare-fun lt!55841 () Unit!3321)

(assert (=> d!30101 (= lt!55841 (choose!673 lt!55749 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) lt!55761))))

(declare-fun e!70605 () Bool)

(assert (=> d!30101 e!70605))

(declare-fun res!53805 () Bool)

(assert (=> d!30101 (=> (not res!53805) (not e!70605))))

(assert (=> d!30101 (= res!53805 (contains!834 lt!55749 lt!55761))))

(assert (=> d!30101 (= (addApplyDifferent!75 lt!55749 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) lt!55761) lt!55841)))

(declare-fun b!108498 () Bool)

(assert (=> b!108498 (= e!70605 (not (= lt!55761 lt!55758)))))

(assert (= (and d!30101 res!53805) b!108498))

(assert (=> d!30101 m!121985))

(assert (=> d!30101 m!121993))

(assert (=> d!30101 m!121977))

(assert (=> d!30101 m!121985))

(declare-fun m!122289 () Bool)

(assert (=> d!30101 m!122289))

(declare-fun m!122291 () Bool)

(assert (=> d!30101 m!122291))

(assert (=> b!108326 d!30101))

(declare-fun d!30103 () Bool)

(declare-fun e!70606 () Bool)

(assert (=> d!30103 e!70606))

(declare-fun res!53806 () Bool)

(assert (=> d!30103 (=> (not res!53806) (not e!70606))))

(declare-fun lt!55842 () ListLongMap!1585)

(assert (=> d!30103 (= res!53806 (contains!834 lt!55842 (_1!1225 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))))))

(declare-fun lt!55844 () List!1625)

(assert (=> d!30103 (= lt!55842 (ListLongMap!1586 lt!55844))))

(declare-fun lt!55843 () Unit!3321)

(declare-fun lt!55845 () Unit!3321)

(assert (=> d!30103 (= lt!55843 lt!55845)))

(assert (=> d!30103 (= (getValueByKey!157 lt!55844 (_1!1225 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))) (Some!162 (_2!1225 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))))))

(assert (=> d!30103 (= lt!55845 (lemmaContainsTupThenGetReturnValue!73 lt!55844 (_1!1225 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))) (_2!1225 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))))))

(assert (=> d!30103 (= lt!55844 (insertStrictlySorted!76 (toList!808 lt!55752) (_1!1225 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))) (_2!1225 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))))))

(assert (=> d!30103 (= (+!148 lt!55752 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))) lt!55842)))

(declare-fun b!108499 () Bool)

(declare-fun res!53807 () Bool)

(assert (=> b!108499 (=> (not res!53807) (not e!70606))))

(assert (=> b!108499 (= res!53807 (= (getValueByKey!157 (toList!808 lt!55842) (_1!1225 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))) (Some!162 (_2!1225 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))))))))

(declare-fun b!108500 () Bool)

(assert (=> b!108500 (= e!70606 (contains!836 (toList!808 lt!55842) (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))))))

(assert (= (and d!30103 res!53806) b!108499))

(assert (= (and b!108499 res!53807) b!108500))

(declare-fun m!122293 () Bool)

(assert (=> d!30103 m!122293))

(declare-fun m!122295 () Bool)

(assert (=> d!30103 m!122295))

(declare-fun m!122297 () Bool)

(assert (=> d!30103 m!122297))

(declare-fun m!122299 () Bool)

(assert (=> d!30103 m!122299))

(declare-fun m!122301 () Bool)

(assert (=> b!108499 m!122301))

(declare-fun m!122303 () Bool)

(assert (=> b!108500 m!122303))

(assert (=> b!108326 d!30103))

(declare-fun d!30105 () Bool)

(assert (=> d!30105 (contains!834 (+!148 lt!55741 (tuple2!2429 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))) lt!55756)))

(declare-fun lt!55846 () Unit!3321)

(assert (=> d!30105 (= lt!55846 (choose!674 lt!55741 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) lt!55756))))

(assert (=> d!30105 (contains!834 lt!55741 lt!55756)))

(assert (=> d!30105 (= (addStillContains!75 lt!55741 lt!55759 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) lt!55756) lt!55846)))

(declare-fun bs!4459 () Bool)

(assert (= bs!4459 d!30105))

(assert (=> bs!4459 m!121987))

(assert (=> bs!4459 m!121987))

(assert (=> bs!4459 m!121989))

(declare-fun m!122305 () Bool)

(assert (=> bs!4459 m!122305))

(declare-fun m!122307 () Bool)

(assert (=> bs!4459 m!122307))

(assert (=> b!108326 d!30105))

(declare-fun d!30107 () Bool)

(assert (=> d!30107 (= (apply!99 lt!55749 lt!55761) (get!1344 (getValueByKey!157 (toList!808 lt!55749) lt!55761)))))

(declare-fun bs!4460 () Bool)

(assert (= bs!4460 d!30107))

(declare-fun m!122309 () Bool)

(assert (=> bs!4460 m!122309))

(assert (=> bs!4460 m!122309))

(declare-fun m!122311 () Bool)

(assert (=> bs!4460 m!122311))

(assert (=> b!108326 d!30107))

(declare-fun d!30109 () Bool)

(assert (=> d!30109 (= (apply!99 (+!148 lt!55752 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)))) lt!55755) (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55752 (tuple2!2429 lt!55742 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))))) lt!55755)))))

(declare-fun bs!4461 () Bool)

(assert (= bs!4461 d!30109))

(declare-fun m!122313 () Bool)

(assert (=> bs!4461 m!122313))

(assert (=> bs!4461 m!122313))

(declare-fun m!122315 () Bool)

(assert (=> bs!4461 m!122315))

(assert (=> b!108326 d!30109))

(declare-fun b!108501 () Bool)

(declare-fun e!70612 () ListLongMap!1585)

(declare-fun e!70608 () ListLongMap!1585)

(assert (=> b!108501 (= e!70612 e!70608)))

(declare-fun c!19079 () Bool)

(assert (=> b!108501 (= c!19079 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108502 () Bool)

(assert (=> b!108502 (= e!70612 (ListLongMap!1586 Nil!1622))))

(declare-fun bm!11519 () Bool)

(declare-fun call!11522 () ListLongMap!1585)

(assert (=> bm!11519 (= call!11522 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55847 () ListLongMap!1585)

(declare-fun e!70611 () Bool)

(declare-fun b!108503 () Bool)

(assert (=> b!108503 (= e!70611 (= lt!55847 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2606 newMap!16))))))

(declare-fun d!30111 () Bool)

(declare-fun e!70609 () Bool)

(assert (=> d!30111 e!70609))

(declare-fun res!53808 () Bool)

(assert (=> d!30111 (=> (not res!53808) (not e!70609))))

(assert (=> d!30111 (= res!53808 (not (contains!834 lt!55847 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30111 (= lt!55847 e!70612)))

(declare-fun c!19077 () Bool)

(assert (=> d!30111 (= c!19077 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(assert (=> d!30111 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30111 (= (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18921 (ite c!18923 lt!55432 lt!55410) (extraKeys!2407 newMap!16)) (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16)) (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55847)))

(declare-fun b!108504 () Bool)

(declare-fun e!70610 () Bool)

(declare-fun e!70607 () Bool)

(assert (=> b!108504 (= e!70610 e!70607)))

(assert (=> b!108504 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun res!53810 () Bool)

(assert (=> b!108504 (= res!53810 (contains!834 lt!55847 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108504 (=> (not res!53810) (not e!70607))))

(declare-fun b!108505 () Bool)

(assert (=> b!108505 (= e!70609 e!70610)))

(declare-fun c!19080 () Bool)

(declare-fun e!70613 () Bool)

(assert (=> b!108505 (= c!19080 e!70613)))

(declare-fun res!53809 () Bool)

(assert (=> b!108505 (=> (not res!53809) (not e!70613))))

(assert (=> b!108505 (= res!53809 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108506 () Bool)

(assert (=> b!108506 (= e!70613 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108506 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!108507 () Bool)

(assert (=> b!108507 (= e!70610 e!70611)))

(declare-fun c!19078 () Bool)

(assert (=> b!108507 (= c!19078 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108508 () Bool)

(assert (=> b!108508 (= e!70611 (isEmpty!373 lt!55847))))

(declare-fun b!108509 () Bool)

(assert (=> b!108509 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(assert (=> b!108509 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))))))))

(assert (=> b!108509 (= e!70607 (= (apply!99 lt!55847 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108510 () Bool)

(assert (=> b!108510 (= e!70608 call!11522)))

(declare-fun b!108511 () Bool)

(declare-fun res!53811 () Bool)

(assert (=> b!108511 (=> (not res!53811) (not e!70609))))

(assert (=> b!108511 (= res!53811 (not (contains!834 lt!55847 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108512 () Bool)

(declare-fun lt!55849 () Unit!3321)

(declare-fun lt!55848 () Unit!3321)

(assert (=> b!108512 (= lt!55849 lt!55848)))

(declare-fun lt!55850 () ListLongMap!1585)

(declare-fun lt!55851 () V!3235)

(declare-fun lt!55852 () (_ BitVec 64))

(declare-fun lt!55853 () (_ BitVec 64))

(assert (=> b!108512 (not (contains!834 (+!148 lt!55850 (tuple2!2429 lt!55852 lt!55851)) lt!55853))))

(assert (=> b!108512 (= lt!55848 (addStillNotContains!47 lt!55850 lt!55852 lt!55851 lt!55853))))

(assert (=> b!108512 (= lt!55853 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108512 (= lt!55851 (get!1341 (select (arr!2076 (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108512 (= lt!55852 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108512 (= lt!55850 call!11522)))

(assert (=> b!108512 (= e!70608 (+!148 call!11522 (tuple2!2429 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (get!1341 (select (arr!2076 (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30111 c!19077) b!108502))

(assert (= (and d!30111 (not c!19077)) b!108501))

(assert (= (and b!108501 c!19079) b!108512))

(assert (= (and b!108501 (not c!19079)) b!108510))

(assert (= (or b!108512 b!108510) bm!11519))

(assert (= (and d!30111 res!53808) b!108511))

(assert (= (and b!108511 res!53811) b!108505))

(assert (= (and b!108505 res!53809) b!108506))

(assert (= (and b!108505 c!19080) b!108504))

(assert (= (and b!108505 (not c!19080)) b!108507))

(assert (= (and b!108504 res!53810) b!108509))

(assert (= (and b!108507 c!19078) b!108503))

(assert (= (and b!108507 (not c!19078)) b!108508))

(declare-fun b_lambda!4861 () Bool)

(assert (=> (not b_lambda!4861) (not b!108509)))

(assert (=> b!108509 t!5750))

(declare-fun b_and!6699 () Bool)

(assert (= b_and!6695 (and (=> t!5750 result!3509) b_and!6699)))

(assert (=> b!108509 t!5752))

(declare-fun b_and!6701 () Bool)

(assert (= b_and!6697 (and (=> t!5752 result!3511) b_and!6701)))

(declare-fun b_lambda!4863 () Bool)

(assert (=> (not b_lambda!4863) (not b!108512)))

(assert (=> b!108512 t!5750))

(declare-fun b_and!6703 () Bool)

(assert (= b_and!6699 (and (=> t!5750 result!3509) b_and!6703)))

(assert (=> b!108512 t!5752))

(declare-fun b_and!6705 () Bool)

(assert (= b_and!6701 (and (=> t!5752 result!3511) b_and!6705)))

(declare-fun m!122317 () Bool)

(assert (=> b!108511 m!122317))

(declare-fun m!122319 () Bool)

(assert (=> bm!11519 m!122319))

(assert (=> b!108506 m!121333))

(assert (=> b!108506 m!121333))

(assert (=> b!108506 m!121341))

(assert (=> b!108509 m!122007))

(assert (=> b!108509 m!121727))

(assert (=> b!108509 m!122009))

(assert (=> b!108509 m!121333))

(assert (=> b!108509 m!121727))

(assert (=> b!108509 m!122007))

(assert (=> b!108509 m!121333))

(declare-fun m!122321 () Bool)

(assert (=> b!108509 m!122321))

(declare-fun m!122323 () Bool)

(assert (=> b!108508 m!122323))

(declare-fun m!122325 () Bool)

(assert (=> d!30111 m!122325))

(assert (=> d!30111 m!121327))

(assert (=> b!108503 m!122319))

(assert (=> b!108501 m!121333))

(assert (=> b!108501 m!121333))

(assert (=> b!108501 m!121341))

(assert (=> b!108512 m!122007))

(assert (=> b!108512 m!121727))

(assert (=> b!108512 m!122009))

(declare-fun m!122327 () Bool)

(assert (=> b!108512 m!122327))

(declare-fun m!122329 () Bool)

(assert (=> b!108512 m!122329))

(assert (=> b!108512 m!121333))

(assert (=> b!108512 m!121727))

(declare-fun m!122331 () Bool)

(assert (=> b!108512 m!122331))

(assert (=> b!108512 m!122007))

(assert (=> b!108512 m!122327))

(declare-fun m!122333 () Bool)

(assert (=> b!108512 m!122333))

(assert (=> b!108504 m!121333))

(assert (=> b!108504 m!121333))

(declare-fun m!122335 () Bool)

(assert (=> b!108504 m!122335))

(assert (=> b!108326 d!30111))

(declare-fun d!30113 () Bool)

(assert (=> d!30113 (= (apply!99 lt!55748 lt!55760) (get!1344 (getValueByKey!157 (toList!808 lt!55748) lt!55760)))))

(declare-fun bs!4462 () Bool)

(assert (= bs!4462 d!30113))

(declare-fun m!122337 () Bool)

(assert (=> bs!4462 m!122337))

(assert (=> bs!4462 m!122337))

(declare-fun m!122339 () Bool)

(assert (=> bs!4462 m!122339))

(assert (=> b!108326 d!30113))

(declare-fun d!30115 () Bool)

(declare-fun e!70614 () Bool)

(assert (=> d!30115 e!70614))

(declare-fun res!53812 () Bool)

(assert (=> d!30115 (=> (not res!53812) (not e!70614))))

(declare-fun lt!55854 () ListLongMap!1585)

(assert (=> d!30115 (= res!53812 (contains!834 lt!55854 (_1!1225 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(declare-fun lt!55856 () List!1625)

(assert (=> d!30115 (= lt!55854 (ListLongMap!1586 lt!55856))))

(declare-fun lt!55855 () Unit!3321)

(declare-fun lt!55857 () Unit!3321)

(assert (=> d!30115 (= lt!55855 lt!55857)))

(assert (=> d!30115 (= (getValueByKey!157 lt!55856 (_1!1225 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))) (Some!162 (_2!1225 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(assert (=> d!30115 (= lt!55857 (lemmaContainsTupThenGetReturnValue!73 lt!55856 (_1!1225 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) (_2!1225 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(assert (=> d!30115 (= lt!55856 (insertStrictlySorted!76 (toList!808 lt!55749) (_1!1225 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) (_2!1225 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(assert (=> d!30115 (= (+!148 lt!55749 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) lt!55854)))

(declare-fun b!108513 () Bool)

(declare-fun res!53813 () Bool)

(assert (=> b!108513 (=> (not res!53813) (not e!70614))))

(assert (=> b!108513 (= res!53813 (= (getValueByKey!157 (toList!808 lt!55854) (_1!1225 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))) (Some!162 (_2!1225 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))))))

(declare-fun b!108514 () Bool)

(assert (=> b!108514 (= e!70614 (contains!836 (toList!808 lt!55854) (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))))

(assert (= (and d!30115 res!53812) b!108513))

(assert (= (and b!108513 res!53813) b!108514))

(declare-fun m!122341 () Bool)

(assert (=> d!30115 m!122341))

(declare-fun m!122343 () Bool)

(assert (=> d!30115 m!122343))

(declare-fun m!122345 () Bool)

(assert (=> d!30115 m!122345))

(declare-fun m!122347 () Bool)

(assert (=> d!30115 m!122347))

(declare-fun m!122349 () Bool)

(assert (=> b!108513 m!122349))

(declare-fun m!122351 () Bool)

(assert (=> b!108514 m!122351))

(assert (=> b!108326 d!30115))

(declare-fun d!30117 () Bool)

(assert (=> d!30117 (= (apply!99 (+!148 lt!55749 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) lt!55761) (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55749 (tuple2!2429 lt!55758 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))) lt!55761)))))

(declare-fun bs!4463 () Bool)

(assert (= bs!4463 d!30117))

(declare-fun m!122353 () Bool)

(assert (=> bs!4463 m!122353))

(assert (=> bs!4463 m!122353))

(declare-fun m!122355 () Bool)

(assert (=> bs!4463 m!122355))

(assert (=> b!108326 d!30117))

(declare-fun d!30119 () Bool)

(declare-fun c!19081 () Bool)

(assert (=> d!30119 (= c!19081 (and ((_ is Cons!1621) (toList!808 lt!55661)) (= (_1!1225 (h!2219 (toList!808 lt!55661))) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun e!70615 () Option!163)

(assert (=> d!30119 (= (getValueByKey!157 (toList!808 lt!55661) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) e!70615)))

(declare-fun b!108516 () Bool)

(declare-fun e!70616 () Option!163)

(assert (=> b!108516 (= e!70615 e!70616)))

(declare-fun c!19082 () Bool)

(assert (=> b!108516 (= c!19082 (and ((_ is Cons!1621) (toList!808 lt!55661)) (not (= (_1!1225 (h!2219 (toList!808 lt!55661))) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))))

(declare-fun b!108517 () Bool)

(assert (=> b!108517 (= e!70616 (getValueByKey!157 (t!5741 (toList!808 lt!55661)) (_1!1225 (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun b!108515 () Bool)

(assert (=> b!108515 (= e!70615 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55661)))))))

(declare-fun b!108518 () Bool)

(assert (=> b!108518 (= e!70616 None!161)))

(assert (= (and d!30119 c!19081) b!108515))

(assert (= (and d!30119 (not c!19081)) b!108516))

(assert (= (and b!108516 c!19082) b!108517))

(assert (= (and b!108516 (not c!19082)) b!108518))

(declare-fun m!122357 () Bool)

(assert (=> b!108517 m!122357))

(assert (=> b!108183 d!30119))

(declare-fun d!30121 () Bool)

(declare-fun lt!55858 () Bool)

(assert (=> d!30121 (= lt!55858 (select (content!111 (t!5741 (toList!808 lt!55268))) lt!55182))))

(declare-fun e!70618 () Bool)

(assert (=> d!30121 (= lt!55858 e!70618)))

(declare-fun res!53815 () Bool)

(assert (=> d!30121 (=> (not res!53815) (not e!70618))))

(assert (=> d!30121 (= res!53815 ((_ is Cons!1621) (t!5741 (toList!808 lt!55268))))))

(assert (=> d!30121 (= (contains!836 (t!5741 (toList!808 lt!55268)) lt!55182) lt!55858)))

(declare-fun b!108519 () Bool)

(declare-fun e!70617 () Bool)

(assert (=> b!108519 (= e!70618 e!70617)))

(declare-fun res!53814 () Bool)

(assert (=> b!108519 (=> res!53814 e!70617)))

(assert (=> b!108519 (= res!53814 (= (h!2219 (t!5741 (toList!808 lt!55268))) lt!55182))))

(declare-fun b!108520 () Bool)

(assert (=> b!108520 (= e!70617 (contains!836 (t!5741 (t!5741 (toList!808 lt!55268))) lt!55182))))

(assert (= (and d!30121 res!53815) b!108519))

(assert (= (and b!108519 (not res!53814)) b!108520))

(declare-fun m!122359 () Bool)

(assert (=> d!30121 m!122359))

(declare-fun m!122361 () Bool)

(assert (=> d!30121 m!122361))

(declare-fun m!122363 () Bool)

(assert (=> b!108520 m!122363))

(assert (=> b!108271 d!30121))

(declare-fun d!30123 () Bool)

(assert (=> d!30123 (= (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108220 d!30123))

(declare-fun d!30125 () Bool)

(assert (=> d!30125 (= (isDefined!110 (getValueByKey!157 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!375 (getValueByKey!157 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4464 () Bool)

(assert (= bs!4464 d!30125))

(assert (=> bs!4464 m!121421))

(declare-fun m!122365 () Bool)

(assert (=> bs!4464 m!122365))

(assert (=> b!108055 d!30125))

(declare-fun d!30127 () Bool)

(declare-fun c!19083 () Bool)

(assert (=> d!30127 (= c!19083 (and ((_ is Cons!1621) (toList!808 lt!55326)) (= (_1!1225 (h!2219 (toList!808 lt!55326))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!70619 () Option!163)

(assert (=> d!30127 (= (getValueByKey!157 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000) e!70619)))

(declare-fun b!108522 () Bool)

(declare-fun e!70620 () Option!163)

(assert (=> b!108522 (= e!70619 e!70620)))

(declare-fun c!19084 () Bool)

(assert (=> b!108522 (= c!19084 (and ((_ is Cons!1621) (toList!808 lt!55326)) (not (= (_1!1225 (h!2219 (toList!808 lt!55326))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108523 () Bool)

(assert (=> b!108523 (= e!70620 (getValueByKey!157 (t!5741 (toList!808 lt!55326)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108521 () Bool)

(assert (=> b!108521 (= e!70619 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55326)))))))

(declare-fun b!108524 () Bool)

(assert (=> b!108524 (= e!70620 None!161)))

(assert (= (and d!30127 c!19083) b!108521))

(assert (= (and d!30127 (not c!19083)) b!108522))

(assert (= (and b!108522 c!19084) b!108523))

(assert (= (and b!108522 (not c!19084)) b!108524))

(declare-fun m!122367 () Bool)

(assert (=> b!108523 m!122367))

(assert (=> b!108055 d!30127))

(declare-fun d!30129 () Bool)

(assert (=> d!30129 (= (isDefined!110 (getValueByKey!157 (toList!808 e!70240) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))) (not (isEmpty!375 (getValueByKey!157 (toList!808 e!70240) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun bs!4465 () Bool)

(assert (= bs!4465 d!30129))

(assert (=> bs!4465 m!121753))

(declare-fun m!122369 () Bool)

(assert (=> bs!4465 m!122369))

(assert (=> b!108187 d!30129))

(declare-fun d!30131 () Bool)

(declare-fun c!19085 () Bool)

(assert (=> d!30131 (= c!19085 (and ((_ is Cons!1621) (toList!808 e!70240)) (= (_1!1225 (h!2219 (toList!808 e!70240))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(declare-fun e!70621 () Option!163)

(assert (=> d!30131 (= (getValueByKey!157 (toList!808 e!70240) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70621)))

(declare-fun b!108526 () Bool)

(declare-fun e!70622 () Option!163)

(assert (=> b!108526 (= e!70621 e!70622)))

(declare-fun c!19086 () Bool)

(assert (=> b!108526 (= c!19086 (and ((_ is Cons!1621) (toList!808 e!70240)) (not (= (_1!1225 (h!2219 (toList!808 e!70240))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun b!108527 () Bool)

(assert (=> b!108527 (= e!70622 (getValueByKey!157 (t!5741 (toList!808 e!70240)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108525 () Bool)

(assert (=> b!108525 (= e!70621 (Some!162 (_2!1225 (h!2219 (toList!808 e!70240)))))))

(declare-fun b!108528 () Bool)

(assert (=> b!108528 (= e!70622 None!161)))

(assert (= (and d!30131 c!19085) b!108525))

(assert (= (and d!30131 (not c!19085)) b!108526))

(assert (= (and b!108526 c!19086) b!108527))

(assert (= (and b!108526 (not c!19086)) b!108528))

(assert (=> b!108527 m!120979))

(declare-fun m!122371 () Bool)

(assert (=> b!108527 m!122371))

(assert (=> b!108187 d!30131))

(declare-fun d!30133 () Bool)

(declare-fun res!53816 () Bool)

(declare-fun e!70623 () Bool)

(assert (=> d!30133 (=> res!53816 e!70623)))

(assert (=> d!30133 (= res!53816 (and ((_ is Cons!1621) (toList!808 lt!55326)) (= (_1!1225 (h!2219 (toList!808 lt!55326))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30133 (= (containsKey!161 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!70623)))

(declare-fun b!108529 () Bool)

(declare-fun e!70624 () Bool)

(assert (=> b!108529 (= e!70623 e!70624)))

(declare-fun res!53817 () Bool)

(assert (=> b!108529 (=> (not res!53817) (not e!70624))))

(assert (=> b!108529 (= res!53817 (and (or (not ((_ is Cons!1621) (toList!808 lt!55326))) (bvsle (_1!1225 (h!2219 (toList!808 lt!55326))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1621) (toList!808 lt!55326)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55326))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!108530 () Bool)

(assert (=> b!108530 (= e!70624 (containsKey!161 (t!5741 (toList!808 lt!55326)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30133 (not res!53816)) b!108529))

(assert (= (and b!108529 res!53817) b!108530))

(assert (=> b!108530 m!121117))

(declare-fun m!122373 () Bool)

(assert (=> b!108530 m!122373))

(assert (=> d!30003 d!30133))

(assert (=> b!108048 d!29985))

(declare-fun d!30135 () Bool)

(assert (=> d!30135 (= (inRange!0 (ite c!19011 (index!3189 lt!55701) (index!3192 lt!55701)) (mask!6764 newMap!16)) (and (bvsge (ite c!19011 (index!3189 lt!55701) (index!3192 lt!55701)) #b00000000000000000000000000000000) (bvslt (ite c!19011 (index!3189 lt!55701) (index!3192 lt!55701)) (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11489 d!30135))

(declare-fun d!30137 () Bool)

(declare-fun lt!55859 () Bool)

(assert (=> d!30137 (= lt!55859 (select (content!111 lt!55792) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(declare-fun e!70626 () Bool)

(assert (=> d!30137 (= lt!55859 e!70626)))

(declare-fun res!53819 () Bool)

(assert (=> d!30137 (=> (not res!53819) (not e!70626))))

(assert (=> d!30137 (= res!53819 ((_ is Cons!1621) lt!55792))))

(assert (=> d!30137 (= (contains!836 lt!55792 (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))) lt!55859)))

(declare-fun b!108531 () Bool)

(declare-fun e!70625 () Bool)

(assert (=> b!108531 (= e!70626 e!70625)))

(declare-fun res!53818 () Bool)

(assert (=> b!108531 (=> res!53818 e!70625)))

(assert (=> b!108531 (= res!53818 (= (h!2219 lt!55792) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(declare-fun b!108532 () Bool)

(assert (=> b!108532 (= e!70625 (contains!836 (t!5741 lt!55792) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(assert (= (and d!30137 res!53819) b!108531))

(assert (= (and b!108531 (not res!53818)) b!108532))

(declare-fun m!122375 () Bool)

(assert (=> d!30137 m!122375))

(declare-fun m!122377 () Bool)

(assert (=> d!30137 m!122377))

(declare-fun m!122379 () Bool)

(assert (=> b!108532 m!122379))

(assert (=> b!108397 d!30137))

(assert (=> d!29851 d!30057))

(declare-fun d!30139 () Bool)

(declare-fun res!53820 () Bool)

(declare-fun e!70627 () Bool)

(assert (=> d!30139 (=> res!53820 e!70627)))

(assert (=> d!30139 (= res!53820 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55190))) (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55190)))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30139 (= (containsKey!161 (t!5741 (toList!808 lt!55190)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70627)))

(declare-fun b!108533 () Bool)

(declare-fun e!70628 () Bool)

(assert (=> b!108533 (= e!70627 e!70628)))

(declare-fun res!53821 () Bool)

(assert (=> b!108533 (=> (not res!53821) (not e!70628))))

(assert (=> b!108533 (= res!53821 (and (or (not ((_ is Cons!1621) (t!5741 (toList!808 lt!55190)))) (bvsle (_1!1225 (h!2219 (t!5741 (toList!808 lt!55190)))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))) ((_ is Cons!1621) (t!5741 (toList!808 lt!55190))) (bvslt (_1!1225 (h!2219 (t!5741 (toList!808 lt!55190)))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(declare-fun b!108534 () Bool)

(assert (=> b!108534 (= e!70628 (containsKey!161 (t!5741 (t!5741 (toList!808 lt!55190))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30139 (not res!53820)) b!108533))

(assert (= (and b!108533 res!53821) b!108534))

(assert (=> b!108534 m!120979))

(declare-fun m!122381 () Bool)

(assert (=> b!108534 m!122381))

(assert (=> b!108197 d!30139))

(declare-fun d!30141 () Bool)

(declare-fun e!70629 () Bool)

(assert (=> d!30141 e!70629))

(declare-fun res!53822 () Bool)

(assert (=> d!30141 (=> (not res!53822) (not e!70629))))

(declare-fun lt!55860 () ListLongMap!1585)

(assert (=> d!30141 (= res!53822 (contains!834 lt!55860 (_1!1225 (ite (or c!19029 c!19031) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))))))

(declare-fun lt!55862 () List!1625)

(assert (=> d!30141 (= lt!55860 (ListLongMap!1586 lt!55862))))

(declare-fun lt!55861 () Unit!3321)

(declare-fun lt!55863 () Unit!3321)

(assert (=> d!30141 (= lt!55861 lt!55863)))

(assert (=> d!30141 (= (getValueByKey!157 lt!55862 (_1!1225 (ite (or c!19029 c!19031) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))) (Some!162 (_2!1225 (ite (or c!19029 c!19031) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))))))

(assert (=> d!30141 (= lt!55863 (lemmaContainsTupThenGetReturnValue!73 lt!55862 (_1!1225 (ite (or c!19029 c!19031) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))) (_2!1225 (ite (or c!19029 c!19031) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))))))

(assert (=> d!30141 (= lt!55862 (insertStrictlySorted!76 (toList!808 (ite c!19029 call!11509 (ite c!19031 call!11507 call!11508))) (_1!1225 (ite (or c!19029 c!19031) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))) (_2!1225 (ite (or c!19029 c!19031) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))))))

(assert (=> d!30141 (= (+!148 (ite c!19029 call!11509 (ite c!19031 call!11507 call!11508)) (ite (or c!19029 c!19031) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))) lt!55860)))

(declare-fun b!108535 () Bool)

(declare-fun res!53823 () Bool)

(assert (=> b!108535 (=> (not res!53823) (not e!70629))))

(assert (=> b!108535 (= res!53823 (= (getValueByKey!157 (toList!808 lt!55860) (_1!1225 (ite (or c!19029 c!19031) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))) (Some!162 (_2!1225 (ite (or c!19029 c!19031) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))))

(declare-fun b!108536 () Bool)

(assert (=> b!108536 (= e!70629 (contains!836 (toList!808 lt!55860) (ite (or c!19029 c!19031) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18921 c!18923) lt!55184 (zeroValue!2479 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(assert (= (and d!30141 res!53822) b!108535))

(assert (= (and b!108535 res!53823) b!108536))

(declare-fun m!122383 () Bool)

(assert (=> d!30141 m!122383))

(declare-fun m!122385 () Bool)

(assert (=> d!30141 m!122385))

(declare-fun m!122387 () Bool)

(assert (=> d!30141 m!122387))

(declare-fun m!122389 () Bool)

(assert (=> d!30141 m!122389))

(declare-fun m!122391 () Bool)

(assert (=> b!108535 m!122391))

(declare-fun m!122393 () Bool)

(assert (=> b!108536 m!122393))

(assert (=> bm!11504 d!30141))

(declare-fun d!30143 () Bool)

(declare-fun res!53824 () Bool)

(declare-fun e!70630 () Bool)

(assert (=> d!30143 (=> res!53824 e!70630)))

(assert (=> d!30143 (= res!53824 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)))) (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))))) lt!55264)))))

(assert (=> d!30143 (= (containsKey!161 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))) lt!55264) e!70630)))

(declare-fun b!108537 () Bool)

(declare-fun e!70631 () Bool)

(assert (=> b!108537 (= e!70630 e!70631)))

(declare-fun res!53825 () Bool)

(assert (=> b!108537 (=> (not res!53825) (not e!70631))))

(assert (=> b!108537 (= res!53825 (and (or (not ((_ is Cons!1621) (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))))) (bvsle (_1!1225 (h!2219 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))))) lt!55264)) ((_ is Cons!1621) (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)))) (bvslt (_1!1225 (h!2219 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))))) lt!55264)))))

(declare-fun b!108538 () Bool)

(assert (=> b!108538 (= e!70631 (containsKey!161 (t!5741 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)))) lt!55264))))

(assert (= (and d!30143 (not res!53824)) b!108537))

(assert (= (and b!108537 res!53825) b!108538))

(declare-fun m!122395 () Bool)

(assert (=> b!108538 m!122395))

(assert (=> d!29877 d!30143))

(declare-fun d!30145 () Bool)

(assert (=> d!30145 (= (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108297 d!30145))

(assert (=> d!29991 d!30015))

(declare-fun d!30147 () Bool)

(declare-fun e!70634 () Bool)

(assert (=> d!30147 e!70634))

(declare-fun res!53831 () Bool)

(assert (=> d!30147 (=> (not res!53831) (not e!70634))))

(declare-fun lt!55866 () SeekEntryResult!260)

(assert (=> d!30147 (= res!53831 ((_ is Found!260) lt!55866))))

(assert (=> d!30147 (= lt!55866 (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(assert (=> d!30147 true))

(declare-fun _$33!93 () Unit!3321)

(assert (=> d!30147 (= (choose!679 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)) _$33!93)))

(declare-fun b!108543 () Bool)

(declare-fun res!53830 () Bool)

(assert (=> b!108543 (=> (not res!53830) (not e!70634))))

(assert (=> b!108543 (= res!53830 (inRange!0 (index!3190 lt!55866) (mask!6764 newMap!16)))))

(declare-fun b!108544 () Bool)

(assert (=> b!108544 (= e!70634 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55866)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30147 res!53831) b!108543))

(assert (= (and b!108543 res!53830) b!108544))

(assert (=> d!30147 m!120979))

(assert (=> d!30147 m!121239))

(declare-fun m!122397 () Bool)

(assert (=> b!108543 m!122397))

(declare-fun m!122399 () Bool)

(assert (=> b!108544 m!122399))

(assert (=> d!29991 d!30147))

(assert (=> d!29991 d!30057))

(declare-fun d!30149 () Bool)

(assert (=> d!30149 (= (isDefined!110 (getValueByKey!157 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!375 (getValueByKey!157 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4466 () Bool)

(assert (= bs!4466 d!30149))

(assert (=> bs!4466 m!121321))

(declare-fun m!122401 () Bool)

(assert (=> bs!4466 m!122401))

(assert (=> b!107961 d!30149))

(declare-fun d!30151 () Bool)

(declare-fun c!19087 () Bool)

(assert (=> d!30151 (= c!19087 (and ((_ is Cons!1621) (toList!808 lt!55258)) (= (_1!1225 (h!2219 (toList!808 lt!55258))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!70635 () Option!163)

(assert (=> d!30151 (= (getValueByKey!157 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!70635)))

(declare-fun b!108546 () Bool)

(declare-fun e!70636 () Option!163)

(assert (=> b!108546 (= e!70635 e!70636)))

(declare-fun c!19088 () Bool)

(assert (=> b!108546 (= c!19088 (and ((_ is Cons!1621) (toList!808 lt!55258)) (not (= (_1!1225 (h!2219 (toList!808 lt!55258))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!108547 () Bool)

(assert (=> b!108547 (= e!70636 (getValueByKey!157 (t!5741 (toList!808 lt!55258)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108545 () Bool)

(assert (=> b!108545 (= e!70635 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55258)))))))

(declare-fun b!108548 () Bool)

(assert (=> b!108548 (= e!70636 None!161)))

(assert (= (and d!30151 c!19087) b!108545))

(assert (= (and d!30151 (not c!19087)) b!108546))

(assert (= (and b!108546 c!19088) b!108547))

(assert (= (and b!108546 (not c!19088)) b!108548))

(assert (=> b!108547 m!121117))

(declare-fun m!122403 () Bool)

(assert (=> b!108547 m!122403))

(assert (=> b!107961 d!30151))

(declare-fun d!30153 () Bool)

(assert (=> d!30153 (= (isEmpty!373 lt!55683) (isEmpty!374 (toList!808 lt!55683)))))

(declare-fun bs!4467 () Bool)

(assert (= bs!4467 d!30153))

(declare-fun m!122405 () Bool)

(assert (=> bs!4467 m!122405))

(assert (=> b!108227 d!30153))

(assert (=> d!29863 d!29951))

(declare-fun bm!11520 () Bool)

(declare-fun call!11523 () Bool)

(declare-fun lt!55873 () ListLongMap!1585)

(assert (=> bm!11520 (= call!11523 (contains!834 lt!55873 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108549 () Bool)

(declare-fun e!70640 () Unit!3321)

(declare-fun lt!55879 () Unit!3321)

(assert (=> b!108549 (= e!70640 lt!55879)))

(declare-fun lt!55867 () ListLongMap!1585)

(assert (=> b!108549 (= lt!55867 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55410 (zeroValue!2479 newMap!16) lt!55184 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55885 () (_ BitVec 64))

(assert (=> b!108549 (= lt!55885 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55882 () (_ BitVec 64))

(assert (=> b!108549 (= lt!55882 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55880 () Unit!3321)

(assert (=> b!108549 (= lt!55880 (addStillContains!75 lt!55867 lt!55885 (zeroValue!2479 newMap!16) lt!55882))))

(assert (=> b!108549 (contains!834 (+!148 lt!55867 (tuple2!2429 lt!55885 (zeroValue!2479 newMap!16))) lt!55882)))

(declare-fun lt!55872 () Unit!3321)

(assert (=> b!108549 (= lt!55872 lt!55880)))

(declare-fun lt!55875 () ListLongMap!1585)

(assert (=> b!108549 (= lt!55875 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55410 (zeroValue!2479 newMap!16) lt!55184 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55884 () (_ BitVec 64))

(assert (=> b!108549 (= lt!55884 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55887 () (_ BitVec 64))

(assert (=> b!108549 (= lt!55887 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55883 () Unit!3321)

(assert (=> b!108549 (= lt!55883 (addApplyDifferent!75 lt!55875 lt!55884 lt!55184 lt!55887))))

(assert (=> b!108549 (= (apply!99 (+!148 lt!55875 (tuple2!2429 lt!55884 lt!55184)) lt!55887) (apply!99 lt!55875 lt!55887))))

(declare-fun lt!55888 () Unit!3321)

(assert (=> b!108549 (= lt!55888 lt!55883)))

(declare-fun lt!55878 () ListLongMap!1585)

(assert (=> b!108549 (= lt!55878 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55410 (zeroValue!2479 newMap!16) lt!55184 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55868 () (_ BitVec 64))

(assert (=> b!108549 (= lt!55868 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55881 () (_ BitVec 64))

(assert (=> b!108549 (= lt!55881 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55877 () Unit!3321)

(assert (=> b!108549 (= lt!55877 (addApplyDifferent!75 lt!55878 lt!55868 (zeroValue!2479 newMap!16) lt!55881))))

(assert (=> b!108549 (= (apply!99 (+!148 lt!55878 (tuple2!2429 lt!55868 (zeroValue!2479 newMap!16))) lt!55881) (apply!99 lt!55878 lt!55881))))

(declare-fun lt!55869 () Unit!3321)

(assert (=> b!108549 (= lt!55869 lt!55877)))

(declare-fun lt!55874 () ListLongMap!1585)

(assert (=> b!108549 (= lt!55874 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55410 (zeroValue!2479 newMap!16) lt!55184 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55871 () (_ BitVec 64))

(assert (=> b!108549 (= lt!55871 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55886 () (_ BitVec 64))

(assert (=> b!108549 (= lt!55886 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108549 (= lt!55879 (addApplyDifferent!75 lt!55874 lt!55871 lt!55184 lt!55886))))

(assert (=> b!108549 (= (apply!99 (+!148 lt!55874 (tuple2!2429 lt!55871 lt!55184)) lt!55886) (apply!99 lt!55874 lt!55886))))

(declare-fun bm!11521 () Bool)

(declare-fun call!11524 () ListLongMap!1585)

(declare-fun call!11529 () ListLongMap!1585)

(assert (=> bm!11521 (= call!11524 call!11529)))

(declare-fun b!108550 () Bool)

(declare-fun e!70637 () Bool)

(assert (=> b!108550 (= e!70637 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108552 () Bool)

(declare-fun res!53837 () Bool)

(declare-fun e!70644 () Bool)

(assert (=> b!108552 (=> (not res!53837) (not e!70644))))

(declare-fun e!70647 () Bool)

(assert (=> b!108552 (= res!53837 e!70647)))

(declare-fun c!19093 () Bool)

(assert (=> b!108552 (= c!19093 (not (= (bvand lt!55410 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108553 () Bool)

(declare-fun e!70648 () ListLongMap!1585)

(assert (=> b!108553 (= e!70648 call!11524)))

(declare-fun b!108554 () Bool)

(declare-fun e!70641 () ListLongMap!1585)

(assert (=> b!108554 (= e!70641 call!11524)))

(declare-fun b!108555 () Bool)

(declare-fun res!53834 () Bool)

(assert (=> b!108555 (=> (not res!53834) (not e!70644))))

(declare-fun e!70649 () Bool)

(assert (=> b!108555 (= res!53834 e!70649)))

(declare-fun res!53832 () Bool)

(assert (=> b!108555 (=> res!53832 e!70649)))

(assert (=> b!108555 (= res!53832 (not e!70637))))

(declare-fun res!53833 () Bool)

(assert (=> b!108555 (=> (not res!53833) (not e!70637))))

(assert (=> b!108555 (= res!53833 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun bm!11522 () Bool)

(declare-fun call!11528 () ListLongMap!1585)

(assert (=> bm!11522 (= call!11528 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55410 (zeroValue!2479 newMap!16) lt!55184 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun c!19094 () Bool)

(declare-fun c!19092 () Bool)

(declare-fun call!11527 () ListLongMap!1585)

(declare-fun call!11526 () ListLongMap!1585)

(declare-fun bm!11523 () Bool)

(assert (=> bm!11523 (= call!11529 (+!148 (ite c!19092 call!11528 (ite c!19094 call!11526 call!11527)) (ite (or c!19092 c!19094) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184))))))

(declare-fun b!108556 () Bool)

(declare-fun Unit!3356 () Unit!3321)

(assert (=> b!108556 (= e!70640 Unit!3356)))

(declare-fun b!108557 () Bool)

(declare-fun e!70643 () Bool)

(assert (=> b!108557 (= e!70647 e!70643)))

(declare-fun res!53840 () Bool)

(assert (=> b!108557 (= res!53840 call!11523)))

(assert (=> b!108557 (=> (not res!53840) (not e!70643))))

(declare-fun d!30155 () Bool)

(assert (=> d!30155 e!70644))

(declare-fun res!53839 () Bool)

(assert (=> d!30155 (=> (not res!53839) (not e!70644))))

(assert (=> d!30155 (= res!53839 (or (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))))

(declare-fun lt!55876 () ListLongMap!1585)

(assert (=> d!30155 (= lt!55873 lt!55876)))

(declare-fun lt!55870 () Unit!3321)

(assert (=> d!30155 (= lt!55870 e!70640)))

(declare-fun c!19091 () Bool)

(declare-fun e!70645 () Bool)

(assert (=> d!30155 (= c!19091 e!70645)))

(declare-fun res!53835 () Bool)

(assert (=> d!30155 (=> (not res!53835) (not e!70645))))

(assert (=> d!30155 (= res!53835 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun e!70638 () ListLongMap!1585)

(assert (=> d!30155 (= lt!55876 e!70638)))

(assert (=> d!30155 (= c!19092 (and (not (= (bvand lt!55410 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!55410 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30155 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30155 (= (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55410 (zeroValue!2479 newMap!16) lt!55184 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55873)))

(declare-fun b!108551 () Bool)

(declare-fun c!19089 () Bool)

(assert (=> b!108551 (= c!19089 (and (not (= (bvand lt!55410 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!55410 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108551 (= e!70648 e!70641)))

(declare-fun b!108558 () Bool)

(assert (=> b!108558 (= e!70645 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108559 () Bool)

(assert (=> b!108559 (= e!70647 (not call!11523))))

(declare-fun b!108560 () Bool)

(declare-fun e!70646 () Bool)

(declare-fun call!11525 () Bool)

(assert (=> b!108560 (= e!70646 (not call!11525))))

(declare-fun b!108561 () Bool)

(assert (=> b!108561 (= e!70644 e!70646)))

(declare-fun c!19090 () Bool)

(assert (=> b!108561 (= c!19090 (not (= (bvand lt!55410 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108562 () Bool)

(declare-fun e!70642 () Bool)

(assert (=> b!108562 (= e!70649 e!70642)))

(declare-fun res!53836 () Bool)

(assert (=> b!108562 (=> (not res!53836) (not e!70642))))

(assert (=> b!108562 (= res!53836 (contains!834 lt!55873 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108562 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun bm!11524 () Bool)

(assert (=> bm!11524 (= call!11527 call!11526)))

(declare-fun b!108563 () Bool)

(declare-fun e!70639 () Bool)

(assert (=> b!108563 (= e!70639 (= (apply!99 lt!55873 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55184))))

(declare-fun bm!11525 () Bool)

(assert (=> bm!11525 (= call!11525 (contains!834 lt!55873 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108564 () Bool)

(assert (=> b!108564 (= e!70641 call!11527)))

(declare-fun b!108565 () Bool)

(assert (=> b!108565 (= e!70642 (= (apply!99 lt!55873 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108565 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 (_values!2589 newMap!16))))))

(assert (=> b!108565 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108566 () Bool)

(assert (=> b!108566 (= e!70638 (+!148 call!11529 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)))))

(declare-fun b!108567 () Bool)

(assert (=> b!108567 (= e!70643 (= (apply!99 lt!55873 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!108568 () Bool)

(assert (=> b!108568 (= e!70638 e!70648)))

(assert (=> b!108568 (= c!19094 (and (not (= (bvand lt!55410 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!55410 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108569 () Bool)

(assert (=> b!108569 (= e!70646 e!70639)))

(declare-fun res!53838 () Bool)

(assert (=> b!108569 (= res!53838 call!11525)))

(assert (=> b!108569 (=> (not res!53838) (not e!70639))))

(declare-fun bm!11526 () Bool)

(assert (=> bm!11526 (= call!11526 call!11528)))

(assert (= (and d!30155 c!19092) b!108566))

(assert (= (and d!30155 (not c!19092)) b!108568))

(assert (= (and b!108568 c!19094) b!108553))

(assert (= (and b!108568 (not c!19094)) b!108551))

(assert (= (and b!108551 c!19089) b!108554))

(assert (= (and b!108551 (not c!19089)) b!108564))

(assert (= (or b!108554 b!108564) bm!11524))

(assert (= (or b!108553 bm!11524) bm!11526))

(assert (= (or b!108553 b!108554) bm!11521))

(assert (= (or b!108566 bm!11526) bm!11522))

(assert (= (or b!108566 bm!11521) bm!11523))

(assert (= (and d!30155 res!53835) b!108558))

(assert (= (and d!30155 c!19091) b!108549))

(assert (= (and d!30155 (not c!19091)) b!108556))

(assert (= (and d!30155 res!53839) b!108555))

(assert (= (and b!108555 res!53833) b!108550))

(assert (= (and b!108555 (not res!53832)) b!108562))

(assert (= (and b!108562 res!53836) b!108565))

(assert (= (and b!108555 res!53834) b!108552))

(assert (= (and b!108552 c!19093) b!108557))

(assert (= (and b!108552 (not c!19093)) b!108559))

(assert (= (and b!108557 res!53840) b!108567))

(assert (= (or b!108557 b!108559) bm!11520))

(assert (= (and b!108552 res!53837) b!108561))

(assert (= (and b!108561 c!19090) b!108569))

(assert (= (and b!108561 (not c!19090)) b!108560))

(assert (= (and b!108569 res!53838) b!108563))

(assert (= (or b!108569 b!108560) bm!11525))

(declare-fun b_lambda!4865 () Bool)

(assert (=> (not b_lambda!4865) (not b!108565)))

(assert (=> b!108565 t!5750))

(declare-fun b_and!6707 () Bool)

(assert (= b_and!6703 (and (=> t!5750 result!3509) b_and!6707)))

(assert (=> b!108565 t!5752))

(declare-fun b_and!6709 () Bool)

(assert (= b_and!6705 (and (=> t!5752 result!3511) b_and!6709)))

(declare-fun m!122407 () Bool)

(assert (=> bm!11520 m!122407))

(assert (=> b!108562 m!121333))

(assert (=> b!108562 m!121333))

(declare-fun m!122409 () Bool)

(assert (=> b!108562 m!122409))

(assert (=> b!108558 m!121333))

(assert (=> b!108558 m!121333))

(assert (=> b!108558 m!121341))

(declare-fun m!122411 () Bool)

(assert (=> bm!11525 m!122411))

(declare-fun m!122413 () Bool)

(assert (=> b!108549 m!122413))

(declare-fun m!122415 () Bool)

(assert (=> b!108549 m!122415))

(declare-fun m!122417 () Bool)

(assert (=> b!108549 m!122417))

(declare-fun m!122419 () Bool)

(assert (=> b!108549 m!122419))

(declare-fun m!122421 () Bool)

(assert (=> b!108549 m!122421))

(declare-fun m!122423 () Bool)

(assert (=> b!108549 m!122423))

(declare-fun m!122425 () Bool)

(assert (=> b!108549 m!122425))

(declare-fun m!122427 () Bool)

(assert (=> b!108549 m!122427))

(declare-fun m!122429 () Bool)

(assert (=> b!108549 m!122429))

(declare-fun m!122431 () Bool)

(assert (=> b!108549 m!122431))

(declare-fun m!122433 () Bool)

(assert (=> b!108549 m!122433))

(assert (=> b!108549 m!122415))

(assert (=> b!108549 m!122427))

(declare-fun m!122435 () Bool)

(assert (=> b!108549 m!122435))

(declare-fun m!122437 () Bool)

(assert (=> b!108549 m!122437))

(declare-fun m!122439 () Bool)

(assert (=> b!108549 m!122439))

(assert (=> b!108549 m!122421))

(declare-fun m!122441 () Bool)

(assert (=> b!108549 m!122441))

(assert (=> b!108549 m!121333))

(declare-fun m!122443 () Bool)

(assert (=> b!108549 m!122443))

(assert (=> b!108549 m!122429))

(declare-fun m!122445 () Bool)

(assert (=> b!108566 m!122445))

(assert (=> b!108565 m!121333))

(assert (=> b!108565 m!121333))

(declare-fun m!122447 () Bool)

(assert (=> b!108565 m!122447))

(assert (=> b!108565 m!121725))

(assert (=> b!108565 m!121727))

(assert (=> b!108565 m!121729))

(assert (=> b!108565 m!121727))

(assert (=> b!108565 m!121725))

(assert (=> bm!11522 m!122433))

(assert (=> b!108550 m!121333))

(assert (=> b!108550 m!121333))

(assert (=> b!108550 m!121341))

(declare-fun m!122449 () Bool)

(assert (=> b!108563 m!122449))

(declare-fun m!122451 () Bool)

(assert (=> bm!11523 m!122451))

(declare-fun m!122453 () Bool)

(assert (=> b!108567 m!122453))

(assert (=> d!30155 m!121327))

(assert (=> d!29863 d!30155))

(declare-fun d!30157 () Bool)

(declare-fun e!70650 () Bool)

(assert (=> d!30157 e!70650))

(declare-fun res!53841 () Bool)

(assert (=> d!30157 (=> (not res!53841) (not e!70650))))

(declare-fun lt!55889 () ListLongMap!1585)

(assert (=> d!30157 (= res!53841 (contains!834 lt!55889 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184))))))

(declare-fun lt!55891 () List!1625)

(assert (=> d!30157 (= lt!55889 (ListLongMap!1586 lt!55891))))

(declare-fun lt!55890 () Unit!3321)

(declare-fun lt!55892 () Unit!3321)

(assert (=> d!30157 (= lt!55890 lt!55892)))

(assert (=> d!30157 (= (getValueByKey!157 lt!55891 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184))) (Some!162 (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184))))))

(assert (=> d!30157 (= lt!55892 (lemmaContainsTupThenGetReturnValue!73 lt!55891 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184))))))

(assert (=> d!30157 (= lt!55891 (insertStrictlySorted!76 (toList!808 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184))))))

(assert (=> d!30157 (= (+!148 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) lt!55889)))

(declare-fun b!108570 () Bool)

(declare-fun res!53842 () Bool)

(assert (=> b!108570 (=> (not res!53842) (not e!70650))))

(assert (=> b!108570 (= res!53842 (= (getValueByKey!157 (toList!808 lt!55889) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184))) (Some!162 (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)))))))

(declare-fun b!108571 () Bool)

(assert (=> b!108571 (= e!70650 (contains!836 (toList!808 lt!55889) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)))))

(assert (= (and d!30157 res!53841) b!108570))

(assert (= (and b!108570 res!53842) b!108571))

(declare-fun m!122455 () Bool)

(assert (=> d!30157 m!122455))

(declare-fun m!122457 () Bool)

(assert (=> d!30157 m!122457))

(declare-fun m!122459 () Bool)

(assert (=> d!30157 m!122459))

(declare-fun m!122461 () Bool)

(assert (=> d!30157 m!122461))

(declare-fun m!122463 () Bool)

(assert (=> b!108570 m!122463))

(declare-fun m!122465 () Bool)

(assert (=> b!108571 m!122465))

(assert (=> d!29863 d!30157))

(assert (=> d!29863 d!30057))

(declare-fun d!30159 () Bool)

(assert (=> d!30159 (= (+!148 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55410 (zeroValue!2479 newMap!16) lt!55184 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(assert (=> d!30159 true))

(declare-fun _$8!97 () Unit!3321)

(assert (=> d!30159 (= (choose!670 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55410 (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) lt!55184 (defaultEntry!2606 newMap!16)) _$8!97)))

(declare-fun bs!4468 () Bool)

(assert (= bs!4468 d!30159))

(assert (=> bs!4468 m!121175))

(assert (=> bs!4468 m!121175))

(assert (=> bs!4468 m!121351))

(assert (=> bs!4468 m!121353))

(assert (=> d!29863 d!30159))

(declare-fun d!30161 () Bool)

(declare-fun res!53843 () Bool)

(declare-fun e!70651 () Bool)

(assert (=> d!30161 (=> res!53843 e!70651)))

(assert (=> d!30161 (= res!53843 (= (select (arr!2075 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30161 (= (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!70651)))

(declare-fun b!108572 () Bool)

(declare-fun e!70652 () Bool)

(assert (=> b!108572 (= e!70651 e!70652)))

(declare-fun res!53844 () Bool)

(assert (=> b!108572 (=> (not res!53844) (not e!70652))))

(assert (=> b!108572 (= res!53844 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108573 () Bool)

(assert (=> b!108573 (= e!70652 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!30161 (not res!53843)) b!108572))

(assert (= (and b!108572 res!53844) b!108573))

(declare-fun m!122467 () Bool)

(assert (=> d!30161 m!122467))

(assert (=> b!108573 m!120979))

(declare-fun m!122469 () Bool)

(assert (=> b!108573 m!122469))

(assert (=> b!108399 d!30161))

(declare-fun d!30163 () Bool)

(assert (=> d!30163 (= (apply!99 (+!148 lt!55725 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16))) lt!55728) (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55725 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16)))) lt!55728)))))

(declare-fun bs!4469 () Bool)

(assert (= bs!4469 d!30163))

(declare-fun m!122471 () Bool)

(assert (=> bs!4469 m!122471))

(assert (=> bs!4469 m!122471))

(declare-fun m!122473 () Bool)

(assert (=> bs!4469 m!122473))

(assert (=> b!108300 d!30163))

(declare-fun d!30165 () Bool)

(assert (=> d!30165 (contains!834 (+!148 lt!55714 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16))) lt!55729)))

(declare-fun lt!55893 () Unit!3321)

(assert (=> d!30165 (= lt!55893 (choose!674 lt!55714 lt!55732 (zeroValue!2479 newMap!16) lt!55729))))

(assert (=> d!30165 (contains!834 lt!55714 lt!55729)))

(assert (=> d!30165 (= (addStillContains!75 lt!55714 lt!55732 (zeroValue!2479 newMap!16) lt!55729) lt!55893)))

(declare-fun bs!4470 () Bool)

(assert (= bs!4470 d!30165))

(assert (=> bs!4470 m!121919))

(assert (=> bs!4470 m!121919))

(assert (=> bs!4470 m!121921))

(declare-fun m!122475 () Bool)

(assert (=> bs!4470 m!122475))

(declare-fun m!122477 () Bool)

(assert (=> bs!4470 m!122477))

(assert (=> b!108300 d!30165))

(declare-fun d!30167 () Bool)

(declare-fun e!70653 () Bool)

(assert (=> d!30167 e!70653))

(declare-fun res!53845 () Bool)

(assert (=> d!30167 (=> (not res!53845) (not e!70653))))

(declare-fun lt!55894 () ListLongMap!1585)

(assert (=> d!30167 (= res!53845 (contains!834 lt!55894 (_1!1225 (tuple2!2429 lt!55718 (minValue!2479 newMap!16)))))))

(declare-fun lt!55896 () List!1625)

(assert (=> d!30167 (= lt!55894 (ListLongMap!1586 lt!55896))))

(declare-fun lt!55895 () Unit!3321)

(declare-fun lt!55897 () Unit!3321)

(assert (=> d!30167 (= lt!55895 lt!55897)))

(assert (=> d!30167 (= (getValueByKey!157 lt!55896 (_1!1225 (tuple2!2429 lt!55718 (minValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55718 (minValue!2479 newMap!16)))))))

(assert (=> d!30167 (= lt!55897 (lemmaContainsTupThenGetReturnValue!73 lt!55896 (_1!1225 (tuple2!2429 lt!55718 (minValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55718 (minValue!2479 newMap!16)))))))

(assert (=> d!30167 (= lt!55896 (insertStrictlySorted!76 (toList!808 lt!55721) (_1!1225 (tuple2!2429 lt!55718 (minValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55718 (minValue!2479 newMap!16)))))))

(assert (=> d!30167 (= (+!148 lt!55721 (tuple2!2429 lt!55718 (minValue!2479 newMap!16))) lt!55894)))

(declare-fun b!108574 () Bool)

(declare-fun res!53846 () Bool)

(assert (=> b!108574 (=> (not res!53846) (not e!70653))))

(assert (=> b!108574 (= res!53846 (= (getValueByKey!157 (toList!808 lt!55894) (_1!1225 (tuple2!2429 lt!55718 (minValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55718 (minValue!2479 newMap!16))))))))

(declare-fun b!108575 () Bool)

(assert (=> b!108575 (= e!70653 (contains!836 (toList!808 lt!55894) (tuple2!2429 lt!55718 (minValue!2479 newMap!16))))))

(assert (= (and d!30167 res!53845) b!108574))

(assert (= (and b!108574 res!53846) b!108575))

(declare-fun m!122479 () Bool)

(assert (=> d!30167 m!122479))

(declare-fun m!122481 () Bool)

(assert (=> d!30167 m!122481))

(declare-fun m!122483 () Bool)

(assert (=> d!30167 m!122483))

(declare-fun m!122485 () Bool)

(assert (=> d!30167 m!122485))

(declare-fun m!122487 () Bool)

(assert (=> b!108574 m!122487))

(declare-fun m!122489 () Bool)

(assert (=> b!108575 m!122489))

(assert (=> b!108300 d!30167))

(declare-fun d!30169 () Bool)

(declare-fun e!70655 () Bool)

(assert (=> d!30169 e!70655))

(declare-fun res!53847 () Bool)

(assert (=> d!30169 (=> res!53847 e!70655)))

(declare-fun lt!55899 () Bool)

(assert (=> d!30169 (= res!53847 (not lt!55899))))

(declare-fun lt!55900 () Bool)

(assert (=> d!30169 (= lt!55899 lt!55900)))

(declare-fun lt!55898 () Unit!3321)

(declare-fun e!70654 () Unit!3321)

(assert (=> d!30169 (= lt!55898 e!70654)))

(declare-fun c!19095 () Bool)

(assert (=> d!30169 (= c!19095 lt!55900)))

(assert (=> d!30169 (= lt!55900 (containsKey!161 (toList!808 (+!148 lt!55714 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16)))) lt!55729))))

(assert (=> d!30169 (= (contains!834 (+!148 lt!55714 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16))) lt!55729) lt!55899)))

(declare-fun b!108576 () Bool)

(declare-fun lt!55901 () Unit!3321)

(assert (=> b!108576 (= e!70654 lt!55901)))

(assert (=> b!108576 (= lt!55901 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 (+!148 lt!55714 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16)))) lt!55729))))

(assert (=> b!108576 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55714 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16)))) lt!55729))))

(declare-fun b!108577 () Bool)

(declare-fun Unit!3357 () Unit!3321)

(assert (=> b!108577 (= e!70654 Unit!3357)))

(declare-fun b!108578 () Bool)

(assert (=> b!108578 (= e!70655 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55714 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16)))) lt!55729)))))

(assert (= (and d!30169 c!19095) b!108576))

(assert (= (and d!30169 (not c!19095)) b!108577))

(assert (= (and d!30169 (not res!53847)) b!108578))

(declare-fun m!122491 () Bool)

(assert (=> d!30169 m!122491))

(declare-fun m!122493 () Bool)

(assert (=> b!108576 m!122493))

(declare-fun m!122495 () Bool)

(assert (=> b!108576 m!122495))

(assert (=> b!108576 m!122495))

(declare-fun m!122497 () Bool)

(assert (=> b!108576 m!122497))

(assert (=> b!108578 m!122495))

(assert (=> b!108578 m!122495))

(assert (=> b!108578 m!122497))

(assert (=> b!108300 d!30169))

(declare-fun d!30171 () Bool)

(assert (=> d!30171 (= (apply!99 (+!148 lt!55721 (tuple2!2429 lt!55718 (minValue!2479 newMap!16))) lt!55733) (apply!99 lt!55721 lt!55733))))

(declare-fun lt!55902 () Unit!3321)

(assert (=> d!30171 (= lt!55902 (choose!673 lt!55721 lt!55718 (minValue!2479 newMap!16) lt!55733))))

(declare-fun e!70656 () Bool)

(assert (=> d!30171 e!70656))

(declare-fun res!53848 () Bool)

(assert (=> d!30171 (=> (not res!53848) (not e!70656))))

(assert (=> d!30171 (= res!53848 (contains!834 lt!55721 lt!55733))))

(assert (=> d!30171 (= (addApplyDifferent!75 lt!55721 lt!55718 (minValue!2479 newMap!16) lt!55733) lt!55902)))

(declare-fun b!108579 () Bool)

(assert (=> b!108579 (= e!70656 (not (= lt!55733 lt!55718)))))

(assert (= (and d!30171 res!53848) b!108579))

(assert (=> d!30171 m!121911))

(assert (=> d!30171 m!121913))

(assert (=> d!30171 m!121903))

(assert (=> d!30171 m!121911))

(declare-fun m!122499 () Bool)

(assert (=> d!30171 m!122499))

(declare-fun m!122501 () Bool)

(assert (=> d!30171 m!122501))

(assert (=> b!108300 d!30171))

(declare-fun d!30173 () Bool)

(assert (=> d!30173 (= (apply!99 (+!148 lt!55725 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16))) lt!55728) (apply!99 lt!55725 lt!55728))))

(declare-fun lt!55903 () Unit!3321)

(assert (=> d!30173 (= lt!55903 (choose!673 lt!55725 lt!55715 (zeroValue!2479 newMap!16) lt!55728))))

(declare-fun e!70657 () Bool)

(assert (=> d!30173 e!70657))

(declare-fun res!53849 () Bool)

(assert (=> d!30173 (=> (not res!53849) (not e!70657))))

(assert (=> d!30173 (= res!53849 (contains!834 lt!55725 lt!55728))))

(assert (=> d!30173 (= (addApplyDifferent!75 lt!55725 lt!55715 (zeroValue!2479 newMap!16) lt!55728) lt!55903)))

(declare-fun b!108580 () Bool)

(assert (=> b!108580 (= e!70657 (not (= lt!55728 lt!55715)))))

(assert (= (and d!30173 res!53849) b!108580))

(assert (=> d!30173 m!121905))

(assert (=> d!30173 m!121907))

(assert (=> d!30173 m!121915))

(assert (=> d!30173 m!121905))

(declare-fun m!122503 () Bool)

(assert (=> d!30173 m!122503))

(declare-fun m!122505 () Bool)

(assert (=> d!30173 m!122505))

(assert (=> b!108300 d!30173))

(declare-fun d!30175 () Bool)

(declare-fun e!70658 () Bool)

(assert (=> d!30175 e!70658))

(declare-fun res!53850 () Bool)

(assert (=> d!30175 (=> (not res!53850) (not e!70658))))

(declare-fun lt!55904 () ListLongMap!1585)

(assert (=> d!30175 (= res!53850 (contains!834 lt!55904 (_1!1225 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16)))))))

(declare-fun lt!55906 () List!1625)

(assert (=> d!30175 (= lt!55904 (ListLongMap!1586 lt!55906))))

(declare-fun lt!55905 () Unit!3321)

(declare-fun lt!55907 () Unit!3321)

(assert (=> d!30175 (= lt!55905 lt!55907)))

(assert (=> d!30175 (= (getValueByKey!157 lt!55906 (_1!1225 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30175 (= lt!55907 (lemmaContainsTupThenGetReturnValue!73 lt!55906 (_1!1225 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30175 (= lt!55906 (insertStrictlySorted!76 (toList!808 lt!55725) (_1!1225 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30175 (= (+!148 lt!55725 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16))) lt!55904)))

(declare-fun b!108581 () Bool)

(declare-fun res!53851 () Bool)

(assert (=> b!108581 (=> (not res!53851) (not e!70658))))

(assert (=> b!108581 (= res!53851 (= (getValueByKey!157 (toList!808 lt!55904) (_1!1225 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16))))))))

(declare-fun b!108582 () Bool)

(assert (=> b!108582 (= e!70658 (contains!836 (toList!808 lt!55904) (tuple2!2429 lt!55715 (zeroValue!2479 newMap!16))))))

(assert (= (and d!30175 res!53850) b!108581))

(assert (= (and b!108581 res!53851) b!108582))

(declare-fun m!122507 () Bool)

(assert (=> d!30175 m!122507))

(declare-fun m!122509 () Bool)

(assert (=> d!30175 m!122509))

(declare-fun m!122511 () Bool)

(assert (=> d!30175 m!122511))

(declare-fun m!122513 () Bool)

(assert (=> d!30175 m!122513))

(declare-fun m!122515 () Bool)

(assert (=> b!108581 m!122515))

(declare-fun m!122517 () Bool)

(assert (=> b!108582 m!122517))

(assert (=> b!108300 d!30175))

(declare-fun d!30177 () Bool)

(assert (=> d!30177 (= (apply!99 (+!148 lt!55722 (tuple2!2429 lt!55731 (minValue!2479 newMap!16))) lt!55734) (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55722 (tuple2!2429 lt!55731 (minValue!2479 newMap!16)))) lt!55734)))))

(declare-fun bs!4471 () Bool)

(assert (= bs!4471 d!30177))

(declare-fun m!122519 () Bool)

(assert (=> bs!4471 m!122519))

(assert (=> bs!4471 m!122519))

(declare-fun m!122521 () Bool)

(assert (=> bs!4471 m!122521))

(assert (=> b!108300 d!30177))

(declare-fun d!30179 () Bool)

(assert (=> d!30179 (= (apply!99 (+!148 lt!55721 (tuple2!2429 lt!55718 (minValue!2479 newMap!16))) lt!55733) (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55721 (tuple2!2429 lt!55718 (minValue!2479 newMap!16)))) lt!55733)))))

(declare-fun bs!4472 () Bool)

(assert (= bs!4472 d!30179))

(declare-fun m!122523 () Bool)

(assert (=> bs!4472 m!122523))

(assert (=> bs!4472 m!122523))

(declare-fun m!122525 () Bool)

(assert (=> bs!4472 m!122525))

(assert (=> b!108300 d!30179))

(declare-fun d!30181 () Bool)

(assert (=> d!30181 (= (apply!99 lt!55725 lt!55728) (get!1344 (getValueByKey!157 (toList!808 lt!55725) lt!55728)))))

(declare-fun bs!4473 () Bool)

(assert (= bs!4473 d!30181))

(declare-fun m!122527 () Bool)

(assert (=> bs!4473 m!122527))

(assert (=> bs!4473 m!122527))

(declare-fun m!122529 () Bool)

(assert (=> bs!4473 m!122529))

(assert (=> b!108300 d!30181))

(declare-fun d!30183 () Bool)

(assert (=> d!30183 (= (apply!99 lt!55722 lt!55734) (get!1344 (getValueByKey!157 (toList!808 lt!55722) lt!55734)))))

(declare-fun bs!4474 () Bool)

(assert (= bs!4474 d!30183))

(declare-fun m!122531 () Bool)

(assert (=> bs!4474 m!122531))

(assert (=> bs!4474 m!122531))

(declare-fun m!122533 () Bool)

(assert (=> bs!4474 m!122533))

(assert (=> b!108300 d!30183))

(declare-fun d!30185 () Bool)

(declare-fun e!70659 () Bool)

(assert (=> d!30185 e!70659))

(declare-fun res!53852 () Bool)

(assert (=> d!30185 (=> (not res!53852) (not e!70659))))

(declare-fun lt!55908 () ListLongMap!1585)

(assert (=> d!30185 (= res!53852 (contains!834 lt!55908 (_1!1225 (tuple2!2429 lt!55731 (minValue!2479 newMap!16)))))))

(declare-fun lt!55910 () List!1625)

(assert (=> d!30185 (= lt!55908 (ListLongMap!1586 lt!55910))))

(declare-fun lt!55909 () Unit!3321)

(declare-fun lt!55911 () Unit!3321)

(assert (=> d!30185 (= lt!55909 lt!55911)))

(assert (=> d!30185 (= (getValueByKey!157 lt!55910 (_1!1225 (tuple2!2429 lt!55731 (minValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55731 (minValue!2479 newMap!16)))))))

(assert (=> d!30185 (= lt!55911 (lemmaContainsTupThenGetReturnValue!73 lt!55910 (_1!1225 (tuple2!2429 lt!55731 (minValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55731 (minValue!2479 newMap!16)))))))

(assert (=> d!30185 (= lt!55910 (insertStrictlySorted!76 (toList!808 lt!55722) (_1!1225 (tuple2!2429 lt!55731 (minValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55731 (minValue!2479 newMap!16)))))))

(assert (=> d!30185 (= (+!148 lt!55722 (tuple2!2429 lt!55731 (minValue!2479 newMap!16))) lt!55908)))

(declare-fun b!108583 () Bool)

(declare-fun res!53853 () Bool)

(assert (=> b!108583 (=> (not res!53853) (not e!70659))))

(assert (=> b!108583 (= res!53853 (= (getValueByKey!157 (toList!808 lt!55908) (_1!1225 (tuple2!2429 lt!55731 (minValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55731 (minValue!2479 newMap!16))))))))

(declare-fun b!108584 () Bool)

(assert (=> b!108584 (= e!70659 (contains!836 (toList!808 lt!55908) (tuple2!2429 lt!55731 (minValue!2479 newMap!16))))))

(assert (= (and d!30185 res!53852) b!108583))

(assert (= (and b!108583 res!53853) b!108584))

(declare-fun m!122535 () Bool)

(assert (=> d!30185 m!122535))

(declare-fun m!122537 () Bool)

(assert (=> d!30185 m!122537))

(declare-fun m!122539 () Bool)

(assert (=> d!30185 m!122539))

(declare-fun m!122541 () Bool)

(assert (=> d!30185 m!122541))

(declare-fun m!122543 () Bool)

(assert (=> b!108583 m!122543))

(declare-fun m!122545 () Bool)

(assert (=> b!108584 m!122545))

(assert (=> b!108300 d!30185))

(assert (=> b!108300 d!30083))

(declare-fun d!30187 () Bool)

(assert (=> d!30187 (= (apply!99 lt!55721 lt!55733) (get!1344 (getValueByKey!157 (toList!808 lt!55721) lt!55733)))))

(declare-fun bs!4475 () Bool)

(assert (= bs!4475 d!30187))

(declare-fun m!122547 () Bool)

(assert (=> bs!4475 m!122547))

(assert (=> bs!4475 m!122547))

(declare-fun m!122549 () Bool)

(assert (=> bs!4475 m!122549))

(assert (=> b!108300 d!30187))

(declare-fun d!30189 () Bool)

(assert (=> d!30189 (= (apply!99 (+!148 lt!55722 (tuple2!2429 lt!55731 (minValue!2479 newMap!16))) lt!55734) (apply!99 lt!55722 lt!55734))))

(declare-fun lt!55912 () Unit!3321)

(assert (=> d!30189 (= lt!55912 (choose!673 lt!55722 lt!55731 (minValue!2479 newMap!16) lt!55734))))

(declare-fun e!70660 () Bool)

(assert (=> d!30189 e!70660))

(declare-fun res!53854 () Bool)

(assert (=> d!30189 (=> (not res!53854) (not e!70660))))

(assert (=> d!30189 (= res!53854 (contains!834 lt!55722 lt!55734))))

(assert (=> d!30189 (= (addApplyDifferent!75 lt!55722 lt!55731 (minValue!2479 newMap!16) lt!55734) lt!55912)))

(declare-fun b!108585 () Bool)

(assert (=> b!108585 (= e!70660 (not (= lt!55734 lt!55731)))))

(assert (= (and d!30189 res!53854) b!108585))

(assert (=> d!30189 m!121917))

(assert (=> d!30189 m!121925))

(assert (=> d!30189 m!121909))

(assert (=> d!30189 m!121917))

(declare-fun m!122551 () Bool)

(assert (=> d!30189 m!122551))

(declare-fun m!122553 () Bool)

(assert (=> d!30189 m!122553))

(assert (=> b!108300 d!30189))

(declare-fun d!30191 () Bool)

(declare-fun e!70661 () Bool)

(assert (=> d!30191 e!70661))

(declare-fun res!53855 () Bool)

(assert (=> d!30191 (=> (not res!53855) (not e!70661))))

(declare-fun lt!55913 () ListLongMap!1585)

(assert (=> d!30191 (= res!53855 (contains!834 lt!55913 (_1!1225 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16)))))))

(declare-fun lt!55915 () List!1625)

(assert (=> d!30191 (= lt!55913 (ListLongMap!1586 lt!55915))))

(declare-fun lt!55914 () Unit!3321)

(declare-fun lt!55916 () Unit!3321)

(assert (=> d!30191 (= lt!55914 lt!55916)))

(assert (=> d!30191 (= (getValueByKey!157 lt!55915 (_1!1225 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30191 (= lt!55916 (lemmaContainsTupThenGetReturnValue!73 lt!55915 (_1!1225 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30191 (= lt!55915 (insertStrictlySorted!76 (toList!808 lt!55714) (_1!1225 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30191 (= (+!148 lt!55714 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16))) lt!55913)))

(declare-fun b!108586 () Bool)

(declare-fun res!53856 () Bool)

(assert (=> b!108586 (=> (not res!53856) (not e!70661))))

(assert (=> b!108586 (= res!53856 (= (getValueByKey!157 (toList!808 lt!55913) (_1!1225 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16))))))))

(declare-fun b!108587 () Bool)

(assert (=> b!108587 (= e!70661 (contains!836 (toList!808 lt!55913) (tuple2!2429 lt!55732 (zeroValue!2479 newMap!16))))))

(assert (= (and d!30191 res!53855) b!108586))

(assert (= (and b!108586 res!53856) b!108587))

(declare-fun m!122555 () Bool)

(assert (=> d!30191 m!122555))

(declare-fun m!122557 () Bool)

(assert (=> d!30191 m!122557))

(declare-fun m!122559 () Bool)

(assert (=> d!30191 m!122559))

(declare-fun m!122561 () Bool)

(assert (=> d!30191 m!122561))

(declare-fun m!122563 () Bool)

(assert (=> b!108586 m!122563))

(declare-fun m!122565 () Bool)

(assert (=> b!108587 m!122565))

(assert (=> b!108300 d!30191))

(declare-fun d!30193 () Bool)

(declare-fun lt!55917 () Bool)

(assert (=> d!30193 (= lt!55917 (select (content!111 lt!55242) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(declare-fun e!70663 () Bool)

(assert (=> d!30193 (= lt!55917 e!70663)))

(declare-fun res!53858 () Bool)

(assert (=> d!30193 (=> (not res!53858) (not e!70663))))

(assert (=> d!30193 (= res!53858 ((_ is Cons!1621) lt!55242))))

(assert (=> d!30193 (= (contains!836 lt!55242 (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))) lt!55917)))

(declare-fun b!108588 () Bool)

(declare-fun e!70662 () Bool)

(assert (=> b!108588 (= e!70663 e!70662)))

(declare-fun res!53857 () Bool)

(assert (=> b!108588 (=> res!53857 e!70662)))

(assert (=> b!108588 (= res!53857 (= (h!2219 lt!55242) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(declare-fun b!108589 () Bool)

(assert (=> b!108589 (= e!70662 (contains!836 (t!5741 lt!55242) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(assert (= (and d!30193 res!53858) b!108588))

(assert (= (and b!108588 (not res!53857)) b!108589))

(declare-fun m!122567 () Bool)

(assert (=> d!30193 m!122567))

(declare-fun m!122569 () Bool)

(assert (=> d!30193 m!122569))

(declare-fun m!122571 () Bool)

(assert (=> b!108589 m!122571))

(assert (=> b!108209 d!30193))

(declare-fun d!30195 () Bool)

(declare-fun c!19096 () Bool)

(assert (=> d!30195 (= c!19096 (and ((_ is Cons!1621) (toList!808 lt!55590)) (= (_1!1225 (h!2219 (toList!808 lt!55590))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun e!70664 () Option!163)

(assert (=> d!30195 (= (getValueByKey!157 (toList!808 lt!55590) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) e!70664)))

(declare-fun b!108591 () Bool)

(declare-fun e!70665 () Option!163)

(assert (=> b!108591 (= e!70664 e!70665)))

(declare-fun c!19097 () Bool)

(assert (=> b!108591 (= c!19097 (and ((_ is Cons!1621) (toList!808 lt!55590)) (not (= (_1!1225 (h!2219 (toList!808 lt!55590))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun b!108592 () Bool)

(assert (=> b!108592 (= e!70665 (getValueByKey!157 (t!5741 (toList!808 lt!55590)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!108590 () Bool)

(assert (=> b!108590 (= e!70664 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55590)))))))

(declare-fun b!108593 () Bool)

(assert (=> b!108593 (= e!70665 None!161)))

(assert (= (and d!30195 c!19096) b!108590))

(assert (= (and d!30195 (not c!19096)) b!108591))

(assert (= (and b!108591 c!19097) b!108592))

(assert (= (and b!108591 (not c!19097)) b!108593))

(declare-fun m!122573 () Bool)

(assert (=> b!108592 m!122573))

(assert (=> b!108124 d!30195))

(declare-fun d!30197 () Bool)

(assert (=> d!30197 (= (apply!99 lt!55645 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1344 (getValueByKey!157 (toList!808 lt!55645) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4476 () Bool)

(assert (= bs!4476 d!30197))

(assert (=> bs!4476 m!121333))

(declare-fun m!122575 () Bool)

(assert (=> bs!4476 m!122575))

(assert (=> bs!4476 m!122575))

(declare-fun m!122577 () Bool)

(assert (=> bs!4476 m!122577))

(assert (=> b!108178 d!30197))

(declare-fun d!30199 () Bool)

(declare-fun c!19098 () Bool)

(assert (=> d!30199 (= c!19098 ((_ is ValueCellFull!1002) (select (arr!2076 (_values!2589 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!70666 () V!3235)

(assert (=> d!30199 (= (get!1341 (select (arr!2076 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70666)))

(declare-fun b!108594 () Bool)

(assert (=> b!108594 (= e!70666 (get!1342 (select (arr!2076 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108595 () Bool)

(assert (=> b!108595 (= e!70666 (get!1343 (select (arr!2076 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30199 c!19098) b!108594))

(assert (= (and d!30199 (not c!19098)) b!108595))

(assert (=> b!108594 m!121725))

(assert (=> b!108594 m!121727))

(declare-fun m!122579 () Bool)

(assert (=> b!108594 m!122579))

(assert (=> b!108595 m!121725))

(assert (=> b!108595 m!121727))

(declare-fun m!122581 () Bool)

(assert (=> b!108595 m!122581))

(assert (=> b!108178 d!30199))

(declare-fun c!19099 () Bool)

(declare-fun d!30201 () Bool)

(assert (=> d!30201 (= c!19099 (and ((_ is Cons!1621) (toList!808 lt!55622)) (= (_1!1225 (h!2219 (toList!808 lt!55622))) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70667 () Option!163)

(assert (=> d!30201 (= (getValueByKey!157 (toList!808 lt!55622) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!70667)))

(declare-fun b!108597 () Bool)

(declare-fun e!70668 () Option!163)

(assert (=> b!108597 (= e!70667 e!70668)))

(declare-fun c!19100 () Bool)

(assert (=> b!108597 (= c!19100 (and ((_ is Cons!1621) (toList!808 lt!55622)) (not (= (_1!1225 (h!2219 (toList!808 lt!55622))) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!108598 () Bool)

(assert (=> b!108598 (= e!70668 (getValueByKey!157 (t!5741 (toList!808 lt!55622)) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108596 () Bool)

(assert (=> b!108596 (= e!70667 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55622)))))))

(declare-fun b!108599 () Bool)

(assert (=> b!108599 (= e!70668 None!161)))

(assert (= (and d!30201 c!19099) b!108596))

(assert (= (and d!30201 (not c!19099)) b!108597))

(assert (= (and b!108597 c!19100) b!108598))

(assert (= (and b!108597 (not c!19100)) b!108599))

(declare-fun m!122583 () Bool)

(assert (=> b!108598 m!122583))

(assert (=> b!108144 d!30201))

(declare-fun bm!11527 () Bool)

(declare-fun call!11530 () (_ BitVec 32))

(assert (=> bm!11527 (= call!11530 (arrayCountValidKeys!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108600 () Bool)

(declare-fun e!70669 () (_ BitVec 32))

(declare-fun e!70670 () (_ BitVec 32))

(assert (=> b!108600 (= e!70669 e!70670)))

(declare-fun c!19102 () Bool)

(assert (=> b!108600 (= c!19102 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!108601 () Bool)

(assert (=> b!108601 (= e!70670 (bvadd #b00000000000000000000000000000001 call!11530))))

(declare-fun d!30203 () Bool)

(declare-fun lt!55918 () (_ BitVec 32))

(assert (=> d!30203 (and (bvsge lt!55918 #b00000000000000000000000000000000) (bvsle lt!55918 (bvsub (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!30203 (= lt!55918 e!70669)))

(declare-fun c!19101 () Bool)

(assert (=> d!30203 (= c!19101 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30203 (and (bvsle #b00000000000000000000000000000000 (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30203 (= (arrayCountValidKeys!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))) lt!55918)))

(declare-fun b!108602 () Bool)

(assert (=> b!108602 (= e!70669 #b00000000000000000000000000000000)))

(declare-fun b!108603 () Bool)

(assert (=> b!108603 (= e!70670 call!11530)))

(assert (= (and d!30203 c!19101) b!108602))

(assert (= (and d!30203 (not c!19101)) b!108600))

(assert (= (and b!108600 c!19102) b!108601))

(assert (= (and b!108600 (not c!19102)) b!108603))

(assert (= (or b!108601 b!108603) bm!11527))

(declare-fun m!122585 () Bool)

(assert (=> bm!11527 m!122585))

(assert (=> b!108600 m!122153))

(assert (=> b!108600 m!122153))

(assert (=> b!108600 m!122161))

(assert (=> b!108069 d!30203))

(declare-fun d!30205 () Bool)

(declare-fun e!70672 () Bool)

(assert (=> d!30205 e!70672))

(declare-fun res!53859 () Bool)

(assert (=> d!30205 (=> res!53859 e!70672)))

(declare-fun lt!55920 () Bool)

(assert (=> d!30205 (= res!53859 (not lt!55920))))

(declare-fun lt!55921 () Bool)

(assert (=> d!30205 (= lt!55920 lt!55921)))

(declare-fun lt!55919 () Unit!3321)

(declare-fun e!70671 () Unit!3321)

(assert (=> d!30205 (= lt!55919 e!70671)))

(declare-fun c!19103 () Bool)

(assert (=> d!30205 (= c!19103 lt!55921)))

(assert (=> d!30205 (= lt!55921 (containsKey!161 (toList!808 lt!55747) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30205 (= (contains!834 lt!55747 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) lt!55920)))

(declare-fun b!108604 () Bool)

(declare-fun lt!55922 () Unit!3321)

(assert (=> b!108604 (= e!70671 lt!55922)))

(assert (=> b!108604 (= lt!55922 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55747) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108604 (isDefined!110 (getValueByKey!157 (toList!808 lt!55747) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108605 () Bool)

(declare-fun Unit!3358 () Unit!3321)

(assert (=> b!108605 (= e!70671 Unit!3358)))

(declare-fun b!108606 () Bool)

(assert (=> b!108606 (= e!70672 (isDefined!110 (getValueByKey!157 (toList!808 lt!55747) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!30205 c!19103) b!108604))

(assert (= (and d!30205 (not c!19103)) b!108605))

(assert (= (and d!30205 (not res!53859)) b!108606))

(assert (=> d!30205 m!121333))

(declare-fun m!122587 () Bool)

(assert (=> d!30205 m!122587))

(assert (=> b!108604 m!121333))

(declare-fun m!122589 () Bool)

(assert (=> b!108604 m!122589))

(assert (=> b!108604 m!121333))

(declare-fun m!122591 () Bool)

(assert (=> b!108604 m!122591))

(assert (=> b!108604 m!122591))

(declare-fun m!122593 () Bool)

(assert (=> b!108604 m!122593))

(assert (=> b!108606 m!121333))

(assert (=> b!108606 m!122591))

(assert (=> b!108606 m!122591))

(assert (=> b!108606 m!122593))

(assert (=> b!108339 d!30205))

(declare-fun d!30207 () Bool)

(declare-fun lt!55923 () Bool)

(assert (=> d!30207 (= lt!55923 (select (content!111 (toList!808 lt!55606)) (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!70674 () Bool)

(assert (=> d!30207 (= lt!55923 e!70674)))

(declare-fun res!53861 () Bool)

(assert (=> d!30207 (=> (not res!53861) (not e!70674))))

(assert (=> d!30207 (= res!53861 ((_ is Cons!1621) (toList!808 lt!55606)))))

(assert (=> d!30207 (= (contains!836 (toList!808 lt!55606) (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55923)))

(declare-fun b!108607 () Bool)

(declare-fun e!70673 () Bool)

(assert (=> b!108607 (= e!70674 e!70673)))

(declare-fun res!53860 () Bool)

(assert (=> b!108607 (=> res!53860 e!70673)))

(assert (=> b!108607 (= res!53860 (= (h!2219 (toList!808 lt!55606)) (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108608 () Bool)

(assert (=> b!108608 (= e!70673 (contains!836 (t!5741 (toList!808 lt!55606)) (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30207 res!53861) b!108607))

(assert (= (and b!108607 (not res!53860)) b!108608))

(declare-fun m!122595 () Bool)

(assert (=> d!30207 m!122595))

(declare-fun m!122597 () Bool)

(assert (=> d!30207 m!122597))

(declare-fun m!122599 () Bool)

(assert (=> b!108608 m!122599))

(assert (=> b!108134 d!30207))

(declare-fun d!30209 () Bool)

(declare-fun res!53862 () Bool)

(declare-fun e!70675 () Bool)

(assert (=> d!30209 (=> res!53862 e!70675)))

(assert (=> d!30209 (= res!53862 (and ((_ is Cons!1621) (toList!808 call!11426)) (= (_1!1225 (h!2219 (toList!808 call!11426))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30209 (= (containsKey!161 (toList!808 call!11426) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70675)))

(declare-fun b!108609 () Bool)

(declare-fun e!70676 () Bool)

(assert (=> b!108609 (= e!70675 e!70676)))

(declare-fun res!53863 () Bool)

(assert (=> b!108609 (=> (not res!53863) (not e!70676))))

(assert (=> b!108609 (= res!53863 (and (or (not ((_ is Cons!1621) (toList!808 call!11426))) (bvsle (_1!1225 (h!2219 (toList!808 call!11426))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))) ((_ is Cons!1621) (toList!808 call!11426)) (bvslt (_1!1225 (h!2219 (toList!808 call!11426))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(declare-fun b!108610 () Bool)

(assert (=> b!108610 (= e!70676 (containsKey!161 (t!5741 (toList!808 call!11426)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30209 (not res!53862)) b!108609))

(assert (= (and b!108609 res!53863) b!108610))

(assert (=> b!108610 m!120979))

(declare-fun m!122601 () Bool)

(assert (=> b!108610 m!122601))

(assert (=> d!30043 d!30209))

(declare-fun d!30211 () Bool)

(declare-fun c!19104 () Bool)

(assert (=> d!30211 (= c!19104 (and ((_ is Cons!1621) (toList!808 lt!55582)) (= (_1!1225 (h!2219 (toList!808 lt!55582))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70677 () Option!163)

(assert (=> d!30211 (= (getValueByKey!157 (toList!808 lt!55582) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!70677)))

(declare-fun b!108612 () Bool)

(declare-fun e!70678 () Option!163)

(assert (=> b!108612 (= e!70677 e!70678)))

(declare-fun c!19105 () Bool)

(assert (=> b!108612 (= c!19105 (and ((_ is Cons!1621) (toList!808 lt!55582)) (not (= (_1!1225 (h!2219 (toList!808 lt!55582))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!108613 () Bool)

(assert (=> b!108613 (= e!70678 (getValueByKey!157 (t!5741 (toList!808 lt!55582)) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108611 () Bool)

(assert (=> b!108611 (= e!70677 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55582)))))))

(declare-fun b!108614 () Bool)

(assert (=> b!108614 (= e!70678 None!161)))

(assert (= (and d!30211 c!19104) b!108611))

(assert (= (and d!30211 (not c!19104)) b!108612))

(assert (= (and b!108612 c!19105) b!108613))

(assert (= (and b!108612 (not c!19105)) b!108614))

(declare-fun m!122603 () Bool)

(assert (=> b!108613 m!122603))

(assert (=> b!108120 d!30211))

(declare-fun b!108615 () Bool)

(declare-fun e!70682 () List!1625)

(declare-fun e!70680 () List!1625)

(assert (=> b!108615 (= e!70682 e!70680)))

(declare-fun c!19108 () Bool)

(assert (=> b!108615 (= c!19108 (and ((_ is Cons!1621) (t!5741 (toList!808 (+!148 lt!55185 lt!55183)))) (= (_1!1225 (h!2219 (t!5741 (toList!808 (+!148 lt!55185 lt!55183))))) (_1!1225 lt!55182))))))

(declare-fun c!19107 () Bool)

(declare-fun call!11532 () List!1625)

(declare-fun e!70679 () List!1625)

(declare-fun bm!11528 () Bool)

(assert (=> bm!11528 (= call!11532 ($colon$colon!82 e!70679 (ite c!19107 (h!2219 (t!5741 (toList!808 (+!148 lt!55185 lt!55183)))) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182)))))))

(declare-fun c!19106 () Bool)

(assert (=> bm!11528 (= c!19106 c!19107)))

(declare-fun b!108616 () Bool)

(assert (=> b!108616 (= e!70679 (insertStrictlySorted!76 (t!5741 (t!5741 (toList!808 (+!148 lt!55185 lt!55183)))) (_1!1225 lt!55182) (_2!1225 lt!55182)))))

(declare-fun b!108617 () Bool)

(declare-fun c!19109 () Bool)

(assert (=> b!108617 (= e!70679 (ite c!19108 (t!5741 (t!5741 (toList!808 (+!148 lt!55185 lt!55183)))) (ite c!19109 (Cons!1621 (h!2219 (t!5741 (toList!808 (+!148 lt!55185 lt!55183)))) (t!5741 (t!5741 (toList!808 (+!148 lt!55185 lt!55183))))) Nil!1622)))))

(declare-fun b!108618 () Bool)

(declare-fun e!70683 () List!1625)

(declare-fun call!11531 () List!1625)

(assert (=> b!108618 (= e!70683 call!11531)))

(declare-fun bm!11529 () Bool)

(declare-fun call!11533 () List!1625)

(assert (=> bm!11529 (= call!11531 call!11533)))

(declare-fun b!108619 () Bool)

(assert (=> b!108619 (= e!70682 call!11532)))

(declare-fun d!30213 () Bool)

(declare-fun e!70681 () Bool)

(assert (=> d!30213 e!70681))

(declare-fun res!53864 () Bool)

(assert (=> d!30213 (=> (not res!53864) (not e!70681))))

(declare-fun lt!55924 () List!1625)

(assert (=> d!30213 (= res!53864 (isStrictlySorted!310 lt!55924))))

(assert (=> d!30213 (= lt!55924 e!70682)))

(assert (=> d!30213 (= c!19107 (and ((_ is Cons!1621) (t!5741 (toList!808 (+!148 lt!55185 lt!55183)))) (bvslt (_1!1225 (h!2219 (t!5741 (toList!808 (+!148 lt!55185 lt!55183))))) (_1!1225 lt!55182))))))

(assert (=> d!30213 (isStrictlySorted!310 (t!5741 (toList!808 (+!148 lt!55185 lt!55183))))))

(assert (=> d!30213 (= (insertStrictlySorted!76 (t!5741 (toList!808 (+!148 lt!55185 lt!55183))) (_1!1225 lt!55182) (_2!1225 lt!55182)) lt!55924)))

(declare-fun b!108620 () Bool)

(assert (=> b!108620 (= e!70683 call!11531)))

(declare-fun bm!11530 () Bool)

(assert (=> bm!11530 (= call!11533 call!11532)))

(declare-fun b!108621 () Bool)

(assert (=> b!108621 (= c!19109 (and ((_ is Cons!1621) (t!5741 (toList!808 (+!148 lt!55185 lt!55183)))) (bvsgt (_1!1225 (h!2219 (t!5741 (toList!808 (+!148 lt!55185 lt!55183))))) (_1!1225 lt!55182))))))

(assert (=> b!108621 (= e!70680 e!70683)))

(declare-fun b!108622 () Bool)

(assert (=> b!108622 (= e!70680 call!11533)))

(declare-fun b!108623 () Bool)

(declare-fun res!53865 () Bool)

(assert (=> b!108623 (=> (not res!53865) (not e!70681))))

(assert (=> b!108623 (= res!53865 (containsKey!161 lt!55924 (_1!1225 lt!55182)))))

(declare-fun b!108624 () Bool)

(assert (=> b!108624 (= e!70681 (contains!836 lt!55924 (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(assert (= (and d!30213 c!19107) b!108619))

(assert (= (and d!30213 (not c!19107)) b!108615))

(assert (= (and b!108615 c!19108) b!108622))

(assert (= (and b!108615 (not c!19108)) b!108621))

(assert (= (and b!108621 c!19109) b!108620))

(assert (= (and b!108621 (not c!19109)) b!108618))

(assert (= (or b!108620 b!108618) bm!11529))

(assert (= (or b!108622 bm!11529) bm!11530))

(assert (= (or b!108619 bm!11530) bm!11528))

(assert (= (and bm!11528 c!19106) b!108616))

(assert (= (and bm!11528 (not c!19106)) b!108617))

(assert (= (and d!30213 res!53864) b!108623))

(assert (= (and b!108623 res!53865) b!108624))

(declare-fun m!122605 () Bool)

(assert (=> bm!11528 m!122605))

(declare-fun m!122607 () Bool)

(assert (=> b!108623 m!122607))

(declare-fun m!122609 () Bool)

(assert (=> b!108624 m!122609))

(declare-fun m!122611 () Bool)

(assert (=> d!30213 m!122611))

(declare-fun m!122613 () Bool)

(assert (=> d!30213 m!122613))

(declare-fun m!122615 () Bool)

(assert (=> b!108616 m!122615))

(assert (=> b!108389 d!30213))

(declare-fun d!30215 () Bool)

(declare-fun e!70685 () Bool)

(assert (=> d!30215 e!70685))

(declare-fun res!53866 () Bool)

(assert (=> d!30215 (=> res!53866 e!70685)))

(declare-fun lt!55926 () Bool)

(assert (=> d!30215 (= res!53866 (not lt!55926))))

(declare-fun lt!55927 () Bool)

(assert (=> d!30215 (= lt!55926 lt!55927)))

(declare-fun lt!55925 () Unit!3321)

(declare-fun e!70684 () Unit!3321)

(assert (=> d!30215 (= lt!55925 e!70684)))

(declare-fun c!19110 () Bool)

(assert (=> d!30215 (= c!19110 lt!55927)))

(assert (=> d!30215 (= lt!55927 (containsKey!161 (toList!808 lt!55747) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30215 (= (contains!834 lt!55747 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55926)))

(declare-fun b!108625 () Bool)

(declare-fun lt!55928 () Unit!3321)

(assert (=> b!108625 (= e!70684 lt!55928)))

(assert (=> b!108625 (= lt!55928 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55747) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108625 (isDefined!110 (getValueByKey!157 (toList!808 lt!55747) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108626 () Bool)

(declare-fun Unit!3359 () Unit!3321)

(assert (=> b!108626 (= e!70684 Unit!3359)))

(declare-fun b!108627 () Bool)

(assert (=> b!108627 (= e!70685 (isDefined!110 (getValueByKey!157 (toList!808 lt!55747) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30215 c!19110) b!108625))

(assert (= (and d!30215 (not c!19110)) b!108626))

(assert (= (and d!30215 (not res!53866)) b!108627))

(declare-fun m!122617 () Bool)

(assert (=> d!30215 m!122617))

(declare-fun m!122619 () Bool)

(assert (=> b!108625 m!122619))

(declare-fun m!122621 () Bool)

(assert (=> b!108625 m!122621))

(assert (=> b!108625 m!122621))

(declare-fun m!122623 () Bool)

(assert (=> b!108625 m!122623))

(assert (=> b!108627 m!122621))

(assert (=> b!108627 m!122621))

(assert (=> b!108627 m!122623))

(assert (=> bm!11501 d!30215))

(declare-fun d!30217 () Bool)

(declare-fun c!19111 () Bool)

(assert (=> d!30217 (= c!19111 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55240))) (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55240)))) (_1!1225 lt!55183))))))

(declare-fun e!70686 () Option!163)

(assert (=> d!30217 (= (getValueByKey!157 (t!5741 (toList!808 lt!55240)) (_1!1225 lt!55183)) e!70686)))

(declare-fun b!108629 () Bool)

(declare-fun e!70687 () Option!163)

(assert (=> b!108629 (= e!70686 e!70687)))

(declare-fun c!19112 () Bool)

(assert (=> b!108629 (= c!19112 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55240))) (not (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55240)))) (_1!1225 lt!55183)))))))

(declare-fun b!108630 () Bool)

(assert (=> b!108630 (= e!70687 (getValueByKey!157 (t!5741 (t!5741 (toList!808 lt!55240))) (_1!1225 lt!55183)))))

(declare-fun b!108628 () Bool)

(assert (=> b!108628 (= e!70686 (Some!162 (_2!1225 (h!2219 (t!5741 (toList!808 lt!55240))))))))

(declare-fun b!108631 () Bool)

(assert (=> b!108631 (= e!70687 None!161)))

(assert (= (and d!30217 c!19111) b!108628))

(assert (= (and d!30217 (not c!19111)) b!108629))

(assert (= (and b!108629 c!19112) b!108630))

(assert (= (and b!108629 (not c!19112)) b!108631))

(declare-fun m!122625 () Bool)

(assert (=> b!108630 m!122625))

(assert (=> b!108000 d!30217))

(declare-fun d!30219 () Bool)

(assert (=> d!30219 (isDefined!110 (getValueByKey!157 (toList!808 call!11426) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!55929 () Unit!3321)

(assert (=> d!30219 (= lt!55929 (choose!677 (toList!808 call!11426) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70688 () Bool)

(assert (=> d!30219 e!70688))

(declare-fun res!53867 () Bool)

(assert (=> d!30219 (=> (not res!53867) (not e!70688))))

(assert (=> d!30219 (= res!53867 (isStrictlySorted!310 (toList!808 call!11426)))))

(assert (=> d!30219 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 call!11426) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55929)))

(declare-fun b!108632 () Bool)

(assert (=> b!108632 (= e!70688 (containsKey!161 (toList!808 call!11426) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30219 res!53867) b!108632))

(assert (=> d!30219 m!120979))

(assert (=> d!30219 m!122127))

(assert (=> d!30219 m!122127))

(assert (=> d!30219 m!122129))

(assert (=> d!30219 m!120979))

(declare-fun m!122627 () Bool)

(assert (=> d!30219 m!122627))

(declare-fun m!122629 () Bool)

(assert (=> d!30219 m!122629))

(assert (=> b!108632 m!120979))

(assert (=> b!108632 m!122123))

(assert (=> b!108419 d!30219))

(declare-fun d!30221 () Bool)

(assert (=> d!30221 (= (isDefined!110 (getValueByKey!157 (toList!808 call!11426) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))) (not (isEmpty!375 (getValueByKey!157 (toList!808 call!11426) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun bs!4477 () Bool)

(assert (= bs!4477 d!30221))

(assert (=> bs!4477 m!122127))

(declare-fun m!122631 () Bool)

(assert (=> bs!4477 m!122631))

(assert (=> b!108419 d!30221))

(declare-fun d!30223 () Bool)

(declare-fun c!19113 () Bool)

(assert (=> d!30223 (= c!19113 (and ((_ is Cons!1621) (toList!808 call!11426)) (= (_1!1225 (h!2219 (toList!808 call!11426))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(declare-fun e!70689 () Option!163)

(assert (=> d!30223 (= (getValueByKey!157 (toList!808 call!11426) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70689)))

(declare-fun b!108634 () Bool)

(declare-fun e!70690 () Option!163)

(assert (=> b!108634 (= e!70689 e!70690)))

(declare-fun c!19114 () Bool)

(assert (=> b!108634 (= c!19114 (and ((_ is Cons!1621) (toList!808 call!11426)) (not (= (_1!1225 (h!2219 (toList!808 call!11426))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun b!108635 () Bool)

(assert (=> b!108635 (= e!70690 (getValueByKey!157 (t!5741 (toList!808 call!11426)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108633 () Bool)

(assert (=> b!108633 (= e!70689 (Some!162 (_2!1225 (h!2219 (toList!808 call!11426)))))))

(declare-fun b!108636 () Bool)

(assert (=> b!108636 (= e!70690 None!161)))

(assert (= (and d!30223 c!19113) b!108633))

(assert (= (and d!30223 (not c!19113)) b!108634))

(assert (= (and b!108634 c!19114) b!108635))

(assert (= (and b!108634 (not c!19114)) b!108636))

(assert (=> b!108635 m!120979))

(declare-fun m!122633 () Bool)

(assert (=> b!108635 m!122633))

(assert (=> b!108419 d!30223))

(assert (=> d!30011 d!30057))

(declare-fun d!30225 () Bool)

(declare-fun e!70692 () Bool)

(assert (=> d!30225 e!70692))

(declare-fun res!53868 () Bool)

(assert (=> d!30225 (=> res!53868 e!70692)))

(declare-fun lt!55931 () Bool)

(assert (=> d!30225 (= res!53868 (not lt!55931))))

(declare-fun lt!55932 () Bool)

(assert (=> d!30225 (= lt!55931 lt!55932)))

(declare-fun lt!55930 () Unit!3321)

(declare-fun e!70691 () Unit!3321)

(assert (=> d!30225 (= lt!55930 e!70691)))

(declare-fun c!19115 () Bool)

(assert (=> d!30225 (= c!19115 lt!55932)))

(assert (=> d!30225 (= lt!55932 (containsKey!161 (toList!808 lt!55776) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30225 (= (contains!834 lt!55776 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55931)))

(declare-fun b!108637 () Bool)

(declare-fun lt!55933 () Unit!3321)

(assert (=> b!108637 (= e!70691 lt!55933)))

(assert (=> b!108637 (= lt!55933 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55776) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!108637 (isDefined!110 (getValueByKey!157 (toList!808 lt!55776) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108638 () Bool)

(declare-fun Unit!3360 () Unit!3321)

(assert (=> b!108638 (= e!70691 Unit!3360)))

(declare-fun b!108639 () Bool)

(assert (=> b!108639 (= e!70692 (isDefined!110 (getValueByKey!157 (toList!808 lt!55776) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30225 c!19115) b!108637))

(assert (= (and d!30225 (not c!19115)) b!108638))

(assert (= (and d!30225 (not res!53868)) b!108639))

(declare-fun m!122635 () Bool)

(assert (=> d!30225 m!122635))

(declare-fun m!122637 () Bool)

(assert (=> b!108637 m!122637))

(assert (=> b!108637 m!122047))

(assert (=> b!108637 m!122047))

(declare-fun m!122639 () Bool)

(assert (=> b!108637 m!122639))

(assert (=> b!108639 m!122047))

(assert (=> b!108639 m!122047))

(assert (=> b!108639 m!122639))

(assert (=> d!30017 d!30225))

(declare-fun d!30227 () Bool)

(declare-fun c!19116 () Bool)

(assert (=> d!30227 (= c!19116 (and ((_ is Cons!1621) lt!55778) (= (_1!1225 (h!2219 lt!55778)) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70693 () Option!163)

(assert (=> d!30227 (= (getValueByKey!157 lt!55778 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!70693)))

(declare-fun b!108641 () Bool)

(declare-fun e!70694 () Option!163)

(assert (=> b!108641 (= e!70693 e!70694)))

(declare-fun c!19117 () Bool)

(assert (=> b!108641 (= c!19117 (and ((_ is Cons!1621) lt!55778) (not (= (_1!1225 (h!2219 lt!55778)) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!108642 () Bool)

(assert (=> b!108642 (= e!70694 (getValueByKey!157 (t!5741 lt!55778) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108640 () Bool)

(assert (=> b!108640 (= e!70693 (Some!162 (_2!1225 (h!2219 lt!55778))))))

(declare-fun b!108643 () Bool)

(assert (=> b!108643 (= e!70694 None!161)))

(assert (= (and d!30227 c!19116) b!108640))

(assert (= (and d!30227 (not c!19116)) b!108641))

(assert (= (and b!108641 c!19117) b!108642))

(assert (= (and b!108641 (not c!19117)) b!108643))

(declare-fun m!122641 () Bool)

(assert (=> b!108642 m!122641))

(assert (=> d!30017 d!30227))

(declare-fun d!30229 () Bool)

(assert (=> d!30229 (= (getValueByKey!157 lt!55778 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55934 () Unit!3321)

(assert (=> d!30229 (= lt!55934 (choose!672 lt!55778 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!70695 () Bool)

(assert (=> d!30229 e!70695))

(declare-fun res!53869 () Bool)

(assert (=> d!30229 (=> (not res!53869) (not e!70695))))

(assert (=> d!30229 (= res!53869 (isStrictlySorted!310 lt!55778))))

(assert (=> d!30229 (= (lemmaContainsTupThenGetReturnValue!73 lt!55778 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55934)))

(declare-fun b!108644 () Bool)

(declare-fun res!53870 () Bool)

(assert (=> b!108644 (=> (not res!53870) (not e!70695))))

(assert (=> b!108644 (= res!53870 (containsKey!161 lt!55778 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108645 () Bool)

(assert (=> b!108645 (= e!70695 (contains!836 lt!55778 (tuple2!2429 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30229 res!53869) b!108644))

(assert (= (and b!108644 res!53870) b!108645))

(assert (=> d!30229 m!122041))

(declare-fun m!122643 () Bool)

(assert (=> d!30229 m!122643))

(declare-fun m!122645 () Bool)

(assert (=> d!30229 m!122645))

(declare-fun m!122647 () Bool)

(assert (=> b!108644 m!122647))

(declare-fun m!122649 () Bool)

(assert (=> b!108645 m!122649))

(assert (=> d!30017 d!30229))

(declare-fun b!108646 () Bool)

(declare-fun e!70699 () List!1625)

(declare-fun e!70697 () List!1625)

(assert (=> b!108646 (= e!70699 e!70697)))

(declare-fun c!19120 () Bool)

(assert (=> b!108646 (= c!19120 (and ((_ is Cons!1621) (toList!808 call!11375)) (= (_1!1225 (h!2219 (toList!808 call!11375))) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun call!11535 () List!1625)

(declare-fun e!70696 () List!1625)

(declare-fun c!19119 () Bool)

(declare-fun bm!11531 () Bool)

(assert (=> bm!11531 (= call!11535 ($colon$colon!82 e!70696 (ite c!19119 (h!2219 (toList!808 call!11375)) (tuple2!2429 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19118 () Bool)

(assert (=> bm!11531 (= c!19118 c!19119)))

(declare-fun b!108647 () Bool)

(assert (=> b!108647 (= e!70696 (insertStrictlySorted!76 (t!5741 (toList!808 call!11375)) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun c!19121 () Bool)

(declare-fun b!108648 () Bool)

(assert (=> b!108648 (= e!70696 (ite c!19120 (t!5741 (toList!808 call!11375)) (ite c!19121 (Cons!1621 (h!2219 (toList!808 call!11375)) (t!5741 (toList!808 call!11375))) Nil!1622)))))

(declare-fun b!108649 () Bool)

(declare-fun e!70700 () List!1625)

(declare-fun call!11534 () List!1625)

(assert (=> b!108649 (= e!70700 call!11534)))

(declare-fun bm!11532 () Bool)

(declare-fun call!11536 () List!1625)

(assert (=> bm!11532 (= call!11534 call!11536)))

(declare-fun b!108650 () Bool)

(assert (=> b!108650 (= e!70699 call!11535)))

(declare-fun d!30231 () Bool)

(declare-fun e!70698 () Bool)

(assert (=> d!30231 e!70698))

(declare-fun res!53871 () Bool)

(assert (=> d!30231 (=> (not res!53871) (not e!70698))))

(declare-fun lt!55935 () List!1625)

(assert (=> d!30231 (= res!53871 (isStrictlySorted!310 lt!55935))))

(assert (=> d!30231 (= lt!55935 e!70699)))

(assert (=> d!30231 (= c!19119 (and ((_ is Cons!1621) (toList!808 call!11375)) (bvslt (_1!1225 (h!2219 (toList!808 call!11375))) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30231 (isStrictlySorted!310 (toList!808 call!11375))))

(assert (=> d!30231 (= (insertStrictlySorted!76 (toList!808 call!11375) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55935)))

(declare-fun b!108651 () Bool)

(assert (=> b!108651 (= e!70700 call!11534)))

(declare-fun bm!11533 () Bool)

(assert (=> bm!11533 (= call!11536 call!11535)))

(declare-fun b!108652 () Bool)

(assert (=> b!108652 (= c!19121 (and ((_ is Cons!1621) (toList!808 call!11375)) (bvsgt (_1!1225 (h!2219 (toList!808 call!11375))) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> b!108652 (= e!70697 e!70700)))

(declare-fun b!108653 () Bool)

(assert (=> b!108653 (= e!70697 call!11536)))

(declare-fun b!108654 () Bool)

(declare-fun res!53872 () Bool)

(assert (=> b!108654 (=> (not res!53872) (not e!70698))))

(assert (=> b!108654 (= res!53872 (containsKey!161 lt!55935 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108655 () Bool)

(assert (=> b!108655 (= e!70698 (contains!836 lt!55935 (tuple2!2429 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30231 c!19119) b!108650))

(assert (= (and d!30231 (not c!19119)) b!108646))

(assert (= (and b!108646 c!19120) b!108653))

(assert (= (and b!108646 (not c!19120)) b!108652))

(assert (= (and b!108652 c!19121) b!108651))

(assert (= (and b!108652 (not c!19121)) b!108649))

(assert (= (or b!108651 b!108649) bm!11532))

(assert (= (or b!108653 bm!11532) bm!11533))

(assert (= (or b!108650 bm!11533) bm!11531))

(assert (= (and bm!11531 c!19118) b!108647))

(assert (= (and bm!11531 (not c!19118)) b!108648))

(assert (= (and d!30231 res!53871) b!108654))

(assert (= (and b!108654 res!53872) b!108655))

(declare-fun m!122651 () Bool)

(assert (=> bm!11531 m!122651))

(declare-fun m!122653 () Bool)

(assert (=> b!108654 m!122653))

(declare-fun m!122655 () Bool)

(assert (=> b!108655 m!122655))

(declare-fun m!122657 () Bool)

(assert (=> d!30231 m!122657))

(declare-fun m!122659 () Bool)

(assert (=> d!30231 m!122659))

(declare-fun m!122661 () Bool)

(assert (=> b!108647 m!122661))

(assert (=> d!30017 d!30231))

(declare-fun d!30233 () Bool)

(declare-fun e!70702 () Bool)

(assert (=> d!30233 e!70702))

(declare-fun res!53873 () Bool)

(assert (=> d!30233 (=> res!53873 e!70702)))

(declare-fun lt!55937 () Bool)

(assert (=> d!30233 (= res!53873 (not lt!55937))))

(declare-fun lt!55938 () Bool)

(assert (=> d!30233 (= lt!55937 lt!55938)))

(declare-fun lt!55936 () Unit!3321)

(declare-fun e!70701 () Unit!3321)

(assert (=> d!30233 (= lt!55936 e!70701)))

(declare-fun c!19122 () Bool)

(assert (=> d!30233 (= c!19122 lt!55938)))

(assert (=> d!30233 (= lt!55938 (containsKey!161 (toList!808 lt!55590) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!30233 (= (contains!834 lt!55590 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) lt!55937)))

(declare-fun b!108656 () Bool)

(declare-fun lt!55939 () Unit!3321)

(assert (=> b!108656 (= e!70701 lt!55939)))

(assert (=> b!108656 (= lt!55939 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55590) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> b!108656 (isDefined!110 (getValueByKey!157 (toList!808 lt!55590) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!108657 () Bool)

(declare-fun Unit!3361 () Unit!3321)

(assert (=> b!108657 (= e!70701 Unit!3361)))

(declare-fun b!108658 () Bool)

(assert (=> b!108658 (= e!70702 (isDefined!110 (getValueByKey!157 (toList!808 lt!55590) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (= (and d!30233 c!19122) b!108656))

(assert (= (and d!30233 (not c!19122)) b!108657))

(assert (= (and d!30233 (not res!53873)) b!108658))

(declare-fun m!122663 () Bool)

(assert (=> d!30233 m!122663))

(declare-fun m!122665 () Bool)

(assert (=> b!108656 m!122665))

(assert (=> b!108656 m!121541))

(assert (=> b!108656 m!121541))

(declare-fun m!122667 () Bool)

(assert (=> b!108656 m!122667))

(assert (=> b!108658 m!121541))

(assert (=> b!108658 m!121541))

(assert (=> b!108658 m!122667))

(assert (=> d!29901 d!30233))

(declare-fun c!19123 () Bool)

(declare-fun d!30235 () Bool)

(assert (=> d!30235 (= c!19123 (and ((_ is Cons!1621) lt!55592) (= (_1!1225 (h!2219 lt!55592)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun e!70703 () Option!163)

(assert (=> d!30235 (= (getValueByKey!157 lt!55592 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) e!70703)))

(declare-fun b!108660 () Bool)

(declare-fun e!70704 () Option!163)

(assert (=> b!108660 (= e!70703 e!70704)))

(declare-fun c!19124 () Bool)

(assert (=> b!108660 (= c!19124 (and ((_ is Cons!1621) lt!55592) (not (= (_1!1225 (h!2219 lt!55592)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun b!108661 () Bool)

(assert (=> b!108661 (= e!70704 (getValueByKey!157 (t!5741 lt!55592) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!108659 () Bool)

(assert (=> b!108659 (= e!70703 (Some!162 (_2!1225 (h!2219 lt!55592))))))

(declare-fun b!108662 () Bool)

(assert (=> b!108662 (= e!70704 None!161)))

(assert (= (and d!30235 c!19123) b!108659))

(assert (= (and d!30235 (not c!19123)) b!108660))

(assert (= (and b!108660 c!19124) b!108661))

(assert (= (and b!108660 (not c!19124)) b!108662))

(declare-fun m!122669 () Bool)

(assert (=> b!108661 m!122669))

(assert (=> d!29901 d!30235))

(declare-fun d!30237 () Bool)

(assert (=> d!30237 (= (getValueByKey!157 lt!55592 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun lt!55940 () Unit!3321)

(assert (=> d!30237 (= lt!55940 (choose!672 lt!55592 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun e!70705 () Bool)

(assert (=> d!30237 e!70705))

(declare-fun res!53874 () Bool)

(assert (=> d!30237 (=> (not res!53874) (not e!70705))))

(assert (=> d!30237 (= res!53874 (isStrictlySorted!310 lt!55592))))

(assert (=> d!30237 (= (lemmaContainsTupThenGetReturnValue!73 lt!55592 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) lt!55940)))

(declare-fun b!108663 () Bool)

(declare-fun res!53875 () Bool)

(assert (=> b!108663 (=> (not res!53875) (not e!70705))))

(assert (=> b!108663 (= res!53875 (containsKey!161 lt!55592 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!108664 () Bool)

(assert (=> b!108664 (= e!70705 (contains!836 lt!55592 (tuple2!2429 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (= (and d!30237 res!53874) b!108663))

(assert (= (and b!108663 res!53875) b!108664))

(assert (=> d!30237 m!121535))

(declare-fun m!122671 () Bool)

(assert (=> d!30237 m!122671))

(declare-fun m!122673 () Bool)

(assert (=> d!30237 m!122673))

(declare-fun m!122675 () Bool)

(assert (=> b!108663 m!122675))

(declare-fun m!122677 () Bool)

(assert (=> b!108664 m!122677))

(assert (=> d!29901 d!30237))

(declare-fun b!108665 () Bool)

(declare-fun e!70709 () List!1625)

(declare-fun e!70707 () List!1625)

(assert (=> b!108665 (= e!70709 e!70707)))

(declare-fun c!19127 () Bool)

(assert (=> b!108665 (= c!19127 (and ((_ is Cons!1621) (toList!808 lt!55185)) (= (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun e!70706 () List!1625)

(declare-fun c!19126 () Bool)

(declare-fun bm!11534 () Bool)

(declare-fun call!11538 () List!1625)

(assert (=> bm!11534 (= call!11538 ($colon$colon!82 e!70706 (ite c!19126 (h!2219 (toList!808 lt!55185)) (tuple2!2429 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun c!19125 () Bool)

(assert (=> bm!11534 (= c!19125 c!19126)))

(declare-fun b!108666 () Bool)

(assert (=> b!108666 (= e!70706 (insertStrictlySorted!76 (t!5741 (toList!808 lt!55185)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun c!19128 () Bool)

(declare-fun b!108667 () Bool)

(assert (=> b!108667 (= e!70706 (ite c!19127 (t!5741 (toList!808 lt!55185)) (ite c!19128 (Cons!1621 (h!2219 (toList!808 lt!55185)) (t!5741 (toList!808 lt!55185))) Nil!1622)))))

(declare-fun b!108668 () Bool)

(declare-fun e!70710 () List!1625)

(declare-fun call!11537 () List!1625)

(assert (=> b!108668 (= e!70710 call!11537)))

(declare-fun bm!11535 () Bool)

(declare-fun call!11539 () List!1625)

(assert (=> bm!11535 (= call!11537 call!11539)))

(declare-fun b!108669 () Bool)

(assert (=> b!108669 (= e!70709 call!11538)))

(declare-fun d!30239 () Bool)

(declare-fun e!70708 () Bool)

(assert (=> d!30239 e!70708))

(declare-fun res!53876 () Bool)

(assert (=> d!30239 (=> (not res!53876) (not e!70708))))

(declare-fun lt!55941 () List!1625)

(assert (=> d!30239 (= res!53876 (isStrictlySorted!310 lt!55941))))

(assert (=> d!30239 (= lt!55941 e!70709)))

(assert (=> d!30239 (= c!19126 (and ((_ is Cons!1621) (toList!808 lt!55185)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (=> d!30239 (isStrictlySorted!310 (toList!808 lt!55185))))

(assert (=> d!30239 (= (insertStrictlySorted!76 (toList!808 lt!55185) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) lt!55941)))

(declare-fun b!108670 () Bool)

(assert (=> b!108670 (= e!70710 call!11537)))

(declare-fun bm!11536 () Bool)

(assert (=> bm!11536 (= call!11539 call!11538)))

(declare-fun b!108671 () Bool)

(assert (=> b!108671 (= c!19128 (and ((_ is Cons!1621) (toList!808 lt!55185)) (bvsgt (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (=> b!108671 (= e!70707 e!70710)))

(declare-fun b!108672 () Bool)

(assert (=> b!108672 (= e!70707 call!11539)))

(declare-fun b!108673 () Bool)

(declare-fun res!53877 () Bool)

(assert (=> b!108673 (=> (not res!53877) (not e!70708))))

(assert (=> b!108673 (= res!53877 (containsKey!161 lt!55941 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!108674 () Bool)

(assert (=> b!108674 (= e!70708 (contains!836 lt!55941 (tuple2!2429 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (= (and d!30239 c!19126) b!108669))

(assert (= (and d!30239 (not c!19126)) b!108665))

(assert (= (and b!108665 c!19127) b!108672))

(assert (= (and b!108665 (not c!19127)) b!108671))

(assert (= (and b!108671 c!19128) b!108670))

(assert (= (and b!108671 (not c!19128)) b!108668))

(assert (= (or b!108670 b!108668) bm!11535))

(assert (= (or b!108672 bm!11535) bm!11536))

(assert (= (or b!108669 bm!11536) bm!11534))

(assert (= (and bm!11534 c!19125) b!108666))

(assert (= (and bm!11534 (not c!19125)) b!108667))

(assert (= (and d!30239 res!53876) b!108673))

(assert (= (and b!108673 res!53877) b!108674))

(declare-fun m!122679 () Bool)

(assert (=> bm!11534 m!122679))

(declare-fun m!122681 () Bool)

(assert (=> b!108673 m!122681))

(declare-fun m!122683 () Bool)

(assert (=> b!108674 m!122683))

(declare-fun m!122685 () Bool)

(assert (=> d!30239 m!122685))

(assert (=> d!30239 m!121497))

(declare-fun m!122687 () Bool)

(assert (=> b!108666 m!122687))

(assert (=> d!29901 d!30239))

(declare-fun d!30241 () Bool)

(declare-fun res!53878 () Bool)

(declare-fun e!70711 () Bool)

(assert (=> d!30241 (=> res!53878 e!70711)))

(assert (=> d!30241 (= res!53878 (or ((_ is Nil!1622) lt!55581) ((_ is Nil!1622) (t!5741 lt!55581))))))

(assert (=> d!30241 (= (isStrictlySorted!310 lt!55581) e!70711)))

(declare-fun b!108675 () Bool)

(declare-fun e!70712 () Bool)

(assert (=> b!108675 (= e!70711 e!70712)))

(declare-fun res!53879 () Bool)

(assert (=> b!108675 (=> (not res!53879) (not e!70712))))

(assert (=> b!108675 (= res!53879 (bvslt (_1!1225 (h!2219 lt!55581)) (_1!1225 (h!2219 (t!5741 lt!55581)))))))

(declare-fun b!108676 () Bool)

(assert (=> b!108676 (= e!70712 (isStrictlySorted!310 (t!5741 lt!55581)))))

(assert (= (and d!30241 (not res!53878)) b!108675))

(assert (= (and b!108675 res!53879) b!108676))

(declare-fun m!122689 () Bool)

(assert (=> b!108676 m!122689))

(assert (=> d!29889 d!30241))

(declare-fun d!30243 () Bool)

(declare-fun res!53880 () Bool)

(declare-fun e!70713 () Bool)

(assert (=> d!30243 (=> res!53880 e!70713)))

(assert (=> d!30243 (= res!53880 (or ((_ is Nil!1622) (toList!808 lt!55185)) ((_ is Nil!1622) (t!5741 (toList!808 lt!55185)))))))

(assert (=> d!30243 (= (isStrictlySorted!310 (toList!808 lt!55185)) e!70713)))

(declare-fun b!108677 () Bool)

(declare-fun e!70714 () Bool)

(assert (=> b!108677 (= e!70713 e!70714)))

(declare-fun res!53881 () Bool)

(assert (=> b!108677 (=> (not res!53881) (not e!70714))))

(assert (=> b!108677 (= res!53881 (bvslt (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 (h!2219 (t!5741 (toList!808 lt!55185))))))))

(declare-fun b!108678 () Bool)

(assert (=> b!108678 (= e!70714 (isStrictlySorted!310 (t!5741 (toList!808 lt!55185))))))

(assert (= (and d!30243 (not res!53880)) b!108677))

(assert (= (and b!108677 res!53881) b!108678))

(declare-fun m!122691 () Bool)

(assert (=> b!108678 m!122691))

(assert (=> d!29889 d!30243))

(assert (=> bm!11461 d!30015))

(declare-fun d!30245 () Bool)

(declare-fun res!53882 () Bool)

(declare-fun e!70715 () Bool)

(assert (=> d!30245 (=> res!53882 e!70715)))

(assert (=> d!30245 (= res!53882 (and ((_ is Cons!1621) lt!55792) (= (_1!1225 (h!2219 lt!55792)) (_1!1225 lt!55182))))))

(assert (=> d!30245 (= (containsKey!161 lt!55792 (_1!1225 lt!55182)) e!70715)))

(declare-fun b!108679 () Bool)

(declare-fun e!70716 () Bool)

(assert (=> b!108679 (= e!70715 e!70716)))

(declare-fun res!53883 () Bool)

(assert (=> b!108679 (=> (not res!53883) (not e!70716))))

(assert (=> b!108679 (= res!53883 (and (or (not ((_ is Cons!1621) lt!55792)) (bvsle (_1!1225 (h!2219 lt!55792)) (_1!1225 lt!55182))) ((_ is Cons!1621) lt!55792) (bvslt (_1!1225 (h!2219 lt!55792)) (_1!1225 lt!55182))))))

(declare-fun b!108680 () Bool)

(assert (=> b!108680 (= e!70716 (containsKey!161 (t!5741 lt!55792) (_1!1225 lt!55182)))))

(assert (= (and d!30245 (not res!53882)) b!108679))

(assert (= (and b!108679 res!53883) b!108680))

(declare-fun m!122693 () Bool)

(assert (=> b!108680 m!122693))

(assert (=> b!108396 d!30245))

(declare-fun d!30247 () Bool)

(declare-fun e!70718 () Bool)

(assert (=> d!30247 e!70718))

(declare-fun res!53884 () Bool)

(assert (=> d!30247 (=> res!53884 e!70718)))

(declare-fun lt!55943 () Bool)

(assert (=> d!30247 (= res!53884 (not lt!55943))))

(declare-fun lt!55944 () Bool)

(assert (=> d!30247 (= lt!55943 lt!55944)))

(declare-fun lt!55942 () Unit!3321)

(declare-fun e!70717 () Unit!3321)

(assert (=> d!30247 (= lt!55942 e!70717)))

(declare-fun c!19129 () Bool)

(assert (=> d!30247 (= c!19129 lt!55944)))

(assert (=> d!30247 (= lt!55944 (containsKey!161 (toList!808 lt!55720) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30247 (= (contains!834 lt!55720 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) lt!55943)))

(declare-fun b!108681 () Bool)

(declare-fun lt!55945 () Unit!3321)

(assert (=> b!108681 (= e!70717 lt!55945)))

(assert (=> b!108681 (= lt!55945 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55720) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108681 (isDefined!110 (getValueByKey!157 (toList!808 lt!55720) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108682 () Bool)

(declare-fun Unit!3362 () Unit!3321)

(assert (=> b!108682 (= e!70717 Unit!3362)))

(declare-fun b!108683 () Bool)

(assert (=> b!108683 (= e!70718 (isDefined!110 (getValueByKey!157 (toList!808 lt!55720) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!30247 c!19129) b!108681))

(assert (= (and d!30247 (not c!19129)) b!108682))

(assert (= (and d!30247 (not res!53884)) b!108683))

(assert (=> d!30247 m!121333))

(declare-fun m!122695 () Bool)

(assert (=> d!30247 m!122695))

(assert (=> b!108681 m!121333))

(declare-fun m!122697 () Bool)

(assert (=> b!108681 m!122697))

(assert (=> b!108681 m!121333))

(declare-fun m!122699 () Bool)

(assert (=> b!108681 m!122699))

(assert (=> b!108681 m!122699))

(declare-fun m!122701 () Bool)

(assert (=> b!108681 m!122701))

(assert (=> b!108683 m!121333))

(assert (=> b!108683 m!122699))

(assert (=> b!108683 m!122699))

(assert (=> b!108683 m!122701))

(assert (=> b!108313 d!30247))

(declare-fun d!30249 () Bool)

(declare-fun e!70720 () Bool)

(assert (=> d!30249 e!70720))

(declare-fun res!53885 () Bool)

(assert (=> d!30249 (=> res!53885 e!70720)))

(declare-fun lt!55947 () Bool)

(assert (=> d!30249 (= res!53885 (not lt!55947))))

(declare-fun lt!55948 () Bool)

(assert (=> d!30249 (= lt!55947 lt!55948)))

(declare-fun lt!55946 () Unit!3321)

(declare-fun e!70719 () Unit!3321)

(assert (=> d!30249 (= lt!55946 e!70719)))

(declare-fun c!19130 () Bool)

(assert (=> d!30249 (= c!19130 lt!55948)))

(assert (=> d!30249 (= lt!55948 (containsKey!161 (toList!808 lt!55622) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30249 (= (contains!834 lt!55622 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55947)))

(declare-fun b!108684 () Bool)

(declare-fun lt!55949 () Unit!3321)

(assert (=> b!108684 (= e!70719 lt!55949)))

(assert (=> b!108684 (= lt!55949 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55622) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!108684 (isDefined!110 (getValueByKey!157 (toList!808 lt!55622) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108685 () Bool)

(declare-fun Unit!3363 () Unit!3321)

(assert (=> b!108685 (= e!70719 Unit!3363)))

(declare-fun b!108686 () Bool)

(assert (=> b!108686 (= e!70720 (isDefined!110 (getValueByKey!157 (toList!808 lt!55622) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30249 c!19130) b!108684))

(assert (= (and d!30249 (not c!19130)) b!108685))

(assert (= (and d!30249 (not res!53885)) b!108686))

(declare-fun m!122703 () Bool)

(assert (=> d!30249 m!122703))

(declare-fun m!122705 () Bool)

(assert (=> b!108684 m!122705))

(assert (=> b!108684 m!121645))

(assert (=> b!108684 m!121645))

(declare-fun m!122707 () Bool)

(assert (=> b!108684 m!122707))

(assert (=> b!108686 m!121645))

(assert (=> b!108686 m!121645))

(assert (=> b!108686 m!122707))

(assert (=> d!29931 d!30249))

(declare-fun d!30251 () Bool)

(declare-fun c!19131 () Bool)

(assert (=> d!30251 (= c!19131 (and ((_ is Cons!1621) lt!55624) (= (_1!1225 (h!2219 lt!55624)) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70721 () Option!163)

(assert (=> d!30251 (= (getValueByKey!157 lt!55624 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!70721)))

(declare-fun b!108688 () Bool)

(declare-fun e!70722 () Option!163)

(assert (=> b!108688 (= e!70721 e!70722)))

(declare-fun c!19132 () Bool)

(assert (=> b!108688 (= c!19132 (and ((_ is Cons!1621) lt!55624) (not (= (_1!1225 (h!2219 lt!55624)) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!108689 () Bool)

(assert (=> b!108689 (= e!70722 (getValueByKey!157 (t!5741 lt!55624) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108687 () Bool)

(assert (=> b!108687 (= e!70721 (Some!162 (_2!1225 (h!2219 lt!55624))))))

(declare-fun b!108690 () Bool)

(assert (=> b!108690 (= e!70722 None!161)))

(assert (= (and d!30251 c!19131) b!108687))

(assert (= (and d!30251 (not c!19131)) b!108688))

(assert (= (and b!108688 c!19132) b!108689))

(assert (= (and b!108688 (not c!19132)) b!108690))

(declare-fun m!122709 () Bool)

(assert (=> b!108689 m!122709))

(assert (=> d!29931 d!30251))

(declare-fun d!30253 () Bool)

(assert (=> d!30253 (= (getValueByKey!157 lt!55624 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55950 () Unit!3321)

(assert (=> d!30253 (= lt!55950 (choose!672 lt!55624 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!70723 () Bool)

(assert (=> d!30253 e!70723))

(declare-fun res!53886 () Bool)

(assert (=> d!30253 (=> (not res!53886) (not e!70723))))

(assert (=> d!30253 (= res!53886 (isStrictlySorted!310 lt!55624))))

(assert (=> d!30253 (= (lemmaContainsTupThenGetReturnValue!73 lt!55624 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55950)))

(declare-fun b!108691 () Bool)

(declare-fun res!53887 () Bool)

(assert (=> b!108691 (=> (not res!53887) (not e!70723))))

(assert (=> b!108691 (= res!53887 (containsKey!161 lt!55624 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108692 () Bool)

(assert (=> b!108692 (= e!70723 (contains!836 lt!55624 (tuple2!2429 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30253 res!53886) b!108691))

(assert (= (and b!108691 res!53887) b!108692))

(assert (=> d!30253 m!121639))

(declare-fun m!122711 () Bool)

(assert (=> d!30253 m!122711))

(declare-fun m!122713 () Bool)

(assert (=> d!30253 m!122713))

(declare-fun m!122715 () Bool)

(assert (=> b!108691 m!122715))

(declare-fun m!122717 () Bool)

(assert (=> b!108692 m!122717))

(assert (=> d!29931 d!30253))

(declare-fun b!108693 () Bool)

(declare-fun e!70727 () List!1625)

(declare-fun e!70725 () List!1625)

(assert (=> b!108693 (= e!70727 e!70725)))

(declare-fun c!19135 () Bool)

(assert (=> b!108693 (= c!19135 (and ((_ is Cons!1621) (toList!808 lt!55328)) (= (_1!1225 (h!2219 (toList!808 lt!55328))) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun call!11541 () List!1625)

(declare-fun bm!11537 () Bool)

(declare-fun c!19134 () Bool)

(declare-fun e!70724 () List!1625)

(assert (=> bm!11537 (= call!11541 ($colon$colon!82 e!70724 (ite c!19134 (h!2219 (toList!808 lt!55328)) (tuple2!2429 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19133 () Bool)

(assert (=> bm!11537 (= c!19133 c!19134)))

(declare-fun b!108694 () Bool)

(assert (=> b!108694 (= e!70724 (insertStrictlySorted!76 (t!5741 (toList!808 lt!55328)) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108695 () Bool)

(declare-fun c!19136 () Bool)

(assert (=> b!108695 (= e!70724 (ite c!19135 (t!5741 (toList!808 lt!55328)) (ite c!19136 (Cons!1621 (h!2219 (toList!808 lt!55328)) (t!5741 (toList!808 lt!55328))) Nil!1622)))))

(declare-fun b!108696 () Bool)

(declare-fun e!70728 () List!1625)

(declare-fun call!11540 () List!1625)

(assert (=> b!108696 (= e!70728 call!11540)))

(declare-fun bm!11538 () Bool)

(declare-fun call!11542 () List!1625)

(assert (=> bm!11538 (= call!11540 call!11542)))

(declare-fun b!108697 () Bool)

(assert (=> b!108697 (= e!70727 call!11541)))

(declare-fun d!30255 () Bool)

(declare-fun e!70726 () Bool)

(assert (=> d!30255 e!70726))

(declare-fun res!53888 () Bool)

(assert (=> d!30255 (=> (not res!53888) (not e!70726))))

(declare-fun lt!55951 () List!1625)

(assert (=> d!30255 (= res!53888 (isStrictlySorted!310 lt!55951))))

(assert (=> d!30255 (= lt!55951 e!70727)))

(assert (=> d!30255 (= c!19134 (and ((_ is Cons!1621) (toList!808 lt!55328)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55328))) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30255 (isStrictlySorted!310 (toList!808 lt!55328))))

(assert (=> d!30255 (= (insertStrictlySorted!76 (toList!808 lt!55328) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55951)))

(declare-fun b!108698 () Bool)

(assert (=> b!108698 (= e!70728 call!11540)))

(declare-fun bm!11539 () Bool)

(assert (=> bm!11539 (= call!11542 call!11541)))

(declare-fun b!108699 () Bool)

(assert (=> b!108699 (= c!19136 (and ((_ is Cons!1621) (toList!808 lt!55328)) (bvsgt (_1!1225 (h!2219 (toList!808 lt!55328))) (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> b!108699 (= e!70725 e!70728)))

(declare-fun b!108700 () Bool)

(assert (=> b!108700 (= e!70725 call!11542)))

(declare-fun b!108701 () Bool)

(declare-fun res!53889 () Bool)

(assert (=> b!108701 (=> (not res!53889) (not e!70726))))

(assert (=> b!108701 (= res!53889 (containsKey!161 lt!55951 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108702 () Bool)

(assert (=> b!108702 (= e!70726 (contains!836 lt!55951 (tuple2!2429 (_1!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30255 c!19134) b!108697))

(assert (= (and d!30255 (not c!19134)) b!108693))

(assert (= (and b!108693 c!19135) b!108700))

(assert (= (and b!108693 (not c!19135)) b!108699))

(assert (= (and b!108699 c!19136) b!108698))

(assert (= (and b!108699 (not c!19136)) b!108696))

(assert (= (or b!108698 b!108696) bm!11538))

(assert (= (or b!108700 bm!11538) bm!11539))

(assert (= (or b!108697 bm!11539) bm!11537))

(assert (= (and bm!11537 c!19133) b!108694))

(assert (= (and bm!11537 (not c!19133)) b!108695))

(assert (= (and d!30255 res!53888) b!108701))

(assert (= (and b!108701 res!53889) b!108702))

(declare-fun m!122719 () Bool)

(assert (=> bm!11537 m!122719))

(declare-fun m!122721 () Bool)

(assert (=> b!108701 m!122721))

(declare-fun m!122723 () Bool)

(assert (=> b!108702 m!122723))

(declare-fun m!122725 () Bool)

(assert (=> d!30255 m!122725))

(declare-fun m!122727 () Bool)

(assert (=> d!30255 m!122727))

(declare-fun m!122729 () Bool)

(assert (=> b!108694 m!122729))

(assert (=> d!29931 d!30255))

(declare-fun d!30257 () Bool)

(assert (=> d!30257 (= (isDefined!110 (getValueByKey!157 (toList!808 lt!55240) (_1!1225 lt!55183))) (not (isEmpty!375 (getValueByKey!157 (toList!808 lt!55240) (_1!1225 lt!55183)))))))

(declare-fun bs!4478 () Bool)

(assert (= bs!4478 d!30257))

(assert (=> bs!4478 m!121109))

(declare-fun m!122731 () Bool)

(assert (=> bs!4478 m!122731))

(assert (=> b!108203 d!30257))

(assert (=> b!108203 d!29859))

(assert (=> bm!11503 d!30111))

(declare-fun b!108703 () Bool)

(declare-fun e!70731 () Bool)

(declare-fun call!11543 () Bool)

(assert (=> b!108703 (= e!70731 call!11543)))

(declare-fun b!108704 () Bool)

(declare-fun e!70732 () Bool)

(assert (=> b!108704 (= e!70732 (contains!837 (ite c!19018 (Cons!1622 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) Nil!1623) Nil!1623) (select (arr!2075 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!11540 () Bool)

(declare-fun c!19137 () Bool)

(assert (=> bm!11540 (= call!11543 (arrayNoDuplicates!0 (_keys!4316 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19137 (Cons!1622 (select (arr!2075 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!19018 (Cons!1622 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) Nil!1623) Nil!1623)) (ite c!19018 (Cons!1622 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) Nil!1623) Nil!1623))))))

(declare-fun b!108706 () Bool)

(assert (=> b!108706 (= e!70731 call!11543)))

(declare-fun b!108707 () Bool)

(declare-fun e!70729 () Bool)

(declare-fun e!70730 () Bool)

(assert (=> b!108707 (= e!70729 e!70730)))

(declare-fun res!53892 () Bool)

(assert (=> b!108707 (=> (not res!53892) (not e!70730))))

(assert (=> b!108707 (= res!53892 (not e!70732))))

(declare-fun res!53890 () Bool)

(assert (=> b!108707 (=> (not res!53890) (not e!70732))))

(assert (=> b!108707 (= res!53890 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!30259 () Bool)

(declare-fun res!53891 () Bool)

(assert (=> d!30259 (=> res!53891 e!70729)))

(assert (=> d!30259 (= res!53891 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2331 (_keys!4316 newMap!16))))))

(assert (=> d!30259 (= (arrayNoDuplicates!0 (_keys!4316 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19018 (Cons!1622 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) Nil!1623) Nil!1623)) e!70729)))

(declare-fun b!108705 () Bool)

(assert (=> b!108705 (= e!70730 e!70731)))

(assert (=> b!108705 (= c!19137 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!30259 (not res!53891)) b!108707))

(assert (= (and b!108707 res!53890) b!108704))

(assert (= (and b!108707 res!53892) b!108705))

(assert (= (and b!108705 c!19137) b!108706))

(assert (= (and b!108705 (not c!19137)) b!108703))

(assert (= (or b!108706 b!108703) bm!11540))

(assert (=> b!108704 m!122467))

(assert (=> b!108704 m!122467))

(declare-fun m!122733 () Bool)

(assert (=> b!108704 m!122733))

(assert (=> bm!11540 m!122467))

(declare-fun m!122735 () Bool)

(assert (=> bm!11540 m!122735))

(assert (=> b!108707 m!122467))

(assert (=> b!108707 m!122467))

(declare-fun m!122737 () Bool)

(assert (=> b!108707 m!122737))

(assert (=> b!108705 m!122467))

(assert (=> b!108705 m!122467))

(assert (=> b!108705 m!122737))

(assert (=> bm!11493 d!30259))

(assert (=> d!30007 d!29839))

(declare-fun d!30261 () Bool)

(declare-fun lt!55952 () Bool)

(assert (=> d!30261 (= lt!55952 (select (content!111 lt!55238) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(declare-fun e!70734 () Bool)

(assert (=> d!30261 (= lt!55952 e!70734)))

(declare-fun res!53894 () Bool)

(assert (=> d!30261 (=> (not res!53894) (not e!70734))))

(assert (=> d!30261 (= res!53894 ((_ is Cons!1621) lt!55238))))

(assert (=> d!30261 (= (contains!836 lt!55238 (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))) lt!55952)))

(declare-fun b!108708 () Bool)

(declare-fun e!70733 () Bool)

(assert (=> b!108708 (= e!70734 e!70733)))

(declare-fun res!53893 () Bool)

(assert (=> b!108708 (=> res!53893 e!70733)))

(assert (=> b!108708 (= res!53893 (= (h!2219 lt!55238) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(declare-fun b!108709 () Bool)

(assert (=> b!108709 (= e!70733 (contains!836 (t!5741 lt!55238) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(assert (= (and d!30261 res!53894) b!108708))

(assert (= (and b!108708 (not res!53893)) b!108709))

(declare-fun m!122739 () Bool)

(assert (=> d!30261 m!122739))

(declare-fun m!122741 () Bool)

(assert (=> d!30261 m!122741))

(declare-fun m!122743 () Bool)

(assert (=> b!108709 m!122743))

(assert (=> b!108408 d!30261))

(declare-fun d!30263 () Bool)

(declare-fun e!70736 () Bool)

(assert (=> d!30263 e!70736))

(declare-fun res!53895 () Bool)

(assert (=> d!30263 (=> res!53895 e!70736)))

(declare-fun lt!55954 () Bool)

(assert (=> d!30263 (= res!53895 (not lt!55954))))

(declare-fun lt!55955 () Bool)

(assert (=> d!30263 (= lt!55954 lt!55955)))

(declare-fun lt!55953 () Unit!3321)

(declare-fun e!70735 () Unit!3321)

(assert (=> d!30263 (= lt!55953 e!70735)))

(declare-fun c!19138 () Bool)

(assert (=> d!30263 (= c!19138 lt!55955)))

(assert (=> d!30263 (= lt!55955 (containsKey!161 (toList!808 lt!55582) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30263 (= (contains!834 lt!55582 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55954)))

(declare-fun b!108710 () Bool)

(declare-fun lt!55956 () Unit!3321)

(assert (=> b!108710 (= e!70735 lt!55956)))

(assert (=> b!108710 (= lt!55956 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55582) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!108710 (isDefined!110 (getValueByKey!157 (toList!808 lt!55582) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108711 () Bool)

(declare-fun Unit!3364 () Unit!3321)

(assert (=> b!108711 (= e!70735 Unit!3364)))

(declare-fun b!108712 () Bool)

(assert (=> b!108712 (= e!70736 (isDefined!110 (getValueByKey!157 (toList!808 lt!55582) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30263 c!19138) b!108710))

(assert (= (and d!30263 (not c!19138)) b!108711))

(assert (= (and d!30263 (not res!53895)) b!108712))

(declare-fun m!122745 () Bool)

(assert (=> d!30263 m!122745))

(declare-fun m!122747 () Bool)

(assert (=> b!108710 m!122747))

(assert (=> b!108710 m!121517))

(assert (=> b!108710 m!121517))

(declare-fun m!122749 () Bool)

(assert (=> b!108710 m!122749))

(assert (=> b!108712 m!121517))

(assert (=> b!108712 m!121517))

(assert (=> b!108712 m!122749))

(assert (=> d!29895 d!30263))

(declare-fun d!30265 () Bool)

(declare-fun c!19139 () Bool)

(assert (=> d!30265 (= c!19139 (and ((_ is Cons!1621) lt!55584) (= (_1!1225 (h!2219 lt!55584)) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70737 () Option!163)

(assert (=> d!30265 (= (getValueByKey!157 lt!55584 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!70737)))

(declare-fun b!108714 () Bool)

(declare-fun e!70738 () Option!163)

(assert (=> b!108714 (= e!70737 e!70738)))

(declare-fun c!19140 () Bool)

(assert (=> b!108714 (= c!19140 (and ((_ is Cons!1621) lt!55584) (not (= (_1!1225 (h!2219 lt!55584)) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!108715 () Bool)

(assert (=> b!108715 (= e!70738 (getValueByKey!157 (t!5741 lt!55584) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108713 () Bool)

(assert (=> b!108713 (= e!70737 (Some!162 (_2!1225 (h!2219 lt!55584))))))

(declare-fun b!108716 () Bool)

(assert (=> b!108716 (= e!70738 None!161)))

(assert (= (and d!30265 c!19139) b!108713))

(assert (= (and d!30265 (not c!19139)) b!108714))

(assert (= (and b!108714 c!19140) b!108715))

(assert (= (and b!108714 (not c!19140)) b!108716))

(declare-fun m!122751 () Bool)

(assert (=> b!108715 m!122751))

(assert (=> d!29895 d!30265))

(declare-fun d!30267 () Bool)

(assert (=> d!30267 (= (getValueByKey!157 lt!55584 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55957 () Unit!3321)

(assert (=> d!30267 (= lt!55957 (choose!672 lt!55584 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!70739 () Bool)

(assert (=> d!30267 e!70739))

(declare-fun res!53896 () Bool)

(assert (=> d!30267 (=> (not res!53896) (not e!70739))))

(assert (=> d!30267 (= res!53896 (isStrictlySorted!310 lt!55584))))

(assert (=> d!30267 (= (lemmaContainsTupThenGetReturnValue!73 lt!55584 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55957)))

(declare-fun b!108717 () Bool)

(declare-fun res!53897 () Bool)

(assert (=> b!108717 (=> (not res!53897) (not e!70739))))

(assert (=> b!108717 (= res!53897 (containsKey!161 lt!55584 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108718 () Bool)

(assert (=> b!108718 (= e!70739 (contains!836 lt!55584 (tuple2!2429 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30267 res!53896) b!108717))

(assert (= (and b!108717 res!53897) b!108718))

(assert (=> d!30267 m!121511))

(declare-fun m!122753 () Bool)

(assert (=> d!30267 m!122753))

(declare-fun m!122755 () Bool)

(assert (=> d!30267 m!122755))

(declare-fun m!122757 () Bool)

(assert (=> b!108717 m!122757))

(declare-fun m!122759 () Bool)

(assert (=> b!108718 m!122759))

(assert (=> d!29895 d!30267))

(declare-fun b!108719 () Bool)

(declare-fun e!70743 () List!1625)

(declare-fun e!70741 () List!1625)

(assert (=> b!108719 (= e!70743 e!70741)))

(declare-fun c!19143 () Bool)

(assert (=> b!108719 (= c!19143 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun c!19142 () Bool)

(declare-fun e!70740 () List!1625)

(declare-fun bm!11541 () Bool)

(declare-fun call!11545 () List!1625)

(assert (=> bm!11541 (= call!11545 ($colon$colon!82 e!70740 (ite c!19142 (h!2219 (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) (tuple2!2429 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19141 () Bool)

(assert (=> bm!11541 (= c!19141 c!19142)))

(declare-fun b!108720 () Bool)

(assert (=> b!108720 (= e!70740 (insertStrictlySorted!76 (t!5741 (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun c!19144 () Bool)

(declare-fun b!108721 () Bool)

(assert (=> b!108721 (= e!70740 (ite c!19143 (t!5741 (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) (ite c!19144 (Cons!1621 (h!2219 (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) (t!5741 (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))) Nil!1622)))))

(declare-fun b!108722 () Bool)

(declare-fun e!70744 () List!1625)

(declare-fun call!11544 () List!1625)

(assert (=> b!108722 (= e!70744 call!11544)))

(declare-fun bm!11542 () Bool)

(declare-fun call!11546 () List!1625)

(assert (=> bm!11542 (= call!11544 call!11546)))

(declare-fun b!108723 () Bool)

(assert (=> b!108723 (= e!70743 call!11545)))

(declare-fun d!30269 () Bool)

(declare-fun e!70742 () Bool)

(assert (=> d!30269 e!70742))

(declare-fun res!53898 () Bool)

(assert (=> d!30269 (=> (not res!53898) (not e!70742))))

(declare-fun lt!55958 () List!1625)

(assert (=> d!30269 (= res!53898 (isStrictlySorted!310 lt!55958))))

(assert (=> d!30269 (= lt!55958 e!70743)))

(assert (=> d!30269 (= c!19142 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) (bvslt (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30269 (isStrictlySorted!310 (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!30269 (= (insertStrictlySorted!76 (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55958)))

(declare-fun b!108724 () Bool)

(assert (=> b!108724 (= e!70744 call!11544)))

(declare-fun bm!11543 () Bool)

(assert (=> bm!11543 (= call!11546 call!11545)))

(declare-fun b!108725 () Bool)

(assert (=> b!108725 (= c!19144 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))) (bvsgt (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> b!108725 (= e!70741 e!70744)))

(declare-fun b!108726 () Bool)

(assert (=> b!108726 (= e!70741 call!11546)))

(declare-fun b!108727 () Bool)

(declare-fun res!53899 () Bool)

(assert (=> b!108727 (=> (not res!53899) (not e!70742))))

(assert (=> b!108727 (= res!53899 (containsKey!161 lt!55958 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108728 () Bool)

(assert (=> b!108728 (= e!70742 (contains!836 lt!55958 (tuple2!2429 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30269 c!19142) b!108723))

(assert (= (and d!30269 (not c!19142)) b!108719))

(assert (= (and b!108719 c!19143) b!108726))

(assert (= (and b!108719 (not c!19143)) b!108725))

(assert (= (and b!108725 c!19144) b!108724))

(assert (= (and b!108725 (not c!19144)) b!108722))

(assert (= (or b!108724 b!108722) bm!11542))

(assert (= (or b!108726 bm!11542) bm!11543))

(assert (= (or b!108723 bm!11543) bm!11541))

(assert (= (and bm!11541 c!19141) b!108720))

(assert (= (and bm!11541 (not c!19141)) b!108721))

(assert (= (and d!30269 res!53898) b!108727))

(assert (= (and b!108727 res!53899) b!108728))

(declare-fun m!122761 () Bool)

(assert (=> bm!11541 m!122761))

(declare-fun m!122763 () Bool)

(assert (=> b!108727 m!122763))

(declare-fun m!122765 () Bool)

(assert (=> b!108728 m!122765))

(declare-fun m!122767 () Bool)

(assert (=> d!30269 m!122767))

(declare-fun m!122769 () Bool)

(assert (=> d!30269 m!122769))

(declare-fun m!122771 () Bool)

(assert (=> b!108720 m!122771))

(assert (=> d!29895 d!30269))

(declare-fun d!30271 () Bool)

(declare-fun res!53900 () Bool)

(declare-fun e!70745 () Bool)

(assert (=> d!30271 (=> res!53900 e!70745)))

(assert (=> d!30271 (= res!53900 (and ((_ is Cons!1621) lt!55242) (= (_1!1225 (h!2219 lt!55242)) (_1!1225 lt!55183))))))

(assert (=> d!30271 (= (containsKey!161 lt!55242 (_1!1225 lt!55183)) e!70745)))

(declare-fun b!108729 () Bool)

(declare-fun e!70746 () Bool)

(assert (=> b!108729 (= e!70745 e!70746)))

(declare-fun res!53901 () Bool)

(assert (=> b!108729 (=> (not res!53901) (not e!70746))))

(assert (=> b!108729 (= res!53901 (and (or (not ((_ is Cons!1621) lt!55242)) (bvsle (_1!1225 (h!2219 lt!55242)) (_1!1225 lt!55183))) ((_ is Cons!1621) lt!55242) (bvslt (_1!1225 (h!2219 lt!55242)) (_1!1225 lt!55183))))))

(declare-fun b!108730 () Bool)

(assert (=> b!108730 (= e!70746 (containsKey!161 (t!5741 lt!55242) (_1!1225 lt!55183)))))

(assert (= (and d!30271 (not res!53900)) b!108729))

(assert (= (and b!108729 res!53901) b!108730))

(declare-fun m!122773 () Bool)

(assert (=> b!108730 m!122773))

(assert (=> b!108208 d!30271))

(declare-fun d!30273 () Bool)

(declare-fun e!70748 () Bool)

(assert (=> d!30273 e!70748))

(declare-fun res!53902 () Bool)

(assert (=> d!30273 (=> res!53902 e!70748)))

(declare-fun lt!55960 () Bool)

(assert (=> d!30273 (= res!53902 (not lt!55960))))

(declare-fun lt!55961 () Bool)

(assert (=> d!30273 (= lt!55960 lt!55961)))

(declare-fun lt!55959 () Unit!3321)

(declare-fun e!70747 () Unit!3321)

(assert (=> d!30273 (= lt!55959 e!70747)))

(declare-fun c!19145 () Bool)

(assert (=> d!30273 (= c!19145 lt!55961)))

(assert (=> d!30273 (= lt!55961 (containsKey!161 (toList!808 lt!55720) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30273 (= (contains!834 lt!55720 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55960)))

(declare-fun b!108731 () Bool)

(declare-fun lt!55962 () Unit!3321)

(assert (=> b!108731 (= e!70747 lt!55962)))

(assert (=> b!108731 (= lt!55962 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55720) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108731 (isDefined!110 (getValueByKey!157 (toList!808 lt!55720) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108732 () Bool)

(declare-fun Unit!3365 () Unit!3321)

(assert (=> b!108732 (= e!70747 Unit!3365)))

(declare-fun b!108733 () Bool)

(assert (=> b!108733 (= e!70748 (isDefined!110 (getValueByKey!157 (toList!808 lt!55720) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30273 c!19145) b!108731))

(assert (= (and d!30273 (not c!19145)) b!108732))

(assert (= (and d!30273 (not res!53902)) b!108733))

(declare-fun m!122775 () Bool)

(assert (=> d!30273 m!122775))

(declare-fun m!122777 () Bool)

(assert (=> b!108731 m!122777))

(declare-fun m!122779 () Bool)

(assert (=> b!108731 m!122779))

(assert (=> b!108731 m!122779))

(declare-fun m!122781 () Bool)

(assert (=> b!108731 m!122781))

(assert (=> b!108733 m!122779))

(assert (=> b!108733 m!122779))

(assert (=> b!108733 m!122781))

(assert (=> bm!11494 d!30273))

(declare-fun d!30275 () Bool)

(assert (=> d!30275 (= (isEmpty!375 (getValueByKey!157 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))) (not ((_ is Some!162) (getValueByKey!157 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(assert (=> d!29943 d!30275))

(declare-fun d!30277 () Bool)

(declare-fun c!19146 () Bool)

(assert (=> d!30277 (= c!19146 (and ((_ is Cons!1621) (toList!808 lt!55776)) (= (_1!1225 (h!2219 (toList!808 lt!55776))) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70749 () Option!163)

(assert (=> d!30277 (= (getValueByKey!157 (toList!808 lt!55776) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!70749)))

(declare-fun b!108735 () Bool)

(declare-fun e!70750 () Option!163)

(assert (=> b!108735 (= e!70749 e!70750)))

(declare-fun c!19147 () Bool)

(assert (=> b!108735 (= c!19147 (and ((_ is Cons!1621) (toList!808 lt!55776)) (not (= (_1!1225 (h!2219 (toList!808 lt!55776))) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!108736 () Bool)

(assert (=> b!108736 (= e!70750 (getValueByKey!157 (t!5741 (toList!808 lt!55776)) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108734 () Bool)

(assert (=> b!108734 (= e!70749 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55776)))))))

(declare-fun b!108737 () Bool)

(assert (=> b!108737 (= e!70750 None!161)))

(assert (= (and d!30277 c!19146) b!108734))

(assert (= (and d!30277 (not c!19146)) b!108735))

(assert (= (and b!108735 c!19147) b!108736))

(assert (= (and b!108735 (not c!19147)) b!108737))

(declare-fun m!122783 () Bool)

(assert (=> b!108736 m!122783))

(assert (=> b!108368 d!30277))

(declare-fun d!30279 () Bool)

(assert (=> d!30279 (= (apply!99 lt!55720 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!157 (toList!808 lt!55720) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4479 () Bool)

(assert (= bs!4479 d!30279))

(assert (=> bs!4479 m!122779))

(assert (=> bs!4479 m!122779))

(declare-fun m!122785 () Bool)

(assert (=> bs!4479 m!122785))

(assert (=> b!108318 d!30279))

(declare-fun d!30281 () Bool)

(declare-fun res!53903 () Bool)

(declare-fun e!70751 () Bool)

(assert (=> d!30281 (=> res!53903 e!70751)))

(assert (=> d!30281 (= res!53903 (and ((_ is Cons!1621) (toList!808 lt!55326)) (= (_1!1225 (h!2219 (toList!808 lt!55326))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30281 (= (containsKey!161 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000) e!70751)))

(declare-fun b!108738 () Bool)

(declare-fun e!70752 () Bool)

(assert (=> b!108738 (= e!70751 e!70752)))

(declare-fun res!53904 () Bool)

(assert (=> b!108738 (=> (not res!53904) (not e!70752))))

(assert (=> b!108738 (= res!53904 (and (or (not ((_ is Cons!1621) (toList!808 lt!55326))) (bvsle (_1!1225 (h!2219 (toList!808 lt!55326))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1621) (toList!808 lt!55326)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55326))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108739 () Bool)

(assert (=> b!108739 (= e!70752 (containsKey!161 (t!5741 (toList!808 lt!55326)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30281 (not res!53903)) b!108738))

(assert (= (and b!108738 res!53904) b!108739))

(declare-fun m!122787 () Bool)

(assert (=> b!108739 m!122787))

(assert (=> d!29869 d!30281))

(assert (=> b!108117 d!30075))

(declare-fun c!19148 () Bool)

(declare-fun d!30283 () Bool)

(assert (=> d!30283 (= c!19148 (and ((_ is Cons!1621) (toList!808 lt!55606)) (= (_1!1225 (h!2219 (toList!808 lt!55606))) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70753 () Option!163)

(assert (=> d!30283 (= (getValueByKey!157 (toList!808 lt!55606) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!70753)))

(declare-fun b!108741 () Bool)

(declare-fun e!70754 () Option!163)

(assert (=> b!108741 (= e!70753 e!70754)))

(declare-fun c!19149 () Bool)

(assert (=> b!108741 (= c!19149 (and ((_ is Cons!1621) (toList!808 lt!55606)) (not (= (_1!1225 (h!2219 (toList!808 lt!55606))) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!108742 () Bool)

(assert (=> b!108742 (= e!70754 (getValueByKey!157 (t!5741 (toList!808 lt!55606)) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108740 () Bool)

(assert (=> b!108740 (= e!70753 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55606)))))))

(declare-fun b!108743 () Bool)

(assert (=> b!108743 (= e!70754 None!161)))

(assert (= (and d!30283 c!19148) b!108740))

(assert (= (and d!30283 (not c!19148)) b!108741))

(assert (= (and b!108741 c!19149) b!108742))

(assert (= (and b!108741 (not c!19149)) b!108743))

(declare-fun m!122789 () Bool)

(assert (=> b!108742 m!122789))

(assert (=> b!108133 d!30283))

(declare-fun d!30285 () Bool)

(assert (=> d!30285 (isDefined!110 (getValueByKey!157 (toList!808 lt!55258) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!55963 () Unit!3321)

(assert (=> d!30285 (= lt!55963 (choose!677 (toList!808 lt!55258) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70755 () Bool)

(assert (=> d!30285 e!70755))

(declare-fun res!53905 () Bool)

(assert (=> d!30285 (=> (not res!53905) (not e!70755))))

(assert (=> d!30285 (= res!53905 (isStrictlySorted!310 (toList!808 lt!55258)))))

(assert (=> d!30285 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55258) #b1000000000000000000000000000000000000000000000000000000000000000) lt!55963)))

(declare-fun b!108744 () Bool)

(assert (=> b!108744 (= e!70755 (containsKey!161 (toList!808 lt!55258) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30285 res!53905) b!108744))

(assert (=> d!30285 m!122055))

(assert (=> d!30285 m!122055))

(assert (=> d!30285 m!122057))

(declare-fun m!122791 () Bool)

(assert (=> d!30285 m!122791))

(declare-fun m!122793 () Bool)

(assert (=> d!30285 m!122793))

(assert (=> b!108744 m!122051))

(assert (=> b!108370 d!30285))

(assert (=> b!108370 d!30079))

(assert (=> b!108370 d!30081))

(declare-fun d!30287 () Bool)

(declare-fun lt!55964 () Bool)

(assert (=> d!30287 (= lt!55964 (select (content!111 lt!55270) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(declare-fun e!70757 () Bool)

(assert (=> d!30287 (= lt!55964 e!70757)))

(declare-fun res!53907 () Bool)

(assert (=> d!30287 (=> (not res!53907) (not e!70757))))

(assert (=> d!30287 (= res!53907 ((_ is Cons!1621) lt!55270))))

(assert (=> d!30287 (= (contains!836 lt!55270 (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))) lt!55964)))

(declare-fun b!108745 () Bool)

(declare-fun e!70756 () Bool)

(assert (=> b!108745 (= e!70757 e!70756)))

(declare-fun res!53906 () Bool)

(assert (=> b!108745 (=> res!53906 e!70756)))

(assert (=> b!108745 (= res!53906 (= (h!2219 lt!55270) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(declare-fun b!108746 () Bool)

(assert (=> b!108746 (= e!70756 (contains!836 (t!5741 lt!55270) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(assert (= (and d!30287 res!53907) b!108745))

(assert (= (and b!108745 (not res!53906)) b!108746))

(declare-fun m!122795 () Bool)

(assert (=> d!30287 m!122795))

(declare-fun m!122797 () Bool)

(assert (=> d!30287 m!122797))

(declare-fun m!122799 () Bool)

(assert (=> b!108746 m!122799))

(assert (=> b!108084 d!30287))

(declare-fun d!30289 () Bool)

(declare-fun res!53908 () Bool)

(declare-fun e!70758 () Bool)

(assert (=> d!30289 (=> res!53908 e!70758)))

(assert (=> d!30289 (= res!53908 (and ((_ is Cons!1621) (toList!808 e!70240)) (= (_1!1225 (h!2219 (toList!808 e!70240))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30289 (= (containsKey!161 (toList!808 e!70240) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70758)))

(declare-fun b!108747 () Bool)

(declare-fun e!70759 () Bool)

(assert (=> b!108747 (= e!70758 e!70759)))

(declare-fun res!53909 () Bool)

(assert (=> b!108747 (=> (not res!53909) (not e!70759))))

(assert (=> b!108747 (= res!53909 (and (or (not ((_ is Cons!1621) (toList!808 e!70240))) (bvsle (_1!1225 (h!2219 (toList!808 e!70240))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))) ((_ is Cons!1621) (toList!808 e!70240)) (bvslt (_1!1225 (h!2219 (toList!808 e!70240))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(declare-fun b!108748 () Bool)

(assert (=> b!108748 (= e!70759 (containsKey!161 (t!5741 (toList!808 e!70240)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30289 (not res!53908)) b!108747))

(assert (= (and b!108747 res!53909) b!108748))

(assert (=> b!108748 m!120979))

(declare-fun m!122801 () Bool)

(assert (=> b!108748 m!122801))

(assert (=> d!29957 d!30289))

(declare-fun d!30291 () Bool)

(declare-fun lt!55965 () Bool)

(assert (=> d!30291 (= lt!55965 (select (content!111 (toList!808 lt!55594)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!70761 () Bool)

(assert (=> d!30291 (= lt!55965 e!70761)))

(declare-fun res!53911 () Bool)

(assert (=> d!30291 (=> (not res!53911) (not e!70761))))

(assert (=> d!30291 (= res!53911 ((_ is Cons!1621) (toList!808 lt!55594)))))

(assert (=> d!30291 (= (contains!836 (toList!808 lt!55594) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55965)))

(declare-fun b!108749 () Bool)

(declare-fun e!70760 () Bool)

(assert (=> b!108749 (= e!70761 e!70760)))

(declare-fun res!53910 () Bool)

(assert (=> b!108749 (=> res!53910 e!70760)))

(assert (=> b!108749 (= res!53910 (= (h!2219 (toList!808 lt!55594)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108750 () Bool)

(assert (=> b!108750 (= e!70760 (contains!836 (t!5741 (toList!808 lt!55594)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30291 res!53911) b!108749))

(assert (= (and b!108749 (not res!53910)) b!108750))

(declare-fun m!122803 () Bool)

(assert (=> d!30291 m!122803))

(declare-fun m!122805 () Bool)

(assert (=> d!30291 m!122805))

(declare-fun m!122807 () Bool)

(assert (=> b!108750 m!122807))

(assert (=> b!108127 d!30291))

(declare-fun d!30293 () Bool)

(assert (=> d!30293 (= ($colon$colon!82 e!70535 (ite c!19047 (h!2219 (toList!808 (+!148 lt!55185 lt!55183))) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182)))) (Cons!1621 (ite c!19047 (h!2219 (toList!808 (+!148 lt!55185 lt!55183))) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))) e!70535))))

(assert (=> bm!11508 d!30293))

(declare-fun d!30295 () Bool)

(assert (=> d!30295 (= (get!1343 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108057 d!30295))

(declare-fun d!30297 () Bool)

(declare-fun res!53912 () Bool)

(declare-fun e!70762 () Bool)

(assert (=> d!30297 (=> res!53912 e!70762)))

(assert (=> d!30297 (= res!53912 (and ((_ is Cons!1621) (toList!808 lt!55258)) (= (_1!1225 (h!2219 (toList!808 lt!55258))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30297 (= (containsKey!161 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!70762)))

(declare-fun b!108751 () Bool)

(declare-fun e!70763 () Bool)

(assert (=> b!108751 (= e!70762 e!70763)))

(declare-fun res!53913 () Bool)

(assert (=> b!108751 (=> (not res!53913) (not e!70763))))

(assert (=> b!108751 (= res!53913 (and (or (not ((_ is Cons!1621) (toList!808 lt!55258))) (bvsle (_1!1225 (h!2219 (toList!808 lt!55258))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1621) (toList!808 lt!55258)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55258))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!108752 () Bool)

(assert (=> b!108752 (= e!70763 (containsKey!161 (t!5741 (toList!808 lt!55258)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30297 (not res!53912)) b!108751))

(assert (= (and b!108751 res!53913) b!108752))

(assert (=> b!108752 m!121117))

(declare-fun m!122809 () Bool)

(assert (=> b!108752 m!122809))

(assert (=> d!29847 d!30297))

(declare-fun lt!55966 () Bool)

(declare-fun d!30299 () Bool)

(assert (=> d!30299 (= lt!55966 (select (content!111 (toList!808 lt!55586)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(declare-fun e!70765 () Bool)

(assert (=> d!30299 (= lt!55966 e!70765)))

(declare-fun res!53915 () Bool)

(assert (=> d!30299 (=> (not res!53915) (not e!70765))))

(assert (=> d!30299 (= res!53915 ((_ is Cons!1621) (toList!808 lt!55586)))))

(assert (=> d!30299 (= (contains!836 (toList!808 lt!55586) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) lt!55966)))

(declare-fun b!108753 () Bool)

(declare-fun e!70764 () Bool)

(assert (=> b!108753 (= e!70765 e!70764)))

(declare-fun res!53914 () Bool)

(assert (=> b!108753 (=> res!53914 e!70764)))

(assert (=> b!108753 (= res!53914 (= (h!2219 (toList!808 lt!55586)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(declare-fun b!108754 () Bool)

(assert (=> b!108754 (= e!70764 (contains!836 (t!5741 (toList!808 lt!55586)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(assert (= (and d!30299 res!53915) b!108753))

(assert (= (and b!108753 (not res!53914)) b!108754))

(declare-fun m!122811 () Bool)

(assert (=> d!30299 m!122811))

(declare-fun m!122813 () Bool)

(assert (=> d!30299 m!122813))

(declare-fun m!122815 () Bool)

(assert (=> b!108754 m!122815))

(assert (=> b!108123 d!30299))

(declare-fun b!108773 () Bool)

(declare-fun e!70780 () Bool)

(declare-fun lt!55971 () SeekEntryResult!260)

(assert (=> b!108773 (= e!70780 (bvsge (x!13804 lt!55971) #b01111111111111111111111111111110))))

(declare-fun b!108774 () Bool)

(assert (=> b!108774 (and (bvsge (index!3191 lt!55971) #b00000000000000000000000000000000) (bvslt (index!3191 lt!55971) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun e!70779 () Bool)

(assert (=> b!108774 (= e!70779 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3191 lt!55971)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108775 () Bool)

(declare-fun e!70776 () SeekEntryResult!260)

(declare-fun e!70777 () SeekEntryResult!260)

(assert (=> b!108775 (= e!70776 e!70777)))

(declare-fun lt!55972 () (_ BitVec 64))

(declare-fun c!19156 () Bool)

(assert (=> b!108775 (= c!19156 (or (= lt!55972 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (= (bvadd lt!55972 lt!55972) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108776 () Bool)

(assert (=> b!108776 (= e!70776 (Intermediate!260 true (toIndex!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!108777 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!108777 (= e!70777 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16)) #b00000000000000000000000000000000 (mask!6764 newMap!16)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun b!108778 () Bool)

(declare-fun e!70778 () Bool)

(assert (=> b!108778 (= e!70780 e!70778)))

(declare-fun res!53922 () Bool)

(assert (=> b!108778 (= res!53922 (and ((_ is Intermediate!260) lt!55971) (not (undefined!1072 lt!55971)) (bvslt (x!13804 lt!55971) #b01111111111111111111111111111110) (bvsge (x!13804 lt!55971) #b00000000000000000000000000000000) (bvsge (x!13804 lt!55971) #b00000000000000000000000000000000)))))

(assert (=> b!108778 (=> (not res!53922) (not e!70778))))

(declare-fun b!108779 () Bool)

(assert (=> b!108779 (= e!70777 (Intermediate!260 false (toIndex!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun d!30301 () Bool)

(assert (=> d!30301 e!70780))

(declare-fun c!19157 () Bool)

(assert (=> d!30301 (= c!19157 (and ((_ is Intermediate!260) lt!55971) (undefined!1072 lt!55971)))))

(assert (=> d!30301 (= lt!55971 e!70776)))

(declare-fun c!19158 () Bool)

(assert (=> d!30301 (= c!19158 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!30301 (= lt!55972 (select (arr!2075 (_keys!4316 newMap!16)) (toIndex!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16))))))

(assert (=> d!30301 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30301 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)) lt!55971)))

(declare-fun b!108780 () Bool)

(assert (=> b!108780 (and (bvsge (index!3191 lt!55971) #b00000000000000000000000000000000) (bvslt (index!3191 lt!55971) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun res!53924 () Bool)

(assert (=> b!108780 (= res!53924 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3191 lt!55971)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108780 (=> res!53924 e!70779)))

(assert (=> b!108780 (= e!70778 e!70779)))

(declare-fun b!108781 () Bool)

(assert (=> b!108781 (and (bvsge (index!3191 lt!55971) #b00000000000000000000000000000000) (bvslt (index!3191 lt!55971) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun res!53923 () Bool)

(assert (=> b!108781 (= res!53923 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3191 lt!55971)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108781 (=> res!53923 e!70779)))

(assert (= (and d!30301 c!19158) b!108776))

(assert (= (and d!30301 (not c!19158)) b!108775))

(assert (= (and b!108775 c!19156) b!108779))

(assert (= (and b!108775 (not c!19156)) b!108777))

(assert (= (and d!30301 c!19157) b!108773))

(assert (= (and d!30301 (not c!19157)) b!108778))

(assert (= (and b!108778 res!53922) b!108780))

(assert (= (and b!108780 (not res!53924)) b!108781))

(assert (= (and b!108781 (not res!53923)) b!108774))

(declare-fun m!122817 () Bool)

(assert (=> b!108774 m!122817))

(assert (=> d!30301 m!122029))

(declare-fun m!122819 () Bool)

(assert (=> d!30301 m!122819))

(assert (=> d!30301 m!121327))

(assert (=> b!108781 m!122817))

(assert (=> b!108777 m!122029))

(declare-fun m!122821 () Bool)

(assert (=> b!108777 m!122821))

(assert (=> b!108777 m!122821))

(assert (=> b!108777 m!120979))

(declare-fun m!122823 () Bool)

(assert (=> b!108777 m!122823))

(assert (=> b!108780 m!122817))

(assert (=> d!30015 d!30301))

(declare-fun d!30303 () Bool)

(declare-fun lt!55978 () (_ BitVec 32))

(declare-fun lt!55977 () (_ BitVec 32))

(assert (=> d!30303 (= lt!55978 (bvmul (bvxor lt!55977 (bvlshr lt!55977 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!30303 (= lt!55977 ((_ extract 31 0) (bvand (bvxor (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvlshr (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!30303 (and (bvsge (mask!6764 newMap!16) #b00000000000000000000000000000000) (let ((res!53925 (let ((h!2223 ((_ extract 31 0) (bvand (bvxor (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvlshr (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!13906 (bvmul (bvxor h!2223 (bvlshr h!2223 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!13906 (bvlshr x!13906 #b00000000000000000000000000001101)) (mask!6764 newMap!16)))))) (and (bvslt res!53925 (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001)) (bvsge res!53925 #b00000000000000000000000000000000))))))

(assert (=> d!30303 (= (toIndex!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16)) (bvand (bvxor lt!55978 (bvlshr lt!55978 #b00000000000000000000000000001101)) (mask!6764 newMap!16)))))

(assert (=> d!30015 d!30303))

(assert (=> d!30015 d!30057))

(declare-fun d!30305 () Bool)

(assert (=> d!30305 (= (get!1344 (getValueByKey!157 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2918 (getValueByKey!157 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30031 d!30305))

(declare-fun d!30307 () Bool)

(declare-fun c!19159 () Bool)

(assert (=> d!30307 (= c!19159 (and ((_ is Cons!1621) (toList!808 lt!55326)) (= (_1!1225 (h!2219 (toList!808 lt!55326))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!70781 () Option!163)

(assert (=> d!30307 (= (getValueByKey!157 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000) e!70781)))

(declare-fun b!108783 () Bool)

(declare-fun e!70782 () Option!163)

(assert (=> b!108783 (= e!70781 e!70782)))

(declare-fun c!19160 () Bool)

(assert (=> b!108783 (= c!19160 (and ((_ is Cons!1621) (toList!808 lt!55326)) (not (= (_1!1225 (h!2219 (toList!808 lt!55326))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108784 () Bool)

(assert (=> b!108784 (= e!70782 (getValueByKey!157 (t!5741 (toList!808 lt!55326)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108782 () Bool)

(assert (=> b!108782 (= e!70781 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55326)))))))

(declare-fun b!108785 () Bool)

(assert (=> b!108785 (= e!70782 None!161)))

(assert (= (and d!30307 c!19159) b!108782))

(assert (= (and d!30307 (not c!19159)) b!108783))

(assert (= (and b!108783 c!19160) b!108784))

(assert (= (and b!108783 (not c!19160)) b!108785))

(declare-fun m!122825 () Bool)

(assert (=> b!108784 m!122825))

(assert (=> d!30031 d!30307))

(declare-fun d!30309 () Bool)

(declare-fun c!19161 () Bool)

(assert (=> d!30309 (= c!19161 (and ((_ is Cons!1621) (t!5741 lt!55242)) (= (_1!1225 (h!2219 (t!5741 lt!55242))) (_1!1225 lt!55183))))))

(declare-fun e!70783 () Option!163)

(assert (=> d!30309 (= (getValueByKey!157 (t!5741 lt!55242) (_1!1225 lt!55183)) e!70783)))

(declare-fun b!108787 () Bool)

(declare-fun e!70784 () Option!163)

(assert (=> b!108787 (= e!70783 e!70784)))

(declare-fun c!19162 () Bool)

(assert (=> b!108787 (= c!19162 (and ((_ is Cons!1621) (t!5741 lt!55242)) (not (= (_1!1225 (h!2219 (t!5741 lt!55242))) (_1!1225 lt!55183)))))))

(declare-fun b!108788 () Bool)

(assert (=> b!108788 (= e!70784 (getValueByKey!157 (t!5741 (t!5741 lt!55242)) (_1!1225 lt!55183)))))

(declare-fun b!108786 () Bool)

(assert (=> b!108786 (= e!70783 (Some!162 (_2!1225 (h!2219 (t!5741 lt!55242)))))))

(declare-fun b!108789 () Bool)

(assert (=> b!108789 (= e!70784 None!161)))

(assert (= (and d!30309 c!19161) b!108786))

(assert (= (and d!30309 (not c!19161)) b!108787))

(assert (= (and b!108787 c!19162) b!108788))

(assert (= (and b!108787 (not c!19162)) b!108789))

(declare-fun m!122827 () Bool)

(assert (=> b!108788 m!122827))

(assert (=> b!108206 d!30309))

(declare-fun d!30311 () Bool)

(declare-fun res!53926 () Bool)

(declare-fun e!70785 () Bool)

(assert (=> d!30311 (=> res!53926 e!70785)))

(assert (=> d!30311 (= res!53926 (or ((_ is Nil!1622) lt!55792) ((_ is Nil!1622) (t!5741 lt!55792))))))

(assert (=> d!30311 (= (isStrictlySorted!310 lt!55792) e!70785)))

(declare-fun b!108790 () Bool)

(declare-fun e!70786 () Bool)

(assert (=> b!108790 (= e!70785 e!70786)))

(declare-fun res!53927 () Bool)

(assert (=> b!108790 (=> (not res!53927) (not e!70786))))

(assert (=> b!108790 (= res!53927 (bvslt (_1!1225 (h!2219 lt!55792)) (_1!1225 (h!2219 (t!5741 lt!55792)))))))

(declare-fun b!108791 () Bool)

(assert (=> b!108791 (= e!70786 (isStrictlySorted!310 (t!5741 lt!55792)))))

(assert (= (and d!30311 (not res!53926)) b!108790))

(assert (= (and b!108790 res!53927) b!108791))

(declare-fun m!122829 () Bool)

(assert (=> b!108791 m!122829))

(assert (=> d!30029 d!30311))

(declare-fun d!30313 () Bool)

(declare-fun res!53928 () Bool)

(declare-fun e!70787 () Bool)

(assert (=> d!30313 (=> res!53928 e!70787)))

(assert (=> d!30313 (= res!53928 (or ((_ is Nil!1622) (toList!808 (+!148 lt!55185 lt!55183))) ((_ is Nil!1622) (t!5741 (toList!808 (+!148 lt!55185 lt!55183))))))))

(assert (=> d!30313 (= (isStrictlySorted!310 (toList!808 (+!148 lt!55185 lt!55183))) e!70787)))

(declare-fun b!108792 () Bool)

(declare-fun e!70788 () Bool)

(assert (=> b!108792 (= e!70787 e!70788)))

(declare-fun res!53929 () Bool)

(assert (=> b!108792 (=> (not res!53929) (not e!70788))))

(assert (=> b!108792 (= res!53929 (bvslt (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 lt!55183)))) (_1!1225 (h!2219 (t!5741 (toList!808 (+!148 lt!55185 lt!55183)))))))))

(declare-fun b!108793 () Bool)

(assert (=> b!108793 (= e!70788 (isStrictlySorted!310 (t!5741 (toList!808 (+!148 lt!55185 lt!55183)))))))

(assert (= (and d!30313 (not res!53928)) b!108792))

(assert (= (and b!108792 res!53929) b!108793))

(assert (=> b!108793 m!122613))

(assert (=> d!30029 d!30313))

(declare-fun d!30315 () Bool)

(assert (=> d!30315 (= (apply!99 lt!55747 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!157 (toList!808 lt!55747) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4480 () Bool)

(assert (= bs!4480 d!30315))

(assert (=> bs!4480 m!122621))

(assert (=> bs!4480 m!122621))

(declare-fun m!122831 () Bool)

(assert (=> bs!4480 m!122831))

(assert (=> b!108344 d!30315))

(declare-fun d!30317 () Bool)

(declare-fun res!53930 () Bool)

(declare-fun e!70789 () Bool)

(assert (=> d!30317 (=> res!53930 e!70789)))

(assert (=> d!30317 (= res!53930 (= (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30317 (= (arrayContainsKey!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!70789)))

(declare-fun b!108794 () Bool)

(declare-fun e!70790 () Bool)

(assert (=> b!108794 (= e!70789 e!70790)))

(declare-fun res!53931 () Bool)

(assert (=> b!108794 (=> (not res!53931) (not e!70790))))

(assert (=> b!108794 (= res!53931 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!108795 () Bool)

(assert (=> b!108795 (= e!70790 (arrayContainsKey!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!30317 (not res!53930)) b!108794))

(assert (= (and b!108794 res!53931) b!108795))

(declare-fun m!122833 () Bool)

(assert (=> d!30317 m!122833))

(assert (=> b!108795 m!120979))

(declare-fun m!122835 () Bool)

(assert (=> b!108795 m!122835))

(assert (=> b!108191 d!30317))

(declare-fun d!30319 () Bool)

(declare-fun c!19165 () Bool)

(assert (=> d!30319 (= c!19165 ((_ is Nil!1622) (toList!808 lt!55240)))))

(declare-fun e!70793 () (InoxSet tuple2!2428))

(assert (=> d!30319 (= (content!111 (toList!808 lt!55240)) e!70793)))

(declare-fun b!108800 () Bool)

(assert (=> b!108800 (= e!70793 ((as const (Array tuple2!2428 Bool)) false))))

(declare-fun b!108801 () Bool)

(assert (=> b!108801 (= e!70793 ((_ map or) (store ((as const (Array tuple2!2428 Bool)) false) (h!2219 (toList!808 lt!55240)) true) (content!111 (t!5741 (toList!808 lt!55240)))))))

(assert (= (and d!30319 c!19165) b!108800))

(assert (= (and d!30319 (not c!19165)) b!108801))

(declare-fun m!122837 () Bool)

(assert (=> b!108801 m!122837))

(declare-fun m!122839 () Bool)

(assert (=> b!108801 m!122839))

(assert (=> d!29995 d!30319))

(declare-fun d!30321 () Bool)

(assert (=> d!30321 (isDefined!110 (getValueByKey!157 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!55979 () Unit!3321)

(assert (=> d!30321 (= lt!55979 (choose!677 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70794 () Bool)

(assert (=> d!30321 e!70794))

(declare-fun res!53932 () Bool)

(assert (=> d!30321 (=> (not res!53932) (not e!70794))))

(assert (=> d!30321 (= res!53932 (isStrictlySorted!310 (toList!808 lt!55326)))))

(assert (=> d!30321 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000) lt!55979)))

(declare-fun b!108802 () Bool)

(assert (=> b!108802 (= e!70794 (containsKey!161 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30321 res!53932) b!108802))

(assert (=> d!30321 m!121421))

(assert (=> d!30321 m!121421))

(assert (=> d!30321 m!121423))

(declare-fun m!122841 () Bool)

(assert (=> d!30321 m!122841))

(declare-fun m!122843 () Bool)

(assert (=> d!30321 m!122843))

(assert (=> b!108802 m!121417))

(assert (=> b!108053 d!30321))

(assert (=> b!108053 d!30125))

(assert (=> b!108053 d!30127))

(declare-fun d!30323 () Bool)

(assert (=> d!30323 (isDefined!110 (getValueByKey!157 (toList!808 e!70240) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!55980 () Unit!3321)

(assert (=> d!30323 (= lt!55980 (choose!677 (toList!808 e!70240) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70795 () Bool)

(assert (=> d!30323 e!70795))

(declare-fun res!53933 () Bool)

(assert (=> d!30323 (=> (not res!53933) (not e!70795))))

(assert (=> d!30323 (= res!53933 (isStrictlySorted!310 (toList!808 e!70240)))))

(assert (=> d!30323 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 e!70240) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!55980)))

(declare-fun b!108803 () Bool)

(assert (=> b!108803 (= e!70795 (containsKey!161 (toList!808 e!70240) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30323 res!53933) b!108803))

(assert (=> d!30323 m!120979))

(assert (=> d!30323 m!121753))

(assert (=> d!30323 m!121753))

(assert (=> d!30323 m!121755))

(assert (=> d!30323 m!120979))

(declare-fun m!122845 () Bool)

(assert (=> d!30323 m!122845))

(declare-fun m!122847 () Bool)

(assert (=> d!30323 m!122847))

(assert (=> b!108803 m!120979))

(assert (=> b!108803 m!121749))

(assert (=> b!108185 d!30323))

(assert (=> b!108185 d!30129))

(assert (=> b!108185 d!30131))

(declare-fun d!30325 () Bool)

(assert (=> d!30325 (= (isDefined!110 (getValueByKey!157 (toList!808 call!11424) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411)))) (not (isEmpty!375 (getValueByKey!157 (toList!808 call!11424) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))))

(declare-fun bs!4481 () Bool)

(assert (= bs!4481 d!30325))

(assert (=> bs!4481 m!121657))

(declare-fun m!122849 () Bool)

(assert (=> bs!4481 m!122849))

(assert (=> b!108148 d!30325))

(declare-fun c!19166 () Bool)

(declare-fun d!30327 () Bool)

(assert (=> d!30327 (= c!19166 (and ((_ is Cons!1621) (toList!808 call!11424)) (= (_1!1225 (h!2219 (toList!808 call!11424))) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411)))))))

(declare-fun e!70796 () Option!163)

(assert (=> d!30327 (= (getValueByKey!157 (toList!808 call!11424) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))) e!70796)))

(declare-fun b!108805 () Bool)

(declare-fun e!70797 () Option!163)

(assert (=> b!108805 (= e!70796 e!70797)))

(declare-fun c!19167 () Bool)

(assert (=> b!108805 (= c!19167 (and ((_ is Cons!1621) (toList!808 call!11424)) (not (= (_1!1225 (h!2219 (toList!808 call!11424))) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))))

(declare-fun b!108806 () Bool)

(assert (=> b!108806 (= e!70797 (getValueByKey!157 (t!5741 (toList!808 call!11424)) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))

(declare-fun b!108804 () Bool)

(assert (=> b!108804 (= e!70796 (Some!162 (_2!1225 (h!2219 (toList!808 call!11424)))))))

(declare-fun b!108807 () Bool)

(assert (=> b!108807 (= e!70797 None!161)))

(assert (= (and d!30327 c!19166) b!108804))

(assert (= (and d!30327 (not c!19166)) b!108805))

(assert (= (and b!108805 c!19167) b!108806))

(assert (= (and b!108805 (not c!19167)) b!108807))

(assert (=> b!108806 m!121265))

(declare-fun m!122851 () Bool)

(assert (=> b!108806 m!122851))

(assert (=> b!108148 d!30327))

(declare-fun d!30329 () Bool)

(assert (=> d!30329 (= (isDefined!110 (getValueByKey!157 (toList!808 lt!55236) (_1!1225 lt!55183))) (not (isEmpty!375 (getValueByKey!157 (toList!808 lt!55236) (_1!1225 lt!55183)))))))

(declare-fun bs!4482 () Bool)

(assert (= bs!4482 d!30329))

(assert (=> bs!4482 m!121097))

(declare-fun m!122853 () Bool)

(assert (=> bs!4482 m!122853))

(assert (=> b!108402 d!30329))

(assert (=> b!108402 d!29849))

(assert (=> b!108171 d!30145))

(assert (=> d!30027 d!30025))

(declare-fun d!30331 () Bool)

(assert (=> d!30331 (= (getValueByKey!157 lt!55274 (_1!1225 lt!55182)) (Some!162 (_2!1225 lt!55182)))))

(assert (=> d!30331 true))

(declare-fun _$22!440 () Unit!3321)

(assert (=> d!30331 (= (choose!672 lt!55274 (_1!1225 lt!55182) (_2!1225 lt!55182)) _$22!440)))

(declare-fun bs!4483 () Bool)

(assert (= bs!4483 d!30331))

(assert (=> bs!4483 m!121165))

(assert (=> d!30027 d!30331))

(declare-fun d!30333 () Bool)

(declare-fun res!53934 () Bool)

(declare-fun e!70798 () Bool)

(assert (=> d!30333 (=> res!53934 e!70798)))

(assert (=> d!30333 (= res!53934 (or ((_ is Nil!1622) lt!55274) ((_ is Nil!1622) (t!5741 lt!55274))))))

(assert (=> d!30333 (= (isStrictlySorted!310 lt!55274) e!70798)))

(declare-fun b!108808 () Bool)

(declare-fun e!70799 () Bool)

(assert (=> b!108808 (= e!70798 e!70799)))

(declare-fun res!53935 () Bool)

(assert (=> b!108808 (=> (not res!53935) (not e!70799))))

(assert (=> b!108808 (= res!53935 (bvslt (_1!1225 (h!2219 lt!55274)) (_1!1225 (h!2219 (t!5741 lt!55274)))))))

(declare-fun b!108809 () Bool)

(assert (=> b!108809 (= e!70799 (isStrictlySorted!310 (t!5741 lt!55274)))))

(assert (= (and d!30333 (not res!53934)) b!108808))

(assert (= (and b!108808 res!53935) b!108809))

(declare-fun m!122855 () Bool)

(assert (=> b!108809 m!122855))

(assert (=> d!30027 d!30333))

(declare-fun d!30335 () Bool)

(assert (=> d!30335 (= (isEmpty!374 (toList!808 lt!55258)) ((_ is Nil!1622) (toList!808 lt!55258)))))

(assert (=> d!29867 d!30335))

(declare-fun d!30337 () Bool)

(assert (=> d!30337 (isDefined!110 (getValueByKey!157 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!55981 () Unit!3321)

(assert (=> d!30337 (= lt!55981 (choose!677 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!70800 () Bool)

(assert (=> d!30337 e!70800))

(declare-fun res!53936 () Bool)

(assert (=> d!30337 (=> (not res!53936) (not e!70800))))

(assert (=> d!30337 (= res!53936 (isStrictlySorted!310 (toList!808 lt!55258)))))

(assert (=> d!30337 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!55981)))

(declare-fun b!108810 () Bool)

(assert (=> b!108810 (= e!70800 (containsKey!161 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30337 res!53936) b!108810))

(assert (=> d!30337 m!121117))

(assert (=> d!30337 m!121321))

(assert (=> d!30337 m!121321))

(assert (=> d!30337 m!121323))

(assert (=> d!30337 m!121117))

(declare-fun m!122857 () Bool)

(assert (=> d!30337 m!122857))

(assert (=> d!30337 m!122793))

(assert (=> b!108810 m!121117))

(assert (=> b!108810 m!121317))

(assert (=> b!107959 d!30337))

(assert (=> b!107959 d!30149))

(assert (=> b!107959 d!30151))

(declare-fun d!30339 () Bool)

(declare-fun lt!55982 () Bool)

(assert (=> d!30339 (= lt!55982 (select (content!112 Nil!1623) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!70802 () Bool)

(assert (=> d!30339 (= lt!55982 e!70802)))

(declare-fun res!53938 () Bool)

(assert (=> d!30339 (=> (not res!53938) (not e!70802))))

(assert (=> d!30339 (= res!53938 ((_ is Cons!1622) Nil!1623))))

(assert (=> d!30339 (= (contains!837 Nil!1623 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) lt!55982)))

(declare-fun b!108811 () Bool)

(declare-fun e!70801 () Bool)

(assert (=> b!108811 (= e!70802 e!70801)))

(declare-fun res!53937 () Bool)

(assert (=> b!108811 (=> res!53937 e!70801)))

(assert (=> b!108811 (= res!53937 (= (h!2220 Nil!1623) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108812 () Bool)

(assert (=> b!108812 (= e!70801 (contains!837 (t!5742 Nil!1623) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!30339 res!53938) b!108811))

(assert (= (and b!108811 (not res!53937)) b!108812))

(assert (=> d!30339 m!122059))

(assert (=> d!30339 m!121333))

(declare-fun m!122859 () Bool)

(assert (=> d!30339 m!122859))

(assert (=> b!108812 m!121333))

(declare-fun m!122861 () Bool)

(assert (=> b!108812 m!122861))

(assert (=> b!108296 d!30339))

(declare-fun d!30341 () Bool)

(declare-fun e!70804 () Bool)

(assert (=> d!30341 e!70804))

(declare-fun res!53939 () Bool)

(assert (=> d!30341 (=> res!53939 e!70804)))

(declare-fun lt!55984 () Bool)

(assert (=> d!30341 (= res!53939 (not lt!55984))))

(declare-fun lt!55985 () Bool)

(assert (=> d!30341 (= lt!55984 lt!55985)))

(declare-fun lt!55983 () Unit!3321)

(declare-fun e!70803 () Unit!3321)

(assert (=> d!30341 (= lt!55983 e!70803)))

(declare-fun c!19168 () Bool)

(assert (=> d!30341 (= c!19168 lt!55985)))

(assert (=> d!30341 (= lt!55985 (containsKey!161 (toList!808 lt!55606) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30341 (= (contains!834 lt!55606 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55984)))

(declare-fun b!108813 () Bool)

(declare-fun lt!55986 () Unit!3321)

(assert (=> b!108813 (= e!70803 lt!55986)))

(assert (=> b!108813 (= lt!55986 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55606) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!108813 (isDefined!110 (getValueByKey!157 (toList!808 lt!55606) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108814 () Bool)

(declare-fun Unit!3366 () Unit!3321)

(assert (=> b!108814 (= e!70803 Unit!3366)))

(declare-fun b!108815 () Bool)

(assert (=> b!108815 (= e!70804 (isDefined!110 (getValueByKey!157 (toList!808 lt!55606) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30341 c!19168) b!108813))

(assert (= (and d!30341 (not c!19168)) b!108814))

(assert (= (and d!30341 (not res!53939)) b!108815))

(declare-fun m!122863 () Bool)

(assert (=> d!30341 m!122863))

(declare-fun m!122865 () Bool)

(assert (=> b!108813 m!122865))

(assert (=> b!108813 m!121593))

(assert (=> b!108813 m!121593))

(declare-fun m!122867 () Bool)

(assert (=> b!108813 m!122867))

(assert (=> b!108815 m!121593))

(assert (=> b!108815 m!121593))

(assert (=> b!108815 m!122867))

(assert (=> d!29913 d!30341))

(declare-fun d!30343 () Bool)

(declare-fun c!19169 () Bool)

(assert (=> d!30343 (= c!19169 (and ((_ is Cons!1621) lt!55608) (= (_1!1225 (h!2219 lt!55608)) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70805 () Option!163)

(assert (=> d!30343 (= (getValueByKey!157 lt!55608 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!70805)))

(declare-fun b!108817 () Bool)

(declare-fun e!70806 () Option!163)

(assert (=> b!108817 (= e!70805 e!70806)))

(declare-fun c!19170 () Bool)

(assert (=> b!108817 (= c!19170 (and ((_ is Cons!1621) lt!55608) (not (= (_1!1225 (h!2219 lt!55608)) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!108818 () Bool)

(assert (=> b!108818 (= e!70806 (getValueByKey!157 (t!5741 lt!55608) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108816 () Bool)

(assert (=> b!108816 (= e!70805 (Some!162 (_2!1225 (h!2219 lt!55608))))))

(declare-fun b!108819 () Bool)

(assert (=> b!108819 (= e!70806 None!161)))

(assert (= (and d!30343 c!19169) b!108816))

(assert (= (and d!30343 (not c!19169)) b!108817))

(assert (= (and b!108817 c!19170) b!108818))

(assert (= (and b!108817 (not c!19170)) b!108819))

(declare-fun m!122869 () Bool)

(assert (=> b!108818 m!122869))

(assert (=> d!29913 d!30343))

(declare-fun d!30345 () Bool)

(assert (=> d!30345 (= (getValueByKey!157 lt!55608 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!55987 () Unit!3321)

(assert (=> d!30345 (= lt!55987 (choose!672 lt!55608 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!70807 () Bool)

(assert (=> d!30345 e!70807))

(declare-fun res!53940 () Bool)

(assert (=> d!30345 (=> (not res!53940) (not e!70807))))

(assert (=> d!30345 (= res!53940 (isStrictlySorted!310 lt!55608))))

(assert (=> d!30345 (= (lemmaContainsTupThenGetReturnValue!73 lt!55608 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55987)))

(declare-fun b!108820 () Bool)

(declare-fun res!53941 () Bool)

(assert (=> b!108820 (=> (not res!53941) (not e!70807))))

(assert (=> b!108820 (= res!53941 (containsKey!161 lt!55608 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108821 () Bool)

(assert (=> b!108821 (= e!70807 (contains!836 lt!55608 (tuple2!2429 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30345 res!53940) b!108820))

(assert (= (and b!108820 res!53941) b!108821))

(assert (=> d!30345 m!121587))

(declare-fun m!122871 () Bool)

(assert (=> d!30345 m!122871))

(declare-fun m!122873 () Bool)

(assert (=> d!30345 m!122873))

(declare-fun m!122875 () Bool)

(assert (=> b!108820 m!122875))

(declare-fun m!122877 () Bool)

(assert (=> b!108821 m!122877))

(assert (=> d!29913 d!30345))

(declare-fun b!108822 () Bool)

(declare-fun e!70811 () List!1625)

(declare-fun e!70809 () List!1625)

(assert (=> b!108822 (= e!70811 e!70809)))

(declare-fun c!19173 () Bool)

(assert (=> b!108822 (= c!19173 (and ((_ is Cons!1621) (toList!808 lt!55327)) (= (_1!1225 (h!2219 (toList!808 lt!55327))) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70808 () List!1625)

(declare-fun call!11548 () List!1625)

(declare-fun c!19172 () Bool)

(declare-fun bm!11544 () Bool)

(assert (=> bm!11544 (= call!11548 ($colon$colon!82 e!70808 (ite c!19172 (h!2219 (toList!808 lt!55327)) (tuple2!2429 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19171 () Bool)

(assert (=> bm!11544 (= c!19171 c!19172)))

(declare-fun b!108823 () Bool)

(assert (=> b!108823 (= e!70808 (insertStrictlySorted!76 (t!5741 (toList!808 lt!55327)) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun c!19174 () Bool)

(declare-fun b!108824 () Bool)

(assert (=> b!108824 (= e!70808 (ite c!19173 (t!5741 (toList!808 lt!55327)) (ite c!19174 (Cons!1621 (h!2219 (toList!808 lt!55327)) (t!5741 (toList!808 lt!55327))) Nil!1622)))))

(declare-fun b!108825 () Bool)

(declare-fun e!70812 () List!1625)

(declare-fun call!11547 () List!1625)

(assert (=> b!108825 (= e!70812 call!11547)))

(declare-fun bm!11545 () Bool)

(declare-fun call!11549 () List!1625)

(assert (=> bm!11545 (= call!11547 call!11549)))

(declare-fun b!108826 () Bool)

(assert (=> b!108826 (= e!70811 call!11548)))

(declare-fun d!30347 () Bool)

(declare-fun e!70810 () Bool)

(assert (=> d!30347 e!70810))

(declare-fun res!53942 () Bool)

(assert (=> d!30347 (=> (not res!53942) (not e!70810))))

(declare-fun lt!55988 () List!1625)

(assert (=> d!30347 (= res!53942 (isStrictlySorted!310 lt!55988))))

(assert (=> d!30347 (= lt!55988 e!70811)))

(assert (=> d!30347 (= c!19172 (and ((_ is Cons!1621) (toList!808 lt!55327)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55327))) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30347 (isStrictlySorted!310 (toList!808 lt!55327))))

(assert (=> d!30347 (= (insertStrictlySorted!76 (toList!808 lt!55327) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55988)))

(declare-fun b!108827 () Bool)

(assert (=> b!108827 (= e!70812 call!11547)))

(declare-fun bm!11546 () Bool)

(assert (=> bm!11546 (= call!11549 call!11548)))

(declare-fun b!108828 () Bool)

(assert (=> b!108828 (= c!19174 (and ((_ is Cons!1621) (toList!808 lt!55327)) (bvsgt (_1!1225 (h!2219 (toList!808 lt!55327))) (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> b!108828 (= e!70809 e!70812)))

(declare-fun b!108829 () Bool)

(assert (=> b!108829 (= e!70809 call!11549)))

(declare-fun b!108830 () Bool)

(declare-fun res!53943 () Bool)

(assert (=> b!108830 (=> (not res!53943) (not e!70810))))

(assert (=> b!108830 (= res!53943 (containsKey!161 lt!55988 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108831 () Bool)

(assert (=> b!108831 (= e!70810 (contains!836 lt!55988 (tuple2!2429 (_1!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30347 c!19172) b!108826))

(assert (= (and d!30347 (not c!19172)) b!108822))

(assert (= (and b!108822 c!19173) b!108829))

(assert (= (and b!108822 (not c!19173)) b!108828))

(assert (= (and b!108828 c!19174) b!108827))

(assert (= (and b!108828 (not c!19174)) b!108825))

(assert (= (or b!108827 b!108825) bm!11545))

(assert (= (or b!108829 bm!11545) bm!11546))

(assert (= (or b!108826 bm!11546) bm!11544))

(assert (= (and bm!11544 c!19171) b!108823))

(assert (= (and bm!11544 (not c!19171)) b!108824))

(assert (= (and d!30347 res!53942) b!108830))

(assert (= (and b!108830 res!53943) b!108831))

(declare-fun m!122879 () Bool)

(assert (=> bm!11544 m!122879))

(declare-fun m!122881 () Bool)

(assert (=> b!108830 m!122881))

(declare-fun m!122883 () Bool)

(assert (=> b!108831 m!122883))

(declare-fun m!122885 () Bool)

(assert (=> d!30347 m!122885))

(declare-fun m!122887 () Bool)

(assert (=> d!30347 m!122887))

(declare-fun m!122889 () Bool)

(assert (=> b!108823 m!122889))

(assert (=> d!29913 d!30347))

(declare-fun d!30349 () Bool)

(declare-fun res!53944 () Bool)

(declare-fun e!70813 () Bool)

(assert (=> d!30349 (=> res!53944 e!70813)))

(assert (=> d!30349 (= res!53944 (and ((_ is Cons!1621) lt!55238) (= (_1!1225 (h!2219 lt!55238)) (_1!1225 lt!55183))))))

(assert (=> d!30349 (= (containsKey!161 lt!55238 (_1!1225 lt!55183)) e!70813)))

(declare-fun b!108832 () Bool)

(declare-fun e!70814 () Bool)

(assert (=> b!108832 (= e!70813 e!70814)))

(declare-fun res!53945 () Bool)

(assert (=> b!108832 (=> (not res!53945) (not e!70814))))

(assert (=> b!108832 (= res!53945 (and (or (not ((_ is Cons!1621) lt!55238)) (bvsle (_1!1225 (h!2219 lt!55238)) (_1!1225 lt!55183))) ((_ is Cons!1621) lt!55238) (bvslt (_1!1225 (h!2219 lt!55238)) (_1!1225 lt!55183))))))

(declare-fun b!108833 () Bool)

(assert (=> b!108833 (= e!70814 (containsKey!161 (t!5741 lt!55238) (_1!1225 lt!55183)))))

(assert (= (and d!30349 (not res!53944)) b!108832))

(assert (= (and b!108832 res!53945) b!108833))

(declare-fun m!122891 () Bool)

(assert (=> b!108833 m!122891))

(assert (=> b!108407 d!30349))

(assert (=> b!108225 d!30123))

(declare-fun bm!11547 () Bool)

(declare-fun call!11550 () Bool)

(declare-fun lt!55995 () ListLongMap!1585)

(assert (=> bm!11547 (= call!11550 (contains!834 lt!55995 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108834 () Bool)

(declare-fun e!70818 () Unit!3321)

(declare-fun lt!56001 () Unit!3321)

(assert (=> b!108834 (= e!70818 lt!56001)))

(declare-fun lt!55989 () ListLongMap!1585)

(assert (=> b!108834 (= lt!55989 (getCurrentListMapNoExtraKeys!114 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56007 () (_ BitVec 64))

(assert (=> b!108834 (= lt!56007 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56004 () (_ BitVec 64))

(assert (=> b!108834 (= lt!56004 (select (arr!2075 lt!55542) #b00000000000000000000000000000000))))

(declare-fun lt!56002 () Unit!3321)

(assert (=> b!108834 (= lt!56002 (addStillContains!75 lt!55989 lt!56007 (zeroValue!2479 newMap!16) lt!56004))))

(assert (=> b!108834 (contains!834 (+!148 lt!55989 (tuple2!2429 lt!56007 (zeroValue!2479 newMap!16))) lt!56004)))

(declare-fun lt!55994 () Unit!3321)

(assert (=> b!108834 (= lt!55994 lt!56002)))

(declare-fun lt!55997 () ListLongMap!1585)

(assert (=> b!108834 (= lt!55997 (getCurrentListMapNoExtraKeys!114 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56006 () (_ BitVec 64))

(assert (=> b!108834 (= lt!56006 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56009 () (_ BitVec 64))

(assert (=> b!108834 (= lt!56009 (select (arr!2075 lt!55542) #b00000000000000000000000000000000))))

(declare-fun lt!56005 () Unit!3321)

(assert (=> b!108834 (= lt!56005 (addApplyDifferent!75 lt!55997 lt!56006 (minValue!2479 newMap!16) lt!56009))))

(assert (=> b!108834 (= (apply!99 (+!148 lt!55997 (tuple2!2429 lt!56006 (minValue!2479 newMap!16))) lt!56009) (apply!99 lt!55997 lt!56009))))

(declare-fun lt!56010 () Unit!3321)

(assert (=> b!108834 (= lt!56010 lt!56005)))

(declare-fun lt!56000 () ListLongMap!1585)

(assert (=> b!108834 (= lt!56000 (getCurrentListMapNoExtraKeys!114 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55990 () (_ BitVec 64))

(assert (=> b!108834 (= lt!55990 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56003 () (_ BitVec 64))

(assert (=> b!108834 (= lt!56003 (select (arr!2075 lt!55542) #b00000000000000000000000000000000))))

(declare-fun lt!55999 () Unit!3321)

(assert (=> b!108834 (= lt!55999 (addApplyDifferent!75 lt!56000 lt!55990 (zeroValue!2479 newMap!16) lt!56003))))

(assert (=> b!108834 (= (apply!99 (+!148 lt!56000 (tuple2!2429 lt!55990 (zeroValue!2479 newMap!16))) lt!56003) (apply!99 lt!56000 lt!56003))))

(declare-fun lt!55991 () Unit!3321)

(assert (=> b!108834 (= lt!55991 lt!55999)))

(declare-fun lt!55996 () ListLongMap!1585)

(assert (=> b!108834 (= lt!55996 (getCurrentListMapNoExtraKeys!114 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55993 () (_ BitVec 64))

(assert (=> b!108834 (= lt!55993 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56008 () (_ BitVec 64))

(assert (=> b!108834 (= lt!56008 (select (arr!2075 lt!55542) #b00000000000000000000000000000000))))

(assert (=> b!108834 (= lt!56001 (addApplyDifferent!75 lt!55996 lt!55993 (minValue!2479 newMap!16) lt!56008))))

(assert (=> b!108834 (= (apply!99 (+!148 lt!55996 (tuple2!2429 lt!55993 (minValue!2479 newMap!16))) lt!56008) (apply!99 lt!55996 lt!56008))))

(declare-fun bm!11548 () Bool)

(declare-fun call!11551 () ListLongMap!1585)

(declare-fun call!11556 () ListLongMap!1585)

(assert (=> bm!11548 (= call!11551 call!11556)))

(declare-fun b!108835 () Bool)

(declare-fun e!70815 () Bool)

(assert (=> b!108835 (= e!70815 (validKeyInArray!0 (select (arr!2075 lt!55542) #b00000000000000000000000000000000)))))

(declare-fun b!108837 () Bool)

(declare-fun res!53951 () Bool)

(declare-fun e!70822 () Bool)

(assert (=> b!108837 (=> (not res!53951) (not e!70822))))

(declare-fun e!70825 () Bool)

(assert (=> b!108837 (= res!53951 e!70825)))

(declare-fun c!19179 () Bool)

(assert (=> b!108837 (= c!19179 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108838 () Bool)

(declare-fun e!70826 () ListLongMap!1585)

(assert (=> b!108838 (= e!70826 call!11551)))

(declare-fun b!108839 () Bool)

(declare-fun e!70819 () ListLongMap!1585)

(assert (=> b!108839 (= e!70819 call!11551)))

(declare-fun b!108840 () Bool)

(declare-fun res!53948 () Bool)

(assert (=> b!108840 (=> (not res!53948) (not e!70822))))

(declare-fun e!70827 () Bool)

(assert (=> b!108840 (= res!53948 e!70827)))

(declare-fun res!53946 () Bool)

(assert (=> b!108840 (=> res!53946 e!70827)))

(assert (=> b!108840 (= res!53946 (not e!70815))))

(declare-fun res!53947 () Bool)

(assert (=> b!108840 (=> (not res!53947) (not e!70815))))

(assert (=> b!108840 (= res!53947 (bvslt #b00000000000000000000000000000000 (size!2331 lt!55542)))))

(declare-fun call!11555 () ListLongMap!1585)

(declare-fun bm!11549 () Bool)

(assert (=> bm!11549 (= call!11555 (getCurrentListMapNoExtraKeys!114 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun c!19178 () Bool)

(declare-fun bm!11550 () Bool)

(declare-fun call!11554 () ListLongMap!1585)

(declare-fun c!19180 () Bool)

(declare-fun call!11553 () ListLongMap!1585)

(assert (=> bm!11550 (= call!11556 (+!148 (ite c!19178 call!11555 (ite c!19180 call!11553 call!11554)) (ite (or c!19178 c!19180) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!108841 () Bool)

(declare-fun Unit!3367 () Unit!3321)

(assert (=> b!108841 (= e!70818 Unit!3367)))

(declare-fun b!108842 () Bool)

(declare-fun e!70821 () Bool)

(assert (=> b!108842 (= e!70825 e!70821)))

(declare-fun res!53954 () Bool)

(assert (=> b!108842 (= res!53954 call!11550)))

(assert (=> b!108842 (=> (not res!53954) (not e!70821))))

(declare-fun d!30351 () Bool)

(assert (=> d!30351 e!70822))

(declare-fun res!53953 () Bool)

(assert (=> d!30351 (=> (not res!53953) (not e!70822))))

(assert (=> d!30351 (= res!53953 (or (bvsge #b00000000000000000000000000000000 (size!2331 lt!55542)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 lt!55542)))))))

(declare-fun lt!55998 () ListLongMap!1585)

(assert (=> d!30351 (= lt!55995 lt!55998)))

(declare-fun lt!55992 () Unit!3321)

(assert (=> d!30351 (= lt!55992 e!70818)))

(declare-fun c!19177 () Bool)

(declare-fun e!70823 () Bool)

(assert (=> d!30351 (= c!19177 e!70823)))

(declare-fun res!53949 () Bool)

(assert (=> d!30351 (=> (not res!53949) (not e!70823))))

(assert (=> d!30351 (= res!53949 (bvslt #b00000000000000000000000000000000 (size!2331 lt!55542)))))

(declare-fun e!70816 () ListLongMap!1585)

(assert (=> d!30351 (= lt!55998 e!70816)))

(assert (=> d!30351 (= c!19178 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30351 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30351 (= (getCurrentListMap!493 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55995)))

(declare-fun b!108836 () Bool)

(declare-fun c!19175 () Bool)

(assert (=> b!108836 (= c!19175 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108836 (= e!70826 e!70819)))

(declare-fun b!108843 () Bool)

(assert (=> b!108843 (= e!70823 (validKeyInArray!0 (select (arr!2075 lt!55542) #b00000000000000000000000000000000)))))

(declare-fun b!108844 () Bool)

(assert (=> b!108844 (= e!70825 (not call!11550))))

(declare-fun b!108845 () Bool)

(declare-fun e!70824 () Bool)

(declare-fun call!11552 () Bool)

(assert (=> b!108845 (= e!70824 (not call!11552))))

(declare-fun b!108846 () Bool)

(assert (=> b!108846 (= e!70822 e!70824)))

(declare-fun c!19176 () Bool)

(assert (=> b!108846 (= c!19176 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108847 () Bool)

(declare-fun e!70820 () Bool)

(assert (=> b!108847 (= e!70827 e!70820)))

(declare-fun res!53950 () Bool)

(assert (=> b!108847 (=> (not res!53950) (not e!70820))))

(assert (=> b!108847 (= res!53950 (contains!834 lt!55995 (select (arr!2075 lt!55542) #b00000000000000000000000000000000)))))

(assert (=> b!108847 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 lt!55542)))))

(declare-fun bm!11551 () Bool)

(assert (=> bm!11551 (= call!11554 call!11553)))

(declare-fun b!108848 () Bool)

(declare-fun e!70817 () Bool)

(assert (=> b!108848 (= e!70817 (= (apply!99 lt!55995 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun bm!11552 () Bool)

(assert (=> bm!11552 (= call!11552 (contains!834 lt!55995 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108849 () Bool)

(assert (=> b!108849 (= e!70819 call!11554)))

(declare-fun b!108850 () Bool)

(assert (=> b!108850 (= e!70820 (= (apply!99 lt!55995 (select (arr!2075 lt!55542) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 lt!55537) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108850 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 lt!55537)))))

(assert (=> b!108850 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 lt!55542)))))

(declare-fun b!108851 () Bool)

(assert (=> b!108851 (= e!70816 (+!148 call!11556 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun b!108852 () Bool)

(assert (=> b!108852 (= e!70821 (= (apply!99 lt!55995 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!108853 () Bool)

(assert (=> b!108853 (= e!70816 e!70826)))

(assert (=> b!108853 (= c!19180 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108854 () Bool)

(assert (=> b!108854 (= e!70824 e!70817)))

(declare-fun res!53952 () Bool)

(assert (=> b!108854 (= res!53952 call!11552)))

(assert (=> b!108854 (=> (not res!53952) (not e!70817))))

(declare-fun bm!11553 () Bool)

(assert (=> bm!11553 (= call!11553 call!11555)))

(assert (= (and d!30351 c!19178) b!108851))

(assert (= (and d!30351 (not c!19178)) b!108853))

(assert (= (and b!108853 c!19180) b!108838))

(assert (= (and b!108853 (not c!19180)) b!108836))

(assert (= (and b!108836 c!19175) b!108839))

(assert (= (and b!108836 (not c!19175)) b!108849))

(assert (= (or b!108839 b!108849) bm!11551))

(assert (= (or b!108838 bm!11551) bm!11553))

(assert (= (or b!108838 b!108839) bm!11548))

(assert (= (or b!108851 bm!11553) bm!11549))

(assert (= (or b!108851 bm!11548) bm!11550))

(assert (= (and d!30351 res!53949) b!108843))

(assert (= (and d!30351 c!19177) b!108834))

(assert (= (and d!30351 (not c!19177)) b!108841))

(assert (= (and d!30351 res!53953) b!108840))

(assert (= (and b!108840 res!53947) b!108835))

(assert (= (and b!108840 (not res!53946)) b!108847))

(assert (= (and b!108847 res!53950) b!108850))

(assert (= (and b!108840 res!53948) b!108837))

(assert (= (and b!108837 c!19179) b!108842))

(assert (= (and b!108837 (not c!19179)) b!108844))

(assert (= (and b!108842 res!53954) b!108852))

(assert (= (or b!108842 b!108844) bm!11547))

(assert (= (and b!108837 res!53951) b!108846))

(assert (= (and b!108846 c!19176) b!108854))

(assert (= (and b!108846 (not c!19176)) b!108845))

(assert (= (and b!108854 res!53952) b!108848))

(assert (= (or b!108854 b!108845) bm!11552))

(declare-fun b_lambda!4867 () Bool)

(assert (=> (not b_lambda!4867) (not b!108850)))

(assert (=> b!108850 t!5750))

(declare-fun b_and!6711 () Bool)

(assert (= b_and!6707 (and (=> t!5750 result!3509) b_and!6711)))

(assert (=> b!108850 t!5752))

(declare-fun b_and!6713 () Bool)

(assert (= b_and!6709 (and (=> t!5752 result!3511) b_and!6713)))

(declare-fun m!122893 () Bool)

(assert (=> bm!11547 m!122893))

(declare-fun m!122895 () Bool)

(assert (=> b!108847 m!122895))

(assert (=> b!108847 m!122895))

(declare-fun m!122897 () Bool)

(assert (=> b!108847 m!122897))

(assert (=> b!108843 m!122895))

(assert (=> b!108843 m!122895))

(declare-fun m!122899 () Bool)

(assert (=> b!108843 m!122899))

(declare-fun m!122901 () Bool)

(assert (=> bm!11552 m!122901))

(declare-fun m!122903 () Bool)

(assert (=> b!108834 m!122903))

(declare-fun m!122905 () Bool)

(assert (=> b!108834 m!122905))

(declare-fun m!122907 () Bool)

(assert (=> b!108834 m!122907))

(declare-fun m!122909 () Bool)

(assert (=> b!108834 m!122909))

(declare-fun m!122911 () Bool)

(assert (=> b!108834 m!122911))

(declare-fun m!122913 () Bool)

(assert (=> b!108834 m!122913))

(declare-fun m!122915 () Bool)

(assert (=> b!108834 m!122915))

(declare-fun m!122917 () Bool)

(assert (=> b!108834 m!122917))

(declare-fun m!122919 () Bool)

(assert (=> b!108834 m!122919))

(declare-fun m!122921 () Bool)

(assert (=> b!108834 m!122921))

(declare-fun m!122923 () Bool)

(assert (=> b!108834 m!122923))

(assert (=> b!108834 m!122905))

(assert (=> b!108834 m!122917))

(declare-fun m!122925 () Bool)

(assert (=> b!108834 m!122925))

(declare-fun m!122927 () Bool)

(assert (=> b!108834 m!122927))

(declare-fun m!122929 () Bool)

(assert (=> b!108834 m!122929))

(assert (=> b!108834 m!122911))

(declare-fun m!122931 () Bool)

(assert (=> b!108834 m!122931))

(assert (=> b!108834 m!122895))

(declare-fun m!122933 () Bool)

(assert (=> b!108834 m!122933))

(assert (=> b!108834 m!122919))

(declare-fun m!122935 () Bool)

(assert (=> b!108851 m!122935))

(assert (=> b!108850 m!122895))

(assert (=> b!108850 m!122895))

(declare-fun m!122937 () Bool)

(assert (=> b!108850 m!122937))

(declare-fun m!122939 () Bool)

(assert (=> b!108850 m!122939))

(assert (=> b!108850 m!121727))

(declare-fun m!122941 () Bool)

(assert (=> b!108850 m!122941))

(assert (=> b!108850 m!121727))

(assert (=> b!108850 m!122939))

(assert (=> bm!11549 m!122923))

(assert (=> b!108835 m!122895))

(assert (=> b!108835 m!122895))

(assert (=> b!108835 m!122899))

(declare-fun m!122943 () Bool)

(assert (=> b!108848 m!122943))

(declare-fun m!122945 () Bool)

(assert (=> bm!11550 m!122945))

(declare-fun m!122947 () Bool)

(assert (=> b!108852 m!122947))

(assert (=> d!30351 m!121327))

(assert (=> d!29865 d!30351))

(declare-fun d!30353 () Bool)

(declare-fun e!70830 () Bool)

(assert (=> d!30353 e!70830))

(declare-fun res!53957 () Bool)

(assert (=> d!30353 (=> (not res!53957) (not e!70830))))

(assert (=> d!30353 (= res!53957 (and (bvsge (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000000) (bvslt (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (size!2331 (_keys!4316 newMap!16)))))))

(declare-fun lt!56013 () Unit!3321)

(declare-fun choose!102 ((_ BitVec 64) array!4375 (_ BitVec 32) (_ BitVec 32)) Unit!3321)

(assert (=> d!30353 (= lt!56013 (choose!102 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (mask!6764 newMap!16)))))

(assert (=> d!30353 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30353 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (mask!6764 newMap!16)) lt!56013)))

(declare-fun b!108857 () Bool)

(assert (=> b!108857 (= e!70830 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (mask!6764 newMap!16)))))

(assert (= (and d!30353 res!53957) b!108857))

(assert (=> d!30353 m!120979))

(declare-fun m!122949 () Bool)

(assert (=> d!30353 m!122949))

(assert (=> d!30353 m!121327))

(assert (=> b!108857 m!121373))

(assert (=> b!108857 m!121389))

(assert (=> d!29865 d!30353))

(declare-fun b!108858 () Bool)

(declare-fun e!70833 () Bool)

(declare-fun call!11557 () Bool)

(assert (=> b!108858 (= e!70833 call!11557)))

(declare-fun e!70834 () Bool)

(declare-fun b!108859 () Bool)

(assert (=> b!108859 (= e!70834 (contains!837 lt!55546 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) lt!55538)))))

(declare-fun c!19181 () Bool)

(declare-fun bm!11554 () Bool)

(assert (=> bm!11554 (= call!11557 (arrayNoDuplicates!0 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (bvadd lt!55538 #b00000000000000000000000000000001) (ite c!19181 (Cons!1622 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) lt!55538) lt!55546) lt!55546)))))

(declare-fun b!108861 () Bool)

(assert (=> b!108861 (= e!70833 call!11557)))

(declare-fun b!108862 () Bool)

(declare-fun e!70831 () Bool)

(declare-fun e!70832 () Bool)

(assert (=> b!108862 (= e!70831 e!70832)))

(declare-fun res!53960 () Bool)

(assert (=> b!108862 (=> (not res!53960) (not e!70832))))

(assert (=> b!108862 (= res!53960 (not e!70834))))

(declare-fun res!53958 () Bool)

(assert (=> b!108862 (=> (not res!53958) (not e!70834))))

(assert (=> b!108862 (= res!53958 (validKeyInArray!0 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) lt!55538)))))

(declare-fun d!30355 () Bool)

(declare-fun res!53959 () Bool)

(assert (=> d!30355 (=> res!53959 e!70831)))

(assert (=> d!30355 (= res!53959 (bvsge lt!55538 (size!2331 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))))))))

(assert (=> d!30355 (= (arrayNoDuplicates!0 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) lt!55538 lt!55546) e!70831)))

(declare-fun b!108860 () Bool)

(assert (=> b!108860 (= e!70832 e!70833)))

(assert (=> b!108860 (= c!19181 (validKeyInArray!0 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) lt!55538)))))

(assert (= (and d!30355 (not res!53959)) b!108862))

(assert (= (and b!108862 res!53958) b!108859))

(assert (= (and b!108862 res!53960) b!108860))

(assert (= (and b!108860 c!19181) b!108861))

(assert (= (and b!108860 (not c!19181)) b!108858))

(assert (= (or b!108861 b!108858) bm!11554))

(declare-fun m!122951 () Bool)

(assert (=> b!108859 m!122951))

(assert (=> b!108859 m!122951))

(declare-fun m!122953 () Bool)

(assert (=> b!108859 m!122953))

(assert (=> bm!11554 m!122951))

(declare-fun m!122955 () Bool)

(assert (=> bm!11554 m!122955))

(assert (=> b!108862 m!122951))

(assert (=> b!108862 m!122951))

(declare-fun m!122957 () Bool)

(assert (=> b!108862 m!122957))

(assert (=> b!108860 m!122951))

(assert (=> b!108860 m!122951))

(assert (=> b!108860 m!122957))

(assert (=> d!29865 d!30355))

(declare-fun d!30357 () Bool)

(assert (=> d!30357 (= (arrayCountValidKeys!0 lt!55526 (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (bvadd (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!56016 () Unit!3321)

(declare-fun choose!2 (array!4375 (_ BitVec 32)) Unit!3321)

(assert (=> d!30357 (= lt!56016 (choose!2 lt!55526 (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411))))))

(declare-fun e!70837 () Bool)

(assert (=> d!30357 e!70837))

(declare-fun res!53965 () Bool)

(assert (=> d!30357 (=> (not res!53965) (not e!70837))))

(assert (=> d!30357 (= res!53965 (and (bvsge (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000000) (bvslt (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (size!2331 lt!55526))))))

(assert (=> d!30357 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!55526 (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411))) lt!56016)))

(declare-fun b!108867 () Bool)

(declare-fun res!53966 () Bool)

(assert (=> b!108867 (=> (not res!53966) (not e!70837))))

(assert (=> b!108867 (= res!53966 (validKeyInArray!0 (select (arr!2075 lt!55526) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)))))))

(declare-fun b!108868 () Bool)

(assert (=> b!108868 (= e!70837 (bvslt (size!2331 lt!55526) #b01111111111111111111111111111111))))

(assert (= (and d!30357 res!53965) b!108867))

(assert (= (and b!108867 res!53966) b!108868))

(assert (=> d!30357 m!121371))

(declare-fun m!122959 () Bool)

(assert (=> d!30357 m!122959))

(declare-fun m!122961 () Bool)

(assert (=> b!108867 m!122961))

(assert (=> b!108867 m!122961))

(declare-fun m!122963 () Bool)

(assert (=> b!108867 m!122963))

(assert (=> d!29865 d!30357))

(declare-fun b!108879 () Bool)

(declare-fun e!70843 () Bool)

(assert (=> b!108879 (= e!70843 (bvslt (size!2331 (_keys!4316 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!108878 () Bool)

(declare-fun res!53977 () Bool)

(assert (=> b!108878 (=> (not res!53977) (not e!70843))))

(assert (=> b!108878 (= res!53977 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108880 () Bool)

(declare-fun e!70842 () Bool)

(assert (=> b!108880 (= e!70842 (= (arrayCountValidKeys!0 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4316 newMap!16) #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!30359 () Bool)

(assert (=> d!30359 e!70842))

(declare-fun res!53976 () Bool)

(assert (=> d!30359 (=> (not res!53976) (not e!70842))))

(assert (=> d!30359 (= res!53976 (and (bvsge (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000000) (bvslt (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (size!2331 (_keys!4316 newMap!16)))))))

(declare-fun lt!56019 () Unit!3321)

(declare-fun choose!1 (array!4375 (_ BitVec 32) (_ BitVec 64)) Unit!3321)

(assert (=> d!30359 (= lt!56019 (choose!1 (_keys!4316 newMap!16) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30359 e!70843))

(declare-fun res!53978 () Bool)

(assert (=> d!30359 (=> (not res!53978) (not e!70843))))

(assert (=> d!30359 (= res!53978 (and (bvsge (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000000) (bvslt (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (size!2331 (_keys!4316 newMap!16)))))))

(assert (=> d!30359 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4316 newMap!16) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!56019)))

(declare-fun b!108877 () Bool)

(declare-fun res!53975 () Bool)

(assert (=> b!108877 (=> (not res!53975) (not e!70843))))

(assert (=> b!108877 (= res!53975 (not (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411))))))))

(assert (= (and d!30359 res!53978) b!108877))

(assert (= (and b!108877 res!53975) b!108878))

(assert (= (and b!108878 res!53977) b!108879))

(assert (= (and d!30359 res!53976) b!108880))

(assert (=> b!108878 m!120979))

(assert (=> b!108878 m!121303))

(assert (=> b!108880 m!121373))

(assert (=> b!108880 m!121385))

(assert (=> b!108880 m!121307))

(assert (=> d!30359 m!120979))

(declare-fun m!122965 () Bool)

(assert (=> d!30359 m!122965))

(declare-fun m!122967 () Bool)

(assert (=> b!108877 m!122967))

(assert (=> b!108877 m!122967))

(declare-fun m!122969 () Bool)

(assert (=> b!108877 m!122969))

(assert (=> d!29865 d!30359))

(declare-fun d!30361 () Bool)

(declare-fun e!70845 () Bool)

(assert (=> d!30361 e!70845))

(declare-fun res!53979 () Bool)

(assert (=> d!30361 (=> res!53979 e!70845)))

(declare-fun lt!56021 () Bool)

(assert (=> d!30361 (= res!53979 (not lt!56021))))

(declare-fun lt!56022 () Bool)

(assert (=> d!30361 (= lt!56021 lt!56022)))

(declare-fun lt!56020 () Unit!3321)

(declare-fun e!70844 () Unit!3321)

(assert (=> d!30361 (= lt!56020 e!70844)))

(declare-fun c!19182 () Bool)

(assert (=> d!30361 (= c!19182 lt!56022)))

(assert (=> d!30361 (= lt!56022 (containsKey!161 (toList!808 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30361 (= (contains!834 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!56021)))

(declare-fun b!108881 () Bool)

(declare-fun lt!56023 () Unit!3321)

(assert (=> b!108881 (= e!70844 lt!56023)))

(assert (=> b!108881 (= lt!56023 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108881 (isDefined!110 (getValueByKey!157 (toList!808 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108882 () Bool)

(declare-fun Unit!3368 () Unit!3321)

(assert (=> b!108882 (= e!70844 Unit!3368)))

(declare-fun b!108883 () Bool)

(assert (=> b!108883 (= e!70845 (isDefined!110 (getValueByKey!157 (toList!808 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!30361 c!19182) b!108881))

(assert (= (and d!30361 (not c!19182)) b!108882))

(assert (= (and d!30361 (not res!53979)) b!108883))

(assert (=> d!30361 m!120979))

(declare-fun m!122971 () Bool)

(assert (=> d!30361 m!122971))

(assert (=> b!108881 m!120979))

(declare-fun m!122973 () Bool)

(assert (=> b!108881 m!122973))

(assert (=> b!108881 m!120979))

(declare-fun m!122975 () Bool)

(assert (=> b!108881 m!122975))

(assert (=> b!108881 m!122975))

(declare-fun m!122977 () Bool)

(assert (=> b!108881 m!122977))

(assert (=> b!108883 m!120979))

(assert (=> b!108883 m!122975))

(assert (=> b!108883 m!122975))

(assert (=> b!108883 m!122977))

(assert (=> d!29865 d!30361))

(assert (=> d!29865 d!29845))

(assert (=> d!29865 d!30033))

(declare-fun bm!11555 () Bool)

(declare-fun call!11558 () Bool)

(assert (=> bm!11555 (= call!11558 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (mask!6764 newMap!16)))))

(declare-fun d!30363 () Bool)

(declare-fun res!53981 () Bool)

(declare-fun e!70847 () Bool)

(assert (=> d!30363 (=> res!53981 e!70847)))

(assert (=> d!30363 (= res!53981 (bvsge #b00000000000000000000000000000000 (size!2331 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))))))))

(assert (=> d!30363 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (mask!6764 newMap!16)) e!70847)))

(declare-fun b!108884 () Bool)

(declare-fun e!70846 () Bool)

(assert (=> b!108884 (= e!70846 call!11558)))

(declare-fun b!108885 () Bool)

(declare-fun e!70848 () Bool)

(assert (=> b!108885 (= e!70846 e!70848)))

(declare-fun lt!56024 () (_ BitVec 64))

(assert (=> b!108885 (= lt!56024 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56026 () Unit!3321)

(assert (=> b!108885 (= lt!56026 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) lt!56024 #b00000000000000000000000000000000))))

(assert (=> b!108885 (arrayContainsKey!0 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) lt!56024 #b00000000000000000000000000000000)))

(declare-fun lt!56025 () Unit!3321)

(assert (=> b!108885 (= lt!56025 lt!56026)))

(declare-fun res!53980 () Bool)

(assert (=> b!108885 (= res!53980 (= (seekEntryOrOpen!0 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000) (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (mask!6764 newMap!16)) (Found!260 #b00000000000000000000000000000000)))))

(assert (=> b!108885 (=> (not res!53980) (not e!70848))))

(declare-fun b!108886 () Bool)

(assert (=> b!108886 (= e!70848 call!11558)))

(declare-fun b!108887 () Bool)

(assert (=> b!108887 (= e!70847 e!70846)))

(declare-fun c!19183 () Bool)

(assert (=> b!108887 (= c!19183 (validKeyInArray!0 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!30363 (not res!53981)) b!108887))

(assert (= (and b!108887 c!19183) b!108885))

(assert (= (and b!108887 (not c!19183)) b!108884))

(assert (= (and b!108885 res!53980) b!108886))

(assert (= (or b!108886 b!108884) bm!11555))

(declare-fun m!122979 () Bool)

(assert (=> bm!11555 m!122979))

(declare-fun m!122981 () Bool)

(assert (=> b!108885 m!122981))

(declare-fun m!122983 () Bool)

(assert (=> b!108885 m!122983))

(declare-fun m!122985 () Bool)

(assert (=> b!108885 m!122985))

(assert (=> b!108885 m!122981))

(declare-fun m!122987 () Bool)

(assert (=> b!108885 m!122987))

(assert (=> b!108887 m!122981))

(assert (=> b!108887 m!122981))

(declare-fun m!122989 () Bool)

(assert (=> b!108887 m!122989))

(assert (=> d!29865 d!30363))

(declare-fun d!30365 () Bool)

(assert (=> d!30365 (arrayContainsKey!0 lt!55536 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!56029 () Unit!3321)

(declare-fun choose!13 (array!4375 (_ BitVec 64) (_ BitVec 32)) Unit!3321)

(assert (=> d!30365 (= lt!56029 (choose!13 lt!55536 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411))))))

(assert (=> d!30365 (bvsge (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000000)))

(assert (=> d!30365 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!55536 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411))) lt!56029)))

(declare-fun bs!4484 () Bool)

(assert (= bs!4484 d!30365))

(assert (=> bs!4484 m!120979))

(assert (=> bs!4484 m!121393))

(assert (=> bs!4484 m!120979))

(declare-fun m!122991 () Bool)

(assert (=> bs!4484 m!122991))

(assert (=> d!29865 d!30365))

(declare-fun d!30367 () Bool)

(declare-fun e!70849 () Bool)

(assert (=> d!30367 e!70849))

(declare-fun res!53982 () Bool)

(assert (=> d!30367 (=> (not res!53982) (not e!70849))))

(assert (=> d!30367 (= res!53982 (and (bvsge (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000000) (bvslt (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (size!2331 lt!55542))))))

(declare-fun lt!56030 () Unit!3321)

(assert (=> d!30367 (= lt!56030 (choose!675 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (defaultEntry!2606 newMap!16)))))

(assert (=> d!30367 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30367 (= (lemmaValidKeyInArrayIsInListMap!109 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (defaultEntry!2606 newMap!16)) lt!56030)))

(declare-fun b!108888 () Bool)

(assert (=> b!108888 (= e!70849 (contains!834 (getCurrentListMap!493 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2075 lt!55542) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)))))))

(assert (= (and d!30367 res!53982) b!108888))

(declare-fun m!122993 () Bool)

(assert (=> d!30367 m!122993))

(assert (=> d!30367 m!121327))

(assert (=> b!108888 m!121375))

(declare-fun m!122995 () Bool)

(assert (=> b!108888 m!122995))

(assert (=> b!108888 m!121375))

(assert (=> b!108888 m!122995))

(declare-fun m!122997 () Bool)

(assert (=> b!108888 m!122997))

(assert (=> d!29865 d!30367))

(declare-fun d!30369 () Bool)

(declare-fun res!53983 () Bool)

(declare-fun e!70850 () Bool)

(assert (=> d!30369 (=> res!53983 e!70850)))

(assert (=> d!30369 (= res!53983 (= (select (arr!2075 lt!55536) #b00000000000000000000000000000000) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30369 (= (arrayContainsKey!0 lt!55536 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000) e!70850)))

(declare-fun b!108889 () Bool)

(declare-fun e!70851 () Bool)

(assert (=> b!108889 (= e!70850 e!70851)))

(declare-fun res!53984 () Bool)

(assert (=> b!108889 (=> (not res!53984) (not e!70851))))

(assert (=> b!108889 (= res!53984 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2331 lt!55536)))))

(declare-fun b!108890 () Bool)

(assert (=> b!108890 (= e!70851 (arrayContainsKey!0 lt!55536 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30369 (not res!53983)) b!108889))

(assert (= (and b!108889 res!53984) b!108890))

(declare-fun m!122999 () Bool)

(assert (=> d!30369 m!122999))

(assert (=> b!108890 m!120979))

(declare-fun m!123001 () Bool)

(assert (=> b!108890 m!123001))

(assert (=> d!29865 d!30369))

(declare-fun d!30371 () Bool)

(declare-fun e!70852 () Bool)

(assert (=> d!30371 e!70852))

(declare-fun res!53985 () Bool)

(assert (=> d!30371 (=> (not res!53985) (not e!70852))))

(declare-fun lt!56031 () ListLongMap!1585)

(assert (=> d!30371 (= res!53985 (contains!834 lt!56031 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun lt!56033 () List!1625)

(assert (=> d!30371 (= lt!56031 (ListLongMap!1586 lt!56033))))

(declare-fun lt!56032 () Unit!3321)

(declare-fun lt!56034 () Unit!3321)

(assert (=> d!30371 (= lt!56032 lt!56034)))

(assert (=> d!30371 (= (getValueByKey!157 lt!56033 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!30371 (= lt!56034 (lemmaContainsTupThenGetReturnValue!73 lt!56033 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!30371 (= lt!56033 (insertStrictlySorted!76 (toList!808 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!30371 (= (+!148 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) lt!56031)))

(declare-fun b!108891 () Bool)

(declare-fun res!53986 () Bool)

(assert (=> b!108891 (=> (not res!53986) (not e!70852))))

(assert (=> b!108891 (= res!53986 (= (getValueByKey!157 (toList!808 lt!56031) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun b!108892 () Bool)

(assert (=> b!108892 (= e!70852 (contains!836 (toList!808 lt!56031) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(assert (= (and d!30371 res!53985) b!108891))

(assert (= (and b!108891 res!53986) b!108892))

(declare-fun m!123003 () Bool)

(assert (=> d!30371 m!123003))

(declare-fun m!123005 () Bool)

(assert (=> d!30371 m!123005))

(declare-fun m!123007 () Bool)

(assert (=> d!30371 m!123007))

(declare-fun m!123009 () Bool)

(assert (=> d!30371 m!123009))

(declare-fun m!123011 () Bool)

(assert (=> b!108891 m!123011))

(declare-fun m!123013 () Bool)

(assert (=> b!108892 m!123013))

(assert (=> d!29865 d!30371))

(assert (=> d!29865 d!29951))

(declare-fun d!30373 () Bool)

(declare-fun e!70855 () Bool)

(assert (=> d!30373 e!70855))

(declare-fun res!53989 () Bool)

(assert (=> d!30373 (=> (not res!53989) (not e!70855))))

(assert (=> d!30373 (= res!53989 (and (bvsge (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000000) (bvslt (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (size!2331 (_keys!4316 newMap!16)))))))

(declare-fun lt!56037 () Unit!3321)

(declare-fun choose!41 (array!4375 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1626) Unit!3321)

(assert (=> d!30373 (= lt!56037 (choose!41 (_keys!4316 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) lt!55538 lt!55546))))

(assert (=> d!30373 (bvslt (size!2331 (_keys!4316 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!30373 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4316 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) lt!55538 lt!55546) lt!56037)))

(declare-fun b!108895 () Bool)

(assert (=> b!108895 (= e!70855 (arrayNoDuplicates!0 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) lt!55538 lt!55546))))

(assert (= (and d!30373 res!53989) b!108895))

(assert (=> d!30373 m!120979))

(declare-fun m!123015 () Bool)

(assert (=> d!30373 m!123015))

(assert (=> b!108895 m!121373))

(assert (=> b!108895 m!121395))

(assert (=> d!29865 d!30373))

(declare-fun d!30375 () Bool)

(declare-fun e!70857 () Bool)

(assert (=> d!30375 e!70857))

(declare-fun res!53990 () Bool)

(assert (=> d!30375 (=> res!53990 e!70857)))

(declare-fun lt!56039 () Bool)

(assert (=> d!30375 (= res!53990 (not lt!56039))))

(declare-fun lt!56040 () Bool)

(assert (=> d!30375 (= lt!56039 lt!56040)))

(declare-fun lt!56038 () Unit!3321)

(declare-fun e!70856 () Unit!3321)

(assert (=> d!30375 (= lt!56038 e!70856)))

(declare-fun c!19184 () Bool)

(assert (=> d!30375 (= c!19184 lt!56040)))

(assert (=> d!30375 (= lt!56040 (containsKey!161 (toList!808 (getCurrentListMap!493 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)))))))

(assert (=> d!30375 (= (contains!834 (getCurrentListMap!493 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)))) lt!56039)))

(declare-fun b!108896 () Bool)

(declare-fun lt!56041 () Unit!3321)

(assert (=> b!108896 (= e!70856 lt!56041)))

(assert (=> b!108896 (= lt!56041 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 (getCurrentListMap!493 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)))))))

(assert (=> b!108896 (isDefined!110 (getValueByKey!157 (toList!808 (getCurrentListMap!493 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)))))))

(declare-fun b!108897 () Bool)

(declare-fun Unit!3369 () Unit!3321)

(assert (=> b!108897 (= e!70856 Unit!3369)))

(declare-fun b!108898 () Bool)

(assert (=> b!108898 (= e!70857 (isDefined!110 (getValueByKey!157 (toList!808 (getCurrentListMap!493 lt!55542 lt!55537 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411))))))))

(assert (= (and d!30375 c!19184) b!108896))

(assert (= (and d!30375 (not c!19184)) b!108897))

(assert (= (and d!30375 (not res!53990)) b!108898))

(assert (=> d!30375 m!121361))

(declare-fun m!123017 () Bool)

(assert (=> d!30375 m!123017))

(assert (=> b!108896 m!121361))

(declare-fun m!123019 () Bool)

(assert (=> b!108896 m!123019))

(assert (=> b!108896 m!121361))

(declare-fun m!123021 () Bool)

(assert (=> b!108896 m!123021))

(assert (=> b!108896 m!123021))

(declare-fun m!123023 () Bool)

(assert (=> b!108896 m!123023))

(assert (=> b!108898 m!121361))

(assert (=> b!108898 m!123021))

(assert (=> b!108898 m!123021))

(assert (=> b!108898 m!123023))

(assert (=> d!29865 d!30375))

(assert (=> d!29865 d!29989))

(declare-fun bm!11556 () Bool)

(declare-fun call!11559 () (_ BitVec 32))

(assert (=> bm!11556 (= call!11559 (arrayCountValidKeys!0 lt!55526 (bvadd (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000001) (bvadd (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000001)))))

(declare-fun b!108899 () Bool)

(declare-fun e!70858 () (_ BitVec 32))

(declare-fun e!70859 () (_ BitVec 32))

(assert (=> b!108899 (= e!70858 e!70859)))

(declare-fun c!19186 () Bool)

(assert (=> b!108899 (= c!19186 (validKeyInArray!0 (select (arr!2075 lt!55526) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)))))))

(declare-fun b!108900 () Bool)

(assert (=> b!108900 (= e!70859 (bvadd #b00000000000000000000000000000001 call!11559))))

(declare-fun d!30377 () Bool)

(declare-fun lt!56042 () (_ BitVec 32))

(assert (=> d!30377 (and (bvsge lt!56042 #b00000000000000000000000000000000) (bvsle lt!56042 (bvsub (size!2331 lt!55526) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)))))))

(assert (=> d!30377 (= lt!56042 e!70858)))

(declare-fun c!19185 () Bool)

(assert (=> d!30377 (= c!19185 (bvsge (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (bvadd (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000001)))))

(assert (=> d!30377 (and (bvsle (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (bvadd (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000001)) (bvsge (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000001) (size!2331 lt!55526)))))

(assert (=> d!30377 (= (arrayCountValidKeys!0 lt!55526 (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (bvadd (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000001)) lt!56042)))

(declare-fun b!108901 () Bool)

(assert (=> b!108901 (= e!70858 #b00000000000000000000000000000000)))

(declare-fun b!108902 () Bool)

(assert (=> b!108902 (= e!70859 call!11559)))

(assert (= (and d!30377 c!19185) b!108901))

(assert (= (and d!30377 (not c!19185)) b!108899))

(assert (= (and b!108899 c!19186) b!108900))

(assert (= (and b!108899 (not c!19186)) b!108902))

(assert (= (or b!108900 b!108902) bm!11556))

(declare-fun m!123025 () Bool)

(assert (=> bm!11556 m!123025))

(assert (=> b!108899 m!122961))

(assert (=> b!108899 m!122961))

(assert (=> b!108899 m!122963))

(assert (=> d!29865 d!30377))

(declare-fun bm!11557 () Bool)

(declare-fun call!11560 () Bool)

(declare-fun lt!56049 () ListLongMap!1585)

(assert (=> bm!11557 (= call!11560 (contains!834 lt!56049 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108903 () Bool)

(declare-fun e!70863 () Unit!3321)

(declare-fun lt!56055 () Unit!3321)

(assert (=> b!108903 (= e!70863 lt!56055)))

(declare-fun lt!56043 () ListLongMap!1585)

(assert (=> b!108903 (= lt!56043 (getCurrentListMapNoExtraKeys!114 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56061 () (_ BitVec 64))

(assert (=> b!108903 (= lt!56061 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56058 () (_ BitVec 64))

(assert (=> b!108903 (= lt!56058 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56056 () Unit!3321)

(assert (=> b!108903 (= lt!56056 (addStillContains!75 lt!56043 lt!56061 (zeroValue!2479 newMap!16) lt!56058))))

(assert (=> b!108903 (contains!834 (+!148 lt!56043 (tuple2!2429 lt!56061 (zeroValue!2479 newMap!16))) lt!56058)))

(declare-fun lt!56048 () Unit!3321)

(assert (=> b!108903 (= lt!56048 lt!56056)))

(declare-fun lt!56051 () ListLongMap!1585)

(assert (=> b!108903 (= lt!56051 (getCurrentListMapNoExtraKeys!114 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56060 () (_ BitVec 64))

(assert (=> b!108903 (= lt!56060 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56063 () (_ BitVec 64))

(assert (=> b!108903 (= lt!56063 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56059 () Unit!3321)

(assert (=> b!108903 (= lt!56059 (addApplyDifferent!75 lt!56051 lt!56060 (minValue!2479 newMap!16) lt!56063))))

(assert (=> b!108903 (= (apply!99 (+!148 lt!56051 (tuple2!2429 lt!56060 (minValue!2479 newMap!16))) lt!56063) (apply!99 lt!56051 lt!56063))))

(declare-fun lt!56064 () Unit!3321)

(assert (=> b!108903 (= lt!56064 lt!56059)))

(declare-fun lt!56054 () ListLongMap!1585)

(assert (=> b!108903 (= lt!56054 (getCurrentListMapNoExtraKeys!114 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56044 () (_ BitVec 64))

(assert (=> b!108903 (= lt!56044 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56057 () (_ BitVec 64))

(assert (=> b!108903 (= lt!56057 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56053 () Unit!3321)

(assert (=> b!108903 (= lt!56053 (addApplyDifferent!75 lt!56054 lt!56044 (zeroValue!2479 newMap!16) lt!56057))))

(assert (=> b!108903 (= (apply!99 (+!148 lt!56054 (tuple2!2429 lt!56044 (zeroValue!2479 newMap!16))) lt!56057) (apply!99 lt!56054 lt!56057))))

(declare-fun lt!56045 () Unit!3321)

(assert (=> b!108903 (= lt!56045 lt!56053)))

(declare-fun lt!56050 () ListLongMap!1585)

(assert (=> b!108903 (= lt!56050 (getCurrentListMapNoExtraKeys!114 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56047 () (_ BitVec 64))

(assert (=> b!108903 (= lt!56047 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56062 () (_ BitVec 64))

(assert (=> b!108903 (= lt!56062 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!108903 (= lt!56055 (addApplyDifferent!75 lt!56050 lt!56047 (minValue!2479 newMap!16) lt!56062))))

(assert (=> b!108903 (= (apply!99 (+!148 lt!56050 (tuple2!2429 lt!56047 (minValue!2479 newMap!16))) lt!56062) (apply!99 lt!56050 lt!56062))))

(declare-fun bm!11558 () Bool)

(declare-fun call!11561 () ListLongMap!1585)

(declare-fun call!11566 () ListLongMap!1585)

(assert (=> bm!11558 (= call!11561 call!11566)))

(declare-fun e!70860 () Bool)

(declare-fun b!108904 () Bool)

(assert (=> b!108904 (= e!70860 (validKeyInArray!0 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!108906 () Bool)

(declare-fun res!53996 () Bool)

(declare-fun e!70867 () Bool)

(assert (=> b!108906 (=> (not res!53996) (not e!70867))))

(declare-fun e!70870 () Bool)

(assert (=> b!108906 (= res!53996 e!70870)))

(declare-fun c!19191 () Bool)

(assert (=> b!108906 (= c!19191 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108907 () Bool)

(declare-fun e!70871 () ListLongMap!1585)

(assert (=> b!108907 (= e!70871 call!11561)))

(declare-fun b!108908 () Bool)

(declare-fun e!70864 () ListLongMap!1585)

(assert (=> b!108908 (= e!70864 call!11561)))

(declare-fun b!108909 () Bool)

(declare-fun res!53993 () Bool)

(assert (=> b!108909 (=> (not res!53993) (not e!70867))))

(declare-fun e!70872 () Bool)

(assert (=> b!108909 (= res!53993 e!70872)))

(declare-fun res!53991 () Bool)

(assert (=> b!108909 (=> res!53991 e!70872)))

(assert (=> b!108909 (= res!53991 (not e!70860))))

(declare-fun res!53992 () Bool)

(assert (=> b!108909 (=> (not res!53992) (not e!70860))))

(assert (=> b!108909 (= res!53992 (bvslt #b00000000000000000000000000000000 (size!2331 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))))))))

(declare-fun bm!11559 () Bool)

(declare-fun call!11565 () ListLongMap!1585)

(assert (=> bm!11559 (= call!11565 (getCurrentListMapNoExtraKeys!114 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun c!19190 () Bool)

(declare-fun call!11563 () ListLongMap!1585)

(declare-fun bm!11560 () Bool)

(declare-fun c!19192 () Bool)

(declare-fun call!11564 () ListLongMap!1585)

(assert (=> bm!11560 (= call!11566 (+!148 (ite c!19190 call!11565 (ite c!19192 call!11563 call!11564)) (ite (or c!19190 c!19192) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!108910 () Bool)

(declare-fun Unit!3370 () Unit!3321)

(assert (=> b!108910 (= e!70863 Unit!3370)))

(declare-fun b!108911 () Bool)

(declare-fun e!70866 () Bool)

(assert (=> b!108911 (= e!70870 e!70866)))

(declare-fun res!53999 () Bool)

(assert (=> b!108911 (= res!53999 call!11560)))

(assert (=> b!108911 (=> (not res!53999) (not e!70866))))

(declare-fun d!30379 () Bool)

(assert (=> d!30379 e!70867))

(declare-fun res!53998 () Bool)

(assert (=> d!30379 (=> (not res!53998) (not e!70867))))

(assert (=> d!30379 (= res!53998 (or (bvsge #b00000000000000000000000000000000 (size!2331 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))))))))))

(declare-fun lt!56052 () ListLongMap!1585)

(assert (=> d!30379 (= lt!56049 lt!56052)))

(declare-fun lt!56046 () Unit!3321)

(assert (=> d!30379 (= lt!56046 e!70863)))

(declare-fun c!19189 () Bool)

(declare-fun e!70868 () Bool)

(assert (=> d!30379 (= c!19189 e!70868)))

(declare-fun res!53994 () Bool)

(assert (=> d!30379 (=> (not res!53994) (not e!70868))))

(assert (=> d!30379 (= res!53994 (bvslt #b00000000000000000000000000000000 (size!2331 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))))))))

(declare-fun e!70861 () ListLongMap!1585)

(assert (=> d!30379 (= lt!56052 e!70861)))

(assert (=> d!30379 (= c!19190 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30379 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30379 (= (getCurrentListMap!493 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56049)))

(declare-fun b!108905 () Bool)

(declare-fun c!19187 () Bool)

(assert (=> b!108905 (= c!19187 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108905 (= e!70871 e!70864)))

(declare-fun b!108912 () Bool)

(assert (=> b!108912 (= e!70868 (validKeyInArray!0 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!108913 () Bool)

(assert (=> b!108913 (= e!70870 (not call!11560))))

(declare-fun b!108914 () Bool)

(declare-fun e!70869 () Bool)

(declare-fun call!11562 () Bool)

(assert (=> b!108914 (= e!70869 (not call!11562))))

(declare-fun b!108915 () Bool)

(assert (=> b!108915 (= e!70867 e!70869)))

(declare-fun c!19188 () Bool)

(assert (=> b!108915 (= c!19188 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108916 () Bool)

(declare-fun e!70865 () Bool)

(assert (=> b!108916 (= e!70872 e!70865)))

(declare-fun res!53995 () Bool)

(assert (=> b!108916 (=> (not res!53995) (not e!70865))))

(assert (=> b!108916 (= res!53995 (contains!834 lt!56049 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!108916 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))))))))

(declare-fun bm!11561 () Bool)

(assert (=> bm!11561 (= call!11564 call!11563)))

(declare-fun b!108917 () Bool)

(declare-fun e!70862 () Bool)

(assert (=> b!108917 (= e!70862 (= (apply!99 lt!56049 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun bm!11562 () Bool)

(assert (=> bm!11562 (= call!11562 (contains!834 lt!56049 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108918 () Bool)

(assert (=> b!108918 (= e!70864 call!11564)))

(declare-fun b!108919 () Bool)

(assert (=> b!108919 (= e!70865 (= (apply!99 lt!56049 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108919 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))))))))

(assert (=> b!108919 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))))))))

(declare-fun b!108920 () Bool)

(assert (=> b!108920 (= e!70861 (+!148 call!11566 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun b!108921 () Bool)

(assert (=> b!108921 (= e!70866 (= (apply!99 lt!56049 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!108922 () Bool)

(assert (=> b!108922 (= e!70861 e!70871)))

(assert (=> b!108922 (= c!19192 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108923 () Bool)

(assert (=> b!108923 (= e!70869 e!70862)))

(declare-fun res!53997 () Bool)

(assert (=> b!108923 (= res!53997 call!11562)))

(assert (=> b!108923 (=> (not res!53997) (not e!70862))))

(declare-fun bm!11563 () Bool)

(assert (=> bm!11563 (= call!11563 call!11565)))

(assert (= (and d!30379 c!19190) b!108920))

(assert (= (and d!30379 (not c!19190)) b!108922))

(assert (= (and b!108922 c!19192) b!108907))

(assert (= (and b!108922 (not c!19192)) b!108905))

(assert (= (and b!108905 c!19187) b!108908))

(assert (= (and b!108905 (not c!19187)) b!108918))

(assert (= (or b!108908 b!108918) bm!11561))

(assert (= (or b!108907 bm!11561) bm!11563))

(assert (= (or b!108907 b!108908) bm!11558))

(assert (= (or b!108920 bm!11563) bm!11559))

(assert (= (or b!108920 bm!11558) bm!11560))

(assert (= (and d!30379 res!53994) b!108912))

(assert (= (and d!30379 c!19189) b!108903))

(assert (= (and d!30379 (not c!19189)) b!108910))

(assert (= (and d!30379 res!53998) b!108909))

(assert (= (and b!108909 res!53992) b!108904))

(assert (= (and b!108909 (not res!53991)) b!108916))

(assert (= (and b!108916 res!53995) b!108919))

(assert (= (and b!108909 res!53993) b!108906))

(assert (= (and b!108906 c!19191) b!108911))

(assert (= (and b!108906 (not c!19191)) b!108913))

(assert (= (and b!108911 res!53999) b!108921))

(assert (= (or b!108911 b!108913) bm!11557))

(assert (= (and b!108906 res!53996) b!108915))

(assert (= (and b!108915 c!19188) b!108923))

(assert (= (and b!108915 (not c!19188)) b!108914))

(assert (= (and b!108923 res!53997) b!108917))

(assert (= (or b!108923 b!108914) bm!11562))

(declare-fun b_lambda!4869 () Bool)

(assert (=> (not b_lambda!4869) (not b!108919)))

(assert (=> b!108919 t!5750))

(declare-fun b_and!6715 () Bool)

(assert (= b_and!6711 (and (=> t!5750 result!3509) b_and!6715)))

(assert (=> b!108919 t!5752))

(declare-fun b_and!6717 () Bool)

(assert (= b_and!6713 (and (=> t!5752 result!3511) b_and!6717)))

(declare-fun m!123027 () Bool)

(assert (=> bm!11557 m!123027))

(assert (=> b!108916 m!122981))

(assert (=> b!108916 m!122981))

(declare-fun m!123029 () Bool)

(assert (=> b!108916 m!123029))

(assert (=> b!108912 m!122981))

(assert (=> b!108912 m!122981))

(assert (=> b!108912 m!122989))

(declare-fun m!123031 () Bool)

(assert (=> bm!11562 m!123031))

(declare-fun m!123033 () Bool)

(assert (=> b!108903 m!123033))

(declare-fun m!123035 () Bool)

(assert (=> b!108903 m!123035))

(declare-fun m!123037 () Bool)

(assert (=> b!108903 m!123037))

(declare-fun m!123039 () Bool)

(assert (=> b!108903 m!123039))

(declare-fun m!123041 () Bool)

(assert (=> b!108903 m!123041))

(declare-fun m!123043 () Bool)

(assert (=> b!108903 m!123043))

(declare-fun m!123045 () Bool)

(assert (=> b!108903 m!123045))

(declare-fun m!123047 () Bool)

(assert (=> b!108903 m!123047))

(declare-fun m!123049 () Bool)

(assert (=> b!108903 m!123049))

(declare-fun m!123051 () Bool)

(assert (=> b!108903 m!123051))

(declare-fun m!123053 () Bool)

(assert (=> b!108903 m!123053))

(assert (=> b!108903 m!123035))

(assert (=> b!108903 m!123047))

(declare-fun m!123055 () Bool)

(assert (=> b!108903 m!123055))

(declare-fun m!123057 () Bool)

(assert (=> b!108903 m!123057))

(declare-fun m!123059 () Bool)

(assert (=> b!108903 m!123059))

(assert (=> b!108903 m!123041))

(declare-fun m!123061 () Bool)

(assert (=> b!108903 m!123061))

(assert (=> b!108903 m!122981))

(declare-fun m!123063 () Bool)

(assert (=> b!108903 m!123063))

(assert (=> b!108903 m!123049))

(declare-fun m!123065 () Bool)

(assert (=> b!108920 m!123065))

(assert (=> b!108919 m!122981))

(assert (=> b!108919 m!122981))

(declare-fun m!123067 () Bool)

(assert (=> b!108919 m!123067))

(declare-fun m!123069 () Bool)

(assert (=> b!108919 m!123069))

(assert (=> b!108919 m!121727))

(declare-fun m!123071 () Bool)

(assert (=> b!108919 m!123071))

(assert (=> b!108919 m!121727))

(assert (=> b!108919 m!123069))

(assert (=> bm!11559 m!123053))

(assert (=> b!108904 m!122981))

(assert (=> b!108904 m!122981))

(assert (=> b!108904 m!122989))

(declare-fun m!123073 () Bool)

(assert (=> b!108917 m!123073))

(declare-fun m!123075 () Bool)

(assert (=> bm!11560 m!123075))

(declare-fun m!123077 () Bool)

(assert (=> b!108921 m!123077))

(assert (=> d!30379 m!121327))

(assert (=> d!29865 d!30379))

(declare-fun d!30381 () Bool)

(declare-fun e!70875 () Bool)

(assert (=> d!30381 e!70875))

(declare-fun res!54002 () Bool)

(assert (=> d!30381 (=> (not res!54002) (not e!70875))))

(assert (=> d!30381 (= res!54002 (and (bvsge (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) #b00000000000000000000000000000000) (bvslt (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (size!2331 (_keys!4316 newMap!16))) (bvslt (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (size!2332 (_values!2589 newMap!16)))))))

(declare-fun lt!56067 () Unit!3321)

(declare-fun choose!680 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) (_ BitVec 64) V!3235 Int) Unit!3321)

(assert (=> d!30381 (= lt!56067 (choose!680 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 (defaultEntry!2606 newMap!16)))))

(assert (=> d!30381 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30381 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!31 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 (defaultEntry!2606 newMap!16)) lt!56067)))

(declare-fun b!108926 () Bool)

(assert (=> b!108926 (= e!70875 (= (+!148 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (getCurrentListMap!493 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))))))

(assert (= (and d!30381 res!54002) b!108926))

(assert (=> d!30381 m!120979))

(declare-fun m!123079 () Bool)

(assert (=> d!30381 m!123079))

(assert (=> d!30381 m!121327))

(assert (=> b!108926 m!121381))

(assert (=> b!108926 m!121373))

(assert (=> b!108926 m!121175))

(assert (=> b!108926 m!121367))

(assert (=> b!108926 m!121175))

(assert (=> b!108926 m!121357))

(assert (=> d!29865 d!30381))

(declare-fun call!11567 () (_ BitVec 32))

(declare-fun bm!11564 () Bool)

(assert (=> bm!11564 (= call!11567 (arrayCountValidKeys!0 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108927 () Bool)

(declare-fun e!70876 () (_ BitVec 32))

(declare-fun e!70877 () (_ BitVec 32))

(assert (=> b!108927 (= e!70876 e!70877)))

(declare-fun c!19194 () Bool)

(assert (=> b!108927 (= c!19194 (validKeyInArray!0 (select (arr!2075 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!108928 () Bool)

(assert (=> b!108928 (= e!70877 (bvadd #b00000000000000000000000000000001 call!11567))))

(declare-fun d!30383 () Bool)

(declare-fun lt!56068 () (_ BitVec 32))

(assert (=> d!30383 (and (bvsge lt!56068 #b00000000000000000000000000000000) (bvsle lt!56068 (bvsub (size!2331 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!30383 (= lt!56068 e!70876)))

(declare-fun c!19193 () Bool)

(assert (=> d!30383 (= c!19193 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(assert (=> d!30383 (and (bvsle #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2331 (_keys!4316 newMap!16)) (size!2331 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))))))))

(assert (=> d!30383 (= (arrayCountValidKeys!0 (array!4376 (store (arr!2075 (_keys!4316 newMap!16)) (ite c!18918 (index!3192 lt!55411) (index!3189 lt!55411)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (size!2331 (_keys!4316 newMap!16))) #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) lt!56068)))

(declare-fun b!108929 () Bool)

(assert (=> b!108929 (= e!70876 #b00000000000000000000000000000000)))

(declare-fun b!108930 () Bool)

(assert (=> b!108930 (= e!70877 call!11567)))

(assert (= (and d!30383 c!19193) b!108929))

(assert (= (and d!30383 (not c!19193)) b!108927))

(assert (= (and b!108927 c!19194) b!108928))

(assert (= (and b!108927 (not c!19194)) b!108930))

(assert (= (or b!108928 b!108930) bm!11564))

(declare-fun m!123081 () Bool)

(assert (=> bm!11564 m!123081))

(assert (=> b!108927 m!122981))

(assert (=> b!108927 m!122981))

(assert (=> b!108927 m!122989))

(assert (=> d!29865 d!30383))

(declare-fun b!108931 () Bool)

(declare-fun e!70880 () Bool)

(declare-fun call!11568 () Bool)

(assert (=> b!108931 (= e!70880 call!11568)))

(declare-fun b!108932 () Bool)

(declare-fun e!70881 () Bool)

(assert (=> b!108932 (= e!70881 (contains!837 (ite c!18979 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!11565 () Bool)

(declare-fun c!19195 () Bool)

(assert (=> bm!11565 (= call!11568 (arrayNoDuplicates!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19195 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!18979 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623))) (ite c!18979 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)))))))

(declare-fun b!108934 () Bool)

(assert (=> b!108934 (= e!70880 call!11568)))

(declare-fun b!108935 () Bool)

(declare-fun e!70878 () Bool)

(declare-fun e!70879 () Bool)

(assert (=> b!108935 (= e!70878 e!70879)))

(declare-fun res!54005 () Bool)

(assert (=> b!108935 (=> (not res!54005) (not e!70879))))

(assert (=> b!108935 (= res!54005 (not e!70881))))

(declare-fun res!54003 () Bool)

(assert (=> b!108935 (=> (not res!54003) (not e!70881))))

(assert (=> b!108935 (= res!54003 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!30385 () Bool)

(declare-fun res!54004 () Bool)

(assert (=> d!30385 (=> res!54004 e!70878)))

(assert (=> d!30385 (= res!54004 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30385 (= (arrayNoDuplicates!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18979 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623))) e!70878)))

(declare-fun b!108933 () Bool)

(assert (=> b!108933 (= e!70879 e!70880)))

(assert (=> b!108933 (= c!19195 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!30385 (not res!54004)) b!108935))

(assert (= (and b!108935 res!54003) b!108932))

(assert (= (and b!108935 res!54005) b!108933))

(assert (= (and b!108933 c!19195) b!108934))

(assert (= (and b!108933 (not c!19195)) b!108931))

(assert (= (or b!108934 b!108931) bm!11565))

(declare-fun m!123083 () Bool)

(assert (=> b!108932 m!123083))

(assert (=> b!108932 m!123083))

(declare-fun m!123085 () Bool)

(assert (=> b!108932 m!123085))

(assert (=> bm!11565 m!123083))

(declare-fun m!123087 () Bool)

(assert (=> bm!11565 m!123087))

(assert (=> b!108935 m!123083))

(assert (=> b!108935 m!123083))

(declare-fun m!123089 () Bool)

(assert (=> b!108935 m!123089))

(assert (=> b!108933 m!123083))

(assert (=> b!108933 m!123083))

(assert (=> b!108933 m!123089))

(assert (=> bm!11472 d!30385))

(declare-fun d!30387 () Bool)

(declare-fun res!54006 () Bool)

(declare-fun e!70882 () Bool)

(assert (=> d!30387 (=> res!54006 e!70882)))

(assert (=> d!30387 (= res!54006 (and ((_ is Cons!1621) lt!55270) (= (_1!1225 (h!2219 lt!55270)) (_1!1225 lt!55182))))))

(assert (=> d!30387 (= (containsKey!161 lt!55270 (_1!1225 lt!55182)) e!70882)))

(declare-fun b!108936 () Bool)

(declare-fun e!70883 () Bool)

(assert (=> b!108936 (= e!70882 e!70883)))

(declare-fun res!54007 () Bool)

(assert (=> b!108936 (=> (not res!54007) (not e!70883))))

(assert (=> b!108936 (= res!54007 (and (or (not ((_ is Cons!1621) lt!55270)) (bvsle (_1!1225 (h!2219 lt!55270)) (_1!1225 lt!55182))) ((_ is Cons!1621) lt!55270) (bvslt (_1!1225 (h!2219 lt!55270)) (_1!1225 lt!55182))))))

(declare-fun b!108937 () Bool)

(assert (=> b!108937 (= e!70883 (containsKey!161 (t!5741 lt!55270) (_1!1225 lt!55182)))))

(assert (= (and d!30387 (not res!54006)) b!108936))

(assert (= (and b!108936 res!54007) b!108937))

(declare-fun m!123091 () Bool)

(assert (=> b!108937 m!123091))

(assert (=> b!108083 d!30387))

(declare-fun d!30389 () Bool)

(declare-fun e!70885 () Bool)

(assert (=> d!30389 e!70885))

(declare-fun res!54008 () Bool)

(assert (=> d!30389 (=> res!54008 e!70885)))

(declare-fun lt!56070 () Bool)

(assert (=> d!30389 (= res!54008 (not lt!56070))))

(declare-fun lt!56071 () Bool)

(assert (=> d!30389 (= lt!56070 lt!56071)))

(declare-fun lt!56069 () Unit!3321)

(declare-fun e!70884 () Unit!3321)

(assert (=> d!30389 (= lt!56069 e!70884)))

(declare-fun c!19196 () Bool)

(assert (=> d!30389 (= c!19196 lt!56071)))

(assert (=> d!30389 (= lt!56071 (containsKey!161 (toList!808 (getCurrentListMap!493 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))

(assert (=> d!30389 (= (contains!834 (getCurrentListMap!493 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))) lt!56070)))

(declare-fun b!108938 () Bool)

(declare-fun lt!56072 () Unit!3321)

(assert (=> b!108938 (= e!70884 lt!56072)))

(assert (=> b!108938 (= lt!56072 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 (getCurrentListMap!493 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))

(assert (=> b!108938 (isDefined!110 (getValueByKey!157 (toList!808 (getCurrentListMap!493 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))

(declare-fun b!108939 () Bool)

(declare-fun Unit!3371 () Unit!3321)

(assert (=> b!108939 (= e!70884 Unit!3371)))

(declare-fun b!108940 () Bool)

(assert (=> b!108940 (= e!70885 (isDefined!110 (getValueByKey!157 (toList!808 (getCurrentListMap!493 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411)))))))

(assert (= (and d!30389 c!19196) b!108938))

(assert (= (and d!30389 (not c!19196)) b!108939))

(assert (= (and d!30389 (not res!54008)) b!108940))

(assert (=> d!30389 m!121265))

(declare-fun m!123093 () Bool)

(assert (=> d!30389 m!123093))

(assert (=> b!108938 m!121265))

(declare-fun m!123095 () Bool)

(assert (=> b!108938 m!123095))

(assert (=> b!108938 m!121265))

(declare-fun m!123097 () Bool)

(assert (=> b!108938 m!123097))

(assert (=> b!108938 m!123097))

(declare-fun m!123099 () Bool)

(assert (=> b!108938 m!123099))

(assert (=> b!108940 m!121265))

(assert (=> b!108940 m!123097))

(assert (=> b!108940 m!123097))

(assert (=> b!108940 m!123099))

(assert (=> b!108151 d!30389))

(declare-fun bm!11566 () Bool)

(declare-fun call!11569 () Bool)

(declare-fun lt!56079 () ListLongMap!1585)

(assert (=> bm!11566 (= call!11569 (contains!834 lt!56079 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108941 () Bool)

(declare-fun e!70889 () Unit!3321)

(declare-fun lt!56085 () Unit!3321)

(assert (=> b!108941 (= e!70889 lt!56085)))

(declare-fun lt!56073 () ListLongMap!1585)

(assert (=> b!108941 (= lt!56073 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56091 () (_ BitVec 64))

(assert (=> b!108941 (= lt!56091 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56088 () (_ BitVec 64))

(assert (=> b!108941 (= lt!56088 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56086 () Unit!3321)

(assert (=> b!108941 (= lt!56086 (addStillContains!75 lt!56073 lt!56091 (zeroValue!2479 newMap!16) lt!56088))))

(assert (=> b!108941 (contains!834 (+!148 lt!56073 (tuple2!2429 lt!56091 (zeroValue!2479 newMap!16))) lt!56088)))

(declare-fun lt!56078 () Unit!3321)

(assert (=> b!108941 (= lt!56078 lt!56086)))

(declare-fun lt!56081 () ListLongMap!1585)

(assert (=> b!108941 (= lt!56081 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56090 () (_ BitVec 64))

(assert (=> b!108941 (= lt!56090 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56093 () (_ BitVec 64))

(assert (=> b!108941 (= lt!56093 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56089 () Unit!3321)

(assert (=> b!108941 (= lt!56089 (addApplyDifferent!75 lt!56081 lt!56090 (minValue!2479 newMap!16) lt!56093))))

(assert (=> b!108941 (= (apply!99 (+!148 lt!56081 (tuple2!2429 lt!56090 (minValue!2479 newMap!16))) lt!56093) (apply!99 lt!56081 lt!56093))))

(declare-fun lt!56094 () Unit!3321)

(assert (=> b!108941 (= lt!56094 lt!56089)))

(declare-fun lt!56084 () ListLongMap!1585)

(assert (=> b!108941 (= lt!56084 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56074 () (_ BitVec 64))

(assert (=> b!108941 (= lt!56074 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56087 () (_ BitVec 64))

(assert (=> b!108941 (= lt!56087 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56083 () Unit!3321)

(assert (=> b!108941 (= lt!56083 (addApplyDifferent!75 lt!56084 lt!56074 (zeroValue!2479 newMap!16) lt!56087))))

(assert (=> b!108941 (= (apply!99 (+!148 lt!56084 (tuple2!2429 lt!56074 (zeroValue!2479 newMap!16))) lt!56087) (apply!99 lt!56084 lt!56087))))

(declare-fun lt!56075 () Unit!3321)

(assert (=> b!108941 (= lt!56075 lt!56083)))

(declare-fun lt!56080 () ListLongMap!1585)

(assert (=> b!108941 (= lt!56080 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56077 () (_ BitVec 64))

(assert (=> b!108941 (= lt!56077 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56092 () (_ BitVec 64))

(assert (=> b!108941 (= lt!56092 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108941 (= lt!56085 (addApplyDifferent!75 lt!56080 lt!56077 (minValue!2479 newMap!16) lt!56092))))

(assert (=> b!108941 (= (apply!99 (+!148 lt!56080 (tuple2!2429 lt!56077 (minValue!2479 newMap!16))) lt!56092) (apply!99 lt!56080 lt!56092))))

(declare-fun bm!11567 () Bool)

(declare-fun call!11570 () ListLongMap!1585)

(declare-fun call!11575 () ListLongMap!1585)

(assert (=> bm!11567 (= call!11570 call!11575)))

(declare-fun b!108942 () Bool)

(declare-fun e!70886 () Bool)

(assert (=> b!108942 (= e!70886 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108944 () Bool)

(declare-fun res!54014 () Bool)

(declare-fun e!70893 () Bool)

(assert (=> b!108944 (=> (not res!54014) (not e!70893))))

(declare-fun e!70896 () Bool)

(assert (=> b!108944 (= res!54014 e!70896)))

(declare-fun c!19201 () Bool)

(assert (=> b!108944 (= c!19201 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!108945 () Bool)

(declare-fun e!70897 () ListLongMap!1585)

(assert (=> b!108945 (= e!70897 call!11570)))

(declare-fun b!108946 () Bool)

(declare-fun e!70890 () ListLongMap!1585)

(assert (=> b!108946 (= e!70890 call!11570)))

(declare-fun b!108947 () Bool)

(declare-fun res!54011 () Bool)

(assert (=> b!108947 (=> (not res!54011) (not e!70893))))

(declare-fun e!70898 () Bool)

(assert (=> b!108947 (= res!54011 e!70898)))

(declare-fun res!54009 () Bool)

(assert (=> b!108947 (=> res!54009 e!70898)))

(assert (=> b!108947 (= res!54009 (not e!70886))))

(declare-fun res!54010 () Bool)

(assert (=> b!108947 (=> (not res!54010) (not e!70886))))

(assert (=> b!108947 (= res!54010 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun bm!11568 () Bool)

(declare-fun call!11574 () ListLongMap!1585)

(assert (=> bm!11568 (= call!11574 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun bm!11569 () Bool)

(declare-fun c!19202 () Bool)

(declare-fun call!11572 () ListLongMap!1585)

(declare-fun call!11573 () ListLongMap!1585)

(declare-fun c!19200 () Bool)

(assert (=> bm!11569 (= call!11575 (+!148 (ite c!19200 call!11574 (ite c!19202 call!11572 call!11573)) (ite (or c!19200 c!19202) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!108948 () Bool)

(declare-fun Unit!3372 () Unit!3321)

(assert (=> b!108948 (= e!70889 Unit!3372)))

(declare-fun b!108949 () Bool)

(declare-fun e!70892 () Bool)

(assert (=> b!108949 (= e!70896 e!70892)))

(declare-fun res!54017 () Bool)

(assert (=> b!108949 (= res!54017 call!11569)))

(assert (=> b!108949 (=> (not res!54017) (not e!70892))))

(declare-fun d!30391 () Bool)

(assert (=> d!30391 e!70893))

(declare-fun res!54016 () Bool)

(assert (=> d!30391 (=> (not res!54016) (not e!70893))))

(assert (=> d!30391 (= res!54016 (or (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))))

(declare-fun lt!56082 () ListLongMap!1585)

(assert (=> d!30391 (= lt!56079 lt!56082)))

(declare-fun lt!56076 () Unit!3321)

(assert (=> d!30391 (= lt!56076 e!70889)))

(declare-fun c!19199 () Bool)

(declare-fun e!70894 () Bool)

(assert (=> d!30391 (= c!19199 e!70894)))

(declare-fun res!54012 () Bool)

(assert (=> d!30391 (=> (not res!54012) (not e!70894))))

(assert (=> d!30391 (= res!54012 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun e!70887 () ListLongMap!1585)

(assert (=> d!30391 (= lt!56082 e!70887)))

(assert (=> d!30391 (= c!19200 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30391 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30391 (= (getCurrentListMap!493 (_keys!4316 newMap!16) lt!55420 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56079)))

(declare-fun b!108943 () Bool)

(declare-fun c!19197 () Bool)

(assert (=> b!108943 (= c!19197 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!108943 (= e!70897 e!70890)))

(declare-fun b!108950 () Bool)

(assert (=> b!108950 (= e!70894 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108951 () Bool)

(assert (=> b!108951 (= e!70896 (not call!11569))))

(declare-fun b!108952 () Bool)

(declare-fun e!70895 () Bool)

(declare-fun call!11571 () Bool)

(assert (=> b!108952 (= e!70895 (not call!11571))))

(declare-fun b!108953 () Bool)

(assert (=> b!108953 (= e!70893 e!70895)))

(declare-fun c!19198 () Bool)

(assert (=> b!108953 (= c!19198 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108954 () Bool)

(declare-fun e!70891 () Bool)

(assert (=> b!108954 (= e!70898 e!70891)))

(declare-fun res!54013 () Bool)

(assert (=> b!108954 (=> (not res!54013) (not e!70891))))

(assert (=> b!108954 (= res!54013 (contains!834 lt!56079 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108954 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun bm!11570 () Bool)

(assert (=> bm!11570 (= call!11573 call!11572)))

(declare-fun b!108955 () Bool)

(declare-fun e!70888 () Bool)

(assert (=> b!108955 (= e!70888 (= (apply!99 lt!56079 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun bm!11571 () Bool)

(assert (=> bm!11571 (= call!11571 (contains!834 lt!56079 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108956 () Bool)

(assert (=> b!108956 (= e!70890 call!11573)))

(declare-fun b!108957 () Bool)

(assert (=> b!108957 (= e!70891 (= (apply!99 lt!56079 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 lt!55420) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108957 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 lt!55420)))))

(assert (=> b!108957 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!108958 () Bool)

(assert (=> b!108958 (= e!70887 (+!148 call!11575 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun b!108959 () Bool)

(assert (=> b!108959 (= e!70892 (= (apply!99 lt!56079 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!108960 () Bool)

(assert (=> b!108960 (= e!70887 e!70897)))

(assert (=> b!108960 (= c!19202 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108961 () Bool)

(assert (=> b!108961 (= e!70895 e!70888)))

(declare-fun res!54015 () Bool)

(assert (=> b!108961 (= res!54015 call!11571)))

(assert (=> b!108961 (=> (not res!54015) (not e!70888))))

(declare-fun bm!11572 () Bool)

(assert (=> bm!11572 (= call!11572 call!11574)))

(assert (= (and d!30391 c!19200) b!108958))

(assert (= (and d!30391 (not c!19200)) b!108960))

(assert (= (and b!108960 c!19202) b!108945))

(assert (= (and b!108960 (not c!19202)) b!108943))

(assert (= (and b!108943 c!19197) b!108946))

(assert (= (and b!108943 (not c!19197)) b!108956))

(assert (= (or b!108946 b!108956) bm!11570))

(assert (= (or b!108945 bm!11570) bm!11572))

(assert (= (or b!108945 b!108946) bm!11567))

(assert (= (or b!108958 bm!11572) bm!11568))

(assert (= (or b!108958 bm!11567) bm!11569))

(assert (= (and d!30391 res!54012) b!108950))

(assert (= (and d!30391 c!19199) b!108941))

(assert (= (and d!30391 (not c!19199)) b!108948))

(assert (= (and d!30391 res!54016) b!108947))

(assert (= (and b!108947 res!54010) b!108942))

(assert (= (and b!108947 (not res!54009)) b!108954))

(assert (= (and b!108954 res!54013) b!108957))

(assert (= (and b!108947 res!54011) b!108944))

(assert (= (and b!108944 c!19201) b!108949))

(assert (= (and b!108944 (not c!19201)) b!108951))

(assert (= (and b!108949 res!54017) b!108959))

(assert (= (or b!108949 b!108951) bm!11566))

(assert (= (and b!108944 res!54014) b!108953))

(assert (= (and b!108953 c!19198) b!108961))

(assert (= (and b!108953 (not c!19198)) b!108952))

(assert (= (and b!108961 res!54015) b!108955))

(assert (= (or b!108961 b!108952) bm!11571))

(declare-fun b_lambda!4871 () Bool)

(assert (=> (not b_lambda!4871) (not b!108957)))

(assert (=> b!108957 t!5750))

(declare-fun b_and!6719 () Bool)

(assert (= b_and!6715 (and (=> t!5750 result!3509) b_and!6719)))

(assert (=> b!108957 t!5752))

(declare-fun b_and!6721 () Bool)

(assert (= b_and!6717 (and (=> t!5752 result!3511) b_and!6721)))

(declare-fun m!123101 () Bool)

(assert (=> bm!11566 m!123101))

(assert (=> b!108954 m!121333))

(assert (=> b!108954 m!121333))

(declare-fun m!123103 () Bool)

(assert (=> b!108954 m!123103))

(assert (=> b!108950 m!121333))

(assert (=> b!108950 m!121333))

(assert (=> b!108950 m!121341))

(declare-fun m!123105 () Bool)

(assert (=> bm!11571 m!123105))

(declare-fun m!123107 () Bool)

(assert (=> b!108941 m!123107))

(declare-fun m!123109 () Bool)

(assert (=> b!108941 m!123109))

(declare-fun m!123111 () Bool)

(assert (=> b!108941 m!123111))

(declare-fun m!123113 () Bool)

(assert (=> b!108941 m!123113))

(declare-fun m!123115 () Bool)

(assert (=> b!108941 m!123115))

(declare-fun m!123117 () Bool)

(assert (=> b!108941 m!123117))

(declare-fun m!123119 () Bool)

(assert (=> b!108941 m!123119))

(declare-fun m!123121 () Bool)

(assert (=> b!108941 m!123121))

(declare-fun m!123123 () Bool)

(assert (=> b!108941 m!123123))

(declare-fun m!123125 () Bool)

(assert (=> b!108941 m!123125))

(declare-fun m!123127 () Bool)

(assert (=> b!108941 m!123127))

(assert (=> b!108941 m!123109))

(assert (=> b!108941 m!123121))

(declare-fun m!123129 () Bool)

(assert (=> b!108941 m!123129))

(declare-fun m!123131 () Bool)

(assert (=> b!108941 m!123131))

(declare-fun m!123133 () Bool)

(assert (=> b!108941 m!123133))

(assert (=> b!108941 m!123115))

(declare-fun m!123135 () Bool)

(assert (=> b!108941 m!123135))

(assert (=> b!108941 m!121333))

(declare-fun m!123137 () Bool)

(assert (=> b!108941 m!123137))

(assert (=> b!108941 m!123123))

(declare-fun m!123139 () Bool)

(assert (=> b!108958 m!123139))

(assert (=> b!108957 m!121333))

(assert (=> b!108957 m!121333))

(declare-fun m!123141 () Bool)

(assert (=> b!108957 m!123141))

(declare-fun m!123143 () Bool)

(assert (=> b!108957 m!123143))

(assert (=> b!108957 m!121727))

(declare-fun m!123145 () Bool)

(assert (=> b!108957 m!123145))

(assert (=> b!108957 m!121727))

(assert (=> b!108957 m!123143))

(assert (=> bm!11568 m!123127))

(assert (=> b!108942 m!121333))

(assert (=> b!108942 m!121333))

(assert (=> b!108942 m!121341))

(declare-fun m!123147 () Bool)

(assert (=> b!108955 m!123147))

(declare-fun m!123149 () Bool)

(assert (=> bm!11569 m!123149))

(declare-fun m!123151 () Bool)

(assert (=> b!108959 m!123151))

(assert (=> d!30391 m!121327))

(assert (=> b!108151 d!30391))

(declare-fun lt!56095 () Bool)

(declare-fun d!30393 () Bool)

(assert (=> d!30393 (= lt!56095 (select (content!111 (toList!808 lt!55568)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!70900 () Bool)

(assert (=> d!30393 (= lt!56095 e!70900)))

(declare-fun res!54019 () Bool)

(assert (=> d!30393 (=> (not res!54019) (not e!70900))))

(assert (=> d!30393 (= res!54019 ((_ is Cons!1621) (toList!808 lt!55568)))))

(assert (=> d!30393 (= (contains!836 (toList!808 lt!55568) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!56095)))

(declare-fun b!108962 () Bool)

(declare-fun e!70899 () Bool)

(assert (=> b!108962 (= e!70900 e!70899)))

(declare-fun res!54018 () Bool)

(assert (=> b!108962 (=> res!54018 e!70899)))

(assert (=> b!108962 (= res!54018 (= (h!2219 (toList!808 lt!55568)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108963 () Bool)

(assert (=> b!108963 (= e!70899 (contains!836 (t!5741 (toList!808 lt!55568)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30393 res!54019) b!108962))

(assert (= (and b!108962 (not res!54018)) b!108963))

(declare-fun m!123153 () Bool)

(assert (=> d!30393 m!123153))

(declare-fun m!123155 () Bool)

(assert (=> d!30393 m!123155))

(declare-fun m!123157 () Bool)

(assert (=> b!108963 m!123157))

(assert (=> b!108068 d!30393))

(declare-fun d!30395 () Bool)

(declare-fun c!19203 () Bool)

(assert (=> d!30395 (= c!19203 (and ((_ is Cons!1621) (toList!808 lt!55594)) (= (_1!1225 (h!2219 (toList!808 lt!55594))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70901 () Option!163)

(assert (=> d!30395 (= (getValueByKey!157 (toList!808 lt!55594) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!70901)))

(declare-fun b!108965 () Bool)

(declare-fun e!70902 () Option!163)

(assert (=> b!108965 (= e!70901 e!70902)))

(declare-fun c!19204 () Bool)

(assert (=> b!108965 (= c!19204 (and ((_ is Cons!1621) (toList!808 lt!55594)) (not (= (_1!1225 (h!2219 (toList!808 lt!55594))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!108966 () Bool)

(assert (=> b!108966 (= e!70902 (getValueByKey!157 (t!5741 (toList!808 lt!55594)) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108964 () Bool)

(assert (=> b!108964 (= e!70901 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55594)))))))

(declare-fun b!108967 () Bool)

(assert (=> b!108967 (= e!70902 None!161)))

(assert (= (and d!30395 c!19203) b!108964))

(assert (= (and d!30395 (not c!19203)) b!108965))

(assert (= (and b!108965 c!19204) b!108966))

(assert (= (and b!108965 (not c!19204)) b!108967))

(declare-fun m!123159 () Bool)

(assert (=> b!108966 m!123159))

(assert (=> b!108126 d!30395))

(assert (=> b!108038 d!29991))

(declare-fun d!30397 () Bool)

(assert (=> d!30397 (= (isDefined!110 (getValueByKey!157 (toList!808 lt!55268) (_1!1225 lt!55182))) (not (isEmpty!375 (getValueByKey!157 (toList!808 lt!55268) (_1!1225 lt!55182)))))))

(declare-fun bs!4485 () Bool)

(assert (= bs!4485 d!30397))

(assert (=> bs!4485 m!121159))

(declare-fun m!123161 () Bool)

(assert (=> bs!4485 m!123161))

(assert (=> b!108074 d!30397))

(assert (=> b!108074 d!30045))

(declare-fun d!30399 () Bool)

(declare-fun res!54020 () Bool)

(declare-fun e!70903 () Bool)

(assert (=> d!30399 (=> res!54020 e!70903)))

(assert (=> d!30399 (= res!54020 (and ((_ is Cons!1621) (toList!808 lt!55240)) (= (_1!1225 (h!2219 (toList!808 lt!55240))) (_1!1225 lt!55183))))))

(assert (=> d!30399 (= (containsKey!161 (toList!808 lt!55240) (_1!1225 lt!55183)) e!70903)))

(declare-fun b!108968 () Bool)

(declare-fun e!70904 () Bool)

(assert (=> b!108968 (= e!70903 e!70904)))

(declare-fun res!54021 () Bool)

(assert (=> b!108968 (=> (not res!54021) (not e!70904))))

(assert (=> b!108968 (= res!54021 (and (or (not ((_ is Cons!1621) (toList!808 lt!55240))) (bvsle (_1!1225 (h!2219 (toList!808 lt!55240))) (_1!1225 lt!55183))) ((_ is Cons!1621) (toList!808 lt!55240)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55240))) (_1!1225 lt!55183))))))

(declare-fun b!108969 () Bool)

(assert (=> b!108969 (= e!70904 (containsKey!161 (t!5741 (toList!808 lt!55240)) (_1!1225 lt!55183)))))

(assert (= (and d!30399 (not res!54020)) b!108968))

(assert (= (and b!108968 res!54021) b!108969))

(declare-fun m!123163 () Bool)

(assert (=> b!108969 m!123163))

(assert (=> d!29969 d!30399))

(declare-fun d!30401 () Bool)

(assert (=> d!30401 (= (get!1342 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2913 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!108056 d!30401))

(assert (=> b!108163 d!30145))

(declare-fun d!30403 () Bool)

(declare-fun lt!56096 () Bool)

(assert (=> d!30403 (= lt!56096 (select (content!111 (toList!808 lt!55693)) (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!70906 () Bool)

(assert (=> d!30403 (= lt!56096 e!70906)))

(declare-fun res!54023 () Bool)

(assert (=> d!30403 (=> (not res!54023) (not e!70906))))

(assert (=> d!30403 (= res!54023 ((_ is Cons!1621) (toList!808 lt!55693)))))

(assert (=> d!30403 (= (contains!836 (toList!808 lt!55693) (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!56096)))

(declare-fun b!108970 () Bool)

(declare-fun e!70905 () Bool)

(assert (=> b!108970 (= e!70906 e!70905)))

(declare-fun res!54022 () Bool)

(assert (=> b!108970 (=> res!54022 e!70905)))

(assert (=> b!108970 (= res!54022 (= (h!2219 (toList!808 lt!55693)) (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!108971 () Bool)

(assert (=> b!108971 (= e!70905 (contains!836 (t!5741 (toList!808 lt!55693)) (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (= (and d!30403 res!54023) b!108970))

(assert (= (and b!108970 (not res!54022)) b!108971))

(declare-fun m!123165 () Bool)

(assert (=> d!30403 m!123165))

(declare-fun m!123167 () Bool)

(assert (=> d!30403 m!123167))

(declare-fun m!123169 () Bool)

(assert (=> b!108971 m!123169))

(assert (=> b!108245 d!30403))

(declare-fun d!30405 () Bool)

(assert (=> d!30405 (= (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55335)) (not (isEmpty!375 (getValueByKey!157 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55335))))))

(declare-fun bs!4486 () Bool)

(assert (= bs!4486 d!30405))

(assert (=> bs!4486 m!121581))

(declare-fun m!123171 () Bool)

(assert (=> bs!4486 m!123171))

(assert (=> b!108132 d!30405))

(declare-fun d!30407 () Bool)

(declare-fun c!19205 () Bool)

(assert (=> d!30407 (= c!19205 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))) lt!55335)))))

(declare-fun e!70907 () Option!163)

(assert (=> d!30407 (= (getValueByKey!157 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55335) e!70907)))

(declare-fun b!108973 () Bool)

(declare-fun e!70908 () Option!163)

(assert (=> b!108973 (= e!70907 e!70908)))

(declare-fun c!19206 () Bool)

(assert (=> b!108973 (= c!19206 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (not (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))) lt!55335))))))

(declare-fun b!108974 () Bool)

(assert (=> b!108974 (= e!70908 (getValueByKey!157 (t!5741 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) lt!55335))))

(declare-fun b!108972 () Bool)

(assert (=> b!108972 (= e!70907 (Some!162 (_2!1225 (h!2219 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))))

(declare-fun b!108975 () Bool)

(assert (=> b!108975 (= e!70908 None!161)))

(assert (= (and d!30407 c!19205) b!108972))

(assert (= (and d!30407 (not c!19205)) b!108973))

(assert (= (and b!108973 c!19206) b!108974))

(assert (= (and b!108973 (not c!19206)) b!108975))

(declare-fun m!123173 () Bool)

(assert (=> b!108974 m!123173))

(assert (=> b!108132 d!30407))

(declare-fun d!30409 () Bool)

(assert (=> d!30409 (= (inRange!0 (index!3190 lt!55712) (mask!6764 newMap!16)) (and (bvsge (index!3190 lt!55712) #b00000000000000000000000000000000) (bvslt (index!3190 lt!55712) (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!108288 d!30409))

(assert (=> b!107997 d!30145))

(declare-fun d!30411 () Bool)

(declare-fun c!19207 () Bool)

(assert (=> d!30411 (= c!19207 (and ((_ is Cons!1621) (t!5741 lt!55238)) (= (_1!1225 (h!2219 (t!5741 lt!55238))) (_1!1225 lt!55183))))))

(declare-fun e!70909 () Option!163)

(assert (=> d!30411 (= (getValueByKey!157 (t!5741 lt!55238) (_1!1225 lt!55183)) e!70909)))

(declare-fun b!108977 () Bool)

(declare-fun e!70910 () Option!163)

(assert (=> b!108977 (= e!70909 e!70910)))

(declare-fun c!19208 () Bool)

(assert (=> b!108977 (= c!19208 (and ((_ is Cons!1621) (t!5741 lt!55238)) (not (= (_1!1225 (h!2219 (t!5741 lt!55238))) (_1!1225 lt!55183)))))))

(declare-fun b!108978 () Bool)

(assert (=> b!108978 (= e!70910 (getValueByKey!157 (t!5741 (t!5741 lt!55238)) (_1!1225 lt!55183)))))

(declare-fun b!108976 () Bool)

(assert (=> b!108976 (= e!70909 (Some!162 (_2!1225 (h!2219 (t!5741 lt!55238)))))))

(declare-fun b!108979 () Bool)

(assert (=> b!108979 (= e!70910 None!161)))

(assert (= (and d!30411 c!19207) b!108976))

(assert (= (and d!30411 (not c!19207)) b!108977))

(assert (= (and b!108977 c!19208) b!108978))

(assert (= (and b!108977 (not c!19208)) b!108979))

(declare-fun m!123175 () Bool)

(assert (=> b!108978 m!123175))

(assert (=> b!108405 d!30411))

(declare-fun c!19209 () Bool)

(declare-fun d!30413 () Bool)

(assert (=> d!30413 (= c!19209 (and ((_ is Cons!1621) (toList!808 lt!55586)) (= (_1!1225 (h!2219 (toList!808 lt!55586))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun e!70911 () Option!163)

(assert (=> d!30413 (= (getValueByKey!157 (toList!808 lt!55586) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) e!70911)))

(declare-fun b!108981 () Bool)

(declare-fun e!70912 () Option!163)

(assert (=> b!108981 (= e!70911 e!70912)))

(declare-fun c!19210 () Bool)

(assert (=> b!108981 (= c!19210 (and ((_ is Cons!1621) (toList!808 lt!55586)) (not (= (_1!1225 (h!2219 (toList!808 lt!55586))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun b!108982 () Bool)

(assert (=> b!108982 (= e!70912 (getValueByKey!157 (t!5741 (toList!808 lt!55586)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!108980 () Bool)

(assert (=> b!108980 (= e!70911 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55586)))))))

(declare-fun b!108983 () Bool)

(assert (=> b!108983 (= e!70912 None!161)))

(assert (= (and d!30413 c!19209) b!108980))

(assert (= (and d!30413 (not c!19209)) b!108981))

(assert (= (and b!108981 c!19210) b!108982))

(assert (= (and b!108981 (not c!19210)) b!108983))

(declare-fun m!123177 () Bool)

(assert (=> b!108982 m!123177))

(assert (=> b!108122 d!30413))

(declare-fun d!30415 () Bool)

(declare-fun e!70913 () Bool)

(assert (=> d!30415 e!70913))

(declare-fun res!54024 () Bool)

(assert (=> d!30415 (=> (not res!54024) (not e!70913))))

(declare-fun lt!56097 () ListLongMap!1585)

(assert (=> d!30415 (= res!54024 (contains!834 lt!56097 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(declare-fun lt!56099 () List!1625)

(assert (=> d!30415 (= lt!56097 (ListLongMap!1586 lt!56099))))

(declare-fun lt!56098 () Unit!3321)

(declare-fun lt!56100 () Unit!3321)

(assert (=> d!30415 (= lt!56098 lt!56100)))

(assert (=> d!30415 (= (getValueByKey!157 lt!56099 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))) (Some!162 (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(assert (=> d!30415 (= lt!56100 (lemmaContainsTupThenGetReturnValue!73 lt!56099 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(assert (=> d!30415 (= lt!56099 (insertStrictlySorted!76 (toList!808 call!11510) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))))))

(assert (=> d!30415 (= (+!148 call!11510 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))) lt!56097)))

(declare-fun b!108984 () Bool)

(declare-fun res!54025 () Bool)

(assert (=> b!108984 (=> (not res!54025) (not e!70913))))

(assert (=> b!108984 (= res!54025 (= (getValueByKey!157 (toList!808 lt!56097) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16))))) (Some!162 (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))))))

(declare-fun b!108985 () Bool)

(assert (=> b!108985 (= e!70913 (contains!836 (toList!808 lt!56097) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18921 (ite c!18923 (minValue!2479 newMap!16) lt!55184) (minValue!2479 newMap!16)))))))

(assert (= (and d!30415 res!54024) b!108984))

(assert (= (and b!108984 res!54025) b!108985))

(declare-fun m!123179 () Bool)

(assert (=> d!30415 m!123179))

(declare-fun m!123181 () Bool)

(assert (=> d!30415 m!123181))

(declare-fun m!123183 () Bool)

(assert (=> d!30415 m!123183))

(declare-fun m!123185 () Bool)

(assert (=> d!30415 m!123185))

(declare-fun m!123187 () Bool)

(assert (=> b!108984 m!123187))

(declare-fun m!123189 () Bool)

(assert (=> b!108985 m!123189))

(assert (=> b!108343 d!30415))

(declare-fun d!30417 () Bool)

(assert (=> d!30417 (= (get!1344 (getValueByKey!157 (toList!808 lt!55331) lt!55334)) (v!2918 (getValueByKey!157 (toList!808 lt!55331) lt!55334)))))

(assert (=> d!29919 d!30417))

(declare-fun d!30419 () Bool)

(declare-fun c!19211 () Bool)

(assert (=> d!30419 (= c!19211 (and ((_ is Cons!1621) (toList!808 lt!55331)) (= (_1!1225 (h!2219 (toList!808 lt!55331))) lt!55334)))))

(declare-fun e!70914 () Option!163)

(assert (=> d!30419 (= (getValueByKey!157 (toList!808 lt!55331) lt!55334) e!70914)))

(declare-fun b!108987 () Bool)

(declare-fun e!70915 () Option!163)

(assert (=> b!108987 (= e!70914 e!70915)))

(declare-fun c!19212 () Bool)

(assert (=> b!108987 (= c!19212 (and ((_ is Cons!1621) (toList!808 lt!55331)) (not (= (_1!1225 (h!2219 (toList!808 lt!55331))) lt!55334))))))

(declare-fun b!108988 () Bool)

(assert (=> b!108988 (= e!70915 (getValueByKey!157 (t!5741 (toList!808 lt!55331)) lt!55334))))

(declare-fun b!108986 () Bool)

(assert (=> b!108986 (= e!70914 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55331)))))))

(declare-fun b!108989 () Bool)

(assert (=> b!108989 (= e!70915 None!161)))

(assert (= (and d!30419 c!19211) b!108986))

(assert (= (and d!30419 (not c!19211)) b!108987))

(assert (= (and b!108987 c!19212) b!108988))

(assert (= (and b!108987 (not c!19212)) b!108989))

(declare-fun m!123191 () Bool)

(assert (=> b!108988 m!123191))

(assert (=> d!29919 d!30419))

(declare-fun d!30421 () Bool)

(assert (=> d!30421 (= (+!148 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (getCurrentListMap!493 (_keys!4316 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(assert (=> d!30421 true))

(declare-fun _$5!113 () Unit!3321)

(assert (=> d!30421 (= (choose!676 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3190 lt!55411) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184 (defaultEntry!2606 newMap!16)) _$5!113)))

(declare-fun bs!4487 () Bool)

(assert (= bs!4487 d!30421))

(assert (=> bs!4487 m!121175))

(assert (=> bs!4487 m!121175))

(assert (=> bs!4487 m!121367))

(assert (=> bs!4487 m!121273))

(assert (=> bs!4487 m!121669))

(assert (=> d!29939 d!30421))

(assert (=> d!29939 d!30057))

(assert (=> bm!11460 d!30033))

(declare-fun d!30423 () Bool)

(assert (=> d!30423 (isDefined!110 (getValueByKey!157 (toList!808 lt!55240) (_1!1225 lt!55183)))))

(declare-fun lt!56101 () Unit!3321)

(assert (=> d!30423 (= lt!56101 (choose!677 (toList!808 lt!55240) (_1!1225 lt!55183)))))

(declare-fun e!70916 () Bool)

(assert (=> d!30423 e!70916))

(declare-fun res!54026 () Bool)

(assert (=> d!30423 (=> (not res!54026) (not e!70916))))

(assert (=> d!30423 (= res!54026 (isStrictlySorted!310 (toList!808 lt!55240)))))

(assert (=> d!30423 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55240) (_1!1225 lt!55183)) lt!56101)))

(declare-fun b!108990 () Bool)

(assert (=> b!108990 (= e!70916 (containsKey!161 (toList!808 lt!55240) (_1!1225 lt!55183)))))

(assert (= (and d!30423 res!54026) b!108990))

(assert (=> d!30423 m!121109))

(assert (=> d!30423 m!121109))

(assert (=> d!30423 m!121789))

(declare-fun m!123193 () Bool)

(assert (=> d!30423 m!123193))

(declare-fun m!123195 () Bool)

(assert (=> d!30423 m!123195))

(assert (=> b!108990 m!121785))

(assert (=> b!108201 d!30423))

(assert (=> b!108201 d!30257))

(assert (=> b!108201 d!29859))

(declare-fun d!30425 () Bool)

(declare-fun c!19213 () Bool)

(assert (=> d!30425 (= c!19213 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55190))) (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55190)))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(declare-fun e!70917 () Option!163)

(assert (=> d!30425 (= (getValueByKey!157 (t!5741 (toList!808 lt!55190)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) e!70917)))

(declare-fun b!108992 () Bool)

(declare-fun e!70918 () Option!163)

(assert (=> b!108992 (= e!70917 e!70918)))

(declare-fun c!19214 () Bool)

(assert (=> b!108992 (= c!19214 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55190))) (not (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55190)))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun b!108993 () Bool)

(assert (=> b!108993 (= e!70918 (getValueByKey!157 (t!5741 (t!5741 (toList!808 lt!55190))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108991 () Bool)

(assert (=> b!108991 (= e!70917 (Some!162 (_2!1225 (h!2219 (t!5741 (toList!808 lt!55190))))))))

(declare-fun b!108994 () Bool)

(assert (=> b!108994 (= e!70918 None!161)))

(assert (= (and d!30425 c!19213) b!108991))

(assert (= (and d!30425 (not c!19213)) b!108992))

(assert (= (and b!108992 c!19214) b!108993))

(assert (= (and b!108992 (not c!19214)) b!108994))

(assert (=> b!108993 m!120979))

(declare-fun m!123197 () Bool)

(assert (=> b!108993 m!123197))

(assert (=> b!108160 d!30425))

(declare-fun d!30427 () Bool)

(declare-fun res!54027 () Bool)

(declare-fun e!70919 () Bool)

(assert (=> d!30427 (=> res!54027 e!70919)))

(assert (=> d!30427 (= res!54027 (and ((_ is Cons!1621) (toList!808 lt!55258)) (= (_1!1225 (h!2219 (toList!808 lt!55258))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30427 (= (containsKey!161 (toList!808 lt!55258) #b1000000000000000000000000000000000000000000000000000000000000000) e!70919)))

(declare-fun b!108995 () Bool)

(declare-fun e!70920 () Bool)

(assert (=> b!108995 (= e!70919 e!70920)))

(declare-fun res!54028 () Bool)

(assert (=> b!108995 (=> (not res!54028) (not e!70920))))

(assert (=> b!108995 (= res!54028 (and (or (not ((_ is Cons!1621) (toList!808 lt!55258))) (bvsle (_1!1225 (h!2219 (toList!808 lt!55258))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1621) (toList!808 lt!55258)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55258))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108996 () Bool)

(assert (=> b!108996 (= e!70920 (containsKey!161 (t!5741 (toList!808 lt!55258)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30427 (not res!54027)) b!108995))

(assert (= (and b!108995 res!54028) b!108996))

(declare-fun m!123199 () Bool)

(assert (=> b!108996 m!123199))

(assert (=> d!30019 d!30427))

(declare-fun d!30429 () Bool)

(declare-fun res!54030 () Bool)

(declare-fun e!70921 () Bool)

(assert (=> d!30429 (=> (not res!54030) (not e!70921))))

(assert (=> d!30429 (= res!54030 (validMask!0 (mask!6764 (_2!1226 lt!55419))))))

(assert (=> d!30429 (= (simpleValid!75 (_2!1226 lt!55419)) e!70921)))

(declare-fun b!108999 () Bool)

(declare-fun res!54032 () Bool)

(assert (=> b!108999 (=> (not res!54032) (not e!70921))))

(assert (=> b!108999 (= res!54032 (= (size!2335 (_2!1226 lt!55419)) (bvadd (_size!505 (_2!1226 lt!55419)) (bvsdiv (bvadd (extraKeys!2407 (_2!1226 lt!55419)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!108998 () Bool)

(declare-fun res!54031 () Bool)

(assert (=> b!108998 (=> (not res!54031) (not e!70921))))

(assert (=> b!108998 (= res!54031 (bvsge (size!2335 (_2!1226 lt!55419)) (_size!505 (_2!1226 lt!55419))))))

(declare-fun b!109000 () Bool)

(assert (=> b!109000 (= e!70921 (and (bvsge (extraKeys!2407 (_2!1226 lt!55419)) #b00000000000000000000000000000000) (bvsle (extraKeys!2407 (_2!1226 lt!55419)) #b00000000000000000000000000000011) (bvsge (_vacant!505 (_2!1226 lt!55419)) #b00000000000000000000000000000000)))))

(declare-fun b!108997 () Bool)

(declare-fun res!54029 () Bool)

(assert (=> b!108997 (=> (not res!54029) (not e!70921))))

(assert (=> b!108997 (= res!54029 (and (= (size!2332 (_values!2589 (_2!1226 lt!55419))) (bvadd (mask!6764 (_2!1226 lt!55419)) #b00000000000000000000000000000001)) (= (size!2331 (_keys!4316 (_2!1226 lt!55419))) (size!2332 (_values!2589 (_2!1226 lt!55419)))) (bvsge (_size!505 (_2!1226 lt!55419)) #b00000000000000000000000000000000) (bvsle (_size!505 (_2!1226 lt!55419)) (bvadd (mask!6764 (_2!1226 lt!55419)) #b00000000000000000000000000000001))))))

(assert (= (and d!30429 res!54030) b!108997))

(assert (= (and b!108997 res!54029) b!108998))

(assert (= (and b!108998 res!54031) b!108999))

(assert (= (and b!108999 res!54032) b!109000))

(declare-fun m!123201 () Bool)

(assert (=> d!30429 m!123201))

(declare-fun m!123203 () Bool)

(assert (=> b!108999 m!123203))

(assert (=> b!108998 m!123203))

(assert (=> d!29993 d!30429))

(declare-fun d!30431 () Bool)

(assert (=> d!30431 (= (get!1344 (getValueByKey!157 (toList!808 lt!55328) lt!55340)) (v!2918 (getValueByKey!157 (toList!808 lt!55328) lt!55340)))))

(assert (=> d!29933 d!30431))

(declare-fun d!30433 () Bool)

(declare-fun c!19215 () Bool)

(assert (=> d!30433 (= c!19215 (and ((_ is Cons!1621) (toList!808 lt!55328)) (= (_1!1225 (h!2219 (toList!808 lt!55328))) lt!55340)))))

(declare-fun e!70922 () Option!163)

(assert (=> d!30433 (= (getValueByKey!157 (toList!808 lt!55328) lt!55340) e!70922)))

(declare-fun b!109002 () Bool)

(declare-fun e!70923 () Option!163)

(assert (=> b!109002 (= e!70922 e!70923)))

(declare-fun c!19216 () Bool)

(assert (=> b!109002 (= c!19216 (and ((_ is Cons!1621) (toList!808 lt!55328)) (not (= (_1!1225 (h!2219 (toList!808 lt!55328))) lt!55340))))))

(declare-fun b!109003 () Bool)

(assert (=> b!109003 (= e!70923 (getValueByKey!157 (t!5741 (toList!808 lt!55328)) lt!55340))))

(declare-fun b!109001 () Bool)

(assert (=> b!109001 (= e!70922 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55328)))))))

(declare-fun b!109004 () Bool)

(assert (=> b!109004 (= e!70923 None!161)))

(assert (= (and d!30433 c!19215) b!109001))

(assert (= (and d!30433 (not c!19215)) b!109002))

(assert (= (and b!109002 c!19216) b!109003))

(assert (= (and b!109002 (not c!19216)) b!109004))

(declare-fun m!123205 () Bool)

(assert (=> b!109003 m!123205))

(assert (=> d!29933 d!30433))

(declare-fun d!30435 () Bool)

(declare-fun e!70925 () Bool)

(assert (=> d!30435 e!70925))

(declare-fun res!54033 () Bool)

(assert (=> d!30435 (=> res!54033 e!70925)))

(declare-fun lt!56103 () Bool)

(assert (=> d!30435 (= res!54033 (not lt!56103))))

(declare-fun lt!56104 () Bool)

(assert (=> d!30435 (= lt!56103 lt!56104)))

(declare-fun lt!56102 () Unit!3321)

(declare-fun e!70924 () Unit!3321)

(assert (=> d!30435 (= lt!56102 e!70924)))

(declare-fun c!19217 () Bool)

(assert (=> d!30435 (= c!19217 lt!56104)))

(assert (=> d!30435 (= lt!56104 (containsKey!161 (toList!808 lt!55594) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30435 (= (contains!834 lt!55594 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!56103)))

(declare-fun b!109005 () Bool)

(declare-fun lt!56105 () Unit!3321)

(assert (=> b!109005 (= e!70924 lt!56105)))

(assert (=> b!109005 (= lt!56105 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55594) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!109005 (isDefined!110 (getValueByKey!157 (toList!808 lt!55594) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109006 () Bool)

(declare-fun Unit!3373 () Unit!3321)

(assert (=> b!109006 (= e!70924 Unit!3373)))

(declare-fun b!109007 () Bool)

(assert (=> b!109007 (= e!70925 (isDefined!110 (getValueByKey!157 (toList!808 lt!55594) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30435 c!19217) b!109005))

(assert (= (and d!30435 (not c!19217)) b!109006))

(assert (= (and d!30435 (not res!54033)) b!109007))

(declare-fun m!123207 () Bool)

(assert (=> d!30435 m!123207))

(declare-fun m!123209 () Bool)

(assert (=> b!109005 m!123209))

(assert (=> b!109005 m!121553))

(assert (=> b!109005 m!121553))

(declare-fun m!123211 () Bool)

(assert (=> b!109005 m!123211))

(assert (=> b!109007 m!121553))

(assert (=> b!109007 m!121553))

(assert (=> b!109007 m!123211))

(assert (=> d!29903 d!30435))

(declare-fun d!30437 () Bool)

(declare-fun c!19218 () Bool)

(assert (=> d!30437 (= c!19218 (and ((_ is Cons!1621) lt!55596) (= (_1!1225 (h!2219 lt!55596)) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!70926 () Option!163)

(assert (=> d!30437 (= (getValueByKey!157 lt!55596 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!70926)))

(declare-fun b!109009 () Bool)

(declare-fun e!70927 () Option!163)

(assert (=> b!109009 (= e!70926 e!70927)))

(declare-fun c!19219 () Bool)

(assert (=> b!109009 (= c!19219 (and ((_ is Cons!1621) lt!55596) (not (= (_1!1225 (h!2219 lt!55596)) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!109010 () Bool)

(assert (=> b!109010 (= e!70927 (getValueByKey!157 (t!5741 lt!55596) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109008 () Bool)

(assert (=> b!109008 (= e!70926 (Some!162 (_2!1225 (h!2219 lt!55596))))))

(declare-fun b!109011 () Bool)

(assert (=> b!109011 (= e!70927 None!161)))

(assert (= (and d!30437 c!19218) b!109008))

(assert (= (and d!30437 (not c!19218)) b!109009))

(assert (= (and b!109009 c!19219) b!109010))

(assert (= (and b!109009 (not c!19219)) b!109011))

(declare-fun m!123213 () Bool)

(assert (=> b!109010 m!123213))

(assert (=> d!29903 d!30437))

(declare-fun d!30439 () Bool)

(assert (=> d!30439 (= (getValueByKey!157 lt!55596 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!56106 () Unit!3321)

(assert (=> d!30439 (= lt!56106 (choose!672 lt!55596 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!70928 () Bool)

(assert (=> d!30439 e!70928))

(declare-fun res!54034 () Bool)

(assert (=> d!30439 (=> (not res!54034) (not e!70928))))

(assert (=> d!30439 (= res!54034 (isStrictlySorted!310 lt!55596))))

(assert (=> d!30439 (= (lemmaContainsTupThenGetReturnValue!73 lt!55596 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!56106)))

(declare-fun b!109012 () Bool)

(declare-fun res!54035 () Bool)

(assert (=> b!109012 (=> (not res!54035) (not e!70928))))

(assert (=> b!109012 (= res!54035 (containsKey!161 lt!55596 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109013 () Bool)

(assert (=> b!109013 (= e!70928 (contains!836 lt!55596 (tuple2!2429 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30439 res!54034) b!109012))

(assert (= (and b!109012 res!54035) b!109013))

(assert (=> d!30439 m!121547))

(declare-fun m!123215 () Bool)

(assert (=> d!30439 m!123215))

(declare-fun m!123217 () Bool)

(assert (=> d!30439 m!123217))

(declare-fun m!123219 () Bool)

(assert (=> b!109012 m!123219))

(declare-fun m!123221 () Bool)

(assert (=> b!109013 m!123221))

(assert (=> d!29903 d!30439))

(declare-fun b!109014 () Bool)

(declare-fun e!70932 () List!1625)

(declare-fun e!70930 () List!1625)

(assert (=> b!109014 (= e!70932 e!70930)))

(declare-fun c!19222 () Bool)

(assert (=> b!109014 (= c!19222 (and ((_ is Cons!1621) (toList!808 lt!55185)) (= (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun bm!11573 () Bool)

(declare-fun call!11577 () List!1625)

(declare-fun e!70929 () List!1625)

(declare-fun c!19221 () Bool)

(assert (=> bm!11573 (= call!11577 ($colon$colon!82 e!70929 (ite c!19221 (h!2219 (toList!808 lt!55185)) (tuple2!2429 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19220 () Bool)

(assert (=> bm!11573 (= c!19220 c!19221)))

(declare-fun b!109015 () Bool)

(assert (=> b!109015 (= e!70929 (insertStrictlySorted!76 (t!5741 (toList!808 lt!55185)) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun c!19223 () Bool)

(declare-fun b!109016 () Bool)

(assert (=> b!109016 (= e!70929 (ite c!19222 (t!5741 (toList!808 lt!55185)) (ite c!19223 (Cons!1621 (h!2219 (toList!808 lt!55185)) (t!5741 (toList!808 lt!55185))) Nil!1622)))))

(declare-fun b!109017 () Bool)

(declare-fun e!70933 () List!1625)

(declare-fun call!11576 () List!1625)

(assert (=> b!109017 (= e!70933 call!11576)))

(declare-fun bm!11574 () Bool)

(declare-fun call!11578 () List!1625)

(assert (=> bm!11574 (= call!11576 call!11578)))

(declare-fun b!109018 () Bool)

(assert (=> b!109018 (= e!70932 call!11577)))

(declare-fun d!30441 () Bool)

(declare-fun e!70931 () Bool)

(assert (=> d!30441 e!70931))

(declare-fun res!54036 () Bool)

(assert (=> d!30441 (=> (not res!54036) (not e!70931))))

(declare-fun lt!56107 () List!1625)

(assert (=> d!30441 (= res!54036 (isStrictlySorted!310 lt!56107))))

(assert (=> d!30441 (= lt!56107 e!70932)))

(assert (=> d!30441 (= c!19221 (and ((_ is Cons!1621) (toList!808 lt!55185)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30441 (isStrictlySorted!310 (toList!808 lt!55185))))

(assert (=> d!30441 (= (insertStrictlySorted!76 (toList!808 lt!55185) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!56107)))

(declare-fun b!109019 () Bool)

(assert (=> b!109019 (= e!70933 call!11576)))

(declare-fun bm!11575 () Bool)

(assert (=> bm!11575 (= call!11578 call!11577)))

(declare-fun b!109020 () Bool)

(assert (=> b!109020 (= c!19223 (and ((_ is Cons!1621) (toList!808 lt!55185)) (bvsgt (_1!1225 (h!2219 (toList!808 lt!55185))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> b!109020 (= e!70930 e!70933)))

(declare-fun b!109021 () Bool)

(assert (=> b!109021 (= e!70930 call!11578)))

(declare-fun b!109022 () Bool)

(declare-fun res!54037 () Bool)

(assert (=> b!109022 (=> (not res!54037) (not e!70931))))

(assert (=> b!109022 (= res!54037 (containsKey!161 lt!56107 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109023 () Bool)

(assert (=> b!109023 (= e!70931 (contains!836 lt!56107 (tuple2!2429 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30441 c!19221) b!109018))

(assert (= (and d!30441 (not c!19221)) b!109014))

(assert (= (and b!109014 c!19222) b!109021))

(assert (= (and b!109014 (not c!19222)) b!109020))

(assert (= (and b!109020 c!19223) b!109019))

(assert (= (and b!109020 (not c!19223)) b!109017))

(assert (= (or b!109019 b!109017) bm!11574))

(assert (= (or b!109021 bm!11574) bm!11575))

(assert (= (or b!109018 bm!11575) bm!11573))

(assert (= (and bm!11573 c!19220) b!109015))

(assert (= (and bm!11573 (not c!19220)) b!109016))

(assert (= (and d!30441 res!54036) b!109022))

(assert (= (and b!109022 res!54037) b!109023))

(declare-fun m!123223 () Bool)

(assert (=> bm!11573 m!123223))

(declare-fun m!123225 () Bool)

(assert (=> b!109022 m!123225))

(declare-fun m!123227 () Bool)

(assert (=> b!109023 m!123227))

(declare-fun m!123229 () Bool)

(assert (=> d!30441 m!123229))

(assert (=> d!30441 m!121497))

(declare-fun m!123231 () Bool)

(assert (=> b!109015 m!123231))

(assert (=> d!29903 d!30441))

(declare-fun d!30443 () Bool)

(declare-fun e!70935 () Bool)

(assert (=> d!30443 e!70935))

(declare-fun res!54038 () Bool)

(assert (=> d!30443 (=> res!54038 e!70935)))

(declare-fun lt!56109 () Bool)

(assert (=> d!30443 (= res!54038 (not lt!56109))))

(declare-fun lt!56110 () Bool)

(assert (=> d!30443 (= lt!56109 lt!56110)))

(declare-fun lt!56108 () Unit!3321)

(declare-fun e!70934 () Unit!3321)

(assert (=> d!30443 (= lt!56108 e!70934)))

(declare-fun c!19224 () Bool)

(assert (=> d!30443 (= c!19224 lt!56110)))

(assert (=> d!30443 (= lt!56110 (containsKey!161 (toList!808 lt!55586) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!30443 (= (contains!834 lt!55586 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) lt!56109)))

(declare-fun b!109024 () Bool)

(declare-fun lt!56111 () Unit!3321)

(assert (=> b!109024 (= e!70934 lt!56111)))

(assert (=> b!109024 (= lt!56111 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55586) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> b!109024 (isDefined!110 (getValueByKey!157 (toList!808 lt!55586) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!109025 () Bool)

(declare-fun Unit!3374 () Unit!3321)

(assert (=> b!109025 (= e!70934 Unit!3374)))

(declare-fun b!109026 () Bool)

(assert (=> b!109026 (= e!70935 (isDefined!110 (getValueByKey!157 (toList!808 lt!55586) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (= (and d!30443 c!19224) b!109024))

(assert (= (and d!30443 (not c!19224)) b!109025))

(assert (= (and d!30443 (not res!54038)) b!109026))

(declare-fun m!123233 () Bool)

(assert (=> d!30443 m!123233))

(declare-fun m!123235 () Bool)

(assert (=> b!109024 m!123235))

(assert (=> b!109024 m!121529))

(assert (=> b!109024 m!121529))

(declare-fun m!123237 () Bool)

(assert (=> b!109024 m!123237))

(assert (=> b!109026 m!121529))

(assert (=> b!109026 m!121529))

(assert (=> b!109026 m!123237))

(assert (=> d!29897 d!30443))

(declare-fun c!19225 () Bool)

(declare-fun d!30445 () Bool)

(assert (=> d!30445 (= c!19225 (and ((_ is Cons!1621) lt!55588) (= (_1!1225 (h!2219 lt!55588)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun e!70936 () Option!163)

(assert (=> d!30445 (= (getValueByKey!157 lt!55588 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) e!70936)))

(declare-fun b!109028 () Bool)

(declare-fun e!70937 () Option!163)

(assert (=> b!109028 (= e!70936 e!70937)))

(declare-fun c!19226 () Bool)

(assert (=> b!109028 (= c!19226 (and ((_ is Cons!1621) lt!55588) (not (= (_1!1225 (h!2219 lt!55588)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun b!109029 () Bool)

(assert (=> b!109029 (= e!70937 (getValueByKey!157 (t!5741 lt!55588) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!109027 () Bool)

(assert (=> b!109027 (= e!70936 (Some!162 (_2!1225 (h!2219 lt!55588))))))

(declare-fun b!109030 () Bool)

(assert (=> b!109030 (= e!70937 None!161)))

(assert (= (and d!30445 c!19225) b!109027))

(assert (= (and d!30445 (not c!19225)) b!109028))

(assert (= (and b!109028 c!19226) b!109029))

(assert (= (and b!109028 (not c!19226)) b!109030))

(declare-fun m!123239 () Bool)

(assert (=> b!109029 m!123239))

(assert (=> d!29897 d!30445))

(declare-fun d!30447 () Bool)

(assert (=> d!30447 (= (getValueByKey!157 lt!55588 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun lt!56112 () Unit!3321)

(assert (=> d!30447 (= lt!56112 (choose!672 lt!55588 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun e!70938 () Bool)

(assert (=> d!30447 e!70938))

(declare-fun res!54039 () Bool)

(assert (=> d!30447 (=> (not res!54039) (not e!70938))))

(assert (=> d!30447 (= res!54039 (isStrictlySorted!310 lt!55588))))

(assert (=> d!30447 (= (lemmaContainsTupThenGetReturnValue!73 lt!55588 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) lt!56112)))

(declare-fun b!109031 () Bool)

(declare-fun res!54040 () Bool)

(assert (=> b!109031 (=> (not res!54040) (not e!70938))))

(assert (=> b!109031 (= res!54040 (containsKey!161 lt!55588 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!109032 () Bool)

(assert (=> b!109032 (= e!70938 (contains!836 lt!55588 (tuple2!2429 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (= (and d!30447 res!54039) b!109031))

(assert (= (and b!109031 res!54040) b!109032))

(assert (=> d!30447 m!121523))

(declare-fun m!123241 () Bool)

(assert (=> d!30447 m!123241))

(declare-fun m!123243 () Bool)

(assert (=> d!30447 m!123243))

(declare-fun m!123245 () Bool)

(assert (=> b!109031 m!123245))

(declare-fun m!123247 () Bool)

(assert (=> b!109032 m!123247))

(assert (=> d!29897 d!30447))

(declare-fun b!109033 () Bool)

(declare-fun e!70942 () List!1625)

(declare-fun e!70940 () List!1625)

(assert (=> b!109033 (= e!70942 e!70940)))

(declare-fun c!19229 () Bool)

(assert (=> b!109033 (= c!19229 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun call!11580 () List!1625)

(declare-fun bm!11576 () Bool)

(declare-fun e!70939 () List!1625)

(declare-fun c!19228 () Bool)

(assert (=> bm!11576 (= call!11580 ($colon$colon!82 e!70939 (ite c!19228 (h!2219 (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (tuple2!2429 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun c!19227 () Bool)

(assert (=> bm!11576 (= c!19227 c!19228)))

(declare-fun b!109034 () Bool)

(assert (=> b!109034 (= e!70939 (insertStrictlySorted!76 (t!5741 (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!109035 () Bool)

(declare-fun c!19230 () Bool)

(assert (=> b!109035 (= e!70939 (ite c!19229 (t!5741 (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (ite c!19230 (Cons!1621 (h!2219 (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (t!5741 (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))) Nil!1622)))))

(declare-fun b!109036 () Bool)

(declare-fun e!70943 () List!1625)

(declare-fun call!11579 () List!1625)

(assert (=> b!109036 (= e!70943 call!11579)))

(declare-fun bm!11577 () Bool)

(declare-fun call!11581 () List!1625)

(assert (=> bm!11577 (= call!11579 call!11581)))

(declare-fun b!109037 () Bool)

(assert (=> b!109037 (= e!70942 call!11580)))

(declare-fun d!30449 () Bool)

(declare-fun e!70941 () Bool)

(assert (=> d!30449 e!70941))

(declare-fun res!54041 () Bool)

(assert (=> d!30449 (=> (not res!54041) (not e!70941))))

(declare-fun lt!56113 () List!1625)

(assert (=> d!30449 (= res!54041 (isStrictlySorted!310 lt!56113))))

(assert (=> d!30449 (= lt!56113 e!70942)))

(assert (=> d!30449 (= c!19228 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (bvslt (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (=> d!30449 (isStrictlySorted!310 (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30449 (= (insertStrictlySorted!76 (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) lt!56113)))

(declare-fun b!109038 () Bool)

(assert (=> b!109038 (= e!70943 call!11579)))

(declare-fun bm!11578 () Bool)

(assert (=> bm!11578 (= call!11581 call!11580)))

(declare-fun b!109039 () Bool)

(assert (=> b!109039 (= c!19230 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (bvsgt (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (=> b!109039 (= e!70940 e!70943)))

(declare-fun b!109040 () Bool)

(assert (=> b!109040 (= e!70940 call!11581)))

(declare-fun b!109041 () Bool)

(declare-fun res!54042 () Bool)

(assert (=> b!109041 (=> (not res!54042) (not e!70941))))

(assert (=> b!109041 (= res!54042 (containsKey!161 lt!56113 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!109042 () Bool)

(assert (=> b!109042 (= e!70941 (contains!836 lt!56113 (tuple2!2429 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (= (and d!30449 c!19228) b!109037))

(assert (= (and d!30449 (not c!19228)) b!109033))

(assert (= (and b!109033 c!19229) b!109040))

(assert (= (and b!109033 (not c!19229)) b!109039))

(assert (= (and b!109039 c!19230) b!109038))

(assert (= (and b!109039 (not c!19230)) b!109036))

(assert (= (or b!109038 b!109036) bm!11577))

(assert (= (or b!109040 bm!11577) bm!11578))

(assert (= (or b!109037 bm!11578) bm!11576))

(assert (= (and bm!11576 c!19227) b!109034))

(assert (= (and bm!11576 (not c!19227)) b!109035))

(assert (= (and d!30449 res!54041) b!109041))

(assert (= (and b!109041 res!54042) b!109042))

(declare-fun m!123249 () Bool)

(assert (=> bm!11576 m!123249))

(declare-fun m!123251 () Bool)

(assert (=> b!109041 m!123251))

(declare-fun m!123253 () Bool)

(assert (=> b!109042 m!123253))

(declare-fun m!123255 () Bool)

(assert (=> d!30449 m!123255))

(declare-fun m!123257 () Bool)

(assert (=> d!30449 m!123257))

(declare-fun m!123259 () Bool)

(assert (=> b!109034 m!123259))

(assert (=> d!29897 d!30449))

(declare-fun d!30451 () Bool)

(declare-fun e!70945 () Bool)

(assert (=> d!30451 e!70945))

(declare-fun res!54043 () Bool)

(assert (=> d!30451 (=> res!54043 e!70945)))

(declare-fun lt!56115 () Bool)

(assert (=> d!30451 (= res!54043 (not lt!56115))))

(declare-fun lt!56116 () Bool)

(assert (=> d!30451 (= lt!56115 lt!56116)))

(declare-fun lt!56114 () Unit!3321)

(declare-fun e!70944 () Unit!3321)

(assert (=> d!30451 (= lt!56114 e!70944)))

(declare-fun c!19231 () Bool)

(assert (=> d!30451 (= c!19231 lt!56116)))

(assert (=> d!30451 (= lt!56116 (containsKey!161 (toList!808 lt!55645) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30451 (= (contains!834 lt!55645 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56115)))

(declare-fun b!109043 () Bool)

(declare-fun lt!56117 () Unit!3321)

(assert (=> b!109043 (= e!70944 lt!56117)))

(assert (=> b!109043 (= lt!56117 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55645) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109043 (isDefined!110 (getValueByKey!157 (toList!808 lt!55645) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109044 () Bool)

(declare-fun Unit!3375 () Unit!3321)

(assert (=> b!109044 (= e!70944 Unit!3375)))

(declare-fun b!109045 () Bool)

(assert (=> b!109045 (= e!70945 (isDefined!110 (getValueByKey!157 (toList!808 lt!55645) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30451 c!19231) b!109043))

(assert (= (and d!30451 (not c!19231)) b!109044))

(assert (= (and d!30451 (not res!54043)) b!109045))

(declare-fun m!123261 () Bool)

(assert (=> d!30451 m!123261))

(declare-fun m!123263 () Bool)

(assert (=> b!109043 m!123263))

(declare-fun m!123265 () Bool)

(assert (=> b!109043 m!123265))

(assert (=> b!109043 m!123265))

(declare-fun m!123267 () Bool)

(assert (=> b!109043 m!123267))

(assert (=> b!109045 m!123265))

(assert (=> b!109045 m!123265))

(assert (=> b!109045 m!123267))

(assert (=> bm!11478 d!30451))

(declare-fun d!30453 () Bool)

(declare-fun e!70946 () Bool)

(assert (=> d!30453 e!70946))

(declare-fun res!54044 () Bool)

(assert (=> d!30453 (=> (not res!54044) (not e!70946))))

(declare-fun lt!56118 () ListLongMap!1585)

(assert (=> d!30453 (= res!54044 (contains!834 lt!56118 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun lt!56120 () List!1625)

(assert (=> d!30453 (= lt!56118 (ListLongMap!1586 lt!56120))))

(declare-fun lt!56119 () Unit!3321)

(declare-fun lt!56121 () Unit!3321)

(assert (=> d!30453 (= lt!56119 lt!56121)))

(assert (=> d!30453 (= (getValueByKey!157 lt!56120 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (=> d!30453 (= lt!56121 (lemmaContainsTupThenGetReturnValue!73 lt!56120 (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (=> d!30453 (= lt!56120 (insertStrictlySorted!76 (toList!808 call!11503) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))) (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (=> d!30453 (= (+!148 call!11503 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))) lt!56118)))

(declare-fun b!109046 () Bool)

(declare-fun res!54045 () Bool)

(assert (=> b!109046 (=> (not res!54045) (not e!70946))))

(assert (=> b!109046 (= res!54045 (= (getValueByKey!157 (toList!808 lt!56118) (_1!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(declare-fun b!109047 () Bool)

(assert (=> b!109047 (= e!70946 (contains!836 (toList!808 lt!56118) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(assert (= (and d!30453 res!54044) b!109046))

(assert (= (and b!109046 res!54045) b!109047))

(declare-fun m!123269 () Bool)

(assert (=> d!30453 m!123269))

(declare-fun m!123271 () Bool)

(assert (=> d!30453 m!123271))

(declare-fun m!123273 () Bool)

(assert (=> d!30453 m!123273))

(declare-fun m!123275 () Bool)

(assert (=> d!30453 m!123275))

(declare-fun m!123277 () Bool)

(assert (=> b!109046 m!123277))

(declare-fun m!123279 () Bool)

(assert (=> b!109047 m!123279))

(assert (=> b!108317 d!30453))

(declare-fun b!109048 () Bool)

(declare-fun e!70949 () Bool)

(declare-fun call!11582 () Bool)

(assert (=> b!109048 (= e!70949 call!11582)))

(declare-fun b!109049 () Bool)

(declare-fun e!70950 () Bool)

(assert (=> b!109049 (= e!70950 (contains!837 Nil!1623 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000)))))

(declare-fun bm!11579 () Bool)

(declare-fun c!19232 () Bool)

(assert (=> bm!11579 (= call!11582 (arrayNoDuplicates!0 (_keys!4316 (_2!1226 lt!55419)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19232 (Cons!1622 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000) Nil!1623) Nil!1623)))))

(declare-fun b!109051 () Bool)

(assert (=> b!109051 (= e!70949 call!11582)))

(declare-fun b!109052 () Bool)

(declare-fun e!70947 () Bool)

(declare-fun e!70948 () Bool)

(assert (=> b!109052 (= e!70947 e!70948)))

(declare-fun res!54048 () Bool)

(assert (=> b!109052 (=> (not res!54048) (not e!70948))))

(assert (=> b!109052 (= res!54048 (not e!70950))))

(declare-fun res!54046 () Bool)

(assert (=> b!109052 (=> (not res!54046) (not e!70950))))

(assert (=> b!109052 (= res!54046 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000)))))

(declare-fun d!30455 () Bool)

(declare-fun res!54047 () Bool)

(assert (=> d!30455 (=> res!54047 e!70947)))

(assert (=> d!30455 (= res!54047 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55419)))))))

(assert (=> d!30455 (= (arrayNoDuplicates!0 (_keys!4316 (_2!1226 lt!55419)) #b00000000000000000000000000000000 Nil!1623) e!70947)))

(declare-fun b!109050 () Bool)

(assert (=> b!109050 (= e!70948 e!70949)))

(assert (=> b!109050 (= c!19232 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000)))))

(assert (= (and d!30455 (not res!54047)) b!109052))

(assert (= (and b!109052 res!54046) b!109049))

(assert (= (and b!109052 res!54048) b!109050))

(assert (= (and b!109050 c!19232) b!109051))

(assert (= (and b!109050 (not c!19232)) b!109048))

(assert (= (or b!109051 b!109048) bm!11579))

(declare-fun m!123281 () Bool)

(assert (=> b!109049 m!123281))

(assert (=> b!109049 m!123281))

(declare-fun m!123283 () Bool)

(assert (=> b!109049 m!123283))

(assert (=> bm!11579 m!123281))

(declare-fun m!123285 () Bool)

(assert (=> bm!11579 m!123285))

(assert (=> b!109052 m!123281))

(assert (=> b!109052 m!123281))

(declare-fun m!123287 () Bool)

(assert (=> b!109052 m!123287))

(assert (=> b!109050 m!123281))

(assert (=> b!109050 m!123281))

(assert (=> b!109050 m!123287))

(assert (=> b!108292 d!30455))

(declare-fun d!30457 () Bool)

(declare-fun c!19233 () Bool)

(assert (=> d!30457 (= c!19233 ((_ is ValueCellFull!1002) (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!70951 () V!3235)

(assert (=> d!30457 (= (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70951)))

(declare-fun b!109053 () Bool)

(assert (=> b!109053 (= e!70951 (get!1342 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109054 () Bool)

(assert (=> b!109054 (= e!70951 (get!1343 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30457 c!19233) b!109053))

(assert (= (and d!30457 (not c!19233)) b!109054))

(assert (=> b!109053 m!121819))

(assert (=> b!109053 m!121015))

(declare-fun m!123289 () Bool)

(assert (=> b!109053 m!123289))

(assert (=> b!109054 m!121819))

(assert (=> b!109054 m!121015))

(declare-fun m!123291 () Bool)

(assert (=> b!109054 m!123291))

(assert (=> b!108231 d!30457))

(declare-fun d!30459 () Bool)

(declare-fun e!70953 () Bool)

(assert (=> d!30459 e!70953))

(declare-fun res!54049 () Bool)

(assert (=> d!30459 (=> res!54049 e!70953)))

(declare-fun lt!56123 () Bool)

(assert (=> d!30459 (= res!54049 (not lt!56123))))

(declare-fun lt!56124 () Bool)

(assert (=> d!30459 (= lt!56123 lt!56124)))

(declare-fun lt!56122 () Unit!3321)

(declare-fun e!70952 () Unit!3321)

(assert (=> d!30459 (= lt!56122 e!70952)))

(declare-fun c!19234 () Bool)

(assert (=> d!30459 (= c!19234 lt!56124)))

(assert (=> d!30459 (= lt!56124 (containsKey!161 (toList!808 (+!148 lt!55686 (tuple2!2429 lt!55688 lt!55687))) lt!55689))))

(assert (=> d!30459 (= (contains!834 (+!148 lt!55686 (tuple2!2429 lt!55688 lt!55687)) lt!55689) lt!56123)))

(declare-fun b!109055 () Bool)

(declare-fun lt!56125 () Unit!3321)

(assert (=> b!109055 (= e!70952 lt!56125)))

(assert (=> b!109055 (= lt!56125 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 (+!148 lt!55686 (tuple2!2429 lt!55688 lt!55687))) lt!55689))))

(assert (=> b!109055 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55686 (tuple2!2429 lt!55688 lt!55687))) lt!55689))))

(declare-fun b!109056 () Bool)

(declare-fun Unit!3376 () Unit!3321)

(assert (=> b!109056 (= e!70952 Unit!3376)))

(declare-fun b!109057 () Bool)

(assert (=> b!109057 (= e!70953 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55686 (tuple2!2429 lt!55688 lt!55687))) lt!55689)))))

(assert (= (and d!30459 c!19234) b!109055))

(assert (= (and d!30459 (not c!19234)) b!109056))

(assert (= (and d!30459 (not res!54049)) b!109057))

(declare-fun m!123293 () Bool)

(assert (=> d!30459 m!123293))

(declare-fun m!123295 () Bool)

(assert (=> b!109055 m!123295))

(declare-fun m!123297 () Bool)

(assert (=> b!109055 m!123297))

(assert (=> b!109055 m!123297))

(declare-fun m!123299 () Bool)

(assert (=> b!109055 m!123299))

(assert (=> b!109057 m!123297))

(assert (=> b!109057 m!123297))

(assert (=> b!109057 m!123299))

(assert (=> b!108231 d!30459))

(declare-fun d!30461 () Bool)

(declare-fun e!70954 () Bool)

(assert (=> d!30461 e!70954))

(declare-fun res!54050 () Bool)

(assert (=> d!30461 (=> (not res!54050) (not e!70954))))

(declare-fun lt!56126 () ListLongMap!1585)

(assert (=> d!30461 (= res!54050 (contains!834 lt!56126 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!56128 () List!1625)

(assert (=> d!30461 (= lt!56126 (ListLongMap!1586 lt!56128))))

(declare-fun lt!56127 () Unit!3321)

(declare-fun lt!56129 () Unit!3321)

(assert (=> d!30461 (= lt!56127 lt!56129)))

(assert (=> d!30461 (= (getValueByKey!157 lt!56128 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30461 (= lt!56129 (lemmaContainsTupThenGetReturnValue!73 lt!56128 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30461 (= lt!56128 (insertStrictlySorted!76 (toList!808 call!11486) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30461 (= (+!148 call!11486 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!56126)))

(declare-fun b!109058 () Bool)

(declare-fun res!54051 () Bool)

(assert (=> b!109058 (=> (not res!54051) (not e!70954))))

(assert (=> b!109058 (= res!54051 (= (getValueByKey!157 (toList!808 lt!56126) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!109059 () Bool)

(assert (=> b!109059 (= e!70954 (contains!836 (toList!808 lt!56126) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30461 res!54050) b!109058))

(assert (= (and b!109058 res!54051) b!109059))

(declare-fun m!123301 () Bool)

(assert (=> d!30461 m!123301))

(declare-fun m!123303 () Bool)

(assert (=> d!30461 m!123303))

(declare-fun m!123305 () Bool)

(assert (=> d!30461 m!123305))

(declare-fun m!123307 () Bool)

(assert (=> d!30461 m!123307))

(declare-fun m!123309 () Bool)

(assert (=> b!109058 m!123309))

(declare-fun m!123311 () Bool)

(assert (=> b!109059 m!123311))

(assert (=> b!108231 d!30461))

(declare-fun d!30463 () Bool)

(assert (=> d!30463 (not (contains!834 (+!148 lt!55686 (tuple2!2429 lt!55688 lt!55687)) lt!55689))))

(declare-fun lt!56130 () Unit!3321)

(assert (=> d!30463 (= lt!56130 (choose!671 lt!55686 lt!55688 lt!55687 lt!55689))))

(declare-fun e!70955 () Bool)

(assert (=> d!30463 e!70955))

(declare-fun res!54052 () Bool)

(assert (=> d!30463 (=> (not res!54052) (not e!70955))))

(assert (=> d!30463 (= res!54052 (not (contains!834 lt!55686 lt!55689)))))

(assert (=> d!30463 (= (addStillNotContains!47 lt!55686 lt!55688 lt!55687 lt!55689) lt!56130)))

(declare-fun b!109060 () Bool)

(assert (=> b!109060 (= e!70955 (not (= lt!55688 lt!55689)))))

(assert (= (and d!30463 res!54052) b!109060))

(assert (=> d!30463 m!121829))

(assert (=> d!30463 m!121829))

(assert (=> d!30463 m!121831))

(declare-fun m!123313 () Bool)

(assert (=> d!30463 m!123313))

(declare-fun m!123315 () Bool)

(assert (=> d!30463 m!123315))

(assert (=> b!108231 d!30463))

(declare-fun d!30465 () Bool)

(declare-fun e!70956 () Bool)

(assert (=> d!30465 e!70956))

(declare-fun res!54053 () Bool)

(assert (=> d!30465 (=> (not res!54053) (not e!70956))))

(declare-fun lt!56131 () ListLongMap!1585)

(assert (=> d!30465 (= res!54053 (contains!834 lt!56131 (_1!1225 (tuple2!2429 lt!55688 lt!55687))))))

(declare-fun lt!56133 () List!1625)

(assert (=> d!30465 (= lt!56131 (ListLongMap!1586 lt!56133))))

(declare-fun lt!56132 () Unit!3321)

(declare-fun lt!56134 () Unit!3321)

(assert (=> d!30465 (= lt!56132 lt!56134)))

(assert (=> d!30465 (= (getValueByKey!157 lt!56133 (_1!1225 (tuple2!2429 lt!55688 lt!55687))) (Some!162 (_2!1225 (tuple2!2429 lt!55688 lt!55687))))))

(assert (=> d!30465 (= lt!56134 (lemmaContainsTupThenGetReturnValue!73 lt!56133 (_1!1225 (tuple2!2429 lt!55688 lt!55687)) (_2!1225 (tuple2!2429 lt!55688 lt!55687))))))

(assert (=> d!30465 (= lt!56133 (insertStrictlySorted!76 (toList!808 lt!55686) (_1!1225 (tuple2!2429 lt!55688 lt!55687)) (_2!1225 (tuple2!2429 lt!55688 lt!55687))))))

(assert (=> d!30465 (= (+!148 lt!55686 (tuple2!2429 lt!55688 lt!55687)) lt!56131)))

(declare-fun b!109061 () Bool)

(declare-fun res!54054 () Bool)

(assert (=> b!109061 (=> (not res!54054) (not e!70956))))

(assert (=> b!109061 (= res!54054 (= (getValueByKey!157 (toList!808 lt!56131) (_1!1225 (tuple2!2429 lt!55688 lt!55687))) (Some!162 (_2!1225 (tuple2!2429 lt!55688 lt!55687)))))))

(declare-fun b!109062 () Bool)

(assert (=> b!109062 (= e!70956 (contains!836 (toList!808 lt!56131) (tuple2!2429 lt!55688 lt!55687)))))

(assert (= (and d!30465 res!54053) b!109061))

(assert (= (and b!109061 res!54054) b!109062))

(declare-fun m!123317 () Bool)

(assert (=> d!30465 m!123317))

(declare-fun m!123319 () Bool)

(assert (=> d!30465 m!123319))

(declare-fun m!123321 () Bool)

(assert (=> d!30465 m!123321))

(declare-fun m!123323 () Bool)

(assert (=> d!30465 m!123323))

(declare-fun m!123325 () Bool)

(assert (=> b!109061 m!123325))

(declare-fun m!123327 () Bool)

(assert (=> b!109062 m!123327))

(assert (=> b!108231 d!30465))

(declare-fun d!30467 () Bool)

(declare-fun res!54055 () Bool)

(declare-fun e!70957 () Bool)

(assert (=> d!30467 (=> res!54055 e!70957)))

(assert (=> d!30467 (= res!54055 (and ((_ is Cons!1621) (toList!808 lt!55236)) (= (_1!1225 (h!2219 (toList!808 lt!55236))) (_1!1225 lt!55183))))))

(assert (=> d!30467 (= (containsKey!161 (toList!808 lt!55236) (_1!1225 lt!55183)) e!70957)))

(declare-fun b!109063 () Bool)

(declare-fun e!70958 () Bool)

(assert (=> b!109063 (= e!70957 e!70958)))

(declare-fun res!54056 () Bool)

(assert (=> b!109063 (=> (not res!54056) (not e!70958))))

(assert (=> b!109063 (= res!54056 (and (or (not ((_ is Cons!1621) (toList!808 lt!55236))) (bvsle (_1!1225 (h!2219 (toList!808 lt!55236))) (_1!1225 lt!55183))) ((_ is Cons!1621) (toList!808 lt!55236)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55236))) (_1!1225 lt!55183))))))

(declare-fun b!109064 () Bool)

(assert (=> b!109064 (= e!70958 (containsKey!161 (t!5741 (toList!808 lt!55236)) (_1!1225 lt!55183)))))

(assert (= (and d!30467 (not res!54055)) b!109063))

(assert (= (and b!109063 res!54056) b!109064))

(declare-fun m!123329 () Bool)

(assert (=> b!109064 m!123329))

(assert (=> d!30035 d!30467))

(declare-fun d!30469 () Bool)

(assert (=> d!30469 (= (map!1294 (_2!1226 lt!55533)) (getCurrentListMap!493 (_keys!4316 (_2!1226 lt!55533)) (_values!2589 (_2!1226 lt!55533)) (mask!6764 (_2!1226 lt!55533)) (extraKeys!2407 (_2!1226 lt!55533)) (zeroValue!2479 (_2!1226 lt!55533)) (minValue!2479 (_2!1226 lt!55533)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1226 lt!55533))))))

(declare-fun bs!4488 () Bool)

(assert (= bs!4488 d!30469))

(declare-fun m!123331 () Bool)

(assert (=> bs!4488 m!123331))

(assert (=> b!108037 d!30469))

(declare-fun d!30471 () Bool)

(declare-fun e!70959 () Bool)

(assert (=> d!30471 e!70959))

(declare-fun res!54057 () Bool)

(assert (=> d!30471 (=> (not res!54057) (not e!70959))))

(declare-fun lt!56135 () ListLongMap!1585)

(assert (=> d!30471 (= res!54057 (contains!834 lt!56135 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun lt!56137 () List!1625)

(assert (=> d!30471 (= lt!56135 (ListLongMap!1586 lt!56137))))

(declare-fun lt!56136 () Unit!3321)

(declare-fun lt!56138 () Unit!3321)

(assert (=> d!30471 (= lt!56136 lt!56138)))

(assert (=> d!30471 (= (getValueByKey!157 lt!56137 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!30471 (= lt!56138 (lemmaContainsTupThenGetReturnValue!73 lt!56137 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!30471 (= lt!56137 (insertStrictlySorted!76 (toList!808 (map!1294 newMap!16)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!30471 (= (+!148 (map!1294 newMap!16) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) lt!56135)))

(declare-fun b!109065 () Bool)

(declare-fun res!54058 () Bool)

(assert (=> b!109065 (=> (not res!54058) (not e!70959))))

(assert (=> b!109065 (= res!54058 (= (getValueByKey!157 (toList!808 lt!56135) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun b!109066 () Bool)

(assert (=> b!109066 (= e!70959 (contains!836 (toList!808 lt!56135) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(assert (= (and d!30471 res!54057) b!109065))

(assert (= (and b!109065 res!54058) b!109066))

(declare-fun m!123333 () Bool)

(assert (=> d!30471 m!123333))

(declare-fun m!123335 () Bool)

(assert (=> d!30471 m!123335))

(declare-fun m!123337 () Bool)

(assert (=> d!30471 m!123337))

(declare-fun m!123339 () Bool)

(assert (=> d!30471 m!123339))

(declare-fun m!123341 () Bool)

(assert (=> b!109065 m!123341))

(declare-fun m!123343 () Bool)

(assert (=> b!109066 m!123343))

(assert (=> b!108037 d!30471))

(assert (=> b!108037 d!29819))

(declare-fun d!30473 () Bool)

(declare-fun res!54059 () Bool)

(declare-fun e!70960 () Bool)

(assert (=> d!30473 (=> res!54059 e!70960)))

(assert (=> d!30473 (= res!54059 (and ((_ is Cons!1621) (toList!808 call!11424)) (= (_1!1225 (h!2219 (toList!808 call!11424))) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411)))))))

(assert (=> d!30473 (= (containsKey!161 (toList!808 call!11424) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))) e!70960)))

(declare-fun b!109067 () Bool)

(declare-fun e!70961 () Bool)

(assert (=> b!109067 (= e!70960 e!70961)))

(declare-fun res!54060 () Bool)

(assert (=> b!109067 (=> (not res!54060) (not e!70961))))

(assert (=> b!109067 (= res!54060 (and (or (not ((_ is Cons!1621) (toList!808 call!11424))) (bvsle (_1!1225 (h!2219 (toList!808 call!11424))) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411)))) ((_ is Cons!1621) (toList!808 call!11424)) (bvslt (_1!1225 (h!2219 (toList!808 call!11424))) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411)))))))

(declare-fun b!109068 () Bool)

(assert (=> b!109068 (= e!70961 (containsKey!161 (t!5741 (toList!808 call!11424)) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))

(assert (= (and d!30473 (not res!54059)) b!109067))

(assert (= (and b!109067 res!54060) b!109068))

(assert (=> b!109068 m!121265))

(declare-fun m!123345 () Bool)

(assert (=> b!109068 m!123345))

(assert (=> d!29935 d!30473))

(declare-fun d!30475 () Bool)

(assert (=> d!30475 (= (size!2335 newMap!16) (bvadd (_size!505 newMap!16) (bvsdiv (bvadd (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!107984 d!30475))

(declare-fun c!19235 () Bool)

(declare-fun d!30477 () Bool)

(assert (=> d!30477 (= c!19235 (and ((_ is Cons!1621) (toList!808 lt!55568)) (= (_1!1225 (h!2219 (toList!808 lt!55568))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!70962 () Option!163)

(assert (=> d!30477 (= (getValueByKey!157 (toList!808 lt!55568) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!70962)))

(declare-fun b!109070 () Bool)

(declare-fun e!70963 () Option!163)

(assert (=> b!109070 (= e!70962 e!70963)))

(declare-fun c!19236 () Bool)

(assert (=> b!109070 (= c!19236 (and ((_ is Cons!1621) (toList!808 lt!55568)) (not (= (_1!1225 (h!2219 (toList!808 lt!55568))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!109071 () Bool)

(assert (=> b!109071 (= e!70963 (getValueByKey!157 (t!5741 (toList!808 lt!55568)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!109069 () Bool)

(assert (=> b!109069 (= e!70962 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55568)))))))

(declare-fun b!109072 () Bool)

(assert (=> b!109072 (= e!70963 None!161)))

(assert (= (and d!30477 c!19235) b!109069))

(assert (= (and d!30477 (not c!19235)) b!109070))

(assert (= (and b!109070 c!19236) b!109071))

(assert (= (and b!109070 (not c!19236)) b!109072))

(declare-fun m!123347 () Bool)

(assert (=> b!109071 m!123347))

(assert (=> b!108067 d!30477))

(declare-fun d!30479 () Bool)

(declare-fun c!19237 () Bool)

(assert (=> d!30479 (= c!19237 (and ((_ is Cons!1621) (toList!808 lt!55693)) (= (_1!1225 (h!2219 (toList!808 lt!55693))) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun e!70964 () Option!163)

(assert (=> d!30479 (= (getValueByKey!157 (toList!808 lt!55693) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) e!70964)))

(declare-fun b!109074 () Bool)

(declare-fun e!70965 () Option!163)

(assert (=> b!109074 (= e!70964 e!70965)))

(declare-fun c!19238 () Bool)

(assert (=> b!109074 (= c!19238 (and ((_ is Cons!1621) (toList!808 lt!55693)) (not (= (_1!1225 (h!2219 (toList!808 lt!55693))) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))))

(declare-fun b!109075 () Bool)

(assert (=> b!109075 (= e!70965 (getValueByKey!157 (t!5741 (toList!808 lt!55693)) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!109073 () Bool)

(assert (=> b!109073 (= e!70964 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55693)))))))

(declare-fun b!109076 () Bool)

(assert (=> b!109076 (= e!70965 None!161)))

(assert (= (and d!30479 c!19237) b!109073))

(assert (= (and d!30479 (not c!19237)) b!109074))

(assert (= (and b!109074 c!19238) b!109075))

(assert (= (and b!109074 (not c!19238)) b!109076))

(declare-fun m!123349 () Bool)

(assert (=> b!109075 m!123349))

(assert (=> b!108244 d!30479))

(declare-fun d!30481 () Bool)

(declare-fun lt!56139 () Bool)

(assert (=> d!30481 (= lt!56139 (select (content!111 (toList!808 lt!55598)) (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!70967 () Bool)

(assert (=> d!30481 (= lt!56139 e!70967)))

(declare-fun res!54062 () Bool)

(assert (=> d!30481 (=> (not res!54062) (not e!70967))))

(assert (=> d!30481 (= res!54062 ((_ is Cons!1621) (toList!808 lt!55598)))))

(assert (=> d!30481 (= (contains!836 (toList!808 lt!55598) (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!56139)))

(declare-fun b!109077 () Bool)

(declare-fun e!70966 () Bool)

(assert (=> b!109077 (= e!70967 e!70966)))

(declare-fun res!54061 () Bool)

(assert (=> b!109077 (=> res!54061 e!70966)))

(assert (=> b!109077 (= res!54061 (= (h!2219 (toList!808 lt!55598)) (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!109078 () Bool)

(assert (=> b!109078 (= e!70966 (contains!836 (t!5741 (toList!808 lt!55598)) (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30481 res!54062) b!109077))

(assert (= (and b!109077 (not res!54061)) b!109078))

(declare-fun m!123351 () Bool)

(assert (=> d!30481 m!123351))

(declare-fun m!123353 () Bool)

(assert (=> d!30481 m!123353))

(declare-fun m!123355 () Bool)

(assert (=> b!109078 m!123355))

(assert (=> b!108129 d!30481))

(declare-fun d!30483 () Bool)

(assert (=> d!30483 (= (apply!99 lt!55747 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1344 (getValueByKey!157 (toList!808 lt!55747) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4489 () Bool)

(assert (= bs!4489 d!30483))

(assert (=> bs!4489 m!121333))

(assert (=> bs!4489 m!122591))

(assert (=> bs!4489 m!122591))

(declare-fun m!123357 () Bool)

(assert (=> bs!4489 m!123357))

(assert (=> b!108342 d!30483))

(declare-fun c!19239 () Bool)

(declare-fun d!30485 () Bool)

(assert (=> d!30485 (= c!19239 ((_ is ValueCellFull!1002) (select (arr!2076 (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!70968 () V!3235)

(assert (=> d!30485 (= (get!1341 (select (arr!2076 (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70968)))

(declare-fun b!109079 () Bool)

(assert (=> b!109079 (= e!70968 (get!1342 (select (arr!2076 (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109080 () Bool)

(assert (=> b!109080 (= e!70968 (get!1343 (select (arr!2076 (ite (or c!18921 c!18917) (_values!2589 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30485 c!19239) b!109079))

(assert (= (and d!30485 (not c!19239)) b!109080))

(assert (=> b!109079 m!122007))

(assert (=> b!109079 m!121727))

(declare-fun m!123359 () Bool)

(assert (=> b!109079 m!123359))

(assert (=> b!109080 m!122007))

(assert (=> b!109080 m!121727))

(declare-fun m!123361 () Bool)

(assert (=> b!109080 m!123361))

(assert (=> b!108342 d!30485))

(declare-fun d!30487 () Bool)

(assert (=> d!30487 (= (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55339)) (v!2918 (getValueByKey!157 (toList!808 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55339)))))

(assert (=> d!29909 d!30487))

(declare-fun d!30489 () Bool)

(declare-fun c!19240 () Bool)

(assert (=> d!30489 (= c!19240 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))) lt!55339)))))

(declare-fun e!70969 () Option!163)

(assert (=> d!30489 (= (getValueByKey!157 (toList!808 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55339) e!70969)))

(declare-fun b!109082 () Bool)

(declare-fun e!70970 () Option!163)

(assert (=> b!109082 (= e!70969 e!70970)))

(declare-fun c!19241 () Bool)

(assert (=> b!109082 (= c!19241 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) (not (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))) lt!55339))))))

(declare-fun b!109083 () Bool)

(assert (=> b!109083 (= e!70970 (getValueByKey!157 (t!5741 (toList!808 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) lt!55339))))

(declare-fun b!109081 () Bool)

(assert (=> b!109081 (= e!70969 (Some!162 (_2!1225 (h!2219 (toList!808 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))))

(declare-fun b!109084 () Bool)

(assert (=> b!109084 (= e!70970 None!161)))

(assert (= (and d!30489 c!19240) b!109081))

(assert (= (and d!30489 (not c!19240)) b!109082))

(assert (= (and b!109082 c!19241) b!109083))

(assert (= (and b!109082 (not c!19241)) b!109084))

(declare-fun m!123363 () Bool)

(assert (=> b!109083 m!123363))

(assert (=> d!29909 d!30489))

(declare-fun d!30491 () Bool)

(assert (=> d!30491 (contains!834 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))

(declare-fun lt!56142 () Unit!3321)

(declare-fun choose!681 (array!4375 array!4377 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) (_ BitVec 32) Int) Unit!3321)

(assert (=> d!30491 (= lt!56142 (choose!681 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(assert (=> d!30491 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30491 (= (lemmaArrayContainsKeyThenInListMap!31 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56142)))

(declare-fun bs!4490 () Bool)

(assert (= bs!4490 d!30491))

(assert (=> bs!4490 m!121175))

(assert (=> bs!4490 m!121175))

(assert (=> bs!4490 m!120979))

(assert (=> bs!4490 m!121387))

(assert (=> bs!4490 m!120979))

(declare-fun m!123365 () Bool)

(assert (=> bs!4490 m!123365))

(assert (=> bs!4490 m!121327))

(assert (=> b!108045 d!30491))

(assert (=> b!108045 d!30361))

(assert (=> b!108045 d!29951))

(declare-fun d!30493 () Bool)

(assert (=> d!30493 (isDefined!110 (getValueByKey!157 (toList!808 call!11424) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))

(declare-fun lt!56143 () Unit!3321)

(assert (=> d!30493 (= lt!56143 (choose!677 (toList!808 call!11424) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))

(declare-fun e!70971 () Bool)

(assert (=> d!30493 e!70971))

(declare-fun res!54063 () Bool)

(assert (=> d!30493 (=> (not res!54063) (not e!70971))))

(assert (=> d!30493 (= res!54063 (isStrictlySorted!310 (toList!808 call!11424)))))

(assert (=> d!30493 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 call!11424) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))) lt!56143)))

(declare-fun b!109085 () Bool)

(assert (=> b!109085 (= e!70971 (containsKey!161 (toList!808 call!11424) (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!55411))))))

(assert (= (and d!30493 res!54063) b!109085))

(assert (=> d!30493 m!121265))

(assert (=> d!30493 m!121657))

(assert (=> d!30493 m!121657))

(assert (=> d!30493 m!121659))

(assert (=> d!30493 m!121265))

(declare-fun m!123367 () Bool)

(assert (=> d!30493 m!123367))

(declare-fun m!123369 () Bool)

(assert (=> d!30493 m!123369))

(assert (=> b!109085 m!121265))

(assert (=> b!109085 m!121653))

(assert (=> b!108146 d!30493))

(assert (=> b!108146 d!30325))

(assert (=> b!108146 d!30327))

(declare-fun d!30495 () Bool)

(assert (=> d!30495 (isDefined!110 (getValueByKey!157 (toList!808 lt!55236) (_1!1225 lt!55183)))))

(declare-fun lt!56144 () Unit!3321)

(assert (=> d!30495 (= lt!56144 (choose!677 (toList!808 lt!55236) (_1!1225 lt!55183)))))

(declare-fun e!70972 () Bool)

(assert (=> d!30495 e!70972))

(declare-fun res!54064 () Bool)

(assert (=> d!30495 (=> (not res!54064) (not e!70972))))

(assert (=> d!30495 (= res!54064 (isStrictlySorted!310 (toList!808 lt!55236)))))

(assert (=> d!30495 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55236) (_1!1225 lt!55183)) lt!56144)))

(declare-fun b!109086 () Bool)

(assert (=> b!109086 (= e!70972 (containsKey!161 (toList!808 lt!55236) (_1!1225 lt!55183)))))

(assert (= (and d!30495 res!54064) b!109086))

(assert (=> d!30495 m!121097))

(assert (=> d!30495 m!121097))

(assert (=> d!30495 m!122101))

(declare-fun m!123371 () Bool)

(assert (=> d!30495 m!123371))

(declare-fun m!123373 () Bool)

(assert (=> d!30495 m!123373))

(assert (=> b!109086 m!122097))

(assert (=> b!108400 d!30495))

(assert (=> b!108400 d!30329))

(assert (=> b!108400 d!29849))

(assert (=> b!108154 d!30371))

(assert (=> b!108154 d!29951))

(declare-fun bm!11580 () Bool)

(declare-fun call!11583 () Bool)

(declare-fun lt!56151 () ListLongMap!1585)

(assert (=> bm!11580 (= call!11583 (contains!834 lt!56151 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109087 () Bool)

(declare-fun e!70976 () Unit!3321)

(declare-fun lt!56157 () Unit!3321)

(assert (=> b!109087 (= e!70976 lt!56157)))

(declare-fun lt!56145 () ListLongMap!1585)

(assert (=> b!109087 (= lt!56145 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56163 () (_ BitVec 64))

(assert (=> b!109087 (= lt!56163 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56160 () (_ BitVec 64))

(assert (=> b!109087 (= lt!56160 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56158 () Unit!3321)

(assert (=> b!109087 (= lt!56158 (addStillContains!75 lt!56145 lt!56163 (zeroValue!2479 newMap!16) lt!56160))))

(assert (=> b!109087 (contains!834 (+!148 lt!56145 (tuple2!2429 lt!56163 (zeroValue!2479 newMap!16))) lt!56160)))

(declare-fun lt!56150 () Unit!3321)

(assert (=> b!109087 (= lt!56150 lt!56158)))

(declare-fun lt!56153 () ListLongMap!1585)

(assert (=> b!109087 (= lt!56153 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56162 () (_ BitVec 64))

(assert (=> b!109087 (= lt!56162 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56165 () (_ BitVec 64))

(assert (=> b!109087 (= lt!56165 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56161 () Unit!3321)

(assert (=> b!109087 (= lt!56161 (addApplyDifferent!75 lt!56153 lt!56162 (minValue!2479 newMap!16) lt!56165))))

(assert (=> b!109087 (= (apply!99 (+!148 lt!56153 (tuple2!2429 lt!56162 (minValue!2479 newMap!16))) lt!56165) (apply!99 lt!56153 lt!56165))))

(declare-fun lt!56166 () Unit!3321)

(assert (=> b!109087 (= lt!56166 lt!56161)))

(declare-fun lt!56156 () ListLongMap!1585)

(assert (=> b!109087 (= lt!56156 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56146 () (_ BitVec 64))

(assert (=> b!109087 (= lt!56146 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56159 () (_ BitVec 64))

(assert (=> b!109087 (= lt!56159 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56155 () Unit!3321)

(assert (=> b!109087 (= lt!56155 (addApplyDifferent!75 lt!56156 lt!56146 (zeroValue!2479 newMap!16) lt!56159))))

(assert (=> b!109087 (= (apply!99 (+!148 lt!56156 (tuple2!2429 lt!56146 (zeroValue!2479 newMap!16))) lt!56159) (apply!99 lt!56156 lt!56159))))

(declare-fun lt!56147 () Unit!3321)

(assert (=> b!109087 (= lt!56147 lt!56155)))

(declare-fun lt!56152 () ListLongMap!1585)

(assert (=> b!109087 (= lt!56152 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56149 () (_ BitVec 64))

(assert (=> b!109087 (= lt!56149 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56164 () (_ BitVec 64))

(assert (=> b!109087 (= lt!56164 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109087 (= lt!56157 (addApplyDifferent!75 lt!56152 lt!56149 (minValue!2479 newMap!16) lt!56164))))

(assert (=> b!109087 (= (apply!99 (+!148 lt!56152 (tuple2!2429 lt!56149 (minValue!2479 newMap!16))) lt!56164) (apply!99 lt!56152 lt!56164))))

(declare-fun bm!11581 () Bool)

(declare-fun call!11584 () ListLongMap!1585)

(declare-fun call!11589 () ListLongMap!1585)

(assert (=> bm!11581 (= call!11584 call!11589)))

(declare-fun b!109088 () Bool)

(declare-fun e!70973 () Bool)

(assert (=> b!109088 (= e!70973 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109090 () Bool)

(declare-fun res!54070 () Bool)

(declare-fun e!70980 () Bool)

(assert (=> b!109090 (=> (not res!54070) (not e!70980))))

(declare-fun e!70983 () Bool)

(assert (=> b!109090 (= res!54070 e!70983)))

(declare-fun c!19246 () Bool)

(assert (=> b!109090 (= c!19246 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!109091 () Bool)

(declare-fun e!70984 () ListLongMap!1585)

(assert (=> b!109091 (= e!70984 call!11584)))

(declare-fun b!109092 () Bool)

(declare-fun e!70977 () ListLongMap!1585)

(assert (=> b!109092 (= e!70977 call!11584)))

(declare-fun b!109093 () Bool)

(declare-fun res!54067 () Bool)

(assert (=> b!109093 (=> (not res!54067) (not e!70980))))

(declare-fun e!70985 () Bool)

(assert (=> b!109093 (= res!54067 e!70985)))

(declare-fun res!54065 () Bool)

(assert (=> b!109093 (=> res!54065 e!70985)))

(assert (=> b!109093 (= res!54065 (not e!70973))))

(declare-fun res!54066 () Bool)

(assert (=> b!109093 (=> (not res!54066) (not e!70973))))

(assert (=> b!109093 (= res!54066 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun bm!11582 () Bool)

(declare-fun call!11588 () ListLongMap!1585)

(assert (=> bm!11582 (= call!11588 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun bm!11583 () Bool)

(declare-fun c!19247 () Bool)

(declare-fun c!19245 () Bool)

(declare-fun call!11586 () ListLongMap!1585)

(declare-fun call!11587 () ListLongMap!1585)

(assert (=> bm!11583 (= call!11589 (+!148 (ite c!19245 call!11588 (ite c!19247 call!11586 call!11587)) (ite (or c!19245 c!19247) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!109094 () Bool)

(declare-fun Unit!3377 () Unit!3321)

(assert (=> b!109094 (= e!70976 Unit!3377)))

(declare-fun b!109095 () Bool)

(declare-fun e!70979 () Bool)

(assert (=> b!109095 (= e!70983 e!70979)))

(declare-fun res!54073 () Bool)

(assert (=> b!109095 (= res!54073 call!11583)))

(assert (=> b!109095 (=> (not res!54073) (not e!70979))))

(declare-fun d!30497 () Bool)

(assert (=> d!30497 e!70980))

(declare-fun res!54072 () Bool)

(assert (=> d!30497 (=> (not res!54072) (not e!70980))))

(assert (=> d!30497 (= res!54072 (or (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))))

(declare-fun lt!56154 () ListLongMap!1585)

(assert (=> d!30497 (= lt!56151 lt!56154)))

(declare-fun lt!56148 () Unit!3321)

(assert (=> d!30497 (= lt!56148 e!70976)))

(declare-fun c!19244 () Bool)

(declare-fun e!70981 () Bool)

(assert (=> d!30497 (= c!19244 e!70981)))

(declare-fun res!54068 () Bool)

(assert (=> d!30497 (=> (not res!54068) (not e!70981))))

(assert (=> d!30497 (= res!54068 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun e!70974 () ListLongMap!1585)

(assert (=> d!30497 (= lt!56154 e!70974)))

(assert (=> d!30497 (= c!19245 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30497 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30497 (= (getCurrentListMap!493 (_keys!4316 newMap!16) (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56151)))

(declare-fun b!109089 () Bool)

(declare-fun c!19242 () Bool)

(assert (=> b!109089 (= c!19242 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!109089 (= e!70984 e!70977)))

(declare-fun b!109096 () Bool)

(assert (=> b!109096 (= e!70981 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109097 () Bool)

(assert (=> b!109097 (= e!70983 (not call!11583))))

(declare-fun b!109098 () Bool)

(declare-fun e!70982 () Bool)

(declare-fun call!11585 () Bool)

(assert (=> b!109098 (= e!70982 (not call!11585))))

(declare-fun b!109099 () Bool)

(assert (=> b!109099 (= e!70980 e!70982)))

(declare-fun c!19243 () Bool)

(assert (=> b!109099 (= c!19243 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!109100 () Bool)

(declare-fun e!70978 () Bool)

(assert (=> b!109100 (= e!70985 e!70978)))

(declare-fun res!54069 () Bool)

(assert (=> b!109100 (=> (not res!54069) (not e!70978))))

(assert (=> b!109100 (= res!54069 (contains!834 lt!56151 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109100 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun bm!11584 () Bool)

(assert (=> bm!11584 (= call!11587 call!11586)))

(declare-fun b!109101 () Bool)

(declare-fun e!70975 () Bool)

(assert (=> b!109101 (= e!70975 (= (apply!99 lt!56151 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun bm!11585 () Bool)

(assert (=> bm!11585 (= call!11585 (contains!834 lt!56151 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109102 () Bool)

(assert (=> b!109102 (= e!70977 call!11587)))

(declare-fun b!109103 () Bool)

(assert (=> b!109103 (= e!70978 (= (apply!99 lt!56151 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109103 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 (array!4378 (store (arr!2076 (_values!2589 newMap!16)) (index!3190 lt!55411) (ValueCellFull!1002 lt!55184)) (size!2332 (_values!2589 newMap!16))))))))

(assert (=> b!109103 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!109104 () Bool)

(assert (=> b!109104 (= e!70974 (+!148 call!11589 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun b!109105 () Bool)

(assert (=> b!109105 (= e!70979 (= (apply!99 lt!56151 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!109106 () Bool)

(assert (=> b!109106 (= e!70974 e!70984)))

(assert (=> b!109106 (= c!19247 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!109107 () Bool)

(assert (=> b!109107 (= e!70982 e!70975)))

(declare-fun res!54071 () Bool)

(assert (=> b!109107 (= res!54071 call!11585)))

(assert (=> b!109107 (=> (not res!54071) (not e!70975))))

(declare-fun bm!11586 () Bool)

(assert (=> bm!11586 (= call!11586 call!11588)))

(assert (= (and d!30497 c!19245) b!109104))

(assert (= (and d!30497 (not c!19245)) b!109106))

(assert (= (and b!109106 c!19247) b!109091))

(assert (= (and b!109106 (not c!19247)) b!109089))

(assert (= (and b!109089 c!19242) b!109092))

(assert (= (and b!109089 (not c!19242)) b!109102))

(assert (= (or b!109092 b!109102) bm!11584))

(assert (= (or b!109091 bm!11584) bm!11586))

(assert (= (or b!109091 b!109092) bm!11581))

(assert (= (or b!109104 bm!11586) bm!11582))

(assert (= (or b!109104 bm!11581) bm!11583))

(assert (= (and d!30497 res!54068) b!109096))

(assert (= (and d!30497 c!19244) b!109087))

(assert (= (and d!30497 (not c!19244)) b!109094))

(assert (= (and d!30497 res!54072) b!109093))

(assert (= (and b!109093 res!54066) b!109088))

(assert (= (and b!109093 (not res!54065)) b!109100))

(assert (= (and b!109100 res!54069) b!109103))

(assert (= (and b!109093 res!54067) b!109090))

(assert (= (and b!109090 c!19246) b!109095))

(assert (= (and b!109090 (not c!19246)) b!109097))

(assert (= (and b!109095 res!54073) b!109105))

(assert (= (or b!109095 b!109097) bm!11580))

(assert (= (and b!109090 res!54070) b!109099))

(assert (= (and b!109099 c!19243) b!109107))

(assert (= (and b!109099 (not c!19243)) b!109098))

(assert (= (and b!109107 res!54071) b!109101))

(assert (= (or b!109107 b!109098) bm!11585))

(declare-fun b_lambda!4873 () Bool)

(assert (=> (not b_lambda!4873) (not b!109103)))

(assert (=> b!109103 t!5750))

(declare-fun b_and!6723 () Bool)

(assert (= b_and!6719 (and (=> t!5750 result!3509) b_and!6723)))

(assert (=> b!109103 t!5752))

(declare-fun b_and!6725 () Bool)

(assert (= b_and!6721 (and (=> t!5752 result!3511) b_and!6725)))

(declare-fun m!123375 () Bool)

(assert (=> bm!11580 m!123375))

(assert (=> b!109100 m!121333))

(assert (=> b!109100 m!121333))

(declare-fun m!123377 () Bool)

(assert (=> b!109100 m!123377))

(assert (=> b!109096 m!121333))

(assert (=> b!109096 m!121333))

(assert (=> b!109096 m!121341))

(declare-fun m!123379 () Bool)

(assert (=> bm!11585 m!123379))

(declare-fun m!123381 () Bool)

(assert (=> b!109087 m!123381))

(declare-fun m!123383 () Bool)

(assert (=> b!109087 m!123383))

(declare-fun m!123385 () Bool)

(assert (=> b!109087 m!123385))

(declare-fun m!123387 () Bool)

(assert (=> b!109087 m!123387))

(declare-fun m!123389 () Bool)

(assert (=> b!109087 m!123389))

(declare-fun m!123391 () Bool)

(assert (=> b!109087 m!123391))

(declare-fun m!123393 () Bool)

(assert (=> b!109087 m!123393))

(declare-fun m!123395 () Bool)

(assert (=> b!109087 m!123395))

(declare-fun m!123397 () Bool)

(assert (=> b!109087 m!123397))

(declare-fun m!123399 () Bool)

(assert (=> b!109087 m!123399))

(declare-fun m!123401 () Bool)

(assert (=> b!109087 m!123401))

(assert (=> b!109087 m!123383))

(assert (=> b!109087 m!123395))

(declare-fun m!123403 () Bool)

(assert (=> b!109087 m!123403))

(declare-fun m!123405 () Bool)

(assert (=> b!109087 m!123405))

(declare-fun m!123407 () Bool)

(assert (=> b!109087 m!123407))

(assert (=> b!109087 m!123389))

(declare-fun m!123409 () Bool)

(assert (=> b!109087 m!123409))

(assert (=> b!109087 m!121333))

(declare-fun m!123411 () Bool)

(assert (=> b!109087 m!123411))

(assert (=> b!109087 m!123397))

(declare-fun m!123413 () Bool)

(assert (=> b!109104 m!123413))

(assert (=> b!109103 m!121333))

(assert (=> b!109103 m!121333))

(declare-fun m!123415 () Bool)

(assert (=> b!109103 m!123415))

(declare-fun m!123417 () Bool)

(assert (=> b!109103 m!123417))

(assert (=> b!109103 m!121727))

(declare-fun m!123419 () Bool)

(assert (=> b!109103 m!123419))

(assert (=> b!109103 m!121727))

(assert (=> b!109103 m!123417))

(assert (=> bm!11582 m!123401))

(assert (=> b!109088 m!121333))

(assert (=> b!109088 m!121333))

(assert (=> b!109088 m!121341))

(declare-fun m!123421 () Bool)

(assert (=> b!109101 m!123421))

(declare-fun m!123423 () Bool)

(assert (=> bm!11583 m!123423))

(declare-fun m!123425 () Bool)

(assert (=> b!109105 m!123425))

(assert (=> d!30497 m!121327))

(assert (=> b!108154 d!30497))

(declare-fun b!109120 () Bool)

(declare-fun e!70994 () SeekEntryResult!260)

(assert (=> b!109120 (= e!70994 Undefined!260)))

(declare-fun b!109121 () Bool)

(declare-fun e!70993 () SeekEntryResult!260)

(assert (=> b!109121 (= e!70994 e!70993)))

(declare-fun lt!56171 () (_ BitVec 64))

(declare-fun c!19256 () Bool)

(assert (=> b!109121 (= c!19256 (= lt!56171 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!56172 () SeekEntryResult!260)

(declare-fun d!30499 () Bool)

(assert (=> d!30499 (and (or ((_ is Undefined!260) lt!56172) (not ((_ is Found!260) lt!56172)) (and (bvsge (index!3190 lt!56172) #b00000000000000000000000000000000) (bvslt (index!3190 lt!56172) (size!2331 (_keys!4316 newMap!16))))) (or ((_ is Undefined!260) lt!56172) ((_ is Found!260) lt!56172) (not ((_ is MissingVacant!260) lt!56172)) (not (= (index!3192 lt!56172) (index!3191 lt!55775))) (and (bvsge (index!3192 lt!56172) #b00000000000000000000000000000000) (bvslt (index!3192 lt!56172) (size!2331 (_keys!4316 newMap!16))))) (or ((_ is Undefined!260) lt!56172) (ite ((_ is Found!260) lt!56172) (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!56172)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) (and ((_ is MissingVacant!260) lt!56172) (= (index!3192 lt!56172) (index!3191 lt!55775)) (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3192 lt!56172)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!30499 (= lt!56172 e!70994)))

(declare-fun c!19254 () Bool)

(assert (=> d!30499 (= c!19254 (bvsge (x!13804 lt!55775) #b01111111111111111111111111111110))))

(assert (=> d!30499 (= lt!56171 (select (arr!2075 (_keys!4316 newMap!16)) (index!3191 lt!55775)))))

(assert (=> d!30499 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30499 (= (seekKeyOrZeroReturnVacant!0 (x!13804 lt!55775) (index!3191 lt!55775) (index!3191 lt!55775) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)) lt!56172)))

(declare-fun b!109122 () Bool)

(assert (=> b!109122 (= e!70993 (Found!260 (index!3191 lt!55775)))))

(declare-fun b!109123 () Bool)

(declare-fun e!70992 () SeekEntryResult!260)

(assert (=> b!109123 (= e!70992 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13804 lt!55775) #b00000000000000000000000000000001) (nextIndex!0 (index!3191 lt!55775) (x!13804 lt!55775) (mask!6764 newMap!16)) (index!3191 lt!55775) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun b!109124 () Bool)

(declare-fun c!19255 () Bool)

(assert (=> b!109124 (= c!19255 (= lt!56171 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109124 (= e!70993 e!70992)))

(declare-fun b!109125 () Bool)

(assert (=> b!109125 (= e!70992 (MissingVacant!260 (index!3191 lt!55775)))))

(assert (= (and d!30499 c!19254) b!109120))

(assert (= (and d!30499 (not c!19254)) b!109121))

(assert (= (and b!109121 c!19256) b!109122))

(assert (= (and b!109121 (not c!19256)) b!109124))

(assert (= (and b!109124 c!19255) b!109125))

(assert (= (and b!109124 (not c!19255)) b!109123))

(declare-fun m!123427 () Bool)

(assert (=> d!30499 m!123427))

(declare-fun m!123429 () Bool)

(assert (=> d!30499 m!123429))

(assert (=> d!30499 m!122037))

(assert (=> d!30499 m!121327))

(declare-fun m!123431 () Bool)

(assert (=> b!109123 m!123431))

(assert (=> b!109123 m!123431))

(assert (=> b!109123 m!120979))

(declare-fun m!123433 () Bool)

(assert (=> b!109123 m!123433))

(assert (=> b!108363 d!30499))

(declare-fun d!30501 () Bool)

(declare-fun e!70996 () Bool)

(assert (=> d!30501 e!70996))

(declare-fun res!54074 () Bool)

(assert (=> d!30501 (=> res!54074 e!70996)))

(declare-fun lt!56174 () Bool)

(assert (=> d!30501 (= res!54074 (not lt!56174))))

(declare-fun lt!56175 () Bool)

(assert (=> d!30501 (= lt!56174 lt!56175)))

(declare-fun lt!56173 () Unit!3321)

(declare-fun e!70995 () Unit!3321)

(assert (=> d!30501 (= lt!56173 e!70995)))

(declare-fun c!19257 () Bool)

(assert (=> d!30501 (= c!19257 lt!56175)))

(assert (=> d!30501 (= lt!56175 (containsKey!161 (toList!808 lt!55683) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!30501 (= (contains!834 lt!55683 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!56174)))

(declare-fun b!109126 () Bool)

(declare-fun lt!56176 () Unit!3321)

(assert (=> b!109126 (= e!70995 lt!56176)))

(assert (=> b!109126 (= lt!56176 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55683) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!109126 (isDefined!110 (getValueByKey!157 (toList!808 lt!55683) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!109127 () Bool)

(declare-fun Unit!3378 () Unit!3321)

(assert (=> b!109127 (= e!70995 Unit!3378)))

(declare-fun b!109128 () Bool)

(assert (=> b!109128 (= e!70996 (isDefined!110 (getValueByKey!157 (toList!808 lt!55683) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!30501 c!19257) b!109126))

(assert (= (and d!30501 (not c!19257)) b!109127))

(assert (= (and d!30501 (not res!54074)) b!109128))

(assert (=> d!30501 m!121769))

(declare-fun m!123435 () Bool)

(assert (=> d!30501 m!123435))

(assert (=> b!109126 m!121769))

(declare-fun m!123437 () Bool)

(assert (=> b!109126 m!123437))

(assert (=> b!109126 m!121769))

(declare-fun m!123439 () Bool)

(assert (=> b!109126 m!123439))

(assert (=> b!109126 m!123439))

(declare-fun m!123441 () Bool)

(assert (=> b!109126 m!123441))

(assert (=> b!109128 m!121769))

(assert (=> b!109128 m!123439))

(assert (=> b!109128 m!123439))

(assert (=> b!109128 m!123441))

(assert (=> b!108223 d!30501))

(declare-fun d!30503 () Bool)

(declare-fun lt!56177 () Bool)

(assert (=> d!30503 (= lt!56177 (select (content!111 lt!55682) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(declare-fun e!70998 () Bool)

(assert (=> d!30503 (= lt!56177 e!70998)))

(declare-fun res!54076 () Bool)

(assert (=> d!30503 (=> (not res!54076) (not e!70998))))

(assert (=> d!30503 (= res!54076 ((_ is Cons!1621) lt!55682))))

(assert (=> d!30503 (= (contains!836 lt!55682 (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))) lt!56177)))

(declare-fun b!109129 () Bool)

(declare-fun e!70997 () Bool)

(assert (=> b!109129 (= e!70998 e!70997)))

(declare-fun res!54075 () Bool)

(assert (=> b!109129 (=> res!54075 e!70997)))

(assert (=> b!109129 (= res!54075 (= (h!2219 lt!55682) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(declare-fun b!109130 () Bool)

(assert (=> b!109130 (= e!70997 (contains!836 (t!5741 lt!55682) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(assert (= (and d!30503 res!54076) b!109129))

(assert (= (and b!109129 (not res!54075)) b!109130))

(declare-fun m!123443 () Bool)

(assert (=> d!30503 m!123443))

(declare-fun m!123445 () Bool)

(assert (=> d!30503 m!123445))

(declare-fun m!123447 () Bool)

(assert (=> b!109130 m!123447))

(assert (=> b!108219 d!30503))

(declare-fun d!30505 () Bool)

(declare-fun lt!56178 () Bool)

(assert (=> d!30505 (= lt!56178 (select (content!111 lt!55581) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(declare-fun e!71000 () Bool)

(assert (=> d!30505 (= lt!56178 e!71000)))

(declare-fun res!54078 () Bool)

(assert (=> d!30505 (=> (not res!54078) (not e!71000))))

(assert (=> d!30505 (= res!54078 ((_ is Cons!1621) lt!55581))))

(assert (=> d!30505 (= (contains!836 lt!55581 (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))) lt!56178)))

(declare-fun b!109131 () Bool)

(declare-fun e!70999 () Bool)

(assert (=> b!109131 (= e!71000 e!70999)))

(declare-fun res!54077 () Bool)

(assert (=> b!109131 (=> res!54077 e!70999)))

(assert (=> b!109131 (= res!54077 (= (h!2219 lt!55581) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(declare-fun b!109132 () Bool)

(assert (=> b!109132 (= e!70999 (contains!836 (t!5741 lt!55581) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(assert (= (and d!30505 res!54078) b!109131))

(assert (= (and b!109131 (not res!54077)) b!109132))

(declare-fun m!123449 () Bool)

(assert (=> d!30505 m!123449))

(declare-fun m!123451 () Bool)

(assert (=> d!30505 m!123451))

(declare-fun m!123453 () Bool)

(assert (=> b!109132 m!123453))

(assert (=> b!108114 d!30505))

(declare-fun d!30507 () Bool)

(declare-fun e!71002 () Bool)

(assert (=> d!30507 e!71002))

(declare-fun res!54079 () Bool)

(assert (=> d!30507 (=> res!54079 e!71002)))

(declare-fun lt!56180 () Bool)

(assert (=> d!30507 (= res!54079 (not lt!56180))))

(declare-fun lt!56181 () Bool)

(assert (=> d!30507 (= lt!56180 lt!56181)))

(declare-fun lt!56179 () Unit!3321)

(declare-fun e!71001 () Unit!3321)

(assert (=> d!30507 (= lt!56179 e!71001)))

(declare-fun c!19258 () Bool)

(assert (=> d!30507 (= c!19258 lt!56181)))

(assert (=> d!30507 (= lt!56181 (containsKey!161 (toList!808 lt!55568) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30507 (= (contains!834 lt!55568 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!56180)))

(declare-fun b!109133 () Bool)

(declare-fun lt!56182 () Unit!3321)

(assert (=> b!109133 (= e!71001 lt!56182)))

(assert (=> b!109133 (= lt!56182 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55568) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!109133 (isDefined!110 (getValueByKey!157 (toList!808 lt!55568) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!109134 () Bool)

(declare-fun Unit!3379 () Unit!3321)

(assert (=> b!109134 (= e!71001 Unit!3379)))

(declare-fun b!109135 () Bool)

(assert (=> b!109135 (= e!71002 (isDefined!110 (getValueByKey!157 (toList!808 lt!55568) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!30507 c!19258) b!109133))

(assert (= (and d!30507 (not c!19258)) b!109134))

(assert (= (and d!30507 (not res!54079)) b!109135))

(declare-fun m!123455 () Bool)

(assert (=> d!30507 m!123455))

(declare-fun m!123457 () Bool)

(assert (=> b!109133 m!123457))

(assert (=> b!109133 m!121461))

(assert (=> b!109133 m!121461))

(declare-fun m!123459 () Bool)

(assert (=> b!109133 m!123459))

(assert (=> b!109135 m!121461))

(assert (=> b!109135 m!121461))

(assert (=> b!109135 m!123459))

(assert (=> d!29879 d!30507))

(declare-fun c!19259 () Bool)

(declare-fun d!30509 () Bool)

(assert (=> d!30509 (= c!19259 (and ((_ is Cons!1621) lt!55570) (= (_1!1225 (h!2219 lt!55570)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!71003 () Option!163)

(assert (=> d!30509 (= (getValueByKey!157 lt!55570 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!71003)))

(declare-fun b!109137 () Bool)

(declare-fun e!71004 () Option!163)

(assert (=> b!109137 (= e!71003 e!71004)))

(declare-fun c!19260 () Bool)

(assert (=> b!109137 (= c!19260 (and ((_ is Cons!1621) lt!55570) (not (= (_1!1225 (h!2219 lt!55570)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!109138 () Bool)

(assert (=> b!109138 (= e!71004 (getValueByKey!157 (t!5741 lt!55570) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!109136 () Bool)

(assert (=> b!109136 (= e!71003 (Some!162 (_2!1225 (h!2219 lt!55570))))))

(declare-fun b!109139 () Bool)

(assert (=> b!109139 (= e!71004 None!161)))

(assert (= (and d!30509 c!19259) b!109136))

(assert (= (and d!30509 (not c!19259)) b!109137))

(assert (= (and b!109137 c!19260) b!109138))

(assert (= (and b!109137 (not c!19260)) b!109139))

(declare-fun m!123461 () Bool)

(assert (=> b!109138 m!123461))

(assert (=> d!29879 d!30509))

(declare-fun d!30511 () Bool)

(assert (=> d!30511 (= (getValueByKey!157 lt!55570 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!56183 () Unit!3321)

(assert (=> d!30511 (= lt!56183 (choose!672 lt!55570 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!71005 () Bool)

(assert (=> d!30511 e!71005))

(declare-fun res!54080 () Bool)

(assert (=> d!30511 (=> (not res!54080) (not e!71005))))

(assert (=> d!30511 (= res!54080 (isStrictlySorted!310 lt!55570))))

(assert (=> d!30511 (= (lemmaContainsTupThenGetReturnValue!73 lt!55570 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!56183)))

(declare-fun b!109140 () Bool)

(declare-fun res!54081 () Bool)

(assert (=> b!109140 (=> (not res!54081) (not e!71005))))

(assert (=> b!109140 (= res!54081 (containsKey!161 lt!55570 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!109141 () Bool)

(assert (=> b!109141 (= e!71005 (contains!836 lt!55570 (tuple2!2429 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!30511 res!54080) b!109140))

(assert (= (and b!109140 res!54081) b!109141))

(assert (=> d!30511 m!121455))

(declare-fun m!123463 () Bool)

(assert (=> d!30511 m!123463))

(declare-fun m!123465 () Bool)

(assert (=> d!30511 m!123465))

(declare-fun m!123467 () Bool)

(assert (=> b!109140 m!123467))

(declare-fun m!123469 () Bool)

(assert (=> b!109141 m!123469))

(assert (=> d!29879 d!30511))

(declare-fun b!109142 () Bool)

(declare-fun e!71009 () List!1625)

(declare-fun e!71007 () List!1625)

(assert (=> b!109142 (= e!71009 e!71007)))

(declare-fun c!19263 () Bool)

(assert (=> b!109142 (= c!19263 (and ((_ is Cons!1621) (toList!808 call!11354)) (= (_1!1225 (h!2219 (toList!808 call!11354))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!71006 () List!1625)

(declare-fun bm!11587 () Bool)

(declare-fun call!11591 () List!1625)

(declare-fun c!19262 () Bool)

(assert (=> bm!11587 (= call!11591 ($colon$colon!82 e!71006 (ite c!19262 (h!2219 (toList!808 call!11354)) (tuple2!2429 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!19261 () Bool)

(assert (=> bm!11587 (= c!19261 c!19262)))

(declare-fun b!109143 () Bool)

(assert (=> b!109143 (= e!71006 (insertStrictlySorted!76 (t!5741 (toList!808 call!11354)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!19264 () Bool)

(declare-fun b!109144 () Bool)

(assert (=> b!109144 (= e!71006 (ite c!19263 (t!5741 (toList!808 call!11354)) (ite c!19264 (Cons!1621 (h!2219 (toList!808 call!11354)) (t!5741 (toList!808 call!11354))) Nil!1622)))))

(declare-fun b!109145 () Bool)

(declare-fun e!71010 () List!1625)

(declare-fun call!11590 () List!1625)

(assert (=> b!109145 (= e!71010 call!11590)))

(declare-fun bm!11588 () Bool)

(declare-fun call!11592 () List!1625)

(assert (=> bm!11588 (= call!11590 call!11592)))

(declare-fun b!109146 () Bool)

(assert (=> b!109146 (= e!71009 call!11591)))

(declare-fun d!30513 () Bool)

(declare-fun e!71008 () Bool)

(assert (=> d!30513 e!71008))

(declare-fun res!54082 () Bool)

(assert (=> d!30513 (=> (not res!54082) (not e!71008))))

(declare-fun lt!56184 () List!1625)

(assert (=> d!30513 (= res!54082 (isStrictlySorted!310 lt!56184))))

(assert (=> d!30513 (= lt!56184 e!71009)))

(assert (=> d!30513 (= c!19262 (and ((_ is Cons!1621) (toList!808 call!11354)) (bvslt (_1!1225 (h!2219 (toList!808 call!11354))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!30513 (isStrictlySorted!310 (toList!808 call!11354))))

(assert (=> d!30513 (= (insertStrictlySorted!76 (toList!808 call!11354) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!56184)))

(declare-fun b!109147 () Bool)

(assert (=> b!109147 (= e!71010 call!11590)))

(declare-fun bm!11589 () Bool)

(assert (=> bm!11589 (= call!11592 call!11591)))

(declare-fun b!109148 () Bool)

(assert (=> b!109148 (= c!19264 (and ((_ is Cons!1621) (toList!808 call!11354)) (bvsgt (_1!1225 (h!2219 (toList!808 call!11354))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!109148 (= e!71007 e!71010)))

(declare-fun b!109149 () Bool)

(assert (=> b!109149 (= e!71007 call!11592)))

(declare-fun b!109150 () Bool)

(declare-fun res!54083 () Bool)

(assert (=> b!109150 (=> (not res!54083) (not e!71008))))

(assert (=> b!109150 (= res!54083 (containsKey!161 lt!56184 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!109151 () Bool)

(assert (=> b!109151 (= e!71008 (contains!836 lt!56184 (tuple2!2429 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!30513 c!19262) b!109146))

(assert (= (and d!30513 (not c!19262)) b!109142))

(assert (= (and b!109142 c!19263) b!109149))

(assert (= (and b!109142 (not c!19263)) b!109148))

(assert (= (and b!109148 c!19264) b!109147))

(assert (= (and b!109148 (not c!19264)) b!109145))

(assert (= (or b!109147 b!109145) bm!11588))

(assert (= (or b!109149 bm!11588) bm!11589))

(assert (= (or b!109146 bm!11589) bm!11587))

(assert (= (and bm!11587 c!19261) b!109143))

(assert (= (and bm!11587 (not c!19261)) b!109144))

(assert (= (and d!30513 res!54082) b!109150))

(assert (= (and b!109150 res!54083) b!109151))

(declare-fun m!123471 () Bool)

(assert (=> bm!11587 m!123471))

(declare-fun m!123473 () Bool)

(assert (=> b!109150 m!123473))

(declare-fun m!123475 () Bool)

(assert (=> b!109151 m!123475))

(declare-fun m!123477 () Bool)

(assert (=> d!30513 m!123477))

(declare-fun m!123479 () Bool)

(assert (=> d!30513 m!123479))

(declare-fun m!123481 () Bool)

(assert (=> b!109143 m!123481))

(assert (=> d!29879 d!30513))

(declare-fun d!30515 () Bool)

(declare-fun e!71012 () Bool)

(assert (=> d!30515 e!71012))

(declare-fun res!54084 () Bool)

(assert (=> d!30515 (=> res!54084 e!71012)))

(declare-fun lt!56186 () Bool)

(assert (=> d!30515 (= res!54084 (not lt!56186))))

(declare-fun lt!56187 () Bool)

(assert (=> d!30515 (= lt!56186 lt!56187)))

(declare-fun lt!56185 () Unit!3321)

(declare-fun e!71011 () Unit!3321)

(assert (=> d!30515 (= lt!56185 e!71011)))

(declare-fun c!19265 () Bool)

(assert (=> d!30515 (= c!19265 lt!56187)))

(assert (=> d!30515 (= lt!56187 (containsKey!161 (toList!808 lt!55693) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30515 (= (contains!834 lt!55693 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) lt!56186)))

(declare-fun b!109152 () Bool)

(declare-fun lt!56188 () Unit!3321)

(assert (=> b!109152 (= e!71011 lt!56188)))

(assert (=> b!109152 (= lt!56188 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55693) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> b!109152 (isDefined!110 (getValueByKey!157 (toList!808 lt!55693) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!109153 () Bool)

(declare-fun Unit!3380 () Unit!3321)

(assert (=> b!109153 (= e!71011 Unit!3380)))

(declare-fun b!109154 () Bool)

(assert (=> b!109154 (= e!71012 (isDefined!110 (getValueByKey!157 (toList!808 lt!55693) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30515 c!19265) b!109152))

(assert (= (and d!30515 (not c!19265)) b!109153))

(assert (= (and d!30515 (not res!54084)) b!109154))

(declare-fun m!123483 () Bool)

(assert (=> d!30515 m!123483))

(declare-fun m!123485 () Bool)

(assert (=> b!109152 m!123485))

(assert (=> b!109152 m!121853))

(assert (=> b!109152 m!121853))

(declare-fun m!123487 () Bool)

(assert (=> b!109152 m!123487))

(assert (=> b!109154 m!121853))

(assert (=> b!109154 m!121853))

(assert (=> b!109154 m!123487))

(assert (=> d!29983 d!30515))

(declare-fun c!19266 () Bool)

(declare-fun d!30517 () Bool)

(assert (=> d!30517 (= c!19266 (and ((_ is Cons!1621) lt!55695) (= (_1!1225 (h!2219 lt!55695)) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun e!71013 () Option!163)

(assert (=> d!30517 (= (getValueByKey!157 lt!55695 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) e!71013)))

(declare-fun b!109156 () Bool)

(declare-fun e!71014 () Option!163)

(assert (=> b!109156 (= e!71013 e!71014)))

(declare-fun c!19267 () Bool)

(assert (=> b!109156 (= c!19267 (and ((_ is Cons!1621) lt!55695) (not (= (_1!1225 (h!2219 lt!55695)) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))))

(declare-fun b!109157 () Bool)

(assert (=> b!109157 (= e!71014 (getValueByKey!157 (t!5741 lt!55695) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!109155 () Bool)

(assert (=> b!109155 (= e!71013 (Some!162 (_2!1225 (h!2219 lt!55695))))))

(declare-fun b!109158 () Bool)

(assert (=> b!109158 (= e!71014 None!161)))

(assert (= (and d!30517 c!19266) b!109155))

(assert (= (and d!30517 (not c!19266)) b!109156))

(assert (= (and b!109156 c!19267) b!109157))

(assert (= (and b!109156 (not c!19267)) b!109158))

(declare-fun m!123489 () Bool)

(assert (=> b!109157 m!123489))

(assert (=> d!29983 d!30517))

(declare-fun d!30519 () Bool)

(assert (=> d!30519 (= (getValueByKey!157 lt!55695 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) (Some!162 (_2!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun lt!56189 () Unit!3321)

(assert (=> d!30519 (= lt!56189 (choose!672 lt!55695 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (_2!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!71015 () Bool)

(assert (=> d!30519 e!71015))

(declare-fun res!54085 () Bool)

(assert (=> d!30519 (=> (not res!54085) (not e!71015))))

(assert (=> d!30519 (= res!54085 (isStrictlySorted!310 lt!55695))))

(assert (=> d!30519 (= (lemmaContainsTupThenGetReturnValue!73 lt!55695 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (_2!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) lt!56189)))

(declare-fun b!109159 () Bool)

(declare-fun res!54086 () Bool)

(assert (=> b!109159 (=> (not res!54086) (not e!71015))))

(assert (=> b!109159 (= res!54086 (containsKey!161 lt!55695 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!109160 () Bool)

(assert (=> b!109160 (= e!71015 (contains!836 lt!55695 (tuple2!2429 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (_2!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30519 res!54085) b!109159))

(assert (= (and b!109159 res!54086) b!109160))

(assert (=> d!30519 m!121847))

(declare-fun m!123491 () Bool)

(assert (=> d!30519 m!123491))

(declare-fun m!123493 () Bool)

(assert (=> d!30519 m!123493))

(declare-fun m!123495 () Bool)

(assert (=> b!109159 m!123495))

(declare-fun m!123497 () Bool)

(assert (=> b!109160 m!123497))

(assert (=> d!29983 d!30519))

(declare-fun b!109161 () Bool)

(declare-fun e!71019 () List!1625)

(declare-fun e!71017 () List!1625)

(assert (=> b!109161 (= e!71019 e!71017)))

(declare-fun c!19270 () Bool)

(assert (=> b!109161 (= c!19270 (and ((_ is Cons!1621) (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373)))) (= (_1!1225 (h!2219 (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373))))) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun bm!11590 () Bool)

(declare-fun call!11594 () List!1625)

(declare-fun c!19269 () Bool)

(declare-fun e!71016 () List!1625)

(assert (=> bm!11590 (= call!11594 ($colon$colon!82 e!71016 (ite c!19269 (h!2219 (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373)))) (tuple2!2429 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (_2!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))))

(declare-fun c!19268 () Bool)

(assert (=> bm!11590 (= c!19268 c!19269)))

(declare-fun b!109162 () Bool)

(assert (=> b!109162 (= e!71016 (insertStrictlySorted!76 (t!5741 (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373)))) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (_2!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!109163 () Bool)

(declare-fun c!19271 () Bool)

(assert (=> b!109163 (= e!71016 (ite c!19270 (t!5741 (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373)))) (ite c!19271 (Cons!1621 (h!2219 (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373)))) (t!5741 (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373))))) Nil!1622)))))

(declare-fun b!109164 () Bool)

(declare-fun e!71020 () List!1625)

(declare-fun call!11593 () List!1625)

(assert (=> b!109164 (= e!71020 call!11593)))

(declare-fun bm!11591 () Bool)

(declare-fun call!11595 () List!1625)

(assert (=> bm!11591 (= call!11593 call!11595)))

(declare-fun b!109165 () Bool)

(assert (=> b!109165 (= e!71019 call!11594)))

(declare-fun d!30521 () Bool)

(declare-fun e!71018 () Bool)

(assert (=> d!30521 e!71018))

(declare-fun res!54087 () Bool)

(assert (=> d!30521 (=> (not res!54087) (not e!71018))))

(declare-fun lt!56190 () List!1625)

(assert (=> d!30521 (= res!54087 (isStrictlySorted!310 lt!56190))))

(assert (=> d!30521 (= lt!56190 e!71019)))

(assert (=> d!30521 (= c!19269 (and ((_ is Cons!1621) (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373)))) (bvslt (_1!1225 (h!2219 (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373))))) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (=> d!30521 (isStrictlySorted!310 (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373))))))

(assert (=> d!30521 (= (insertStrictlySorted!76 (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373))) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (_2!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) lt!56190)))

(declare-fun b!109166 () Bool)

(assert (=> b!109166 (= e!71020 call!11593)))

(declare-fun bm!11592 () Bool)

(assert (=> bm!11592 (= call!11595 call!11594)))

(declare-fun b!109167 () Bool)

(assert (=> b!109167 (= c!19271 (and ((_ is Cons!1621) (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373)))) (bvsgt (_1!1225 (h!2219 (toList!808 (ite c!18880 call!11374 (ite c!18882 call!11372 call!11373))))) (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (=> b!109167 (= e!71017 e!71020)))

(declare-fun b!109168 () Bool)

(assert (=> b!109168 (= e!71017 call!11595)))

(declare-fun b!109169 () Bool)

(declare-fun res!54088 () Bool)

(assert (=> b!109169 (=> (not res!54088) (not e!71018))))

(assert (=> b!109169 (= res!54088 (containsKey!161 lt!56190 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun b!109170 () Bool)

(assert (=> b!109170 (= e!71018 (contains!836 lt!56190 (tuple2!2429 (_1!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) (_2!1225 (ite (or c!18880 c!18882) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30521 c!19269) b!109165))

(assert (= (and d!30521 (not c!19269)) b!109161))

(assert (= (and b!109161 c!19270) b!109168))

(assert (= (and b!109161 (not c!19270)) b!109167))

(assert (= (and b!109167 c!19271) b!109166))

(assert (= (and b!109167 (not c!19271)) b!109164))

(assert (= (or b!109166 b!109164) bm!11591))

(assert (= (or b!109168 bm!11591) bm!11592))

(assert (= (or b!109165 bm!11592) bm!11590))

(assert (= (and bm!11590 c!19268) b!109162))

(assert (= (and bm!11590 (not c!19268)) b!109163))

(assert (= (and d!30521 res!54087) b!109169))

(assert (= (and b!109169 res!54088) b!109170))

(declare-fun m!123499 () Bool)

(assert (=> bm!11590 m!123499))

(declare-fun m!123501 () Bool)

(assert (=> b!109169 m!123501))

(declare-fun m!123503 () Bool)

(assert (=> b!109170 m!123503))

(declare-fun m!123505 () Bool)

(assert (=> d!30521 m!123505))

(declare-fun m!123507 () Bool)

(assert (=> d!30521 m!123507))

(declare-fun m!123509 () Bool)

(assert (=> b!109162 m!123509))

(assert (=> d!29983 d!30521))

(declare-fun d!30523 () Bool)

(declare-fun lt!56191 () Bool)

(assert (=> d!30523 (= lt!56191 (select (content!111 (t!5741 (toList!808 lt!55240))) lt!55183))))

(declare-fun e!71022 () Bool)

(assert (=> d!30523 (= lt!56191 e!71022)))

(declare-fun res!54090 () Bool)

(assert (=> d!30523 (=> (not res!54090) (not e!71022))))

(assert (=> d!30523 (= res!54090 ((_ is Cons!1621) (t!5741 (toList!808 lt!55240))))))

(assert (=> d!30523 (= (contains!836 (t!5741 (toList!808 lt!55240)) lt!55183) lt!56191)))

(declare-fun b!109171 () Bool)

(declare-fun e!71021 () Bool)

(assert (=> b!109171 (= e!71022 e!71021)))

(declare-fun res!54089 () Bool)

(assert (=> b!109171 (=> res!54089 e!71021)))

(assert (=> b!109171 (= res!54089 (= (h!2219 (t!5741 (toList!808 lt!55240))) lt!55183))))

(declare-fun b!109172 () Bool)

(assert (=> b!109172 (= e!71021 (contains!836 (t!5741 (t!5741 (toList!808 lt!55240))) lt!55183))))

(assert (= (and d!30523 res!54090) b!109171))

(assert (= (and b!109171 (not res!54089)) b!109172))

(assert (=> d!30523 m!122839))

(declare-fun m!123511 () Bool)

(assert (=> d!30523 m!123511))

(declare-fun m!123513 () Bool)

(assert (=> b!109172 m!123513))

(assert (=> b!108294 d!30523))

(declare-fun d!30525 () Bool)

(declare-fun e!71024 () Bool)

(assert (=> d!30525 e!71024))

(declare-fun res!54091 () Bool)

(assert (=> d!30525 (=> res!54091 e!71024)))

(declare-fun lt!56193 () Bool)

(assert (=> d!30525 (= res!54091 (not lt!56193))))

(declare-fun lt!56194 () Bool)

(assert (=> d!30525 (= lt!56193 lt!56194)))

(declare-fun lt!56192 () Unit!3321)

(declare-fun e!71023 () Unit!3321)

(assert (=> d!30525 (= lt!56192 e!71023)))

(declare-fun c!19272 () Bool)

(assert (=> d!30525 (= c!19272 lt!56194)))

(assert (=> d!30525 (= lt!56194 (containsKey!161 (toList!808 lt!55331) lt!55334))))

(assert (=> d!30525 (= (contains!834 lt!55331 lt!55334) lt!56193)))

(declare-fun b!109173 () Bool)

(declare-fun lt!56195 () Unit!3321)

(assert (=> b!109173 (= e!71023 lt!56195)))

(assert (=> b!109173 (= lt!56195 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55331) lt!55334))))

(assert (=> b!109173 (isDefined!110 (getValueByKey!157 (toList!808 lt!55331) lt!55334))))

(declare-fun b!109174 () Bool)

(declare-fun Unit!3381 () Unit!3321)

(assert (=> b!109174 (= e!71023 Unit!3381)))

(declare-fun b!109175 () Bool)

(assert (=> b!109175 (= e!71024 (isDefined!110 (getValueByKey!157 (toList!808 lt!55331) lt!55334)))))

(assert (= (and d!30525 c!19272) b!109173))

(assert (= (and d!30525 (not c!19272)) b!109174))

(assert (= (and d!30525 (not res!54091)) b!109175))

(declare-fun m!123515 () Bool)

(assert (=> d!30525 m!123515))

(declare-fun m!123517 () Bool)

(assert (=> b!109173 m!123517))

(assert (=> b!109173 m!121605))

(assert (=> b!109173 m!121605))

(declare-fun m!123519 () Bool)

(assert (=> b!109173 m!123519))

(assert (=> b!109175 m!121605))

(assert (=> b!109175 m!121605))

(assert (=> b!109175 m!123519))

(assert (=> d!29915 d!30525))

(declare-fun d!30527 () Bool)

(assert (=> d!30527 (= (apply!99 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55334) (apply!99 lt!55331 lt!55334))))

(assert (=> d!30527 true))

(declare-fun _$34!895 () Unit!3321)

(assert (=> d!30527 (= (choose!673 lt!55331 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55334) _$34!895)))

(declare-fun bs!4491 () Bool)

(assert (= bs!4491 d!30527))

(assert (=> bs!4491 m!121185))

(assert (=> bs!4491 m!121185))

(assert (=> bs!4491 m!121187))

(assert (=> bs!4491 m!121195))

(assert (=> d!29915 d!30527))

(assert (=> d!29915 d!29925))

(assert (=> d!29915 d!29929))

(assert (=> d!29915 d!29919))

(declare-fun d!30529 () Bool)

(assert (=> d!30529 (= (isDefined!110 (getValueByKey!157 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!375 (getValueByKey!157 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4492 () Bool)

(assert (= bs!4492 d!30529))

(assert (=> bs!4492 m!122021))

(declare-fun m!123521 () Bool)

(assert (=> bs!4492 m!123521))

(assert (=> b!108349 d!30529))

(assert (=> b!108349 d!30307))

(declare-fun d!30531 () Bool)

(assert (=> d!30531 (= (apply!99 lt!55720 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1344 (getValueByKey!157 (toList!808 lt!55720) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4493 () Bool)

(assert (= bs!4493 d!30531))

(assert (=> bs!4493 m!121333))

(assert (=> bs!4493 m!122699))

(assert (=> bs!4493 m!122699))

(declare-fun m!123523 () Bool)

(assert (=> bs!4493 m!123523))

(assert (=> b!108316 d!30531))

(declare-fun d!30533 () Bool)

(declare-fun c!19273 () Bool)

(assert (=> d!30533 (= c!19273 ((_ is ValueCellFull!1002) (select (arr!2076 (ite c!18921 (_values!2589 newMap!16) lt!55420)) #b00000000000000000000000000000000)))))

(declare-fun e!71025 () V!3235)

(assert (=> d!30533 (= (get!1341 (select (arr!2076 (ite c!18921 (_values!2589 newMap!16) lt!55420)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71025)))

(declare-fun b!109177 () Bool)

(assert (=> b!109177 (= e!71025 (get!1342 (select (arr!2076 (ite c!18921 (_values!2589 newMap!16) lt!55420)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109178 () Bool)

(assert (=> b!109178 (= e!71025 (get!1343 (select (arr!2076 (ite c!18921 (_values!2589 newMap!16) lt!55420)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30533 c!19273) b!109177))

(assert (= (and d!30533 (not c!19273)) b!109178))

(assert (=> b!109177 m!121939))

(assert (=> b!109177 m!121727))

(declare-fun m!123525 () Bool)

(assert (=> b!109177 m!123525))

(assert (=> b!109178 m!121939))

(assert (=> b!109178 m!121727))

(declare-fun m!123527 () Bool)

(assert (=> b!109178 m!123527))

(assert (=> b!108316 d!30533))

(declare-fun lt!56196 () Bool)

(declare-fun d!30535 () Bool)

(assert (=> d!30535 (= lt!56196 (select (content!112 (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!71027 () Bool)

(assert (=> d!30535 (= lt!56196 e!71027)))

(declare-fun res!54093 () Bool)

(assert (=> d!30535 (=> (not res!54093) (not e!71027))))

(assert (=> d!30535 (= res!54093 ((_ is Cons!1622) (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)))))

(assert (=> d!30535 (= (contains!837 (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!56196)))

(declare-fun b!109179 () Bool)

(declare-fun e!71026 () Bool)

(assert (=> b!109179 (= e!71027 e!71026)))

(declare-fun res!54092 () Bool)

(assert (=> b!109179 (=> res!54092 e!71026)))

(assert (=> b!109179 (= res!54092 (= (h!2220 (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!109180 () Bool)

(assert (=> b!109180 (= e!71026 (contains!837 (t!5742 (ite c!18936 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) Nil!1623) Nil!1623)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!30535 res!54093) b!109179))

(assert (= (and b!109179 (not res!54092)) b!109180))

(declare-fun m!123529 () Bool)

(assert (=> d!30535 m!123529))

(assert (=> d!30535 m!121501))

(declare-fun m!123531 () Bool)

(assert (=> d!30535 m!123531))

(assert (=> b!109180 m!121501))

(declare-fun m!123533 () Bool)

(assert (=> b!109180 m!123533))

(assert (=> b!108116 d!30535))

(declare-fun d!30537 () Bool)

(assert (=> d!30537 (= (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55334)) (v!2918 (getValueByKey!157 (toList!808 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55334)))))

(assert (=> d!29925 d!30537))

(declare-fun c!19274 () Bool)

(declare-fun d!30539 () Bool)

(assert (=> d!30539 (= c!19274 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))) lt!55334)))))

(declare-fun e!71028 () Option!163)

(assert (=> d!30539 (= (getValueByKey!157 (toList!808 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55334) e!71028)))

(declare-fun b!109182 () Bool)

(declare-fun e!71029 () Option!163)

(assert (=> b!109182 (= e!71028 e!71029)))

(declare-fun c!19275 () Bool)

(assert (=> b!109182 (= c!19275 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (not (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))) lt!55334))))))

(declare-fun b!109183 () Bool)

(assert (=> b!109183 (= e!71029 (getValueByKey!157 (t!5741 (toList!808 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) lt!55334))))

(declare-fun b!109181 () Bool)

(assert (=> b!109181 (= e!71028 (Some!162 (_2!1225 (h!2219 (toList!808 (+!148 lt!55331 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))))

(declare-fun b!109184 () Bool)

(assert (=> b!109184 (= e!71029 None!161)))

(assert (= (and d!30539 c!19274) b!109181))

(assert (= (and d!30539 (not c!19274)) b!109182))

(assert (= (and b!109182 c!19275) b!109183))

(assert (= (and b!109182 (not c!19275)) b!109184))

(declare-fun m!123535 () Bool)

(assert (=> b!109183 m!123535))

(assert (=> d!29925 d!30539))

(declare-fun d!30541 () Bool)

(declare-fun lt!56197 () Bool)

(assert (=> d!30541 (= lt!56197 (select (content!111 (toList!808 lt!55557)) (tuple2!2429 lt!55263 lt!55262)))))

(declare-fun e!71031 () Bool)

(assert (=> d!30541 (= lt!56197 e!71031)))

(declare-fun res!54095 () Bool)

(assert (=> d!30541 (=> (not res!54095) (not e!71031))))

(assert (=> d!30541 (= res!54095 ((_ is Cons!1621) (toList!808 lt!55557)))))

(assert (=> d!30541 (= (contains!836 (toList!808 lt!55557) (tuple2!2429 lt!55263 lt!55262)) lt!56197)))

(declare-fun b!109185 () Bool)

(declare-fun e!71030 () Bool)

(assert (=> b!109185 (= e!71031 e!71030)))

(declare-fun res!54094 () Bool)

(assert (=> b!109185 (=> res!54094 e!71030)))

(assert (=> b!109185 (= res!54094 (= (h!2219 (toList!808 lt!55557)) (tuple2!2429 lt!55263 lt!55262)))))

(declare-fun b!109186 () Bool)

(assert (=> b!109186 (= e!71030 (contains!836 (t!5741 (toList!808 lt!55557)) (tuple2!2429 lt!55263 lt!55262)))))

(assert (= (and d!30541 res!54095) b!109185))

(assert (= (and b!109185 (not res!54094)) b!109186))

(declare-fun m!123537 () Bool)

(assert (=> d!30541 m!123537))

(declare-fun m!123539 () Bool)

(assert (=> d!30541 m!123539))

(declare-fun m!123541 () Bool)

(assert (=> b!109186 m!123541))

(assert (=> b!108059 d!30541))

(declare-fun d!30543 () Bool)

(assert (=> d!30543 (= (apply!99 lt!55645 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!157 (toList!808 lt!55645) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4494 () Bool)

(assert (= bs!4494 d!30543))

(assert (=> bs!4494 m!123265))

(assert (=> bs!4494 m!123265))

(declare-fun m!123543 () Bool)

(assert (=> bs!4494 m!123543))

(assert (=> b!108176 d!30543))

(declare-fun d!30545 () Bool)

(declare-fun lt!56198 () Bool)

(assert (=> d!30545 (= lt!56198 (select (content!111 lt!55274) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(declare-fun e!71033 () Bool)

(assert (=> d!30545 (= lt!56198 e!71033)))

(declare-fun res!54097 () Bool)

(assert (=> d!30545 (=> (not res!54097) (not e!71033))))

(assert (=> d!30545 (= res!54097 ((_ is Cons!1621) lt!55274))))

(assert (=> d!30545 (= (contains!836 lt!55274 (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))) lt!56198)))

(declare-fun b!109187 () Bool)

(declare-fun e!71032 () Bool)

(assert (=> b!109187 (= e!71033 e!71032)))

(declare-fun res!54096 () Bool)

(assert (=> b!109187 (=> res!54096 e!71032)))

(assert (=> b!109187 (= res!54096 (= (h!2219 lt!55274) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(declare-fun b!109188 () Bool)

(assert (=> b!109188 (= e!71032 (contains!836 (t!5741 lt!55274) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(assert (= (and d!30545 res!54097) b!109187))

(assert (= (and b!109187 (not res!54096)) b!109188))

(declare-fun m!123545 () Bool)

(assert (=> d!30545 m!123545))

(declare-fun m!123547 () Bool)

(assert (=> d!30545 m!123547))

(declare-fun m!123549 () Bool)

(assert (=> b!109188 m!123549))

(assert (=> b!108387 d!30545))

(declare-fun bm!11593 () Bool)

(declare-fun call!11596 () Bool)

(declare-fun lt!56205 () ListLongMap!1585)

(assert (=> bm!11593 (= call!11596 (contains!834 lt!56205 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109189 () Bool)

(declare-fun e!71037 () Unit!3321)

(declare-fun lt!56211 () Unit!3321)

(assert (=> b!109189 (= e!71037 lt!56211)))

(declare-fun lt!56199 () ListLongMap!1585)

(assert (=> b!109189 (= lt!56199 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (_2!1226 lt!55419)) (_values!2589 (_2!1226 lt!55419)) (mask!6764 (_2!1226 lt!55419)) (extraKeys!2407 (_2!1226 lt!55419)) (zeroValue!2479 (_2!1226 lt!55419)) (minValue!2479 (_2!1226 lt!55419)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1226 lt!55419))))))

(declare-fun lt!56217 () (_ BitVec 64))

(assert (=> b!109189 (= lt!56217 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56214 () (_ BitVec 64))

(assert (=> b!109189 (= lt!56214 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000))))

(declare-fun lt!56212 () Unit!3321)

(assert (=> b!109189 (= lt!56212 (addStillContains!75 lt!56199 lt!56217 (zeroValue!2479 (_2!1226 lt!55419)) lt!56214))))

(assert (=> b!109189 (contains!834 (+!148 lt!56199 (tuple2!2429 lt!56217 (zeroValue!2479 (_2!1226 lt!55419)))) lt!56214)))

(declare-fun lt!56204 () Unit!3321)

(assert (=> b!109189 (= lt!56204 lt!56212)))

(declare-fun lt!56207 () ListLongMap!1585)

(assert (=> b!109189 (= lt!56207 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (_2!1226 lt!55419)) (_values!2589 (_2!1226 lt!55419)) (mask!6764 (_2!1226 lt!55419)) (extraKeys!2407 (_2!1226 lt!55419)) (zeroValue!2479 (_2!1226 lt!55419)) (minValue!2479 (_2!1226 lt!55419)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1226 lt!55419))))))

(declare-fun lt!56216 () (_ BitVec 64))

(assert (=> b!109189 (= lt!56216 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56219 () (_ BitVec 64))

(assert (=> b!109189 (= lt!56219 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000))))

(declare-fun lt!56215 () Unit!3321)

(assert (=> b!109189 (= lt!56215 (addApplyDifferent!75 lt!56207 lt!56216 (minValue!2479 (_2!1226 lt!55419)) lt!56219))))

(assert (=> b!109189 (= (apply!99 (+!148 lt!56207 (tuple2!2429 lt!56216 (minValue!2479 (_2!1226 lt!55419)))) lt!56219) (apply!99 lt!56207 lt!56219))))

(declare-fun lt!56220 () Unit!3321)

(assert (=> b!109189 (= lt!56220 lt!56215)))

(declare-fun lt!56210 () ListLongMap!1585)

(assert (=> b!109189 (= lt!56210 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (_2!1226 lt!55419)) (_values!2589 (_2!1226 lt!55419)) (mask!6764 (_2!1226 lt!55419)) (extraKeys!2407 (_2!1226 lt!55419)) (zeroValue!2479 (_2!1226 lt!55419)) (minValue!2479 (_2!1226 lt!55419)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1226 lt!55419))))))

(declare-fun lt!56200 () (_ BitVec 64))

(assert (=> b!109189 (= lt!56200 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56213 () (_ BitVec 64))

(assert (=> b!109189 (= lt!56213 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000))))

(declare-fun lt!56209 () Unit!3321)

(assert (=> b!109189 (= lt!56209 (addApplyDifferent!75 lt!56210 lt!56200 (zeroValue!2479 (_2!1226 lt!55419)) lt!56213))))

(assert (=> b!109189 (= (apply!99 (+!148 lt!56210 (tuple2!2429 lt!56200 (zeroValue!2479 (_2!1226 lt!55419)))) lt!56213) (apply!99 lt!56210 lt!56213))))

(declare-fun lt!56201 () Unit!3321)

(assert (=> b!109189 (= lt!56201 lt!56209)))

(declare-fun lt!56206 () ListLongMap!1585)

(assert (=> b!109189 (= lt!56206 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (_2!1226 lt!55419)) (_values!2589 (_2!1226 lt!55419)) (mask!6764 (_2!1226 lt!55419)) (extraKeys!2407 (_2!1226 lt!55419)) (zeroValue!2479 (_2!1226 lt!55419)) (minValue!2479 (_2!1226 lt!55419)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1226 lt!55419))))))

(declare-fun lt!56203 () (_ BitVec 64))

(assert (=> b!109189 (= lt!56203 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56218 () (_ BitVec 64))

(assert (=> b!109189 (= lt!56218 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000))))

(assert (=> b!109189 (= lt!56211 (addApplyDifferent!75 lt!56206 lt!56203 (minValue!2479 (_2!1226 lt!55419)) lt!56218))))

(assert (=> b!109189 (= (apply!99 (+!148 lt!56206 (tuple2!2429 lt!56203 (minValue!2479 (_2!1226 lt!55419)))) lt!56218) (apply!99 lt!56206 lt!56218))))

(declare-fun bm!11594 () Bool)

(declare-fun call!11597 () ListLongMap!1585)

(declare-fun call!11602 () ListLongMap!1585)

(assert (=> bm!11594 (= call!11597 call!11602)))

(declare-fun b!109190 () Bool)

(declare-fun e!71034 () Bool)

(assert (=> b!109190 (= e!71034 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000)))))

(declare-fun b!109192 () Bool)

(declare-fun res!54103 () Bool)

(declare-fun e!71041 () Bool)

(assert (=> b!109192 (=> (not res!54103) (not e!71041))))

(declare-fun e!71044 () Bool)

(assert (=> b!109192 (= res!54103 e!71044)))

(declare-fun c!19280 () Bool)

(assert (=> b!109192 (= c!19280 (not (= (bvand (extraKeys!2407 (_2!1226 lt!55419)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!109193 () Bool)

(declare-fun e!71045 () ListLongMap!1585)

(assert (=> b!109193 (= e!71045 call!11597)))

(declare-fun b!109194 () Bool)

(declare-fun e!71038 () ListLongMap!1585)

(assert (=> b!109194 (= e!71038 call!11597)))

(declare-fun b!109195 () Bool)

(declare-fun res!54100 () Bool)

(assert (=> b!109195 (=> (not res!54100) (not e!71041))))

(declare-fun e!71046 () Bool)

(assert (=> b!109195 (= res!54100 e!71046)))

(declare-fun res!54098 () Bool)

(assert (=> b!109195 (=> res!54098 e!71046)))

(assert (=> b!109195 (= res!54098 (not e!71034))))

(declare-fun res!54099 () Bool)

(assert (=> b!109195 (=> (not res!54099) (not e!71034))))

(assert (=> b!109195 (= res!54099 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55419)))))))

(declare-fun bm!11595 () Bool)

(declare-fun call!11601 () ListLongMap!1585)

(assert (=> bm!11595 (= call!11601 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (_2!1226 lt!55419)) (_values!2589 (_2!1226 lt!55419)) (mask!6764 (_2!1226 lt!55419)) (extraKeys!2407 (_2!1226 lt!55419)) (zeroValue!2479 (_2!1226 lt!55419)) (minValue!2479 (_2!1226 lt!55419)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1226 lt!55419))))))

(declare-fun bm!11596 () Bool)

(declare-fun call!11600 () ListLongMap!1585)

(declare-fun c!19279 () Bool)

(declare-fun call!11599 () ListLongMap!1585)

(declare-fun c!19281 () Bool)

(assert (=> bm!11596 (= call!11602 (+!148 (ite c!19279 call!11601 (ite c!19281 call!11599 call!11600)) (ite (or c!19279 c!19281) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (_2!1226 lt!55419))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (_2!1226 lt!55419))))))))

(declare-fun b!109196 () Bool)

(declare-fun Unit!3382 () Unit!3321)

(assert (=> b!109196 (= e!71037 Unit!3382)))

(declare-fun b!109197 () Bool)

(declare-fun e!71040 () Bool)

(assert (=> b!109197 (= e!71044 e!71040)))

(declare-fun res!54106 () Bool)

(assert (=> b!109197 (= res!54106 call!11596)))

(assert (=> b!109197 (=> (not res!54106) (not e!71040))))

(declare-fun d!30547 () Bool)

(assert (=> d!30547 e!71041))

(declare-fun res!54105 () Bool)

(assert (=> d!30547 (=> (not res!54105) (not e!71041))))

(assert (=> d!30547 (= res!54105 (or (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55419)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55419)))))))))

(declare-fun lt!56208 () ListLongMap!1585)

(assert (=> d!30547 (= lt!56205 lt!56208)))

(declare-fun lt!56202 () Unit!3321)

(assert (=> d!30547 (= lt!56202 e!71037)))

(declare-fun c!19278 () Bool)

(declare-fun e!71042 () Bool)

(assert (=> d!30547 (= c!19278 e!71042)))

(declare-fun res!54101 () Bool)

(assert (=> d!30547 (=> (not res!54101) (not e!71042))))

(assert (=> d!30547 (= res!54101 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55419)))))))

(declare-fun e!71035 () ListLongMap!1585)

(assert (=> d!30547 (= lt!56208 e!71035)))

(assert (=> d!30547 (= c!19279 (and (not (= (bvand (extraKeys!2407 (_2!1226 lt!55419)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 (_2!1226 lt!55419)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30547 (validMask!0 (mask!6764 (_2!1226 lt!55419)))))

(assert (=> d!30547 (= (getCurrentListMap!493 (_keys!4316 (_2!1226 lt!55419)) (_values!2589 (_2!1226 lt!55419)) (mask!6764 (_2!1226 lt!55419)) (extraKeys!2407 (_2!1226 lt!55419)) (zeroValue!2479 (_2!1226 lt!55419)) (minValue!2479 (_2!1226 lt!55419)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1226 lt!55419))) lt!56205)))

(declare-fun b!109191 () Bool)

(declare-fun c!19276 () Bool)

(assert (=> b!109191 (= c!19276 (and (not (= (bvand (extraKeys!2407 (_2!1226 lt!55419)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 (_2!1226 lt!55419)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!109191 (= e!71045 e!71038)))

(declare-fun b!109198 () Bool)

(assert (=> b!109198 (= e!71042 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000)))))

(declare-fun b!109199 () Bool)

(assert (=> b!109199 (= e!71044 (not call!11596))))

(declare-fun b!109200 () Bool)

(declare-fun e!71043 () Bool)

(declare-fun call!11598 () Bool)

(assert (=> b!109200 (= e!71043 (not call!11598))))

(declare-fun b!109201 () Bool)

(assert (=> b!109201 (= e!71041 e!71043)))

(declare-fun c!19277 () Bool)

(assert (=> b!109201 (= c!19277 (not (= (bvand (extraKeys!2407 (_2!1226 lt!55419)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!109202 () Bool)

(declare-fun e!71039 () Bool)

(assert (=> b!109202 (= e!71046 e!71039)))

(declare-fun res!54102 () Bool)

(assert (=> b!109202 (=> (not res!54102) (not e!71039))))

(assert (=> b!109202 (= res!54102 (contains!834 lt!56205 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000)))))

(assert (=> b!109202 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55419)))))))

(declare-fun bm!11597 () Bool)

(assert (=> bm!11597 (= call!11600 call!11599)))

(declare-fun b!109203 () Bool)

(declare-fun e!71036 () Bool)

(assert (=> b!109203 (= e!71036 (= (apply!99 lt!56205 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 (_2!1226 lt!55419))))))

(declare-fun bm!11598 () Bool)

(assert (=> bm!11598 (= call!11598 (contains!834 lt!56205 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109204 () Bool)

(assert (=> b!109204 (= e!71038 call!11600)))

(declare-fun b!109205 () Bool)

(assert (=> b!109205 (= e!71039 (= (apply!99 lt!56205 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 (_values!2589 (_2!1226 lt!55419))) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 (_2!1226 lt!55419)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109205 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 (_values!2589 (_2!1226 lt!55419)))))))

(assert (=> b!109205 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55419)))))))

(declare-fun b!109206 () Bool)

(assert (=> b!109206 (= e!71035 (+!148 call!11602 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (_2!1226 lt!55419)))))))

(declare-fun b!109207 () Bool)

(assert (=> b!109207 (= e!71040 (= (apply!99 lt!56205 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 (_2!1226 lt!55419))))))

(declare-fun b!109208 () Bool)

(assert (=> b!109208 (= e!71035 e!71045)))

(assert (=> b!109208 (= c!19281 (and (not (= (bvand (extraKeys!2407 (_2!1226 lt!55419)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 (_2!1226 lt!55419)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!109209 () Bool)

(assert (=> b!109209 (= e!71043 e!71036)))

(declare-fun res!54104 () Bool)

(assert (=> b!109209 (= res!54104 call!11598)))

(assert (=> b!109209 (=> (not res!54104) (not e!71036))))

(declare-fun bm!11599 () Bool)

(assert (=> bm!11599 (= call!11599 call!11601)))

(assert (= (and d!30547 c!19279) b!109206))

(assert (= (and d!30547 (not c!19279)) b!109208))

(assert (= (and b!109208 c!19281) b!109193))

(assert (= (and b!109208 (not c!19281)) b!109191))

(assert (= (and b!109191 c!19276) b!109194))

(assert (= (and b!109191 (not c!19276)) b!109204))

(assert (= (or b!109194 b!109204) bm!11597))

(assert (= (or b!109193 bm!11597) bm!11599))

(assert (= (or b!109193 b!109194) bm!11594))

(assert (= (or b!109206 bm!11599) bm!11595))

(assert (= (or b!109206 bm!11594) bm!11596))

(assert (= (and d!30547 res!54101) b!109198))

(assert (= (and d!30547 c!19278) b!109189))

(assert (= (and d!30547 (not c!19278)) b!109196))

(assert (= (and d!30547 res!54105) b!109195))

(assert (= (and b!109195 res!54099) b!109190))

(assert (= (and b!109195 (not res!54098)) b!109202))

(assert (= (and b!109202 res!54102) b!109205))

(assert (= (and b!109195 res!54100) b!109192))

(assert (= (and b!109192 c!19280) b!109197))

(assert (= (and b!109192 (not c!19280)) b!109199))

(assert (= (and b!109197 res!54106) b!109207))

(assert (= (or b!109197 b!109199) bm!11593))

(assert (= (and b!109192 res!54103) b!109201))

(assert (= (and b!109201 c!19277) b!109209))

(assert (= (and b!109201 (not c!19277)) b!109200))

(assert (= (and b!109209 res!54104) b!109203))

(assert (= (or b!109209 b!109200) bm!11598))

(declare-fun b_lambda!4875 () Bool)

(assert (=> (not b_lambda!4875) (not b!109205)))

(declare-fun tb!2093 () Bool)

(declare-fun t!5755 () Bool)

(assert (=> (and b!107580 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 (_2!1226 lt!55419))) t!5755) tb!2093))

(declare-fun result!3513 () Bool)

(assert (=> tb!2093 (= result!3513 tp_is_empty!2691)))

(assert (=> b!109205 t!5755))

(declare-fun b_and!6727 () Bool)

(assert (= b_and!6723 (and (=> t!5755 result!3513) b_and!6727)))

(declare-fun t!5757 () Bool)

(declare-fun tb!2095 () Bool)

(assert (=> (and b!107593 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (_2!1226 lt!55419))) t!5757) tb!2095))

(declare-fun result!3515 () Bool)

(assert (= result!3515 result!3513))

(assert (=> b!109205 t!5757))

(declare-fun b_and!6729 () Bool)

(assert (= b_and!6725 (and (=> t!5757 result!3515) b_and!6729)))

(declare-fun m!123551 () Bool)

(assert (=> bm!11593 m!123551))

(assert (=> b!109202 m!123281))

(assert (=> b!109202 m!123281))

(declare-fun m!123553 () Bool)

(assert (=> b!109202 m!123553))

(assert (=> b!109198 m!123281))

(assert (=> b!109198 m!123281))

(assert (=> b!109198 m!123287))

(declare-fun m!123555 () Bool)

(assert (=> bm!11598 m!123555))

(declare-fun m!123557 () Bool)

(assert (=> b!109189 m!123557))

(declare-fun m!123559 () Bool)

(assert (=> b!109189 m!123559))

(declare-fun m!123561 () Bool)

(assert (=> b!109189 m!123561))

(declare-fun m!123563 () Bool)

(assert (=> b!109189 m!123563))

(declare-fun m!123565 () Bool)

(assert (=> b!109189 m!123565))

(declare-fun m!123567 () Bool)

(assert (=> b!109189 m!123567))

(declare-fun m!123569 () Bool)

(assert (=> b!109189 m!123569))

(declare-fun m!123571 () Bool)

(assert (=> b!109189 m!123571))

(declare-fun m!123573 () Bool)

(assert (=> b!109189 m!123573))

(declare-fun m!123575 () Bool)

(assert (=> b!109189 m!123575))

(declare-fun m!123577 () Bool)

(assert (=> b!109189 m!123577))

(assert (=> b!109189 m!123559))

(assert (=> b!109189 m!123571))

(declare-fun m!123579 () Bool)

(assert (=> b!109189 m!123579))

(declare-fun m!123581 () Bool)

(assert (=> b!109189 m!123581))

(declare-fun m!123583 () Bool)

(assert (=> b!109189 m!123583))

(assert (=> b!109189 m!123565))

(declare-fun m!123585 () Bool)

(assert (=> b!109189 m!123585))

(assert (=> b!109189 m!123281))

(declare-fun m!123587 () Bool)

(assert (=> b!109189 m!123587))

(assert (=> b!109189 m!123573))

(declare-fun m!123589 () Bool)

(assert (=> b!109206 m!123589))

(assert (=> b!109205 m!123281))

(assert (=> b!109205 m!123281))

(declare-fun m!123591 () Bool)

(assert (=> b!109205 m!123591))

(declare-fun m!123593 () Bool)

(assert (=> b!109205 m!123593))

(declare-fun m!123595 () Bool)

(assert (=> b!109205 m!123595))

(declare-fun m!123597 () Bool)

(assert (=> b!109205 m!123597))

(assert (=> b!109205 m!123595))

(assert (=> b!109205 m!123593))

(assert (=> bm!11595 m!123577))

(assert (=> b!109190 m!123281))

(assert (=> b!109190 m!123281))

(assert (=> b!109190 m!123287))

(declare-fun m!123599 () Bool)

(assert (=> b!109203 m!123599))

(declare-fun m!123601 () Bool)

(assert (=> bm!11596 m!123601))

(declare-fun m!123603 () Bool)

(assert (=> b!109207 m!123603))

(assert (=> d!30547 m!123201))

(assert (=> d!29965 d!30547))

(declare-fun d!30549 () Bool)

(declare-fun e!71048 () Bool)

(assert (=> d!30549 e!71048))

(declare-fun res!54107 () Bool)

(assert (=> d!30549 (=> res!54107 e!71048)))

(declare-fun lt!56222 () Bool)

(assert (=> d!30549 (= res!54107 (not lt!56222))))

(declare-fun lt!56223 () Bool)

(assert (=> d!30549 (= lt!56222 lt!56223)))

(declare-fun lt!56221 () Unit!3321)

(declare-fun e!71047 () Unit!3321)

(assert (=> d!30549 (= lt!56221 e!71047)))

(declare-fun c!19282 () Bool)

(assert (=> d!30549 (= c!19282 lt!56223)))

(assert (=> d!30549 (= lt!56223 (containsKey!161 (toList!808 lt!55683) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30549 (= (contains!834 lt!55683 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56222)))

(declare-fun b!109210 () Bool)

(declare-fun lt!56224 () Unit!3321)

(assert (=> b!109210 (= e!71047 lt!56224)))

(assert (=> b!109210 (= lt!56224 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55683) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109210 (isDefined!110 (getValueByKey!157 (toList!808 lt!55683) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109211 () Bool)

(declare-fun Unit!3383 () Unit!3321)

(assert (=> b!109211 (= e!71047 Unit!3383)))

(declare-fun b!109212 () Bool)

(assert (=> b!109212 (= e!71048 (isDefined!110 (getValueByKey!157 (toList!808 lt!55683) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30549 c!19282) b!109210))

(assert (= (and d!30549 (not c!19282)) b!109211))

(assert (= (and d!30549 (not res!54107)) b!109212))

(declare-fun m!123605 () Bool)

(assert (=> d!30549 m!123605))

(declare-fun m!123607 () Bool)

(assert (=> b!109210 m!123607))

(declare-fun m!123609 () Bool)

(assert (=> b!109210 m!123609))

(assert (=> b!109210 m!123609))

(declare-fun m!123611 () Bool)

(assert (=> b!109210 m!123611))

(assert (=> b!109212 m!123609))

(assert (=> b!109212 m!123609))

(assert (=> b!109212 m!123611))

(assert (=> b!108230 d!30549))

(declare-fun d!30551 () Bool)

(assert (=> d!30551 (isDefined!110 (getValueByKey!157 (toList!808 lt!55268) (_1!1225 lt!55182)))))

(declare-fun lt!56225 () Unit!3321)

(assert (=> d!30551 (= lt!56225 (choose!677 (toList!808 lt!55268) (_1!1225 lt!55182)))))

(declare-fun e!71049 () Bool)

(assert (=> d!30551 e!71049))

(declare-fun res!54108 () Bool)

(assert (=> d!30551 (=> (not res!54108) (not e!71049))))

(assert (=> d!30551 (= res!54108 (isStrictlySorted!310 (toList!808 lt!55268)))))

(assert (=> d!30551 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55268) (_1!1225 lt!55182)) lt!56225)))

(declare-fun b!109213 () Bool)

(assert (=> b!109213 (= e!71049 (containsKey!161 (toList!808 lt!55268) (_1!1225 lt!55182)))))

(assert (= (and d!30551 res!54108) b!109213))

(assert (=> d!30551 m!121159))

(assert (=> d!30551 m!121159))

(assert (=> d!30551 m!121477))

(declare-fun m!123613 () Bool)

(assert (=> d!30551 m!123613))

(declare-fun m!123615 () Bool)

(assert (=> d!30551 m!123615))

(assert (=> b!109213 m!121473))

(assert (=> b!108072 d!30551))

(assert (=> b!108072 d!30397))

(assert (=> b!108072 d!30045))

(assert (=> b!107983 d!30475))

(assert (=> d!29899 d!29895))

(assert (=> d!29899 d!29901))

(assert (=> d!29899 d!29897))

(assert (=> d!29899 d!29903))

(declare-fun d!30553 () Bool)

(declare-fun e!71050 () Bool)

(assert (=> d!30553 e!71050))

(declare-fun res!54109 () Bool)

(assert (=> d!30553 (=> (not res!54109) (not e!71050))))

(declare-fun lt!56226 () ListLongMap!1585)

(assert (=> d!30553 (= res!54109 (contains!834 lt!56226 (_1!1225 (tuple2!2429 lt!55656 (minValue!2479 newMap!16)))))))

(declare-fun lt!56228 () List!1625)

(assert (=> d!30553 (= lt!56226 (ListLongMap!1586 lt!56228))))

(declare-fun lt!56227 () Unit!3321)

(declare-fun lt!56229 () Unit!3321)

(assert (=> d!30553 (= lt!56227 lt!56229)))

(assert (=> d!30553 (= (getValueByKey!157 lt!56228 (_1!1225 (tuple2!2429 lt!55656 (minValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55656 (minValue!2479 newMap!16)))))))

(assert (=> d!30553 (= lt!56229 (lemmaContainsTupThenGetReturnValue!73 lt!56228 (_1!1225 (tuple2!2429 lt!55656 (minValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55656 (minValue!2479 newMap!16)))))))

(assert (=> d!30553 (= lt!56228 (insertStrictlySorted!76 (toList!808 lt!55647) (_1!1225 (tuple2!2429 lt!55656 (minValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55656 (minValue!2479 newMap!16)))))))

(assert (=> d!30553 (= (+!148 lt!55647 (tuple2!2429 lt!55656 (minValue!2479 newMap!16))) lt!56226)))

(declare-fun b!109214 () Bool)

(declare-fun res!54110 () Bool)

(assert (=> b!109214 (=> (not res!54110) (not e!71050))))

(assert (=> b!109214 (= res!54110 (= (getValueByKey!157 (toList!808 lt!56226) (_1!1225 (tuple2!2429 lt!55656 (minValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55656 (minValue!2479 newMap!16))))))))

(declare-fun b!109215 () Bool)

(assert (=> b!109215 (= e!71050 (contains!836 (toList!808 lt!56226) (tuple2!2429 lt!55656 (minValue!2479 newMap!16))))))

(assert (= (and d!30553 res!54109) b!109214))

(assert (= (and b!109214 res!54110) b!109215))

(declare-fun m!123617 () Bool)

(assert (=> d!30553 m!123617))

(declare-fun m!123619 () Bool)

(assert (=> d!30553 m!123619))

(declare-fun m!123621 () Bool)

(assert (=> d!30553 m!123621))

(declare-fun m!123623 () Bool)

(assert (=> d!30553 m!123623))

(declare-fun m!123625 () Bool)

(assert (=> b!109214 m!123625))

(declare-fun m!123627 () Bool)

(assert (=> b!109215 m!123627))

(assert (=> b!108162 d!30553))

(declare-fun d!30555 () Bool)

(assert (=> d!30555 (= (apply!99 (+!148 lt!55647 (tuple2!2429 lt!55656 (minValue!2479 newMap!16))) lt!55659) (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55647 (tuple2!2429 lt!55656 (minValue!2479 newMap!16)))) lt!55659)))))

(declare-fun bs!4495 () Bool)

(assert (= bs!4495 d!30555))

(declare-fun m!123629 () Bool)

(assert (=> bs!4495 m!123629))

(assert (=> bs!4495 m!123629))

(declare-fun m!123631 () Bool)

(assert (=> bs!4495 m!123631))

(assert (=> b!108162 d!30555))

(declare-fun d!30557 () Bool)

(declare-fun e!71051 () Bool)

(assert (=> d!30557 e!71051))

(declare-fun res!54111 () Bool)

(assert (=> d!30557 (=> (not res!54111) (not e!71051))))

(declare-fun lt!56230 () ListLongMap!1585)

(assert (=> d!30557 (= res!54111 (contains!834 lt!56230 (_1!1225 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16)))))))

(declare-fun lt!56232 () List!1625)

(assert (=> d!30557 (= lt!56230 (ListLongMap!1586 lt!56232))))

(declare-fun lt!56231 () Unit!3321)

(declare-fun lt!56233 () Unit!3321)

(assert (=> d!30557 (= lt!56231 lt!56233)))

(assert (=> d!30557 (= (getValueByKey!157 lt!56232 (_1!1225 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30557 (= lt!56233 (lemmaContainsTupThenGetReturnValue!73 lt!56232 (_1!1225 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30557 (= lt!56232 (insertStrictlySorted!76 (toList!808 lt!55639) (_1!1225 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30557 (= (+!148 lt!55639 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16))) lt!56230)))

(declare-fun b!109216 () Bool)

(declare-fun res!54112 () Bool)

(assert (=> b!109216 (=> (not res!54112) (not e!71051))))

(assert (=> b!109216 (= res!54112 (= (getValueByKey!157 (toList!808 lt!56230) (_1!1225 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16))))))))

(declare-fun b!109217 () Bool)

(assert (=> b!109217 (= e!71051 (contains!836 (toList!808 lt!56230) (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16))))))

(assert (= (and d!30557 res!54111) b!109216))

(assert (= (and b!109216 res!54112) b!109217))

(declare-fun m!123633 () Bool)

(assert (=> d!30557 m!123633))

(declare-fun m!123635 () Bool)

(assert (=> d!30557 m!123635))

(declare-fun m!123637 () Bool)

(assert (=> d!30557 m!123637))

(declare-fun m!123639 () Bool)

(assert (=> d!30557 m!123639))

(declare-fun m!123641 () Bool)

(assert (=> b!109216 m!123641))

(declare-fun m!123643 () Bool)

(assert (=> b!109217 m!123643))

(assert (=> b!108162 d!30557))

(declare-fun d!30559 () Bool)

(declare-fun e!71052 () Bool)

(assert (=> d!30559 e!71052))

(declare-fun res!54113 () Bool)

(assert (=> d!30559 (=> (not res!54113) (not e!71052))))

(declare-fun lt!56234 () ListLongMap!1585)

(assert (=> d!30559 (= res!54113 (contains!834 lt!56234 (_1!1225 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16)))))))

(declare-fun lt!56236 () List!1625)

(assert (=> d!30559 (= lt!56234 (ListLongMap!1586 lt!56236))))

(declare-fun lt!56235 () Unit!3321)

(declare-fun lt!56237 () Unit!3321)

(assert (=> d!30559 (= lt!56235 lt!56237)))

(assert (=> d!30559 (= (getValueByKey!157 lt!56236 (_1!1225 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30559 (= lt!56237 (lemmaContainsTupThenGetReturnValue!73 lt!56236 (_1!1225 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30559 (= lt!56236 (insertStrictlySorted!76 (toList!808 lt!55650) (_1!1225 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30559 (= (+!148 lt!55650 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16))) lt!56234)))

(declare-fun b!109218 () Bool)

(declare-fun res!54114 () Bool)

(assert (=> b!109218 (=> (not res!54114) (not e!71052))))

(assert (=> b!109218 (= res!54114 (= (getValueByKey!157 (toList!808 lt!56234) (_1!1225 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16))))))))

(declare-fun b!109219 () Bool)

(assert (=> b!109219 (= e!71052 (contains!836 (toList!808 lt!56234) (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16))))))

(assert (= (and d!30559 res!54113) b!109218))

(assert (= (and b!109218 res!54114) b!109219))

(declare-fun m!123645 () Bool)

(assert (=> d!30559 m!123645))

(declare-fun m!123647 () Bool)

(assert (=> d!30559 m!123647))

(declare-fun m!123649 () Bool)

(assert (=> d!30559 m!123649))

(declare-fun m!123651 () Bool)

(assert (=> d!30559 m!123651))

(declare-fun m!123653 () Bool)

(assert (=> b!109218 m!123653))

(declare-fun m!123655 () Bool)

(assert (=> b!109219 m!123655))

(assert (=> b!108162 d!30559))

(declare-fun d!30561 () Bool)

(assert (=> d!30561 (= (apply!99 (+!148 lt!55650 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16))) lt!55653) (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55650 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16)))) lt!55653)))))

(declare-fun bs!4496 () Bool)

(assert (= bs!4496 d!30561))

(declare-fun m!123657 () Bool)

(assert (=> bs!4496 m!123657))

(assert (=> bs!4496 m!123657))

(declare-fun m!123659 () Bool)

(assert (=> bs!4496 m!123659))

(assert (=> b!108162 d!30561))

(declare-fun d!30563 () Bool)

(assert (=> d!30563 (= (apply!99 (+!148 lt!55650 (tuple2!2429 lt!55640 (zeroValue!2479 newMap!16))) lt!55653) (apply!99 lt!55650 lt!55653))))

(declare-fun lt!56238 () Unit!3321)

(assert (=> d!30563 (= lt!56238 (choose!673 lt!55650 lt!55640 (zeroValue!2479 newMap!16) lt!55653))))

(declare-fun e!71053 () Bool)

(assert (=> d!30563 e!71053))

(declare-fun res!54115 () Bool)

(assert (=> d!30563 (=> (not res!54115) (not e!71053))))

(assert (=> d!30563 (= res!54115 (contains!834 lt!55650 lt!55653))))

(assert (=> d!30563 (= (addApplyDifferent!75 lt!55650 lt!55640 (zeroValue!2479 newMap!16) lt!55653) lt!56238)))

(declare-fun b!109220 () Bool)

(assert (=> b!109220 (= e!71053 (not (= lt!55653 lt!55640)))))

(assert (= (and d!30563 res!54115) b!109220))

(assert (=> d!30563 m!121691))

(assert (=> d!30563 m!121693))

(assert (=> d!30563 m!121701))

(assert (=> d!30563 m!121691))

(declare-fun m!123661 () Bool)

(assert (=> d!30563 m!123661))

(declare-fun m!123663 () Bool)

(assert (=> d!30563 m!123663))

(assert (=> b!108162 d!30563))

(declare-fun d!30565 () Bool)

(assert (=> d!30565 (= (apply!99 (+!148 lt!55646 (tuple2!2429 lt!55643 (minValue!2479 newMap!16))) lt!55658) (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55646 (tuple2!2429 lt!55643 (minValue!2479 newMap!16)))) lt!55658)))))

(declare-fun bs!4497 () Bool)

(assert (= bs!4497 d!30565))

(declare-fun m!123665 () Bool)

(assert (=> bs!4497 m!123665))

(assert (=> bs!4497 m!123665))

(declare-fun m!123667 () Bool)

(assert (=> bs!4497 m!123667))

(assert (=> b!108162 d!30565))

(declare-fun d!30567 () Bool)

(declare-fun e!71054 () Bool)

(assert (=> d!30567 e!71054))

(declare-fun res!54116 () Bool)

(assert (=> d!30567 (=> (not res!54116) (not e!71054))))

(declare-fun lt!56239 () ListLongMap!1585)

(assert (=> d!30567 (= res!54116 (contains!834 lt!56239 (_1!1225 (tuple2!2429 lt!55643 (minValue!2479 newMap!16)))))))

(declare-fun lt!56241 () List!1625)

(assert (=> d!30567 (= lt!56239 (ListLongMap!1586 lt!56241))))

(declare-fun lt!56240 () Unit!3321)

(declare-fun lt!56242 () Unit!3321)

(assert (=> d!30567 (= lt!56240 lt!56242)))

(assert (=> d!30567 (= (getValueByKey!157 lt!56241 (_1!1225 (tuple2!2429 lt!55643 (minValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55643 (minValue!2479 newMap!16)))))))

(assert (=> d!30567 (= lt!56242 (lemmaContainsTupThenGetReturnValue!73 lt!56241 (_1!1225 (tuple2!2429 lt!55643 (minValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55643 (minValue!2479 newMap!16)))))))

(assert (=> d!30567 (= lt!56241 (insertStrictlySorted!76 (toList!808 lt!55646) (_1!1225 (tuple2!2429 lt!55643 (minValue!2479 newMap!16))) (_2!1225 (tuple2!2429 lt!55643 (minValue!2479 newMap!16)))))))

(assert (=> d!30567 (= (+!148 lt!55646 (tuple2!2429 lt!55643 (minValue!2479 newMap!16))) lt!56239)))

(declare-fun b!109221 () Bool)

(declare-fun res!54117 () Bool)

(assert (=> b!109221 (=> (not res!54117) (not e!71054))))

(assert (=> b!109221 (= res!54117 (= (getValueByKey!157 (toList!808 lt!56239) (_1!1225 (tuple2!2429 lt!55643 (minValue!2479 newMap!16)))) (Some!162 (_2!1225 (tuple2!2429 lt!55643 (minValue!2479 newMap!16))))))))

(declare-fun b!109222 () Bool)

(assert (=> b!109222 (= e!71054 (contains!836 (toList!808 lt!56239) (tuple2!2429 lt!55643 (minValue!2479 newMap!16))))))

(assert (= (and d!30567 res!54116) b!109221))

(assert (= (and b!109221 res!54117) b!109222))

(declare-fun m!123669 () Bool)

(assert (=> d!30567 m!123669))

(declare-fun m!123671 () Bool)

(assert (=> d!30567 m!123671))

(declare-fun m!123673 () Bool)

(assert (=> d!30567 m!123673))

(declare-fun m!123675 () Bool)

(assert (=> d!30567 m!123675))

(declare-fun m!123677 () Bool)

(assert (=> b!109221 m!123677))

(declare-fun m!123679 () Bool)

(assert (=> b!109222 m!123679))

(assert (=> b!108162 d!30567))

(declare-fun b!109223 () Bool)

(declare-fun e!71060 () ListLongMap!1585)

(declare-fun e!71056 () ListLongMap!1585)

(assert (=> b!109223 (= e!71060 e!71056)))

(declare-fun c!19285 () Bool)

(assert (=> b!109223 (= c!19285 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109224 () Bool)

(assert (=> b!109224 (= e!71060 (ListLongMap!1586 Nil!1622))))

(declare-fun bm!11600 () Bool)

(declare-fun call!11603 () ListLongMap!1585)

(assert (=> bm!11600 (= call!11603 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2606 newMap!16)))))

(declare-fun b!109225 () Bool)

(declare-fun e!71059 () Bool)

(declare-fun lt!56243 () ListLongMap!1585)

(assert (=> b!109225 (= e!71059 (= lt!56243 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2606 newMap!16))))))

(declare-fun d!30569 () Bool)

(declare-fun e!71057 () Bool)

(assert (=> d!30569 e!71057))

(declare-fun res!54118 () Bool)

(assert (=> d!30569 (=> (not res!54118) (not e!71057))))

(assert (=> d!30569 (= res!54118 (not (contains!834 lt!56243 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30569 (= lt!56243 e!71060)))

(declare-fun c!19283 () Bool)

(assert (=> d!30569 (= c!19283 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(assert (=> d!30569 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30569 (= (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56243)))

(declare-fun b!109226 () Bool)

(declare-fun e!71058 () Bool)

(declare-fun e!71055 () Bool)

(assert (=> b!109226 (= e!71058 e!71055)))

(assert (=> b!109226 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun res!54120 () Bool)

(assert (=> b!109226 (= res!54120 (contains!834 lt!56243 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109226 (=> (not res!54120) (not e!71055))))

(declare-fun b!109227 () Bool)

(assert (=> b!109227 (= e!71057 e!71058)))

(declare-fun c!19286 () Bool)

(declare-fun e!71061 () Bool)

(assert (=> b!109227 (= c!19286 e!71061)))

(declare-fun res!54119 () Bool)

(assert (=> b!109227 (=> (not res!54119) (not e!71061))))

(assert (=> b!109227 (= res!54119 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!109228 () Bool)

(assert (=> b!109228 (= e!71061 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109228 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!109229 () Bool)

(assert (=> b!109229 (= e!71058 e!71059)))

(declare-fun c!19284 () Bool)

(assert (=> b!109229 (= c!19284 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!109230 () Bool)

(assert (=> b!109230 (= e!71059 (isEmpty!373 lt!56243))))

(declare-fun b!109231 () Bool)

(assert (=> b!109231 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(assert (=> b!109231 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 (_values!2589 newMap!16))))))

(assert (=> b!109231 (= e!71055 (= (apply!99 lt!56243 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!109232 () Bool)

(assert (=> b!109232 (= e!71056 call!11603)))

(declare-fun b!109233 () Bool)

(declare-fun res!54121 () Bool)

(assert (=> b!109233 (=> (not res!54121) (not e!71057))))

(assert (=> b!109233 (= res!54121 (not (contains!834 lt!56243 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109234 () Bool)

(declare-fun lt!56245 () Unit!3321)

(declare-fun lt!56244 () Unit!3321)

(assert (=> b!109234 (= lt!56245 lt!56244)))

(declare-fun lt!56246 () ListLongMap!1585)

(declare-fun lt!56249 () (_ BitVec 64))

(declare-fun lt!56248 () (_ BitVec 64))

(declare-fun lt!56247 () V!3235)

(assert (=> b!109234 (not (contains!834 (+!148 lt!56246 (tuple2!2429 lt!56248 lt!56247)) lt!56249))))

(assert (=> b!109234 (= lt!56244 (addStillNotContains!47 lt!56246 lt!56248 lt!56247 lt!56249))))

(assert (=> b!109234 (= lt!56249 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!109234 (= lt!56247 (get!1341 (select (arr!2076 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!109234 (= lt!56248 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109234 (= lt!56246 call!11603)))

(assert (=> b!109234 (= e!71056 (+!148 call!11603 (tuple2!2429 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (get!1341 (select (arr!2076 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30569 c!19283) b!109224))

(assert (= (and d!30569 (not c!19283)) b!109223))

(assert (= (and b!109223 c!19285) b!109234))

(assert (= (and b!109223 (not c!19285)) b!109232))

(assert (= (or b!109234 b!109232) bm!11600))

(assert (= (and d!30569 res!54118) b!109233))

(assert (= (and b!109233 res!54121) b!109227))

(assert (= (and b!109227 res!54119) b!109228))

(assert (= (and b!109227 c!19286) b!109226))

(assert (= (and b!109227 (not c!19286)) b!109229))

(assert (= (and b!109226 res!54120) b!109231))

(assert (= (and b!109229 c!19284) b!109225))

(assert (= (and b!109229 (not c!19284)) b!109230))

(declare-fun b_lambda!4877 () Bool)

(assert (=> (not b_lambda!4877) (not b!109231)))

(assert (=> b!109231 t!5750))

(declare-fun b_and!6731 () Bool)

(assert (= b_and!6727 (and (=> t!5750 result!3509) b_and!6731)))

(assert (=> b!109231 t!5752))

(declare-fun b_and!6733 () Bool)

(assert (= b_and!6729 (and (=> t!5752 result!3511) b_and!6733)))

(declare-fun b_lambda!4879 () Bool)

(assert (=> (not b_lambda!4879) (not b!109234)))

(assert (=> b!109234 t!5750))

(declare-fun b_and!6735 () Bool)

(assert (= b_and!6731 (and (=> t!5750 result!3509) b_and!6735)))

(assert (=> b!109234 t!5752))

(declare-fun b_and!6737 () Bool)

(assert (= b_and!6733 (and (=> t!5752 result!3511) b_and!6737)))

(declare-fun m!123681 () Bool)

(assert (=> b!109233 m!123681))

(declare-fun m!123683 () Bool)

(assert (=> bm!11600 m!123683))

(assert (=> b!109228 m!121333))

(assert (=> b!109228 m!121333))

(assert (=> b!109228 m!121341))

(assert (=> b!109231 m!121725))

(assert (=> b!109231 m!121727))

(assert (=> b!109231 m!121729))

(assert (=> b!109231 m!121333))

(assert (=> b!109231 m!121727))

(assert (=> b!109231 m!121725))

(assert (=> b!109231 m!121333))

(declare-fun m!123685 () Bool)

(assert (=> b!109231 m!123685))

(declare-fun m!123687 () Bool)

(assert (=> b!109230 m!123687))

(declare-fun m!123689 () Bool)

(assert (=> d!30569 m!123689))

(assert (=> d!30569 m!121327))

(assert (=> b!109225 m!123683))

(assert (=> b!109223 m!121333))

(assert (=> b!109223 m!121333))

(assert (=> b!109223 m!121341))

(assert (=> b!109234 m!121725))

(assert (=> b!109234 m!121727))

(assert (=> b!109234 m!121729))

(declare-fun m!123691 () Bool)

(assert (=> b!109234 m!123691))

(declare-fun m!123693 () Bool)

(assert (=> b!109234 m!123693))

(assert (=> b!109234 m!121333))

(assert (=> b!109234 m!121727))

(declare-fun m!123695 () Bool)

(assert (=> b!109234 m!123695))

(assert (=> b!109234 m!121725))

(assert (=> b!109234 m!123691))

(declare-fun m!123697 () Bool)

(assert (=> b!109234 m!123697))

(assert (=> b!109226 m!121333))

(assert (=> b!109226 m!121333))

(declare-fun m!123699 () Bool)

(assert (=> b!109226 m!123699))

(assert (=> b!108162 d!30569))

(declare-fun d!30571 () Bool)

(assert (=> d!30571 (= (apply!99 lt!55650 lt!55653) (get!1344 (getValueByKey!157 (toList!808 lt!55650) lt!55653)))))

(declare-fun bs!4498 () Bool)

(assert (= bs!4498 d!30571))

(declare-fun m!123701 () Bool)

(assert (=> bs!4498 m!123701))

(assert (=> bs!4498 m!123701))

(declare-fun m!123703 () Bool)

(assert (=> bs!4498 m!123703))

(assert (=> b!108162 d!30571))

(declare-fun d!30573 () Bool)

(assert (=> d!30573 (= (apply!99 lt!55647 lt!55659) (get!1344 (getValueByKey!157 (toList!808 lt!55647) lt!55659)))))

(declare-fun bs!4499 () Bool)

(assert (= bs!4499 d!30573))

(declare-fun m!123705 () Bool)

(assert (=> bs!4499 m!123705))

(assert (=> bs!4499 m!123705))

(declare-fun m!123707 () Bool)

(assert (=> bs!4499 m!123707))

(assert (=> b!108162 d!30573))

(declare-fun d!30575 () Bool)

(assert (=> d!30575 (= (apply!99 lt!55646 lt!55658) (get!1344 (getValueByKey!157 (toList!808 lt!55646) lt!55658)))))

(declare-fun bs!4500 () Bool)

(assert (= bs!4500 d!30575))

(declare-fun m!123709 () Bool)

(assert (=> bs!4500 m!123709))

(assert (=> bs!4500 m!123709))

(declare-fun m!123711 () Bool)

(assert (=> bs!4500 m!123711))

(assert (=> b!108162 d!30575))

(declare-fun d!30577 () Bool)

(assert (=> d!30577 (contains!834 (+!148 lt!55639 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16))) lt!55654)))

(declare-fun lt!56250 () Unit!3321)

(assert (=> d!30577 (= lt!56250 (choose!674 lt!55639 lt!55657 (zeroValue!2479 newMap!16) lt!55654))))

(assert (=> d!30577 (contains!834 lt!55639 lt!55654)))

(assert (=> d!30577 (= (addStillContains!75 lt!55639 lt!55657 (zeroValue!2479 newMap!16) lt!55654) lt!56250)))

(declare-fun bs!4501 () Bool)

(assert (= bs!4501 d!30577))

(assert (=> bs!4501 m!121705))

(assert (=> bs!4501 m!121705))

(assert (=> bs!4501 m!121707))

(declare-fun m!123713 () Bool)

(assert (=> bs!4501 m!123713))

(declare-fun m!123715 () Bool)

(assert (=> bs!4501 m!123715))

(assert (=> b!108162 d!30577))

(declare-fun d!30579 () Bool)

(assert (=> d!30579 (= (apply!99 (+!148 lt!55646 (tuple2!2429 lt!55643 (minValue!2479 newMap!16))) lt!55658) (apply!99 lt!55646 lt!55658))))

(declare-fun lt!56251 () Unit!3321)

(assert (=> d!30579 (= lt!56251 (choose!673 lt!55646 lt!55643 (minValue!2479 newMap!16) lt!55658))))

(declare-fun e!71062 () Bool)

(assert (=> d!30579 e!71062))

(declare-fun res!54122 () Bool)

(assert (=> d!30579 (=> (not res!54122) (not e!71062))))

(assert (=> d!30579 (= res!54122 (contains!834 lt!55646 lt!55658))))

(assert (=> d!30579 (= (addApplyDifferent!75 lt!55646 lt!55643 (minValue!2479 newMap!16) lt!55658) lt!56251)))

(declare-fun b!109235 () Bool)

(assert (=> b!109235 (= e!71062 (not (= lt!55658 lt!55643)))))

(assert (= (and d!30579 res!54122) b!109235))

(assert (=> d!30579 m!121697))

(assert (=> d!30579 m!121699))

(assert (=> d!30579 m!121689))

(assert (=> d!30579 m!121697))

(declare-fun m!123717 () Bool)

(assert (=> d!30579 m!123717))

(declare-fun m!123719 () Bool)

(assert (=> d!30579 m!123719))

(assert (=> b!108162 d!30579))

(declare-fun d!30581 () Bool)

(assert (=> d!30581 (= (apply!99 (+!148 lt!55647 (tuple2!2429 lt!55656 (minValue!2479 newMap!16))) lt!55659) (apply!99 lt!55647 lt!55659))))

(declare-fun lt!56252 () Unit!3321)

(assert (=> d!30581 (= lt!56252 (choose!673 lt!55647 lt!55656 (minValue!2479 newMap!16) lt!55659))))

(declare-fun e!71063 () Bool)

(assert (=> d!30581 e!71063))

(declare-fun res!54123 () Bool)

(assert (=> d!30581 (=> (not res!54123) (not e!71063))))

(assert (=> d!30581 (= res!54123 (contains!834 lt!55647 lt!55659))))

(assert (=> d!30581 (= (addApplyDifferent!75 lt!55647 lt!55656 (minValue!2479 newMap!16) lt!55659) lt!56252)))

(declare-fun b!109236 () Bool)

(assert (=> b!109236 (= e!71063 (not (= lt!55659 lt!55656)))))

(assert (= (and d!30581 res!54123) b!109236))

(assert (=> d!30581 m!121703))

(assert (=> d!30581 m!121711))

(assert (=> d!30581 m!121695))

(assert (=> d!30581 m!121703))

(declare-fun m!123721 () Bool)

(assert (=> d!30581 m!123721))

(declare-fun m!123723 () Bool)

(assert (=> d!30581 m!123723))

(assert (=> b!108162 d!30581))

(declare-fun d!30583 () Bool)

(declare-fun e!71065 () Bool)

(assert (=> d!30583 e!71065))

(declare-fun res!54124 () Bool)

(assert (=> d!30583 (=> res!54124 e!71065)))

(declare-fun lt!56254 () Bool)

(assert (=> d!30583 (= res!54124 (not lt!56254))))

(declare-fun lt!56255 () Bool)

(assert (=> d!30583 (= lt!56254 lt!56255)))

(declare-fun lt!56253 () Unit!3321)

(declare-fun e!71064 () Unit!3321)

(assert (=> d!30583 (= lt!56253 e!71064)))

(declare-fun c!19287 () Bool)

(assert (=> d!30583 (= c!19287 lt!56255)))

(assert (=> d!30583 (= lt!56255 (containsKey!161 (toList!808 (+!148 lt!55639 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16)))) lt!55654))))

(assert (=> d!30583 (= (contains!834 (+!148 lt!55639 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16))) lt!55654) lt!56254)))

(declare-fun b!109237 () Bool)

(declare-fun lt!56256 () Unit!3321)

(assert (=> b!109237 (= e!71064 lt!56256)))

(assert (=> b!109237 (= lt!56256 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 (+!148 lt!55639 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16)))) lt!55654))))

(assert (=> b!109237 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55639 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16)))) lt!55654))))

(declare-fun b!109238 () Bool)

(declare-fun Unit!3384 () Unit!3321)

(assert (=> b!109238 (= e!71064 Unit!3384)))

(declare-fun b!109239 () Bool)

(assert (=> b!109239 (= e!71065 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55639 (tuple2!2429 lt!55657 (zeroValue!2479 newMap!16)))) lt!55654)))))

(assert (= (and d!30583 c!19287) b!109237))

(assert (= (and d!30583 (not c!19287)) b!109238))

(assert (= (and d!30583 (not res!54124)) b!109239))

(declare-fun m!123725 () Bool)

(assert (=> d!30583 m!123725))

(declare-fun m!123727 () Bool)

(assert (=> b!109237 m!123727))

(declare-fun m!123729 () Bool)

(assert (=> b!109237 m!123729))

(assert (=> b!109237 m!123729))

(declare-fun m!123731 () Bool)

(assert (=> b!109237 m!123731))

(assert (=> b!109239 m!123729))

(assert (=> b!109239 m!123729))

(assert (=> b!109239 m!123731))

(assert (=> b!108162 d!30583))

(declare-fun d!30585 () Bool)

(assert (=> d!30585 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55335))))

(declare-fun lt!56257 () Unit!3321)

(assert (=> d!30585 (= lt!56257 (choose!677 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55335))))

(declare-fun e!71066 () Bool)

(assert (=> d!30585 e!71066))

(declare-fun res!54125 () Bool)

(assert (=> d!30585 (=> (not res!54125) (not e!71066))))

(assert (=> d!30585 (= res!54125 (isStrictlySorted!310 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30585 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55335) lt!56257)))

(declare-fun b!109240 () Bool)

(assert (=> b!109240 (= e!71066 (containsKey!161 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55335))))

(assert (= (and d!30585 res!54125) b!109240))

(assert (=> d!30585 m!121581))

(assert (=> d!30585 m!121581))

(assert (=> d!30585 m!121583))

(declare-fun m!123733 () Bool)

(assert (=> d!30585 m!123733))

(declare-fun m!123735 () Bool)

(assert (=> d!30585 m!123735))

(assert (=> b!109240 m!121577))

(assert (=> b!108130 d!30585))

(assert (=> b!108130 d!30405))

(assert (=> b!108130 d!30407))

(declare-fun c!19288 () Bool)

(declare-fun d!30587 () Bool)

(assert (=> d!30587 (= c!19288 (and ((_ is Cons!1621) (toList!808 lt!55598)) (= (_1!1225 (h!2219 (toList!808 lt!55598))) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!71067 () Option!163)

(assert (=> d!30587 (= (getValueByKey!157 (toList!808 lt!55598) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!71067)))

(declare-fun b!109242 () Bool)

(declare-fun e!71068 () Option!163)

(assert (=> b!109242 (= e!71067 e!71068)))

(declare-fun c!19289 () Bool)

(assert (=> b!109242 (= c!19289 (and ((_ is Cons!1621) (toList!808 lt!55598)) (not (= (_1!1225 (h!2219 (toList!808 lt!55598))) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!109243 () Bool)

(assert (=> b!109243 (= e!71068 (getValueByKey!157 (t!5741 (toList!808 lt!55598)) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109241 () Bool)

(assert (=> b!109241 (= e!71067 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55598)))))))

(declare-fun b!109244 () Bool)

(assert (=> b!109244 (= e!71068 None!161)))

(assert (= (and d!30587 c!19288) b!109241))

(assert (= (and d!30587 (not c!19288)) b!109242))

(assert (= (and b!109242 c!19289) b!109243))

(assert (= (and b!109242 (not c!19289)) b!109244))

(declare-fun m!123737 () Bool)

(assert (=> b!109243 m!123737))

(assert (=> b!108128 d!30587))

(declare-fun d!30589 () Bool)

(assert (=> d!30589 (= (isDefined!110 (getValueByKey!157 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!375 (getValueByKey!157 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4502 () Bool)

(assert (= bs!4502 d!30589))

(assert (=> bs!4502 m!121679))

(declare-fun m!123739 () Bool)

(assert (=> bs!4502 m!123739))

(assert (=> b!108325 d!30589))

(declare-fun c!19290 () Bool)

(declare-fun d!30591 () Bool)

(assert (=> d!30591 (= c!19290 (and ((_ is Cons!1621) (toList!808 lt!55326)) (= (_1!1225 (h!2219 (toList!808 lt!55326))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!71069 () Option!163)

(assert (=> d!30591 (= (getValueByKey!157 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!71069)))

(declare-fun b!109246 () Bool)

(declare-fun e!71070 () Option!163)

(assert (=> b!109246 (= e!71069 e!71070)))

(declare-fun c!19291 () Bool)

(assert (=> b!109246 (= c!19291 (and ((_ is Cons!1621) (toList!808 lt!55326)) (not (= (_1!1225 (h!2219 (toList!808 lt!55326))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!109247 () Bool)

(assert (=> b!109247 (= e!71070 (getValueByKey!157 (t!5741 (toList!808 lt!55326)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!109245 () Bool)

(assert (=> b!109245 (= e!71069 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55326)))))))

(declare-fun b!109248 () Bool)

(assert (=> b!109248 (= e!71070 None!161)))

(assert (= (and d!30591 c!19290) b!109245))

(assert (= (and d!30591 (not c!19290)) b!109246))

(assert (= (and b!109246 c!19291) b!109247))

(assert (= (and b!109246 (not c!19291)) b!109248))

(assert (=> b!109247 m!121117))

(declare-fun m!123741 () Bool)

(assert (=> b!109247 m!123741))

(assert (=> b!108325 d!30591))

(declare-fun d!30593 () Bool)

(assert (=> d!30593 (= (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))) lt!55264)) (not (isEmpty!375 (getValueByKey!157 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))) lt!55264))))))

(declare-fun bs!4503 () Bool)

(assert (= bs!4503 d!30593))

(assert (=> bs!4503 m!121449))

(declare-fun m!123743 () Bool)

(assert (=> bs!4503 m!123743))

(assert (=> b!108066 d!30593))

(declare-fun d!30595 () Bool)

(declare-fun c!19292 () Bool)

(assert (=> d!30595 (= c!19292 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)))) (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))))) lt!55264)))))

(declare-fun e!71071 () Option!163)

(assert (=> d!30595 (= (getValueByKey!157 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))) lt!55264) e!71071)))

(declare-fun b!109250 () Bool)

(declare-fun e!71072 () Option!163)

(assert (=> b!109250 (= e!71071 e!71072)))

(declare-fun c!19293 () Bool)

(assert (=> b!109250 (= c!19293 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)))) (not (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))))) lt!55264))))))

(declare-fun b!109251 () Bool)

(assert (=> b!109251 (= e!71072 (getValueByKey!157 (t!5741 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)))) lt!55264))))

(declare-fun b!109249 () Bool)

(assert (=> b!109249 (= e!71071 (Some!162 (_2!1225 (h!2219 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)))))))))

(declare-fun b!109252 () Bool)

(assert (=> b!109252 (= e!71072 None!161)))

(assert (= (and d!30595 c!19292) b!109249))

(assert (= (and d!30595 (not c!19292)) b!109250))

(assert (= (and b!109250 c!19293) b!109251))

(assert (= (and b!109250 (not c!19293)) b!109252))

(declare-fun m!123745 () Bool)

(assert (=> b!109251 m!123745))

(assert (=> b!108066 d!30595))

(declare-fun b!109253 () Bool)

(declare-fun e!71076 () List!1625)

(declare-fun e!71074 () List!1625)

(assert (=> b!109253 (= e!71076 e!71074)))

(declare-fun c!19296 () Bool)

(assert (=> b!109253 (= c!19296 (and ((_ is Cons!1621) (t!5741 (toList!808 (+!148 lt!55185 lt!55182)))) (= (_1!1225 (h!2219 (t!5741 (toList!808 (+!148 lt!55185 lt!55182))))) (_1!1225 lt!55183))))))

(declare-fun call!11605 () List!1625)

(declare-fun c!19295 () Bool)

(declare-fun e!71073 () List!1625)

(declare-fun bm!11601 () Bool)

(assert (=> bm!11601 (= call!11605 ($colon$colon!82 e!71073 (ite c!19295 (h!2219 (t!5741 (toList!808 (+!148 lt!55185 lt!55182)))) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183)))))))

(declare-fun c!19294 () Bool)

(assert (=> bm!11601 (= c!19294 c!19295)))

(declare-fun b!109254 () Bool)

(assert (=> b!109254 (= e!71073 (insertStrictlySorted!76 (t!5741 (t!5741 (toList!808 (+!148 lt!55185 lt!55182)))) (_1!1225 lt!55183) (_2!1225 lt!55183)))))

(declare-fun c!19297 () Bool)

(declare-fun b!109255 () Bool)

(assert (=> b!109255 (= e!71073 (ite c!19296 (t!5741 (t!5741 (toList!808 (+!148 lt!55185 lt!55182)))) (ite c!19297 (Cons!1621 (h!2219 (t!5741 (toList!808 (+!148 lt!55185 lt!55182)))) (t!5741 (t!5741 (toList!808 (+!148 lt!55185 lt!55182))))) Nil!1622)))))

(declare-fun b!109256 () Bool)

(declare-fun e!71077 () List!1625)

(declare-fun call!11604 () List!1625)

(assert (=> b!109256 (= e!71077 call!11604)))

(declare-fun bm!11602 () Bool)

(declare-fun call!11606 () List!1625)

(assert (=> bm!11602 (= call!11604 call!11606)))

(declare-fun b!109257 () Bool)

(assert (=> b!109257 (= e!71076 call!11605)))

(declare-fun d!30597 () Bool)

(declare-fun e!71075 () Bool)

(assert (=> d!30597 e!71075))

(declare-fun res!54126 () Bool)

(assert (=> d!30597 (=> (not res!54126) (not e!71075))))

(declare-fun lt!56258 () List!1625)

(assert (=> d!30597 (= res!54126 (isStrictlySorted!310 lt!56258))))

(assert (=> d!30597 (= lt!56258 e!71076)))

(assert (=> d!30597 (= c!19295 (and ((_ is Cons!1621) (t!5741 (toList!808 (+!148 lt!55185 lt!55182)))) (bvslt (_1!1225 (h!2219 (t!5741 (toList!808 (+!148 lt!55185 lt!55182))))) (_1!1225 lt!55183))))))

(assert (=> d!30597 (isStrictlySorted!310 (t!5741 (toList!808 (+!148 lt!55185 lt!55182))))))

(assert (=> d!30597 (= (insertStrictlySorted!76 (t!5741 (toList!808 (+!148 lt!55185 lt!55182))) (_1!1225 lt!55183) (_2!1225 lt!55183)) lt!56258)))

(declare-fun b!109258 () Bool)

(assert (=> b!109258 (= e!71077 call!11604)))

(declare-fun bm!11603 () Bool)

(assert (=> bm!11603 (= call!11606 call!11605)))

(declare-fun b!109259 () Bool)

(assert (=> b!109259 (= c!19297 (and ((_ is Cons!1621) (t!5741 (toList!808 (+!148 lt!55185 lt!55182)))) (bvsgt (_1!1225 (h!2219 (t!5741 (toList!808 (+!148 lt!55185 lt!55182))))) (_1!1225 lt!55183))))))

(assert (=> b!109259 (= e!71074 e!71077)))

(declare-fun b!109260 () Bool)

(assert (=> b!109260 (= e!71074 call!11606)))

(declare-fun b!109261 () Bool)

(declare-fun res!54127 () Bool)

(assert (=> b!109261 (=> (not res!54127) (not e!71075))))

(assert (=> b!109261 (= res!54127 (containsKey!161 lt!56258 (_1!1225 lt!55183)))))

(declare-fun b!109262 () Bool)

(assert (=> b!109262 (= e!71075 (contains!836 lt!56258 (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(assert (= (and d!30597 c!19295) b!109257))

(assert (= (and d!30597 (not c!19295)) b!109253))

(assert (= (and b!109253 c!19296) b!109260))

(assert (= (and b!109253 (not c!19296)) b!109259))

(assert (= (and b!109259 c!19297) b!109258))

(assert (= (and b!109259 (not c!19297)) b!109256))

(assert (= (or b!109258 b!109256) bm!11602))

(assert (= (or b!109260 bm!11602) bm!11603))

(assert (= (or b!109257 bm!11603) bm!11601))

(assert (= (and bm!11601 c!19294) b!109254))

(assert (= (and bm!11601 (not c!19294)) b!109255))

(assert (= (and d!30597 res!54126) b!109261))

(assert (= (and b!109261 res!54127) b!109262))

(declare-fun m!123747 () Bool)

(assert (=> bm!11601 m!123747))

(declare-fun m!123749 () Bool)

(assert (=> b!109261 m!123749))

(declare-fun m!123751 () Bool)

(assert (=> b!109262 m!123751))

(declare-fun m!123753 () Bool)

(assert (=> d!30597 m!123753))

(declare-fun m!123755 () Bool)

(assert (=> d!30597 m!123755))

(declare-fun m!123757 () Bool)

(assert (=> b!109254 m!123757))

(assert (=> b!108211 d!30597))

(declare-fun d!30599 () Bool)

(assert (=> d!30599 (arrayContainsKey!0 (_keys!4316 newMap!16) lt!55454 #b00000000000000000000000000000000)))

(declare-fun lt!56259 () Unit!3321)

(assert (=> d!30599 (= lt!56259 (choose!13 (_keys!4316 newMap!16) lt!55454 #b00000000000000000000000000000000))))

(assert (=> d!30599 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!30599 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4316 newMap!16) lt!55454 #b00000000000000000000000000000000) lt!56259)))

(declare-fun bs!4504 () Bool)

(assert (= bs!4504 d!30599))

(assert (=> bs!4504 m!121337))

(declare-fun m!123759 () Bool)

(assert (=> bs!4504 m!123759))

(assert (=> b!107995 d!30599))

(declare-fun d!30601 () Bool)

(declare-fun res!54128 () Bool)

(declare-fun e!71078 () Bool)

(assert (=> d!30601 (=> res!54128 e!71078)))

(assert (=> d!30601 (= res!54128 (= (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) lt!55454))))

(assert (=> d!30601 (= (arrayContainsKey!0 (_keys!4316 newMap!16) lt!55454 #b00000000000000000000000000000000) e!71078)))

(declare-fun b!109263 () Bool)

(declare-fun e!71079 () Bool)

(assert (=> b!109263 (= e!71078 e!71079)))

(declare-fun res!54129 () Bool)

(assert (=> b!109263 (=> (not res!54129) (not e!71079))))

(assert (=> b!109263 (= res!54129 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!109264 () Bool)

(assert (=> b!109264 (= e!71079 (arrayContainsKey!0 (_keys!4316 newMap!16) lt!55454 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30601 (not res!54128)) b!109263))

(assert (= (and b!109263 res!54129) b!109264))

(assert (=> d!30601 m!121333))

(declare-fun m!123761 () Bool)

(assert (=> b!109264 m!123761))

(assert (=> b!107995 d!30601))

(declare-fun b!109265 () Bool)

(declare-fun e!71082 () SeekEntryResult!260)

(declare-fun lt!56262 () SeekEntryResult!260)

(assert (=> b!109265 (= e!71082 (MissingZero!260 (index!3191 lt!56262)))))

(declare-fun b!109266 () Bool)

(assert (=> b!109266 (= e!71082 (seekKeyOrZeroReturnVacant!0 (x!13804 lt!56262) (index!3191 lt!56262) (index!3191 lt!56262) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun d!30603 () Bool)

(declare-fun lt!56260 () SeekEntryResult!260)

(assert (=> d!30603 (and (or ((_ is Undefined!260) lt!56260) (not ((_ is Found!260) lt!56260)) (and (bvsge (index!3190 lt!56260) #b00000000000000000000000000000000) (bvslt (index!3190 lt!56260) (size!2331 (_keys!4316 newMap!16))))) (or ((_ is Undefined!260) lt!56260) ((_ is Found!260) lt!56260) (not ((_ is MissingZero!260) lt!56260)) (and (bvsge (index!3189 lt!56260) #b00000000000000000000000000000000) (bvslt (index!3189 lt!56260) (size!2331 (_keys!4316 newMap!16))))) (or ((_ is Undefined!260) lt!56260) ((_ is Found!260) lt!56260) ((_ is MissingZero!260) lt!56260) (not ((_ is MissingVacant!260) lt!56260)) (and (bvsge (index!3192 lt!56260) #b00000000000000000000000000000000) (bvslt (index!3192 lt!56260) (size!2331 (_keys!4316 newMap!16))))) (or ((_ is Undefined!260) lt!56260) (ite ((_ is Found!260) lt!56260) (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3190 lt!56260)) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!260) lt!56260) (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3189 lt!56260)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!260) lt!56260) (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3192 lt!56260)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!71080 () SeekEntryResult!260)

(assert (=> d!30603 (= lt!56260 e!71080)))

(declare-fun c!19299 () Bool)

(assert (=> d!30603 (= c!19299 (and ((_ is Intermediate!260) lt!56262) (undefined!1072 lt!56262)))))

(assert (=> d!30603 (= lt!56262 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (mask!6764 newMap!16)) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(assert (=> d!30603 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30603 (= (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (_keys!4316 newMap!16) (mask!6764 newMap!16)) lt!56260)))

(declare-fun b!109267 () Bool)

(declare-fun e!71081 () SeekEntryResult!260)

(assert (=> b!109267 (= e!71081 (Found!260 (index!3191 lt!56262)))))

(declare-fun b!109268 () Bool)

(declare-fun c!19300 () Bool)

(declare-fun lt!56261 () (_ BitVec 64))

(assert (=> b!109268 (= c!19300 (= lt!56261 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109268 (= e!71081 e!71082)))

(declare-fun b!109269 () Bool)

(assert (=> b!109269 (= e!71080 Undefined!260)))

(declare-fun b!109270 () Bool)

(assert (=> b!109270 (= e!71080 e!71081)))

(assert (=> b!109270 (= lt!56261 (select (arr!2075 (_keys!4316 newMap!16)) (index!3191 lt!56262)))))

(declare-fun c!19298 () Bool)

(assert (=> b!109270 (= c!19298 (= lt!56261 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!30603 c!19299) b!109269))

(assert (= (and d!30603 (not c!19299)) b!109270))

(assert (= (and b!109270 c!19298) b!109267))

(assert (= (and b!109270 (not c!19298)) b!109268))

(assert (= (and b!109268 c!19300) b!109265))

(assert (= (and b!109268 (not c!19300)) b!109266))

(assert (=> b!109266 m!121333))

(declare-fun m!123763 () Bool)

(assert (=> b!109266 m!123763))

(declare-fun m!123765 () Bool)

(assert (=> d!30603 m!123765))

(assert (=> d!30603 m!121333))

(declare-fun m!123767 () Bool)

(assert (=> d!30603 m!123767))

(assert (=> d!30603 m!123767))

(assert (=> d!30603 m!121333))

(declare-fun m!123769 () Bool)

(assert (=> d!30603 m!123769))

(assert (=> d!30603 m!121327))

(declare-fun m!123771 () Bool)

(assert (=> d!30603 m!123771))

(declare-fun m!123773 () Bool)

(assert (=> d!30603 m!123773))

(declare-fun m!123775 () Bool)

(assert (=> b!109270 m!123775))

(assert (=> b!107995 d!30603))

(declare-fun d!30605 () Bool)

(assert (=> d!30605 (= (get!1344 (getValueByKey!157 (toList!808 lt!55327) lt!55339)) (v!2918 (getValueByKey!157 (toList!808 lt!55327) lt!55339)))))

(assert (=> d!29927 d!30605))

(declare-fun d!30607 () Bool)

(declare-fun c!19301 () Bool)

(assert (=> d!30607 (= c!19301 (and ((_ is Cons!1621) (toList!808 lt!55327)) (= (_1!1225 (h!2219 (toList!808 lt!55327))) lt!55339)))))

(declare-fun e!71083 () Option!163)

(assert (=> d!30607 (= (getValueByKey!157 (toList!808 lt!55327) lt!55339) e!71083)))

(declare-fun b!109272 () Bool)

(declare-fun e!71084 () Option!163)

(assert (=> b!109272 (= e!71083 e!71084)))

(declare-fun c!19302 () Bool)

(assert (=> b!109272 (= c!19302 (and ((_ is Cons!1621) (toList!808 lt!55327)) (not (= (_1!1225 (h!2219 (toList!808 lt!55327))) lt!55339))))))

(declare-fun b!109273 () Bool)

(assert (=> b!109273 (= e!71084 (getValueByKey!157 (t!5741 (toList!808 lt!55327)) lt!55339))))

(declare-fun b!109271 () Bool)

(assert (=> b!109271 (= e!71083 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55327)))))))

(declare-fun b!109274 () Bool)

(assert (=> b!109274 (= e!71084 None!161)))

(assert (= (and d!30607 c!19301) b!109271))

(assert (= (and d!30607 (not c!19301)) b!109272))

(assert (= (and b!109272 c!19302) b!109273))

(assert (= (and b!109272 (not c!19302)) b!109274))

(declare-fun m!123777 () Bool)

(assert (=> b!109273 m!123777))

(assert (=> d!29927 d!30607))

(assert (=> d!29951 d!30057))

(declare-fun d!30609 () Bool)

(declare-fun c!19303 () Bool)

(assert (=> d!30609 (= c!19303 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55272))) (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55272)))) (_1!1225 lt!55182))))))

(declare-fun e!71085 () Option!163)

(assert (=> d!30609 (= (getValueByKey!157 (t!5741 (toList!808 lt!55272)) (_1!1225 lt!55182)) e!71085)))

(declare-fun b!109276 () Bool)

(declare-fun e!71086 () Option!163)

(assert (=> b!109276 (= e!71085 e!71086)))

(declare-fun c!19304 () Bool)

(assert (=> b!109276 (= c!19304 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55272))) (not (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55272)))) (_1!1225 lt!55182)))))))

(declare-fun b!109277 () Bool)

(assert (=> b!109277 (= e!71086 (getValueByKey!157 (t!5741 (t!5741 (toList!808 lt!55272))) (_1!1225 lt!55182)))))

(declare-fun b!109275 () Bool)

(assert (=> b!109275 (= e!71085 (Some!162 (_2!1225 (h!2219 (t!5741 (toList!808 lt!55272))))))))

(declare-fun b!109278 () Bool)

(assert (=> b!109278 (= e!71086 None!161)))

(assert (= (and d!30609 c!19303) b!109275))

(assert (= (and d!30609 (not c!19303)) b!109276))

(assert (= (and b!109276 c!19304) b!109277))

(assert (= (and b!109276 (not c!19304)) b!109278))

(declare-fun m!123779 () Bool)

(assert (=> b!109277 m!123779))

(assert (=> b!108428 d!30609))

(declare-fun b!109279 () Bool)

(declare-fun e!71090 () List!1625)

(declare-fun e!71088 () List!1625)

(assert (=> b!109279 (= e!71090 e!71088)))

(declare-fun c!19307 () Bool)

(assert (=> b!109279 (= c!19307 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55185))) (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55185)))) (_1!1225 lt!55182))))))

(declare-fun e!71087 () List!1625)

(declare-fun bm!11604 () Bool)

(declare-fun call!11608 () List!1625)

(declare-fun c!19306 () Bool)

(assert (=> bm!11604 (= call!11608 ($colon$colon!82 e!71087 (ite c!19306 (h!2219 (t!5741 (toList!808 lt!55185))) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182)))))))

(declare-fun c!19305 () Bool)

(assert (=> bm!11604 (= c!19305 c!19306)))

(declare-fun b!109280 () Bool)

(assert (=> b!109280 (= e!71087 (insertStrictlySorted!76 (t!5741 (t!5741 (toList!808 lt!55185))) (_1!1225 lt!55182) (_2!1225 lt!55182)))))

(declare-fun b!109281 () Bool)

(declare-fun c!19308 () Bool)

(assert (=> b!109281 (= e!71087 (ite c!19307 (t!5741 (t!5741 (toList!808 lt!55185))) (ite c!19308 (Cons!1621 (h!2219 (t!5741 (toList!808 lt!55185))) (t!5741 (t!5741 (toList!808 lt!55185)))) Nil!1622)))))

(declare-fun b!109282 () Bool)

(declare-fun e!71091 () List!1625)

(declare-fun call!11607 () List!1625)

(assert (=> b!109282 (= e!71091 call!11607)))

(declare-fun bm!11605 () Bool)

(declare-fun call!11609 () List!1625)

(assert (=> bm!11605 (= call!11607 call!11609)))

(declare-fun b!109283 () Bool)

(assert (=> b!109283 (= e!71090 call!11608)))

(declare-fun d!30611 () Bool)

(declare-fun e!71089 () Bool)

(assert (=> d!30611 e!71089))

(declare-fun res!54130 () Bool)

(assert (=> d!30611 (=> (not res!54130) (not e!71089))))

(declare-fun lt!56263 () List!1625)

(assert (=> d!30611 (= res!54130 (isStrictlySorted!310 lt!56263))))

(assert (=> d!30611 (= lt!56263 e!71090)))

(assert (=> d!30611 (= c!19306 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55185))) (bvslt (_1!1225 (h!2219 (t!5741 (toList!808 lt!55185)))) (_1!1225 lt!55182))))))

(assert (=> d!30611 (isStrictlySorted!310 (t!5741 (toList!808 lt!55185)))))

(assert (=> d!30611 (= (insertStrictlySorted!76 (t!5741 (toList!808 lt!55185)) (_1!1225 lt!55182) (_2!1225 lt!55182)) lt!56263)))

(declare-fun b!109284 () Bool)

(assert (=> b!109284 (= e!71091 call!11607)))

(declare-fun bm!11606 () Bool)

(assert (=> bm!11606 (= call!11609 call!11608)))

(declare-fun b!109285 () Bool)

(assert (=> b!109285 (= c!19308 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55185))) (bvsgt (_1!1225 (h!2219 (t!5741 (toList!808 lt!55185)))) (_1!1225 lt!55182))))))

(assert (=> b!109285 (= e!71088 e!71091)))

(declare-fun b!109286 () Bool)

(assert (=> b!109286 (= e!71088 call!11609)))

(declare-fun b!109287 () Bool)

(declare-fun res!54131 () Bool)

(assert (=> b!109287 (=> (not res!54131) (not e!71089))))

(assert (=> b!109287 (= res!54131 (containsKey!161 lt!56263 (_1!1225 lt!55182)))))

(declare-fun b!109288 () Bool)

(assert (=> b!109288 (= e!71089 (contains!836 lt!56263 (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))))))

(assert (= (and d!30611 c!19306) b!109283))

(assert (= (and d!30611 (not c!19306)) b!109279))

(assert (= (and b!109279 c!19307) b!109286))

(assert (= (and b!109279 (not c!19307)) b!109285))

(assert (= (and b!109285 c!19308) b!109284))

(assert (= (and b!109285 (not c!19308)) b!109282))

(assert (= (or b!109284 b!109282) bm!11605))

(assert (= (or b!109286 bm!11605) bm!11606))

(assert (= (or b!109283 bm!11606) bm!11604))

(assert (= (and bm!11604 c!19305) b!109280))

(assert (= (and bm!11604 (not c!19305)) b!109281))

(assert (= (and d!30611 res!54130) b!109287))

(assert (= (and b!109287 res!54131) b!109288))

(declare-fun m!123781 () Bool)

(assert (=> bm!11604 m!123781))

(declare-fun m!123783 () Bool)

(assert (=> b!109287 m!123783))

(declare-fun m!123785 () Bool)

(assert (=> b!109288 m!123785))

(declare-fun m!123787 () Bool)

(assert (=> d!30611 m!123787))

(assert (=> d!30611 m!122691))

(declare-fun m!123789 () Bool)

(assert (=> b!109280 m!123789))

(assert (=> b!108106 d!30611))

(declare-fun d!30613 () Bool)

(assert (=> d!30613 (= (get!1344 (getValueByKey!157 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2918 (getValueByKey!157 (toList!808 lt!55258) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30009 d!30613))

(assert (=> d!30009 d!30151))

(assert (=> d!29853 d!29843))

(assert (=> bm!11488 d!30033))

(assert (=> d!29923 d!29907))

(declare-fun d!30615 () Bool)

(declare-fun e!71093 () Bool)

(assert (=> d!30615 e!71093))

(declare-fun res!54132 () Bool)

(assert (=> d!30615 (=> res!54132 e!71093)))

(declare-fun lt!56265 () Bool)

(assert (=> d!30615 (= res!54132 (not lt!56265))))

(declare-fun lt!56266 () Bool)

(assert (=> d!30615 (= lt!56265 lt!56266)))

(declare-fun lt!56264 () Unit!3321)

(declare-fun e!71092 () Unit!3321)

(assert (=> d!30615 (= lt!56264 e!71092)))

(declare-fun c!19309 () Bool)

(assert (=> d!30615 (= c!19309 lt!56266)))

(assert (=> d!30615 (= lt!56266 (containsKey!161 (toList!808 lt!55328) lt!55340))))

(assert (=> d!30615 (= (contains!834 lt!55328 lt!55340) lt!56265)))

(declare-fun b!109289 () Bool)

(declare-fun lt!56267 () Unit!3321)

(assert (=> b!109289 (= e!71092 lt!56267)))

(assert (=> b!109289 (= lt!56267 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55328) lt!55340))))

(assert (=> b!109289 (isDefined!110 (getValueByKey!157 (toList!808 lt!55328) lt!55340))))

(declare-fun b!109290 () Bool)

(declare-fun Unit!3385 () Unit!3321)

(assert (=> b!109290 (= e!71092 Unit!3385)))

(declare-fun b!109291 () Bool)

(assert (=> b!109291 (= e!71093 (isDefined!110 (getValueByKey!157 (toList!808 lt!55328) lt!55340)))))

(assert (= (and d!30615 c!19309) b!109289))

(assert (= (and d!30615 (not c!19309)) b!109290))

(assert (= (and d!30615 (not res!54132)) b!109291))

(declare-fun m!123791 () Bool)

(assert (=> d!30615 m!123791))

(declare-fun m!123793 () Bool)

(assert (=> b!109289 m!123793))

(assert (=> b!109289 m!121649))

(assert (=> b!109289 m!121649))

(declare-fun m!123795 () Bool)

(assert (=> b!109289 m!123795))

(assert (=> b!109291 m!121649))

(assert (=> b!109291 m!121649))

(assert (=> b!109291 m!123795))

(assert (=> d!29923 d!30615))

(declare-fun d!30617 () Bool)

(assert (=> d!30617 (= (apply!99 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55340) (apply!99 lt!55328 lt!55340))))

(assert (=> d!30617 true))

(declare-fun _$34!896 () Unit!3321)

(assert (=> d!30617 (= (choose!673 lt!55328 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55340) _$34!896)))

(declare-fun bs!4505 () Bool)

(assert (= bs!4505 d!30617))

(assert (=> bs!4505 m!121197))

(assert (=> bs!4505 m!121197))

(assert (=> bs!4505 m!121203))

(assert (=> bs!4505 m!121189))

(assert (=> d!29923 d!30617))

(assert (=> d!29923 d!29931))

(assert (=> d!29923 d!29933))

(assert (=> bm!11475 d!30569))

(declare-fun d!30619 () Bool)

(declare-fun e!71094 () Bool)

(assert (=> d!30619 e!71094))

(declare-fun res!54133 () Bool)

(assert (=> d!30619 (=> (not res!54133) (not e!71094))))

(declare-fun lt!56268 () ListLongMap!1585)

(assert (=> d!30619 (= res!54133 (contains!834 lt!56268 (_1!1225 (ite (or c!18987 c!18989) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(declare-fun lt!56270 () List!1625)

(assert (=> d!30619 (= lt!56268 (ListLongMap!1586 lt!56270))))

(declare-fun lt!56269 () Unit!3321)

(declare-fun lt!56271 () Unit!3321)

(assert (=> d!30619 (= lt!56269 lt!56271)))

(assert (=> d!30619 (= (getValueByKey!157 lt!56270 (_1!1225 (ite (or c!18987 c!18989) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))) (Some!162 (_2!1225 (ite (or c!18987 c!18989) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(assert (=> d!30619 (= lt!56271 (lemmaContainsTupThenGetReturnValue!73 lt!56270 (_1!1225 (ite (or c!18987 c!18989) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (_2!1225 (ite (or c!18987 c!18989) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(assert (=> d!30619 (= lt!56270 (insertStrictlySorted!76 (toList!808 (ite c!18987 call!11481 (ite c!18989 call!11479 call!11480))) (_1!1225 (ite (or c!18987 c!18989) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (_2!1225 (ite (or c!18987 c!18989) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(assert (=> d!30619 (= (+!148 (ite c!18987 call!11481 (ite c!18989 call!11479 call!11480)) (ite (or c!18987 c!18989) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) lt!56268)))

(declare-fun b!109292 () Bool)

(declare-fun res!54134 () Bool)

(assert (=> b!109292 (=> (not res!54134) (not e!71094))))

(assert (=> b!109292 (= res!54134 (= (getValueByKey!157 (toList!808 lt!56268) (_1!1225 (ite (or c!18987 c!18989) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))) (Some!162 (_2!1225 (ite (or c!18987 c!18989) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))))

(declare-fun b!109293 () Bool)

(assert (=> b!109293 (= e!71094 (contains!836 (toList!808 lt!56268) (ite (or c!18987 c!18989) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (= (and d!30619 res!54133) b!109292))

(assert (= (and b!109292 res!54134) b!109293))

(declare-fun m!123797 () Bool)

(assert (=> d!30619 m!123797))

(declare-fun m!123799 () Bool)

(assert (=> d!30619 m!123799))

(declare-fun m!123801 () Bool)

(assert (=> d!30619 m!123801))

(declare-fun m!123803 () Bool)

(assert (=> d!30619 m!123803))

(declare-fun m!123805 () Bool)

(assert (=> b!109292 m!123805))

(declare-fun m!123807 () Bool)

(assert (=> b!109293 m!123807))

(assert (=> bm!11476 d!30619))

(assert (=> b!108309 d!30145))

(declare-fun d!30621 () Bool)

(declare-fun e!71096 () Bool)

(assert (=> d!30621 e!71096))

(declare-fun res!54135 () Bool)

(assert (=> d!30621 (=> res!54135 e!71096)))

(declare-fun lt!56273 () Bool)

(assert (=> d!30621 (= res!54135 (not lt!56273))))

(declare-fun lt!56274 () Bool)

(assert (=> d!30621 (= lt!56273 lt!56274)))

(declare-fun lt!56272 () Unit!3321)

(declare-fun e!71095 () Unit!3321)

(assert (=> d!30621 (= lt!56272 e!71095)))

(declare-fun c!19310 () Bool)

(assert (=> d!30621 (= c!19310 lt!56274)))

(assert (=> d!30621 (= lt!56274 (containsKey!161 (toList!808 lt!55557) (_1!1225 (tuple2!2429 lt!55263 lt!55262))))))

(assert (=> d!30621 (= (contains!834 lt!55557 (_1!1225 (tuple2!2429 lt!55263 lt!55262))) lt!56273)))

(declare-fun b!109294 () Bool)

(declare-fun lt!56275 () Unit!3321)

(assert (=> b!109294 (= e!71095 lt!56275)))

(assert (=> b!109294 (= lt!56275 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55557) (_1!1225 (tuple2!2429 lt!55263 lt!55262))))))

(assert (=> b!109294 (isDefined!110 (getValueByKey!157 (toList!808 lt!55557) (_1!1225 (tuple2!2429 lt!55263 lt!55262))))))

(declare-fun b!109295 () Bool)

(declare-fun Unit!3386 () Unit!3321)

(assert (=> b!109295 (= e!71095 Unit!3386)))

(declare-fun b!109296 () Bool)

(assert (=> b!109296 (= e!71096 (isDefined!110 (getValueByKey!157 (toList!808 lt!55557) (_1!1225 (tuple2!2429 lt!55263 lt!55262)))))))

(assert (= (and d!30621 c!19310) b!109294))

(assert (= (and d!30621 (not c!19310)) b!109295))

(assert (= (and d!30621 (not res!54135)) b!109296))

(declare-fun m!123809 () Bool)

(assert (=> d!30621 m!123809))

(declare-fun m!123811 () Bool)

(assert (=> b!109294 m!123811))

(assert (=> b!109294 m!121437))

(assert (=> b!109294 m!121437))

(declare-fun m!123813 () Bool)

(assert (=> b!109294 m!123813))

(assert (=> b!109296 m!121437))

(assert (=> b!109296 m!121437))

(assert (=> b!109296 m!123813))

(assert (=> d!29873 d!30621))

(declare-fun c!19311 () Bool)

(declare-fun d!30623 () Bool)

(assert (=> d!30623 (= c!19311 (and ((_ is Cons!1621) lt!55559) (= (_1!1225 (h!2219 lt!55559)) (_1!1225 (tuple2!2429 lt!55263 lt!55262)))))))

(declare-fun e!71097 () Option!163)

(assert (=> d!30623 (= (getValueByKey!157 lt!55559 (_1!1225 (tuple2!2429 lt!55263 lt!55262))) e!71097)))

(declare-fun b!109298 () Bool)

(declare-fun e!71098 () Option!163)

(assert (=> b!109298 (= e!71097 e!71098)))

(declare-fun c!19312 () Bool)

(assert (=> b!109298 (= c!19312 (and ((_ is Cons!1621) lt!55559) (not (= (_1!1225 (h!2219 lt!55559)) (_1!1225 (tuple2!2429 lt!55263 lt!55262))))))))

(declare-fun b!109299 () Bool)

(assert (=> b!109299 (= e!71098 (getValueByKey!157 (t!5741 lt!55559) (_1!1225 (tuple2!2429 lt!55263 lt!55262))))))

(declare-fun b!109297 () Bool)

(assert (=> b!109297 (= e!71097 (Some!162 (_2!1225 (h!2219 lt!55559))))))

(declare-fun b!109300 () Bool)

(assert (=> b!109300 (= e!71098 None!161)))

(assert (= (and d!30623 c!19311) b!109297))

(assert (= (and d!30623 (not c!19311)) b!109298))

(assert (= (and b!109298 c!19312) b!109299))

(assert (= (and b!109298 (not c!19312)) b!109300))

(declare-fun m!123815 () Bool)

(assert (=> b!109299 m!123815))

(assert (=> d!29873 d!30623))

(declare-fun d!30625 () Bool)

(assert (=> d!30625 (= (getValueByKey!157 lt!55559 (_1!1225 (tuple2!2429 lt!55263 lt!55262))) (Some!162 (_2!1225 (tuple2!2429 lt!55263 lt!55262))))))

(declare-fun lt!56276 () Unit!3321)

(assert (=> d!30625 (= lt!56276 (choose!672 lt!55559 (_1!1225 (tuple2!2429 lt!55263 lt!55262)) (_2!1225 (tuple2!2429 lt!55263 lt!55262))))))

(declare-fun e!71099 () Bool)

(assert (=> d!30625 e!71099))

(declare-fun res!54136 () Bool)

(assert (=> d!30625 (=> (not res!54136) (not e!71099))))

(assert (=> d!30625 (= res!54136 (isStrictlySorted!310 lt!55559))))

(assert (=> d!30625 (= (lemmaContainsTupThenGetReturnValue!73 lt!55559 (_1!1225 (tuple2!2429 lt!55263 lt!55262)) (_2!1225 (tuple2!2429 lt!55263 lt!55262))) lt!56276)))

(declare-fun b!109301 () Bool)

(declare-fun res!54137 () Bool)

(assert (=> b!109301 (=> (not res!54137) (not e!71099))))

(assert (=> b!109301 (= res!54137 (containsKey!161 lt!55559 (_1!1225 (tuple2!2429 lt!55263 lt!55262))))))

(declare-fun b!109302 () Bool)

(assert (=> b!109302 (= e!71099 (contains!836 lt!55559 (tuple2!2429 (_1!1225 (tuple2!2429 lt!55263 lt!55262)) (_2!1225 (tuple2!2429 lt!55263 lt!55262)))))))

(assert (= (and d!30625 res!54136) b!109301))

(assert (= (and b!109301 res!54137) b!109302))

(assert (=> d!30625 m!121431))

(declare-fun m!123817 () Bool)

(assert (=> d!30625 m!123817))

(declare-fun m!123819 () Bool)

(assert (=> d!30625 m!123819))

(declare-fun m!123821 () Bool)

(assert (=> b!109301 m!123821))

(declare-fun m!123823 () Bool)

(assert (=> b!109302 m!123823))

(assert (=> d!29873 d!30625))

(declare-fun b!109303 () Bool)

(declare-fun e!71103 () List!1625)

(declare-fun e!71101 () List!1625)

(assert (=> b!109303 (= e!71103 e!71101)))

(declare-fun c!19315 () Bool)

(assert (=> b!109303 (= c!19315 (and ((_ is Cons!1621) (toList!808 lt!55261)) (= (_1!1225 (h!2219 (toList!808 lt!55261))) (_1!1225 (tuple2!2429 lt!55263 lt!55262)))))))

(declare-fun bm!11607 () Bool)

(declare-fun call!11611 () List!1625)

(declare-fun c!19314 () Bool)

(declare-fun e!71100 () List!1625)

(assert (=> bm!11607 (= call!11611 ($colon$colon!82 e!71100 (ite c!19314 (h!2219 (toList!808 lt!55261)) (tuple2!2429 (_1!1225 (tuple2!2429 lt!55263 lt!55262)) (_2!1225 (tuple2!2429 lt!55263 lt!55262))))))))

(declare-fun c!19313 () Bool)

(assert (=> bm!11607 (= c!19313 c!19314)))

(declare-fun b!109304 () Bool)

(assert (=> b!109304 (= e!71100 (insertStrictlySorted!76 (t!5741 (toList!808 lt!55261)) (_1!1225 (tuple2!2429 lt!55263 lt!55262)) (_2!1225 (tuple2!2429 lt!55263 lt!55262))))))

(declare-fun b!109305 () Bool)

(declare-fun c!19316 () Bool)

(assert (=> b!109305 (= e!71100 (ite c!19315 (t!5741 (toList!808 lt!55261)) (ite c!19316 (Cons!1621 (h!2219 (toList!808 lt!55261)) (t!5741 (toList!808 lt!55261))) Nil!1622)))))

(declare-fun b!109306 () Bool)

(declare-fun e!71104 () List!1625)

(declare-fun call!11610 () List!1625)

(assert (=> b!109306 (= e!71104 call!11610)))

(declare-fun bm!11608 () Bool)

(declare-fun call!11612 () List!1625)

(assert (=> bm!11608 (= call!11610 call!11612)))

(declare-fun b!109307 () Bool)

(assert (=> b!109307 (= e!71103 call!11611)))

(declare-fun d!30627 () Bool)

(declare-fun e!71102 () Bool)

(assert (=> d!30627 e!71102))

(declare-fun res!54138 () Bool)

(assert (=> d!30627 (=> (not res!54138) (not e!71102))))

(declare-fun lt!56277 () List!1625)

(assert (=> d!30627 (= res!54138 (isStrictlySorted!310 lt!56277))))

(assert (=> d!30627 (= lt!56277 e!71103)))

(assert (=> d!30627 (= c!19314 (and ((_ is Cons!1621) (toList!808 lt!55261)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55261))) (_1!1225 (tuple2!2429 lt!55263 lt!55262)))))))

(assert (=> d!30627 (isStrictlySorted!310 (toList!808 lt!55261))))

(assert (=> d!30627 (= (insertStrictlySorted!76 (toList!808 lt!55261) (_1!1225 (tuple2!2429 lt!55263 lt!55262)) (_2!1225 (tuple2!2429 lt!55263 lt!55262))) lt!56277)))

(declare-fun b!109308 () Bool)

(assert (=> b!109308 (= e!71104 call!11610)))

(declare-fun bm!11609 () Bool)

(assert (=> bm!11609 (= call!11612 call!11611)))

(declare-fun b!109309 () Bool)

(assert (=> b!109309 (= c!19316 (and ((_ is Cons!1621) (toList!808 lt!55261)) (bvsgt (_1!1225 (h!2219 (toList!808 lt!55261))) (_1!1225 (tuple2!2429 lt!55263 lt!55262)))))))

(assert (=> b!109309 (= e!71101 e!71104)))

(declare-fun b!109310 () Bool)

(assert (=> b!109310 (= e!71101 call!11612)))

(declare-fun b!109311 () Bool)

(declare-fun res!54139 () Bool)

(assert (=> b!109311 (=> (not res!54139) (not e!71102))))

(assert (=> b!109311 (= res!54139 (containsKey!161 lt!56277 (_1!1225 (tuple2!2429 lt!55263 lt!55262))))))

(declare-fun b!109312 () Bool)

(assert (=> b!109312 (= e!71102 (contains!836 lt!56277 (tuple2!2429 (_1!1225 (tuple2!2429 lt!55263 lt!55262)) (_2!1225 (tuple2!2429 lt!55263 lt!55262)))))))

(assert (= (and d!30627 c!19314) b!109307))

(assert (= (and d!30627 (not c!19314)) b!109303))

(assert (= (and b!109303 c!19315) b!109310))

(assert (= (and b!109303 (not c!19315)) b!109309))

(assert (= (and b!109309 c!19316) b!109308))

(assert (= (and b!109309 (not c!19316)) b!109306))

(assert (= (or b!109308 b!109306) bm!11608))

(assert (= (or b!109310 bm!11608) bm!11609))

(assert (= (or b!109307 bm!11609) bm!11607))

(assert (= (and bm!11607 c!19313) b!109304))

(assert (= (and bm!11607 (not c!19313)) b!109305))

(assert (= (and d!30627 res!54138) b!109311))

(assert (= (and b!109311 res!54139) b!109312))

(declare-fun m!123825 () Bool)

(assert (=> bm!11607 m!123825))

(declare-fun m!123827 () Bool)

(assert (=> b!109311 m!123827))

(declare-fun m!123829 () Bool)

(assert (=> b!109312 m!123829))

(declare-fun m!123831 () Bool)

(assert (=> d!30627 m!123831))

(declare-fun m!123833 () Bool)

(assert (=> d!30627 m!123833))

(declare-fun m!123835 () Bool)

(assert (=> b!109304 m!123835))

(assert (=> d!29873 d!30627))

(declare-fun d!30629 () Bool)

(declare-fun c!19317 () Bool)

(assert (=> d!30629 (= c!19317 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55236))) (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55236)))) (_1!1225 lt!55183))))))

(declare-fun e!71105 () Option!163)

(assert (=> d!30629 (= (getValueByKey!157 (t!5741 (toList!808 lt!55236)) (_1!1225 lt!55183)) e!71105)))

(declare-fun b!109314 () Bool)

(declare-fun e!71106 () Option!163)

(assert (=> b!109314 (= e!71105 e!71106)))

(declare-fun c!19318 () Bool)

(assert (=> b!109314 (= c!19318 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55236))) (not (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55236)))) (_1!1225 lt!55183)))))))

(declare-fun b!109315 () Bool)

(assert (=> b!109315 (= e!71106 (getValueByKey!157 (t!5741 (t!5741 (toList!808 lt!55236))) (_1!1225 lt!55183)))))

(declare-fun b!109313 () Bool)

(assert (=> b!109313 (= e!71105 (Some!162 (_2!1225 (h!2219 (t!5741 (toList!808 lt!55236))))))))

(declare-fun b!109316 () Bool)

(assert (=> b!109316 (= e!71106 None!161)))

(assert (= (and d!30629 c!19317) b!109313))

(assert (= (and d!30629 (not c!19317)) b!109314))

(assert (= (and b!109314 c!19318) b!109315))

(assert (= (and b!109314 (not c!19318)) b!109316))

(declare-fun m!123837 () Bool)

(assert (=> b!109315 m!123837))

(assert (=> b!107972 d!30629))

(declare-fun d!30631 () Bool)

(declare-fun lt!56278 () Bool)

(assert (=> d!30631 (= lt!56278 (select (content!111 lt!55798) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(declare-fun e!71108 () Bool)

(assert (=> d!30631 (= lt!56278 e!71108)))

(declare-fun res!54141 () Bool)

(assert (=> d!30631 (=> (not res!54141) (not e!71108))))

(assert (=> d!30631 (= res!54141 ((_ is Cons!1621) lt!55798))))

(assert (=> d!30631 (= (contains!836 lt!55798 (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))) lt!56278)))

(declare-fun b!109317 () Bool)

(declare-fun e!71107 () Bool)

(assert (=> b!109317 (= e!71108 e!71107)))

(declare-fun res!54140 () Bool)

(assert (=> b!109317 (=> res!54140 e!71107)))

(assert (=> b!109317 (= res!54140 (= (h!2219 lt!55798) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(declare-fun b!109318 () Bool)

(assert (=> b!109318 (= e!71107 (contains!836 (t!5741 lt!55798) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(assert (= (and d!30631 res!54141) b!109317))

(assert (= (and b!109317 (not res!54140)) b!109318))

(declare-fun m!123839 () Bool)

(assert (=> d!30631 m!123839))

(declare-fun m!123841 () Bool)

(assert (=> d!30631 m!123841))

(declare-fun m!123843 () Bool)

(assert (=> b!109318 m!123843))

(assert (=> b!108418 d!30631))

(declare-fun b!109319 () Bool)

(declare-fun e!71114 () ListLongMap!1585)

(declare-fun e!71110 () ListLongMap!1585)

(assert (=> b!109319 (= e!71114 e!71110)))

(declare-fun c!19321 () Bool)

(assert (=> b!109319 (= c!19321 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!109320 () Bool)

(assert (=> b!109320 (= e!71114 (ListLongMap!1586 Nil!1622))))

(declare-fun bm!11610 () Bool)

(declare-fun call!11613 () ListLongMap!1585)

(assert (=> bm!11610 (= call!11613 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun lt!56279 () ListLongMap!1585)

(declare-fun e!71113 () Bool)

(declare-fun b!109321 () Bool)

(assert (=> b!109321 (= e!71113 (= lt!56279 (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun d!30633 () Bool)

(declare-fun e!71111 () Bool)

(assert (=> d!30633 e!71111))

(declare-fun res!54142 () Bool)

(assert (=> d!30633 (=> (not res!54142) (not e!71111))))

(assert (=> d!30633 (= res!54142 (not (contains!834 lt!56279 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30633 (= lt!56279 e!71114)))

(declare-fun c!19319 () Bool)

(assert (=> d!30633 (= c!19319 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30633 (validMask!0 (mask!6764 (v!2914 (underlying!367 thiss!992))))))

(assert (=> d!30633 (= (getCurrentListMapNoExtraKeys!114 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (_values!2589 (v!2914 (underlying!367 thiss!992))) (mask!6764 (v!2914 (underlying!367 thiss!992))) (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) (minValue!2479 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992)))) lt!56279)))

(declare-fun b!109322 () Bool)

(declare-fun e!71112 () Bool)

(declare-fun e!71109 () Bool)

(assert (=> b!109322 (= e!71112 e!71109)))

(assert (=> b!109322 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun res!54144 () Bool)

(assert (=> b!109322 (= res!54144 (contains!834 lt!56279 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!109322 (=> (not res!54144) (not e!71109))))

(declare-fun b!109323 () Bool)

(assert (=> b!109323 (= e!71111 e!71112)))

(declare-fun c!19322 () Bool)

(declare-fun e!71115 () Bool)

(assert (=> b!109323 (= c!19322 e!71115)))

(declare-fun res!54143 () Bool)

(assert (=> b!109323 (=> (not res!54143) (not e!71115))))

(assert (=> b!109323 (= res!54143 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!109324 () Bool)

(assert (=> b!109324 (= e!71115 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!109324 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!109325 () Bool)

(assert (=> b!109325 (= e!71112 e!71113)))

(declare-fun c!19320 () Bool)

(assert (=> b!109325 (= c!19320 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!109326 () Bool)

(assert (=> b!109326 (= e!71113 (isEmpty!373 lt!56279))))

(declare-fun b!109327 () Bool)

(assert (=> b!109327 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> b!109327 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2332 (_values!2589 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> b!109327 (= e!71109 (= (apply!99 lt!56279 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!109328 () Bool)

(assert (=> b!109328 (= e!71110 call!11613)))

(declare-fun b!109329 () Bool)

(declare-fun res!54145 () Bool)

(assert (=> b!109329 (=> (not res!54145) (not e!71111))))

(assert (=> b!109329 (= res!54145 (not (contains!834 lt!56279 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109330 () Bool)

(declare-fun lt!56281 () Unit!3321)

(declare-fun lt!56280 () Unit!3321)

(assert (=> b!109330 (= lt!56281 lt!56280)))

(declare-fun lt!56283 () V!3235)

(declare-fun lt!56284 () (_ BitVec 64))

(declare-fun lt!56282 () ListLongMap!1585)

(declare-fun lt!56285 () (_ BitVec 64))

(assert (=> b!109330 (not (contains!834 (+!148 lt!56282 (tuple2!2429 lt!56284 lt!56283)) lt!56285))))

(assert (=> b!109330 (= lt!56280 (addStillNotContains!47 lt!56282 lt!56284 lt!56283 lt!56285))))

(assert (=> b!109330 (= lt!56285 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!109330 (= lt!56283 (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!109330 (= lt!56284 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!109330 (= lt!56282 call!11613)))

(assert (=> b!109330 (= e!71110 (+!148 call!11613 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1341 (select (arr!2076 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!389 (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30633 c!19319) b!109320))

(assert (= (and d!30633 (not c!19319)) b!109319))

(assert (= (and b!109319 c!19321) b!109330))

(assert (= (and b!109319 (not c!19321)) b!109328))

(assert (= (or b!109330 b!109328) bm!11610))

(assert (= (and d!30633 res!54142) b!109329))

(assert (= (and b!109329 res!54145) b!109323))

(assert (= (and b!109323 res!54143) b!109324))

(assert (= (and b!109323 c!19322) b!109322))

(assert (= (and b!109323 (not c!19322)) b!109325))

(assert (= (and b!109322 res!54144) b!109327))

(assert (= (and b!109325 c!19320) b!109321))

(assert (= (and b!109325 (not c!19320)) b!109326))

(declare-fun b_lambda!4881 () Bool)

(assert (=> (not b_lambda!4881) (not b!109327)))

(assert (=> b!109327 t!5738))

(declare-fun b_and!6739 () Bool)

(assert (= b_and!6735 (and (=> t!5738 result!3495) b_and!6739)))

(assert (=> b!109327 t!5740))

(declare-fun b_and!6741 () Bool)

(assert (= b_and!6737 (and (=> t!5740 result!3499) b_and!6741)))

(declare-fun b_lambda!4883 () Bool)

(assert (=> (not b_lambda!4883) (not b!109330)))

(assert (=> b!109330 t!5738))

(declare-fun b_and!6743 () Bool)

(assert (= b_and!6739 (and (=> t!5738 result!3495) b_and!6743)))

(assert (=> b!109330 t!5740))

(declare-fun b_and!6745 () Bool)

(assert (= b_and!6741 (and (=> t!5740 result!3499) b_and!6745)))

(declare-fun m!123845 () Bool)

(assert (=> b!109329 m!123845))

(declare-fun m!123847 () Bool)

(assert (=> bm!11610 m!123847))

(assert (=> b!109324 m!122833))

(assert (=> b!109324 m!122833))

(declare-fun m!123849 () Bool)

(assert (=> b!109324 m!123849))

(declare-fun m!123851 () Bool)

(assert (=> b!109327 m!123851))

(assert (=> b!109327 m!121015))

(declare-fun m!123853 () Bool)

(assert (=> b!109327 m!123853))

(assert (=> b!109327 m!122833))

(assert (=> b!109327 m!121015))

(assert (=> b!109327 m!123851))

(assert (=> b!109327 m!122833))

(declare-fun m!123855 () Bool)

(assert (=> b!109327 m!123855))

(declare-fun m!123857 () Bool)

(assert (=> b!109326 m!123857))

(declare-fun m!123859 () Bool)

(assert (=> d!30633 m!123859))

(assert (=> d!30633 m!120987))

(assert (=> b!109321 m!123847))

(assert (=> b!109319 m!122833))

(assert (=> b!109319 m!122833))

(assert (=> b!109319 m!123849))

(assert (=> b!109330 m!123851))

(assert (=> b!109330 m!121015))

(assert (=> b!109330 m!123853))

(declare-fun m!123861 () Bool)

(assert (=> b!109330 m!123861))

(declare-fun m!123863 () Bool)

(assert (=> b!109330 m!123863))

(assert (=> b!109330 m!122833))

(assert (=> b!109330 m!121015))

(declare-fun m!123865 () Bool)

(assert (=> b!109330 m!123865))

(assert (=> b!109330 m!123851))

(assert (=> b!109330 m!123861))

(declare-fun m!123867 () Bool)

(assert (=> b!109330 m!123867))

(assert (=> b!109322 m!122833))

(assert (=> b!109322 m!122833))

(declare-fun m!123869 () Bool)

(assert (=> b!109322 m!123869))

(assert (=> b!108222 d!30633))

(declare-fun d!30635 () Bool)

(declare-fun res!54146 () Bool)

(declare-fun e!71116 () Bool)

(assert (=> d!30635 (=> res!54146 e!71116)))

(assert (=> d!30635 (= res!54146 (and ((_ is Cons!1621) lt!55682) (= (_1!1225 (h!2219 lt!55682)) (_1!1225 lt!55183))))))

(assert (=> d!30635 (= (containsKey!161 lt!55682 (_1!1225 lt!55183)) e!71116)))

(declare-fun b!109331 () Bool)

(declare-fun e!71117 () Bool)

(assert (=> b!109331 (= e!71116 e!71117)))

(declare-fun res!54147 () Bool)

(assert (=> b!109331 (=> (not res!54147) (not e!71117))))

(assert (=> b!109331 (= res!54147 (and (or (not ((_ is Cons!1621) lt!55682)) (bvsle (_1!1225 (h!2219 lt!55682)) (_1!1225 lt!55183))) ((_ is Cons!1621) lt!55682) (bvslt (_1!1225 (h!2219 lt!55682)) (_1!1225 lt!55183))))))

(declare-fun b!109332 () Bool)

(assert (=> b!109332 (= e!71117 (containsKey!161 (t!5741 lt!55682) (_1!1225 lt!55183)))))

(assert (= (and d!30635 (not res!54146)) b!109331))

(assert (= (and b!109331 res!54147) b!109332))

(declare-fun m!123871 () Bool)

(assert (=> b!109332 m!123871))

(assert (=> b!108218 d!30635))

(declare-fun d!30637 () Bool)

(assert (=> d!30637 (= (isDefined!110 (getValueByKey!157 (toList!808 lt!55258) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!375 (getValueByKey!157 (toList!808 lt!55258) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4506 () Bool)

(assert (= bs!4506 d!30637))

(assert (=> bs!4506 m!121781))

(declare-fun m!123873 () Bool)

(assert (=> bs!4506 m!123873))

(assert (=> b!108200 d!30637))

(declare-fun d!30639 () Bool)

(declare-fun c!19323 () Bool)

(assert (=> d!30639 (= c!19323 (and ((_ is Cons!1621) (toList!808 lt!55258)) (= (_1!1225 (h!2219 (toList!808 lt!55258))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!71118 () Option!163)

(assert (=> d!30639 (= (getValueByKey!157 (toList!808 lt!55258) #b0000000000000000000000000000000000000000000000000000000000000000) e!71118)))

(declare-fun b!109334 () Bool)

(declare-fun e!71119 () Option!163)

(assert (=> b!109334 (= e!71118 e!71119)))

(declare-fun c!19324 () Bool)

(assert (=> b!109334 (= c!19324 (and ((_ is Cons!1621) (toList!808 lt!55258)) (not (= (_1!1225 (h!2219 (toList!808 lt!55258))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!109335 () Bool)

(assert (=> b!109335 (= e!71119 (getValueByKey!157 (t!5741 (toList!808 lt!55258)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109333 () Bool)

(assert (=> b!109333 (= e!71118 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55258)))))))

(declare-fun b!109336 () Bool)

(assert (=> b!109336 (= e!71119 None!161)))

(assert (= (and d!30639 c!19323) b!109333))

(assert (= (and d!30639 (not c!19323)) b!109334))

(assert (= (and b!109334 c!19324) b!109335))

(assert (= (and b!109334 (not c!19324)) b!109336))

(declare-fun m!123875 () Bool)

(assert (=> b!109335 m!123875))

(assert (=> b!108200 d!30639))

(assert (=> d!29921 d!29911))

(assert (=> d!29921 d!29905))

(declare-fun d!30641 () Bool)

(assert (=> d!30641 (contains!834 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55335)))

(assert (=> d!30641 true))

(declare-fun _$35!351 () Unit!3321)

(assert (=> d!30641 (= (choose!674 lt!55320 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55335) _$35!351)))

(declare-fun bs!4507 () Bool)

(assert (= bs!4507 d!30641))

(assert (=> bs!4507 m!121199))

(assert (=> bs!4507 m!121199))

(assert (=> bs!4507 m!121201))

(assert (=> d!29921 d!30641))

(declare-fun d!30643 () Bool)

(declare-fun e!71121 () Bool)

(assert (=> d!30643 e!71121))

(declare-fun res!54148 () Bool)

(assert (=> d!30643 (=> res!54148 e!71121)))

(declare-fun lt!56287 () Bool)

(assert (=> d!30643 (= res!54148 (not lt!56287))))

(declare-fun lt!56288 () Bool)

(assert (=> d!30643 (= lt!56287 lt!56288)))

(declare-fun lt!56286 () Unit!3321)

(declare-fun e!71120 () Unit!3321)

(assert (=> d!30643 (= lt!56286 e!71120)))

(declare-fun c!19325 () Bool)

(assert (=> d!30643 (= c!19325 lt!56288)))

(assert (=> d!30643 (= lt!56288 (containsKey!161 (toList!808 lt!55320) lt!55335))))

(assert (=> d!30643 (= (contains!834 lt!55320 lt!55335) lt!56287)))

(declare-fun b!109338 () Bool)

(declare-fun lt!56289 () Unit!3321)

(assert (=> b!109338 (= e!71120 lt!56289)))

(assert (=> b!109338 (= lt!56289 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55320) lt!55335))))

(assert (=> b!109338 (isDefined!110 (getValueByKey!157 (toList!808 lt!55320) lt!55335))))

(declare-fun b!109339 () Bool)

(declare-fun Unit!3387 () Unit!3321)

(assert (=> b!109339 (= e!71120 Unit!3387)))

(declare-fun b!109340 () Bool)

(assert (=> b!109340 (= e!71121 (isDefined!110 (getValueByKey!157 (toList!808 lt!55320) lt!55335)))))

(assert (= (and d!30643 c!19325) b!109338))

(assert (= (and d!30643 (not c!19325)) b!109339))

(assert (= (and d!30643 (not res!54148)) b!109340))

(declare-fun m!123877 () Bool)

(assert (=> d!30643 m!123877))

(declare-fun m!123879 () Bool)

(assert (=> b!109338 m!123879))

(declare-fun m!123881 () Bool)

(assert (=> b!109338 m!123881))

(assert (=> b!109338 m!123881))

(declare-fun m!123883 () Bool)

(assert (=> b!109338 m!123883))

(assert (=> b!109340 m!123881))

(assert (=> b!109340 m!123881))

(assert (=> b!109340 m!123883))

(assert (=> d!29921 d!30643))

(declare-fun d!30645 () Bool)

(assert (=> d!30645 (= (isDefined!110 (getValueByKey!157 (toList!808 lt!55272) (_1!1225 lt!55182))) (not (isEmpty!375 (getValueByKey!157 (toList!808 lt!55272) (_1!1225 lt!55182)))))))

(declare-fun bs!4508 () Bool)

(assert (= bs!4508 d!30645))

(assert (=> bs!4508 m!121171))

(declare-fun m!123885 () Bool)

(assert (=> bs!4508 m!123885))

(assert (=> b!108381 d!30645))

(assert (=> b!108381 d!30049))

(declare-fun d!30647 () Bool)

(declare-fun res!54149 () Bool)

(declare-fun e!71122 () Bool)

(assert (=> d!30647 (=> res!54149 e!71122)))

(assert (=> d!30647 (= res!54149 (and ((_ is Cons!1621) lt!55581) (= (_1!1225 (h!2219 lt!55581)) (_1!1225 lt!55182))))))

(assert (=> d!30647 (= (containsKey!161 lt!55581 (_1!1225 lt!55182)) e!71122)))

(declare-fun b!109341 () Bool)

(declare-fun e!71123 () Bool)

(assert (=> b!109341 (= e!71122 e!71123)))

(declare-fun res!54150 () Bool)

(assert (=> b!109341 (=> (not res!54150) (not e!71123))))

(assert (=> b!109341 (= res!54150 (and (or (not ((_ is Cons!1621) lt!55581)) (bvsle (_1!1225 (h!2219 lt!55581)) (_1!1225 lt!55182))) ((_ is Cons!1621) lt!55581) (bvslt (_1!1225 (h!2219 lt!55581)) (_1!1225 lt!55182))))))

(declare-fun b!109342 () Bool)

(assert (=> b!109342 (= e!71123 (containsKey!161 (t!5741 lt!55581) (_1!1225 lt!55182)))))

(assert (= (and d!30647 (not res!54149)) b!109341))

(assert (= (and b!109341 res!54150) b!109342))

(declare-fun m!123887 () Bool)

(assert (=> b!109342 m!123887))

(assert (=> b!108113 d!30647))

(declare-fun d!30649 () Bool)

(declare-fun c!19326 () Bool)

(assert (=> d!30649 (= c!19326 (and ((_ is Cons!1621) (t!5741 lt!55270)) (= (_1!1225 (h!2219 (t!5741 lt!55270))) (_1!1225 lt!55182))))))

(declare-fun e!71124 () Option!163)

(assert (=> d!30649 (= (getValueByKey!157 (t!5741 lt!55270) (_1!1225 lt!55182)) e!71124)))

(declare-fun b!109344 () Bool)

(declare-fun e!71125 () Option!163)

(assert (=> b!109344 (= e!71124 e!71125)))

(declare-fun c!19327 () Bool)

(assert (=> b!109344 (= c!19327 (and ((_ is Cons!1621) (t!5741 lt!55270)) (not (= (_1!1225 (h!2219 (t!5741 lt!55270))) (_1!1225 lt!55182)))))))

(declare-fun b!109345 () Bool)

(assert (=> b!109345 (= e!71125 (getValueByKey!157 (t!5741 (t!5741 lt!55270)) (_1!1225 lt!55182)))))

(declare-fun b!109343 () Bool)

(assert (=> b!109343 (= e!71124 (Some!162 (_2!1225 (h!2219 (t!5741 lt!55270)))))))

(declare-fun b!109346 () Bool)

(assert (=> b!109346 (= e!71125 None!161)))

(assert (= (and d!30649 c!19326) b!109343))

(assert (= (and d!30649 (not c!19326)) b!109344))

(assert (= (and b!109344 c!19327) b!109345))

(assert (= (and b!109344 (not c!19327)) b!109346))

(declare-fun m!123889 () Bool)

(assert (=> b!109345 m!123889))

(assert (=> b!108077 d!30649))

(declare-fun d!30651 () Bool)

(declare-fun e!71127 () Bool)

(assert (=> d!30651 e!71127))

(declare-fun res!54151 () Bool)

(assert (=> d!30651 (=> res!54151 e!71127)))

(declare-fun lt!56291 () Bool)

(assert (=> d!30651 (= res!54151 (not lt!56291))))

(declare-fun lt!56292 () Bool)

(assert (=> d!30651 (= lt!56291 lt!56292)))

(declare-fun lt!56290 () Unit!3321)

(declare-fun e!71126 () Unit!3321)

(assert (=> d!30651 (= lt!56290 e!71126)))

(declare-fun c!19328 () Bool)

(assert (=> d!30651 (= c!19328 lt!56292)))

(assert (=> d!30651 (= lt!56292 (containsKey!161 (toList!808 lt!55598) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30651 (= (contains!834 lt!55598 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!56291)))

(declare-fun b!109347 () Bool)

(declare-fun lt!56293 () Unit!3321)

(assert (=> b!109347 (= e!71126 lt!56293)))

(assert (=> b!109347 (= lt!56293 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55598) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!109347 (isDefined!110 (getValueByKey!157 (toList!808 lt!55598) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109348 () Bool)

(declare-fun Unit!3388 () Unit!3321)

(assert (=> b!109348 (= e!71126 Unit!3388)))

(declare-fun b!109349 () Bool)

(assert (=> b!109349 (= e!71127 (isDefined!110 (getValueByKey!157 (toList!808 lt!55598) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30651 c!19328) b!109347))

(assert (= (and d!30651 (not c!19328)) b!109348))

(assert (= (and d!30651 (not res!54151)) b!109349))

(declare-fun m!123891 () Bool)

(assert (=> d!30651 m!123891))

(declare-fun m!123893 () Bool)

(assert (=> b!109347 m!123893))

(assert (=> b!109347 m!121565))

(assert (=> b!109347 m!121565))

(declare-fun m!123895 () Bool)

(assert (=> b!109347 m!123895))

(assert (=> b!109349 m!121565))

(assert (=> b!109349 m!121565))

(assert (=> b!109349 m!123895))

(assert (=> d!29905 d!30651))

(declare-fun d!30653 () Bool)

(declare-fun c!19329 () Bool)

(assert (=> d!30653 (= c!19329 (and ((_ is Cons!1621) lt!55600) (= (_1!1225 (h!2219 lt!55600)) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!71128 () Option!163)

(assert (=> d!30653 (= (getValueByKey!157 lt!55600 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!71128)))

(declare-fun b!109351 () Bool)

(declare-fun e!71129 () Option!163)

(assert (=> b!109351 (= e!71128 e!71129)))

(declare-fun c!19330 () Bool)

(assert (=> b!109351 (= c!19330 (and ((_ is Cons!1621) lt!55600) (not (= (_1!1225 (h!2219 lt!55600)) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!109352 () Bool)

(assert (=> b!109352 (= e!71129 (getValueByKey!157 (t!5741 lt!55600) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109350 () Bool)

(assert (=> b!109350 (= e!71128 (Some!162 (_2!1225 (h!2219 lt!55600))))))

(declare-fun b!109353 () Bool)

(assert (=> b!109353 (= e!71129 None!161)))

(assert (= (and d!30653 c!19329) b!109350))

(assert (= (and d!30653 (not c!19329)) b!109351))

(assert (= (and b!109351 c!19330) b!109352))

(assert (= (and b!109351 (not c!19330)) b!109353))

(declare-fun m!123897 () Bool)

(assert (=> b!109352 m!123897))

(assert (=> d!29905 d!30653))

(declare-fun d!30655 () Bool)

(assert (=> d!30655 (= (getValueByKey!157 lt!55600 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!56294 () Unit!3321)

(assert (=> d!30655 (= lt!56294 (choose!672 lt!55600 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!71130 () Bool)

(assert (=> d!30655 e!71130))

(declare-fun res!54152 () Bool)

(assert (=> d!30655 (=> (not res!54152) (not e!71130))))

(assert (=> d!30655 (= res!54152 (isStrictlySorted!310 lt!55600))))

(assert (=> d!30655 (= (lemmaContainsTupThenGetReturnValue!73 lt!55600 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!56294)))

(declare-fun b!109354 () Bool)

(declare-fun res!54153 () Bool)

(assert (=> b!109354 (=> (not res!54153) (not e!71130))))

(assert (=> b!109354 (= res!54153 (containsKey!161 lt!55600 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109355 () Bool)

(assert (=> b!109355 (= e!71130 (contains!836 lt!55600 (tuple2!2429 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30655 res!54152) b!109354))

(assert (= (and b!109354 res!54153) b!109355))

(assert (=> d!30655 m!121559))

(declare-fun m!123899 () Bool)

(assert (=> d!30655 m!123899))

(declare-fun m!123901 () Bool)

(assert (=> d!30655 m!123901))

(declare-fun m!123903 () Bool)

(assert (=> b!109354 m!123903))

(declare-fun m!123905 () Bool)

(assert (=> b!109355 m!123905))

(assert (=> d!29905 d!30655))

(declare-fun b!109356 () Bool)

(declare-fun e!71134 () List!1625)

(declare-fun e!71132 () List!1625)

(assert (=> b!109356 (= e!71134 e!71132)))

(declare-fun c!19333 () Bool)

(assert (=> b!109356 (= c!19333 (and ((_ is Cons!1621) (toList!808 lt!55320)) (= (_1!1225 (h!2219 (toList!808 lt!55320))) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun call!11615 () List!1625)

(declare-fun c!19332 () Bool)

(declare-fun e!71131 () List!1625)

(declare-fun bm!11611 () Bool)

(assert (=> bm!11611 (= call!11615 ($colon$colon!82 e!71131 (ite c!19332 (h!2219 (toList!808 lt!55320)) (tuple2!2429 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19331 () Bool)

(assert (=> bm!11611 (= c!19331 c!19332)))

(declare-fun b!109357 () Bool)

(assert (=> b!109357 (= e!71131 (insertStrictlySorted!76 (t!5741 (toList!808 lt!55320)) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun c!19334 () Bool)

(declare-fun b!109358 () Bool)

(assert (=> b!109358 (= e!71131 (ite c!19333 (t!5741 (toList!808 lt!55320)) (ite c!19334 (Cons!1621 (h!2219 (toList!808 lt!55320)) (t!5741 (toList!808 lt!55320))) Nil!1622)))))

(declare-fun b!109359 () Bool)

(declare-fun e!71135 () List!1625)

(declare-fun call!11614 () List!1625)

(assert (=> b!109359 (= e!71135 call!11614)))

(declare-fun bm!11612 () Bool)

(declare-fun call!11616 () List!1625)

(assert (=> bm!11612 (= call!11614 call!11616)))

(declare-fun b!109360 () Bool)

(assert (=> b!109360 (= e!71134 call!11615)))

(declare-fun d!30657 () Bool)

(declare-fun e!71133 () Bool)

(assert (=> d!30657 e!71133))

(declare-fun res!54154 () Bool)

(assert (=> d!30657 (=> (not res!54154) (not e!71133))))

(declare-fun lt!56295 () List!1625)

(assert (=> d!30657 (= res!54154 (isStrictlySorted!310 lt!56295))))

(assert (=> d!30657 (= lt!56295 e!71134)))

(assert (=> d!30657 (= c!19332 (and ((_ is Cons!1621) (toList!808 lt!55320)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55320))) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30657 (isStrictlySorted!310 (toList!808 lt!55320))))

(assert (=> d!30657 (= (insertStrictlySorted!76 (toList!808 lt!55320) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!56295)))

(declare-fun b!109361 () Bool)

(assert (=> b!109361 (= e!71135 call!11614)))

(declare-fun bm!11613 () Bool)

(assert (=> bm!11613 (= call!11616 call!11615)))

(declare-fun b!109362 () Bool)

(assert (=> b!109362 (= c!19334 (and ((_ is Cons!1621) (toList!808 lt!55320)) (bvsgt (_1!1225 (h!2219 (toList!808 lt!55320))) (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> b!109362 (= e!71132 e!71135)))

(declare-fun b!109363 () Bool)

(assert (=> b!109363 (= e!71132 call!11616)))

(declare-fun b!109364 () Bool)

(declare-fun res!54155 () Bool)

(assert (=> b!109364 (=> (not res!54155) (not e!71133))))

(assert (=> b!109364 (= res!54155 (containsKey!161 lt!56295 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109365 () Bool)

(assert (=> b!109365 (= e!71133 (contains!836 lt!56295 (tuple2!2429 (_1!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30657 c!19332) b!109360))

(assert (= (and d!30657 (not c!19332)) b!109356))

(assert (= (and b!109356 c!19333) b!109363))

(assert (= (and b!109356 (not c!19333)) b!109362))

(assert (= (and b!109362 c!19334) b!109361))

(assert (= (and b!109362 (not c!19334)) b!109359))

(assert (= (or b!109361 b!109359) bm!11612))

(assert (= (or b!109363 bm!11612) bm!11613))

(assert (= (or b!109360 bm!11613) bm!11611))

(assert (= (and bm!11611 c!19331) b!109357))

(assert (= (and bm!11611 (not c!19331)) b!109358))

(assert (= (and d!30657 res!54154) b!109364))

(assert (= (and b!109364 res!54155) b!109365))

(declare-fun m!123907 () Bool)

(assert (=> bm!11611 m!123907))

(declare-fun m!123909 () Bool)

(assert (=> b!109364 m!123909))

(declare-fun m!123911 () Bool)

(assert (=> b!109365 m!123911))

(declare-fun m!123913 () Bool)

(assert (=> d!30657 m!123913))

(declare-fun m!123915 () Bool)

(assert (=> d!30657 m!123915))

(declare-fun m!123917 () Bool)

(assert (=> b!109357 m!123917))

(assert (=> d!29905 d!30657))

(declare-fun d!30659 () Bool)

(declare-fun res!54156 () Bool)

(declare-fun e!71136 () Bool)

(assert (=> d!30659 (=> (not res!54156) (not e!71136))))

(assert (=> d!30659 (= res!54156 (simpleValid!75 (_2!1226 lt!55533)))))

(assert (=> d!30659 (= (valid!426 (_2!1226 lt!55533)) e!71136)))

(declare-fun b!109366 () Bool)

(declare-fun res!54157 () Bool)

(assert (=> b!109366 (=> (not res!54157) (not e!71136))))

(assert (=> b!109366 (= res!54157 (= (arrayCountValidKeys!0 (_keys!4316 (_2!1226 lt!55533)) #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55533)))) (_size!505 (_2!1226 lt!55533))))))

(declare-fun b!109367 () Bool)

(declare-fun res!54158 () Bool)

(assert (=> b!109367 (=> (not res!54158) (not e!71136))))

(assert (=> b!109367 (= res!54158 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 (_2!1226 lt!55533)) (mask!6764 (_2!1226 lt!55533))))))

(declare-fun b!109368 () Bool)

(assert (=> b!109368 (= e!71136 (arrayNoDuplicates!0 (_keys!4316 (_2!1226 lt!55533)) #b00000000000000000000000000000000 Nil!1623))))

(assert (= (and d!30659 res!54156) b!109366))

(assert (= (and b!109366 res!54157) b!109367))

(assert (= (and b!109367 res!54158) b!109368))

(declare-fun m!123919 () Bool)

(assert (=> d!30659 m!123919))

(declare-fun m!123921 () Bool)

(assert (=> b!109366 m!123921))

(declare-fun m!123923 () Bool)

(assert (=> b!109367 m!123923))

(declare-fun m!123925 () Bool)

(assert (=> b!109368 m!123925))

(assert (=> b!108050 d!30659))

(declare-fun d!30661 () Bool)

(declare-fun res!54159 () Bool)

(declare-fun e!71137 () Bool)

(assert (=> d!30661 (=> res!54159 e!71137)))

(assert (=> d!30661 (= res!54159 (and ((_ is Cons!1621) lt!55274) (= (_1!1225 (h!2219 lt!55274)) (_1!1225 lt!55182))))))

(assert (=> d!30661 (= (containsKey!161 lt!55274 (_1!1225 lt!55182)) e!71137)))

(declare-fun b!109369 () Bool)

(declare-fun e!71138 () Bool)

(assert (=> b!109369 (= e!71137 e!71138)))

(declare-fun res!54160 () Bool)

(assert (=> b!109369 (=> (not res!54160) (not e!71138))))

(assert (=> b!109369 (= res!54160 (and (or (not ((_ is Cons!1621) lt!55274)) (bvsle (_1!1225 (h!2219 lt!55274)) (_1!1225 lt!55182))) ((_ is Cons!1621) lt!55274) (bvslt (_1!1225 (h!2219 lt!55274)) (_1!1225 lt!55182))))))

(declare-fun b!109370 () Bool)

(assert (=> b!109370 (= e!71138 (containsKey!161 (t!5741 lt!55274) (_1!1225 lt!55182)))))

(assert (= (and d!30661 (not res!54159)) b!109369))

(assert (= (and b!109369 res!54160) b!109370))

(declare-fun m!123927 () Bool)

(assert (=> b!109370 m!123927))

(assert (=> b!108386 d!30661))

(assert (=> b!108335 d!30145))

(assert (=> d!29917 d!29909))

(assert (=> d!29917 d!29913))

(assert (=> d!29917 d!29927))

(declare-fun d!30663 () Bool)

(assert (=> d!30663 (= (apply!99 (+!148 lt!55327 (tuple2!2429 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!55339) (apply!99 lt!55327 lt!55339))))

(assert (=> d!30663 true))

(declare-fun _$34!897 () Unit!3321)

(assert (=> d!30663 (= (choose!673 lt!55327 lt!55324 (minValue!2479 (v!2914 (underlying!367 thiss!992))) lt!55339) _$34!897)))

(declare-fun bs!4509 () Bool)

(assert (= bs!4509 d!30663))

(assert (=> bs!4509 m!121191))

(assert (=> bs!4509 m!121191))

(assert (=> bs!4509 m!121193))

(assert (=> bs!4509 m!121183))

(assert (=> d!29917 d!30663))

(declare-fun d!30665 () Bool)

(declare-fun e!71140 () Bool)

(assert (=> d!30665 e!71140))

(declare-fun res!54161 () Bool)

(assert (=> d!30665 (=> res!54161 e!71140)))

(declare-fun lt!56297 () Bool)

(assert (=> d!30665 (= res!54161 (not lt!56297))))

(declare-fun lt!56298 () Bool)

(assert (=> d!30665 (= lt!56297 lt!56298)))

(declare-fun lt!56296 () Unit!3321)

(declare-fun e!71139 () Unit!3321)

(assert (=> d!30665 (= lt!56296 e!71139)))

(declare-fun c!19335 () Bool)

(assert (=> d!30665 (= c!19335 lt!56298)))

(assert (=> d!30665 (= lt!56298 (containsKey!161 (toList!808 lt!55327) lt!55339))))

(assert (=> d!30665 (= (contains!834 lt!55327 lt!55339) lt!56297)))

(declare-fun b!109371 () Bool)

(declare-fun lt!56299 () Unit!3321)

(assert (=> b!109371 (= e!71139 lt!56299)))

(assert (=> b!109371 (= lt!56299 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55327) lt!55339))))

(assert (=> b!109371 (isDefined!110 (getValueByKey!157 (toList!808 lt!55327) lt!55339))))

(declare-fun b!109372 () Bool)

(declare-fun Unit!3389 () Unit!3321)

(assert (=> b!109372 (= e!71139 Unit!3389)))

(declare-fun b!109373 () Bool)

(assert (=> b!109373 (= e!71140 (isDefined!110 (getValueByKey!157 (toList!808 lt!55327) lt!55339)))))

(assert (= (and d!30665 c!19335) b!109371))

(assert (= (and d!30665 (not c!19335)) b!109372))

(assert (= (and d!30665 (not res!54161)) b!109373))

(declare-fun m!123929 () Bool)

(assert (=> d!30665 m!123929))

(declare-fun m!123931 () Bool)

(assert (=> b!109371 m!123931))

(assert (=> b!109371 m!121621))

(assert (=> b!109371 m!121621))

(declare-fun m!123933 () Bool)

(assert (=> b!109371 m!123933))

(assert (=> b!109373 m!121621))

(assert (=> b!109373 m!121621))

(assert (=> b!109373 m!123933))

(assert (=> d!29917 d!30665))

(declare-fun c!19336 () Bool)

(declare-fun d!30667 () Bool)

(assert (=> d!30667 (= c!19336 (and ((_ is Cons!1621) (toList!808 lt!55557)) (= (_1!1225 (h!2219 (toList!808 lt!55557))) (_1!1225 (tuple2!2429 lt!55263 lt!55262)))))))

(declare-fun e!71141 () Option!163)

(assert (=> d!30667 (= (getValueByKey!157 (toList!808 lt!55557) (_1!1225 (tuple2!2429 lt!55263 lt!55262))) e!71141)))

(declare-fun b!109375 () Bool)

(declare-fun e!71142 () Option!163)

(assert (=> b!109375 (= e!71141 e!71142)))

(declare-fun c!19337 () Bool)

(assert (=> b!109375 (= c!19337 (and ((_ is Cons!1621) (toList!808 lt!55557)) (not (= (_1!1225 (h!2219 (toList!808 lt!55557))) (_1!1225 (tuple2!2429 lt!55263 lt!55262))))))))

(declare-fun b!109376 () Bool)

(assert (=> b!109376 (= e!71142 (getValueByKey!157 (t!5741 (toList!808 lt!55557)) (_1!1225 (tuple2!2429 lt!55263 lt!55262))))))

(declare-fun b!109374 () Bool)

(assert (=> b!109374 (= e!71141 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55557)))))))

(declare-fun b!109377 () Bool)

(assert (=> b!109377 (= e!71142 None!161)))

(assert (= (and d!30667 c!19336) b!109374))

(assert (= (and d!30667 (not c!19336)) b!109375))

(assert (= (and b!109375 c!19337) b!109376))

(assert (= (and b!109375 (not c!19337)) b!109377))

(declare-fun m!123935 () Bool)

(assert (=> b!109376 m!123935))

(assert (=> b!108058 d!30667))

(declare-fun bm!11614 () Bool)

(declare-fun call!11617 () Bool)

(assert (=> bm!11614 (= call!11617 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4316 (_2!1226 lt!55419)) (mask!6764 (_2!1226 lt!55419))))))

(declare-fun d!30669 () Bool)

(declare-fun res!54163 () Bool)

(declare-fun e!71144 () Bool)

(assert (=> d!30669 (=> res!54163 e!71144)))

(assert (=> d!30669 (= res!54163 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55419)))))))

(assert (=> d!30669 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 (_2!1226 lt!55419)) (mask!6764 (_2!1226 lt!55419))) e!71144)))

(declare-fun b!109378 () Bool)

(declare-fun e!71143 () Bool)

(assert (=> b!109378 (= e!71143 call!11617)))

(declare-fun b!109379 () Bool)

(declare-fun e!71145 () Bool)

(assert (=> b!109379 (= e!71143 e!71145)))

(declare-fun lt!56300 () (_ BitVec 64))

(assert (=> b!109379 (= lt!56300 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000))))

(declare-fun lt!56302 () Unit!3321)

(assert (=> b!109379 (= lt!56302 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4316 (_2!1226 lt!55419)) lt!56300 #b00000000000000000000000000000000))))

(assert (=> b!109379 (arrayContainsKey!0 (_keys!4316 (_2!1226 lt!55419)) lt!56300 #b00000000000000000000000000000000)))

(declare-fun lt!56301 () Unit!3321)

(assert (=> b!109379 (= lt!56301 lt!56302)))

(declare-fun res!54162 () Bool)

(assert (=> b!109379 (= res!54162 (= (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000) (_keys!4316 (_2!1226 lt!55419)) (mask!6764 (_2!1226 lt!55419))) (Found!260 #b00000000000000000000000000000000)))))

(assert (=> b!109379 (=> (not res!54162) (not e!71145))))

(declare-fun b!109380 () Bool)

(assert (=> b!109380 (= e!71145 call!11617)))

(declare-fun b!109381 () Bool)

(assert (=> b!109381 (= e!71144 e!71143)))

(declare-fun c!19338 () Bool)

(assert (=> b!109381 (= c!19338 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000)))))

(assert (= (and d!30669 (not res!54163)) b!109381))

(assert (= (and b!109381 c!19338) b!109379))

(assert (= (and b!109381 (not c!19338)) b!109378))

(assert (= (and b!109379 res!54162) b!109380))

(assert (= (or b!109380 b!109378) bm!11614))

(declare-fun m!123937 () Bool)

(assert (=> bm!11614 m!123937))

(assert (=> b!109379 m!123281))

(declare-fun m!123939 () Bool)

(assert (=> b!109379 m!123939))

(declare-fun m!123941 () Bool)

(assert (=> b!109379 m!123941))

(assert (=> b!109379 m!123281))

(declare-fun m!123943 () Bool)

(assert (=> b!109379 m!123943))

(assert (=> b!109381 m!123281))

(assert (=> b!109381 m!123281))

(assert (=> b!109381 m!123287))

(assert (=> b!108291 d!30669))

(declare-fun d!30671 () Bool)

(assert (=> d!30671 (= (+!148 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55432 lt!55184 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(assert (=> d!30671 true))

(declare-fun _$7!95 () Unit!3321)

(assert (=> d!30671 (= (choose!669 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55432 (zeroValue!2479 newMap!16) lt!55184 (minValue!2479 newMap!16) (defaultEntry!2606 newMap!16)) _$7!95)))

(declare-fun bs!4510 () Bool)

(assert (= bs!4510 d!30671))

(assert (=> bs!4510 m!121175))

(assert (=> bs!4510 m!121175))

(assert (=> bs!4510 m!121347))

(assert (=> bs!4510 m!121343))

(assert (=> d!29857 d!30671))

(assert (=> d!29857 d!29951))

(declare-fun bm!11615 () Bool)

(declare-fun call!11618 () Bool)

(declare-fun lt!56309 () ListLongMap!1585)

(assert (=> bm!11615 (= call!11618 (contains!834 lt!56309 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109382 () Bool)

(declare-fun e!71149 () Unit!3321)

(declare-fun lt!56315 () Unit!3321)

(assert (=> b!109382 (= e!71149 lt!56315)))

(declare-fun lt!56303 () ListLongMap!1585)

(assert (=> b!109382 (= lt!56303 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55432 lt!55184 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56321 () (_ BitVec 64))

(assert (=> b!109382 (= lt!56321 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56318 () (_ BitVec 64))

(assert (=> b!109382 (= lt!56318 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56316 () Unit!3321)

(assert (=> b!109382 (= lt!56316 (addStillContains!75 lt!56303 lt!56321 lt!55184 lt!56318))))

(assert (=> b!109382 (contains!834 (+!148 lt!56303 (tuple2!2429 lt!56321 lt!55184)) lt!56318)))

(declare-fun lt!56308 () Unit!3321)

(assert (=> b!109382 (= lt!56308 lt!56316)))

(declare-fun lt!56311 () ListLongMap!1585)

(assert (=> b!109382 (= lt!56311 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55432 lt!55184 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56320 () (_ BitVec 64))

(assert (=> b!109382 (= lt!56320 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56323 () (_ BitVec 64))

(assert (=> b!109382 (= lt!56323 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56319 () Unit!3321)

(assert (=> b!109382 (= lt!56319 (addApplyDifferent!75 lt!56311 lt!56320 (minValue!2479 newMap!16) lt!56323))))

(assert (=> b!109382 (= (apply!99 (+!148 lt!56311 (tuple2!2429 lt!56320 (minValue!2479 newMap!16))) lt!56323) (apply!99 lt!56311 lt!56323))))

(declare-fun lt!56324 () Unit!3321)

(assert (=> b!109382 (= lt!56324 lt!56319)))

(declare-fun lt!56314 () ListLongMap!1585)

(assert (=> b!109382 (= lt!56314 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55432 lt!55184 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56304 () (_ BitVec 64))

(assert (=> b!109382 (= lt!56304 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56317 () (_ BitVec 64))

(assert (=> b!109382 (= lt!56317 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56313 () Unit!3321)

(assert (=> b!109382 (= lt!56313 (addApplyDifferent!75 lt!56314 lt!56304 lt!55184 lt!56317))))

(assert (=> b!109382 (= (apply!99 (+!148 lt!56314 (tuple2!2429 lt!56304 lt!55184)) lt!56317) (apply!99 lt!56314 lt!56317))))

(declare-fun lt!56305 () Unit!3321)

(assert (=> b!109382 (= lt!56305 lt!56313)))

(declare-fun lt!56310 () ListLongMap!1585)

(assert (=> b!109382 (= lt!56310 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55432 lt!55184 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56307 () (_ BitVec 64))

(assert (=> b!109382 (= lt!56307 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56322 () (_ BitVec 64))

(assert (=> b!109382 (= lt!56322 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109382 (= lt!56315 (addApplyDifferent!75 lt!56310 lt!56307 (minValue!2479 newMap!16) lt!56322))))

(assert (=> b!109382 (= (apply!99 (+!148 lt!56310 (tuple2!2429 lt!56307 (minValue!2479 newMap!16))) lt!56322) (apply!99 lt!56310 lt!56322))))

(declare-fun bm!11616 () Bool)

(declare-fun call!11619 () ListLongMap!1585)

(declare-fun call!11624 () ListLongMap!1585)

(assert (=> bm!11616 (= call!11619 call!11624)))

(declare-fun b!109383 () Bool)

(declare-fun e!71146 () Bool)

(assert (=> b!109383 (= e!71146 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109385 () Bool)

(declare-fun res!54169 () Bool)

(declare-fun e!71153 () Bool)

(assert (=> b!109385 (=> (not res!54169) (not e!71153))))

(declare-fun e!71156 () Bool)

(assert (=> b!109385 (= res!54169 e!71156)))

(declare-fun c!19343 () Bool)

(assert (=> b!109385 (= c!19343 (not (= (bvand lt!55432 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!109386 () Bool)

(declare-fun e!71157 () ListLongMap!1585)

(assert (=> b!109386 (= e!71157 call!11619)))

(declare-fun b!109387 () Bool)

(declare-fun e!71150 () ListLongMap!1585)

(assert (=> b!109387 (= e!71150 call!11619)))

(declare-fun b!109388 () Bool)

(declare-fun res!54166 () Bool)

(assert (=> b!109388 (=> (not res!54166) (not e!71153))))

(declare-fun e!71158 () Bool)

(assert (=> b!109388 (= res!54166 e!71158)))

(declare-fun res!54164 () Bool)

(assert (=> b!109388 (=> res!54164 e!71158)))

(assert (=> b!109388 (= res!54164 (not e!71146))))

(declare-fun res!54165 () Bool)

(assert (=> b!109388 (=> (not res!54165) (not e!71146))))

(assert (=> b!109388 (= res!54165 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun call!11623 () ListLongMap!1585)

(declare-fun bm!11617 () Bool)

(assert (=> bm!11617 (= call!11623 (getCurrentListMapNoExtraKeys!114 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55432 lt!55184 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun c!19342 () Bool)

(declare-fun c!19344 () Bool)

(declare-fun call!11622 () ListLongMap!1585)

(declare-fun bm!11618 () Bool)

(declare-fun call!11621 () ListLongMap!1585)

(assert (=> bm!11618 (= call!11624 (+!148 (ite c!19342 call!11623 (ite c!19344 call!11621 call!11622)) (ite (or c!19342 c!19344) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!109389 () Bool)

(declare-fun Unit!3390 () Unit!3321)

(assert (=> b!109389 (= e!71149 Unit!3390)))

(declare-fun b!109390 () Bool)

(declare-fun e!71152 () Bool)

(assert (=> b!109390 (= e!71156 e!71152)))

(declare-fun res!54172 () Bool)

(assert (=> b!109390 (= res!54172 call!11618)))

(assert (=> b!109390 (=> (not res!54172) (not e!71152))))

(declare-fun d!30673 () Bool)

(assert (=> d!30673 e!71153))

(declare-fun res!54171 () Bool)

(assert (=> d!30673 (=> (not res!54171) (not e!71153))))

(assert (=> d!30673 (= res!54171 (or (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))))

(declare-fun lt!56312 () ListLongMap!1585)

(assert (=> d!30673 (= lt!56309 lt!56312)))

(declare-fun lt!56306 () Unit!3321)

(assert (=> d!30673 (= lt!56306 e!71149)))

(declare-fun c!19341 () Bool)

(declare-fun e!71154 () Bool)

(assert (=> d!30673 (= c!19341 e!71154)))

(declare-fun res!54167 () Bool)

(assert (=> d!30673 (=> (not res!54167) (not e!71154))))

(assert (=> d!30673 (= res!54167 (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun e!71147 () ListLongMap!1585)

(assert (=> d!30673 (= lt!56312 e!71147)))

(assert (=> d!30673 (= c!19342 (and (not (= (bvand lt!55432 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!55432 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30673 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30673 (= (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55432 lt!55184 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56309)))

(declare-fun b!109384 () Bool)

(declare-fun c!19339 () Bool)

(assert (=> b!109384 (= c!19339 (and (not (= (bvand lt!55432 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!55432 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!109384 (= e!71157 e!71150)))

(declare-fun b!109391 () Bool)

(assert (=> b!109391 (= e!71154 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109392 () Bool)

(assert (=> b!109392 (= e!71156 (not call!11618))))

(declare-fun b!109393 () Bool)

(declare-fun e!71155 () Bool)

(declare-fun call!11620 () Bool)

(assert (=> b!109393 (= e!71155 (not call!11620))))

(declare-fun b!109394 () Bool)

(assert (=> b!109394 (= e!71153 e!71155)))

(declare-fun c!19340 () Bool)

(assert (=> b!109394 (= c!19340 (not (= (bvand lt!55432 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!109395 () Bool)

(declare-fun e!71151 () Bool)

(assert (=> b!109395 (= e!71158 e!71151)))

(declare-fun res!54168 () Bool)

(assert (=> b!109395 (=> (not res!54168) (not e!71151))))

(assert (=> b!109395 (= res!54168 (contains!834 lt!56309 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109395 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun bm!11619 () Bool)

(assert (=> bm!11619 (= call!11622 call!11621)))

(declare-fun b!109396 () Bool)

(declare-fun e!71148 () Bool)

(assert (=> b!109396 (= e!71148 (= (apply!99 lt!56309 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun bm!11620 () Bool)

(assert (=> bm!11620 (= call!11620 (contains!834 lt!56309 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109397 () Bool)

(assert (=> b!109397 (= e!71150 call!11622)))

(declare-fun b!109398 () Bool)

(assert (=> b!109398 (= e!71151 (= (apply!99 lt!56309 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1341 (select (arr!2076 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!389 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109398 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2332 (_values!2589 newMap!16))))))

(assert (=> b!109398 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!109399 () Bool)

(assert (=> b!109399 (= e!71147 (+!148 call!11624 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun b!109400 () Bool)

(assert (=> b!109400 (= e!71152 (= (apply!99 lt!56309 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55184))))

(declare-fun b!109401 () Bool)

(assert (=> b!109401 (= e!71147 e!71157)))

(assert (=> b!109401 (= c!19344 (and (not (= (bvand lt!55432 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!55432 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!109402 () Bool)

(assert (=> b!109402 (= e!71155 e!71148)))

(declare-fun res!54170 () Bool)

(assert (=> b!109402 (= res!54170 call!11620)))

(assert (=> b!109402 (=> (not res!54170) (not e!71148))))

(declare-fun bm!11621 () Bool)

(assert (=> bm!11621 (= call!11621 call!11623)))

(assert (= (and d!30673 c!19342) b!109399))

(assert (= (and d!30673 (not c!19342)) b!109401))

(assert (= (and b!109401 c!19344) b!109386))

(assert (= (and b!109401 (not c!19344)) b!109384))

(assert (= (and b!109384 c!19339) b!109387))

(assert (= (and b!109384 (not c!19339)) b!109397))

(assert (= (or b!109387 b!109397) bm!11619))

(assert (= (or b!109386 bm!11619) bm!11621))

(assert (= (or b!109386 b!109387) bm!11616))

(assert (= (or b!109399 bm!11621) bm!11617))

(assert (= (or b!109399 bm!11616) bm!11618))

(assert (= (and d!30673 res!54167) b!109391))

(assert (= (and d!30673 c!19341) b!109382))

(assert (= (and d!30673 (not c!19341)) b!109389))

(assert (= (and d!30673 res!54171) b!109388))

(assert (= (and b!109388 res!54165) b!109383))

(assert (= (and b!109388 (not res!54164)) b!109395))

(assert (= (and b!109395 res!54168) b!109398))

(assert (= (and b!109388 res!54166) b!109385))

(assert (= (and b!109385 c!19343) b!109390))

(assert (= (and b!109385 (not c!19343)) b!109392))

(assert (= (and b!109390 res!54172) b!109400))

(assert (= (or b!109390 b!109392) bm!11615))

(assert (= (and b!109385 res!54169) b!109394))

(assert (= (and b!109394 c!19340) b!109402))

(assert (= (and b!109394 (not c!19340)) b!109393))

(assert (= (and b!109402 res!54170) b!109396))

(assert (= (or b!109402 b!109393) bm!11620))

(declare-fun b_lambda!4885 () Bool)

(assert (=> (not b_lambda!4885) (not b!109398)))

(assert (=> b!109398 t!5750))

(declare-fun b_and!6747 () Bool)

(assert (= b_and!6743 (and (=> t!5750 result!3509) b_and!6747)))

(assert (=> b!109398 t!5752))

(declare-fun b_and!6749 () Bool)

(assert (= b_and!6745 (and (=> t!5752 result!3511) b_and!6749)))

(declare-fun m!123945 () Bool)

(assert (=> bm!11615 m!123945))

(assert (=> b!109395 m!121333))

(assert (=> b!109395 m!121333))

(declare-fun m!123947 () Bool)

(assert (=> b!109395 m!123947))

(assert (=> b!109391 m!121333))

(assert (=> b!109391 m!121333))

(assert (=> b!109391 m!121341))

(declare-fun m!123949 () Bool)

(assert (=> bm!11620 m!123949))

(declare-fun m!123951 () Bool)

(assert (=> b!109382 m!123951))

(declare-fun m!123953 () Bool)

(assert (=> b!109382 m!123953))

(declare-fun m!123955 () Bool)

(assert (=> b!109382 m!123955))

(declare-fun m!123957 () Bool)

(assert (=> b!109382 m!123957))

(declare-fun m!123959 () Bool)

(assert (=> b!109382 m!123959))

(declare-fun m!123961 () Bool)

(assert (=> b!109382 m!123961))

(declare-fun m!123963 () Bool)

(assert (=> b!109382 m!123963))

(declare-fun m!123965 () Bool)

(assert (=> b!109382 m!123965))

(declare-fun m!123967 () Bool)

(assert (=> b!109382 m!123967))

(declare-fun m!123969 () Bool)

(assert (=> b!109382 m!123969))

(declare-fun m!123971 () Bool)

(assert (=> b!109382 m!123971))

(assert (=> b!109382 m!123953))

(assert (=> b!109382 m!123965))

(declare-fun m!123973 () Bool)

(assert (=> b!109382 m!123973))

(declare-fun m!123975 () Bool)

(assert (=> b!109382 m!123975))

(declare-fun m!123977 () Bool)

(assert (=> b!109382 m!123977))

(assert (=> b!109382 m!123959))

(declare-fun m!123979 () Bool)

(assert (=> b!109382 m!123979))

(assert (=> b!109382 m!121333))

(declare-fun m!123981 () Bool)

(assert (=> b!109382 m!123981))

(assert (=> b!109382 m!123967))

(declare-fun m!123983 () Bool)

(assert (=> b!109399 m!123983))

(assert (=> b!109398 m!121333))

(assert (=> b!109398 m!121333))

(declare-fun m!123985 () Bool)

(assert (=> b!109398 m!123985))

(assert (=> b!109398 m!121725))

(assert (=> b!109398 m!121727))

(assert (=> b!109398 m!121729))

(assert (=> b!109398 m!121727))

(assert (=> b!109398 m!121725))

(assert (=> bm!11617 m!123971))

(assert (=> b!109383 m!121333))

(assert (=> b!109383 m!121333))

(assert (=> b!109383 m!121341))

(declare-fun m!123987 () Bool)

(assert (=> b!109396 m!123987))

(declare-fun m!123989 () Bool)

(assert (=> bm!11618 m!123989))

(declare-fun m!123991 () Bool)

(assert (=> b!109400 m!123991))

(assert (=> d!30673 m!121327))

(assert (=> d!29857 d!30673))

(declare-fun d!30675 () Bool)

(declare-fun e!71159 () Bool)

(assert (=> d!30675 e!71159))

(declare-fun res!54173 () Bool)

(assert (=> d!30675 (=> (not res!54173) (not e!71159))))

(declare-fun lt!56325 () ListLongMap!1585)

(assert (=> d!30675 (= res!54173 (contains!834 lt!56325 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184))))))

(declare-fun lt!56327 () List!1625)

(assert (=> d!30675 (= lt!56325 (ListLongMap!1586 lt!56327))))

(declare-fun lt!56326 () Unit!3321)

(declare-fun lt!56328 () Unit!3321)

(assert (=> d!30675 (= lt!56326 lt!56328)))

(assert (=> d!30675 (= (getValueByKey!157 lt!56327 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184))) (Some!162 (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184))))))

(assert (=> d!30675 (= lt!56328 (lemmaContainsTupThenGetReturnValue!73 lt!56327 (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184))))))

(assert (=> d!30675 (= lt!56327 (insertStrictlySorted!76 (toList!808 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184))))))

(assert (=> d!30675 (= (+!148 (getCurrentListMap!493 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184)) lt!56325)))

(declare-fun b!109403 () Bool)

(declare-fun res!54174 () Bool)

(assert (=> b!109403 (=> (not res!54174) (not e!71159))))

(assert (=> b!109403 (= res!54174 (= (getValueByKey!157 (toList!808 lt!56325) (_1!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184))) (Some!162 (_2!1225 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184)))))))

(declare-fun b!109404 () Bool)

(assert (=> b!109404 (= e!71159 (contains!836 (toList!808 lt!56325) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184)))))

(assert (= (and d!30675 res!54173) b!109403))

(assert (= (and b!109403 res!54174) b!109404))

(declare-fun m!123993 () Bool)

(assert (=> d!30675 m!123993))

(declare-fun m!123995 () Bool)

(assert (=> d!30675 m!123995))

(declare-fun m!123997 () Bool)

(assert (=> d!30675 m!123997))

(declare-fun m!123999 () Bool)

(assert (=> d!30675 m!123999))

(declare-fun m!124001 () Bool)

(assert (=> b!109403 m!124001))

(declare-fun m!124003 () Bool)

(assert (=> b!109404 m!124003))

(assert (=> d!29857 d!30675))

(assert (=> d!29857 d!30057))

(declare-fun d!30677 () Bool)

(declare-fun e!71161 () Bool)

(assert (=> d!30677 e!71161))

(declare-fun res!54175 () Bool)

(assert (=> d!30677 (=> res!54175 e!71161)))

(declare-fun lt!56330 () Bool)

(assert (=> d!30677 (= res!54175 (not lt!56330))))

(declare-fun lt!56331 () Bool)

(assert (=> d!30677 (= lt!56330 lt!56331)))

(declare-fun lt!56329 () Unit!3321)

(declare-fun e!71160 () Unit!3321)

(assert (=> d!30677 (= lt!56329 e!71160)))

(declare-fun c!19345 () Bool)

(assert (=> d!30677 (= c!19345 lt!56331)))

(assert (=> d!30677 (= lt!56331 (containsKey!161 (toList!808 lt!55645) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30677 (= (contains!834 lt!55645 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56330)))

(declare-fun b!109405 () Bool)

(declare-fun lt!56332 () Unit!3321)

(assert (=> b!109405 (= e!71160 lt!56332)))

(assert (=> b!109405 (= lt!56332 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55645) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109405 (isDefined!110 (getValueByKey!157 (toList!808 lt!55645) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109406 () Bool)

(declare-fun Unit!3391 () Unit!3321)

(assert (=> b!109406 (= e!71160 Unit!3391)))

(declare-fun b!109407 () Bool)

(assert (=> b!109407 (= e!71161 (isDefined!110 (getValueByKey!157 (toList!808 lt!55645) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30677 c!19345) b!109405))

(assert (= (and d!30677 (not c!19345)) b!109406))

(assert (= (and d!30677 (not res!54175)) b!109407))

(declare-fun m!124005 () Bool)

(assert (=> d!30677 m!124005))

(declare-fun m!124007 () Bool)

(assert (=> b!109405 m!124007))

(declare-fun m!124009 () Bool)

(assert (=> b!109405 m!124009))

(assert (=> b!109405 m!124009))

(declare-fun m!124011 () Bool)

(assert (=> b!109405 m!124011))

(assert (=> b!109407 m!124009))

(assert (=> b!109407 m!124009))

(assert (=> b!109407 m!124011))

(assert (=> bm!11473 d!30677))

(assert (=> b!108301 d!30145))

(declare-fun lt!56333 () Bool)

(declare-fun d!30679 () Bool)

(assert (=> d!30679 (= lt!56333 (select (content!111 (toList!808 lt!55618)) (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun e!71163 () Bool)

(assert (=> d!30679 (= lt!56333 e!71163)))

(declare-fun res!54177 () Bool)

(assert (=> d!30679 (=> (not res!54177) (not e!71163))))

(assert (=> d!30679 (= res!54177 ((_ is Cons!1621) (toList!808 lt!55618)))))

(assert (=> d!30679 (= (contains!836 (toList!808 lt!55618) (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) lt!56333)))

(declare-fun b!109408 () Bool)

(declare-fun e!71162 () Bool)

(assert (=> b!109408 (= e!71163 e!71162)))

(declare-fun res!54176 () Bool)

(assert (=> b!109408 (=> res!54176 e!71162)))

(assert (=> b!109408 (= res!54176 (= (h!2219 (toList!808 lt!55618)) (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(declare-fun b!109409 () Bool)

(assert (=> b!109409 (= e!71162 (contains!836 (t!5741 (toList!808 lt!55618)) (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))

(assert (= (and d!30679 res!54177) b!109408))

(assert (= (and b!109408 (not res!54176)) b!109409))

(declare-fun m!124013 () Bool)

(assert (=> d!30679 m!124013))

(declare-fun m!124015 () Bool)

(assert (=> d!30679 m!124015))

(declare-fun m!124017 () Bool)

(assert (=> b!109409 m!124017))

(assert (=> b!108143 d!30679))

(declare-fun d!30681 () Bool)

(declare-fun lt!56334 () Bool)

(assert (=> d!30681 (= lt!56334 (select (content!111 (t!5741 (toList!808 lt!55272))) lt!55182))))

(declare-fun e!71165 () Bool)

(assert (=> d!30681 (= lt!56334 e!71165)))

(declare-fun res!54179 () Bool)

(assert (=> d!30681 (=> (not res!54179) (not e!71165))))

(assert (=> d!30681 (= res!54179 ((_ is Cons!1621) (t!5741 (toList!808 lt!55272))))))

(assert (=> d!30681 (= (contains!836 (t!5741 (toList!808 lt!55272)) lt!55182) lt!56334)))

(declare-fun b!109410 () Bool)

(declare-fun e!71164 () Bool)

(assert (=> b!109410 (= e!71165 e!71164)))

(declare-fun res!54178 () Bool)

(assert (=> b!109410 (=> res!54178 e!71164)))

(assert (=> b!109410 (= res!54178 (= (h!2219 (t!5741 (toList!808 lt!55272))) lt!55182))))

(declare-fun b!109411 () Bool)

(assert (=> b!109411 (= e!71164 (contains!836 (t!5741 (t!5741 (toList!808 lt!55272))) lt!55182))))

(assert (= (and d!30681 res!54179) b!109410))

(assert (= (and b!109410 (not res!54178)) b!109411))

(declare-fun m!124019 () Bool)

(assert (=> d!30681 m!124019))

(declare-fun m!124021 () Bool)

(assert (=> d!30681 m!124021))

(declare-fun m!124023 () Bool)

(assert (=> b!109411 m!124023))

(assert (=> b!108237 d!30681))

(declare-fun d!30683 () Bool)

(declare-fun e!71167 () Bool)

(assert (=> d!30683 e!71167))

(declare-fun res!54180 () Bool)

(assert (=> d!30683 (=> res!54180 e!71167)))

(declare-fun lt!56336 () Bool)

(assert (=> d!30683 (= res!54180 (not lt!56336))))

(declare-fun lt!56337 () Bool)

(assert (=> d!30683 (= lt!56336 lt!56337)))

(declare-fun lt!56335 () Unit!3321)

(declare-fun e!71166 () Unit!3321)

(assert (=> d!30683 (= lt!56335 e!71166)))

(declare-fun c!19346 () Bool)

(assert (=> d!30683 (= c!19346 lt!56337)))

(assert (=> d!30683 (= lt!56337 (containsKey!161 (toList!808 lt!55669) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> d!30683 (= (contains!834 lt!55669 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) lt!56336)))

(declare-fun b!109412 () Bool)

(declare-fun lt!56338 () Unit!3321)

(assert (=> b!109412 (= e!71166 lt!56338)))

(assert (=> b!109412 (= lt!56338 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55669) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (=> b!109412 (isDefined!110 (getValueByKey!157 (toList!808 lt!55669) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!109413 () Bool)

(declare-fun Unit!3392 () Unit!3321)

(assert (=> b!109413 (= e!71166 Unit!3392)))

(declare-fun b!109414 () Bool)

(assert (=> b!109414 (= e!71167 (isDefined!110 (getValueByKey!157 (toList!808 lt!55669) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (= (and d!30683 c!19346) b!109412))

(assert (= (and d!30683 (not c!19346)) b!109413))

(assert (= (and d!30683 (not res!54180)) b!109414))

(declare-fun m!124025 () Bool)

(assert (=> d!30683 m!124025))

(declare-fun m!124027 () Bool)

(assert (=> b!109412 m!124027))

(assert (=> b!109412 m!121765))

(assert (=> b!109412 m!121765))

(declare-fun m!124029 () Bool)

(assert (=> b!109412 m!124029))

(assert (=> b!109414 m!121765))

(assert (=> b!109414 m!121765))

(assert (=> b!109414 m!124029))

(assert (=> d!29959 d!30683))

(declare-fun c!19347 () Bool)

(declare-fun d!30685 () Bool)

(assert (=> d!30685 (= c!19347 (and ((_ is Cons!1621) lt!55671) (= (_1!1225 (h!2219 lt!55671)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun e!71168 () Option!163)

(assert (=> d!30685 (= (getValueByKey!157 lt!55671 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) e!71168)))

(declare-fun b!109416 () Bool)

(declare-fun e!71169 () Option!163)

(assert (=> b!109416 (= e!71168 e!71169)))

(declare-fun c!19348 () Bool)

(assert (=> b!109416 (= c!19348 (and ((_ is Cons!1621) lt!55671) (not (= (_1!1225 (h!2219 lt!55671)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun b!109417 () Bool)

(assert (=> b!109417 (= e!71169 (getValueByKey!157 (t!5741 lt!55671) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!109415 () Bool)

(assert (=> b!109415 (= e!71168 (Some!162 (_2!1225 (h!2219 lt!55671))))))

(declare-fun b!109418 () Bool)

(assert (=> b!109418 (= e!71169 None!161)))

(assert (= (and d!30685 c!19347) b!109415))

(assert (= (and d!30685 (not c!19347)) b!109416))

(assert (= (and b!109416 c!19348) b!109417))

(assert (= (and b!109416 (not c!19348)) b!109418))

(declare-fun m!124031 () Bool)

(assert (=> b!109417 m!124031))

(assert (=> d!29959 d!30685))

(declare-fun d!30687 () Bool)

(assert (=> d!30687 (= (getValueByKey!157 lt!55671 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) (Some!162 (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun lt!56339 () Unit!3321)

(assert (=> d!30687 (= lt!56339 (choose!672 lt!55671 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun e!71170 () Bool)

(assert (=> d!30687 e!71170))

(declare-fun res!54181 () Bool)

(assert (=> d!30687 (=> (not res!54181) (not e!71170))))

(assert (=> d!30687 (= res!54181 (isStrictlySorted!310 lt!55671))))

(assert (=> d!30687 (= (lemmaContainsTupThenGetReturnValue!73 lt!55671 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) lt!56339)))

(declare-fun b!109419 () Bool)

(declare-fun res!54182 () Bool)

(assert (=> b!109419 (=> (not res!54182) (not e!71170))))

(assert (=> b!109419 (= res!54182 (containsKey!161 lt!55671 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!109420 () Bool)

(assert (=> b!109420 (= e!71170 (contains!836 lt!55671 (tuple2!2429 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (= (and d!30687 res!54181) b!109419))

(assert (= (and b!109419 res!54182) b!109420))

(assert (=> d!30687 m!121759))

(declare-fun m!124033 () Bool)

(assert (=> d!30687 m!124033))

(declare-fun m!124035 () Bool)

(assert (=> d!30687 m!124035))

(declare-fun m!124037 () Bool)

(assert (=> b!109419 m!124037))

(declare-fun m!124039 () Bool)

(assert (=> b!109420 m!124039))

(assert (=> d!29959 d!30687))

(declare-fun b!109421 () Bool)

(declare-fun e!71174 () List!1625)

(declare-fun e!71172 () List!1625)

(assert (=> b!109421 (= e!71174 e!71172)))

(declare-fun c!19351 () Bool)

(assert (=> b!109421 (= c!19351 (and ((_ is Cons!1621) (toList!808 call!11433)) (= (_1!1225 (h!2219 (toList!808 call!11433))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun e!71171 () List!1625)

(declare-fun c!19350 () Bool)

(declare-fun call!11626 () List!1625)

(declare-fun bm!11622 () Bool)

(assert (=> bm!11622 (= call!11626 ($colon$colon!82 e!71171 (ite c!19350 (h!2219 (toList!808 call!11433)) (tuple2!2429 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun c!19349 () Bool)

(assert (=> bm!11622 (= c!19349 c!19350)))

(declare-fun b!109422 () Bool)

(assert (=> b!109422 (= e!71171 (insertStrictlySorted!76 (t!5741 (toList!808 call!11433)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!109423 () Bool)

(declare-fun c!19352 () Bool)

(assert (=> b!109423 (= e!71171 (ite c!19351 (t!5741 (toList!808 call!11433)) (ite c!19352 (Cons!1621 (h!2219 (toList!808 call!11433)) (t!5741 (toList!808 call!11433))) Nil!1622)))))

(declare-fun b!109424 () Bool)

(declare-fun e!71175 () List!1625)

(declare-fun call!11625 () List!1625)

(assert (=> b!109424 (= e!71175 call!11625)))

(declare-fun bm!11623 () Bool)

(declare-fun call!11627 () List!1625)

(assert (=> bm!11623 (= call!11625 call!11627)))

(declare-fun b!109425 () Bool)

(assert (=> b!109425 (= e!71174 call!11626)))

(declare-fun d!30689 () Bool)

(declare-fun e!71173 () Bool)

(assert (=> d!30689 e!71173))

(declare-fun res!54183 () Bool)

(assert (=> d!30689 (=> (not res!54183) (not e!71173))))

(declare-fun lt!56340 () List!1625)

(assert (=> d!30689 (= res!54183 (isStrictlySorted!310 lt!56340))))

(assert (=> d!30689 (= lt!56340 e!71174)))

(assert (=> d!30689 (= c!19350 (and ((_ is Cons!1621) (toList!808 call!11433)) (bvslt (_1!1225 (h!2219 (toList!808 call!11433))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (=> d!30689 (isStrictlySorted!310 (toList!808 call!11433))))

(assert (=> d!30689 (= (insertStrictlySorted!76 (toList!808 call!11433) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) lt!56340)))

(declare-fun b!109426 () Bool)

(assert (=> b!109426 (= e!71175 call!11625)))

(declare-fun bm!11624 () Bool)

(assert (=> bm!11624 (= call!11627 call!11626)))

(declare-fun b!109427 () Bool)

(assert (=> b!109427 (= c!19352 (and ((_ is Cons!1621) (toList!808 call!11433)) (bvsgt (_1!1225 (h!2219 (toList!808 call!11433))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (=> b!109427 (= e!71172 e!71175)))

(declare-fun b!109428 () Bool)

(assert (=> b!109428 (= e!71172 call!11627)))

(declare-fun b!109429 () Bool)

(declare-fun res!54184 () Bool)

(assert (=> b!109429 (=> (not res!54184) (not e!71173))))

(assert (=> b!109429 (= res!54184 (containsKey!161 lt!56340 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!109430 () Bool)

(assert (=> b!109430 (= e!71173 (contains!836 lt!56340 (tuple2!2429 (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) (_2!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(assert (= (and d!30689 c!19350) b!109425))

(assert (= (and d!30689 (not c!19350)) b!109421))

(assert (= (and b!109421 c!19351) b!109428))

(assert (= (and b!109421 (not c!19351)) b!109427))

(assert (= (and b!109427 c!19352) b!109426))

(assert (= (and b!109427 (not c!19352)) b!109424))

(assert (= (or b!109426 b!109424) bm!11623))

(assert (= (or b!109428 bm!11623) bm!11624))

(assert (= (or b!109425 bm!11624) bm!11622))

(assert (= (and bm!11622 c!19349) b!109422))

(assert (= (and bm!11622 (not c!19349)) b!109423))

(assert (= (and d!30689 res!54183) b!109429))

(assert (= (and b!109429 res!54184) b!109430))

(declare-fun m!124041 () Bool)

(assert (=> bm!11622 m!124041))

(declare-fun m!124043 () Bool)

(assert (=> b!109429 m!124043))

(declare-fun m!124045 () Bool)

(assert (=> b!109430 m!124045))

(declare-fun m!124047 () Bool)

(assert (=> d!30689 m!124047))

(declare-fun m!124049 () Bool)

(assert (=> d!30689 m!124049))

(declare-fun m!124051 () Bool)

(assert (=> b!109422 m!124051))

(assert (=> d!29959 d!30689))

(declare-fun b!109431 () Bool)

(declare-fun e!71179 () List!1625)

(declare-fun e!71177 () List!1625)

(assert (=> b!109431 (= e!71179 e!71177)))

(declare-fun c!19355 () Bool)

(assert (=> b!109431 (= c!19355 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55185))) (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55185)))) (_1!1225 lt!55183))))))

(declare-fun e!71176 () List!1625)

(declare-fun call!11629 () List!1625)

(declare-fun bm!11625 () Bool)

(declare-fun c!19354 () Bool)

(assert (=> bm!11625 (= call!11629 ($colon$colon!82 e!71176 (ite c!19354 (h!2219 (t!5741 (toList!808 lt!55185))) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183)))))))

(declare-fun c!19353 () Bool)

(assert (=> bm!11625 (= c!19353 c!19354)))

(declare-fun b!109432 () Bool)

(assert (=> b!109432 (= e!71176 (insertStrictlySorted!76 (t!5741 (t!5741 (toList!808 lt!55185))) (_1!1225 lt!55183) (_2!1225 lt!55183)))))

(declare-fun b!109433 () Bool)

(declare-fun c!19356 () Bool)

(assert (=> b!109433 (= e!71176 (ite c!19355 (t!5741 (t!5741 (toList!808 lt!55185))) (ite c!19356 (Cons!1621 (h!2219 (t!5741 (toList!808 lt!55185))) (t!5741 (t!5741 (toList!808 lt!55185)))) Nil!1622)))))

(declare-fun b!109434 () Bool)

(declare-fun e!71180 () List!1625)

(declare-fun call!11628 () List!1625)

(assert (=> b!109434 (= e!71180 call!11628)))

(declare-fun bm!11626 () Bool)

(declare-fun call!11630 () List!1625)

(assert (=> bm!11626 (= call!11628 call!11630)))

(declare-fun b!109435 () Bool)

(assert (=> b!109435 (= e!71179 call!11629)))

(declare-fun d!30691 () Bool)

(declare-fun e!71178 () Bool)

(assert (=> d!30691 e!71178))

(declare-fun res!54185 () Bool)

(assert (=> d!30691 (=> (not res!54185) (not e!71178))))

(declare-fun lt!56341 () List!1625)

(assert (=> d!30691 (= res!54185 (isStrictlySorted!310 lt!56341))))

(assert (=> d!30691 (= lt!56341 e!71179)))

(assert (=> d!30691 (= c!19354 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55185))) (bvslt (_1!1225 (h!2219 (t!5741 (toList!808 lt!55185)))) (_1!1225 lt!55183))))))

(assert (=> d!30691 (isStrictlySorted!310 (t!5741 (toList!808 lt!55185)))))

(assert (=> d!30691 (= (insertStrictlySorted!76 (t!5741 (toList!808 lt!55185)) (_1!1225 lt!55183) (_2!1225 lt!55183)) lt!56341)))

(declare-fun b!109436 () Bool)

(assert (=> b!109436 (= e!71180 call!11628)))

(declare-fun bm!11627 () Bool)

(assert (=> bm!11627 (= call!11630 call!11629)))

(declare-fun b!109437 () Bool)

(assert (=> b!109437 (= c!19356 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55185))) (bvsgt (_1!1225 (h!2219 (t!5741 (toList!808 lt!55185)))) (_1!1225 lt!55183))))))

(assert (=> b!109437 (= e!71177 e!71180)))

(declare-fun b!109438 () Bool)

(assert (=> b!109438 (= e!71177 call!11630)))

(declare-fun b!109439 () Bool)

(declare-fun res!54186 () Bool)

(assert (=> b!109439 (=> (not res!54186) (not e!71178))))

(assert (=> b!109439 (= res!54186 (containsKey!161 lt!56341 (_1!1225 lt!55183)))))

(declare-fun b!109440 () Bool)

(assert (=> b!109440 (= e!71178 (contains!836 lt!56341 (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))))))

(assert (= (and d!30691 c!19354) b!109435))

(assert (= (and d!30691 (not c!19354)) b!109431))

(assert (= (and b!109431 c!19355) b!109438))

(assert (= (and b!109431 (not c!19355)) b!109437))

(assert (= (and b!109437 c!19356) b!109436))

(assert (= (and b!109437 (not c!19356)) b!109434))

(assert (= (or b!109436 b!109434) bm!11626))

(assert (= (or b!109438 bm!11626) bm!11627))

(assert (= (or b!109435 bm!11627) bm!11625))

(assert (= (and bm!11625 c!19353) b!109432))

(assert (= (and bm!11625 (not c!19353)) b!109433))

(assert (= (and d!30691 res!54185) b!109439))

(assert (= (and b!109439 res!54186) b!109440))

(declare-fun m!124053 () Bool)

(assert (=> bm!11625 m!124053))

(declare-fun m!124055 () Bool)

(assert (=> b!109439 m!124055))

(declare-fun m!124057 () Bool)

(assert (=> b!109440 m!124057))

(declare-fun m!124059 () Bool)

(assert (=> d!30691 m!124059))

(assert (=> d!30691 m!122691))

(declare-fun m!124061 () Bool)

(assert (=> b!109432 m!124061))

(assert (=> b!108410 d!30691))

(declare-fun d!30693 () Bool)

(assert (=> d!30693 (= ($colon$colon!82 e!70428 (ite c!18996 (h!2219 (toList!808 (+!148 lt!55185 lt!55182))) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183)))) (Cons!1621 (ite c!18996 (h!2219 (toList!808 (+!148 lt!55185 lt!55182))) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))) e!70428))))

(assert (=> bm!11480 d!30693))

(declare-fun d!30695 () Bool)

(declare-fun c!19357 () Bool)

(assert (=> d!30695 (= c!19357 ((_ is Nil!1622) (toList!808 lt!55268)))))

(declare-fun e!71181 () (InoxSet tuple2!2428))

(assert (=> d!30695 (= (content!111 (toList!808 lt!55268)) e!71181)))

(declare-fun b!109441 () Bool)

(assert (=> b!109441 (= e!71181 ((as const (Array tuple2!2428 Bool)) false))))

(declare-fun b!109442 () Bool)

(assert (=> b!109442 (= e!71181 ((_ map or) (store ((as const (Array tuple2!2428 Bool)) false) (h!2219 (toList!808 lt!55268)) true) (content!111 (t!5741 (toList!808 lt!55268)))))))

(assert (= (and d!30695 c!19357) b!109441))

(assert (= (and d!30695 (not c!19357)) b!109442))

(declare-fun m!124063 () Bool)

(assert (=> b!109442 m!124063))

(assert (=> b!109442 m!122359))

(assert (=> d!29987 d!30695))

(declare-fun d!30697 () Bool)

(assert (=> d!30697 (= ($colon$colon!82 e!70359 (ite c!18976 (h!2219 (toList!808 lt!55185)) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182)))) (Cons!1621 (ite c!18976 (h!2219 (toList!808 lt!55185)) (tuple2!2429 (_1!1225 lt!55182) (_2!1225 lt!55182))) e!70359))))

(assert (=> bm!11469 d!30697))

(declare-fun d!30699 () Bool)

(declare-fun e!71183 () Bool)

(assert (=> d!30699 e!71183))

(declare-fun res!54187 () Bool)

(assert (=> d!30699 (=> res!54187 e!71183)))

(declare-fun lt!56343 () Bool)

(assert (=> d!30699 (= res!54187 (not lt!56343))))

(declare-fun lt!56344 () Bool)

(assert (=> d!30699 (= lt!56343 lt!56344)))

(declare-fun lt!56342 () Unit!3321)

(declare-fun e!71182 () Unit!3321)

(assert (=> d!30699 (= lt!56342 e!71182)))

(declare-fun c!19358 () Bool)

(assert (=> d!30699 (= c!19358 lt!56344)))

(assert (=> d!30699 (= lt!56344 (containsKey!161 (toList!808 lt!55747) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30699 (= (contains!834 lt!55747 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56343)))

(declare-fun b!109443 () Bool)

(declare-fun lt!56345 () Unit!3321)

(assert (=> b!109443 (= e!71182 lt!56345)))

(assert (=> b!109443 (= lt!56345 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55747) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109443 (isDefined!110 (getValueByKey!157 (toList!808 lt!55747) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109444 () Bool)

(declare-fun Unit!3393 () Unit!3321)

(assert (=> b!109444 (= e!71182 Unit!3393)))

(declare-fun b!109445 () Bool)

(assert (=> b!109445 (= e!71183 (isDefined!110 (getValueByKey!157 (toList!808 lt!55747) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30699 c!19358) b!109443))

(assert (= (and d!30699 (not c!19358)) b!109444))

(assert (= (and d!30699 (not res!54187)) b!109445))

(declare-fun m!124065 () Bool)

(assert (=> d!30699 m!124065))

(declare-fun m!124067 () Bool)

(assert (=> b!109443 m!124067))

(declare-fun m!124069 () Bool)

(assert (=> b!109443 m!124069))

(assert (=> b!109443 m!124069))

(declare-fun m!124071 () Bool)

(assert (=> b!109443 m!124071))

(assert (=> b!109445 m!124069))

(assert (=> b!109445 m!124069))

(assert (=> b!109445 m!124071))

(assert (=> bm!11506 d!30699))

(declare-fun d!30701 () Bool)

(declare-fun e!71185 () Bool)

(assert (=> d!30701 e!71185))

(declare-fun res!54188 () Bool)

(assert (=> d!30701 (=> res!54188 e!71185)))

(declare-fun lt!56347 () Bool)

(assert (=> d!30701 (= res!54188 (not lt!56347))))

(declare-fun lt!56348 () Bool)

(assert (=> d!30701 (= lt!56347 lt!56348)))

(declare-fun lt!56346 () Unit!3321)

(declare-fun e!71184 () Unit!3321)

(assert (=> d!30701 (= lt!56346 e!71184)))

(declare-fun c!19359 () Bool)

(assert (=> d!30701 (= c!19359 lt!56348)))

(assert (=> d!30701 (= lt!56348 (containsKey!161 (toList!808 lt!55683) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30701 (= (contains!834 lt!55683 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56347)))

(declare-fun b!109446 () Bool)

(declare-fun lt!56349 () Unit!3321)

(assert (=> b!109446 (= e!71184 lt!56349)))

(assert (=> b!109446 (= lt!56349 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55683) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109446 (isDefined!110 (getValueByKey!157 (toList!808 lt!55683) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109447 () Bool)

(declare-fun Unit!3394 () Unit!3321)

(assert (=> b!109447 (= e!71184 Unit!3394)))

(declare-fun b!109448 () Bool)

(assert (=> b!109448 (= e!71185 (isDefined!110 (getValueByKey!157 (toList!808 lt!55683) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30701 c!19359) b!109446))

(assert (= (and d!30701 (not c!19359)) b!109447))

(assert (= (and d!30701 (not res!54188)) b!109448))

(declare-fun m!124073 () Bool)

(assert (=> d!30701 m!124073))

(declare-fun m!124075 () Bool)

(assert (=> b!109446 m!124075))

(declare-fun m!124077 () Bool)

(assert (=> b!109446 m!124077))

(assert (=> b!109446 m!124077))

(declare-fun m!124079 () Bool)

(assert (=> b!109446 m!124079))

(assert (=> b!109448 m!124077))

(assert (=> b!109448 m!124077))

(assert (=> b!109448 m!124079))

(assert (=> d!29977 d!30701))

(assert (=> d!29977 d!29817))

(declare-fun d!30703 () Bool)

(declare-fun res!54189 () Bool)

(declare-fun e!71186 () Bool)

(assert (=> d!30703 (=> res!54189 e!71186)))

(assert (=> d!30703 (= res!54189 (and ((_ is Cons!1621) (toList!808 lt!55326)) (= (_1!1225 (h!2219 (toList!808 lt!55326))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30703 (= (containsKey!161 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000) e!71186)))

(declare-fun b!109449 () Bool)

(declare-fun e!71187 () Bool)

(assert (=> b!109449 (= e!71186 e!71187)))

(declare-fun res!54190 () Bool)

(assert (=> b!109449 (=> (not res!54190) (not e!71187))))

(assert (=> b!109449 (= res!54190 (and (or (not ((_ is Cons!1621) (toList!808 lt!55326))) (bvsle (_1!1225 (h!2219 (toList!808 lt!55326))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1621) (toList!808 lt!55326)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55326))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109450 () Bool)

(assert (=> b!109450 (= e!71187 (containsKey!161 (t!5741 (toList!808 lt!55326)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30703 (not res!54189)) b!109449))

(assert (= (and b!109449 res!54190) b!109450))

(declare-fun m!124081 () Bool)

(assert (=> b!109450 m!124081))

(assert (=> d!30013 d!30703))

(declare-fun d!30705 () Bool)

(declare-fun res!54191 () Bool)

(declare-fun e!71188 () Bool)

(assert (=> d!30705 (=> res!54191 e!71188)))

(assert (=> d!30705 (= res!54191 (or ((_ is Nil!1622) lt!55682) ((_ is Nil!1622) (t!5741 lt!55682))))))

(assert (=> d!30705 (= (isStrictlySorted!310 lt!55682) e!71188)))

(declare-fun b!109451 () Bool)

(declare-fun e!71189 () Bool)

(assert (=> b!109451 (= e!71188 e!71189)))

(declare-fun res!54192 () Bool)

(assert (=> b!109451 (=> (not res!54192) (not e!71189))))

(assert (=> b!109451 (= res!54192 (bvslt (_1!1225 (h!2219 lt!55682)) (_1!1225 (h!2219 (t!5741 lt!55682)))))))

(declare-fun b!109452 () Bool)

(assert (=> b!109452 (= e!71189 (isStrictlySorted!310 (t!5741 lt!55682)))))

(assert (= (and d!30705 (not res!54191)) b!109451))

(assert (= (and b!109451 res!54192) b!109452))

(declare-fun m!124083 () Bool)

(assert (=> b!109452 m!124083))

(assert (=> d!29975 d!30705))

(declare-fun d!30707 () Bool)

(declare-fun res!54193 () Bool)

(declare-fun e!71190 () Bool)

(assert (=> d!30707 (=> res!54193 e!71190)))

(assert (=> d!30707 (= res!54193 (or ((_ is Nil!1622) (toList!808 (+!148 lt!55185 lt!55182))) ((_ is Nil!1622) (t!5741 (toList!808 (+!148 lt!55185 lt!55182))))))))

(assert (=> d!30707 (= (isStrictlySorted!310 (toList!808 (+!148 lt!55185 lt!55182))) e!71190)))

(declare-fun b!109453 () Bool)

(declare-fun e!71191 () Bool)

(assert (=> b!109453 (= e!71190 e!71191)))

(declare-fun res!54194 () Bool)

(assert (=> b!109453 (=> (not res!54194) (not e!71191))))

(assert (=> b!109453 (= res!54194 (bvslt (_1!1225 (h!2219 (toList!808 (+!148 lt!55185 lt!55182)))) (_1!1225 (h!2219 (t!5741 (toList!808 (+!148 lt!55185 lt!55182)))))))))

(declare-fun b!109454 () Bool)

(assert (=> b!109454 (= e!71191 (isStrictlySorted!310 (t!5741 (toList!808 (+!148 lt!55185 lt!55182)))))))

(assert (= (and d!30707 (not res!54193)) b!109453))

(assert (= (and b!109453 res!54194) b!109454))

(assert (=> b!109454 m!123755))

(assert (=> d!29975 d!30707))

(declare-fun d!30709 () Bool)

(declare-fun c!19360 () Bool)

(assert (=> d!30709 (= c!19360 (and ((_ is Cons!1621) (t!5741 lt!55274)) (= (_1!1225 (h!2219 (t!5741 lt!55274))) (_1!1225 lt!55182))))))

(declare-fun e!71192 () Option!163)

(assert (=> d!30709 (= (getValueByKey!157 (t!5741 lt!55274) (_1!1225 lt!55182)) e!71192)))

(declare-fun b!109456 () Bool)

(declare-fun e!71193 () Option!163)

(assert (=> b!109456 (= e!71192 e!71193)))

(declare-fun c!19361 () Bool)

(assert (=> b!109456 (= c!19361 (and ((_ is Cons!1621) (t!5741 lt!55274)) (not (= (_1!1225 (h!2219 (t!5741 lt!55274))) (_1!1225 lt!55182)))))))

(declare-fun b!109457 () Bool)

(assert (=> b!109457 (= e!71193 (getValueByKey!157 (t!5741 (t!5741 lt!55274)) (_1!1225 lt!55182)))))

(declare-fun b!109455 () Bool)

(assert (=> b!109455 (= e!71192 (Some!162 (_2!1225 (h!2219 (t!5741 lt!55274)))))))

(declare-fun b!109458 () Bool)

(assert (=> b!109458 (= e!71193 None!161)))

(assert (= (and d!30709 c!19360) b!109455))

(assert (= (and d!30709 (not c!19360)) b!109456))

(assert (= (and b!109456 c!19361) b!109457))

(assert (= (and b!109456 (not c!19361)) b!109458))

(declare-fun m!124085 () Bool)

(assert (=> b!109457 m!124085))

(assert (=> b!108384 d!30709))

(assert (=> b!108327 d!30145))

(declare-fun d!30711 () Bool)

(declare-fun c!19362 () Bool)

(assert (=> d!30711 (= c!19362 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55268))) (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55268)))) (_1!1225 lt!55182))))))

(declare-fun e!71194 () Option!163)

(assert (=> d!30711 (= (getValueByKey!157 (t!5741 (toList!808 lt!55268)) (_1!1225 lt!55182)) e!71194)))

(declare-fun b!109460 () Bool)

(declare-fun e!71195 () Option!163)

(assert (=> b!109460 (= e!71194 e!71195)))

(declare-fun c!19363 () Bool)

(assert (=> b!109460 (= c!19363 (and ((_ is Cons!1621) (t!5741 (toList!808 lt!55268))) (not (= (_1!1225 (h!2219 (t!5741 (toList!808 lt!55268)))) (_1!1225 lt!55182)))))))

(declare-fun b!109461 () Bool)

(assert (=> b!109461 (= e!71195 (getValueByKey!157 (t!5741 (t!5741 (toList!808 lt!55268))) (_1!1225 lt!55182)))))

(declare-fun b!109459 () Bool)

(assert (=> b!109459 (= e!71194 (Some!162 (_2!1225 (h!2219 (t!5741 (toList!808 lt!55268))))))))

(declare-fun b!109462 () Bool)

(assert (=> b!109462 (= e!71195 None!161)))

(assert (= (and d!30711 c!19362) b!109459))

(assert (= (and d!30711 (not c!19362)) b!109460))

(assert (= (and b!109460 c!19363) b!109461))

(assert (= (and b!109460 (not c!19363)) b!109462))

(declare-fun m!124087 () Bool)

(assert (=> b!109461 m!124087))

(assert (=> b!108424 d!30711))

(declare-fun d!30713 () Bool)

(declare-fun lt!56350 () Bool)

(assert (=> d!30713 (= lt!56350 (select (content!111 (toList!808 lt!55669)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(declare-fun e!71197 () Bool)

(assert (=> d!30713 (= lt!56350 e!71197)))

(declare-fun res!54196 () Bool)

(assert (=> d!30713 (=> (not res!54196) (not e!71197))))

(assert (=> d!30713 (= res!54196 ((_ is Cons!1621) (toList!808 lt!55669)))))

(assert (=> d!30713 (= (contains!836 (toList!808 lt!55669) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)) lt!56350)))

(declare-fun b!109463 () Bool)

(declare-fun e!71196 () Bool)

(assert (=> b!109463 (= e!71197 e!71196)))

(declare-fun res!54195 () Bool)

(assert (=> b!109463 (=> res!54195 e!71196)))

(assert (=> b!109463 (= res!54195 (= (h!2219 (toList!808 lt!55669)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(declare-fun b!109464 () Bool)

(assert (=> b!109464 (= e!71196 (contains!836 (t!5741 (toList!808 lt!55669)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))

(assert (= (and d!30713 res!54196) b!109463))

(assert (= (and b!109463 (not res!54195)) b!109464))

(declare-fun m!124089 () Bool)

(assert (=> d!30713 m!124089))

(declare-fun m!124091 () Bool)

(assert (=> d!30713 m!124091))

(declare-fun m!124093 () Bool)

(assert (=> b!109464 m!124093))

(assert (=> b!108189 d!30713))

(declare-fun d!30715 () Bool)

(declare-fun res!54197 () Bool)

(declare-fun e!71198 () Bool)

(assert (=> d!30715 (=> res!54197 e!71198)))

(assert (=> d!30715 (= res!54197 (and ((_ is Cons!1621) lt!55798) (= (_1!1225 (h!2219 lt!55798)) (_1!1225 lt!55183))))))

(assert (=> d!30715 (= (containsKey!161 lt!55798 (_1!1225 lt!55183)) e!71198)))

(declare-fun b!109465 () Bool)

(declare-fun e!71199 () Bool)

(assert (=> b!109465 (= e!71198 e!71199)))

(declare-fun res!54198 () Bool)

(assert (=> b!109465 (=> (not res!54198) (not e!71199))))

(assert (=> b!109465 (= res!54198 (and (or (not ((_ is Cons!1621) lt!55798)) (bvsle (_1!1225 (h!2219 lt!55798)) (_1!1225 lt!55183))) ((_ is Cons!1621) lt!55798) (bvslt (_1!1225 (h!2219 lt!55798)) (_1!1225 lt!55183))))))

(declare-fun b!109466 () Bool)

(assert (=> b!109466 (= e!71199 (containsKey!161 (t!5741 lt!55798) (_1!1225 lt!55183)))))

(assert (= (and d!30715 (not res!54197)) b!109465))

(assert (= (and b!109465 res!54198) b!109466))

(declare-fun m!124095 () Bool)

(assert (=> b!109466 m!124095))

(assert (=> b!108417 d!30715))

(declare-fun d!30717 () Bool)

(assert (=> d!30717 (= (get!1344 (getValueByKey!157 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2918 (getValueByKey!157 (toList!808 lt!55326) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30005 d!30717))

(assert (=> d!30005 d!30127))

(assert (=> bm!11483 d!30633))

(declare-fun d!30719 () Bool)

(declare-fun res!54199 () Bool)

(declare-fun e!71200 () Bool)

(assert (=> d!30719 (=> res!54199 e!71200)))

(assert (=> d!30719 (= res!54199 (and ((_ is Cons!1621) (toList!808 lt!55268)) (= (_1!1225 (h!2219 (toList!808 lt!55268))) (_1!1225 lt!55182))))))

(assert (=> d!30719 (= (containsKey!161 (toList!808 lt!55268) (_1!1225 lt!55182)) e!71200)))

(declare-fun b!109467 () Bool)

(declare-fun e!71201 () Bool)

(assert (=> b!109467 (= e!71200 e!71201)))

(declare-fun res!54200 () Bool)

(assert (=> b!109467 (=> (not res!54200) (not e!71201))))

(assert (=> b!109467 (= res!54200 (and (or (not ((_ is Cons!1621) (toList!808 lt!55268))) (bvsle (_1!1225 (h!2219 (toList!808 lt!55268))) (_1!1225 lt!55182))) ((_ is Cons!1621) (toList!808 lt!55268)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55268))) (_1!1225 lt!55182))))))

(declare-fun b!109468 () Bool)

(assert (=> b!109468 (= e!71201 (containsKey!161 (t!5741 (toList!808 lt!55268)) (_1!1225 lt!55182)))))

(assert (= (and d!30719 (not res!54199)) b!109467))

(assert (= (and b!109467 res!54200) b!109468))

(declare-fun m!124097 () Bool)

(assert (=> b!109468 m!124097))

(assert (=> d!29883 d!30719))

(assert (=> d!29973 d!29971))

(declare-fun d!30721 () Bool)

(assert (=> d!30721 (= (getValueByKey!157 lt!55242 (_1!1225 lt!55183)) (Some!162 (_2!1225 lt!55183)))))

(assert (=> d!30721 true))

(declare-fun _$22!441 () Unit!3321)

(assert (=> d!30721 (= (choose!672 lt!55242 (_1!1225 lt!55183) (_2!1225 lt!55183)) _$22!441)))

(declare-fun bs!4511 () Bool)

(assert (= bs!4511 d!30721))

(assert (=> bs!4511 m!121103))

(assert (=> d!29973 d!30721))

(declare-fun d!30723 () Bool)

(declare-fun res!54201 () Bool)

(declare-fun e!71202 () Bool)

(assert (=> d!30723 (=> res!54201 e!71202)))

(assert (=> d!30723 (= res!54201 (or ((_ is Nil!1622) lt!55242) ((_ is Nil!1622) (t!5741 lt!55242))))))

(assert (=> d!30723 (= (isStrictlySorted!310 lt!55242) e!71202)))

(declare-fun b!109469 () Bool)

(declare-fun e!71203 () Bool)

(assert (=> b!109469 (= e!71202 e!71203)))

(declare-fun res!54202 () Bool)

(assert (=> b!109469 (=> (not res!54202) (not e!71203))))

(assert (=> b!109469 (= res!54202 (bvslt (_1!1225 (h!2219 lt!55242)) (_1!1225 (h!2219 (t!5741 lt!55242)))))))

(declare-fun b!109470 () Bool)

(assert (=> b!109470 (= e!71203 (isStrictlySorted!310 (t!5741 lt!55242)))))

(assert (= (and d!30723 (not res!54201)) b!109469))

(assert (= (and b!109469 res!54202) b!109470))

(declare-fun m!124099 () Bool)

(assert (=> b!109470 m!124099))

(assert (=> d!29973 d!30723))

(declare-fun d!30725 () Bool)

(declare-fun res!54203 () Bool)

(declare-fun e!71204 () Bool)

(assert (=> d!30725 (=> res!54203 e!71204)))

(assert (=> d!30725 (= res!54203 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))) lt!55335)))))

(assert (=> d!30725 (= (containsKey!161 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55335) e!71204)))

(declare-fun b!109471 () Bool)

(declare-fun e!71205 () Bool)

(assert (=> b!109471 (= e!71204 e!71205)))

(declare-fun res!54204 () Bool)

(assert (=> b!109471 (=> (not res!54204) (not e!71205))))

(assert (=> b!109471 (= res!54204 (and (or (not ((_ is Cons!1621) (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))) (bvsle (_1!1225 (h!2219 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))) lt!55335)) ((_ is Cons!1621) (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) (bvslt (_1!1225 (h!2219 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))) lt!55335)))))

(declare-fun b!109472 () Bool)

(assert (=> b!109472 (= e!71205 (containsKey!161 (t!5741 (toList!808 (+!148 lt!55320 (tuple2!2429 lt!55338 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))) lt!55335))))

(assert (= (and d!30725 (not res!54203)) b!109471))

(assert (= (and b!109471 res!54204) b!109472))

(declare-fun m!124101 () Bool)

(assert (=> b!109472 m!124101))

(assert (=> d!29911 d!30725))

(declare-fun d!30727 () Bool)

(assert (=> d!30727 (isDefined!110 (getValueByKey!157 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!56351 () Unit!3321)

(assert (=> d!30727 (= lt!56351 (choose!677 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71206 () Bool)

(assert (=> d!30727 e!71206))

(declare-fun res!54205 () Bool)

(assert (=> d!30727 (=> (not res!54205) (not e!71206))))

(assert (=> d!30727 (= res!54205 (isStrictlySorted!310 (toList!808 lt!55326)))))

(assert (=> d!30727 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000) lt!56351)))

(declare-fun b!109473 () Bool)

(assert (=> b!109473 (= e!71206 (containsKey!161 (toList!808 lt!55326) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30727 res!54205) b!109473))

(assert (=> d!30727 m!122021))

(assert (=> d!30727 m!122021))

(assert (=> d!30727 m!122023))

(declare-fun m!124103 () Bool)

(assert (=> d!30727 m!124103))

(assert (=> d!30727 m!122843))

(assert (=> b!109473 m!122017))

(assert (=> b!108347 d!30727))

(assert (=> b!108347 d!30529))

(assert (=> b!108347 d!30307))

(declare-fun d!30729 () Bool)

(declare-fun e!71208 () Bool)

(assert (=> d!30729 e!71208))

(declare-fun res!54206 () Bool)

(assert (=> d!30729 (=> res!54206 e!71208)))

(declare-fun lt!56353 () Bool)

(assert (=> d!30729 (= res!54206 (not lt!56353))))

(declare-fun lt!56354 () Bool)

(assert (=> d!30729 (= lt!56353 lt!56354)))

(declare-fun lt!56352 () Unit!3321)

(declare-fun e!71207 () Unit!3321)

(assert (=> d!30729 (= lt!56352 e!71207)))

(declare-fun c!19364 () Bool)

(assert (=> d!30729 (= c!19364 lt!56354)))

(assert (=> d!30729 (= lt!56354 (containsKey!161 (toList!808 lt!55720) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30729 (= (contains!834 lt!55720 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56353)))

(declare-fun b!109474 () Bool)

(declare-fun lt!56355 () Unit!3321)

(assert (=> b!109474 (= e!71207 lt!56355)))

(assert (=> b!109474 (= lt!56355 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55720) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109474 (isDefined!110 (getValueByKey!157 (toList!808 lt!55720) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109475 () Bool)

(declare-fun Unit!3395 () Unit!3321)

(assert (=> b!109475 (= e!71207 Unit!3395)))

(declare-fun b!109476 () Bool)

(assert (=> b!109476 (= e!71208 (isDefined!110 (getValueByKey!157 (toList!808 lt!55720) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30729 c!19364) b!109474))

(assert (= (and d!30729 (not c!19364)) b!109475))

(assert (= (and d!30729 (not res!54206)) b!109476))

(declare-fun m!124105 () Bool)

(assert (=> d!30729 m!124105))

(declare-fun m!124107 () Bool)

(assert (=> b!109474 m!124107))

(declare-fun m!124109 () Bool)

(assert (=> b!109474 m!124109))

(assert (=> b!109474 m!124109))

(declare-fun m!124111 () Bool)

(assert (=> b!109474 m!124111))

(assert (=> b!109476 m!124109))

(assert (=> b!109476 m!124109))

(assert (=> b!109476 m!124111))

(assert (=> bm!11499 d!30729))

(declare-fun d!30731 () Bool)

(declare-fun res!54208 () Bool)

(declare-fun e!71209 () Bool)

(assert (=> d!30731 (=> (not res!54208) (not e!71209))))

(assert (=> d!30731 (= res!54208 (validMask!0 (mask!6764 (v!2914 (underlying!367 thiss!992)))))))

(assert (=> d!30731 (= (simpleValid!75 (v!2914 (underlying!367 thiss!992))) e!71209)))

(declare-fun b!109479 () Bool)

(declare-fun res!54210 () Bool)

(assert (=> b!109479 (=> (not res!54210) (not e!71209))))

(assert (=> b!109479 (= res!54210 (= (size!2335 (v!2914 (underlying!367 thiss!992))) (bvadd (_size!505 (v!2914 (underlying!367 thiss!992))) (bvsdiv (bvadd (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!109478 () Bool)

(declare-fun res!54209 () Bool)

(assert (=> b!109478 (=> (not res!54209) (not e!71209))))

(assert (=> b!109478 (= res!54209 (bvsge (size!2335 (v!2914 (underlying!367 thiss!992))) (_size!505 (v!2914 (underlying!367 thiss!992)))))))

(declare-fun b!109480 () Bool)

(assert (=> b!109480 (= e!71209 (and (bvsge (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2407 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!505 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!109477 () Bool)

(declare-fun res!54207 () Bool)

(assert (=> b!109477 (=> (not res!54207) (not e!71209))))

(assert (=> b!109477 (= res!54207 (and (= (size!2332 (_values!2589 (v!2914 (underlying!367 thiss!992)))) (bvadd (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001)) (= (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (size!2332 (_values!2589 (v!2914 (underlying!367 thiss!992))))) (bvsge (_size!505 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!505 (v!2914 (underlying!367 thiss!992))) (bvadd (mask!6764 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000001))))))

(assert (= (and d!30731 res!54208) b!109477))

(assert (= (and b!109477 res!54207) b!109478))

(assert (= (and b!109478 res!54209) b!109479))

(assert (= (and b!109479 res!54210) b!109480))

(assert (=> d!30731 m!120987))

(declare-fun m!124113 () Bool)

(assert (=> b!109479 m!124113))

(assert (=> b!109478 m!124113))

(assert (=> d!29881 d!30731))

(declare-fun d!30733 () Bool)

(declare-fun e!71211 () Bool)

(assert (=> d!30733 e!71211))

(declare-fun res!54211 () Bool)

(assert (=> d!30733 (=> res!54211 e!71211)))

(declare-fun lt!56357 () Bool)

(assert (=> d!30733 (= res!54211 (not lt!56357))))

(declare-fun lt!56358 () Bool)

(assert (=> d!30733 (= lt!56357 lt!56358)))

(declare-fun lt!56356 () Unit!3321)

(declare-fun e!71210 () Unit!3321)

(assert (=> d!30733 (= lt!56356 e!71210)))

(declare-fun c!19365 () Bool)

(assert (=> d!30733 (= c!19365 lt!56358)))

(assert (=> d!30733 (= lt!56358 (containsKey!161 (toList!808 lt!55645) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30733 (= (contains!834 lt!55645 (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) lt!56357)))

(declare-fun b!109481 () Bool)

(declare-fun lt!56359 () Unit!3321)

(assert (=> b!109481 (= e!71210 lt!56359)))

(assert (=> b!109481 (= lt!56359 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55645) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109481 (isDefined!110 (getValueByKey!157 (toList!808 lt!55645) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109482 () Bool)

(declare-fun Unit!3396 () Unit!3321)

(assert (=> b!109482 (= e!71210 Unit!3396)))

(declare-fun b!109483 () Bool)

(assert (=> b!109483 (= e!71211 (isDefined!110 (getValueByKey!157 (toList!808 lt!55645) (select (arr!2075 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!30733 c!19365) b!109481))

(assert (= (and d!30733 (not c!19365)) b!109482))

(assert (= (and d!30733 (not res!54211)) b!109483))

(assert (=> d!30733 m!121333))

(declare-fun m!124115 () Bool)

(assert (=> d!30733 m!124115))

(assert (=> b!109481 m!121333))

(declare-fun m!124117 () Bool)

(assert (=> b!109481 m!124117))

(assert (=> b!109481 m!121333))

(assert (=> b!109481 m!122575))

(assert (=> b!109481 m!122575))

(declare-fun m!124119 () Bool)

(assert (=> b!109481 m!124119))

(assert (=> b!109483 m!121333))

(assert (=> b!109483 m!122575))

(assert (=> b!109483 m!122575))

(assert (=> b!109483 m!124119))

(assert (=> b!108175 d!30733))

(assert (=> d!29985 d!30015))

(declare-fun b!109500 () Bool)

(declare-fun e!71220 () Bool)

(declare-fun lt!56362 () SeekEntryResult!260)

(assert (=> b!109500 (= e!71220 ((_ is Undefined!260) lt!56362))))

(declare-fun b!109501 () Bool)

(declare-fun e!71222 () Bool)

(declare-fun call!11636 () Bool)

(assert (=> b!109501 (= e!71222 (not call!11636))))

(declare-fun b!109503 () Bool)

(declare-fun res!54223 () Bool)

(assert (=> b!109503 (=> (not res!54223) (not e!71222))))

(declare-fun call!11635 () Bool)

(assert (=> b!109503 (= res!54223 call!11635)))

(assert (=> b!109503 (= e!71220 e!71222)))

(declare-fun b!109504 () Bool)

(declare-fun e!71221 () Bool)

(assert (=> b!109504 (= e!71221 (not call!11636))))

(declare-fun bm!11632 () Bool)

(assert (=> bm!11632 (= call!11636 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun c!19370 () Bool)

(declare-fun bm!11633 () Bool)

(assert (=> bm!11633 (= call!11635 (inRange!0 (ite c!19370 (index!3189 lt!56362) (index!3192 lt!56362)) (mask!6764 newMap!16)))))

(declare-fun b!109505 () Bool)

(declare-fun e!71223 () Bool)

(assert (=> b!109505 (= e!71223 e!71220)))

(declare-fun c!19371 () Bool)

(assert (=> b!109505 (= c!19371 ((_ is MissingVacant!260) lt!56362))))

(declare-fun b!109502 () Bool)

(declare-fun res!54221 () Bool)

(assert (=> b!109502 (= res!54221 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3189 lt!56362)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109502 (=> (not res!54221) (not e!71221))))

(declare-fun d!30735 () Bool)

(assert (=> d!30735 e!71223))

(assert (=> d!30735 (= c!19370 ((_ is MissingZero!260) lt!56362))))

(assert (=> d!30735 (= lt!56362 (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(assert (=> d!30735 true))

(declare-fun _$34!900 () Unit!3321)

(assert (=> d!30735 (= (choose!678 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)) _$34!900)))

(declare-fun b!109506 () Bool)

(declare-fun res!54222 () Bool)

(assert (=> b!109506 (=> (not res!54222) (not e!71222))))

(assert (=> b!109506 (= res!54222 (= (select (arr!2075 (_keys!4316 newMap!16)) (index!3192 lt!56362)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109507 () Bool)

(assert (=> b!109507 (= e!71223 e!71221)))

(declare-fun res!54220 () Bool)

(assert (=> b!109507 (= res!54220 call!11635)))

(assert (=> b!109507 (=> (not res!54220) (not e!71221))))

(assert (= (and d!30735 c!19370) b!109507))

(assert (= (and d!30735 (not c!19370)) b!109505))

(assert (= (and b!109507 res!54220) b!109502))

(assert (= (and b!109502 res!54221) b!109504))

(assert (= (and b!109505 c!19371) b!109503))

(assert (= (and b!109505 (not c!19371)) b!109500))

(assert (= (and b!109503 res!54223) b!109506))

(assert (= (and b!109506 res!54222) b!109501))

(assert (= (or b!109507 b!109503) bm!11633))

(assert (= (or b!109504 b!109501) bm!11632))

(assert (=> bm!11632 m!120979))

(assert (=> bm!11632 m!121241))

(assert (=> d!30735 m!120979))

(assert (=> d!30735 m!121239))

(declare-fun m!124121 () Bool)

(assert (=> b!109506 m!124121))

(declare-fun m!124123 () Bool)

(assert (=> bm!11633 m!124123))

(declare-fun m!124125 () Bool)

(assert (=> b!109502 m!124125))

(assert (=> d!29985 d!30735))

(assert (=> d!29985 d!30057))

(assert (=> b!108299 d!30145))

(declare-fun d!30737 () Bool)

(assert (=> d!30737 (= (get!1344 (getValueByKey!157 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2918 (getValueByKey!157 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29947 d!30737))

(assert (=> d!29947 d!30591))

(declare-fun bm!11634 () Bool)

(declare-fun call!11637 () (_ BitVec 32))

(assert (=> bm!11634 (= call!11637 (arrayCountValidKeys!0 (_keys!4316 (_2!1226 lt!55419)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2331 (_keys!4316 (_2!1226 lt!55419)))))))

(declare-fun b!109508 () Bool)

(declare-fun e!71224 () (_ BitVec 32))

(declare-fun e!71225 () (_ BitVec 32))

(assert (=> b!109508 (= e!71224 e!71225)))

(declare-fun c!19373 () Bool)

(assert (=> b!109508 (= c!19373 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000)))))

(declare-fun b!109509 () Bool)

(assert (=> b!109509 (= e!71225 (bvadd #b00000000000000000000000000000001 call!11637))))

(declare-fun d!30739 () Bool)

(declare-fun lt!56363 () (_ BitVec 32))

(assert (=> d!30739 (and (bvsge lt!56363 #b00000000000000000000000000000000) (bvsle lt!56363 (bvsub (size!2331 (_keys!4316 (_2!1226 lt!55419))) #b00000000000000000000000000000000)))))

(assert (=> d!30739 (= lt!56363 e!71224)))

(declare-fun c!19372 () Bool)

(assert (=> d!30739 (= c!19372 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55419)))))))

(assert (=> d!30739 (and (bvsle #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55419)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2331 (_keys!4316 (_2!1226 lt!55419))) (size!2331 (_keys!4316 (_2!1226 lt!55419)))))))

(assert (=> d!30739 (= (arrayCountValidKeys!0 (_keys!4316 (_2!1226 lt!55419)) #b00000000000000000000000000000000 (size!2331 (_keys!4316 (_2!1226 lt!55419)))) lt!56363)))

(declare-fun b!109510 () Bool)

(assert (=> b!109510 (= e!71224 #b00000000000000000000000000000000)))

(declare-fun b!109511 () Bool)

(assert (=> b!109511 (= e!71225 call!11637)))

(assert (= (and d!30739 c!19372) b!109510))

(assert (= (and d!30739 (not c!19372)) b!109508))

(assert (= (and b!109508 c!19373) b!109509))

(assert (= (and b!109508 (not c!19373)) b!109511))

(assert (= (or b!109509 b!109511) bm!11634))

(declare-fun m!124127 () Bool)

(assert (=> bm!11634 m!124127))

(assert (=> b!109508 m!123281))

(assert (=> b!109508 m!123281))

(assert (=> b!109508 m!123287))

(assert (=> b!108290 d!30739))

(declare-fun d!30741 () Bool)

(assert (=> d!30741 (= (inRange!0 (ite c!18958 (index!3190 lt!55549) (ite c!18957 (index!3189 lt!55523) (index!3192 lt!55523))) (mask!6764 newMap!16)) (and (bvsge (ite c!18958 (index!3190 lt!55549) (ite c!18957 (index!3189 lt!55523) (index!3192 lt!55523))) #b00000000000000000000000000000000) (bvslt (ite c!18958 (index!3190 lt!55549) (ite c!18957 (index!3189 lt!55523) (index!3192 lt!55523))) (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11459 d!30741))

(declare-fun d!30743 () Bool)

(declare-fun c!19374 () Bool)

(assert (=> d!30743 (= c!19374 ((_ is Nil!1622) (toList!808 lt!55272)))))

(declare-fun e!71226 () (InoxSet tuple2!2428))

(assert (=> d!30743 (= (content!111 (toList!808 lt!55272)) e!71226)))

(declare-fun b!109512 () Bool)

(assert (=> b!109512 (= e!71226 ((as const (Array tuple2!2428 Bool)) false))))

(declare-fun b!109513 () Bool)

(assert (=> b!109513 (= e!71226 ((_ map or) (store ((as const (Array tuple2!2428 Bool)) false) (h!2219 (toList!808 lt!55272)) true) (content!111 (t!5741 (toList!808 lt!55272)))))))

(assert (= (and d!30743 c!19374) b!109512))

(assert (= (and d!30743 (not c!19374)) b!109513))

(declare-fun m!124129 () Bool)

(assert (=> b!109513 m!124129))

(assert (=> b!109513 m!124019))

(assert (=> d!29979 d!30743))

(assert (=> d!29941 d!29943))

(assert (=> d!29941 d!29945))

(declare-fun d!30745 () Bool)

(assert (=> d!30745 (isDefined!110 (getValueByKey!157 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30745 true))

(declare-fun _$12!356 () Unit!3321)

(assert (=> d!30745 (= (choose!677 (toList!808 lt!55190) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) _$12!356)))

(declare-fun bs!4512 () Bool)

(assert (= bs!4512 d!30745))

(assert (=> bs!4512 m!120979))

(assert (=> bs!4512 m!121233))

(assert (=> bs!4512 m!121233))

(assert (=> bs!4512 m!121235))

(assert (=> d!29941 d!30745))

(declare-fun d!30747 () Bool)

(declare-fun res!54224 () Bool)

(declare-fun e!71227 () Bool)

(assert (=> d!30747 (=> res!54224 e!71227)))

(assert (=> d!30747 (= res!54224 (or ((_ is Nil!1622) (toList!808 lt!55190)) ((_ is Nil!1622) (t!5741 (toList!808 lt!55190)))))))

(assert (=> d!30747 (= (isStrictlySorted!310 (toList!808 lt!55190)) e!71227)))

(declare-fun b!109514 () Bool)

(declare-fun e!71228 () Bool)

(assert (=> b!109514 (= e!71227 e!71228)))

(declare-fun res!54225 () Bool)

(assert (=> b!109514 (=> (not res!54225) (not e!71228))))

(assert (=> b!109514 (= res!54225 (bvslt (_1!1225 (h!2219 (toList!808 lt!55190))) (_1!1225 (h!2219 (t!5741 (toList!808 lt!55190))))))))

(declare-fun b!109515 () Bool)

(assert (=> b!109515 (= e!71228 (isStrictlySorted!310 (t!5741 (toList!808 lt!55190))))))

(assert (= (and d!30747 (not res!54224)) b!109514))

(assert (= (and b!109514 res!54225) b!109515))

(declare-fun m!124131 () Bool)

(assert (=> b!109515 m!124131))

(assert (=> d!29941 d!30747))

(declare-fun d!30749 () Bool)

(declare-fun c!19375 () Bool)

(assert (=> d!30749 (= c!19375 ((_ is Nil!1622) (toList!808 lt!55236)))))

(declare-fun e!71229 () (InoxSet tuple2!2428))

(assert (=> d!30749 (= (content!111 (toList!808 lt!55236)) e!71229)))

(declare-fun b!109516 () Bool)

(assert (=> b!109516 (= e!71229 ((as const (Array tuple2!2428 Bool)) false))))

(declare-fun b!109517 () Bool)

(assert (=> b!109517 (= e!71229 ((_ map or) (store ((as const (Array tuple2!2428 Bool)) false) (h!2219 (toList!808 lt!55236)) true) (content!111 (t!5741 (toList!808 lt!55236)))))))

(assert (= (and d!30749 c!19375) b!109516))

(assert (= (and d!30749 (not c!19375)) b!109517))

(declare-fun m!124133 () Bool)

(assert (=> b!109517 m!124133))

(declare-fun m!124135 () Bool)

(assert (=> b!109517 m!124135))

(assert (=> d!30001 d!30749))

(declare-fun d!30751 () Bool)

(assert (=> d!30751 (= ($colon$colon!82 e!70547 (ite c!19054 (h!2219 (toList!808 lt!55185)) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183)))) (Cons!1621 (ite c!19054 (h!2219 (toList!808 lt!55185)) (tuple2!2429 (_1!1225 lt!55183) (_2!1225 lt!55183))) e!70547))))

(assert (=> bm!11511 d!30751))

(declare-fun d!30753 () Bool)

(assert (=> d!30753 (isDefined!110 (getValueByKey!157 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!56364 () Unit!3321)

(assert (=> d!30753 (= lt!56364 (choose!677 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!71230 () Bool)

(assert (=> d!30753 e!71230))

(declare-fun res!54226 () Bool)

(assert (=> d!30753 (=> (not res!54226) (not e!71230))))

(assert (=> d!30753 (= res!54226 (isStrictlySorted!310 (toList!808 lt!55326)))))

(assert (=> d!30753 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!56364)))

(declare-fun b!109518 () Bool)

(assert (=> b!109518 (= e!71230 (containsKey!161 (toList!808 lt!55326) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30753 res!54226) b!109518))

(assert (=> d!30753 m!121117))

(assert (=> d!30753 m!121679))

(assert (=> d!30753 m!121679))

(assert (=> d!30753 m!121959))

(assert (=> d!30753 m!121117))

(declare-fun m!124137 () Bool)

(assert (=> d!30753 m!124137))

(assert (=> d!30753 m!122843))

(assert (=> b!109518 m!121117))

(assert (=> b!109518 m!121955))

(assert (=> b!108323 d!30753))

(assert (=> b!108323 d!30589))

(assert (=> b!108323 d!30591))

(declare-fun b!109519 () Bool)

(declare-fun e!71233 () Bool)

(declare-fun call!11638 () Bool)

(assert (=> b!109519 (= e!71233 call!11638)))

(declare-fun b!109520 () Bool)

(declare-fun e!71234 () Bool)

(assert (=> b!109520 (= e!71234 (contains!837 Nil!1623 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11635 () Bool)

(declare-fun c!19376 () Bool)

(assert (=> bm!11635 (= call!11638 (arrayNoDuplicates!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19376 (Cons!1622 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000) Nil!1623) Nil!1623)))))

(declare-fun b!109522 () Bool)

(assert (=> b!109522 (= e!71233 call!11638)))

(declare-fun b!109523 () Bool)

(declare-fun e!71231 () Bool)

(declare-fun e!71232 () Bool)

(assert (=> b!109523 (= e!71231 e!71232)))

(declare-fun res!54229 () Bool)

(assert (=> b!109523 (=> (not res!54229) (not e!71232))))

(assert (=> b!109523 (= res!54229 (not e!71234))))

(declare-fun res!54227 () Bool)

(assert (=> b!109523 (=> (not res!54227) (not e!71234))))

(assert (=> b!109523 (= res!54227 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!30755 () Bool)

(declare-fun res!54228 () Bool)

(assert (=> d!30755 (=> res!54228 e!71231)))

(assert (=> d!30755 (= res!54228 (bvsge #b00000000000000000000000000000000 (size!2331 (_keys!4316 (v!2914 (underlying!367 thiss!992))))))))

(assert (=> d!30755 (= (arrayNoDuplicates!0 (_keys!4316 (v!2914 (underlying!367 thiss!992))) #b00000000000000000000000000000000 Nil!1623) e!71231)))

(declare-fun b!109521 () Bool)

(assert (=> b!109521 (= e!71232 e!71233)))

(assert (=> b!109521 (= c!19376 (validKeyInArray!0 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!30755 (not res!54228)) b!109523))

(assert (= (and b!109523 res!54227) b!109520))

(assert (= (and b!109523 res!54229) b!109521))

(assert (= (and b!109521 c!19376) b!109522))

(assert (= (and b!109521 (not c!19376)) b!109519))

(assert (= (or b!109522 b!109519) bm!11635))

(assert (=> b!109520 m!122153))

(assert (=> b!109520 m!122153))

(declare-fun m!124139 () Bool)

(assert (=> b!109520 m!124139))

(assert (=> bm!11635 m!122153))

(declare-fun m!124141 () Bool)

(assert (=> bm!11635 m!124141))

(assert (=> b!109523 m!122153))

(assert (=> b!109523 m!122153))

(assert (=> b!109523 m!122161))

(assert (=> b!109521 m!122153))

(assert (=> b!109521 m!122153))

(assert (=> b!109521 m!122161))

(assert (=> b!108071 d!30755))

(declare-fun bm!11636 () Bool)

(declare-fun call!11639 () Bool)

(assert (=> bm!11636 (= call!11639 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun d!30757 () Bool)

(declare-fun res!54231 () Bool)

(declare-fun e!71236 () Bool)

(assert (=> d!30757 (=> res!54231 e!71236)))

(assert (=> d!30757 (= res!54231 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2331 (_keys!4316 newMap!16))))))

(assert (=> d!30757 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4316 newMap!16) (mask!6764 newMap!16)) e!71236)))

(declare-fun b!109524 () Bool)

(declare-fun e!71235 () Bool)

(assert (=> b!109524 (= e!71235 call!11639)))

(declare-fun b!109525 () Bool)

(declare-fun e!71237 () Bool)

(assert (=> b!109525 (= e!71235 e!71237)))

(declare-fun lt!56365 () (_ BitVec 64))

(assert (=> b!109525 (= lt!56365 (select (arr!2075 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!56367 () Unit!3321)

(assert (=> b!109525 (= lt!56367 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4316 newMap!16) lt!56365 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!109525 (arrayContainsKey!0 (_keys!4316 newMap!16) lt!56365 #b00000000000000000000000000000000)))

(declare-fun lt!56366 () Unit!3321)

(assert (=> b!109525 (= lt!56366 lt!56367)))

(declare-fun res!54230 () Bool)

(assert (=> b!109525 (= res!54230 (= (seekEntryOrOpen!0 (select (arr!2075 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4316 newMap!16) (mask!6764 newMap!16)) (Found!260 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!109525 (=> (not res!54230) (not e!71237))))

(declare-fun b!109526 () Bool)

(assert (=> b!109526 (= e!71237 call!11639)))

(declare-fun b!109527 () Bool)

(assert (=> b!109527 (= e!71236 e!71235)))

(declare-fun c!19377 () Bool)

(assert (=> b!109527 (= c!19377 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!30757 (not res!54231)) b!109527))

(assert (= (and b!109527 c!19377) b!109525))

(assert (= (and b!109527 (not c!19377)) b!109524))

(assert (= (and b!109525 res!54230) b!109526))

(assert (= (or b!109526 b!109524) bm!11636))

(declare-fun m!124143 () Bool)

(assert (=> bm!11636 m!124143))

(assert (=> b!109525 m!122467))

(declare-fun m!124145 () Bool)

(assert (=> b!109525 m!124145))

(declare-fun m!124147 () Bool)

(assert (=> b!109525 m!124147))

(assert (=> b!109525 m!122467))

(declare-fun m!124149 () Bool)

(assert (=> b!109525 m!124149))

(assert (=> b!109527 m!122467))

(assert (=> b!109527 m!122467))

(assert (=> b!109527 m!122737))

(assert (=> bm!11450 d!30757))

(declare-fun d!30759 () Bool)

(assert (=> d!30759 (= (apply!99 lt!55645 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!157 (toList!808 lt!55645) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4513 () Bool)

(assert (= bs!4513 d!30759))

(assert (=> bs!4513 m!124009))

(assert (=> bs!4513 m!124009))

(declare-fun m!124151 () Bool)

(assert (=> bs!4513 m!124151))

(assert (=> b!108180 d!30759))

(declare-fun d!30761 () Bool)

(assert (=> d!30761 (= (apply!99 lt!55747 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!157 (toList!808 lt!55747) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4514 () Bool)

(assert (= bs!4514 d!30761))

(assert (=> bs!4514 m!124069))

(assert (=> bs!4514 m!124069))

(declare-fun m!124153 () Bool)

(assert (=> bs!4514 m!124153))

(assert (=> b!108340 d!30761))

(declare-fun d!30763 () Bool)

(assert (=> d!30763 (isDefined!110 (getValueByKey!157 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))) lt!55264))))

(declare-fun lt!56368 () Unit!3321)

(assert (=> d!30763 (= lt!56368 (choose!677 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))) lt!55264))))

(declare-fun e!71238 () Bool)

(assert (=> d!30763 e!71238))

(declare-fun res!54232 () Bool)

(assert (=> d!30763 (=> (not res!54232) (not e!71238))))

(assert (=> d!30763 (= res!54232 (isStrictlySorted!310 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)))))))

(assert (=> d!30763 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))) lt!55264) lt!56368)))

(declare-fun b!109528 () Bool)

(assert (=> b!109528 (= e!71238 (containsKey!161 (toList!808 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262))) lt!55264))))

(assert (= (and d!30763 res!54232) b!109528))

(assert (=> d!30763 m!121449))

(assert (=> d!30763 m!121449))

(assert (=> d!30763 m!121451))

(declare-fun m!124155 () Bool)

(assert (=> d!30763 m!124155))

(declare-fun m!124157 () Bool)

(assert (=> d!30763 m!124157))

(assert (=> b!109528 m!121445))

(assert (=> b!108064 d!30763))

(assert (=> b!108064 d!30593))

(assert (=> b!108064 d!30595))

(declare-fun d!30765 () Bool)

(declare-fun res!54233 () Bool)

(declare-fun e!71239 () Bool)

(assert (=> d!30765 (=> res!54233 e!71239)))

(assert (=> d!30765 (= res!54233 (and ((_ is Cons!1621) (toList!808 lt!55272)) (= (_1!1225 (h!2219 (toList!808 lt!55272))) (_1!1225 lt!55182))))))

(assert (=> d!30765 (= (containsKey!161 (toList!808 lt!55272) (_1!1225 lt!55182)) e!71239)))

(declare-fun b!109529 () Bool)

(declare-fun e!71240 () Bool)

(assert (=> b!109529 (= e!71239 e!71240)))

(declare-fun res!54234 () Bool)

(assert (=> b!109529 (=> (not res!54234) (not e!71240))))

(assert (=> b!109529 (= res!54234 (and (or (not ((_ is Cons!1621) (toList!808 lt!55272))) (bvsle (_1!1225 (h!2219 (toList!808 lt!55272))) (_1!1225 lt!55182))) ((_ is Cons!1621) (toList!808 lt!55272)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55272))) (_1!1225 lt!55182))))))

(declare-fun b!109530 () Bool)

(assert (=> b!109530 (= e!71240 (containsKey!161 (t!5741 (toList!808 lt!55272)) (_1!1225 lt!55182)))))

(assert (= (and d!30765 (not res!54233)) b!109529))

(assert (= (and b!109529 res!54234) b!109530))

(declare-fun m!124159 () Bool)

(assert (=> b!109530 m!124159))

(assert (=> d!30023 d!30765))

(declare-fun d!30767 () Bool)

(declare-fun res!54235 () Bool)

(declare-fun e!71241 () Bool)

(assert (=> d!30767 (=> res!54235 e!71241)))

(assert (=> d!30767 (= res!54235 (and ((_ is Cons!1621) (toList!808 lt!55258)) (= (_1!1225 (h!2219 (toList!808 lt!55258))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30767 (= (containsKey!161 (toList!808 lt!55258) #b0000000000000000000000000000000000000000000000000000000000000000) e!71241)))

(declare-fun b!109531 () Bool)

(declare-fun e!71242 () Bool)

(assert (=> b!109531 (= e!71241 e!71242)))

(declare-fun res!54236 () Bool)

(assert (=> b!109531 (=> (not res!54236) (not e!71242))))

(assert (=> b!109531 (= res!54236 (and (or (not ((_ is Cons!1621) (toList!808 lt!55258))) (bvsle (_1!1225 (h!2219 (toList!808 lt!55258))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1621) (toList!808 lt!55258)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55258))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109532 () Bool)

(assert (=> b!109532 (= e!71242 (containsKey!161 (t!5741 (toList!808 lt!55258)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30767 (not res!54235)) b!109531))

(assert (= (and b!109531 res!54236) b!109532))

(declare-fun m!124161 () Bool)

(assert (=> b!109532 m!124161))

(assert (=> d!29967 d!30767))

(declare-fun d!30769 () Bool)

(declare-fun res!54237 () Bool)

(declare-fun e!71243 () Bool)

(assert (=> d!30769 (=> res!54237 e!71243)))

(assert (=> d!30769 (= res!54237 (or ((_ is Nil!1622) lt!55798) ((_ is Nil!1622) (t!5741 lt!55798))))))

(assert (=> d!30769 (= (isStrictlySorted!310 lt!55798) e!71243)))

(declare-fun b!109533 () Bool)

(declare-fun e!71244 () Bool)

(assert (=> b!109533 (= e!71243 e!71244)))

(declare-fun res!54238 () Bool)

(assert (=> b!109533 (=> (not res!54238) (not e!71244))))

(assert (=> b!109533 (= res!54238 (bvslt (_1!1225 (h!2219 lt!55798)) (_1!1225 (h!2219 (t!5741 lt!55798)))))))

(declare-fun b!109534 () Bool)

(assert (=> b!109534 (= e!71244 (isStrictlySorted!310 (t!5741 lt!55798)))))

(assert (= (and d!30769 (not res!54237)) b!109533))

(assert (= (and b!109533 res!54238) b!109534))

(declare-fun m!124163 () Bool)

(assert (=> b!109534 m!124163))

(assert (=> d!30041 d!30769))

(assert (=> d!30041 d!30243))

(declare-fun d!30771 () Bool)

(declare-fun lt!56369 () Bool)

(assert (=> d!30771 (= lt!56369 (select (content!111 (t!5741 (toList!808 lt!55236))) lt!55183))))

(declare-fun e!71246 () Bool)

(assert (=> d!30771 (= lt!56369 e!71246)))

(declare-fun res!54240 () Bool)

(assert (=> d!30771 (=> (not res!54240) (not e!71246))))

(assert (=> d!30771 (= res!54240 ((_ is Cons!1621) (t!5741 (toList!808 lt!55236))))))

(assert (=> d!30771 (= (contains!836 (t!5741 (toList!808 lt!55236)) lt!55183) lt!56369)))

(declare-fun b!109535 () Bool)

(declare-fun e!71245 () Bool)

(assert (=> b!109535 (= e!71246 e!71245)))

(declare-fun res!54239 () Bool)

(assert (=> b!109535 (=> res!54239 e!71245)))

(assert (=> b!109535 (= res!54239 (= (h!2219 (t!5741 (toList!808 lt!55236))) lt!55183))))

(declare-fun b!109536 () Bool)

(assert (=> b!109536 (= e!71245 (contains!836 (t!5741 (t!5741 (toList!808 lt!55236))) lt!55183))))

(assert (= (and d!30771 res!54240) b!109535))

(assert (= (and b!109535 (not res!54239)) b!109536))

(assert (=> d!30771 m!124135))

(declare-fun m!124165 () Bool)

(assert (=> d!30771 m!124165))

(declare-fun m!124167 () Bool)

(assert (=> b!109536 m!124167))

(assert (=> b!108322 d!30771))

(declare-fun d!30773 () Bool)

(declare-fun e!71247 () Bool)

(assert (=> d!30773 e!71247))

(declare-fun res!54241 () Bool)

(assert (=> d!30773 (=> (not res!54241) (not e!71247))))

(declare-fun lt!56370 () ListLongMap!1585)

(assert (=> d!30773 (= res!54241 (contains!834 lt!56370 (_1!1225 (ite (or c!19022 c!19024) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(declare-fun lt!56372 () List!1625)

(assert (=> d!30773 (= lt!56370 (ListLongMap!1586 lt!56372))))

(declare-fun lt!56371 () Unit!3321)

(declare-fun lt!56373 () Unit!3321)

(assert (=> d!30773 (= lt!56371 lt!56373)))

(assert (=> d!30773 (= (getValueByKey!157 lt!56372 (_1!1225 (ite (or c!19022 c!19024) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))) (Some!162 (_2!1225 (ite (or c!19022 c!19024) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(assert (=> d!30773 (= lt!56373 (lemmaContainsTupThenGetReturnValue!73 lt!56372 (_1!1225 (ite (or c!19022 c!19024) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (_2!1225 (ite (or c!19022 c!19024) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(assert (=> d!30773 (= lt!56372 (insertStrictlySorted!76 (toList!808 (ite c!19022 call!11502 (ite c!19024 call!11500 call!11501))) (_1!1225 (ite (or c!19022 c!19024) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (_2!1225 (ite (or c!19022 c!19024) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(assert (=> d!30773 (= (+!148 (ite c!19022 call!11502 (ite c!19024 call!11500 call!11501)) (ite (or c!19022 c!19024) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) lt!56370)))

(declare-fun b!109537 () Bool)

(declare-fun res!54242 () Bool)

(assert (=> b!109537 (=> (not res!54242) (not e!71247))))

(assert (=> b!109537 (= res!54242 (= (getValueByKey!157 (toList!808 lt!56370) (_1!1225 (ite (or c!19022 c!19024) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))) (Some!162 (_2!1225 (ite (or c!19022 c!19024) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))))

(declare-fun b!109538 () Bool)

(assert (=> b!109538 (= e!71247 (contains!836 (toList!808 lt!56370) (ite (or c!19022 c!19024) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (= (and d!30773 res!54241) b!109537))

(assert (= (and b!109537 res!54242) b!109538))

(declare-fun m!124169 () Bool)

(assert (=> d!30773 m!124169))

(declare-fun m!124171 () Bool)

(assert (=> d!30773 m!124171))

(declare-fun m!124173 () Bool)

(assert (=> d!30773 m!124173))

(declare-fun m!124175 () Bool)

(assert (=> d!30773 m!124175))

(declare-fun m!124177 () Bool)

(assert (=> b!109537 m!124177))

(declare-fun m!124179 () Bool)

(assert (=> b!109538 m!124179))

(assert (=> bm!11497 d!30773))

(declare-fun bm!11637 () Bool)

(declare-fun call!11640 () (_ BitVec 32))

(assert (=> bm!11637 (= call!11640 (arrayCountValidKeys!0 (_keys!4316 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2331 (_keys!4316 newMap!16))))))

(declare-fun b!109539 () Bool)

(declare-fun e!71248 () (_ BitVec 32))

(declare-fun e!71249 () (_ BitVec 32))

(assert (=> b!109539 (= e!71248 e!71249)))

(declare-fun c!19379 () Bool)

(assert (=> b!109539 (= c!19379 (validKeyInArray!0 (select (arr!2075 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!109540 () Bool)

(assert (=> b!109540 (= e!71249 (bvadd #b00000000000000000000000000000001 call!11640))))

(declare-fun d!30775 () Bool)

(declare-fun lt!56374 () (_ BitVec 32))

(assert (=> d!30775 (and (bvsge lt!56374 #b00000000000000000000000000000000) (bvsle lt!56374 (bvsub (size!2331 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!30775 (= lt!56374 e!71248)))

(declare-fun c!19378 () Bool)

(assert (=> d!30775 (= c!19378 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2331 (_keys!4316 newMap!16))))))

(assert (=> d!30775 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2331 (_keys!4316 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2331 (_keys!4316 newMap!16)) (size!2331 (_keys!4316 newMap!16))))))

(assert (=> d!30775 (= (arrayCountValidKeys!0 (_keys!4316 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2331 (_keys!4316 newMap!16))) lt!56374)))

(declare-fun b!109541 () Bool)

(assert (=> b!109541 (= e!71248 #b00000000000000000000000000000000)))

(declare-fun b!109542 () Bool)

(assert (=> b!109542 (= e!71249 call!11640)))

(assert (= (and d!30775 c!19378) b!109541))

(assert (= (and d!30775 (not c!19378)) b!109539))

(assert (= (and b!109539 c!19379) b!109540))

(assert (= (and b!109539 (not c!19379)) b!109542))

(assert (= (or b!109540 b!109542) bm!11637))

(declare-fun m!124181 () Bool)

(assert (=> bm!11637 m!124181))

(assert (=> b!109539 m!122467))

(assert (=> b!109539 m!122467))

(assert (=> b!109539 m!122737))

(assert (=> bm!11492 d!30775))

(declare-fun lt!56375 () Bool)

(declare-fun d!30777 () Bool)

(assert (=> d!30777 (= lt!56375 (select (content!111 (toList!808 lt!55661)) (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun e!71251 () Bool)

(assert (=> d!30777 (= lt!56375 e!71251)))

(declare-fun res!54244 () Bool)

(assert (=> d!30777 (=> (not res!54244) (not e!71251))))

(assert (=> d!30777 (= res!54244 ((_ is Cons!1621) (toList!808 lt!55661)))))

(assert (=> d!30777 (= (contains!836 (toList!808 lt!55661) (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) lt!56375)))

(declare-fun b!109543 () Bool)

(declare-fun e!71250 () Bool)

(assert (=> b!109543 (= e!71251 e!71250)))

(declare-fun res!54243 () Bool)

(assert (=> b!109543 (=> res!54243 e!71250)))

(assert (=> b!109543 (= res!54243 (= (h!2219 (toList!808 lt!55661)) (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!109544 () Bool)

(assert (=> b!109544 (= e!71250 (contains!836 (t!5741 (toList!808 lt!55661)) (ite c!18921 (ite c!18923 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55184) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55184)) (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(assert (= (and d!30777 res!54244) b!109543))

(assert (= (and b!109543 (not res!54243)) b!109544))

(declare-fun m!124183 () Bool)

(assert (=> d!30777 m!124183))

(declare-fun m!124185 () Bool)

(assert (=> d!30777 m!124185))

(declare-fun m!124187 () Bool)

(assert (=> b!109544 m!124187))

(assert (=> b!108184 d!30777))

(declare-fun d!30779 () Bool)

(declare-fun c!19380 () Bool)

(assert (=> d!30779 (= c!19380 (and ((_ is Cons!1621) (toList!808 lt!55669)) (= (_1!1225 (h!2219 (toList!808 lt!55669))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184)))))))

(declare-fun e!71252 () Option!163)

(assert (=> d!30779 (= (getValueByKey!157 (toList!808 lt!55669) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))) e!71252)))

(declare-fun b!109546 () Bool)

(declare-fun e!71253 () Option!163)

(assert (=> b!109546 (= e!71252 e!71253)))

(declare-fun c!19381 () Bool)

(assert (=> b!109546 (= c!19381 (and ((_ is Cons!1621) (toList!808 lt!55669)) (not (= (_1!1225 (h!2219 (toList!808 lt!55669))) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))))

(declare-fun b!109547 () Bool)

(assert (=> b!109547 (= e!71253 (getValueByKey!157 (t!5741 (toList!808 lt!55669)) (_1!1225 (tuple2!2429 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355) lt!55184))))))

(declare-fun b!109545 () Bool)

(assert (=> b!109545 (= e!71252 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55669)))))))

(declare-fun b!109548 () Bool)

(assert (=> b!109548 (= e!71253 None!161)))

(assert (= (and d!30779 c!19380) b!109545))

(assert (= (and d!30779 (not c!19380)) b!109546))

(assert (= (and b!109546 c!19381) b!109547))

(assert (= (and b!109546 (not c!19381)) b!109548))

(declare-fun m!124189 () Bool)

(assert (=> b!109547 m!124189))

(assert (=> b!108188 d!30779))

(assert (=> b!108280 d!30145))

(assert (=> d!30039 d!30037))

(declare-fun d!30781 () Bool)

(assert (=> d!30781 (= (getValueByKey!157 lt!55238 (_1!1225 lt!55183)) (Some!162 (_2!1225 lt!55183)))))

(assert (=> d!30781 true))

(declare-fun _$22!442 () Unit!3321)

(assert (=> d!30781 (= (choose!672 lt!55238 (_1!1225 lt!55183) (_2!1225 lt!55183)) _$22!442)))

(declare-fun bs!4515 () Bool)

(assert (= bs!4515 d!30781))

(assert (=> bs!4515 m!121091))

(assert (=> d!30039 d!30781))

(declare-fun d!30783 () Bool)

(declare-fun res!54245 () Bool)

(declare-fun e!71254 () Bool)

(assert (=> d!30783 (=> res!54245 e!71254)))

(assert (=> d!30783 (= res!54245 (or ((_ is Nil!1622) lt!55238) ((_ is Nil!1622) (t!5741 lt!55238))))))

(assert (=> d!30783 (= (isStrictlySorted!310 lt!55238) e!71254)))

(declare-fun b!109549 () Bool)

(declare-fun e!71255 () Bool)

(assert (=> b!109549 (= e!71254 e!71255)))

(declare-fun res!54246 () Bool)

(assert (=> b!109549 (=> (not res!54246) (not e!71255))))

(assert (=> b!109549 (= res!54246 (bvslt (_1!1225 (h!2219 lt!55238)) (_1!1225 (h!2219 (t!5741 lt!55238)))))))

(declare-fun b!109550 () Bool)

(assert (=> b!109550 (= e!71255 (isStrictlySorted!310 (t!5741 lt!55238)))))

(assert (= (and d!30783 (not res!54245)) b!109549))

(assert (= (and b!109549 res!54246) b!109550))

(declare-fun m!124191 () Bool)

(assert (=> b!109550 m!124191))

(assert (=> d!30039 d!30783))

(declare-fun d!30785 () Bool)

(declare-fun e!71257 () Bool)

(assert (=> d!30785 e!71257))

(declare-fun res!54247 () Bool)

(assert (=> d!30785 (=> res!54247 e!71257)))

(declare-fun lt!56377 () Bool)

(assert (=> d!30785 (= res!54247 (not lt!56377))))

(declare-fun lt!56378 () Bool)

(assert (=> d!30785 (= lt!56377 lt!56378)))

(declare-fun lt!56376 () Unit!3321)

(declare-fun e!71256 () Unit!3321)

(assert (=> d!30785 (= lt!56376 e!71256)))

(declare-fun c!19382 () Bool)

(assert (=> d!30785 (= c!19382 lt!56378)))

(assert (=> d!30785 (= lt!56378 (containsKey!161 (toList!808 lt!55618) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> d!30785 (= (contains!834 lt!55618 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!56377)))

(declare-fun b!109551 () Bool)

(declare-fun lt!56379 () Unit!3321)

(assert (=> b!109551 (= e!71256 lt!56379)))

(assert (=> b!109551 (= lt!56379 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55618) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(assert (=> b!109551 (isDefined!110 (getValueByKey!157 (toList!808 lt!55618) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109552 () Bool)

(declare-fun Unit!3397 () Unit!3321)

(assert (=> b!109552 (= e!71256 Unit!3397)))

(declare-fun b!109553 () Bool)

(assert (=> b!109553 (= e!71257 (isDefined!110 (getValueByKey!157 (toList!808 lt!55618) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30785 c!19382) b!109551))

(assert (= (and d!30785 (not c!19382)) b!109552))

(assert (= (and d!30785 (not res!54247)) b!109553))

(declare-fun m!124193 () Bool)

(assert (=> d!30785 m!124193))

(declare-fun m!124195 () Bool)

(assert (=> b!109551 m!124195))

(assert (=> b!109551 m!121633))

(assert (=> b!109551 m!121633))

(declare-fun m!124197 () Bool)

(assert (=> b!109551 m!124197))

(assert (=> b!109553 m!121633))

(assert (=> b!109553 m!121633))

(assert (=> b!109553 m!124197))

(assert (=> d!29929 d!30785))

(declare-fun c!19383 () Bool)

(declare-fun d!30787 () Bool)

(assert (=> d!30787 (= c!19383 (and ((_ is Cons!1621) lt!55620) (= (_1!1225 (h!2219 lt!55620)) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!71258 () Option!163)

(assert (=> d!30787 (= (getValueByKey!157 lt!55620 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!71258)))

(declare-fun b!109555 () Bool)

(declare-fun e!71259 () Option!163)

(assert (=> b!109555 (= e!71258 e!71259)))

(declare-fun c!19384 () Bool)

(assert (=> b!109555 (= c!19384 (and ((_ is Cons!1621) lt!55620) (not (= (_1!1225 (h!2219 lt!55620)) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!109556 () Bool)

(assert (=> b!109556 (= e!71259 (getValueByKey!157 (t!5741 lt!55620) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109554 () Bool)

(assert (=> b!109554 (= e!71258 (Some!162 (_2!1225 (h!2219 lt!55620))))))

(declare-fun b!109557 () Bool)

(assert (=> b!109557 (= e!71259 None!161)))

(assert (= (and d!30787 c!19383) b!109554))

(assert (= (and d!30787 (not c!19383)) b!109555))

(assert (= (and b!109555 c!19384) b!109556))

(assert (= (and b!109555 (not c!19384)) b!109557))

(declare-fun m!124199 () Bool)

(assert (=> b!109556 m!124199))

(assert (=> d!29929 d!30787))

(declare-fun d!30789 () Bool)

(assert (=> d!30789 (= (getValueByKey!157 lt!55620 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) (Some!162 (_2!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun lt!56380 () Unit!3321)

(assert (=> d!30789 (= lt!56380 (choose!672 lt!55620 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun e!71260 () Bool)

(assert (=> d!30789 e!71260))

(declare-fun res!54248 () Bool)

(assert (=> d!30789 (=> (not res!54248) (not e!71260))))

(assert (=> d!30789 (= res!54248 (isStrictlySorted!310 lt!55620))))

(assert (=> d!30789 (= (lemmaContainsTupThenGetReturnValue!73 lt!55620 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!56380)))

(declare-fun b!109558 () Bool)

(declare-fun res!54249 () Bool)

(assert (=> b!109558 (=> (not res!54249) (not e!71260))))

(assert (=> b!109558 (= res!54249 (containsKey!161 lt!55620 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109559 () Bool)

(assert (=> b!109559 (= e!71260 (contains!836 lt!55620 (tuple2!2429 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30789 res!54248) b!109558))

(assert (= (and b!109558 res!54249) b!109559))

(assert (=> d!30789 m!121627))

(declare-fun m!124201 () Bool)

(assert (=> d!30789 m!124201))

(declare-fun m!124203 () Bool)

(assert (=> d!30789 m!124203))

(declare-fun m!124205 () Bool)

(assert (=> b!109558 m!124205))

(declare-fun m!124207 () Bool)

(assert (=> b!109559 m!124207))

(assert (=> d!29929 d!30789))

(declare-fun b!109560 () Bool)

(declare-fun e!71264 () List!1625)

(declare-fun e!71262 () List!1625)

(assert (=> b!109560 (= e!71264 e!71262)))

(declare-fun c!19387 () Bool)

(assert (=> b!109560 (= c!19387 (and ((_ is Cons!1621) (toList!808 lt!55331)) (= (_1!1225 (h!2219 (toList!808 lt!55331))) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun call!11642 () List!1625)

(declare-fun c!19386 () Bool)

(declare-fun bm!11638 () Bool)

(declare-fun e!71261 () List!1625)

(assert (=> bm!11638 (= call!11642 ($colon$colon!82 e!71261 (ite c!19386 (h!2219 (toList!808 lt!55331)) (tuple2!2429 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun c!19385 () Bool)

(assert (=> bm!11638 (= c!19385 c!19386)))

(declare-fun b!109561 () Bool)

(assert (=> b!109561 (= e!71261 (insertStrictlySorted!76 (t!5741 (toList!808 lt!55331)) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109562 () Bool)

(declare-fun c!19388 () Bool)

(assert (=> b!109562 (= e!71261 (ite c!19387 (t!5741 (toList!808 lt!55331)) (ite c!19388 (Cons!1621 (h!2219 (toList!808 lt!55331)) (t!5741 (toList!808 lt!55331))) Nil!1622)))))

(declare-fun b!109563 () Bool)

(declare-fun e!71265 () List!1625)

(declare-fun call!11641 () List!1625)

(assert (=> b!109563 (= e!71265 call!11641)))

(declare-fun bm!11639 () Bool)

(declare-fun call!11643 () List!1625)

(assert (=> bm!11639 (= call!11641 call!11643)))

(declare-fun b!109564 () Bool)

(assert (=> b!109564 (= e!71264 call!11642)))

(declare-fun d!30791 () Bool)

(declare-fun e!71263 () Bool)

(assert (=> d!30791 e!71263))

(declare-fun res!54250 () Bool)

(assert (=> d!30791 (=> (not res!54250) (not e!71263))))

(declare-fun lt!56381 () List!1625)

(assert (=> d!30791 (= res!54250 (isStrictlySorted!310 lt!56381))))

(assert (=> d!30791 (= lt!56381 e!71264)))

(assert (=> d!30791 (= c!19386 (and ((_ is Cons!1621) (toList!808 lt!55331)) (bvslt (_1!1225 (h!2219 (toList!808 lt!55331))) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> d!30791 (isStrictlySorted!310 (toList!808 lt!55331))))

(assert (=> d!30791 (= (insertStrictlySorted!76 (toList!808 lt!55331) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!56381)))

(declare-fun b!109565 () Bool)

(assert (=> b!109565 (= e!71265 call!11641)))

(declare-fun bm!11640 () Bool)

(assert (=> bm!11640 (= call!11643 call!11642)))

(declare-fun b!109566 () Bool)

(assert (=> b!109566 (= c!19388 (and ((_ is Cons!1621) (toList!808 lt!55331)) (bvsgt (_1!1225 (h!2219 (toList!808 lt!55331))) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (=> b!109566 (= e!71262 e!71265)))

(declare-fun b!109567 () Bool)

(assert (=> b!109567 (= e!71262 call!11643)))

(declare-fun b!109568 () Bool)

(declare-fun res!54251 () Bool)

(assert (=> b!109568 (=> (not res!54251) (not e!71263))))

(assert (=> b!109568 (= res!54251 (containsKey!161 lt!56381 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109569 () Bool)

(assert (=> b!109569 (= e!71263 (contains!836 lt!56381 (tuple2!2429 (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))) (_2!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(assert (= (and d!30791 c!19386) b!109564))

(assert (= (and d!30791 (not c!19386)) b!109560))

(assert (= (and b!109560 c!19387) b!109567))

(assert (= (and b!109560 (not c!19387)) b!109566))

(assert (= (and b!109566 c!19388) b!109565))

(assert (= (and b!109566 (not c!19388)) b!109563))

(assert (= (or b!109565 b!109563) bm!11639))

(assert (= (or b!109567 bm!11639) bm!11640))

(assert (= (or b!109564 bm!11640) bm!11638))

(assert (= (and bm!11638 c!19385) b!109561))

(assert (= (and bm!11638 (not c!19385)) b!109562))

(assert (= (and d!30791 res!54250) b!109568))

(assert (= (and b!109568 res!54251) b!109569))

(declare-fun m!124209 () Bool)

(assert (=> bm!11638 m!124209))

(declare-fun m!124211 () Bool)

(assert (=> b!109568 m!124211))

(declare-fun m!124213 () Bool)

(assert (=> b!109569 m!124213))

(declare-fun m!124215 () Bool)

(assert (=> d!30791 m!124215))

(declare-fun m!124217 () Bool)

(assert (=> d!30791 m!124217))

(declare-fun m!124219 () Bool)

(assert (=> b!109561 m!124219))

(assert (=> d!29929 d!30791))

(declare-fun d!30793 () Bool)

(assert (=> d!30793 (isDefined!110 (getValueByKey!157 (toList!808 lt!55258) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!56382 () Unit!3321)

(assert (=> d!30793 (= lt!56382 (choose!677 (toList!808 lt!55258) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71266 () Bool)

(assert (=> d!30793 e!71266))

(declare-fun res!54252 () Bool)

(assert (=> d!30793 (=> (not res!54252) (not e!71266))))

(assert (=> d!30793 (= res!54252 (isStrictlySorted!310 (toList!808 lt!55258)))))

(assert (=> d!30793 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55258) #b0000000000000000000000000000000000000000000000000000000000000000) lt!56382)))

(declare-fun b!109570 () Bool)

(assert (=> b!109570 (= e!71266 (containsKey!161 (toList!808 lt!55258) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30793 res!54252) b!109570))

(assert (=> d!30793 m!121781))

(assert (=> d!30793 m!121781))

(assert (=> d!30793 m!121783))

(declare-fun m!124221 () Bool)

(assert (=> d!30793 m!124221))

(assert (=> d!30793 m!122793))

(assert (=> b!109570 m!121777))

(assert (=> b!108198 d!30793))

(assert (=> b!108198 d!30637))

(assert (=> b!108198 d!30639))

(declare-fun d!30795 () Bool)

(assert (=> d!30795 (isDefined!110 (getValueByKey!157 (toList!808 lt!55272) (_1!1225 lt!55182)))))

(declare-fun lt!56383 () Unit!3321)

(assert (=> d!30795 (= lt!56383 (choose!677 (toList!808 lt!55272) (_1!1225 lt!55182)))))

(declare-fun e!71267 () Bool)

(assert (=> d!30795 e!71267))

(declare-fun res!54253 () Bool)

(assert (=> d!30795 (=> (not res!54253) (not e!71267))))

(assert (=> d!30795 (= res!54253 (isStrictlySorted!310 (toList!808 lt!55272)))))

(assert (=> d!30795 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55272) (_1!1225 lt!55182)) lt!56383)))

(declare-fun b!109571 () Bool)

(assert (=> b!109571 (= e!71267 (containsKey!161 (toList!808 lt!55272) (_1!1225 lt!55182)))))

(assert (= (and d!30795 res!54253) b!109571))

(assert (=> d!30795 m!121171))

(assert (=> d!30795 m!121171))

(assert (=> d!30795 m!122069))

(declare-fun m!124223 () Bool)

(assert (=> d!30795 m!124223))

(declare-fun m!124225 () Bool)

(assert (=> d!30795 m!124225))

(assert (=> b!109571 m!122065))

(assert (=> b!108379 d!30795))

(assert (=> b!108379 d!30645))

(assert (=> b!108379 d!30049))

(assert (=> d!29875 d!29877))

(assert (=> d!29875 d!29873))

(declare-fun d!30797 () Bool)

(assert (=> d!30797 (not (contains!834 (+!148 lt!55261 (tuple2!2429 lt!55263 lt!55262)) lt!55264))))

(assert (=> d!30797 true))

(declare-fun _$36!322 () Unit!3321)

(assert (=> d!30797 (= (choose!671 lt!55261 lt!55263 lt!55262 lt!55264) _$36!322)))

(declare-fun bs!4516 () Bool)

(assert (= bs!4516 d!30797))

(assert (=> bs!4516 m!121131))

(assert (=> bs!4516 m!121131))

(assert (=> bs!4516 m!121133))

(assert (=> d!29875 d!30797))

(declare-fun d!30799 () Bool)

(declare-fun e!71269 () Bool)

(assert (=> d!30799 e!71269))

(declare-fun res!54254 () Bool)

(assert (=> d!30799 (=> res!54254 e!71269)))

(declare-fun lt!56385 () Bool)

(assert (=> d!30799 (= res!54254 (not lt!56385))))

(declare-fun lt!56386 () Bool)

(assert (=> d!30799 (= lt!56385 lt!56386)))

(declare-fun lt!56384 () Unit!3321)

(declare-fun e!71268 () Unit!3321)

(assert (=> d!30799 (= lt!56384 e!71268)))

(declare-fun c!19389 () Bool)

(assert (=> d!30799 (= c!19389 lt!56386)))

(assert (=> d!30799 (= lt!56386 (containsKey!161 (toList!808 lt!55261) lt!55264))))

(assert (=> d!30799 (= (contains!834 lt!55261 lt!55264) lt!56385)))

(declare-fun b!109573 () Bool)

(declare-fun lt!56387 () Unit!3321)

(assert (=> b!109573 (= e!71268 lt!56387)))

(assert (=> b!109573 (= lt!56387 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 lt!55261) lt!55264))))

(assert (=> b!109573 (isDefined!110 (getValueByKey!157 (toList!808 lt!55261) lt!55264))))

(declare-fun b!109574 () Bool)

(declare-fun Unit!3398 () Unit!3321)

(assert (=> b!109574 (= e!71268 Unit!3398)))

(declare-fun b!109575 () Bool)

(assert (=> b!109575 (= e!71269 (isDefined!110 (getValueByKey!157 (toList!808 lt!55261) lt!55264)))))

(assert (= (and d!30799 c!19389) b!109573))

(assert (= (and d!30799 (not c!19389)) b!109574))

(assert (= (and d!30799 (not res!54254)) b!109575))

(declare-fun m!124227 () Bool)

(assert (=> d!30799 m!124227))

(declare-fun m!124229 () Bool)

(assert (=> b!109573 m!124229))

(declare-fun m!124231 () Bool)

(assert (=> b!109573 m!124231))

(assert (=> b!109573 m!124231))

(declare-fun m!124233 () Bool)

(assert (=> b!109573 m!124233))

(assert (=> b!109575 m!124231))

(assert (=> b!109575 m!124231))

(assert (=> b!109575 m!124233))

(assert (=> d!29875 d!30799))

(assert (=> b!108242 d!29839))

(declare-fun d!30801 () Bool)

(assert (=> d!30801 (= (content!112 Nil!1623) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!30021 d!30801))

(assert (=> b!108421 d!30221))

(assert (=> b!108421 d!30223))

(declare-fun d!30803 () Bool)

(declare-fun e!71271 () Bool)

(assert (=> d!30803 e!71271))

(declare-fun res!54255 () Bool)

(assert (=> d!30803 (=> res!54255 e!71271)))

(declare-fun lt!56389 () Bool)

(assert (=> d!30803 (= res!54255 (not lt!56389))))

(declare-fun lt!56390 () Bool)

(assert (=> d!30803 (= lt!56389 lt!56390)))

(declare-fun lt!56388 () Unit!3321)

(declare-fun e!71270 () Unit!3321)

(assert (=> d!30803 (= lt!56388 e!71270)))

(declare-fun c!19390 () Bool)

(assert (=> d!30803 (= c!19390 lt!56390)))

(assert (=> d!30803 (= lt!56390 (containsKey!161 (toList!808 (map!1294 (_2!1226 lt!55533))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30803 (= (contains!834 (map!1294 (_2!1226 lt!55533)) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)) lt!56389)))

(declare-fun b!109576 () Bool)

(declare-fun lt!56391 () Unit!3321)

(assert (=> b!109576 (= e!71270 lt!56391)))

(assert (=> b!109576 (= lt!56391 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!808 (map!1294 (_2!1226 lt!55533))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!109576 (isDefined!110 (getValueByKey!157 (toList!808 (map!1294 (_2!1226 lt!55533))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!109577 () Bool)

(declare-fun Unit!3399 () Unit!3321)

(assert (=> b!109577 (= e!71270 Unit!3399)))

(declare-fun b!109578 () Bool)

(assert (=> b!109578 (= e!71271 (isDefined!110 (getValueByKey!157 (toList!808 (map!1294 (_2!1226 lt!55533))) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!30803 c!19390) b!109576))

(assert (= (and d!30803 (not c!19390)) b!109577))

(assert (= (and d!30803 (not res!54255)) b!109578))

(assert (=> d!30803 m!120979))

(declare-fun m!124235 () Bool)

(assert (=> d!30803 m!124235))

(assert (=> b!109576 m!120979))

(declare-fun m!124237 () Bool)

(assert (=> b!109576 m!124237))

(assert (=> b!109576 m!120979))

(declare-fun m!124239 () Bool)

(assert (=> b!109576 m!124239))

(assert (=> b!109576 m!124239))

(declare-fun m!124241 () Bool)

(assert (=> b!109576 m!124241))

(assert (=> b!109578 m!120979))

(assert (=> b!109578 m!124239))

(assert (=> b!109578 m!124239))

(assert (=> b!109578 m!124241))

(assert (=> b!108049 d!30803))

(assert (=> b!108049 d!30469))

(assert (=> b!108157 d!29963))

(declare-fun d!30805 () Bool)

(assert (=> d!30805 (= (apply!99 lt!55720 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1344 (getValueByKey!157 (toList!808 lt!55720) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4517 () Bool)

(assert (= bs!4517 d!30805))

(assert (=> bs!4517 m!124109))

(assert (=> bs!4517 m!124109))

(declare-fun m!124243 () Bool)

(assert (=> bs!4517 m!124243))

(assert (=> b!108314 d!30805))

(declare-fun d!30807 () Bool)

(assert (not d!30807))

(assert (=> b!108378 d!30807))

(declare-fun d!30809 () Bool)

(assert (=> d!30809 (= (apply!99 lt!55683 (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1344 (getValueByKey!157 (toList!808 lt!55683) (select (arr!2075 (_keys!4316 (v!2914 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4518 () Bool)

(assert (= bs!4518 d!30809))

(assert (=> bs!4518 m!121769))

(assert (=> bs!4518 m!123439))

(assert (=> bs!4518 m!123439))

(declare-fun m!124245 () Bool)

(assert (=> bs!4518 m!124245))

(assert (=> b!108228 d!30809))

(assert (=> b!108228 d!30457))

(declare-fun d!30811 () Bool)

(assert (=> d!30811 (= (get!1344 (getValueByKey!157 (toList!808 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55340)) (v!2918 (getValueByKey!157 (toList!808 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55340)))))

(assert (=> d!29907 d!30811))

(declare-fun c!19391 () Bool)

(declare-fun d!30813 () Bool)

(assert (=> d!30813 (= c!19391 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))) lt!55340)))))

(declare-fun e!71272 () Option!163)

(assert (=> d!30813 (= (getValueByKey!157 (toList!808 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))) lt!55340) e!71272)))

(declare-fun b!109580 () Bool)

(declare-fun e!71273 () Option!163)

(assert (=> b!109580 (= e!71272 e!71273)))

(declare-fun c!19392 () Bool)

(assert (=> b!109580 (= c!19392 (and ((_ is Cons!1621) (toList!808 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) (not (= (_1!1225 (h!2219 (toList!808 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992)))))))) lt!55340))))))

(declare-fun b!109581 () Bool)

(assert (=> b!109581 (= e!71273 (getValueByKey!157 (t!5741 (toList!808 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))) lt!55340))))

(declare-fun b!109579 () Bool)

(assert (=> b!109579 (= e!71272 (Some!162 (_2!1225 (h!2219 (toList!808 (+!148 lt!55328 (tuple2!2429 lt!55337 (minValue!2479 (v!2914 (underlying!367 thiss!992))))))))))))

(declare-fun b!109582 () Bool)

(assert (=> b!109582 (= e!71273 None!161)))

(assert (= (and d!30813 c!19391) b!109579))

(assert (= (and d!30813 (not c!19391)) b!109580))

(assert (= (and b!109580 c!19392) b!109581))

(assert (= (and b!109580 (not c!19392)) b!109582))

(declare-fun m!124247 () Bool)

(assert (=> b!109581 m!124247))

(assert (=> d!29907 d!30813))

(declare-fun c!19393 () Bool)

(declare-fun d!30815 () Bool)

(assert (=> d!30815 (= c!19393 (and ((_ is Cons!1621) (toList!808 lt!55618)) (= (_1!1225 (h!2219 (toList!808 lt!55618))) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992))))))))))

(declare-fun e!71274 () Option!163)

(assert (=> d!30815 (= (getValueByKey!157 (toList!808 lt!55618) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))) e!71274)))

(declare-fun b!109584 () Bool)

(declare-fun e!71275 () Option!163)

(assert (=> b!109584 (= e!71274 e!71275)))

(declare-fun c!19394 () Bool)

(assert (=> b!109584 (= c!19394 (and ((_ is Cons!1621) (toList!808 lt!55618)) (not (= (_1!1225 (h!2219 (toList!808 lt!55618))) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))))

(declare-fun b!109585 () Bool)

(assert (=> b!109585 (= e!71275 (getValueByKey!157 (t!5741 (toList!808 lt!55618)) (_1!1225 (tuple2!2429 lt!55321 (zeroValue!2479 (v!2914 (underlying!367 thiss!992)))))))))

(declare-fun b!109583 () Bool)

(assert (=> b!109583 (= e!71274 (Some!162 (_2!1225 (h!2219 (toList!808 lt!55618)))))))

(declare-fun b!109586 () Bool)

(assert (=> b!109586 (= e!71275 None!161)))

(assert (= (and d!30815 c!19393) b!109583))

(assert (= (and d!30815 (not c!19393)) b!109584))

(assert (= (and b!109584 c!19394) b!109585))

(assert (= (and b!109584 (not c!19394)) b!109586))

(declare-fun m!124249 () Bool)

(assert (=> b!109585 m!124249))

(assert (=> b!108142 d!30815))

(declare-fun condMapEmpty!3987 () Bool)

(declare-fun mapDefault!3987 () ValueCell!1002)

(assert (=> mapNonEmpty!3986 (= condMapEmpty!3987 (= mapRest!3986 ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3987)))))

(declare-fun e!71276 () Bool)

(declare-fun mapRes!3987 () Bool)

(assert (=> mapNonEmpty!3986 (= tp!9998 (and e!71276 mapRes!3987))))

(declare-fun b!109587 () Bool)

(declare-fun e!71277 () Bool)

(assert (=> b!109587 (= e!71277 tp_is_empty!2691)))

(declare-fun b!109588 () Bool)

(assert (=> b!109588 (= e!71276 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3987 () Bool)

(assert (=> mapIsEmpty!3987 mapRes!3987))

(declare-fun mapNonEmpty!3987 () Bool)

(declare-fun tp!9999 () Bool)

(assert (=> mapNonEmpty!3987 (= mapRes!3987 (and tp!9999 e!71277))))

(declare-fun mapValue!3987 () ValueCell!1002)

(declare-fun mapRest!3987 () (Array (_ BitVec 32) ValueCell!1002))

(declare-fun mapKey!3987 () (_ BitVec 32))

(assert (=> mapNonEmpty!3987 (= mapRest!3986 (store mapRest!3987 mapKey!3987 mapValue!3987))))

(assert (= (and mapNonEmpty!3986 condMapEmpty!3987) mapIsEmpty!3987))

(assert (= (and mapNonEmpty!3986 (not condMapEmpty!3987)) mapNonEmpty!3987))

(assert (= (and mapNonEmpty!3987 ((_ is ValueCellFull!1002) mapValue!3987)) b!109587))

(assert (= (and mapNonEmpty!3986 ((_ is ValueCellFull!1002) mapDefault!3987)) b!109588))

(declare-fun m!124251 () Bool)

(assert (=> mapNonEmpty!3987 m!124251))

(declare-fun condMapEmpty!3988 () Bool)

(declare-fun mapDefault!3988 () ValueCell!1002)

(assert (=> mapNonEmpty!3985 (= condMapEmpty!3988 (= mapRest!3985 ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3988)))))

(declare-fun e!71278 () Bool)

(declare-fun mapRes!3988 () Bool)

(assert (=> mapNonEmpty!3985 (= tp!9997 (and e!71278 mapRes!3988))))

(declare-fun b!109589 () Bool)

(declare-fun e!71279 () Bool)

(assert (=> b!109589 (= e!71279 tp_is_empty!2691)))

(declare-fun b!109590 () Bool)

(assert (=> b!109590 (= e!71278 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3988 () Bool)

(assert (=> mapIsEmpty!3988 mapRes!3988))

(declare-fun mapNonEmpty!3988 () Bool)

(declare-fun tp!10000 () Bool)

(assert (=> mapNonEmpty!3988 (= mapRes!3988 (and tp!10000 e!71279))))

(declare-fun mapValue!3988 () ValueCell!1002)

(declare-fun mapKey!3988 () (_ BitVec 32))

(declare-fun mapRest!3988 () (Array (_ BitVec 32) ValueCell!1002))

(assert (=> mapNonEmpty!3988 (= mapRest!3985 (store mapRest!3988 mapKey!3988 mapValue!3988))))

(assert (= (and mapNonEmpty!3985 condMapEmpty!3988) mapIsEmpty!3988))

(assert (= (and mapNonEmpty!3985 (not condMapEmpty!3988)) mapNonEmpty!3988))

(assert (= (and mapNonEmpty!3988 ((_ is ValueCellFull!1002) mapValue!3988)) b!109589))

(assert (= (and mapNonEmpty!3985 ((_ is ValueCellFull!1002) mapDefault!3988)) b!109590))

(declare-fun m!124253 () Bool)

(assert (=> mapNonEmpty!3988 m!124253))

(declare-fun b_lambda!4887 () Bool)

(assert (= b_lambda!4873 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4887)))

(declare-fun b_lambda!4889 () Bool)

(assert (= b_lambda!4867 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4889)))

(declare-fun b_lambda!4891 () Bool)

(assert (= b_lambda!4859 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4891)))

(declare-fun b_lambda!4893 () Bool)

(assert (= b_lambda!4869 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4893)))

(declare-fun b_lambda!4895 () Bool)

(assert (= b_lambda!4883 (or (and b!107580 b_free!2549) (and b!107593 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))))) b_lambda!4895)))

(declare-fun b_lambda!4897 () Bool)

(assert (= b_lambda!4871 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4897)))

(declare-fun b_lambda!4899 () Bool)

(assert (= b_lambda!4857 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4899)))

(declare-fun b_lambda!4901 () Bool)

(assert (= b_lambda!4879 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4901)))

(declare-fun b_lambda!4903 () Bool)

(assert (= b_lambda!4885 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4903)))

(declare-fun b_lambda!4905 () Bool)

(assert (= b_lambda!4877 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4905)))

(declare-fun b_lambda!4907 () Bool)

(assert (= b_lambda!4865 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4907)))

(declare-fun b_lambda!4909 () Bool)

(assert (= b_lambda!4881 (or (and b!107580 b_free!2549) (and b!107593 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))))) b_lambda!4909)))

(declare-fun b_lambda!4911 () Bool)

(assert (= b_lambda!4863 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4911)))

(declare-fun b_lambda!4913 () Bool)

(assert (= b_lambda!4861 (or (and b!107580 b_free!2549 (= (defaultEntry!2606 (v!2914 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107593 b_free!2551) b_lambda!4913)))

(check-sat (not d!30347) (not b!108752) (not d!30381) (not b!108513) (not b!108867) (not d!30071) (not b!108656) (not b!109523) (not b!109422) (not b!109515) (not d!30323) (not b!108974) (not b!109047) (not bm!11559) (not b!109206) (not d!30505) (not b!108833) (not d!30087) (not b!109561) (not b!108862) (not bm!11568) (not d!30261) (not d!30365) (not b!109550) (not b!108627) (not b!108594) (not b!108490) (not d!30107) (not b_lambda!4907) (not d!30483) (not bm!11525) (not b!109203) (not d!30439) (not b!108806) (not b!109578) (not b!108791) (not d!30221) (not b!109558) (not b!108586) (not b!109180) (not d!30763) (not b!108932) (not b!108860) (not b!108701) (not b!109262) (not b!108610) (not d!30255) (not b!108616) (not d!30565) (not b!109057) (not b!109234) (not b!109412) (not b!108608) (not b!108576) (not b!109547) (not b!109054) (not d!30207) (not b!109551) (not d!30093) (not d!30155) (not b!108933) (not d!30721) (not d!30683) (not b!108658) (not b!108598) (not b!108938) (not d!30447) (not d!30745) (not b!108810) (not b!108582) (not d!30507) (not d!30521) (not b!108566) (not bm!11618) (not bm!11515) (not d!30525) (not b!109296) (not d!30171) (not b!108478) (not b!109059) (not d!30435) (not b!109223) (not b!109049) (not b!108843) (not b!109130) (not d!30061) (not d!30523) (not b!109141) (not b!108709) (not d!30153) (not d!30257) (not b!108645) (not b!109370) (not b!109326) (not b!109571) (not b!109212) (not b!108746) (not bm!11550) (not b!109207) (not b!109128) (not b!109570) (not b!109264) (not d!30121) (not b_lambda!4887) (not d!30137) b_and!6747 (not d!30389) (not b_lambda!4851) (not d!30325) (not bm!11523) (not b!109280) (not b!108589) (not b!108575) (not b!108604) (not b!108681) (not bm!11625) (not d!30097) (not b!109024) (not b_lambda!4899) (not b!108702) (not bm!11633) (not bm!11569) (not b!108801) (not b!109198) (not b!109568) (not b!109023) (not d!30657) (not b!109133) (not b!109233) (not b!108469) (not b!108788) (not b!108984) (not d!30181) (not b_lambda!4905) (not b_lambda!4913) (not b!108899) (not d!30611) (not b!108912) (not bm!11585) (not b!108710) (not b!109075) (not b_lambda!4889) (not d!30633) (not b!109409) (not b!109430) (not b!108777) (not d!30531) (not b!109172) (not d!30225) (not bm!11614) (not b!109055) (not b!109355) (not d!30659) (not b!108718) (not b!108903) (not b!108444) (not b!108859) (not b!109448) (not d!30065) (not b!109087) (not bm!11576) (not bm!11622) (not d!30619) (not d!30249) (not b!109042) (not d!30279) (not d!30803) (not b!109432) (not b!108963) (not d!30597) (not b!108674) (not d!30615) (not d!30643) (not b!108530) (not d!30541) (not b!108574) (not b!108497) (not b!109446) (not b!108447) (not d!30625) (not b!108704) (not d!30559) (not b!108654) (not b!109404) (not b!108584) (not b!108920) (not b!109329) (not b!108495) (not bm!11544) (not b!109445) (not b!109214) (not b!109365) (not d!30593) (not b!108748) (not d!30665) (not b!108959) (not d!30759) (not d!30671) (not b!108727) (not b!109003) (not d!30621) (not b_lambda!4831) (not b!109556) (not b!109367) (not b!109478) (not bm!11604) (not b!109474) (not b!109240) (not b!109450) (not d!30515) (not b!109085) (not b!109231) (not d!30177) (not d!30359) (not b!109058) (not b!108581) (not d!30113) (not b!109293) (not b!109349) (not b!109345) (not b!108705) (not b!108852) (not b!109046) (not d!30771) (not b!108921) (not d!30361) (not b!108857) (not bm!11635) (not d!30793) (not b!109189) (not b!109152) (not b!109315) (not bm!11582) (not d!30117) (not d!30799) (not d!30503) (not d!30299) (not b!108793) (not b!108942) (not b!108655) (not d!30551) (not bm!11580) (not b!108462) (not d!30069) (not d!30213) (not b!108624) (not d!30429) (not d!30729) (not b!108717) (not b!108998) (not b!109066) (not d!30109) (not b!109532) (not bm!11522) (not d!30491) (not d!30789) (not b!108632) (not d!30557) (not b!109053) (not b!109031) (not b!108503) (not b_lambda!4891) (not d!30651) (not b!109439) (not bm!11637) (not b!109088) (not b!109311) (not d!30253) (not b!109536) (not bm!11557) (not b!108512) (not b!108534) (not b!109470) (not b!109324) (not d!30189) (not b!108493) (not b!109338) (not b!109135) (not b_next!2549) (not bm!11527) (not b!109105) (not b!109210) (not b!108483) (not b!108673) (not bm!11552) (not b!109013) (not d!30677) (not b!109034) (not d!30753) (not d!30301) (not mapNonEmpty!3988) (not b!108835) (not b!109299) (not d!30499) (not b!109154) (not b!109065) (not d!30367) (not b!109151) (not b!109143) (not b!109457) (not b!109538) (not d!30403) (not bm!11555) (not b!109080) (not bm!11620) (not b!108592) (not bm!11595) (not b!109177) (not b!108880) (not b!109230) (not b!108480) (not b!109513) (not b!109239) (not b!108823) (not d!30731) (not b!108536) (not b!109381) (not d!30077) (not bm!11587) (not b!108482) (not b!108795) (not d!30379) (not d!30581) (not d!30173) (not b!108488) (not b!109304) (not b!108666) (not d!30527) (not b!109103) (not bm!11573) (not d!30567) (not b!109508) (not b!109062) (not b!108578) (not d!30795) (not b!108517) (not b!109217) (not d!30735) (not d!30215) (not b!109022) (not b!109481) (not b!109243) (not b!109407) (not b!108637) (not b!108940) (not d!30175) (not b!109005) (not b!108744) (not d!30055) (not d!30193) (not b!108570) (not b!109029) (not b!108475) (not b!109383) (not b!109071) (not b!108896) (not b!109190) (not bm!11554) (not b!109476) (not b!108535) (not b!109015) (not b_lambda!4823) (not bm!11565) (not b!108877) (not d!30141) (not d!30197) (not d!30191) (not d!30781) (not b!108664) (not b!109032) (not b!109178) (not b!109026) (not b!109581) (not d!30205) (not b!109466) (not b!108563) (not b!108630) (not b!108661) (not b!109518) (not d!30511) (not d!30773) (not d!30187) (not d!30105) (not b!109228) (not b!108676) (not b!108883) (not b!109213) (not b!108707) (not b!109126) (not b!108935) (not b_lambda!4847) (not b!108739) (not b!108468) (not b!108878) (not b!109420) (not b!108500) (not d!30553) (not b!108971) (not b!109140) (not b!109452) (not b_lambda!4901) (not d!30543) (not b!108683) (not d!30777) (not mapNonEmpty!3987) (not b!109544) (not b!109100) (not b!109175) (not b!108523) (not b!108435) (not bm!11598) (not d!30501) (not b!109289) (not b!108449) (not d!30637) (not b_lambda!4835) (not d!30353) (not b!109585) (not d!30547) (not b!109050) (not b!109101) (not b!109347) (not b!109335) (not b!108587) (not b!109247) (not b_lambda!4903) (not b!108625) (not bm!11520) (not d!30545) (not b!109364) (not d!30663) (not b!109202) (not d!30555) (not b!109222) (not d!30247) (not d!30549) (not d!30701) (not bm!11556) (not b_lambda!4855) (not d!30575) (not b!109138) (not b!108985) (not b!108538) (not d!30321) (not b!108501) (not b!109096) (not bm!11540) (not b!108511) (not b!108809) (not d!30351) (not d!30091) (not b!109322) (not b!109251) (not d!30791) (not d!30441) (not d!30147) (not b!109287) (not b!108733) (not b!108442) (not b_lambda!4875) (not bm!11615) (not bm!11611) (not d!30583) (not b!109454) (not b!108926) (not b!108565) (not b!109340) (not b!109382) (not d!30159) (not b!108509) (not b!108890) (not b!108950) (not b!109188) (not b!109226) (not b!108815) (not b!108731) (not d!30443) (not d!30051) (not d!30529) (not b!109530) (not b!109277) (not b!108485) (not b!108742) (not b_lambda!4897) (not bm!11537) (not d!30561) (not d!30163) (not bm!11518) (not b!109357) (not b!108694) (not d!30371) (not b_lambda!4833) (not b!109442) (not b!109396) (not b!109440) (not d!30089) (not b!109553) (not d!30397) (not d!30169) (not b!108820) (not b!109576) (not d!30315) (not b!109537) (not b!109379) (not b!108459) (not b_lambda!4911) (not d!30689) (not b!109150) (not b!108888) (not b!108506) (not b!109573) (not d!30183) (not b!109479) (not d!30157) (not b!108558) (not b!109472) (not d!30641) (not b!108850) (not b!108821) (not b!108851) (not bm!11541) (not bm!11547) (not b!108606) (not b!108891) (not b!108712) (not bm!11632) (not d!30165) (not b!108549) (not b!108470) (not b!109052) (not b!108813) (not b!108635) (not b!108887) (not b!109376) (not b!108680) (not d!30797) (not b!109468) (not bm!11571) (not d!30519) (not d!30465) (not b!109068) (not b!109539) (not b!108450) (not d!30341) (not d!30627) (not d!30285) (not b!109429) (not b!109399) (not b!108486) (not b!109291) (not b!108988) (not d!30273) (not d!30085) (not d!30461) (not b!108520) (not b!108927) (not d!30675) (not b!109414) (not b!109403) (not b!109528) (not b!108439) (not d!30631) (not b!109517) (not b!108904) (not d!30053) (not b!109292) (not b!109391) (not d!30415) (not b!108547) (not b!108491) (not b!109354) (not bm!11534) (not b!108898) (not d!30699) (not b!109371) (not b!108692) (not bm!11528) (not b!109366) (not b!109041) (not b!108663) (not b!109342) (not d!30111) (not b!108831) (not b!109043) (not b!108639) (not b!108999) (not b!108803) (not d!30373) (not b!109157) (not b!109461) (not b!108885) (not b_lambda!4895) (not d!30495) (not d!30493) (not b!108720) (not b!108543) (not b!108583) (not d!30571) (not b!108715) (not d!30267) (not b!108982) (not d!30129) (not b!108978) (not b!109405) (not bm!11519) (not b!109464) (not b!108460) (not b!109373) (not bm!11617) (not b!108802) (not b!108514) (not b!109525) (not b!108595) (not bm!11531) (not b!109411) (not d!30599) (not b!109170) (not d!30687) (not d!30185) (not b!109173) (not d!30569) (not bm!11560) (not d!30761) (not b!108750) (not d!30095) (not b!109237) (not b!109301) (not b!108812) (not b!109318) (not d!30589) (not b!108504) (not b!108642) (not d!30585) (not d!30469) (not b!108895) (not b!109123) (not b!109312) (not b!108550) (not b!108527) (not b!108452) (not d!30617) (not b!109400) (not b!109183) (not bm!11549) (not d!30287) (not b!109254) (not b!108892) (not bm!11564) (not b!109417) (not d!30115) (not b!108678) (not b_lambda!4849) (not b!109215) (not b!108473) (not d!30263) (not b!109321) (not b!108736) (not b!109330) (not b!109521) (not b!109218) (not b!109225) (not b!109216) (not b!109559) (not b_lambda!4893) (not b!108623) (not b!109064) (not d!30067) (not b!109221) (not d!30579) (not b!109398) (not b!108684) (not b!108917) b_and!6749 (not b!108996) (not b!108955) (not b!108499) (not d!30079) (not b!108834) (not b!108567) (not b_lambda!4853) (not b!108881) (not b!109483) (not b!109443) (not b!109012) (not d!30237) (not d!30481) (not b!108847) (not b!109169) (not d!30219) (not d!30083) (not d!30291) (not d!30513) (not b!108441) (not b!109186) (not b!108937) (not d!30125) (not d!30101) (not d!30577) (not b!109288) (not d!30269) (not d!30339) (not bm!11600) (not d!30563) (not bm!11638) (not d!30451) (not d!30421) (not b!109086) (not bm!11583) (not b!108573) (not b!108958) (not b!109302) (not bm!11636) (not b_lambda!4909) (not d!30231) (not b!108647) (not d!30331) (not b!108689) (not bm!11562) (not d!30405) (not d!30655) (not b!109575) (not d!30149) (not d!30229) (not b!109332) (not d!30329) (not b!109159) (not d!30463) (not bm!11566) (not b!109368) (not b!108754) (not d!30459) (not b!109007) (not d!30375) (not b!108730) (not b!109205) (not b!109079) (not b!109273) (not d!30681) (not b!108686) (not b!109061) (not b!108969) (not d!30167) (not d!30691) (not b!109419) (not b!109045) (not d!30239) (not bm!11593) (not b!109534) (not d!30391) (not b!109327) (not b!108691) (not b!109473) (not d!30471) (not d!30603) (not b!109266) (not bm!11590) (not d!30573) (not b!109083) (not b!108613) (not d!30453) (not bm!11607) (not d!30733) (not d!30337) (not b!108784) (not b!109294) (not b!109569) (not d!30785) (not b!109162) (not d!30233) (not bm!11579) (not bm!11596) (not d!30449) (not b!108848) (not d!30645) (not b!108957) (not b!109010) (not b!109352) (not b!108728) (not b_next!2551) (not b!108494) (not d!30805) (not d!30713) (not b!109395) (not d!30673) (not b!109261) (not d!30535) (not d!30103) (not bm!11610) (not b!109319) (not b!108437) (not b!109219) (not d!30179) (not b!108532) (not b!109520) (not bm!11634) (not b!109527) (not b!108993) tp_is_empty!2691 (not b!109132) (not d!30679) (not b!108941) (not d!30497) (not b!108644) (not b!108508) (not b!108562) (not bm!11514) (not b!108600) (not d!30357) (not b!108477) (not b!108830) (not b!108571) (not d!30727) (not b!108818) (not d!30345) (not d!30809) (not d!30393) (not b!108966) (not b!108916) (not b!109104) (not b!109078) (not b!109160) (not d!30099) (not b!108990) (not b!108954) (not b!108919) (not bm!11601) (not d!30423))
(check-sat b_and!6747 b_and!6749 (not b_next!2549) (not b_next!2551))
