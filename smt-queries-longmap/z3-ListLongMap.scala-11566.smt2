; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!134752 () Bool)

(assert start!134752)

(declare-fun res!1073783 () Bool)

(declare-fun e!876328 () Bool)

(assert (=> start!134752 (=> (not res!1073783) (not e!876328))))

(declare-fun mask!889 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!134752 (= res!1073783 (validMask!0 mask!889))))

(assert (=> start!134752 e!876328))

(assert (=> start!134752 true))

(declare-datatypes ((array!104891 0))(
  ( (array!104892 (arr!50618 (Array (_ BitVec 32) (_ BitVec 64))) (size!51168 (_ BitVec 32))) )
))
(declare-fun _keys!600 () array!104891)

(declare-fun array_inv!39345 (array!104891) Bool)

(assert (=> start!134752 (array_inv!39345 _keys!600)))

(declare-fun b!1571671 () Bool)

(declare-fun res!1073784 () Bool)

(assert (=> b!1571671 (=> (not res!1073784) (not e!876328))))

(assert (=> b!1571671 (= res!1073784 (= (size!51168 _keys!600) (bvadd #b00000000000000000000000000000001 mask!889)))))

(declare-fun b!1571672 () Bool)

(declare-fun res!1073782 () Bool)

(assert (=> b!1571672 (=> (not res!1073782) (not e!876328))))

(declare-fun k0!754 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1571672 (= res!1073782 (validKeyInArray!0 k0!754))))

(declare-fun b!1571673 () Bool)

(assert (=> b!1571673 (= e!876328 (bvslt mask!889 #b00000000000000000000000000000000))))

(declare-fun lt!673666 () (_ BitVec 32))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1571673 (= lt!673666 (toIndex!0 k0!754 mask!889))))

(assert (= (and start!134752 res!1073783) b!1571671))

(assert (= (and b!1571671 res!1073784) b!1571672))

(assert (= (and b!1571672 res!1073782) b!1571673))

(declare-fun m!1445559 () Bool)

(assert (=> start!134752 m!1445559))

(declare-fun m!1445561 () Bool)

(assert (=> start!134752 m!1445561))

(declare-fun m!1445563 () Bool)

(assert (=> b!1571672 m!1445563))

(declare-fun m!1445565 () Bool)

(assert (=> b!1571673 m!1445565))

(check-sat (not b!1571673) (not start!134752) (not b!1571672))
(check-sat)
(get-model)

(declare-fun d!164607 () Bool)

(declare-fun lt!673675 () (_ BitVec 32))

(declare-fun lt!673674 () (_ BitVec 32))

(assert (=> d!164607 (= lt!673675 (bvmul (bvxor lt!673674 (bvlshr lt!673674 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!164607 (= lt!673674 ((_ extract 31 0) (bvand (bvxor k0!754 (bvlshr k0!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!164607 (and (bvsge mask!889 #b00000000000000000000000000000000) (let ((res!1073794 (let ((h!38204 ((_ extract 31 0) (bvand (bvxor k0!754 (bvlshr k0!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141303 (bvmul (bvxor h!38204 (bvlshr h!38204 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141303 (bvlshr x!141303 #b00000000000000000000000000001101)) mask!889))))) (and (bvslt res!1073794 (bvadd mask!889 #b00000000000000000000000000000001)) (bvsge res!1073794 #b00000000000000000000000000000000))))))

(assert (=> d!164607 (= (toIndex!0 k0!754 mask!889) (bvand (bvxor lt!673675 (bvlshr lt!673675 #b00000000000000000000000000001101)) mask!889))))

(assert (=> b!1571673 d!164607))

(declare-fun d!164613 () Bool)

(assert (=> d!164613 (= (validMask!0 mask!889) (and (or (= mask!889 #b00000000000000000000000000000111) (= mask!889 #b00000000000000000000000000001111) (= mask!889 #b00000000000000000000000000011111) (= mask!889 #b00000000000000000000000000111111) (= mask!889 #b00000000000000000000000001111111) (= mask!889 #b00000000000000000000000011111111) (= mask!889 #b00000000000000000000000111111111) (= mask!889 #b00000000000000000000001111111111) (= mask!889 #b00000000000000000000011111111111) (= mask!889 #b00000000000000000000111111111111) (= mask!889 #b00000000000000000001111111111111) (= mask!889 #b00000000000000000011111111111111) (= mask!889 #b00000000000000000111111111111111) (= mask!889 #b00000000000000001111111111111111) (= mask!889 #b00000000000000011111111111111111) (= mask!889 #b00000000000000111111111111111111) (= mask!889 #b00000000000001111111111111111111) (= mask!889 #b00000000000011111111111111111111) (= mask!889 #b00000000000111111111111111111111) (= mask!889 #b00000000001111111111111111111111) (= mask!889 #b00000000011111111111111111111111) (= mask!889 #b00000000111111111111111111111111) (= mask!889 #b00000001111111111111111111111111) (= mask!889 #b00000011111111111111111111111111) (= mask!889 #b00000111111111111111111111111111) (= mask!889 #b00001111111111111111111111111111) (= mask!889 #b00011111111111111111111111111111) (= mask!889 #b00111111111111111111111111111111)) (bvsle mask!889 #b00111111111111111111111111111111)))))

(assert (=> start!134752 d!164613))

(declare-fun d!164623 () Bool)

(assert (=> d!164623 (= (array_inv!39345 _keys!600) (bvsge (size!51168 _keys!600) #b00000000000000000000000000000000))))

(assert (=> start!134752 d!164623))

(declare-fun d!164625 () Bool)

(assert (=> d!164625 (= (validKeyInArray!0 k0!754) (and (not (= k0!754 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k0!754 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1571672 d!164625))

(check-sat)
