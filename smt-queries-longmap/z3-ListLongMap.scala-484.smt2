; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10348 () Bool)

(assert start!10348)

(declare-fun b!80271 () Bool)

(declare-fun b_free!2201 () Bool)

(declare-fun b_next!2201 () Bool)

(assert (=> b!80271 (= b_free!2201 (not b_next!2201))))

(declare-fun tp!8814 () Bool)

(declare-fun b_and!4907 () Bool)

(assert (=> b!80271 (= tp!8814 b_and!4907)))

(declare-fun b!80263 () Bool)

(declare-fun b_free!2203 () Bool)

(declare-fun b_next!2203 () Bool)

(assert (=> b!80263 (= b_free!2203 (not b_next!2203))))

(declare-fun tp!8812 () Bool)

(declare-fun b_and!4909 () Bool)

(assert (=> b!80263 (= tp!8812 b_and!4909)))

(declare-fun b!80261 () Bool)

(declare-fun e!52443 () Bool)

(declare-fun e!52433 () Bool)

(assert (=> b!80261 (= e!52443 e!52433)))

(declare-fun res!41846 () Bool)

(assert (=> b!80261 (=> (not res!41846) (not e!52433))))

(declare-datatypes ((V!3003 0))(
  ( (V!3004 (val!1303 Int)) )
))
(declare-datatypes ((array!3989 0))(
  ( (array!3990 (arr!1901 (Array (_ BitVec 32) (_ BitVec 64))) (size!2143 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!915 0))(
  ( (ValueCellFull!915 (v!2607 V!3003)) (EmptyCell!915) )
))
(declare-datatypes ((array!3991 0))(
  ( (array!3992 (arr!1902 (Array (_ BitVec 32) ValueCell!915)) (size!2144 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!738 0))(
  ( (LongMapFixedSize!739 (defaultEntry!2293 Int) (mask!6299 (_ BitVec 32)) (extraKeys!2140 (_ BitVec 32)) (zeroValue!2189 V!3003) (minValue!2189 V!3003) (_size!418 (_ BitVec 32)) (_keys!3957 array!3989) (_values!2276 array!3991) (_vacant!418 (_ BitVec 32))) )
))
(declare-datatypes ((tuple2!2178 0))(
  ( (tuple2!2179 (_1!1100 Bool) (_2!1100 LongMapFixedSize!738)) )
))
(declare-fun lt!37279 () tuple2!2178)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!80261 (= res!41846 (and (_1!1100 lt!37279) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!2341 0))(
  ( (Unit!2342) )
))
(declare-fun lt!37272 () Unit!2341)

(declare-fun e!52436 () Unit!2341)

(assert (=> b!80261 (= lt!37272 e!52436)))

(declare-datatypes ((Cell!540 0))(
  ( (Cell!541 (v!2608 LongMapFixedSize!738)) )
))
(declare-datatypes ((LongMap!540 0))(
  ( (LongMap!541 (underlying!281 Cell!540)) )
))
(declare-fun thiss!992 () LongMap!540)

(declare-fun c!12532 () Bool)

(declare-datatypes ((tuple2!2180 0))(
  ( (tuple2!2181 (_1!1101 (_ BitVec 64)) (_2!1101 V!3003)) )
))
(declare-datatypes ((List!1511 0))(
  ( (Nil!1508) (Cons!1507 (h!2096 tuple2!2180) (t!5178 List!1511)) )
))
(declare-datatypes ((ListLongMap!1451 0))(
  ( (ListLongMap!1452 (toList!741 List!1511)) )
))
(declare-fun lt!37271 () ListLongMap!1451)

(declare-fun contains!745 (ListLongMap!1451 (_ BitVec 64)) Bool)

(assert (=> b!80261 (= c!12532 (contains!745 lt!37271 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun newMap!16 () LongMapFixedSize!738)

(declare-fun lt!37282 () V!3003)

(declare-fun update!108 (LongMapFixedSize!738 (_ BitVec 64) V!3003) tuple2!2178)

(assert (=> b!80261 (= lt!37279 (update!108 newMap!16 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))

(declare-fun b!80262 () Bool)

(declare-fun res!41841 () Bool)

(declare-fun e!52428 () Bool)

(assert (=> b!80262 (=> (not res!41841) (not e!52428))))

(declare-fun valid!316 (LongMapFixedSize!738) Bool)

(assert (=> b!80262 (= res!41841 (valid!316 newMap!16))))

(declare-fun e!52445 () Bool)

(declare-fun tp_is_empty!2517 () Bool)

(declare-fun e!52430 () Bool)

(declare-fun array_inv!1175 (array!3989) Bool)

(declare-fun array_inv!1176 (array!3991) Bool)

(assert (=> b!80263 (= e!52445 (and tp!8812 tp_is_empty!2517 (array_inv!1175 (_keys!3957 newMap!16)) (array_inv!1176 (_values!2276 newMap!16)) e!52430))))

(declare-fun b!80264 () Bool)

(declare-fun e!52435 () Bool)

(assert (=> b!80264 (= e!52435 tp_is_empty!2517)))

(declare-fun b!80265 () Bool)

(declare-fun e!52440 () Bool)

(assert (=> b!80265 (= e!52428 e!52440)))

(declare-fun res!41839 () Bool)

(assert (=> b!80265 (=> (not res!41839) (not e!52440))))

(declare-fun lt!37274 () ListLongMap!1451)

(assert (=> b!80265 (= res!41839 (= lt!37274 lt!37271))))

(declare-fun map!1178 (LongMapFixedSize!738) ListLongMap!1451)

(assert (=> b!80265 (= lt!37271 (map!1178 newMap!16))))

(declare-fun getCurrentListMap!435 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) Int) ListLongMap!1451)

(assert (=> b!80265 (= lt!37274 (getCurrentListMap!435 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun b!80266 () Bool)

(declare-fun Unit!2343 () Unit!2341)

(assert (=> b!80266 (= e!52436 Unit!2343)))

(declare-fun b!80267 () Bool)

(declare-fun e!52442 () Bool)

(declare-fun mapRes!3329 () Bool)

(assert (=> b!80267 (= e!52442 (and e!52435 mapRes!3329))))

(declare-fun condMapEmpty!3329 () Bool)

(declare-fun mapDefault!3330 () ValueCell!915)

(assert (=> b!80267 (= condMapEmpty!3329 (= (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3330)))))

(declare-fun res!41844 () Bool)

(assert (=> start!10348 (=> (not res!41844) (not e!52428))))

(declare-fun valid!317 (LongMap!540) Bool)

(assert (=> start!10348 (= res!41844 (valid!317 thiss!992))))

(assert (=> start!10348 e!52428))

(declare-fun e!52434 () Bool)

(assert (=> start!10348 e!52434))

(assert (=> start!10348 true))

(assert (=> start!10348 e!52445))

(declare-fun b!80268 () Bool)

(declare-fun res!41840 () Bool)

(assert (=> b!80268 (=> (not res!41840) (not e!52428))))

(assert (=> b!80268 (= res!41840 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6299 newMap!16)) (_size!418 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun b!80269 () Bool)

(declare-fun e!52431 () Bool)

(assert (=> b!80269 (= e!52431 tp_is_empty!2517)))

(declare-fun b!80270 () Bool)

(declare-fun mapRes!3330 () Bool)

(assert (=> b!80270 (= e!52430 (and e!52431 mapRes!3330))))

(declare-fun condMapEmpty!3330 () Bool)

(declare-fun mapDefault!3329 () ValueCell!915)

(assert (=> b!80270 (= condMapEmpty!3330 (= (arr!1902 (_values!2276 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3329)))))

(declare-fun mapIsEmpty!3329 () Bool)

(assert (=> mapIsEmpty!3329 mapRes!3329))

(declare-fun e!52437 () Bool)

(assert (=> b!80271 (= e!52437 (and tp!8814 tp_is_empty!2517 (array_inv!1175 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (array_inv!1176 (_values!2276 (v!2608 (underlying!281 thiss!992)))) e!52442))))

(declare-fun b!80272 () Bool)

(declare-fun e!52441 () Bool)

(assert (=> b!80272 (= e!52441 tp_is_empty!2517)))

(declare-fun b!80273 () Bool)

(assert (=> b!80273 (= e!52440 e!52443)))

(declare-fun res!41845 () Bool)

(assert (=> b!80273 (=> (not res!41845) (not e!52443))))

(assert (=> b!80273 (= res!41845 (and (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1179 (ValueCell!915 V!3003) V!3003)

(declare-fun dynLambda!337 (Int (_ BitVec 64)) V!3003)

(assert (=> b!80273 (= lt!37282 (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) from!355) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun mapNonEmpty!3329 () Bool)

(declare-fun tp!8811 () Bool)

(assert (=> mapNonEmpty!3329 (= mapRes!3329 (and tp!8811 e!52441))))

(declare-fun mapValue!3329 () ValueCell!915)

(declare-fun mapKey!3330 () (_ BitVec 32))

(declare-fun mapRest!3330 () (Array (_ BitVec 32) ValueCell!915))

(assert (=> mapNonEmpty!3329 (= (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (store mapRest!3330 mapKey!3330 mapValue!3329))))

(declare-fun mapNonEmpty!3330 () Bool)

(declare-fun tp!8813 () Bool)

(declare-fun e!52439 () Bool)

(assert (=> mapNonEmpty!3330 (= mapRes!3330 (and tp!8813 e!52439))))

(declare-fun mapRest!3329 () (Array (_ BitVec 32) ValueCell!915))

(declare-fun mapValue!3330 () ValueCell!915)

(declare-fun mapKey!3329 () (_ BitVec 32))

(assert (=> mapNonEmpty!3330 (= (arr!1902 (_values!2276 newMap!16)) (store mapRest!3329 mapKey!3329 mapValue!3330))))

(declare-fun mapIsEmpty!3330 () Bool)

(assert (=> mapIsEmpty!3330 mapRes!3330))

(declare-fun b!80274 () Bool)

(declare-fun e!52432 () Bool)

(assert (=> b!80274 (= e!52434 e!52432)))

(declare-fun b!80275 () Bool)

(declare-fun e!52444 () Bool)

(assert (=> b!80275 (= e!52433 (not e!52444))))

(declare-fun res!41842 () Bool)

(assert (=> b!80275 (=> res!41842 e!52444)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!80275 (= res!41842 (not (validMask!0 (mask!6299 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun lt!37278 () tuple2!2180)

(declare-fun lt!37276 () ListLongMap!1451)

(declare-fun lt!37273 () ListLongMap!1451)

(declare-fun lt!37283 () tuple2!2180)

(declare-fun +!106 (ListLongMap!1451 tuple2!2180) ListLongMap!1451)

(assert (=> b!80275 (= (+!106 lt!37273 lt!37278) (+!106 (+!106 lt!37276 lt!37278) lt!37283))))

(assert (=> b!80275 (= lt!37278 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun lt!37280 () Unit!2341)

(declare-fun addCommutativeForDiffKeys!25 (ListLongMap!1451 (_ BitVec 64) V!3003 (_ BitVec 64) V!3003) Unit!2341)

(assert (=> b!80275 (= lt!37280 (addCommutativeForDiffKeys!25 lt!37276 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun lt!37284 () ListLongMap!1451)

(assert (=> b!80275 (= lt!37284 lt!37273)))

(assert (=> b!80275 (= lt!37273 (+!106 lt!37276 lt!37283))))

(declare-fun lt!37281 () ListLongMap!1451)

(declare-fun lt!37268 () tuple2!2180)

(assert (=> b!80275 (= lt!37284 (+!106 lt!37281 lt!37268))))

(declare-fun lt!37277 () ListLongMap!1451)

(assert (=> b!80275 (= lt!37276 (+!106 lt!37277 lt!37268))))

(assert (=> b!80275 (= lt!37268 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))

(assert (=> b!80275 (= lt!37281 (+!106 lt!37277 lt!37283))))

(assert (=> b!80275 (= lt!37283 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))

(declare-fun lt!37275 () Unit!2341)

(assert (=> b!80275 (= lt!37275 (addCommutativeForDiffKeys!25 lt!37277 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!71 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) Int) ListLongMap!1451)

(assert (=> b!80275 (= lt!37277 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun b!80276 () Bool)

(assert (=> b!80276 (= e!52432 e!52437)))

(declare-fun b!80277 () Bool)

(assert (=> b!80277 (= e!52439 tp_is_empty!2517)))

(declare-fun b!80278 () Bool)

(assert (=> b!80278 (= e!52444 (or (not (= (size!2144 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6299 (v!2608 (underlying!281 thiss!992)))))) (= (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (size!2144 (_values!2276 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!80279 () Bool)

(declare-fun res!41843 () Bool)

(assert (=> b!80279 (=> (not res!41843) (not e!52428))))

(assert (=> b!80279 (= res!41843 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!80280 () Bool)

(declare-fun Unit!2344 () Unit!2341)

(assert (=> b!80280 (= e!52436 Unit!2344)))

(declare-fun lt!37270 () Unit!2341)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!64 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) (_ BitVec 32) Int) Unit!2341)

(assert (=> b!80280 (= lt!37270 (lemmaListMapContainsThenArrayContainsFrom!64 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3989 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!80280 (arrayContainsKey!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!37269 () Unit!2341)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3989 (_ BitVec 32) (_ BitVec 32)) Unit!2341)

(assert (=> b!80280 (= lt!37269 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1512 0))(
  ( (Nil!1509) (Cons!1508 (h!2097 (_ BitVec 64)) (t!5179 List!1512)) )
))
(declare-fun arrayNoDuplicates!0 (array!3989 (_ BitVec 32) List!1512) Bool)

(assert (=> b!80280 (arrayNoDuplicates!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) from!355 Nil!1509)))

(declare-fun lt!37285 () Unit!2341)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3989 (_ BitVec 32) (_ BitVec 64) List!1512) Unit!2341)

(assert (=> b!80280 (= lt!37285 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509)))))

(assert (=> b!80280 false))

(assert (= (and start!10348 res!41844) b!80279))

(assert (= (and b!80279 res!41843) b!80262))

(assert (= (and b!80262 res!41841) b!80268))

(assert (= (and b!80268 res!41840) b!80265))

(assert (= (and b!80265 res!41839) b!80273))

(assert (= (and b!80273 res!41845) b!80261))

(assert (= (and b!80261 c!12532) b!80280))

(assert (= (and b!80261 (not c!12532)) b!80266))

(assert (= (and b!80261 res!41846) b!80275))

(assert (= (and b!80275 (not res!41842)) b!80278))

(assert (= (and b!80267 condMapEmpty!3329) mapIsEmpty!3329))

(assert (= (and b!80267 (not condMapEmpty!3329)) mapNonEmpty!3329))

(get-info :version)

(assert (= (and mapNonEmpty!3329 ((_ is ValueCellFull!915) mapValue!3329)) b!80272))

(assert (= (and b!80267 ((_ is ValueCellFull!915) mapDefault!3330)) b!80264))

(assert (= b!80271 b!80267))

(assert (= b!80276 b!80271))

(assert (= b!80274 b!80276))

(assert (= start!10348 b!80274))

(assert (= (and b!80270 condMapEmpty!3330) mapIsEmpty!3330))

(assert (= (and b!80270 (not condMapEmpty!3330)) mapNonEmpty!3330))

(assert (= (and mapNonEmpty!3330 ((_ is ValueCellFull!915) mapValue!3330)) b!80277))

(assert (= (and b!80270 ((_ is ValueCellFull!915) mapDefault!3329)) b!80269))

(assert (= b!80263 b!80270))

(assert (= start!10348 b!80263))

(declare-fun b_lambda!3587 () Bool)

(assert (=> (not b_lambda!3587) (not b!80273)))

(declare-fun t!5175 () Bool)

(declare-fun tb!1637 () Bool)

(assert (=> (and b!80271 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))) t!5175) tb!1637))

(declare-fun result!2839 () Bool)

(assert (=> tb!1637 (= result!2839 tp_is_empty!2517)))

(assert (=> b!80273 t!5175))

(declare-fun b_and!4911 () Bool)

(assert (= b_and!4907 (and (=> t!5175 result!2839) b_and!4911)))

(declare-fun tb!1639 () Bool)

(declare-fun t!5177 () Bool)

(assert (=> (and b!80263 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))) t!5177) tb!1639))

(declare-fun result!2843 () Bool)

(assert (= result!2843 result!2839))

(assert (=> b!80273 t!5177))

(declare-fun b_and!4913 () Bool)

(assert (= b_and!4909 (and (=> t!5177 result!2843) b_and!4913)))

(declare-fun m!81801 () Bool)

(assert (=> b!80271 m!81801))

(declare-fun m!81803 () Bool)

(assert (=> b!80271 m!81803))

(declare-fun m!81805 () Bool)

(assert (=> mapNonEmpty!3329 m!81805))

(declare-fun m!81807 () Bool)

(assert (=> b!80280 m!81807))

(declare-fun m!81809 () Bool)

(assert (=> b!80280 m!81809))

(declare-fun m!81811 () Bool)

(assert (=> b!80280 m!81811))

(declare-fun m!81813 () Bool)

(assert (=> b!80280 m!81813))

(assert (=> b!80280 m!81811))

(assert (=> b!80280 m!81811))

(declare-fun m!81815 () Bool)

(assert (=> b!80280 m!81815))

(assert (=> b!80280 m!81811))

(declare-fun m!81817 () Bool)

(assert (=> b!80280 m!81817))

(assert (=> b!80273 m!81811))

(declare-fun m!81819 () Bool)

(assert (=> b!80273 m!81819))

(declare-fun m!81821 () Bool)

(assert (=> b!80273 m!81821))

(assert (=> b!80273 m!81819))

(assert (=> b!80273 m!81821))

(declare-fun m!81823 () Bool)

(assert (=> b!80273 m!81823))

(declare-fun m!81825 () Bool)

(assert (=> b!80275 m!81825))

(declare-fun m!81827 () Bool)

(assert (=> b!80275 m!81827))

(declare-fun m!81829 () Bool)

(assert (=> b!80275 m!81829))

(declare-fun m!81831 () Bool)

(assert (=> b!80275 m!81831))

(assert (=> b!80275 m!81811))

(declare-fun m!81833 () Bool)

(assert (=> b!80275 m!81833))

(declare-fun m!81835 () Bool)

(assert (=> b!80275 m!81835))

(assert (=> b!80275 m!81811))

(declare-fun m!81837 () Bool)

(assert (=> b!80275 m!81837))

(assert (=> b!80275 m!81811))

(declare-fun m!81839 () Bool)

(assert (=> b!80275 m!81839))

(assert (=> b!80275 m!81835))

(declare-fun m!81841 () Bool)

(assert (=> b!80275 m!81841))

(declare-fun m!81843 () Bool)

(assert (=> b!80275 m!81843))

(declare-fun m!81845 () Bool)

(assert (=> b!80275 m!81845))

(assert (=> b!80261 m!81811))

(assert (=> b!80261 m!81811))

(declare-fun m!81847 () Bool)

(assert (=> b!80261 m!81847))

(assert (=> b!80261 m!81811))

(declare-fun m!81849 () Bool)

(assert (=> b!80261 m!81849))

(declare-fun m!81851 () Bool)

(assert (=> start!10348 m!81851))

(declare-fun m!81853 () Bool)

(assert (=> b!80265 m!81853))

(declare-fun m!81855 () Bool)

(assert (=> b!80265 m!81855))

(declare-fun m!81857 () Bool)

(assert (=> mapNonEmpty!3330 m!81857))

(declare-fun m!81859 () Bool)

(assert (=> b!80263 m!81859))

(declare-fun m!81861 () Bool)

(assert (=> b!80263 m!81861))

(declare-fun m!81863 () Bool)

(assert (=> b!80262 m!81863))

(check-sat tp_is_empty!2517 (not b!80271) (not b!80275) (not b_next!2201) (not b_lambda!3587) (not b_next!2203) (not b!80265) (not mapNonEmpty!3329) b_and!4913 (not b!80273) (not b!80262) (not mapNonEmpty!3330) (not start!10348) b_and!4911 (not b!80263) (not b!80280) (not b!80261))
(check-sat b_and!4911 b_and!4913 (not b_next!2201) (not b_next!2203))
(get-model)

(declare-fun b_lambda!3591 () Bool)

(assert (= b_lambda!3587 (or (and b!80271 b_free!2201) (and b!80263 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))))) b_lambda!3591)))

(check-sat tp_is_empty!2517 (not b_lambda!3591) (not b!80271) (not b!80275) (not b_next!2201) (not b_next!2203) (not b!80265) (not mapNonEmpty!3329) b_and!4913 (not b!80273) (not b!80262) (not mapNonEmpty!3330) (not start!10348) b_and!4911 (not b!80263) (not b!80280) (not b!80261))
(check-sat b_and!4911 b_and!4913 (not b_next!2201) (not b_next!2203))
(get-model)

(declare-fun d!19643 () Bool)

(declare-fun e!52504 () Bool)

(assert (=> d!19643 e!52504))

(declare-fun res!41873 () Bool)

(assert (=> d!19643 (=> res!41873 e!52504)))

(declare-fun lt!37349 () Bool)

(assert (=> d!19643 (= res!41873 (not lt!37349))))

(declare-fun lt!37348 () Bool)

(assert (=> d!19643 (= lt!37349 lt!37348)))

(declare-fun lt!37351 () Unit!2341)

(declare-fun e!52505 () Unit!2341)

(assert (=> d!19643 (= lt!37351 e!52505)))

(declare-fun c!12538 () Bool)

(assert (=> d!19643 (= c!12538 lt!37348)))

(declare-fun containsKey!142 (List!1511 (_ BitVec 64)) Bool)

(assert (=> d!19643 (= lt!37348 (containsKey!142 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!19643 (= (contains!745 lt!37271 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) lt!37349)))

(declare-fun b!80351 () Bool)

(declare-fun lt!37350 () Unit!2341)

(assert (=> b!80351 (= e!52505 lt!37350)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!90 (List!1511 (_ BitVec 64)) Unit!2341)

(assert (=> b!80351 (= lt!37350 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-datatypes ((Option!144 0))(
  ( (Some!143 (v!2612 V!3003)) (None!142) )
))
(declare-fun isDefined!91 (Option!144) Bool)

(declare-fun getValueByKey!138 (List!1511 (_ BitVec 64)) Option!144)

(assert (=> b!80351 (isDefined!91 (getValueByKey!138 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!80352 () Bool)

(declare-fun Unit!2345 () Unit!2341)

(assert (=> b!80352 (= e!52505 Unit!2345)))

(declare-fun b!80353 () Bool)

(assert (=> b!80353 (= e!52504 (isDefined!91 (getValueByKey!138 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(assert (= (and d!19643 c!12538) b!80351))

(assert (= (and d!19643 (not c!12538)) b!80352))

(assert (= (and d!19643 (not res!41873)) b!80353))

(assert (=> d!19643 m!81811))

(declare-fun m!81929 () Bool)

(assert (=> d!19643 m!81929))

(assert (=> b!80351 m!81811))

(declare-fun m!81931 () Bool)

(assert (=> b!80351 m!81931))

(assert (=> b!80351 m!81811))

(declare-fun m!81933 () Bool)

(assert (=> b!80351 m!81933))

(assert (=> b!80351 m!81933))

(declare-fun m!81935 () Bool)

(assert (=> b!80351 m!81935))

(assert (=> b!80353 m!81811))

(assert (=> b!80353 m!81933))

(assert (=> b!80353 m!81933))

(assert (=> b!80353 m!81935))

(assert (=> b!80261 d!19643))

(declare-fun b!80438 () Bool)

(declare-fun e!52566 () Bool)

(declare-datatypes ((SeekEntryResult!241 0))(
  ( (MissingZero!241 (index!3099 (_ BitVec 32))) (Found!241 (index!3100 (_ BitVec 32))) (Intermediate!241 (undefined!1053 Bool) (index!3101 (_ BitVec 32)) (x!11692 (_ BitVec 32))) (Undefined!241) (MissingVacant!241 (index!3102 (_ BitVec 32))) )
))
(declare-fun lt!37420 () SeekEntryResult!241)

(assert (=> b!80438 (= e!52566 ((_ is Undefined!241) lt!37420))))

(declare-fun b!80439 () Bool)

(declare-fun e!52563 () tuple2!2178)

(declare-fun lt!37426 () tuple2!2178)

(assert (=> b!80439 (= e!52563 (tuple2!2179 (_1!1100 lt!37426) (_2!1100 lt!37426)))))

(declare-fun call!7472 () tuple2!2178)

(assert (=> b!80439 (= lt!37426 call!7472)))

(declare-fun b!80440 () Bool)

(declare-fun c!12576 () Bool)

(declare-fun lt!37412 () SeekEntryResult!241)

(assert (=> b!80440 (= c!12576 ((_ is MissingVacant!241) lt!37412))))

(declare-fun e!52556 () Bool)

(declare-fun e!52559 () Bool)

(assert (=> b!80440 (= e!52556 e!52559)))

(declare-fun bm!7453 () Bool)

(declare-fun call!7475 () SeekEntryResult!241)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3989 (_ BitVec 32)) SeekEntryResult!241)

(assert (=> bm!7453 (= call!7475 (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun bm!7454 () Bool)

(declare-fun call!7477 () ListLongMap!1451)

(declare-fun call!7473 () ListLongMap!1451)

(assert (=> bm!7454 (= call!7477 call!7473)))

(declare-fun bm!7455 () Bool)

(declare-fun call!7479 () Bool)

(declare-fun call!7456 () Bool)

(assert (=> bm!7455 (= call!7479 call!7456)))

(declare-fun d!19645 () Bool)

(declare-fun e!52562 () Bool)

(assert (=> d!19645 e!52562))

(declare-fun res!41907 () Bool)

(assert (=> d!19645 (=> (not res!41907) (not e!52562))))

(declare-fun lt!37429 () tuple2!2178)

(assert (=> d!19645 (= res!41907 (valid!316 (_2!1100 lt!37429)))))

(declare-fun e!52551 () tuple2!2178)

(assert (=> d!19645 (= lt!37429 e!52551)))

(declare-fun c!12569 () Bool)

(assert (=> d!19645 (= c!12569 (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvneg (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!19645 (valid!316 newMap!16)))

(assert (=> d!19645 (= (update!108 newMap!16 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282) lt!37429)))

(declare-fun b!80441 () Bool)

(declare-fun e!52553 () tuple2!2178)

(assert (=> b!80441 (= e!52551 e!52553)))

(declare-fun c!12571 () Bool)

(assert (=> b!80441 (= c!12571 (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80442 () Bool)

(declare-fun lt!37419 () SeekEntryResult!241)

(declare-fun e!52571 () Bool)

(assert (=> b!80442 (= e!52571 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37419)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun call!7464 () Unit!2341)

(declare-fun bm!7456 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) Int) Unit!2341)

(assert (=> bm!7456 (= call!7464 (lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)))))

(declare-fun b!80443 () Bool)

(declare-fun lt!37413 () Unit!2341)

(declare-fun lt!37421 () Unit!2341)

(assert (=> b!80443 (= lt!37413 lt!37421)))

(declare-fun call!7457 () ListLongMap!1451)

(declare-fun call!7461 () ListLongMap!1451)

(assert (=> b!80443 (= call!7457 call!7461)))

(declare-fun lt!37425 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!29 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 V!3003 Int) Unit!2341)

(assert (=> b!80443 (= lt!37421 (lemmaChangeZeroKeyThenAddPairToListMap!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37425 (zeroValue!2189 newMap!16) lt!37282 (minValue!2189 newMap!16) (defaultEntry!2293 newMap!16)))))

(assert (=> b!80443 (= lt!37425 (bvor (extraKeys!2140 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!80443 (= e!52553 (tuple2!2179 true (LongMapFixedSize!739 (defaultEntry!2293 newMap!16) (mask!6299 newMap!16) (bvor (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) lt!37282 (minValue!2189 newMap!16) (_size!418 newMap!16) (_keys!3957 newMap!16) (_values!2276 newMap!16) (_vacant!418 newMap!16))))))

(declare-fun b!80444 () Bool)

(declare-fun c!12575 () Bool)

(declare-fun lt!37427 () SeekEntryResult!241)

(assert (=> b!80444 (= c!12575 ((_ is MissingVacant!241) lt!37427))))

(declare-fun e!52569 () tuple2!2178)

(assert (=> b!80444 (= e!52569 e!52563)))

(declare-fun b!80445 () Bool)

(declare-fun res!41906 () Bool)

(assert (=> b!80445 (= res!41906 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3102 lt!37420)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52567 () Bool)

(assert (=> b!80445 (=> (not res!41906) (not e!52567))))

(declare-fun bm!7457 () Bool)

(declare-fun call!7470 () ListLongMap!1451)

(assert (=> bm!7457 (= call!7470 (map!1178 newMap!16))))

(declare-fun b!80446 () Bool)

(declare-fun res!41904 () Bool)

(declare-fun e!52558 () Bool)

(assert (=> b!80446 (=> (not res!41904) (not e!52558))))

(assert (=> b!80446 (= res!41904 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3099 lt!37412)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80447 () Bool)

(declare-fun e!52565 () Bool)

(declare-fun call!7465 () ListLongMap!1451)

(assert (=> b!80447 (= e!52565 (= call!7465 (+!106 call!7470 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!80448 () Bool)

(declare-fun e!52568 () Unit!2341)

(declare-fun Unit!2346 () Unit!2341)

(assert (=> b!80448 (= e!52568 Unit!2346)))

(declare-fun lt!37406 () Unit!2341)

(declare-fun call!7469 () Unit!2341)

(assert (=> b!80448 (= lt!37406 call!7469)))

(declare-fun call!7462 () SeekEntryResult!241)

(assert (=> b!80448 (= lt!37420 call!7462)))

(declare-fun c!12580 () Bool)

(assert (=> b!80448 (= c!12580 ((_ is MissingZero!241) lt!37420))))

(declare-fun e!52570 () Bool)

(assert (=> b!80448 e!52570))

(declare-fun lt!37428 () Unit!2341)

(assert (=> b!80448 (= lt!37428 lt!37406)))

(assert (=> b!80448 false))

(declare-fun b!80449 () Bool)

(declare-fun e!52554 () Bool)

(assert (=> b!80449 (= e!52554 (= call!7465 call!7470))))

(declare-fun b!80450 () Bool)

(declare-fun e!52557 () ListLongMap!1451)

(assert (=> b!80450 (= e!52557 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bm!7458 () Bool)

(declare-fun call!7460 () Bool)

(declare-fun call!7474 () Bool)

(assert (=> bm!7458 (= call!7460 call!7474)))

(declare-fun b!80451 () Bool)

(declare-fun res!41914 () Bool)

(declare-fun e!52555 () Bool)

(assert (=> b!80451 (=> (not res!41914) (not e!52555))))

(declare-fun call!7476 () Bool)

(assert (=> b!80451 (= res!41914 call!7476)))

(assert (=> b!80451 (= e!52570 e!52555)))

(declare-fun b!80452 () Bool)

(declare-fun e!52561 () Bool)

(declare-fun call!7468 () Bool)

(assert (=> b!80452 (= e!52561 (not call!7468))))

(declare-fun bm!7459 () Bool)

(assert (=> bm!7459 (= call!7476 call!7460)))

(declare-fun b!80453 () Bool)

(assert (=> b!80453 (= e!52557 call!7477)))

(declare-fun bm!7460 () Bool)

(declare-fun call!7458 () SeekEntryResult!241)

(assert (=> bm!7460 (= call!7458 call!7475)))

(declare-fun b!80454 () Bool)

(declare-fun lt!37423 () tuple2!2178)

(assert (=> b!80454 (= lt!37423 call!7472)))

(declare-fun e!52560 () tuple2!2178)

(assert (=> b!80454 (= e!52560 (tuple2!2179 (_1!1100 lt!37423) (_2!1100 lt!37423)))))

(declare-fun b!80455 () Bool)

(assert (=> b!80455 (= e!52551 e!52569)))

(assert (=> b!80455 (= lt!37427 (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun c!12572 () Bool)

(assert (=> b!80455 (= c!12572 ((_ is Undefined!241) lt!37427))))

(declare-fun bm!7461 () Bool)

(declare-fun updateHelperNewKey!29 (LongMapFixedSize!738 (_ BitVec 64) V!3003 (_ BitVec 32)) tuple2!2178)

(assert (=> bm!7461 (= call!7472 (updateHelperNewKey!29 newMap!16 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427))))))

(declare-fun b!80456 () Bool)

(declare-fun res!41912 () Bool)

(assert (=> b!80456 (= res!41912 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3102 lt!37412)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80456 (=> (not res!41912) (not e!52561))))

(declare-fun call!7471 () ListLongMap!1451)

(declare-fun lt!37414 () (_ BitVec 32))

(declare-fun bm!7462 () Bool)

(assert (=> bm!7462 (= call!7471 (getCurrentListMap!435 (_keys!3957 newMap!16) (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))) (mask!6299 newMap!16) (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) (zeroValue!2189 newMap!16) (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bm!7463 () Bool)

(declare-fun call!7459 () ListLongMap!1451)

(assert (=> bm!7463 (= call!7459 call!7471)))

(declare-fun e!52552 () ListLongMap!1451)

(declare-fun b!80457 () Bool)

(assert (=> b!80457 (= e!52552 (ite c!12571 call!7459 call!7461))))

(declare-fun bm!7464 () Bool)

(declare-fun c!12573 () Bool)

(assert (=> bm!7464 (= c!12573 c!12572)))

(declare-fun call!7466 () Bool)

(assert (=> bm!7464 (= call!7466 (contains!745 e!52557 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!80458 () Bool)

(assert (=> b!80458 (= e!52559 e!52561)))

(declare-fun res!41911 () Bool)

(declare-fun call!7463 () Bool)

(assert (=> b!80458 (= res!41911 call!7463)))

(assert (=> b!80458 (=> (not res!41911) (not e!52561))))

(declare-fun b!80459 () Bool)

(declare-fun e!52564 () Unit!2341)

(declare-fun lt!37408 () Unit!2341)

(assert (=> b!80459 (= e!52564 lt!37408)))

(assert (=> b!80459 (= lt!37408 call!7469)))

(assert (=> b!80459 (= lt!37412 call!7458)))

(declare-fun c!12579 () Bool)

(assert (=> b!80459 (= c!12579 ((_ is MissingZero!241) lt!37412))))

(assert (=> b!80459 e!52556))

(declare-fun bm!7465 () Bool)

(assert (=> bm!7465 (= call!7468 call!7456)))

(declare-fun b!80460 () Bool)

(declare-fun res!41905 () Bool)

(assert (=> b!80460 (= res!41905 call!7460)))

(assert (=> b!80460 (=> (not res!41905) (not e!52571))))

(declare-fun b!80461 () Bool)

(assert (=> b!80461 (= e!52562 e!52554)))

(declare-fun c!12567 () Bool)

(assert (=> b!80461 (= c!12567 (_1!1100 lt!37429))))

(declare-fun b!80462 () Bool)

(assert (=> b!80462 (= e!52559 ((_ is Undefined!241) lt!37412))))

(declare-fun b!80463 () Bool)

(declare-fun Unit!2347 () Unit!2341)

(assert (=> b!80463 (= e!52564 Unit!2347)))

(declare-fun lt!37424 () Unit!2341)

(assert (=> b!80463 (= lt!37424 call!7464)))

(declare-fun lt!37430 () SeekEntryResult!241)

(assert (=> b!80463 (= lt!37430 call!7458)))

(declare-fun res!41909 () Bool)

(assert (=> b!80463 (= res!41909 ((_ is Found!241) lt!37430))))

(declare-fun e!52550 () Bool)

(assert (=> b!80463 (=> (not res!41909) (not e!52550))))

(assert (=> b!80463 e!52550))

(declare-fun lt!37415 () Unit!2341)

(assert (=> b!80463 (= lt!37415 lt!37424)))

(assert (=> b!80463 false))

(declare-fun bm!7466 () Bool)

(assert (=> bm!7466 (= call!7456 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!80464 () Bool)

(declare-fun c!12570 () Bool)

(assert (=> b!80464 (= c!12570 ((_ is MissingVacant!241) lt!37420))))

(assert (=> b!80464 (= e!52570 e!52566)))

(declare-fun bm!7467 () Bool)

(declare-fun call!7478 () Bool)

(assert (=> bm!7467 (= call!7478 call!7474)))

(declare-fun bm!7468 () Bool)

(assert (=> bm!7468 (= call!7462 call!7475)))

(declare-fun b!80465 () Bool)

(assert (=> b!80465 (= e!52563 e!52560)))

(declare-fun c!12574 () Bool)

(assert (=> b!80465 (= c!12574 ((_ is MissingZero!241) lt!37427))))

(declare-fun b!80466 () Bool)

(declare-fun res!41910 () Bool)

(assert (=> b!80466 (=> (not res!41910) (not e!52558))))

(assert (=> b!80466 (= res!41910 call!7463)))

(assert (=> b!80466 (= e!52556 e!52558)))

(declare-fun bm!7469 () Bool)

(declare-fun call!7467 () ListLongMap!1451)

(assert (=> bm!7469 (= call!7457 call!7467)))

(declare-fun bm!7470 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) Int) Unit!2341)

(assert (=> bm!7470 (= call!7469 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)))))

(declare-fun b!80467 () Bool)

(declare-fun lt!37409 () Unit!2341)

(assert (=> b!80467 (= e!52568 lt!37409)))

(assert (=> b!80467 (= lt!37409 call!7464)))

(assert (=> b!80467 (= lt!37419 call!7462)))

(declare-fun res!41915 () Bool)

(assert (=> b!80467 (= res!41915 ((_ is Found!241) lt!37419))))

(assert (=> b!80467 (=> (not res!41915) (not e!52571))))

(assert (=> b!80467 e!52571))

(declare-fun b!80468 () Bool)

(assert (=> b!80468 (= e!52552 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun b!80469 () Bool)

(assert (=> b!80469 (= e!52566 e!52567)))

(declare-fun res!41913 () Bool)

(assert (=> b!80469 (= res!41913 call!7476)))

(assert (=> b!80469 (=> (not res!41913) (not e!52567))))

(declare-fun b!80470 () Bool)

(assert (=> b!80470 (= e!52567 (not call!7479))))

(declare-fun b!80471 () Bool)

(assert (=> b!80471 (= e!52555 (not call!7479))))

(declare-fun b!80472 () Bool)

(assert (=> b!80472 (= e!52554 e!52565)))

(declare-fun res!41908 () Bool)

(assert (=> b!80472 (= res!41908 (contains!745 call!7465 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!80472 (=> (not res!41908) (not e!52565))))

(declare-fun b!80473 () Bool)

(declare-fun lt!37407 () Unit!2341)

(declare-fun lt!37422 () Unit!2341)

(assert (=> b!80473 (= lt!37407 lt!37422)))

(assert (=> b!80473 (contains!745 call!7477 (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427)))))

(declare-fun lt!37432 () array!3991)

(declare-fun lemmaValidKeyInArrayIsInListMap!90 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) Int) Unit!2341)

(assert (=> b!80473 (= lt!37422 (lemmaValidKeyInArrayIsInListMap!90 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3100 lt!37427) (defaultEntry!2293 newMap!16)))))

(assert (=> b!80473 (= lt!37432 (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))))))

(declare-fun lt!37431 () Unit!2341)

(declare-fun lt!37417 () Unit!2341)

(assert (=> b!80473 (= lt!37431 lt!37417)))

(assert (=> b!80473 (= call!7467 call!7471)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!29 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) (_ BitVec 64) V!3003 Int) Unit!2341)

(assert (=> b!80473 (= lt!37417 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3100 lt!37427) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37416 () Unit!2341)

(assert (=> b!80473 (= lt!37416 e!52568)))

(declare-fun c!12578 () Bool)

(assert (=> b!80473 (= c!12578 call!7466)))

(assert (=> b!80473 (= e!52560 (tuple2!2179 true (LongMapFixedSize!739 (defaultEntry!2293 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (_size!418 newMap!16) (_keys!3957 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (_vacant!418 newMap!16))))))

(declare-fun bm!7471 () Bool)

(assert (=> bm!7471 (= call!7473 (getCurrentListMap!435 (_keys!3957 newMap!16) (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432) (mask!6299 newMap!16) (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun b!80474 () Bool)

(declare-fun res!41902 () Bool)

(assert (=> b!80474 (=> (not res!41902) (not e!52555))))

(assert (=> b!80474 (= res!41902 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3099 lt!37420)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7472 () Bool)

(assert (=> bm!7472 (= call!7463 call!7478)))

(declare-fun bm!7473 () Bool)

(assert (=> bm!7473 (= call!7465 (map!1178 (_2!1100 lt!37429)))))

(declare-fun bm!7474 () Bool)

(assert (=> bm!7474 (= call!7461 call!7473)))

(declare-fun b!80475 () Bool)

(declare-fun res!41903 () Bool)

(assert (=> b!80475 (= res!41903 call!7478)))

(assert (=> b!80475 (=> (not res!41903) (not e!52550))))

(declare-fun bm!7475 () Bool)

(assert (=> bm!7475 (= call!7467 (+!106 e!52552 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun c!12568 () Bool)

(assert (=> bm!7475 (= c!12568 c!12569)))

(declare-fun bm!7476 () Bool)

(declare-fun c!12577 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!7476 (= call!7474 (inRange!0 (ite c!12572 (ite c!12577 (index!3100 lt!37430) (ite c!12579 (index!3099 lt!37412) (index!3102 lt!37412))) (ite c!12578 (index!3100 lt!37419) (ite c!12580 (index!3099 lt!37420) (index!3102 lt!37420)))) (mask!6299 newMap!16)))))

(declare-fun b!80476 () Bool)

(assert (=> b!80476 (= e!52558 (not call!7468))))

(declare-fun b!80477 () Bool)

(declare-fun lt!37411 () Unit!2341)

(declare-fun lt!37418 () Unit!2341)

(assert (=> b!80477 (= lt!37411 lt!37418)))

(assert (=> b!80477 (= call!7457 call!7459)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!29 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 V!3003 Int) Unit!2341)

(assert (=> b!80477 (= lt!37418 (lemmaChangeLongMinValueKeyThenAddPairToListMap!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37414 (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) lt!37282 (defaultEntry!2293 newMap!16)))))

(assert (=> b!80477 (= lt!37414 (bvor (extraKeys!2140 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!80477 (= e!52553 (tuple2!2179 true (LongMapFixedSize!739 (defaultEntry!2293 newMap!16) (mask!6299 newMap!16) (bvor (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) (zeroValue!2189 newMap!16) lt!37282 (_size!418 newMap!16) (_keys!3957 newMap!16) (_values!2276 newMap!16) (_vacant!418 newMap!16))))))

(declare-fun b!80478 () Bool)

(declare-fun lt!37410 () Unit!2341)

(assert (=> b!80478 (= lt!37410 e!52564)))

(assert (=> b!80478 (= c!12577 call!7466)))

(assert (=> b!80478 (= e!52569 (tuple2!2179 false newMap!16))))

(declare-fun b!80479 () Bool)

(assert (=> b!80479 (= e!52550 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37430)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!19645 c!12569) b!80441))

(assert (= (and d!19645 (not c!12569)) b!80455))

(assert (= (and b!80441 c!12571) b!80443))

(assert (= (and b!80441 (not c!12571)) b!80477))

(assert (= (or b!80443 b!80477) bm!7474))

(assert (= (or b!80443 b!80477) bm!7463))

(assert (= (or b!80443 b!80477) bm!7469))

(assert (= (and b!80455 c!12572) b!80478))

(assert (= (and b!80455 (not c!12572)) b!80444))

(assert (= (and b!80478 c!12577) b!80463))

(assert (= (and b!80478 (not c!12577)) b!80459))

(assert (= (and b!80463 res!41909) b!80475))

(assert (= (and b!80475 res!41903) b!80479))

(assert (= (and b!80459 c!12579) b!80466))

(assert (= (and b!80459 (not c!12579)) b!80440))

(assert (= (and b!80466 res!41910) b!80446))

(assert (= (and b!80446 res!41904) b!80476))

(assert (= (and b!80440 c!12576) b!80458))

(assert (= (and b!80440 (not c!12576)) b!80462))

(assert (= (and b!80458 res!41911) b!80456))

(assert (= (and b!80456 res!41912) b!80452))

(assert (= (or b!80466 b!80458) bm!7472))

(assert (= (or b!80476 b!80452) bm!7465))

(assert (= (or b!80475 bm!7472) bm!7467))

(assert (= (or b!80463 b!80459) bm!7460))

(assert (= (and b!80444 c!12575) b!80439))

(assert (= (and b!80444 (not c!12575)) b!80465))

(assert (= (and b!80465 c!12574) b!80454))

(assert (= (and b!80465 (not c!12574)) b!80473))

(assert (= (and b!80473 c!12578) b!80467))

(assert (= (and b!80473 (not c!12578)) b!80448))

(assert (= (and b!80467 res!41915) b!80460))

(assert (= (and b!80460 res!41905) b!80442))

(assert (= (and b!80448 c!12580) b!80451))

(assert (= (and b!80448 (not c!12580)) b!80464))

(assert (= (and b!80451 res!41914) b!80474))

(assert (= (and b!80474 res!41902) b!80471))

(assert (= (and b!80464 c!12570) b!80469))

(assert (= (and b!80464 (not c!12570)) b!80438))

(assert (= (and b!80469 res!41913) b!80445))

(assert (= (and b!80445 res!41906) b!80470))

(assert (= (or b!80451 b!80469) bm!7459))

(assert (= (or b!80471 b!80470) bm!7455))

(assert (= (or b!80460 bm!7459) bm!7458))

(assert (= (or b!80467 b!80448) bm!7468))

(assert (= (or b!80439 b!80454) bm!7461))

(assert (= (or b!80459 b!80448) bm!7470))

(assert (= (or b!80463 b!80467) bm!7456))

(assert (= (or b!80478 b!80473) bm!7454))

(assert (= (or bm!7465 bm!7455) bm!7466))

(assert (= (or bm!7467 bm!7458) bm!7476))

(assert (= (or bm!7460 bm!7468) bm!7453))

(assert (= (or b!80478 b!80473) bm!7464))

(assert (= (and bm!7464 c!12573) b!80453))

(assert (= (and bm!7464 (not c!12573)) b!80450))

(assert (= (or bm!7474 bm!7454) bm!7471))

(assert (= (or bm!7463 b!80473) bm!7462))

(assert (= (or bm!7469 b!80473) bm!7475))

(assert (= (and bm!7475 c!12568) b!80457))

(assert (= (and bm!7475 (not c!12568)) b!80468))

(assert (= (and d!19645 res!41907) b!80461))

(assert (= (and b!80461 c!12567) b!80472))

(assert (= (and b!80461 (not c!12567)) b!80449))

(assert (= (and b!80472 res!41908) b!80447))

(assert (= (or b!80472 b!80447 b!80449) bm!7473))

(assert (= (or b!80447 b!80449) bm!7457))

(declare-fun m!81937 () Bool)

(assert (=> b!80446 m!81937))

(assert (=> bm!7464 m!81811))

(declare-fun m!81939 () Bool)

(assert (=> bm!7464 m!81939))

(declare-fun m!81941 () Bool)

(assert (=> b!80447 m!81941))

(declare-fun m!81943 () Bool)

(assert (=> b!80443 m!81943))

(declare-fun m!81945 () Bool)

(assert (=> bm!7473 m!81945))

(declare-fun m!81947 () Bool)

(assert (=> bm!7475 m!81947))

(declare-fun m!81949 () Bool)

(assert (=> b!80456 m!81949))

(declare-fun m!81951 () Bool)

(assert (=> b!80445 m!81951))

(declare-fun m!81953 () Bool)

(assert (=> d!19645 m!81953))

(assert (=> d!19645 m!81863))

(declare-fun m!81955 () Bool)

(assert (=> b!80474 m!81955))

(assert (=> bm!7453 m!81811))

(declare-fun m!81957 () Bool)

(assert (=> bm!7453 m!81957))

(assert (=> b!80472 m!81811))

(declare-fun m!81959 () Bool)

(assert (=> b!80472 m!81959))

(assert (=> bm!7461 m!81811))

(declare-fun m!81961 () Bool)

(assert (=> bm!7461 m!81961))

(assert (=> b!80455 m!81811))

(assert (=> b!80455 m!81957))

(declare-fun m!81963 () Bool)

(assert (=> b!80479 m!81963))

(declare-fun m!81965 () Bool)

(assert (=> b!80450 m!81965))

(assert (=> bm!7456 m!81811))

(declare-fun m!81967 () Bool)

(assert (=> bm!7456 m!81967))

(declare-fun m!81969 () Bool)

(assert (=> bm!7476 m!81969))

(declare-fun m!81971 () Bool)

(assert (=> bm!7462 m!81971))

(declare-fun m!81973 () Bool)

(assert (=> bm!7462 m!81973))

(declare-fun m!81975 () Bool)

(assert (=> b!80473 m!81975))

(declare-fun m!81977 () Bool)

(assert (=> b!80473 m!81977))

(declare-fun m!81979 () Bool)

(assert (=> b!80473 m!81979))

(assert (=> b!80473 m!81971))

(assert (=> b!80473 m!81977))

(assert (=> b!80473 m!81811))

(declare-fun m!81981 () Bool)

(assert (=> b!80473 m!81981))

(assert (=> bm!7457 m!81853))

(declare-fun m!81983 () Bool)

(assert (=> bm!7471 m!81983))

(assert (=> bm!7466 m!81811))

(declare-fun m!81985 () Bool)

(assert (=> bm!7466 m!81985))

(declare-fun m!81987 () Bool)

(assert (=> b!80477 m!81987))

(assert (=> b!80468 m!81965))

(declare-fun m!81989 () Bool)

(assert (=> b!80442 m!81989))

(assert (=> bm!7470 m!81811))

(declare-fun m!81991 () Bool)

(assert (=> bm!7470 m!81991))

(assert (=> b!80261 d!19645))

(declare-fun d!19647 () Bool)

(assert (=> d!19647 (= (array_inv!1175 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvsge (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!80271 d!19647))

(declare-fun d!19649 () Bool)

(assert (=> d!19649 (= (array_inv!1176 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvsge (size!2144 (_values!2276 (v!2608 (underlying!281 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!80271 d!19649))

(declare-fun d!19651 () Bool)

(assert (=> d!19651 (= (map!1178 newMap!16) (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bs!3404 () Bool)

(assert (= bs!3404 d!19651))

(assert (=> bs!3404 m!81965))

(assert (=> b!80265 d!19651))

(declare-fun d!19653 () Bool)

(declare-fun e!52598 () Bool)

(assert (=> d!19653 e!52598))

(declare-fun res!41941 () Bool)

(assert (=> d!19653 (=> (not res!41941) (not e!52598))))

(assert (=> d!19653 (= res!41941 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun lt!37487 () ListLongMap!1451)

(declare-fun lt!37478 () ListLongMap!1451)

(assert (=> d!19653 (= lt!37487 lt!37478)))

(declare-fun lt!37490 () Unit!2341)

(declare-fun e!52605 () Unit!2341)

(assert (=> d!19653 (= lt!37490 e!52605)))

(declare-fun c!12597 () Bool)

(declare-fun e!52604 () Bool)

(assert (=> d!19653 (= c!12597 e!52604)))

(declare-fun res!41934 () Bool)

(assert (=> d!19653 (=> (not res!41934) (not e!52604))))

(assert (=> d!19653 (= res!41934 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun e!52609 () ListLongMap!1451)

(assert (=> d!19653 (= lt!37478 e!52609)))

(declare-fun c!12594 () Bool)

(assert (=> d!19653 (= c!12594 (and (not (= (bvand (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19653 (validMask!0 (mask!6299 (v!2608 (underlying!281 thiss!992))))))

(assert (=> d!19653 (= (getCurrentListMap!435 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))) lt!37487)))

(declare-fun b!80522 () Bool)

(declare-fun Unit!2348 () Unit!2341)

(assert (=> b!80522 (= e!52605 Unit!2348)))

(declare-fun b!80523 () Bool)

(declare-fun lt!37477 () Unit!2341)

(assert (=> b!80523 (= e!52605 lt!37477)))

(declare-fun lt!37486 () ListLongMap!1451)

(assert (=> b!80523 (= lt!37486 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun lt!37492 () (_ BitVec 64))

(assert (=> b!80523 (= lt!37492 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37479 () (_ BitVec 64))

(assert (=> b!80523 (= lt!37479 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37481 () Unit!2341)

(declare-fun addStillContains!56 (ListLongMap!1451 (_ BitVec 64) V!3003 (_ BitVec 64)) Unit!2341)

(assert (=> b!80523 (= lt!37481 (addStillContains!56 lt!37486 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37479))))

(assert (=> b!80523 (contains!745 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37479)))

(declare-fun lt!37497 () Unit!2341)

(assert (=> b!80523 (= lt!37497 lt!37481)))

(declare-fun lt!37498 () ListLongMap!1451)

(assert (=> b!80523 (= lt!37498 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun lt!37494 () (_ BitVec 64))

(assert (=> b!80523 (= lt!37494 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37480 () (_ BitVec 64))

(assert (=> b!80523 (= lt!37480 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37488 () Unit!2341)

(declare-fun addApplyDifferent!56 (ListLongMap!1451 (_ BitVec 64) V!3003 (_ BitVec 64)) Unit!2341)

(assert (=> b!80523 (= lt!37488 (addApplyDifferent!56 lt!37498 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37480))))

(declare-fun apply!80 (ListLongMap!1451 (_ BitVec 64)) V!3003)

(assert (=> b!80523 (= (apply!80 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37480) (apply!80 lt!37498 lt!37480))))

(declare-fun lt!37484 () Unit!2341)

(assert (=> b!80523 (= lt!37484 lt!37488)))

(declare-fun lt!37495 () ListLongMap!1451)

(assert (=> b!80523 (= lt!37495 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun lt!37482 () (_ BitVec 64))

(assert (=> b!80523 (= lt!37482 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37485 () (_ BitVec 64))

(assert (=> b!80523 (= lt!37485 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37483 () Unit!2341)

(assert (=> b!80523 (= lt!37483 (addApplyDifferent!56 lt!37495 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37485))))

(assert (=> b!80523 (= (apply!80 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37485) (apply!80 lt!37495 lt!37485))))

(declare-fun lt!37496 () Unit!2341)

(assert (=> b!80523 (= lt!37496 lt!37483)))

(declare-fun lt!37493 () ListLongMap!1451)

(assert (=> b!80523 (= lt!37493 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun lt!37491 () (_ BitVec 64))

(assert (=> b!80523 (= lt!37491 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37489 () (_ BitVec 64))

(assert (=> b!80523 (= lt!37489 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!80523 (= lt!37477 (addApplyDifferent!56 lt!37493 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37489))))

(assert (=> b!80523 (= (apply!80 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37489) (apply!80 lt!37493 lt!37489))))

(declare-fun b!80524 () Bool)

(declare-fun res!41937 () Bool)

(assert (=> b!80524 (=> (not res!41937) (not e!52598))))

(declare-fun e!52599 () Bool)

(assert (=> b!80524 (= res!41937 e!52599)))

(declare-fun res!41942 () Bool)

(assert (=> b!80524 (=> res!41942 e!52599)))

(declare-fun e!52606 () Bool)

(assert (=> b!80524 (= res!41942 (not e!52606))))

(declare-fun res!41940 () Bool)

(assert (=> b!80524 (=> (not res!41940) (not e!52606))))

(assert (=> b!80524 (= res!41940 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!80525 () Bool)

(declare-fun e!52608 () Bool)

(assert (=> b!80525 (= e!52608 (= (apply!80 lt!37487 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun b!80526 () Bool)

(declare-fun e!52610 () Bool)

(assert (=> b!80526 (= e!52599 e!52610)))

(declare-fun res!41936 () Bool)

(assert (=> b!80526 (=> (not res!41936) (not e!52610))))

(assert (=> b!80526 (= res!41936 (contains!745 lt!37487 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80526 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun bm!7491 () Bool)

(declare-fun call!7499 () ListLongMap!1451)

(declare-fun call!7500 () ListLongMap!1451)

(assert (=> bm!7491 (= call!7499 call!7500)))

(declare-fun b!80527 () Bool)

(declare-fun e!52603 () Bool)

(assert (=> b!80527 (= e!52603 e!52608)))

(declare-fun res!41938 () Bool)

(declare-fun call!7496 () Bool)

(assert (=> b!80527 (= res!41938 call!7496)))

(assert (=> b!80527 (=> (not res!41938) (not e!52608))))

(declare-fun b!80528 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!80528 (= e!52606 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!80529 () Bool)

(assert (=> b!80529 (= e!52603 (not call!7496))))

(declare-fun b!80530 () Bool)

(assert (=> b!80530 (= e!52604 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!80531 () Bool)

(declare-fun e!52607 () Bool)

(declare-fun call!7498 () Bool)

(assert (=> b!80531 (= e!52607 (not call!7498))))

(declare-fun bm!7492 () Bool)

(declare-fun call!7497 () ListLongMap!1451)

(assert (=> bm!7492 (= call!7497 call!7499)))

(declare-fun b!80532 () Bool)

(declare-fun e!52601 () ListLongMap!1451)

(declare-fun call!7495 () ListLongMap!1451)

(assert (=> b!80532 (= e!52601 call!7495)))

(declare-fun bm!7493 () Bool)

(assert (=> bm!7493 (= call!7498 (contains!745 lt!37487 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80533 () Bool)

(assert (=> b!80533 (= e!52598 e!52603)))

(declare-fun c!12593 () Bool)

(assert (=> b!80533 (= c!12593 (not (= (bvand (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7494 () Bool)

(assert (=> bm!7494 (= call!7500 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun bm!7495 () Bool)

(declare-fun call!7494 () ListLongMap!1451)

(assert (=> bm!7495 (= call!7495 call!7494)))

(declare-fun b!80534 () Bool)

(declare-fun res!41935 () Bool)

(assert (=> b!80534 (=> (not res!41935) (not e!52598))))

(assert (=> b!80534 (= res!41935 e!52607)))

(declare-fun c!12596 () Bool)

(assert (=> b!80534 (= c!12596 (not (= (bvand (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80535 () Bool)

(assert (=> b!80535 (= e!52609 (+!106 call!7494 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!80536 () Bool)

(assert (=> b!80536 (= e!52601 call!7497)))

(declare-fun bm!7496 () Bool)

(declare-fun c!12595 () Bool)

(assert (=> bm!7496 (= call!7494 (+!106 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497)) (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!80537 () Bool)

(assert (=> b!80537 (= e!52610 (= (apply!80 lt!37487 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80537 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_values!2276 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> b!80537 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!80538 () Bool)

(declare-fun c!12598 () Bool)

(assert (=> b!80538 (= c!12598 (and (not (= (bvand (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52600 () ListLongMap!1451)

(assert (=> b!80538 (= e!52600 e!52601)))

(declare-fun b!80539 () Bool)

(declare-fun e!52602 () Bool)

(assert (=> b!80539 (= e!52602 (= (apply!80 lt!37487 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun b!80540 () Bool)

(assert (=> b!80540 (= e!52607 e!52602)))

(declare-fun res!41939 () Bool)

(assert (=> b!80540 (= res!41939 call!7498)))

(assert (=> b!80540 (=> (not res!41939) (not e!52602))))

(declare-fun b!80541 () Bool)

(assert (=> b!80541 (= e!52609 e!52600)))

(assert (=> b!80541 (= c!12595 (and (not (= (bvand (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7497 () Bool)

(assert (=> bm!7497 (= call!7496 (contains!745 lt!37487 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80542 () Bool)

(assert (=> b!80542 (= e!52600 call!7495)))

(assert (= (and d!19653 c!12594) b!80535))

(assert (= (and d!19653 (not c!12594)) b!80541))

(assert (= (and b!80541 c!12595) b!80542))

(assert (= (and b!80541 (not c!12595)) b!80538))

(assert (= (and b!80538 c!12598) b!80532))

(assert (= (and b!80538 (not c!12598)) b!80536))

(assert (= (or b!80532 b!80536) bm!7492))

(assert (= (or b!80542 bm!7492) bm!7491))

(assert (= (or b!80542 b!80532) bm!7495))

(assert (= (or b!80535 bm!7491) bm!7494))

(assert (= (or b!80535 bm!7495) bm!7496))

(assert (= (and d!19653 res!41934) b!80530))

(assert (= (and d!19653 c!12597) b!80523))

(assert (= (and d!19653 (not c!12597)) b!80522))

(assert (= (and d!19653 res!41941) b!80524))

(assert (= (and b!80524 res!41940) b!80528))

(assert (= (and b!80524 (not res!41942)) b!80526))

(assert (= (and b!80526 res!41936) b!80537))

(assert (= (and b!80524 res!41937) b!80534))

(assert (= (and b!80534 c!12596) b!80540))

(assert (= (and b!80534 (not c!12596)) b!80531))

(assert (= (and b!80540 res!41939) b!80539))

(assert (= (or b!80540 b!80531) bm!7493))

(assert (= (and b!80534 res!41935) b!80533))

(assert (= (and b!80533 c!12593) b!80527))

(assert (= (and b!80533 (not c!12593)) b!80529))

(assert (= (and b!80527 res!41938) b!80525))

(assert (= (or b!80527 b!80529) bm!7497))

(declare-fun b_lambda!3593 () Bool)

(assert (=> (not b_lambda!3593) (not b!80537)))

(assert (=> b!80537 t!5175))

(declare-fun b_and!4923 () Bool)

(assert (= b_and!4911 (and (=> t!5175 result!2839) b_and!4923)))

(assert (=> b!80537 t!5177))

(declare-fun b_and!4925 () Bool)

(assert (= b_and!4913 (and (=> t!5177 result!2843) b_and!4925)))

(declare-fun m!81993 () Bool)

(assert (=> b!80537 m!81993))

(declare-fun m!81995 () Bool)

(assert (=> b!80537 m!81995))

(assert (=> b!80537 m!81993))

(declare-fun m!81997 () Bool)

(assert (=> b!80537 m!81997))

(assert (=> b!80537 m!81821))

(assert (=> b!80537 m!81995))

(assert (=> b!80537 m!81821))

(declare-fun m!81999 () Bool)

(assert (=> b!80537 m!81999))

(declare-fun m!82001 () Bool)

(assert (=> bm!7493 m!82001))

(declare-fun m!82003 () Bool)

(assert (=> bm!7496 m!82003))

(assert (=> b!80523 m!81993))

(declare-fun m!82005 () Bool)

(assert (=> b!80523 m!82005))

(declare-fun m!82007 () Bool)

(assert (=> b!80523 m!82007))

(declare-fun m!82009 () Bool)

(assert (=> b!80523 m!82009))

(declare-fun m!82011 () Bool)

(assert (=> b!80523 m!82011))

(declare-fun m!82013 () Bool)

(assert (=> b!80523 m!82013))

(declare-fun m!82015 () Bool)

(assert (=> b!80523 m!82015))

(declare-fun m!82017 () Bool)

(assert (=> b!80523 m!82017))

(declare-fun m!82019 () Bool)

(assert (=> b!80523 m!82019))

(declare-fun m!82021 () Bool)

(assert (=> b!80523 m!82021))

(assert (=> b!80523 m!82007))

(assert (=> b!80523 m!82011))

(declare-fun m!82023 () Bool)

(assert (=> b!80523 m!82023))

(declare-fun m!82025 () Bool)

(assert (=> b!80523 m!82025))

(declare-fun m!82027 () Bool)

(assert (=> b!80523 m!82027))

(declare-fun m!82029 () Bool)

(assert (=> b!80523 m!82029))

(assert (=> b!80523 m!82029))

(declare-fun m!82031 () Bool)

(assert (=> b!80523 m!82031))

(assert (=> b!80523 m!82019))

(declare-fun m!82033 () Bool)

(assert (=> b!80523 m!82033))

(assert (=> b!80523 m!81843))

(declare-fun m!82035 () Bool)

(assert (=> b!80525 m!82035))

(assert (=> b!80530 m!81993))

(assert (=> b!80530 m!81993))

(declare-fun m!82037 () Bool)

(assert (=> b!80530 m!82037))

(declare-fun m!82039 () Bool)

(assert (=> bm!7497 m!82039))

(assert (=> bm!7494 m!81843))

(declare-fun m!82041 () Bool)

(assert (=> b!80535 m!82041))

(assert (=> b!80528 m!81993))

(assert (=> b!80528 m!81993))

(assert (=> b!80528 m!82037))

(assert (=> b!80526 m!81993))

(assert (=> b!80526 m!81993))

(declare-fun m!82043 () Bool)

(assert (=> b!80526 m!82043))

(assert (=> d!19653 m!81831))

(declare-fun m!82045 () Bool)

(assert (=> b!80539 m!82045))

(assert (=> b!80265 d!19653))

(declare-fun d!19655 () Bool)

(declare-fun e!52613 () Bool)

(assert (=> d!19655 e!52613))

(declare-fun res!41948 () Bool)

(assert (=> d!19655 (=> (not res!41948) (not e!52613))))

(declare-fun lt!37508 () ListLongMap!1451)

(assert (=> d!19655 (= res!41948 (contains!745 lt!37508 (_1!1101 lt!37278)))))

(declare-fun lt!37510 () List!1511)

(assert (=> d!19655 (= lt!37508 (ListLongMap!1452 lt!37510))))

(declare-fun lt!37509 () Unit!2341)

(declare-fun lt!37507 () Unit!2341)

(assert (=> d!19655 (= lt!37509 lt!37507)))

(assert (=> d!19655 (= (getValueByKey!138 lt!37510 (_1!1101 lt!37278)) (Some!143 (_2!1101 lt!37278)))))

(declare-fun lemmaContainsTupThenGetReturnValue!55 (List!1511 (_ BitVec 64) V!3003) Unit!2341)

(assert (=> d!19655 (= lt!37507 (lemmaContainsTupThenGetReturnValue!55 lt!37510 (_1!1101 lt!37278) (_2!1101 lt!37278)))))

(declare-fun insertStrictlySorted!58 (List!1511 (_ BitVec 64) V!3003) List!1511)

(assert (=> d!19655 (= lt!37510 (insertStrictlySorted!58 (toList!741 lt!37273) (_1!1101 lt!37278) (_2!1101 lt!37278)))))

(assert (=> d!19655 (= (+!106 lt!37273 lt!37278) lt!37508)))

(declare-fun b!80547 () Bool)

(declare-fun res!41947 () Bool)

(assert (=> b!80547 (=> (not res!41947) (not e!52613))))

(assert (=> b!80547 (= res!41947 (= (getValueByKey!138 (toList!741 lt!37508) (_1!1101 lt!37278)) (Some!143 (_2!1101 lt!37278))))))

(declare-fun b!80548 () Bool)

(declare-fun contains!746 (List!1511 tuple2!2180) Bool)

(assert (=> b!80548 (= e!52613 (contains!746 (toList!741 lt!37508) lt!37278))))

(assert (= (and d!19655 res!41948) b!80547))

(assert (= (and b!80547 res!41947) b!80548))

(declare-fun m!82047 () Bool)

(assert (=> d!19655 m!82047))

(declare-fun m!82049 () Bool)

(assert (=> d!19655 m!82049))

(declare-fun m!82051 () Bool)

(assert (=> d!19655 m!82051))

(declare-fun m!82053 () Bool)

(assert (=> d!19655 m!82053))

(declare-fun m!82055 () Bool)

(assert (=> b!80547 m!82055))

(declare-fun m!82057 () Bool)

(assert (=> b!80548 m!82057))

(assert (=> b!80275 d!19655))

(declare-fun d!19657 () Bool)

(declare-fun e!52614 () Bool)

(assert (=> d!19657 e!52614))

(declare-fun res!41950 () Bool)

(assert (=> d!19657 (=> (not res!41950) (not e!52614))))

(declare-fun lt!37512 () ListLongMap!1451)

(assert (=> d!19657 (= res!41950 (contains!745 lt!37512 (_1!1101 lt!37268)))))

(declare-fun lt!37514 () List!1511)

(assert (=> d!19657 (= lt!37512 (ListLongMap!1452 lt!37514))))

(declare-fun lt!37513 () Unit!2341)

(declare-fun lt!37511 () Unit!2341)

(assert (=> d!19657 (= lt!37513 lt!37511)))

(assert (=> d!19657 (= (getValueByKey!138 lt!37514 (_1!1101 lt!37268)) (Some!143 (_2!1101 lt!37268)))))

(assert (=> d!19657 (= lt!37511 (lemmaContainsTupThenGetReturnValue!55 lt!37514 (_1!1101 lt!37268) (_2!1101 lt!37268)))))

(assert (=> d!19657 (= lt!37514 (insertStrictlySorted!58 (toList!741 lt!37277) (_1!1101 lt!37268) (_2!1101 lt!37268)))))

(assert (=> d!19657 (= (+!106 lt!37277 lt!37268) lt!37512)))

(declare-fun b!80549 () Bool)

(declare-fun res!41949 () Bool)

(assert (=> b!80549 (=> (not res!41949) (not e!52614))))

(assert (=> b!80549 (= res!41949 (= (getValueByKey!138 (toList!741 lt!37512) (_1!1101 lt!37268)) (Some!143 (_2!1101 lt!37268))))))

(declare-fun b!80550 () Bool)

(assert (=> b!80550 (= e!52614 (contains!746 (toList!741 lt!37512) lt!37268))))

(assert (= (and d!19657 res!41950) b!80549))

(assert (= (and b!80549 res!41949) b!80550))

(declare-fun m!82059 () Bool)

(assert (=> d!19657 m!82059))

(declare-fun m!82061 () Bool)

(assert (=> d!19657 m!82061))

(declare-fun m!82063 () Bool)

(assert (=> d!19657 m!82063))

(declare-fun m!82065 () Bool)

(assert (=> d!19657 m!82065))

(declare-fun m!82067 () Bool)

(assert (=> b!80549 m!82067))

(declare-fun m!82069 () Bool)

(assert (=> b!80550 m!82069))

(assert (=> b!80275 d!19657))

(declare-fun d!19659 () Bool)

(declare-fun e!52615 () Bool)

(assert (=> d!19659 e!52615))

(declare-fun res!41952 () Bool)

(assert (=> d!19659 (=> (not res!41952) (not e!52615))))

(declare-fun lt!37516 () ListLongMap!1451)

(assert (=> d!19659 (= res!41952 (contains!745 lt!37516 (_1!1101 lt!37283)))))

(declare-fun lt!37518 () List!1511)

(assert (=> d!19659 (= lt!37516 (ListLongMap!1452 lt!37518))))

(declare-fun lt!37517 () Unit!2341)

(declare-fun lt!37515 () Unit!2341)

(assert (=> d!19659 (= lt!37517 lt!37515)))

(assert (=> d!19659 (= (getValueByKey!138 lt!37518 (_1!1101 lt!37283)) (Some!143 (_2!1101 lt!37283)))))

(assert (=> d!19659 (= lt!37515 (lemmaContainsTupThenGetReturnValue!55 lt!37518 (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(assert (=> d!19659 (= lt!37518 (insertStrictlySorted!58 (toList!741 lt!37277) (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(assert (=> d!19659 (= (+!106 lt!37277 lt!37283) lt!37516)))

(declare-fun b!80551 () Bool)

(declare-fun res!41951 () Bool)

(assert (=> b!80551 (=> (not res!41951) (not e!52615))))

(assert (=> b!80551 (= res!41951 (= (getValueByKey!138 (toList!741 lt!37516) (_1!1101 lt!37283)) (Some!143 (_2!1101 lt!37283))))))

(declare-fun b!80552 () Bool)

(assert (=> b!80552 (= e!52615 (contains!746 (toList!741 lt!37516) lt!37283))))

(assert (= (and d!19659 res!41952) b!80551))

(assert (= (and b!80551 res!41951) b!80552))

(declare-fun m!82071 () Bool)

(assert (=> d!19659 m!82071))

(declare-fun m!82073 () Bool)

(assert (=> d!19659 m!82073))

(declare-fun m!82075 () Bool)

(assert (=> d!19659 m!82075))

(declare-fun m!82077 () Bool)

(assert (=> d!19659 m!82077))

(declare-fun m!82079 () Bool)

(assert (=> b!80551 m!82079))

(declare-fun m!82081 () Bool)

(assert (=> b!80552 m!82081))

(assert (=> b!80275 d!19659))

(declare-fun b!80577 () Bool)

(declare-fun e!52630 () ListLongMap!1451)

(declare-fun call!7503 () ListLongMap!1451)

(assert (=> b!80577 (= e!52630 call!7503)))

(declare-fun b!80578 () Bool)

(declare-fun res!41963 () Bool)

(declare-fun e!52632 () Bool)

(assert (=> b!80578 (=> (not res!41963) (not e!52632))))

(declare-fun lt!37534 () ListLongMap!1451)

(assert (=> b!80578 (= res!41963 (not (contains!745 lt!37534 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!7500 () Bool)

(assert (=> bm!7500 (= call!7503 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun b!80579 () Bool)

(declare-fun e!52631 () Bool)

(assert (=> b!80579 (= e!52632 e!52631)))

(declare-fun c!12607 () Bool)

(declare-fun e!52636 () Bool)

(assert (=> b!80579 (= c!12607 e!52636)))

(declare-fun res!41964 () Bool)

(assert (=> b!80579 (=> (not res!41964) (not e!52636))))

(assert (=> b!80579 (= res!41964 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!80580 () Bool)

(declare-fun lt!37536 () Unit!2341)

(declare-fun lt!37537 () Unit!2341)

(assert (=> b!80580 (= lt!37536 lt!37537)))

(declare-fun lt!37538 () ListLongMap!1451)

(declare-fun lt!37539 () V!3003)

(declare-fun lt!37533 () (_ BitVec 64))

(declare-fun lt!37535 () (_ BitVec 64))

(assert (=> b!80580 (not (contains!745 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)) lt!37535))))

(declare-fun addStillNotContains!29 (ListLongMap!1451 (_ BitVec 64) V!3003 (_ BitVec 64)) Unit!2341)

(assert (=> b!80580 (= lt!37537 (addStillNotContains!29 lt!37538 lt!37533 lt!37539 lt!37535))))

(assert (=> b!80580 (= lt!37535 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!80580 (= lt!37539 (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!80580 (= lt!37533 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!80580 (= lt!37538 call!7503)))

(assert (=> b!80580 (= e!52630 (+!106 call!7503 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!80581 () Bool)

(declare-fun e!52635 () ListLongMap!1451)

(assert (=> b!80581 (= e!52635 e!52630)))

(declare-fun c!12609 () Bool)

(assert (=> b!80581 (= c!12609 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!80582 () Bool)

(declare-fun e!52634 () Bool)

(assert (=> b!80582 (= e!52631 e!52634)))

(assert (=> b!80582 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun res!41962 () Bool)

(assert (=> b!80582 (= res!41962 (contains!745 lt!37534 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80582 (=> (not res!41962) (not e!52634))))

(declare-fun d!19661 () Bool)

(assert (=> d!19661 e!52632))

(declare-fun res!41961 () Bool)

(assert (=> d!19661 (=> (not res!41961) (not e!52632))))

(assert (=> d!19661 (= res!41961 (not (contains!745 lt!37534 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19661 (= lt!37534 e!52635)))

(declare-fun c!12610 () Bool)

(assert (=> d!19661 (= c!12610 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> d!19661 (validMask!0 (mask!6299 (v!2608 (underlying!281 thiss!992))))))

(assert (=> d!19661 (= (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))) lt!37534)))

(declare-fun e!52633 () Bool)

(declare-fun b!80583 () Bool)

(assert (=> b!80583 (= e!52633 (= lt!37534 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!80584 () Bool)

(assert (=> b!80584 (= e!52631 e!52633)))

(declare-fun c!12608 () Bool)

(assert (=> b!80584 (= c!12608 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!80585 () Bool)

(assert (=> b!80585 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> b!80585 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_values!2276 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> b!80585 (= e!52634 (= (apply!80 lt!37534 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!80586 () Bool)

(assert (=> b!80586 (= e!52636 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80586 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!80587 () Bool)

(declare-fun isEmpty!329 (ListLongMap!1451) Bool)

(assert (=> b!80587 (= e!52633 (isEmpty!329 lt!37534))))

(declare-fun b!80588 () Bool)

(assert (=> b!80588 (= e!52635 (ListLongMap!1452 Nil!1508))))

(assert (= (and d!19661 c!12610) b!80588))

(assert (= (and d!19661 (not c!12610)) b!80581))

(assert (= (and b!80581 c!12609) b!80580))

(assert (= (and b!80581 (not c!12609)) b!80577))

(assert (= (or b!80580 b!80577) bm!7500))

(assert (= (and d!19661 res!41961) b!80578))

(assert (= (and b!80578 res!41963) b!80579))

(assert (= (and b!80579 res!41964) b!80586))

(assert (= (and b!80579 c!12607) b!80582))

(assert (= (and b!80579 (not c!12607)) b!80584))

(assert (= (and b!80582 res!41962) b!80585))

(assert (= (and b!80584 c!12608) b!80583))

(assert (= (and b!80584 (not c!12608)) b!80587))

(declare-fun b_lambda!3595 () Bool)

(assert (=> (not b_lambda!3595) (not b!80580)))

(assert (=> b!80580 t!5175))

(declare-fun b_and!4927 () Bool)

(assert (= b_and!4923 (and (=> t!5175 result!2839) b_and!4927)))

(assert (=> b!80580 t!5177))

(declare-fun b_and!4929 () Bool)

(assert (= b_and!4925 (and (=> t!5177 result!2843) b_and!4929)))

(declare-fun b_lambda!3597 () Bool)

(assert (=> (not b_lambda!3597) (not b!80585)))

(assert (=> b!80585 t!5175))

(declare-fun b_and!4931 () Bool)

(assert (= b_and!4927 (and (=> t!5175 result!2839) b_and!4931)))

(assert (=> b!80585 t!5177))

(declare-fun b_and!4933 () Bool)

(assert (= b_and!4929 (and (=> t!5177 result!2843) b_and!4933)))

(declare-fun m!82083 () Bool)

(assert (=> d!19661 m!82083))

(assert (=> d!19661 m!81831))

(assert (=> b!80580 m!81995))

(assert (=> b!80580 m!81821))

(assert (=> b!80580 m!81999))

(assert (=> b!80580 m!81993))

(assert (=> b!80580 m!81821))

(declare-fun m!82085 () Bool)

(assert (=> b!80580 m!82085))

(declare-fun m!82087 () Bool)

(assert (=> b!80580 m!82087))

(assert (=> b!80580 m!82085))

(assert (=> b!80580 m!81995))

(declare-fun m!82089 () Bool)

(assert (=> b!80580 m!82089))

(declare-fun m!82091 () Bool)

(assert (=> b!80580 m!82091))

(assert (=> b!80582 m!81993))

(assert (=> b!80582 m!81993))

(declare-fun m!82093 () Bool)

(assert (=> b!80582 m!82093))

(declare-fun m!82095 () Bool)

(assert (=> b!80587 m!82095))

(declare-fun m!82097 () Bool)

(assert (=> b!80583 m!82097))

(assert (=> bm!7500 m!82097))

(assert (=> b!80581 m!81993))

(assert (=> b!80581 m!81993))

(assert (=> b!80581 m!82037))

(declare-fun m!82099 () Bool)

(assert (=> b!80578 m!82099))

(assert (=> b!80585 m!81995))

(assert (=> b!80585 m!81821))

(assert (=> b!80585 m!81999))

(assert (=> b!80585 m!81993))

(assert (=> b!80585 m!81821))

(assert (=> b!80585 m!81995))

(assert (=> b!80585 m!81993))

(declare-fun m!82101 () Bool)

(assert (=> b!80585 m!82101))

(assert (=> b!80586 m!81993))

(assert (=> b!80586 m!81993))

(assert (=> b!80586 m!82037))

(assert (=> b!80275 d!19661))

(declare-fun d!19663 () Bool)

(declare-fun e!52637 () Bool)

(assert (=> d!19663 e!52637))

(declare-fun res!41966 () Bool)

(assert (=> d!19663 (=> (not res!41966) (not e!52637))))

(declare-fun lt!37541 () ListLongMap!1451)

(assert (=> d!19663 (= res!41966 (contains!745 lt!37541 (_1!1101 lt!37283)))))

(declare-fun lt!37543 () List!1511)

(assert (=> d!19663 (= lt!37541 (ListLongMap!1452 lt!37543))))

(declare-fun lt!37542 () Unit!2341)

(declare-fun lt!37540 () Unit!2341)

(assert (=> d!19663 (= lt!37542 lt!37540)))

(assert (=> d!19663 (= (getValueByKey!138 lt!37543 (_1!1101 lt!37283)) (Some!143 (_2!1101 lt!37283)))))

(assert (=> d!19663 (= lt!37540 (lemmaContainsTupThenGetReturnValue!55 lt!37543 (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(assert (=> d!19663 (= lt!37543 (insertStrictlySorted!58 (toList!741 (+!106 lt!37276 lt!37278)) (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(assert (=> d!19663 (= (+!106 (+!106 lt!37276 lt!37278) lt!37283) lt!37541)))

(declare-fun b!80589 () Bool)

(declare-fun res!41965 () Bool)

(assert (=> b!80589 (=> (not res!41965) (not e!52637))))

(assert (=> b!80589 (= res!41965 (= (getValueByKey!138 (toList!741 lt!37541) (_1!1101 lt!37283)) (Some!143 (_2!1101 lt!37283))))))

(declare-fun b!80590 () Bool)

(assert (=> b!80590 (= e!52637 (contains!746 (toList!741 lt!37541) lt!37283))))

(assert (= (and d!19663 res!41966) b!80589))

(assert (= (and b!80589 res!41965) b!80590))

(declare-fun m!82103 () Bool)

(assert (=> d!19663 m!82103))

(declare-fun m!82105 () Bool)

(assert (=> d!19663 m!82105))

(declare-fun m!82107 () Bool)

(assert (=> d!19663 m!82107))

(declare-fun m!82109 () Bool)

(assert (=> d!19663 m!82109))

(declare-fun m!82111 () Bool)

(assert (=> b!80589 m!82111))

(declare-fun m!82113 () Bool)

(assert (=> b!80590 m!82113))

(assert (=> b!80275 d!19663))

(declare-fun d!19665 () Bool)

(assert (=> d!19665 (= (+!106 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (+!106 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(declare-fun lt!37546 () Unit!2341)

(declare-fun choose!468 (ListLongMap!1451 (_ BitVec 64) V!3003 (_ BitVec 64) V!3003) Unit!2341)

(assert (=> d!19665 (= lt!37546 (choose!468 lt!37276 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))

(assert (=> d!19665 (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19665 (= (addCommutativeForDiffKeys!25 lt!37276 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))) lt!37546)))

(declare-fun bs!3405 () Bool)

(assert (= bs!3405 d!19665))

(declare-fun m!82115 () Bool)

(assert (=> bs!3405 m!82115))

(declare-fun m!82117 () Bool)

(assert (=> bs!3405 m!82117))

(assert (=> bs!3405 m!81811))

(declare-fun m!82119 () Bool)

(assert (=> bs!3405 m!82119))

(assert (=> bs!3405 m!82115))

(declare-fun m!82121 () Bool)

(assert (=> bs!3405 m!82121))

(assert (=> bs!3405 m!82117))

(declare-fun m!82123 () Bool)

(assert (=> bs!3405 m!82123))

(assert (=> b!80275 d!19665))

(declare-fun d!19667 () Bool)

(assert (=> d!19667 (= (+!106 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (+!106 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(declare-fun lt!37547 () Unit!2341)

(assert (=> d!19667 (= lt!37547 (choose!468 lt!37277 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))

(assert (=> d!19667 (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19667 (= (addCommutativeForDiffKeys!25 lt!37277 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) lt!37547)))

(declare-fun bs!3406 () Bool)

(assert (= bs!3406 d!19667))

(declare-fun m!82125 () Bool)

(assert (=> bs!3406 m!82125))

(declare-fun m!82127 () Bool)

(assert (=> bs!3406 m!82127))

(assert (=> bs!3406 m!81811))

(declare-fun m!82129 () Bool)

(assert (=> bs!3406 m!82129))

(assert (=> bs!3406 m!82125))

(declare-fun m!82131 () Bool)

(assert (=> bs!3406 m!82131))

(assert (=> bs!3406 m!82127))

(declare-fun m!82133 () Bool)

(assert (=> bs!3406 m!82133))

(assert (=> b!80275 d!19667))

(declare-fun d!19669 () Bool)

(declare-fun e!52638 () Bool)

(assert (=> d!19669 e!52638))

(declare-fun res!41968 () Bool)

(assert (=> d!19669 (=> (not res!41968) (not e!52638))))

(declare-fun lt!37549 () ListLongMap!1451)

(assert (=> d!19669 (= res!41968 (contains!745 lt!37549 (_1!1101 lt!37283)))))

(declare-fun lt!37551 () List!1511)

(assert (=> d!19669 (= lt!37549 (ListLongMap!1452 lt!37551))))

(declare-fun lt!37550 () Unit!2341)

(declare-fun lt!37548 () Unit!2341)

(assert (=> d!19669 (= lt!37550 lt!37548)))

(assert (=> d!19669 (= (getValueByKey!138 lt!37551 (_1!1101 lt!37283)) (Some!143 (_2!1101 lt!37283)))))

(assert (=> d!19669 (= lt!37548 (lemmaContainsTupThenGetReturnValue!55 lt!37551 (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(assert (=> d!19669 (= lt!37551 (insertStrictlySorted!58 (toList!741 lt!37276) (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(assert (=> d!19669 (= (+!106 lt!37276 lt!37283) lt!37549)))

(declare-fun b!80591 () Bool)

(declare-fun res!41967 () Bool)

(assert (=> b!80591 (=> (not res!41967) (not e!52638))))

(assert (=> b!80591 (= res!41967 (= (getValueByKey!138 (toList!741 lt!37549) (_1!1101 lt!37283)) (Some!143 (_2!1101 lt!37283))))))

(declare-fun b!80592 () Bool)

(assert (=> b!80592 (= e!52638 (contains!746 (toList!741 lt!37549) lt!37283))))

(assert (= (and d!19669 res!41968) b!80591))

(assert (= (and b!80591 res!41967) b!80592))

(declare-fun m!82135 () Bool)

(assert (=> d!19669 m!82135))

(declare-fun m!82137 () Bool)

(assert (=> d!19669 m!82137))

(declare-fun m!82139 () Bool)

(assert (=> d!19669 m!82139))

(declare-fun m!82141 () Bool)

(assert (=> d!19669 m!82141))

(declare-fun m!82143 () Bool)

(assert (=> b!80591 m!82143))

(declare-fun m!82145 () Bool)

(assert (=> b!80592 m!82145))

(assert (=> b!80275 d!19669))

(declare-fun d!19671 () Bool)

(declare-fun e!52639 () Bool)

(assert (=> d!19671 e!52639))

(declare-fun res!41970 () Bool)

(assert (=> d!19671 (=> (not res!41970) (not e!52639))))

(declare-fun lt!37553 () ListLongMap!1451)

(assert (=> d!19671 (= res!41970 (contains!745 lt!37553 (_1!1101 lt!37278)))))

(declare-fun lt!37555 () List!1511)

(assert (=> d!19671 (= lt!37553 (ListLongMap!1452 lt!37555))))

(declare-fun lt!37554 () Unit!2341)

(declare-fun lt!37552 () Unit!2341)

(assert (=> d!19671 (= lt!37554 lt!37552)))

(assert (=> d!19671 (= (getValueByKey!138 lt!37555 (_1!1101 lt!37278)) (Some!143 (_2!1101 lt!37278)))))

(assert (=> d!19671 (= lt!37552 (lemmaContainsTupThenGetReturnValue!55 lt!37555 (_1!1101 lt!37278) (_2!1101 lt!37278)))))

(assert (=> d!19671 (= lt!37555 (insertStrictlySorted!58 (toList!741 lt!37276) (_1!1101 lt!37278) (_2!1101 lt!37278)))))

(assert (=> d!19671 (= (+!106 lt!37276 lt!37278) lt!37553)))

(declare-fun b!80593 () Bool)

(declare-fun res!41969 () Bool)

(assert (=> b!80593 (=> (not res!41969) (not e!52639))))

(assert (=> b!80593 (= res!41969 (= (getValueByKey!138 (toList!741 lt!37553) (_1!1101 lt!37278)) (Some!143 (_2!1101 lt!37278))))))

(declare-fun b!80594 () Bool)

(assert (=> b!80594 (= e!52639 (contains!746 (toList!741 lt!37553) lt!37278))))

(assert (= (and d!19671 res!41970) b!80593))

(assert (= (and b!80593 res!41969) b!80594))

(declare-fun m!82147 () Bool)

(assert (=> d!19671 m!82147))

(declare-fun m!82149 () Bool)

(assert (=> d!19671 m!82149))

(declare-fun m!82151 () Bool)

(assert (=> d!19671 m!82151))

(declare-fun m!82153 () Bool)

(assert (=> d!19671 m!82153))

(declare-fun m!82155 () Bool)

(assert (=> b!80593 m!82155))

(declare-fun m!82157 () Bool)

(assert (=> b!80594 m!82157))

(assert (=> b!80275 d!19671))

(declare-fun d!19673 () Bool)

(declare-fun e!52640 () Bool)

(assert (=> d!19673 e!52640))

(declare-fun res!41972 () Bool)

(assert (=> d!19673 (=> (not res!41972) (not e!52640))))

(declare-fun lt!37557 () ListLongMap!1451)

(assert (=> d!19673 (= res!41972 (contains!745 lt!37557 (_1!1101 lt!37268)))))

(declare-fun lt!37559 () List!1511)

(assert (=> d!19673 (= lt!37557 (ListLongMap!1452 lt!37559))))

(declare-fun lt!37558 () Unit!2341)

(declare-fun lt!37556 () Unit!2341)

(assert (=> d!19673 (= lt!37558 lt!37556)))

(assert (=> d!19673 (= (getValueByKey!138 lt!37559 (_1!1101 lt!37268)) (Some!143 (_2!1101 lt!37268)))))

(assert (=> d!19673 (= lt!37556 (lemmaContainsTupThenGetReturnValue!55 lt!37559 (_1!1101 lt!37268) (_2!1101 lt!37268)))))

(assert (=> d!19673 (= lt!37559 (insertStrictlySorted!58 (toList!741 lt!37281) (_1!1101 lt!37268) (_2!1101 lt!37268)))))

(assert (=> d!19673 (= (+!106 lt!37281 lt!37268) lt!37557)))

(declare-fun b!80595 () Bool)

(declare-fun res!41971 () Bool)

(assert (=> b!80595 (=> (not res!41971) (not e!52640))))

(assert (=> b!80595 (= res!41971 (= (getValueByKey!138 (toList!741 lt!37557) (_1!1101 lt!37268)) (Some!143 (_2!1101 lt!37268))))))

(declare-fun b!80596 () Bool)

(assert (=> b!80596 (= e!52640 (contains!746 (toList!741 lt!37557) lt!37268))))

(assert (= (and d!19673 res!41972) b!80595))

(assert (= (and b!80595 res!41971) b!80596))

(declare-fun m!82159 () Bool)

(assert (=> d!19673 m!82159))

(declare-fun m!82161 () Bool)

(assert (=> d!19673 m!82161))

(declare-fun m!82163 () Bool)

(assert (=> d!19673 m!82163))

(declare-fun m!82165 () Bool)

(assert (=> d!19673 m!82165))

(declare-fun m!82167 () Bool)

(assert (=> b!80595 m!82167))

(declare-fun m!82169 () Bool)

(assert (=> b!80596 m!82169))

(assert (=> b!80275 d!19673))

(declare-fun d!19675 () Bool)

(assert (=> d!19675 (= (validMask!0 (mask!6299 (v!2608 (underlying!281 thiss!992)))) (and (or (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000001111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000011111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000001111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000011111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000001111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000011111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000001111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000011111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000001111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000011111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000111111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000001111111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000011111111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000111111111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000001111111111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000011111111111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000111111111111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000001111111111111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000011111111111111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000111111111111111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00001111111111111111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00011111111111111111111111111111) (= (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!80275 d!19675))

(declare-fun d!19677 () Bool)

(assert (=> d!19677 (= (array_inv!1175 (_keys!3957 newMap!16)) (bvsge (size!2143 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80263 d!19677))

(declare-fun d!19679 () Bool)

(assert (=> d!19679 (= (array_inv!1176 (_values!2276 newMap!16)) (bvsge (size!2144 (_values!2276 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80263 d!19679))

(declare-fun d!19681 () Bool)

(declare-fun c!12613 () Bool)

(assert (=> d!19681 (= c!12613 ((_ is ValueCellFull!915) (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun e!52643 () V!3003)

(assert (=> d!19681 (= (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) from!355) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52643)))

(declare-fun b!80601 () Bool)

(declare-fun get!1180 (ValueCell!915 V!3003) V!3003)

(assert (=> b!80601 (= e!52643 (get!1180 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) from!355) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80602 () Bool)

(declare-fun get!1181 (ValueCell!915 V!3003) V!3003)

(assert (=> b!80602 (= e!52643 (get!1181 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) from!355) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19681 c!12613) b!80601))

(assert (= (and d!19681 (not c!12613)) b!80602))

(assert (=> b!80601 m!81819))

(assert (=> b!80601 m!81821))

(declare-fun m!82171 () Bool)

(assert (=> b!80601 m!82171))

(assert (=> b!80602 m!81819))

(assert (=> b!80602 m!81821))

(declare-fun m!82173 () Bool)

(assert (=> b!80602 m!82173))

(assert (=> b!80273 d!19681))

(declare-fun d!19683 () Bool)

(assert (=> d!19683 (= (valid!317 thiss!992) (valid!316 (v!2608 (underlying!281 thiss!992))))))

(declare-fun bs!3407 () Bool)

(assert (= bs!3407 d!19683))

(declare-fun m!82175 () Bool)

(assert (=> bs!3407 m!82175))

(assert (=> start!10348 d!19683))

(declare-fun d!19685 () Bool)

(declare-fun res!41979 () Bool)

(declare-fun e!52646 () Bool)

(assert (=> d!19685 (=> (not res!41979) (not e!52646))))

(declare-fun simpleValid!56 (LongMapFixedSize!738) Bool)

(assert (=> d!19685 (= res!41979 (simpleValid!56 newMap!16))))

(assert (=> d!19685 (= (valid!316 newMap!16) e!52646)))

(declare-fun b!80609 () Bool)

(declare-fun res!41980 () Bool)

(assert (=> b!80609 (=> (not res!41980) (not e!52646))))

(declare-fun arrayCountValidKeys!0 (array!3989 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!80609 (= res!41980 (= (arrayCountValidKeys!0 (_keys!3957 newMap!16) #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) (_size!418 newMap!16)))))

(declare-fun b!80610 () Bool)

(declare-fun res!41981 () Bool)

(assert (=> b!80610 (=> (not res!41981) (not e!52646))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3989 (_ BitVec 32)) Bool)

(assert (=> b!80610 (= res!41981 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun b!80611 () Bool)

(assert (=> b!80611 (= e!52646 (arrayNoDuplicates!0 (_keys!3957 newMap!16) #b00000000000000000000000000000000 Nil!1509))))

(assert (= (and d!19685 res!41979) b!80609))

(assert (= (and b!80609 res!41980) b!80610))

(assert (= (and b!80610 res!41981) b!80611))

(declare-fun m!82177 () Bool)

(assert (=> d!19685 m!82177))

(declare-fun m!82179 () Bool)

(assert (=> b!80609 m!82179))

(declare-fun m!82181 () Bool)

(assert (=> b!80610 m!82181))

(declare-fun m!82183 () Bool)

(assert (=> b!80611 m!82183))

(assert (=> b!80262 d!19685))

(declare-fun d!19687 () Bool)

(assert (=> d!19687 (not (arrayContainsKey!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37562 () Unit!2341)

(declare-fun choose!68 (array!3989 (_ BitVec 32) (_ BitVec 64) List!1512) Unit!2341)

(assert (=> d!19687 (= lt!37562 (choose!68 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509)))))

(assert (=> d!19687 (bvslt (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!19687 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509)) lt!37562)))

(declare-fun bs!3408 () Bool)

(assert (= bs!3408 d!19687))

(assert (=> bs!3408 m!81811))

(assert (=> bs!3408 m!81815))

(assert (=> bs!3408 m!81811))

(declare-fun m!82185 () Bool)

(assert (=> bs!3408 m!82185))

(assert (=> b!80280 d!19687))

(declare-fun d!19689 () Bool)

(assert (=> d!19689 (arrayNoDuplicates!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) from!355 Nil!1509)))

(declare-fun lt!37565 () Unit!2341)

(declare-fun choose!39 (array!3989 (_ BitVec 32) (_ BitVec 32)) Unit!2341)

(assert (=> d!19689 (= lt!37565 (choose!39 (_keys!3957 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!19689 (bvslt (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!19689 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000000 from!355) lt!37565)))

(declare-fun bs!3409 () Bool)

(assert (= bs!3409 d!19689))

(assert (=> bs!3409 m!81809))

(declare-fun m!82187 () Bool)

(assert (=> bs!3409 m!82187))

(assert (=> b!80280 d!19689))

(declare-fun d!19691 () Bool)

(declare-fun res!41986 () Bool)

(declare-fun e!52651 () Bool)

(assert (=> d!19691 (=> res!41986 e!52651)))

(assert (=> d!19691 (= res!41986 (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!19691 (= (arrayContainsKey!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!52651)))

(declare-fun b!80616 () Bool)

(declare-fun e!52652 () Bool)

(assert (=> b!80616 (= e!52651 e!52652)))

(declare-fun res!41987 () Bool)

(assert (=> b!80616 (=> (not res!41987) (not e!52652))))

(assert (=> b!80616 (= res!41987 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!80617 () Bool)

(assert (=> b!80617 (= e!52652 (arrayContainsKey!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!19691 (not res!41986)) b!80616))

(assert (= (and b!80616 res!41987) b!80617))

(assert (=> d!19691 m!81993))

(assert (=> b!80617 m!81811))

(declare-fun m!82189 () Bool)

(assert (=> b!80617 m!82189))

(assert (=> b!80280 d!19691))

(declare-fun d!19693 () Bool)

(declare-fun e!52655 () Bool)

(assert (=> d!19693 e!52655))

(declare-fun c!12616 () Bool)

(assert (=> d!19693 (= c!12616 (and (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!37568 () Unit!2341)

(declare-fun choose!469 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) (_ BitVec 32) Int) Unit!2341)

(assert (=> d!19693 (= lt!37568 (choose!469 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))))))

(assert (=> d!19693 (validMask!0 (mask!6299 (v!2608 (underlying!281 thiss!992))))))

(assert (=> d!19693 (= (lemmaListMapContainsThenArrayContainsFrom!64 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))) lt!37568)))

(declare-fun b!80622 () Bool)

(assert (=> b!80622 (= e!52655 (arrayContainsKey!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!80623 () Bool)

(assert (=> b!80623 (= e!52655 (ite (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!19693 c!12616) b!80622))

(assert (= (and d!19693 (not c!12616)) b!80623))

(assert (=> d!19693 m!81811))

(declare-fun m!82191 () Bool)

(assert (=> d!19693 m!82191))

(assert (=> d!19693 m!81831))

(assert (=> b!80622 m!81811))

(assert (=> b!80622 m!81815))

(assert (=> b!80280 d!19693))

(declare-fun b!80634 () Bool)

(declare-fun e!52665 () Bool)

(declare-fun call!7506 () Bool)

(assert (=> b!80634 (= e!52665 call!7506)))

(declare-fun bm!7503 () Bool)

(declare-fun c!12619 () Bool)

(assert (=> bm!7503 (= call!7506 (arrayNoDuplicates!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)))))

(declare-fun b!80635 () Bool)

(assert (=> b!80635 (= e!52665 call!7506)))

(declare-fun b!80636 () Bool)

(declare-fun e!52664 () Bool)

(assert (=> b!80636 (= e!52664 e!52665)))

(assert (=> b!80636 (= c!12619 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!80638 () Bool)

(declare-fun e!52667 () Bool)

(declare-fun contains!747 (List!1512 (_ BitVec 64)) Bool)

(assert (=> b!80638 (= e!52667 (contains!747 Nil!1509 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!80637 () Bool)

(declare-fun e!52666 () Bool)

(assert (=> b!80637 (= e!52666 e!52664)))

(declare-fun res!41995 () Bool)

(assert (=> b!80637 (=> (not res!41995) (not e!52664))))

(assert (=> b!80637 (= res!41995 (not e!52667))))

(declare-fun res!41994 () Bool)

(assert (=> b!80637 (=> (not res!41994) (not e!52667))))

(assert (=> b!80637 (= res!41994 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun d!19695 () Bool)

(declare-fun res!41996 () Bool)

(assert (=> d!19695 (=> res!41996 e!52666)))

(assert (=> d!19695 (= res!41996 (bvsge from!355 (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> d!19695 (= (arrayNoDuplicates!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) from!355 Nil!1509) e!52666)))

(assert (= (and d!19695 (not res!41996)) b!80637))

(assert (= (and b!80637 res!41994) b!80638))

(assert (= (and b!80637 res!41995) b!80636))

(assert (= (and b!80636 c!12619) b!80634))

(assert (= (and b!80636 (not c!12619)) b!80635))

(assert (= (or b!80634 b!80635) bm!7503))

(assert (=> bm!7503 m!81811))

(declare-fun m!82193 () Bool)

(assert (=> bm!7503 m!82193))

(assert (=> b!80636 m!81811))

(assert (=> b!80636 m!81811))

(declare-fun m!82195 () Bool)

(assert (=> b!80636 m!82195))

(assert (=> b!80638 m!81811))

(assert (=> b!80638 m!81811))

(declare-fun m!82197 () Bool)

(assert (=> b!80638 m!82197))

(assert (=> b!80637 m!81811))

(assert (=> b!80637 m!81811))

(assert (=> b!80637 m!82195))

(assert (=> b!80280 d!19695))

(declare-fun mapNonEmpty!3339 () Bool)

(declare-fun mapRes!3339 () Bool)

(declare-fun tp!8829 () Bool)

(declare-fun e!52673 () Bool)

(assert (=> mapNonEmpty!3339 (= mapRes!3339 (and tp!8829 e!52673))))

(declare-fun mapRest!3339 () (Array (_ BitVec 32) ValueCell!915))

(declare-fun mapKey!3339 () (_ BitVec 32))

(declare-fun mapValue!3339 () ValueCell!915)

(assert (=> mapNonEmpty!3339 (= mapRest!3330 (store mapRest!3339 mapKey!3339 mapValue!3339))))

(declare-fun mapIsEmpty!3339 () Bool)

(assert (=> mapIsEmpty!3339 mapRes!3339))

(declare-fun condMapEmpty!3339 () Bool)

(declare-fun mapDefault!3339 () ValueCell!915)

(assert (=> mapNonEmpty!3329 (= condMapEmpty!3339 (= mapRest!3330 ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3339)))))

(declare-fun e!52672 () Bool)

(assert (=> mapNonEmpty!3329 (= tp!8811 (and e!52672 mapRes!3339))))

(declare-fun b!80646 () Bool)

(assert (=> b!80646 (= e!52672 tp_is_empty!2517)))

(declare-fun b!80645 () Bool)

(assert (=> b!80645 (= e!52673 tp_is_empty!2517)))

(assert (= (and mapNonEmpty!3329 condMapEmpty!3339) mapIsEmpty!3339))

(assert (= (and mapNonEmpty!3329 (not condMapEmpty!3339)) mapNonEmpty!3339))

(assert (= (and mapNonEmpty!3339 ((_ is ValueCellFull!915) mapValue!3339)) b!80645))

(assert (= (and mapNonEmpty!3329 ((_ is ValueCellFull!915) mapDefault!3339)) b!80646))

(declare-fun m!82199 () Bool)

(assert (=> mapNonEmpty!3339 m!82199))

(declare-fun mapNonEmpty!3340 () Bool)

(declare-fun mapRes!3340 () Bool)

(declare-fun tp!8830 () Bool)

(declare-fun e!52675 () Bool)

(assert (=> mapNonEmpty!3340 (= mapRes!3340 (and tp!8830 e!52675))))

(declare-fun mapKey!3340 () (_ BitVec 32))

(declare-fun mapRest!3340 () (Array (_ BitVec 32) ValueCell!915))

(declare-fun mapValue!3340 () ValueCell!915)

(assert (=> mapNonEmpty!3340 (= mapRest!3329 (store mapRest!3340 mapKey!3340 mapValue!3340))))

(declare-fun mapIsEmpty!3340 () Bool)

(assert (=> mapIsEmpty!3340 mapRes!3340))

(declare-fun condMapEmpty!3340 () Bool)

(declare-fun mapDefault!3340 () ValueCell!915)

(assert (=> mapNonEmpty!3330 (= condMapEmpty!3340 (= mapRest!3329 ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3340)))))

(declare-fun e!52674 () Bool)

(assert (=> mapNonEmpty!3330 (= tp!8813 (and e!52674 mapRes!3340))))

(declare-fun b!80648 () Bool)

(assert (=> b!80648 (= e!52674 tp_is_empty!2517)))

(declare-fun b!80647 () Bool)

(assert (=> b!80647 (= e!52675 tp_is_empty!2517)))

(assert (= (and mapNonEmpty!3330 condMapEmpty!3340) mapIsEmpty!3340))

(assert (= (and mapNonEmpty!3330 (not condMapEmpty!3340)) mapNonEmpty!3340))

(assert (= (and mapNonEmpty!3340 ((_ is ValueCellFull!915) mapValue!3340)) b!80647))

(assert (= (and mapNonEmpty!3330 ((_ is ValueCellFull!915) mapDefault!3340)) b!80648))

(declare-fun m!82201 () Bool)

(assert (=> mapNonEmpty!3340 m!82201))

(declare-fun b_lambda!3599 () Bool)

(assert (= b_lambda!3593 (or (and b!80271 b_free!2201) (and b!80263 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))))) b_lambda!3599)))

(declare-fun b_lambda!3601 () Bool)

(assert (= b_lambda!3595 (or (and b!80271 b_free!2201) (and b!80263 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))))) b_lambda!3601)))

(declare-fun b_lambda!3603 () Bool)

(assert (= b_lambda!3597 (or (and b!80271 b_free!2201) (and b!80263 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))))) b_lambda!3603)))

(check-sat (not bm!7494) (not b!80580) (not b!80638) (not b!80550) (not d!19643) (not b!80353) (not b!80443) (not b!80594) (not d!19683) (not bm!7496) (not b!80450) (not bm!7456) (not b!80622) (not b!80535) (not bm!7476) (not b!80581) (not d!19687) (not b!80591) (not bm!7457) (not b!80587) (not b!80602) b_and!4931 (not b!80455) (not b!80578) (not b!80473) (not d!19689) (not bm!7473) (not d!19665) (not b!80637) (not d!19685) (not b!80601) (not d!19651) b_and!4933 (not b!80548) (not d!19671) (not b!80611) (not b_lambda!3601) (not d!19653) (not b!80447) (not b!80472) tp_is_empty!2517 (not d!19659) (not b!80589) (not b!80583) (not b!80585) (not mapNonEmpty!3340) (not b_lambda!3591) (not b!80596) (not bm!7462) (not b!80525) (not b!80537) (not d!19655) (not b!80549) (not b_lambda!3603) (not d!19661) (not d!19657) (not bm!7475) (not b!80468) (not b!80610) (not d!19669) (not d!19673) (not b!80582) (not bm!7471) (not bm!7466) (not bm!7464) (not b_next!2201) (not b!80477) (not b!80523) (not b!80528) (not b!80551) (not b_next!2203) (not mapNonEmpty!3339) (not bm!7493) (not b!80593) (not b!80586) (not d!19667) (not b!80590) (not b!80526) (not d!19663) (not b!80636) (not b!80530) (not b!80595) (not d!19645) (not b!80351) (not bm!7453) (not bm!7461) (not b_lambda!3599) (not b!80609) (not bm!7503) (not b!80547) (not bm!7497) (not b!80539) (not b!80592) (not b!80552) (not bm!7500) (not b!80617) (not bm!7470) (not d!19693))
(check-sat b_and!4931 b_and!4933 (not b_next!2201) (not b_next!2203))
(get-model)

(declare-fun d!19697 () Bool)

(declare-fun e!52676 () Bool)

(assert (=> d!19697 e!52676))

(declare-fun res!41997 () Bool)

(assert (=> d!19697 (=> res!41997 e!52676)))

(declare-fun lt!37570 () Bool)

(assert (=> d!19697 (= res!41997 (not lt!37570))))

(declare-fun lt!37569 () Bool)

(assert (=> d!19697 (= lt!37570 lt!37569)))

(declare-fun lt!37572 () Unit!2341)

(declare-fun e!52677 () Unit!2341)

(assert (=> d!19697 (= lt!37572 e!52677)))

(declare-fun c!12620 () Bool)

(assert (=> d!19697 (= c!12620 lt!37569)))

(assert (=> d!19697 (= lt!37569 (containsKey!142 (toList!741 call!7465) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!19697 (= (contains!745 call!7465 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) lt!37570)))

(declare-fun b!80649 () Bool)

(declare-fun lt!37571 () Unit!2341)

(assert (=> b!80649 (= e!52677 lt!37571)))

(assert (=> b!80649 (= lt!37571 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 call!7465) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!80649 (isDefined!91 (getValueByKey!138 (toList!741 call!7465) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!80650 () Bool)

(declare-fun Unit!2349 () Unit!2341)

(assert (=> b!80650 (= e!52677 Unit!2349)))

(declare-fun b!80651 () Bool)

(assert (=> b!80651 (= e!52676 (isDefined!91 (getValueByKey!138 (toList!741 call!7465) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(assert (= (and d!19697 c!12620) b!80649))

(assert (= (and d!19697 (not c!12620)) b!80650))

(assert (= (and d!19697 (not res!41997)) b!80651))

(assert (=> d!19697 m!81811))

(declare-fun m!82203 () Bool)

(assert (=> d!19697 m!82203))

(assert (=> b!80649 m!81811))

(declare-fun m!82205 () Bool)

(assert (=> b!80649 m!82205))

(assert (=> b!80649 m!81811))

(declare-fun m!82207 () Bool)

(assert (=> b!80649 m!82207))

(assert (=> b!80649 m!82207))

(declare-fun m!82209 () Bool)

(assert (=> b!80649 m!82209))

(assert (=> b!80651 m!81811))

(assert (=> b!80651 m!82207))

(assert (=> b!80651 m!82207))

(assert (=> b!80651 m!82209))

(assert (=> b!80472 d!19697))

(declare-fun d!19699 () Bool)

(assert (=> d!19699 (= (get!1181 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) from!355) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80602 d!19699))

(declare-fun b!80652 () Bool)

(declare-fun e!52678 () ListLongMap!1451)

(declare-fun call!7507 () ListLongMap!1451)

(assert (=> b!80652 (= e!52678 call!7507)))

(declare-fun b!80653 () Bool)

(declare-fun res!42000 () Bool)

(declare-fun e!52680 () Bool)

(assert (=> b!80653 (=> (not res!42000) (not e!52680))))

(declare-fun lt!37574 () ListLongMap!1451)

(assert (=> b!80653 (= res!42000 (not (contains!745 lt!37574 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!7504 () Bool)

(assert (=> bm!7504 (= call!7507 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun b!80654 () Bool)

(declare-fun e!52679 () Bool)

(assert (=> b!80654 (= e!52680 e!52679)))

(declare-fun c!12621 () Bool)

(declare-fun e!52684 () Bool)

(assert (=> b!80654 (= c!12621 e!52684)))

(declare-fun res!42001 () Bool)

(assert (=> b!80654 (=> (not res!42001) (not e!52684))))

(assert (=> b!80654 (= res!42001 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!80655 () Bool)

(declare-fun lt!37576 () Unit!2341)

(declare-fun lt!37577 () Unit!2341)

(assert (=> b!80655 (= lt!37576 lt!37577)))

(declare-fun lt!37575 () (_ BitVec 64))

(declare-fun lt!37578 () ListLongMap!1451)

(declare-fun lt!37579 () V!3003)

(declare-fun lt!37573 () (_ BitVec 64))

(assert (=> b!80655 (not (contains!745 (+!106 lt!37578 (tuple2!2181 lt!37573 lt!37579)) lt!37575))))

(assert (=> b!80655 (= lt!37577 (addStillNotContains!29 lt!37578 lt!37573 lt!37579 lt!37575))))

(assert (=> b!80655 (= lt!37575 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!80655 (= lt!37579 (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!80655 (= lt!37573 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!80655 (= lt!37578 call!7507)))

(assert (=> b!80655 (= e!52678 (+!106 call!7507 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!80656 () Bool)

(declare-fun e!52683 () ListLongMap!1451)

(assert (=> b!80656 (= e!52683 e!52678)))

(declare-fun c!12623 () Bool)

(assert (=> b!80656 (= c!12623 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!80657 () Bool)

(declare-fun e!52682 () Bool)

(assert (=> b!80657 (= e!52679 e!52682)))

(assert (=> b!80657 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun res!41999 () Bool)

(assert (=> b!80657 (= res!41999 (contains!745 lt!37574 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!80657 (=> (not res!41999) (not e!52682))))

(declare-fun d!19701 () Bool)

(assert (=> d!19701 e!52680))

(declare-fun res!41998 () Bool)

(assert (=> d!19701 (=> (not res!41998) (not e!52680))))

(assert (=> d!19701 (= res!41998 (not (contains!745 lt!37574 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19701 (= lt!37574 e!52683)))

(declare-fun c!12624 () Bool)

(assert (=> d!19701 (= c!12624 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> d!19701 (validMask!0 (mask!6299 (v!2608 (underlying!281 thiss!992))))))

(assert (=> d!19701 (= (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))) lt!37574)))

(declare-fun e!52681 () Bool)

(declare-fun b!80658 () Bool)

(assert (=> b!80658 (= e!52681 (= lt!37574 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!80659 () Bool)

(assert (=> b!80659 (= e!52679 e!52681)))

(declare-fun c!12622 () Bool)

(assert (=> b!80659 (= c!12622 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!80660 () Bool)

(assert (=> b!80660 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> b!80660 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2144 (_values!2276 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> b!80660 (= e!52682 (= (apply!80 lt!37574 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!80661 () Bool)

(assert (=> b!80661 (= e!52684 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!80661 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!80662 () Bool)

(assert (=> b!80662 (= e!52681 (isEmpty!329 lt!37574))))

(declare-fun b!80663 () Bool)

(assert (=> b!80663 (= e!52683 (ListLongMap!1452 Nil!1508))))

(assert (= (and d!19701 c!12624) b!80663))

(assert (= (and d!19701 (not c!12624)) b!80656))

(assert (= (and b!80656 c!12623) b!80655))

(assert (= (and b!80656 (not c!12623)) b!80652))

(assert (= (or b!80655 b!80652) bm!7504))

(assert (= (and d!19701 res!41998) b!80653))

(assert (= (and b!80653 res!42000) b!80654))

(assert (= (and b!80654 res!42001) b!80661))

(assert (= (and b!80654 c!12621) b!80657))

(assert (= (and b!80654 (not c!12621)) b!80659))

(assert (= (and b!80657 res!41999) b!80660))

(assert (= (and b!80659 c!12622) b!80658))

(assert (= (and b!80659 (not c!12622)) b!80662))

(declare-fun b_lambda!3605 () Bool)

(assert (=> (not b_lambda!3605) (not b!80655)))

(assert (=> b!80655 t!5175))

(declare-fun b_and!4935 () Bool)

(assert (= b_and!4931 (and (=> t!5175 result!2839) b_and!4935)))

(assert (=> b!80655 t!5177))

(declare-fun b_and!4937 () Bool)

(assert (= b_and!4933 (and (=> t!5177 result!2843) b_and!4937)))

(declare-fun b_lambda!3607 () Bool)

(assert (=> (not b_lambda!3607) (not b!80660)))

(assert (=> b!80660 t!5175))

(declare-fun b_and!4939 () Bool)

(assert (= b_and!4935 (and (=> t!5175 result!2839) b_and!4939)))

(assert (=> b!80660 t!5177))

(declare-fun b_and!4941 () Bool)

(assert (= b_and!4937 (and (=> t!5177 result!2843) b_and!4941)))

(declare-fun m!82211 () Bool)

(assert (=> d!19701 m!82211))

(assert (=> d!19701 m!81831))

(declare-fun m!82213 () Bool)

(assert (=> b!80655 m!82213))

(assert (=> b!80655 m!81821))

(declare-fun m!82215 () Bool)

(assert (=> b!80655 m!82215))

(declare-fun m!82217 () Bool)

(assert (=> b!80655 m!82217))

(assert (=> b!80655 m!81821))

(declare-fun m!82219 () Bool)

(assert (=> b!80655 m!82219))

(declare-fun m!82221 () Bool)

(assert (=> b!80655 m!82221))

(assert (=> b!80655 m!82219))

(assert (=> b!80655 m!82213))

(declare-fun m!82223 () Bool)

(assert (=> b!80655 m!82223))

(declare-fun m!82225 () Bool)

(assert (=> b!80655 m!82225))

(assert (=> b!80657 m!82217))

(assert (=> b!80657 m!82217))

(declare-fun m!82227 () Bool)

(assert (=> b!80657 m!82227))

(declare-fun m!82229 () Bool)

(assert (=> b!80662 m!82229))

(declare-fun m!82231 () Bool)

(assert (=> b!80658 m!82231))

(assert (=> bm!7504 m!82231))

(assert (=> b!80656 m!82217))

(assert (=> b!80656 m!82217))

(declare-fun m!82233 () Bool)

(assert (=> b!80656 m!82233))

(declare-fun m!82235 () Bool)

(assert (=> b!80653 m!82235))

(assert (=> b!80660 m!82213))

(assert (=> b!80660 m!81821))

(assert (=> b!80660 m!82215))

(assert (=> b!80660 m!82217))

(assert (=> b!80660 m!81821))

(assert (=> b!80660 m!82213))

(assert (=> b!80660 m!82217))

(declare-fun m!82237 () Bool)

(assert (=> b!80660 m!82237))

(assert (=> b!80661 m!82217))

(assert (=> b!80661 m!82217))

(assert (=> b!80661 m!82233))

(assert (=> b!80583 d!19701))

(declare-fun d!19703 () Bool)

(declare-fun lt!37582 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!85 (List!1511) (InoxSet tuple2!2180))

(assert (=> d!19703 (= lt!37582 (select (content!85 (toList!741 lt!37516)) lt!37283))))

(declare-fun e!52690 () Bool)

(assert (=> d!19703 (= lt!37582 e!52690)))

(declare-fun res!42006 () Bool)

(assert (=> d!19703 (=> (not res!42006) (not e!52690))))

(assert (=> d!19703 (= res!42006 ((_ is Cons!1507) (toList!741 lt!37516)))))

(assert (=> d!19703 (= (contains!746 (toList!741 lt!37516) lt!37283) lt!37582)))

(declare-fun b!80668 () Bool)

(declare-fun e!52689 () Bool)

(assert (=> b!80668 (= e!52690 e!52689)))

(declare-fun res!42007 () Bool)

(assert (=> b!80668 (=> res!42007 e!52689)))

(assert (=> b!80668 (= res!42007 (= (h!2096 (toList!741 lt!37516)) lt!37283))))

(declare-fun b!80669 () Bool)

(assert (=> b!80669 (= e!52689 (contains!746 (t!5178 (toList!741 lt!37516)) lt!37283))))

(assert (= (and d!19703 res!42006) b!80668))

(assert (= (and b!80668 (not res!42007)) b!80669))

(declare-fun m!82239 () Bool)

(assert (=> d!19703 m!82239))

(declare-fun m!82241 () Bool)

(assert (=> d!19703 m!82241))

(declare-fun m!82243 () Bool)

(assert (=> b!80669 m!82243))

(assert (=> b!80552 d!19703))

(declare-fun d!19705 () Bool)

(declare-fun e!52691 () Bool)

(assert (=> d!19705 e!52691))

(declare-fun res!42008 () Bool)

(assert (=> d!19705 (=> res!42008 e!52691)))

(declare-fun lt!37584 () Bool)

(assert (=> d!19705 (= res!42008 (not lt!37584))))

(declare-fun lt!37583 () Bool)

(assert (=> d!19705 (= lt!37584 lt!37583)))

(declare-fun lt!37586 () Unit!2341)

(declare-fun e!52692 () Unit!2341)

(assert (=> d!19705 (= lt!37586 e!52692)))

(declare-fun c!12625 () Bool)

(assert (=> d!19705 (= c!12625 lt!37583)))

(assert (=> d!19705 (= lt!37583 (containsKey!142 (toList!741 e!52557) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!19705 (= (contains!745 e!52557 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) lt!37584)))

(declare-fun b!80670 () Bool)

(declare-fun lt!37585 () Unit!2341)

(assert (=> b!80670 (= e!52692 lt!37585)))

(assert (=> b!80670 (= lt!37585 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 e!52557) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!80670 (isDefined!91 (getValueByKey!138 (toList!741 e!52557) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!80671 () Bool)

(declare-fun Unit!2350 () Unit!2341)

(assert (=> b!80671 (= e!52692 Unit!2350)))

(declare-fun b!80672 () Bool)

(assert (=> b!80672 (= e!52691 (isDefined!91 (getValueByKey!138 (toList!741 e!52557) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(assert (= (and d!19705 c!12625) b!80670))

(assert (= (and d!19705 (not c!12625)) b!80671))

(assert (= (and d!19705 (not res!42008)) b!80672))

(assert (=> d!19705 m!81811))

(declare-fun m!82245 () Bool)

(assert (=> d!19705 m!82245))

(assert (=> b!80670 m!81811))

(declare-fun m!82247 () Bool)

(assert (=> b!80670 m!82247))

(assert (=> b!80670 m!81811))

(declare-fun m!82249 () Bool)

(assert (=> b!80670 m!82249))

(assert (=> b!80670 m!82249))

(declare-fun m!82251 () Bool)

(assert (=> b!80670 m!82251))

(assert (=> b!80672 m!81811))

(assert (=> b!80672 m!82249))

(assert (=> b!80672 m!82249))

(assert (=> b!80672 m!82251))

(assert (=> bm!7464 d!19705))

(declare-fun d!19707 () Bool)

(declare-fun c!12630 () Bool)

(assert (=> d!19707 (= c!12630 (and ((_ is Cons!1507) (toList!741 lt!37549)) (= (_1!1101 (h!2096 (toList!741 lt!37549))) (_1!1101 lt!37283))))))

(declare-fun e!52697 () Option!144)

(assert (=> d!19707 (= (getValueByKey!138 (toList!741 lt!37549) (_1!1101 lt!37283)) e!52697)))

(declare-fun b!80682 () Bool)

(declare-fun e!52698 () Option!144)

(assert (=> b!80682 (= e!52697 e!52698)))

(declare-fun c!12631 () Bool)

(assert (=> b!80682 (= c!12631 (and ((_ is Cons!1507) (toList!741 lt!37549)) (not (= (_1!1101 (h!2096 (toList!741 lt!37549))) (_1!1101 lt!37283)))))))

(declare-fun b!80683 () Bool)

(assert (=> b!80683 (= e!52698 (getValueByKey!138 (t!5178 (toList!741 lt!37549)) (_1!1101 lt!37283)))))

(declare-fun b!80684 () Bool)

(assert (=> b!80684 (= e!52698 None!142)))

(declare-fun b!80681 () Bool)

(assert (=> b!80681 (= e!52697 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37549)))))))

(assert (= (and d!19707 c!12630) b!80681))

(assert (= (and d!19707 (not c!12630)) b!80682))

(assert (= (and b!80682 c!12631) b!80683))

(assert (= (and b!80682 (not c!12631)) b!80684))

(declare-fun m!82253 () Bool)

(assert (=> b!80683 m!82253))

(assert (=> b!80591 d!19707))

(assert (=> bm!7457 d!19651))

(declare-fun d!19709 () Bool)

(declare-fun c!12632 () Bool)

(assert (=> d!19709 (= c!12632 (and ((_ is Cons!1507) (toList!741 lt!37553)) (= (_1!1101 (h!2096 (toList!741 lt!37553))) (_1!1101 lt!37278))))))

(declare-fun e!52699 () Option!144)

(assert (=> d!19709 (= (getValueByKey!138 (toList!741 lt!37553) (_1!1101 lt!37278)) e!52699)))

(declare-fun b!80686 () Bool)

(declare-fun e!52700 () Option!144)

(assert (=> b!80686 (= e!52699 e!52700)))

(declare-fun c!12633 () Bool)

(assert (=> b!80686 (= c!12633 (and ((_ is Cons!1507) (toList!741 lt!37553)) (not (= (_1!1101 (h!2096 (toList!741 lt!37553))) (_1!1101 lt!37278)))))))

(declare-fun b!80687 () Bool)

(assert (=> b!80687 (= e!52700 (getValueByKey!138 (t!5178 (toList!741 lt!37553)) (_1!1101 lt!37278)))))

(declare-fun b!80688 () Bool)

(assert (=> b!80688 (= e!52700 None!142)))

(declare-fun b!80685 () Bool)

(assert (=> b!80685 (= e!52699 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37553)))))))

(assert (= (and d!19709 c!12632) b!80685))

(assert (= (and d!19709 (not c!12632)) b!80686))

(assert (= (and b!80686 c!12633) b!80687))

(assert (= (and b!80686 (not c!12633)) b!80688))

(declare-fun m!82255 () Bool)

(assert (=> b!80687 m!82255))

(assert (=> b!80593 d!19709))

(declare-fun d!19711 () Bool)

(declare-fun get!1182 (Option!144) V!3003)

(assert (=> d!19711 (= (apply!80 lt!37534 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1182 (getValueByKey!138 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3410 () Bool)

(assert (= bs!3410 d!19711))

(assert (=> bs!3410 m!81993))

(declare-fun m!82257 () Bool)

(assert (=> bs!3410 m!82257))

(assert (=> bs!3410 m!82257))

(declare-fun m!82259 () Bool)

(assert (=> bs!3410 m!82259))

(assert (=> b!80585 d!19711))

(declare-fun d!19713 () Bool)

(declare-fun c!12634 () Bool)

(assert (=> d!19713 (= c!12634 ((_ is ValueCellFull!915) (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!52701 () V!3003)

(assert (=> d!19713 (= (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52701)))

(declare-fun b!80689 () Bool)

(assert (=> b!80689 (= e!52701 (get!1180 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80690 () Bool)

(assert (=> b!80690 (= e!52701 (get!1181 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19713 c!12634) b!80689))

(assert (= (and d!19713 (not c!12634)) b!80690))

(assert (=> b!80689 m!81995))

(assert (=> b!80689 m!81821))

(declare-fun m!82261 () Bool)

(assert (=> b!80689 m!82261))

(assert (=> b!80690 m!81995))

(assert (=> b!80690 m!81821))

(declare-fun m!82263 () Bool)

(assert (=> b!80690 m!82263))

(assert (=> b!80585 d!19713))

(declare-fun d!19715 () Bool)

(declare-fun e!52702 () Bool)

(assert (=> d!19715 e!52702))

(declare-fun res!42016 () Bool)

(assert (=> d!19715 (=> (not res!42016) (not e!52702))))

(assert (=> d!19715 (= res!42016 (or (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))))

(declare-fun lt!37597 () ListLongMap!1451)

(declare-fun lt!37588 () ListLongMap!1451)

(assert (=> d!19715 (= lt!37597 lt!37588)))

(declare-fun lt!37600 () Unit!2341)

(declare-fun e!52709 () Unit!2341)

(assert (=> d!19715 (= lt!37600 e!52709)))

(declare-fun c!12639 () Bool)

(declare-fun e!52708 () Bool)

(assert (=> d!19715 (= c!12639 e!52708)))

(declare-fun res!42009 () Bool)

(assert (=> d!19715 (=> (not res!42009) (not e!52708))))

(assert (=> d!19715 (= res!42009 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun e!52713 () ListLongMap!1451)

(assert (=> d!19715 (= lt!37588 e!52713)))

(declare-fun c!12636 () Bool)

(assert (=> d!19715 (= c!12636 (and (not (= (bvand (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19715 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19715 (= (getCurrentListMap!435 (_keys!3957 newMap!16) (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432) (mask!6299 newMap!16) (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!37597)))

(declare-fun b!80691 () Bool)

(declare-fun Unit!2351 () Unit!2341)

(assert (=> b!80691 (= e!52709 Unit!2351)))

(declare-fun b!80692 () Bool)

(declare-fun lt!37587 () Unit!2341)

(assert (=> b!80692 (= e!52709 lt!37587)))

(declare-fun lt!37596 () ListLongMap!1451)

(assert (=> b!80692 (= lt!37596 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432) (mask!6299 newMap!16) (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37602 () (_ BitVec 64))

(assert (=> b!80692 (= lt!37602 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37589 () (_ BitVec 64))

(assert (=> b!80692 (= lt!37589 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37591 () Unit!2341)

(assert (=> b!80692 (= lt!37591 (addStillContains!56 lt!37596 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) lt!37589))))

(assert (=> b!80692 (contains!745 (+!106 lt!37596 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))) lt!37589)))

(declare-fun lt!37607 () Unit!2341)

(assert (=> b!80692 (= lt!37607 lt!37591)))

(declare-fun lt!37608 () ListLongMap!1451)

(assert (=> b!80692 (= lt!37608 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432) (mask!6299 newMap!16) (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37604 () (_ BitVec 64))

(assert (=> b!80692 (= lt!37604 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37590 () (_ BitVec 64))

(assert (=> b!80692 (= lt!37590 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37598 () Unit!2341)

(assert (=> b!80692 (= lt!37598 (addApplyDifferent!56 lt!37608 lt!37604 (minValue!2189 newMap!16) lt!37590))))

(assert (=> b!80692 (= (apply!80 (+!106 lt!37608 (tuple2!2181 lt!37604 (minValue!2189 newMap!16))) lt!37590) (apply!80 lt!37608 lt!37590))))

(declare-fun lt!37594 () Unit!2341)

(assert (=> b!80692 (= lt!37594 lt!37598)))

(declare-fun lt!37605 () ListLongMap!1451)

(assert (=> b!80692 (= lt!37605 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432) (mask!6299 newMap!16) (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37592 () (_ BitVec 64))

(assert (=> b!80692 (= lt!37592 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37595 () (_ BitVec 64))

(assert (=> b!80692 (= lt!37595 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37593 () Unit!2341)

(assert (=> b!80692 (= lt!37593 (addApplyDifferent!56 lt!37605 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) lt!37595))))

(assert (=> b!80692 (= (apply!80 (+!106 lt!37605 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))) lt!37595) (apply!80 lt!37605 lt!37595))))

(declare-fun lt!37606 () Unit!2341)

(assert (=> b!80692 (= lt!37606 lt!37593)))

(declare-fun lt!37603 () ListLongMap!1451)

(assert (=> b!80692 (= lt!37603 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432) (mask!6299 newMap!16) (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37601 () (_ BitVec 64))

(assert (=> b!80692 (= lt!37601 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37599 () (_ BitVec 64))

(assert (=> b!80692 (= lt!37599 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80692 (= lt!37587 (addApplyDifferent!56 lt!37603 lt!37601 (minValue!2189 newMap!16) lt!37599))))

(assert (=> b!80692 (= (apply!80 (+!106 lt!37603 (tuple2!2181 lt!37601 (minValue!2189 newMap!16))) lt!37599) (apply!80 lt!37603 lt!37599))))

(declare-fun b!80693 () Bool)

(declare-fun res!42012 () Bool)

(assert (=> b!80693 (=> (not res!42012) (not e!52702))))

(declare-fun e!52703 () Bool)

(assert (=> b!80693 (= res!42012 e!52703)))

(declare-fun res!42017 () Bool)

(assert (=> b!80693 (=> res!42017 e!52703)))

(declare-fun e!52710 () Bool)

(assert (=> b!80693 (= res!42017 (not e!52710))))

(declare-fun res!42015 () Bool)

(assert (=> b!80693 (=> (not res!42015) (not e!52710))))

(assert (=> b!80693 (= res!42015 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!80694 () Bool)

(declare-fun e!52712 () Bool)

(assert (=> b!80694 (= e!52712 (= (apply!80 lt!37597 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!80695 () Bool)

(declare-fun e!52714 () Bool)

(assert (=> b!80695 (= e!52703 e!52714)))

(declare-fun res!42011 () Bool)

(assert (=> b!80695 (=> (not res!42011) (not e!52714))))

(assert (=> b!80695 (= res!42011 (contains!745 lt!37597 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80695 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun bm!7505 () Bool)

(declare-fun call!7513 () ListLongMap!1451)

(declare-fun call!7514 () ListLongMap!1451)

(assert (=> bm!7505 (= call!7513 call!7514)))

(declare-fun b!80696 () Bool)

(declare-fun e!52707 () Bool)

(assert (=> b!80696 (= e!52707 e!52712)))

(declare-fun res!42013 () Bool)

(declare-fun call!7510 () Bool)

(assert (=> b!80696 (= res!42013 call!7510)))

(assert (=> b!80696 (=> (not res!42013) (not e!52712))))

(declare-fun b!80697 () Bool)

(assert (=> b!80697 (= e!52710 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80698 () Bool)

(assert (=> b!80698 (= e!52707 (not call!7510))))

(declare-fun b!80699 () Bool)

(assert (=> b!80699 (= e!52708 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80700 () Bool)

(declare-fun e!52711 () Bool)

(declare-fun call!7512 () Bool)

(assert (=> b!80700 (= e!52711 (not call!7512))))

(declare-fun bm!7506 () Bool)

(declare-fun call!7511 () ListLongMap!1451)

(assert (=> bm!7506 (= call!7511 call!7513)))

(declare-fun b!80701 () Bool)

(declare-fun e!52705 () ListLongMap!1451)

(declare-fun call!7509 () ListLongMap!1451)

(assert (=> b!80701 (= e!52705 call!7509)))

(declare-fun bm!7507 () Bool)

(assert (=> bm!7507 (= call!7512 (contains!745 lt!37597 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80702 () Bool)

(assert (=> b!80702 (= e!52702 e!52707)))

(declare-fun c!12635 () Bool)

(assert (=> b!80702 (= c!12635 (not (= (bvand (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7508 () Bool)

(assert (=> bm!7508 (= call!7514 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432) (mask!6299 newMap!16) (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bm!7509 () Bool)

(declare-fun call!7508 () ListLongMap!1451)

(assert (=> bm!7509 (= call!7509 call!7508)))

(declare-fun b!80703 () Bool)

(declare-fun res!42010 () Bool)

(assert (=> b!80703 (=> (not res!42010) (not e!52702))))

(assert (=> b!80703 (= res!42010 e!52711)))

(declare-fun c!12638 () Bool)

(assert (=> b!80703 (= c!12638 (not (= (bvand (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80704 () Bool)

(assert (=> b!80704 (= e!52713 (+!106 call!7508 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!80705 () Bool)

(assert (=> b!80705 (= e!52705 call!7511)))

(declare-fun c!12637 () Bool)

(declare-fun bm!7510 () Bool)

(assert (=> bm!7510 (= call!7508 (+!106 (ite c!12636 call!7514 (ite c!12637 call!7513 call!7511)) (ite (or c!12636 c!12637) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!80706 () Bool)

(assert (=> b!80706 (= e!52714 (= (apply!80 lt!37597 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80706 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432))))))

(assert (=> b!80706 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun c!12640 () Bool)

(declare-fun b!80707 () Bool)

(assert (=> b!80707 (= c!12640 (and (not (= (bvand (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52704 () ListLongMap!1451)

(assert (=> b!80707 (= e!52704 e!52705)))

(declare-fun e!52706 () Bool)

(declare-fun b!80708 () Bool)

(assert (=> b!80708 (= e!52706 (= (apply!80 lt!37597 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))))

(declare-fun b!80709 () Bool)

(assert (=> b!80709 (= e!52711 e!52706)))

(declare-fun res!42014 () Bool)

(assert (=> b!80709 (= res!42014 call!7512)))

(assert (=> b!80709 (=> (not res!42014) (not e!52706))))

(declare-fun b!80710 () Bool)

(assert (=> b!80710 (= e!52713 e!52704)))

(assert (=> b!80710 (= c!12637 (and (not (= (bvand (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7511 () Bool)

(assert (=> bm!7511 (= call!7510 (contains!745 lt!37597 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80711 () Bool)

(assert (=> b!80711 (= e!52704 call!7509)))

(assert (= (and d!19715 c!12636) b!80704))

(assert (= (and d!19715 (not c!12636)) b!80710))

(assert (= (and b!80710 c!12637) b!80711))

(assert (= (and b!80710 (not c!12637)) b!80707))

(assert (= (and b!80707 c!12640) b!80701))

(assert (= (and b!80707 (not c!12640)) b!80705))

(assert (= (or b!80701 b!80705) bm!7506))

(assert (= (or b!80711 bm!7506) bm!7505))

(assert (= (or b!80711 b!80701) bm!7509))

(assert (= (or b!80704 bm!7505) bm!7508))

(assert (= (or b!80704 bm!7509) bm!7510))

(assert (= (and d!19715 res!42009) b!80699))

(assert (= (and d!19715 c!12639) b!80692))

(assert (= (and d!19715 (not c!12639)) b!80691))

(assert (= (and d!19715 res!42016) b!80693))

(assert (= (and b!80693 res!42015) b!80697))

(assert (= (and b!80693 (not res!42017)) b!80695))

(assert (= (and b!80695 res!42011) b!80706))

(assert (= (and b!80693 res!42012) b!80703))

(assert (= (and b!80703 c!12638) b!80709))

(assert (= (and b!80703 (not c!12638)) b!80700))

(assert (= (and b!80709 res!42014) b!80708))

(assert (= (or b!80709 b!80700) bm!7507))

(assert (= (and b!80703 res!42010) b!80702))

(assert (= (and b!80702 c!12635) b!80696))

(assert (= (and b!80702 (not c!12635)) b!80698))

(assert (= (and b!80696 res!42013) b!80694))

(assert (= (or b!80696 b!80698) bm!7511))

(declare-fun b_lambda!3609 () Bool)

(assert (=> (not b_lambda!3609) (not b!80706)))

(declare-fun t!5185 () Bool)

(declare-fun tb!1645 () Bool)

(assert (=> (and b!80271 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16)) t!5185) tb!1645))

(declare-fun result!2853 () Bool)

(assert (=> tb!1645 (= result!2853 tp_is_empty!2517)))

(assert (=> b!80706 t!5185))

(declare-fun b_and!4943 () Bool)

(assert (= b_and!4939 (and (=> t!5185 result!2853) b_and!4943)))

(declare-fun t!5187 () Bool)

(declare-fun tb!1647 () Bool)

(assert (=> (and b!80263 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 newMap!16)) t!5187) tb!1647))

(declare-fun result!2855 () Bool)

(assert (= result!2855 result!2853))

(assert (=> b!80706 t!5187))

(declare-fun b_and!4945 () Bool)

(assert (= b_and!4941 (and (=> t!5187 result!2855) b_and!4945)))

(declare-fun m!82265 () Bool)

(assert (=> b!80706 m!82265))

(declare-fun m!82267 () Bool)

(assert (=> b!80706 m!82267))

(assert (=> b!80706 m!82265))

(declare-fun m!82269 () Bool)

(assert (=> b!80706 m!82269))

(declare-fun m!82271 () Bool)

(assert (=> b!80706 m!82271))

(assert (=> b!80706 m!82267))

(assert (=> b!80706 m!82271))

(declare-fun m!82273 () Bool)

(assert (=> b!80706 m!82273))

(declare-fun m!82275 () Bool)

(assert (=> bm!7507 m!82275))

(declare-fun m!82277 () Bool)

(assert (=> bm!7510 m!82277))

(assert (=> b!80692 m!82265))

(declare-fun m!82279 () Bool)

(assert (=> b!80692 m!82279))

(declare-fun m!82281 () Bool)

(assert (=> b!80692 m!82281))

(declare-fun m!82283 () Bool)

(assert (=> b!80692 m!82283))

(declare-fun m!82285 () Bool)

(assert (=> b!80692 m!82285))

(declare-fun m!82287 () Bool)

(assert (=> b!80692 m!82287))

(declare-fun m!82289 () Bool)

(assert (=> b!80692 m!82289))

(declare-fun m!82291 () Bool)

(assert (=> b!80692 m!82291))

(declare-fun m!82293 () Bool)

(assert (=> b!80692 m!82293))

(declare-fun m!82295 () Bool)

(assert (=> b!80692 m!82295))

(assert (=> b!80692 m!82281))

(assert (=> b!80692 m!82285))

(declare-fun m!82297 () Bool)

(assert (=> b!80692 m!82297))

(declare-fun m!82299 () Bool)

(assert (=> b!80692 m!82299))

(declare-fun m!82301 () Bool)

(assert (=> b!80692 m!82301))

(declare-fun m!82303 () Bool)

(assert (=> b!80692 m!82303))

(assert (=> b!80692 m!82303))

(declare-fun m!82305 () Bool)

(assert (=> b!80692 m!82305))

(assert (=> b!80692 m!82293))

(declare-fun m!82307 () Bool)

(assert (=> b!80692 m!82307))

(declare-fun m!82309 () Bool)

(assert (=> b!80692 m!82309))

(declare-fun m!82311 () Bool)

(assert (=> b!80694 m!82311))

(assert (=> b!80699 m!82265))

(assert (=> b!80699 m!82265))

(declare-fun m!82313 () Bool)

(assert (=> b!80699 m!82313))

(declare-fun m!82315 () Bool)

(assert (=> bm!7511 m!82315))

(assert (=> bm!7508 m!82309))

(declare-fun m!82317 () Bool)

(assert (=> b!80704 m!82317))

(assert (=> b!80697 m!82265))

(assert (=> b!80697 m!82265))

(assert (=> b!80697 m!82313))

(assert (=> b!80695 m!82265))

(assert (=> b!80695 m!82265))

(declare-fun m!82319 () Bool)

(assert (=> b!80695 m!82319))

(declare-fun m!82321 () Bool)

(assert (=> d!19715 m!82321))

(declare-fun m!82323 () Bool)

(assert (=> b!80708 m!82323))

(assert (=> bm!7471 d!19715))

(declare-fun d!19717 () Bool)

(declare-fun c!12641 () Bool)

(assert (=> d!19717 (= c!12641 (and ((_ is Cons!1507) (toList!741 lt!37557)) (= (_1!1101 (h!2096 (toList!741 lt!37557))) (_1!1101 lt!37268))))))

(declare-fun e!52715 () Option!144)

(assert (=> d!19717 (= (getValueByKey!138 (toList!741 lt!37557) (_1!1101 lt!37268)) e!52715)))

(declare-fun b!80713 () Bool)

(declare-fun e!52716 () Option!144)

(assert (=> b!80713 (= e!52715 e!52716)))

(declare-fun c!12642 () Bool)

(assert (=> b!80713 (= c!12642 (and ((_ is Cons!1507) (toList!741 lt!37557)) (not (= (_1!1101 (h!2096 (toList!741 lt!37557))) (_1!1101 lt!37268)))))))

(declare-fun b!80714 () Bool)

(assert (=> b!80714 (= e!52716 (getValueByKey!138 (t!5178 (toList!741 lt!37557)) (_1!1101 lt!37268)))))

(declare-fun b!80715 () Bool)

(assert (=> b!80715 (= e!52716 None!142)))

(declare-fun b!80712 () Bool)

(assert (=> b!80712 (= e!52715 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37557)))))))

(assert (= (and d!19717 c!12641) b!80712))

(assert (= (and d!19717 (not c!12641)) b!80713))

(assert (= (and b!80713 c!12642) b!80714))

(assert (= (and b!80713 (not c!12642)) b!80715))

(declare-fun m!82325 () Bool)

(assert (=> b!80714 m!82325))

(assert (=> b!80595 d!19717))

(declare-fun d!19719 () Bool)

(declare-fun e!52717 () Bool)

(assert (=> d!19719 e!52717))

(declare-fun res!42019 () Bool)

(assert (=> d!19719 (=> (not res!42019) (not e!52717))))

(declare-fun lt!37610 () ListLongMap!1451)

(assert (=> d!19719 (= res!42019 (contains!745 lt!37610 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun lt!37612 () List!1511)

(assert (=> d!19719 (= lt!37610 (ListLongMap!1452 lt!37612))))

(declare-fun lt!37611 () Unit!2341)

(declare-fun lt!37609 () Unit!2341)

(assert (=> d!19719 (= lt!37611 lt!37609)))

(assert (=> d!19719 (= (getValueByKey!138 lt!37612 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19719 (= lt!37609 (lemmaContainsTupThenGetReturnValue!55 lt!37612 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19719 (= lt!37612 (insertStrictlySorted!58 (toList!741 call!7470) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19719 (= (+!106 call!7470 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) lt!37610)))

(declare-fun b!80716 () Bool)

(declare-fun res!42018 () Bool)

(assert (=> b!80716 (=> (not res!42018) (not e!52717))))

(assert (=> b!80716 (= res!42018 (= (getValueByKey!138 (toList!741 lt!37610) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!80717 () Bool)

(assert (=> b!80717 (= e!52717 (contains!746 (toList!741 lt!37610) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (= (and d!19719 res!42019) b!80716))

(assert (= (and b!80716 res!42018) b!80717))

(declare-fun m!82327 () Bool)

(assert (=> d!19719 m!82327))

(declare-fun m!82329 () Bool)

(assert (=> d!19719 m!82329))

(declare-fun m!82331 () Bool)

(assert (=> d!19719 m!82331))

(declare-fun m!82333 () Bool)

(assert (=> d!19719 m!82333))

(declare-fun m!82335 () Bool)

(assert (=> b!80716 m!82335))

(declare-fun m!82337 () Bool)

(assert (=> b!80717 m!82337))

(assert (=> b!80447 d!19719))

(declare-fun d!19721 () Bool)

(declare-fun isEmpty!330 (List!1511) Bool)

(assert (=> d!19721 (= (isEmpty!329 lt!37534) (isEmpty!330 (toList!741 lt!37534)))))

(declare-fun bs!3411 () Bool)

(assert (= bs!3411 d!19721))

(declare-fun m!82339 () Bool)

(assert (=> bs!3411 m!82339))

(assert (=> b!80587 d!19721))

(declare-fun d!19723 () Bool)

(assert (=> d!19723 (= (apply!80 lt!37487 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1182 (getValueByKey!138 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3412 () Bool)

(assert (= bs!3412 d!19723))

(assert (=> bs!3412 m!81993))

(declare-fun m!82341 () Bool)

(assert (=> bs!3412 m!82341))

(assert (=> bs!3412 m!82341))

(declare-fun m!82343 () Bool)

(assert (=> bs!3412 m!82343))

(assert (=> b!80537 d!19723))

(assert (=> b!80537 d!19713))

(assert (=> d!19687 d!19691))

(declare-fun d!19725 () Bool)

(assert (=> d!19725 (not (arrayContainsKey!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!19725 true))

(declare-fun _$68!67 () Unit!2341)

(assert (=> d!19725 (= (choose!68 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509)) _$68!67)))

(declare-fun bs!3413 () Bool)

(assert (= bs!3413 d!19725))

(assert (=> bs!3413 m!81811))

(assert (=> bs!3413 m!81815))

(assert (=> d!19687 d!19725))

(declare-fun d!19727 () Bool)

(assert (=> d!19727 (= (apply!80 lt!37487 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1182 (getValueByKey!138 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3414 () Bool)

(assert (= bs!3414 d!19727))

(declare-fun m!82345 () Bool)

(assert (=> bs!3414 m!82345))

(assert (=> bs!3414 m!82345))

(declare-fun m!82347 () Bool)

(assert (=> bs!3414 m!82347))

(assert (=> b!80539 d!19727))

(declare-fun d!19729 () Bool)

(declare-fun lt!37613 () Bool)

(assert (=> d!19729 (= lt!37613 (select (content!85 (toList!741 lt!37541)) lt!37283))))

(declare-fun e!52719 () Bool)

(assert (=> d!19729 (= lt!37613 e!52719)))

(declare-fun res!42020 () Bool)

(assert (=> d!19729 (=> (not res!42020) (not e!52719))))

(assert (=> d!19729 (= res!42020 ((_ is Cons!1507) (toList!741 lt!37541)))))

(assert (=> d!19729 (= (contains!746 (toList!741 lt!37541) lt!37283) lt!37613)))

(declare-fun b!80718 () Bool)

(declare-fun e!52718 () Bool)

(assert (=> b!80718 (= e!52719 e!52718)))

(declare-fun res!42021 () Bool)

(assert (=> b!80718 (=> res!42021 e!52718)))

(assert (=> b!80718 (= res!42021 (= (h!2096 (toList!741 lt!37541)) lt!37283))))

(declare-fun b!80719 () Bool)

(assert (=> b!80719 (= e!52718 (contains!746 (t!5178 (toList!741 lt!37541)) lt!37283))))

(assert (= (and d!19729 res!42020) b!80718))

(assert (= (and b!80718 (not res!42021)) b!80719))

(declare-fun m!82349 () Bool)

(assert (=> d!19729 m!82349))

(declare-fun m!82351 () Bool)

(assert (=> d!19729 m!82351))

(declare-fun m!82353 () Bool)

(assert (=> b!80719 m!82353))

(assert (=> b!80590 d!19729))

(declare-fun d!19731 () Bool)

(declare-fun e!52720 () Bool)

(assert (=> d!19731 e!52720))

(declare-fun res!42023 () Bool)

(assert (=> d!19731 (=> (not res!42023) (not e!52720))))

(declare-fun lt!37615 () ListLongMap!1451)

(assert (=> d!19731 (= res!42023 (contains!745 lt!37615 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun lt!37617 () List!1511)

(assert (=> d!19731 (= lt!37615 (ListLongMap!1452 lt!37617))))

(declare-fun lt!37616 () Unit!2341)

(declare-fun lt!37614 () Unit!2341)

(assert (=> d!19731 (= lt!37616 lt!37614)))

(assert (=> d!19731 (= (getValueByKey!138 lt!37617 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (Some!143 (_2!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (=> d!19731 (= lt!37614 (lemmaContainsTupThenGetReturnValue!55 lt!37617 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_2!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (=> d!19731 (= lt!37617 (insertStrictlySorted!58 (toList!741 e!52552) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_2!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (=> d!19731 (= (+!106 e!52552 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!37615)))

(declare-fun b!80720 () Bool)

(declare-fun res!42022 () Bool)

(assert (=> b!80720 (=> (not res!42022) (not e!52720))))

(assert (=> b!80720 (= res!42022 (= (getValueByKey!138 (toList!741 lt!37615) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (Some!143 (_2!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!80721 () Bool)

(assert (=> b!80721 (= e!52720 (contains!746 (toList!741 lt!37615) (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (= (and d!19731 res!42023) b!80720))

(assert (= (and b!80720 res!42022) b!80721))

(declare-fun m!82355 () Bool)

(assert (=> d!19731 m!82355))

(declare-fun m!82357 () Bool)

(assert (=> d!19731 m!82357))

(declare-fun m!82359 () Bool)

(assert (=> d!19731 m!82359))

(declare-fun m!82361 () Bool)

(assert (=> d!19731 m!82361))

(declare-fun m!82363 () Bool)

(assert (=> b!80720 m!82363))

(declare-fun m!82365 () Bool)

(assert (=> b!80721 m!82365))

(assert (=> bm!7475 d!19731))

(declare-fun d!19733 () Bool)

(declare-fun res!42024 () Bool)

(declare-fun e!52721 () Bool)

(assert (=> d!19733 (=> (not res!42024) (not e!52721))))

(assert (=> d!19733 (= res!42024 (simpleValid!56 (v!2608 (underlying!281 thiss!992))))))

(assert (=> d!19733 (= (valid!316 (v!2608 (underlying!281 thiss!992))) e!52721)))

(declare-fun b!80722 () Bool)

(declare-fun res!42025 () Bool)

(assert (=> b!80722 (=> (not res!42025) (not e!52721))))

(assert (=> b!80722 (= res!42025 (= (arrayCountValidKeys!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000000 (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))) (_size!418 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun b!80723 () Bool)

(declare-fun res!42026 () Bool)

(assert (=> b!80723 (=> (not res!42026) (not e!52721))))

(assert (=> b!80723 (= res!42026 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun b!80724 () Bool)

(assert (=> b!80724 (= e!52721 (arrayNoDuplicates!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000000 Nil!1509))))

(assert (= (and d!19733 res!42024) b!80722))

(assert (= (and b!80722 res!42025) b!80723))

(assert (= (and b!80723 res!42026) b!80724))

(declare-fun m!82367 () Bool)

(assert (=> d!19733 m!82367))

(declare-fun m!82369 () Bool)

(assert (=> b!80722 m!82369))

(declare-fun m!82371 () Bool)

(assert (=> b!80723 m!82371))

(declare-fun m!82373 () Bool)

(assert (=> b!80724 m!82373))

(assert (=> d!19683 d!19733))

(declare-fun d!19735 () Bool)

(declare-fun e!52722 () Bool)

(assert (=> d!19735 e!52722))

(declare-fun res!42027 () Bool)

(assert (=> d!19735 (=> res!42027 e!52722)))

(declare-fun lt!37619 () Bool)

(assert (=> d!19735 (= res!42027 (not lt!37619))))

(declare-fun lt!37618 () Bool)

(assert (=> d!19735 (= lt!37619 lt!37618)))

(declare-fun lt!37621 () Unit!2341)

(declare-fun e!52723 () Unit!2341)

(assert (=> d!19735 (= lt!37621 e!52723)))

(declare-fun c!12643 () Bool)

(assert (=> d!19735 (= c!12643 lt!37618)))

(assert (=> d!19735 (= lt!37618 (containsKey!142 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!19735 (= (contains!745 lt!37487 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!37619)))

(declare-fun b!80725 () Bool)

(declare-fun lt!37620 () Unit!2341)

(assert (=> b!80725 (= e!52723 lt!37620)))

(assert (=> b!80725 (= lt!37620 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80725 (isDefined!91 (getValueByKey!138 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!80726 () Bool)

(declare-fun Unit!2352 () Unit!2341)

(assert (=> b!80726 (= e!52723 Unit!2352)))

(declare-fun b!80727 () Bool)

(assert (=> b!80727 (= e!52722 (isDefined!91 (getValueByKey!138 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!19735 c!12643) b!80725))

(assert (= (and d!19735 (not c!12643)) b!80726))

(assert (= (and d!19735 (not res!42027)) b!80727))

(assert (=> d!19735 m!81993))

(declare-fun m!82375 () Bool)

(assert (=> d!19735 m!82375))

(assert (=> b!80725 m!81993))

(declare-fun m!82377 () Bool)

(assert (=> b!80725 m!82377))

(assert (=> b!80725 m!81993))

(assert (=> b!80725 m!82341))

(assert (=> b!80725 m!82341))

(declare-fun m!82379 () Bool)

(assert (=> b!80725 m!82379))

(assert (=> b!80727 m!81993))

(assert (=> b!80727 m!82341))

(assert (=> b!80727 m!82341))

(assert (=> b!80727 m!82379))

(assert (=> b!80526 d!19735))

(declare-fun d!19737 () Bool)

(declare-fun res!42028 () Bool)

(declare-fun e!52724 () Bool)

(assert (=> d!19737 (=> res!42028 e!52724)))

(assert (=> d!19737 (= res!42028 (= (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!19737 (= (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000) e!52724)))

(declare-fun b!80728 () Bool)

(declare-fun e!52725 () Bool)

(assert (=> b!80728 (= e!52724 e!52725)))

(declare-fun res!42029 () Bool)

(assert (=> b!80728 (=> (not res!42029) (not e!52725))))

(assert (=> b!80728 (= res!42029 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!80729 () Bool)

(assert (=> b!80729 (= e!52725 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!19737 (not res!42028)) b!80728))

(assert (= (and b!80728 res!42029) b!80729))

(assert (=> d!19737 m!82265))

(assert (=> b!80729 m!81811))

(declare-fun m!82381 () Bool)

(assert (=> b!80729 m!82381))

(assert (=> bm!7466 d!19737))

(declare-fun b!80730 () Bool)

(declare-fun e!52727 () Bool)

(declare-fun call!7515 () Bool)

(assert (=> b!80730 (= e!52727 call!7515)))

(declare-fun bm!7512 () Bool)

(declare-fun c!12644 () Bool)

(assert (=> bm!7512 (= call!7515 (arrayNoDuplicates!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12644 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509))))))

(declare-fun b!80731 () Bool)

(assert (=> b!80731 (= e!52727 call!7515)))

(declare-fun b!80732 () Bool)

(declare-fun e!52726 () Bool)

(assert (=> b!80732 (= e!52726 e!52727)))

(assert (=> b!80732 (= c!12644 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!80734 () Bool)

(declare-fun e!52729 () Bool)

(assert (=> b!80734 (= e!52729 (contains!747 (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!80733 () Bool)

(declare-fun e!52728 () Bool)

(assert (=> b!80733 (= e!52728 e!52726)))

(declare-fun res!42031 () Bool)

(assert (=> b!80733 (=> (not res!42031) (not e!52726))))

(assert (=> b!80733 (= res!42031 (not e!52729))))

(declare-fun res!42030 () Bool)

(assert (=> b!80733 (=> (not res!42030) (not e!52729))))

(assert (=> b!80733 (= res!42030 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!19739 () Bool)

(declare-fun res!42032 () Bool)

(assert (=> d!19739 (=> res!42032 e!52728)))

(assert (=> d!19739 (= res!42032 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> d!19739 (= (arrayNoDuplicates!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)) e!52728)))

(assert (= (and d!19739 (not res!42032)) b!80733))

(assert (= (and b!80733 res!42030) b!80734))

(assert (= (and b!80733 res!42031) b!80732))

(assert (= (and b!80732 c!12644) b!80730))

(assert (= (and b!80732 (not c!12644)) b!80731))

(assert (= (or b!80730 b!80731) bm!7512))

(declare-fun m!82383 () Bool)

(assert (=> bm!7512 m!82383))

(declare-fun m!82385 () Bool)

(assert (=> bm!7512 m!82385))

(assert (=> b!80732 m!82383))

(assert (=> b!80732 m!82383))

(declare-fun m!82387 () Bool)

(assert (=> b!80732 m!82387))

(assert (=> b!80734 m!82383))

(assert (=> b!80734 m!82383))

(declare-fun m!82389 () Bool)

(assert (=> b!80734 m!82389))

(assert (=> b!80733 m!82383))

(assert (=> b!80733 m!82383))

(assert (=> b!80733 m!82387))

(assert (=> bm!7503 d!19739))

(declare-fun d!19741 () Bool)

(assert (=> d!19741 (= (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (and (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80636 d!19741))

(declare-fun d!19743 () Bool)

(declare-fun e!52730 () Bool)

(assert (=> d!19743 e!52730))

(declare-fun res!42033 () Bool)

(assert (=> d!19743 (=> res!42033 e!52730)))

(declare-fun lt!37623 () Bool)

(assert (=> d!19743 (= res!42033 (not lt!37623))))

(declare-fun lt!37622 () Bool)

(assert (=> d!19743 (= lt!37623 lt!37622)))

(declare-fun lt!37625 () Unit!2341)

(declare-fun e!52731 () Unit!2341)

(assert (=> d!19743 (= lt!37625 e!52731)))

(declare-fun c!12645 () Bool)

(assert (=> d!19743 (= c!12645 lt!37622)))

(assert (=> d!19743 (= lt!37622 (containsKey!142 (toList!741 lt!37512) (_1!1101 lt!37268)))))

(assert (=> d!19743 (= (contains!745 lt!37512 (_1!1101 lt!37268)) lt!37623)))

(declare-fun b!80735 () Bool)

(declare-fun lt!37624 () Unit!2341)

(assert (=> b!80735 (= e!52731 lt!37624)))

(assert (=> b!80735 (= lt!37624 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37512) (_1!1101 lt!37268)))))

(assert (=> b!80735 (isDefined!91 (getValueByKey!138 (toList!741 lt!37512) (_1!1101 lt!37268)))))

(declare-fun b!80736 () Bool)

(declare-fun Unit!2353 () Unit!2341)

(assert (=> b!80736 (= e!52731 Unit!2353)))

(declare-fun b!80737 () Bool)

(assert (=> b!80737 (= e!52730 (isDefined!91 (getValueByKey!138 (toList!741 lt!37512) (_1!1101 lt!37268))))))

(assert (= (and d!19743 c!12645) b!80735))

(assert (= (and d!19743 (not c!12645)) b!80736))

(assert (= (and d!19743 (not res!42033)) b!80737))

(declare-fun m!82391 () Bool)

(assert (=> d!19743 m!82391))

(declare-fun m!82393 () Bool)

(assert (=> b!80735 m!82393))

(assert (=> b!80735 m!82067))

(assert (=> b!80735 m!82067))

(declare-fun m!82395 () Bool)

(assert (=> b!80735 m!82395))

(assert (=> b!80737 m!82067))

(assert (=> b!80737 m!82067))

(assert (=> b!80737 m!82395))

(assert (=> d!19657 d!19743))

(declare-fun d!19745 () Bool)

(declare-fun c!12646 () Bool)

(assert (=> d!19745 (= c!12646 (and ((_ is Cons!1507) lt!37514) (= (_1!1101 (h!2096 lt!37514)) (_1!1101 lt!37268))))))

(declare-fun e!52732 () Option!144)

(assert (=> d!19745 (= (getValueByKey!138 lt!37514 (_1!1101 lt!37268)) e!52732)))

(declare-fun b!80739 () Bool)

(declare-fun e!52733 () Option!144)

(assert (=> b!80739 (= e!52732 e!52733)))

(declare-fun c!12647 () Bool)

(assert (=> b!80739 (= c!12647 (and ((_ is Cons!1507) lt!37514) (not (= (_1!1101 (h!2096 lt!37514)) (_1!1101 lt!37268)))))))

(declare-fun b!80740 () Bool)

(assert (=> b!80740 (= e!52733 (getValueByKey!138 (t!5178 lt!37514) (_1!1101 lt!37268)))))

(declare-fun b!80741 () Bool)

(assert (=> b!80741 (= e!52733 None!142)))

(declare-fun b!80738 () Bool)

(assert (=> b!80738 (= e!52732 (Some!143 (_2!1101 (h!2096 lt!37514))))))

(assert (= (and d!19745 c!12646) b!80738))

(assert (= (and d!19745 (not c!12646)) b!80739))

(assert (= (and b!80739 c!12647) b!80740))

(assert (= (and b!80739 (not c!12647)) b!80741))

(declare-fun m!82397 () Bool)

(assert (=> b!80740 m!82397))

(assert (=> d!19657 d!19745))

(declare-fun d!19747 () Bool)

(assert (=> d!19747 (= (getValueByKey!138 lt!37514 (_1!1101 lt!37268)) (Some!143 (_2!1101 lt!37268)))))

(declare-fun lt!37628 () Unit!2341)

(declare-fun choose!470 (List!1511 (_ BitVec 64) V!3003) Unit!2341)

(assert (=> d!19747 (= lt!37628 (choose!470 lt!37514 (_1!1101 lt!37268) (_2!1101 lt!37268)))))

(declare-fun e!52736 () Bool)

(assert (=> d!19747 e!52736))

(declare-fun res!42038 () Bool)

(assert (=> d!19747 (=> (not res!42038) (not e!52736))))

(declare-fun isStrictlySorted!296 (List!1511) Bool)

(assert (=> d!19747 (= res!42038 (isStrictlySorted!296 lt!37514))))

(assert (=> d!19747 (= (lemmaContainsTupThenGetReturnValue!55 lt!37514 (_1!1101 lt!37268) (_2!1101 lt!37268)) lt!37628)))

(declare-fun b!80746 () Bool)

(declare-fun res!42039 () Bool)

(assert (=> b!80746 (=> (not res!42039) (not e!52736))))

(assert (=> b!80746 (= res!42039 (containsKey!142 lt!37514 (_1!1101 lt!37268)))))

(declare-fun b!80747 () Bool)

(assert (=> b!80747 (= e!52736 (contains!746 lt!37514 (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(assert (= (and d!19747 res!42038) b!80746))

(assert (= (and b!80746 res!42039) b!80747))

(assert (=> d!19747 m!82061))

(declare-fun m!82399 () Bool)

(assert (=> d!19747 m!82399))

(declare-fun m!82401 () Bool)

(assert (=> d!19747 m!82401))

(declare-fun m!82403 () Bool)

(assert (=> b!80746 m!82403))

(declare-fun m!82405 () Bool)

(assert (=> b!80747 m!82405))

(assert (=> d!19657 d!19747))

(declare-fun b!80768 () Bool)

(declare-fun c!12656 () Bool)

(assert (=> b!80768 (= c!12656 (and ((_ is Cons!1507) (toList!741 lt!37277)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 lt!37268))))))

(declare-fun e!52747 () List!1511)

(declare-fun e!52748 () List!1511)

(assert (=> b!80768 (= e!52747 e!52748)))

(declare-fun b!80769 () Bool)

(declare-fun call!7522 () List!1511)

(assert (=> b!80769 (= e!52748 call!7522)))

(declare-fun b!80770 () Bool)

(declare-fun c!12658 () Bool)

(declare-fun e!52749 () List!1511)

(assert (=> b!80770 (= e!52749 (ite c!12658 (t!5178 (toList!741 lt!37277)) (ite c!12656 (Cons!1507 (h!2096 (toList!741 lt!37277)) (t!5178 (toList!741 lt!37277))) Nil!1508)))))

(declare-fun d!19749 () Bool)

(declare-fun e!52751 () Bool)

(assert (=> d!19749 e!52751))

(declare-fun res!42045 () Bool)

(assert (=> d!19749 (=> (not res!42045) (not e!52751))))

(declare-fun lt!37631 () List!1511)

(assert (=> d!19749 (= res!42045 (isStrictlySorted!296 lt!37631))))

(declare-fun e!52750 () List!1511)

(assert (=> d!19749 (= lt!37631 e!52750)))

(declare-fun c!12657 () Bool)

(assert (=> d!19749 (= c!12657 (and ((_ is Cons!1507) (toList!741 lt!37277)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 lt!37268))))))

(assert (=> d!19749 (isStrictlySorted!296 (toList!741 lt!37277))))

(assert (=> d!19749 (= (insertStrictlySorted!58 (toList!741 lt!37277) (_1!1101 lt!37268) (_2!1101 lt!37268)) lt!37631)))

(declare-fun b!80771 () Bool)

(declare-fun call!7524 () List!1511)

(assert (=> b!80771 (= e!52750 call!7524)))

(declare-fun bm!7519 () Bool)

(declare-fun call!7523 () List!1511)

(assert (=> bm!7519 (= call!7523 call!7524)))

(declare-fun bm!7520 () Bool)

(assert (=> bm!7520 (= call!7522 call!7523)))

(declare-fun b!80772 () Bool)

(assert (=> b!80772 (= e!52751 (contains!746 lt!37631 (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(declare-fun b!80773 () Bool)

(assert (=> b!80773 (= e!52750 e!52747)))

(assert (=> b!80773 (= c!12658 (and ((_ is Cons!1507) (toList!741 lt!37277)) (= (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 lt!37268))))))

(declare-fun b!80774 () Bool)

(assert (=> b!80774 (= e!52748 call!7522)))

(declare-fun b!80775 () Bool)

(declare-fun res!42044 () Bool)

(assert (=> b!80775 (=> (not res!42044) (not e!52751))))

(assert (=> b!80775 (= res!42044 (containsKey!142 lt!37631 (_1!1101 lt!37268)))))

(declare-fun bm!7521 () Bool)

(declare-fun $colon$colon!70 (List!1511 tuple2!2180) List!1511)

(assert (=> bm!7521 (= call!7524 ($colon$colon!70 e!52749 (ite c!12657 (h!2096 (toList!741 lt!37277)) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268)))))))

(declare-fun c!12659 () Bool)

(assert (=> bm!7521 (= c!12659 c!12657)))

(declare-fun b!80776 () Bool)

(assert (=> b!80776 (= e!52749 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37277)) (_1!1101 lt!37268) (_2!1101 lt!37268)))))

(declare-fun b!80777 () Bool)

(assert (=> b!80777 (= e!52747 call!7523)))

(assert (= (and d!19749 c!12657) b!80771))

(assert (= (and d!19749 (not c!12657)) b!80773))

(assert (= (and b!80773 c!12658) b!80777))

(assert (= (and b!80773 (not c!12658)) b!80768))

(assert (= (and b!80768 c!12656) b!80774))

(assert (= (and b!80768 (not c!12656)) b!80769))

(assert (= (or b!80774 b!80769) bm!7520))

(assert (= (or b!80777 bm!7520) bm!7519))

(assert (= (or b!80771 bm!7519) bm!7521))

(assert (= (and bm!7521 c!12659) b!80776))

(assert (= (and bm!7521 (not c!12659)) b!80770))

(assert (= (and d!19749 res!42045) b!80775))

(assert (= (and b!80775 res!42044) b!80772))

(declare-fun m!82407 () Bool)

(assert (=> b!80772 m!82407))

(declare-fun m!82409 () Bool)

(assert (=> b!80775 m!82409))

(declare-fun m!82411 () Bool)

(assert (=> d!19749 m!82411))

(declare-fun m!82413 () Bool)

(assert (=> d!19749 m!82413))

(declare-fun m!82415 () Bool)

(assert (=> b!80776 m!82415))

(declare-fun m!82417 () Bool)

(assert (=> bm!7521 m!82417))

(assert (=> d!19657 d!19749))

(declare-fun d!19751 () Bool)

(declare-fun lt!37634 () Bool)

(declare-fun content!86 (List!1512) (InoxSet (_ BitVec 64)))

(assert (=> d!19751 (= lt!37634 (select (content!86 Nil!1509) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun e!52757 () Bool)

(assert (=> d!19751 (= lt!37634 e!52757)))

(declare-fun res!42051 () Bool)

(assert (=> d!19751 (=> (not res!42051) (not e!52757))))

(assert (=> d!19751 (= res!42051 ((_ is Cons!1508) Nil!1509))))

(assert (=> d!19751 (= (contains!747 Nil!1509 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) lt!37634)))

(declare-fun b!80782 () Bool)

(declare-fun e!52756 () Bool)

(assert (=> b!80782 (= e!52757 e!52756)))

(declare-fun res!42050 () Bool)

(assert (=> b!80782 (=> res!42050 e!52756)))

(assert (=> b!80782 (= res!42050 (= (h!2097 Nil!1509) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!80783 () Bool)

(assert (=> b!80783 (= e!52756 (contains!747 (t!5179 Nil!1509) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!19751 res!42051) b!80782))

(assert (= (and b!80782 (not res!42050)) b!80783))

(declare-fun m!82419 () Bool)

(assert (=> d!19751 m!82419))

(assert (=> d!19751 m!81811))

(declare-fun m!82421 () Bool)

(assert (=> d!19751 m!82421))

(assert (=> b!80783 m!81811))

(declare-fun m!82423 () Bool)

(assert (=> b!80783 m!82423))

(assert (=> b!80638 d!19751))

(declare-fun d!19753 () Bool)

(declare-fun e!52758 () Bool)

(assert (=> d!19753 e!52758))

(declare-fun res!42052 () Bool)

(assert (=> d!19753 (=> res!42052 e!52758)))

(declare-fun lt!37636 () Bool)

(assert (=> d!19753 (= res!42052 (not lt!37636))))

(declare-fun lt!37635 () Bool)

(assert (=> d!19753 (= lt!37636 lt!37635)))

(declare-fun lt!37638 () Unit!2341)

(declare-fun e!52759 () Unit!2341)

(assert (=> d!19753 (= lt!37638 e!52759)))

(declare-fun c!12660 () Bool)

(assert (=> d!19753 (= c!12660 lt!37635)))

(assert (=> d!19753 (= lt!37635 (containsKey!142 (toList!741 lt!37516) (_1!1101 lt!37283)))))

(assert (=> d!19753 (= (contains!745 lt!37516 (_1!1101 lt!37283)) lt!37636)))

(declare-fun b!80784 () Bool)

(declare-fun lt!37637 () Unit!2341)

(assert (=> b!80784 (= e!52759 lt!37637)))

(assert (=> b!80784 (= lt!37637 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37516) (_1!1101 lt!37283)))))

(assert (=> b!80784 (isDefined!91 (getValueByKey!138 (toList!741 lt!37516) (_1!1101 lt!37283)))))

(declare-fun b!80785 () Bool)

(declare-fun Unit!2354 () Unit!2341)

(assert (=> b!80785 (= e!52759 Unit!2354)))

(declare-fun b!80786 () Bool)

(assert (=> b!80786 (= e!52758 (isDefined!91 (getValueByKey!138 (toList!741 lt!37516) (_1!1101 lt!37283))))))

(assert (= (and d!19753 c!12660) b!80784))

(assert (= (and d!19753 (not c!12660)) b!80785))

(assert (= (and d!19753 (not res!42052)) b!80786))

(declare-fun m!82425 () Bool)

(assert (=> d!19753 m!82425))

(declare-fun m!82427 () Bool)

(assert (=> b!80784 m!82427))

(assert (=> b!80784 m!82079))

(assert (=> b!80784 m!82079))

(declare-fun m!82429 () Bool)

(assert (=> b!80784 m!82429))

(assert (=> b!80786 m!82079))

(assert (=> b!80786 m!82079))

(assert (=> b!80786 m!82429))

(assert (=> d!19659 d!19753))

(declare-fun d!19755 () Bool)

(declare-fun c!12661 () Bool)

(assert (=> d!19755 (= c!12661 (and ((_ is Cons!1507) lt!37518) (= (_1!1101 (h!2096 lt!37518)) (_1!1101 lt!37283))))))

(declare-fun e!52760 () Option!144)

(assert (=> d!19755 (= (getValueByKey!138 lt!37518 (_1!1101 lt!37283)) e!52760)))

(declare-fun b!80788 () Bool)

(declare-fun e!52761 () Option!144)

(assert (=> b!80788 (= e!52760 e!52761)))

(declare-fun c!12662 () Bool)

(assert (=> b!80788 (= c!12662 (and ((_ is Cons!1507) lt!37518) (not (= (_1!1101 (h!2096 lt!37518)) (_1!1101 lt!37283)))))))

(declare-fun b!80789 () Bool)

(assert (=> b!80789 (= e!52761 (getValueByKey!138 (t!5178 lt!37518) (_1!1101 lt!37283)))))

(declare-fun b!80790 () Bool)

(assert (=> b!80790 (= e!52761 None!142)))

(declare-fun b!80787 () Bool)

(assert (=> b!80787 (= e!52760 (Some!143 (_2!1101 (h!2096 lt!37518))))))

(assert (= (and d!19755 c!12661) b!80787))

(assert (= (and d!19755 (not c!12661)) b!80788))

(assert (= (and b!80788 c!12662) b!80789))

(assert (= (and b!80788 (not c!12662)) b!80790))

(declare-fun m!82431 () Bool)

(assert (=> b!80789 m!82431))

(assert (=> d!19659 d!19755))

(declare-fun d!19757 () Bool)

(assert (=> d!19757 (= (getValueByKey!138 lt!37518 (_1!1101 lt!37283)) (Some!143 (_2!1101 lt!37283)))))

(declare-fun lt!37639 () Unit!2341)

(assert (=> d!19757 (= lt!37639 (choose!470 lt!37518 (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(declare-fun e!52762 () Bool)

(assert (=> d!19757 e!52762))

(declare-fun res!42053 () Bool)

(assert (=> d!19757 (=> (not res!42053) (not e!52762))))

(assert (=> d!19757 (= res!42053 (isStrictlySorted!296 lt!37518))))

(assert (=> d!19757 (= (lemmaContainsTupThenGetReturnValue!55 lt!37518 (_1!1101 lt!37283) (_2!1101 lt!37283)) lt!37639)))

(declare-fun b!80791 () Bool)

(declare-fun res!42054 () Bool)

(assert (=> b!80791 (=> (not res!42054) (not e!52762))))

(assert (=> b!80791 (= res!42054 (containsKey!142 lt!37518 (_1!1101 lt!37283)))))

(declare-fun b!80792 () Bool)

(assert (=> b!80792 (= e!52762 (contains!746 lt!37518 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(assert (= (and d!19757 res!42053) b!80791))

(assert (= (and b!80791 res!42054) b!80792))

(assert (=> d!19757 m!82073))

(declare-fun m!82433 () Bool)

(assert (=> d!19757 m!82433))

(declare-fun m!82435 () Bool)

(assert (=> d!19757 m!82435))

(declare-fun m!82437 () Bool)

(assert (=> b!80791 m!82437))

(declare-fun m!82439 () Bool)

(assert (=> b!80792 m!82439))

(assert (=> d!19659 d!19757))

(declare-fun b!80793 () Bool)

(declare-fun c!12663 () Bool)

(assert (=> b!80793 (= c!12663 (and ((_ is Cons!1507) (toList!741 lt!37277)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 lt!37283))))))

(declare-fun e!52763 () List!1511)

(declare-fun e!52764 () List!1511)

(assert (=> b!80793 (= e!52763 e!52764)))

(declare-fun b!80794 () Bool)

(declare-fun call!7525 () List!1511)

(assert (=> b!80794 (= e!52764 call!7525)))

(declare-fun e!52765 () List!1511)

(declare-fun b!80795 () Bool)

(declare-fun c!12665 () Bool)

(assert (=> b!80795 (= e!52765 (ite c!12665 (t!5178 (toList!741 lt!37277)) (ite c!12663 (Cons!1507 (h!2096 (toList!741 lt!37277)) (t!5178 (toList!741 lt!37277))) Nil!1508)))))

(declare-fun d!19759 () Bool)

(declare-fun e!52767 () Bool)

(assert (=> d!19759 e!52767))

(declare-fun res!42056 () Bool)

(assert (=> d!19759 (=> (not res!42056) (not e!52767))))

(declare-fun lt!37640 () List!1511)

(assert (=> d!19759 (= res!42056 (isStrictlySorted!296 lt!37640))))

(declare-fun e!52766 () List!1511)

(assert (=> d!19759 (= lt!37640 e!52766)))

(declare-fun c!12664 () Bool)

(assert (=> d!19759 (= c!12664 (and ((_ is Cons!1507) (toList!741 lt!37277)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 lt!37283))))))

(assert (=> d!19759 (isStrictlySorted!296 (toList!741 lt!37277))))

(assert (=> d!19759 (= (insertStrictlySorted!58 (toList!741 lt!37277) (_1!1101 lt!37283) (_2!1101 lt!37283)) lt!37640)))

(declare-fun b!80796 () Bool)

(declare-fun call!7527 () List!1511)

(assert (=> b!80796 (= e!52766 call!7527)))

(declare-fun bm!7522 () Bool)

(declare-fun call!7526 () List!1511)

(assert (=> bm!7522 (= call!7526 call!7527)))

(declare-fun bm!7523 () Bool)

(assert (=> bm!7523 (= call!7525 call!7526)))

(declare-fun b!80797 () Bool)

(assert (=> b!80797 (= e!52767 (contains!746 lt!37640 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun b!80798 () Bool)

(assert (=> b!80798 (= e!52766 e!52763)))

(assert (=> b!80798 (= c!12665 (and ((_ is Cons!1507) (toList!741 lt!37277)) (= (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 lt!37283))))))

(declare-fun b!80799 () Bool)

(assert (=> b!80799 (= e!52764 call!7525)))

(declare-fun b!80800 () Bool)

(declare-fun res!42055 () Bool)

(assert (=> b!80800 (=> (not res!42055) (not e!52767))))

(assert (=> b!80800 (= res!42055 (containsKey!142 lt!37640 (_1!1101 lt!37283)))))

(declare-fun bm!7524 () Bool)

(assert (=> bm!7524 (= call!7527 ($colon$colon!70 e!52765 (ite c!12664 (h!2096 (toList!741 lt!37277)) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283)))))))

(declare-fun c!12666 () Bool)

(assert (=> bm!7524 (= c!12666 c!12664)))

(declare-fun b!80801 () Bool)

(assert (=> b!80801 (= e!52765 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37277)) (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(declare-fun b!80802 () Bool)

(assert (=> b!80802 (= e!52763 call!7526)))

(assert (= (and d!19759 c!12664) b!80796))

(assert (= (and d!19759 (not c!12664)) b!80798))

(assert (= (and b!80798 c!12665) b!80802))

(assert (= (and b!80798 (not c!12665)) b!80793))

(assert (= (and b!80793 c!12663) b!80799))

(assert (= (and b!80793 (not c!12663)) b!80794))

(assert (= (or b!80799 b!80794) bm!7523))

(assert (= (or b!80802 bm!7523) bm!7522))

(assert (= (or b!80796 bm!7522) bm!7524))

(assert (= (and bm!7524 c!12666) b!80801))

(assert (= (and bm!7524 (not c!12666)) b!80795))

(assert (= (and d!19759 res!42056) b!80800))

(assert (= (and b!80800 res!42055) b!80797))

(declare-fun m!82441 () Bool)

(assert (=> b!80797 m!82441))

(declare-fun m!82443 () Bool)

(assert (=> b!80800 m!82443))

(declare-fun m!82445 () Bool)

(assert (=> d!19759 m!82445))

(assert (=> d!19759 m!82413))

(declare-fun m!82447 () Bool)

(assert (=> b!80801 m!82447))

(declare-fun m!82449 () Bool)

(assert (=> bm!7524 m!82449))

(assert (=> d!19659 d!19759))

(declare-fun d!19761 () Bool)

(declare-fun res!42061 () Bool)

(declare-fun e!52772 () Bool)

(assert (=> d!19761 (=> res!42061 e!52772)))

(assert (=> d!19761 (= res!42061 (and ((_ is Cons!1507) (toList!741 lt!37271)) (= (_1!1101 (h!2096 (toList!741 lt!37271))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!19761 (= (containsKey!142 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) e!52772)))

(declare-fun b!80807 () Bool)

(declare-fun e!52773 () Bool)

(assert (=> b!80807 (= e!52772 e!52773)))

(declare-fun res!42062 () Bool)

(assert (=> b!80807 (=> (not res!42062) (not e!52773))))

(assert (=> b!80807 (= res!42062 (and (or (not ((_ is Cons!1507) (toList!741 lt!37271))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37271))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))) ((_ is Cons!1507) (toList!741 lt!37271)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37271))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(declare-fun b!80808 () Bool)

(assert (=> b!80808 (= e!52773 (containsKey!142 (t!5178 (toList!741 lt!37271)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!19761 (not res!42061)) b!80807))

(assert (= (and b!80807 res!42062) b!80808))

(assert (=> b!80808 m!81811))

(declare-fun m!82451 () Bool)

(assert (=> b!80808 m!82451))

(assert (=> d!19643 d!19761))

(declare-fun d!19763 () Bool)

(declare-fun e!52774 () Bool)

(assert (=> d!19763 e!52774))

(declare-fun res!42063 () Bool)

(assert (=> d!19763 (=> res!42063 e!52774)))

(declare-fun lt!37642 () Bool)

(assert (=> d!19763 (= res!42063 (not lt!37642))))

(declare-fun lt!37641 () Bool)

(assert (=> d!19763 (= lt!37642 lt!37641)))

(declare-fun lt!37644 () Unit!2341)

(declare-fun e!52775 () Unit!2341)

(assert (=> d!19763 (= lt!37644 e!52775)))

(declare-fun c!12667 () Bool)

(assert (=> d!19763 (= c!12667 lt!37641)))

(assert (=> d!19763 (= lt!37641 (containsKey!142 (toList!741 lt!37534) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19763 (= (contains!745 lt!37534 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37642)))

(declare-fun b!80809 () Bool)

(declare-fun lt!37643 () Unit!2341)

(assert (=> b!80809 (= e!52775 lt!37643)))

(assert (=> b!80809 (= lt!37643 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37534) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80809 (isDefined!91 (getValueByKey!138 (toList!741 lt!37534) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80810 () Bool)

(declare-fun Unit!2355 () Unit!2341)

(assert (=> b!80810 (= e!52775 Unit!2355)))

(declare-fun b!80811 () Bool)

(assert (=> b!80811 (= e!52774 (isDefined!91 (getValueByKey!138 (toList!741 lt!37534) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19763 c!12667) b!80809))

(assert (= (and d!19763 (not c!12667)) b!80810))

(assert (= (and d!19763 (not res!42063)) b!80811))

(declare-fun m!82453 () Bool)

(assert (=> d!19763 m!82453))

(declare-fun m!82455 () Bool)

(assert (=> b!80809 m!82455))

(declare-fun m!82457 () Bool)

(assert (=> b!80809 m!82457))

(assert (=> b!80809 m!82457))

(declare-fun m!82459 () Bool)

(assert (=> b!80809 m!82459))

(assert (=> b!80811 m!82457))

(assert (=> b!80811 m!82457))

(assert (=> b!80811 m!82459))

(assert (=> d!19661 d!19763))

(assert (=> d!19661 d!19675))

(declare-fun d!19765 () Bool)

(declare-fun res!42064 () Bool)

(declare-fun e!52776 () Bool)

(assert (=> d!19765 (=> res!42064 e!52776)))

(assert (=> d!19765 (= res!42064 (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!19765 (= (arrayContainsKey!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!52776)))

(declare-fun b!80812 () Bool)

(declare-fun e!52777 () Bool)

(assert (=> b!80812 (= e!52776 e!52777)))

(declare-fun res!42065 () Bool)

(assert (=> b!80812 (=> (not res!42065) (not e!52777))))

(assert (=> b!80812 (= res!42065 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!80813 () Bool)

(assert (=> b!80813 (= e!52777 (arrayContainsKey!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!19765 (not res!42064)) b!80812))

(assert (= (and b!80812 res!42065) b!80813))

(assert (=> d!19765 m!82217))

(assert (=> b!80813 m!81811))

(declare-fun m!82461 () Bool)

(assert (=> b!80813 m!82461))

(assert (=> b!80617 d!19765))

(declare-fun b!80826 () Bool)

(declare-fun c!12676 () Bool)

(declare-fun lt!37651 () (_ BitVec 64))

(assert (=> b!80826 (= c!12676 (= lt!37651 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52785 () SeekEntryResult!241)

(declare-fun e!52786 () SeekEntryResult!241)

(assert (=> b!80826 (= e!52785 e!52786)))

(declare-fun b!80827 () Bool)

(declare-fun lt!37652 () SeekEntryResult!241)

(assert (=> b!80827 (= e!52785 (Found!241 (index!3101 lt!37652)))))

(declare-fun b!80828 () Bool)

(declare-fun e!52784 () SeekEntryResult!241)

(assert (=> b!80828 (= e!52784 e!52785)))

(assert (=> b!80828 (= lt!37651 (select (arr!1901 (_keys!3957 newMap!16)) (index!3101 lt!37652)))))

(declare-fun c!12675 () Bool)

(assert (=> b!80828 (= c!12675 (= lt!37651 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!80829 () Bool)

(assert (=> b!80829 (= e!52786 (MissingZero!241 (index!3101 lt!37652)))))

(declare-fun d!19767 () Bool)

(declare-fun lt!37653 () SeekEntryResult!241)

(assert (=> d!19767 (and (or ((_ is Undefined!241) lt!37653) (not ((_ is Found!241) lt!37653)) (and (bvsge (index!3100 lt!37653) #b00000000000000000000000000000000) (bvslt (index!3100 lt!37653) (size!2143 (_keys!3957 newMap!16))))) (or ((_ is Undefined!241) lt!37653) ((_ is Found!241) lt!37653) (not ((_ is MissingZero!241) lt!37653)) (and (bvsge (index!3099 lt!37653) #b00000000000000000000000000000000) (bvslt (index!3099 lt!37653) (size!2143 (_keys!3957 newMap!16))))) (or ((_ is Undefined!241) lt!37653) ((_ is Found!241) lt!37653) ((_ is MissingZero!241) lt!37653) (not ((_ is MissingVacant!241) lt!37653)) (and (bvsge (index!3102 lt!37653) #b00000000000000000000000000000000) (bvslt (index!3102 lt!37653) (size!2143 (_keys!3957 newMap!16))))) (or ((_ is Undefined!241) lt!37653) (ite ((_ is Found!241) lt!37653) (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37653)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (ite ((_ is MissingZero!241) lt!37653) (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3099 lt!37653)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!241) lt!37653) (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3102 lt!37653)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19767 (= lt!37653 e!52784)))

(declare-fun c!12674 () Bool)

(assert (=> d!19767 (= c!12674 (and ((_ is Intermediate!241) lt!37652) (undefined!1053 lt!37652)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3989 (_ BitVec 32)) SeekEntryResult!241)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!19767 (= lt!37652 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (mask!6299 newMap!16)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (=> d!19767 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19767 (= (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)) lt!37653)))

(declare-fun b!80830 () Bool)

(assert (=> b!80830 (= e!52784 Undefined!241)))

(declare-fun b!80831 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3989 (_ BitVec 32)) SeekEntryResult!241)

(assert (=> b!80831 (= e!52786 (seekKeyOrZeroReturnVacant!0 (x!11692 lt!37652) (index!3101 lt!37652) (index!3101 lt!37652) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (= (and d!19767 c!12674) b!80830))

(assert (= (and d!19767 (not c!12674)) b!80828))

(assert (= (and b!80828 c!12675) b!80827))

(assert (= (and b!80828 (not c!12675)) b!80826))

(assert (= (and b!80826 c!12676) b!80829))

(assert (= (and b!80826 (not c!12676)) b!80831))

(declare-fun m!82463 () Bool)

(assert (=> b!80828 m!82463))

(assert (=> d!19767 m!81811))

(declare-fun m!82465 () Bool)

(assert (=> d!19767 m!82465))

(declare-fun m!82467 () Bool)

(assert (=> d!19767 m!82467))

(declare-fun m!82469 () Bool)

(assert (=> d!19767 m!82469))

(assert (=> d!19767 m!82321))

(assert (=> d!19767 m!82465))

(assert (=> d!19767 m!81811))

(declare-fun m!82471 () Bool)

(assert (=> d!19767 m!82471))

(declare-fun m!82473 () Bool)

(assert (=> d!19767 m!82473))

(assert (=> b!80831 m!81811))

(declare-fun m!82475 () Bool)

(assert (=> b!80831 m!82475))

(assert (=> bm!7453 d!19767))

(declare-fun b!80840 () Bool)

(declare-fun res!42077 () Bool)

(declare-fun e!52789 () Bool)

(assert (=> b!80840 (=> (not res!42077) (not e!52789))))

(assert (=> b!80840 (= res!42077 (and (= (size!2144 (_values!2276 newMap!16)) (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001)) (= (size!2143 (_keys!3957 newMap!16)) (size!2144 (_values!2276 newMap!16))) (bvsge (_size!418 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!418 newMap!16) (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun d!19769 () Bool)

(declare-fun res!42074 () Bool)

(assert (=> d!19769 (=> (not res!42074) (not e!52789))))

(assert (=> d!19769 (= res!42074 (validMask!0 (mask!6299 newMap!16)))))

(assert (=> d!19769 (= (simpleValid!56 newMap!16) e!52789)))

(declare-fun b!80843 () Bool)

(assert (=> b!80843 (= e!52789 (and (bvsge (extraKeys!2140 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2140 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!418 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!80841 () Bool)

(declare-fun res!42076 () Bool)

(assert (=> b!80841 (=> (not res!42076) (not e!52789))))

(declare-fun size!2147 (LongMapFixedSize!738) (_ BitVec 32))

(assert (=> b!80841 (= res!42076 (bvsge (size!2147 newMap!16) (_size!418 newMap!16)))))

(declare-fun b!80842 () Bool)

(declare-fun res!42075 () Bool)

(assert (=> b!80842 (=> (not res!42075) (not e!52789))))

(assert (=> b!80842 (= res!42075 (= (size!2147 newMap!16) (bvadd (_size!418 newMap!16) (bvsdiv (bvadd (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!19769 res!42074) b!80840))

(assert (= (and b!80840 res!42077) b!80841))

(assert (= (and b!80841 res!42076) b!80842))

(assert (= (and b!80842 res!42075) b!80843))

(assert (=> d!19769 m!82321))

(declare-fun m!82477 () Bool)

(assert (=> b!80841 m!82477))

(assert (=> b!80842 m!82477))

(assert (=> d!19685 d!19769))

(declare-fun b!80852 () Bool)

(declare-fun e!52797 () Bool)

(declare-fun call!7530 () Bool)

(assert (=> b!80852 (= e!52797 call!7530)))

(declare-fun b!80853 () Bool)

(declare-fun e!52796 () Bool)

(assert (=> b!80853 (= e!52796 call!7530)))

(declare-fun bm!7527 () Bool)

(assert (=> bm!7527 (= call!7530 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun b!80854 () Bool)

(assert (=> b!80854 (= e!52797 e!52796)))

(declare-fun lt!37662 () (_ BitVec 64))

(assert (=> b!80854 (= lt!37662 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37661 () Unit!2341)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3989 (_ BitVec 64) (_ BitVec 32)) Unit!2341)

(assert (=> b!80854 (= lt!37661 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3957 newMap!16) lt!37662 #b00000000000000000000000000000000))))

(assert (=> b!80854 (arrayContainsKey!0 (_keys!3957 newMap!16) lt!37662 #b00000000000000000000000000000000)))

(declare-fun lt!37660 () Unit!2341)

(assert (=> b!80854 (= lt!37660 lt!37661)))

(declare-fun res!42083 () Bool)

(assert (=> b!80854 (= res!42083 (= (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (_keys!3957 newMap!16) (mask!6299 newMap!16)) (Found!241 #b00000000000000000000000000000000)))))

(assert (=> b!80854 (=> (not res!42083) (not e!52796))))

(declare-fun d!19771 () Bool)

(declare-fun res!42082 () Bool)

(declare-fun e!52798 () Bool)

(assert (=> d!19771 (=> res!42082 e!52798)))

(assert (=> d!19771 (= res!42082 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(assert (=> d!19771 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 newMap!16) (mask!6299 newMap!16)) e!52798)))

(declare-fun b!80855 () Bool)

(assert (=> b!80855 (= e!52798 e!52797)))

(declare-fun c!12679 () Bool)

(assert (=> b!80855 (= c!12679 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!19771 (not res!42082)) b!80855))

(assert (= (and b!80855 c!12679) b!80854))

(assert (= (and b!80855 (not c!12679)) b!80852))

(assert (= (and b!80854 res!42083) b!80853))

(assert (= (or b!80853 b!80852) bm!7527))

(declare-fun m!82479 () Bool)

(assert (=> bm!7527 m!82479))

(assert (=> b!80854 m!82265))

(declare-fun m!82481 () Bool)

(assert (=> b!80854 m!82481))

(declare-fun m!82483 () Bool)

(assert (=> b!80854 m!82483))

(assert (=> b!80854 m!82265))

(declare-fun m!82485 () Bool)

(assert (=> b!80854 m!82485))

(assert (=> b!80855 m!82265))

(assert (=> b!80855 m!82265))

(assert (=> b!80855 m!82313))

(assert (=> b!80610 d!19771))

(declare-fun d!19773 () Bool)

(declare-fun e!52799 () Bool)

(assert (=> d!19773 e!52799))

(declare-fun res!42091 () Bool)

(assert (=> d!19773 (=> (not res!42091) (not e!52799))))

(assert (=> d!19773 (= res!42091 (or (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))))

(declare-fun lt!37673 () ListLongMap!1451)

(declare-fun lt!37664 () ListLongMap!1451)

(assert (=> d!19773 (= lt!37673 lt!37664)))

(declare-fun lt!37676 () Unit!2341)

(declare-fun e!52806 () Unit!2341)

(assert (=> d!19773 (= lt!37676 e!52806)))

(declare-fun c!12684 () Bool)

(declare-fun e!52805 () Bool)

(assert (=> d!19773 (= c!12684 e!52805)))

(declare-fun res!42084 () Bool)

(assert (=> d!19773 (=> (not res!42084) (not e!52805))))

(assert (=> d!19773 (= res!42084 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun e!52810 () ListLongMap!1451)

(assert (=> d!19773 (= lt!37664 e!52810)))

(declare-fun c!12681 () Bool)

(assert (=> d!19773 (= c!12681 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19773 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19773 (= (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!37673)))

(declare-fun b!80856 () Bool)

(declare-fun Unit!2356 () Unit!2341)

(assert (=> b!80856 (= e!52806 Unit!2356)))

(declare-fun b!80857 () Bool)

(declare-fun lt!37663 () Unit!2341)

(assert (=> b!80857 (= e!52806 lt!37663)))

(declare-fun lt!37672 () ListLongMap!1451)

(assert (=> b!80857 (= lt!37672 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37678 () (_ BitVec 64))

(assert (=> b!80857 (= lt!37678 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37665 () (_ BitVec 64))

(assert (=> b!80857 (= lt!37665 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37667 () Unit!2341)

(assert (=> b!80857 (= lt!37667 (addStillContains!56 lt!37672 lt!37678 (zeroValue!2189 newMap!16) lt!37665))))

(assert (=> b!80857 (contains!745 (+!106 lt!37672 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16))) lt!37665)))

(declare-fun lt!37683 () Unit!2341)

(assert (=> b!80857 (= lt!37683 lt!37667)))

(declare-fun lt!37684 () ListLongMap!1451)

(assert (=> b!80857 (= lt!37684 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37680 () (_ BitVec 64))

(assert (=> b!80857 (= lt!37680 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37666 () (_ BitVec 64))

(assert (=> b!80857 (= lt!37666 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37674 () Unit!2341)

(assert (=> b!80857 (= lt!37674 (addApplyDifferent!56 lt!37684 lt!37680 (minValue!2189 newMap!16) lt!37666))))

(assert (=> b!80857 (= (apply!80 (+!106 lt!37684 (tuple2!2181 lt!37680 (minValue!2189 newMap!16))) lt!37666) (apply!80 lt!37684 lt!37666))))

(declare-fun lt!37670 () Unit!2341)

(assert (=> b!80857 (= lt!37670 lt!37674)))

(declare-fun lt!37681 () ListLongMap!1451)

(assert (=> b!80857 (= lt!37681 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37668 () (_ BitVec 64))

(assert (=> b!80857 (= lt!37668 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37671 () (_ BitVec 64))

(assert (=> b!80857 (= lt!37671 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37669 () Unit!2341)

(assert (=> b!80857 (= lt!37669 (addApplyDifferent!56 lt!37681 lt!37668 (zeroValue!2189 newMap!16) lt!37671))))

(assert (=> b!80857 (= (apply!80 (+!106 lt!37681 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16))) lt!37671) (apply!80 lt!37681 lt!37671))))

(declare-fun lt!37682 () Unit!2341)

(assert (=> b!80857 (= lt!37682 lt!37669)))

(declare-fun lt!37679 () ListLongMap!1451)

(assert (=> b!80857 (= lt!37679 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37677 () (_ BitVec 64))

(assert (=> b!80857 (= lt!37677 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37675 () (_ BitVec 64))

(assert (=> b!80857 (= lt!37675 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80857 (= lt!37663 (addApplyDifferent!56 lt!37679 lt!37677 (minValue!2189 newMap!16) lt!37675))))

(assert (=> b!80857 (= (apply!80 (+!106 lt!37679 (tuple2!2181 lt!37677 (minValue!2189 newMap!16))) lt!37675) (apply!80 lt!37679 lt!37675))))

(declare-fun b!80858 () Bool)

(declare-fun res!42087 () Bool)

(assert (=> b!80858 (=> (not res!42087) (not e!52799))))

(declare-fun e!52800 () Bool)

(assert (=> b!80858 (= res!42087 e!52800)))

(declare-fun res!42092 () Bool)

(assert (=> b!80858 (=> res!42092 e!52800)))

(declare-fun e!52807 () Bool)

(assert (=> b!80858 (= res!42092 (not e!52807))))

(declare-fun res!42090 () Bool)

(assert (=> b!80858 (=> (not res!42090) (not e!52807))))

(assert (=> b!80858 (= res!42090 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!80859 () Bool)

(declare-fun e!52809 () Bool)

(assert (=> b!80859 (= e!52809 (= (apply!80 lt!37673 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!80860 () Bool)

(declare-fun e!52811 () Bool)

(assert (=> b!80860 (= e!52800 e!52811)))

(declare-fun res!42086 () Bool)

(assert (=> b!80860 (=> (not res!42086) (not e!52811))))

(assert (=> b!80860 (= res!42086 (contains!745 lt!37673 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80860 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun bm!7528 () Bool)

(declare-fun call!7536 () ListLongMap!1451)

(declare-fun call!7537 () ListLongMap!1451)

(assert (=> bm!7528 (= call!7536 call!7537)))

(declare-fun b!80861 () Bool)

(declare-fun e!52804 () Bool)

(assert (=> b!80861 (= e!52804 e!52809)))

(declare-fun res!42088 () Bool)

(declare-fun call!7533 () Bool)

(assert (=> b!80861 (= res!42088 call!7533)))

(assert (=> b!80861 (=> (not res!42088) (not e!52809))))

(declare-fun b!80862 () Bool)

(assert (=> b!80862 (= e!52807 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80863 () Bool)

(assert (=> b!80863 (= e!52804 (not call!7533))))

(declare-fun b!80864 () Bool)

(assert (=> b!80864 (= e!52805 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80865 () Bool)

(declare-fun e!52808 () Bool)

(declare-fun call!7535 () Bool)

(assert (=> b!80865 (= e!52808 (not call!7535))))

(declare-fun bm!7529 () Bool)

(declare-fun call!7534 () ListLongMap!1451)

(assert (=> bm!7529 (= call!7534 call!7536)))

(declare-fun b!80866 () Bool)

(declare-fun e!52802 () ListLongMap!1451)

(declare-fun call!7532 () ListLongMap!1451)

(assert (=> b!80866 (= e!52802 call!7532)))

(declare-fun bm!7530 () Bool)

(assert (=> bm!7530 (= call!7535 (contains!745 lt!37673 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80867 () Bool)

(assert (=> b!80867 (= e!52799 e!52804)))

(declare-fun c!12680 () Bool)

(assert (=> b!80867 (= c!12680 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7531 () Bool)

(assert (=> bm!7531 (= call!7537 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bm!7532 () Bool)

(declare-fun call!7531 () ListLongMap!1451)

(assert (=> bm!7532 (= call!7532 call!7531)))

(declare-fun b!80868 () Bool)

(declare-fun res!42085 () Bool)

(assert (=> b!80868 (=> (not res!42085) (not e!52799))))

(assert (=> b!80868 (= res!42085 e!52808)))

(declare-fun c!12683 () Bool)

(assert (=> b!80868 (= c!12683 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80869 () Bool)

(assert (=> b!80869 (= e!52810 (+!106 call!7531 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!80870 () Bool)

(assert (=> b!80870 (= e!52802 call!7534)))

(declare-fun c!12682 () Bool)

(declare-fun bm!7533 () Bool)

(assert (=> bm!7533 (= call!7531 (+!106 (ite c!12681 call!7537 (ite c!12682 call!7536 call!7534)) (ite (or c!12681 c!12682) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!80871 () Bool)

(assert (=> b!80871 (= e!52811 (= (apply!80 lt!37673 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80871 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_values!2276 newMap!16))))))

(assert (=> b!80871 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!80872 () Bool)

(declare-fun c!12685 () Bool)

(assert (=> b!80872 (= c!12685 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52801 () ListLongMap!1451)

(assert (=> b!80872 (= e!52801 e!52802)))

(declare-fun b!80873 () Bool)

(declare-fun e!52803 () Bool)

(assert (=> b!80873 (= e!52803 (= (apply!80 lt!37673 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun b!80874 () Bool)

(assert (=> b!80874 (= e!52808 e!52803)))

(declare-fun res!42089 () Bool)

(assert (=> b!80874 (= res!42089 call!7535)))

(assert (=> b!80874 (=> (not res!42089) (not e!52803))))

(declare-fun b!80875 () Bool)

(assert (=> b!80875 (= e!52810 e!52801)))

(assert (=> b!80875 (= c!12682 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7534 () Bool)

(assert (=> bm!7534 (= call!7533 (contains!745 lt!37673 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80876 () Bool)

(assert (=> b!80876 (= e!52801 call!7532)))

(assert (= (and d!19773 c!12681) b!80869))

(assert (= (and d!19773 (not c!12681)) b!80875))

(assert (= (and b!80875 c!12682) b!80876))

(assert (= (and b!80875 (not c!12682)) b!80872))

(assert (= (and b!80872 c!12685) b!80866))

(assert (= (and b!80872 (not c!12685)) b!80870))

(assert (= (or b!80866 b!80870) bm!7529))

(assert (= (or b!80876 bm!7529) bm!7528))

(assert (= (or b!80876 b!80866) bm!7532))

(assert (= (or b!80869 bm!7528) bm!7531))

(assert (= (or b!80869 bm!7532) bm!7533))

(assert (= (and d!19773 res!42084) b!80864))

(assert (= (and d!19773 c!12684) b!80857))

(assert (= (and d!19773 (not c!12684)) b!80856))

(assert (= (and d!19773 res!42091) b!80858))

(assert (= (and b!80858 res!42090) b!80862))

(assert (= (and b!80858 (not res!42092)) b!80860))

(assert (= (and b!80860 res!42086) b!80871))

(assert (= (and b!80858 res!42087) b!80868))

(assert (= (and b!80868 c!12683) b!80874))

(assert (= (and b!80868 (not c!12683)) b!80865))

(assert (= (and b!80874 res!42089) b!80873))

(assert (= (or b!80874 b!80865) bm!7530))

(assert (= (and b!80868 res!42085) b!80867))

(assert (= (and b!80867 c!12680) b!80861))

(assert (= (and b!80867 (not c!12680)) b!80863))

(assert (= (and b!80861 res!42088) b!80859))

(assert (= (or b!80861 b!80863) bm!7534))

(declare-fun b_lambda!3611 () Bool)

(assert (=> (not b_lambda!3611) (not b!80871)))

(assert (=> b!80871 t!5185))

(declare-fun b_and!4947 () Bool)

(assert (= b_and!4943 (and (=> t!5185 result!2853) b_and!4947)))

(assert (=> b!80871 t!5187))

(declare-fun b_and!4949 () Bool)

(assert (= b_and!4945 (and (=> t!5187 result!2855) b_and!4949)))

(assert (=> b!80871 m!82265))

(declare-fun m!82487 () Bool)

(assert (=> b!80871 m!82487))

(assert (=> b!80871 m!82265))

(declare-fun m!82489 () Bool)

(assert (=> b!80871 m!82489))

(assert (=> b!80871 m!82271))

(assert (=> b!80871 m!82487))

(assert (=> b!80871 m!82271))

(declare-fun m!82491 () Bool)

(assert (=> b!80871 m!82491))

(declare-fun m!82493 () Bool)

(assert (=> bm!7530 m!82493))

(declare-fun m!82495 () Bool)

(assert (=> bm!7533 m!82495))

(assert (=> b!80857 m!82265))

(declare-fun m!82497 () Bool)

(assert (=> b!80857 m!82497))

(declare-fun m!82499 () Bool)

(assert (=> b!80857 m!82499))

(declare-fun m!82501 () Bool)

(assert (=> b!80857 m!82501))

(declare-fun m!82503 () Bool)

(assert (=> b!80857 m!82503))

(declare-fun m!82505 () Bool)

(assert (=> b!80857 m!82505))

(declare-fun m!82507 () Bool)

(assert (=> b!80857 m!82507))

(declare-fun m!82509 () Bool)

(assert (=> b!80857 m!82509))

(declare-fun m!82511 () Bool)

(assert (=> b!80857 m!82511))

(declare-fun m!82513 () Bool)

(assert (=> b!80857 m!82513))

(assert (=> b!80857 m!82499))

(assert (=> b!80857 m!82503))

(declare-fun m!82515 () Bool)

(assert (=> b!80857 m!82515))

(declare-fun m!82517 () Bool)

(assert (=> b!80857 m!82517))

(declare-fun m!82519 () Bool)

(assert (=> b!80857 m!82519))

(declare-fun m!82521 () Bool)

(assert (=> b!80857 m!82521))

(assert (=> b!80857 m!82521))

(declare-fun m!82523 () Bool)

(assert (=> b!80857 m!82523))

(assert (=> b!80857 m!82511))

(declare-fun m!82525 () Bool)

(assert (=> b!80857 m!82525))

(declare-fun m!82527 () Bool)

(assert (=> b!80857 m!82527))

(declare-fun m!82529 () Bool)

(assert (=> b!80859 m!82529))

(assert (=> b!80864 m!82265))

(assert (=> b!80864 m!82265))

(assert (=> b!80864 m!82313))

(declare-fun m!82531 () Bool)

(assert (=> bm!7534 m!82531))

(assert (=> bm!7531 m!82527))

(declare-fun m!82533 () Bool)

(assert (=> b!80869 m!82533))

(assert (=> b!80862 m!82265))

(assert (=> b!80862 m!82265))

(assert (=> b!80862 m!82313))

(assert (=> b!80860 m!82265))

(assert (=> b!80860 m!82265))

(declare-fun m!82535 () Bool)

(assert (=> b!80860 m!82535))

(assert (=> d!19773 m!82321))

(declare-fun m!82537 () Bool)

(assert (=> b!80873 m!82537))

(assert (=> d!19651 d!19773))

(declare-fun d!19775 () Bool)

(declare-fun c!12686 () Bool)

(assert (=> d!19775 (= c!12686 (and ((_ is Cons!1507) (toList!741 lt!37508)) (= (_1!1101 (h!2096 (toList!741 lt!37508))) (_1!1101 lt!37278))))))

(declare-fun e!52812 () Option!144)

(assert (=> d!19775 (= (getValueByKey!138 (toList!741 lt!37508) (_1!1101 lt!37278)) e!52812)))

(declare-fun b!80878 () Bool)

(declare-fun e!52813 () Option!144)

(assert (=> b!80878 (= e!52812 e!52813)))

(declare-fun c!12687 () Bool)

(assert (=> b!80878 (= c!12687 (and ((_ is Cons!1507) (toList!741 lt!37508)) (not (= (_1!1101 (h!2096 (toList!741 lt!37508))) (_1!1101 lt!37278)))))))

(declare-fun b!80879 () Bool)

(assert (=> b!80879 (= e!52813 (getValueByKey!138 (t!5178 (toList!741 lt!37508)) (_1!1101 lt!37278)))))

(declare-fun b!80880 () Bool)

(assert (=> b!80880 (= e!52813 None!142)))

(declare-fun b!80877 () Bool)

(assert (=> b!80877 (= e!52812 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37508)))))))

(assert (= (and d!19775 c!12686) b!80877))

(assert (= (and d!19775 (not c!12686)) b!80878))

(assert (= (and b!80878 c!12687) b!80879))

(assert (= (and b!80878 (not c!12687)) b!80880))

(declare-fun m!82539 () Bool)

(assert (=> b!80879 m!82539))

(assert (=> b!80547 d!19775))

(declare-fun e!52836 () Bool)

(declare-fun lt!37773 () SeekEntryResult!241)

(declare-fun b!80915 () Bool)

(assert (=> b!80915 (= e!52836 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37773)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!80916 () Bool)

(declare-fun e!52837 () Bool)

(declare-fun call!7548 () Bool)

(assert (=> b!80916 (= e!52837 (not call!7548))))

(declare-fun b!80917 () Bool)

(declare-fun e!52830 () Unit!2341)

(declare-fun Unit!2357 () Unit!2341)

(assert (=> b!80917 (= e!52830 Unit!2357)))

(declare-fun lt!37771 () Unit!2341)

(declare-fun lemmaArrayContainsKeyThenInListMap!17 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) (_ BitVec 32) Int) Unit!2341)

(assert (=> b!80917 (= lt!37771 (lemmaArrayContainsKeyThenInListMap!17 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(assert (=> b!80917 (contains!745 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))

(declare-fun lt!37759 () Unit!2341)

(assert (=> b!80917 (= lt!37759 lt!37771)))

(assert (=> b!80917 false))

(declare-fun b!80919 () Bool)

(declare-fun res!42115 () Bool)

(assert (=> b!80919 (=> (not res!42115) (not e!52837))))

(declare-fun call!7547 () Bool)

(assert (=> b!80919 (= res!42115 call!7547)))

(declare-fun e!52831 () Bool)

(assert (=> b!80919 (= e!52831 e!52837)))

(declare-fun b!80920 () Bool)

(declare-fun e!52835 () Unit!2341)

(declare-fun Unit!2358 () Unit!2341)

(assert (=> b!80920 (= e!52835 Unit!2358)))

(declare-fun lt!37763 () Unit!2341)

(assert (=> b!80920 (= lt!37763 (lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)))))

(declare-fun call!7549 () SeekEntryResult!241)

(assert (=> b!80920 (= lt!37773 call!7549)))

(declare-fun res!42113 () Bool)

(assert (=> b!80920 (= res!42113 ((_ is Found!241) lt!37773))))

(assert (=> b!80920 (=> (not res!42113) (not e!52836))))

(assert (=> b!80920 e!52836))

(declare-fun lt!37757 () Unit!2341)

(assert (=> b!80920 (= lt!37757 lt!37763)))

(assert (=> b!80920 false))

(declare-fun b!80921 () Bool)

(declare-fun Unit!2359 () Unit!2341)

(assert (=> b!80921 (= e!52830 Unit!2359)))

(declare-fun b!80922 () Bool)

(declare-fun res!42119 () Bool)

(declare-fun call!7546 () Bool)

(assert (=> b!80922 (= res!42119 call!7546)))

(assert (=> b!80922 (=> (not res!42119) (not e!52836))))

(declare-fun bm!7543 () Bool)

(assert (=> bm!7543 (= call!7549 (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun b!80923 () Bool)

(declare-fun c!12699 () Bool)

(declare-fun lt!37772 () SeekEntryResult!241)

(assert (=> b!80923 (= c!12699 ((_ is MissingVacant!241) lt!37772))))

(declare-fun e!52832 () Bool)

(assert (=> b!80923 (= e!52831 e!52832)))

(declare-fun b!80924 () Bool)

(declare-fun e!52834 () Bool)

(assert (=> b!80924 (= e!52834 (not call!7548))))

(declare-fun bm!7544 () Bool)

(declare-fun c!12697 () Bool)

(declare-fun c!12698 () Bool)

(assert (=> bm!7544 (= call!7546 (inRange!0 (ite c!12697 (index!3100 lt!37773) (ite c!12698 (index!3099 lt!37772) (index!3102 lt!37772))) (mask!6299 newMap!16)))))

(declare-fun bm!7545 () Bool)

(assert (=> bm!7545 (= call!7547 call!7546)))

(declare-fun bm!7546 () Bool)

(assert (=> bm!7546 (= call!7548 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!80925 () Bool)

(declare-fun res!42111 () Bool)

(declare-fun e!52833 () Bool)

(assert (=> b!80925 (=> (not res!42111) (not e!52833))))

(declare-fun lt!37753 () tuple2!2178)

(assert (=> b!80925 (= res!42111 (contains!745 (map!1178 (_2!1100 lt!37753)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!80926 () Bool)

(declare-fun res!42118 () Bool)

(assert (=> b!80926 (=> (not res!42118) (not e!52837))))

(assert (=> b!80926 (= res!42118 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3099 lt!37772)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80927 () Bool)

(declare-fun res!42112 () Bool)

(assert (=> b!80927 (=> (not res!42112) (not e!52833))))

(assert (=> b!80927 (= res!42112 (valid!316 (_2!1100 lt!37753)))))

(declare-fun d!19777 () Bool)

(assert (=> d!19777 e!52833))

(declare-fun res!42114 () Bool)

(assert (=> d!19777 (=> (not res!42114) (not e!52833))))

(assert (=> d!19777 (= res!42114 (_1!1100 lt!37753))))

(assert (=> d!19777 (= lt!37753 (tuple2!2179 true (LongMapFixedSize!739 (defaultEntry!2293 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (bvadd (_size!418 newMap!16) #b00000000000000000000000000000001) (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (_vacant!418 newMap!16))))))

(declare-fun lt!37766 () Unit!2341)

(declare-fun lt!37754 () Unit!2341)

(assert (=> d!19777 (= lt!37766 lt!37754)))

(declare-fun lt!37761 () array!3989)

(declare-fun lt!37756 () array!3991)

(assert (=> d!19777 (contains!745 (getCurrentListMap!435 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427))))))

(assert (=> d!19777 (= lt!37754 (lemmaValidKeyInArrayIsInListMap!90 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (defaultEntry!2293 newMap!16)))))

(assert (=> d!19777 (= lt!37756 (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))))))

(assert (=> d!19777 (= lt!37761 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun lt!37750 () Unit!2341)

(declare-fun lt!37767 () Unit!2341)

(assert (=> d!19777 (= lt!37750 lt!37767)))

(declare-fun lt!37769 () array!3989)

(assert (=> d!19777 (= (arrayCountValidKeys!0 lt!37769 (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (bvadd (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3989 (_ BitVec 32)) Unit!2341)

(assert (=> d!19777 (= lt!37767 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!37769 (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427))))))

(assert (=> d!19777 (= lt!37769 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun lt!37755 () Unit!2341)

(declare-fun lt!37768 () Unit!2341)

(assert (=> d!19777 (= lt!37755 lt!37768)))

(declare-fun lt!37758 () array!3989)

(assert (=> d!19777 (arrayContainsKey!0 lt!37758 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!19777 (= lt!37768 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!37758 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427))))))

(assert (=> d!19777 (= lt!37758 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun lt!37774 () Unit!2341)

(declare-fun lt!37752 () Unit!2341)

(assert (=> d!19777 (= lt!37774 lt!37752)))

(assert (=> d!19777 (= (+!106 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (getCurrentListMap!435 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!17 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) (_ BitVec 64) V!3003 Int) Unit!2341)

(assert (=> d!19777 (= lt!37752 (lemmaAddValidKeyToArrayThenAddPairToListMap!17 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37764 () Unit!2341)

(declare-fun lt!37760 () Unit!2341)

(assert (=> d!19777 (= lt!37764 lt!37760)))

(assert (=> d!19777 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (mask!6299 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3989 (_ BitVec 32) (_ BitVec 32)) Unit!2341)

(assert (=> d!19777 (= lt!37760 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (mask!6299 newMap!16)))))

(declare-fun lt!37765 () Unit!2341)

(declare-fun lt!37751 () Unit!2341)

(assert (=> d!19777 (= lt!37765 lt!37751)))

(assert (=> d!19777 (= (arrayCountValidKeys!0 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3957 newMap!16) #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3989 (_ BitVec 32) (_ BitVec 64)) Unit!2341)

(assert (=> d!19777 (= lt!37751 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3957 newMap!16) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun lt!37747 () Unit!2341)

(declare-fun lt!37748 () Unit!2341)

(assert (=> d!19777 (= lt!37747 lt!37748)))

(declare-fun lt!37746 () List!1512)

(declare-fun lt!37762 () (_ BitVec 32))

(assert (=> d!19777 (arrayNoDuplicates!0 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) lt!37762 lt!37746)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3989 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1512) Unit!2341)

(assert (=> d!19777 (= lt!37748 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3957 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) lt!37762 lt!37746))))

(assert (=> d!19777 (= lt!37746 Nil!1509)))

(assert (=> d!19777 (= lt!37762 #b00000000000000000000000000000000)))

(declare-fun lt!37770 () Unit!2341)

(assert (=> d!19777 (= lt!37770 e!52830)))

(declare-fun c!12696 () Bool)

(assert (=> d!19777 (= c!12696 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!37745 () Unit!2341)

(assert (=> d!19777 (= lt!37745 e!52835)))

(assert (=> d!19777 (= c!12697 (contains!745 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!19777 (valid!316 newMap!16)))

(assert (=> d!19777 (= (updateHelperNewKey!29 newMap!16 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427))) lt!37753)))

(declare-fun b!80918 () Bool)

(assert (=> b!80918 (= e!52833 (= (map!1178 (_2!1100 lt!37753)) (+!106 (map!1178 newMap!16) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!80928 () Bool)

(declare-fun lt!37749 () Unit!2341)

(assert (=> b!80928 (= e!52835 lt!37749)))

(assert (=> b!80928 (= lt!37749 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)))))

(assert (=> b!80928 (= lt!37772 call!7549)))

(assert (=> b!80928 (= c!12698 ((_ is MissingZero!241) lt!37772))))

(assert (=> b!80928 e!52831))

(declare-fun b!80929 () Bool)

(declare-fun res!42116 () Bool)

(assert (=> b!80929 (= res!42116 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3102 lt!37772)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80929 (=> (not res!42116) (not e!52834))))

(declare-fun b!80930 () Bool)

(assert (=> b!80930 (= e!52832 e!52834)))

(declare-fun res!42117 () Bool)

(assert (=> b!80930 (= res!42117 call!7547)))

(assert (=> b!80930 (=> (not res!42117) (not e!52834))))

(declare-fun b!80931 () Bool)

(assert (=> b!80931 (= e!52832 ((_ is Undefined!241) lt!37772))))

(assert (= (and d!19777 c!12697) b!80920))

(assert (= (and d!19777 (not c!12697)) b!80928))

(assert (= (and b!80920 res!42113) b!80922))

(assert (= (and b!80922 res!42119) b!80915))

(assert (= (and b!80928 c!12698) b!80919))

(assert (= (and b!80928 (not c!12698)) b!80923))

(assert (= (and b!80919 res!42115) b!80926))

(assert (= (and b!80926 res!42118) b!80916))

(assert (= (and b!80923 c!12699) b!80930))

(assert (= (and b!80923 (not c!12699)) b!80931))

(assert (= (and b!80930 res!42117) b!80929))

(assert (= (and b!80929 res!42116) b!80924))

(assert (= (or b!80919 b!80930) bm!7545))

(assert (= (or b!80916 b!80924) bm!7546))

(assert (= (or b!80922 bm!7545) bm!7544))

(assert (= (or b!80920 b!80928) bm!7543))

(assert (= (and d!19777 c!12696) b!80917))

(assert (= (and d!19777 (not c!12696)) b!80921))

(assert (= (and d!19777 res!42114) b!80927))

(assert (= (and b!80927 res!42112) b!80925))

(assert (= (and b!80925 res!42111) b!80918))

(assert (=> b!80917 m!81811))

(declare-fun m!82541 () Bool)

(assert (=> b!80917 m!82541))

(assert (=> b!80917 m!81965))

(assert (=> b!80917 m!81965))

(assert (=> b!80917 m!81811))

(declare-fun m!82543 () Bool)

(assert (=> b!80917 m!82543))

(assert (=> d!19777 m!81811))

(declare-fun m!82545 () Bool)

(assert (=> d!19777 m!82545))

(assert (=> d!19777 m!81965))

(declare-fun m!82547 () Bool)

(assert (=> d!19777 m!82547))

(assert (=> d!19777 m!81811))

(assert (=> d!19777 m!81985))

(assert (=> d!19777 m!81811))

(declare-fun m!82549 () Bool)

(assert (=> d!19777 m!82549))

(assert (=> d!19777 m!81811))

(declare-fun m!82551 () Bool)

(assert (=> d!19777 m!82551))

(declare-fun m!82553 () Bool)

(assert (=> d!19777 m!82553))

(declare-fun m!82555 () Bool)

(assert (=> d!19777 m!82555))

(declare-fun m!82557 () Bool)

(assert (=> d!19777 m!82557))

(declare-fun m!82559 () Bool)

(assert (=> d!19777 m!82559))

(assert (=> d!19777 m!82179))

(declare-fun m!82561 () Bool)

(assert (=> d!19777 m!82561))

(declare-fun m!82563 () Bool)

(assert (=> d!19777 m!82563))

(assert (=> d!19777 m!81811))

(declare-fun m!82565 () Bool)

(assert (=> d!19777 m!82565))

(assert (=> d!19777 m!82555))

(assert (=> d!19777 m!81965))

(assert (=> d!19777 m!81811))

(assert (=> d!19777 m!82543))

(declare-fun m!82567 () Bool)

(assert (=> d!19777 m!82567))

(assert (=> d!19777 m!81965))

(assert (=> d!19777 m!81811))

(declare-fun m!82569 () Bool)

(assert (=> d!19777 m!82569))

(assert (=> d!19777 m!81811))

(declare-fun m!82571 () Bool)

(assert (=> d!19777 m!82571))

(assert (=> d!19777 m!81863))

(declare-fun m!82573 () Bool)

(assert (=> d!19777 m!82573))

(assert (=> d!19777 m!82553))

(declare-fun m!82575 () Bool)

(assert (=> d!19777 m!82575))

(declare-fun m!82577 () Bool)

(assert (=> d!19777 m!82577))

(declare-fun m!82579 () Bool)

(assert (=> d!19777 m!82579))

(declare-fun m!82581 () Bool)

(assert (=> d!19777 m!82581))

(declare-fun m!82583 () Bool)

(assert (=> b!80926 m!82583))

(declare-fun m!82585 () Bool)

(assert (=> b!80925 m!82585))

(assert (=> b!80925 m!82585))

(assert (=> b!80925 m!81811))

(declare-fun m!82587 () Bool)

(assert (=> b!80925 m!82587))

(assert (=> bm!7546 m!81811))

(assert (=> bm!7546 m!81985))

(assert (=> b!80920 m!81811))

(assert (=> b!80920 m!81967))

(assert (=> bm!7543 m!81811))

(assert (=> bm!7543 m!81957))

(declare-fun m!82589 () Bool)

(assert (=> bm!7544 m!82589))

(declare-fun m!82591 () Bool)

(assert (=> b!80927 m!82591))

(assert (=> b!80928 m!81811))

(assert (=> b!80928 m!81991))

(declare-fun m!82593 () Bool)

(assert (=> b!80929 m!82593))

(declare-fun m!82595 () Bool)

(assert (=> b!80915 m!82595))

(assert (=> b!80918 m!82585))

(assert (=> b!80918 m!81853))

(assert (=> b!80918 m!81853))

(declare-fun m!82597 () Bool)

(assert (=> b!80918 m!82597))

(assert (=> bm!7461 d!19777))

(assert (=> bm!7500 d!19701))

(declare-fun d!19779 () Bool)

(declare-fun e!52838 () Bool)

(assert (=> d!19779 e!52838))

(declare-fun res!42127 () Bool)

(assert (=> d!19779 (=> (not res!42127) (not e!52838))))

(assert (=> d!19779 (= res!42127 (or (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))))

(declare-fun lt!37785 () ListLongMap!1451)

(declare-fun lt!37776 () ListLongMap!1451)

(assert (=> d!19779 (= lt!37785 lt!37776)))

(declare-fun lt!37788 () Unit!2341)

(declare-fun e!52845 () Unit!2341)

(assert (=> d!19779 (= lt!37788 e!52845)))

(declare-fun c!12704 () Bool)

(declare-fun e!52844 () Bool)

(assert (=> d!19779 (= c!12704 e!52844)))

(declare-fun res!42120 () Bool)

(assert (=> d!19779 (=> (not res!42120) (not e!52844))))

(assert (=> d!19779 (= res!42120 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun e!52849 () ListLongMap!1451)

(assert (=> d!19779 (= lt!37776 e!52849)))

(declare-fun c!12701 () Bool)

(assert (=> d!19779 (= c!12701 (and (not (= (bvand (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19779 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19779 (= (getCurrentListMap!435 (_keys!3957 newMap!16) (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))) (mask!6299 newMap!16) (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) (zeroValue!2189 newMap!16) (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!37785)))

(declare-fun b!80932 () Bool)

(declare-fun Unit!2360 () Unit!2341)

(assert (=> b!80932 (= e!52845 Unit!2360)))

(declare-fun b!80933 () Bool)

(declare-fun lt!37775 () Unit!2341)

(assert (=> b!80933 (= e!52845 lt!37775)))

(declare-fun lt!37784 () ListLongMap!1451)

(assert (=> b!80933 (= lt!37784 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))) (mask!6299 newMap!16) (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) (zeroValue!2189 newMap!16) (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37790 () (_ BitVec 64))

(assert (=> b!80933 (= lt!37790 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37777 () (_ BitVec 64))

(assert (=> b!80933 (= lt!37777 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37779 () Unit!2341)

(assert (=> b!80933 (= lt!37779 (addStillContains!56 lt!37784 lt!37790 (zeroValue!2189 newMap!16) lt!37777))))

(assert (=> b!80933 (contains!745 (+!106 lt!37784 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16))) lt!37777)))

(declare-fun lt!37795 () Unit!2341)

(assert (=> b!80933 (= lt!37795 lt!37779)))

(declare-fun lt!37796 () ListLongMap!1451)

(assert (=> b!80933 (= lt!37796 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))) (mask!6299 newMap!16) (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) (zeroValue!2189 newMap!16) (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37792 () (_ BitVec 64))

(assert (=> b!80933 (= lt!37792 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37778 () (_ BitVec 64))

(assert (=> b!80933 (= lt!37778 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37786 () Unit!2341)

(assert (=> b!80933 (= lt!37786 (addApplyDifferent!56 lt!37796 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) lt!37778))))

(assert (=> b!80933 (= (apply!80 (+!106 lt!37796 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) lt!37778) (apply!80 lt!37796 lt!37778))))

(declare-fun lt!37782 () Unit!2341)

(assert (=> b!80933 (= lt!37782 lt!37786)))

(declare-fun lt!37793 () ListLongMap!1451)

(assert (=> b!80933 (= lt!37793 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))) (mask!6299 newMap!16) (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) (zeroValue!2189 newMap!16) (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37780 () (_ BitVec 64))

(assert (=> b!80933 (= lt!37780 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37783 () (_ BitVec 64))

(assert (=> b!80933 (= lt!37783 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37781 () Unit!2341)

(assert (=> b!80933 (= lt!37781 (addApplyDifferent!56 lt!37793 lt!37780 (zeroValue!2189 newMap!16) lt!37783))))

(assert (=> b!80933 (= (apply!80 (+!106 lt!37793 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16))) lt!37783) (apply!80 lt!37793 lt!37783))))

(declare-fun lt!37794 () Unit!2341)

(assert (=> b!80933 (= lt!37794 lt!37781)))

(declare-fun lt!37791 () ListLongMap!1451)

(assert (=> b!80933 (= lt!37791 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))) (mask!6299 newMap!16) (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) (zeroValue!2189 newMap!16) (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37789 () (_ BitVec 64))

(assert (=> b!80933 (= lt!37789 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37787 () (_ BitVec 64))

(assert (=> b!80933 (= lt!37787 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80933 (= lt!37775 (addApplyDifferent!56 lt!37791 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) lt!37787))))

(assert (=> b!80933 (= (apply!80 (+!106 lt!37791 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) lt!37787) (apply!80 lt!37791 lt!37787))))

(declare-fun b!80934 () Bool)

(declare-fun res!42123 () Bool)

(assert (=> b!80934 (=> (not res!42123) (not e!52838))))

(declare-fun e!52839 () Bool)

(assert (=> b!80934 (= res!42123 e!52839)))

(declare-fun res!42128 () Bool)

(assert (=> b!80934 (=> res!42128 e!52839)))

(declare-fun e!52846 () Bool)

(assert (=> b!80934 (= res!42128 (not e!52846))))

(declare-fun res!42126 () Bool)

(assert (=> b!80934 (=> (not res!42126) (not e!52846))))

(assert (=> b!80934 (= res!42126 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun e!52848 () Bool)

(declare-fun b!80935 () Bool)

(assert (=> b!80935 (= e!52848 (= (apply!80 lt!37785 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))

(declare-fun b!80936 () Bool)

(declare-fun e!52850 () Bool)

(assert (=> b!80936 (= e!52839 e!52850)))

(declare-fun res!42122 () Bool)

(assert (=> b!80936 (=> (not res!42122) (not e!52850))))

(assert (=> b!80936 (= res!42122 (contains!745 lt!37785 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80936 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun bm!7547 () Bool)

(declare-fun call!7555 () ListLongMap!1451)

(declare-fun call!7556 () ListLongMap!1451)

(assert (=> bm!7547 (= call!7555 call!7556)))

(declare-fun b!80937 () Bool)

(declare-fun e!52843 () Bool)

(assert (=> b!80937 (= e!52843 e!52848)))

(declare-fun res!42124 () Bool)

(declare-fun call!7552 () Bool)

(assert (=> b!80937 (= res!42124 call!7552)))

(assert (=> b!80937 (=> (not res!42124) (not e!52848))))

(declare-fun b!80938 () Bool)

(assert (=> b!80938 (= e!52846 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80939 () Bool)

(assert (=> b!80939 (= e!52843 (not call!7552))))

(declare-fun b!80940 () Bool)

(assert (=> b!80940 (= e!52844 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80941 () Bool)

(declare-fun e!52847 () Bool)

(declare-fun call!7554 () Bool)

(assert (=> b!80941 (= e!52847 (not call!7554))))

(declare-fun bm!7548 () Bool)

(declare-fun call!7553 () ListLongMap!1451)

(assert (=> bm!7548 (= call!7553 call!7555)))

(declare-fun b!80942 () Bool)

(declare-fun e!52841 () ListLongMap!1451)

(declare-fun call!7551 () ListLongMap!1451)

(assert (=> b!80942 (= e!52841 call!7551)))

(declare-fun bm!7549 () Bool)

(assert (=> bm!7549 (= call!7554 (contains!745 lt!37785 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80943 () Bool)

(assert (=> b!80943 (= e!52838 e!52843)))

(declare-fun c!12700 () Bool)

(assert (=> b!80943 (= c!12700 (not (= (bvand (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7550 () Bool)

(assert (=> bm!7550 (= call!7556 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))) (mask!6299 newMap!16) (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) (zeroValue!2189 newMap!16) (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bm!7551 () Bool)

(declare-fun call!7550 () ListLongMap!1451)

(assert (=> bm!7551 (= call!7551 call!7550)))

(declare-fun b!80944 () Bool)

(declare-fun res!42121 () Bool)

(assert (=> b!80944 (=> (not res!42121) (not e!52838))))

(assert (=> b!80944 (= res!42121 e!52847)))

(declare-fun c!12703 () Bool)

(assert (=> b!80944 (= c!12703 (not (= (bvand (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80945 () Bool)

(assert (=> b!80945 (= e!52849 (+!106 call!7550 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))))

(declare-fun b!80946 () Bool)

(assert (=> b!80946 (= e!52841 call!7553)))

(declare-fun c!12702 () Bool)

(declare-fun bm!7552 () Bool)

(assert (=> bm!7552 (= call!7550 (+!106 (ite c!12701 call!7556 (ite c!12702 call!7555 call!7553)) (ite (or c!12701 c!12702) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(declare-fun b!80947 () Bool)

(assert (=> b!80947 (= e!52850 (= (apply!80 lt!37785 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80947 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))))))))

(assert (=> b!80947 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!80948 () Bool)

(declare-fun c!12705 () Bool)

(assert (=> b!80948 (= c!12705 (and (not (= (bvand (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52840 () ListLongMap!1451)

(assert (=> b!80948 (= e!52840 e!52841)))

(declare-fun b!80949 () Bool)

(declare-fun e!52842 () Bool)

(assert (=> b!80949 (= e!52842 (= (apply!80 lt!37785 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun b!80950 () Bool)

(assert (=> b!80950 (= e!52847 e!52842)))

(declare-fun res!42125 () Bool)

(assert (=> b!80950 (= res!42125 call!7554)))

(assert (=> b!80950 (=> (not res!42125) (not e!52842))))

(declare-fun b!80951 () Bool)

(assert (=> b!80951 (= e!52849 e!52840)))

(assert (=> b!80951 (= c!12702 (and (not (= (bvand (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7553 () Bool)

(assert (=> bm!7553 (= call!7552 (contains!745 lt!37785 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80952 () Bool)

(assert (=> b!80952 (= e!52840 call!7551)))

(assert (= (and d!19779 c!12701) b!80945))

(assert (= (and d!19779 (not c!12701)) b!80951))

(assert (= (and b!80951 c!12702) b!80952))

(assert (= (and b!80951 (not c!12702)) b!80948))

(assert (= (and b!80948 c!12705) b!80942))

(assert (= (and b!80948 (not c!12705)) b!80946))

(assert (= (or b!80942 b!80946) bm!7548))

(assert (= (or b!80952 bm!7548) bm!7547))

(assert (= (or b!80952 b!80942) bm!7551))

(assert (= (or b!80945 bm!7547) bm!7550))

(assert (= (or b!80945 bm!7551) bm!7552))

(assert (= (and d!19779 res!42120) b!80940))

(assert (= (and d!19779 c!12704) b!80933))

(assert (= (and d!19779 (not c!12704)) b!80932))

(assert (= (and d!19779 res!42127) b!80934))

(assert (= (and b!80934 res!42126) b!80938))

(assert (= (and b!80934 (not res!42128)) b!80936))

(assert (= (and b!80936 res!42122) b!80947))

(assert (= (and b!80934 res!42123) b!80944))

(assert (= (and b!80944 c!12703) b!80950))

(assert (= (and b!80944 (not c!12703)) b!80941))

(assert (= (and b!80950 res!42125) b!80949))

(assert (= (or b!80950 b!80941) bm!7549))

(assert (= (and b!80944 res!42121) b!80943))

(assert (= (and b!80943 c!12700) b!80937))

(assert (= (and b!80943 (not c!12700)) b!80939))

(assert (= (and b!80937 res!42124) b!80935))

(assert (= (or b!80937 b!80939) bm!7553))

(declare-fun b_lambda!3613 () Bool)

(assert (=> (not b_lambda!3613) (not b!80947)))

(assert (=> b!80947 t!5185))

(declare-fun b_and!4951 () Bool)

(assert (= b_and!4947 (and (=> t!5185 result!2853) b_and!4951)))

(assert (=> b!80947 t!5187))

(declare-fun b_and!4953 () Bool)

(assert (= b_and!4949 (and (=> t!5187 result!2855) b_and!4953)))

(assert (=> b!80947 m!82265))

(declare-fun m!82599 () Bool)

(assert (=> b!80947 m!82599))

(assert (=> b!80947 m!82265))

(declare-fun m!82601 () Bool)

(assert (=> b!80947 m!82601))

(assert (=> b!80947 m!82271))

(assert (=> b!80947 m!82599))

(assert (=> b!80947 m!82271))

(declare-fun m!82603 () Bool)

(assert (=> b!80947 m!82603))

(declare-fun m!82605 () Bool)

(assert (=> bm!7549 m!82605))

(declare-fun m!82607 () Bool)

(assert (=> bm!7552 m!82607))

(assert (=> b!80933 m!82265))

(declare-fun m!82609 () Bool)

(assert (=> b!80933 m!82609))

(declare-fun m!82611 () Bool)

(assert (=> b!80933 m!82611))

(declare-fun m!82613 () Bool)

(assert (=> b!80933 m!82613))

(declare-fun m!82615 () Bool)

(assert (=> b!80933 m!82615))

(declare-fun m!82617 () Bool)

(assert (=> b!80933 m!82617))

(declare-fun m!82619 () Bool)

(assert (=> b!80933 m!82619))

(declare-fun m!82621 () Bool)

(assert (=> b!80933 m!82621))

(declare-fun m!82623 () Bool)

(assert (=> b!80933 m!82623))

(declare-fun m!82625 () Bool)

(assert (=> b!80933 m!82625))

(assert (=> b!80933 m!82611))

(assert (=> b!80933 m!82615))

(declare-fun m!82627 () Bool)

(assert (=> b!80933 m!82627))

(declare-fun m!82629 () Bool)

(assert (=> b!80933 m!82629))

(declare-fun m!82631 () Bool)

(assert (=> b!80933 m!82631))

(declare-fun m!82633 () Bool)

(assert (=> b!80933 m!82633))

(assert (=> b!80933 m!82633))

(declare-fun m!82635 () Bool)

(assert (=> b!80933 m!82635))

(assert (=> b!80933 m!82623))

(declare-fun m!82637 () Bool)

(assert (=> b!80933 m!82637))

(declare-fun m!82639 () Bool)

(assert (=> b!80933 m!82639))

(declare-fun m!82641 () Bool)

(assert (=> b!80935 m!82641))

(assert (=> b!80940 m!82265))

(assert (=> b!80940 m!82265))

(assert (=> b!80940 m!82313))

(declare-fun m!82643 () Bool)

(assert (=> bm!7553 m!82643))

(assert (=> bm!7550 m!82639))

(declare-fun m!82645 () Bool)

(assert (=> b!80945 m!82645))

(assert (=> b!80938 m!82265))

(assert (=> b!80938 m!82265))

(assert (=> b!80938 m!82313))

(assert (=> b!80936 m!82265))

(assert (=> b!80936 m!82265))

(declare-fun m!82647 () Bool)

(assert (=> b!80936 m!82647))

(assert (=> d!19779 m!82321))

(declare-fun m!82649 () Bool)

(assert (=> b!80949 m!82649))

(assert (=> bm!7462 d!19779))

(declare-fun d!19781 () Bool)

(declare-fun e!52851 () Bool)

(assert (=> d!19781 e!52851))

(declare-fun res!42130 () Bool)

(assert (=> d!19781 (=> (not res!42130) (not e!52851))))

(declare-fun lt!37798 () ListLongMap!1451)

(assert (=> d!19781 (= res!42130 (contains!745 lt!37798 (_1!1101 (tuple2!2181 lt!37533 lt!37539))))))

(declare-fun lt!37800 () List!1511)

(assert (=> d!19781 (= lt!37798 (ListLongMap!1452 lt!37800))))

(declare-fun lt!37799 () Unit!2341)

(declare-fun lt!37797 () Unit!2341)

(assert (=> d!19781 (= lt!37799 lt!37797)))

(assert (=> d!19781 (= (getValueByKey!138 lt!37800 (_1!1101 (tuple2!2181 lt!37533 lt!37539))) (Some!143 (_2!1101 (tuple2!2181 lt!37533 lt!37539))))))

(assert (=> d!19781 (= lt!37797 (lemmaContainsTupThenGetReturnValue!55 lt!37800 (_1!1101 (tuple2!2181 lt!37533 lt!37539)) (_2!1101 (tuple2!2181 lt!37533 lt!37539))))))

(assert (=> d!19781 (= lt!37800 (insertStrictlySorted!58 (toList!741 lt!37538) (_1!1101 (tuple2!2181 lt!37533 lt!37539)) (_2!1101 (tuple2!2181 lt!37533 lt!37539))))))

(assert (=> d!19781 (= (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)) lt!37798)))

(declare-fun b!80953 () Bool)

(declare-fun res!42129 () Bool)

(assert (=> b!80953 (=> (not res!42129) (not e!52851))))

(assert (=> b!80953 (= res!42129 (= (getValueByKey!138 (toList!741 lt!37798) (_1!1101 (tuple2!2181 lt!37533 lt!37539))) (Some!143 (_2!1101 (tuple2!2181 lt!37533 lt!37539)))))))

(declare-fun b!80954 () Bool)

(assert (=> b!80954 (= e!52851 (contains!746 (toList!741 lt!37798) (tuple2!2181 lt!37533 lt!37539)))))

(assert (= (and d!19781 res!42130) b!80953))

(assert (= (and b!80953 res!42129) b!80954))

(declare-fun m!82651 () Bool)

(assert (=> d!19781 m!82651))

(declare-fun m!82653 () Bool)

(assert (=> d!19781 m!82653))

(declare-fun m!82655 () Bool)

(assert (=> d!19781 m!82655))

(declare-fun m!82657 () Bool)

(assert (=> d!19781 m!82657))

(declare-fun m!82659 () Bool)

(assert (=> b!80953 m!82659))

(declare-fun m!82661 () Bool)

(assert (=> b!80954 m!82661))

(assert (=> b!80580 d!19781))

(assert (=> b!80580 d!19713))

(declare-fun d!19783 () Bool)

(declare-fun e!52852 () Bool)

(assert (=> d!19783 e!52852))

(declare-fun res!42132 () Bool)

(assert (=> d!19783 (=> (not res!42132) (not e!52852))))

(declare-fun lt!37802 () ListLongMap!1451)

(assert (=> d!19783 (= res!42132 (contains!745 lt!37802 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!37804 () List!1511)

(assert (=> d!19783 (= lt!37802 (ListLongMap!1452 lt!37804))))

(declare-fun lt!37803 () Unit!2341)

(declare-fun lt!37801 () Unit!2341)

(assert (=> d!19783 (= lt!37803 lt!37801)))

(assert (=> d!19783 (= (getValueByKey!138 lt!37804 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19783 (= lt!37801 (lemmaContainsTupThenGetReturnValue!55 lt!37804 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19783 (= lt!37804 (insertStrictlySorted!58 (toList!741 call!7503) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19783 (= (+!106 call!7503 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!37802)))

(declare-fun b!80955 () Bool)

(declare-fun res!42131 () Bool)

(assert (=> b!80955 (=> (not res!42131) (not e!52852))))

(assert (=> b!80955 (= res!42131 (= (getValueByKey!138 (toList!741 lt!37802) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!80956 () Bool)

(assert (=> b!80956 (= e!52852 (contains!746 (toList!741 lt!37802) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!19783 res!42132) b!80955))

(assert (= (and b!80955 res!42131) b!80956))

(declare-fun m!82663 () Bool)

(assert (=> d!19783 m!82663))

(declare-fun m!82665 () Bool)

(assert (=> d!19783 m!82665))

(declare-fun m!82667 () Bool)

(assert (=> d!19783 m!82667))

(declare-fun m!82669 () Bool)

(assert (=> d!19783 m!82669))

(declare-fun m!82671 () Bool)

(assert (=> b!80955 m!82671))

(declare-fun m!82673 () Bool)

(assert (=> b!80956 m!82673))

(assert (=> b!80580 d!19783))

(declare-fun d!19785 () Bool)

(declare-fun e!52853 () Bool)

(assert (=> d!19785 e!52853))

(declare-fun res!42133 () Bool)

(assert (=> d!19785 (=> res!42133 e!52853)))

(declare-fun lt!37806 () Bool)

(assert (=> d!19785 (= res!42133 (not lt!37806))))

(declare-fun lt!37805 () Bool)

(assert (=> d!19785 (= lt!37806 lt!37805)))

(declare-fun lt!37808 () Unit!2341)

(declare-fun e!52854 () Unit!2341)

(assert (=> d!19785 (= lt!37808 e!52854)))

(declare-fun c!12706 () Bool)

(assert (=> d!19785 (= c!12706 lt!37805)))

(assert (=> d!19785 (= lt!37805 (containsKey!142 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))) lt!37535))))

(assert (=> d!19785 (= (contains!745 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)) lt!37535) lt!37806)))

(declare-fun b!80957 () Bool)

(declare-fun lt!37807 () Unit!2341)

(assert (=> b!80957 (= e!52854 lt!37807)))

(assert (=> b!80957 (= lt!37807 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))) lt!37535))))

(assert (=> b!80957 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))) lt!37535))))

(declare-fun b!80958 () Bool)

(declare-fun Unit!2361 () Unit!2341)

(assert (=> b!80958 (= e!52854 Unit!2361)))

(declare-fun b!80959 () Bool)

(assert (=> b!80959 (= e!52853 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))) lt!37535)))))

(assert (= (and d!19785 c!12706) b!80957))

(assert (= (and d!19785 (not c!12706)) b!80958))

(assert (= (and d!19785 (not res!42133)) b!80959))

(declare-fun m!82675 () Bool)

(assert (=> d!19785 m!82675))

(declare-fun m!82677 () Bool)

(assert (=> b!80957 m!82677))

(declare-fun m!82679 () Bool)

(assert (=> b!80957 m!82679))

(assert (=> b!80957 m!82679))

(declare-fun m!82681 () Bool)

(assert (=> b!80957 m!82681))

(assert (=> b!80959 m!82679))

(assert (=> b!80959 m!82679))

(assert (=> b!80959 m!82681))

(assert (=> b!80580 d!19785))

(declare-fun d!19787 () Bool)

(assert (=> d!19787 (not (contains!745 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)) lt!37535))))

(declare-fun lt!37811 () Unit!2341)

(declare-fun choose!471 (ListLongMap!1451 (_ BitVec 64) V!3003 (_ BitVec 64)) Unit!2341)

(assert (=> d!19787 (= lt!37811 (choose!471 lt!37538 lt!37533 lt!37539 lt!37535))))

(declare-fun e!52857 () Bool)

(assert (=> d!19787 e!52857))

(declare-fun res!42136 () Bool)

(assert (=> d!19787 (=> (not res!42136) (not e!52857))))

(assert (=> d!19787 (= res!42136 (not (contains!745 lt!37538 lt!37535)))))

(assert (=> d!19787 (= (addStillNotContains!29 lt!37538 lt!37533 lt!37539 lt!37535) lt!37811)))

(declare-fun b!80963 () Bool)

(assert (=> b!80963 (= e!52857 (not (= lt!37533 lt!37535)))))

(assert (= (and d!19787 res!42136) b!80963))

(assert (=> d!19787 m!82085))

(assert (=> d!19787 m!82085))

(assert (=> d!19787 m!82087))

(declare-fun m!82683 () Bool)

(assert (=> d!19787 m!82683))

(declare-fun m!82685 () Bool)

(assert (=> d!19787 m!82685))

(assert (=> b!80580 d!19787))

(declare-fun d!19789 () Bool)

(declare-fun e!52860 () Bool)

(assert (=> d!19789 e!52860))

(declare-fun c!12709 () Bool)

(assert (=> d!19789 (= c!12709 (and (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!19789 true))

(declare-fun _$29!102 () Unit!2341)

(assert (=> d!19789 (= (choose!469 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))) _$29!102)))

(declare-fun b!80968 () Bool)

(assert (=> b!80968 (= e!52860 (arrayContainsKey!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!80969 () Bool)

(assert (=> b!80969 (= e!52860 (ite (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!19789 c!12709) b!80968))

(assert (= (and d!19789 (not c!12709)) b!80969))

(assert (=> b!80968 m!81811))

(assert (=> b!80968 m!81815))

(assert (=> d!19693 d!19789))

(assert (=> d!19693 d!19675))

(declare-fun d!19791 () Bool)

(declare-fun e!52861 () Bool)

(assert (=> d!19791 e!52861))

(declare-fun res!42137 () Bool)

(assert (=> d!19791 (=> res!42137 e!52861)))

(declare-fun lt!37813 () Bool)

(assert (=> d!19791 (= res!42137 (not lt!37813))))

(declare-fun lt!37812 () Bool)

(assert (=> d!19791 (= lt!37813 lt!37812)))

(declare-fun lt!37815 () Unit!2341)

(declare-fun e!52862 () Unit!2341)

(assert (=> d!19791 (= lt!37815 e!52862)))

(declare-fun c!12710 () Bool)

(assert (=> d!19791 (= c!12710 lt!37812)))

(assert (=> d!19791 (= lt!37812 (containsKey!142 (toList!741 lt!37541) (_1!1101 lt!37283)))))

(assert (=> d!19791 (= (contains!745 lt!37541 (_1!1101 lt!37283)) lt!37813)))

(declare-fun b!80970 () Bool)

(declare-fun lt!37814 () Unit!2341)

(assert (=> b!80970 (= e!52862 lt!37814)))

(assert (=> b!80970 (= lt!37814 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37541) (_1!1101 lt!37283)))))

(assert (=> b!80970 (isDefined!91 (getValueByKey!138 (toList!741 lt!37541) (_1!1101 lt!37283)))))

(declare-fun b!80971 () Bool)

(declare-fun Unit!2362 () Unit!2341)

(assert (=> b!80971 (= e!52862 Unit!2362)))

(declare-fun b!80972 () Bool)

(assert (=> b!80972 (= e!52861 (isDefined!91 (getValueByKey!138 (toList!741 lt!37541) (_1!1101 lt!37283))))))

(assert (= (and d!19791 c!12710) b!80970))

(assert (= (and d!19791 (not c!12710)) b!80971))

(assert (= (and d!19791 (not res!42137)) b!80972))

(declare-fun m!82687 () Bool)

(assert (=> d!19791 m!82687))

(declare-fun m!82689 () Bool)

(assert (=> b!80970 m!82689))

(assert (=> b!80970 m!82111))

(assert (=> b!80970 m!82111))

(declare-fun m!82691 () Bool)

(assert (=> b!80970 m!82691))

(assert (=> b!80972 m!82111))

(assert (=> b!80972 m!82111))

(assert (=> b!80972 m!82691))

(assert (=> d!19663 d!19791))

(declare-fun d!19793 () Bool)

(declare-fun c!12711 () Bool)

(assert (=> d!19793 (= c!12711 (and ((_ is Cons!1507) lt!37543) (= (_1!1101 (h!2096 lt!37543)) (_1!1101 lt!37283))))))

(declare-fun e!52863 () Option!144)

(assert (=> d!19793 (= (getValueByKey!138 lt!37543 (_1!1101 lt!37283)) e!52863)))

(declare-fun b!80974 () Bool)

(declare-fun e!52864 () Option!144)

(assert (=> b!80974 (= e!52863 e!52864)))

(declare-fun c!12712 () Bool)

(assert (=> b!80974 (= c!12712 (and ((_ is Cons!1507) lt!37543) (not (= (_1!1101 (h!2096 lt!37543)) (_1!1101 lt!37283)))))))

(declare-fun b!80975 () Bool)

(assert (=> b!80975 (= e!52864 (getValueByKey!138 (t!5178 lt!37543) (_1!1101 lt!37283)))))

(declare-fun b!80976 () Bool)

(assert (=> b!80976 (= e!52864 None!142)))

(declare-fun b!80973 () Bool)

(assert (=> b!80973 (= e!52863 (Some!143 (_2!1101 (h!2096 lt!37543))))))

(assert (= (and d!19793 c!12711) b!80973))

(assert (= (and d!19793 (not c!12711)) b!80974))

(assert (= (and b!80974 c!12712) b!80975))

(assert (= (and b!80974 (not c!12712)) b!80976))

(declare-fun m!82693 () Bool)

(assert (=> b!80975 m!82693))

(assert (=> d!19663 d!19793))

(declare-fun d!19795 () Bool)

(assert (=> d!19795 (= (getValueByKey!138 lt!37543 (_1!1101 lt!37283)) (Some!143 (_2!1101 lt!37283)))))

(declare-fun lt!37816 () Unit!2341)

(assert (=> d!19795 (= lt!37816 (choose!470 lt!37543 (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(declare-fun e!52865 () Bool)

(assert (=> d!19795 e!52865))

(declare-fun res!42138 () Bool)

(assert (=> d!19795 (=> (not res!42138) (not e!52865))))

(assert (=> d!19795 (= res!42138 (isStrictlySorted!296 lt!37543))))

(assert (=> d!19795 (= (lemmaContainsTupThenGetReturnValue!55 lt!37543 (_1!1101 lt!37283) (_2!1101 lt!37283)) lt!37816)))

(declare-fun b!80977 () Bool)

(declare-fun res!42139 () Bool)

(assert (=> b!80977 (=> (not res!42139) (not e!52865))))

(assert (=> b!80977 (= res!42139 (containsKey!142 lt!37543 (_1!1101 lt!37283)))))

(declare-fun b!80978 () Bool)

(assert (=> b!80978 (= e!52865 (contains!746 lt!37543 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(assert (= (and d!19795 res!42138) b!80977))

(assert (= (and b!80977 res!42139) b!80978))

(assert (=> d!19795 m!82105))

(declare-fun m!82695 () Bool)

(assert (=> d!19795 m!82695))

(declare-fun m!82697 () Bool)

(assert (=> d!19795 m!82697))

(declare-fun m!82699 () Bool)

(assert (=> b!80977 m!82699))

(declare-fun m!82701 () Bool)

(assert (=> b!80978 m!82701))

(assert (=> d!19663 d!19795))

(declare-fun c!12713 () Bool)

(declare-fun b!80979 () Bool)

(assert (=> b!80979 (= c!12713 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37276 lt!37278))) (bvsgt (_1!1101 (h!2096 (toList!741 (+!106 lt!37276 lt!37278)))) (_1!1101 lt!37283))))))

(declare-fun e!52866 () List!1511)

(declare-fun e!52867 () List!1511)

(assert (=> b!80979 (= e!52866 e!52867)))

(declare-fun b!80980 () Bool)

(declare-fun call!7557 () List!1511)

(assert (=> b!80980 (= e!52867 call!7557)))

(declare-fun b!80981 () Bool)

(declare-fun c!12715 () Bool)

(declare-fun e!52868 () List!1511)

(assert (=> b!80981 (= e!52868 (ite c!12715 (t!5178 (toList!741 (+!106 lt!37276 lt!37278))) (ite c!12713 (Cons!1507 (h!2096 (toList!741 (+!106 lt!37276 lt!37278))) (t!5178 (toList!741 (+!106 lt!37276 lt!37278)))) Nil!1508)))))

(declare-fun d!19797 () Bool)

(declare-fun e!52870 () Bool)

(assert (=> d!19797 e!52870))

(declare-fun res!42141 () Bool)

(assert (=> d!19797 (=> (not res!42141) (not e!52870))))

(declare-fun lt!37817 () List!1511)

(assert (=> d!19797 (= res!42141 (isStrictlySorted!296 lt!37817))))

(declare-fun e!52869 () List!1511)

(assert (=> d!19797 (= lt!37817 e!52869)))

(declare-fun c!12714 () Bool)

(assert (=> d!19797 (= c!12714 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37276 lt!37278))) (bvslt (_1!1101 (h!2096 (toList!741 (+!106 lt!37276 lt!37278)))) (_1!1101 lt!37283))))))

(assert (=> d!19797 (isStrictlySorted!296 (toList!741 (+!106 lt!37276 lt!37278)))))

(assert (=> d!19797 (= (insertStrictlySorted!58 (toList!741 (+!106 lt!37276 lt!37278)) (_1!1101 lt!37283) (_2!1101 lt!37283)) lt!37817)))

(declare-fun b!80982 () Bool)

(declare-fun call!7559 () List!1511)

(assert (=> b!80982 (= e!52869 call!7559)))

(declare-fun bm!7554 () Bool)

(declare-fun call!7558 () List!1511)

(assert (=> bm!7554 (= call!7558 call!7559)))

(declare-fun bm!7555 () Bool)

(assert (=> bm!7555 (= call!7557 call!7558)))

(declare-fun b!80983 () Bool)

(assert (=> b!80983 (= e!52870 (contains!746 lt!37817 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun b!80984 () Bool)

(assert (=> b!80984 (= e!52869 e!52866)))

(assert (=> b!80984 (= c!12715 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37276 lt!37278))) (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37276 lt!37278)))) (_1!1101 lt!37283))))))

(declare-fun b!80985 () Bool)

(assert (=> b!80985 (= e!52867 call!7557)))

(declare-fun b!80986 () Bool)

(declare-fun res!42140 () Bool)

(assert (=> b!80986 (=> (not res!42140) (not e!52870))))

(assert (=> b!80986 (= res!42140 (containsKey!142 lt!37817 (_1!1101 lt!37283)))))

(declare-fun bm!7556 () Bool)

(assert (=> bm!7556 (= call!7559 ($colon$colon!70 e!52868 (ite c!12714 (h!2096 (toList!741 (+!106 lt!37276 lt!37278))) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283)))))))

(declare-fun c!12716 () Bool)

(assert (=> bm!7556 (= c!12716 c!12714)))

(declare-fun b!80987 () Bool)

(assert (=> b!80987 (= e!52868 (insertStrictlySorted!58 (t!5178 (toList!741 (+!106 lt!37276 lt!37278))) (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(declare-fun b!80988 () Bool)

(assert (=> b!80988 (= e!52866 call!7558)))

(assert (= (and d!19797 c!12714) b!80982))

(assert (= (and d!19797 (not c!12714)) b!80984))

(assert (= (and b!80984 c!12715) b!80988))

(assert (= (and b!80984 (not c!12715)) b!80979))

(assert (= (and b!80979 c!12713) b!80985))

(assert (= (and b!80979 (not c!12713)) b!80980))

(assert (= (or b!80985 b!80980) bm!7555))

(assert (= (or b!80988 bm!7555) bm!7554))

(assert (= (or b!80982 bm!7554) bm!7556))

(assert (= (and bm!7556 c!12716) b!80987))

(assert (= (and bm!7556 (not c!12716)) b!80981))

(assert (= (and d!19797 res!42141) b!80986))

(assert (= (and b!80986 res!42140) b!80983))

(declare-fun m!82703 () Bool)

(assert (=> b!80983 m!82703))

(declare-fun m!82705 () Bool)

(assert (=> b!80986 m!82705))

(declare-fun m!82707 () Bool)

(assert (=> d!19797 m!82707))

(declare-fun m!82709 () Bool)

(assert (=> d!19797 m!82709))

(declare-fun m!82711 () Bool)

(assert (=> b!80987 m!82711))

(declare-fun m!82713 () Bool)

(assert (=> bm!7556 m!82713))

(assert (=> d!19663 d!19797))

(declare-fun d!19799 () Bool)

(declare-fun e!52871 () Bool)

(assert (=> d!19799 e!52871))

(declare-fun res!42143 () Bool)

(assert (=> d!19799 (=> (not res!42143) (not e!52871))))

(declare-fun lt!37819 () ListLongMap!1451)

(assert (=> d!19799 (= res!42143 (contains!745 lt!37819 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun lt!37821 () List!1511)

(assert (=> d!19799 (= lt!37819 (ListLongMap!1452 lt!37821))))

(declare-fun lt!37820 () Unit!2341)

(declare-fun lt!37818 () Unit!2341)

(assert (=> d!19799 (= lt!37820 lt!37818)))

(assert (=> d!19799 (= (getValueByKey!138 lt!37821 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19799 (= lt!37818 (lemmaContainsTupThenGetReturnValue!55 lt!37821 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19799 (= lt!37821 (insertStrictlySorted!58 (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19799 (= (+!106 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) lt!37819)))

(declare-fun b!80989 () Bool)

(declare-fun res!42142 () Bool)

(assert (=> b!80989 (=> (not res!42142) (not e!52871))))

(assert (=> b!80989 (= res!42142 (= (getValueByKey!138 (toList!741 lt!37819) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!80990 () Bool)

(assert (=> b!80990 (= e!52871 (contains!746 (toList!741 lt!37819) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (= (and d!19799 res!42143) b!80989))

(assert (= (and b!80989 res!42142) b!80990))

(declare-fun m!82715 () Bool)

(assert (=> d!19799 m!82715))

(declare-fun m!82717 () Bool)

(assert (=> d!19799 m!82717))

(declare-fun m!82719 () Bool)

(assert (=> d!19799 m!82719))

(declare-fun m!82721 () Bool)

(assert (=> d!19799 m!82721))

(declare-fun m!82723 () Bool)

(assert (=> b!80989 m!82723))

(declare-fun m!82725 () Bool)

(assert (=> b!80990 m!82725))

(assert (=> d!19665 d!19799))

(declare-fun d!19801 () Bool)

(declare-fun e!52872 () Bool)

(assert (=> d!19801 e!52872))

(declare-fun res!42145 () Bool)

(assert (=> d!19801 (=> (not res!42145) (not e!52872))))

(declare-fun lt!37823 () ListLongMap!1451)

(assert (=> d!19801 (= res!42145 (contains!745 lt!37823 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun lt!37825 () List!1511)

(assert (=> d!19801 (= lt!37823 (ListLongMap!1452 lt!37825))))

(declare-fun lt!37824 () Unit!2341)

(declare-fun lt!37822 () Unit!2341)

(assert (=> d!19801 (= lt!37824 lt!37822)))

(assert (=> d!19801 (= (getValueByKey!138 lt!37825 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19801 (= lt!37822 (lemmaContainsTupThenGetReturnValue!55 lt!37825 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19801 (= lt!37825 (insertStrictlySorted!58 (toList!741 lt!37276) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19801 (= (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) lt!37823)))

(declare-fun b!80991 () Bool)

(declare-fun res!42144 () Bool)

(assert (=> b!80991 (=> (not res!42144) (not e!52872))))

(assert (=> b!80991 (= res!42144 (= (getValueByKey!138 (toList!741 lt!37823) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!80992 () Bool)

(assert (=> b!80992 (= e!52872 (contains!746 (toList!741 lt!37823) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (= (and d!19801 res!42145) b!80991))

(assert (= (and b!80991 res!42144) b!80992))

(declare-fun m!82727 () Bool)

(assert (=> d!19801 m!82727))

(declare-fun m!82729 () Bool)

(assert (=> d!19801 m!82729))

(declare-fun m!82731 () Bool)

(assert (=> d!19801 m!82731))

(declare-fun m!82733 () Bool)

(assert (=> d!19801 m!82733))

(declare-fun m!82735 () Bool)

(assert (=> b!80991 m!82735))

(declare-fun m!82737 () Bool)

(assert (=> b!80992 m!82737))

(assert (=> d!19665 d!19801))

(declare-fun d!19803 () Bool)

(assert (=> d!19803 (= (+!106 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (+!106 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (=> d!19803 true))

(declare-fun _$28!134 () Unit!2341)

(assert (=> d!19803 (= (choose!468 lt!37276 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))) _$28!134)))

(declare-fun bs!3415 () Bool)

(assert (= bs!3415 d!19803))

(assert (=> bs!3415 m!82115))

(assert (=> bs!3415 m!82115))

(assert (=> bs!3415 m!82121))

(assert (=> bs!3415 m!82117))

(assert (=> bs!3415 m!82117))

(assert (=> bs!3415 m!82123))

(assert (=> d!19665 d!19803))

(declare-fun d!19805 () Bool)

(declare-fun e!52873 () Bool)

(assert (=> d!19805 e!52873))

(declare-fun res!42147 () Bool)

(assert (=> d!19805 (=> (not res!42147) (not e!52873))))

(declare-fun lt!37827 () ListLongMap!1451)

(assert (=> d!19805 (= res!42147 (contains!745 lt!37827 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!37829 () List!1511)

(assert (=> d!19805 (= lt!37827 (ListLongMap!1452 lt!37829))))

(declare-fun lt!37828 () Unit!2341)

(declare-fun lt!37826 () Unit!2341)

(assert (=> d!19805 (= lt!37828 lt!37826)))

(assert (=> d!19805 (= (getValueByKey!138 lt!37829 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19805 (= lt!37826 (lemmaContainsTupThenGetReturnValue!55 lt!37829 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19805 (= lt!37829 (insertStrictlySorted!58 (toList!741 lt!37276) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19805 (= (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37827)))

(declare-fun b!80993 () Bool)

(declare-fun res!42146 () Bool)

(assert (=> b!80993 (=> (not res!42146) (not e!52873))))

(assert (=> b!80993 (= res!42146 (= (getValueByKey!138 (toList!741 lt!37827) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!80994 () Bool)

(assert (=> b!80994 (= e!52873 (contains!746 (toList!741 lt!37827) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!19805 res!42147) b!80993))

(assert (= (and b!80993 res!42146) b!80994))

(declare-fun m!82739 () Bool)

(assert (=> d!19805 m!82739))

(declare-fun m!82741 () Bool)

(assert (=> d!19805 m!82741))

(declare-fun m!82743 () Bool)

(assert (=> d!19805 m!82743))

(declare-fun m!82745 () Bool)

(assert (=> d!19805 m!82745))

(declare-fun m!82747 () Bool)

(assert (=> b!80993 m!82747))

(declare-fun m!82749 () Bool)

(assert (=> b!80994 m!82749))

(assert (=> d!19665 d!19805))

(declare-fun d!19807 () Bool)

(declare-fun e!52874 () Bool)

(assert (=> d!19807 e!52874))

(declare-fun res!42149 () Bool)

(assert (=> d!19807 (=> (not res!42149) (not e!52874))))

(declare-fun lt!37831 () ListLongMap!1451)

(assert (=> d!19807 (= res!42149 (contains!745 lt!37831 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!37833 () List!1511)

(assert (=> d!19807 (= lt!37831 (ListLongMap!1452 lt!37833))))

(declare-fun lt!37832 () Unit!2341)

(declare-fun lt!37830 () Unit!2341)

(assert (=> d!19807 (= lt!37832 lt!37830)))

(assert (=> d!19807 (= (getValueByKey!138 lt!37833 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19807 (= lt!37830 (lemmaContainsTupThenGetReturnValue!55 lt!37833 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19807 (= lt!37833 (insertStrictlySorted!58 (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19807 (= (+!106 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37831)))

(declare-fun b!80995 () Bool)

(declare-fun res!42148 () Bool)

(assert (=> b!80995 (=> (not res!42148) (not e!52874))))

(assert (=> b!80995 (= res!42148 (= (getValueByKey!138 (toList!741 lt!37831) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!80996 () Bool)

(assert (=> b!80996 (= e!52874 (contains!746 (toList!741 lt!37831) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!19807 res!42149) b!80995))

(assert (= (and b!80995 res!42148) b!80996))

(declare-fun m!82751 () Bool)

(assert (=> d!19807 m!82751))

(declare-fun m!82753 () Bool)

(assert (=> d!19807 m!82753))

(declare-fun m!82755 () Bool)

(assert (=> d!19807 m!82755))

(declare-fun m!82757 () Bool)

(assert (=> d!19807 m!82757))

(declare-fun m!82759 () Bool)

(assert (=> b!80995 m!82759))

(declare-fun m!82761 () Bool)

(assert (=> b!80996 m!82761))

(assert (=> d!19665 d!19807))

(declare-fun d!19809 () Bool)

(declare-fun c!12717 () Bool)

(assert (=> d!19809 (= c!12717 (and ((_ is Cons!1507) (toList!741 lt!37512)) (= (_1!1101 (h!2096 (toList!741 lt!37512))) (_1!1101 lt!37268))))))

(declare-fun e!52875 () Option!144)

(assert (=> d!19809 (= (getValueByKey!138 (toList!741 lt!37512) (_1!1101 lt!37268)) e!52875)))

(declare-fun b!80998 () Bool)

(declare-fun e!52876 () Option!144)

(assert (=> b!80998 (= e!52875 e!52876)))

(declare-fun c!12718 () Bool)

(assert (=> b!80998 (= c!12718 (and ((_ is Cons!1507) (toList!741 lt!37512)) (not (= (_1!1101 (h!2096 (toList!741 lt!37512))) (_1!1101 lt!37268)))))))

(declare-fun b!80999 () Bool)

(assert (=> b!80999 (= e!52876 (getValueByKey!138 (t!5178 (toList!741 lt!37512)) (_1!1101 lt!37268)))))

(declare-fun b!81000 () Bool)

(assert (=> b!81000 (= e!52876 None!142)))

(declare-fun b!80997 () Bool)

(assert (=> b!80997 (= e!52875 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37512)))))))

(assert (= (and d!19809 c!12717) b!80997))

(assert (= (and d!19809 (not c!12717)) b!80998))

(assert (= (and b!80998 c!12718) b!80999))

(assert (= (and b!80998 (not c!12718)) b!81000))

(declare-fun m!82763 () Bool)

(assert (=> b!80999 m!82763))

(assert (=> b!80549 d!19809))

(declare-fun d!19811 () Bool)

(assert (=> d!19811 (= (+!106 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37425 lt!37282 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37836 () Unit!2341)

(declare-fun choose!472 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 V!3003 Int) Unit!2341)

(assert (=> d!19811 (= lt!37836 (choose!472 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37425 (zeroValue!2189 newMap!16) lt!37282 (minValue!2189 newMap!16) (defaultEntry!2293 newMap!16)))))

(assert (=> d!19811 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19811 (= (lemmaChangeZeroKeyThenAddPairToListMap!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37425 (zeroValue!2189 newMap!16) lt!37282 (minValue!2189 newMap!16) (defaultEntry!2293 newMap!16)) lt!37836)))

(declare-fun bs!3416 () Bool)

(assert (= bs!3416 d!19811))

(declare-fun m!82765 () Bool)

(assert (=> bs!3416 m!82765))

(assert (=> bs!3416 m!81965))

(declare-fun m!82767 () Bool)

(assert (=> bs!3416 m!82767))

(assert (=> bs!3416 m!82321))

(assert (=> bs!3416 m!81965))

(declare-fun m!82769 () Bool)

(assert (=> bs!3416 m!82769))

(assert (=> b!80443 d!19811))

(declare-fun d!19813 () Bool)

(declare-fun e!52877 () Bool)

(assert (=> d!19813 e!52877))

(declare-fun res!42151 () Bool)

(assert (=> d!19813 (=> (not res!42151) (not e!52877))))

(declare-fun lt!37838 () ListLongMap!1451)

(assert (=> d!19813 (= res!42151 (contains!745 lt!37838 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!37840 () List!1511)

(assert (=> d!19813 (= lt!37838 (ListLongMap!1452 lt!37840))))

(declare-fun lt!37839 () Unit!2341)

(declare-fun lt!37837 () Unit!2341)

(assert (=> d!19813 (= lt!37839 lt!37837)))

(assert (=> d!19813 (= (getValueByKey!138 lt!37840 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19813 (= lt!37837 (lemmaContainsTupThenGetReturnValue!55 lt!37840 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19813 (= lt!37840 (insertStrictlySorted!58 (toList!741 lt!37277) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19813 (= (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37838)))

(declare-fun b!81001 () Bool)

(declare-fun res!42150 () Bool)

(assert (=> b!81001 (=> (not res!42150) (not e!52877))))

(assert (=> b!81001 (= res!42150 (= (getValueByKey!138 (toList!741 lt!37838) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81002 () Bool)

(assert (=> b!81002 (= e!52877 (contains!746 (toList!741 lt!37838) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!19813 res!42151) b!81001))

(assert (= (and b!81001 res!42150) b!81002))

(declare-fun m!82771 () Bool)

(assert (=> d!19813 m!82771))

(declare-fun m!82773 () Bool)

(assert (=> d!19813 m!82773))

(declare-fun m!82775 () Bool)

(assert (=> d!19813 m!82775))

(declare-fun m!82777 () Bool)

(assert (=> d!19813 m!82777))

(declare-fun m!82779 () Bool)

(assert (=> b!81001 m!82779))

(declare-fun m!82781 () Bool)

(assert (=> b!81002 m!82781))

(assert (=> d!19667 d!19813))

(declare-fun d!19815 () Bool)

(declare-fun e!52878 () Bool)

(assert (=> d!19815 e!52878))

(declare-fun res!42153 () Bool)

(assert (=> d!19815 (=> (not res!42153) (not e!52878))))

(declare-fun lt!37842 () ListLongMap!1451)

(assert (=> d!19815 (= res!42153 (contains!745 lt!37842 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!37844 () List!1511)

(assert (=> d!19815 (= lt!37842 (ListLongMap!1452 lt!37844))))

(declare-fun lt!37843 () Unit!2341)

(declare-fun lt!37841 () Unit!2341)

(assert (=> d!19815 (= lt!37843 lt!37841)))

(assert (=> d!19815 (= (getValueByKey!138 lt!37844 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19815 (= lt!37841 (lemmaContainsTupThenGetReturnValue!55 lt!37844 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19815 (= lt!37844 (insertStrictlySorted!58 (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19815 (= (+!106 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37842)))

(declare-fun b!81003 () Bool)

(declare-fun res!42152 () Bool)

(assert (=> b!81003 (=> (not res!42152) (not e!52878))))

(assert (=> b!81003 (= res!42152 (= (getValueByKey!138 (toList!741 lt!37842) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81004 () Bool)

(assert (=> b!81004 (= e!52878 (contains!746 (toList!741 lt!37842) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!19815 res!42153) b!81003))

(assert (= (and b!81003 res!42152) b!81004))

(declare-fun m!82783 () Bool)

(assert (=> d!19815 m!82783))

(declare-fun m!82785 () Bool)

(assert (=> d!19815 m!82785))

(declare-fun m!82787 () Bool)

(assert (=> d!19815 m!82787))

(declare-fun m!82789 () Bool)

(assert (=> d!19815 m!82789))

(declare-fun m!82791 () Bool)

(assert (=> b!81003 m!82791))

(declare-fun m!82793 () Bool)

(assert (=> b!81004 m!82793))

(assert (=> d!19667 d!19815))

(declare-fun d!19817 () Bool)

(declare-fun e!52879 () Bool)

(assert (=> d!19817 e!52879))

(declare-fun res!42155 () Bool)

(assert (=> d!19817 (=> (not res!42155) (not e!52879))))

(declare-fun lt!37846 () ListLongMap!1451)

(assert (=> d!19817 (= res!42155 (contains!745 lt!37846 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun lt!37848 () List!1511)

(assert (=> d!19817 (= lt!37846 (ListLongMap!1452 lt!37848))))

(declare-fun lt!37847 () Unit!2341)

(declare-fun lt!37845 () Unit!2341)

(assert (=> d!19817 (= lt!37847 lt!37845)))

(assert (=> d!19817 (= (getValueByKey!138 lt!37848 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19817 (= lt!37845 (lemmaContainsTupThenGetReturnValue!55 lt!37848 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19817 (= lt!37848 (insertStrictlySorted!58 (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19817 (= (+!106 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) lt!37846)))

(declare-fun b!81005 () Bool)

(declare-fun res!42154 () Bool)

(assert (=> b!81005 (=> (not res!42154) (not e!52879))))

(assert (=> b!81005 (= res!42154 (= (getValueByKey!138 (toList!741 lt!37846) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!81006 () Bool)

(assert (=> b!81006 (= e!52879 (contains!746 (toList!741 lt!37846) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (= (and d!19817 res!42155) b!81005))

(assert (= (and b!81005 res!42154) b!81006))

(declare-fun m!82795 () Bool)

(assert (=> d!19817 m!82795))

(declare-fun m!82797 () Bool)

(assert (=> d!19817 m!82797))

(declare-fun m!82799 () Bool)

(assert (=> d!19817 m!82799))

(declare-fun m!82801 () Bool)

(assert (=> d!19817 m!82801))

(declare-fun m!82803 () Bool)

(assert (=> b!81005 m!82803))

(declare-fun m!82805 () Bool)

(assert (=> b!81006 m!82805))

(assert (=> d!19667 d!19817))

(declare-fun d!19819 () Bool)

(declare-fun e!52880 () Bool)

(assert (=> d!19819 e!52880))

(declare-fun res!42157 () Bool)

(assert (=> d!19819 (=> (not res!42157) (not e!52880))))

(declare-fun lt!37850 () ListLongMap!1451)

(assert (=> d!19819 (= res!42157 (contains!745 lt!37850 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun lt!37852 () List!1511)

(assert (=> d!19819 (= lt!37850 (ListLongMap!1452 lt!37852))))

(declare-fun lt!37851 () Unit!2341)

(declare-fun lt!37849 () Unit!2341)

(assert (=> d!19819 (= lt!37851 lt!37849)))

(assert (=> d!19819 (= (getValueByKey!138 lt!37852 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19819 (= lt!37849 (lemmaContainsTupThenGetReturnValue!55 lt!37852 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19819 (= lt!37852 (insertStrictlySorted!58 (toList!741 lt!37277) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!19819 (= (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) lt!37850)))

(declare-fun b!81007 () Bool)

(declare-fun res!42156 () Bool)

(assert (=> b!81007 (=> (not res!42156) (not e!52880))))

(assert (=> b!81007 (= res!42156 (= (getValueByKey!138 (toList!741 lt!37850) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!81008 () Bool)

(assert (=> b!81008 (= e!52880 (contains!746 (toList!741 lt!37850) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (= (and d!19819 res!42157) b!81007))

(assert (= (and b!81007 res!42156) b!81008))

(declare-fun m!82807 () Bool)

(assert (=> d!19819 m!82807))

(declare-fun m!82809 () Bool)

(assert (=> d!19819 m!82809))

(declare-fun m!82811 () Bool)

(assert (=> d!19819 m!82811))

(declare-fun m!82813 () Bool)

(assert (=> d!19819 m!82813))

(declare-fun m!82815 () Bool)

(assert (=> b!81007 m!82815))

(declare-fun m!82817 () Bool)

(assert (=> b!81008 m!82817))

(assert (=> d!19667 d!19819))

(declare-fun d!19821 () Bool)

(assert (=> d!19821 (= (+!106 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (+!106 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (=> d!19821 true))

(declare-fun _$28!135 () Unit!2341)

(assert (=> d!19821 (= (choose!468 lt!37277 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) _$28!135)))

(declare-fun bs!3417 () Bool)

(assert (= bs!3417 d!19821))

(assert (=> bs!3417 m!82125))

(assert (=> bs!3417 m!82125))

(assert (=> bs!3417 m!82131))

(assert (=> bs!3417 m!82127))

(assert (=> bs!3417 m!82127))

(assert (=> bs!3417 m!82133))

(assert (=> d!19667 d!19821))

(assert (=> d!19689 d!19695))

(declare-fun d!19823 () Bool)

(assert (=> d!19823 (arrayNoDuplicates!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) from!355 Nil!1509)))

(assert (=> d!19823 true))

(declare-fun _$71!108 () Unit!2341)

(assert (=> d!19823 (= (choose!39 (_keys!3957 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!108)))

(declare-fun bs!3418 () Bool)

(assert (= bs!3418 d!19823))

(assert (=> bs!3418 m!81809))

(assert (=> d!19689 d!19823))

(declare-fun d!19825 () Bool)

(declare-fun e!52881 () Bool)

(assert (=> d!19825 e!52881))

(declare-fun res!42158 () Bool)

(assert (=> d!19825 (=> res!42158 e!52881)))

(declare-fun lt!37854 () Bool)

(assert (=> d!19825 (= res!42158 (not lt!37854))))

(declare-fun lt!37853 () Bool)

(assert (=> d!19825 (= lt!37854 lt!37853)))

(declare-fun lt!37856 () Unit!2341)

(declare-fun e!52882 () Unit!2341)

(assert (=> d!19825 (= lt!37856 e!52882)))

(declare-fun c!12719 () Bool)

(assert (=> d!19825 (= c!12719 lt!37853)))

(assert (=> d!19825 (= lt!37853 (containsKey!142 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!19825 (= (contains!745 lt!37534 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!37854)))

(declare-fun b!81009 () Bool)

(declare-fun lt!37855 () Unit!2341)

(assert (=> b!81009 (= e!52882 lt!37855)))

(assert (=> b!81009 (= lt!37855 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!81009 (isDefined!91 (getValueByKey!138 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!81010 () Bool)

(declare-fun Unit!2363 () Unit!2341)

(assert (=> b!81010 (= e!52882 Unit!2363)))

(declare-fun b!81011 () Bool)

(assert (=> b!81011 (= e!52881 (isDefined!91 (getValueByKey!138 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!19825 c!12719) b!81009))

(assert (= (and d!19825 (not c!12719)) b!81010))

(assert (= (and d!19825 (not res!42158)) b!81011))

(assert (=> d!19825 m!81993))

(declare-fun m!82819 () Bool)

(assert (=> d!19825 m!82819))

(assert (=> b!81009 m!81993))

(declare-fun m!82821 () Bool)

(assert (=> b!81009 m!82821))

(assert (=> b!81009 m!81993))

(assert (=> b!81009 m!82257))

(assert (=> b!81009 m!82257))

(declare-fun m!82823 () Bool)

(assert (=> b!81009 m!82823))

(assert (=> b!81011 m!81993))

(assert (=> b!81011 m!82257))

(assert (=> b!81011 m!82257))

(assert (=> b!81011 m!82823))

(assert (=> b!80582 d!19825))

(declare-fun d!19827 () Bool)

(declare-fun c!12720 () Bool)

(assert (=> d!19827 (= c!12720 (and ((_ is Cons!1507) (toList!741 lt!37516)) (= (_1!1101 (h!2096 (toList!741 lt!37516))) (_1!1101 lt!37283))))))

(declare-fun e!52883 () Option!144)

(assert (=> d!19827 (= (getValueByKey!138 (toList!741 lt!37516) (_1!1101 lt!37283)) e!52883)))

(declare-fun b!81013 () Bool)

(declare-fun e!52884 () Option!144)

(assert (=> b!81013 (= e!52883 e!52884)))

(declare-fun c!12721 () Bool)

(assert (=> b!81013 (= c!12721 (and ((_ is Cons!1507) (toList!741 lt!37516)) (not (= (_1!1101 (h!2096 (toList!741 lt!37516))) (_1!1101 lt!37283)))))))

(declare-fun b!81014 () Bool)

(assert (=> b!81014 (= e!52884 (getValueByKey!138 (t!5178 (toList!741 lt!37516)) (_1!1101 lt!37283)))))

(declare-fun b!81015 () Bool)

(assert (=> b!81015 (= e!52884 None!142)))

(declare-fun b!81012 () Bool)

(assert (=> b!81012 (= e!52883 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37516)))))))

(assert (= (and d!19827 c!12720) b!81012))

(assert (= (and d!19827 (not c!12720)) b!81013))

(assert (= (and b!81013 c!12721) b!81014))

(assert (= (and b!81013 (not c!12721)) b!81015))

(declare-fun m!82825 () Bool)

(assert (=> b!81014 m!82825))

(assert (=> b!80551 d!19827))

(declare-fun d!19829 () Bool)

(declare-fun e!52885 () Bool)

(assert (=> d!19829 e!52885))

(declare-fun res!42159 () Bool)

(assert (=> d!19829 (=> res!42159 e!52885)))

(declare-fun lt!37858 () Bool)

(assert (=> d!19829 (= res!42159 (not lt!37858))))

(declare-fun lt!37857 () Bool)

(assert (=> d!19829 (= lt!37858 lt!37857)))

(declare-fun lt!37860 () Unit!2341)

(declare-fun e!52886 () Unit!2341)

(assert (=> d!19829 (= lt!37860 e!52886)))

(declare-fun c!12722 () Bool)

(assert (=> d!19829 (= c!12722 lt!37857)))

(assert (=> d!19829 (= lt!37857 (containsKey!142 (toList!741 call!7477) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))

(assert (=> d!19829 (= (contains!745 call!7477 (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))) lt!37858)))

(declare-fun b!81016 () Bool)

(declare-fun lt!37859 () Unit!2341)

(assert (=> b!81016 (= e!52886 lt!37859)))

(assert (=> b!81016 (= lt!37859 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 call!7477) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))

(assert (=> b!81016 (isDefined!91 (getValueByKey!138 (toList!741 call!7477) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))

(declare-fun b!81017 () Bool)

(declare-fun Unit!2364 () Unit!2341)

(assert (=> b!81017 (= e!52886 Unit!2364)))

(declare-fun b!81018 () Bool)

(assert (=> b!81018 (= e!52885 (isDefined!91 (getValueByKey!138 (toList!741 call!7477) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427)))))))

(assert (= (and d!19829 c!12722) b!81016))

(assert (= (and d!19829 (not c!12722)) b!81017))

(assert (= (and d!19829 (not res!42159)) b!81018))

(assert (=> d!19829 m!81977))

(declare-fun m!82827 () Bool)

(assert (=> d!19829 m!82827))

(assert (=> b!81016 m!81977))

(declare-fun m!82829 () Bool)

(assert (=> b!81016 m!82829))

(assert (=> b!81016 m!81977))

(declare-fun m!82831 () Bool)

(assert (=> b!81016 m!82831))

(assert (=> b!81016 m!82831))

(declare-fun m!82833 () Bool)

(assert (=> b!81016 m!82833))

(assert (=> b!81018 m!81977))

(assert (=> b!81018 m!82831))

(assert (=> b!81018 m!82831))

(assert (=> b!81018 m!82833))

(assert (=> b!80473 d!19829))

(declare-fun d!19831 () Bool)

(declare-fun e!52889 () Bool)

(assert (=> d!19831 e!52889))

(declare-fun res!42162 () Bool)

(assert (=> d!19831 (=> (not res!42162) (not e!52889))))

(assert (=> d!19831 (= res!42162 (and (bvsge (index!3100 lt!37427) #b00000000000000000000000000000000) (bvslt (index!3100 lt!37427) (size!2143 (_keys!3957 newMap!16)))))))

(declare-fun lt!37863 () Unit!2341)

(declare-fun choose!473 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) Int) Unit!2341)

(assert (=> d!19831 (= lt!37863 (choose!473 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3100 lt!37427) (defaultEntry!2293 newMap!16)))))

(assert (=> d!19831 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19831 (= (lemmaValidKeyInArrayIsInListMap!90 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3100 lt!37427) (defaultEntry!2293 newMap!16)) lt!37863)))

(declare-fun b!81021 () Bool)

(assert (=> b!81021 (= e!52889 (contains!745 (getCurrentListMap!435 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))

(assert (= (and d!19831 res!42162) b!81021))

(declare-fun m!82835 () Bool)

(assert (=> d!19831 m!82835))

(assert (=> d!19831 m!82321))

(declare-fun m!82837 () Bool)

(assert (=> b!81021 m!82837))

(assert (=> b!81021 m!81977))

(assert (=> b!81021 m!82837))

(assert (=> b!81021 m!81977))

(declare-fun m!82839 () Bool)

(assert (=> b!81021 m!82839))

(assert (=> b!80473 d!19831))

(declare-fun d!19833 () Bool)

(declare-fun e!52892 () Bool)

(assert (=> d!19833 e!52892))

(declare-fun res!42165 () Bool)

(assert (=> d!19833 (=> (not res!42165) (not e!52892))))

(assert (=> d!19833 (= res!42165 (and (bvsge (index!3100 lt!37427) #b00000000000000000000000000000000) (bvslt (index!3100 lt!37427) (size!2144 (_values!2276 newMap!16)))))))

(declare-fun lt!37866 () Unit!2341)

(declare-fun choose!474 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) (_ BitVec 64) V!3003 Int) Unit!2341)

(assert (=> d!19833 (= lt!37866 (choose!474 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3100 lt!37427) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 (defaultEntry!2293 newMap!16)))))

(assert (=> d!19833 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19833 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3100 lt!37427) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 (defaultEntry!2293 newMap!16)) lt!37866)))

(declare-fun b!81024 () Bool)

(assert (=> b!81024 (= e!52892 (= (+!106 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (getCurrentListMap!435 (_keys!3957 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))))))

(assert (= (and d!19833 res!42165) b!81024))

(assert (=> d!19833 m!81811))

(declare-fun m!82841 () Bool)

(assert (=> d!19833 m!82841))

(assert (=> d!19833 m!82321))

(assert (=> b!81024 m!81965))

(assert (=> b!81024 m!81965))

(assert (=> b!81024 m!82547))

(assert (=> b!81024 m!81971))

(declare-fun m!82843 () Bool)

(assert (=> b!81024 m!82843))

(assert (=> b!80473 d!19833))

(assert (=> b!80622 d!19691))

(declare-fun d!19835 () Bool)

(assert (=> d!19835 (= (get!1180 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) from!355) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2607 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!80601 d!19835))

(declare-fun d!19837 () Bool)

(declare-fun lt!37867 () Bool)

(assert (=> d!19837 (= lt!37867 (select (content!85 (toList!741 lt!37549)) lt!37283))))

(declare-fun e!52894 () Bool)

(assert (=> d!19837 (= lt!37867 e!52894)))

(declare-fun res!42166 () Bool)

(assert (=> d!19837 (=> (not res!42166) (not e!52894))))

(assert (=> d!19837 (= res!42166 ((_ is Cons!1507) (toList!741 lt!37549)))))

(assert (=> d!19837 (= (contains!746 (toList!741 lt!37549) lt!37283) lt!37867)))

(declare-fun b!81025 () Bool)

(declare-fun e!52893 () Bool)

(assert (=> b!81025 (= e!52894 e!52893)))

(declare-fun res!42167 () Bool)

(assert (=> b!81025 (=> res!42167 e!52893)))

(assert (=> b!81025 (= res!42167 (= (h!2096 (toList!741 lt!37549)) lt!37283))))

(declare-fun b!81026 () Bool)

(assert (=> b!81026 (= e!52893 (contains!746 (t!5178 (toList!741 lt!37549)) lt!37283))))

(assert (= (and d!19837 res!42166) b!81025))

(assert (= (and b!81025 (not res!42167)) b!81026))

(declare-fun m!82845 () Bool)

(assert (=> d!19837 m!82845))

(declare-fun m!82847 () Bool)

(assert (=> d!19837 m!82847))

(declare-fun m!82849 () Bool)

(assert (=> b!81026 m!82849))

(assert (=> b!80592 d!19837))

(declare-fun d!19839 () Bool)

(declare-fun e!52895 () Bool)

(assert (=> d!19839 e!52895))

(declare-fun res!42169 () Bool)

(assert (=> d!19839 (=> (not res!42169) (not e!52895))))

(declare-fun lt!37869 () ListLongMap!1451)

(assert (=> d!19839 (= res!42169 (contains!745 lt!37869 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!37871 () List!1511)

(assert (=> d!19839 (= lt!37869 (ListLongMap!1452 lt!37871))))

(declare-fun lt!37870 () Unit!2341)

(declare-fun lt!37868 () Unit!2341)

(assert (=> d!19839 (= lt!37870 lt!37868)))

(assert (=> d!19839 (= (getValueByKey!138 lt!37871 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19839 (= lt!37868 (lemmaContainsTupThenGetReturnValue!55 lt!37871 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19839 (= lt!37871 (insertStrictlySorted!58 (toList!741 call!7494) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19839 (= (+!106 call!7494 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37869)))

(declare-fun b!81027 () Bool)

(declare-fun res!42168 () Bool)

(assert (=> b!81027 (=> (not res!42168) (not e!52895))))

(assert (=> b!81027 (= res!42168 (= (getValueByKey!138 (toList!741 lt!37869) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81028 () Bool)

(assert (=> b!81028 (= e!52895 (contains!746 (toList!741 lt!37869) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!19839 res!42169) b!81027))

(assert (= (and b!81027 res!42168) b!81028))

(declare-fun m!82851 () Bool)

(assert (=> d!19839 m!82851))

(declare-fun m!82853 () Bool)

(assert (=> d!19839 m!82853))

(declare-fun m!82855 () Bool)

(assert (=> d!19839 m!82855))

(declare-fun m!82857 () Bool)

(assert (=> d!19839 m!82857))

(declare-fun m!82859 () Bool)

(assert (=> b!81027 m!82859))

(declare-fun m!82861 () Bool)

(assert (=> b!81028 m!82861))

(assert (=> b!80535 d!19839))

(assert (=> d!19653 d!19675))

(declare-fun d!19841 () Bool)

(declare-fun e!52896 () Bool)

(assert (=> d!19841 e!52896))

(declare-fun res!42171 () Bool)

(assert (=> d!19841 (=> (not res!42171) (not e!52896))))

(declare-fun lt!37873 () ListLongMap!1451)

(assert (=> d!19841 (= res!42171 (contains!745 lt!37873 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun lt!37875 () List!1511)

(assert (=> d!19841 (= lt!37873 (ListLongMap!1452 lt!37875))))

(declare-fun lt!37874 () Unit!2341)

(declare-fun lt!37872 () Unit!2341)

(assert (=> d!19841 (= lt!37874 lt!37872)))

(assert (=> d!19841 (= (getValueByKey!138 lt!37875 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (Some!143 (_2!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!19841 (= lt!37872 (lemmaContainsTupThenGetReturnValue!55 lt!37875 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_2!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!19841 (= lt!37875 (insertStrictlySorted!58 (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497))) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_2!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!19841 (= (+!106 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497)) (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37873)))

(declare-fun b!81029 () Bool)

(declare-fun res!42170 () Bool)

(assert (=> b!81029 (=> (not res!42170) (not e!52896))))

(assert (=> b!81029 (= res!42170 (= (getValueByKey!138 (toList!741 lt!37873) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (Some!143 (_2!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!81030 () Bool)

(assert (=> b!81030 (= e!52896 (contains!746 (toList!741 lt!37873) (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (= (and d!19841 res!42171) b!81029))

(assert (= (and b!81029 res!42170) b!81030))

(declare-fun m!82863 () Bool)

(assert (=> d!19841 m!82863))

(declare-fun m!82865 () Bool)

(assert (=> d!19841 m!82865))

(declare-fun m!82867 () Bool)

(assert (=> d!19841 m!82867))

(declare-fun m!82869 () Bool)

(assert (=> d!19841 m!82869))

(declare-fun m!82871 () Bool)

(assert (=> b!81029 m!82871))

(declare-fun m!82873 () Bool)

(assert (=> b!81030 m!82873))

(assert (=> bm!7496 d!19841))

(declare-fun d!19843 () Bool)

(declare-fun lt!37876 () Bool)

(assert (=> d!19843 (= lt!37876 (select (content!85 (toList!741 lt!37553)) lt!37278))))

(declare-fun e!52898 () Bool)

(assert (=> d!19843 (= lt!37876 e!52898)))

(declare-fun res!42172 () Bool)

(assert (=> d!19843 (=> (not res!42172) (not e!52898))))

(assert (=> d!19843 (= res!42172 ((_ is Cons!1507) (toList!741 lt!37553)))))

(assert (=> d!19843 (= (contains!746 (toList!741 lt!37553) lt!37278) lt!37876)))

(declare-fun b!81031 () Bool)

(declare-fun e!52897 () Bool)

(assert (=> b!81031 (= e!52898 e!52897)))

(declare-fun res!42173 () Bool)

(assert (=> b!81031 (=> res!42173 e!52897)))

(assert (=> b!81031 (= res!42173 (= (h!2096 (toList!741 lt!37553)) lt!37278))))

(declare-fun b!81032 () Bool)

(assert (=> b!81032 (= e!52897 (contains!746 (t!5178 (toList!741 lt!37553)) lt!37278))))

(assert (= (and d!19843 res!42172) b!81031))

(assert (= (and b!81031 (not res!42173)) b!81032))

(declare-fun m!82875 () Bool)

(assert (=> d!19843 m!82875))

(declare-fun m!82877 () Bool)

(assert (=> d!19843 m!82877))

(declare-fun m!82879 () Bool)

(assert (=> b!81032 m!82879))

(assert (=> b!80594 d!19843))

(declare-fun d!19845 () Bool)

(assert (=> d!19845 (= (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80586 d!19845))

(declare-fun d!19847 () Bool)

(declare-fun lt!37877 () Bool)

(assert (=> d!19847 (= lt!37877 (select (content!85 (toList!741 lt!37557)) lt!37268))))

(declare-fun e!52900 () Bool)

(assert (=> d!19847 (= lt!37877 e!52900)))

(declare-fun res!42174 () Bool)

(assert (=> d!19847 (=> (not res!42174) (not e!52900))))

(assert (=> d!19847 (= res!42174 ((_ is Cons!1507) (toList!741 lt!37557)))))

(assert (=> d!19847 (= (contains!746 (toList!741 lt!37557) lt!37268) lt!37877)))

(declare-fun b!81033 () Bool)

(declare-fun e!52899 () Bool)

(assert (=> b!81033 (= e!52900 e!52899)))

(declare-fun res!42175 () Bool)

(assert (=> b!81033 (=> res!42175 e!52899)))

(assert (=> b!81033 (= res!42175 (= (h!2096 (toList!741 lt!37557)) lt!37268))))

(declare-fun b!81034 () Bool)

(assert (=> b!81034 (= e!52899 (contains!746 (t!5178 (toList!741 lt!37557)) lt!37268))))

(assert (= (and d!19847 res!42174) b!81033))

(assert (= (and b!81033 (not res!42175)) b!81034))

(declare-fun m!82881 () Bool)

(assert (=> d!19847 m!82881))

(declare-fun m!82883 () Bool)

(assert (=> d!19847 m!82883))

(declare-fun m!82885 () Bool)

(assert (=> b!81034 m!82885))

(assert (=> b!80596 d!19847))

(declare-fun d!19849 () Bool)

(assert (=> d!19849 (= (map!1178 (_2!1100 lt!37429)) (getCurrentListMap!435 (_keys!3957 (_2!1100 lt!37429)) (_values!2276 (_2!1100 lt!37429)) (mask!6299 (_2!1100 lt!37429)) (extraKeys!2140 (_2!1100 lt!37429)) (zeroValue!2189 (_2!1100 lt!37429)) (minValue!2189 (_2!1100 lt!37429)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1100 lt!37429))))))

(declare-fun bs!3419 () Bool)

(assert (= bs!3419 d!19849))

(declare-fun m!82887 () Bool)

(assert (=> bs!3419 m!82887))

(assert (=> bm!7473 d!19849))

(declare-fun d!19851 () Bool)

(declare-fun c!12723 () Bool)

(assert (=> d!19851 (= c!12723 (and ((_ is Cons!1507) (toList!741 lt!37541)) (= (_1!1101 (h!2096 (toList!741 lt!37541))) (_1!1101 lt!37283))))))

(declare-fun e!52901 () Option!144)

(assert (=> d!19851 (= (getValueByKey!138 (toList!741 lt!37541) (_1!1101 lt!37283)) e!52901)))

(declare-fun b!81036 () Bool)

(declare-fun e!52902 () Option!144)

(assert (=> b!81036 (= e!52901 e!52902)))

(declare-fun c!12724 () Bool)

(assert (=> b!81036 (= c!12724 (and ((_ is Cons!1507) (toList!741 lt!37541)) (not (= (_1!1101 (h!2096 (toList!741 lt!37541))) (_1!1101 lt!37283)))))))

(declare-fun b!81037 () Bool)

(assert (=> b!81037 (= e!52902 (getValueByKey!138 (t!5178 (toList!741 lt!37541)) (_1!1101 lt!37283)))))

(declare-fun b!81038 () Bool)

(assert (=> b!81038 (= e!52902 None!142)))

(declare-fun b!81035 () Bool)

(assert (=> b!81035 (= e!52901 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37541)))))))

(assert (= (and d!19851 c!12723) b!81035))

(assert (= (and d!19851 (not c!12723)) b!81036))

(assert (= (and b!81036 c!12724) b!81037))

(assert (= (and b!81036 (not c!12724)) b!81038))

(declare-fun m!82889 () Bool)

(assert (=> b!81037 m!82889))

(assert (=> b!80589 d!19851))

(declare-fun d!19853 () Bool)

(assert (=> d!19853 (= (apply!80 lt!37495 lt!37485) (get!1182 (getValueByKey!138 (toList!741 lt!37495) lt!37485)))))

(declare-fun bs!3420 () Bool)

(assert (= bs!3420 d!19853))

(declare-fun m!82891 () Bool)

(assert (=> bs!3420 m!82891))

(assert (=> bs!3420 m!82891))

(declare-fun m!82893 () Bool)

(assert (=> bs!3420 m!82893))

(assert (=> b!80523 d!19853))

(declare-fun d!19855 () Bool)

(assert (=> d!19855 (= (apply!80 lt!37498 lt!37480) (get!1182 (getValueByKey!138 (toList!741 lt!37498) lt!37480)))))

(declare-fun bs!3421 () Bool)

(assert (= bs!3421 d!19855))

(declare-fun m!82895 () Bool)

(assert (=> bs!3421 m!82895))

(assert (=> bs!3421 m!82895))

(declare-fun m!82897 () Bool)

(assert (=> bs!3421 m!82897))

(assert (=> b!80523 d!19855))

(declare-fun d!19857 () Bool)

(assert (=> d!19857 (= (apply!80 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37485) (apply!80 lt!37495 lt!37485))))

(declare-fun lt!37880 () Unit!2341)

(declare-fun choose!475 (ListLongMap!1451 (_ BitVec 64) V!3003 (_ BitVec 64)) Unit!2341)

(assert (=> d!19857 (= lt!37880 (choose!475 lt!37495 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37485))))

(declare-fun e!52905 () Bool)

(assert (=> d!19857 e!52905))

(declare-fun res!42178 () Bool)

(assert (=> d!19857 (=> (not res!42178) (not e!52905))))

(assert (=> d!19857 (= res!42178 (contains!745 lt!37495 lt!37485))))

(assert (=> d!19857 (= (addApplyDifferent!56 lt!37495 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37485) lt!37880)))

(declare-fun b!81042 () Bool)

(assert (=> b!81042 (= e!52905 (not (= lt!37485 lt!37482)))))

(assert (= (and d!19857 res!42178) b!81042))

(assert (=> d!19857 m!82019))

(declare-fun m!82899 () Bool)

(assert (=> d!19857 m!82899))

(declare-fun m!82901 () Bool)

(assert (=> d!19857 m!82901))

(assert (=> d!19857 m!82019))

(assert (=> d!19857 m!82021))

(assert (=> d!19857 m!82005))

(assert (=> b!80523 d!19857))

(declare-fun d!19859 () Bool)

(declare-fun e!52906 () Bool)

(assert (=> d!19859 e!52906))

(declare-fun res!42180 () Bool)

(assert (=> d!19859 (=> (not res!42180) (not e!52906))))

(declare-fun lt!37882 () ListLongMap!1451)

(assert (=> d!19859 (= res!42180 (contains!745 lt!37882 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!37884 () List!1511)

(assert (=> d!19859 (= lt!37882 (ListLongMap!1452 lt!37884))))

(declare-fun lt!37883 () Unit!2341)

(declare-fun lt!37881 () Unit!2341)

(assert (=> d!19859 (= lt!37883 lt!37881)))

(assert (=> d!19859 (= (getValueByKey!138 lt!37884 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19859 (= lt!37881 (lemmaContainsTupThenGetReturnValue!55 lt!37884 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19859 (= lt!37884 (insertStrictlySorted!58 (toList!741 lt!37498) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19859 (= (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37882)))

(declare-fun b!81043 () Bool)

(declare-fun res!42179 () Bool)

(assert (=> b!81043 (=> (not res!42179) (not e!52906))))

(assert (=> b!81043 (= res!42179 (= (getValueByKey!138 (toList!741 lt!37882) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81044 () Bool)

(assert (=> b!81044 (= e!52906 (contains!746 (toList!741 lt!37882) (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!19859 res!42180) b!81043))

(assert (= (and b!81043 res!42179) b!81044))

(declare-fun m!82903 () Bool)

(assert (=> d!19859 m!82903))

(declare-fun m!82905 () Bool)

(assert (=> d!19859 m!82905))

(declare-fun m!82907 () Bool)

(assert (=> d!19859 m!82907))

(declare-fun m!82909 () Bool)

(assert (=> d!19859 m!82909))

(declare-fun m!82911 () Bool)

(assert (=> b!81043 m!82911))

(declare-fun m!82913 () Bool)

(assert (=> b!81044 m!82913))

(assert (=> b!80523 d!19859))

(declare-fun d!19861 () Bool)

(assert (=> d!19861 (= (apply!80 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37485) (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37485)))))

(declare-fun bs!3422 () Bool)

(assert (= bs!3422 d!19861))

(declare-fun m!82915 () Bool)

(assert (=> bs!3422 m!82915))

(assert (=> bs!3422 m!82915))

(declare-fun m!82917 () Bool)

(assert (=> bs!3422 m!82917))

(assert (=> b!80523 d!19861))

(declare-fun d!19863 () Bool)

(assert (=> d!19863 (= (apply!80 lt!37493 lt!37489) (get!1182 (getValueByKey!138 (toList!741 lt!37493) lt!37489)))))

(declare-fun bs!3423 () Bool)

(assert (= bs!3423 d!19863))

(declare-fun m!82919 () Bool)

(assert (=> bs!3423 m!82919))

(assert (=> bs!3423 m!82919))

(declare-fun m!82921 () Bool)

(assert (=> bs!3423 m!82921))

(assert (=> b!80523 d!19863))

(declare-fun d!19865 () Bool)

(assert (=> d!19865 (= (apply!80 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37480) (apply!80 lt!37498 lt!37480))))

(declare-fun lt!37885 () Unit!2341)

(assert (=> d!19865 (= lt!37885 (choose!475 lt!37498 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37480))))

(declare-fun e!52907 () Bool)

(assert (=> d!19865 e!52907))

(declare-fun res!42181 () Bool)

(assert (=> d!19865 (=> (not res!42181) (not e!52907))))

(assert (=> d!19865 (= res!42181 (contains!745 lt!37498 lt!37480))))

(assert (=> d!19865 (= (addApplyDifferent!56 lt!37498 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37480) lt!37885)))

(declare-fun b!81045 () Bool)

(assert (=> b!81045 (= e!52907 (not (= lt!37480 lt!37494)))))

(assert (= (and d!19865 res!42181) b!81045))

(assert (=> d!19865 m!82029))

(declare-fun m!82923 () Bool)

(assert (=> d!19865 m!82923))

(declare-fun m!82925 () Bool)

(assert (=> d!19865 m!82925))

(assert (=> d!19865 m!82029))

(assert (=> d!19865 m!82031))

(assert (=> d!19865 m!82017))

(assert (=> b!80523 d!19865))

(declare-fun d!19867 () Bool)

(declare-fun e!52908 () Bool)

(assert (=> d!19867 e!52908))

(declare-fun res!42183 () Bool)

(assert (=> d!19867 (=> (not res!42183) (not e!52908))))

(declare-fun lt!37887 () ListLongMap!1451)

(assert (=> d!19867 (= res!42183 (contains!745 lt!37887 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!37889 () List!1511)

(assert (=> d!19867 (= lt!37887 (ListLongMap!1452 lt!37889))))

(declare-fun lt!37888 () Unit!2341)

(declare-fun lt!37886 () Unit!2341)

(assert (=> d!19867 (= lt!37888 lt!37886)))

(assert (=> d!19867 (= (getValueByKey!138 lt!37889 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19867 (= lt!37886 (lemmaContainsTupThenGetReturnValue!55 lt!37889 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19867 (= lt!37889 (insertStrictlySorted!58 (toList!741 lt!37493) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19867 (= (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37887)))

(declare-fun b!81046 () Bool)

(declare-fun res!42182 () Bool)

(assert (=> b!81046 (=> (not res!42182) (not e!52908))))

(assert (=> b!81046 (= res!42182 (= (getValueByKey!138 (toList!741 lt!37887) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81047 () Bool)

(assert (=> b!81047 (= e!52908 (contains!746 (toList!741 lt!37887) (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!19867 res!42183) b!81046))

(assert (= (and b!81046 res!42182) b!81047))

(declare-fun m!82927 () Bool)

(assert (=> d!19867 m!82927))

(declare-fun m!82929 () Bool)

(assert (=> d!19867 m!82929))

(declare-fun m!82931 () Bool)

(assert (=> d!19867 m!82931))

(declare-fun m!82933 () Bool)

(assert (=> d!19867 m!82933))

(declare-fun m!82935 () Bool)

(assert (=> b!81046 m!82935))

(declare-fun m!82937 () Bool)

(assert (=> b!81047 m!82937))

(assert (=> b!80523 d!19867))

(declare-fun d!19869 () Bool)

(assert (=> d!19869 (= (apply!80 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37489) (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37489)))))

(declare-fun bs!3424 () Bool)

(assert (= bs!3424 d!19869))

(declare-fun m!82939 () Bool)

(assert (=> bs!3424 m!82939))

(assert (=> bs!3424 m!82939))

(declare-fun m!82941 () Bool)

(assert (=> bs!3424 m!82941))

(assert (=> b!80523 d!19869))

(declare-fun d!19871 () Bool)

(declare-fun e!52909 () Bool)

(assert (=> d!19871 e!52909))

(declare-fun res!42185 () Bool)

(assert (=> d!19871 (=> (not res!42185) (not e!52909))))

(declare-fun lt!37891 () ListLongMap!1451)

(assert (=> d!19871 (= res!42185 (contains!745 lt!37891 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!37893 () List!1511)

(assert (=> d!19871 (= lt!37891 (ListLongMap!1452 lt!37893))))

(declare-fun lt!37892 () Unit!2341)

(declare-fun lt!37890 () Unit!2341)

(assert (=> d!19871 (= lt!37892 lt!37890)))

(assert (=> d!19871 (= (getValueByKey!138 lt!37893 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19871 (= lt!37890 (lemmaContainsTupThenGetReturnValue!55 lt!37893 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19871 (= lt!37893 (insertStrictlySorted!58 (toList!741 lt!37495) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19871 (= (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37891)))

(declare-fun b!81048 () Bool)

(declare-fun res!42184 () Bool)

(assert (=> b!81048 (=> (not res!42184) (not e!52909))))

(assert (=> b!81048 (= res!42184 (= (getValueByKey!138 (toList!741 lt!37891) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81049 () Bool)

(assert (=> b!81049 (= e!52909 (contains!746 (toList!741 lt!37891) (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!19871 res!42185) b!81048))

(assert (= (and b!81048 res!42184) b!81049))

(declare-fun m!82943 () Bool)

(assert (=> d!19871 m!82943))

(declare-fun m!82945 () Bool)

(assert (=> d!19871 m!82945))

(declare-fun m!82947 () Bool)

(assert (=> d!19871 m!82947))

(declare-fun m!82949 () Bool)

(assert (=> d!19871 m!82949))

(declare-fun m!82951 () Bool)

(assert (=> b!81048 m!82951))

(declare-fun m!82953 () Bool)

(assert (=> b!81049 m!82953))

(assert (=> b!80523 d!19871))

(declare-fun d!19873 () Bool)

(assert (=> d!19873 (= (apply!80 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37480) (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37480)))))

(declare-fun bs!3425 () Bool)

(assert (= bs!3425 d!19873))

(declare-fun m!82955 () Bool)

(assert (=> bs!3425 m!82955))

(assert (=> bs!3425 m!82955))

(declare-fun m!82957 () Bool)

(assert (=> bs!3425 m!82957))

(assert (=> b!80523 d!19873))

(declare-fun d!19875 () Bool)

(declare-fun e!52910 () Bool)

(assert (=> d!19875 e!52910))

(declare-fun res!42187 () Bool)

(assert (=> d!19875 (=> (not res!42187) (not e!52910))))

(declare-fun lt!37895 () ListLongMap!1451)

(assert (=> d!19875 (= res!42187 (contains!745 lt!37895 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!37897 () List!1511)

(assert (=> d!19875 (= lt!37895 (ListLongMap!1452 lt!37897))))

(declare-fun lt!37896 () Unit!2341)

(declare-fun lt!37894 () Unit!2341)

(assert (=> d!19875 (= lt!37896 lt!37894)))

(assert (=> d!19875 (= (getValueByKey!138 lt!37897 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19875 (= lt!37894 (lemmaContainsTupThenGetReturnValue!55 lt!37897 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19875 (= lt!37897 (insertStrictlySorted!58 (toList!741 lt!37486) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!19875 (= (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37895)))

(declare-fun b!81050 () Bool)

(declare-fun res!42186 () Bool)

(assert (=> b!81050 (=> (not res!42186) (not e!52910))))

(assert (=> b!81050 (= res!42186 (= (getValueByKey!138 (toList!741 lt!37895) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81051 () Bool)

(assert (=> b!81051 (= e!52910 (contains!746 (toList!741 lt!37895) (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!19875 res!42187) b!81050))

(assert (= (and b!81050 res!42186) b!81051))

(declare-fun m!82959 () Bool)

(assert (=> d!19875 m!82959))

(declare-fun m!82961 () Bool)

(assert (=> d!19875 m!82961))

(declare-fun m!82963 () Bool)

(assert (=> d!19875 m!82963))

(declare-fun m!82965 () Bool)

(assert (=> d!19875 m!82965))

(declare-fun m!82967 () Bool)

(assert (=> b!81050 m!82967))

(declare-fun m!82969 () Bool)

(assert (=> b!81051 m!82969))

(assert (=> b!80523 d!19875))

(declare-fun d!19877 () Bool)

(declare-fun e!52911 () Bool)

(assert (=> d!19877 e!52911))

(declare-fun res!42188 () Bool)

(assert (=> d!19877 (=> res!42188 e!52911)))

(declare-fun lt!37899 () Bool)

(assert (=> d!19877 (= res!42188 (not lt!37899))))

(declare-fun lt!37898 () Bool)

(assert (=> d!19877 (= lt!37899 lt!37898)))

(declare-fun lt!37901 () Unit!2341)

(declare-fun e!52912 () Unit!2341)

(assert (=> d!19877 (= lt!37901 e!52912)))

(declare-fun c!12725 () Bool)

(assert (=> d!19877 (= c!12725 lt!37898)))

(assert (=> d!19877 (= lt!37898 (containsKey!142 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37479))))

(assert (=> d!19877 (= (contains!745 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37479) lt!37899)))

(declare-fun b!81052 () Bool)

(declare-fun lt!37900 () Unit!2341)

(assert (=> b!81052 (= e!52912 lt!37900)))

(assert (=> b!81052 (= lt!37900 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37479))))

(assert (=> b!81052 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37479))))

(declare-fun b!81053 () Bool)

(declare-fun Unit!2365 () Unit!2341)

(assert (=> b!81053 (= e!52912 Unit!2365)))

(declare-fun b!81054 () Bool)

(assert (=> b!81054 (= e!52911 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37479)))))

(assert (= (and d!19877 c!12725) b!81052))

(assert (= (and d!19877 (not c!12725)) b!81053))

(assert (= (and d!19877 (not res!42188)) b!81054))

(declare-fun m!82971 () Bool)

(assert (=> d!19877 m!82971))

(declare-fun m!82973 () Bool)

(assert (=> b!81052 m!82973))

(declare-fun m!82975 () Bool)

(assert (=> b!81052 m!82975))

(assert (=> b!81052 m!82975))

(declare-fun m!82977 () Bool)

(assert (=> b!81052 m!82977))

(assert (=> b!81054 m!82975))

(assert (=> b!81054 m!82975))

(assert (=> b!81054 m!82977))

(assert (=> b!80523 d!19877))

(assert (=> b!80523 d!19661))

(declare-fun d!19879 () Bool)

(assert (=> d!19879 (= (apply!80 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37489) (apply!80 lt!37493 lt!37489))))

(declare-fun lt!37902 () Unit!2341)

(assert (=> d!19879 (= lt!37902 (choose!475 lt!37493 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37489))))

(declare-fun e!52913 () Bool)

(assert (=> d!19879 e!52913))

(declare-fun res!42189 () Bool)

(assert (=> d!19879 (=> (not res!42189) (not e!52913))))

(assert (=> d!19879 (= res!42189 (contains!745 lt!37493 lt!37489))))

(assert (=> d!19879 (= (addApplyDifferent!56 lt!37493 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37489) lt!37902)))

(declare-fun b!81055 () Bool)

(assert (=> b!81055 (= e!52913 (not (= lt!37489 lt!37491)))))

(assert (= (and d!19879 res!42189) b!81055))

(assert (=> d!19879 m!82007))

(declare-fun m!82979 () Bool)

(assert (=> d!19879 m!82979))

(declare-fun m!82981 () Bool)

(assert (=> d!19879 m!82981))

(assert (=> d!19879 m!82007))

(assert (=> d!19879 m!82009))

(assert (=> d!19879 m!82015))

(assert (=> b!80523 d!19879))

(declare-fun d!19881 () Bool)

(assert (=> d!19881 (contains!745 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37479)))

(declare-fun lt!37905 () Unit!2341)

(declare-fun choose!476 (ListLongMap!1451 (_ BitVec 64) V!3003 (_ BitVec 64)) Unit!2341)

(assert (=> d!19881 (= lt!37905 (choose!476 lt!37486 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37479))))

(assert (=> d!19881 (contains!745 lt!37486 lt!37479)))

(assert (=> d!19881 (= (addStillContains!56 lt!37486 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37479) lt!37905)))

(declare-fun bs!3426 () Bool)

(assert (= bs!3426 d!19881))

(assert (=> bs!3426 m!82011))

(assert (=> bs!3426 m!82011))

(assert (=> bs!3426 m!82023))

(declare-fun m!82983 () Bool)

(assert (=> bs!3426 m!82983))

(declare-fun m!82985 () Bool)

(assert (=> bs!3426 m!82985))

(assert (=> b!80523 d!19881))

(declare-fun d!19883 () Bool)

(assert (=> d!19883 (= (apply!80 lt!37487 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1182 (getValueByKey!138 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3427 () Bool)

(assert (= bs!3427 d!19883))

(declare-fun m!82987 () Bool)

(assert (=> bs!3427 m!82987))

(assert (=> bs!3427 m!82987))

(declare-fun m!82989 () Bool)

(assert (=> bs!3427 m!82989))

(assert (=> b!80525 d!19883))

(assert (=> b!80450 d!19773))

(declare-fun d!19885 () Bool)

(assert (=> d!19885 (isDefined!91 (getValueByKey!138 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun lt!37908 () Unit!2341)

(declare-fun choose!477 (List!1511 (_ BitVec 64)) Unit!2341)

(assert (=> d!19885 (= lt!37908 (choose!477 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun e!52916 () Bool)

(assert (=> d!19885 e!52916))

(declare-fun res!42192 () Bool)

(assert (=> d!19885 (=> (not res!42192) (not e!52916))))

(assert (=> d!19885 (= res!42192 (isStrictlySorted!296 (toList!741 lt!37271)))))

(assert (=> d!19885 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) lt!37908)))

(declare-fun b!81059 () Bool)

(assert (=> b!81059 (= e!52916 (containsKey!142 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!19885 res!42192) b!81059))

(assert (=> d!19885 m!81811))

(assert (=> d!19885 m!81933))

(assert (=> d!19885 m!81933))

(assert (=> d!19885 m!81935))

(assert (=> d!19885 m!81811))

(declare-fun m!82991 () Bool)

(assert (=> d!19885 m!82991))

(declare-fun m!82993 () Bool)

(assert (=> d!19885 m!82993))

(assert (=> b!81059 m!81811))

(assert (=> b!81059 m!81929))

(assert (=> b!80351 d!19885))

(declare-fun d!19887 () Bool)

(declare-fun isEmpty!331 (Option!144) Bool)

(assert (=> d!19887 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun bs!3428 () Bool)

(assert (= bs!3428 d!19887))

(assert (=> bs!3428 m!81933))

(declare-fun m!82995 () Bool)

(assert (=> bs!3428 m!82995))

(assert (=> b!80351 d!19887))

(declare-fun d!19889 () Bool)

(declare-fun c!12726 () Bool)

(assert (=> d!19889 (= c!12726 (and ((_ is Cons!1507) (toList!741 lt!37271)) (= (_1!1101 (h!2096 (toList!741 lt!37271))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(declare-fun e!52917 () Option!144)

(assert (=> d!19889 (= (getValueByKey!138 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) e!52917)))

(declare-fun b!81061 () Bool)

(declare-fun e!52918 () Option!144)

(assert (=> b!81061 (= e!52917 e!52918)))

(declare-fun c!12727 () Bool)

(assert (=> b!81061 (= c!12727 (and ((_ is Cons!1507) (toList!741 lt!37271)) (not (= (_1!1101 (h!2096 (toList!741 lt!37271))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun b!81062 () Bool)

(assert (=> b!81062 (= e!52918 (getValueByKey!138 (t!5178 (toList!741 lt!37271)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!81063 () Bool)

(assert (=> b!81063 (= e!52918 None!142)))

(declare-fun b!81060 () Bool)

(assert (=> b!81060 (= e!52917 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37271)))))))

(assert (= (and d!19889 c!12726) b!81060))

(assert (= (and d!19889 (not c!12726)) b!81061))

(assert (= (and b!81061 c!12727) b!81062))

(assert (= (and b!81061 (not c!12727)) b!81063))

(assert (=> b!81062 m!81811))

(declare-fun m!82997 () Bool)

(assert (=> b!81062 m!82997))

(assert (=> b!80351 d!19889))

(declare-fun d!19891 () Bool)

(assert (=> d!19891 (= (inRange!0 (ite c!12572 (ite c!12577 (index!3100 lt!37430) (ite c!12579 (index!3099 lt!37412) (index!3102 lt!37412))) (ite c!12578 (index!3100 lt!37419) (ite c!12580 (index!3099 lt!37420) (index!3102 lt!37420)))) (mask!6299 newMap!16)) (and (bvsge (ite c!12572 (ite c!12577 (index!3100 lt!37430) (ite c!12579 (index!3099 lt!37412) (index!3102 lt!37412))) (ite c!12578 (index!3100 lt!37419) (ite c!12580 (index!3099 lt!37420) (index!3102 lt!37420)))) #b00000000000000000000000000000000) (bvslt (ite c!12572 (ite c!12577 (index!3100 lt!37430) (ite c!12579 (index!3099 lt!37412) (index!3102 lt!37412))) (ite c!12578 (index!3100 lt!37419) (ite c!12580 (index!3099 lt!37420) (index!3102 lt!37420)))) (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7476 d!19891))

(assert (=> b!80353 d!19887))

(assert (=> b!80353 d!19889))

(declare-fun d!19893 () Bool)

(declare-fun e!52919 () Bool)

(assert (=> d!19893 e!52919))

(declare-fun res!42193 () Bool)

(assert (=> d!19893 (=> res!42193 e!52919)))

(declare-fun lt!37910 () Bool)

(assert (=> d!19893 (= res!42193 (not lt!37910))))

(declare-fun lt!37909 () Bool)

(assert (=> d!19893 (= lt!37910 lt!37909)))

(declare-fun lt!37912 () Unit!2341)

(declare-fun e!52920 () Unit!2341)

(assert (=> d!19893 (= lt!37912 e!52920)))

(declare-fun c!12728 () Bool)

(assert (=> d!19893 (= c!12728 lt!37909)))

(assert (=> d!19893 (= lt!37909 (containsKey!142 (toList!741 lt!37508) (_1!1101 lt!37278)))))

(assert (=> d!19893 (= (contains!745 lt!37508 (_1!1101 lt!37278)) lt!37910)))

(declare-fun b!81064 () Bool)

(declare-fun lt!37911 () Unit!2341)

(assert (=> b!81064 (= e!52920 lt!37911)))

(assert (=> b!81064 (= lt!37911 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37508) (_1!1101 lt!37278)))))

(assert (=> b!81064 (isDefined!91 (getValueByKey!138 (toList!741 lt!37508) (_1!1101 lt!37278)))))

(declare-fun b!81065 () Bool)

(declare-fun Unit!2366 () Unit!2341)

(assert (=> b!81065 (= e!52920 Unit!2366)))

(declare-fun b!81066 () Bool)

(assert (=> b!81066 (= e!52919 (isDefined!91 (getValueByKey!138 (toList!741 lt!37508) (_1!1101 lt!37278))))))

(assert (= (and d!19893 c!12728) b!81064))

(assert (= (and d!19893 (not c!12728)) b!81065))

(assert (= (and d!19893 (not res!42193)) b!81066))

(declare-fun m!82999 () Bool)

(assert (=> d!19893 m!82999))

(declare-fun m!83001 () Bool)

(assert (=> b!81064 m!83001))

(assert (=> b!81064 m!82055))

(assert (=> b!81064 m!82055))

(declare-fun m!83003 () Bool)

(assert (=> b!81064 m!83003))

(assert (=> b!81066 m!82055))

(assert (=> b!81066 m!82055))

(assert (=> b!81066 m!83003))

(assert (=> d!19655 d!19893))

(declare-fun d!19895 () Bool)

(declare-fun c!12729 () Bool)

(assert (=> d!19895 (= c!12729 (and ((_ is Cons!1507) lt!37510) (= (_1!1101 (h!2096 lt!37510)) (_1!1101 lt!37278))))))

(declare-fun e!52921 () Option!144)

(assert (=> d!19895 (= (getValueByKey!138 lt!37510 (_1!1101 lt!37278)) e!52921)))

(declare-fun b!81068 () Bool)

(declare-fun e!52922 () Option!144)

(assert (=> b!81068 (= e!52921 e!52922)))

(declare-fun c!12730 () Bool)

(assert (=> b!81068 (= c!12730 (and ((_ is Cons!1507) lt!37510) (not (= (_1!1101 (h!2096 lt!37510)) (_1!1101 lt!37278)))))))

(declare-fun b!81069 () Bool)

(assert (=> b!81069 (= e!52922 (getValueByKey!138 (t!5178 lt!37510) (_1!1101 lt!37278)))))

(declare-fun b!81070 () Bool)

(assert (=> b!81070 (= e!52922 None!142)))

(declare-fun b!81067 () Bool)

(assert (=> b!81067 (= e!52921 (Some!143 (_2!1101 (h!2096 lt!37510))))))

(assert (= (and d!19895 c!12729) b!81067))

(assert (= (and d!19895 (not c!12729)) b!81068))

(assert (= (and b!81068 c!12730) b!81069))

(assert (= (and b!81068 (not c!12730)) b!81070))

(declare-fun m!83005 () Bool)

(assert (=> b!81069 m!83005))

(assert (=> d!19655 d!19895))

(declare-fun d!19897 () Bool)

(assert (=> d!19897 (= (getValueByKey!138 lt!37510 (_1!1101 lt!37278)) (Some!143 (_2!1101 lt!37278)))))

(declare-fun lt!37913 () Unit!2341)

(assert (=> d!19897 (= lt!37913 (choose!470 lt!37510 (_1!1101 lt!37278) (_2!1101 lt!37278)))))

(declare-fun e!52923 () Bool)

(assert (=> d!19897 e!52923))

(declare-fun res!42194 () Bool)

(assert (=> d!19897 (=> (not res!42194) (not e!52923))))

(assert (=> d!19897 (= res!42194 (isStrictlySorted!296 lt!37510))))

(assert (=> d!19897 (= (lemmaContainsTupThenGetReturnValue!55 lt!37510 (_1!1101 lt!37278) (_2!1101 lt!37278)) lt!37913)))

(declare-fun b!81071 () Bool)

(declare-fun res!42195 () Bool)

(assert (=> b!81071 (=> (not res!42195) (not e!52923))))

(assert (=> b!81071 (= res!42195 (containsKey!142 lt!37510 (_1!1101 lt!37278)))))

(declare-fun b!81072 () Bool)

(assert (=> b!81072 (= e!52923 (contains!746 lt!37510 (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(assert (= (and d!19897 res!42194) b!81071))

(assert (= (and b!81071 res!42195) b!81072))

(assert (=> d!19897 m!82049))

(declare-fun m!83007 () Bool)

(assert (=> d!19897 m!83007))

(declare-fun m!83009 () Bool)

(assert (=> d!19897 m!83009))

(declare-fun m!83011 () Bool)

(assert (=> b!81071 m!83011))

(declare-fun m!83013 () Bool)

(assert (=> b!81072 m!83013))

(assert (=> d!19655 d!19897))

(declare-fun b!81073 () Bool)

(declare-fun c!12731 () Bool)

(assert (=> b!81073 (= c!12731 (and ((_ is Cons!1507) (toList!741 lt!37273)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37273))) (_1!1101 lt!37278))))))

(declare-fun e!52924 () List!1511)

(declare-fun e!52925 () List!1511)

(assert (=> b!81073 (= e!52924 e!52925)))

(declare-fun b!81074 () Bool)

(declare-fun call!7560 () List!1511)

(assert (=> b!81074 (= e!52925 call!7560)))

(declare-fun e!52926 () List!1511)

(declare-fun c!12733 () Bool)

(declare-fun b!81075 () Bool)

(assert (=> b!81075 (= e!52926 (ite c!12733 (t!5178 (toList!741 lt!37273)) (ite c!12731 (Cons!1507 (h!2096 (toList!741 lt!37273)) (t!5178 (toList!741 lt!37273))) Nil!1508)))))

(declare-fun d!19899 () Bool)

(declare-fun e!52928 () Bool)

(assert (=> d!19899 e!52928))

(declare-fun res!42197 () Bool)

(assert (=> d!19899 (=> (not res!42197) (not e!52928))))

(declare-fun lt!37914 () List!1511)

(assert (=> d!19899 (= res!42197 (isStrictlySorted!296 lt!37914))))

(declare-fun e!52927 () List!1511)

(assert (=> d!19899 (= lt!37914 e!52927)))

(declare-fun c!12732 () Bool)

(assert (=> d!19899 (= c!12732 (and ((_ is Cons!1507) (toList!741 lt!37273)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37273))) (_1!1101 lt!37278))))))

(assert (=> d!19899 (isStrictlySorted!296 (toList!741 lt!37273))))

(assert (=> d!19899 (= (insertStrictlySorted!58 (toList!741 lt!37273) (_1!1101 lt!37278) (_2!1101 lt!37278)) lt!37914)))

(declare-fun b!81076 () Bool)

(declare-fun call!7562 () List!1511)

(assert (=> b!81076 (= e!52927 call!7562)))

(declare-fun bm!7557 () Bool)

(declare-fun call!7561 () List!1511)

(assert (=> bm!7557 (= call!7561 call!7562)))

(declare-fun bm!7558 () Bool)

(assert (=> bm!7558 (= call!7560 call!7561)))

(declare-fun b!81077 () Bool)

(assert (=> b!81077 (= e!52928 (contains!746 lt!37914 (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(declare-fun b!81078 () Bool)

(assert (=> b!81078 (= e!52927 e!52924)))

(assert (=> b!81078 (= c!12733 (and ((_ is Cons!1507) (toList!741 lt!37273)) (= (_1!1101 (h!2096 (toList!741 lt!37273))) (_1!1101 lt!37278))))))

(declare-fun b!81079 () Bool)

(assert (=> b!81079 (= e!52925 call!7560)))

(declare-fun b!81080 () Bool)

(declare-fun res!42196 () Bool)

(assert (=> b!81080 (=> (not res!42196) (not e!52928))))

(assert (=> b!81080 (= res!42196 (containsKey!142 lt!37914 (_1!1101 lt!37278)))))

(declare-fun bm!7559 () Bool)

(assert (=> bm!7559 (= call!7562 ($colon$colon!70 e!52926 (ite c!12732 (h!2096 (toList!741 lt!37273)) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278)))))))

(declare-fun c!12734 () Bool)

(assert (=> bm!7559 (= c!12734 c!12732)))

(declare-fun b!81081 () Bool)

(assert (=> b!81081 (= e!52926 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37273)) (_1!1101 lt!37278) (_2!1101 lt!37278)))))

(declare-fun b!81082 () Bool)

(assert (=> b!81082 (= e!52924 call!7561)))

(assert (= (and d!19899 c!12732) b!81076))

(assert (= (and d!19899 (not c!12732)) b!81078))

(assert (= (and b!81078 c!12733) b!81082))

(assert (= (and b!81078 (not c!12733)) b!81073))

(assert (= (and b!81073 c!12731) b!81079))

(assert (= (and b!81073 (not c!12731)) b!81074))

(assert (= (or b!81079 b!81074) bm!7558))

(assert (= (or b!81082 bm!7558) bm!7557))

(assert (= (or b!81076 bm!7557) bm!7559))

(assert (= (and bm!7559 c!12734) b!81081))

(assert (= (and bm!7559 (not c!12734)) b!81075))

(assert (= (and d!19899 res!42197) b!81080))

(assert (= (and b!81080 res!42196) b!81077))

(declare-fun m!83015 () Bool)

(assert (=> b!81077 m!83015))

(declare-fun m!83017 () Bool)

(assert (=> b!81080 m!83017))

(declare-fun m!83019 () Bool)

(assert (=> d!19899 m!83019))

(declare-fun m!83021 () Bool)

(assert (=> d!19899 m!83021))

(declare-fun m!83023 () Bool)

(assert (=> b!81081 m!83023))

(declare-fun m!83025 () Bool)

(assert (=> bm!7559 m!83025))

(assert (=> d!19655 d!19899))

(declare-fun d!19901 () Bool)

(declare-fun e!52929 () Bool)

(assert (=> d!19901 e!52929))

(declare-fun res!42198 () Bool)

(assert (=> d!19901 (=> res!42198 e!52929)))

(declare-fun lt!37916 () Bool)

(assert (=> d!19901 (= res!42198 (not lt!37916))))

(declare-fun lt!37915 () Bool)

(assert (=> d!19901 (= lt!37916 lt!37915)))

(declare-fun lt!37918 () Unit!2341)

(declare-fun e!52930 () Unit!2341)

(assert (=> d!19901 (= lt!37918 e!52930)))

(declare-fun c!12735 () Bool)

(assert (=> d!19901 (= c!12735 lt!37915)))

(assert (=> d!19901 (= lt!37915 (containsKey!142 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19901 (= (contains!745 lt!37487 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37916)))

(declare-fun b!81083 () Bool)

(declare-fun lt!37917 () Unit!2341)

(assert (=> b!81083 (= e!52930 lt!37917)))

(assert (=> b!81083 (= lt!37917 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81083 (isDefined!91 (getValueByKey!138 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81084 () Bool)

(declare-fun Unit!2367 () Unit!2341)

(assert (=> b!81084 (= e!52930 Unit!2367)))

(declare-fun b!81085 () Bool)

(assert (=> b!81085 (= e!52929 (isDefined!91 (getValueByKey!138 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19901 c!12735) b!81083))

(assert (= (and d!19901 (not c!12735)) b!81084))

(assert (= (and d!19901 (not res!42198)) b!81085))

(declare-fun m!83027 () Bool)

(assert (=> d!19901 m!83027))

(declare-fun m!83029 () Bool)

(assert (=> b!81083 m!83029))

(assert (=> b!81083 m!82987))

(assert (=> b!81083 m!82987))

(declare-fun m!83031 () Bool)

(assert (=> b!81083 m!83031))

(assert (=> b!81085 m!82987))

(assert (=> b!81085 m!82987))

(assert (=> b!81085 m!83031))

(assert (=> bm!7497 d!19901))

(assert (=> b!80528 d!19845))

(assert (=> b!80637 d!19741))

(declare-fun d!19903 () Bool)

(assert (=> d!19903 (= (+!106 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37414 (zeroValue!2189 newMap!16) lt!37282 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37921 () Unit!2341)

(declare-fun choose!478 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 V!3003 Int) Unit!2341)

(assert (=> d!19903 (= lt!37921 (choose!478 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37414 (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) lt!37282 (defaultEntry!2293 newMap!16)))))

(assert (=> d!19903 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19903 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37414 (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) lt!37282 (defaultEntry!2293 newMap!16)) lt!37921)))

(declare-fun bs!3429 () Bool)

(assert (= bs!3429 d!19903))

(assert (=> bs!3429 m!81965))

(declare-fun m!83033 () Bool)

(assert (=> bs!3429 m!83033))

(declare-fun m!83035 () Bool)

(assert (=> bs!3429 m!83035))

(assert (=> bs!3429 m!81965))

(declare-fun m!83037 () Bool)

(assert (=> bs!3429 m!83037))

(assert (=> bs!3429 m!82321))

(assert (=> b!80477 d!19903))

(assert (=> b!80530 d!19845))

(declare-fun d!19905 () Bool)

(declare-fun e!52931 () Bool)

(assert (=> d!19905 e!52931))

(declare-fun res!42199 () Bool)

(assert (=> d!19905 (=> res!42199 e!52931)))

(declare-fun lt!37923 () Bool)

(assert (=> d!19905 (= res!42199 (not lt!37923))))

(declare-fun lt!37922 () Bool)

(assert (=> d!19905 (= lt!37923 lt!37922)))

(declare-fun lt!37925 () Unit!2341)

(declare-fun e!52932 () Unit!2341)

(assert (=> d!19905 (= lt!37925 e!52932)))

(declare-fun c!12736 () Bool)

(assert (=> d!19905 (= c!12736 lt!37922)))

(assert (=> d!19905 (= lt!37922 (containsKey!142 (toList!741 lt!37549) (_1!1101 lt!37283)))))

(assert (=> d!19905 (= (contains!745 lt!37549 (_1!1101 lt!37283)) lt!37923)))

(declare-fun b!81086 () Bool)

(declare-fun lt!37924 () Unit!2341)

(assert (=> b!81086 (= e!52932 lt!37924)))

(assert (=> b!81086 (= lt!37924 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37549) (_1!1101 lt!37283)))))

(assert (=> b!81086 (isDefined!91 (getValueByKey!138 (toList!741 lt!37549) (_1!1101 lt!37283)))))

(declare-fun b!81087 () Bool)

(declare-fun Unit!2368 () Unit!2341)

(assert (=> b!81087 (= e!52932 Unit!2368)))

(declare-fun b!81088 () Bool)

(assert (=> b!81088 (= e!52931 (isDefined!91 (getValueByKey!138 (toList!741 lt!37549) (_1!1101 lt!37283))))))

(assert (= (and d!19905 c!12736) b!81086))

(assert (= (and d!19905 (not c!12736)) b!81087))

(assert (= (and d!19905 (not res!42199)) b!81088))

(declare-fun m!83039 () Bool)

(assert (=> d!19905 m!83039))

(declare-fun m!83041 () Bool)

(assert (=> b!81086 m!83041))

(assert (=> b!81086 m!82143))

(assert (=> b!81086 m!82143))

(declare-fun m!83043 () Bool)

(assert (=> b!81086 m!83043))

(assert (=> b!81088 m!82143))

(assert (=> b!81088 m!82143))

(assert (=> b!81088 m!83043))

(assert (=> d!19669 d!19905))

(declare-fun d!19907 () Bool)

(declare-fun c!12737 () Bool)

(assert (=> d!19907 (= c!12737 (and ((_ is Cons!1507) lt!37551) (= (_1!1101 (h!2096 lt!37551)) (_1!1101 lt!37283))))))

(declare-fun e!52933 () Option!144)

(assert (=> d!19907 (= (getValueByKey!138 lt!37551 (_1!1101 lt!37283)) e!52933)))

(declare-fun b!81090 () Bool)

(declare-fun e!52934 () Option!144)

(assert (=> b!81090 (= e!52933 e!52934)))

(declare-fun c!12738 () Bool)

(assert (=> b!81090 (= c!12738 (and ((_ is Cons!1507) lt!37551) (not (= (_1!1101 (h!2096 lt!37551)) (_1!1101 lt!37283)))))))

(declare-fun b!81091 () Bool)

(assert (=> b!81091 (= e!52934 (getValueByKey!138 (t!5178 lt!37551) (_1!1101 lt!37283)))))

(declare-fun b!81092 () Bool)

(assert (=> b!81092 (= e!52934 None!142)))

(declare-fun b!81089 () Bool)

(assert (=> b!81089 (= e!52933 (Some!143 (_2!1101 (h!2096 lt!37551))))))

(assert (= (and d!19907 c!12737) b!81089))

(assert (= (and d!19907 (not c!12737)) b!81090))

(assert (= (and b!81090 c!12738) b!81091))

(assert (= (and b!81090 (not c!12738)) b!81092))

(declare-fun m!83045 () Bool)

(assert (=> b!81091 m!83045))

(assert (=> d!19669 d!19907))

(declare-fun d!19909 () Bool)

(assert (=> d!19909 (= (getValueByKey!138 lt!37551 (_1!1101 lt!37283)) (Some!143 (_2!1101 lt!37283)))))

(declare-fun lt!37926 () Unit!2341)

(assert (=> d!19909 (= lt!37926 (choose!470 lt!37551 (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(declare-fun e!52935 () Bool)

(assert (=> d!19909 e!52935))

(declare-fun res!42200 () Bool)

(assert (=> d!19909 (=> (not res!42200) (not e!52935))))

(assert (=> d!19909 (= res!42200 (isStrictlySorted!296 lt!37551))))

(assert (=> d!19909 (= (lemmaContainsTupThenGetReturnValue!55 lt!37551 (_1!1101 lt!37283) (_2!1101 lt!37283)) lt!37926)))

(declare-fun b!81093 () Bool)

(declare-fun res!42201 () Bool)

(assert (=> b!81093 (=> (not res!42201) (not e!52935))))

(assert (=> b!81093 (= res!42201 (containsKey!142 lt!37551 (_1!1101 lt!37283)))))

(declare-fun b!81094 () Bool)

(assert (=> b!81094 (= e!52935 (contains!746 lt!37551 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(assert (= (and d!19909 res!42200) b!81093))

(assert (= (and b!81093 res!42201) b!81094))

(assert (=> d!19909 m!82137))

(declare-fun m!83047 () Bool)

(assert (=> d!19909 m!83047))

(declare-fun m!83049 () Bool)

(assert (=> d!19909 m!83049))

(declare-fun m!83051 () Bool)

(assert (=> b!81093 m!83051))

(declare-fun m!83053 () Bool)

(assert (=> b!81094 m!83053))

(assert (=> d!19669 d!19909))

(declare-fun b!81095 () Bool)

(declare-fun c!12739 () Bool)

(assert (=> b!81095 (= c!12739 (and ((_ is Cons!1507) (toList!741 lt!37276)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 lt!37283))))))

(declare-fun e!52936 () List!1511)

(declare-fun e!52937 () List!1511)

(assert (=> b!81095 (= e!52936 e!52937)))

(declare-fun b!81096 () Bool)

(declare-fun call!7563 () List!1511)

(assert (=> b!81096 (= e!52937 call!7563)))

(declare-fun e!52938 () List!1511)

(declare-fun c!12741 () Bool)

(declare-fun b!81097 () Bool)

(assert (=> b!81097 (= e!52938 (ite c!12741 (t!5178 (toList!741 lt!37276)) (ite c!12739 (Cons!1507 (h!2096 (toList!741 lt!37276)) (t!5178 (toList!741 lt!37276))) Nil!1508)))))

(declare-fun d!19911 () Bool)

(declare-fun e!52940 () Bool)

(assert (=> d!19911 e!52940))

(declare-fun res!42203 () Bool)

(assert (=> d!19911 (=> (not res!42203) (not e!52940))))

(declare-fun lt!37927 () List!1511)

(assert (=> d!19911 (= res!42203 (isStrictlySorted!296 lt!37927))))

(declare-fun e!52939 () List!1511)

(assert (=> d!19911 (= lt!37927 e!52939)))

(declare-fun c!12740 () Bool)

(assert (=> d!19911 (= c!12740 (and ((_ is Cons!1507) (toList!741 lt!37276)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 lt!37283))))))

(assert (=> d!19911 (isStrictlySorted!296 (toList!741 lt!37276))))

(assert (=> d!19911 (= (insertStrictlySorted!58 (toList!741 lt!37276) (_1!1101 lt!37283) (_2!1101 lt!37283)) lt!37927)))

(declare-fun b!81098 () Bool)

(declare-fun call!7565 () List!1511)

(assert (=> b!81098 (= e!52939 call!7565)))

(declare-fun bm!7560 () Bool)

(declare-fun call!7564 () List!1511)

(assert (=> bm!7560 (= call!7564 call!7565)))

(declare-fun bm!7561 () Bool)

(assert (=> bm!7561 (= call!7563 call!7564)))

(declare-fun b!81099 () Bool)

(assert (=> b!81099 (= e!52940 (contains!746 lt!37927 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun b!81100 () Bool)

(assert (=> b!81100 (= e!52939 e!52936)))

(assert (=> b!81100 (= c!12741 (and ((_ is Cons!1507) (toList!741 lt!37276)) (= (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 lt!37283))))))

(declare-fun b!81101 () Bool)

(assert (=> b!81101 (= e!52937 call!7563)))

(declare-fun b!81102 () Bool)

(declare-fun res!42202 () Bool)

(assert (=> b!81102 (=> (not res!42202) (not e!52940))))

(assert (=> b!81102 (= res!42202 (containsKey!142 lt!37927 (_1!1101 lt!37283)))))

(declare-fun bm!7562 () Bool)

(assert (=> bm!7562 (= call!7565 ($colon$colon!70 e!52938 (ite c!12740 (h!2096 (toList!741 lt!37276)) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283)))))))

(declare-fun c!12742 () Bool)

(assert (=> bm!7562 (= c!12742 c!12740)))

(declare-fun b!81103 () Bool)

(assert (=> b!81103 (= e!52938 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37276)) (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(declare-fun b!81104 () Bool)

(assert (=> b!81104 (= e!52936 call!7564)))

(assert (= (and d!19911 c!12740) b!81098))

(assert (= (and d!19911 (not c!12740)) b!81100))

(assert (= (and b!81100 c!12741) b!81104))

(assert (= (and b!81100 (not c!12741)) b!81095))

(assert (= (and b!81095 c!12739) b!81101))

(assert (= (and b!81095 (not c!12739)) b!81096))

(assert (= (or b!81101 b!81096) bm!7561))

(assert (= (or b!81104 bm!7561) bm!7560))

(assert (= (or b!81098 bm!7560) bm!7562))

(assert (= (and bm!7562 c!12742) b!81103))

(assert (= (and bm!7562 (not c!12742)) b!81097))

(assert (= (and d!19911 res!42203) b!81102))

(assert (= (and b!81102 res!42202) b!81099))

(declare-fun m!83055 () Bool)

(assert (=> b!81099 m!83055))

(declare-fun m!83057 () Bool)

(assert (=> b!81102 m!83057))

(declare-fun m!83059 () Bool)

(assert (=> d!19911 m!83059))

(declare-fun m!83061 () Bool)

(assert (=> d!19911 m!83061))

(declare-fun m!83063 () Bool)

(assert (=> b!81103 m!83063))

(declare-fun m!83065 () Bool)

(assert (=> bm!7562 m!83065))

(assert (=> d!19669 d!19911))

(declare-fun d!19913 () Bool)

(declare-fun e!52941 () Bool)

(assert (=> d!19913 e!52941))

(declare-fun res!42204 () Bool)

(assert (=> d!19913 (=> res!42204 e!52941)))

(declare-fun lt!37929 () Bool)

(assert (=> d!19913 (= res!42204 (not lt!37929))))

(declare-fun lt!37928 () Bool)

(assert (=> d!19913 (= lt!37929 lt!37928)))

(declare-fun lt!37931 () Unit!2341)

(declare-fun e!52942 () Unit!2341)

(assert (=> d!19913 (= lt!37931 e!52942)))

(declare-fun c!12743 () Bool)

(assert (=> d!19913 (= c!12743 lt!37928)))

(assert (=> d!19913 (= lt!37928 (containsKey!142 (toList!741 lt!37534) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19913 (= (contains!745 lt!37534 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37929)))

(declare-fun b!81105 () Bool)

(declare-fun lt!37930 () Unit!2341)

(assert (=> b!81105 (= e!52942 lt!37930)))

(assert (=> b!81105 (= lt!37930 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37534) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81105 (isDefined!91 (getValueByKey!138 (toList!741 lt!37534) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81106 () Bool)

(declare-fun Unit!2369 () Unit!2341)

(assert (=> b!81106 (= e!52942 Unit!2369)))

(declare-fun b!81107 () Bool)

(assert (=> b!81107 (= e!52941 (isDefined!91 (getValueByKey!138 (toList!741 lt!37534) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19913 c!12743) b!81105))

(assert (= (and d!19913 (not c!12743)) b!81106))

(assert (= (and d!19913 (not res!42204)) b!81107))

(declare-fun m!83067 () Bool)

(assert (=> d!19913 m!83067))

(declare-fun m!83069 () Bool)

(assert (=> b!81105 m!83069))

(declare-fun m!83071 () Bool)

(assert (=> b!81105 m!83071))

(assert (=> b!81105 m!83071))

(declare-fun m!83073 () Bool)

(assert (=> b!81105 m!83073))

(assert (=> b!81107 m!83071))

(assert (=> b!81107 m!83071))

(assert (=> b!81107 m!83073))

(assert (=> b!80578 d!19913))

(declare-fun d!19915 () Bool)

(declare-fun e!52943 () Bool)

(assert (=> d!19915 e!52943))

(declare-fun res!42205 () Bool)

(assert (=> d!19915 (=> res!42205 e!52943)))

(declare-fun lt!37933 () Bool)

(assert (=> d!19915 (= res!42205 (not lt!37933))))

(declare-fun lt!37932 () Bool)

(assert (=> d!19915 (= lt!37933 lt!37932)))

(declare-fun lt!37935 () Unit!2341)

(declare-fun e!52944 () Unit!2341)

(assert (=> d!19915 (= lt!37935 e!52944)))

(declare-fun c!12744 () Bool)

(assert (=> d!19915 (= c!12744 lt!37932)))

(assert (=> d!19915 (= lt!37932 (containsKey!142 (toList!741 lt!37553) (_1!1101 lt!37278)))))

(assert (=> d!19915 (= (contains!745 lt!37553 (_1!1101 lt!37278)) lt!37933)))

(declare-fun b!81108 () Bool)

(declare-fun lt!37934 () Unit!2341)

(assert (=> b!81108 (= e!52944 lt!37934)))

(assert (=> b!81108 (= lt!37934 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37553) (_1!1101 lt!37278)))))

(assert (=> b!81108 (isDefined!91 (getValueByKey!138 (toList!741 lt!37553) (_1!1101 lt!37278)))))

(declare-fun b!81109 () Bool)

(declare-fun Unit!2370 () Unit!2341)

(assert (=> b!81109 (= e!52944 Unit!2370)))

(declare-fun b!81110 () Bool)

(assert (=> b!81110 (= e!52943 (isDefined!91 (getValueByKey!138 (toList!741 lt!37553) (_1!1101 lt!37278))))))

(assert (= (and d!19915 c!12744) b!81108))

(assert (= (and d!19915 (not c!12744)) b!81109))

(assert (= (and d!19915 (not res!42205)) b!81110))

(declare-fun m!83075 () Bool)

(assert (=> d!19915 m!83075))

(declare-fun m!83077 () Bool)

(assert (=> b!81108 m!83077))

(assert (=> b!81108 m!82155))

(assert (=> b!81108 m!82155))

(declare-fun m!83079 () Bool)

(assert (=> b!81108 m!83079))

(assert (=> b!81110 m!82155))

(assert (=> b!81110 m!82155))

(assert (=> b!81110 m!83079))

(assert (=> d!19671 d!19915))

(declare-fun d!19917 () Bool)

(declare-fun c!12745 () Bool)

(assert (=> d!19917 (= c!12745 (and ((_ is Cons!1507) lt!37555) (= (_1!1101 (h!2096 lt!37555)) (_1!1101 lt!37278))))))

(declare-fun e!52945 () Option!144)

(assert (=> d!19917 (= (getValueByKey!138 lt!37555 (_1!1101 lt!37278)) e!52945)))

(declare-fun b!81112 () Bool)

(declare-fun e!52946 () Option!144)

(assert (=> b!81112 (= e!52945 e!52946)))

(declare-fun c!12746 () Bool)

(assert (=> b!81112 (= c!12746 (and ((_ is Cons!1507) lt!37555) (not (= (_1!1101 (h!2096 lt!37555)) (_1!1101 lt!37278)))))))

(declare-fun b!81113 () Bool)

(assert (=> b!81113 (= e!52946 (getValueByKey!138 (t!5178 lt!37555) (_1!1101 lt!37278)))))

(declare-fun b!81114 () Bool)

(assert (=> b!81114 (= e!52946 None!142)))

(declare-fun b!81111 () Bool)

(assert (=> b!81111 (= e!52945 (Some!143 (_2!1101 (h!2096 lt!37555))))))

(assert (= (and d!19917 c!12745) b!81111))

(assert (= (and d!19917 (not c!12745)) b!81112))

(assert (= (and b!81112 c!12746) b!81113))

(assert (= (and b!81112 (not c!12746)) b!81114))

(declare-fun m!83081 () Bool)

(assert (=> b!81113 m!83081))

(assert (=> d!19671 d!19917))

(declare-fun d!19919 () Bool)

(assert (=> d!19919 (= (getValueByKey!138 lt!37555 (_1!1101 lt!37278)) (Some!143 (_2!1101 lt!37278)))))

(declare-fun lt!37936 () Unit!2341)

(assert (=> d!19919 (= lt!37936 (choose!470 lt!37555 (_1!1101 lt!37278) (_2!1101 lt!37278)))))

(declare-fun e!52947 () Bool)

(assert (=> d!19919 e!52947))

(declare-fun res!42206 () Bool)

(assert (=> d!19919 (=> (not res!42206) (not e!52947))))

(assert (=> d!19919 (= res!42206 (isStrictlySorted!296 lt!37555))))

(assert (=> d!19919 (= (lemmaContainsTupThenGetReturnValue!55 lt!37555 (_1!1101 lt!37278) (_2!1101 lt!37278)) lt!37936)))

(declare-fun b!81115 () Bool)

(declare-fun res!42207 () Bool)

(assert (=> b!81115 (=> (not res!42207) (not e!52947))))

(assert (=> b!81115 (= res!42207 (containsKey!142 lt!37555 (_1!1101 lt!37278)))))

(declare-fun b!81116 () Bool)

(assert (=> b!81116 (= e!52947 (contains!746 lt!37555 (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(assert (= (and d!19919 res!42206) b!81115))

(assert (= (and b!81115 res!42207) b!81116))

(assert (=> d!19919 m!82149))

(declare-fun m!83083 () Bool)

(assert (=> d!19919 m!83083))

(declare-fun m!83085 () Bool)

(assert (=> d!19919 m!83085))

(declare-fun m!83087 () Bool)

(assert (=> b!81115 m!83087))

(declare-fun m!83089 () Bool)

(assert (=> b!81116 m!83089))

(assert (=> d!19671 d!19919))

(declare-fun b!81117 () Bool)

(declare-fun c!12747 () Bool)

(assert (=> b!81117 (= c!12747 (and ((_ is Cons!1507) (toList!741 lt!37276)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 lt!37278))))))

(declare-fun e!52948 () List!1511)

(declare-fun e!52949 () List!1511)

(assert (=> b!81117 (= e!52948 e!52949)))

(declare-fun b!81118 () Bool)

(declare-fun call!7566 () List!1511)

(assert (=> b!81118 (= e!52949 call!7566)))

(declare-fun c!12749 () Bool)

(declare-fun b!81119 () Bool)

(declare-fun e!52950 () List!1511)

(assert (=> b!81119 (= e!52950 (ite c!12749 (t!5178 (toList!741 lt!37276)) (ite c!12747 (Cons!1507 (h!2096 (toList!741 lt!37276)) (t!5178 (toList!741 lt!37276))) Nil!1508)))))

(declare-fun d!19921 () Bool)

(declare-fun e!52952 () Bool)

(assert (=> d!19921 e!52952))

(declare-fun res!42209 () Bool)

(assert (=> d!19921 (=> (not res!42209) (not e!52952))))

(declare-fun lt!37937 () List!1511)

(assert (=> d!19921 (= res!42209 (isStrictlySorted!296 lt!37937))))

(declare-fun e!52951 () List!1511)

(assert (=> d!19921 (= lt!37937 e!52951)))

(declare-fun c!12748 () Bool)

(assert (=> d!19921 (= c!12748 (and ((_ is Cons!1507) (toList!741 lt!37276)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 lt!37278))))))

(assert (=> d!19921 (isStrictlySorted!296 (toList!741 lt!37276))))

(assert (=> d!19921 (= (insertStrictlySorted!58 (toList!741 lt!37276) (_1!1101 lt!37278) (_2!1101 lt!37278)) lt!37937)))

(declare-fun b!81120 () Bool)

(declare-fun call!7568 () List!1511)

(assert (=> b!81120 (= e!52951 call!7568)))

(declare-fun bm!7563 () Bool)

(declare-fun call!7567 () List!1511)

(assert (=> bm!7563 (= call!7567 call!7568)))

(declare-fun bm!7564 () Bool)

(assert (=> bm!7564 (= call!7566 call!7567)))

(declare-fun b!81121 () Bool)

(assert (=> b!81121 (= e!52952 (contains!746 lt!37937 (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(declare-fun b!81122 () Bool)

(assert (=> b!81122 (= e!52951 e!52948)))

(assert (=> b!81122 (= c!12749 (and ((_ is Cons!1507) (toList!741 lt!37276)) (= (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 lt!37278))))))

(declare-fun b!81123 () Bool)

(assert (=> b!81123 (= e!52949 call!7566)))

(declare-fun b!81124 () Bool)

(declare-fun res!42208 () Bool)

(assert (=> b!81124 (=> (not res!42208) (not e!52952))))

(assert (=> b!81124 (= res!42208 (containsKey!142 lt!37937 (_1!1101 lt!37278)))))

(declare-fun bm!7565 () Bool)

(assert (=> bm!7565 (= call!7568 ($colon$colon!70 e!52950 (ite c!12748 (h!2096 (toList!741 lt!37276)) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278)))))))

(declare-fun c!12750 () Bool)

(assert (=> bm!7565 (= c!12750 c!12748)))

(declare-fun b!81125 () Bool)

(assert (=> b!81125 (= e!52950 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37276)) (_1!1101 lt!37278) (_2!1101 lt!37278)))))

(declare-fun b!81126 () Bool)

(assert (=> b!81126 (= e!52948 call!7567)))

(assert (= (and d!19921 c!12748) b!81120))

(assert (= (and d!19921 (not c!12748)) b!81122))

(assert (= (and b!81122 c!12749) b!81126))

(assert (= (and b!81122 (not c!12749)) b!81117))

(assert (= (and b!81117 c!12747) b!81123))

(assert (= (and b!81117 (not c!12747)) b!81118))

(assert (= (or b!81123 b!81118) bm!7564))

(assert (= (or b!81126 bm!7564) bm!7563))

(assert (= (or b!81120 bm!7563) bm!7565))

(assert (= (and bm!7565 c!12750) b!81125))

(assert (= (and bm!7565 (not c!12750)) b!81119))

(assert (= (and d!19921 res!42209) b!81124))

(assert (= (and b!81124 res!42208) b!81121))

(declare-fun m!83091 () Bool)

(assert (=> b!81121 m!83091))

(declare-fun m!83093 () Bool)

(assert (=> b!81124 m!83093))

(declare-fun m!83095 () Bool)

(assert (=> d!19921 m!83095))

(assert (=> d!19921 m!83061))

(declare-fun m!83097 () Bool)

(assert (=> b!81125 m!83097))

(declare-fun m!83099 () Bool)

(assert (=> bm!7565 m!83099))

(assert (=> d!19671 d!19921))

(assert (=> b!80455 d!19767))

(declare-fun d!19923 () Bool)

(declare-fun lt!37940 () (_ BitVec 32))

(assert (=> d!19923 (and (bvsge lt!37940 #b00000000000000000000000000000000) (bvsle lt!37940 (bvsub (size!2143 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!52957 () (_ BitVec 32))

(assert (=> d!19923 (= lt!37940 e!52957)))

(declare-fun c!12755 () Bool)

(assert (=> d!19923 (= c!12755 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(assert (=> d!19923 (and (bvsle #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2143 (_keys!3957 newMap!16)) (size!2143 (_keys!3957 newMap!16))))))

(assert (=> d!19923 (= (arrayCountValidKeys!0 (_keys!3957 newMap!16) #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) lt!37940)))

(declare-fun bm!7568 () Bool)

(declare-fun call!7571 () (_ BitVec 32))

(assert (=> bm!7568 (= call!7571 (arrayCountValidKeys!0 (_keys!3957 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81135 () Bool)

(declare-fun e!52958 () (_ BitVec 32))

(assert (=> b!81135 (= e!52958 call!7571)))

(declare-fun b!81136 () Bool)

(assert (=> b!81136 (= e!52957 #b00000000000000000000000000000000)))

(declare-fun b!81137 () Bool)

(assert (=> b!81137 (= e!52958 (bvadd #b00000000000000000000000000000001 call!7571))))

(declare-fun b!81138 () Bool)

(assert (=> b!81138 (= e!52957 e!52958)))

(declare-fun c!12756 () Bool)

(assert (=> b!81138 (= c!12756 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!19923 c!12755) b!81136))

(assert (= (and d!19923 (not c!12755)) b!81138))

(assert (= (and b!81138 c!12756) b!81137))

(assert (= (and b!81138 (not c!12756)) b!81135))

(assert (= (or b!81137 b!81135) bm!7568))

(declare-fun m!83101 () Bool)

(assert (=> bm!7568 m!83101))

(assert (=> b!81138 m!82265))

(assert (=> b!81138 m!82265))

(assert (=> b!81138 m!82313))

(assert (=> b!80609 d!19923))

(declare-fun b!81156 () Bool)

(declare-fun res!42221 () Bool)

(declare-fun e!52970 () Bool)

(assert (=> b!81156 (=> (not res!42221) (not e!52970))))

(declare-fun call!7577 () Bool)

(assert (=> b!81156 (= res!42221 call!7577)))

(declare-fun e!52969 () Bool)

(assert (=> b!81156 (= e!52969 e!52970)))

(declare-fun b!81157 () Bool)

(declare-fun call!7576 () Bool)

(assert (=> b!81157 (= e!52970 (not call!7576))))

(declare-fun b!81158 () Bool)

(declare-fun res!42219 () Bool)

(assert (=> b!81158 (=> (not res!42219) (not e!52970))))

(declare-fun lt!37945 () SeekEntryResult!241)

(assert (=> b!81158 (= res!42219 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3102 lt!37945)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81158 (and (bvsge (index!3102 lt!37945) #b00000000000000000000000000000000) (bvslt (index!3102 lt!37945) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81159 () Bool)

(assert (=> b!81159 (= e!52969 ((_ is Undefined!241) lt!37945))))

(declare-fun c!12762 () Bool)

(declare-fun bm!7573 () Bool)

(assert (=> bm!7573 (= call!7577 (inRange!0 (ite c!12762 (index!3099 lt!37945) (index!3102 lt!37945)) (mask!6299 newMap!16)))))

(declare-fun b!81160 () Bool)

(declare-fun e!52968 () Bool)

(declare-fun e!52967 () Bool)

(assert (=> b!81160 (= e!52968 e!52967)))

(declare-fun res!42220 () Bool)

(assert (=> b!81160 (= res!42220 call!7577)))

(assert (=> b!81160 (=> (not res!42220) (not e!52967))))

(declare-fun b!81161 () Bool)

(assert (=> b!81161 (= e!52968 e!52969)))

(declare-fun c!12761 () Bool)

(assert (=> b!81161 (= c!12761 ((_ is MissingVacant!241) lt!37945))))

(declare-fun d!19925 () Bool)

(assert (=> d!19925 e!52968))

(assert (=> d!19925 (= c!12762 ((_ is MissingZero!241) lt!37945))))

(assert (=> d!19925 (= lt!37945 (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun lt!37946 () Unit!2341)

(declare-fun choose!479 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) Int) Unit!2341)

(assert (=> d!19925 (= lt!37946 (choose!479 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)))))

(assert (=> d!19925 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19925 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)) lt!37946)))

(declare-fun b!81155 () Bool)

(assert (=> b!81155 (and (bvsge (index!3099 lt!37945) #b00000000000000000000000000000000) (bvslt (index!3099 lt!37945) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun res!42218 () Bool)

(assert (=> b!81155 (= res!42218 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3099 lt!37945)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81155 (=> (not res!42218) (not e!52967))))

(declare-fun bm!7574 () Bool)

(assert (=> bm!7574 (= call!7576 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!81162 () Bool)

(assert (=> b!81162 (= e!52967 (not call!7576))))

(assert (= (and d!19925 c!12762) b!81160))

(assert (= (and d!19925 (not c!12762)) b!81161))

(assert (= (and b!81160 res!42220) b!81155))

(assert (= (and b!81155 res!42218) b!81162))

(assert (= (and b!81161 c!12761) b!81156))

(assert (= (and b!81161 (not c!12761)) b!81159))

(assert (= (and b!81156 res!42221) b!81158))

(assert (= (and b!81158 res!42219) b!81157))

(assert (= (or b!81160 b!81156) bm!7573))

(assert (= (or b!81162 b!81157) bm!7574))

(declare-fun m!83103 () Bool)

(assert (=> bm!7573 m!83103))

(assert (=> d!19925 m!81811))

(assert (=> d!19925 m!81957))

(assert (=> d!19925 m!81811))

(declare-fun m!83105 () Bool)

(assert (=> d!19925 m!83105))

(assert (=> d!19925 m!82321))

(declare-fun m!83107 () Bool)

(assert (=> b!81158 m!83107))

(declare-fun m!83109 () Bool)

(assert (=> b!81155 m!83109))

(assert (=> bm!7574 m!81811))

(assert (=> bm!7574 m!81985))

(assert (=> bm!7470 d!19925))

(assert (=> b!80468 d!19773))

(declare-fun d!19927 () Bool)

(declare-fun e!52971 () Bool)

(assert (=> d!19927 e!52971))

(declare-fun res!42222 () Bool)

(assert (=> d!19927 (=> res!42222 e!52971)))

(declare-fun lt!37948 () Bool)

(assert (=> d!19927 (= res!42222 (not lt!37948))))

(declare-fun lt!37947 () Bool)

(assert (=> d!19927 (= lt!37948 lt!37947)))

(declare-fun lt!37950 () Unit!2341)

(declare-fun e!52972 () Unit!2341)

(assert (=> d!19927 (= lt!37950 e!52972)))

(declare-fun c!12763 () Bool)

(assert (=> d!19927 (= c!12763 lt!37947)))

(assert (=> d!19927 (= lt!37947 (containsKey!142 (toList!741 lt!37557) (_1!1101 lt!37268)))))

(assert (=> d!19927 (= (contains!745 lt!37557 (_1!1101 lt!37268)) lt!37948)))

(declare-fun b!81163 () Bool)

(declare-fun lt!37949 () Unit!2341)

(assert (=> b!81163 (= e!52972 lt!37949)))

(assert (=> b!81163 (= lt!37949 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37557) (_1!1101 lt!37268)))))

(assert (=> b!81163 (isDefined!91 (getValueByKey!138 (toList!741 lt!37557) (_1!1101 lt!37268)))))

(declare-fun b!81164 () Bool)

(declare-fun Unit!2371 () Unit!2341)

(assert (=> b!81164 (= e!52972 Unit!2371)))

(declare-fun b!81165 () Bool)

(assert (=> b!81165 (= e!52971 (isDefined!91 (getValueByKey!138 (toList!741 lt!37557) (_1!1101 lt!37268))))))

(assert (= (and d!19927 c!12763) b!81163))

(assert (= (and d!19927 (not c!12763)) b!81164))

(assert (= (and d!19927 (not res!42222)) b!81165))

(declare-fun m!83111 () Bool)

(assert (=> d!19927 m!83111))

(declare-fun m!83113 () Bool)

(assert (=> b!81163 m!83113))

(assert (=> b!81163 m!82167))

(assert (=> b!81163 m!82167))

(declare-fun m!83115 () Bool)

(assert (=> b!81163 m!83115))

(assert (=> b!81165 m!82167))

(assert (=> b!81165 m!82167))

(assert (=> b!81165 m!83115))

(assert (=> d!19673 d!19927))

(declare-fun d!19929 () Bool)

(declare-fun c!12764 () Bool)

(assert (=> d!19929 (= c!12764 (and ((_ is Cons!1507) lt!37559) (= (_1!1101 (h!2096 lt!37559)) (_1!1101 lt!37268))))))

(declare-fun e!52973 () Option!144)

(assert (=> d!19929 (= (getValueByKey!138 lt!37559 (_1!1101 lt!37268)) e!52973)))

(declare-fun b!81167 () Bool)

(declare-fun e!52974 () Option!144)

(assert (=> b!81167 (= e!52973 e!52974)))

(declare-fun c!12765 () Bool)

(assert (=> b!81167 (= c!12765 (and ((_ is Cons!1507) lt!37559) (not (= (_1!1101 (h!2096 lt!37559)) (_1!1101 lt!37268)))))))

(declare-fun b!81168 () Bool)

(assert (=> b!81168 (= e!52974 (getValueByKey!138 (t!5178 lt!37559) (_1!1101 lt!37268)))))

(declare-fun b!81169 () Bool)

(assert (=> b!81169 (= e!52974 None!142)))

(declare-fun b!81166 () Bool)

(assert (=> b!81166 (= e!52973 (Some!143 (_2!1101 (h!2096 lt!37559))))))

(assert (= (and d!19929 c!12764) b!81166))

(assert (= (and d!19929 (not c!12764)) b!81167))

(assert (= (and b!81167 c!12765) b!81168))

(assert (= (and b!81167 (not c!12765)) b!81169))

(declare-fun m!83117 () Bool)

(assert (=> b!81168 m!83117))

(assert (=> d!19673 d!19929))

(declare-fun d!19931 () Bool)

(assert (=> d!19931 (= (getValueByKey!138 lt!37559 (_1!1101 lt!37268)) (Some!143 (_2!1101 lt!37268)))))

(declare-fun lt!37951 () Unit!2341)

(assert (=> d!19931 (= lt!37951 (choose!470 lt!37559 (_1!1101 lt!37268) (_2!1101 lt!37268)))))

(declare-fun e!52975 () Bool)

(assert (=> d!19931 e!52975))

(declare-fun res!42223 () Bool)

(assert (=> d!19931 (=> (not res!42223) (not e!52975))))

(assert (=> d!19931 (= res!42223 (isStrictlySorted!296 lt!37559))))

(assert (=> d!19931 (= (lemmaContainsTupThenGetReturnValue!55 lt!37559 (_1!1101 lt!37268) (_2!1101 lt!37268)) lt!37951)))

(declare-fun b!81170 () Bool)

(declare-fun res!42224 () Bool)

(assert (=> b!81170 (=> (not res!42224) (not e!52975))))

(assert (=> b!81170 (= res!42224 (containsKey!142 lt!37559 (_1!1101 lt!37268)))))

(declare-fun b!81171 () Bool)

(assert (=> b!81171 (= e!52975 (contains!746 lt!37559 (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(assert (= (and d!19931 res!42223) b!81170))

(assert (= (and b!81170 res!42224) b!81171))

(assert (=> d!19931 m!82161))

(declare-fun m!83119 () Bool)

(assert (=> d!19931 m!83119))

(declare-fun m!83121 () Bool)

(assert (=> d!19931 m!83121))

(declare-fun m!83123 () Bool)

(assert (=> b!81170 m!83123))

(declare-fun m!83125 () Bool)

(assert (=> b!81171 m!83125))

(assert (=> d!19673 d!19931))

(declare-fun b!81172 () Bool)

(declare-fun c!12766 () Bool)

(assert (=> b!81172 (= c!12766 (and ((_ is Cons!1507) (toList!741 lt!37281)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37281))) (_1!1101 lt!37268))))))

(declare-fun e!52976 () List!1511)

(declare-fun e!52977 () List!1511)

(assert (=> b!81172 (= e!52976 e!52977)))

(declare-fun b!81173 () Bool)

(declare-fun call!7578 () List!1511)

(assert (=> b!81173 (= e!52977 call!7578)))

(declare-fun e!52978 () List!1511)

(declare-fun c!12768 () Bool)

(declare-fun b!81174 () Bool)

(assert (=> b!81174 (= e!52978 (ite c!12768 (t!5178 (toList!741 lt!37281)) (ite c!12766 (Cons!1507 (h!2096 (toList!741 lt!37281)) (t!5178 (toList!741 lt!37281))) Nil!1508)))))

(declare-fun d!19933 () Bool)

(declare-fun e!52980 () Bool)

(assert (=> d!19933 e!52980))

(declare-fun res!42226 () Bool)

(assert (=> d!19933 (=> (not res!42226) (not e!52980))))

(declare-fun lt!37952 () List!1511)

(assert (=> d!19933 (= res!42226 (isStrictlySorted!296 lt!37952))))

(declare-fun e!52979 () List!1511)

(assert (=> d!19933 (= lt!37952 e!52979)))

(declare-fun c!12767 () Bool)

(assert (=> d!19933 (= c!12767 (and ((_ is Cons!1507) (toList!741 lt!37281)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37281))) (_1!1101 lt!37268))))))

(assert (=> d!19933 (isStrictlySorted!296 (toList!741 lt!37281))))

(assert (=> d!19933 (= (insertStrictlySorted!58 (toList!741 lt!37281) (_1!1101 lt!37268) (_2!1101 lt!37268)) lt!37952)))

(declare-fun b!81175 () Bool)

(declare-fun call!7580 () List!1511)

(assert (=> b!81175 (= e!52979 call!7580)))

(declare-fun bm!7575 () Bool)

(declare-fun call!7579 () List!1511)

(assert (=> bm!7575 (= call!7579 call!7580)))

(declare-fun bm!7576 () Bool)

(assert (=> bm!7576 (= call!7578 call!7579)))

(declare-fun b!81176 () Bool)

(assert (=> b!81176 (= e!52980 (contains!746 lt!37952 (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(declare-fun b!81177 () Bool)

(assert (=> b!81177 (= e!52979 e!52976)))

(assert (=> b!81177 (= c!12768 (and ((_ is Cons!1507) (toList!741 lt!37281)) (= (_1!1101 (h!2096 (toList!741 lt!37281))) (_1!1101 lt!37268))))))

(declare-fun b!81178 () Bool)

(assert (=> b!81178 (= e!52977 call!7578)))

(declare-fun b!81179 () Bool)

(declare-fun res!42225 () Bool)

(assert (=> b!81179 (=> (not res!42225) (not e!52980))))

(assert (=> b!81179 (= res!42225 (containsKey!142 lt!37952 (_1!1101 lt!37268)))))

(declare-fun bm!7577 () Bool)

(assert (=> bm!7577 (= call!7580 ($colon$colon!70 e!52978 (ite c!12767 (h!2096 (toList!741 lt!37281)) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268)))))))

(declare-fun c!12769 () Bool)

(assert (=> bm!7577 (= c!12769 c!12767)))

(declare-fun b!81180 () Bool)

(assert (=> b!81180 (= e!52978 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37281)) (_1!1101 lt!37268) (_2!1101 lt!37268)))))

(declare-fun b!81181 () Bool)

(assert (=> b!81181 (= e!52976 call!7579)))

(assert (= (and d!19933 c!12767) b!81175))

(assert (= (and d!19933 (not c!12767)) b!81177))

(assert (= (and b!81177 c!12768) b!81181))

(assert (= (and b!81177 (not c!12768)) b!81172))

(assert (= (and b!81172 c!12766) b!81178))

(assert (= (and b!81172 (not c!12766)) b!81173))

(assert (= (or b!81178 b!81173) bm!7576))

(assert (= (or b!81181 bm!7576) bm!7575))

(assert (= (or b!81175 bm!7575) bm!7577))

(assert (= (and bm!7577 c!12769) b!81180))

(assert (= (and bm!7577 (not c!12769)) b!81174))

(assert (= (and d!19933 res!42226) b!81179))

(assert (= (and b!81179 res!42225) b!81176))

(declare-fun m!83127 () Bool)

(assert (=> b!81176 m!83127))

(declare-fun m!83129 () Bool)

(assert (=> b!81179 m!83129))

(declare-fun m!83131 () Bool)

(assert (=> d!19933 m!83131))

(declare-fun m!83133 () Bool)

(assert (=> d!19933 m!83133))

(declare-fun m!83135 () Bool)

(assert (=> b!81180 m!83135))

(declare-fun m!83137 () Bool)

(assert (=> bm!7577 m!83137))

(assert (=> d!19673 d!19933))

(declare-fun d!19935 () Bool)

(declare-fun lt!37953 () Bool)

(assert (=> d!19935 (= lt!37953 (select (content!85 (toList!741 lt!37508)) lt!37278))))

(declare-fun e!52982 () Bool)

(assert (=> d!19935 (= lt!37953 e!52982)))

(declare-fun res!42227 () Bool)

(assert (=> d!19935 (=> (not res!42227) (not e!52982))))

(assert (=> d!19935 (= res!42227 ((_ is Cons!1507) (toList!741 lt!37508)))))

(assert (=> d!19935 (= (contains!746 (toList!741 lt!37508) lt!37278) lt!37953)))

(declare-fun b!81182 () Bool)

(declare-fun e!52981 () Bool)

(assert (=> b!81182 (= e!52982 e!52981)))

(declare-fun res!42228 () Bool)

(assert (=> b!81182 (=> res!42228 e!52981)))

(assert (=> b!81182 (= res!42228 (= (h!2096 (toList!741 lt!37508)) lt!37278))))

(declare-fun b!81183 () Bool)

(assert (=> b!81183 (= e!52981 (contains!746 (t!5178 (toList!741 lt!37508)) lt!37278))))

(assert (= (and d!19935 res!42227) b!81182))

(assert (= (and b!81182 (not res!42228)) b!81183))

(declare-fun m!83139 () Bool)

(assert (=> d!19935 m!83139))

(declare-fun m!83141 () Bool)

(assert (=> d!19935 m!83141))

(declare-fun m!83143 () Bool)

(assert (=> b!81183 m!83143))

(assert (=> b!80548 d!19935))

(declare-fun d!19937 () Bool)

(declare-fun e!52983 () Bool)

(assert (=> d!19937 e!52983))

(declare-fun res!42229 () Bool)

(assert (=> d!19937 (=> res!42229 e!52983)))

(declare-fun lt!37955 () Bool)

(assert (=> d!19937 (= res!42229 (not lt!37955))))

(declare-fun lt!37954 () Bool)

(assert (=> d!19937 (= lt!37955 lt!37954)))

(declare-fun lt!37957 () Unit!2341)

(declare-fun e!52984 () Unit!2341)

(assert (=> d!19937 (= lt!37957 e!52984)))

(declare-fun c!12770 () Bool)

(assert (=> d!19937 (= c!12770 lt!37954)))

(assert (=> d!19937 (= lt!37954 (containsKey!142 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19937 (= (contains!745 lt!37487 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37955)))

(declare-fun b!81184 () Bool)

(declare-fun lt!37956 () Unit!2341)

(assert (=> b!81184 (= e!52984 lt!37956)))

(assert (=> b!81184 (= lt!37956 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81184 (isDefined!91 (getValueByKey!138 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81185 () Bool)

(declare-fun Unit!2372 () Unit!2341)

(assert (=> b!81185 (= e!52984 Unit!2372)))

(declare-fun b!81186 () Bool)

(assert (=> b!81186 (= e!52983 (isDefined!91 (getValueByKey!138 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19937 c!12770) b!81184))

(assert (= (and d!19937 (not c!12770)) b!81185))

(assert (= (and d!19937 (not res!42229)) b!81186))

(declare-fun m!83145 () Bool)

(assert (=> d!19937 m!83145))

(declare-fun m!83147 () Bool)

(assert (=> b!81184 m!83147))

(assert (=> b!81184 m!82345))

(assert (=> b!81184 m!82345))

(declare-fun m!83149 () Bool)

(assert (=> b!81184 m!83149))

(assert (=> b!81186 m!82345))

(assert (=> b!81186 m!82345))

(assert (=> b!81186 m!83149))

(assert (=> bm!7493 d!19937))

(declare-fun b!81187 () Bool)

(declare-fun e!52986 () Bool)

(declare-fun call!7581 () Bool)

(assert (=> b!81187 (= e!52986 call!7581)))

(declare-fun bm!7578 () Bool)

(declare-fun c!12771 () Bool)

(assert (=> bm!7578 (= call!7581 (arrayNoDuplicates!0 (_keys!3957 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12771 (Cons!1508 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) Nil!1509) Nil!1509)))))

(declare-fun b!81188 () Bool)

(assert (=> b!81188 (= e!52986 call!7581)))

(declare-fun b!81189 () Bool)

(declare-fun e!52985 () Bool)

(assert (=> b!81189 (= e!52985 e!52986)))

(assert (=> b!81189 (= c!12771 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81191 () Bool)

(declare-fun e!52988 () Bool)

(assert (=> b!81191 (= e!52988 (contains!747 Nil!1509 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81190 () Bool)

(declare-fun e!52987 () Bool)

(assert (=> b!81190 (= e!52987 e!52985)))

(declare-fun res!42231 () Bool)

(assert (=> b!81190 (=> (not res!42231) (not e!52985))))

(assert (=> b!81190 (= res!42231 (not e!52988))))

(declare-fun res!42230 () Bool)

(assert (=> b!81190 (=> (not res!42230) (not e!52988))))

(assert (=> b!81190 (= res!42230 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!19939 () Bool)

(declare-fun res!42232 () Bool)

(assert (=> d!19939 (=> res!42232 e!52987)))

(assert (=> d!19939 (= res!42232 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(assert (=> d!19939 (= (arrayNoDuplicates!0 (_keys!3957 newMap!16) #b00000000000000000000000000000000 Nil!1509) e!52987)))

(assert (= (and d!19939 (not res!42232)) b!81190))

(assert (= (and b!81190 res!42230) b!81191))

(assert (= (and b!81190 res!42231) b!81189))

(assert (= (and b!81189 c!12771) b!81187))

(assert (= (and b!81189 (not c!12771)) b!81188))

(assert (= (or b!81187 b!81188) bm!7578))

(assert (=> bm!7578 m!82265))

(declare-fun m!83151 () Bool)

(assert (=> bm!7578 m!83151))

(assert (=> b!81189 m!82265))

(assert (=> b!81189 m!82265))

(assert (=> b!81189 m!82313))

(assert (=> b!81191 m!82265))

(assert (=> b!81191 m!82265))

(declare-fun m!83153 () Bool)

(assert (=> b!81191 m!83153))

(assert (=> b!81190 m!82265))

(assert (=> b!81190 m!82265))

(assert (=> b!81190 m!82313))

(assert (=> b!80611 d!19939))

(declare-fun d!19941 () Bool)

(declare-fun e!52991 () Bool)

(assert (=> d!19941 e!52991))

(declare-fun res!42238 () Bool)

(assert (=> d!19941 (=> (not res!42238) (not e!52991))))

(declare-fun lt!37963 () SeekEntryResult!241)

(assert (=> d!19941 (= res!42238 ((_ is Found!241) lt!37963))))

(assert (=> d!19941 (= lt!37963 (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun lt!37962 () Unit!2341)

(declare-fun choose!480 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) Int) Unit!2341)

(assert (=> d!19941 (= lt!37962 (choose!480 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)))))

(assert (=> d!19941 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19941 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)) lt!37962)))

(declare-fun b!81196 () Bool)

(declare-fun res!42237 () Bool)

(assert (=> b!81196 (=> (not res!42237) (not e!52991))))

(assert (=> b!81196 (= res!42237 (inRange!0 (index!3100 lt!37963) (mask!6299 newMap!16)))))

(declare-fun b!81197 () Bool)

(assert (=> b!81197 (= e!52991 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37963)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!81197 (and (bvsge (index!3100 lt!37963) #b00000000000000000000000000000000) (bvslt (index!3100 lt!37963) (size!2143 (_keys!3957 newMap!16))))))

(assert (= (and d!19941 res!42238) b!81196))

(assert (= (and b!81196 res!42237) b!81197))

(assert (=> d!19941 m!81811))

(assert (=> d!19941 m!81957))

(assert (=> d!19941 m!81811))

(declare-fun m!83155 () Bool)

(assert (=> d!19941 m!83155))

(assert (=> d!19941 m!82321))

(declare-fun m!83157 () Bool)

(assert (=> b!81196 m!83157))

(declare-fun m!83159 () Bool)

(assert (=> b!81197 m!83159))

(assert (=> bm!7456 d!19941))

(assert (=> b!80581 d!19845))

(assert (=> bm!7494 d!19661))

(declare-fun d!19943 () Bool)

(declare-fun lt!37964 () Bool)

(assert (=> d!19943 (= lt!37964 (select (content!85 (toList!741 lt!37512)) lt!37268))))

(declare-fun e!52993 () Bool)

(assert (=> d!19943 (= lt!37964 e!52993)))

(declare-fun res!42239 () Bool)

(assert (=> d!19943 (=> (not res!42239) (not e!52993))))

(assert (=> d!19943 (= res!42239 ((_ is Cons!1507) (toList!741 lt!37512)))))

(assert (=> d!19943 (= (contains!746 (toList!741 lt!37512) lt!37268) lt!37964)))

(declare-fun b!81198 () Bool)

(declare-fun e!52992 () Bool)

(assert (=> b!81198 (= e!52993 e!52992)))

(declare-fun res!42240 () Bool)

(assert (=> b!81198 (=> res!42240 e!52992)))

(assert (=> b!81198 (= res!42240 (= (h!2096 (toList!741 lt!37512)) lt!37268))))

(declare-fun b!81199 () Bool)

(assert (=> b!81199 (= e!52992 (contains!746 (t!5178 (toList!741 lt!37512)) lt!37268))))

(assert (= (and d!19943 res!42239) b!81198))

(assert (= (and b!81198 (not res!42240)) b!81199))

(declare-fun m!83161 () Bool)

(assert (=> d!19943 m!83161))

(declare-fun m!83163 () Bool)

(assert (=> d!19943 m!83163))

(declare-fun m!83165 () Bool)

(assert (=> b!81199 m!83165))

(assert (=> b!80550 d!19943))

(declare-fun d!19945 () Bool)

(declare-fun res!42241 () Bool)

(declare-fun e!52994 () Bool)

(assert (=> d!19945 (=> (not res!42241) (not e!52994))))

(assert (=> d!19945 (= res!42241 (simpleValid!56 (_2!1100 lt!37429)))))

(assert (=> d!19945 (= (valid!316 (_2!1100 lt!37429)) e!52994)))

(declare-fun b!81200 () Bool)

(declare-fun res!42242 () Bool)

(assert (=> b!81200 (=> (not res!42242) (not e!52994))))

(assert (=> b!81200 (= res!42242 (= (arrayCountValidKeys!0 (_keys!3957 (_2!1100 lt!37429)) #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37429)))) (_size!418 (_2!1100 lt!37429))))))

(declare-fun b!81201 () Bool)

(declare-fun res!42243 () Bool)

(assert (=> b!81201 (=> (not res!42243) (not e!52994))))

(assert (=> b!81201 (= res!42243 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 (_2!1100 lt!37429)) (mask!6299 (_2!1100 lt!37429))))))

(declare-fun b!81202 () Bool)

(assert (=> b!81202 (= e!52994 (arrayNoDuplicates!0 (_keys!3957 (_2!1100 lt!37429)) #b00000000000000000000000000000000 Nil!1509))))

(assert (= (and d!19945 res!42241) b!81200))

(assert (= (and b!81200 res!42242) b!81201))

(assert (= (and b!81201 res!42243) b!81202))

(declare-fun m!83167 () Bool)

(assert (=> d!19945 m!83167))

(declare-fun m!83169 () Bool)

(assert (=> b!81200 m!83169))

(declare-fun m!83171 () Bool)

(assert (=> b!81201 m!83171))

(declare-fun m!83173 () Bool)

(assert (=> b!81202 m!83173))

(assert (=> d!19645 d!19945))

(assert (=> d!19645 d!19685))

(declare-fun mapNonEmpty!3341 () Bool)

(declare-fun mapRes!3341 () Bool)

(declare-fun tp!8831 () Bool)

(declare-fun e!52996 () Bool)

(assert (=> mapNonEmpty!3341 (= mapRes!3341 (and tp!8831 e!52996))))

(declare-fun mapValue!3341 () ValueCell!915)

(declare-fun mapRest!3341 () (Array (_ BitVec 32) ValueCell!915))

(declare-fun mapKey!3341 () (_ BitVec 32))

(assert (=> mapNonEmpty!3341 (= mapRest!3340 (store mapRest!3341 mapKey!3341 mapValue!3341))))

(declare-fun mapIsEmpty!3341 () Bool)

(assert (=> mapIsEmpty!3341 mapRes!3341))

(declare-fun condMapEmpty!3341 () Bool)

(declare-fun mapDefault!3341 () ValueCell!915)

(assert (=> mapNonEmpty!3340 (= condMapEmpty!3341 (= mapRest!3340 ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3341)))))

(declare-fun e!52995 () Bool)

(assert (=> mapNonEmpty!3340 (= tp!8830 (and e!52995 mapRes!3341))))

(declare-fun b!81204 () Bool)

(assert (=> b!81204 (= e!52995 tp_is_empty!2517)))

(declare-fun b!81203 () Bool)

(assert (=> b!81203 (= e!52996 tp_is_empty!2517)))

(assert (= (and mapNonEmpty!3340 condMapEmpty!3341) mapIsEmpty!3341))

(assert (= (and mapNonEmpty!3340 (not condMapEmpty!3341)) mapNonEmpty!3341))

(assert (= (and mapNonEmpty!3341 ((_ is ValueCellFull!915) mapValue!3341)) b!81203))

(assert (= (and mapNonEmpty!3340 ((_ is ValueCellFull!915) mapDefault!3341)) b!81204))

(declare-fun m!83175 () Bool)

(assert (=> mapNonEmpty!3341 m!83175))

(declare-fun mapNonEmpty!3342 () Bool)

(declare-fun mapRes!3342 () Bool)

(declare-fun tp!8832 () Bool)

(declare-fun e!52998 () Bool)

(assert (=> mapNonEmpty!3342 (= mapRes!3342 (and tp!8832 e!52998))))

(declare-fun mapKey!3342 () (_ BitVec 32))

(declare-fun mapRest!3342 () (Array (_ BitVec 32) ValueCell!915))

(declare-fun mapValue!3342 () ValueCell!915)

(assert (=> mapNonEmpty!3342 (= mapRest!3339 (store mapRest!3342 mapKey!3342 mapValue!3342))))

(declare-fun mapIsEmpty!3342 () Bool)

(assert (=> mapIsEmpty!3342 mapRes!3342))

(declare-fun condMapEmpty!3342 () Bool)

(declare-fun mapDefault!3342 () ValueCell!915)

(assert (=> mapNonEmpty!3339 (= condMapEmpty!3342 (= mapRest!3339 ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3342)))))

(declare-fun e!52997 () Bool)

(assert (=> mapNonEmpty!3339 (= tp!8829 (and e!52997 mapRes!3342))))

(declare-fun b!81206 () Bool)

(assert (=> b!81206 (= e!52997 tp_is_empty!2517)))

(declare-fun b!81205 () Bool)

(assert (=> b!81205 (= e!52998 tp_is_empty!2517)))

(assert (= (and mapNonEmpty!3339 condMapEmpty!3342) mapIsEmpty!3342))

(assert (= (and mapNonEmpty!3339 (not condMapEmpty!3342)) mapNonEmpty!3342))

(assert (= (and mapNonEmpty!3342 ((_ is ValueCellFull!915) mapValue!3342)) b!81205))

(assert (= (and mapNonEmpty!3339 ((_ is ValueCellFull!915) mapDefault!3342)) b!81206))

(declare-fun m!83177 () Bool)

(assert (=> mapNonEmpty!3342 m!83177))

(declare-fun b_lambda!3615 () Bool)

(assert (= b_lambda!3611 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3615)))

(declare-fun b_lambda!3617 () Bool)

(assert (= b_lambda!3613 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3617)))

(declare-fun b_lambda!3619 () Bool)

(assert (= b_lambda!3607 (or (and b!80271 b_free!2201) (and b!80263 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))))) b_lambda!3619)))

(declare-fun b_lambda!3621 () Bool)

(assert (= b_lambda!3609 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3621)))

(declare-fun b_lambda!3623 () Bool)

(assert (= b_lambda!3605 (or (and b!80271 b_free!2201) (and b!80263 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))))) b_lambda!3623)))

(check-sat (not d!19945) (not b!80660) (not b!80920) (not d!19931) (not b!80649) (not b!80720) (not b!80945) (not b!80651) (not d!19759) (not b!80928) (not d!19801) (not b!80978) (not b!80933) (not d!19807) (not d!19839) (not d!19733) (not b!81184) (not b!80855) (not b!80859) (not b!81124) (not b!81054) (not d!19899) (not b!81091) (not b!80977) (not d!19871) (not b!81037) (not b!81086) (not b!81046) (not b!81103) (not d!19729) (not d!19863) (not b!81005) (not d!19909) (not d!19883) (not d!19811) (not d!19757) (not d!19837) (not b!80957) (not b!80808) (not bm!7510) (not b!81062) (not d!19935) (not b!81102) (not b!80789) (not bm!7549) (not b_lambda!3615) (not b!80956) (not d!19859) (not d!19873) (not d!19751) (not b!81016) (not b!81085) (not b!81080) (not b!81196) (not b!81052) b_and!4951 (not b!80656) (not b!80801) (not b!80869) (not b!80694) (not d!19735) (not b!81001) (not b!81071) (not b!81021) (not b!81009) (not d!19879) (not b!81083) (not bm!7504) (not b!80716) (not b!81003) (not b!81007) (not b!80992) (not d!19893) (not b!80831) (not d!19815) (not b!80653) (not d!19843) (not b!81168) (not b_lambda!3623) (not b!80809) (not d!19833) (not bm!7527) (not d!19901) (not d!19867) (not b!81094) (not b!80940) (not b!81163) (not b!80989) (not b!80786) (not b!80938) (not b!80813) (not d!19777) (not b!81110) (not d!19697) (not b!80811) (not bm!7512) (not bm!7578) (not bm!7552) (not b!81048) (not b!81121) (not b!80983) (not b!80862) (not bm!7511) (not b!80775) (not d!19825) (not d!19897) (not b!80999) (not d!19763) (not b!81044) (not bm!7530) (not b!80871) (not b!80719) (not d!19767) (not d!19817) (not d!19715) (not bm!7508) (not b!81099) (not b!81081) (not b!80935) (not b!81200) (not b!81030) (not b!80747) (not bm!7524) (not b!80708) (not b!80954) (not b!80917) (not b!80690) (not b!81069) (not d!19795) (not d!19711) (not d!19861) (not b!80854) (not d!19913) (not bm!7507) (not b!81064) (not b!81107) (not b!81202) (not d!19829) (not b!80746) (not b!81059) (not b!81011) (not d!19927) (not b!81028) (not d!19747) (not b_lambda!3619) (not d!19943) (not d!19803) (not b!80735) (not b!80873) (not b!81049) (not b!80986) (not b!80797) (not b!80732) (not b!80737) (not bm!7550) (not d!19919) (not bm!7521) (not b!81093) (not d!19857) (not b!81077) (not b!81034) (not b_lambda!3601) (not b!80879) (not b!80657) (not mapNonEmpty!3342) (not b!80841) (not b!80972) (not b!80975) (not d!19821) (not bm!7577) (not b!81050) (not d!19831) (not b!81051) tp_is_empty!2517 (not d!19719) (not b!81179) (not b!80927) (not d!19805) (not d!19849) (not b!80687) (not b!80968) (not d!19781) (not b!80672) (not d!19749) (not b!81024) (not b_lambda!3591) (not b!80784) (not d!19823) (not d!19933) (not b!80729) (not bm!7534) (not b!80949) (not d!19911) (not b!81116) (not d!19853) (not bm!7543) (not b!80955) (not d!19877) (not b!80733) (not b_lambda!3603) (not d!19921) (not b!80723) (not d!19791) (not bm!7562) (not b!81183) (not d!19903) (not b!80996) (not d!19721) (not d!19915) (not b!81125) (not bm!7531) (not d!19723) (not b!80987) (not b!80662) (not d!19841) (not b!80947) (not b!81027) (not d!19769) (not bm!7553) (not bm!7533) (not b!80970) (not d!19731) (not b!81002) (not b!80864) (not b!81008) (not d!19887) (not d!19855) (not b!81186) (not d!19743) (not b!81176) (not d!19905) (not d!19783) (not b!80655) (not b!81043) (not b!80670) (not b_next!2201) (not b!80857) (not b!81047) (not b!80936) (not b!81170) (not b!81191) (not b!81032) (not d!19865) (not b!80740) (not b!80791) (not d!19701) (not b!80925) (not b!80725) (not b!80692) (not d!19885) (not b!81066) (not b!80860) (not b!80658) (not bm!7556) (not b!80993) (not b!81014) (not b!80724) (not b!80697) (not bm!7565) (not bm!7546) (not b!81138) (not bm!7559) (not b!81006) (not b!80918) (not b!81108) (not bm!7544) (not b!81115) (not b!80776) (not b!81201) (not d!19753) (not d!19703) (not b!80722) (not bm!7574) (not b_lambda!3617) (not b!81105) (not b!80706) (not b_next!2203) (not b!81029) (not d!19937) (not b!80714) (not b!80727) (not b_lambda!3621) (not b!81018) (not d!19925) b_and!4953 (not d!19787) (not d!19875) (not b!81180) (not b!80669) (not b!80717) (not b!80695) (not b!81088) (not b!80689) (not d!19779) (not bm!7568) (not b!81072) (not d!19725) (not d!19847) (not d!19727) (not b!81189) (not b!80990) (not b!80959) (not b!81165) (not b!81190) (not d!19797) (not b!80783) (not b!81171) (not b!80953) (not b!80995) (not b!80721) (not b!81026) (not b!80734) (not b!80661) (not b!80994) (not d!19941) (not b_lambda!3599) (not bm!7573) (not d!19773) (not mapNonEmpty!3341) (not b!80842) (not d!19869) (not b!81004) (not b!80800) (not b!80772) (not b!80699) (not d!19785) (not d!19881) (not d!19819) (not b!81113) (not d!19813) (not d!19705) (not b!80991) (not d!19799) (not b!81199) (not b!80683) (not b!80704) (not b!80792))
(check-sat b_and!4951 b_and!4953 (not b_next!2201) (not b_next!2203))
(get-model)

(declare-fun d!19947 () Bool)

(assert (=> d!19947 (= (apply!80 lt!37673 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1182 (getValueByKey!138 (toList!741 lt!37673) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3430 () Bool)

(assert (= bs!3430 d!19947))

(assert (=> bs!3430 m!82265))

(declare-fun m!83179 () Bool)

(assert (=> bs!3430 m!83179))

(assert (=> bs!3430 m!83179))

(declare-fun m!83181 () Bool)

(assert (=> bs!3430 m!83181))

(assert (=> b!80871 d!19947))

(declare-fun d!19949 () Bool)

(declare-fun c!12772 () Bool)

(assert (=> d!19949 (= c!12772 ((_ is ValueCellFull!915) (select (arr!1902 (_values!2276 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!52999 () V!3003)

(assert (=> d!19949 (= (get!1179 (select (arr!1902 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52999)))

(declare-fun b!81207 () Bool)

(assert (=> b!81207 (= e!52999 (get!1180 (select (arr!1902 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81208 () Bool)

(assert (=> b!81208 (= e!52999 (get!1181 (select (arr!1902 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19949 c!12772) b!81207))

(assert (= (and d!19949 (not c!12772)) b!81208))

(assert (=> b!81207 m!82487))

(assert (=> b!81207 m!82271))

(declare-fun m!83183 () Bool)

(assert (=> b!81207 m!83183))

(assert (=> b!81208 m!82487))

(assert (=> b!81208 m!82271))

(declare-fun m!83185 () Bool)

(assert (=> b!81208 m!83185))

(assert (=> b!80871 d!19949))

(declare-fun d!19951 () Bool)

(assert (=> d!19951 (contains!745 (getCurrentListMap!435 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427)))))

(assert (=> d!19951 true))

(declare-fun _$16!102 () Unit!2341)

(assert (=> d!19951 (= (choose!473 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3100 lt!37427) (defaultEntry!2293 newMap!16)) _$16!102)))

(declare-fun bs!3431 () Bool)

(assert (= bs!3431 d!19951))

(assert (=> bs!3431 m!82837))

(assert (=> bs!3431 m!81977))

(assert (=> bs!3431 m!82837))

(assert (=> bs!3431 m!81977))

(assert (=> bs!3431 m!82839))

(assert (=> d!19831 d!19951))

(declare-fun d!19953 () Bool)

(assert (=> d!19953 (= (validMask!0 (mask!6299 newMap!16)) (and (or (= (mask!6299 newMap!16) #b00000000000000000000000000000111) (= (mask!6299 newMap!16) #b00000000000000000000000000001111) (= (mask!6299 newMap!16) #b00000000000000000000000000011111) (= (mask!6299 newMap!16) #b00000000000000000000000000111111) (= (mask!6299 newMap!16) #b00000000000000000000000001111111) (= (mask!6299 newMap!16) #b00000000000000000000000011111111) (= (mask!6299 newMap!16) #b00000000000000000000000111111111) (= (mask!6299 newMap!16) #b00000000000000000000001111111111) (= (mask!6299 newMap!16) #b00000000000000000000011111111111) (= (mask!6299 newMap!16) #b00000000000000000000111111111111) (= (mask!6299 newMap!16) #b00000000000000000001111111111111) (= (mask!6299 newMap!16) #b00000000000000000011111111111111) (= (mask!6299 newMap!16) #b00000000000000000111111111111111) (= (mask!6299 newMap!16) #b00000000000000001111111111111111) (= (mask!6299 newMap!16) #b00000000000000011111111111111111) (= (mask!6299 newMap!16) #b00000000000000111111111111111111) (= (mask!6299 newMap!16) #b00000000000001111111111111111111) (= (mask!6299 newMap!16) #b00000000000011111111111111111111) (= (mask!6299 newMap!16) #b00000000000111111111111111111111) (= (mask!6299 newMap!16) #b00000000001111111111111111111111) (= (mask!6299 newMap!16) #b00000000011111111111111111111111) (= (mask!6299 newMap!16) #b00000000111111111111111111111111) (= (mask!6299 newMap!16) #b00000001111111111111111111111111) (= (mask!6299 newMap!16) #b00000011111111111111111111111111) (= (mask!6299 newMap!16) #b00000111111111111111111111111111) (= (mask!6299 newMap!16) #b00001111111111111111111111111111) (= (mask!6299 newMap!16) #b00011111111111111111111111111111) (= (mask!6299 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6299 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!19831 d!19953))

(declare-fun d!19955 () Bool)

(declare-fun res!42244 () Bool)

(declare-fun e!53000 () Bool)

(assert (=> d!19955 (=> res!42244 e!53000)))

(assert (=> d!19955 (= res!42244 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37271))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37271)))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!19955 (= (containsKey!142 (t!5178 (toList!741 lt!37271)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) e!53000)))

(declare-fun b!81209 () Bool)

(declare-fun e!53001 () Bool)

(assert (=> b!81209 (= e!53000 e!53001)))

(declare-fun res!42245 () Bool)

(assert (=> b!81209 (=> (not res!42245) (not e!53001))))

(assert (=> b!81209 (= res!42245 (and (or (not ((_ is Cons!1507) (t!5178 (toList!741 lt!37271)))) (bvsle (_1!1101 (h!2096 (t!5178 (toList!741 lt!37271)))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))) ((_ is Cons!1507) (t!5178 (toList!741 lt!37271))) (bvslt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37271)))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(declare-fun b!81210 () Bool)

(assert (=> b!81210 (= e!53001 (containsKey!142 (t!5178 (t!5178 (toList!741 lt!37271))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!19955 (not res!42244)) b!81209))

(assert (= (and b!81209 res!42245) b!81210))

(assert (=> b!81210 m!81811))

(declare-fun m!83187 () Bool)

(assert (=> b!81210 m!83187))

(assert (=> b!80808 d!19955))

(declare-fun d!19957 () Bool)

(declare-fun lt!37965 () Bool)

(assert (=> d!19957 (= lt!37965 (select (content!85 lt!37817) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun e!53003 () Bool)

(assert (=> d!19957 (= lt!37965 e!53003)))

(declare-fun res!42246 () Bool)

(assert (=> d!19957 (=> (not res!42246) (not e!53003))))

(assert (=> d!19957 (= res!42246 ((_ is Cons!1507) lt!37817))))

(assert (=> d!19957 (= (contains!746 lt!37817 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))) lt!37965)))

(declare-fun b!81211 () Bool)

(declare-fun e!53002 () Bool)

(assert (=> b!81211 (= e!53003 e!53002)))

(declare-fun res!42247 () Bool)

(assert (=> b!81211 (=> res!42247 e!53002)))

(assert (=> b!81211 (= res!42247 (= (h!2096 lt!37817) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun b!81212 () Bool)

(assert (=> b!81212 (= e!53002 (contains!746 (t!5178 lt!37817) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(assert (= (and d!19957 res!42246) b!81211))

(assert (= (and b!81211 (not res!42247)) b!81212))

(declare-fun m!83189 () Bool)

(assert (=> d!19957 m!83189))

(declare-fun m!83191 () Bool)

(assert (=> d!19957 m!83191))

(declare-fun m!83193 () Bool)

(assert (=> b!81212 m!83193))

(assert (=> b!80983 d!19957))

(declare-fun d!19959 () Bool)

(assert (=> d!19959 (= (apply!80 lt!37597 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1182 (getValueByKey!138 (toList!741 lt!37597) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3432 () Bool)

(assert (= bs!3432 d!19959))

(declare-fun m!83195 () Bool)

(assert (=> bs!3432 m!83195))

(assert (=> bs!3432 m!83195))

(declare-fun m!83197 () Bool)

(assert (=> bs!3432 m!83197))

(assert (=> b!80694 d!19959))

(declare-fun d!19961 () Bool)

(declare-fun c!12775 () Bool)

(assert (=> d!19961 (= c!12775 ((_ is Nil!1508) (toList!741 lt!37549)))))

(declare-fun e!53006 () (InoxSet tuple2!2180))

(assert (=> d!19961 (= (content!85 (toList!741 lt!37549)) e!53006)))

(declare-fun b!81217 () Bool)

(assert (=> b!81217 (= e!53006 ((as const (Array tuple2!2180 Bool)) false))))

(declare-fun b!81218 () Bool)

(assert (=> b!81218 (= e!53006 ((_ map or) (store ((as const (Array tuple2!2180 Bool)) false) (h!2096 (toList!741 lt!37549)) true) (content!85 (t!5178 (toList!741 lt!37549)))))))

(assert (= (and d!19961 c!12775) b!81217))

(assert (= (and d!19961 (not c!12775)) b!81218))

(declare-fun m!83199 () Bool)

(assert (=> b!81218 m!83199))

(declare-fun m!83201 () Bool)

(assert (=> b!81218 m!83201))

(assert (=> d!19837 d!19961))

(declare-fun d!19963 () Bool)

(assert (=> d!19963 (= (apply!80 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37480) (apply!80 lt!37498 lt!37480))))

(assert (=> d!19963 true))

(declare-fun _$34!823 () Unit!2341)

(assert (=> d!19963 (= (choose!475 lt!37498 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37480) _$34!823)))

(declare-fun bs!3433 () Bool)

(assert (= bs!3433 d!19963))

(assert (=> bs!3433 m!82029))

(assert (=> bs!3433 m!82029))

(assert (=> bs!3433 m!82031))

(assert (=> bs!3433 m!82017))

(assert (=> d!19865 d!19963))

(declare-fun d!19965 () Bool)

(declare-fun e!53007 () Bool)

(assert (=> d!19965 e!53007))

(declare-fun res!42248 () Bool)

(assert (=> d!19965 (=> res!42248 e!53007)))

(declare-fun lt!37967 () Bool)

(assert (=> d!19965 (= res!42248 (not lt!37967))))

(declare-fun lt!37966 () Bool)

(assert (=> d!19965 (= lt!37967 lt!37966)))

(declare-fun lt!37969 () Unit!2341)

(declare-fun e!53008 () Unit!2341)

(assert (=> d!19965 (= lt!37969 e!53008)))

(declare-fun c!12776 () Bool)

(assert (=> d!19965 (= c!12776 lt!37966)))

(assert (=> d!19965 (= lt!37966 (containsKey!142 (toList!741 lt!37498) lt!37480))))

(assert (=> d!19965 (= (contains!745 lt!37498 lt!37480) lt!37967)))

(declare-fun b!81220 () Bool)

(declare-fun lt!37968 () Unit!2341)

(assert (=> b!81220 (= e!53008 lt!37968)))

(assert (=> b!81220 (= lt!37968 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37498) lt!37480))))

(assert (=> b!81220 (isDefined!91 (getValueByKey!138 (toList!741 lt!37498) lt!37480))))

(declare-fun b!81221 () Bool)

(declare-fun Unit!2373 () Unit!2341)

(assert (=> b!81221 (= e!53008 Unit!2373)))

(declare-fun b!81222 () Bool)

(assert (=> b!81222 (= e!53007 (isDefined!91 (getValueByKey!138 (toList!741 lt!37498) lt!37480)))))

(assert (= (and d!19965 c!12776) b!81220))

(assert (= (and d!19965 (not c!12776)) b!81221))

(assert (= (and d!19965 (not res!42248)) b!81222))

(declare-fun m!83203 () Bool)

(assert (=> d!19965 m!83203))

(declare-fun m!83205 () Bool)

(assert (=> b!81220 m!83205))

(assert (=> b!81220 m!82895))

(assert (=> b!81220 m!82895))

(declare-fun m!83207 () Bool)

(assert (=> b!81220 m!83207))

(assert (=> b!81222 m!82895))

(assert (=> b!81222 m!82895))

(assert (=> b!81222 m!83207))

(assert (=> d!19865 d!19965))

(assert (=> d!19865 d!19855))

(assert (=> d!19865 d!19873))

(assert (=> d!19865 d!19859))

(declare-fun d!19967 () Bool)

(assert (=> d!19967 (= (inRange!0 (index!3100 lt!37963) (mask!6299 newMap!16)) (and (bvsge (index!3100 lt!37963) #b00000000000000000000000000000000) (bvslt (index!3100 lt!37963) (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!81196 d!19967))

(declare-fun d!19969 () Bool)

(declare-fun e!53009 () Bool)

(assert (=> d!19969 e!53009))

(declare-fun res!42249 () Bool)

(assert (=> d!19969 (=> res!42249 e!53009)))

(declare-fun lt!37971 () Bool)

(assert (=> d!19969 (= res!42249 (not lt!37971))))

(declare-fun lt!37970 () Bool)

(assert (=> d!19969 (= lt!37971 lt!37970)))

(declare-fun lt!37973 () Unit!2341)

(declare-fun e!53010 () Unit!2341)

(assert (=> d!19969 (= lt!37973 e!53010)))

(declare-fun c!12777 () Bool)

(assert (=> d!19969 (= c!12777 lt!37970)))

(assert (=> d!19969 (= lt!37970 (containsKey!142 (toList!741 lt!37673) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19969 (= (contains!745 lt!37673 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) lt!37971)))

(declare-fun b!81223 () Bool)

(declare-fun lt!37972 () Unit!2341)

(assert (=> b!81223 (= e!53010 lt!37972)))

(assert (=> b!81223 (= lt!37972 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37673) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81223 (isDefined!91 (getValueByKey!138 (toList!741 lt!37673) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81224 () Bool)

(declare-fun Unit!2374 () Unit!2341)

(assert (=> b!81224 (= e!53010 Unit!2374)))

(declare-fun b!81225 () Bool)

(assert (=> b!81225 (= e!53009 (isDefined!91 (getValueByKey!138 (toList!741 lt!37673) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!19969 c!12777) b!81223))

(assert (= (and d!19969 (not c!12777)) b!81224))

(assert (= (and d!19969 (not res!42249)) b!81225))

(assert (=> d!19969 m!82265))

(declare-fun m!83209 () Bool)

(assert (=> d!19969 m!83209))

(assert (=> b!81223 m!82265))

(declare-fun m!83211 () Bool)

(assert (=> b!81223 m!83211))

(assert (=> b!81223 m!82265))

(assert (=> b!81223 m!83179))

(assert (=> b!81223 m!83179))

(declare-fun m!83213 () Bool)

(assert (=> b!81223 m!83213))

(assert (=> b!81225 m!82265))

(assert (=> b!81225 m!83179))

(assert (=> b!81225 m!83179))

(assert (=> b!81225 m!83213))

(assert (=> b!80860 d!19969))

(declare-fun d!19971 () Bool)

(assert (=> d!19971 (= (apply!80 lt!37785 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1182 (getValueByKey!138 (toList!741 lt!37785) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3434 () Bool)

(assert (= bs!3434 d!19971))

(declare-fun m!83215 () Bool)

(assert (=> bs!3434 m!83215))

(assert (=> bs!3434 m!83215))

(declare-fun m!83217 () Bool)

(assert (=> bs!3434 m!83217))

(assert (=> b!80949 d!19971))

(declare-fun d!19973 () Bool)

(assert (=> d!19973 (isDefined!91 (getValueByKey!138 (toList!741 lt!37553) (_1!1101 lt!37278)))))

(declare-fun lt!37974 () Unit!2341)

(assert (=> d!19973 (= lt!37974 (choose!477 (toList!741 lt!37553) (_1!1101 lt!37278)))))

(declare-fun e!53011 () Bool)

(assert (=> d!19973 e!53011))

(declare-fun res!42250 () Bool)

(assert (=> d!19973 (=> (not res!42250) (not e!53011))))

(assert (=> d!19973 (= res!42250 (isStrictlySorted!296 (toList!741 lt!37553)))))

(assert (=> d!19973 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37553) (_1!1101 lt!37278)) lt!37974)))

(declare-fun b!81226 () Bool)

(assert (=> b!81226 (= e!53011 (containsKey!142 (toList!741 lt!37553) (_1!1101 lt!37278)))))

(assert (= (and d!19973 res!42250) b!81226))

(assert (=> d!19973 m!82155))

(assert (=> d!19973 m!82155))

(assert (=> d!19973 m!83079))

(declare-fun m!83219 () Bool)

(assert (=> d!19973 m!83219))

(declare-fun m!83221 () Bool)

(assert (=> d!19973 m!83221))

(assert (=> b!81226 m!83075))

(assert (=> b!81108 d!19973))

(declare-fun d!19975 () Bool)

(assert (=> d!19975 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37553) (_1!1101 lt!37278))) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37553) (_1!1101 lt!37278)))))))

(declare-fun bs!3435 () Bool)

(assert (= bs!3435 d!19975))

(assert (=> bs!3435 m!82155))

(declare-fun m!83223 () Bool)

(assert (=> bs!3435 m!83223))

(assert (=> b!81108 d!19975))

(assert (=> b!81108 d!19709))

(declare-fun b!81227 () Bool)

(declare-fun e!53013 () Bool)

(declare-fun call!7582 () Bool)

(assert (=> b!81227 (= e!53013 call!7582)))

(declare-fun bm!7579 () Bool)

(declare-fun c!12778 () Bool)

(assert (=> bm!7579 (= call!7582 (arrayNoDuplicates!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12778 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) #b00000000000000000000000000000000) Nil!1509) Nil!1509)))))

(declare-fun b!81228 () Bool)

(assert (=> b!81228 (= e!53013 call!7582)))

(declare-fun b!81229 () Bool)

(declare-fun e!53012 () Bool)

(assert (=> b!81229 (= e!53012 e!53013)))

(assert (=> b!81229 (= c!12778 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!81231 () Bool)

(declare-fun e!53015 () Bool)

(assert (=> b!81231 (= e!53015 (contains!747 Nil!1509 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!81230 () Bool)

(declare-fun e!53014 () Bool)

(assert (=> b!81230 (= e!53014 e!53012)))

(declare-fun res!42252 () Bool)

(assert (=> b!81230 (=> (not res!42252) (not e!53012))))

(assert (=> b!81230 (= res!42252 (not e!53015))))

(declare-fun res!42251 () Bool)

(assert (=> b!81230 (=> (not res!42251) (not e!53015))))

(assert (=> b!81230 (= res!42251 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!19977 () Bool)

(declare-fun res!42253 () Bool)

(assert (=> d!19977 (=> res!42253 e!53014)))

(assert (=> d!19977 (= res!42253 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> d!19977 (= (arrayNoDuplicates!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000000 Nil!1509) e!53014)))

(assert (= (and d!19977 (not res!42253)) b!81230))

(assert (= (and b!81230 res!42251) b!81231))

(assert (= (and b!81230 res!42252) b!81229))

(assert (= (and b!81229 c!12778) b!81227))

(assert (= (and b!81229 (not c!12778)) b!81228))

(assert (= (or b!81227 b!81228) bm!7579))

(declare-fun m!83225 () Bool)

(assert (=> bm!7579 m!83225))

(declare-fun m!83227 () Bool)

(assert (=> bm!7579 m!83227))

(assert (=> b!81229 m!83225))

(assert (=> b!81229 m!83225))

(declare-fun m!83229 () Bool)

(assert (=> b!81229 m!83229))

(assert (=> b!81231 m!83225))

(assert (=> b!81231 m!83225))

(declare-fun m!83231 () Bool)

(assert (=> b!81231 m!83231))

(assert (=> b!81230 m!83225))

(assert (=> b!81230 m!83225))

(assert (=> b!81230 m!83229))

(assert (=> b!80724 d!19977))

(declare-fun b!81232 () Bool)

(declare-fun e!53016 () ListLongMap!1451)

(declare-fun call!7583 () ListLongMap!1451)

(assert (=> b!81232 (= e!53016 call!7583)))

(declare-fun b!81233 () Bool)

(declare-fun res!42256 () Bool)

(declare-fun e!53018 () Bool)

(assert (=> b!81233 (=> (not res!42256) (not e!53018))))

(declare-fun lt!37976 () ListLongMap!1451)

(assert (=> b!81233 (= res!42256 (not (contains!745 lt!37976 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!7580 () Bool)

(assert (=> bm!7580 (= call!7583 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun b!81234 () Bool)

(declare-fun e!53017 () Bool)

(assert (=> b!81234 (= e!53018 e!53017)))

(declare-fun c!12779 () Bool)

(declare-fun e!53022 () Bool)

(assert (=> b!81234 (= c!12779 e!53022)))

(declare-fun res!42257 () Bool)

(assert (=> b!81234 (=> (not res!42257) (not e!53022))))

(assert (=> b!81234 (= res!42257 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!81235 () Bool)

(declare-fun lt!37978 () Unit!2341)

(declare-fun lt!37979 () Unit!2341)

(assert (=> b!81235 (= lt!37978 lt!37979)))

(declare-fun lt!37981 () V!3003)

(declare-fun lt!37980 () ListLongMap!1451)

(declare-fun lt!37975 () (_ BitVec 64))

(declare-fun lt!37977 () (_ BitVec 64))

(assert (=> b!81235 (not (contains!745 (+!106 lt!37980 (tuple2!2181 lt!37975 lt!37981)) lt!37977))))

(assert (=> b!81235 (= lt!37979 (addStillNotContains!29 lt!37980 lt!37975 lt!37981 lt!37977))))

(assert (=> b!81235 (= lt!37977 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81235 (= lt!37981 (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81235 (= lt!37975 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!81235 (= lt!37980 call!7583)))

(assert (=> b!81235 (= e!53016 (+!106 call!7583 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81236 () Bool)

(declare-fun e!53021 () ListLongMap!1451)

(assert (=> b!81236 (= e!53021 e!53016)))

(declare-fun c!12781 () Bool)

(assert (=> b!81236 (= c!12781 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!81237 () Bool)

(declare-fun e!53020 () Bool)

(assert (=> b!81237 (= e!53017 e!53020)))

(assert (=> b!81237 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun res!42255 () Bool)

(assert (=> b!81237 (= res!42255 (contains!745 lt!37976 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!81237 (=> (not res!42255) (not e!53020))))

(declare-fun d!19979 () Bool)

(assert (=> d!19979 e!53018))

(declare-fun res!42254 () Bool)

(assert (=> d!19979 (=> (not res!42254) (not e!53018))))

(assert (=> d!19979 (= res!42254 (not (contains!745 lt!37976 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19979 (= lt!37976 e!53021)))

(declare-fun c!12782 () Bool)

(assert (=> d!19979 (= c!12782 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> d!19979 (validMask!0 (mask!6299 (v!2608 (underlying!281 thiss!992))))))

(assert (=> d!19979 (= (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992)))) lt!37976)))

(declare-fun e!53019 () Bool)

(declare-fun b!81238 () Bool)

(assert (=> b!81238 (= e!53019 (= lt!37976 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (_values!2276 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992))) (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) (minValue!2189 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!81239 () Bool)

(assert (=> b!81239 (= e!53017 e!53019)))

(declare-fun c!12780 () Bool)

(assert (=> b!81239 (= c!12780 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!81240 () Bool)

(assert (=> b!81240 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> b!81240 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2144 (_values!2276 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> b!81240 (= e!53020 (= (apply!80 lt!37976 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81241 () Bool)

(assert (=> b!81241 (= e!53022 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!81241 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!81242 () Bool)

(assert (=> b!81242 (= e!53019 (isEmpty!329 lt!37976))))

(declare-fun b!81243 () Bool)

(assert (=> b!81243 (= e!53021 (ListLongMap!1452 Nil!1508))))

(assert (= (and d!19979 c!12782) b!81243))

(assert (= (and d!19979 (not c!12782)) b!81236))

(assert (= (and b!81236 c!12781) b!81235))

(assert (= (and b!81236 (not c!12781)) b!81232))

(assert (= (or b!81235 b!81232) bm!7580))

(assert (= (and d!19979 res!42254) b!81233))

(assert (= (and b!81233 res!42256) b!81234))

(assert (= (and b!81234 res!42257) b!81241))

(assert (= (and b!81234 c!12779) b!81237))

(assert (= (and b!81234 (not c!12779)) b!81239))

(assert (= (and b!81237 res!42255) b!81240))

(assert (= (and b!81239 c!12780) b!81238))

(assert (= (and b!81239 (not c!12780)) b!81242))

(declare-fun b_lambda!3625 () Bool)

(assert (=> (not b_lambda!3625) (not b!81235)))

(assert (=> b!81235 t!5175))

(declare-fun b_and!4955 () Bool)

(assert (= b_and!4951 (and (=> t!5175 result!2839) b_and!4955)))

(assert (=> b!81235 t!5177))

(declare-fun b_and!4957 () Bool)

(assert (= b_and!4953 (and (=> t!5177 result!2843) b_and!4957)))

(declare-fun b_lambda!3627 () Bool)

(assert (=> (not b_lambda!3627) (not b!81240)))

(assert (=> b!81240 t!5175))

(declare-fun b_and!4959 () Bool)

(assert (= b_and!4955 (and (=> t!5175 result!2839) b_and!4959)))

(assert (=> b!81240 t!5177))

(declare-fun b_and!4961 () Bool)

(assert (= b_and!4957 (and (=> t!5177 result!2843) b_and!4961)))

(declare-fun m!83233 () Bool)

(assert (=> d!19979 m!83233))

(assert (=> d!19979 m!81831))

(declare-fun m!83235 () Bool)

(assert (=> b!81235 m!83235))

(assert (=> b!81235 m!81821))

(declare-fun m!83237 () Bool)

(assert (=> b!81235 m!83237))

(declare-fun m!83239 () Bool)

(assert (=> b!81235 m!83239))

(assert (=> b!81235 m!81821))

(declare-fun m!83241 () Bool)

(assert (=> b!81235 m!83241))

(declare-fun m!83243 () Bool)

(assert (=> b!81235 m!83243))

(assert (=> b!81235 m!83241))

(assert (=> b!81235 m!83235))

(declare-fun m!83245 () Bool)

(assert (=> b!81235 m!83245))

(declare-fun m!83247 () Bool)

(assert (=> b!81235 m!83247))

(assert (=> b!81237 m!83239))

(assert (=> b!81237 m!83239))

(declare-fun m!83249 () Bool)

(assert (=> b!81237 m!83249))

(declare-fun m!83251 () Bool)

(assert (=> b!81242 m!83251))

(declare-fun m!83253 () Bool)

(assert (=> b!81238 m!83253))

(assert (=> bm!7580 m!83253))

(assert (=> b!81236 m!83239))

(assert (=> b!81236 m!83239))

(declare-fun m!83255 () Bool)

(assert (=> b!81236 m!83255))

(declare-fun m!83257 () Bool)

(assert (=> b!81233 m!83257))

(assert (=> b!81240 m!83235))

(assert (=> b!81240 m!81821))

(assert (=> b!81240 m!83237))

(assert (=> b!81240 m!83239))

(assert (=> b!81240 m!81821))

(assert (=> b!81240 m!83235))

(assert (=> b!81240 m!83239))

(declare-fun m!83259 () Bool)

(assert (=> b!81240 m!83259))

(assert (=> b!81241 m!83239))

(assert (=> b!81241 m!83239))

(assert (=> b!81241 m!83255))

(assert (=> b!80658 d!19979))

(declare-fun d!19981 () Bool)

(declare-fun c!12783 () Bool)

(assert (=> d!19981 (= c!12783 (and ((_ is Cons!1507) (t!5178 lt!37555)) (= (_1!1101 (h!2096 (t!5178 lt!37555))) (_1!1101 lt!37278))))))

(declare-fun e!53023 () Option!144)

(assert (=> d!19981 (= (getValueByKey!138 (t!5178 lt!37555) (_1!1101 lt!37278)) e!53023)))

(declare-fun b!81245 () Bool)

(declare-fun e!53024 () Option!144)

(assert (=> b!81245 (= e!53023 e!53024)))

(declare-fun c!12784 () Bool)

(assert (=> b!81245 (= c!12784 (and ((_ is Cons!1507) (t!5178 lt!37555)) (not (= (_1!1101 (h!2096 (t!5178 lt!37555))) (_1!1101 lt!37278)))))))

(declare-fun b!81246 () Bool)

(assert (=> b!81246 (= e!53024 (getValueByKey!138 (t!5178 (t!5178 lt!37555)) (_1!1101 lt!37278)))))

(declare-fun b!81247 () Bool)

(assert (=> b!81247 (= e!53024 None!142)))

(declare-fun b!81244 () Bool)

(assert (=> b!81244 (= e!53023 (Some!143 (_2!1101 (h!2096 (t!5178 lt!37555)))))))

(assert (= (and d!19981 c!12783) b!81244))

(assert (= (and d!19981 (not c!12783)) b!81245))

(assert (= (and b!81245 c!12784) b!81246))

(assert (= (and b!81245 (not c!12784)) b!81247))

(declare-fun m!83261 () Bool)

(assert (=> b!81246 m!83261))

(assert (=> b!81113 d!19981))

(declare-fun b!81248 () Bool)

(declare-fun c!12785 () Bool)

(assert (=> b!81248 (= c!12785 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37273))) (bvsgt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37273)))) (_1!1101 lt!37278))))))

(declare-fun e!53025 () List!1511)

(declare-fun e!53026 () List!1511)

(assert (=> b!81248 (= e!53025 e!53026)))

(declare-fun b!81249 () Bool)

(declare-fun call!7584 () List!1511)

(assert (=> b!81249 (= e!53026 call!7584)))

(declare-fun c!12787 () Bool)

(declare-fun e!53027 () List!1511)

(declare-fun b!81250 () Bool)

(assert (=> b!81250 (= e!53027 (ite c!12787 (t!5178 (t!5178 (toList!741 lt!37273))) (ite c!12785 (Cons!1507 (h!2096 (t!5178 (toList!741 lt!37273))) (t!5178 (t!5178 (toList!741 lt!37273)))) Nil!1508)))))

(declare-fun d!19983 () Bool)

(declare-fun e!53029 () Bool)

(assert (=> d!19983 e!53029))

(declare-fun res!42259 () Bool)

(assert (=> d!19983 (=> (not res!42259) (not e!53029))))

(declare-fun lt!37982 () List!1511)

(assert (=> d!19983 (= res!42259 (isStrictlySorted!296 lt!37982))))

(declare-fun e!53028 () List!1511)

(assert (=> d!19983 (= lt!37982 e!53028)))

(declare-fun c!12786 () Bool)

(assert (=> d!19983 (= c!12786 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37273))) (bvslt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37273)))) (_1!1101 lt!37278))))))

(assert (=> d!19983 (isStrictlySorted!296 (t!5178 (toList!741 lt!37273)))))

(assert (=> d!19983 (= (insertStrictlySorted!58 (t!5178 (toList!741 lt!37273)) (_1!1101 lt!37278) (_2!1101 lt!37278)) lt!37982)))

(declare-fun b!81251 () Bool)

(declare-fun call!7586 () List!1511)

(assert (=> b!81251 (= e!53028 call!7586)))

(declare-fun bm!7581 () Bool)

(declare-fun call!7585 () List!1511)

(assert (=> bm!7581 (= call!7585 call!7586)))

(declare-fun bm!7582 () Bool)

(assert (=> bm!7582 (= call!7584 call!7585)))

(declare-fun b!81252 () Bool)

(assert (=> b!81252 (= e!53029 (contains!746 lt!37982 (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(declare-fun b!81253 () Bool)

(assert (=> b!81253 (= e!53028 e!53025)))

(assert (=> b!81253 (= c!12787 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37273))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37273)))) (_1!1101 lt!37278))))))

(declare-fun b!81254 () Bool)

(assert (=> b!81254 (= e!53026 call!7584)))

(declare-fun b!81255 () Bool)

(declare-fun res!42258 () Bool)

(assert (=> b!81255 (=> (not res!42258) (not e!53029))))

(assert (=> b!81255 (= res!42258 (containsKey!142 lt!37982 (_1!1101 lt!37278)))))

(declare-fun bm!7583 () Bool)

(assert (=> bm!7583 (= call!7586 ($colon$colon!70 e!53027 (ite c!12786 (h!2096 (t!5178 (toList!741 lt!37273))) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278)))))))

(declare-fun c!12788 () Bool)

(assert (=> bm!7583 (= c!12788 c!12786)))

(declare-fun b!81256 () Bool)

(assert (=> b!81256 (= e!53027 (insertStrictlySorted!58 (t!5178 (t!5178 (toList!741 lt!37273))) (_1!1101 lt!37278) (_2!1101 lt!37278)))))

(declare-fun b!81257 () Bool)

(assert (=> b!81257 (= e!53025 call!7585)))

(assert (= (and d!19983 c!12786) b!81251))

(assert (= (and d!19983 (not c!12786)) b!81253))

(assert (= (and b!81253 c!12787) b!81257))

(assert (= (and b!81253 (not c!12787)) b!81248))

(assert (= (and b!81248 c!12785) b!81254))

(assert (= (and b!81248 (not c!12785)) b!81249))

(assert (= (or b!81254 b!81249) bm!7582))

(assert (= (or b!81257 bm!7582) bm!7581))

(assert (= (or b!81251 bm!7581) bm!7583))

(assert (= (and bm!7583 c!12788) b!81256))

(assert (= (and bm!7583 (not c!12788)) b!81250))

(assert (= (and d!19983 res!42259) b!81255))

(assert (= (and b!81255 res!42258) b!81252))

(declare-fun m!83263 () Bool)

(assert (=> b!81252 m!83263))

(declare-fun m!83265 () Bool)

(assert (=> b!81255 m!83265))

(declare-fun m!83267 () Bool)

(assert (=> d!19983 m!83267))

(declare-fun m!83269 () Bool)

(assert (=> d!19983 m!83269))

(declare-fun m!83271 () Bool)

(assert (=> b!81256 m!83271))

(declare-fun m!83273 () Bool)

(assert (=> bm!7583 m!83273))

(assert (=> b!81081 d!19983))

(declare-fun d!19985 () Bool)

(assert (=> d!19985 (= (get!1182 (getValueByKey!138 (toList!741 lt!37498) lt!37480)) (v!2612 (getValueByKey!138 (toList!741 lt!37498) lt!37480)))))

(assert (=> d!19855 d!19985))

(declare-fun d!19987 () Bool)

(declare-fun c!12789 () Bool)

(assert (=> d!19987 (= c!12789 (and ((_ is Cons!1507) (toList!741 lt!37498)) (= (_1!1101 (h!2096 (toList!741 lt!37498))) lt!37480)))))

(declare-fun e!53030 () Option!144)

(assert (=> d!19987 (= (getValueByKey!138 (toList!741 lt!37498) lt!37480) e!53030)))

(declare-fun b!81259 () Bool)

(declare-fun e!53031 () Option!144)

(assert (=> b!81259 (= e!53030 e!53031)))

(declare-fun c!12790 () Bool)

(assert (=> b!81259 (= c!12790 (and ((_ is Cons!1507) (toList!741 lt!37498)) (not (= (_1!1101 (h!2096 (toList!741 lt!37498))) lt!37480))))))

(declare-fun b!81260 () Bool)

(assert (=> b!81260 (= e!53031 (getValueByKey!138 (t!5178 (toList!741 lt!37498)) lt!37480))))

(declare-fun b!81261 () Bool)

(assert (=> b!81261 (= e!53031 None!142)))

(declare-fun b!81258 () Bool)

(assert (=> b!81258 (= e!53030 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37498)))))))

(assert (= (and d!19987 c!12789) b!81258))

(assert (= (and d!19987 (not c!12789)) b!81259))

(assert (= (and b!81259 c!12790) b!81260))

(assert (= (and b!81259 (not c!12790)) b!81261))

(declare-fun m!83275 () Bool)

(assert (=> b!81260 m!83275))

(assert (=> d!19855 d!19987))

(declare-fun d!19989 () Bool)

(declare-fun lt!37983 () Bool)

(assert (=> d!19989 (= lt!37983 (select (content!85 lt!37927) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun e!53033 () Bool)

(assert (=> d!19989 (= lt!37983 e!53033)))

(declare-fun res!42260 () Bool)

(assert (=> d!19989 (=> (not res!42260) (not e!53033))))

(assert (=> d!19989 (= res!42260 ((_ is Cons!1507) lt!37927))))

(assert (=> d!19989 (= (contains!746 lt!37927 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))) lt!37983)))

(declare-fun b!81262 () Bool)

(declare-fun e!53032 () Bool)

(assert (=> b!81262 (= e!53033 e!53032)))

(declare-fun res!42261 () Bool)

(assert (=> b!81262 (=> res!42261 e!53032)))

(assert (=> b!81262 (= res!42261 (= (h!2096 lt!37927) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun b!81263 () Bool)

(assert (=> b!81263 (= e!53032 (contains!746 (t!5178 lt!37927) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(assert (= (and d!19989 res!42260) b!81262))

(assert (= (and b!81262 (not res!42261)) b!81263))

(declare-fun m!83277 () Bool)

(assert (=> d!19989 m!83277))

(declare-fun m!83279 () Bool)

(assert (=> d!19989 m!83279))

(declare-fun m!83281 () Bool)

(assert (=> b!81263 m!83281))

(assert (=> b!81099 d!19989))

(declare-fun b!81264 () Bool)

(declare-fun e!53035 () Bool)

(declare-fun call!7587 () Bool)

(assert (=> b!81264 (= e!53035 call!7587)))

(declare-fun bm!7584 () Bool)

(declare-fun c!12791 () Bool)

(assert (=> bm!7584 (= call!7587 (arrayNoDuplicates!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12791 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!12644 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509))) (ite c!12644 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)))))))

(declare-fun b!81265 () Bool)

(assert (=> b!81265 (= e!53035 call!7587)))

(declare-fun b!81266 () Bool)

(declare-fun e!53034 () Bool)

(assert (=> b!81266 (= e!53034 e!53035)))

(assert (=> b!81266 (= c!12791 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!81268 () Bool)

(declare-fun e!53037 () Bool)

(assert (=> b!81268 (= e!53037 (contains!747 (ite c!12644 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!81267 () Bool)

(declare-fun e!53036 () Bool)

(assert (=> b!81267 (= e!53036 e!53034)))

(declare-fun res!42263 () Bool)

(assert (=> b!81267 (=> (not res!42263) (not e!53034))))

(assert (=> b!81267 (= res!42263 (not e!53037))))

(declare-fun res!42262 () Bool)

(assert (=> b!81267 (=> (not res!42262) (not e!53037))))

(assert (=> b!81267 (= res!42262 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!19991 () Bool)

(declare-fun res!42264 () Bool)

(assert (=> d!19991 (=> res!42264 e!53036)))

(assert (=> d!19991 (= res!42264 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> d!19991 (= (arrayNoDuplicates!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12644 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509))) e!53036)))

(assert (= (and d!19991 (not res!42264)) b!81267))

(assert (= (and b!81267 res!42262) b!81268))

(assert (= (and b!81267 res!42263) b!81266))

(assert (= (and b!81266 c!12791) b!81264))

(assert (= (and b!81266 (not c!12791)) b!81265))

(assert (= (or b!81264 b!81265) bm!7584))

(declare-fun m!83283 () Bool)

(assert (=> bm!7584 m!83283))

(declare-fun m!83285 () Bool)

(assert (=> bm!7584 m!83285))

(assert (=> b!81266 m!83283))

(assert (=> b!81266 m!83283))

(declare-fun m!83287 () Bool)

(assert (=> b!81266 m!83287))

(assert (=> b!81268 m!83283))

(assert (=> b!81268 m!83283))

(declare-fun m!83289 () Bool)

(assert (=> b!81268 m!83289))

(assert (=> b!81267 m!83283))

(assert (=> b!81267 m!83283))

(assert (=> b!81267 m!83287))

(assert (=> bm!7512 d!19991))

(declare-fun d!19993 () Bool)

(declare-fun c!12792 () Bool)

(assert (=> d!19993 (= c!12792 ((_ is Nil!1508) (toList!741 lt!37512)))))

(declare-fun e!53038 () (InoxSet tuple2!2180))

(assert (=> d!19993 (= (content!85 (toList!741 lt!37512)) e!53038)))

(declare-fun b!81269 () Bool)

(assert (=> b!81269 (= e!53038 ((as const (Array tuple2!2180 Bool)) false))))

(declare-fun b!81270 () Bool)

(assert (=> b!81270 (= e!53038 ((_ map or) (store ((as const (Array tuple2!2180 Bool)) false) (h!2096 (toList!741 lt!37512)) true) (content!85 (t!5178 (toList!741 lt!37512)))))))

(assert (= (and d!19993 c!12792) b!81269))

(assert (= (and d!19993 (not c!12792)) b!81270))

(declare-fun m!83291 () Bool)

(assert (=> b!81270 m!83291))

(declare-fun m!83293 () Bool)

(assert (=> b!81270 m!83293))

(assert (=> d!19943 d!19993))

(declare-fun d!19995 () Bool)

(declare-fun c!12793 () Bool)

(assert (=> d!19995 (= c!12793 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37516))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37516)))) (_1!1101 lt!37283))))))

(declare-fun e!53039 () Option!144)

(assert (=> d!19995 (= (getValueByKey!138 (t!5178 (toList!741 lt!37516)) (_1!1101 lt!37283)) e!53039)))

(declare-fun b!81272 () Bool)

(declare-fun e!53040 () Option!144)

(assert (=> b!81272 (= e!53039 e!53040)))

(declare-fun c!12794 () Bool)

(assert (=> b!81272 (= c!12794 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37516))) (not (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37516)))) (_1!1101 lt!37283)))))))

(declare-fun b!81273 () Bool)

(assert (=> b!81273 (= e!53040 (getValueByKey!138 (t!5178 (t!5178 (toList!741 lt!37516))) (_1!1101 lt!37283)))))

(declare-fun b!81274 () Bool)

(assert (=> b!81274 (= e!53040 None!142)))

(declare-fun b!81271 () Bool)

(assert (=> b!81271 (= e!53039 (Some!143 (_2!1101 (h!2096 (t!5178 (toList!741 lt!37516))))))))

(assert (= (and d!19995 c!12793) b!81271))

(assert (= (and d!19995 (not c!12793)) b!81272))

(assert (= (and b!81272 c!12794) b!81273))

(assert (= (and b!81272 (not c!12794)) b!81274))

(declare-fun m!83295 () Bool)

(assert (=> b!81273 m!83295))

(assert (=> b!81014 d!19995))

(declare-fun d!19997 () Bool)

(declare-fun res!42265 () Bool)

(declare-fun e!53041 () Bool)

(assert (=> d!19997 (=> res!42265 e!53041)))

(assert (=> d!19997 (= res!42265 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))) lt!37479)))))

(assert (=> d!19997 (= (containsKey!142 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37479) e!53041)))

(declare-fun b!81275 () Bool)

(declare-fun e!53042 () Bool)

(assert (=> b!81275 (= e!53041 e!53042)))

(declare-fun res!42266 () Bool)

(assert (=> b!81275 (=> (not res!42266) (not e!53042))))

(assert (=> b!81275 (= res!42266 (and (or (not ((_ is Cons!1507) (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))) (bvsle (_1!1101 (h!2096 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))) lt!37479)) ((_ is Cons!1507) (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (bvslt (_1!1101 (h!2096 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))) lt!37479)))))

(declare-fun b!81276 () Bool)

(assert (=> b!81276 (= e!53042 (containsKey!142 (t!5178 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) lt!37479))))

(assert (= (and d!19997 (not res!42265)) b!81275))

(assert (= (and b!81275 res!42266) b!81276))

(declare-fun m!83297 () Bool)

(assert (=> b!81276 m!83297))

(assert (=> d!19877 d!19997))

(declare-fun d!19999 () Bool)

(assert (=> d!19999 (= (get!1180 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2607 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80689 d!19999))

(declare-fun b!81277 () Bool)

(declare-fun c!12795 () Bool)

(assert (=> b!81277 (= c!12795 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37281))) (bvsgt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37281)))) (_1!1101 lt!37268))))))

(declare-fun e!53043 () List!1511)

(declare-fun e!53044 () List!1511)

(assert (=> b!81277 (= e!53043 e!53044)))

(declare-fun b!81278 () Bool)

(declare-fun call!7588 () List!1511)

(assert (=> b!81278 (= e!53044 call!7588)))

(declare-fun b!81279 () Bool)

(declare-fun c!12797 () Bool)

(declare-fun e!53045 () List!1511)

(assert (=> b!81279 (= e!53045 (ite c!12797 (t!5178 (t!5178 (toList!741 lt!37281))) (ite c!12795 (Cons!1507 (h!2096 (t!5178 (toList!741 lt!37281))) (t!5178 (t!5178 (toList!741 lt!37281)))) Nil!1508)))))

(declare-fun d!20001 () Bool)

(declare-fun e!53047 () Bool)

(assert (=> d!20001 e!53047))

(declare-fun res!42268 () Bool)

(assert (=> d!20001 (=> (not res!42268) (not e!53047))))

(declare-fun lt!37984 () List!1511)

(assert (=> d!20001 (= res!42268 (isStrictlySorted!296 lt!37984))))

(declare-fun e!53046 () List!1511)

(assert (=> d!20001 (= lt!37984 e!53046)))

(declare-fun c!12796 () Bool)

(assert (=> d!20001 (= c!12796 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37281))) (bvslt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37281)))) (_1!1101 lt!37268))))))

(assert (=> d!20001 (isStrictlySorted!296 (t!5178 (toList!741 lt!37281)))))

(assert (=> d!20001 (= (insertStrictlySorted!58 (t!5178 (toList!741 lt!37281)) (_1!1101 lt!37268) (_2!1101 lt!37268)) lt!37984)))

(declare-fun b!81280 () Bool)

(declare-fun call!7590 () List!1511)

(assert (=> b!81280 (= e!53046 call!7590)))

(declare-fun bm!7585 () Bool)

(declare-fun call!7589 () List!1511)

(assert (=> bm!7585 (= call!7589 call!7590)))

(declare-fun bm!7586 () Bool)

(assert (=> bm!7586 (= call!7588 call!7589)))

(declare-fun b!81281 () Bool)

(assert (=> b!81281 (= e!53047 (contains!746 lt!37984 (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(declare-fun b!81282 () Bool)

(assert (=> b!81282 (= e!53046 e!53043)))

(assert (=> b!81282 (= c!12797 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37281))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37281)))) (_1!1101 lt!37268))))))

(declare-fun b!81283 () Bool)

(assert (=> b!81283 (= e!53044 call!7588)))

(declare-fun b!81284 () Bool)

(declare-fun res!42267 () Bool)

(assert (=> b!81284 (=> (not res!42267) (not e!53047))))

(assert (=> b!81284 (= res!42267 (containsKey!142 lt!37984 (_1!1101 lt!37268)))))

(declare-fun bm!7587 () Bool)

(assert (=> bm!7587 (= call!7590 ($colon$colon!70 e!53045 (ite c!12796 (h!2096 (t!5178 (toList!741 lt!37281))) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268)))))))

(declare-fun c!12798 () Bool)

(assert (=> bm!7587 (= c!12798 c!12796)))

(declare-fun b!81285 () Bool)

(assert (=> b!81285 (= e!53045 (insertStrictlySorted!58 (t!5178 (t!5178 (toList!741 lt!37281))) (_1!1101 lt!37268) (_2!1101 lt!37268)))))

(declare-fun b!81286 () Bool)

(assert (=> b!81286 (= e!53043 call!7589)))

(assert (= (and d!20001 c!12796) b!81280))

(assert (= (and d!20001 (not c!12796)) b!81282))

(assert (= (and b!81282 c!12797) b!81286))

(assert (= (and b!81282 (not c!12797)) b!81277))

(assert (= (and b!81277 c!12795) b!81283))

(assert (= (and b!81277 (not c!12795)) b!81278))

(assert (= (or b!81283 b!81278) bm!7586))

(assert (= (or b!81286 bm!7586) bm!7585))

(assert (= (or b!81280 bm!7585) bm!7587))

(assert (= (and bm!7587 c!12798) b!81285))

(assert (= (and bm!7587 (not c!12798)) b!81279))

(assert (= (and d!20001 res!42268) b!81284))

(assert (= (and b!81284 res!42267) b!81281))

(declare-fun m!83299 () Bool)

(assert (=> b!81281 m!83299))

(declare-fun m!83301 () Bool)

(assert (=> b!81284 m!83301))

(declare-fun m!83303 () Bool)

(assert (=> d!20001 m!83303))

(declare-fun m!83305 () Bool)

(assert (=> d!20001 m!83305))

(declare-fun m!83307 () Bool)

(assert (=> b!81285 m!83307))

(declare-fun m!83309 () Bool)

(assert (=> bm!7587 m!83309))

(assert (=> b!81180 d!20001))

(declare-fun lt!37985 () Bool)

(declare-fun d!20003 () Bool)

(assert (=> d!20003 (= lt!37985 (select (content!85 (toList!741 lt!37610)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(declare-fun e!53049 () Bool)

(assert (=> d!20003 (= lt!37985 e!53049)))

(declare-fun res!42269 () Bool)

(assert (=> d!20003 (=> (not res!42269) (not e!53049))))

(assert (=> d!20003 (= res!42269 ((_ is Cons!1507) (toList!741 lt!37610)))))

(assert (=> d!20003 (= (contains!746 (toList!741 lt!37610) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) lt!37985)))

(declare-fun b!81287 () Bool)

(declare-fun e!53048 () Bool)

(assert (=> b!81287 (= e!53049 e!53048)))

(declare-fun res!42270 () Bool)

(assert (=> b!81287 (=> res!42270 e!53048)))

(assert (=> b!81287 (= res!42270 (= (h!2096 (toList!741 lt!37610)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(declare-fun b!81288 () Bool)

(assert (=> b!81288 (= e!53048 (contains!746 (t!5178 (toList!741 lt!37610)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (= (and d!20003 res!42269) b!81287))

(assert (= (and b!81287 (not res!42270)) b!81288))

(declare-fun m!83311 () Bool)

(assert (=> d!20003 m!83311))

(declare-fun m!83313 () Bool)

(assert (=> d!20003 m!83313))

(declare-fun m!83315 () Bool)

(assert (=> b!81288 m!83315))

(assert (=> b!80717 d!20003))

(declare-fun d!20005 () Bool)

(assert (=> d!20005 (= (+!106 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37414 (zeroValue!2189 newMap!16) lt!37282 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(assert (=> d!20005 true))

(declare-fun _$8!70 () Unit!2341)

(assert (=> d!20005 (= (choose!478 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37414 (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) lt!37282 (defaultEntry!2293 newMap!16)) _$8!70)))

(declare-fun bs!3436 () Bool)

(assert (= bs!3436 d!20005))

(assert (=> bs!3436 m!81965))

(assert (=> bs!3436 m!81965))

(assert (=> bs!3436 m!83033))

(assert (=> bs!3436 m!83037))

(assert (=> d!19903 d!20005))

(declare-fun d!20007 () Bool)

(declare-fun e!53050 () Bool)

(assert (=> d!20007 e!53050))

(declare-fun res!42272 () Bool)

(assert (=> d!20007 (=> (not res!42272) (not e!53050))))

(declare-fun lt!37987 () ListLongMap!1451)

(assert (=> d!20007 (= res!42272 (contains!745 lt!37987 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282))))))

(declare-fun lt!37989 () List!1511)

(assert (=> d!20007 (= lt!37987 (ListLongMap!1452 lt!37989))))

(declare-fun lt!37988 () Unit!2341)

(declare-fun lt!37986 () Unit!2341)

(assert (=> d!20007 (= lt!37988 lt!37986)))

(assert (=> d!20007 (= (getValueByKey!138 lt!37989 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282))))))

(assert (=> d!20007 (= lt!37986 (lemmaContainsTupThenGetReturnValue!55 lt!37989 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282))))))

(assert (=> d!20007 (= lt!37989 (insertStrictlySorted!58 (toList!741 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282))))))

(assert (=> d!20007 (= (+!106 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) lt!37987)))

(declare-fun b!81289 () Bool)

(declare-fun res!42271 () Bool)

(assert (=> b!81289 (=> (not res!42271) (not e!53050))))

(assert (=> b!81289 (= res!42271 (= (getValueByKey!138 (toList!741 lt!37987) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)))))))

(declare-fun b!81290 () Bool)

(assert (=> b!81290 (= e!53050 (contains!746 (toList!741 lt!37987) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)))))

(assert (= (and d!20007 res!42272) b!81289))

(assert (= (and b!81289 res!42271) b!81290))

(declare-fun m!83317 () Bool)

(assert (=> d!20007 m!83317))

(declare-fun m!83319 () Bool)

(assert (=> d!20007 m!83319))

(declare-fun m!83321 () Bool)

(assert (=> d!20007 m!83321))

(declare-fun m!83323 () Bool)

(assert (=> d!20007 m!83323))

(declare-fun m!83325 () Bool)

(assert (=> b!81289 m!83325))

(declare-fun m!83327 () Bool)

(assert (=> b!81290 m!83327))

(assert (=> d!19903 d!20007))

(assert (=> d!19903 d!19773))

(declare-fun d!20009 () Bool)

(declare-fun e!53051 () Bool)

(assert (=> d!20009 e!53051))

(declare-fun res!42280 () Bool)

(assert (=> d!20009 (=> (not res!42280) (not e!53051))))

(assert (=> d!20009 (= res!42280 (or (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))))

(declare-fun lt!38000 () ListLongMap!1451)

(declare-fun lt!37991 () ListLongMap!1451)

(assert (=> d!20009 (= lt!38000 lt!37991)))

(declare-fun lt!38003 () Unit!2341)

(declare-fun e!53058 () Unit!2341)

(assert (=> d!20009 (= lt!38003 e!53058)))

(declare-fun c!12803 () Bool)

(declare-fun e!53057 () Bool)

(assert (=> d!20009 (= c!12803 e!53057)))

(declare-fun res!42273 () Bool)

(assert (=> d!20009 (=> (not res!42273) (not e!53057))))

(assert (=> d!20009 (= res!42273 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun e!53062 () ListLongMap!1451)

(assert (=> d!20009 (= lt!37991 e!53062)))

(declare-fun c!12800 () Bool)

(assert (=> d!20009 (= c!12800 (and (not (= (bvand lt!37414 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!37414 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20009 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20009 (= (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37414 (zeroValue!2189 newMap!16) lt!37282 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38000)))

(declare-fun b!81291 () Bool)

(declare-fun Unit!2375 () Unit!2341)

(assert (=> b!81291 (= e!53058 Unit!2375)))

(declare-fun b!81292 () Bool)

(declare-fun lt!37990 () Unit!2341)

(assert (=> b!81292 (= e!53058 lt!37990)))

(declare-fun lt!37999 () ListLongMap!1451)

(assert (=> b!81292 (= lt!37999 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37414 (zeroValue!2189 newMap!16) lt!37282 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38005 () (_ BitVec 64))

(assert (=> b!81292 (= lt!38005 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37992 () (_ BitVec 64))

(assert (=> b!81292 (= lt!37992 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37994 () Unit!2341)

(assert (=> b!81292 (= lt!37994 (addStillContains!56 lt!37999 lt!38005 (zeroValue!2189 newMap!16) lt!37992))))

(assert (=> b!81292 (contains!745 (+!106 lt!37999 (tuple2!2181 lt!38005 (zeroValue!2189 newMap!16))) lt!37992)))

(declare-fun lt!38010 () Unit!2341)

(assert (=> b!81292 (= lt!38010 lt!37994)))

(declare-fun lt!38011 () ListLongMap!1451)

(assert (=> b!81292 (= lt!38011 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37414 (zeroValue!2189 newMap!16) lt!37282 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38007 () (_ BitVec 64))

(assert (=> b!81292 (= lt!38007 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37993 () (_ BitVec 64))

(assert (=> b!81292 (= lt!37993 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38001 () Unit!2341)

(assert (=> b!81292 (= lt!38001 (addApplyDifferent!56 lt!38011 lt!38007 lt!37282 lt!37993))))

(assert (=> b!81292 (= (apply!80 (+!106 lt!38011 (tuple2!2181 lt!38007 lt!37282)) lt!37993) (apply!80 lt!38011 lt!37993))))

(declare-fun lt!37997 () Unit!2341)

(assert (=> b!81292 (= lt!37997 lt!38001)))

(declare-fun lt!38008 () ListLongMap!1451)

(assert (=> b!81292 (= lt!38008 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37414 (zeroValue!2189 newMap!16) lt!37282 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37995 () (_ BitVec 64))

(assert (=> b!81292 (= lt!37995 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37998 () (_ BitVec 64))

(assert (=> b!81292 (= lt!37998 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37996 () Unit!2341)

(assert (=> b!81292 (= lt!37996 (addApplyDifferent!56 lt!38008 lt!37995 (zeroValue!2189 newMap!16) lt!37998))))

(assert (=> b!81292 (= (apply!80 (+!106 lt!38008 (tuple2!2181 lt!37995 (zeroValue!2189 newMap!16))) lt!37998) (apply!80 lt!38008 lt!37998))))

(declare-fun lt!38009 () Unit!2341)

(assert (=> b!81292 (= lt!38009 lt!37996)))

(declare-fun lt!38006 () ListLongMap!1451)

(assert (=> b!81292 (= lt!38006 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37414 (zeroValue!2189 newMap!16) lt!37282 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38004 () (_ BitVec 64))

(assert (=> b!81292 (= lt!38004 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38002 () (_ BitVec 64))

(assert (=> b!81292 (= lt!38002 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81292 (= lt!37990 (addApplyDifferent!56 lt!38006 lt!38004 lt!37282 lt!38002))))

(assert (=> b!81292 (= (apply!80 (+!106 lt!38006 (tuple2!2181 lt!38004 lt!37282)) lt!38002) (apply!80 lt!38006 lt!38002))))

(declare-fun b!81293 () Bool)

(declare-fun res!42276 () Bool)

(assert (=> b!81293 (=> (not res!42276) (not e!53051))))

(declare-fun e!53052 () Bool)

(assert (=> b!81293 (= res!42276 e!53052)))

(declare-fun res!42281 () Bool)

(assert (=> b!81293 (=> res!42281 e!53052)))

(declare-fun e!53059 () Bool)

(assert (=> b!81293 (= res!42281 (not e!53059))))

(declare-fun res!42279 () Bool)

(assert (=> b!81293 (=> (not res!42279) (not e!53059))))

(assert (=> b!81293 (= res!42279 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81294 () Bool)

(declare-fun e!53061 () Bool)

(assert (=> b!81294 (= e!53061 (= (apply!80 lt!38000 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37282))))

(declare-fun b!81295 () Bool)

(declare-fun e!53063 () Bool)

(assert (=> b!81295 (= e!53052 e!53063)))

(declare-fun res!42275 () Bool)

(assert (=> b!81295 (=> (not res!42275) (not e!53063))))

(assert (=> b!81295 (= res!42275 (contains!745 lt!38000 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81295 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun bm!7588 () Bool)

(declare-fun call!7596 () ListLongMap!1451)

(declare-fun call!7597 () ListLongMap!1451)

(assert (=> bm!7588 (= call!7596 call!7597)))

(declare-fun b!81296 () Bool)

(declare-fun e!53056 () Bool)

(assert (=> b!81296 (= e!53056 e!53061)))

(declare-fun res!42277 () Bool)

(declare-fun call!7593 () Bool)

(assert (=> b!81296 (= res!42277 call!7593)))

(assert (=> b!81296 (=> (not res!42277) (not e!53061))))

(declare-fun b!81297 () Bool)

(assert (=> b!81297 (= e!53059 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81298 () Bool)

(assert (=> b!81298 (= e!53056 (not call!7593))))

(declare-fun b!81299 () Bool)

(assert (=> b!81299 (= e!53057 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81300 () Bool)

(declare-fun e!53060 () Bool)

(declare-fun call!7595 () Bool)

(assert (=> b!81300 (= e!53060 (not call!7595))))

(declare-fun bm!7589 () Bool)

(declare-fun call!7594 () ListLongMap!1451)

(assert (=> bm!7589 (= call!7594 call!7596)))

(declare-fun b!81301 () Bool)

(declare-fun e!53054 () ListLongMap!1451)

(declare-fun call!7592 () ListLongMap!1451)

(assert (=> b!81301 (= e!53054 call!7592)))

(declare-fun bm!7590 () Bool)

(assert (=> bm!7590 (= call!7595 (contains!745 lt!38000 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81302 () Bool)

(assert (=> b!81302 (= e!53051 e!53056)))

(declare-fun c!12799 () Bool)

(assert (=> b!81302 (= c!12799 (not (= (bvand lt!37414 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7591 () Bool)

(assert (=> bm!7591 (= call!7597 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37414 (zeroValue!2189 newMap!16) lt!37282 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bm!7592 () Bool)

(declare-fun call!7591 () ListLongMap!1451)

(assert (=> bm!7592 (= call!7592 call!7591)))

(declare-fun b!81303 () Bool)

(declare-fun res!42274 () Bool)

(assert (=> b!81303 (=> (not res!42274) (not e!53051))))

(assert (=> b!81303 (= res!42274 e!53060)))

(declare-fun c!12802 () Bool)

(assert (=> b!81303 (= c!12802 (not (= (bvand lt!37414 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81304 () Bool)

(assert (=> b!81304 (= e!53062 (+!106 call!7591 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)))))

(declare-fun b!81305 () Bool)

(assert (=> b!81305 (= e!53054 call!7594)))

(declare-fun bm!7593 () Bool)

(declare-fun c!12801 () Bool)

(assert (=> bm!7593 (= call!7591 (+!106 (ite c!12800 call!7597 (ite c!12801 call!7596 call!7594)) (ite (or c!12800 c!12801) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282))))))

(declare-fun b!81306 () Bool)

(assert (=> b!81306 (= e!53063 (= (apply!80 lt!38000 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81306 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_values!2276 newMap!16))))))

(assert (=> b!81306 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81307 () Bool)

(declare-fun c!12804 () Bool)

(assert (=> b!81307 (= c!12804 (and (not (= (bvand lt!37414 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!37414 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53053 () ListLongMap!1451)

(assert (=> b!81307 (= e!53053 e!53054)))

(declare-fun b!81308 () Bool)

(declare-fun e!53055 () Bool)

(assert (=> b!81308 (= e!53055 (= (apply!80 lt!38000 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun b!81309 () Bool)

(assert (=> b!81309 (= e!53060 e!53055)))

(declare-fun res!42278 () Bool)

(assert (=> b!81309 (= res!42278 call!7595)))

(assert (=> b!81309 (=> (not res!42278) (not e!53055))))

(declare-fun b!81310 () Bool)

(assert (=> b!81310 (= e!53062 e!53053)))

(assert (=> b!81310 (= c!12801 (and (not (= (bvand lt!37414 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!37414 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7594 () Bool)

(assert (=> bm!7594 (= call!7593 (contains!745 lt!38000 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81311 () Bool)

(assert (=> b!81311 (= e!53053 call!7592)))

(assert (= (and d!20009 c!12800) b!81304))

(assert (= (and d!20009 (not c!12800)) b!81310))

(assert (= (and b!81310 c!12801) b!81311))

(assert (= (and b!81310 (not c!12801)) b!81307))

(assert (= (and b!81307 c!12804) b!81301))

(assert (= (and b!81307 (not c!12804)) b!81305))

(assert (= (or b!81301 b!81305) bm!7589))

(assert (= (or b!81311 bm!7589) bm!7588))

(assert (= (or b!81311 b!81301) bm!7592))

(assert (= (or b!81304 bm!7588) bm!7591))

(assert (= (or b!81304 bm!7592) bm!7593))

(assert (= (and d!20009 res!42273) b!81299))

(assert (= (and d!20009 c!12803) b!81292))

(assert (= (and d!20009 (not c!12803)) b!81291))

(assert (= (and d!20009 res!42280) b!81293))

(assert (= (and b!81293 res!42279) b!81297))

(assert (= (and b!81293 (not res!42281)) b!81295))

(assert (= (and b!81295 res!42275) b!81306))

(assert (= (and b!81293 res!42276) b!81303))

(assert (= (and b!81303 c!12802) b!81309))

(assert (= (and b!81303 (not c!12802)) b!81300))

(assert (= (and b!81309 res!42278) b!81308))

(assert (= (or b!81309 b!81300) bm!7590))

(assert (= (and b!81303 res!42274) b!81302))

(assert (= (and b!81302 c!12799) b!81296))

(assert (= (and b!81302 (not c!12799)) b!81298))

(assert (= (and b!81296 res!42277) b!81294))

(assert (= (or b!81296 b!81298) bm!7594))

(declare-fun b_lambda!3629 () Bool)

(assert (=> (not b_lambda!3629) (not b!81306)))

(assert (=> b!81306 t!5185))

(declare-fun b_and!4963 () Bool)

(assert (= b_and!4959 (and (=> t!5185 result!2853) b_and!4963)))

(assert (=> b!81306 t!5187))

(declare-fun b_and!4965 () Bool)

(assert (= b_and!4961 (and (=> t!5187 result!2855) b_and!4965)))

(assert (=> b!81306 m!82265))

(assert (=> b!81306 m!82487))

(assert (=> b!81306 m!82265))

(declare-fun m!83329 () Bool)

(assert (=> b!81306 m!83329))

(assert (=> b!81306 m!82271))

(assert (=> b!81306 m!82487))

(assert (=> b!81306 m!82271))

(assert (=> b!81306 m!82491))

(declare-fun m!83331 () Bool)

(assert (=> bm!7590 m!83331))

(declare-fun m!83333 () Bool)

(assert (=> bm!7593 m!83333))

(assert (=> b!81292 m!82265))

(declare-fun m!83335 () Bool)

(assert (=> b!81292 m!83335))

(declare-fun m!83337 () Bool)

(assert (=> b!81292 m!83337))

(declare-fun m!83339 () Bool)

(assert (=> b!81292 m!83339))

(declare-fun m!83341 () Bool)

(assert (=> b!81292 m!83341))

(declare-fun m!83343 () Bool)

(assert (=> b!81292 m!83343))

(declare-fun m!83345 () Bool)

(assert (=> b!81292 m!83345))

(declare-fun m!83347 () Bool)

(assert (=> b!81292 m!83347))

(declare-fun m!83349 () Bool)

(assert (=> b!81292 m!83349))

(declare-fun m!83351 () Bool)

(assert (=> b!81292 m!83351))

(assert (=> b!81292 m!83337))

(assert (=> b!81292 m!83341))

(declare-fun m!83353 () Bool)

(assert (=> b!81292 m!83353))

(declare-fun m!83355 () Bool)

(assert (=> b!81292 m!83355))

(declare-fun m!83357 () Bool)

(assert (=> b!81292 m!83357))

(declare-fun m!83359 () Bool)

(assert (=> b!81292 m!83359))

(assert (=> b!81292 m!83359))

(declare-fun m!83361 () Bool)

(assert (=> b!81292 m!83361))

(assert (=> b!81292 m!83349))

(declare-fun m!83363 () Bool)

(assert (=> b!81292 m!83363))

(declare-fun m!83365 () Bool)

(assert (=> b!81292 m!83365))

(declare-fun m!83367 () Bool)

(assert (=> b!81294 m!83367))

(assert (=> b!81299 m!82265))

(assert (=> b!81299 m!82265))

(assert (=> b!81299 m!82313))

(declare-fun m!83369 () Bool)

(assert (=> bm!7594 m!83369))

(assert (=> bm!7591 m!83365))

(declare-fun m!83371 () Bool)

(assert (=> b!81304 m!83371))

(assert (=> b!81297 m!82265))

(assert (=> b!81297 m!82265))

(assert (=> b!81297 m!82313))

(assert (=> b!81295 m!82265))

(assert (=> b!81295 m!82265))

(declare-fun m!83373 () Bool)

(assert (=> b!81295 m!83373))

(assert (=> d!20009 m!82321))

(declare-fun m!83375 () Bool)

(assert (=> b!81308 m!83375))

(assert (=> d!19903 d!20009))

(assert (=> d!19903 d!19953))

(declare-fun d!20011 () Bool)

(declare-fun e!53064 () Bool)

(assert (=> d!20011 e!53064))

(declare-fun res!42283 () Bool)

(assert (=> d!20011 (=> (not res!42283) (not e!53064))))

(declare-fun lt!38013 () ListLongMap!1451)

(assert (=> d!20011 (= res!42283 (contains!745 lt!38013 (_1!1101 (ite (or c!12681 c!12682) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(declare-fun lt!38015 () List!1511)

(assert (=> d!20011 (= lt!38013 (ListLongMap!1452 lt!38015))))

(declare-fun lt!38014 () Unit!2341)

(declare-fun lt!38012 () Unit!2341)

(assert (=> d!20011 (= lt!38014 lt!38012)))

(assert (=> d!20011 (= (getValueByKey!138 lt!38015 (_1!1101 (ite (or c!12681 c!12682) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))) (Some!143 (_2!1101 (ite (or c!12681 c!12682) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(assert (=> d!20011 (= lt!38012 (lemmaContainsTupThenGetReturnValue!55 lt!38015 (_1!1101 (ite (or c!12681 c!12682) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (_2!1101 (ite (or c!12681 c!12682) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(assert (=> d!20011 (= lt!38015 (insertStrictlySorted!58 (toList!741 (ite c!12681 call!7537 (ite c!12682 call!7536 call!7534))) (_1!1101 (ite (or c!12681 c!12682) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (_2!1101 (ite (or c!12681 c!12682) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(assert (=> d!20011 (= (+!106 (ite c!12681 call!7537 (ite c!12682 call!7536 call!7534)) (ite (or c!12681 c!12682) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) lt!38013)))

(declare-fun b!81312 () Bool)

(declare-fun res!42282 () Bool)

(assert (=> b!81312 (=> (not res!42282) (not e!53064))))

(assert (=> b!81312 (= res!42282 (= (getValueByKey!138 (toList!741 lt!38013) (_1!1101 (ite (or c!12681 c!12682) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))) (Some!143 (_2!1101 (ite (or c!12681 c!12682) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))))

(declare-fun b!81313 () Bool)

(assert (=> b!81313 (= e!53064 (contains!746 (toList!741 lt!38013) (ite (or c!12681 c!12682) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (= (and d!20011 res!42283) b!81312))

(assert (= (and b!81312 res!42282) b!81313))

(declare-fun m!83377 () Bool)

(assert (=> d!20011 m!83377))

(declare-fun m!83379 () Bool)

(assert (=> d!20011 m!83379))

(declare-fun m!83381 () Bool)

(assert (=> d!20011 m!83381))

(declare-fun m!83383 () Bool)

(assert (=> d!20011 m!83383))

(declare-fun m!83385 () Bool)

(assert (=> b!81312 m!83385))

(declare-fun m!83387 () Bool)

(assert (=> b!81313 m!83387))

(assert (=> bm!7533 d!20011))

(declare-fun d!20013 () Bool)

(declare-fun e!53065 () Bool)

(assert (=> d!20013 e!53065))

(declare-fun res!42284 () Bool)

(assert (=> d!20013 (=> res!42284 e!53065)))

(declare-fun lt!38017 () Bool)

(assert (=> d!20013 (= res!42284 (not lt!38017))))

(declare-fun lt!38016 () Bool)

(assert (=> d!20013 (= lt!38017 lt!38016)))

(declare-fun lt!38019 () Unit!2341)

(declare-fun e!53066 () Unit!2341)

(assert (=> d!20013 (= lt!38019 e!53066)))

(declare-fun c!12805 () Bool)

(assert (=> d!20013 (= c!12805 lt!38016)))

(assert (=> d!20013 (= lt!38016 (containsKey!142 (toList!741 lt!37823) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20013 (= (contains!745 lt!37823 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38017)))

(declare-fun b!81314 () Bool)

(declare-fun lt!38018 () Unit!2341)

(assert (=> b!81314 (= e!53066 lt!38018)))

(assert (=> b!81314 (= lt!38018 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37823) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> b!81314 (isDefined!91 (getValueByKey!138 (toList!741 lt!37823) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81315 () Bool)

(declare-fun Unit!2376 () Unit!2341)

(assert (=> b!81315 (= e!53066 Unit!2376)))

(declare-fun b!81316 () Bool)

(assert (=> b!81316 (= e!53065 (isDefined!91 (getValueByKey!138 (toList!741 lt!37823) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (= (and d!20013 c!12805) b!81314))

(assert (= (and d!20013 (not c!12805)) b!81315))

(assert (= (and d!20013 (not res!42284)) b!81316))

(declare-fun m!83389 () Bool)

(assert (=> d!20013 m!83389))

(declare-fun m!83391 () Bool)

(assert (=> b!81314 m!83391))

(assert (=> b!81314 m!82735))

(assert (=> b!81314 m!82735))

(declare-fun m!83393 () Bool)

(assert (=> b!81314 m!83393))

(assert (=> b!81316 m!82735))

(assert (=> b!81316 m!82735))

(assert (=> b!81316 m!83393))

(assert (=> d!19801 d!20013))

(declare-fun c!12806 () Bool)

(declare-fun d!20015 () Bool)

(assert (=> d!20015 (= c!12806 (and ((_ is Cons!1507) lt!37825) (= (_1!1101 (h!2096 lt!37825)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53067 () Option!144)

(assert (=> d!20015 (= (getValueByKey!138 lt!37825 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) e!53067)))

(declare-fun b!81318 () Bool)

(declare-fun e!53068 () Option!144)

(assert (=> b!81318 (= e!53067 e!53068)))

(declare-fun c!12807 () Bool)

(assert (=> b!81318 (= c!12807 (and ((_ is Cons!1507) lt!37825) (not (= (_1!1101 (h!2096 lt!37825)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!81319 () Bool)

(assert (=> b!81319 (= e!53068 (getValueByKey!138 (t!5178 lt!37825) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81320 () Bool)

(assert (=> b!81320 (= e!53068 None!142)))

(declare-fun b!81317 () Bool)

(assert (=> b!81317 (= e!53067 (Some!143 (_2!1101 (h!2096 lt!37825))))))

(assert (= (and d!20015 c!12806) b!81317))

(assert (= (and d!20015 (not c!12806)) b!81318))

(assert (= (and b!81318 c!12807) b!81319))

(assert (= (and b!81318 (not c!12807)) b!81320))

(declare-fun m!83395 () Bool)

(assert (=> b!81319 m!83395))

(assert (=> d!19801 d!20015))

(declare-fun d!20017 () Bool)

(assert (=> d!20017 (= (getValueByKey!138 lt!37825 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun lt!38020 () Unit!2341)

(assert (=> d!20017 (= lt!38020 (choose!470 lt!37825 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun e!53069 () Bool)

(assert (=> d!20017 e!53069))

(declare-fun res!42285 () Bool)

(assert (=> d!20017 (=> (not res!42285) (not e!53069))))

(assert (=> d!20017 (= res!42285 (isStrictlySorted!296 lt!37825))))

(assert (=> d!20017 (= (lemmaContainsTupThenGetReturnValue!55 lt!37825 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38020)))

(declare-fun b!81321 () Bool)

(declare-fun res!42286 () Bool)

(assert (=> b!81321 (=> (not res!42286) (not e!53069))))

(assert (=> b!81321 (= res!42286 (containsKey!142 lt!37825 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81322 () Bool)

(assert (=> b!81322 (= e!53069 (contains!746 lt!37825 (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (= (and d!20017 res!42285) b!81321))

(assert (= (and b!81321 res!42286) b!81322))

(assert (=> d!20017 m!82729))

(declare-fun m!83397 () Bool)

(assert (=> d!20017 m!83397))

(declare-fun m!83399 () Bool)

(assert (=> d!20017 m!83399))

(declare-fun m!83401 () Bool)

(assert (=> b!81321 m!83401))

(declare-fun m!83403 () Bool)

(assert (=> b!81322 m!83403))

(assert (=> d!19801 d!20017))

(declare-fun c!12808 () Bool)

(declare-fun b!81323 () Bool)

(assert (=> b!81323 (= c!12808 (and ((_ is Cons!1507) (toList!741 lt!37276)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53070 () List!1511)

(declare-fun e!53071 () List!1511)

(assert (=> b!81323 (= e!53070 e!53071)))

(declare-fun b!81324 () Bool)

(declare-fun call!7598 () List!1511)

(assert (=> b!81324 (= e!53071 call!7598)))

(declare-fun c!12810 () Bool)

(declare-fun e!53072 () List!1511)

(declare-fun b!81325 () Bool)

(assert (=> b!81325 (= e!53072 (ite c!12810 (t!5178 (toList!741 lt!37276)) (ite c!12808 (Cons!1507 (h!2096 (toList!741 lt!37276)) (t!5178 (toList!741 lt!37276))) Nil!1508)))))

(declare-fun d!20019 () Bool)

(declare-fun e!53074 () Bool)

(assert (=> d!20019 e!53074))

(declare-fun res!42288 () Bool)

(assert (=> d!20019 (=> (not res!42288) (not e!53074))))

(declare-fun lt!38021 () List!1511)

(assert (=> d!20019 (= res!42288 (isStrictlySorted!296 lt!38021))))

(declare-fun e!53073 () List!1511)

(assert (=> d!20019 (= lt!38021 e!53073)))

(declare-fun c!12809 () Bool)

(assert (=> d!20019 (= c!12809 (and ((_ is Cons!1507) (toList!741 lt!37276)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (=> d!20019 (isStrictlySorted!296 (toList!741 lt!37276))))

(assert (=> d!20019 (= (insertStrictlySorted!58 (toList!741 lt!37276) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38021)))

(declare-fun b!81326 () Bool)

(declare-fun call!7600 () List!1511)

(assert (=> b!81326 (= e!53073 call!7600)))

(declare-fun bm!7595 () Bool)

(declare-fun call!7599 () List!1511)

(assert (=> bm!7595 (= call!7599 call!7600)))

(declare-fun bm!7596 () Bool)

(assert (=> bm!7596 (= call!7598 call!7599)))

(declare-fun b!81327 () Bool)

(assert (=> b!81327 (= e!53074 (contains!746 lt!38021 (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!81328 () Bool)

(assert (=> b!81328 (= e!53073 e!53070)))

(assert (=> b!81328 (= c!12810 (and ((_ is Cons!1507) (toList!741 lt!37276)) (= (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!81329 () Bool)

(assert (=> b!81329 (= e!53071 call!7598)))

(declare-fun b!81330 () Bool)

(declare-fun res!42287 () Bool)

(assert (=> b!81330 (=> (not res!42287) (not e!53074))))

(assert (=> b!81330 (= res!42287 (containsKey!142 lt!38021 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun bm!7597 () Bool)

(assert (=> bm!7597 (= call!7600 ($colon$colon!70 e!53072 (ite c!12809 (h!2096 (toList!741 lt!37276)) (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun c!12811 () Bool)

(assert (=> bm!7597 (= c!12811 c!12809)))

(declare-fun b!81331 () Bool)

(assert (=> b!81331 (= e!53072 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37276)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81332 () Bool)

(assert (=> b!81332 (= e!53070 call!7599)))

(assert (= (and d!20019 c!12809) b!81326))

(assert (= (and d!20019 (not c!12809)) b!81328))

(assert (= (and b!81328 c!12810) b!81332))

(assert (= (and b!81328 (not c!12810)) b!81323))

(assert (= (and b!81323 c!12808) b!81329))

(assert (= (and b!81323 (not c!12808)) b!81324))

(assert (= (or b!81329 b!81324) bm!7596))

(assert (= (or b!81332 bm!7596) bm!7595))

(assert (= (or b!81326 bm!7595) bm!7597))

(assert (= (and bm!7597 c!12811) b!81331))

(assert (= (and bm!7597 (not c!12811)) b!81325))

(assert (= (and d!20019 res!42288) b!81330))

(assert (= (and b!81330 res!42287) b!81327))

(declare-fun m!83405 () Bool)

(assert (=> b!81327 m!83405))

(declare-fun m!83407 () Bool)

(assert (=> b!81330 m!83407))

(declare-fun m!83409 () Bool)

(assert (=> d!20019 m!83409))

(assert (=> d!20019 m!83061))

(declare-fun m!83411 () Bool)

(assert (=> b!81331 m!83411))

(declare-fun m!83413 () Bool)

(assert (=> bm!7597 m!83413))

(assert (=> d!19801 d!20019))

(declare-fun b!81333 () Bool)

(declare-fun res!42292 () Bool)

(declare-fun e!53075 () Bool)

(assert (=> b!81333 (=> (not res!42292) (not e!53075))))

(assert (=> b!81333 (= res!42292 (and (= (size!2144 (_values!2276 (_2!1100 lt!37429))) (bvadd (mask!6299 (_2!1100 lt!37429)) #b00000000000000000000000000000001)) (= (size!2143 (_keys!3957 (_2!1100 lt!37429))) (size!2144 (_values!2276 (_2!1100 lt!37429)))) (bvsge (_size!418 (_2!1100 lt!37429)) #b00000000000000000000000000000000) (bvsle (_size!418 (_2!1100 lt!37429)) (bvadd (mask!6299 (_2!1100 lt!37429)) #b00000000000000000000000000000001))))))

(declare-fun d!20021 () Bool)

(declare-fun res!42289 () Bool)

(assert (=> d!20021 (=> (not res!42289) (not e!53075))))

(assert (=> d!20021 (= res!42289 (validMask!0 (mask!6299 (_2!1100 lt!37429))))))

(assert (=> d!20021 (= (simpleValid!56 (_2!1100 lt!37429)) e!53075)))

(declare-fun b!81336 () Bool)

(assert (=> b!81336 (= e!53075 (and (bvsge (extraKeys!2140 (_2!1100 lt!37429)) #b00000000000000000000000000000000) (bvsle (extraKeys!2140 (_2!1100 lt!37429)) #b00000000000000000000000000000011) (bvsge (_vacant!418 (_2!1100 lt!37429)) #b00000000000000000000000000000000)))))

(declare-fun b!81334 () Bool)

(declare-fun res!42291 () Bool)

(assert (=> b!81334 (=> (not res!42291) (not e!53075))))

(assert (=> b!81334 (= res!42291 (bvsge (size!2147 (_2!1100 lt!37429)) (_size!418 (_2!1100 lt!37429))))))

(declare-fun b!81335 () Bool)

(declare-fun res!42290 () Bool)

(assert (=> b!81335 (=> (not res!42290) (not e!53075))))

(assert (=> b!81335 (= res!42290 (= (size!2147 (_2!1100 lt!37429)) (bvadd (_size!418 (_2!1100 lt!37429)) (bvsdiv (bvadd (extraKeys!2140 (_2!1100 lt!37429)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!20021 res!42289) b!81333))

(assert (= (and b!81333 res!42292) b!81334))

(assert (= (and b!81334 res!42291) b!81335))

(assert (= (and b!81335 res!42290) b!81336))

(declare-fun m!83415 () Bool)

(assert (=> d!20021 m!83415))

(declare-fun m!83417 () Bool)

(assert (=> b!81334 m!83417))

(assert (=> b!81335 m!83417))

(assert (=> d!19945 d!20021))

(declare-fun d!20023 () Bool)

(assert (=> d!20023 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3437 () Bool)

(assert (= bs!3437 d!20023))

(assert (=> bs!3437 m!82257))

(declare-fun m!83419 () Bool)

(assert (=> bs!3437 m!83419))

(assert (=> b!81011 d!20023))

(declare-fun d!20025 () Bool)

(declare-fun c!12812 () Bool)

(assert (=> d!20025 (= c!12812 (and ((_ is Cons!1507) (toList!741 lt!37534)) (= (_1!1101 (h!2096 (toList!741 lt!37534))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!53076 () Option!144)

(assert (=> d!20025 (= (getValueByKey!138 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53076)))

(declare-fun b!81338 () Bool)

(declare-fun e!53077 () Option!144)

(assert (=> b!81338 (= e!53076 e!53077)))

(declare-fun c!12813 () Bool)

(assert (=> b!81338 (= c!12813 (and ((_ is Cons!1507) (toList!741 lt!37534)) (not (= (_1!1101 (h!2096 (toList!741 lt!37534))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!81339 () Bool)

(assert (=> b!81339 (= e!53077 (getValueByKey!138 (t!5178 (toList!741 lt!37534)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!81340 () Bool)

(assert (=> b!81340 (= e!53077 None!142)))

(declare-fun b!81337 () Bool)

(assert (=> b!81337 (= e!53076 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37534)))))))

(assert (= (and d!20025 c!12812) b!81337))

(assert (= (and d!20025 (not c!12812)) b!81338))

(assert (= (and b!81338 c!12813) b!81339))

(assert (= (and b!81338 (not c!12813)) b!81340))

(assert (=> b!81339 m!81993))

(declare-fun m!83421 () Bool)

(assert (=> b!81339 m!83421))

(assert (=> b!81011 d!20025))

(declare-fun d!20027 () Bool)

(assert (=> d!20027 (isDefined!91 (getValueByKey!138 (toList!741 call!7465) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun lt!38022 () Unit!2341)

(assert (=> d!20027 (= lt!38022 (choose!477 (toList!741 call!7465) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun e!53078 () Bool)

(assert (=> d!20027 e!53078))

(declare-fun res!42293 () Bool)

(assert (=> d!20027 (=> (not res!42293) (not e!53078))))

(assert (=> d!20027 (= res!42293 (isStrictlySorted!296 (toList!741 call!7465)))))

(assert (=> d!20027 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 call!7465) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) lt!38022)))

(declare-fun b!81341 () Bool)

(assert (=> b!81341 (= e!53078 (containsKey!142 (toList!741 call!7465) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!20027 res!42293) b!81341))

(assert (=> d!20027 m!81811))

(assert (=> d!20027 m!82207))

(assert (=> d!20027 m!82207))

(assert (=> d!20027 m!82209))

(assert (=> d!20027 m!81811))

(declare-fun m!83423 () Bool)

(assert (=> d!20027 m!83423))

(declare-fun m!83425 () Bool)

(assert (=> d!20027 m!83425))

(assert (=> b!81341 m!81811))

(assert (=> b!81341 m!82203))

(assert (=> b!80649 d!20027))

(declare-fun d!20029 () Bool)

(assert (=> d!20029 (= (isDefined!91 (getValueByKey!138 (toList!741 call!7465) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))) (not (isEmpty!331 (getValueByKey!138 (toList!741 call!7465) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun bs!3438 () Bool)

(assert (= bs!3438 d!20029))

(assert (=> bs!3438 m!82207))

(declare-fun m!83427 () Bool)

(assert (=> bs!3438 m!83427))

(assert (=> b!80649 d!20029))

(declare-fun c!12814 () Bool)

(declare-fun d!20031 () Bool)

(assert (=> d!20031 (= c!12814 (and ((_ is Cons!1507) (toList!741 call!7465)) (= (_1!1101 (h!2096 (toList!741 call!7465))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(declare-fun e!53079 () Option!144)

(assert (=> d!20031 (= (getValueByKey!138 (toList!741 call!7465) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) e!53079)))

(declare-fun b!81343 () Bool)

(declare-fun e!53080 () Option!144)

(assert (=> b!81343 (= e!53079 e!53080)))

(declare-fun c!12815 () Bool)

(assert (=> b!81343 (= c!12815 (and ((_ is Cons!1507) (toList!741 call!7465)) (not (= (_1!1101 (h!2096 (toList!741 call!7465))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun b!81344 () Bool)

(assert (=> b!81344 (= e!53080 (getValueByKey!138 (t!5178 (toList!741 call!7465)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!81345 () Bool)

(assert (=> b!81345 (= e!53080 None!142)))

(declare-fun b!81342 () Bool)

(assert (=> b!81342 (= e!53079 (Some!143 (_2!1101 (h!2096 (toList!741 call!7465)))))))

(assert (= (and d!20031 c!12814) b!81342))

(assert (= (and d!20031 (not c!12814)) b!81343))

(assert (= (and b!81343 c!12815) b!81344))

(assert (= (and b!81343 (not c!12815)) b!81345))

(assert (=> b!81344 m!81811))

(declare-fun m!83429 () Bool)

(assert (=> b!81344 m!83429))

(assert (=> b!80649 d!20031))

(declare-fun d!20033 () Bool)

(declare-fun c!12816 () Bool)

(assert (=> d!20033 (= c!12816 (and ((_ is Cons!1507) (t!5178 lt!37518)) (= (_1!1101 (h!2096 (t!5178 lt!37518))) (_1!1101 lt!37283))))))

(declare-fun e!53081 () Option!144)

(assert (=> d!20033 (= (getValueByKey!138 (t!5178 lt!37518) (_1!1101 lt!37283)) e!53081)))

(declare-fun b!81347 () Bool)

(declare-fun e!53082 () Option!144)

(assert (=> b!81347 (= e!53081 e!53082)))

(declare-fun c!12817 () Bool)

(assert (=> b!81347 (= c!12817 (and ((_ is Cons!1507) (t!5178 lt!37518)) (not (= (_1!1101 (h!2096 (t!5178 lt!37518))) (_1!1101 lt!37283)))))))

(declare-fun b!81348 () Bool)

(assert (=> b!81348 (= e!53082 (getValueByKey!138 (t!5178 (t!5178 lt!37518)) (_1!1101 lt!37283)))))

(declare-fun b!81349 () Bool)

(assert (=> b!81349 (= e!53082 None!142)))

(declare-fun b!81346 () Bool)

(assert (=> b!81346 (= e!53081 (Some!143 (_2!1101 (h!2096 (t!5178 lt!37518)))))))

(assert (= (and d!20033 c!12816) b!81346))

(assert (= (and d!20033 (not c!12816)) b!81347))

(assert (= (and b!81347 c!12817) b!81348))

(assert (= (and b!81347 (not c!12817)) b!81349))

(declare-fun m!83431 () Bool)

(assert (=> b!81348 m!83431))

(assert (=> b!80789 d!20033))

(declare-fun d!20035 () Bool)

(declare-fun e!53083 () Bool)

(assert (=> d!20035 e!53083))

(declare-fun res!42294 () Bool)

(assert (=> d!20035 (=> res!42294 e!53083)))

(declare-fun lt!38024 () Bool)

(assert (=> d!20035 (= res!42294 (not lt!38024))))

(declare-fun lt!38023 () Bool)

(assert (=> d!20035 (= lt!38024 lt!38023)))

(declare-fun lt!38026 () Unit!2341)

(declare-fun e!53084 () Unit!2341)

(assert (=> d!20035 (= lt!38026 e!53084)))

(declare-fun c!12818 () Bool)

(assert (=> d!20035 (= c!12818 lt!38023)))

(assert (=> d!20035 (= lt!38023 (containsKey!142 (toList!741 lt!37597) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!20035 (= (contains!745 lt!37597 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) lt!38024)))

(declare-fun b!81350 () Bool)

(declare-fun lt!38025 () Unit!2341)

(assert (=> b!81350 (= e!53084 lt!38025)))

(assert (=> b!81350 (= lt!38025 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37597) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81350 (isDefined!91 (getValueByKey!138 (toList!741 lt!37597) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81351 () Bool)

(declare-fun Unit!2377 () Unit!2341)

(assert (=> b!81351 (= e!53084 Unit!2377)))

(declare-fun b!81352 () Bool)

(assert (=> b!81352 (= e!53083 (isDefined!91 (getValueByKey!138 (toList!741 lt!37597) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!20035 c!12818) b!81350))

(assert (= (and d!20035 (not c!12818)) b!81351))

(assert (= (and d!20035 (not res!42294)) b!81352))

(assert (=> d!20035 m!82265))

(declare-fun m!83433 () Bool)

(assert (=> d!20035 m!83433))

(assert (=> b!81350 m!82265))

(declare-fun m!83435 () Bool)

(assert (=> b!81350 m!83435))

(assert (=> b!81350 m!82265))

(declare-fun m!83437 () Bool)

(assert (=> b!81350 m!83437))

(assert (=> b!81350 m!83437))

(declare-fun m!83439 () Bool)

(assert (=> b!81350 m!83439))

(assert (=> b!81352 m!82265))

(assert (=> b!81352 m!83437))

(assert (=> b!81352 m!83437))

(assert (=> b!81352 m!83439))

(assert (=> b!80695 d!20035))

(declare-fun d!20037 () Bool)

(declare-fun lt!38027 () Bool)

(assert (=> d!20037 (= lt!38027 (select (content!85 (t!5178 (toList!741 lt!37557))) lt!37268))))

(declare-fun e!53086 () Bool)

(assert (=> d!20037 (= lt!38027 e!53086)))

(declare-fun res!42295 () Bool)

(assert (=> d!20037 (=> (not res!42295) (not e!53086))))

(assert (=> d!20037 (= res!42295 ((_ is Cons!1507) (t!5178 (toList!741 lt!37557))))))

(assert (=> d!20037 (= (contains!746 (t!5178 (toList!741 lt!37557)) lt!37268) lt!38027)))

(declare-fun b!81353 () Bool)

(declare-fun e!53085 () Bool)

(assert (=> b!81353 (= e!53086 e!53085)))

(declare-fun res!42296 () Bool)

(assert (=> b!81353 (=> res!42296 e!53085)))

(assert (=> b!81353 (= res!42296 (= (h!2096 (t!5178 (toList!741 lt!37557))) lt!37268))))

(declare-fun b!81354 () Bool)

(assert (=> b!81354 (= e!53085 (contains!746 (t!5178 (t!5178 (toList!741 lt!37557))) lt!37268))))

(assert (= (and d!20037 res!42295) b!81353))

(assert (= (and b!81353 (not res!42296)) b!81354))

(declare-fun m!83441 () Bool)

(assert (=> d!20037 m!83441))

(declare-fun m!83443 () Bool)

(assert (=> d!20037 m!83443))

(declare-fun m!83445 () Bool)

(assert (=> b!81354 m!83445))

(assert (=> b!81034 d!20037))

(declare-fun d!20039 () Bool)

(declare-fun res!42301 () Bool)

(declare-fun e!53091 () Bool)

(assert (=> d!20039 (=> res!42301 e!53091)))

(assert (=> d!20039 (= res!42301 (or ((_ is Nil!1508) lt!37952) ((_ is Nil!1508) (t!5178 lt!37952))))))

(assert (=> d!20039 (= (isStrictlySorted!296 lt!37952) e!53091)))

(declare-fun b!81359 () Bool)

(declare-fun e!53092 () Bool)

(assert (=> b!81359 (= e!53091 e!53092)))

(declare-fun res!42302 () Bool)

(assert (=> b!81359 (=> (not res!42302) (not e!53092))))

(assert (=> b!81359 (= res!42302 (bvslt (_1!1101 (h!2096 lt!37952)) (_1!1101 (h!2096 (t!5178 lt!37952)))))))

(declare-fun b!81360 () Bool)

(assert (=> b!81360 (= e!53092 (isStrictlySorted!296 (t!5178 lt!37952)))))

(assert (= (and d!20039 (not res!42301)) b!81359))

(assert (= (and b!81359 res!42302) b!81360))

(declare-fun m!83447 () Bool)

(assert (=> b!81360 m!83447))

(assert (=> d!19933 d!20039))

(declare-fun d!20041 () Bool)

(declare-fun res!42303 () Bool)

(declare-fun e!53093 () Bool)

(assert (=> d!20041 (=> res!42303 e!53093)))

(assert (=> d!20041 (= res!42303 (or ((_ is Nil!1508) (toList!741 lt!37281)) ((_ is Nil!1508) (t!5178 (toList!741 lt!37281)))))))

(assert (=> d!20041 (= (isStrictlySorted!296 (toList!741 lt!37281)) e!53093)))

(declare-fun b!81361 () Bool)

(declare-fun e!53094 () Bool)

(assert (=> b!81361 (= e!53093 e!53094)))

(declare-fun res!42304 () Bool)

(assert (=> b!81361 (=> (not res!42304) (not e!53094))))

(assert (=> b!81361 (= res!42304 (bvslt (_1!1101 (h!2096 (toList!741 lt!37281))) (_1!1101 (h!2096 (t!5178 (toList!741 lt!37281))))))))

(declare-fun b!81362 () Bool)

(assert (=> b!81362 (= e!53094 (isStrictlySorted!296 (t!5178 (toList!741 lt!37281))))))

(assert (= (and d!20041 (not res!42303)) b!81361))

(assert (= (and b!81361 res!42304) b!81362))

(assert (=> b!81362 m!83305))

(assert (=> d!19933 d!20041))

(declare-fun d!20043 () Bool)

(declare-fun c!12819 () Bool)

(assert (=> d!20043 (= c!12819 ((_ is Nil!1508) (toList!741 lt!37508)))))

(declare-fun e!53095 () (InoxSet tuple2!2180))

(assert (=> d!20043 (= (content!85 (toList!741 lt!37508)) e!53095)))

(declare-fun b!81363 () Bool)

(assert (=> b!81363 (= e!53095 ((as const (Array tuple2!2180 Bool)) false))))

(declare-fun b!81364 () Bool)

(assert (=> b!81364 (= e!53095 ((_ map or) (store ((as const (Array tuple2!2180 Bool)) false) (h!2096 (toList!741 lt!37508)) true) (content!85 (t!5178 (toList!741 lt!37508)))))))

(assert (= (and d!20043 c!12819) b!81363))

(assert (= (and d!20043 (not c!12819)) b!81364))

(declare-fun m!83449 () Bool)

(assert (=> b!81364 m!83449))

(declare-fun m!83451 () Bool)

(assert (=> b!81364 m!83451))

(assert (=> d!19935 d!20043))

(declare-fun d!20045 () Bool)

(declare-fun c!12820 () Bool)

(assert (=> d!20045 (= c!12820 (and ((_ is Cons!1507) (toList!741 lt!37831)) (= (_1!1101 (h!2096 (toList!741 lt!37831))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53096 () Option!144)

(assert (=> d!20045 (= (getValueByKey!138 (toList!741 lt!37831) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53096)))

(declare-fun b!81366 () Bool)

(declare-fun e!53097 () Option!144)

(assert (=> b!81366 (= e!53096 e!53097)))

(declare-fun c!12821 () Bool)

(assert (=> b!81366 (= c!12821 (and ((_ is Cons!1507) (toList!741 lt!37831)) (not (= (_1!1101 (h!2096 (toList!741 lt!37831))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!81367 () Bool)

(assert (=> b!81367 (= e!53097 (getValueByKey!138 (t!5178 (toList!741 lt!37831)) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81368 () Bool)

(assert (=> b!81368 (= e!53097 None!142)))

(declare-fun b!81365 () Bool)

(assert (=> b!81365 (= e!53096 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37831)))))))

(assert (= (and d!20045 c!12820) b!81365))

(assert (= (and d!20045 (not c!12820)) b!81366))

(assert (= (and b!81366 c!12821) b!81367))

(assert (= (and b!81366 (not c!12821)) b!81368))

(declare-fun m!83453 () Bool)

(assert (=> b!81367 m!83453))

(assert (=> b!80995 d!20045))

(declare-fun d!20047 () Bool)

(assert (=> d!20047 (= (inRange!0 (ite c!12697 (index!3100 lt!37773) (ite c!12698 (index!3099 lt!37772) (index!3102 lt!37772))) (mask!6299 newMap!16)) (and (bvsge (ite c!12697 (index!3100 lt!37773) (ite c!12698 (index!3099 lt!37772) (index!3102 lt!37772))) #b00000000000000000000000000000000) (bvslt (ite c!12697 (index!3100 lt!37773) (ite c!12698 (index!3099 lt!37772) (index!3102 lt!37772))) (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7544 d!20047))

(declare-fun d!20049 () Bool)

(assert (=> d!20049 (= (get!1182 (getValueByKey!138 (toList!741 lt!37495) lt!37485)) (v!2612 (getValueByKey!138 (toList!741 lt!37495) lt!37485)))))

(assert (=> d!19853 d!20049))

(declare-fun d!20051 () Bool)

(declare-fun c!12822 () Bool)

(assert (=> d!20051 (= c!12822 (and ((_ is Cons!1507) (toList!741 lt!37495)) (= (_1!1101 (h!2096 (toList!741 lt!37495))) lt!37485)))))

(declare-fun e!53098 () Option!144)

(assert (=> d!20051 (= (getValueByKey!138 (toList!741 lt!37495) lt!37485) e!53098)))

(declare-fun b!81370 () Bool)

(declare-fun e!53099 () Option!144)

(assert (=> b!81370 (= e!53098 e!53099)))

(declare-fun c!12823 () Bool)

(assert (=> b!81370 (= c!12823 (and ((_ is Cons!1507) (toList!741 lt!37495)) (not (= (_1!1101 (h!2096 (toList!741 lt!37495))) lt!37485))))))

(declare-fun b!81371 () Bool)

(assert (=> b!81371 (= e!53099 (getValueByKey!138 (t!5178 (toList!741 lt!37495)) lt!37485))))

(declare-fun b!81372 () Bool)

(assert (=> b!81372 (= e!53099 None!142)))

(declare-fun b!81369 () Bool)

(assert (=> b!81369 (= e!53098 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37495)))))))

(assert (= (and d!20051 c!12822) b!81369))

(assert (= (and d!20051 (not c!12822)) b!81370))

(assert (= (and b!81370 c!12823) b!81371))

(assert (= (and b!81370 (not c!12823)) b!81372))

(declare-fun m!83455 () Bool)

(assert (=> b!81371 m!83455))

(assert (=> d!19853 d!20051))

(declare-fun d!20053 () Bool)

(declare-fun lt!38028 () Bool)

(assert (=> d!20053 (= lt!38028 (select (content!85 (t!5178 (toList!741 lt!37553))) lt!37278))))

(declare-fun e!53101 () Bool)

(assert (=> d!20053 (= lt!38028 e!53101)))

(declare-fun res!42305 () Bool)

(assert (=> d!20053 (=> (not res!42305) (not e!53101))))

(assert (=> d!20053 (= res!42305 ((_ is Cons!1507) (t!5178 (toList!741 lt!37553))))))

(assert (=> d!20053 (= (contains!746 (t!5178 (toList!741 lt!37553)) lt!37278) lt!38028)))

(declare-fun b!81373 () Bool)

(declare-fun e!53100 () Bool)

(assert (=> b!81373 (= e!53101 e!53100)))

(declare-fun res!42306 () Bool)

(assert (=> b!81373 (=> res!42306 e!53100)))

(assert (=> b!81373 (= res!42306 (= (h!2096 (t!5178 (toList!741 lt!37553))) lt!37278))))

(declare-fun b!81374 () Bool)

(assert (=> b!81374 (= e!53100 (contains!746 (t!5178 (t!5178 (toList!741 lt!37553))) lt!37278))))

(assert (= (and d!20053 res!42305) b!81373))

(assert (= (and b!81373 (not res!42306)) b!81374))

(declare-fun m!83457 () Bool)

(assert (=> d!20053 m!83457))

(declare-fun m!83459 () Bool)

(assert (=> d!20053 m!83459))

(declare-fun m!83461 () Bool)

(assert (=> b!81374 m!83461))

(assert (=> b!81032 d!20053))

(declare-fun d!20055 () Bool)

(assert (=> d!20055 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37541) (_1!1101 lt!37283))) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37541) (_1!1101 lt!37283)))))))

(declare-fun bs!3439 () Bool)

(assert (= bs!3439 d!20055))

(assert (=> bs!3439 m!82111))

(declare-fun m!83463 () Bool)

(assert (=> bs!3439 m!83463))

(assert (=> b!80972 d!20055))

(assert (=> b!80972 d!19851))

(declare-fun d!20057 () Bool)

(assert (=> d!20057 (isDefined!91 (getValueByKey!138 (toList!741 lt!37516) (_1!1101 lt!37283)))))

(declare-fun lt!38029 () Unit!2341)

(assert (=> d!20057 (= lt!38029 (choose!477 (toList!741 lt!37516) (_1!1101 lt!37283)))))

(declare-fun e!53102 () Bool)

(assert (=> d!20057 e!53102))

(declare-fun res!42307 () Bool)

(assert (=> d!20057 (=> (not res!42307) (not e!53102))))

(assert (=> d!20057 (= res!42307 (isStrictlySorted!296 (toList!741 lt!37516)))))

(assert (=> d!20057 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37516) (_1!1101 lt!37283)) lt!38029)))

(declare-fun b!81375 () Bool)

(assert (=> b!81375 (= e!53102 (containsKey!142 (toList!741 lt!37516) (_1!1101 lt!37283)))))

(assert (= (and d!20057 res!42307) b!81375))

(assert (=> d!20057 m!82079))

(assert (=> d!20057 m!82079))

(assert (=> d!20057 m!82429))

(declare-fun m!83465 () Bool)

(assert (=> d!20057 m!83465))

(declare-fun m!83467 () Bool)

(assert (=> d!20057 m!83467))

(assert (=> b!81375 m!82425))

(assert (=> b!80784 d!20057))

(declare-fun d!20059 () Bool)

(assert (=> d!20059 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37516) (_1!1101 lt!37283))) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37516) (_1!1101 lt!37283)))))))

(declare-fun bs!3440 () Bool)

(assert (= bs!3440 d!20059))

(assert (=> bs!3440 m!82079))

(declare-fun m!83469 () Bool)

(assert (=> bs!3440 m!83469))

(assert (=> b!80784 d!20059))

(assert (=> b!80784 d!19827))

(declare-fun d!20061 () Bool)

(assert (=> d!20061 (= (content!86 Nil!1509) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!19751 d!20061))

(declare-fun d!20063 () Bool)

(declare-fun res!42308 () Bool)

(declare-fun e!53103 () Bool)

(assert (=> d!20063 (=> res!42308 e!53103)))

(assert (=> d!20063 (= res!42308 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)))) (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))))) lt!37535)))))

(assert (=> d!20063 (= (containsKey!142 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))) lt!37535) e!53103)))

(declare-fun b!81376 () Bool)

(declare-fun e!53104 () Bool)

(assert (=> b!81376 (= e!53103 e!53104)))

(declare-fun res!42309 () Bool)

(assert (=> b!81376 (=> (not res!42309) (not e!53104))))

(assert (=> b!81376 (= res!42309 (and (or (not ((_ is Cons!1507) (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))))) (bvsle (_1!1101 (h!2096 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))))) lt!37535)) ((_ is Cons!1507) (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)))) (bvslt (_1!1101 (h!2096 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))))) lt!37535)))))

(declare-fun b!81377 () Bool)

(assert (=> b!81377 (= e!53104 (containsKey!142 (t!5178 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)))) lt!37535))))

(assert (= (and d!20063 (not res!42308)) b!81376))

(assert (= (and b!81376 res!42309) b!81377))

(declare-fun m!83471 () Bool)

(assert (=> b!81377 m!83471))

(assert (=> d!19785 d!20063))

(declare-fun d!20065 () Bool)

(assert (=> d!20065 (isDefined!91 (getValueByKey!138 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38030 () Unit!2341)

(assert (=> d!20065 (= lt!38030 (choose!477 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53105 () Bool)

(assert (=> d!20065 e!53105))

(declare-fun res!42310 () Bool)

(assert (=> d!20065 (=> (not res!42310) (not e!53105))))

(assert (=> d!20065 (= res!42310 (isStrictlySorted!296 (toList!741 lt!37487)))))

(assert (=> d!20065 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000) lt!38030)))

(declare-fun b!81378 () Bool)

(assert (=> b!81378 (= e!53105 (containsKey!142 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20065 res!42310) b!81378))

(assert (=> d!20065 m!82987))

(assert (=> d!20065 m!82987))

(assert (=> d!20065 m!83031))

(declare-fun m!83473 () Bool)

(assert (=> d!20065 m!83473))

(declare-fun m!83475 () Bool)

(assert (=> d!20065 m!83475))

(assert (=> b!81378 m!83027))

(assert (=> b!81083 d!20065))

(declare-fun d!20067 () Bool)

(assert (=> d!20067 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3441 () Bool)

(assert (= bs!3441 d!20067))

(assert (=> bs!3441 m!82987))

(declare-fun m!83477 () Bool)

(assert (=> bs!3441 m!83477))

(assert (=> b!81083 d!20067))

(declare-fun d!20069 () Bool)

(declare-fun c!12824 () Bool)

(assert (=> d!20069 (= c!12824 (and ((_ is Cons!1507) (toList!741 lt!37487)) (= (_1!1101 (h!2096 (toList!741 lt!37487))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53106 () Option!144)

(assert (=> d!20069 (= (getValueByKey!138 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000) e!53106)))

(declare-fun b!81380 () Bool)

(declare-fun e!53107 () Option!144)

(assert (=> b!81380 (= e!53106 e!53107)))

(declare-fun c!12825 () Bool)

(assert (=> b!81380 (= c!12825 (and ((_ is Cons!1507) (toList!741 lt!37487)) (not (= (_1!1101 (h!2096 (toList!741 lt!37487))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81381 () Bool)

(assert (=> b!81381 (= e!53107 (getValueByKey!138 (t!5178 (toList!741 lt!37487)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81382 () Bool)

(assert (=> b!81382 (= e!53107 None!142)))

(declare-fun b!81379 () Bool)

(assert (=> b!81379 (= e!53106 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37487)))))))

(assert (= (and d!20069 c!12824) b!81379))

(assert (= (and d!20069 (not c!12824)) b!81380))

(assert (= (and b!81380 c!12825) b!81381))

(assert (= (and b!81380 (not c!12825)) b!81382))

(declare-fun m!83479 () Bool)

(assert (=> b!81381 m!83479))

(assert (=> b!81083 d!20069))

(declare-fun c!12826 () Bool)

(declare-fun d!20071 () Bool)

(assert (=> d!20071 (= c!12826 (and ((_ is Cons!1507) (toList!741 lt!37823)) (= (_1!1101 (h!2096 (toList!741 lt!37823))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53108 () Option!144)

(assert (=> d!20071 (= (getValueByKey!138 (toList!741 lt!37823) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) e!53108)))

(declare-fun b!81384 () Bool)

(declare-fun e!53109 () Option!144)

(assert (=> b!81384 (= e!53108 e!53109)))

(declare-fun c!12827 () Bool)

(assert (=> b!81384 (= c!12827 (and ((_ is Cons!1507) (toList!741 lt!37823)) (not (= (_1!1101 (h!2096 (toList!741 lt!37823))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!81385 () Bool)

(assert (=> b!81385 (= e!53109 (getValueByKey!138 (t!5178 (toList!741 lt!37823)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81386 () Bool)

(assert (=> b!81386 (= e!53109 None!142)))

(declare-fun b!81383 () Bool)

(assert (=> b!81383 (= e!53108 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37823)))))))

(assert (= (and d!20071 c!12826) b!81383))

(assert (= (and d!20071 (not c!12826)) b!81384))

(assert (= (and b!81384 c!12827) b!81385))

(assert (= (and b!81384 (not c!12827)) b!81386))

(declare-fun m!83481 () Bool)

(assert (=> b!81385 m!83481))

(assert (=> b!80991 d!20071))

(declare-fun d!20073 () Bool)

(declare-fun lt!38031 () Bool)

(assert (=> d!20073 (= lt!38031 (select (content!85 (t!5178 (toList!741 lt!37512))) lt!37268))))

(declare-fun e!53111 () Bool)

(assert (=> d!20073 (= lt!38031 e!53111)))

(declare-fun res!42311 () Bool)

(assert (=> d!20073 (=> (not res!42311) (not e!53111))))

(assert (=> d!20073 (= res!42311 ((_ is Cons!1507) (t!5178 (toList!741 lt!37512))))))

(assert (=> d!20073 (= (contains!746 (t!5178 (toList!741 lt!37512)) lt!37268) lt!38031)))

(declare-fun b!81387 () Bool)

(declare-fun e!53110 () Bool)

(assert (=> b!81387 (= e!53111 e!53110)))

(declare-fun res!42312 () Bool)

(assert (=> b!81387 (=> res!42312 e!53110)))

(assert (=> b!81387 (= res!42312 (= (h!2096 (t!5178 (toList!741 lt!37512))) lt!37268))))

(declare-fun b!81388 () Bool)

(assert (=> b!81388 (= e!53110 (contains!746 (t!5178 (t!5178 (toList!741 lt!37512))) lt!37268))))

(assert (= (and d!20073 res!42311) b!81387))

(assert (= (and b!81387 (not res!42312)) b!81388))

(assert (=> d!20073 m!83293))

(declare-fun m!83483 () Bool)

(assert (=> d!20073 m!83483))

(declare-fun m!83485 () Bool)

(assert (=> b!81388 m!83485))

(assert (=> b!81199 d!20073))

(declare-fun d!20075 () Bool)

(assert (=> d!20075 (isDefined!91 (getValueByKey!138 (toList!741 lt!37549) (_1!1101 lt!37283)))))

(declare-fun lt!38032 () Unit!2341)

(assert (=> d!20075 (= lt!38032 (choose!477 (toList!741 lt!37549) (_1!1101 lt!37283)))))

(declare-fun e!53112 () Bool)

(assert (=> d!20075 e!53112))

(declare-fun res!42313 () Bool)

(assert (=> d!20075 (=> (not res!42313) (not e!53112))))

(assert (=> d!20075 (= res!42313 (isStrictlySorted!296 (toList!741 lt!37549)))))

(assert (=> d!20075 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37549) (_1!1101 lt!37283)) lt!38032)))

(declare-fun b!81389 () Bool)

(assert (=> b!81389 (= e!53112 (containsKey!142 (toList!741 lt!37549) (_1!1101 lt!37283)))))

(assert (= (and d!20075 res!42313) b!81389))

(assert (=> d!20075 m!82143))

(assert (=> d!20075 m!82143))

(assert (=> d!20075 m!83043))

(declare-fun m!83487 () Bool)

(assert (=> d!20075 m!83487))

(declare-fun m!83489 () Bool)

(assert (=> d!20075 m!83489))

(assert (=> b!81389 m!83039))

(assert (=> b!81086 d!20075))

(declare-fun d!20077 () Bool)

(assert (=> d!20077 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37549) (_1!1101 lt!37283))) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37549) (_1!1101 lt!37283)))))))

(declare-fun bs!3442 () Bool)

(assert (= bs!3442 d!20077))

(assert (=> bs!3442 m!82143))

(declare-fun m!83491 () Bool)

(assert (=> bs!3442 m!83491))

(assert (=> b!81086 d!20077))

(assert (=> b!81086 d!19707))

(declare-fun d!20079 () Bool)

(assert (=> d!20079 (= (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80938 d!20079))

(declare-fun d!20081 () Bool)

(declare-fun e!53113 () Bool)

(assert (=> d!20081 e!53113))

(declare-fun res!42321 () Bool)

(assert (=> d!20081 (=> (not res!42321) (not e!53113))))

(assert (=> d!20081 (= res!42321 (or (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37429)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37429)))))))))

(declare-fun lt!38043 () ListLongMap!1451)

(declare-fun lt!38034 () ListLongMap!1451)

(assert (=> d!20081 (= lt!38043 lt!38034)))

(declare-fun lt!38046 () Unit!2341)

(declare-fun e!53120 () Unit!2341)

(assert (=> d!20081 (= lt!38046 e!53120)))

(declare-fun c!12832 () Bool)

(declare-fun e!53119 () Bool)

(assert (=> d!20081 (= c!12832 e!53119)))

(declare-fun res!42314 () Bool)

(assert (=> d!20081 (=> (not res!42314) (not e!53119))))

(assert (=> d!20081 (= res!42314 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37429)))))))

(declare-fun e!53124 () ListLongMap!1451)

(assert (=> d!20081 (= lt!38034 e!53124)))

(declare-fun c!12829 () Bool)

(assert (=> d!20081 (= c!12829 (and (not (= (bvand (extraKeys!2140 (_2!1100 lt!37429)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 (_2!1100 lt!37429)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20081 (validMask!0 (mask!6299 (_2!1100 lt!37429)))))

(assert (=> d!20081 (= (getCurrentListMap!435 (_keys!3957 (_2!1100 lt!37429)) (_values!2276 (_2!1100 lt!37429)) (mask!6299 (_2!1100 lt!37429)) (extraKeys!2140 (_2!1100 lt!37429)) (zeroValue!2189 (_2!1100 lt!37429)) (minValue!2189 (_2!1100 lt!37429)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1100 lt!37429))) lt!38043)))

(declare-fun b!81390 () Bool)

(declare-fun Unit!2378 () Unit!2341)

(assert (=> b!81390 (= e!53120 Unit!2378)))

(declare-fun b!81391 () Bool)

(declare-fun lt!38033 () Unit!2341)

(assert (=> b!81391 (= e!53120 lt!38033)))

(declare-fun lt!38042 () ListLongMap!1451)

(assert (=> b!81391 (= lt!38042 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (_2!1100 lt!37429)) (_values!2276 (_2!1100 lt!37429)) (mask!6299 (_2!1100 lt!37429)) (extraKeys!2140 (_2!1100 lt!37429)) (zeroValue!2189 (_2!1100 lt!37429)) (minValue!2189 (_2!1100 lt!37429)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1100 lt!37429))))))

(declare-fun lt!38048 () (_ BitVec 64))

(assert (=> b!81391 (= lt!38048 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38035 () (_ BitVec 64))

(assert (=> b!81391 (= lt!38035 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000))))

(declare-fun lt!38037 () Unit!2341)

(assert (=> b!81391 (= lt!38037 (addStillContains!56 lt!38042 lt!38048 (zeroValue!2189 (_2!1100 lt!37429)) lt!38035))))

(assert (=> b!81391 (contains!745 (+!106 lt!38042 (tuple2!2181 lt!38048 (zeroValue!2189 (_2!1100 lt!37429)))) lt!38035)))

(declare-fun lt!38053 () Unit!2341)

(assert (=> b!81391 (= lt!38053 lt!38037)))

(declare-fun lt!38054 () ListLongMap!1451)

(assert (=> b!81391 (= lt!38054 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (_2!1100 lt!37429)) (_values!2276 (_2!1100 lt!37429)) (mask!6299 (_2!1100 lt!37429)) (extraKeys!2140 (_2!1100 lt!37429)) (zeroValue!2189 (_2!1100 lt!37429)) (minValue!2189 (_2!1100 lt!37429)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1100 lt!37429))))))

(declare-fun lt!38050 () (_ BitVec 64))

(assert (=> b!81391 (= lt!38050 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38036 () (_ BitVec 64))

(assert (=> b!81391 (= lt!38036 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000))))

(declare-fun lt!38044 () Unit!2341)

(assert (=> b!81391 (= lt!38044 (addApplyDifferent!56 lt!38054 lt!38050 (minValue!2189 (_2!1100 lt!37429)) lt!38036))))

(assert (=> b!81391 (= (apply!80 (+!106 lt!38054 (tuple2!2181 lt!38050 (minValue!2189 (_2!1100 lt!37429)))) lt!38036) (apply!80 lt!38054 lt!38036))))

(declare-fun lt!38040 () Unit!2341)

(assert (=> b!81391 (= lt!38040 lt!38044)))

(declare-fun lt!38051 () ListLongMap!1451)

(assert (=> b!81391 (= lt!38051 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (_2!1100 lt!37429)) (_values!2276 (_2!1100 lt!37429)) (mask!6299 (_2!1100 lt!37429)) (extraKeys!2140 (_2!1100 lt!37429)) (zeroValue!2189 (_2!1100 lt!37429)) (minValue!2189 (_2!1100 lt!37429)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1100 lt!37429))))))

(declare-fun lt!38038 () (_ BitVec 64))

(assert (=> b!81391 (= lt!38038 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38041 () (_ BitVec 64))

(assert (=> b!81391 (= lt!38041 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000))))

(declare-fun lt!38039 () Unit!2341)

(assert (=> b!81391 (= lt!38039 (addApplyDifferent!56 lt!38051 lt!38038 (zeroValue!2189 (_2!1100 lt!37429)) lt!38041))))

(assert (=> b!81391 (= (apply!80 (+!106 lt!38051 (tuple2!2181 lt!38038 (zeroValue!2189 (_2!1100 lt!37429)))) lt!38041) (apply!80 lt!38051 lt!38041))))

(declare-fun lt!38052 () Unit!2341)

(assert (=> b!81391 (= lt!38052 lt!38039)))

(declare-fun lt!38049 () ListLongMap!1451)

(assert (=> b!81391 (= lt!38049 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (_2!1100 lt!37429)) (_values!2276 (_2!1100 lt!37429)) (mask!6299 (_2!1100 lt!37429)) (extraKeys!2140 (_2!1100 lt!37429)) (zeroValue!2189 (_2!1100 lt!37429)) (minValue!2189 (_2!1100 lt!37429)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1100 lt!37429))))))

(declare-fun lt!38047 () (_ BitVec 64))

(assert (=> b!81391 (= lt!38047 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38045 () (_ BitVec 64))

(assert (=> b!81391 (= lt!38045 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000))))

(assert (=> b!81391 (= lt!38033 (addApplyDifferent!56 lt!38049 lt!38047 (minValue!2189 (_2!1100 lt!37429)) lt!38045))))

(assert (=> b!81391 (= (apply!80 (+!106 lt!38049 (tuple2!2181 lt!38047 (minValue!2189 (_2!1100 lt!37429)))) lt!38045) (apply!80 lt!38049 lt!38045))))

(declare-fun b!81392 () Bool)

(declare-fun res!42317 () Bool)

(assert (=> b!81392 (=> (not res!42317) (not e!53113))))

(declare-fun e!53114 () Bool)

(assert (=> b!81392 (= res!42317 e!53114)))

(declare-fun res!42322 () Bool)

(assert (=> b!81392 (=> res!42322 e!53114)))

(declare-fun e!53121 () Bool)

(assert (=> b!81392 (= res!42322 (not e!53121))))

(declare-fun res!42320 () Bool)

(assert (=> b!81392 (=> (not res!42320) (not e!53121))))

(assert (=> b!81392 (= res!42320 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37429)))))))

(declare-fun b!81393 () Bool)

(declare-fun e!53123 () Bool)

(assert (=> b!81393 (= e!53123 (= (apply!80 lt!38043 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 (_2!1100 lt!37429))))))

(declare-fun b!81394 () Bool)

(declare-fun e!53125 () Bool)

(assert (=> b!81394 (= e!53114 e!53125)))

(declare-fun res!42316 () Bool)

(assert (=> b!81394 (=> (not res!42316) (not e!53125))))

(assert (=> b!81394 (= res!42316 (contains!745 lt!38043 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000)))))

(assert (=> b!81394 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37429)))))))

(declare-fun bm!7598 () Bool)

(declare-fun call!7606 () ListLongMap!1451)

(declare-fun call!7607 () ListLongMap!1451)

(assert (=> bm!7598 (= call!7606 call!7607)))

(declare-fun b!81395 () Bool)

(declare-fun e!53118 () Bool)

(assert (=> b!81395 (= e!53118 e!53123)))

(declare-fun res!42318 () Bool)

(declare-fun call!7603 () Bool)

(assert (=> b!81395 (= res!42318 call!7603)))

(assert (=> b!81395 (=> (not res!42318) (not e!53123))))

(declare-fun b!81396 () Bool)

(assert (=> b!81396 (= e!53121 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000)))))

(declare-fun b!81397 () Bool)

(assert (=> b!81397 (= e!53118 (not call!7603))))

(declare-fun b!81398 () Bool)

(assert (=> b!81398 (= e!53119 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000)))))

(declare-fun b!81399 () Bool)

(declare-fun e!53122 () Bool)

(declare-fun call!7605 () Bool)

(assert (=> b!81399 (= e!53122 (not call!7605))))

(declare-fun bm!7599 () Bool)

(declare-fun call!7604 () ListLongMap!1451)

(assert (=> bm!7599 (= call!7604 call!7606)))

(declare-fun b!81400 () Bool)

(declare-fun e!53116 () ListLongMap!1451)

(declare-fun call!7602 () ListLongMap!1451)

(assert (=> b!81400 (= e!53116 call!7602)))

(declare-fun bm!7600 () Bool)

(assert (=> bm!7600 (= call!7605 (contains!745 lt!38043 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81401 () Bool)

(assert (=> b!81401 (= e!53113 e!53118)))

(declare-fun c!12828 () Bool)

(assert (=> b!81401 (= c!12828 (not (= (bvand (extraKeys!2140 (_2!1100 lt!37429)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7601 () Bool)

(assert (=> bm!7601 (= call!7607 (getCurrentListMapNoExtraKeys!71 (_keys!3957 (_2!1100 lt!37429)) (_values!2276 (_2!1100 lt!37429)) (mask!6299 (_2!1100 lt!37429)) (extraKeys!2140 (_2!1100 lt!37429)) (zeroValue!2189 (_2!1100 lt!37429)) (minValue!2189 (_2!1100 lt!37429)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1100 lt!37429))))))

(declare-fun bm!7602 () Bool)

(declare-fun call!7601 () ListLongMap!1451)

(assert (=> bm!7602 (= call!7602 call!7601)))

(declare-fun b!81402 () Bool)

(declare-fun res!42315 () Bool)

(assert (=> b!81402 (=> (not res!42315) (not e!53113))))

(assert (=> b!81402 (= res!42315 e!53122)))

(declare-fun c!12831 () Bool)

(assert (=> b!81402 (= c!12831 (not (= (bvand (extraKeys!2140 (_2!1100 lt!37429)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81403 () Bool)

(assert (=> b!81403 (= e!53124 (+!106 call!7601 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (_2!1100 lt!37429)))))))

(declare-fun b!81404 () Bool)

(assert (=> b!81404 (= e!53116 call!7604)))

(declare-fun bm!7603 () Bool)

(declare-fun c!12830 () Bool)

(assert (=> bm!7603 (= call!7601 (+!106 (ite c!12829 call!7607 (ite c!12830 call!7606 call!7604)) (ite (or c!12829 c!12830) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (_2!1100 lt!37429))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (_2!1100 lt!37429))))))))

(declare-fun b!81405 () Bool)

(assert (=> b!81405 (= e!53125 (= (apply!80 lt!38043 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 (_values!2276 (_2!1100 lt!37429))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 (_2!1100 lt!37429)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81405 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_values!2276 (_2!1100 lt!37429)))))))

(assert (=> b!81405 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37429)))))))

(declare-fun b!81406 () Bool)

(declare-fun c!12833 () Bool)

(assert (=> b!81406 (= c!12833 (and (not (= (bvand (extraKeys!2140 (_2!1100 lt!37429)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 (_2!1100 lt!37429)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53115 () ListLongMap!1451)

(assert (=> b!81406 (= e!53115 e!53116)))

(declare-fun b!81407 () Bool)

(declare-fun e!53117 () Bool)

(assert (=> b!81407 (= e!53117 (= (apply!80 lt!38043 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 (_2!1100 lt!37429))))))

(declare-fun b!81408 () Bool)

(assert (=> b!81408 (= e!53122 e!53117)))

(declare-fun res!42319 () Bool)

(assert (=> b!81408 (= res!42319 call!7605)))

(assert (=> b!81408 (=> (not res!42319) (not e!53117))))

(declare-fun b!81409 () Bool)

(assert (=> b!81409 (= e!53124 e!53115)))

(assert (=> b!81409 (= c!12830 (and (not (= (bvand (extraKeys!2140 (_2!1100 lt!37429)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 (_2!1100 lt!37429)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7604 () Bool)

(assert (=> bm!7604 (= call!7603 (contains!745 lt!38043 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81410 () Bool)

(assert (=> b!81410 (= e!53115 call!7602)))

(assert (= (and d!20081 c!12829) b!81403))

(assert (= (and d!20081 (not c!12829)) b!81409))

(assert (= (and b!81409 c!12830) b!81410))

(assert (= (and b!81409 (not c!12830)) b!81406))

(assert (= (and b!81406 c!12833) b!81400))

(assert (= (and b!81406 (not c!12833)) b!81404))

(assert (= (or b!81400 b!81404) bm!7599))

(assert (= (or b!81410 bm!7599) bm!7598))

(assert (= (or b!81410 b!81400) bm!7602))

(assert (= (or b!81403 bm!7598) bm!7601))

(assert (= (or b!81403 bm!7602) bm!7603))

(assert (= (and d!20081 res!42314) b!81398))

(assert (= (and d!20081 c!12832) b!81391))

(assert (= (and d!20081 (not c!12832)) b!81390))

(assert (= (and d!20081 res!42321) b!81392))

(assert (= (and b!81392 res!42320) b!81396))

(assert (= (and b!81392 (not res!42322)) b!81394))

(assert (= (and b!81394 res!42316) b!81405))

(assert (= (and b!81392 res!42317) b!81402))

(assert (= (and b!81402 c!12831) b!81408))

(assert (= (and b!81402 (not c!12831)) b!81399))

(assert (= (and b!81408 res!42319) b!81407))

(assert (= (or b!81408 b!81399) bm!7600))

(assert (= (and b!81402 res!42315) b!81401))

(assert (= (and b!81401 c!12828) b!81395))

(assert (= (and b!81401 (not c!12828)) b!81397))

(assert (= (and b!81395 res!42318) b!81393))

(assert (= (or b!81395 b!81397) bm!7604))

(declare-fun b_lambda!3631 () Bool)

(assert (=> (not b_lambda!3631) (not b!81405)))

(declare-fun t!5189 () Bool)

(declare-fun tb!1649 () Bool)

(assert (=> (and b!80271 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 (_2!1100 lt!37429))) t!5189) tb!1649))

(declare-fun result!2857 () Bool)

(assert (=> tb!1649 (= result!2857 tp_is_empty!2517)))

(assert (=> b!81405 t!5189))

(declare-fun b_and!4967 () Bool)

(assert (= b_and!4963 (and (=> t!5189 result!2857) b_and!4967)))

(declare-fun tb!1651 () Bool)

(declare-fun t!5191 () Bool)

(assert (=> (and b!80263 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (_2!1100 lt!37429))) t!5191) tb!1651))

(declare-fun result!2859 () Bool)

(assert (= result!2859 result!2857))

(assert (=> b!81405 t!5191))

(declare-fun b_and!4969 () Bool)

(assert (= b_and!4965 (and (=> t!5191 result!2859) b_and!4969)))

(declare-fun m!83493 () Bool)

(assert (=> b!81405 m!83493))

(declare-fun m!83495 () Bool)

(assert (=> b!81405 m!83495))

(assert (=> b!81405 m!83493))

(declare-fun m!83497 () Bool)

(assert (=> b!81405 m!83497))

(declare-fun m!83499 () Bool)

(assert (=> b!81405 m!83499))

(assert (=> b!81405 m!83495))

(assert (=> b!81405 m!83499))

(declare-fun m!83501 () Bool)

(assert (=> b!81405 m!83501))

(declare-fun m!83503 () Bool)

(assert (=> bm!7600 m!83503))

(declare-fun m!83505 () Bool)

(assert (=> bm!7603 m!83505))

(assert (=> b!81391 m!83493))

(declare-fun m!83507 () Bool)

(assert (=> b!81391 m!83507))

(declare-fun m!83509 () Bool)

(assert (=> b!81391 m!83509))

(declare-fun m!83511 () Bool)

(assert (=> b!81391 m!83511))

(declare-fun m!83513 () Bool)

(assert (=> b!81391 m!83513))

(declare-fun m!83515 () Bool)

(assert (=> b!81391 m!83515))

(declare-fun m!83517 () Bool)

(assert (=> b!81391 m!83517))

(declare-fun m!83519 () Bool)

(assert (=> b!81391 m!83519))

(declare-fun m!83521 () Bool)

(assert (=> b!81391 m!83521))

(declare-fun m!83523 () Bool)

(assert (=> b!81391 m!83523))

(assert (=> b!81391 m!83509))

(assert (=> b!81391 m!83513))

(declare-fun m!83525 () Bool)

(assert (=> b!81391 m!83525))

(declare-fun m!83527 () Bool)

(assert (=> b!81391 m!83527))

(declare-fun m!83529 () Bool)

(assert (=> b!81391 m!83529))

(declare-fun m!83531 () Bool)

(assert (=> b!81391 m!83531))

(assert (=> b!81391 m!83531))

(declare-fun m!83533 () Bool)

(assert (=> b!81391 m!83533))

(assert (=> b!81391 m!83521))

(declare-fun m!83535 () Bool)

(assert (=> b!81391 m!83535))

(declare-fun m!83537 () Bool)

(assert (=> b!81391 m!83537))

(declare-fun m!83539 () Bool)

(assert (=> b!81393 m!83539))

(assert (=> b!81398 m!83493))

(assert (=> b!81398 m!83493))

(declare-fun m!83541 () Bool)

(assert (=> b!81398 m!83541))

(declare-fun m!83543 () Bool)

(assert (=> bm!7604 m!83543))

(assert (=> bm!7601 m!83537))

(declare-fun m!83545 () Bool)

(assert (=> b!81403 m!83545))

(assert (=> b!81396 m!83493))

(assert (=> b!81396 m!83493))

(assert (=> b!81396 m!83541))

(assert (=> b!81394 m!83493))

(assert (=> b!81394 m!83493))

(declare-fun m!83547 () Bool)

(assert (=> b!81394 m!83547))

(assert (=> d!20081 m!83415))

(declare-fun m!83549 () Bool)

(assert (=> b!81407 m!83549))

(assert (=> d!19849 d!20081))

(declare-fun d!20083 () Bool)

(declare-fun res!42323 () Bool)

(declare-fun e!53126 () Bool)

(assert (=> d!20083 (=> res!42323 e!53126)))

(assert (=> d!20083 (= res!42323 (and ((_ is Cons!1507) lt!37543) (= (_1!1101 (h!2096 lt!37543)) (_1!1101 lt!37283))))))

(assert (=> d!20083 (= (containsKey!142 lt!37543 (_1!1101 lt!37283)) e!53126)))

(declare-fun b!81411 () Bool)

(declare-fun e!53127 () Bool)

(assert (=> b!81411 (= e!53126 e!53127)))

(declare-fun res!42324 () Bool)

(assert (=> b!81411 (=> (not res!42324) (not e!53127))))

(assert (=> b!81411 (= res!42324 (and (or (not ((_ is Cons!1507) lt!37543)) (bvsle (_1!1101 (h!2096 lt!37543)) (_1!1101 lt!37283))) ((_ is Cons!1507) lt!37543) (bvslt (_1!1101 (h!2096 lt!37543)) (_1!1101 lt!37283))))))

(declare-fun b!81412 () Bool)

(assert (=> b!81412 (= e!53127 (containsKey!142 (t!5178 lt!37543) (_1!1101 lt!37283)))))

(assert (= (and d!20083 (not res!42323)) b!81411))

(assert (= (and b!81411 res!42324) b!81412))

(declare-fun m!83551 () Bool)

(assert (=> b!81412 m!83551))

(assert (=> b!80977 d!20083))

(declare-fun d!20085 () Bool)

(assert (not d!20085))

(assert (=> b!80783 d!20085))

(declare-fun d!20087 () Bool)

(declare-fun c!12834 () Bool)

(assert (=> d!20087 (= c!12834 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37271))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37271)))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(declare-fun e!53128 () Option!144)

(assert (=> d!20087 (= (getValueByKey!138 (t!5178 (toList!741 lt!37271)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) e!53128)))

(declare-fun b!81414 () Bool)

(declare-fun e!53129 () Option!144)

(assert (=> b!81414 (= e!53128 e!53129)))

(declare-fun c!12835 () Bool)

(assert (=> b!81414 (= c!12835 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37271))) (not (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37271)))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun b!81415 () Bool)

(assert (=> b!81415 (= e!53129 (getValueByKey!138 (t!5178 (t!5178 (toList!741 lt!37271))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!81416 () Bool)

(assert (=> b!81416 (= e!53129 None!142)))

(declare-fun b!81413 () Bool)

(assert (=> b!81413 (= e!53128 (Some!143 (_2!1101 (h!2096 (t!5178 (toList!741 lt!37271))))))))

(assert (= (and d!20087 c!12834) b!81413))

(assert (= (and d!20087 (not c!12834)) b!81414))

(assert (= (and b!81414 c!12835) b!81415))

(assert (= (and b!81414 (not c!12835)) b!81416))

(assert (=> b!81415 m!81811))

(declare-fun m!83553 () Bool)

(assert (=> b!81415 m!83553))

(assert (=> b!81062 d!20087))

(declare-fun d!20089 () Bool)

(declare-fun res!42325 () Bool)

(declare-fun e!53130 () Bool)

(assert (=> d!20089 (=> res!42325 e!53130)))

(assert (=> d!20089 (= res!42325 (and ((_ is Cons!1507) lt!37631) (= (_1!1101 (h!2096 lt!37631)) (_1!1101 lt!37268))))))

(assert (=> d!20089 (= (containsKey!142 lt!37631 (_1!1101 lt!37268)) e!53130)))

(declare-fun b!81417 () Bool)

(declare-fun e!53131 () Bool)

(assert (=> b!81417 (= e!53130 e!53131)))

(declare-fun res!42326 () Bool)

(assert (=> b!81417 (=> (not res!42326) (not e!53131))))

(assert (=> b!81417 (= res!42326 (and (or (not ((_ is Cons!1507) lt!37631)) (bvsle (_1!1101 (h!2096 lt!37631)) (_1!1101 lt!37268))) ((_ is Cons!1507) lt!37631) (bvslt (_1!1101 (h!2096 lt!37631)) (_1!1101 lt!37268))))))

(declare-fun b!81418 () Bool)

(assert (=> b!81418 (= e!53131 (containsKey!142 (t!5178 lt!37631) (_1!1101 lt!37268)))))

(assert (= (and d!20089 (not res!42325)) b!81417))

(assert (= (and b!81417 res!42326) b!81418))

(declare-fun m!83555 () Bool)

(assert (=> b!81418 m!83555))

(assert (=> b!80775 d!20089))

(declare-fun d!20091 () Bool)

(declare-fun e!53132 () Bool)

(assert (=> d!20091 e!53132))

(declare-fun res!42327 () Bool)

(assert (=> d!20091 (=> res!42327 e!53132)))

(declare-fun lt!38056 () Bool)

(assert (=> d!20091 (= res!42327 (not lt!38056))))

(declare-fun lt!38055 () Bool)

(assert (=> d!20091 (= lt!38056 lt!38055)))

(declare-fun lt!38058 () Unit!2341)

(declare-fun e!53133 () Unit!2341)

(assert (=> d!20091 (= lt!38058 e!53133)))

(declare-fun c!12836 () Bool)

(assert (=> d!20091 (= c!12836 lt!38055)))

(assert (=> d!20091 (= lt!38055 (containsKey!142 (toList!741 lt!37838) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!20091 (= (contains!745 lt!37838 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38056)))

(declare-fun b!81419 () Bool)

(declare-fun lt!38057 () Unit!2341)

(assert (=> b!81419 (= e!53133 lt!38057)))

(assert (=> b!81419 (= lt!38057 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37838) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> b!81419 (isDefined!91 (getValueByKey!138 (toList!741 lt!37838) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81420 () Bool)

(declare-fun Unit!2379 () Unit!2341)

(assert (=> b!81420 (= e!53133 Unit!2379)))

(declare-fun b!81421 () Bool)

(assert (=> b!81421 (= e!53132 (isDefined!91 (getValueByKey!138 (toList!741 lt!37838) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20091 c!12836) b!81419))

(assert (= (and d!20091 (not c!12836)) b!81420))

(assert (= (and d!20091 (not res!42327)) b!81421))

(declare-fun m!83557 () Bool)

(assert (=> d!20091 m!83557))

(declare-fun m!83559 () Bool)

(assert (=> b!81419 m!83559))

(assert (=> b!81419 m!82779))

(assert (=> b!81419 m!82779))

(declare-fun m!83561 () Bool)

(assert (=> b!81419 m!83561))

(assert (=> b!81421 m!82779))

(assert (=> b!81421 m!82779))

(assert (=> b!81421 m!83561))

(assert (=> d!19813 d!20091))

(declare-fun d!20093 () Bool)

(declare-fun c!12837 () Bool)

(assert (=> d!20093 (= c!12837 (and ((_ is Cons!1507) lt!37840) (= (_1!1101 (h!2096 lt!37840)) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53134 () Option!144)

(assert (=> d!20093 (= (getValueByKey!138 lt!37840 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53134)))

(declare-fun b!81423 () Bool)

(declare-fun e!53135 () Option!144)

(assert (=> b!81423 (= e!53134 e!53135)))

(declare-fun c!12838 () Bool)

(assert (=> b!81423 (= c!12838 (and ((_ is Cons!1507) lt!37840) (not (= (_1!1101 (h!2096 lt!37840)) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!81424 () Bool)

(assert (=> b!81424 (= e!53135 (getValueByKey!138 (t!5178 lt!37840) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81425 () Bool)

(assert (=> b!81425 (= e!53135 None!142)))

(declare-fun b!81422 () Bool)

(assert (=> b!81422 (= e!53134 (Some!143 (_2!1101 (h!2096 lt!37840))))))

(assert (= (and d!20093 c!12837) b!81422))

(assert (= (and d!20093 (not c!12837)) b!81423))

(assert (= (and b!81423 c!12838) b!81424))

(assert (= (and b!81423 (not c!12838)) b!81425))

(declare-fun m!83563 () Bool)

(assert (=> b!81424 m!83563))

(assert (=> d!19813 d!20093))

(declare-fun d!20095 () Bool)

(assert (=> d!20095 (= (getValueByKey!138 lt!37840 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!38059 () Unit!2341)

(assert (=> d!20095 (= lt!38059 (choose!470 lt!37840 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun e!53136 () Bool)

(assert (=> d!20095 e!53136))

(declare-fun res!42328 () Bool)

(assert (=> d!20095 (=> (not res!42328) (not e!53136))))

(assert (=> d!20095 (= res!42328 (isStrictlySorted!296 lt!37840))))

(assert (=> d!20095 (= (lemmaContainsTupThenGetReturnValue!55 lt!37840 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38059)))

(declare-fun b!81426 () Bool)

(declare-fun res!42329 () Bool)

(assert (=> b!81426 (=> (not res!42329) (not e!53136))))

(assert (=> b!81426 (= res!42329 (containsKey!142 lt!37840 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81427 () Bool)

(assert (=> b!81427 (= e!53136 (contains!746 lt!37840 (tuple2!2181 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20095 res!42328) b!81426))

(assert (= (and b!81426 res!42329) b!81427))

(assert (=> d!20095 m!82773))

(declare-fun m!83565 () Bool)

(assert (=> d!20095 m!83565))

(declare-fun m!83567 () Bool)

(assert (=> d!20095 m!83567))

(declare-fun m!83569 () Bool)

(assert (=> b!81426 m!83569))

(declare-fun m!83571 () Bool)

(assert (=> b!81427 m!83571))

(assert (=> d!19813 d!20095))

(declare-fun b!81428 () Bool)

(declare-fun c!12839 () Bool)

(assert (=> b!81428 (= c!12839 (and ((_ is Cons!1507) (toList!741 lt!37277)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53137 () List!1511)

(declare-fun e!53138 () List!1511)

(assert (=> b!81428 (= e!53137 e!53138)))

(declare-fun b!81429 () Bool)

(declare-fun call!7608 () List!1511)

(assert (=> b!81429 (= e!53138 call!7608)))

(declare-fun b!81430 () Bool)

(declare-fun e!53139 () List!1511)

(declare-fun c!12841 () Bool)

(assert (=> b!81430 (= e!53139 (ite c!12841 (t!5178 (toList!741 lt!37277)) (ite c!12839 (Cons!1507 (h!2096 (toList!741 lt!37277)) (t!5178 (toList!741 lt!37277))) Nil!1508)))))

(declare-fun d!20097 () Bool)

(declare-fun e!53141 () Bool)

(assert (=> d!20097 e!53141))

(declare-fun res!42331 () Bool)

(assert (=> d!20097 (=> (not res!42331) (not e!53141))))

(declare-fun lt!38060 () List!1511)

(assert (=> d!20097 (= res!42331 (isStrictlySorted!296 lt!38060))))

(declare-fun e!53140 () List!1511)

(assert (=> d!20097 (= lt!38060 e!53140)))

(declare-fun c!12840 () Bool)

(assert (=> d!20097 (= c!12840 (and ((_ is Cons!1507) (toList!741 lt!37277)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!20097 (isStrictlySorted!296 (toList!741 lt!37277))))

(assert (=> d!20097 (= (insertStrictlySorted!58 (toList!741 lt!37277) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38060)))

(declare-fun b!81431 () Bool)

(declare-fun call!7610 () List!1511)

(assert (=> b!81431 (= e!53140 call!7610)))

(declare-fun bm!7605 () Bool)

(declare-fun call!7609 () List!1511)

(assert (=> bm!7605 (= call!7609 call!7610)))

(declare-fun bm!7606 () Bool)

(assert (=> bm!7606 (= call!7608 call!7609)))

(declare-fun b!81432 () Bool)

(assert (=> b!81432 (= e!53141 (contains!746 lt!38060 (tuple2!2181 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81433 () Bool)

(assert (=> b!81433 (= e!53140 e!53137)))

(assert (=> b!81433 (= c!12841 (and ((_ is Cons!1507) (toList!741 lt!37277)) (= (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81434 () Bool)

(assert (=> b!81434 (= e!53138 call!7608)))

(declare-fun b!81435 () Bool)

(declare-fun res!42330 () Bool)

(assert (=> b!81435 (=> (not res!42330) (not e!53141))))

(assert (=> b!81435 (= res!42330 (containsKey!142 lt!38060 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun bm!7607 () Bool)

(assert (=> bm!7607 (= call!7610 ($colon$colon!70 e!53139 (ite c!12840 (h!2096 (toList!741 lt!37277)) (tuple2!2181 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun c!12842 () Bool)

(assert (=> bm!7607 (= c!12842 c!12840)))

(declare-fun b!81436 () Bool)

(assert (=> b!81436 (= e!53139 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37277)) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81437 () Bool)

(assert (=> b!81437 (= e!53137 call!7609)))

(assert (= (and d!20097 c!12840) b!81431))

(assert (= (and d!20097 (not c!12840)) b!81433))

(assert (= (and b!81433 c!12841) b!81437))

(assert (= (and b!81433 (not c!12841)) b!81428))

(assert (= (and b!81428 c!12839) b!81434))

(assert (= (and b!81428 (not c!12839)) b!81429))

(assert (= (or b!81434 b!81429) bm!7606))

(assert (= (or b!81437 bm!7606) bm!7605))

(assert (= (or b!81431 bm!7605) bm!7607))

(assert (= (and bm!7607 c!12842) b!81436))

(assert (= (and bm!7607 (not c!12842)) b!81430))

(assert (= (and d!20097 res!42331) b!81435))

(assert (= (and b!81435 res!42330) b!81432))

(declare-fun m!83573 () Bool)

(assert (=> b!81432 m!83573))

(declare-fun m!83575 () Bool)

(assert (=> b!81435 m!83575))

(declare-fun m!83577 () Bool)

(assert (=> d!20097 m!83577))

(assert (=> d!20097 m!82413))

(declare-fun m!83579 () Bool)

(assert (=> b!81436 m!83579))

(declare-fun m!83581 () Bool)

(assert (=> bm!7607 m!83581))

(assert (=> d!19813 d!20097))

(assert (=> d!19897 d!19895))

(declare-fun d!20099 () Bool)

(assert (=> d!20099 (= (getValueByKey!138 lt!37510 (_1!1101 lt!37278)) (Some!143 (_2!1101 lt!37278)))))

(assert (=> d!20099 true))

(declare-fun _$22!400 () Unit!2341)

(assert (=> d!20099 (= (choose!470 lt!37510 (_1!1101 lt!37278) (_2!1101 lt!37278)) _$22!400)))

(declare-fun bs!3443 () Bool)

(assert (= bs!3443 d!20099))

(assert (=> bs!3443 m!82049))

(assert (=> d!19897 d!20099))

(declare-fun d!20101 () Bool)

(declare-fun res!42332 () Bool)

(declare-fun e!53142 () Bool)

(assert (=> d!20101 (=> res!42332 e!53142)))

(assert (=> d!20101 (= res!42332 (or ((_ is Nil!1508) lt!37510) ((_ is Nil!1508) (t!5178 lt!37510))))))

(assert (=> d!20101 (= (isStrictlySorted!296 lt!37510) e!53142)))

(declare-fun b!81438 () Bool)

(declare-fun e!53143 () Bool)

(assert (=> b!81438 (= e!53142 e!53143)))

(declare-fun res!42333 () Bool)

(assert (=> b!81438 (=> (not res!42333) (not e!53143))))

(assert (=> b!81438 (= res!42333 (bvslt (_1!1101 (h!2096 lt!37510)) (_1!1101 (h!2096 (t!5178 lt!37510)))))))

(declare-fun b!81439 () Bool)

(assert (=> b!81439 (= e!53143 (isStrictlySorted!296 (t!5178 lt!37510)))))

(assert (= (and d!20101 (not res!42332)) b!81438))

(assert (= (and b!81438 res!42333) b!81439))

(declare-fun m!83583 () Bool)

(assert (=> b!81439 m!83583))

(assert (=> d!19897 d!20101))

(declare-fun d!20103 () Bool)

(assert (=> d!20103 (= ($colon$colon!70 e!52926 (ite c!12732 (h!2096 (toList!741 lt!37273)) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278)))) (Cons!1507 (ite c!12732 (h!2096 (toList!741 lt!37273)) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))) e!52926))))

(assert (=> bm!7559 d!20103))

(declare-fun d!20105 () Bool)

(assert (=> d!20105 (= (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37489)) (v!2612 (getValueByKey!138 (toList!741 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37489)))))

(assert (=> d!19869 d!20105))

(declare-fun c!12843 () Bool)

(declare-fun d!20107 () Bool)

(assert (=> d!20107 (= c!12843 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))) lt!37489)))))

(declare-fun e!53144 () Option!144)

(assert (=> d!20107 (= (getValueByKey!138 (toList!741 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37489) e!53144)))

(declare-fun b!81441 () Bool)

(declare-fun e!53145 () Option!144)

(assert (=> b!81441 (= e!53144 e!53145)))

(declare-fun c!12844 () Bool)

(assert (=> b!81441 (= c!12844 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (not (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))) lt!37489))))))

(declare-fun b!81442 () Bool)

(assert (=> b!81442 (= e!53145 (getValueByKey!138 (t!5178 (toList!741 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) lt!37489))))

(declare-fun b!81443 () Bool)

(assert (=> b!81443 (= e!53145 None!142)))

(declare-fun b!81440 () Bool)

(assert (=> b!81440 (= e!53144 (Some!143 (_2!1101 (h!2096 (toList!741 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))))

(assert (= (and d!20107 c!12843) b!81440))

(assert (= (and d!20107 (not c!12843)) b!81441))

(assert (= (and b!81441 c!12844) b!81442))

(assert (= (and b!81441 (not c!12844)) b!81443))

(declare-fun m!83585 () Bool)

(assert (=> b!81442 m!83585))

(assert (=> d!19869 d!20107))

(declare-fun d!20109 () Bool)

(declare-fun e!53146 () Bool)

(assert (=> d!20109 e!53146))

(declare-fun res!42334 () Bool)

(assert (=> d!20109 (=> res!42334 e!53146)))

(declare-fun lt!38062 () Bool)

(assert (=> d!20109 (= res!42334 (not lt!38062))))

(declare-fun lt!38061 () Bool)

(assert (=> d!20109 (= lt!38062 lt!38061)))

(declare-fun lt!38064 () Unit!2341)

(declare-fun e!53147 () Unit!2341)

(assert (=> d!20109 (= lt!38064 e!53147)))

(declare-fun c!12845 () Bool)

(assert (=> d!20109 (= c!12845 lt!38061)))

(assert (=> d!20109 (= lt!38061 (containsKey!142 (toList!741 lt!37673) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20109 (= (contains!745 lt!37673 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38062)))

(declare-fun b!81444 () Bool)

(declare-fun lt!38063 () Unit!2341)

(assert (=> b!81444 (= e!53147 lt!38063)))

(assert (=> b!81444 (= lt!38063 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37673) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81444 (isDefined!91 (getValueByKey!138 (toList!741 lt!37673) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81445 () Bool)

(declare-fun Unit!2380 () Unit!2341)

(assert (=> b!81445 (= e!53147 Unit!2380)))

(declare-fun b!81446 () Bool)

(assert (=> b!81446 (= e!53146 (isDefined!91 (getValueByKey!138 (toList!741 lt!37673) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20109 c!12845) b!81444))

(assert (= (and d!20109 (not c!12845)) b!81445))

(assert (= (and d!20109 (not res!42334)) b!81446))

(declare-fun m!83587 () Bool)

(assert (=> d!20109 m!83587))

(declare-fun m!83589 () Bool)

(assert (=> b!81444 m!83589))

(declare-fun m!83591 () Bool)

(assert (=> b!81444 m!83591))

(assert (=> b!81444 m!83591))

(declare-fun m!83593 () Bool)

(assert (=> b!81444 m!83593))

(assert (=> b!81446 m!83591))

(assert (=> b!81446 m!83591))

(assert (=> b!81446 m!83593))

(assert (=> bm!7530 d!20109))

(declare-fun d!20111 () Bool)

(declare-fun c!12846 () Bool)

(assert (=> d!20111 (= c!12846 (and ((_ is Cons!1507) (t!5178 lt!37551)) (= (_1!1101 (h!2096 (t!5178 lt!37551))) (_1!1101 lt!37283))))))

(declare-fun e!53148 () Option!144)

(assert (=> d!20111 (= (getValueByKey!138 (t!5178 lt!37551) (_1!1101 lt!37283)) e!53148)))

(declare-fun b!81448 () Bool)

(declare-fun e!53149 () Option!144)

(assert (=> b!81448 (= e!53148 e!53149)))

(declare-fun c!12847 () Bool)

(assert (=> b!81448 (= c!12847 (and ((_ is Cons!1507) (t!5178 lt!37551)) (not (= (_1!1101 (h!2096 (t!5178 lt!37551))) (_1!1101 lt!37283)))))))

(declare-fun b!81449 () Bool)

(assert (=> b!81449 (= e!53149 (getValueByKey!138 (t!5178 (t!5178 lt!37551)) (_1!1101 lt!37283)))))

(declare-fun b!81450 () Bool)

(assert (=> b!81450 (= e!53149 None!142)))

(declare-fun b!81447 () Bool)

(assert (=> b!81447 (= e!53148 (Some!143 (_2!1101 (h!2096 (t!5178 lt!37551)))))))

(assert (= (and d!20111 c!12846) b!81447))

(assert (= (and d!20111 (not c!12846)) b!81448))

(assert (= (and b!81448 c!12847) b!81449))

(assert (= (and b!81448 (not c!12847)) b!81450))

(declare-fun m!83595 () Bool)

(assert (=> b!81449 m!83595))

(assert (=> b!81091 d!20111))

(declare-fun d!20113 () Bool)

(declare-fun res!42335 () Bool)

(declare-fun e!53150 () Bool)

(assert (=> d!20113 (=> res!42335 e!53150)))

(assert (=> d!20113 (= res!42335 (and ((_ is Cons!1507) (toList!741 call!7465)) (= (_1!1101 (h!2096 (toList!741 call!7465))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!20113 (= (containsKey!142 (toList!741 call!7465) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) e!53150)))

(declare-fun b!81451 () Bool)

(declare-fun e!53151 () Bool)

(assert (=> b!81451 (= e!53150 e!53151)))

(declare-fun res!42336 () Bool)

(assert (=> b!81451 (=> (not res!42336) (not e!53151))))

(assert (=> b!81451 (= res!42336 (and (or (not ((_ is Cons!1507) (toList!741 call!7465))) (bvsle (_1!1101 (h!2096 (toList!741 call!7465))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))) ((_ is Cons!1507) (toList!741 call!7465)) (bvslt (_1!1101 (h!2096 (toList!741 call!7465))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(declare-fun b!81452 () Bool)

(assert (=> b!81452 (= e!53151 (containsKey!142 (t!5178 (toList!741 call!7465)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!20113 (not res!42335)) b!81451))

(assert (= (and b!81451 res!42336) b!81452))

(assert (=> b!81452 m!81811))

(declare-fun m!83597 () Bool)

(assert (=> b!81452 m!83597))

(assert (=> d!19697 d!20113))

(declare-fun d!20115 () Bool)

(declare-fun res!42337 () Bool)

(declare-fun e!53152 () Bool)

(assert (=> d!20115 (=> res!42337 e!53152)))

(assert (=> d!20115 (= res!42337 (and ((_ is Cons!1507) (toList!741 lt!37553)) (= (_1!1101 (h!2096 (toList!741 lt!37553))) (_1!1101 lt!37278))))))

(assert (=> d!20115 (= (containsKey!142 (toList!741 lt!37553) (_1!1101 lt!37278)) e!53152)))

(declare-fun b!81453 () Bool)

(declare-fun e!53153 () Bool)

(assert (=> b!81453 (= e!53152 e!53153)))

(declare-fun res!42338 () Bool)

(assert (=> b!81453 (=> (not res!42338) (not e!53153))))

(assert (=> b!81453 (= res!42338 (and (or (not ((_ is Cons!1507) (toList!741 lt!37553))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37553))) (_1!1101 lt!37278))) ((_ is Cons!1507) (toList!741 lt!37553)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37553))) (_1!1101 lt!37278))))))

(declare-fun b!81454 () Bool)

(assert (=> b!81454 (= e!53153 (containsKey!142 (t!5178 (toList!741 lt!37553)) (_1!1101 lt!37278)))))

(assert (= (and d!20115 (not res!42337)) b!81453))

(assert (= (and b!81453 res!42338) b!81454))

(declare-fun m!83599 () Bool)

(assert (=> b!81454 m!83599))

(assert (=> d!19915 d!20115))

(declare-fun d!20117 () Bool)

(assert (=> d!20117 (contains!745 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))

(declare-fun lt!38067 () Unit!2341)

(declare-fun choose!481 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) (_ BitVec 32) Int) Unit!2341)

(assert (=> d!20117 (= lt!38067 (choose!481 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(assert (=> d!20117 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20117 (= (lemmaArrayContainsKeyThenInListMap!17 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38067)))

(declare-fun bs!3444 () Bool)

(assert (= bs!3444 d!20117))

(assert (=> bs!3444 m!81965))

(assert (=> bs!3444 m!81965))

(assert (=> bs!3444 m!81811))

(assert (=> bs!3444 m!82543))

(assert (=> bs!3444 m!81811))

(declare-fun m!83601 () Bool)

(assert (=> bs!3444 m!83601))

(assert (=> bs!3444 m!82321))

(assert (=> b!80917 d!20117))

(declare-fun d!20119 () Bool)

(declare-fun e!53154 () Bool)

(assert (=> d!20119 e!53154))

(declare-fun res!42339 () Bool)

(assert (=> d!20119 (=> res!42339 e!53154)))

(declare-fun lt!38069 () Bool)

(assert (=> d!20119 (= res!42339 (not lt!38069))))

(declare-fun lt!38068 () Bool)

(assert (=> d!20119 (= lt!38069 lt!38068)))

(declare-fun lt!38071 () Unit!2341)

(declare-fun e!53155 () Unit!2341)

(assert (=> d!20119 (= lt!38071 e!53155)))

(declare-fun c!12848 () Bool)

(assert (=> d!20119 (= c!12848 lt!38068)))

(assert (=> d!20119 (= lt!38068 (containsKey!142 (toList!741 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!20119 (= (contains!745 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) lt!38069)))

(declare-fun b!81455 () Bool)

(declare-fun lt!38070 () Unit!2341)

(assert (=> b!81455 (= e!53155 lt!38070)))

(assert (=> b!81455 (= lt!38070 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!81455 (isDefined!91 (getValueByKey!138 (toList!741 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!81456 () Bool)

(declare-fun Unit!2381 () Unit!2341)

(assert (=> b!81456 (= e!53155 Unit!2381)))

(declare-fun b!81457 () Bool)

(assert (=> b!81457 (= e!53154 (isDefined!91 (getValueByKey!138 (toList!741 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(assert (= (and d!20119 c!12848) b!81455))

(assert (= (and d!20119 (not c!12848)) b!81456))

(assert (= (and d!20119 (not res!42339)) b!81457))

(assert (=> d!20119 m!81811))

(declare-fun m!83603 () Bool)

(assert (=> d!20119 m!83603))

(assert (=> b!81455 m!81811))

(declare-fun m!83605 () Bool)

(assert (=> b!81455 m!83605))

(assert (=> b!81455 m!81811))

(declare-fun m!83607 () Bool)

(assert (=> b!81455 m!83607))

(assert (=> b!81455 m!83607))

(declare-fun m!83609 () Bool)

(assert (=> b!81455 m!83609))

(assert (=> b!81457 m!81811))

(assert (=> b!81457 m!83607))

(assert (=> b!81457 m!83607))

(assert (=> b!81457 m!83609))

(assert (=> b!80917 d!20119))

(assert (=> b!80917 d!19773))

(declare-fun d!20121 () Bool)

(declare-fun e!53156 () Bool)

(assert (=> d!20121 e!53156))

(declare-fun res!42341 () Bool)

(assert (=> d!20121 (=> (not res!42341) (not e!53156))))

(declare-fun lt!38073 () ListLongMap!1451)

(assert (=> d!20121 (= res!42341 (contains!745 lt!38073 (_1!1101 (ite (or c!12636 c!12637) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(declare-fun lt!38075 () List!1511)

(assert (=> d!20121 (= lt!38073 (ListLongMap!1452 lt!38075))))

(declare-fun lt!38074 () Unit!2341)

(declare-fun lt!38072 () Unit!2341)

(assert (=> d!20121 (= lt!38074 lt!38072)))

(assert (=> d!20121 (= (getValueByKey!138 lt!38075 (_1!1101 (ite (or c!12636 c!12637) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))) (Some!143 (_2!1101 (ite (or c!12636 c!12637) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(assert (=> d!20121 (= lt!38072 (lemmaContainsTupThenGetReturnValue!55 lt!38075 (_1!1101 (ite (or c!12636 c!12637) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (_2!1101 (ite (or c!12636 c!12637) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(assert (=> d!20121 (= lt!38075 (insertStrictlySorted!58 (toList!741 (ite c!12636 call!7514 (ite c!12637 call!7513 call!7511))) (_1!1101 (ite (or c!12636 c!12637) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (_2!1101 (ite (or c!12636 c!12637) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(assert (=> d!20121 (= (+!106 (ite c!12636 call!7514 (ite c!12637 call!7513 call!7511)) (ite (or c!12636 c!12637) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) lt!38073)))

(declare-fun b!81458 () Bool)

(declare-fun res!42340 () Bool)

(assert (=> b!81458 (=> (not res!42340) (not e!53156))))

(assert (=> b!81458 (= res!42340 (= (getValueByKey!138 (toList!741 lt!38073) (_1!1101 (ite (or c!12636 c!12637) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))) (Some!143 (_2!1101 (ite (or c!12636 c!12637) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))))

(declare-fun b!81459 () Bool)

(assert (=> b!81459 (= e!53156 (contains!746 (toList!741 lt!38073) (ite (or c!12636 c!12637) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (= (and d!20121 res!42341) b!81458))

(assert (= (and b!81458 res!42340) b!81459))

(declare-fun m!83611 () Bool)

(assert (=> d!20121 m!83611))

(declare-fun m!83613 () Bool)

(assert (=> d!20121 m!83613))

(declare-fun m!83615 () Bool)

(assert (=> d!20121 m!83615))

(declare-fun m!83617 () Bool)

(assert (=> d!20121 m!83617))

(declare-fun m!83619 () Bool)

(assert (=> b!81458 m!83619))

(declare-fun m!83621 () Bool)

(assert (=> b!81459 m!83621))

(assert (=> bm!7510 d!20121))

(assert (=> d!19821 d!19815))

(assert (=> d!19821 d!19819))

(assert (=> d!19821 d!19817))

(assert (=> d!19821 d!19813))

(declare-fun b!81460 () Bool)

(declare-fun e!53157 () ListLongMap!1451)

(declare-fun call!7611 () ListLongMap!1451)

(assert (=> b!81460 (= e!53157 call!7611)))

(declare-fun b!81461 () Bool)

(declare-fun res!42344 () Bool)

(declare-fun e!53159 () Bool)

(assert (=> b!81461 (=> (not res!42344) (not e!53159))))

(declare-fun lt!38077 () ListLongMap!1451)

(assert (=> b!81461 (= res!42344 (not (contains!745 lt!38077 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!7608 () Bool)

(assert (=> bm!7608 (= call!7611 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))) (mask!6299 newMap!16) (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) (zeroValue!2189 newMap!16) (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2293 newMap!16)))))

(declare-fun b!81462 () Bool)

(declare-fun e!53158 () Bool)

(assert (=> b!81462 (= e!53159 e!53158)))

(declare-fun c!12849 () Bool)

(declare-fun e!53163 () Bool)

(assert (=> b!81462 (= c!12849 e!53163)))

(declare-fun res!42345 () Bool)

(assert (=> b!81462 (=> (not res!42345) (not e!53163))))

(assert (=> b!81462 (= res!42345 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81463 () Bool)

(declare-fun lt!38079 () Unit!2341)

(declare-fun lt!38080 () Unit!2341)

(assert (=> b!81463 (= lt!38079 lt!38080)))

(declare-fun lt!38082 () V!3003)

(declare-fun lt!38076 () (_ BitVec 64))

(declare-fun lt!38078 () (_ BitVec 64))

(declare-fun lt!38081 () ListLongMap!1451)

(assert (=> b!81463 (not (contains!745 (+!106 lt!38081 (tuple2!2181 lt!38076 lt!38082)) lt!38078))))

(assert (=> b!81463 (= lt!38080 (addStillNotContains!29 lt!38081 lt!38076 lt!38082 lt!38078))))

(assert (=> b!81463 (= lt!38078 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81463 (= lt!38082 (get!1179 (select (arr!1902 (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81463 (= lt!38076 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81463 (= lt!38081 call!7611)))

(assert (=> b!81463 (= e!53157 (+!106 call!7611 (tuple2!2181 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (get!1179 (select (arr!1902 (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81464 () Bool)

(declare-fun e!53162 () ListLongMap!1451)

(assert (=> b!81464 (= e!53162 e!53157)))

(declare-fun c!12851 () Bool)

(assert (=> b!81464 (= c!12851 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81465 () Bool)

(declare-fun e!53161 () Bool)

(assert (=> b!81465 (= e!53158 e!53161)))

(assert (=> b!81465 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun res!42343 () Bool)

(assert (=> b!81465 (= res!42343 (contains!745 lt!38077 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81465 (=> (not res!42343) (not e!53161))))

(declare-fun d!20123 () Bool)

(assert (=> d!20123 e!53159))

(declare-fun res!42342 () Bool)

(assert (=> d!20123 (=> (not res!42342) (not e!53159))))

(assert (=> d!20123 (= res!42342 (not (contains!745 lt!38077 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20123 (= lt!38077 e!53162)))

(declare-fun c!12852 () Bool)

(assert (=> d!20123 (= c!12852 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(assert (=> d!20123 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20123 (= (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))) (mask!6299 newMap!16) (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) (zeroValue!2189 newMap!16) (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38077)))

(declare-fun b!81466 () Bool)

(declare-fun e!53160 () Bool)

(assert (=> b!81466 (= e!53160 (= lt!38077 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))) (mask!6299 newMap!16) (ite c!12569 (ite c!12571 (extraKeys!2140 newMap!16) lt!37414) (extraKeys!2140 newMap!16)) (zeroValue!2189 newMap!16) (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2293 newMap!16))))))

(declare-fun b!81467 () Bool)

(assert (=> b!81467 (= e!53158 e!53160)))

(declare-fun c!12850 () Bool)

(assert (=> b!81467 (= c!12850 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81468 () Bool)

(assert (=> b!81468 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(assert (=> b!81468 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))))))))

(assert (=> b!81468 (= e!53161 (= (apply!80 lt!38077 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81469 () Bool)

(assert (=> b!81469 (= e!53163 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81469 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!81470 () Bool)

(assert (=> b!81470 (= e!53160 (isEmpty!329 lt!38077))))

(declare-fun b!81471 () Bool)

(assert (=> b!81471 (= e!53162 (ListLongMap!1452 Nil!1508))))

(assert (= (and d!20123 c!12852) b!81471))

(assert (= (and d!20123 (not c!12852)) b!81464))

(assert (= (and b!81464 c!12851) b!81463))

(assert (= (and b!81464 (not c!12851)) b!81460))

(assert (= (or b!81463 b!81460) bm!7608))

(assert (= (and d!20123 res!42342) b!81461))

(assert (= (and b!81461 res!42344) b!81462))

(assert (= (and b!81462 res!42345) b!81469))

(assert (= (and b!81462 c!12849) b!81465))

(assert (= (and b!81462 (not c!12849)) b!81467))

(assert (= (and b!81465 res!42343) b!81468))

(assert (= (and b!81467 c!12850) b!81466))

(assert (= (and b!81467 (not c!12850)) b!81470))

(declare-fun b_lambda!3633 () Bool)

(assert (=> (not b_lambda!3633) (not b!81463)))

(assert (=> b!81463 t!5185))

(declare-fun b_and!4971 () Bool)

(assert (= b_and!4967 (and (=> t!5185 result!2853) b_and!4971)))

(assert (=> b!81463 t!5187))

(declare-fun b_and!4973 () Bool)

(assert (= b_and!4969 (and (=> t!5187 result!2855) b_and!4973)))

(declare-fun b_lambda!3635 () Bool)

(assert (=> (not b_lambda!3635) (not b!81468)))

(assert (=> b!81468 t!5185))

(declare-fun b_and!4975 () Bool)

(assert (= b_and!4971 (and (=> t!5185 result!2853) b_and!4975)))

(assert (=> b!81468 t!5187))

(declare-fun b_and!4977 () Bool)

(assert (= b_and!4973 (and (=> t!5187 result!2855) b_and!4977)))

(declare-fun m!83623 () Bool)

(assert (=> d!20123 m!83623))

(assert (=> d!20123 m!82321))

(assert (=> b!81463 m!82599))

(assert (=> b!81463 m!82271))

(assert (=> b!81463 m!82603))

(assert (=> b!81463 m!82265))

(assert (=> b!81463 m!82271))

(declare-fun m!83625 () Bool)

(assert (=> b!81463 m!83625))

(declare-fun m!83627 () Bool)

(assert (=> b!81463 m!83627))

(assert (=> b!81463 m!83625))

(assert (=> b!81463 m!82599))

(declare-fun m!83629 () Bool)

(assert (=> b!81463 m!83629))

(declare-fun m!83631 () Bool)

(assert (=> b!81463 m!83631))

(assert (=> b!81465 m!82265))

(assert (=> b!81465 m!82265))

(declare-fun m!83633 () Bool)

(assert (=> b!81465 m!83633))

(declare-fun m!83635 () Bool)

(assert (=> b!81470 m!83635))

(declare-fun m!83637 () Bool)

(assert (=> b!81466 m!83637))

(assert (=> bm!7608 m!83637))

(assert (=> b!81464 m!82265))

(assert (=> b!81464 m!82265))

(assert (=> b!81464 m!82313))

(declare-fun m!83639 () Bool)

(assert (=> b!81461 m!83639))

(assert (=> b!81468 m!82599))

(assert (=> b!81468 m!82271))

(assert (=> b!81468 m!82603))

(assert (=> b!81468 m!82265))

(assert (=> b!81468 m!82271))

(assert (=> b!81468 m!82599))

(assert (=> b!81468 m!82265))

(declare-fun m!83641 () Bool)

(assert (=> b!81468 m!83641))

(assert (=> b!81469 m!82265))

(assert (=> b!81469 m!82265))

(assert (=> b!81469 m!82313))

(assert (=> bm!7550 d!20123))

(assert (=> bm!7574 d!19737))

(declare-fun d!20125 () Bool)

(declare-fun res!42346 () Bool)

(declare-fun e!53164 () Bool)

(assert (=> d!20125 (=> res!42346 e!53164)))

(assert (=> d!20125 (= res!42346 (and ((_ is Cons!1507) (toList!741 lt!37516)) (= (_1!1101 (h!2096 (toList!741 lt!37516))) (_1!1101 lt!37283))))))

(assert (=> d!20125 (= (containsKey!142 (toList!741 lt!37516) (_1!1101 lt!37283)) e!53164)))

(declare-fun b!81472 () Bool)

(declare-fun e!53165 () Bool)

(assert (=> b!81472 (= e!53164 e!53165)))

(declare-fun res!42347 () Bool)

(assert (=> b!81472 (=> (not res!42347) (not e!53165))))

(assert (=> b!81472 (= res!42347 (and (or (not ((_ is Cons!1507) (toList!741 lt!37516))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37516))) (_1!1101 lt!37283))) ((_ is Cons!1507) (toList!741 lt!37516)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37516))) (_1!1101 lt!37283))))))

(declare-fun b!81473 () Bool)

(assert (=> b!81473 (= e!53165 (containsKey!142 (t!5178 (toList!741 lt!37516)) (_1!1101 lt!37283)))))

(assert (= (and d!20125 (not res!42346)) b!81472))

(assert (= (and b!81472 res!42347) b!81473))

(declare-fun m!83643 () Bool)

(assert (=> b!81473 m!83643))

(assert (=> d!19753 d!20125))

(assert (=> d!19931 d!19929))

(declare-fun d!20127 () Bool)

(assert (=> d!20127 (= (getValueByKey!138 lt!37559 (_1!1101 lt!37268)) (Some!143 (_2!1101 lt!37268)))))

(assert (=> d!20127 true))

(declare-fun _$22!401 () Unit!2341)

(assert (=> d!20127 (= (choose!470 lt!37559 (_1!1101 lt!37268) (_2!1101 lt!37268)) _$22!401)))

(declare-fun bs!3445 () Bool)

(assert (= bs!3445 d!20127))

(assert (=> bs!3445 m!82161))

(assert (=> d!19931 d!20127))

(declare-fun d!20129 () Bool)

(declare-fun res!42348 () Bool)

(declare-fun e!53166 () Bool)

(assert (=> d!20129 (=> res!42348 e!53166)))

(assert (=> d!20129 (= res!42348 (or ((_ is Nil!1508) lt!37559) ((_ is Nil!1508) (t!5178 lt!37559))))))

(assert (=> d!20129 (= (isStrictlySorted!296 lt!37559) e!53166)))

(declare-fun b!81474 () Bool)

(declare-fun e!53167 () Bool)

(assert (=> b!81474 (= e!53166 e!53167)))

(declare-fun res!42349 () Bool)

(assert (=> b!81474 (=> (not res!42349) (not e!53167))))

(assert (=> b!81474 (= res!42349 (bvslt (_1!1101 (h!2096 lt!37559)) (_1!1101 (h!2096 (t!5178 lt!37559)))))))

(declare-fun b!81475 () Bool)

(assert (=> b!81475 (= e!53167 (isStrictlySorted!296 (t!5178 lt!37559)))))

(assert (= (and d!20129 (not res!42348)) b!81474))

(assert (= (and b!81474 res!42349) b!81475))

(declare-fun m!83645 () Bool)

(assert (=> b!81475 m!83645))

(assert (=> d!19931 d!20129))

(declare-fun d!20131 () Bool)

(declare-fun c!12853 () Bool)

(assert (=> d!20131 (= c!12853 (and ((_ is Cons!1507) (toList!741 lt!37838)) (= (_1!1101 (h!2096 (toList!741 lt!37838))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53168 () Option!144)

(assert (=> d!20131 (= (getValueByKey!138 (toList!741 lt!37838) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53168)))

(declare-fun b!81477 () Bool)

(declare-fun e!53169 () Option!144)

(assert (=> b!81477 (= e!53168 e!53169)))

(declare-fun c!12854 () Bool)

(assert (=> b!81477 (= c!12854 (and ((_ is Cons!1507) (toList!741 lt!37838)) (not (= (_1!1101 (h!2096 (toList!741 lt!37838))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!81478 () Bool)

(assert (=> b!81478 (= e!53169 (getValueByKey!138 (t!5178 (toList!741 lt!37838)) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81479 () Bool)

(assert (=> b!81479 (= e!53169 None!142)))

(declare-fun b!81476 () Bool)

(assert (=> b!81476 (= e!53168 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37838)))))))

(assert (= (and d!20131 c!12853) b!81476))

(assert (= (and d!20131 (not c!12853)) b!81477))

(assert (= (and b!81477 c!12854) b!81478))

(assert (= (and b!81477 (not c!12854)) b!81479))

(declare-fun m!83647 () Bool)

(assert (=> b!81478 m!83647))

(assert (=> b!81001 d!20131))

(declare-fun d!20133 () Bool)

(assert (=> d!20133 (= ($colon$colon!70 e!52978 (ite c!12767 (h!2096 (toList!741 lt!37281)) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268)))) (Cons!1507 (ite c!12767 (h!2096 (toList!741 lt!37281)) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))) e!52978))))

(assert (=> bm!7577 d!20133))

(declare-fun d!20135 () Bool)

(assert (=> d!20135 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3446 () Bool)

(assert (= bs!3446 d!20135))

(assert (=> bs!3446 m!82345))

(declare-fun m!83649 () Bool)

(assert (=> bs!3446 m!83649))

(assert (=> b!81186 d!20135))

(declare-fun d!20137 () Bool)

(declare-fun c!12855 () Bool)

(assert (=> d!20137 (= c!12855 (and ((_ is Cons!1507) (toList!741 lt!37487)) (= (_1!1101 (h!2096 (toList!741 lt!37487))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53170 () Option!144)

(assert (=> d!20137 (= (getValueByKey!138 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000) e!53170)))

(declare-fun b!81481 () Bool)

(declare-fun e!53171 () Option!144)

(assert (=> b!81481 (= e!53170 e!53171)))

(declare-fun c!12856 () Bool)

(assert (=> b!81481 (= c!12856 (and ((_ is Cons!1507) (toList!741 lt!37487)) (not (= (_1!1101 (h!2096 (toList!741 lt!37487))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81482 () Bool)

(assert (=> b!81482 (= e!53171 (getValueByKey!138 (t!5178 (toList!741 lt!37487)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81483 () Bool)

(assert (=> b!81483 (= e!53171 None!142)))

(declare-fun b!81480 () Bool)

(assert (=> b!81480 (= e!53170 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37487)))))))

(assert (= (and d!20137 c!12855) b!81480))

(assert (= (and d!20137 (not c!12855)) b!81481))

(assert (= (and b!81481 c!12856) b!81482))

(assert (= (and b!81481 (not c!12856)) b!81483))

(declare-fun m!83651 () Bool)

(assert (=> b!81482 m!83651))

(assert (=> b!81186 d!20137))

(declare-fun d!20139 () Bool)

(assert (=> d!20139 (= (get!1181 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80690 d!20139))

(declare-fun d!20141 () Bool)

(declare-fun c!12857 () Bool)

(assert (=> d!20141 (= c!12857 ((_ is Nil!1508) (toList!741 lt!37553)))))

(declare-fun e!53172 () (InoxSet tuple2!2180))

(assert (=> d!20141 (= (content!85 (toList!741 lt!37553)) e!53172)))

(declare-fun b!81484 () Bool)

(assert (=> b!81484 (= e!53172 ((as const (Array tuple2!2180 Bool)) false))))

(declare-fun b!81485 () Bool)

(assert (=> b!81485 (= e!53172 ((_ map or) (store ((as const (Array tuple2!2180 Bool)) false) (h!2096 (toList!741 lt!37553)) true) (content!85 (t!5178 (toList!741 lt!37553)))))))

(assert (= (and d!20141 c!12857) b!81484))

(assert (= (and d!20141 (not c!12857)) b!81485))

(declare-fun m!83653 () Bool)

(assert (=> b!81485 m!83653))

(assert (=> b!81485 m!83457))

(assert (=> d!19843 d!20141))

(declare-fun d!20143 () Bool)

(declare-fun res!42350 () Bool)

(declare-fun e!53173 () Bool)

(assert (=> d!20143 (=> res!42350 e!53173)))

(assert (=> d!20143 (= res!42350 (and ((_ is Cons!1507) (toList!741 lt!37508)) (= (_1!1101 (h!2096 (toList!741 lt!37508))) (_1!1101 lt!37278))))))

(assert (=> d!20143 (= (containsKey!142 (toList!741 lt!37508) (_1!1101 lt!37278)) e!53173)))

(declare-fun b!81486 () Bool)

(declare-fun e!53174 () Bool)

(assert (=> b!81486 (= e!53173 e!53174)))

(declare-fun res!42351 () Bool)

(assert (=> b!81486 (=> (not res!42351) (not e!53174))))

(assert (=> b!81486 (= res!42351 (and (or (not ((_ is Cons!1507) (toList!741 lt!37508))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37508))) (_1!1101 lt!37278))) ((_ is Cons!1507) (toList!741 lt!37508)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37508))) (_1!1101 lt!37278))))))

(declare-fun b!81487 () Bool)

(assert (=> b!81487 (= e!53174 (containsKey!142 (t!5178 (toList!741 lt!37508)) (_1!1101 lt!37278)))))

(assert (= (and d!20143 (not res!42350)) b!81486))

(assert (= (and b!81486 res!42351) b!81487))

(declare-fun m!83655 () Bool)

(assert (=> b!81487 m!83655))

(assert (=> d!19893 d!20143))

(declare-fun d!20145 () Bool)

(declare-fun e!53175 () Bool)

(assert (=> d!20145 e!53175))

(declare-fun res!42352 () Bool)

(assert (=> d!20145 (=> res!42352 e!53175)))

(declare-fun lt!38084 () Bool)

(assert (=> d!20145 (= res!42352 (not lt!38084))))

(declare-fun lt!38083 () Bool)

(assert (=> d!20145 (= lt!38084 lt!38083)))

(declare-fun lt!38086 () Unit!2341)

(declare-fun e!53176 () Unit!2341)

(assert (=> d!20145 (= lt!38086 e!53176)))

(declare-fun c!12858 () Bool)

(assert (=> d!20145 (= c!12858 lt!38083)))

(assert (=> d!20145 (= lt!38083 (containsKey!142 (toList!741 lt!37574) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20145 (= (contains!745 lt!37574 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38084)))

(declare-fun b!81488 () Bool)

(declare-fun lt!38085 () Unit!2341)

(assert (=> b!81488 (= e!53176 lt!38085)))

(assert (=> b!81488 (= lt!38085 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37574) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81488 (isDefined!91 (getValueByKey!138 (toList!741 lt!37574) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81489 () Bool)

(declare-fun Unit!2382 () Unit!2341)

(assert (=> b!81489 (= e!53176 Unit!2382)))

(declare-fun b!81490 () Bool)

(assert (=> b!81490 (= e!53175 (isDefined!91 (getValueByKey!138 (toList!741 lt!37574) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20145 c!12858) b!81488))

(assert (= (and d!20145 (not c!12858)) b!81489))

(assert (= (and d!20145 (not res!42352)) b!81490))

(declare-fun m!83657 () Bool)

(assert (=> d!20145 m!83657))

(declare-fun m!83659 () Bool)

(assert (=> b!81488 m!83659))

(declare-fun m!83661 () Bool)

(assert (=> b!81488 m!83661))

(assert (=> b!81488 m!83661))

(declare-fun m!83663 () Bool)

(assert (=> b!81488 m!83663))

(assert (=> b!81490 m!83661))

(assert (=> b!81490 m!83661))

(assert (=> b!81490 m!83663))

(assert (=> d!19701 d!20145))

(assert (=> d!19701 d!19675))

(declare-fun d!20147 () Bool)

(declare-fun res!42353 () Bool)

(declare-fun e!53177 () Bool)

(assert (=> d!20147 (=> res!42353 e!53177)))

(assert (=> d!20147 (= res!42353 (and ((_ is Cons!1507) lt!37555) (= (_1!1101 (h!2096 lt!37555)) (_1!1101 lt!37278))))))

(assert (=> d!20147 (= (containsKey!142 lt!37555 (_1!1101 lt!37278)) e!53177)))

(declare-fun b!81491 () Bool)

(declare-fun e!53178 () Bool)

(assert (=> b!81491 (= e!53177 e!53178)))

(declare-fun res!42354 () Bool)

(assert (=> b!81491 (=> (not res!42354) (not e!53178))))

(assert (=> b!81491 (= res!42354 (and (or (not ((_ is Cons!1507) lt!37555)) (bvsle (_1!1101 (h!2096 lt!37555)) (_1!1101 lt!37278))) ((_ is Cons!1507) lt!37555) (bvslt (_1!1101 (h!2096 lt!37555)) (_1!1101 lt!37278))))))

(declare-fun b!81492 () Bool)

(assert (=> b!81492 (= e!53178 (containsKey!142 (t!5178 lt!37555) (_1!1101 lt!37278)))))

(assert (= (and d!20147 (not res!42353)) b!81491))

(assert (= (and b!81491 res!42354) b!81492))

(declare-fun m!83665 () Bool)

(assert (=> b!81492 m!83665))

(assert (=> b!81115 d!20147))

(declare-fun b!81493 () Bool)

(declare-fun e!53180 () Bool)

(declare-fun call!7612 () Bool)

(assert (=> b!81493 (= e!53180 call!7612)))

(declare-fun c!12859 () Bool)

(declare-fun bm!7609 () Bool)

(assert (=> bm!7609 (= call!7612 (arrayNoDuplicates!0 (_keys!3957 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12859 (Cons!1508 (select (arr!1901 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!12771 (Cons!1508 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) Nil!1509) Nil!1509)) (ite c!12771 (Cons!1508 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) Nil!1509) Nil!1509))))))

(declare-fun b!81494 () Bool)

(assert (=> b!81494 (= e!53180 call!7612)))

(declare-fun b!81495 () Bool)

(declare-fun e!53179 () Bool)

(assert (=> b!81495 (= e!53179 e!53180)))

(assert (=> b!81495 (= c!12859 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!81497 () Bool)

(declare-fun e!53182 () Bool)

(assert (=> b!81497 (= e!53182 (contains!747 (ite c!12771 (Cons!1508 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) Nil!1509) Nil!1509) (select (arr!1901 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!81496 () Bool)

(declare-fun e!53181 () Bool)

(assert (=> b!81496 (= e!53181 e!53179)))

(declare-fun res!42356 () Bool)

(assert (=> b!81496 (=> (not res!42356) (not e!53179))))

(assert (=> b!81496 (= res!42356 (not e!53182))))

(declare-fun res!42355 () Bool)

(assert (=> b!81496 (=> (not res!42355) (not e!53182))))

(assert (=> b!81496 (= res!42355 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!20149 () Bool)

(declare-fun res!42357 () Bool)

(assert (=> d!20149 (=> res!42357 e!53181)))

(assert (=> d!20149 (= res!42357 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2143 (_keys!3957 newMap!16))))))

(assert (=> d!20149 (= (arrayNoDuplicates!0 (_keys!3957 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12771 (Cons!1508 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) Nil!1509) Nil!1509)) e!53181)))

(assert (= (and d!20149 (not res!42357)) b!81496))

(assert (= (and b!81496 res!42355) b!81497))

(assert (= (and b!81496 res!42356) b!81495))

(assert (= (and b!81495 c!12859) b!81493))

(assert (= (and b!81495 (not c!12859)) b!81494))

(assert (= (or b!81493 b!81494) bm!7609))

(declare-fun m!83667 () Bool)

(assert (=> bm!7609 m!83667))

(declare-fun m!83669 () Bool)

(assert (=> bm!7609 m!83669))

(assert (=> b!81495 m!83667))

(assert (=> b!81495 m!83667))

(declare-fun m!83671 () Bool)

(assert (=> b!81495 m!83671))

(assert (=> b!81497 m!83667))

(assert (=> b!81497 m!83667))

(declare-fun m!83673 () Bool)

(assert (=> b!81497 m!83673))

(assert (=> b!81496 m!83667))

(assert (=> b!81496 m!83667))

(assert (=> b!81496 m!83671))

(assert (=> bm!7578 d!20149))

(declare-fun d!20151 () Bool)

(assert (=> d!20151 (= (apply!80 lt!37673 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1182 (getValueByKey!138 (toList!741 lt!37673) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3447 () Bool)

(assert (= bs!3447 d!20151))

(assert (=> bs!3447 m!83591))

(assert (=> bs!3447 m!83591))

(declare-fun m!83675 () Bool)

(assert (=> bs!3447 m!83675))

(assert (=> b!80873 d!20151))

(declare-fun d!20153 () Bool)

(declare-fun e!53183 () Bool)

(assert (=> d!20153 e!53183))

(declare-fun res!42358 () Bool)

(assert (=> d!20153 (=> res!42358 e!53183)))

(declare-fun lt!38088 () Bool)

(assert (=> d!20153 (= res!42358 (not lt!38088))))

(declare-fun lt!38087 () Bool)

(assert (=> d!20153 (= lt!38088 lt!38087)))

(declare-fun lt!38090 () Unit!2341)

(declare-fun e!53184 () Unit!2341)

(assert (=> d!20153 (= lt!38090 e!53184)))

(declare-fun c!12860 () Bool)

(assert (=> d!20153 (= c!12860 lt!38087)))

(assert (=> d!20153 (= lt!38087 (containsKey!142 (toList!741 lt!37574) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20153 (= (contains!745 lt!37574 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38088)))

(declare-fun b!81498 () Bool)

(declare-fun lt!38089 () Unit!2341)

(assert (=> b!81498 (= e!53184 lt!38089)))

(assert (=> b!81498 (= lt!38089 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37574) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81498 (isDefined!91 (getValueByKey!138 (toList!741 lt!37574) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81499 () Bool)

(declare-fun Unit!2383 () Unit!2341)

(assert (=> b!81499 (= e!53184 Unit!2383)))

(declare-fun b!81500 () Bool)

(assert (=> b!81500 (= e!53183 (isDefined!91 (getValueByKey!138 (toList!741 lt!37574) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20153 c!12860) b!81498))

(assert (= (and d!20153 (not c!12860)) b!81499))

(assert (= (and d!20153 (not res!42358)) b!81500))

(declare-fun m!83677 () Bool)

(assert (=> d!20153 m!83677))

(declare-fun m!83679 () Bool)

(assert (=> b!81498 m!83679))

(declare-fun m!83681 () Bool)

(assert (=> b!81498 m!83681))

(assert (=> b!81498 m!83681))

(declare-fun m!83683 () Bool)

(assert (=> b!81498 m!83683))

(assert (=> b!81500 m!83681))

(assert (=> b!81500 m!83681))

(assert (=> b!81500 m!83683))

(assert (=> b!80653 d!20153))

(declare-fun d!20155 () Bool)

(declare-fun lt!38091 () Bool)

(assert (=> d!20155 (= lt!38091 (select (content!85 lt!37551) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun e!53186 () Bool)

(assert (=> d!20155 (= lt!38091 e!53186)))

(declare-fun res!42359 () Bool)

(assert (=> d!20155 (=> (not res!42359) (not e!53186))))

(assert (=> d!20155 (= res!42359 ((_ is Cons!1507) lt!37551))))

(assert (=> d!20155 (= (contains!746 lt!37551 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))) lt!38091)))

(declare-fun b!81501 () Bool)

(declare-fun e!53185 () Bool)

(assert (=> b!81501 (= e!53186 e!53185)))

(declare-fun res!42360 () Bool)

(assert (=> b!81501 (=> res!42360 e!53185)))

(assert (=> b!81501 (= res!42360 (= (h!2096 lt!37551) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun b!81502 () Bool)

(assert (=> b!81502 (= e!53185 (contains!746 (t!5178 lt!37551) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(assert (= (and d!20155 res!42359) b!81501))

(assert (= (and b!81501 (not res!42360)) b!81502))

(declare-fun m!83685 () Bool)

(assert (=> d!20155 m!83685))

(declare-fun m!83687 () Bool)

(assert (=> d!20155 m!83687))

(declare-fun m!83689 () Bool)

(assert (=> b!81502 m!83689))

(assert (=> b!81094 d!20155))

(declare-fun d!20157 () Bool)

(declare-fun lt!38092 () Bool)

(assert (=> d!20157 (= lt!38092 (select (content!85 lt!37640) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun e!53188 () Bool)

(assert (=> d!20157 (= lt!38092 e!53188)))

(declare-fun res!42361 () Bool)

(assert (=> d!20157 (=> (not res!42361) (not e!53188))))

(assert (=> d!20157 (= res!42361 ((_ is Cons!1507) lt!37640))))

(assert (=> d!20157 (= (contains!746 lt!37640 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))) lt!38092)))

(declare-fun b!81503 () Bool)

(declare-fun e!53187 () Bool)

(assert (=> b!81503 (= e!53188 e!53187)))

(declare-fun res!42362 () Bool)

(assert (=> b!81503 (=> res!42362 e!53187)))

(assert (=> b!81503 (= res!42362 (= (h!2096 lt!37640) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun b!81504 () Bool)

(assert (=> b!81504 (= e!53187 (contains!746 (t!5178 lt!37640) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(assert (= (and d!20157 res!42361) b!81503))

(assert (= (and b!81503 (not res!42362)) b!81504))

(declare-fun m!83691 () Bool)

(assert (=> d!20157 m!83691))

(declare-fun m!83693 () Bool)

(assert (=> d!20157 m!83693))

(declare-fun m!83695 () Bool)

(assert (=> b!81504 m!83695))

(assert (=> b!80797 d!20157))

(declare-fun d!20159 () Bool)

(declare-fun c!12861 () Bool)

(assert (=> d!20159 (= c!12861 (and ((_ is Cons!1507) (toList!741 lt!37850)) (= (_1!1101 (h!2096 (toList!741 lt!37850))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53189 () Option!144)

(assert (=> d!20159 (= (getValueByKey!138 (toList!741 lt!37850) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) e!53189)))

(declare-fun b!81506 () Bool)

(declare-fun e!53190 () Option!144)

(assert (=> b!81506 (= e!53189 e!53190)))

(declare-fun c!12862 () Bool)

(assert (=> b!81506 (= c!12862 (and ((_ is Cons!1507) (toList!741 lt!37850)) (not (= (_1!1101 (h!2096 (toList!741 lt!37850))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!81507 () Bool)

(assert (=> b!81507 (= e!53190 (getValueByKey!138 (t!5178 (toList!741 lt!37850)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81508 () Bool)

(assert (=> b!81508 (= e!53190 None!142)))

(declare-fun b!81505 () Bool)

(assert (=> b!81505 (= e!53189 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37850)))))))

(assert (= (and d!20159 c!12861) b!81505))

(assert (= (and d!20159 (not c!12861)) b!81506))

(assert (= (and b!81506 c!12862) b!81507))

(assert (= (and b!81506 (not c!12862)) b!81508))

(declare-fun m!83697 () Bool)

(assert (=> b!81507 m!83697))

(assert (=> b!81007 d!20159))

(declare-fun d!20161 () Bool)

(assert (=> d!20161 (isDefined!91 (getValueByKey!138 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!38093 () Unit!2341)

(assert (=> d!20161 (= lt!38093 (choose!477 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!53191 () Bool)

(assert (=> d!20161 e!53191))

(declare-fun res!42363 () Bool)

(assert (=> d!20161 (=> (not res!42363) (not e!53191))))

(assert (=> d!20161 (= res!42363 (isStrictlySorted!296 (toList!741 lt!37487)))))

(assert (=> d!20161 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!38093)))

(declare-fun b!81509 () Bool)

(assert (=> b!81509 (= e!53191 (containsKey!142 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20161 res!42363) b!81509))

(assert (=> d!20161 m!81993))

(assert (=> d!20161 m!82341))

(assert (=> d!20161 m!82341))

(assert (=> d!20161 m!82379))

(assert (=> d!20161 m!81993))

(declare-fun m!83699 () Bool)

(assert (=> d!20161 m!83699))

(assert (=> d!20161 m!83475))

(assert (=> b!81509 m!81993))

(assert (=> b!81509 m!82375))

(assert (=> b!80725 d!20161))

(declare-fun d!20163 () Bool)

(assert (=> d!20163 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3448 () Bool)

(assert (= bs!3448 d!20163))

(assert (=> bs!3448 m!82341))

(declare-fun m!83701 () Bool)

(assert (=> bs!3448 m!83701))

(assert (=> b!80725 d!20163))

(declare-fun d!20165 () Bool)

(declare-fun c!12863 () Bool)

(assert (=> d!20165 (= c!12863 (and ((_ is Cons!1507) (toList!741 lt!37487)) (= (_1!1101 (h!2096 (toList!741 lt!37487))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!53192 () Option!144)

(assert (=> d!20165 (= (getValueByKey!138 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53192)))

(declare-fun b!81511 () Bool)

(declare-fun e!53193 () Option!144)

(assert (=> b!81511 (= e!53192 e!53193)))

(declare-fun c!12864 () Bool)

(assert (=> b!81511 (= c!12864 (and ((_ is Cons!1507) (toList!741 lt!37487)) (not (= (_1!1101 (h!2096 (toList!741 lt!37487))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!81512 () Bool)

(assert (=> b!81512 (= e!53193 (getValueByKey!138 (t!5178 (toList!741 lt!37487)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!81513 () Bool)

(assert (=> b!81513 (= e!53193 None!142)))

(declare-fun b!81510 () Bool)

(assert (=> b!81510 (= e!53192 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37487)))))))

(assert (= (and d!20165 c!12863) b!81510))

(assert (= (and d!20165 (not c!12863)) b!81511))

(assert (= (and b!81511 c!12864) b!81512))

(assert (= (and b!81511 (not c!12864)) b!81513))

(assert (=> b!81512 m!81993))

(declare-fun m!83703 () Bool)

(assert (=> b!81512 m!83703))

(assert (=> b!80725 d!20165))

(assert (=> b!81110 d!19975))

(assert (=> b!81110 d!19709))

(declare-fun d!20167 () Bool)

(declare-fun lt!38094 () Bool)

(assert (=> d!20167 (= lt!38094 (select (content!85 (toList!741 lt!37831)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun e!53195 () Bool)

(assert (=> d!20167 (= lt!38094 e!53195)))

(declare-fun res!42364 () Bool)

(assert (=> d!20167 (=> (not res!42364) (not e!53195))))

(assert (=> d!20167 (= res!42364 ((_ is Cons!1507) (toList!741 lt!37831)))))

(assert (=> d!20167 (= (contains!746 (toList!741 lt!37831) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!38094)))

(declare-fun b!81514 () Bool)

(declare-fun e!53194 () Bool)

(assert (=> b!81514 (= e!53195 e!53194)))

(declare-fun res!42365 () Bool)

(assert (=> b!81514 (=> res!42365 e!53194)))

(assert (=> b!81514 (= res!42365 (= (h!2096 (toList!741 lt!37831)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!81515 () Bool)

(assert (=> b!81515 (= e!53194 (contains!746 (t!5178 (toList!741 lt!37831)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!20167 res!42364) b!81514))

(assert (= (and b!81514 (not res!42365)) b!81515))

(declare-fun m!83705 () Bool)

(assert (=> d!20167 m!83705))

(declare-fun m!83707 () Bool)

(assert (=> d!20167 m!83707))

(declare-fun m!83709 () Bool)

(assert (=> b!81515 m!83709))

(assert (=> b!80996 d!20167))

(declare-fun d!20169 () Bool)

(declare-fun lt!38095 () Bool)

(assert (=> d!20169 (= lt!38095 (select (content!85 (toList!741 lt!37887)) (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun e!53197 () Bool)

(assert (=> d!20169 (= lt!38095 e!53197)))

(declare-fun res!42366 () Bool)

(assert (=> d!20169 (=> (not res!42366) (not e!53197))))

(assert (=> d!20169 (= res!42366 ((_ is Cons!1507) (toList!741 lt!37887)))))

(assert (=> d!20169 (= (contains!746 (toList!741 lt!37887) (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!38095)))

(declare-fun b!81516 () Bool)

(declare-fun e!53196 () Bool)

(assert (=> b!81516 (= e!53197 e!53196)))

(declare-fun res!42367 () Bool)

(assert (=> b!81516 (=> res!42367 e!53196)))

(assert (=> b!81516 (= res!42367 (= (h!2096 (toList!741 lt!37887)) (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!81517 () Bool)

(assert (=> b!81517 (= e!53196 (contains!746 (t!5178 (toList!741 lt!37887)) (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!20169 res!42366) b!81516))

(assert (= (and b!81516 (not res!42367)) b!81517))

(declare-fun m!83711 () Bool)

(assert (=> d!20169 m!83711))

(declare-fun m!83713 () Bool)

(assert (=> d!20169 m!83713))

(declare-fun m!83715 () Bool)

(assert (=> b!81517 m!83715))

(assert (=> b!81047 d!20169))

(declare-fun d!20171 () Bool)

(assert (=> d!20171 (= (get!1182 (getValueByKey!138 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2612 (getValueByKey!138 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19711 d!20171))

(assert (=> d!19711 d!20025))

(declare-fun d!20173 () Bool)

(declare-fun c!12865 () Bool)

(assert (=> d!20173 (= c!12865 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37557))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37557)))) (_1!1101 lt!37268))))))

(declare-fun e!53198 () Option!144)

(assert (=> d!20173 (= (getValueByKey!138 (t!5178 (toList!741 lt!37557)) (_1!1101 lt!37268)) e!53198)))

(declare-fun b!81519 () Bool)

(declare-fun e!53199 () Option!144)

(assert (=> b!81519 (= e!53198 e!53199)))

(declare-fun c!12866 () Bool)

(assert (=> b!81519 (= c!12866 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37557))) (not (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37557)))) (_1!1101 lt!37268)))))))

(declare-fun b!81520 () Bool)

(assert (=> b!81520 (= e!53199 (getValueByKey!138 (t!5178 (t!5178 (toList!741 lt!37557))) (_1!1101 lt!37268)))))

(declare-fun b!81521 () Bool)

(assert (=> b!81521 (= e!53199 None!142)))

(declare-fun b!81518 () Bool)

(assert (=> b!81518 (= e!53198 (Some!143 (_2!1101 (h!2096 (t!5178 (toList!741 lt!37557))))))))

(assert (= (and d!20173 c!12865) b!81518))

(assert (= (and d!20173 (not c!12865)) b!81519))

(assert (= (and b!81519 c!12866) b!81520))

(assert (= (and b!81519 (not c!12866)) b!81521))

(declare-fun m!83717 () Bool)

(assert (=> b!81520 m!83717))

(assert (=> b!80714 d!20173))

(declare-fun d!20175 () Bool)

(declare-fun res!42368 () Bool)

(declare-fun e!53200 () Bool)

(assert (=> d!20175 (=> res!42368 e!53200)))

(assert (=> d!20175 (= res!42368 (and ((_ is Cons!1507) (toList!741 lt!37557)) (= (_1!1101 (h!2096 (toList!741 lt!37557))) (_1!1101 lt!37268))))))

(assert (=> d!20175 (= (containsKey!142 (toList!741 lt!37557) (_1!1101 lt!37268)) e!53200)))

(declare-fun b!81522 () Bool)

(declare-fun e!53201 () Bool)

(assert (=> b!81522 (= e!53200 e!53201)))

(declare-fun res!42369 () Bool)

(assert (=> b!81522 (=> (not res!42369) (not e!53201))))

(assert (=> b!81522 (= res!42369 (and (or (not ((_ is Cons!1507) (toList!741 lt!37557))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37557))) (_1!1101 lt!37268))) ((_ is Cons!1507) (toList!741 lt!37557)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37557))) (_1!1101 lt!37268))))))

(declare-fun b!81523 () Bool)

(assert (=> b!81523 (= e!53201 (containsKey!142 (t!5178 (toList!741 lt!37557)) (_1!1101 lt!37268)))))

(assert (= (and d!20175 (not res!42368)) b!81522))

(assert (= (and b!81522 res!42369) b!81523))

(declare-fun m!83719 () Bool)

(assert (=> b!81523 m!83719))

(assert (=> d!19927 d!20175))

(declare-fun d!20177 () Bool)

(declare-fun c!12867 () Bool)

(assert (=> d!20177 (= c!12867 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37549))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37549)))) (_1!1101 lt!37283))))))

(declare-fun e!53202 () Option!144)

(assert (=> d!20177 (= (getValueByKey!138 (t!5178 (toList!741 lt!37549)) (_1!1101 lt!37283)) e!53202)))

(declare-fun b!81525 () Bool)

(declare-fun e!53203 () Option!144)

(assert (=> b!81525 (= e!53202 e!53203)))

(declare-fun c!12868 () Bool)

(assert (=> b!81525 (= c!12868 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37549))) (not (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37549)))) (_1!1101 lt!37283)))))))

(declare-fun b!81526 () Bool)

(assert (=> b!81526 (= e!53203 (getValueByKey!138 (t!5178 (t!5178 (toList!741 lt!37549))) (_1!1101 lt!37283)))))

(declare-fun b!81527 () Bool)

(assert (=> b!81527 (= e!53203 None!142)))

(declare-fun b!81524 () Bool)

(assert (=> b!81524 (= e!53202 (Some!143 (_2!1101 (h!2096 (t!5178 (toList!741 lt!37549))))))))

(assert (= (and d!20177 c!12867) b!81524))

(assert (= (and d!20177 (not c!12867)) b!81525))

(assert (= (and b!81525 c!12868) b!81526))

(assert (= (and b!81525 (not c!12868)) b!81527))

(declare-fun m!83721 () Bool)

(assert (=> b!81526 m!83721))

(assert (=> b!80683 d!20177))

(declare-fun d!20179 () Bool)

(declare-fun lt!38096 () Bool)

(assert (=> d!20179 (= lt!38096 (select (content!85 (toList!741 lt!37823)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(declare-fun e!53205 () Bool)

(assert (=> d!20179 (= lt!38096 e!53205)))

(declare-fun res!42370 () Bool)

(assert (=> d!20179 (=> (not res!42370) (not e!53205))))

(assert (=> d!20179 (= res!42370 ((_ is Cons!1507) (toList!741 lt!37823)))))

(assert (=> d!20179 (= (contains!746 (toList!741 lt!37823) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) lt!38096)))

(declare-fun b!81528 () Bool)

(declare-fun e!53204 () Bool)

(assert (=> b!81528 (= e!53205 e!53204)))

(declare-fun res!42371 () Bool)

(assert (=> b!81528 (=> res!42371 e!53204)))

(assert (=> b!81528 (= res!42371 (= (h!2096 (toList!741 lt!37823)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(declare-fun b!81529 () Bool)

(assert (=> b!81529 (= e!53204 (contains!746 (t!5178 (toList!741 lt!37823)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (= (and d!20179 res!42370) b!81528))

(assert (= (and b!81528 (not res!42371)) b!81529))

(declare-fun m!83723 () Bool)

(assert (=> d!20179 m!83723))

(declare-fun m!83725 () Bool)

(assert (=> d!20179 m!83725))

(declare-fun m!83727 () Bool)

(assert (=> b!81529 m!83727))

(assert (=> b!80992 d!20179))

(declare-fun d!20181 () Bool)

(declare-fun c!12869 () Bool)

(assert (=> d!20181 (= c!12869 (and ((_ is Cons!1507) (toList!741 lt!37895)) (= (_1!1101 (h!2096 (toList!741 lt!37895))) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53206 () Option!144)

(assert (=> d!20181 (= (getValueByKey!138 (toList!741 lt!37895) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53206)))

(declare-fun b!81531 () Bool)

(declare-fun e!53207 () Option!144)

(assert (=> b!81531 (= e!53206 e!53207)))

(declare-fun c!12870 () Bool)

(assert (=> b!81531 (= c!12870 (and ((_ is Cons!1507) (toList!741 lt!37895)) (not (= (_1!1101 (h!2096 (toList!741 lt!37895))) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!81532 () Bool)

(assert (=> b!81532 (= e!53207 (getValueByKey!138 (t!5178 (toList!741 lt!37895)) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81533 () Bool)

(assert (=> b!81533 (= e!53207 None!142)))

(declare-fun b!81530 () Bool)

(assert (=> b!81530 (= e!53206 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37895)))))))

(assert (= (and d!20181 c!12869) b!81530))

(assert (= (and d!20181 (not c!12869)) b!81531))

(assert (= (and b!81531 c!12870) b!81532))

(assert (= (and b!81531 (not c!12870)) b!81533))

(declare-fun m!83729 () Bool)

(assert (=> b!81532 m!83729))

(assert (=> b!81050 d!20181))

(declare-fun d!20183 () Bool)

(assert (=> d!20183 (= (apply!80 lt!37574 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1182 (getValueByKey!138 (toList!741 lt!37574) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3449 () Bool)

(assert (= bs!3449 d!20183))

(assert (=> bs!3449 m!82217))

(declare-fun m!83731 () Bool)

(assert (=> bs!3449 m!83731))

(assert (=> bs!3449 m!83731))

(declare-fun m!83733 () Bool)

(assert (=> bs!3449 m!83733))

(assert (=> b!80660 d!20183))

(declare-fun d!20185 () Bool)

(declare-fun c!12871 () Bool)

(assert (=> d!20185 (= c!12871 ((_ is ValueCellFull!915) (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!53208 () V!3003)

(assert (=> d!20185 (= (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53208)))

(declare-fun b!81534 () Bool)

(assert (=> b!81534 (= e!53208 (get!1180 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81535 () Bool)

(assert (=> b!81535 (= e!53208 (get!1181 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20185 c!12871) b!81534))

(assert (= (and d!20185 (not c!12871)) b!81535))

(assert (=> b!81534 m!82213))

(assert (=> b!81534 m!81821))

(declare-fun m!83735 () Bool)

(assert (=> b!81534 m!83735))

(assert (=> b!81535 m!82213))

(assert (=> b!81535 m!81821))

(declare-fun m!83737 () Bool)

(assert (=> b!81535 m!83737))

(assert (=> b!80660 d!20185))

(declare-fun d!20187 () Bool)

(declare-fun res!42372 () Bool)

(declare-fun e!53209 () Bool)

(assert (=> d!20187 (=> res!42372 e!53209)))

(assert (=> d!20187 (= res!42372 (and ((_ is Cons!1507) (toList!741 lt!37512)) (= (_1!1101 (h!2096 (toList!741 lt!37512))) (_1!1101 lt!37268))))))

(assert (=> d!20187 (= (containsKey!142 (toList!741 lt!37512) (_1!1101 lt!37268)) e!53209)))

(declare-fun b!81536 () Bool)

(declare-fun e!53210 () Bool)

(assert (=> b!81536 (= e!53209 e!53210)))

(declare-fun res!42373 () Bool)

(assert (=> b!81536 (=> (not res!42373) (not e!53210))))

(assert (=> b!81536 (= res!42373 (and (or (not ((_ is Cons!1507) (toList!741 lt!37512))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37512))) (_1!1101 lt!37268))) ((_ is Cons!1507) (toList!741 lt!37512)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37512))) (_1!1101 lt!37268))))))

(declare-fun b!81537 () Bool)

(assert (=> b!81537 (= e!53210 (containsKey!142 (t!5178 (toList!741 lt!37512)) (_1!1101 lt!37268)))))

(assert (= (and d!20187 (not res!42372)) b!81536))

(assert (= (and b!81536 res!42373) b!81537))

(declare-fun m!83739 () Bool)

(assert (=> b!81537 m!83739))

(assert (=> d!19743 d!20187))

(declare-fun d!20189 () Bool)

(declare-fun lt!38097 () Bool)

(assert (=> d!20189 (= lt!38097 (select (content!85 lt!37543) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun e!53212 () Bool)

(assert (=> d!20189 (= lt!38097 e!53212)))

(declare-fun res!42374 () Bool)

(assert (=> d!20189 (=> (not res!42374) (not e!53212))))

(assert (=> d!20189 (= res!42374 ((_ is Cons!1507) lt!37543))))

(assert (=> d!20189 (= (contains!746 lt!37543 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))) lt!38097)))

(declare-fun b!81538 () Bool)

(declare-fun e!53211 () Bool)

(assert (=> b!81538 (= e!53212 e!53211)))

(declare-fun res!42375 () Bool)

(assert (=> b!81538 (=> res!42375 e!53211)))

(assert (=> b!81538 (= res!42375 (= (h!2096 lt!37543) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun b!81539 () Bool)

(assert (=> b!81539 (= e!53211 (contains!746 (t!5178 lt!37543) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(assert (= (and d!20189 res!42374) b!81538))

(assert (= (and b!81538 (not res!42375)) b!81539))

(declare-fun m!83741 () Bool)

(assert (=> d!20189 m!83741))

(declare-fun m!83743 () Bool)

(assert (=> d!20189 m!83743))

(declare-fun m!83745 () Bool)

(assert (=> b!81539 m!83745))

(assert (=> b!80978 d!20189))

(declare-fun d!20191 () Bool)

(declare-fun e!53213 () Bool)

(assert (=> d!20191 e!53213))

(declare-fun res!42376 () Bool)

(assert (=> d!20191 (=> res!42376 e!53213)))

(declare-fun lt!38099 () Bool)

(assert (=> d!20191 (= res!42376 (not lt!38099))))

(declare-fun lt!38098 () Bool)

(assert (=> d!20191 (= lt!38099 lt!38098)))

(declare-fun lt!38101 () Unit!2341)

(declare-fun e!53214 () Unit!2341)

(assert (=> d!20191 (= lt!38101 e!53214)))

(declare-fun c!12872 () Bool)

(assert (=> d!20191 (= c!12872 lt!38098)))

(assert (=> d!20191 (= lt!38098 (containsKey!142 (toList!741 lt!37597) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20191 (= (contains!745 lt!37597 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38099)))

(declare-fun b!81540 () Bool)

(declare-fun lt!38100 () Unit!2341)

(assert (=> b!81540 (= e!53214 lt!38100)))

(assert (=> b!81540 (= lt!38100 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37597) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81540 (isDefined!91 (getValueByKey!138 (toList!741 lt!37597) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81541 () Bool)

(declare-fun Unit!2384 () Unit!2341)

(assert (=> b!81541 (= e!53214 Unit!2384)))

(declare-fun b!81542 () Bool)

(assert (=> b!81542 (= e!53213 (isDefined!91 (getValueByKey!138 (toList!741 lt!37597) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20191 c!12872) b!81540))

(assert (= (and d!20191 (not c!12872)) b!81541))

(assert (= (and d!20191 (not res!42376)) b!81542))

(declare-fun m!83747 () Bool)

(assert (=> d!20191 m!83747))

(declare-fun m!83749 () Bool)

(assert (=> b!81540 m!83749))

(declare-fun m!83751 () Bool)

(assert (=> b!81540 m!83751))

(assert (=> b!81540 m!83751))

(declare-fun m!83753 () Bool)

(assert (=> b!81540 m!83753))

(assert (=> b!81542 m!83751))

(assert (=> b!81542 m!83751))

(assert (=> b!81542 m!83753))

(assert (=> bm!7507 d!20191))

(declare-fun d!20193 () Bool)

(assert (=> d!20193 (isDefined!91 (getValueByKey!138 (toList!741 lt!37508) (_1!1101 lt!37278)))))

(declare-fun lt!38102 () Unit!2341)

(assert (=> d!20193 (= lt!38102 (choose!477 (toList!741 lt!37508) (_1!1101 lt!37278)))))

(declare-fun e!53215 () Bool)

(assert (=> d!20193 e!53215))

(declare-fun res!42377 () Bool)

(assert (=> d!20193 (=> (not res!42377) (not e!53215))))

(assert (=> d!20193 (= res!42377 (isStrictlySorted!296 (toList!741 lt!37508)))))

(assert (=> d!20193 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37508) (_1!1101 lt!37278)) lt!38102)))

(declare-fun b!81543 () Bool)

(assert (=> b!81543 (= e!53215 (containsKey!142 (toList!741 lt!37508) (_1!1101 lt!37278)))))

(assert (= (and d!20193 res!42377) b!81543))

(assert (=> d!20193 m!82055))

(assert (=> d!20193 m!82055))

(assert (=> d!20193 m!83003))

(declare-fun m!83755 () Bool)

(assert (=> d!20193 m!83755))

(declare-fun m!83757 () Bool)

(assert (=> d!20193 m!83757))

(assert (=> b!81543 m!82999))

(assert (=> b!81064 d!20193))

(declare-fun d!20195 () Bool)

(assert (=> d!20195 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37508) (_1!1101 lt!37278))) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37508) (_1!1101 lt!37278)))))))

(declare-fun bs!3450 () Bool)

(assert (= bs!3450 d!20195))

(assert (=> bs!3450 m!82055))

(declare-fun m!83759 () Bool)

(assert (=> bs!3450 m!83759))

(assert (=> b!81064 d!20195))

(assert (=> b!81064 d!19775))

(declare-fun d!20197 () Bool)

(assert (=> d!20197 (= ($colon$colon!70 e!52749 (ite c!12657 (h!2096 (toList!741 lt!37277)) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268)))) (Cons!1507 (ite c!12657 (h!2096 (toList!741 lt!37277)) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))) e!52749))))

(assert (=> bm!7521 d!20197))

(declare-fun b!81562 () Bool)

(declare-fun e!53226 () SeekEntryResult!241)

(declare-fun e!53230 () SeekEntryResult!241)

(assert (=> b!81562 (= e!53226 e!53230)))

(declare-fun lt!38108 () (_ BitVec 64))

(declare-fun c!12881 () Bool)

(assert (=> b!81562 (= c!12881 (or (= lt!38108 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (= (bvadd lt!38108 lt!38108) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81563 () Bool)

(declare-fun lt!38107 () SeekEntryResult!241)

(assert (=> b!81563 (and (bvsge (index!3101 lt!38107) #b00000000000000000000000000000000) (bvslt (index!3101 lt!38107) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun res!42385 () Bool)

(assert (=> b!81563 (= res!42385 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3101 lt!38107)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53227 () Bool)

(assert (=> b!81563 (=> res!42385 e!53227)))

(declare-fun b!81564 () Bool)

(assert (=> b!81564 (and (bvsge (index!3101 lt!38107) #b00000000000000000000000000000000) (bvslt (index!3101 lt!38107) (size!2143 (_keys!3957 newMap!16))))))

(assert (=> b!81564 (= e!53227 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3101 lt!38107)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81565 () Bool)

(assert (=> b!81565 (= e!53226 (Intermediate!241 true (toIndex!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (mask!6299 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun d!20199 () Bool)

(declare-fun e!53229 () Bool)

(assert (=> d!20199 e!53229))

(declare-fun c!12880 () Bool)

(assert (=> d!20199 (= c!12880 (and ((_ is Intermediate!241) lt!38107) (undefined!1053 lt!38107)))))

(assert (=> d!20199 (= lt!38107 e!53226)))

(declare-fun c!12879 () Bool)

(assert (=> d!20199 (= c!12879 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!20199 (= lt!38108 (select (arr!1901 (_keys!3957 newMap!16)) (toIndex!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (mask!6299 newMap!16))))))

(assert (=> d!20199 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20199 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (mask!6299 newMap!16)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)) lt!38107)))

(declare-fun b!81566 () Bool)

(assert (=> b!81566 (and (bvsge (index!3101 lt!38107) #b00000000000000000000000000000000) (bvslt (index!3101 lt!38107) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun res!42386 () Bool)

(assert (=> b!81566 (= res!42386 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3101 lt!38107)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!81566 (=> res!42386 e!53227)))

(declare-fun e!53228 () Bool)

(assert (=> b!81566 (= e!53228 e!53227)))

(declare-fun b!81567 () Bool)

(assert (=> b!81567 (= e!53229 (bvsge (x!11692 lt!38107) #b01111111111111111111111111111110))))

(declare-fun b!81568 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!81568 (= e!53230 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (mask!6299 newMap!16)) #b00000000000000000000000000000000 (mask!6299 newMap!16)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun b!81569 () Bool)

(assert (=> b!81569 (= e!53229 e!53228)))

(declare-fun res!42384 () Bool)

(assert (=> b!81569 (= res!42384 (and ((_ is Intermediate!241) lt!38107) (not (undefined!1053 lt!38107)) (bvslt (x!11692 lt!38107) #b01111111111111111111111111111110) (bvsge (x!11692 lt!38107) #b00000000000000000000000000000000) (bvsge (x!11692 lt!38107) #b00000000000000000000000000000000)))))

(assert (=> b!81569 (=> (not res!42384) (not e!53228))))

(declare-fun b!81570 () Bool)

(assert (=> b!81570 (= e!53230 (Intermediate!241 false (toIndex!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (mask!6299 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!20199 c!12879) b!81565))

(assert (= (and d!20199 (not c!12879)) b!81562))

(assert (= (and b!81562 c!12881) b!81570))

(assert (= (and b!81562 (not c!12881)) b!81568))

(assert (= (and d!20199 c!12880) b!81567))

(assert (= (and d!20199 (not c!12880)) b!81569))

(assert (= (and b!81569 res!42384) b!81566))

(assert (= (and b!81566 (not res!42386)) b!81563))

(assert (= (and b!81563 (not res!42385)) b!81564))

(assert (=> d!20199 m!82465))

(declare-fun m!83761 () Bool)

(assert (=> d!20199 m!83761))

(assert (=> d!20199 m!82321))

(declare-fun m!83763 () Bool)

(assert (=> b!81566 m!83763))

(assert (=> b!81564 m!83763))

(assert (=> b!81563 m!83763))

(assert (=> b!81568 m!82465))

(declare-fun m!83765 () Bool)

(assert (=> b!81568 m!83765))

(assert (=> b!81568 m!83765))

(assert (=> b!81568 m!81811))

(declare-fun m!83767 () Bool)

(assert (=> b!81568 m!83767))

(assert (=> d!19767 d!20199))

(declare-fun d!20201 () Bool)

(declare-fun lt!38114 () (_ BitVec 32))

(declare-fun lt!38113 () (_ BitVec 32))

(assert (=> d!20201 (= lt!38114 (bvmul (bvxor lt!38113 (bvlshr lt!38113 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!20201 (= lt!38113 ((_ extract 31 0) (bvand (bvxor (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvlshr (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!20201 (and (bvsge (mask!6299 newMap!16) #b00000000000000000000000000000000) (let ((res!42387 (let ((h!2098 ((_ extract 31 0) (bvand (bvxor (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvlshr (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11794 (bvmul (bvxor h!2098 (bvlshr h!2098 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11794 (bvlshr x!11794 #b00000000000000000000000000001101)) (mask!6299 newMap!16)))))) (and (bvslt res!42387 (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001)) (bvsge res!42387 #b00000000000000000000000000000000))))))

(assert (=> d!20201 (= (toIndex!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (mask!6299 newMap!16)) (bvand (bvxor lt!38114 (bvlshr lt!38114 #b00000000000000000000000000001101)) (mask!6299 newMap!16)))))

(assert (=> d!19767 d!20201))

(assert (=> d!19767 d!19953))

(assert (=> d!19925 d!19767))

(declare-fun b!81587 () Bool)

(declare-fun e!53241 () Bool)

(declare-fun call!7617 () Bool)

(assert (=> b!81587 (= e!53241 (not call!7617))))

(declare-fun d!20203 () Bool)

(declare-fun e!53242 () Bool)

(assert (=> d!20203 e!53242))

(declare-fun c!12886 () Bool)

(declare-fun lt!38117 () SeekEntryResult!241)

(assert (=> d!20203 (= c!12886 ((_ is MissingZero!241) lt!38117))))

(assert (=> d!20203 (= lt!38117 (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (=> d!20203 true))

(declare-fun _$34!826 () Unit!2341)

(assert (=> d!20203 (= (choose!479 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)) _$34!826)))

(declare-fun b!81588 () Bool)

(declare-fun res!42397 () Bool)

(assert (=> b!81588 (=> (not res!42397) (not e!53241))))

(declare-fun call!7618 () Bool)

(assert (=> b!81588 (= res!42397 call!7618)))

(declare-fun e!53240 () Bool)

(assert (=> b!81588 (= e!53240 e!53241)))

(declare-fun b!81589 () Bool)

(declare-fun e!53239 () Bool)

(assert (=> b!81589 (= e!53242 e!53239)))

(declare-fun res!42399 () Bool)

(assert (=> b!81589 (= res!42399 call!7618)))

(assert (=> b!81589 (=> (not res!42399) (not e!53239))))

(declare-fun b!81590 () Bool)

(declare-fun res!42396 () Bool)

(assert (=> b!81590 (= res!42396 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3099 lt!38117)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81590 (=> (not res!42396) (not e!53239))))

(declare-fun bm!7614 () Bool)

(assert (=> bm!7614 (= call!7617 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!7615 () Bool)

(assert (=> bm!7615 (= call!7618 (inRange!0 (ite c!12886 (index!3099 lt!38117) (index!3102 lt!38117)) (mask!6299 newMap!16)))))

(declare-fun b!81591 () Bool)

(declare-fun res!42398 () Bool)

(assert (=> b!81591 (=> (not res!42398) (not e!53241))))

(assert (=> b!81591 (= res!42398 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3102 lt!38117)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81592 () Bool)

(assert (=> b!81592 (= e!53240 ((_ is Undefined!241) lt!38117))))

(declare-fun b!81593 () Bool)

(assert (=> b!81593 (= e!53242 e!53240)))

(declare-fun c!12887 () Bool)

(assert (=> b!81593 (= c!12887 ((_ is MissingVacant!241) lt!38117))))

(declare-fun b!81594 () Bool)

(assert (=> b!81594 (= e!53239 (not call!7617))))

(assert (= (and d!20203 c!12886) b!81589))

(assert (= (and d!20203 (not c!12886)) b!81593))

(assert (= (and b!81589 res!42399) b!81590))

(assert (= (and b!81590 res!42396) b!81594))

(assert (= (and b!81593 c!12887) b!81588))

(assert (= (and b!81593 (not c!12887)) b!81592))

(assert (= (and b!81588 res!42397) b!81591))

(assert (= (and b!81591 res!42398) b!81587))

(assert (= (or b!81589 b!81588) bm!7615))

(assert (= (or b!81594 b!81587) bm!7614))

(assert (=> d!20203 m!81811))

(assert (=> d!20203 m!81957))

(declare-fun m!83769 () Bool)

(assert (=> b!81591 m!83769))

(declare-fun m!83771 () Bool)

(assert (=> bm!7615 m!83771))

(declare-fun m!83773 () Bool)

(assert (=> b!81590 m!83773))

(assert (=> bm!7614 m!81811))

(assert (=> bm!7614 m!81985))

(assert (=> d!19925 d!20203))

(assert (=> d!19925 d!19953))

(declare-fun b!81595 () Bool)

(declare-fun e!53244 () Bool)

(declare-fun call!7619 () Bool)

(assert (=> b!81595 (= e!53244 call!7619)))

(declare-fun b!81596 () Bool)

(declare-fun e!53243 () Bool)

(assert (=> b!81596 (= e!53243 call!7619)))

(declare-fun bm!7616 () Bool)

(assert (=> bm!7616 (= call!7619 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun b!81597 () Bool)

(assert (=> b!81597 (= e!53244 e!53243)))

(declare-fun lt!38120 () (_ BitVec 64))

(assert (=> b!81597 (= lt!38120 (select (arr!1901 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!38119 () Unit!2341)

(assert (=> b!81597 (= lt!38119 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3957 newMap!16) lt!38120 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!81597 (arrayContainsKey!0 (_keys!3957 newMap!16) lt!38120 #b00000000000000000000000000000000)))

(declare-fun lt!38118 () Unit!2341)

(assert (=> b!81597 (= lt!38118 lt!38119)))

(declare-fun res!42401 () Bool)

(assert (=> b!81597 (= res!42401 (= (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3957 newMap!16) (mask!6299 newMap!16)) (Found!241 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!81597 (=> (not res!42401) (not e!53243))))

(declare-fun d!20205 () Bool)

(declare-fun res!42400 () Bool)

(declare-fun e!53245 () Bool)

(assert (=> d!20205 (=> res!42400 e!53245)))

(assert (=> d!20205 (= res!42400 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2143 (_keys!3957 newMap!16))))))

(assert (=> d!20205 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3957 newMap!16) (mask!6299 newMap!16)) e!53245)))

(declare-fun b!81598 () Bool)

(assert (=> b!81598 (= e!53245 e!53244)))

(declare-fun c!12888 () Bool)

(assert (=> b!81598 (= c!12888 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!20205 (not res!42400)) b!81598))

(assert (= (and b!81598 c!12888) b!81597))

(assert (= (and b!81598 (not c!12888)) b!81595))

(assert (= (and b!81597 res!42401) b!81596))

(assert (= (or b!81596 b!81595) bm!7616))

(declare-fun m!83775 () Bool)

(assert (=> bm!7616 m!83775))

(assert (=> b!81597 m!83667))

(declare-fun m!83777 () Bool)

(assert (=> b!81597 m!83777))

(declare-fun m!83779 () Bool)

(assert (=> b!81597 m!83779))

(assert (=> b!81597 m!83667))

(declare-fun m!83781 () Bool)

(assert (=> b!81597 m!83781))

(assert (=> b!81598 m!83667))

(assert (=> b!81598 m!83667))

(assert (=> b!81598 m!83671))

(assert (=> bm!7527 d!20205))

(declare-fun d!20207 () Bool)

(assert (=> d!20207 (= (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80732 d!20207))

(declare-fun d!20209 () Bool)

(declare-fun res!42402 () Bool)

(declare-fun e!53246 () Bool)

(assert (=> d!20209 (=> res!42402 e!53246)))

(assert (=> d!20209 (= res!42402 (and ((_ is Cons!1507) (toList!741 lt!37487)) (= (_1!1101 (h!2096 (toList!741 lt!37487))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!20209 (= (containsKey!142 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53246)))

(declare-fun b!81599 () Bool)

(declare-fun e!53247 () Bool)

(assert (=> b!81599 (= e!53246 e!53247)))

(declare-fun res!42403 () Bool)

(assert (=> b!81599 (=> (not res!42403) (not e!53247))))

(assert (=> b!81599 (= res!42403 (and (or (not ((_ is Cons!1507) (toList!741 lt!37487))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37487))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1507) (toList!741 lt!37487)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37487))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!81600 () Bool)

(assert (=> b!81600 (= e!53247 (containsKey!142 (t!5178 (toList!741 lt!37487)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20209 (not res!42402)) b!81599))

(assert (= (and b!81599 res!42403) b!81600))

(assert (=> b!81600 m!81993))

(declare-fun m!83783 () Bool)

(assert (=> b!81600 m!83783))

(assert (=> d!19735 d!20209))

(declare-fun d!20211 () Bool)

(declare-fun c!12889 () Bool)

(assert (=> d!20211 (= c!12889 (and ((_ is Cons!1507) (t!5178 lt!37510)) (= (_1!1101 (h!2096 (t!5178 lt!37510))) (_1!1101 lt!37278))))))

(declare-fun e!53248 () Option!144)

(assert (=> d!20211 (= (getValueByKey!138 (t!5178 lt!37510) (_1!1101 lt!37278)) e!53248)))

(declare-fun b!81602 () Bool)

(declare-fun e!53249 () Option!144)

(assert (=> b!81602 (= e!53248 e!53249)))

(declare-fun c!12890 () Bool)

(assert (=> b!81602 (= c!12890 (and ((_ is Cons!1507) (t!5178 lt!37510)) (not (= (_1!1101 (h!2096 (t!5178 lt!37510))) (_1!1101 lt!37278)))))))

(declare-fun b!81603 () Bool)

(assert (=> b!81603 (= e!53249 (getValueByKey!138 (t!5178 (t!5178 lt!37510)) (_1!1101 lt!37278)))))

(declare-fun b!81604 () Bool)

(assert (=> b!81604 (= e!53249 None!142)))

(declare-fun b!81601 () Bool)

(assert (=> b!81601 (= e!53248 (Some!143 (_2!1101 (h!2096 (t!5178 lt!37510)))))))

(assert (= (and d!20211 c!12889) b!81601))

(assert (= (and d!20211 (not c!12889)) b!81602))

(assert (= (and b!81602 c!12890) b!81603))

(assert (= (and b!81602 (not c!12890)) b!81604))

(declare-fun m!83785 () Bool)

(assert (=> b!81603 m!83785))

(assert (=> b!81069 d!20211))

(declare-fun d!20213 () Bool)

(assert (=> d!20213 (= (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37485)) (v!2612 (getValueByKey!138 (toList!741 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37485)))))

(assert (=> d!19861 d!20213))

(declare-fun c!12891 () Bool)

(declare-fun d!20215 () Bool)

(assert (=> d!20215 (= c!12891 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))) lt!37485)))))

(declare-fun e!53250 () Option!144)

(assert (=> d!20215 (= (getValueByKey!138 (toList!741 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37485) e!53250)))

(declare-fun b!81606 () Bool)

(declare-fun e!53251 () Option!144)

(assert (=> b!81606 (= e!53250 e!53251)))

(declare-fun c!12892 () Bool)

(assert (=> b!81606 (= c!12892 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (not (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))) lt!37485))))))

(declare-fun b!81607 () Bool)

(assert (=> b!81607 (= e!53251 (getValueByKey!138 (t!5178 (toList!741 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) lt!37485))))

(declare-fun b!81608 () Bool)

(assert (=> b!81608 (= e!53251 None!142)))

(declare-fun b!81605 () Bool)

(assert (=> b!81605 (= e!53250 (Some!143 (_2!1101 (h!2096 (toList!741 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))))

(assert (= (and d!20215 c!12891) b!81605))

(assert (= (and d!20215 (not c!12891)) b!81606))

(assert (= (and b!81606 c!12892) b!81607))

(assert (= (and b!81606 (not c!12892)) b!81608))

(declare-fun m!83787 () Bool)

(assert (=> b!81607 m!83787))

(assert (=> d!19861 d!20215))

(declare-fun d!20217 () Bool)

(assert (=> d!20217 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))) lt!37535))))

(declare-fun lt!38121 () Unit!2341)

(assert (=> d!20217 (= lt!38121 (choose!477 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))) lt!37535))))

(declare-fun e!53252 () Bool)

(assert (=> d!20217 e!53252))

(declare-fun res!42404 () Bool)

(assert (=> d!20217 (=> (not res!42404) (not e!53252))))

(assert (=> d!20217 (= res!42404 (isStrictlySorted!296 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)))))))

(assert (=> d!20217 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))) lt!37535) lt!38121)))

(declare-fun b!81609 () Bool)

(assert (=> b!81609 (= e!53252 (containsKey!142 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))) lt!37535))))

(assert (= (and d!20217 res!42404) b!81609))

(assert (=> d!20217 m!82679))

(assert (=> d!20217 m!82679))

(assert (=> d!20217 m!82681))

(declare-fun m!83789 () Bool)

(assert (=> d!20217 m!83789))

(declare-fun m!83791 () Bool)

(assert (=> d!20217 m!83791))

(assert (=> b!81609 m!82675))

(assert (=> b!80957 d!20217))

(declare-fun d!20219 () Bool)

(assert (=> d!20219 (= (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))) lt!37535)) (not (isEmpty!331 (getValueByKey!138 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))) lt!37535))))))

(declare-fun bs!3451 () Bool)

(assert (= bs!3451 d!20219))

(assert (=> bs!3451 m!82679))

(declare-fun m!83793 () Bool)

(assert (=> bs!3451 m!83793))

(assert (=> b!80957 d!20219))

(declare-fun d!20221 () Bool)

(declare-fun c!12893 () Bool)

(assert (=> d!20221 (= c!12893 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)))) (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))))) lt!37535)))))

(declare-fun e!53253 () Option!144)

(assert (=> d!20221 (= (getValueByKey!138 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))) lt!37535) e!53253)))

(declare-fun b!81611 () Bool)

(declare-fun e!53254 () Option!144)

(assert (=> b!81611 (= e!53253 e!53254)))

(declare-fun c!12894 () Bool)

(assert (=> b!81611 (= c!12894 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)))) (not (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539))))) lt!37535))))))

(declare-fun b!81612 () Bool)

(assert (=> b!81612 (= e!53254 (getValueByKey!138 (t!5178 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)))) lt!37535))))

(declare-fun b!81613 () Bool)

(assert (=> b!81613 (= e!53254 None!142)))

(declare-fun b!81610 () Bool)

(assert (=> b!81610 (= e!53253 (Some!143 (_2!1101 (h!2096 (toList!741 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)))))))))

(assert (= (and d!20221 c!12893) b!81610))

(assert (= (and d!20221 (not c!12893)) b!81611))

(assert (= (and b!81611 c!12894) b!81612))

(assert (= (and b!81611 (not c!12894)) b!81613))

(declare-fun m!83795 () Bool)

(assert (=> b!81612 m!83795))

(assert (=> b!80957 d!20221))

(declare-fun d!20223 () Bool)

(declare-fun e!53255 () Bool)

(assert (=> d!20223 e!53255))

(declare-fun res!42405 () Bool)

(assert (=> d!20223 (=> res!42405 e!53255)))

(declare-fun lt!38123 () Bool)

(assert (=> d!20223 (= res!42405 (not lt!38123))))

(declare-fun lt!38122 () Bool)

(assert (=> d!20223 (= lt!38123 lt!38122)))

(declare-fun lt!38125 () Unit!2341)

(declare-fun e!53256 () Unit!2341)

(assert (=> d!20223 (= lt!38125 e!53256)))

(declare-fun c!12895 () Bool)

(assert (=> d!20223 (= c!12895 lt!38122)))

(assert (=> d!20223 (= lt!38122 (containsKey!142 (toList!741 lt!37831) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!20223 (= (contains!745 lt!37831 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38123)))

(declare-fun b!81614 () Bool)

(declare-fun lt!38124 () Unit!2341)

(assert (=> b!81614 (= e!53256 lt!38124)))

(assert (=> b!81614 (= lt!38124 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37831) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> b!81614 (isDefined!91 (getValueByKey!138 (toList!741 lt!37831) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81615 () Bool)

(declare-fun Unit!2385 () Unit!2341)

(assert (=> b!81615 (= e!53256 Unit!2385)))

(declare-fun b!81616 () Bool)

(assert (=> b!81616 (= e!53255 (isDefined!91 (getValueByKey!138 (toList!741 lt!37831) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20223 c!12895) b!81614))

(assert (= (and d!20223 (not c!12895)) b!81615))

(assert (= (and d!20223 (not res!42405)) b!81616))

(declare-fun m!83797 () Bool)

(assert (=> d!20223 m!83797))

(declare-fun m!83799 () Bool)

(assert (=> b!81614 m!83799))

(assert (=> b!81614 m!82759))

(assert (=> b!81614 m!82759))

(declare-fun m!83801 () Bool)

(assert (=> b!81614 m!83801))

(assert (=> b!81616 m!82759))

(assert (=> b!81616 m!82759))

(assert (=> b!81616 m!83801))

(assert (=> d!19807 d!20223))

(declare-fun d!20225 () Bool)

(declare-fun c!12896 () Bool)

(assert (=> d!20225 (= c!12896 (and ((_ is Cons!1507) lt!37833) (= (_1!1101 (h!2096 lt!37833)) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53257 () Option!144)

(assert (=> d!20225 (= (getValueByKey!138 lt!37833 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53257)))

(declare-fun b!81618 () Bool)

(declare-fun e!53258 () Option!144)

(assert (=> b!81618 (= e!53257 e!53258)))

(declare-fun c!12897 () Bool)

(assert (=> b!81618 (= c!12897 (and ((_ is Cons!1507) lt!37833) (not (= (_1!1101 (h!2096 lt!37833)) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!81619 () Bool)

(assert (=> b!81619 (= e!53258 (getValueByKey!138 (t!5178 lt!37833) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81620 () Bool)

(assert (=> b!81620 (= e!53258 None!142)))

(declare-fun b!81617 () Bool)

(assert (=> b!81617 (= e!53257 (Some!143 (_2!1101 (h!2096 lt!37833))))))

(assert (= (and d!20225 c!12896) b!81617))

(assert (= (and d!20225 (not c!12896)) b!81618))

(assert (= (and b!81618 c!12897) b!81619))

(assert (= (and b!81618 (not c!12897)) b!81620))

(declare-fun m!83803 () Bool)

(assert (=> b!81619 m!83803))

(assert (=> d!19807 d!20225))

(declare-fun d!20227 () Bool)

(assert (=> d!20227 (= (getValueByKey!138 lt!37833 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!38126 () Unit!2341)

(assert (=> d!20227 (= lt!38126 (choose!470 lt!37833 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun e!53259 () Bool)

(assert (=> d!20227 e!53259))

(declare-fun res!42406 () Bool)

(assert (=> d!20227 (=> (not res!42406) (not e!53259))))

(assert (=> d!20227 (= res!42406 (isStrictlySorted!296 lt!37833))))

(assert (=> d!20227 (= (lemmaContainsTupThenGetReturnValue!55 lt!37833 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38126)))

(declare-fun b!81621 () Bool)

(declare-fun res!42407 () Bool)

(assert (=> b!81621 (=> (not res!42407) (not e!53259))))

(assert (=> b!81621 (= res!42407 (containsKey!142 lt!37833 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81622 () Bool)

(assert (=> b!81622 (= e!53259 (contains!746 lt!37833 (tuple2!2181 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20227 res!42406) b!81621))

(assert (= (and b!81621 res!42407) b!81622))

(assert (=> d!20227 m!82753))

(declare-fun m!83805 () Bool)

(assert (=> d!20227 m!83805))

(declare-fun m!83807 () Bool)

(assert (=> d!20227 m!83807))

(declare-fun m!83809 () Bool)

(assert (=> b!81621 m!83809))

(declare-fun m!83811 () Bool)

(assert (=> b!81622 m!83811))

(assert (=> d!19807 d!20227))

(declare-fun b!81623 () Bool)

(declare-fun c!12898 () Bool)

(assert (=> b!81623 (= c!12898 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (bvsgt (_1!1101 (h!2096 (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53260 () List!1511)

(declare-fun e!53261 () List!1511)

(assert (=> b!81623 (= e!53260 e!53261)))

(declare-fun b!81624 () Bool)

(declare-fun call!7620 () List!1511)

(assert (=> b!81624 (= e!53261 call!7620)))

(declare-fun e!53262 () List!1511)

(declare-fun c!12900 () Bool)

(declare-fun b!81625 () Bool)

(assert (=> b!81625 (= e!53262 (ite c!12900 (t!5178 (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (ite c!12898 (Cons!1507 (h!2096 (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (t!5178 (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))) Nil!1508)))))

(declare-fun d!20229 () Bool)

(declare-fun e!53264 () Bool)

(assert (=> d!20229 e!53264))

(declare-fun res!42409 () Bool)

(assert (=> d!20229 (=> (not res!42409) (not e!53264))))

(declare-fun lt!38127 () List!1511)

(assert (=> d!20229 (= res!42409 (isStrictlySorted!296 lt!38127))))

(declare-fun e!53263 () List!1511)

(assert (=> d!20229 (= lt!38127 e!53263)))

(declare-fun c!12899 () Bool)

(assert (=> d!20229 (= c!12899 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (bvslt (_1!1101 (h!2096 (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!20229 (isStrictlySorted!296 (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20229 (= (insertStrictlySorted!58 (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38127)))

(declare-fun b!81626 () Bool)

(declare-fun call!7622 () List!1511)

(assert (=> b!81626 (= e!53263 call!7622)))

(declare-fun bm!7617 () Bool)

(declare-fun call!7621 () List!1511)

(assert (=> bm!7617 (= call!7621 call!7622)))

(declare-fun bm!7618 () Bool)

(assert (=> bm!7618 (= call!7620 call!7621)))

(declare-fun b!81627 () Bool)

(assert (=> b!81627 (= e!53264 (contains!746 lt!38127 (tuple2!2181 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81628 () Bool)

(assert (=> b!81628 (= e!53263 e!53260)))

(assert (=> b!81628 (= c!12900 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81629 () Bool)

(assert (=> b!81629 (= e!53261 call!7620)))

(declare-fun b!81630 () Bool)

(declare-fun res!42408 () Bool)

(assert (=> b!81630 (=> (not res!42408) (not e!53264))))

(assert (=> b!81630 (= res!42408 (containsKey!142 lt!38127 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun bm!7619 () Bool)

(assert (=> bm!7619 (= call!7622 ($colon$colon!70 e!53262 (ite c!12899 (h!2096 (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (tuple2!2181 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun c!12901 () Bool)

(assert (=> bm!7619 (= c!12901 c!12899)))

(declare-fun b!81631 () Bool)

(assert (=> b!81631 (= e!53262 (insertStrictlySorted!58 (t!5178 (toList!741 (+!106 lt!37276 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81632 () Bool)

(assert (=> b!81632 (= e!53260 call!7621)))

(assert (= (and d!20229 c!12899) b!81626))

(assert (= (and d!20229 (not c!12899)) b!81628))

(assert (= (and b!81628 c!12900) b!81632))

(assert (= (and b!81628 (not c!12900)) b!81623))

(assert (= (and b!81623 c!12898) b!81629))

(assert (= (and b!81623 (not c!12898)) b!81624))

(assert (= (or b!81629 b!81624) bm!7618))

(assert (= (or b!81632 bm!7618) bm!7617))

(assert (= (or b!81626 bm!7617) bm!7619))

(assert (= (and bm!7619 c!12901) b!81631))

(assert (= (and bm!7619 (not c!12901)) b!81625))

(assert (= (and d!20229 res!42409) b!81630))

(assert (= (and b!81630 res!42408) b!81627))

(declare-fun m!83813 () Bool)

(assert (=> b!81627 m!83813))

(declare-fun m!83815 () Bool)

(assert (=> b!81630 m!83815))

(declare-fun m!83817 () Bool)

(assert (=> d!20229 m!83817))

(declare-fun m!83819 () Bool)

(assert (=> d!20229 m!83819))

(declare-fun m!83821 () Bool)

(assert (=> b!81631 m!83821))

(declare-fun m!83823 () Bool)

(assert (=> bm!7619 m!83823))

(assert (=> d!19807 d!20229))

(declare-fun d!20231 () Bool)

(assert (=> d!20231 (= (map!1178 (_2!1100 lt!37753)) (getCurrentListMap!435 (_keys!3957 (_2!1100 lt!37753)) (_values!2276 (_2!1100 lt!37753)) (mask!6299 (_2!1100 lt!37753)) (extraKeys!2140 (_2!1100 lt!37753)) (zeroValue!2189 (_2!1100 lt!37753)) (minValue!2189 (_2!1100 lt!37753)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1100 lt!37753))))))

(declare-fun bs!3452 () Bool)

(assert (= bs!3452 d!20231))

(declare-fun m!83825 () Bool)

(assert (=> bs!3452 m!83825))

(assert (=> b!80918 d!20231))

(declare-fun d!20233 () Bool)

(declare-fun e!53265 () Bool)

(assert (=> d!20233 e!53265))

(declare-fun res!42411 () Bool)

(assert (=> d!20233 (=> (not res!42411) (not e!53265))))

(declare-fun lt!38129 () ListLongMap!1451)

(assert (=> d!20233 (= res!42411 (contains!745 lt!38129 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun lt!38131 () List!1511)

(assert (=> d!20233 (= lt!38129 (ListLongMap!1452 lt!38131))))

(declare-fun lt!38130 () Unit!2341)

(declare-fun lt!38128 () Unit!2341)

(assert (=> d!20233 (= lt!38130 lt!38128)))

(assert (=> d!20233 (= (getValueByKey!138 lt!38131 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20233 (= lt!38128 (lemmaContainsTupThenGetReturnValue!55 lt!38131 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20233 (= lt!38131 (insertStrictlySorted!58 (toList!741 (map!1178 newMap!16)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20233 (= (+!106 (map!1178 newMap!16) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) lt!38129)))

(declare-fun b!81633 () Bool)

(declare-fun res!42410 () Bool)

(assert (=> b!81633 (=> (not res!42410) (not e!53265))))

(assert (=> b!81633 (= res!42410 (= (getValueByKey!138 (toList!741 lt!38129) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!81634 () Bool)

(assert (=> b!81634 (= e!53265 (contains!746 (toList!741 lt!38129) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (= (and d!20233 res!42411) b!81633))

(assert (= (and b!81633 res!42410) b!81634))

(declare-fun m!83827 () Bool)

(assert (=> d!20233 m!83827))

(declare-fun m!83829 () Bool)

(assert (=> d!20233 m!83829))

(declare-fun m!83831 () Bool)

(assert (=> d!20233 m!83831))

(declare-fun m!83833 () Bool)

(assert (=> d!20233 m!83833))

(declare-fun m!83835 () Bool)

(assert (=> b!81633 m!83835))

(declare-fun m!83837 () Bool)

(assert (=> b!81634 m!83837))

(assert (=> b!80918 d!20233))

(assert (=> b!80918 d!19651))

(declare-fun d!20235 () Bool)

(declare-fun e!53266 () Bool)

(assert (=> d!20235 e!53266))

(declare-fun res!42412 () Bool)

(assert (=> d!20235 (=> res!42412 e!53266)))

(declare-fun lt!38133 () Bool)

(assert (=> d!20235 (= res!42412 (not lt!38133))))

(declare-fun lt!38132 () Bool)

(assert (=> d!20235 (= lt!38133 lt!38132)))

(declare-fun lt!38135 () Unit!2341)

(declare-fun e!53267 () Unit!2341)

(assert (=> d!20235 (= lt!38135 e!53267)))

(declare-fun c!12902 () Bool)

(assert (=> d!20235 (= c!12902 lt!38132)))

(assert (=> d!20235 (= lt!38132 (containsKey!142 (toList!741 lt!37895) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!20235 (= (contains!745 lt!37895 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38133)))

(declare-fun b!81635 () Bool)

(declare-fun lt!38134 () Unit!2341)

(assert (=> b!81635 (= e!53267 lt!38134)))

(assert (=> b!81635 (= lt!38134 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37895) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> b!81635 (isDefined!91 (getValueByKey!138 (toList!741 lt!37895) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81636 () Bool)

(declare-fun Unit!2386 () Unit!2341)

(assert (=> b!81636 (= e!53267 Unit!2386)))

(declare-fun b!81637 () Bool)

(assert (=> b!81637 (= e!53266 (isDefined!91 (getValueByKey!138 (toList!741 lt!37895) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20235 c!12902) b!81635))

(assert (= (and d!20235 (not c!12902)) b!81636))

(assert (= (and d!20235 (not res!42412)) b!81637))

(declare-fun m!83839 () Bool)

(assert (=> d!20235 m!83839))

(declare-fun m!83841 () Bool)

(assert (=> b!81635 m!83841))

(assert (=> b!81635 m!82967))

(assert (=> b!81635 m!82967))

(declare-fun m!83843 () Bool)

(assert (=> b!81635 m!83843))

(assert (=> b!81637 m!82967))

(assert (=> b!81637 m!82967))

(assert (=> b!81637 m!83843))

(assert (=> d!19875 d!20235))

(declare-fun d!20237 () Bool)

(declare-fun c!12903 () Bool)

(assert (=> d!20237 (= c!12903 (and ((_ is Cons!1507) lt!37897) (= (_1!1101 (h!2096 lt!37897)) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53268 () Option!144)

(assert (=> d!20237 (= (getValueByKey!138 lt!37897 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53268)))

(declare-fun b!81639 () Bool)

(declare-fun e!53269 () Option!144)

(assert (=> b!81639 (= e!53268 e!53269)))

(declare-fun c!12904 () Bool)

(assert (=> b!81639 (= c!12904 (and ((_ is Cons!1507) lt!37897) (not (= (_1!1101 (h!2096 lt!37897)) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!81640 () Bool)

(assert (=> b!81640 (= e!53269 (getValueByKey!138 (t!5178 lt!37897) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81641 () Bool)

(assert (=> b!81641 (= e!53269 None!142)))

(declare-fun b!81638 () Bool)

(assert (=> b!81638 (= e!53268 (Some!143 (_2!1101 (h!2096 lt!37897))))))

(assert (= (and d!20237 c!12903) b!81638))

(assert (= (and d!20237 (not c!12903)) b!81639))

(assert (= (and b!81639 c!12904) b!81640))

(assert (= (and b!81639 (not c!12904)) b!81641))

(declare-fun m!83845 () Bool)

(assert (=> b!81640 m!83845))

(assert (=> d!19875 d!20237))

(declare-fun d!20239 () Bool)

(assert (=> d!20239 (= (getValueByKey!138 lt!37897 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!38136 () Unit!2341)

(assert (=> d!20239 (= lt!38136 (choose!470 lt!37897 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun e!53270 () Bool)

(assert (=> d!20239 e!53270))

(declare-fun res!42413 () Bool)

(assert (=> d!20239 (=> (not res!42413) (not e!53270))))

(assert (=> d!20239 (= res!42413 (isStrictlySorted!296 lt!37897))))

(assert (=> d!20239 (= (lemmaContainsTupThenGetReturnValue!55 lt!37897 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38136)))

(declare-fun b!81642 () Bool)

(declare-fun res!42414 () Bool)

(assert (=> b!81642 (=> (not res!42414) (not e!53270))))

(assert (=> b!81642 (= res!42414 (containsKey!142 lt!37897 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81643 () Bool)

(assert (=> b!81643 (= e!53270 (contains!746 lt!37897 (tuple2!2181 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20239 res!42413) b!81642))

(assert (= (and b!81642 res!42414) b!81643))

(assert (=> d!20239 m!82961))

(declare-fun m!83847 () Bool)

(assert (=> d!20239 m!83847))

(declare-fun m!83849 () Bool)

(assert (=> d!20239 m!83849))

(declare-fun m!83851 () Bool)

(assert (=> b!81642 m!83851))

(declare-fun m!83853 () Bool)

(assert (=> b!81643 m!83853))

(assert (=> d!19875 d!20239))

(declare-fun b!81644 () Bool)

(declare-fun c!12905 () Bool)

(assert (=> b!81644 (= c!12905 (and ((_ is Cons!1507) (toList!741 lt!37486)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37486))) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53271 () List!1511)

(declare-fun e!53272 () List!1511)

(assert (=> b!81644 (= e!53271 e!53272)))

(declare-fun b!81645 () Bool)

(declare-fun call!7623 () List!1511)

(assert (=> b!81645 (= e!53272 call!7623)))

(declare-fun c!12907 () Bool)

(declare-fun b!81646 () Bool)

(declare-fun e!53273 () List!1511)

(assert (=> b!81646 (= e!53273 (ite c!12907 (t!5178 (toList!741 lt!37486)) (ite c!12905 (Cons!1507 (h!2096 (toList!741 lt!37486)) (t!5178 (toList!741 lt!37486))) Nil!1508)))))

(declare-fun d!20241 () Bool)

(declare-fun e!53275 () Bool)

(assert (=> d!20241 e!53275))

(declare-fun res!42416 () Bool)

(assert (=> d!20241 (=> (not res!42416) (not e!53275))))

(declare-fun lt!38137 () List!1511)

(assert (=> d!20241 (= res!42416 (isStrictlySorted!296 lt!38137))))

(declare-fun e!53274 () List!1511)

(assert (=> d!20241 (= lt!38137 e!53274)))

(declare-fun c!12906 () Bool)

(assert (=> d!20241 (= c!12906 (and ((_ is Cons!1507) (toList!741 lt!37486)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37486))) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!20241 (isStrictlySorted!296 (toList!741 lt!37486))))

(assert (=> d!20241 (= (insertStrictlySorted!58 (toList!741 lt!37486) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38137)))

(declare-fun b!81647 () Bool)

(declare-fun call!7625 () List!1511)

(assert (=> b!81647 (= e!53274 call!7625)))

(declare-fun bm!7620 () Bool)

(declare-fun call!7624 () List!1511)

(assert (=> bm!7620 (= call!7624 call!7625)))

(declare-fun bm!7621 () Bool)

(assert (=> bm!7621 (= call!7623 call!7624)))

(declare-fun b!81648 () Bool)

(assert (=> b!81648 (= e!53275 (contains!746 lt!38137 (tuple2!2181 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81649 () Bool)

(assert (=> b!81649 (= e!53274 e!53271)))

(assert (=> b!81649 (= c!12907 (and ((_ is Cons!1507) (toList!741 lt!37486)) (= (_1!1101 (h!2096 (toList!741 lt!37486))) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81650 () Bool)

(assert (=> b!81650 (= e!53272 call!7623)))

(declare-fun b!81651 () Bool)

(declare-fun res!42415 () Bool)

(assert (=> b!81651 (=> (not res!42415) (not e!53275))))

(assert (=> b!81651 (= res!42415 (containsKey!142 lt!38137 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun bm!7622 () Bool)

(assert (=> bm!7622 (= call!7625 ($colon$colon!70 e!53273 (ite c!12906 (h!2096 (toList!741 lt!37486)) (tuple2!2181 (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun c!12908 () Bool)

(assert (=> bm!7622 (= c!12908 c!12906)))

(declare-fun b!81652 () Bool)

(assert (=> b!81652 (= e!53273 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37486)) (_1!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81653 () Bool)

(assert (=> b!81653 (= e!53271 call!7624)))

(assert (= (and d!20241 c!12906) b!81647))

(assert (= (and d!20241 (not c!12906)) b!81649))

(assert (= (and b!81649 c!12907) b!81653))

(assert (= (and b!81649 (not c!12907)) b!81644))

(assert (= (and b!81644 c!12905) b!81650))

(assert (= (and b!81644 (not c!12905)) b!81645))

(assert (= (or b!81650 b!81645) bm!7621))

(assert (= (or b!81653 bm!7621) bm!7620))

(assert (= (or b!81647 bm!7620) bm!7622))

(assert (= (and bm!7622 c!12908) b!81652))

(assert (= (and bm!7622 (not c!12908)) b!81646))

(assert (= (and d!20241 res!42416) b!81651))

(assert (= (and b!81651 res!42415) b!81648))

(declare-fun m!83855 () Bool)

(assert (=> b!81648 m!83855))

(declare-fun m!83857 () Bool)

(assert (=> b!81651 m!83857))

(declare-fun m!83859 () Bool)

(assert (=> d!20241 m!83859))

(declare-fun m!83861 () Bool)

(assert (=> d!20241 m!83861))

(declare-fun m!83863 () Bool)

(assert (=> b!81652 m!83863))

(declare-fun m!83865 () Bool)

(assert (=> bm!7622 m!83865))

(assert (=> d!19875 d!20241))

(declare-fun d!20243 () Bool)

(declare-fun res!42417 () Bool)

(declare-fun e!53276 () Bool)

(assert (=> d!20243 (=> res!42417 e!53276)))

(assert (=> d!20243 (= res!42417 (= (select (arr!1901 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!20243 (= (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!53276)))

(declare-fun b!81654 () Bool)

(declare-fun e!53277 () Bool)

(assert (=> b!81654 (= e!53276 e!53277)))

(declare-fun res!42418 () Bool)

(assert (=> b!81654 (=> (not res!42418) (not e!53277))))

(assert (=> b!81654 (= res!42418 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81655 () Bool)

(assert (=> b!81655 (= e!53277 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!20243 (not res!42417)) b!81654))

(assert (= (and b!81654 res!42418) b!81655))

(assert (=> d!20243 m!83667))

(assert (=> b!81655 m!81811))

(declare-fun m!83867 () Bool)

(assert (=> b!81655 m!83867))

(assert (=> b!80729 d!20243))

(declare-fun d!20245 () Bool)

(assert (=> d!20245 (isDefined!91 (getValueByKey!138 (toList!741 lt!37557) (_1!1101 lt!37268)))))

(declare-fun lt!38138 () Unit!2341)

(assert (=> d!20245 (= lt!38138 (choose!477 (toList!741 lt!37557) (_1!1101 lt!37268)))))

(declare-fun e!53278 () Bool)

(assert (=> d!20245 e!53278))

(declare-fun res!42419 () Bool)

(assert (=> d!20245 (=> (not res!42419) (not e!53278))))

(assert (=> d!20245 (= res!42419 (isStrictlySorted!296 (toList!741 lt!37557)))))

(assert (=> d!20245 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37557) (_1!1101 lt!37268)) lt!38138)))

(declare-fun b!81656 () Bool)

(assert (=> b!81656 (= e!53278 (containsKey!142 (toList!741 lt!37557) (_1!1101 lt!37268)))))

(assert (= (and d!20245 res!42419) b!81656))

(assert (=> d!20245 m!82167))

(assert (=> d!20245 m!82167))

(assert (=> d!20245 m!83115))

(declare-fun m!83869 () Bool)

(assert (=> d!20245 m!83869))

(declare-fun m!83871 () Bool)

(assert (=> d!20245 m!83871))

(assert (=> b!81656 m!83111))

(assert (=> b!81163 d!20245))

(declare-fun d!20247 () Bool)

(assert (=> d!20247 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37557) (_1!1101 lt!37268))) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37557) (_1!1101 lt!37268)))))))

(declare-fun bs!3453 () Bool)

(assert (= bs!3453 d!20247))

(assert (=> bs!3453 m!82167))

(declare-fun m!83873 () Bool)

(assert (=> bs!3453 m!83873))

(assert (=> b!81163 d!20247))

(assert (=> b!81163 d!19717))

(declare-fun d!20249 () Bool)

(assert (=> d!20249 (= (apply!80 lt!37597 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1182 (getValueByKey!138 (toList!741 lt!37597) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3454 () Bool)

(assert (= bs!3454 d!20249))

(assert (=> bs!3454 m!82265))

(assert (=> bs!3454 m!83437))

(assert (=> bs!3454 m!83437))

(declare-fun m!83875 () Bool)

(assert (=> bs!3454 m!83875))

(assert (=> b!80706 d!20249))

(declare-fun c!12909 () Bool)

(declare-fun d!20251 () Bool)

(assert (=> d!20251 (= c!12909 ((_ is ValueCellFull!915) (select (arr!1902 (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432)) #b00000000000000000000000000000000)))))

(declare-fun e!53279 () V!3003)

(assert (=> d!20251 (= (get!1179 (select (arr!1902 (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53279)))

(declare-fun b!81657 () Bool)

(assert (=> b!81657 (= e!53279 (get!1180 (select (arr!1902 (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81658 () Bool)

(assert (=> b!81658 (= e!53279 (get!1181 (select (arr!1902 (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20251 c!12909) b!81657))

(assert (= (and d!20251 (not c!12909)) b!81658))

(assert (=> b!81657 m!82267))

(assert (=> b!81657 m!82271))

(declare-fun m!83877 () Bool)

(assert (=> b!81657 m!83877))

(assert (=> b!81658 m!82267))

(assert (=> b!81658 m!82271))

(declare-fun m!83879 () Bool)

(assert (=> b!81658 m!83879))

(assert (=> b!80706 d!20251))

(declare-fun b!81659 () Bool)

(declare-fun res!42423 () Bool)

(declare-fun e!53280 () Bool)

(assert (=> b!81659 (=> (not res!42423) (not e!53280))))

(assert (=> b!81659 (= res!42423 (and (= (size!2144 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000001)) (= (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (size!2144 (_values!2276 (v!2608 (underlying!281 thiss!992))))) (bvsge (_size!418 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!418 (v!2608 (underlying!281 thiss!992))) (bvadd (mask!6299 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun d!20253 () Bool)

(declare-fun res!42420 () Bool)

(assert (=> d!20253 (=> (not res!42420) (not e!53280))))

(assert (=> d!20253 (= res!42420 (validMask!0 (mask!6299 (v!2608 (underlying!281 thiss!992)))))))

(assert (=> d!20253 (= (simpleValid!56 (v!2608 (underlying!281 thiss!992))) e!53280)))

(declare-fun b!81662 () Bool)

(assert (=> b!81662 (= e!53280 (and (bvsge (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!418 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!81660 () Bool)

(declare-fun res!42422 () Bool)

(assert (=> b!81660 (=> (not res!42422) (not e!53280))))

(assert (=> b!81660 (= res!42422 (bvsge (size!2147 (v!2608 (underlying!281 thiss!992))) (_size!418 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun b!81661 () Bool)

(declare-fun res!42421 () Bool)

(assert (=> b!81661 (=> (not res!42421) (not e!53280))))

(assert (=> b!81661 (= res!42421 (= (size!2147 (v!2608 (underlying!281 thiss!992))) (bvadd (_size!418 (v!2608 (underlying!281 thiss!992))) (bvsdiv (bvadd (extraKeys!2140 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!20253 res!42420) b!81659))

(assert (= (and b!81659 res!42423) b!81660))

(assert (= (and b!81660 res!42422) b!81661))

(assert (= (and b!81661 res!42421) b!81662))

(assert (=> d!20253 m!81831))

(declare-fun m!83881 () Bool)

(assert (=> b!81660 m!83881))

(assert (=> b!81661 m!83881))

(assert (=> d!19733 d!20253))

(declare-fun d!20255 () Bool)

(declare-fun lt!38139 () Bool)

(assert (=> d!20255 (= lt!38139 (select (content!85 (toList!741 lt!37838)) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun e!53282 () Bool)

(assert (=> d!20255 (= lt!38139 e!53282)))

(declare-fun res!42424 () Bool)

(assert (=> d!20255 (=> (not res!42424) (not e!53282))))

(assert (=> d!20255 (= res!42424 ((_ is Cons!1507) (toList!741 lt!37838)))))

(assert (=> d!20255 (= (contains!746 (toList!741 lt!37838) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!38139)))

(declare-fun b!81663 () Bool)

(declare-fun e!53281 () Bool)

(assert (=> b!81663 (= e!53282 e!53281)))

(declare-fun res!42425 () Bool)

(assert (=> b!81663 (=> res!42425 e!53281)))

(assert (=> b!81663 (= res!42425 (= (h!2096 (toList!741 lt!37838)) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!81664 () Bool)

(assert (=> b!81664 (= e!53281 (contains!746 (t!5178 (toList!741 lt!37838)) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!20255 res!42424) b!81663))

(assert (= (and b!81663 (not res!42425)) b!81664))

(declare-fun m!83883 () Bool)

(assert (=> d!20255 m!83883))

(declare-fun m!83885 () Bool)

(assert (=> d!20255 m!83885))

(declare-fun m!83887 () Bool)

(assert (=> b!81664 m!83887))

(assert (=> b!81002 d!20255))

(declare-fun d!20257 () Bool)

(declare-fun lt!38140 () Bool)

(assert (=> d!20257 (= lt!38140 (select (content!85 lt!37555) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(declare-fun e!53284 () Bool)

(assert (=> d!20257 (= lt!38140 e!53284)))

(declare-fun res!42426 () Bool)

(assert (=> d!20257 (=> (not res!42426) (not e!53284))))

(assert (=> d!20257 (= res!42426 ((_ is Cons!1507) lt!37555))))

(assert (=> d!20257 (= (contains!746 lt!37555 (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))) lt!38140)))

(declare-fun b!81665 () Bool)

(declare-fun e!53283 () Bool)

(assert (=> b!81665 (= e!53284 e!53283)))

(declare-fun res!42427 () Bool)

(assert (=> b!81665 (=> res!42427 e!53283)))

(assert (=> b!81665 (= res!42427 (= (h!2096 lt!37555) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(declare-fun b!81666 () Bool)

(assert (=> b!81666 (= e!53283 (contains!746 (t!5178 lt!37555) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(assert (= (and d!20257 res!42426) b!81665))

(assert (= (and b!81665 (not res!42427)) b!81666))

(declare-fun m!83889 () Bool)

(assert (=> d!20257 m!83889))

(declare-fun m!83891 () Bool)

(assert (=> d!20257 m!83891))

(declare-fun m!83893 () Bool)

(assert (=> b!81666 m!83893))

(assert (=> b!81116 d!20257))

(declare-fun d!20259 () Bool)

(declare-fun e!53285 () Bool)

(assert (=> d!20259 e!53285))

(declare-fun res!42428 () Bool)

(assert (=> d!20259 (=> res!42428 e!53285)))

(declare-fun lt!38142 () Bool)

(assert (=> d!20259 (= res!42428 (not lt!38142))))

(declare-fun lt!38141 () Bool)

(assert (=> d!20259 (= lt!38142 lt!38141)))

(declare-fun lt!38144 () Unit!2341)

(declare-fun e!53286 () Unit!2341)

(assert (=> d!20259 (= lt!38144 e!53286)))

(declare-fun c!12910 () Bool)

(assert (=> d!20259 (= c!12910 lt!38141)))

(assert (=> d!20259 (= lt!38141 (containsKey!142 (toList!741 lt!37819) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20259 (= (contains!745 lt!37819 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38142)))

(declare-fun b!81667 () Bool)

(declare-fun lt!38143 () Unit!2341)

(assert (=> b!81667 (= e!53286 lt!38143)))

(assert (=> b!81667 (= lt!38143 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37819) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> b!81667 (isDefined!91 (getValueByKey!138 (toList!741 lt!37819) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81668 () Bool)

(declare-fun Unit!2387 () Unit!2341)

(assert (=> b!81668 (= e!53286 Unit!2387)))

(declare-fun b!81669 () Bool)

(assert (=> b!81669 (= e!53285 (isDefined!91 (getValueByKey!138 (toList!741 lt!37819) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (= (and d!20259 c!12910) b!81667))

(assert (= (and d!20259 (not c!12910)) b!81668))

(assert (= (and d!20259 (not res!42428)) b!81669))

(declare-fun m!83895 () Bool)

(assert (=> d!20259 m!83895))

(declare-fun m!83897 () Bool)

(assert (=> b!81667 m!83897))

(assert (=> b!81667 m!82723))

(assert (=> b!81667 m!82723))

(declare-fun m!83899 () Bool)

(assert (=> b!81667 m!83899))

(assert (=> b!81669 m!82723))

(assert (=> b!81669 m!82723))

(assert (=> b!81669 m!83899))

(assert (=> d!19799 d!20259))

(declare-fun c!12911 () Bool)

(declare-fun d!20261 () Bool)

(assert (=> d!20261 (= c!12911 (and ((_ is Cons!1507) lt!37821) (= (_1!1101 (h!2096 lt!37821)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53287 () Option!144)

(assert (=> d!20261 (= (getValueByKey!138 lt!37821 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) e!53287)))

(declare-fun b!81671 () Bool)

(declare-fun e!53288 () Option!144)

(assert (=> b!81671 (= e!53287 e!53288)))

(declare-fun c!12912 () Bool)

(assert (=> b!81671 (= c!12912 (and ((_ is Cons!1507) lt!37821) (not (= (_1!1101 (h!2096 lt!37821)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!81672 () Bool)

(assert (=> b!81672 (= e!53288 (getValueByKey!138 (t!5178 lt!37821) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81673 () Bool)

(assert (=> b!81673 (= e!53288 None!142)))

(declare-fun b!81670 () Bool)

(assert (=> b!81670 (= e!53287 (Some!143 (_2!1101 (h!2096 lt!37821))))))

(assert (= (and d!20261 c!12911) b!81670))

(assert (= (and d!20261 (not c!12911)) b!81671))

(assert (= (and b!81671 c!12912) b!81672))

(assert (= (and b!81671 (not c!12912)) b!81673))

(declare-fun m!83901 () Bool)

(assert (=> b!81672 m!83901))

(assert (=> d!19799 d!20261))

(declare-fun d!20263 () Bool)

(assert (=> d!20263 (= (getValueByKey!138 lt!37821 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun lt!38145 () Unit!2341)

(assert (=> d!20263 (= lt!38145 (choose!470 lt!37821 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun e!53289 () Bool)

(assert (=> d!20263 e!53289))

(declare-fun res!42429 () Bool)

(assert (=> d!20263 (=> (not res!42429) (not e!53289))))

(assert (=> d!20263 (= res!42429 (isStrictlySorted!296 lt!37821))))

(assert (=> d!20263 (= (lemmaContainsTupThenGetReturnValue!55 lt!37821 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38145)))

(declare-fun b!81674 () Bool)

(declare-fun res!42430 () Bool)

(assert (=> b!81674 (=> (not res!42430) (not e!53289))))

(assert (=> b!81674 (= res!42430 (containsKey!142 lt!37821 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81675 () Bool)

(assert (=> b!81675 (= e!53289 (contains!746 lt!37821 (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (= (and d!20263 res!42429) b!81674))

(assert (= (and b!81674 res!42430) b!81675))

(assert (=> d!20263 m!82717))

(declare-fun m!83903 () Bool)

(assert (=> d!20263 m!83903))

(declare-fun m!83905 () Bool)

(assert (=> d!20263 m!83905))

(declare-fun m!83907 () Bool)

(assert (=> b!81674 m!83907))

(declare-fun m!83909 () Bool)

(assert (=> b!81675 m!83909))

(assert (=> d!19799 d!20263))

(declare-fun c!12913 () Bool)

(declare-fun b!81676 () Bool)

(assert (=> b!81676 (= c!12913 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (bvsgt (_1!1101 (h!2096 (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53290 () List!1511)

(declare-fun e!53291 () List!1511)

(assert (=> b!81676 (= e!53290 e!53291)))

(declare-fun b!81677 () Bool)

(declare-fun call!7626 () List!1511)

(assert (=> b!81677 (= e!53291 call!7626)))

(declare-fun c!12915 () Bool)

(declare-fun e!53292 () List!1511)

(declare-fun b!81678 () Bool)

(assert (=> b!81678 (= e!53292 (ite c!12915 (t!5178 (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (ite c!12913 (Cons!1507 (h!2096 (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (t!5178 (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))) Nil!1508)))))

(declare-fun d!20265 () Bool)

(declare-fun e!53294 () Bool)

(assert (=> d!20265 e!53294))

(declare-fun res!42432 () Bool)

(assert (=> d!20265 (=> (not res!42432) (not e!53294))))

(declare-fun lt!38146 () List!1511)

(assert (=> d!20265 (= res!42432 (isStrictlySorted!296 lt!38146))))

(declare-fun e!53293 () List!1511)

(assert (=> d!20265 (= lt!38146 e!53293)))

(declare-fun c!12914 () Bool)

(assert (=> d!20265 (= c!12914 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (bvslt (_1!1101 (h!2096 (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (=> d!20265 (isStrictlySorted!296 (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!20265 (= (insertStrictlySorted!58 (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38146)))

(declare-fun b!81679 () Bool)

(declare-fun call!7628 () List!1511)

(assert (=> b!81679 (= e!53293 call!7628)))

(declare-fun bm!7623 () Bool)

(declare-fun call!7627 () List!1511)

(assert (=> bm!7623 (= call!7627 call!7628)))

(declare-fun bm!7624 () Bool)

(assert (=> bm!7624 (= call!7626 call!7627)))

(declare-fun b!81680 () Bool)

(assert (=> b!81680 (= e!53294 (contains!746 lt!38146 (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!81681 () Bool)

(assert (=> b!81681 (= e!53293 e!53290)))

(assert (=> b!81681 (= c!12915 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!81682 () Bool)

(assert (=> b!81682 (= e!53291 call!7626)))

(declare-fun b!81683 () Bool)

(declare-fun res!42431 () Bool)

(assert (=> b!81683 (=> (not res!42431) (not e!53294))))

(assert (=> b!81683 (= res!42431 (containsKey!142 lt!38146 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun bm!7625 () Bool)

(assert (=> bm!7625 (= call!7628 ($colon$colon!70 e!53292 (ite c!12914 (h!2096 (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun c!12916 () Bool)

(assert (=> bm!7625 (= c!12916 c!12914)))

(declare-fun b!81684 () Bool)

(assert (=> b!81684 (= e!53292 (insertStrictlySorted!58 (t!5178 (toList!741 (+!106 lt!37276 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81685 () Bool)

(assert (=> b!81685 (= e!53290 call!7627)))

(assert (= (and d!20265 c!12914) b!81679))

(assert (= (and d!20265 (not c!12914)) b!81681))

(assert (= (and b!81681 c!12915) b!81685))

(assert (= (and b!81681 (not c!12915)) b!81676))

(assert (= (and b!81676 c!12913) b!81682))

(assert (= (and b!81676 (not c!12913)) b!81677))

(assert (= (or b!81682 b!81677) bm!7624))

(assert (= (or b!81685 bm!7624) bm!7623))

(assert (= (or b!81679 bm!7623) bm!7625))

(assert (= (and bm!7625 c!12916) b!81684))

(assert (= (and bm!7625 (not c!12916)) b!81678))

(assert (= (and d!20265 res!42432) b!81683))

(assert (= (and b!81683 res!42431) b!81680))

(declare-fun m!83911 () Bool)

(assert (=> b!81680 m!83911))

(declare-fun m!83913 () Bool)

(assert (=> b!81683 m!83913))

(declare-fun m!83915 () Bool)

(assert (=> d!20265 m!83915))

(declare-fun m!83917 () Bool)

(assert (=> d!20265 m!83917))

(declare-fun m!83919 () Bool)

(assert (=> b!81684 m!83919))

(declare-fun m!83921 () Bool)

(assert (=> bm!7625 m!83921))

(assert (=> d!19799 d!20265))

(declare-fun d!20267 () Bool)

(declare-fun e!53295 () Bool)

(assert (=> d!20267 e!53295))

(declare-fun res!42434 () Bool)

(assert (=> d!20267 (=> (not res!42434) (not e!53295))))

(declare-fun lt!38148 () ListLongMap!1451)

(assert (=> d!20267 (= res!42434 (contains!745 lt!38148 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(declare-fun lt!38150 () List!1511)

(assert (=> d!20267 (= lt!38148 (ListLongMap!1452 lt!38150))))

(declare-fun lt!38149 () Unit!2341)

(declare-fun lt!38147 () Unit!2341)

(assert (=> d!20267 (= lt!38149 lt!38147)))

(assert (=> d!20267 (= (getValueByKey!138 lt!38150 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(assert (=> d!20267 (= lt!38147 (lemmaContainsTupThenGetReturnValue!55 lt!38150 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(assert (=> d!20267 (= lt!38150 (insertStrictlySorted!58 (toList!741 call!7550) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(assert (=> d!20267 (= (+!106 call!7550 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) lt!38148)))

(declare-fun b!81686 () Bool)

(declare-fun res!42433 () Bool)

(assert (=> b!81686 (=> (not res!42433) (not e!53295))))

(assert (=> b!81686 (= res!42433 (= (getValueByKey!138 (toList!741 lt!38148) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))))))

(declare-fun b!81687 () Bool)

(assert (=> b!81687 (= e!53295 (contains!746 (toList!741 lt!38148) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))))

(assert (= (and d!20267 res!42434) b!81686))

(assert (= (and b!81686 res!42433) b!81687))

(declare-fun m!83923 () Bool)

(assert (=> d!20267 m!83923))

(declare-fun m!83925 () Bool)

(assert (=> d!20267 m!83925))

(declare-fun m!83927 () Bool)

(assert (=> d!20267 m!83927))

(declare-fun m!83929 () Bool)

(assert (=> d!20267 m!83929))

(declare-fun m!83931 () Bool)

(assert (=> b!81686 m!83931))

(declare-fun m!83933 () Bool)

(assert (=> b!81687 m!83933))

(assert (=> b!80945 d!20267))

(declare-fun d!20269 () Bool)

(declare-fun res!42435 () Bool)

(declare-fun e!53296 () Bool)

(assert (=> d!20269 (=> res!42435 e!53296)))

(assert (=> d!20269 (= res!42435 (or ((_ is Nil!1508) lt!37817) ((_ is Nil!1508) (t!5178 lt!37817))))))

(assert (=> d!20269 (= (isStrictlySorted!296 lt!37817) e!53296)))

(declare-fun b!81688 () Bool)

(declare-fun e!53297 () Bool)

(assert (=> b!81688 (= e!53296 e!53297)))

(declare-fun res!42436 () Bool)

(assert (=> b!81688 (=> (not res!42436) (not e!53297))))

(assert (=> b!81688 (= res!42436 (bvslt (_1!1101 (h!2096 lt!37817)) (_1!1101 (h!2096 (t!5178 lt!37817)))))))

(declare-fun b!81689 () Bool)

(assert (=> b!81689 (= e!53297 (isStrictlySorted!296 (t!5178 lt!37817)))))

(assert (= (and d!20269 (not res!42435)) b!81688))

(assert (= (and b!81688 res!42436) b!81689))

(declare-fun m!83935 () Bool)

(assert (=> b!81689 m!83935))

(assert (=> d!19797 d!20269))

(declare-fun d!20271 () Bool)

(declare-fun res!42437 () Bool)

(declare-fun e!53298 () Bool)

(assert (=> d!20271 (=> res!42437 e!53298)))

(assert (=> d!20271 (= res!42437 (or ((_ is Nil!1508) (toList!741 (+!106 lt!37276 lt!37278))) ((_ is Nil!1508) (t!5178 (toList!741 (+!106 lt!37276 lt!37278))))))))

(assert (=> d!20271 (= (isStrictlySorted!296 (toList!741 (+!106 lt!37276 lt!37278))) e!53298)))

(declare-fun b!81690 () Bool)

(declare-fun e!53299 () Bool)

(assert (=> b!81690 (= e!53298 e!53299)))

(declare-fun res!42438 () Bool)

(assert (=> b!81690 (=> (not res!42438) (not e!53299))))

(assert (=> b!81690 (= res!42438 (bvslt (_1!1101 (h!2096 (toList!741 (+!106 lt!37276 lt!37278)))) (_1!1101 (h!2096 (t!5178 (toList!741 (+!106 lt!37276 lt!37278)))))))))

(declare-fun b!81691 () Bool)

(assert (=> b!81691 (= e!53299 (isStrictlySorted!296 (t!5178 (toList!741 (+!106 lt!37276 lt!37278)))))))

(assert (= (and d!20271 (not res!42437)) b!81690))

(assert (= (and b!81690 res!42438) b!81691))

(declare-fun m!83937 () Bool)

(assert (=> b!81691 m!83937))

(assert (=> d!19797 d!20271))

(declare-fun d!20273 () Bool)

(assert (=> d!20273 (= (apply!80 lt!37597 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1182 (getValueByKey!138 (toList!741 lt!37597) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3455 () Bool)

(assert (= bs!3455 d!20273))

(assert (=> bs!3455 m!83751))

(assert (=> bs!3455 m!83751))

(declare-fun m!83939 () Bool)

(assert (=> bs!3455 m!83939))

(assert (=> b!80708 d!20273))

(declare-fun d!20275 () Bool)

(declare-fun c!12917 () Bool)

(assert (=> d!20275 (= c!12917 (and ((_ is Cons!1507) (toList!741 lt!37827)) (= (_1!1101 (h!2096 (toList!741 lt!37827))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53300 () Option!144)

(assert (=> d!20275 (= (getValueByKey!138 (toList!741 lt!37827) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53300)))

(declare-fun b!81693 () Bool)

(declare-fun e!53301 () Option!144)

(assert (=> b!81693 (= e!53300 e!53301)))

(declare-fun c!12918 () Bool)

(assert (=> b!81693 (= c!12918 (and ((_ is Cons!1507) (toList!741 lt!37827)) (not (= (_1!1101 (h!2096 (toList!741 lt!37827))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!81694 () Bool)

(assert (=> b!81694 (= e!53301 (getValueByKey!138 (t!5178 (toList!741 lt!37827)) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81695 () Bool)

(assert (=> b!81695 (= e!53301 None!142)))

(declare-fun b!81692 () Bool)

(assert (=> b!81692 (= e!53300 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37827)))))))

(assert (= (and d!20275 c!12917) b!81692))

(assert (= (and d!20275 (not c!12917)) b!81693))

(assert (= (and b!81693 c!12918) b!81694))

(assert (= (and b!81693 (not c!12918)) b!81695))

(declare-fun m!83941 () Bool)

(assert (=> b!81694 m!83941))

(assert (=> b!80993 d!20275))

(assert (=> bm!7504 d!19979))

(declare-fun d!20277 () Bool)

(declare-fun res!42439 () Bool)

(declare-fun e!53302 () Bool)

(assert (=> d!20277 (=> res!42439 e!53302)))

(assert (=> d!20277 (= res!42439 (and ((_ is Cons!1507) lt!37551) (= (_1!1101 (h!2096 lt!37551)) (_1!1101 lt!37283))))))

(assert (=> d!20277 (= (containsKey!142 lt!37551 (_1!1101 lt!37283)) e!53302)))

(declare-fun b!81696 () Bool)

(declare-fun e!53303 () Bool)

(assert (=> b!81696 (= e!53302 e!53303)))

(declare-fun res!42440 () Bool)

(assert (=> b!81696 (=> (not res!42440) (not e!53303))))

(assert (=> b!81696 (= res!42440 (and (or (not ((_ is Cons!1507) lt!37551)) (bvsle (_1!1101 (h!2096 lt!37551)) (_1!1101 lt!37283))) ((_ is Cons!1507) lt!37551) (bvslt (_1!1101 (h!2096 lt!37551)) (_1!1101 lt!37283))))))

(declare-fun b!81697 () Bool)

(assert (=> b!81697 (= e!53303 (containsKey!142 (t!5178 lt!37551) (_1!1101 lt!37283)))))

(assert (= (and d!20277 (not res!42439)) b!81696))

(assert (= (and b!81696 res!42440) b!81697))

(declare-fun m!83943 () Bool)

(assert (=> b!81697 m!83943))

(assert (=> b!81093 d!20277))

(declare-fun d!20279 () Bool)

(declare-fun res!42441 () Bool)

(declare-fun e!53304 () Bool)

(assert (=> d!20279 (=> res!42441 e!53304)))

(assert (=> d!20279 (= res!42441 (and ((_ is Cons!1507) lt!37817) (= (_1!1101 (h!2096 lt!37817)) (_1!1101 lt!37283))))))

(assert (=> d!20279 (= (containsKey!142 lt!37817 (_1!1101 lt!37283)) e!53304)))

(declare-fun b!81698 () Bool)

(declare-fun e!53305 () Bool)

(assert (=> b!81698 (= e!53304 e!53305)))

(declare-fun res!42442 () Bool)

(assert (=> b!81698 (=> (not res!42442) (not e!53305))))

(assert (=> b!81698 (= res!42442 (and (or (not ((_ is Cons!1507) lt!37817)) (bvsle (_1!1101 (h!2096 lt!37817)) (_1!1101 lt!37283))) ((_ is Cons!1507) lt!37817) (bvslt (_1!1101 (h!2096 lt!37817)) (_1!1101 lt!37283))))))

(declare-fun b!81699 () Bool)

(assert (=> b!81699 (= e!53305 (containsKey!142 (t!5178 lt!37817) (_1!1101 lt!37283)))))

(assert (= (and d!20279 (not res!42441)) b!81698))

(assert (= (and b!81698 res!42442) b!81699))

(declare-fun m!83945 () Bool)

(assert (=> b!81699 m!83945))

(assert (=> b!80986 d!20279))

(declare-fun lt!38151 () Bool)

(declare-fun d!20281 () Bool)

(assert (=> d!20281 (= lt!38151 (select (content!85 (toList!741 lt!37850)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(declare-fun e!53307 () Bool)

(assert (=> d!20281 (= lt!38151 e!53307)))

(declare-fun res!42443 () Bool)

(assert (=> d!20281 (=> (not res!42443) (not e!53307))))

(assert (=> d!20281 (= res!42443 ((_ is Cons!1507) (toList!741 lt!37850)))))

(assert (=> d!20281 (= (contains!746 (toList!741 lt!37850) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) lt!38151)))

(declare-fun b!81700 () Bool)

(declare-fun e!53306 () Bool)

(assert (=> b!81700 (= e!53307 e!53306)))

(declare-fun res!42444 () Bool)

(assert (=> b!81700 (=> res!42444 e!53306)))

(assert (=> b!81700 (= res!42444 (= (h!2096 (toList!741 lt!37850)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(declare-fun b!81701 () Bool)

(assert (=> b!81701 (= e!53306 (contains!746 (t!5178 (toList!741 lt!37850)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (= (and d!20281 res!42443) b!81700))

(assert (= (and b!81700 (not res!42444)) b!81701))

(declare-fun m!83947 () Bool)

(assert (=> d!20281 m!83947))

(declare-fun m!83949 () Bool)

(assert (=> d!20281 m!83949))

(declare-fun m!83951 () Bool)

(assert (=> b!81701 m!83951))

(assert (=> b!81008 d!20281))

(declare-fun d!20283 () Bool)

(assert (=> d!20283 (= (apply!80 (+!106 lt!37793 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16))) lt!37783) (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37793 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16)))) lt!37783)))))

(declare-fun bs!3456 () Bool)

(assert (= bs!3456 d!20283))

(declare-fun m!83953 () Bool)

(assert (=> bs!3456 m!83953))

(assert (=> bs!3456 m!83953))

(declare-fun m!83955 () Bool)

(assert (=> bs!3456 m!83955))

(assert (=> b!80933 d!20283))

(declare-fun d!20285 () Bool)

(assert (=> d!20285 (= (apply!80 (+!106 lt!37796 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) lt!37778) (apply!80 lt!37796 lt!37778))))

(declare-fun lt!38152 () Unit!2341)

(assert (=> d!20285 (= lt!38152 (choose!475 lt!37796 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) lt!37778))))

(declare-fun e!53308 () Bool)

(assert (=> d!20285 e!53308))

(declare-fun res!42445 () Bool)

(assert (=> d!20285 (=> (not res!42445) (not e!53308))))

(assert (=> d!20285 (= res!42445 (contains!745 lt!37796 lt!37778))))

(assert (=> d!20285 (= (addApplyDifferent!56 lt!37796 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) lt!37778) lt!38152)))

(declare-fun b!81702 () Bool)

(assert (=> b!81702 (= e!53308 (not (= lt!37778 lt!37792)))))

(assert (= (and d!20285 res!42445) b!81702))

(assert (=> d!20285 m!82633))

(declare-fun m!83957 () Bool)

(assert (=> d!20285 m!83957))

(declare-fun m!83959 () Bool)

(assert (=> d!20285 m!83959))

(assert (=> d!20285 m!82633))

(assert (=> d!20285 m!82635))

(assert (=> d!20285 m!82621))

(assert (=> b!80933 d!20285))

(declare-fun d!20287 () Bool)

(declare-fun e!53309 () Bool)

(assert (=> d!20287 e!53309))

(declare-fun res!42447 () Bool)

(assert (=> d!20287 (=> (not res!42447) (not e!53309))))

(declare-fun lt!38154 () ListLongMap!1451)

(assert (=> d!20287 (= res!42447 (contains!745 lt!38154 (_1!1101 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16)))))))

(declare-fun lt!38156 () List!1511)

(assert (=> d!20287 (= lt!38154 (ListLongMap!1452 lt!38156))))

(declare-fun lt!38155 () Unit!2341)

(declare-fun lt!38153 () Unit!2341)

(assert (=> d!20287 (= lt!38155 lt!38153)))

(assert (=> d!20287 (= (getValueByKey!138 lt!38156 (_1!1101 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20287 (= lt!38153 (lemmaContainsTupThenGetReturnValue!55 lt!38156 (_1!1101 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20287 (= lt!38156 (insertStrictlySorted!58 (toList!741 lt!37784) (_1!1101 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20287 (= (+!106 lt!37784 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16))) lt!38154)))

(declare-fun b!81703 () Bool)

(declare-fun res!42446 () Bool)

(assert (=> b!81703 (=> (not res!42446) (not e!53309))))

(assert (=> b!81703 (= res!42446 (= (getValueByKey!138 (toList!741 lt!38154) (_1!1101 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16))))))))

(declare-fun b!81704 () Bool)

(assert (=> b!81704 (= e!53309 (contains!746 (toList!741 lt!38154) (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16))))))

(assert (= (and d!20287 res!42447) b!81703))

(assert (= (and b!81703 res!42446) b!81704))

(declare-fun m!83961 () Bool)

(assert (=> d!20287 m!83961))

(declare-fun m!83963 () Bool)

(assert (=> d!20287 m!83963))

(declare-fun m!83965 () Bool)

(assert (=> d!20287 m!83965))

(declare-fun m!83967 () Bool)

(assert (=> d!20287 m!83967))

(declare-fun m!83969 () Bool)

(assert (=> b!81703 m!83969))

(declare-fun m!83971 () Bool)

(assert (=> b!81704 m!83971))

(assert (=> b!80933 d!20287))

(declare-fun d!20289 () Bool)

(declare-fun e!53310 () Bool)

(assert (=> d!20289 e!53310))

(declare-fun res!42449 () Bool)

(assert (=> d!20289 (=> (not res!42449) (not e!53310))))

(declare-fun lt!38158 () ListLongMap!1451)

(assert (=> d!20289 (= res!42449 (contains!745 lt!38158 (_1!1101 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16)))))))

(declare-fun lt!38160 () List!1511)

(assert (=> d!20289 (= lt!38158 (ListLongMap!1452 lt!38160))))

(declare-fun lt!38159 () Unit!2341)

(declare-fun lt!38157 () Unit!2341)

(assert (=> d!20289 (= lt!38159 lt!38157)))

(assert (=> d!20289 (= (getValueByKey!138 lt!38160 (_1!1101 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20289 (= lt!38157 (lemmaContainsTupThenGetReturnValue!55 lt!38160 (_1!1101 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20289 (= lt!38160 (insertStrictlySorted!58 (toList!741 lt!37793) (_1!1101 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20289 (= (+!106 lt!37793 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16))) lt!38158)))

(declare-fun b!81705 () Bool)

(declare-fun res!42448 () Bool)

(assert (=> b!81705 (=> (not res!42448) (not e!53310))))

(assert (=> b!81705 (= res!42448 (= (getValueByKey!138 (toList!741 lt!38158) (_1!1101 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16))))))))

(declare-fun b!81706 () Bool)

(assert (=> b!81706 (= e!53310 (contains!746 (toList!741 lt!38158) (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16))))))

(assert (= (and d!20289 res!42449) b!81705))

(assert (= (and b!81705 res!42448) b!81706))

(declare-fun m!83973 () Bool)

(assert (=> d!20289 m!83973))

(declare-fun m!83975 () Bool)

(assert (=> d!20289 m!83975))

(declare-fun m!83977 () Bool)

(assert (=> d!20289 m!83977))

(declare-fun m!83979 () Bool)

(assert (=> d!20289 m!83979))

(declare-fun m!83981 () Bool)

(assert (=> b!81705 m!83981))

(declare-fun m!83983 () Bool)

(assert (=> b!81706 m!83983))

(assert (=> b!80933 d!20289))

(declare-fun d!20291 () Bool)

(assert (=> d!20291 (= (apply!80 (+!106 lt!37791 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) lt!37787) (apply!80 lt!37791 lt!37787))))

(declare-fun lt!38161 () Unit!2341)

(assert (=> d!20291 (= lt!38161 (choose!475 lt!37791 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) lt!37787))))

(declare-fun e!53311 () Bool)

(assert (=> d!20291 e!53311))

(declare-fun res!42450 () Bool)

(assert (=> d!20291 (=> (not res!42450) (not e!53311))))

(assert (=> d!20291 (= res!42450 (contains!745 lt!37791 lt!37787))))

(assert (=> d!20291 (= (addApplyDifferent!56 lt!37791 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)) lt!37787) lt!38161)))

(declare-fun b!81707 () Bool)

(assert (=> b!81707 (= e!53311 (not (= lt!37787 lt!37789)))))

(assert (= (and d!20291 res!42450) b!81707))

(assert (=> d!20291 m!82611))

(declare-fun m!83985 () Bool)

(assert (=> d!20291 m!83985))

(declare-fun m!83987 () Bool)

(assert (=> d!20291 m!83987))

(assert (=> d!20291 m!82611))

(assert (=> d!20291 m!82613))

(assert (=> d!20291 m!82619))

(assert (=> b!80933 d!20291))

(declare-fun d!20293 () Bool)

(assert (=> d!20293 (= (apply!80 lt!37791 lt!37787) (get!1182 (getValueByKey!138 (toList!741 lt!37791) lt!37787)))))

(declare-fun bs!3457 () Bool)

(assert (= bs!3457 d!20293))

(declare-fun m!83989 () Bool)

(assert (=> bs!3457 m!83989))

(assert (=> bs!3457 m!83989))

(declare-fun m!83991 () Bool)

(assert (=> bs!3457 m!83991))

(assert (=> b!80933 d!20293))

(declare-fun d!20295 () Bool)

(declare-fun e!53312 () Bool)

(assert (=> d!20295 e!53312))

(declare-fun res!42452 () Bool)

(assert (=> d!20295 (=> (not res!42452) (not e!53312))))

(declare-fun lt!38163 () ListLongMap!1451)

(assert (=> d!20295 (= res!42452 (contains!745 lt!38163 (_1!1101 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(declare-fun lt!38165 () List!1511)

(assert (=> d!20295 (= lt!38163 (ListLongMap!1452 lt!38165))))

(declare-fun lt!38164 () Unit!2341)

(declare-fun lt!38162 () Unit!2341)

(assert (=> d!20295 (= lt!38164 lt!38162)))

(assert (=> d!20295 (= (getValueByKey!138 lt!38165 (_1!1101 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))) (Some!143 (_2!1101 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(assert (=> d!20295 (= lt!38162 (lemmaContainsTupThenGetReturnValue!55 lt!38165 (_1!1101 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) (_2!1101 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(assert (=> d!20295 (= lt!38165 (insertStrictlySorted!58 (toList!741 lt!37796) (_1!1101 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) (_2!1101 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(assert (=> d!20295 (= (+!106 lt!37796 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) lt!38163)))

(declare-fun b!81708 () Bool)

(declare-fun res!42451 () Bool)

(assert (=> b!81708 (=> (not res!42451) (not e!53312))))

(assert (=> b!81708 (= res!42451 (= (getValueByKey!138 (toList!741 lt!38163) (_1!1101 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))) (Some!143 (_2!1101 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))))))

(declare-fun b!81709 () Bool)

(assert (=> b!81709 (= e!53312 (contains!746 (toList!741 lt!38163) (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))))

(assert (= (and d!20295 res!42452) b!81708))

(assert (= (and b!81708 res!42451) b!81709))

(declare-fun m!83993 () Bool)

(assert (=> d!20295 m!83993))

(declare-fun m!83995 () Bool)

(assert (=> d!20295 m!83995))

(declare-fun m!83997 () Bool)

(assert (=> d!20295 m!83997))

(declare-fun m!83999 () Bool)

(assert (=> d!20295 m!83999))

(declare-fun m!84001 () Bool)

(assert (=> b!81708 m!84001))

(declare-fun m!84003 () Bool)

(assert (=> b!81709 m!84003))

(assert (=> b!80933 d!20295))

(declare-fun d!20297 () Bool)

(declare-fun e!53313 () Bool)

(assert (=> d!20297 e!53313))

(declare-fun res!42453 () Bool)

(assert (=> d!20297 (=> res!42453 e!53313)))

(declare-fun lt!38167 () Bool)

(assert (=> d!20297 (= res!42453 (not lt!38167))))

(declare-fun lt!38166 () Bool)

(assert (=> d!20297 (= lt!38167 lt!38166)))

(declare-fun lt!38169 () Unit!2341)

(declare-fun e!53314 () Unit!2341)

(assert (=> d!20297 (= lt!38169 e!53314)))

(declare-fun c!12919 () Bool)

(assert (=> d!20297 (= c!12919 lt!38166)))

(assert (=> d!20297 (= lt!38166 (containsKey!142 (toList!741 (+!106 lt!37784 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16)))) lt!37777))))

(assert (=> d!20297 (= (contains!745 (+!106 lt!37784 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16))) lt!37777) lt!38167)))

(declare-fun b!81710 () Bool)

(declare-fun lt!38168 () Unit!2341)

(assert (=> b!81710 (= e!53314 lt!38168)))

(assert (=> b!81710 (= lt!38168 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 (+!106 lt!37784 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16)))) lt!37777))))

(assert (=> b!81710 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37784 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16)))) lt!37777))))

(declare-fun b!81711 () Bool)

(declare-fun Unit!2388 () Unit!2341)

(assert (=> b!81711 (= e!53314 Unit!2388)))

(declare-fun b!81712 () Bool)

(assert (=> b!81712 (= e!53313 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37784 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16)))) lt!37777)))))

(assert (= (and d!20297 c!12919) b!81710))

(assert (= (and d!20297 (not c!12919)) b!81711))

(assert (= (and d!20297 (not res!42453)) b!81712))

(declare-fun m!84005 () Bool)

(assert (=> d!20297 m!84005))

(declare-fun m!84007 () Bool)

(assert (=> b!81710 m!84007))

(declare-fun m!84009 () Bool)

(assert (=> b!81710 m!84009))

(assert (=> b!81710 m!84009))

(declare-fun m!84011 () Bool)

(assert (=> b!81710 m!84011))

(assert (=> b!81712 m!84009))

(assert (=> b!81712 m!84009))

(assert (=> b!81712 m!84011))

(assert (=> b!80933 d!20297))

(declare-fun d!20299 () Bool)

(declare-fun e!53315 () Bool)

(assert (=> d!20299 e!53315))

(declare-fun res!42455 () Bool)

(assert (=> d!20299 (=> (not res!42455) (not e!53315))))

(declare-fun lt!38171 () ListLongMap!1451)

(assert (=> d!20299 (= res!42455 (contains!745 lt!38171 (_1!1101 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(declare-fun lt!38173 () List!1511)

(assert (=> d!20299 (= lt!38171 (ListLongMap!1452 lt!38173))))

(declare-fun lt!38172 () Unit!2341)

(declare-fun lt!38170 () Unit!2341)

(assert (=> d!20299 (= lt!38172 lt!38170)))

(assert (=> d!20299 (= (getValueByKey!138 lt!38173 (_1!1101 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))) (Some!143 (_2!1101 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(assert (=> d!20299 (= lt!38170 (lemmaContainsTupThenGetReturnValue!55 lt!38173 (_1!1101 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) (_2!1101 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(assert (=> d!20299 (= lt!38173 (insertStrictlySorted!58 (toList!741 lt!37791) (_1!1101 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) (_2!1101 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(assert (=> d!20299 (= (+!106 lt!37791 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) lt!38171)))

(declare-fun b!81713 () Bool)

(declare-fun res!42454 () Bool)

(assert (=> b!81713 (=> (not res!42454) (not e!53315))))

(assert (=> b!81713 (= res!42454 (= (getValueByKey!138 (toList!741 lt!38171) (_1!1101 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))) (Some!143 (_2!1101 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))))))

(declare-fun b!81714 () Bool)

(assert (=> b!81714 (= e!53315 (contains!746 (toList!741 lt!38171) (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))))

(assert (= (and d!20299 res!42455) b!81713))

(assert (= (and b!81713 res!42454) b!81714))

(declare-fun m!84013 () Bool)

(assert (=> d!20299 m!84013))

(declare-fun m!84015 () Bool)

(assert (=> d!20299 m!84015))

(declare-fun m!84017 () Bool)

(assert (=> d!20299 m!84017))

(declare-fun m!84019 () Bool)

(assert (=> d!20299 m!84019))

(declare-fun m!84021 () Bool)

(assert (=> b!81713 m!84021))

(declare-fun m!84023 () Bool)

(assert (=> b!81714 m!84023))

(assert (=> b!80933 d!20299))

(declare-fun d!20301 () Bool)

(assert (=> d!20301 (= (apply!80 (+!106 lt!37796 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) lt!37778) (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37796 (tuple2!2181 lt!37792 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))) lt!37778)))))

(declare-fun bs!3458 () Bool)

(assert (= bs!3458 d!20301))

(declare-fun m!84025 () Bool)

(assert (=> bs!3458 m!84025))

(assert (=> bs!3458 m!84025))

(declare-fun m!84027 () Bool)

(assert (=> bs!3458 m!84027))

(assert (=> b!80933 d!20301))

(assert (=> b!80933 d!20123))

(declare-fun d!20303 () Bool)

(assert (=> d!20303 (= (apply!80 (+!106 lt!37791 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))) lt!37787) (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37791 (tuple2!2181 lt!37789 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))) lt!37787)))))

(declare-fun bs!3459 () Bool)

(assert (= bs!3459 d!20303))

(declare-fun m!84029 () Bool)

(assert (=> bs!3459 m!84029))

(assert (=> bs!3459 m!84029))

(declare-fun m!84031 () Bool)

(assert (=> bs!3459 m!84031))

(assert (=> b!80933 d!20303))

(declare-fun d!20305 () Bool)

(assert (=> d!20305 (contains!745 (+!106 lt!37784 (tuple2!2181 lt!37790 (zeroValue!2189 newMap!16))) lt!37777)))

(declare-fun lt!38174 () Unit!2341)

(assert (=> d!20305 (= lt!38174 (choose!476 lt!37784 lt!37790 (zeroValue!2189 newMap!16) lt!37777))))

(assert (=> d!20305 (contains!745 lt!37784 lt!37777)))

(assert (=> d!20305 (= (addStillContains!56 lt!37784 lt!37790 (zeroValue!2189 newMap!16) lt!37777) lt!38174)))

(declare-fun bs!3460 () Bool)

(assert (= bs!3460 d!20305))

(assert (=> bs!3460 m!82615))

(assert (=> bs!3460 m!82615))

(assert (=> bs!3460 m!82627))

(declare-fun m!84033 () Bool)

(assert (=> bs!3460 m!84033))

(declare-fun m!84035 () Bool)

(assert (=> bs!3460 m!84035))

(assert (=> b!80933 d!20305))

(declare-fun d!20307 () Bool)

(assert (=> d!20307 (= (apply!80 lt!37793 lt!37783) (get!1182 (getValueByKey!138 (toList!741 lt!37793) lt!37783)))))

(declare-fun bs!3461 () Bool)

(assert (= bs!3461 d!20307))

(declare-fun m!84037 () Bool)

(assert (=> bs!3461 m!84037))

(assert (=> bs!3461 m!84037))

(declare-fun m!84039 () Bool)

(assert (=> bs!3461 m!84039))

(assert (=> b!80933 d!20307))

(declare-fun d!20309 () Bool)

(assert (=> d!20309 (= (apply!80 (+!106 lt!37793 (tuple2!2181 lt!37780 (zeroValue!2189 newMap!16))) lt!37783) (apply!80 lt!37793 lt!37783))))

(declare-fun lt!38175 () Unit!2341)

(assert (=> d!20309 (= lt!38175 (choose!475 lt!37793 lt!37780 (zeroValue!2189 newMap!16) lt!37783))))

(declare-fun e!53316 () Bool)

(assert (=> d!20309 e!53316))

(declare-fun res!42456 () Bool)

(assert (=> d!20309 (=> (not res!42456) (not e!53316))))

(assert (=> d!20309 (= res!42456 (contains!745 lt!37793 lt!37783))))

(assert (=> d!20309 (= (addApplyDifferent!56 lt!37793 lt!37780 (zeroValue!2189 newMap!16) lt!37783) lt!38175)))

(declare-fun b!81715 () Bool)

(assert (=> b!81715 (= e!53316 (not (= lt!37783 lt!37780)))))

(assert (= (and d!20309 res!42456) b!81715))

(assert (=> d!20309 m!82623))

(declare-fun m!84041 () Bool)

(assert (=> d!20309 m!84041))

(declare-fun m!84043 () Bool)

(assert (=> d!20309 m!84043))

(assert (=> d!20309 m!82623))

(assert (=> d!20309 m!82625))

(assert (=> d!20309 m!82609))

(assert (=> b!80933 d!20309))

(declare-fun d!20311 () Bool)

(assert (=> d!20311 (= (apply!80 lt!37796 lt!37778) (get!1182 (getValueByKey!138 (toList!741 lt!37796) lt!37778)))))

(declare-fun bs!3462 () Bool)

(assert (= bs!3462 d!20311))

(declare-fun m!84045 () Bool)

(assert (=> bs!3462 m!84045))

(assert (=> bs!3462 m!84045))

(declare-fun m!84047 () Bool)

(assert (=> bs!3462 m!84047))

(assert (=> b!80933 d!20311))

(declare-fun d!20313 () Bool)

(assert (=> d!20313 (= (isEmpty!331 (getValueByKey!138 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))) (not ((_ is Some!143) (getValueByKey!138 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))))

(assert (=> d!19887 d!20313))

(assert (=> b!80651 d!20029))

(assert (=> b!80651 d!20031))

(declare-fun d!20315 () Bool)

(declare-fun c!12920 () Bool)

(assert (=> d!20315 (= c!12920 (and ((_ is Cons!1507) (toList!741 lt!37615)) (= (_1!1101 (h!2096 (toList!741 lt!37615))) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun e!53317 () Option!144)

(assert (=> d!20315 (= (getValueByKey!138 (toList!741 lt!37615) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) e!53317)))

(declare-fun b!81717 () Bool)

(declare-fun e!53318 () Option!144)

(assert (=> b!81717 (= e!53317 e!53318)))

(declare-fun c!12921 () Bool)

(assert (=> b!81717 (= c!12921 (and ((_ is Cons!1507) (toList!741 lt!37615)) (not (= (_1!1101 (h!2096 (toList!741 lt!37615))) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))))

(declare-fun b!81718 () Bool)

(assert (=> b!81718 (= e!53318 (getValueByKey!138 (t!5178 (toList!741 lt!37615)) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!81719 () Bool)

(assert (=> b!81719 (= e!53318 None!142)))

(declare-fun b!81716 () Bool)

(assert (=> b!81716 (= e!53317 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37615)))))))

(assert (= (and d!20315 c!12920) b!81716))

(assert (= (and d!20315 (not c!12920)) b!81717))

(assert (= (and b!81717 c!12921) b!81718))

(assert (= (and b!81717 (not c!12921)) b!81719))

(declare-fun m!84049 () Bool)

(assert (=> b!81718 m!84049))

(assert (=> b!80720 d!20315))

(assert (=> bm!7546 d!19737))

(declare-fun d!20317 () Bool)

(declare-fun c!12922 () Bool)

(assert (=> d!20317 (= c!12922 (and ((_ is Cons!1507) (toList!741 lt!37887)) (= (_1!1101 (h!2096 (toList!741 lt!37887))) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53319 () Option!144)

(assert (=> d!20317 (= (getValueByKey!138 (toList!741 lt!37887) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53319)))

(declare-fun b!81721 () Bool)

(declare-fun e!53320 () Option!144)

(assert (=> b!81721 (= e!53319 e!53320)))

(declare-fun c!12923 () Bool)

(assert (=> b!81721 (= c!12923 (and ((_ is Cons!1507) (toList!741 lt!37887)) (not (= (_1!1101 (h!2096 (toList!741 lt!37887))) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!81722 () Bool)

(assert (=> b!81722 (= e!53320 (getValueByKey!138 (t!5178 (toList!741 lt!37887)) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81723 () Bool)

(assert (=> b!81723 (= e!53320 None!142)))

(declare-fun b!81720 () Bool)

(assert (=> b!81720 (= e!53319 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37887)))))))

(assert (= (and d!20317 c!12922) b!81720))

(assert (= (and d!20317 (not c!12922)) b!81721))

(assert (= (and b!81721 c!12923) b!81722))

(assert (= (and b!81721 (not c!12923)) b!81723))

(declare-fun m!84051 () Bool)

(assert (=> b!81722 m!84051))

(assert (=> b!81046 d!20317))

(assert (=> d!19725 d!19691))

(declare-fun d!20319 () Bool)

(declare-fun e!53321 () Bool)

(assert (=> d!20319 e!53321))

(declare-fun res!42457 () Bool)

(assert (=> d!20319 (=> res!42457 e!53321)))

(declare-fun lt!38177 () Bool)

(assert (=> d!20319 (= res!42457 (not lt!38177))))

(declare-fun lt!38176 () Bool)

(assert (=> d!20319 (= lt!38177 lt!38176)))

(declare-fun lt!38179 () Unit!2341)

(declare-fun e!53322 () Unit!2341)

(assert (=> d!20319 (= lt!38179 e!53322)))

(declare-fun c!12924 () Bool)

(assert (=> d!20319 (= c!12924 lt!38176)))

(assert (=> d!20319 (= lt!38176 (containsKey!142 (toList!741 lt!37802) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20319 (= (contains!745 lt!37802 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!38177)))

(declare-fun b!81724 () Bool)

(declare-fun lt!38178 () Unit!2341)

(assert (=> b!81724 (= e!53322 lt!38178)))

(assert (=> b!81724 (= lt!38178 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37802) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!81724 (isDefined!91 (getValueByKey!138 (toList!741 lt!37802) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!81725 () Bool)

(declare-fun Unit!2389 () Unit!2341)

(assert (=> b!81725 (= e!53322 Unit!2389)))

(declare-fun b!81726 () Bool)

(assert (=> b!81726 (= e!53321 (isDefined!91 (getValueByKey!138 (toList!741 lt!37802) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!20319 c!12924) b!81724))

(assert (= (and d!20319 (not c!12924)) b!81725))

(assert (= (and d!20319 (not res!42457)) b!81726))

(declare-fun m!84053 () Bool)

(assert (=> d!20319 m!84053))

(declare-fun m!84055 () Bool)

(assert (=> b!81724 m!84055))

(assert (=> b!81724 m!82671))

(assert (=> b!81724 m!82671))

(declare-fun m!84057 () Bool)

(assert (=> b!81724 m!84057))

(assert (=> b!81726 m!82671))

(assert (=> b!81726 m!82671))

(assert (=> b!81726 m!84057))

(assert (=> d!19783 d!20319))

(declare-fun c!12925 () Bool)

(declare-fun d!20321 () Bool)

(assert (=> d!20321 (= c!12925 (and ((_ is Cons!1507) lt!37804) (= (_1!1101 (h!2096 lt!37804)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!53323 () Option!144)

(assert (=> d!20321 (= (getValueByKey!138 lt!37804 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!53323)))

(declare-fun b!81728 () Bool)

(declare-fun e!53324 () Option!144)

(assert (=> b!81728 (= e!53323 e!53324)))

(declare-fun c!12926 () Bool)

(assert (=> b!81728 (= c!12926 (and ((_ is Cons!1507) lt!37804) (not (= (_1!1101 (h!2096 lt!37804)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!81729 () Bool)

(assert (=> b!81729 (= e!53324 (getValueByKey!138 (t!5178 lt!37804) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!81730 () Bool)

(assert (=> b!81730 (= e!53324 None!142)))

(declare-fun b!81727 () Bool)

(assert (=> b!81727 (= e!53323 (Some!143 (_2!1101 (h!2096 lt!37804))))))

(assert (= (and d!20321 c!12925) b!81727))

(assert (= (and d!20321 (not c!12925)) b!81728))

(assert (= (and b!81728 c!12926) b!81729))

(assert (= (and b!81728 (not c!12926)) b!81730))

(declare-fun m!84059 () Bool)

(assert (=> b!81729 m!84059))

(assert (=> d!19783 d!20321))

(declare-fun d!20323 () Bool)

(assert (=> d!20323 (= (getValueByKey!138 lt!37804 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!38180 () Unit!2341)

(assert (=> d!20323 (= lt!38180 (choose!470 lt!37804 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!53325 () Bool)

(assert (=> d!20323 e!53325))

(declare-fun res!42458 () Bool)

(assert (=> d!20323 (=> (not res!42458) (not e!53325))))

(assert (=> d!20323 (= res!42458 (isStrictlySorted!296 lt!37804))))

(assert (=> d!20323 (= (lemmaContainsTupThenGetReturnValue!55 lt!37804 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!38180)))

(declare-fun b!81731 () Bool)

(declare-fun res!42459 () Bool)

(assert (=> b!81731 (=> (not res!42459) (not e!53325))))

(assert (=> b!81731 (= res!42459 (containsKey!142 lt!37804 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!81732 () Bool)

(assert (=> b!81732 (= e!53325 (contains!746 lt!37804 (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!20323 res!42458) b!81731))

(assert (= (and b!81731 res!42459) b!81732))

(assert (=> d!20323 m!82665))

(declare-fun m!84061 () Bool)

(assert (=> d!20323 m!84061))

(declare-fun m!84063 () Bool)

(assert (=> d!20323 m!84063))

(declare-fun m!84065 () Bool)

(assert (=> b!81731 m!84065))

(declare-fun m!84067 () Bool)

(assert (=> b!81732 m!84067))

(assert (=> d!19783 d!20323))

(declare-fun c!12927 () Bool)

(declare-fun b!81733 () Bool)

(assert (=> b!81733 (= c!12927 (and ((_ is Cons!1507) (toList!741 call!7503)) (bvsgt (_1!1101 (h!2096 (toList!741 call!7503))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!53326 () List!1511)

(declare-fun e!53327 () List!1511)

(assert (=> b!81733 (= e!53326 e!53327)))

(declare-fun b!81734 () Bool)

(declare-fun call!7629 () List!1511)

(assert (=> b!81734 (= e!53327 call!7629)))

(declare-fun c!12929 () Bool)

(declare-fun e!53328 () List!1511)

(declare-fun b!81735 () Bool)

(assert (=> b!81735 (= e!53328 (ite c!12929 (t!5178 (toList!741 call!7503)) (ite c!12927 (Cons!1507 (h!2096 (toList!741 call!7503)) (t!5178 (toList!741 call!7503))) Nil!1508)))))

(declare-fun d!20325 () Bool)

(declare-fun e!53330 () Bool)

(assert (=> d!20325 e!53330))

(declare-fun res!42461 () Bool)

(assert (=> d!20325 (=> (not res!42461) (not e!53330))))

(declare-fun lt!38181 () List!1511)

(assert (=> d!20325 (= res!42461 (isStrictlySorted!296 lt!38181))))

(declare-fun e!53329 () List!1511)

(assert (=> d!20325 (= lt!38181 e!53329)))

(declare-fun c!12928 () Bool)

(assert (=> d!20325 (= c!12928 (and ((_ is Cons!1507) (toList!741 call!7503)) (bvslt (_1!1101 (h!2096 (toList!741 call!7503))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!20325 (isStrictlySorted!296 (toList!741 call!7503))))

(assert (=> d!20325 (= (insertStrictlySorted!58 (toList!741 call!7503) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!38181)))

(declare-fun b!81736 () Bool)

(declare-fun call!7631 () List!1511)

(assert (=> b!81736 (= e!53329 call!7631)))

(declare-fun bm!7626 () Bool)

(declare-fun call!7630 () List!1511)

(assert (=> bm!7626 (= call!7630 call!7631)))

(declare-fun bm!7627 () Bool)

(assert (=> bm!7627 (= call!7629 call!7630)))

(declare-fun b!81737 () Bool)

(assert (=> b!81737 (= e!53330 (contains!746 lt!38181 (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!81738 () Bool)

(assert (=> b!81738 (= e!53329 e!53326)))

(assert (=> b!81738 (= c!12929 (and ((_ is Cons!1507) (toList!741 call!7503)) (= (_1!1101 (h!2096 (toList!741 call!7503))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!81739 () Bool)

(assert (=> b!81739 (= e!53327 call!7629)))

(declare-fun b!81740 () Bool)

(declare-fun res!42460 () Bool)

(assert (=> b!81740 (=> (not res!42460) (not e!53330))))

(assert (=> b!81740 (= res!42460 (containsKey!142 lt!38181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!7628 () Bool)

(assert (=> bm!7628 (= call!7631 ($colon$colon!70 e!53328 (ite c!12928 (h!2096 (toList!741 call!7503)) (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!12930 () Bool)

(assert (=> bm!7628 (= c!12930 c!12928)))

(declare-fun b!81741 () Bool)

(assert (=> b!81741 (= e!53328 (insertStrictlySorted!58 (t!5178 (toList!741 call!7503)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!81742 () Bool)

(assert (=> b!81742 (= e!53326 call!7630)))

(assert (= (and d!20325 c!12928) b!81736))

(assert (= (and d!20325 (not c!12928)) b!81738))

(assert (= (and b!81738 c!12929) b!81742))

(assert (= (and b!81738 (not c!12929)) b!81733))

(assert (= (and b!81733 c!12927) b!81739))

(assert (= (and b!81733 (not c!12927)) b!81734))

(assert (= (or b!81739 b!81734) bm!7627))

(assert (= (or b!81742 bm!7627) bm!7626))

(assert (= (or b!81736 bm!7626) bm!7628))

(assert (= (and bm!7628 c!12930) b!81741))

(assert (= (and bm!7628 (not c!12930)) b!81735))

(assert (= (and d!20325 res!42461) b!81740))

(assert (= (and b!81740 res!42460) b!81737))

(declare-fun m!84069 () Bool)

(assert (=> b!81737 m!84069))

(declare-fun m!84071 () Bool)

(assert (=> b!81740 m!84071))

(declare-fun m!84073 () Bool)

(assert (=> d!20325 m!84073))

(declare-fun m!84075 () Bool)

(assert (=> d!20325 m!84075))

(declare-fun m!84077 () Bool)

(assert (=> b!81741 m!84077))

(declare-fun m!84079 () Bool)

(assert (=> bm!7628 m!84079))

(assert (=> d!19783 d!20325))

(assert (=> b!81085 d!20067))

(assert (=> b!81085 d!20069))

(assert (=> b!80862 d!20079))

(assert (=> b!81088 d!20077))

(assert (=> b!81088 d!19707))

(declare-fun c!12931 () Bool)

(declare-fun d!20327 () Bool)

(assert (=> d!20327 (= c!12931 (and ((_ is Cons!1507) (toList!741 lt!37819)) (= (_1!1101 (h!2096 (toList!741 lt!37819))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53331 () Option!144)

(assert (=> d!20327 (= (getValueByKey!138 (toList!741 lt!37819) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) e!53331)))

(declare-fun b!81744 () Bool)

(declare-fun e!53332 () Option!144)

(assert (=> b!81744 (= e!53331 e!53332)))

(declare-fun c!12932 () Bool)

(assert (=> b!81744 (= c!12932 (and ((_ is Cons!1507) (toList!741 lt!37819)) (not (= (_1!1101 (h!2096 (toList!741 lt!37819))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!81745 () Bool)

(assert (=> b!81745 (= e!53332 (getValueByKey!138 (t!5178 (toList!741 lt!37819)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81746 () Bool)

(assert (=> b!81746 (= e!53332 None!142)))

(declare-fun b!81743 () Bool)

(assert (=> b!81743 (= e!53331 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37819)))))))

(assert (= (and d!20327 c!12931) b!81743))

(assert (= (and d!20327 (not c!12931)) b!81744))

(assert (= (and b!81744 c!12932) b!81745))

(assert (= (and b!81744 (not c!12932)) b!81746))

(declare-fun m!84081 () Bool)

(assert (=> b!81745 m!84081))

(assert (=> b!80989 d!20327))

(declare-fun d!20329 () Bool)

(assert (=> d!20329 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37479))))

(declare-fun lt!38182 () Unit!2341)

(assert (=> d!20329 (= lt!38182 (choose!477 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37479))))

(declare-fun e!53333 () Bool)

(assert (=> d!20329 e!53333))

(declare-fun res!42462 () Bool)

(assert (=> d!20329 (=> (not res!42462) (not e!53333))))

(assert (=> d!20329 (= res!42462 (isStrictlySorted!296 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!20329 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37479) lt!38182)))

(declare-fun b!81747 () Bool)

(assert (=> b!81747 (= e!53333 (containsKey!142 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37479))))

(assert (= (and d!20329 res!42462) b!81747))

(assert (=> d!20329 m!82975))

(assert (=> d!20329 m!82975))

(assert (=> d!20329 m!82977))

(declare-fun m!84083 () Bool)

(assert (=> d!20329 m!84083))

(declare-fun m!84085 () Bool)

(assert (=> d!20329 m!84085))

(assert (=> b!81747 m!82971))

(assert (=> b!81052 d!20329))

(declare-fun d!20331 () Bool)

(assert (=> d!20331 (= (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37479)) (not (isEmpty!331 (getValueByKey!138 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37479))))))

(declare-fun bs!3463 () Bool)

(assert (= bs!3463 d!20331))

(assert (=> bs!3463 m!82975))

(declare-fun m!84087 () Bool)

(assert (=> bs!3463 m!84087))

(assert (=> b!81052 d!20331))

(declare-fun c!12933 () Bool)

(declare-fun d!20333 () Bool)

(assert (=> d!20333 (= c!12933 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))) lt!37479)))))

(declare-fun e!53334 () Option!144)

(assert (=> d!20333 (= (getValueByKey!138 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37479) e!53334)))

(declare-fun b!81749 () Bool)

(declare-fun e!53335 () Option!144)

(assert (=> b!81749 (= e!53334 e!53335)))

(declare-fun c!12934 () Bool)

(assert (=> b!81749 (= c!12934 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (not (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))) lt!37479))))))

(declare-fun b!81750 () Bool)

(assert (=> b!81750 (= e!53335 (getValueByKey!138 (t!5178 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) lt!37479))))

(declare-fun b!81751 () Bool)

(assert (=> b!81751 (= e!53335 None!142)))

(declare-fun b!81748 () Bool)

(assert (=> b!81748 (= e!53334 (Some!143 (_2!1101 (h!2096 (toList!741 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))))

(assert (= (and d!20333 c!12933) b!81748))

(assert (= (and d!20333 (not c!12933)) b!81749))

(assert (= (and b!81749 c!12934) b!81750))

(assert (= (and b!81749 (not c!12934)) b!81751))

(declare-fun m!84089 () Bool)

(assert (=> b!81750 m!84089))

(assert (=> b!81052 d!20333))

(declare-fun d!20335 () Bool)

(declare-fun e!53336 () Bool)

(assert (=> d!20335 e!53336))

(declare-fun res!42463 () Bool)

(assert (=> d!20335 (=> res!42463 e!53336)))

(declare-fun lt!38184 () Bool)

(assert (=> d!20335 (= res!42463 (not lt!38184))))

(declare-fun lt!38183 () Bool)

(assert (=> d!20335 (= lt!38184 lt!38183)))

(declare-fun lt!38186 () Unit!2341)

(declare-fun e!53337 () Unit!2341)

(assert (=> d!20335 (= lt!38186 e!53337)))

(declare-fun c!12935 () Bool)

(assert (=> d!20335 (= c!12935 lt!38183)))

(assert (=> d!20335 (= lt!38183 (containsKey!142 (toList!741 lt!37785) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20335 (= (contains!745 lt!37785 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38184)))

(declare-fun b!81752 () Bool)

(declare-fun lt!38185 () Unit!2341)

(assert (=> b!81752 (= e!53337 lt!38185)))

(assert (=> b!81752 (= lt!38185 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37785) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81752 (isDefined!91 (getValueByKey!138 (toList!741 lt!37785) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81753 () Bool)

(declare-fun Unit!2390 () Unit!2341)

(assert (=> b!81753 (= e!53337 Unit!2390)))

(declare-fun b!81754 () Bool)

(assert (=> b!81754 (= e!53336 (isDefined!91 (getValueByKey!138 (toList!741 lt!37785) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20335 c!12935) b!81752))

(assert (= (and d!20335 (not c!12935)) b!81753))

(assert (= (and d!20335 (not res!42463)) b!81754))

(declare-fun m!84091 () Bool)

(assert (=> d!20335 m!84091))

(declare-fun m!84093 () Bool)

(assert (=> b!81752 m!84093))

(declare-fun m!84095 () Bool)

(assert (=> b!81752 m!84095))

(assert (=> b!81752 m!84095))

(declare-fun m!84097 () Bool)

(assert (=> b!81752 m!84097))

(assert (=> b!81754 m!84095))

(assert (=> b!81754 m!84095))

(assert (=> b!81754 m!84097))

(assert (=> bm!7553 d!20335))

(assert (=> b!80786 d!20059))

(assert (=> b!80786 d!19827))

(assert (=> d!19779 d!19953))

(declare-fun d!20337 () Bool)

(assert (=> d!20337 (= (+!106 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37425 lt!37282 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(assert (=> d!20337 true))

(declare-fun _$7!68 () Unit!2341)

(assert (=> d!20337 (= (choose!472 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37425 (zeroValue!2189 newMap!16) lt!37282 (minValue!2189 newMap!16) (defaultEntry!2293 newMap!16)) _$7!68)))

(declare-fun bs!3464 () Bool)

(assert (= bs!3464 d!20337))

(assert (=> bs!3464 m!81965))

(assert (=> bs!3464 m!81965))

(assert (=> bs!3464 m!82767))

(assert (=> bs!3464 m!82765))

(assert (=> d!19811 d!20337))

(declare-fun d!20339 () Bool)

(declare-fun e!53338 () Bool)

(assert (=> d!20339 e!53338))

(declare-fun res!42471 () Bool)

(assert (=> d!20339 (=> (not res!42471) (not e!53338))))

(assert (=> d!20339 (= res!42471 (or (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))))

(declare-fun lt!38197 () ListLongMap!1451)

(declare-fun lt!38188 () ListLongMap!1451)

(assert (=> d!20339 (= lt!38197 lt!38188)))

(declare-fun lt!38200 () Unit!2341)

(declare-fun e!53345 () Unit!2341)

(assert (=> d!20339 (= lt!38200 e!53345)))

(declare-fun c!12940 () Bool)

(declare-fun e!53344 () Bool)

(assert (=> d!20339 (= c!12940 e!53344)))

(declare-fun res!42464 () Bool)

(assert (=> d!20339 (=> (not res!42464) (not e!53344))))

(assert (=> d!20339 (= res!42464 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun e!53349 () ListLongMap!1451)

(assert (=> d!20339 (= lt!38188 e!53349)))

(declare-fun c!12937 () Bool)

(assert (=> d!20339 (= c!12937 (and (not (= (bvand lt!37425 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!37425 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20339 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20339 (= (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37425 lt!37282 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38197)))

(declare-fun b!81755 () Bool)

(declare-fun Unit!2391 () Unit!2341)

(assert (=> b!81755 (= e!53345 Unit!2391)))

(declare-fun b!81756 () Bool)

(declare-fun lt!38187 () Unit!2341)

(assert (=> b!81756 (= e!53345 lt!38187)))

(declare-fun lt!38196 () ListLongMap!1451)

(assert (=> b!81756 (= lt!38196 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37425 lt!37282 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38202 () (_ BitVec 64))

(assert (=> b!81756 (= lt!38202 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38189 () (_ BitVec 64))

(assert (=> b!81756 (= lt!38189 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38191 () Unit!2341)

(assert (=> b!81756 (= lt!38191 (addStillContains!56 lt!38196 lt!38202 lt!37282 lt!38189))))

(assert (=> b!81756 (contains!745 (+!106 lt!38196 (tuple2!2181 lt!38202 lt!37282)) lt!38189)))

(declare-fun lt!38207 () Unit!2341)

(assert (=> b!81756 (= lt!38207 lt!38191)))

(declare-fun lt!38208 () ListLongMap!1451)

(assert (=> b!81756 (= lt!38208 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37425 lt!37282 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38204 () (_ BitVec 64))

(assert (=> b!81756 (= lt!38204 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38190 () (_ BitVec 64))

(assert (=> b!81756 (= lt!38190 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38198 () Unit!2341)

(assert (=> b!81756 (= lt!38198 (addApplyDifferent!56 lt!38208 lt!38204 (minValue!2189 newMap!16) lt!38190))))

(assert (=> b!81756 (= (apply!80 (+!106 lt!38208 (tuple2!2181 lt!38204 (minValue!2189 newMap!16))) lt!38190) (apply!80 lt!38208 lt!38190))))

(declare-fun lt!38194 () Unit!2341)

(assert (=> b!81756 (= lt!38194 lt!38198)))

(declare-fun lt!38205 () ListLongMap!1451)

(assert (=> b!81756 (= lt!38205 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37425 lt!37282 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38192 () (_ BitVec 64))

(assert (=> b!81756 (= lt!38192 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38195 () (_ BitVec 64))

(assert (=> b!81756 (= lt!38195 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38193 () Unit!2341)

(assert (=> b!81756 (= lt!38193 (addApplyDifferent!56 lt!38205 lt!38192 lt!37282 lt!38195))))

(assert (=> b!81756 (= (apply!80 (+!106 lt!38205 (tuple2!2181 lt!38192 lt!37282)) lt!38195) (apply!80 lt!38205 lt!38195))))

(declare-fun lt!38206 () Unit!2341)

(assert (=> b!81756 (= lt!38206 lt!38193)))

(declare-fun lt!38203 () ListLongMap!1451)

(assert (=> b!81756 (= lt!38203 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37425 lt!37282 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38201 () (_ BitVec 64))

(assert (=> b!81756 (= lt!38201 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38199 () (_ BitVec 64))

(assert (=> b!81756 (= lt!38199 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81756 (= lt!38187 (addApplyDifferent!56 lt!38203 lt!38201 (minValue!2189 newMap!16) lt!38199))))

(assert (=> b!81756 (= (apply!80 (+!106 lt!38203 (tuple2!2181 lt!38201 (minValue!2189 newMap!16))) lt!38199) (apply!80 lt!38203 lt!38199))))

(declare-fun b!81757 () Bool)

(declare-fun res!42467 () Bool)

(assert (=> b!81757 (=> (not res!42467) (not e!53338))))

(declare-fun e!53339 () Bool)

(assert (=> b!81757 (= res!42467 e!53339)))

(declare-fun res!42472 () Bool)

(assert (=> b!81757 (=> res!42472 e!53339)))

(declare-fun e!53346 () Bool)

(assert (=> b!81757 (= res!42472 (not e!53346))))

(declare-fun res!42470 () Bool)

(assert (=> b!81757 (=> (not res!42470) (not e!53346))))

(assert (=> b!81757 (= res!42470 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81758 () Bool)

(declare-fun e!53348 () Bool)

(assert (=> b!81758 (= e!53348 (= (apply!80 lt!38197 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!81759 () Bool)

(declare-fun e!53350 () Bool)

(assert (=> b!81759 (= e!53339 e!53350)))

(declare-fun res!42466 () Bool)

(assert (=> b!81759 (=> (not res!42466) (not e!53350))))

(assert (=> b!81759 (= res!42466 (contains!745 lt!38197 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81759 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun bm!7629 () Bool)

(declare-fun call!7637 () ListLongMap!1451)

(declare-fun call!7638 () ListLongMap!1451)

(assert (=> bm!7629 (= call!7637 call!7638)))

(declare-fun b!81760 () Bool)

(declare-fun e!53343 () Bool)

(assert (=> b!81760 (= e!53343 e!53348)))

(declare-fun res!42468 () Bool)

(declare-fun call!7634 () Bool)

(assert (=> b!81760 (= res!42468 call!7634)))

(assert (=> b!81760 (=> (not res!42468) (not e!53348))))

(declare-fun b!81761 () Bool)

(assert (=> b!81761 (= e!53346 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81762 () Bool)

(assert (=> b!81762 (= e!53343 (not call!7634))))

(declare-fun b!81763 () Bool)

(assert (=> b!81763 (= e!53344 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81764 () Bool)

(declare-fun e!53347 () Bool)

(declare-fun call!7636 () Bool)

(assert (=> b!81764 (= e!53347 (not call!7636))))

(declare-fun bm!7630 () Bool)

(declare-fun call!7635 () ListLongMap!1451)

(assert (=> bm!7630 (= call!7635 call!7637)))

(declare-fun b!81765 () Bool)

(declare-fun e!53341 () ListLongMap!1451)

(declare-fun call!7633 () ListLongMap!1451)

(assert (=> b!81765 (= e!53341 call!7633)))

(declare-fun bm!7631 () Bool)

(assert (=> bm!7631 (= call!7636 (contains!745 lt!38197 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81766 () Bool)

(assert (=> b!81766 (= e!53338 e!53343)))

(declare-fun c!12936 () Bool)

(assert (=> b!81766 (= c!12936 (not (= (bvand lt!37425 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7632 () Bool)

(assert (=> bm!7632 (= call!7638 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37425 lt!37282 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bm!7633 () Bool)

(declare-fun call!7632 () ListLongMap!1451)

(assert (=> bm!7633 (= call!7633 call!7632)))

(declare-fun b!81767 () Bool)

(declare-fun res!42465 () Bool)

(assert (=> b!81767 (=> (not res!42465) (not e!53338))))

(assert (=> b!81767 (= res!42465 e!53347)))

(declare-fun c!12939 () Bool)

(assert (=> b!81767 (= c!12939 (not (= (bvand lt!37425 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81768 () Bool)

(assert (=> b!81768 (= e!53349 (+!106 call!7632 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!81769 () Bool)

(assert (=> b!81769 (= e!53341 call!7635)))

(declare-fun bm!7634 () Bool)

(declare-fun c!12938 () Bool)

(assert (=> bm!7634 (= call!7632 (+!106 (ite c!12937 call!7638 (ite c!12938 call!7637 call!7635)) (ite (or c!12937 c!12938) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!81770 () Bool)

(assert (=> b!81770 (= e!53350 (= (apply!80 lt!38197 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81770 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_values!2276 newMap!16))))))

(assert (=> b!81770 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81771 () Bool)

(declare-fun c!12941 () Bool)

(assert (=> b!81771 (= c!12941 (and (not (= (bvand lt!37425 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!37425 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53340 () ListLongMap!1451)

(assert (=> b!81771 (= e!53340 e!53341)))

(declare-fun b!81772 () Bool)

(declare-fun e!53342 () Bool)

(assert (=> b!81772 (= e!53342 (= (apply!80 lt!38197 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37282))))

(declare-fun b!81773 () Bool)

(assert (=> b!81773 (= e!53347 e!53342)))

(declare-fun res!42469 () Bool)

(assert (=> b!81773 (= res!42469 call!7636)))

(assert (=> b!81773 (=> (not res!42469) (not e!53342))))

(declare-fun b!81774 () Bool)

(assert (=> b!81774 (= e!53349 e!53340)))

(assert (=> b!81774 (= c!12938 (and (not (= (bvand lt!37425 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!37425 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7635 () Bool)

(assert (=> bm!7635 (= call!7634 (contains!745 lt!38197 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81775 () Bool)

(assert (=> b!81775 (= e!53340 call!7633)))

(assert (= (and d!20339 c!12937) b!81768))

(assert (= (and d!20339 (not c!12937)) b!81774))

(assert (= (and b!81774 c!12938) b!81775))

(assert (= (and b!81774 (not c!12938)) b!81771))

(assert (= (and b!81771 c!12941) b!81765))

(assert (= (and b!81771 (not c!12941)) b!81769))

(assert (= (or b!81765 b!81769) bm!7630))

(assert (= (or b!81775 bm!7630) bm!7629))

(assert (= (or b!81775 b!81765) bm!7633))

(assert (= (or b!81768 bm!7629) bm!7632))

(assert (= (or b!81768 bm!7633) bm!7634))

(assert (= (and d!20339 res!42464) b!81763))

(assert (= (and d!20339 c!12940) b!81756))

(assert (= (and d!20339 (not c!12940)) b!81755))

(assert (= (and d!20339 res!42471) b!81757))

(assert (= (and b!81757 res!42470) b!81761))

(assert (= (and b!81757 (not res!42472)) b!81759))

(assert (= (and b!81759 res!42466) b!81770))

(assert (= (and b!81757 res!42467) b!81767))

(assert (= (and b!81767 c!12939) b!81773))

(assert (= (and b!81767 (not c!12939)) b!81764))

(assert (= (and b!81773 res!42469) b!81772))

(assert (= (or b!81773 b!81764) bm!7631))

(assert (= (and b!81767 res!42465) b!81766))

(assert (= (and b!81766 c!12936) b!81760))

(assert (= (and b!81766 (not c!12936)) b!81762))

(assert (= (and b!81760 res!42468) b!81758))

(assert (= (or b!81760 b!81762) bm!7635))

(declare-fun b_lambda!3637 () Bool)

(assert (=> (not b_lambda!3637) (not b!81770)))

(assert (=> b!81770 t!5185))

(declare-fun b_and!4979 () Bool)

(assert (= b_and!4975 (and (=> t!5185 result!2853) b_and!4979)))

(assert (=> b!81770 t!5187))

(declare-fun b_and!4981 () Bool)

(assert (= b_and!4977 (and (=> t!5187 result!2855) b_and!4981)))

(assert (=> b!81770 m!82265))

(assert (=> b!81770 m!82487))

(assert (=> b!81770 m!82265))

(declare-fun m!84099 () Bool)

(assert (=> b!81770 m!84099))

(assert (=> b!81770 m!82271))

(assert (=> b!81770 m!82487))

(assert (=> b!81770 m!82271))

(assert (=> b!81770 m!82491))

(declare-fun m!84101 () Bool)

(assert (=> bm!7631 m!84101))

(declare-fun m!84103 () Bool)

(assert (=> bm!7634 m!84103))

(assert (=> b!81756 m!82265))

(declare-fun m!84105 () Bool)

(assert (=> b!81756 m!84105))

(declare-fun m!84107 () Bool)

(assert (=> b!81756 m!84107))

(declare-fun m!84109 () Bool)

(assert (=> b!81756 m!84109))

(declare-fun m!84111 () Bool)

(assert (=> b!81756 m!84111))

(declare-fun m!84113 () Bool)

(assert (=> b!81756 m!84113))

(declare-fun m!84115 () Bool)

(assert (=> b!81756 m!84115))

(declare-fun m!84117 () Bool)

(assert (=> b!81756 m!84117))

(declare-fun m!84119 () Bool)

(assert (=> b!81756 m!84119))

(declare-fun m!84121 () Bool)

(assert (=> b!81756 m!84121))

(assert (=> b!81756 m!84107))

(assert (=> b!81756 m!84111))

(declare-fun m!84123 () Bool)

(assert (=> b!81756 m!84123))

(declare-fun m!84125 () Bool)

(assert (=> b!81756 m!84125))

(declare-fun m!84127 () Bool)

(assert (=> b!81756 m!84127))

(declare-fun m!84129 () Bool)

(assert (=> b!81756 m!84129))

(assert (=> b!81756 m!84129))

(declare-fun m!84131 () Bool)

(assert (=> b!81756 m!84131))

(assert (=> b!81756 m!84119))

(declare-fun m!84133 () Bool)

(assert (=> b!81756 m!84133))

(declare-fun m!84135 () Bool)

(assert (=> b!81756 m!84135))

(declare-fun m!84137 () Bool)

(assert (=> b!81758 m!84137))

(assert (=> b!81763 m!82265))

(assert (=> b!81763 m!82265))

(assert (=> b!81763 m!82313))

(declare-fun m!84139 () Bool)

(assert (=> bm!7635 m!84139))

(assert (=> bm!7632 m!84135))

(declare-fun m!84141 () Bool)

(assert (=> b!81768 m!84141))

(assert (=> b!81761 m!82265))

(assert (=> b!81761 m!82265))

(assert (=> b!81761 m!82313))

(assert (=> b!81759 m!82265))

(assert (=> b!81759 m!82265))

(declare-fun m!84143 () Bool)

(assert (=> b!81759 m!84143))

(assert (=> d!20339 m!82321))

(declare-fun m!84145 () Bool)

(assert (=> b!81772 m!84145))

(assert (=> d!19811 d!20339))

(assert (=> d!19811 d!19773))

(assert (=> d!19811 d!19953))

(declare-fun d!20341 () Bool)

(declare-fun e!53351 () Bool)

(assert (=> d!20341 e!53351))

(declare-fun res!42474 () Bool)

(assert (=> d!20341 (=> (not res!42474) (not e!53351))))

(declare-fun lt!38210 () ListLongMap!1451)

(assert (=> d!20341 (= res!42474 (contains!745 lt!38210 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282))))))

(declare-fun lt!38212 () List!1511)

(assert (=> d!20341 (= lt!38210 (ListLongMap!1452 lt!38212))))

(declare-fun lt!38211 () Unit!2341)

(declare-fun lt!38209 () Unit!2341)

(assert (=> d!20341 (= lt!38211 lt!38209)))

(assert (=> d!20341 (= (getValueByKey!138 lt!38212 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282))) (Some!143 (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282))))))

(assert (=> d!20341 (= lt!38209 (lemmaContainsTupThenGetReturnValue!55 lt!38212 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282))))))

(assert (=> d!20341 (= lt!38212 (insertStrictlySorted!58 (toList!741 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282))))))

(assert (=> d!20341 (= (+!106 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282)) lt!38210)))

(declare-fun b!81776 () Bool)

(declare-fun res!42473 () Bool)

(assert (=> b!81776 (=> (not res!42473) (not e!53351))))

(assert (=> b!81776 (= res!42473 (= (getValueByKey!138 (toList!741 lt!38210) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282))) (Some!143 (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282)))))))

(declare-fun b!81777 () Bool)

(assert (=> b!81777 (= e!53351 (contains!746 (toList!741 lt!38210) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282)))))

(assert (= (and d!20341 res!42474) b!81776))

(assert (= (and b!81776 res!42473) b!81777))

(declare-fun m!84147 () Bool)

(assert (=> d!20341 m!84147))

(declare-fun m!84149 () Bool)

(assert (=> d!20341 m!84149))

(declare-fun m!84151 () Bool)

(assert (=> d!20341 m!84151))

(declare-fun m!84153 () Bool)

(assert (=> d!20341 m!84153))

(declare-fun m!84155 () Bool)

(assert (=> b!81776 m!84155))

(declare-fun m!84157 () Bool)

(assert (=> b!81777 m!84157))

(assert (=> d!19811 d!20341))

(declare-fun d!20343 () Bool)

(declare-fun lt!38213 () Bool)

(assert (=> d!20343 (= lt!38213 (select (content!85 lt!37937) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(declare-fun e!53353 () Bool)

(assert (=> d!20343 (= lt!38213 e!53353)))

(declare-fun res!42475 () Bool)

(assert (=> d!20343 (=> (not res!42475) (not e!53353))))

(assert (=> d!20343 (= res!42475 ((_ is Cons!1507) lt!37937))))

(assert (=> d!20343 (= (contains!746 lt!37937 (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))) lt!38213)))

(declare-fun b!81778 () Bool)

(declare-fun e!53352 () Bool)

(assert (=> b!81778 (= e!53353 e!53352)))

(declare-fun res!42476 () Bool)

(assert (=> b!81778 (=> res!42476 e!53352)))

(assert (=> b!81778 (= res!42476 (= (h!2096 lt!37937) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(declare-fun b!81779 () Bool)

(assert (=> b!81779 (= e!53352 (contains!746 (t!5178 lt!37937) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(assert (= (and d!20343 res!42475) b!81778))

(assert (= (and b!81778 (not res!42476)) b!81779))

(declare-fun m!84159 () Bool)

(assert (=> d!20343 m!84159))

(declare-fun m!84161 () Bool)

(assert (=> d!20343 m!84161))

(declare-fun m!84163 () Bool)

(assert (=> b!81779 m!84163))

(assert (=> b!81121 d!20343))

(declare-fun d!20345 () Bool)

(assert (=> d!20345 (= (get!1182 (getValueByKey!138 (toList!741 lt!37493) lt!37489)) (v!2612 (getValueByKey!138 (toList!741 lt!37493) lt!37489)))))

(assert (=> d!19863 d!20345))

(declare-fun d!20347 () Bool)

(declare-fun c!12942 () Bool)

(assert (=> d!20347 (= c!12942 (and ((_ is Cons!1507) (toList!741 lt!37493)) (= (_1!1101 (h!2096 (toList!741 lt!37493))) lt!37489)))))

(declare-fun e!53354 () Option!144)

(assert (=> d!20347 (= (getValueByKey!138 (toList!741 lt!37493) lt!37489) e!53354)))

(declare-fun b!81781 () Bool)

(declare-fun e!53355 () Option!144)

(assert (=> b!81781 (= e!53354 e!53355)))

(declare-fun c!12943 () Bool)

(assert (=> b!81781 (= c!12943 (and ((_ is Cons!1507) (toList!741 lt!37493)) (not (= (_1!1101 (h!2096 (toList!741 lt!37493))) lt!37489))))))

(declare-fun b!81782 () Bool)

(assert (=> b!81782 (= e!53355 (getValueByKey!138 (t!5178 (toList!741 lt!37493)) lt!37489))))

(declare-fun b!81783 () Bool)

(assert (=> b!81783 (= e!53355 None!142)))

(declare-fun b!81780 () Bool)

(assert (=> b!81780 (= e!53354 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37493)))))))

(assert (= (and d!20347 c!12942) b!81780))

(assert (= (and d!20347 (not c!12942)) b!81781))

(assert (= (and b!81781 c!12943) b!81782))

(assert (= (and b!81781 (not c!12943)) b!81783))

(declare-fun m!84165 () Bool)

(assert (=> b!81782 m!84165))

(assert (=> d!19863 d!20347))

(declare-fun d!20349 () Bool)

(assert (=> d!20349 (= (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80661 d!20349))

(declare-fun d!20351 () Bool)

(declare-fun res!42477 () Bool)

(declare-fun e!53356 () Bool)

(assert (=> d!20351 (=> res!42477 e!53356)))

(assert (=> d!20351 (= res!42477 (and ((_ is Cons!1507) lt!37518) (= (_1!1101 (h!2096 lt!37518)) (_1!1101 lt!37283))))))

(assert (=> d!20351 (= (containsKey!142 lt!37518 (_1!1101 lt!37283)) e!53356)))

(declare-fun b!81784 () Bool)

(declare-fun e!53357 () Bool)

(assert (=> b!81784 (= e!53356 e!53357)))

(declare-fun res!42478 () Bool)

(assert (=> b!81784 (=> (not res!42478) (not e!53357))))

(assert (=> b!81784 (= res!42478 (and (or (not ((_ is Cons!1507) lt!37518)) (bvsle (_1!1101 (h!2096 lt!37518)) (_1!1101 lt!37283))) ((_ is Cons!1507) lt!37518) (bvslt (_1!1101 (h!2096 lt!37518)) (_1!1101 lt!37283))))))

(declare-fun b!81785 () Bool)

(assert (=> b!81785 (= e!53357 (containsKey!142 (t!5178 lt!37518) (_1!1101 lt!37283)))))

(assert (= (and d!20351 (not res!42477)) b!81784))

(assert (= (and b!81784 res!42478) b!81785))

(declare-fun m!84167 () Bool)

(assert (=> b!81785 m!84167))

(assert (=> b!80791 d!20351))

(assert (=> b!80940 d!20079))

(declare-fun d!20353 () Bool)

(declare-fun e!53358 () Bool)

(assert (=> d!20353 e!53358))

(declare-fun res!42480 () Bool)

(assert (=> d!20353 (=> (not res!42480) (not e!53358))))

(declare-fun lt!38215 () ListLongMap!1451)

(assert (=> d!20353 (= res!42480 (contains!745 lt!38215 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun lt!38217 () List!1511)

(assert (=> d!20353 (= lt!38215 (ListLongMap!1452 lt!38217))))

(declare-fun lt!38216 () Unit!2341)

(declare-fun lt!38214 () Unit!2341)

(assert (=> d!20353 (= lt!38216 lt!38214)))

(assert (=> d!20353 (= (getValueByKey!138 lt!38217 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20353 (= lt!38214 (lemmaContainsTupThenGetReturnValue!55 lt!38217 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20353 (= lt!38217 (insertStrictlySorted!58 (toList!741 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20353 (= (+!106 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) lt!38215)))

(declare-fun b!81786 () Bool)

(declare-fun res!42479 () Bool)

(assert (=> b!81786 (=> (not res!42479) (not e!53358))))

(assert (=> b!81786 (= res!42479 (= (getValueByKey!138 (toList!741 lt!38215) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!81787 () Bool)

(assert (=> b!81787 (= e!53358 (contains!746 (toList!741 lt!38215) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (= (and d!20353 res!42480) b!81786))

(assert (= (and b!81786 res!42479) b!81787))

(declare-fun m!84169 () Bool)

(assert (=> d!20353 m!84169))

(declare-fun m!84171 () Bool)

(assert (=> d!20353 m!84171))

(declare-fun m!84173 () Bool)

(assert (=> d!20353 m!84173))

(declare-fun m!84175 () Bool)

(assert (=> d!20353 m!84175))

(declare-fun m!84177 () Bool)

(assert (=> b!81786 m!84177))

(declare-fun m!84179 () Bool)

(assert (=> b!81787 m!84179))

(assert (=> d!19777 d!20353))

(declare-fun d!20355 () Bool)

(declare-fun e!53359 () Bool)

(assert (=> d!20355 e!53359))

(declare-fun res!42481 () Bool)

(assert (=> d!20355 (=> (not res!42481) (not e!53359))))

(assert (=> d!20355 (= res!42481 (and (bvsge (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000000) (bvslt (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (size!2143 lt!37761))))))

(declare-fun lt!38218 () Unit!2341)

(assert (=> d!20355 (= lt!38218 (choose!473 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (defaultEntry!2293 newMap!16)))))

(assert (=> d!20355 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20355 (= (lemmaValidKeyInArrayIsInListMap!90 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (defaultEntry!2293 newMap!16)) lt!38218)))

(declare-fun b!81788 () Bool)

(assert (=> b!81788 (= e!53359 (contains!745 (getCurrentListMap!435 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1901 lt!37761) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)))))))

(assert (= (and d!20355 res!42481) b!81788))

(declare-fun m!84181 () Bool)

(assert (=> d!20355 m!84181))

(assert (=> d!20355 m!82321))

(assert (=> b!81788 m!82553))

(declare-fun m!84183 () Bool)

(assert (=> b!81788 m!84183))

(assert (=> b!81788 m!82553))

(assert (=> b!81788 m!84183))

(declare-fun m!84185 () Bool)

(assert (=> b!81788 m!84185))

(assert (=> d!19777 d!20355))

(declare-fun d!20357 () Bool)

(declare-fun lt!38219 () (_ BitVec 32))

(assert (=> d!20357 (and (bvsge lt!38219 #b00000000000000000000000000000000) (bvsle lt!38219 (bvsub (size!2143 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!53360 () (_ BitVec 32))

(assert (=> d!20357 (= lt!38219 e!53360)))

(declare-fun c!12944 () Bool)

(assert (=> d!20357 (= c!12944 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(assert (=> d!20357 (and (bvsle #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2143 (_keys!3957 newMap!16)) (size!2143 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))))))))

(assert (=> d!20357 (= (arrayCountValidKeys!0 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) lt!38219)))

(declare-fun bm!7636 () Bool)

(declare-fun call!7639 () (_ BitVec 32))

(assert (=> bm!7636 (= call!7639 (arrayCountValidKeys!0 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81789 () Bool)

(declare-fun e!53361 () (_ BitVec 32))

(assert (=> b!81789 (= e!53361 call!7639)))

(declare-fun b!81790 () Bool)

(assert (=> b!81790 (= e!53360 #b00000000000000000000000000000000)))

(declare-fun b!81791 () Bool)

(assert (=> b!81791 (= e!53361 (bvadd #b00000000000000000000000000000001 call!7639))))

(declare-fun b!81792 () Bool)

(assert (=> b!81792 (= e!53360 e!53361)))

(declare-fun c!12945 () Bool)

(assert (=> b!81792 (= c!12945 (validKeyInArray!0 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!20357 c!12944) b!81790))

(assert (= (and d!20357 (not c!12944)) b!81792))

(assert (= (and b!81792 c!12945) b!81791))

(assert (= (and b!81792 (not c!12945)) b!81789))

(assert (= (or b!81791 b!81789) bm!7636))

(declare-fun m!84187 () Bool)

(assert (=> bm!7636 m!84187))

(declare-fun m!84189 () Bool)

(assert (=> b!81792 m!84189))

(assert (=> b!81792 m!84189))

(declare-fun m!84191 () Bool)

(assert (=> b!81792 m!84191))

(assert (=> d!19777 d!20357))

(declare-fun d!20359 () Bool)

(declare-fun e!53362 () Bool)

(assert (=> d!20359 e!53362))

(declare-fun res!42482 () Bool)

(assert (=> d!20359 (=> res!42482 e!53362)))

(declare-fun lt!38221 () Bool)

(assert (=> d!20359 (= res!42482 (not lt!38221))))

(declare-fun lt!38220 () Bool)

(assert (=> d!20359 (= lt!38221 lt!38220)))

(declare-fun lt!38223 () Unit!2341)

(declare-fun e!53363 () Unit!2341)

(assert (=> d!20359 (= lt!38223 e!53363)))

(declare-fun c!12946 () Bool)

(assert (=> d!20359 (= c!12946 lt!38220)))

(assert (=> d!20359 (= lt!38220 (containsKey!142 (toList!741 (getCurrentListMap!435 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)))))))

(assert (=> d!20359 (= (contains!745 (getCurrentListMap!435 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)))) lt!38221)))

(declare-fun b!81793 () Bool)

(declare-fun lt!38222 () Unit!2341)

(assert (=> b!81793 (= e!53363 lt!38222)))

(assert (=> b!81793 (= lt!38222 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 (getCurrentListMap!435 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)))))))

(assert (=> b!81793 (isDefined!91 (getValueByKey!138 (toList!741 (getCurrentListMap!435 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)))))))

(declare-fun b!81794 () Bool)

(declare-fun Unit!2392 () Unit!2341)

(assert (=> b!81794 (= e!53363 Unit!2392)))

(declare-fun b!81795 () Bool)

(assert (=> b!81795 (= e!53362 (isDefined!91 (getValueByKey!138 (toList!741 (getCurrentListMap!435 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427))))))))

(assert (= (and d!20359 c!12946) b!81793))

(assert (= (and d!20359 (not c!12946)) b!81794))

(assert (= (and d!20359 (not res!42482)) b!81795))

(assert (=> d!20359 m!82555))

(declare-fun m!84193 () Bool)

(assert (=> d!20359 m!84193))

(assert (=> b!81793 m!82555))

(declare-fun m!84195 () Bool)

(assert (=> b!81793 m!84195))

(assert (=> b!81793 m!82555))

(declare-fun m!84197 () Bool)

(assert (=> b!81793 m!84197))

(assert (=> b!81793 m!84197))

(declare-fun m!84199 () Bool)

(assert (=> b!81793 m!84199))

(assert (=> b!81795 m!82555))

(assert (=> b!81795 m!84197))

(assert (=> b!81795 m!84197))

(assert (=> b!81795 m!84199))

(assert (=> d!19777 d!20359))

(declare-fun d!20361 () Bool)

(declare-fun e!53366 () Bool)

(assert (=> d!20361 e!53366))

(declare-fun res!42485 () Bool)

(assert (=> d!20361 (=> (not res!42485) (not e!53366))))

(assert (=> d!20361 (= res!42485 (and (bvsge (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000000) (bvslt (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (size!2143 (_keys!3957 newMap!16)))))))

(declare-fun lt!38226 () Unit!2341)

(declare-fun choose!41 (array!3989 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1512) Unit!2341)

(assert (=> d!20361 (= lt!38226 (choose!41 (_keys!3957 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) lt!37762 lt!37746))))

(assert (=> d!20361 (bvslt (size!2143 (_keys!3957 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!20361 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3957 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) lt!37762 lt!37746) lt!38226)))

(declare-fun b!81798 () Bool)

(assert (=> b!81798 (= e!53366 (arrayNoDuplicates!0 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) lt!37762 lt!37746))))

(assert (= (and d!20361 res!42485) b!81798))

(assert (=> d!20361 m!81811))

(declare-fun m!84201 () Bool)

(assert (=> d!20361 m!84201))

(assert (=> b!81798 m!82559))

(assert (=> b!81798 m!82575))

(assert (=> d!19777 d!20361))

(assert (=> d!19777 d!20119))

(assert (=> d!19777 d!19773))

(declare-fun d!20363 () Bool)

(assert (=> d!20363 (arrayContainsKey!0 lt!37758 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!38229 () Unit!2341)

(declare-fun choose!13 (array!3989 (_ BitVec 64) (_ BitVec 32)) Unit!2341)

(assert (=> d!20363 (= lt!38229 (choose!13 lt!37758 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427))))))

(assert (=> d!20363 (bvsge (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000000)))

(assert (=> d!20363 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!37758 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427))) lt!38229)))

(declare-fun bs!3465 () Bool)

(assert (= bs!3465 d!20363))

(assert (=> bs!3465 m!81811))

(assert (=> bs!3465 m!82549))

(assert (=> bs!3465 m!81811))

(declare-fun m!84203 () Bool)

(assert (=> bs!3465 m!84203))

(assert (=> d!19777 d!20363))

(assert (=> d!19777 d!19737))

(assert (=> d!19777 d!19923))

(declare-fun d!20365 () Bool)

(declare-fun e!53369 () Bool)

(assert (=> d!20365 e!53369))

(declare-fun res!42488 () Bool)

(assert (=> d!20365 (=> (not res!42488) (not e!53369))))

(assert (=> d!20365 (= res!42488 (and (bvsge (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000000) (bvslt (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (size!2143 (_keys!3957 newMap!16)))))))

(declare-fun lt!38232 () Unit!2341)

(declare-fun choose!102 ((_ BitVec 64) array!3989 (_ BitVec 32) (_ BitVec 32)) Unit!2341)

(assert (=> d!20365 (= lt!38232 (choose!102 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (mask!6299 newMap!16)))))

(assert (=> d!20365 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20365 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (mask!6299 newMap!16)) lt!38232)))

(declare-fun b!81801 () Bool)

(assert (=> b!81801 (= e!53369 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (mask!6299 newMap!16)))))

(assert (= (and d!20365 res!42488) b!81801))

(assert (=> d!20365 m!81811))

(declare-fun m!84205 () Bool)

(assert (=> d!20365 m!84205))

(assert (=> d!20365 m!82321))

(assert (=> b!81801 m!82559))

(assert (=> b!81801 m!82577))

(assert (=> d!19777 d!20365))

(declare-fun d!20367 () Bool)

(declare-fun res!42489 () Bool)

(declare-fun e!53370 () Bool)

(assert (=> d!20367 (=> res!42489 e!53370)))

(assert (=> d!20367 (= res!42489 (= (select (arr!1901 lt!37758) #b00000000000000000000000000000000) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!20367 (= (arrayContainsKey!0 lt!37758 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000) e!53370)))

(declare-fun b!81802 () Bool)

(declare-fun e!53371 () Bool)

(assert (=> b!81802 (= e!53370 e!53371)))

(declare-fun res!42490 () Bool)

(assert (=> b!81802 (=> (not res!42490) (not e!53371))))

(assert (=> b!81802 (= res!42490 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2143 lt!37758)))))

(declare-fun b!81803 () Bool)

(assert (=> b!81803 (= e!53371 (arrayContainsKey!0 lt!37758 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!20367 (not res!42489)) b!81802))

(assert (= (and b!81802 res!42490) b!81803))

(declare-fun m!84207 () Bool)

(assert (=> d!20367 m!84207))

(assert (=> b!81803 m!81811))

(declare-fun m!84209 () Bool)

(assert (=> b!81803 m!84209))

(assert (=> d!19777 d!20367))

(declare-fun d!20369 () Bool)

(declare-fun e!53372 () Bool)

(assert (=> d!20369 e!53372))

(declare-fun res!42498 () Bool)

(assert (=> d!20369 (=> (not res!42498) (not e!53372))))

(assert (=> d!20369 (= res!42498 (or (bvsge #b00000000000000000000000000000000 (size!2143 lt!37761)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 lt!37761)))))))

(declare-fun lt!38243 () ListLongMap!1451)

(declare-fun lt!38234 () ListLongMap!1451)

(assert (=> d!20369 (= lt!38243 lt!38234)))

(declare-fun lt!38246 () Unit!2341)

(declare-fun e!53379 () Unit!2341)

(assert (=> d!20369 (= lt!38246 e!53379)))

(declare-fun c!12951 () Bool)

(declare-fun e!53378 () Bool)

(assert (=> d!20369 (= c!12951 e!53378)))

(declare-fun res!42491 () Bool)

(assert (=> d!20369 (=> (not res!42491) (not e!53378))))

(assert (=> d!20369 (= res!42491 (bvslt #b00000000000000000000000000000000 (size!2143 lt!37761)))))

(declare-fun e!53383 () ListLongMap!1451)

(assert (=> d!20369 (= lt!38234 e!53383)))

(declare-fun c!12948 () Bool)

(assert (=> d!20369 (= c!12948 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20369 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20369 (= (getCurrentListMap!435 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38243)))

(declare-fun b!81804 () Bool)

(declare-fun Unit!2393 () Unit!2341)

(assert (=> b!81804 (= e!53379 Unit!2393)))

(declare-fun b!81805 () Bool)

(declare-fun lt!38233 () Unit!2341)

(assert (=> b!81805 (= e!53379 lt!38233)))

(declare-fun lt!38242 () ListLongMap!1451)

(assert (=> b!81805 (= lt!38242 (getCurrentListMapNoExtraKeys!71 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38248 () (_ BitVec 64))

(assert (=> b!81805 (= lt!38248 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38235 () (_ BitVec 64))

(assert (=> b!81805 (= lt!38235 (select (arr!1901 lt!37761) #b00000000000000000000000000000000))))

(declare-fun lt!38237 () Unit!2341)

(assert (=> b!81805 (= lt!38237 (addStillContains!56 lt!38242 lt!38248 (zeroValue!2189 newMap!16) lt!38235))))

(assert (=> b!81805 (contains!745 (+!106 lt!38242 (tuple2!2181 lt!38248 (zeroValue!2189 newMap!16))) lt!38235)))

(declare-fun lt!38253 () Unit!2341)

(assert (=> b!81805 (= lt!38253 lt!38237)))

(declare-fun lt!38254 () ListLongMap!1451)

(assert (=> b!81805 (= lt!38254 (getCurrentListMapNoExtraKeys!71 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38250 () (_ BitVec 64))

(assert (=> b!81805 (= lt!38250 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38236 () (_ BitVec 64))

(assert (=> b!81805 (= lt!38236 (select (arr!1901 lt!37761) #b00000000000000000000000000000000))))

(declare-fun lt!38244 () Unit!2341)

(assert (=> b!81805 (= lt!38244 (addApplyDifferent!56 lt!38254 lt!38250 (minValue!2189 newMap!16) lt!38236))))

(assert (=> b!81805 (= (apply!80 (+!106 lt!38254 (tuple2!2181 lt!38250 (minValue!2189 newMap!16))) lt!38236) (apply!80 lt!38254 lt!38236))))

(declare-fun lt!38240 () Unit!2341)

(assert (=> b!81805 (= lt!38240 lt!38244)))

(declare-fun lt!38251 () ListLongMap!1451)

(assert (=> b!81805 (= lt!38251 (getCurrentListMapNoExtraKeys!71 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38238 () (_ BitVec 64))

(assert (=> b!81805 (= lt!38238 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38241 () (_ BitVec 64))

(assert (=> b!81805 (= lt!38241 (select (arr!1901 lt!37761) #b00000000000000000000000000000000))))

(declare-fun lt!38239 () Unit!2341)

(assert (=> b!81805 (= lt!38239 (addApplyDifferent!56 lt!38251 lt!38238 (zeroValue!2189 newMap!16) lt!38241))))

(assert (=> b!81805 (= (apply!80 (+!106 lt!38251 (tuple2!2181 lt!38238 (zeroValue!2189 newMap!16))) lt!38241) (apply!80 lt!38251 lt!38241))))

(declare-fun lt!38252 () Unit!2341)

(assert (=> b!81805 (= lt!38252 lt!38239)))

(declare-fun lt!38249 () ListLongMap!1451)

(assert (=> b!81805 (= lt!38249 (getCurrentListMapNoExtraKeys!71 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38247 () (_ BitVec 64))

(assert (=> b!81805 (= lt!38247 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38245 () (_ BitVec 64))

(assert (=> b!81805 (= lt!38245 (select (arr!1901 lt!37761) #b00000000000000000000000000000000))))

(assert (=> b!81805 (= lt!38233 (addApplyDifferent!56 lt!38249 lt!38247 (minValue!2189 newMap!16) lt!38245))))

(assert (=> b!81805 (= (apply!80 (+!106 lt!38249 (tuple2!2181 lt!38247 (minValue!2189 newMap!16))) lt!38245) (apply!80 lt!38249 lt!38245))))

(declare-fun b!81806 () Bool)

(declare-fun res!42494 () Bool)

(assert (=> b!81806 (=> (not res!42494) (not e!53372))))

(declare-fun e!53373 () Bool)

(assert (=> b!81806 (= res!42494 e!53373)))

(declare-fun res!42499 () Bool)

(assert (=> b!81806 (=> res!42499 e!53373)))

(declare-fun e!53380 () Bool)

(assert (=> b!81806 (= res!42499 (not e!53380))))

(declare-fun res!42497 () Bool)

(assert (=> b!81806 (=> (not res!42497) (not e!53380))))

(assert (=> b!81806 (= res!42497 (bvslt #b00000000000000000000000000000000 (size!2143 lt!37761)))))

(declare-fun b!81807 () Bool)

(declare-fun e!53382 () Bool)

(assert (=> b!81807 (= e!53382 (= (apply!80 lt!38243 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!81808 () Bool)

(declare-fun e!53384 () Bool)

(assert (=> b!81808 (= e!53373 e!53384)))

(declare-fun res!42493 () Bool)

(assert (=> b!81808 (=> (not res!42493) (not e!53384))))

(assert (=> b!81808 (= res!42493 (contains!745 lt!38243 (select (arr!1901 lt!37761) #b00000000000000000000000000000000)))))

(assert (=> b!81808 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 lt!37761)))))

(declare-fun bm!7637 () Bool)

(declare-fun call!7645 () ListLongMap!1451)

(declare-fun call!7646 () ListLongMap!1451)

(assert (=> bm!7637 (= call!7645 call!7646)))

(declare-fun b!81809 () Bool)

(declare-fun e!53377 () Bool)

(assert (=> b!81809 (= e!53377 e!53382)))

(declare-fun res!42495 () Bool)

(declare-fun call!7642 () Bool)

(assert (=> b!81809 (= res!42495 call!7642)))

(assert (=> b!81809 (=> (not res!42495) (not e!53382))))

(declare-fun b!81810 () Bool)

(assert (=> b!81810 (= e!53380 (validKeyInArray!0 (select (arr!1901 lt!37761) #b00000000000000000000000000000000)))))

(declare-fun b!81811 () Bool)

(assert (=> b!81811 (= e!53377 (not call!7642))))

(declare-fun b!81812 () Bool)

(assert (=> b!81812 (= e!53378 (validKeyInArray!0 (select (arr!1901 lt!37761) #b00000000000000000000000000000000)))))

(declare-fun b!81813 () Bool)

(declare-fun e!53381 () Bool)

(declare-fun call!7644 () Bool)

(assert (=> b!81813 (= e!53381 (not call!7644))))

(declare-fun bm!7638 () Bool)

(declare-fun call!7643 () ListLongMap!1451)

(assert (=> bm!7638 (= call!7643 call!7645)))

(declare-fun b!81814 () Bool)

(declare-fun e!53375 () ListLongMap!1451)

(declare-fun call!7641 () ListLongMap!1451)

(assert (=> b!81814 (= e!53375 call!7641)))

(declare-fun bm!7639 () Bool)

(assert (=> bm!7639 (= call!7644 (contains!745 lt!38243 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81815 () Bool)

(assert (=> b!81815 (= e!53372 e!53377)))

(declare-fun c!12947 () Bool)

(assert (=> b!81815 (= c!12947 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7640 () Bool)

(assert (=> bm!7640 (= call!7646 (getCurrentListMapNoExtraKeys!71 lt!37761 lt!37756 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bm!7641 () Bool)

(declare-fun call!7640 () ListLongMap!1451)

(assert (=> bm!7641 (= call!7641 call!7640)))

(declare-fun b!81816 () Bool)

(declare-fun res!42492 () Bool)

(assert (=> b!81816 (=> (not res!42492) (not e!53372))))

(assert (=> b!81816 (= res!42492 e!53381)))

(declare-fun c!12950 () Bool)

(assert (=> b!81816 (= c!12950 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81817 () Bool)

(assert (=> b!81817 (= e!53383 (+!106 call!7640 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!81818 () Bool)

(assert (=> b!81818 (= e!53375 call!7643)))

(declare-fun c!12949 () Bool)

(declare-fun bm!7642 () Bool)

(assert (=> bm!7642 (= call!7640 (+!106 (ite c!12948 call!7646 (ite c!12949 call!7645 call!7643)) (ite (or c!12948 c!12949) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!81819 () Bool)

(assert (=> b!81819 (= e!53384 (= (apply!80 lt!38243 (select (arr!1901 lt!37761) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 lt!37756) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81819 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 lt!37756)))))

(assert (=> b!81819 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 lt!37761)))))

(declare-fun b!81820 () Bool)

(declare-fun c!12952 () Bool)

(assert (=> b!81820 (= c!12952 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53374 () ListLongMap!1451)

(assert (=> b!81820 (= e!53374 e!53375)))

(declare-fun b!81821 () Bool)

(declare-fun e!53376 () Bool)

(assert (=> b!81821 (= e!53376 (= (apply!80 lt!38243 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun b!81822 () Bool)

(assert (=> b!81822 (= e!53381 e!53376)))

(declare-fun res!42496 () Bool)

(assert (=> b!81822 (= res!42496 call!7644)))

(assert (=> b!81822 (=> (not res!42496) (not e!53376))))

(declare-fun b!81823 () Bool)

(assert (=> b!81823 (= e!53383 e!53374)))

(assert (=> b!81823 (= c!12949 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7643 () Bool)

(assert (=> bm!7643 (= call!7642 (contains!745 lt!38243 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81824 () Bool)

(assert (=> b!81824 (= e!53374 call!7641)))

(assert (= (and d!20369 c!12948) b!81817))

(assert (= (and d!20369 (not c!12948)) b!81823))

(assert (= (and b!81823 c!12949) b!81824))

(assert (= (and b!81823 (not c!12949)) b!81820))

(assert (= (and b!81820 c!12952) b!81814))

(assert (= (and b!81820 (not c!12952)) b!81818))

(assert (= (or b!81814 b!81818) bm!7638))

(assert (= (or b!81824 bm!7638) bm!7637))

(assert (= (or b!81824 b!81814) bm!7641))

(assert (= (or b!81817 bm!7637) bm!7640))

(assert (= (or b!81817 bm!7641) bm!7642))

(assert (= (and d!20369 res!42491) b!81812))

(assert (= (and d!20369 c!12951) b!81805))

(assert (= (and d!20369 (not c!12951)) b!81804))

(assert (= (and d!20369 res!42498) b!81806))

(assert (= (and b!81806 res!42497) b!81810))

(assert (= (and b!81806 (not res!42499)) b!81808))

(assert (= (and b!81808 res!42493) b!81819))

(assert (= (and b!81806 res!42494) b!81816))

(assert (= (and b!81816 c!12950) b!81822))

(assert (= (and b!81816 (not c!12950)) b!81813))

(assert (= (and b!81822 res!42496) b!81821))

(assert (= (or b!81822 b!81813) bm!7639))

(assert (= (and b!81816 res!42492) b!81815))

(assert (= (and b!81815 c!12947) b!81809))

(assert (= (and b!81815 (not c!12947)) b!81811))

(assert (= (and b!81809 res!42495) b!81807))

(assert (= (or b!81809 b!81811) bm!7643))

(declare-fun b_lambda!3639 () Bool)

(assert (=> (not b_lambda!3639) (not b!81819)))

(assert (=> b!81819 t!5185))

(declare-fun b_and!4983 () Bool)

(assert (= b_and!4979 (and (=> t!5185 result!2853) b_and!4983)))

(assert (=> b!81819 t!5187))

(declare-fun b_and!4985 () Bool)

(assert (= b_and!4981 (and (=> t!5187 result!2855) b_and!4985)))

(declare-fun m!84211 () Bool)

(assert (=> b!81819 m!84211))

(declare-fun m!84213 () Bool)

(assert (=> b!81819 m!84213))

(assert (=> b!81819 m!84211))

(declare-fun m!84215 () Bool)

(assert (=> b!81819 m!84215))

(assert (=> b!81819 m!82271))

(assert (=> b!81819 m!84213))

(assert (=> b!81819 m!82271))

(declare-fun m!84217 () Bool)

(assert (=> b!81819 m!84217))

(declare-fun m!84219 () Bool)

(assert (=> bm!7639 m!84219))

(declare-fun m!84221 () Bool)

(assert (=> bm!7642 m!84221))

(assert (=> b!81805 m!84211))

(declare-fun m!84223 () Bool)

(assert (=> b!81805 m!84223))

(declare-fun m!84225 () Bool)

(assert (=> b!81805 m!84225))

(declare-fun m!84227 () Bool)

(assert (=> b!81805 m!84227))

(declare-fun m!84229 () Bool)

(assert (=> b!81805 m!84229))

(declare-fun m!84231 () Bool)

(assert (=> b!81805 m!84231))

(declare-fun m!84233 () Bool)

(assert (=> b!81805 m!84233))

(declare-fun m!84235 () Bool)

(assert (=> b!81805 m!84235))

(declare-fun m!84237 () Bool)

(assert (=> b!81805 m!84237))

(declare-fun m!84239 () Bool)

(assert (=> b!81805 m!84239))

(assert (=> b!81805 m!84225))

(assert (=> b!81805 m!84229))

(declare-fun m!84241 () Bool)

(assert (=> b!81805 m!84241))

(declare-fun m!84243 () Bool)

(assert (=> b!81805 m!84243))

(declare-fun m!84245 () Bool)

(assert (=> b!81805 m!84245))

(declare-fun m!84247 () Bool)

(assert (=> b!81805 m!84247))

(assert (=> b!81805 m!84247))

(declare-fun m!84249 () Bool)

(assert (=> b!81805 m!84249))

(assert (=> b!81805 m!84237))

(declare-fun m!84251 () Bool)

(assert (=> b!81805 m!84251))

(declare-fun m!84253 () Bool)

(assert (=> b!81805 m!84253))

(declare-fun m!84255 () Bool)

(assert (=> b!81807 m!84255))

(assert (=> b!81812 m!84211))

(assert (=> b!81812 m!84211))

(declare-fun m!84257 () Bool)

(assert (=> b!81812 m!84257))

(declare-fun m!84259 () Bool)

(assert (=> bm!7643 m!84259))

(assert (=> bm!7640 m!84253))

(declare-fun m!84261 () Bool)

(assert (=> b!81817 m!84261))

(assert (=> b!81810 m!84211))

(assert (=> b!81810 m!84211))

(assert (=> b!81810 m!84257))

(assert (=> b!81808 m!84211))

(assert (=> b!81808 m!84211))

(declare-fun m!84263 () Bool)

(assert (=> b!81808 m!84263))

(assert (=> d!20369 m!82321))

(declare-fun m!84265 () Bool)

(assert (=> b!81821 m!84265))

(assert (=> d!19777 d!20369))

(declare-fun b!81835 () Bool)

(declare-fun e!53390 () Bool)

(assert (=> b!81835 (= e!53390 (bvslt (size!2143 (_keys!3957 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!20371 () Bool)

(declare-fun e!53389 () Bool)

(assert (=> d!20371 e!53389))

(declare-fun res!42511 () Bool)

(assert (=> d!20371 (=> (not res!42511) (not e!53389))))

(assert (=> d!20371 (= res!42511 (and (bvsge (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000000) (bvslt (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (size!2143 (_keys!3957 newMap!16)))))))

(declare-fun lt!38257 () Unit!2341)

(declare-fun choose!1 (array!3989 (_ BitVec 32) (_ BitVec 64)) Unit!2341)

(assert (=> d!20371 (= lt!38257 (choose!1 (_keys!3957 newMap!16) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!20371 e!53390))

(declare-fun res!42510 () Bool)

(assert (=> d!20371 (=> (not res!42510) (not e!53390))))

(assert (=> d!20371 (= res!42510 (and (bvsge (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000000) (bvslt (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (size!2143 (_keys!3957 newMap!16)))))))

(assert (=> d!20371 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3957 newMap!16) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) lt!38257)))

(declare-fun b!81833 () Bool)

(declare-fun res!42508 () Bool)

(assert (=> b!81833 (=> (not res!42508) (not e!53390))))

(assert (=> b!81833 (= res!42508 (not (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427))))))))

(declare-fun b!81834 () Bool)

(declare-fun res!42509 () Bool)

(assert (=> b!81834 (=> (not res!42509) (not e!53390))))

(assert (=> b!81834 (= res!42509 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!81836 () Bool)

(assert (=> b!81836 (= e!53389 (= (arrayCountValidKeys!0 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3957 newMap!16) #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!20371 res!42510) b!81833))

(assert (= (and b!81833 res!42508) b!81834))

(assert (= (and b!81834 res!42509) b!81835))

(assert (= (and d!20371 res!42511) b!81836))

(assert (=> d!20371 m!81811))

(declare-fun m!84267 () Bool)

(assert (=> d!20371 m!84267))

(declare-fun m!84269 () Bool)

(assert (=> b!81833 m!84269))

(assert (=> b!81833 m!84269))

(declare-fun m!84271 () Bool)

(assert (=> b!81833 m!84271))

(assert (=> b!81834 m!81811))

(assert (=> b!81834 m!82195))

(assert (=> b!81836 m!82559))

(assert (=> b!81836 m!82563))

(assert (=> b!81836 m!82179))

(assert (=> d!19777 d!20371))

(declare-fun b!81837 () Bool)

(declare-fun e!53392 () Bool)

(declare-fun call!7647 () Bool)

(assert (=> b!81837 (= e!53392 call!7647)))

(declare-fun b!81838 () Bool)

(declare-fun e!53391 () Bool)

(assert (=> b!81838 (= e!53391 call!7647)))

(declare-fun bm!7644 () Bool)

(assert (=> bm!7644 (= call!7647 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (mask!6299 newMap!16)))))

(declare-fun b!81839 () Bool)

(assert (=> b!81839 (= e!53392 e!53391)))

(declare-fun lt!38260 () (_ BitVec 64))

(assert (=> b!81839 (= lt!38260 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!38259 () Unit!2341)

(assert (=> b!81839 (= lt!38259 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) lt!38260 #b00000000000000000000000000000000))))

(assert (=> b!81839 (arrayContainsKey!0 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) lt!38260 #b00000000000000000000000000000000)))

(declare-fun lt!38258 () Unit!2341)

(assert (=> b!81839 (= lt!38258 lt!38259)))

(declare-fun res!42513 () Bool)

(assert (=> b!81839 (= res!42513 (= (seekEntryOrOpen!0 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000) (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (mask!6299 newMap!16)) (Found!241 #b00000000000000000000000000000000)))))

(assert (=> b!81839 (=> (not res!42513) (not e!53391))))

(declare-fun d!20373 () Bool)

(declare-fun res!42512 () Bool)

(declare-fun e!53393 () Bool)

(assert (=> d!20373 (=> res!42512 e!53393)))

(assert (=> d!20373 (= res!42512 (bvsge #b00000000000000000000000000000000 (size!2143 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))))))))

(assert (=> d!20373 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (mask!6299 newMap!16)) e!53393)))

(declare-fun b!81840 () Bool)

(assert (=> b!81840 (= e!53393 e!53392)))

(declare-fun c!12953 () Bool)

(assert (=> b!81840 (= c!12953 (validKeyInArray!0 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!20373 (not res!42512)) b!81840))

(assert (= (and b!81840 c!12953) b!81839))

(assert (= (and b!81840 (not c!12953)) b!81837))

(assert (= (and b!81839 res!42513) b!81838))

(assert (= (or b!81838 b!81837) bm!7644))

(declare-fun m!84273 () Bool)

(assert (=> bm!7644 m!84273))

(assert (=> b!81839 m!84189))

(declare-fun m!84275 () Bool)

(assert (=> b!81839 m!84275))

(declare-fun m!84277 () Bool)

(assert (=> b!81839 m!84277))

(assert (=> b!81839 m!84189))

(declare-fun m!84279 () Bool)

(assert (=> b!81839 m!84279))

(assert (=> b!81840 m!84189))

(assert (=> b!81840 m!84189))

(assert (=> b!81840 m!84191))

(assert (=> d!19777 d!20373))

(declare-fun lt!38261 () (_ BitVec 32))

(declare-fun d!20375 () Bool)

(assert (=> d!20375 (and (bvsge lt!38261 #b00000000000000000000000000000000) (bvsle lt!38261 (bvsub (size!2143 lt!37769) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)))))))

(declare-fun e!53394 () (_ BitVec 32))

(assert (=> d!20375 (= lt!38261 e!53394)))

(declare-fun c!12954 () Bool)

(assert (=> d!20375 (= c!12954 (bvsge (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (bvadd (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000001)))))

(assert (=> d!20375 (and (bvsle (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (bvadd (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000001)) (bvsge (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000001) (size!2143 lt!37769)))))

(assert (=> d!20375 (= (arrayCountValidKeys!0 lt!37769 (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (bvadd (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000001)) lt!38261)))

(declare-fun call!7648 () (_ BitVec 32))

(declare-fun bm!7645 () Bool)

(assert (=> bm!7645 (= call!7648 (arrayCountValidKeys!0 lt!37769 (bvadd (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000001) (bvadd (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000001)))))

(declare-fun b!81841 () Bool)

(declare-fun e!53395 () (_ BitVec 32))

(assert (=> b!81841 (= e!53395 call!7648)))

(declare-fun b!81842 () Bool)

(assert (=> b!81842 (= e!53394 #b00000000000000000000000000000000)))

(declare-fun b!81843 () Bool)

(assert (=> b!81843 (= e!53395 (bvadd #b00000000000000000000000000000001 call!7648))))

(declare-fun b!81844 () Bool)

(assert (=> b!81844 (= e!53394 e!53395)))

(declare-fun c!12955 () Bool)

(assert (=> b!81844 (= c!12955 (validKeyInArray!0 (select (arr!1901 lt!37769) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)))))))

(assert (= (and d!20375 c!12954) b!81842))

(assert (= (and d!20375 (not c!12954)) b!81844))

(assert (= (and b!81844 c!12955) b!81843))

(assert (= (and b!81844 (not c!12955)) b!81841))

(assert (= (or b!81843 b!81841) bm!7645))

(declare-fun m!84281 () Bool)

(assert (=> bm!7645 m!84281))

(declare-fun m!84283 () Bool)

(assert (=> b!81844 m!84283))

(assert (=> b!81844 m!84283))

(declare-fun m!84285 () Bool)

(assert (=> b!81844 m!84285))

(assert (=> d!19777 d!20375))

(assert (=> d!19777 d!19685))

(declare-fun d!20377 () Bool)

(assert (=> d!20377 (= (arrayCountValidKeys!0 lt!37769 (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (bvadd (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!38264 () Unit!2341)

(declare-fun choose!2 (array!3989 (_ BitVec 32)) Unit!2341)

(assert (=> d!20377 (= lt!38264 (choose!2 lt!37769 (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427))))))

(declare-fun e!53398 () Bool)

(assert (=> d!20377 e!53398))

(declare-fun res!42518 () Bool)

(assert (=> d!20377 (=> (not res!42518) (not e!53398))))

(assert (=> d!20377 (= res!42518 (and (bvsge (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000000) (bvslt (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (size!2143 lt!37769))))))

(assert (=> d!20377 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!37769 (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427))) lt!38264)))

(declare-fun b!81849 () Bool)

(declare-fun res!42519 () Bool)

(assert (=> b!81849 (=> (not res!42519) (not e!53398))))

(assert (=> b!81849 (= res!42519 (validKeyInArray!0 (select (arr!1901 lt!37769) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)))))))

(declare-fun b!81850 () Bool)

(assert (=> b!81850 (= e!53398 (bvslt (size!2143 lt!37769) #b01111111111111111111111111111111))))

(assert (= (and d!20377 res!42518) b!81849))

(assert (= (and b!81849 res!42519) b!81850))

(assert (=> d!20377 m!82581))

(declare-fun m!84287 () Bool)

(assert (=> d!20377 m!84287))

(assert (=> b!81849 m!84283))

(assert (=> b!81849 m!84283))

(assert (=> b!81849 m!84285))

(assert (=> d!19777 d!20377))

(declare-fun d!20379 () Bool)

(declare-fun e!53399 () Bool)

(assert (=> d!20379 e!53399))

(declare-fun res!42527 () Bool)

(assert (=> d!20379 (=> (not res!42527) (not e!53399))))

(assert (=> d!20379 (= res!42527 (or (bvsge #b00000000000000000000000000000000 (size!2143 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))))))))))

(declare-fun lt!38275 () ListLongMap!1451)

(declare-fun lt!38266 () ListLongMap!1451)

(assert (=> d!20379 (= lt!38275 lt!38266)))

(declare-fun lt!38278 () Unit!2341)

(declare-fun e!53406 () Unit!2341)

(assert (=> d!20379 (= lt!38278 e!53406)))

(declare-fun c!12960 () Bool)

(declare-fun e!53405 () Bool)

(assert (=> d!20379 (= c!12960 e!53405)))

(declare-fun res!42520 () Bool)

(assert (=> d!20379 (=> (not res!42520) (not e!53405))))

(assert (=> d!20379 (= res!42520 (bvslt #b00000000000000000000000000000000 (size!2143 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))))))))

(declare-fun e!53410 () ListLongMap!1451)

(assert (=> d!20379 (= lt!38266 e!53410)))

(declare-fun c!12957 () Bool)

(assert (=> d!20379 (= c!12957 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20379 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20379 (= (getCurrentListMap!435 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38275)))

(declare-fun b!81851 () Bool)

(declare-fun Unit!2394 () Unit!2341)

(assert (=> b!81851 (= e!53406 Unit!2394)))

(declare-fun b!81852 () Bool)

(declare-fun lt!38265 () Unit!2341)

(assert (=> b!81852 (= e!53406 lt!38265)))

(declare-fun lt!38274 () ListLongMap!1451)

(assert (=> b!81852 (= lt!38274 (getCurrentListMapNoExtraKeys!71 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38280 () (_ BitVec 64))

(assert (=> b!81852 (= lt!38280 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38267 () (_ BitVec 64))

(assert (=> b!81852 (= lt!38267 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!38269 () Unit!2341)

(assert (=> b!81852 (= lt!38269 (addStillContains!56 lt!38274 lt!38280 (zeroValue!2189 newMap!16) lt!38267))))

(assert (=> b!81852 (contains!745 (+!106 lt!38274 (tuple2!2181 lt!38280 (zeroValue!2189 newMap!16))) lt!38267)))

(declare-fun lt!38285 () Unit!2341)

(assert (=> b!81852 (= lt!38285 lt!38269)))

(declare-fun lt!38286 () ListLongMap!1451)

(assert (=> b!81852 (= lt!38286 (getCurrentListMapNoExtraKeys!71 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38282 () (_ BitVec 64))

(assert (=> b!81852 (= lt!38282 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38268 () (_ BitVec 64))

(assert (=> b!81852 (= lt!38268 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!38276 () Unit!2341)

(assert (=> b!81852 (= lt!38276 (addApplyDifferent!56 lt!38286 lt!38282 (minValue!2189 newMap!16) lt!38268))))

(assert (=> b!81852 (= (apply!80 (+!106 lt!38286 (tuple2!2181 lt!38282 (minValue!2189 newMap!16))) lt!38268) (apply!80 lt!38286 lt!38268))))

(declare-fun lt!38272 () Unit!2341)

(assert (=> b!81852 (= lt!38272 lt!38276)))

(declare-fun lt!38283 () ListLongMap!1451)

(assert (=> b!81852 (= lt!38283 (getCurrentListMapNoExtraKeys!71 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38270 () (_ BitVec 64))

(assert (=> b!81852 (= lt!38270 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38273 () (_ BitVec 64))

(assert (=> b!81852 (= lt!38273 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!38271 () Unit!2341)

(assert (=> b!81852 (= lt!38271 (addApplyDifferent!56 lt!38283 lt!38270 (zeroValue!2189 newMap!16) lt!38273))))

(assert (=> b!81852 (= (apply!80 (+!106 lt!38283 (tuple2!2181 lt!38270 (zeroValue!2189 newMap!16))) lt!38273) (apply!80 lt!38283 lt!38273))))

(declare-fun lt!38284 () Unit!2341)

(assert (=> b!81852 (= lt!38284 lt!38271)))

(declare-fun lt!38281 () ListLongMap!1451)

(assert (=> b!81852 (= lt!38281 (getCurrentListMapNoExtraKeys!71 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38279 () (_ BitVec 64))

(assert (=> b!81852 (= lt!38279 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38277 () (_ BitVec 64))

(assert (=> b!81852 (= lt!38277 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!81852 (= lt!38265 (addApplyDifferent!56 lt!38281 lt!38279 (minValue!2189 newMap!16) lt!38277))))

(assert (=> b!81852 (= (apply!80 (+!106 lt!38281 (tuple2!2181 lt!38279 (minValue!2189 newMap!16))) lt!38277) (apply!80 lt!38281 lt!38277))))

(declare-fun b!81853 () Bool)

(declare-fun res!42523 () Bool)

(assert (=> b!81853 (=> (not res!42523) (not e!53399))))

(declare-fun e!53400 () Bool)

(assert (=> b!81853 (= res!42523 e!53400)))

(declare-fun res!42528 () Bool)

(assert (=> b!81853 (=> res!42528 e!53400)))

(declare-fun e!53407 () Bool)

(assert (=> b!81853 (= res!42528 (not e!53407))))

(declare-fun res!42526 () Bool)

(assert (=> b!81853 (=> (not res!42526) (not e!53407))))

(assert (=> b!81853 (= res!42526 (bvslt #b00000000000000000000000000000000 (size!2143 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))))))))

(declare-fun b!81854 () Bool)

(declare-fun e!53409 () Bool)

(assert (=> b!81854 (= e!53409 (= (apply!80 lt!38275 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!81855 () Bool)

(declare-fun e!53411 () Bool)

(assert (=> b!81855 (= e!53400 e!53411)))

(declare-fun res!42522 () Bool)

(assert (=> b!81855 (=> (not res!42522) (not e!53411))))

(assert (=> b!81855 (= res!42522 (contains!745 lt!38275 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!81855 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))))))))

(declare-fun bm!7646 () Bool)

(declare-fun call!7654 () ListLongMap!1451)

(declare-fun call!7655 () ListLongMap!1451)

(assert (=> bm!7646 (= call!7654 call!7655)))

(declare-fun b!81856 () Bool)

(declare-fun e!53404 () Bool)

(assert (=> b!81856 (= e!53404 e!53409)))

(declare-fun res!42524 () Bool)

(declare-fun call!7651 () Bool)

(assert (=> b!81856 (= res!42524 call!7651)))

(assert (=> b!81856 (=> (not res!42524) (not e!53409))))

(declare-fun b!81857 () Bool)

(assert (=> b!81857 (= e!53407 (validKeyInArray!0 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!81858 () Bool)

(assert (=> b!81858 (= e!53404 (not call!7651))))

(declare-fun b!81859 () Bool)

(assert (=> b!81859 (= e!53405 (validKeyInArray!0 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!81860 () Bool)

(declare-fun e!53408 () Bool)

(declare-fun call!7653 () Bool)

(assert (=> b!81860 (= e!53408 (not call!7653))))

(declare-fun bm!7647 () Bool)

(declare-fun call!7652 () ListLongMap!1451)

(assert (=> bm!7647 (= call!7652 call!7654)))

(declare-fun b!81861 () Bool)

(declare-fun e!53402 () ListLongMap!1451)

(declare-fun call!7650 () ListLongMap!1451)

(assert (=> b!81861 (= e!53402 call!7650)))

(declare-fun bm!7648 () Bool)

(assert (=> bm!7648 (= call!7653 (contains!745 lt!38275 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81862 () Bool)

(assert (=> b!81862 (= e!53399 e!53404)))

(declare-fun c!12956 () Bool)

(assert (=> b!81862 (= c!12956 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7649 () Bool)

(assert (=> bm!7649 (= call!7655 (getCurrentListMapNoExtraKeys!71 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bm!7650 () Bool)

(declare-fun call!7649 () ListLongMap!1451)

(assert (=> bm!7650 (= call!7650 call!7649)))

(declare-fun b!81863 () Bool)

(declare-fun res!42521 () Bool)

(assert (=> b!81863 (=> (not res!42521) (not e!53399))))

(assert (=> b!81863 (= res!42521 e!53408)))

(declare-fun c!12959 () Bool)

(assert (=> b!81863 (= c!12959 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81864 () Bool)

(assert (=> b!81864 (= e!53410 (+!106 call!7649 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!81865 () Bool)

(assert (=> b!81865 (= e!53402 call!7652)))

(declare-fun bm!7651 () Bool)

(declare-fun c!12958 () Bool)

(assert (=> bm!7651 (= call!7649 (+!106 (ite c!12957 call!7655 (ite c!12958 call!7654 call!7652)) (ite (or c!12957 c!12958) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!81866 () Bool)

(assert (=> b!81866 (= e!53411 (= (apply!80 lt!38275 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81866 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))))))))

(assert (=> b!81866 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))))))))

(declare-fun b!81867 () Bool)

(declare-fun c!12961 () Bool)

(assert (=> b!81867 (= c!12961 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53401 () ListLongMap!1451)

(assert (=> b!81867 (= e!53401 e!53402)))

(declare-fun b!81868 () Bool)

(declare-fun e!53403 () Bool)

(assert (=> b!81868 (= e!53403 (= (apply!80 lt!38275 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun b!81869 () Bool)

(assert (=> b!81869 (= e!53408 e!53403)))

(declare-fun res!42525 () Bool)

(assert (=> b!81869 (= res!42525 call!7653)))

(assert (=> b!81869 (=> (not res!42525) (not e!53403))))

(declare-fun b!81870 () Bool)

(assert (=> b!81870 (= e!53410 e!53401)))

(assert (=> b!81870 (= c!12958 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7652 () Bool)

(assert (=> bm!7652 (= call!7651 (contains!745 lt!38275 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81871 () Bool)

(assert (=> b!81871 (= e!53401 call!7650)))

(assert (= (and d!20379 c!12957) b!81864))

(assert (= (and d!20379 (not c!12957)) b!81870))

(assert (= (and b!81870 c!12958) b!81871))

(assert (= (and b!81870 (not c!12958)) b!81867))

(assert (= (and b!81867 c!12961) b!81861))

(assert (= (and b!81867 (not c!12961)) b!81865))

(assert (= (or b!81861 b!81865) bm!7647))

(assert (= (or b!81871 bm!7647) bm!7646))

(assert (= (or b!81871 b!81861) bm!7650))

(assert (= (or b!81864 bm!7646) bm!7649))

(assert (= (or b!81864 bm!7650) bm!7651))

(assert (= (and d!20379 res!42520) b!81859))

(assert (= (and d!20379 c!12960) b!81852))

(assert (= (and d!20379 (not c!12960)) b!81851))

(assert (= (and d!20379 res!42527) b!81853))

(assert (= (and b!81853 res!42526) b!81857))

(assert (= (and b!81853 (not res!42528)) b!81855))

(assert (= (and b!81855 res!42522) b!81866))

(assert (= (and b!81853 res!42523) b!81863))

(assert (= (and b!81863 c!12959) b!81869))

(assert (= (and b!81863 (not c!12959)) b!81860))

(assert (= (and b!81869 res!42525) b!81868))

(assert (= (or b!81869 b!81860) bm!7648))

(assert (= (and b!81863 res!42521) b!81862))

(assert (= (and b!81862 c!12956) b!81856))

(assert (= (and b!81862 (not c!12956)) b!81858))

(assert (= (and b!81856 res!42524) b!81854))

(assert (= (or b!81856 b!81858) bm!7652))

(declare-fun b_lambda!3641 () Bool)

(assert (=> (not b_lambda!3641) (not b!81866)))

(assert (=> b!81866 t!5185))

(declare-fun b_and!4987 () Bool)

(assert (= b_and!4983 (and (=> t!5185 result!2853) b_and!4987)))

(assert (=> b!81866 t!5187))

(declare-fun b_and!4989 () Bool)

(assert (= b_and!4985 (and (=> t!5187 result!2855) b_and!4989)))

(assert (=> b!81866 m!84189))

(declare-fun m!84289 () Bool)

(assert (=> b!81866 m!84289))

(assert (=> b!81866 m!84189))

(declare-fun m!84291 () Bool)

(assert (=> b!81866 m!84291))

(assert (=> b!81866 m!82271))

(assert (=> b!81866 m!84289))

(assert (=> b!81866 m!82271))

(declare-fun m!84293 () Bool)

(assert (=> b!81866 m!84293))

(declare-fun m!84295 () Bool)

(assert (=> bm!7648 m!84295))

(declare-fun m!84297 () Bool)

(assert (=> bm!7651 m!84297))

(assert (=> b!81852 m!84189))

(declare-fun m!84299 () Bool)

(assert (=> b!81852 m!84299))

(declare-fun m!84301 () Bool)

(assert (=> b!81852 m!84301))

(declare-fun m!84303 () Bool)

(assert (=> b!81852 m!84303))

(declare-fun m!84305 () Bool)

(assert (=> b!81852 m!84305))

(declare-fun m!84307 () Bool)

(assert (=> b!81852 m!84307))

(declare-fun m!84309 () Bool)

(assert (=> b!81852 m!84309))

(declare-fun m!84311 () Bool)

(assert (=> b!81852 m!84311))

(declare-fun m!84313 () Bool)

(assert (=> b!81852 m!84313))

(declare-fun m!84315 () Bool)

(assert (=> b!81852 m!84315))

(assert (=> b!81852 m!84301))

(assert (=> b!81852 m!84305))

(declare-fun m!84317 () Bool)

(assert (=> b!81852 m!84317))

(declare-fun m!84319 () Bool)

(assert (=> b!81852 m!84319))

(declare-fun m!84321 () Bool)

(assert (=> b!81852 m!84321))

(declare-fun m!84323 () Bool)

(assert (=> b!81852 m!84323))

(assert (=> b!81852 m!84323))

(declare-fun m!84325 () Bool)

(assert (=> b!81852 m!84325))

(assert (=> b!81852 m!84313))

(declare-fun m!84327 () Bool)

(assert (=> b!81852 m!84327))

(declare-fun m!84329 () Bool)

(assert (=> b!81852 m!84329))

(declare-fun m!84331 () Bool)

(assert (=> b!81854 m!84331))

(assert (=> b!81859 m!84189))

(assert (=> b!81859 m!84189))

(assert (=> b!81859 m!84191))

(declare-fun m!84333 () Bool)

(assert (=> bm!7652 m!84333))

(assert (=> bm!7649 m!84329))

(declare-fun m!84335 () Bool)

(assert (=> b!81864 m!84335))

(assert (=> b!81857 m!84189))

(assert (=> b!81857 m!84189))

(assert (=> b!81857 m!84191))

(assert (=> b!81855 m!84189))

(assert (=> b!81855 m!84189))

(declare-fun m!84337 () Bool)

(assert (=> b!81855 m!84337))

(assert (=> d!20379 m!82321))

(declare-fun m!84339 () Bool)

(assert (=> b!81868 m!84339))

(assert (=> d!19777 d!20379))

(declare-fun d!20381 () Bool)

(declare-fun e!53414 () Bool)

(assert (=> d!20381 e!53414))

(declare-fun res!42531 () Bool)

(assert (=> d!20381 (=> (not res!42531) (not e!53414))))

(assert (=> d!20381 (= res!42531 (and (bvsge (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) #b00000000000000000000000000000000) (bvslt (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (size!2143 (_keys!3957 newMap!16))) (bvslt (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (size!2144 (_values!2276 newMap!16)))))))

(declare-fun lt!38289 () Unit!2341)

(declare-fun choose!482 (array!3989 array!3991 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) (_ BitVec 64) V!3003 Int) Unit!2341)

(assert (=> d!20381 (= lt!38289 (choose!482 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 (defaultEntry!2293 newMap!16)))))

(assert (=> d!20381 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20381 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!17 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 (defaultEntry!2293 newMap!16)) lt!38289)))

(declare-fun b!81874 () Bool)

(assert (=> b!81874 (= e!53414 (= (+!106 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (getCurrentListMap!435 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))))))

(assert (= (and d!20381 res!42531) b!81874))

(assert (=> d!20381 m!81811))

(declare-fun m!84341 () Bool)

(assert (=> d!20381 m!84341))

(assert (=> d!20381 m!82321))

(assert (=> b!81874 m!82559))

(assert (=> b!81874 m!82567))

(assert (=> b!81874 m!81965))

(assert (=> b!81874 m!81965))

(assert (=> b!81874 m!82547))

(assert (=> b!81874 m!82573))

(assert (=> d!19777 d!20381))

(declare-fun b!81875 () Bool)

(declare-fun e!53416 () Bool)

(declare-fun call!7656 () Bool)

(assert (=> b!81875 (= e!53416 call!7656)))

(declare-fun c!12962 () Bool)

(declare-fun bm!7653 () Bool)

(assert (=> bm!7653 (= call!7656 (arrayNoDuplicates!0 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) (bvadd lt!37762 #b00000000000000000000000000000001) (ite c!12962 (Cons!1508 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) lt!37762) lt!37746) lt!37746)))))

(declare-fun b!81876 () Bool)

(assert (=> b!81876 (= e!53416 call!7656)))

(declare-fun b!81877 () Bool)

(declare-fun e!53415 () Bool)

(assert (=> b!81877 (= e!53415 e!53416)))

(assert (=> b!81877 (= c!12962 (validKeyInArray!0 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) lt!37762)))))

(declare-fun b!81879 () Bool)

(declare-fun e!53418 () Bool)

(assert (=> b!81879 (= e!53418 (contains!747 lt!37746 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) lt!37762)))))

(declare-fun b!81878 () Bool)

(declare-fun e!53417 () Bool)

(assert (=> b!81878 (= e!53417 e!53415)))

(declare-fun res!42533 () Bool)

(assert (=> b!81878 (=> (not res!42533) (not e!53415))))

(assert (=> b!81878 (= res!42533 (not e!53418))))

(declare-fun res!42532 () Bool)

(assert (=> b!81878 (=> (not res!42532) (not e!53418))))

(assert (=> b!81878 (= res!42532 (validKeyInArray!0 (select (arr!1901 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16)))) lt!37762)))))

(declare-fun d!20383 () Bool)

(declare-fun res!42534 () Bool)

(assert (=> d!20383 (=> res!42534 e!53417)))

(assert (=> d!20383 (= res!42534 (bvsge lt!37762 (size!2143 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))))))))

(assert (=> d!20383 (= (arrayNoDuplicates!0 (array!3990 (store (arr!1901 (_keys!3957 newMap!16)) (ite c!12575 (index!3102 lt!37427) (index!3099 lt!37427)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (size!2143 (_keys!3957 newMap!16))) lt!37762 lt!37746) e!53417)))

(assert (= (and d!20383 (not res!42534)) b!81878))

(assert (= (and b!81878 res!42532) b!81879))

(assert (= (and b!81878 res!42533) b!81877))

(assert (= (and b!81877 c!12962) b!81875))

(assert (= (and b!81877 (not c!12962)) b!81876))

(assert (= (or b!81875 b!81876) bm!7653))

(declare-fun m!84343 () Bool)

(assert (=> bm!7653 m!84343))

(declare-fun m!84345 () Bool)

(assert (=> bm!7653 m!84345))

(assert (=> b!81877 m!84343))

(assert (=> b!81877 m!84343))

(declare-fun m!84347 () Bool)

(assert (=> b!81877 m!84347))

(assert (=> b!81879 m!84343))

(assert (=> b!81879 m!84343))

(declare-fun m!84349 () Bool)

(assert (=> b!81879 m!84349))

(assert (=> b!81878 m!84343))

(assert (=> b!81878 m!84343))

(assert (=> b!81878 m!84347))

(assert (=> d!19777 d!20383))

(declare-fun b!81880 () Bool)

(declare-fun c!12963 () Bool)

(assert (=> b!81880 (= c!12963 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37277))) (bvsgt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37277)))) (_1!1101 lt!37268))))))

(declare-fun e!53419 () List!1511)

(declare-fun e!53420 () List!1511)

(assert (=> b!81880 (= e!53419 e!53420)))

(declare-fun b!81881 () Bool)

(declare-fun call!7657 () List!1511)

(assert (=> b!81881 (= e!53420 call!7657)))

(declare-fun c!12965 () Bool)

(declare-fun e!53421 () List!1511)

(declare-fun b!81882 () Bool)

(assert (=> b!81882 (= e!53421 (ite c!12965 (t!5178 (t!5178 (toList!741 lt!37277))) (ite c!12963 (Cons!1507 (h!2096 (t!5178 (toList!741 lt!37277))) (t!5178 (t!5178 (toList!741 lt!37277)))) Nil!1508)))))

(declare-fun d!20385 () Bool)

(declare-fun e!53423 () Bool)

(assert (=> d!20385 e!53423))

(declare-fun res!42536 () Bool)

(assert (=> d!20385 (=> (not res!42536) (not e!53423))))

(declare-fun lt!38290 () List!1511)

(assert (=> d!20385 (= res!42536 (isStrictlySorted!296 lt!38290))))

(declare-fun e!53422 () List!1511)

(assert (=> d!20385 (= lt!38290 e!53422)))

(declare-fun c!12964 () Bool)

(assert (=> d!20385 (= c!12964 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37277))) (bvslt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37277)))) (_1!1101 lt!37268))))))

(assert (=> d!20385 (isStrictlySorted!296 (t!5178 (toList!741 lt!37277)))))

(assert (=> d!20385 (= (insertStrictlySorted!58 (t!5178 (toList!741 lt!37277)) (_1!1101 lt!37268) (_2!1101 lt!37268)) lt!38290)))

(declare-fun b!81883 () Bool)

(declare-fun call!7659 () List!1511)

(assert (=> b!81883 (= e!53422 call!7659)))

(declare-fun bm!7654 () Bool)

(declare-fun call!7658 () List!1511)

(assert (=> bm!7654 (= call!7658 call!7659)))

(declare-fun bm!7655 () Bool)

(assert (=> bm!7655 (= call!7657 call!7658)))

(declare-fun b!81884 () Bool)

(assert (=> b!81884 (= e!53423 (contains!746 lt!38290 (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(declare-fun b!81885 () Bool)

(assert (=> b!81885 (= e!53422 e!53419)))

(assert (=> b!81885 (= c!12965 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37277))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37277)))) (_1!1101 lt!37268))))))

(declare-fun b!81886 () Bool)

(assert (=> b!81886 (= e!53420 call!7657)))

(declare-fun b!81887 () Bool)

(declare-fun res!42535 () Bool)

(assert (=> b!81887 (=> (not res!42535) (not e!53423))))

(assert (=> b!81887 (= res!42535 (containsKey!142 lt!38290 (_1!1101 lt!37268)))))

(declare-fun bm!7656 () Bool)

(assert (=> bm!7656 (= call!7659 ($colon$colon!70 e!53421 (ite c!12964 (h!2096 (t!5178 (toList!741 lt!37277))) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268)))))))

(declare-fun c!12966 () Bool)

(assert (=> bm!7656 (= c!12966 c!12964)))

(declare-fun b!81888 () Bool)

(assert (=> b!81888 (= e!53421 (insertStrictlySorted!58 (t!5178 (t!5178 (toList!741 lt!37277))) (_1!1101 lt!37268) (_2!1101 lt!37268)))))

(declare-fun b!81889 () Bool)

(assert (=> b!81889 (= e!53419 call!7658)))

(assert (= (and d!20385 c!12964) b!81883))

(assert (= (and d!20385 (not c!12964)) b!81885))

(assert (= (and b!81885 c!12965) b!81889))

(assert (= (and b!81885 (not c!12965)) b!81880))

(assert (= (and b!81880 c!12963) b!81886))

(assert (= (and b!81880 (not c!12963)) b!81881))

(assert (= (or b!81886 b!81881) bm!7655))

(assert (= (or b!81889 bm!7655) bm!7654))

(assert (= (or b!81883 bm!7654) bm!7656))

(assert (= (and bm!7656 c!12966) b!81888))

(assert (= (and bm!7656 (not c!12966)) b!81882))

(assert (= (and d!20385 res!42536) b!81887))

(assert (= (and b!81887 res!42535) b!81884))

(declare-fun m!84351 () Bool)

(assert (=> b!81884 m!84351))

(declare-fun m!84353 () Bool)

(assert (=> b!81887 m!84353))

(declare-fun m!84355 () Bool)

(assert (=> d!20385 m!84355))

(declare-fun m!84357 () Bool)

(assert (=> d!20385 m!84357))

(declare-fun m!84359 () Bool)

(assert (=> b!81888 m!84359))

(declare-fun m!84361 () Bool)

(assert (=> bm!7656 m!84361))

(assert (=> b!80776 d!20385))

(declare-fun d!20387 () Bool)

(declare-fun e!53424 () Bool)

(assert (=> d!20387 e!53424))

(declare-fun res!42537 () Bool)

(assert (=> d!20387 (=> res!42537 e!53424)))

(declare-fun lt!38292 () Bool)

(assert (=> d!20387 (= res!42537 (not lt!38292))))

(declare-fun lt!38291 () Bool)

(assert (=> d!20387 (= lt!38292 lt!38291)))

(declare-fun lt!38294 () Unit!2341)

(declare-fun e!53425 () Unit!2341)

(assert (=> d!20387 (= lt!38294 e!53425)))

(declare-fun c!12967 () Bool)

(assert (=> d!20387 (= c!12967 lt!38291)))

(assert (=> d!20387 (= lt!38291 (containsKey!142 (toList!741 lt!37887) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!20387 (= (contains!745 lt!37887 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38292)))

(declare-fun b!81890 () Bool)

(declare-fun lt!38293 () Unit!2341)

(assert (=> b!81890 (= e!53425 lt!38293)))

(assert (=> b!81890 (= lt!38293 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37887) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> b!81890 (isDefined!91 (getValueByKey!138 (toList!741 lt!37887) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81891 () Bool)

(declare-fun Unit!2395 () Unit!2341)

(assert (=> b!81891 (= e!53425 Unit!2395)))

(declare-fun b!81892 () Bool)

(assert (=> b!81892 (= e!53424 (isDefined!91 (getValueByKey!138 (toList!741 lt!37887) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20387 c!12967) b!81890))

(assert (= (and d!20387 (not c!12967)) b!81891))

(assert (= (and d!20387 (not res!42537)) b!81892))

(declare-fun m!84363 () Bool)

(assert (=> d!20387 m!84363))

(declare-fun m!84365 () Bool)

(assert (=> b!81890 m!84365))

(assert (=> b!81890 m!82935))

(assert (=> b!81890 m!82935))

(declare-fun m!84367 () Bool)

(assert (=> b!81890 m!84367))

(assert (=> b!81892 m!82935))

(assert (=> b!81892 m!82935))

(assert (=> b!81892 m!84367))

(assert (=> d!19867 d!20387))

(declare-fun c!12968 () Bool)

(declare-fun d!20389 () Bool)

(assert (=> d!20389 (= c!12968 (and ((_ is Cons!1507) lt!37889) (= (_1!1101 (h!2096 lt!37889)) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53426 () Option!144)

(assert (=> d!20389 (= (getValueByKey!138 lt!37889 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53426)))

(declare-fun b!81894 () Bool)

(declare-fun e!53427 () Option!144)

(assert (=> b!81894 (= e!53426 e!53427)))

(declare-fun c!12969 () Bool)

(assert (=> b!81894 (= c!12969 (and ((_ is Cons!1507) lt!37889) (not (= (_1!1101 (h!2096 lt!37889)) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!81895 () Bool)

(assert (=> b!81895 (= e!53427 (getValueByKey!138 (t!5178 lt!37889) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81896 () Bool)

(assert (=> b!81896 (= e!53427 None!142)))

(declare-fun b!81893 () Bool)

(assert (=> b!81893 (= e!53426 (Some!143 (_2!1101 (h!2096 lt!37889))))))

(assert (= (and d!20389 c!12968) b!81893))

(assert (= (and d!20389 (not c!12968)) b!81894))

(assert (= (and b!81894 c!12969) b!81895))

(assert (= (and b!81894 (not c!12969)) b!81896))

(declare-fun m!84369 () Bool)

(assert (=> b!81895 m!84369))

(assert (=> d!19867 d!20389))

(declare-fun d!20391 () Bool)

(assert (=> d!20391 (= (getValueByKey!138 lt!37889 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!38295 () Unit!2341)

(assert (=> d!20391 (= lt!38295 (choose!470 lt!37889 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun e!53428 () Bool)

(assert (=> d!20391 e!53428))

(declare-fun res!42538 () Bool)

(assert (=> d!20391 (=> (not res!42538) (not e!53428))))

(assert (=> d!20391 (= res!42538 (isStrictlySorted!296 lt!37889))))

(assert (=> d!20391 (= (lemmaContainsTupThenGetReturnValue!55 lt!37889 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38295)))

(declare-fun b!81897 () Bool)

(declare-fun res!42539 () Bool)

(assert (=> b!81897 (=> (not res!42539) (not e!53428))))

(assert (=> b!81897 (= res!42539 (containsKey!142 lt!37889 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81898 () Bool)

(assert (=> b!81898 (= e!53428 (contains!746 lt!37889 (tuple2!2181 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20391 res!42538) b!81897))

(assert (= (and b!81897 res!42539) b!81898))

(assert (=> d!20391 m!82929))

(declare-fun m!84371 () Bool)

(assert (=> d!20391 m!84371))

(declare-fun m!84373 () Bool)

(assert (=> d!20391 m!84373))

(declare-fun m!84375 () Bool)

(assert (=> b!81897 m!84375))

(declare-fun m!84377 () Bool)

(assert (=> b!81898 m!84377))

(assert (=> d!19867 d!20391))

(declare-fun b!81899 () Bool)

(declare-fun c!12970 () Bool)

(assert (=> b!81899 (= c!12970 (and ((_ is Cons!1507) (toList!741 lt!37493)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37493))) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53429 () List!1511)

(declare-fun e!53430 () List!1511)

(assert (=> b!81899 (= e!53429 e!53430)))

(declare-fun b!81900 () Bool)

(declare-fun call!7660 () List!1511)

(assert (=> b!81900 (= e!53430 call!7660)))

(declare-fun e!53431 () List!1511)

(declare-fun b!81901 () Bool)

(declare-fun c!12972 () Bool)

(assert (=> b!81901 (= e!53431 (ite c!12972 (t!5178 (toList!741 lt!37493)) (ite c!12970 (Cons!1507 (h!2096 (toList!741 lt!37493)) (t!5178 (toList!741 lt!37493))) Nil!1508)))))

(declare-fun d!20393 () Bool)

(declare-fun e!53433 () Bool)

(assert (=> d!20393 e!53433))

(declare-fun res!42541 () Bool)

(assert (=> d!20393 (=> (not res!42541) (not e!53433))))

(declare-fun lt!38296 () List!1511)

(assert (=> d!20393 (= res!42541 (isStrictlySorted!296 lt!38296))))

(declare-fun e!53432 () List!1511)

(assert (=> d!20393 (= lt!38296 e!53432)))

(declare-fun c!12971 () Bool)

(assert (=> d!20393 (= c!12971 (and ((_ is Cons!1507) (toList!741 lt!37493)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37493))) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!20393 (isStrictlySorted!296 (toList!741 lt!37493))))

(assert (=> d!20393 (= (insertStrictlySorted!58 (toList!741 lt!37493) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38296)))

(declare-fun b!81902 () Bool)

(declare-fun call!7662 () List!1511)

(assert (=> b!81902 (= e!53432 call!7662)))

(declare-fun bm!7657 () Bool)

(declare-fun call!7661 () List!1511)

(assert (=> bm!7657 (= call!7661 call!7662)))

(declare-fun bm!7658 () Bool)

(assert (=> bm!7658 (= call!7660 call!7661)))

(declare-fun b!81903 () Bool)

(assert (=> b!81903 (= e!53433 (contains!746 lt!38296 (tuple2!2181 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81904 () Bool)

(assert (=> b!81904 (= e!53432 e!53429)))

(assert (=> b!81904 (= c!12972 (and ((_ is Cons!1507) (toList!741 lt!37493)) (= (_1!1101 (h!2096 (toList!741 lt!37493))) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!81905 () Bool)

(assert (=> b!81905 (= e!53430 call!7660)))

(declare-fun b!81906 () Bool)

(declare-fun res!42540 () Bool)

(assert (=> b!81906 (=> (not res!42540) (not e!53433))))

(assert (=> b!81906 (= res!42540 (containsKey!142 lt!38296 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun bm!7659 () Bool)

(assert (=> bm!7659 (= call!7662 ($colon$colon!70 e!53431 (ite c!12971 (h!2096 (toList!741 lt!37493)) (tuple2!2181 (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun c!12973 () Bool)

(assert (=> bm!7659 (= c!12973 c!12971)))

(declare-fun b!81907 () Bool)

(assert (=> b!81907 (= e!53431 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37493)) (_1!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!81908 () Bool)

(assert (=> b!81908 (= e!53429 call!7661)))

(assert (= (and d!20393 c!12971) b!81902))

(assert (= (and d!20393 (not c!12971)) b!81904))

(assert (= (and b!81904 c!12972) b!81908))

(assert (= (and b!81904 (not c!12972)) b!81899))

(assert (= (and b!81899 c!12970) b!81905))

(assert (= (and b!81899 (not c!12970)) b!81900))

(assert (= (or b!81905 b!81900) bm!7658))

(assert (= (or b!81908 bm!7658) bm!7657))

(assert (= (or b!81902 bm!7657) bm!7659))

(assert (= (and bm!7659 c!12973) b!81907))

(assert (= (and bm!7659 (not c!12973)) b!81901))

(assert (= (and d!20393 res!42541) b!81906))

(assert (= (and b!81906 res!42540) b!81903))

(declare-fun m!84379 () Bool)

(assert (=> b!81903 m!84379))

(declare-fun m!84381 () Bool)

(assert (=> b!81906 m!84381))

(declare-fun m!84383 () Bool)

(assert (=> d!20393 m!84383))

(declare-fun m!84385 () Bool)

(assert (=> d!20393 m!84385))

(declare-fun m!84387 () Bool)

(assert (=> b!81907 m!84387))

(declare-fun m!84389 () Bool)

(assert (=> bm!7659 m!84389))

(assert (=> d!19867 d!20393))

(declare-fun d!20395 () Bool)

(declare-fun c!12974 () Bool)

(assert (=> d!20395 (= c!12974 (and ((_ is Cons!1507) (toList!741 lt!37802)) (= (_1!1101 (h!2096 (toList!741 lt!37802))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!53434 () Option!144)

(assert (=> d!20395 (= (getValueByKey!138 (toList!741 lt!37802) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!53434)))

(declare-fun b!81910 () Bool)

(declare-fun e!53435 () Option!144)

(assert (=> b!81910 (= e!53434 e!53435)))

(declare-fun c!12975 () Bool)

(assert (=> b!81910 (= c!12975 (and ((_ is Cons!1507) (toList!741 lt!37802)) (not (= (_1!1101 (h!2096 (toList!741 lt!37802))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!81911 () Bool)

(assert (=> b!81911 (= e!53435 (getValueByKey!138 (t!5178 (toList!741 lt!37802)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!81912 () Bool)

(assert (=> b!81912 (= e!53435 None!142)))

(declare-fun b!81909 () Bool)

(assert (=> b!81909 (= e!53434 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37802)))))))

(assert (= (and d!20395 c!12974) b!81909))

(assert (= (and d!20395 (not c!12974)) b!81910))

(assert (= (and b!81910 c!12975) b!81911))

(assert (= (and b!81910 (not c!12975)) b!81912))

(declare-fun m!84391 () Bool)

(assert (=> b!81911 m!84391))

(assert (=> b!80955 d!20395))

(declare-fun b!81913 () Bool)

(declare-fun e!53436 () ListLongMap!1451)

(declare-fun call!7663 () ListLongMap!1451)

(assert (=> b!81913 (= e!53436 call!7663)))

(declare-fun b!81914 () Bool)

(declare-fun res!42544 () Bool)

(declare-fun e!53438 () Bool)

(assert (=> b!81914 (=> (not res!42544) (not e!53438))))

(declare-fun lt!38298 () ListLongMap!1451)

(assert (=> b!81914 (= res!42544 (not (contains!745 lt!38298 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!7660 () Bool)

(assert (=> bm!7660 (= call!7663 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2293 newMap!16)))))

(declare-fun b!81915 () Bool)

(declare-fun e!53437 () Bool)

(assert (=> b!81915 (= e!53438 e!53437)))

(declare-fun c!12976 () Bool)

(declare-fun e!53442 () Bool)

(assert (=> b!81915 (= c!12976 e!53442)))

(declare-fun res!42545 () Bool)

(assert (=> b!81915 (=> (not res!42545) (not e!53442))))

(assert (=> b!81915 (= res!42545 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81916 () Bool)

(declare-fun lt!38300 () Unit!2341)

(declare-fun lt!38301 () Unit!2341)

(assert (=> b!81916 (= lt!38300 lt!38301)))

(declare-fun lt!38297 () (_ BitVec 64))

(declare-fun lt!38302 () ListLongMap!1451)

(declare-fun lt!38299 () (_ BitVec 64))

(declare-fun lt!38303 () V!3003)

(assert (=> b!81916 (not (contains!745 (+!106 lt!38302 (tuple2!2181 lt!38297 lt!38303)) lt!38299))))

(assert (=> b!81916 (= lt!38301 (addStillNotContains!29 lt!38302 lt!38297 lt!38303 lt!38299))))

(assert (=> b!81916 (= lt!38299 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81916 (= lt!38303 (get!1179 (select (arr!1902 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81916 (= lt!38297 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81916 (= lt!38302 call!7663)))

(assert (=> b!81916 (= e!53436 (+!106 call!7663 (tuple2!2181 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (get!1179 (select (arr!1902 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81917 () Bool)

(declare-fun e!53441 () ListLongMap!1451)

(assert (=> b!81917 (= e!53441 e!53436)))

(declare-fun c!12978 () Bool)

(assert (=> b!81917 (= c!12978 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81918 () Bool)

(declare-fun e!53440 () Bool)

(assert (=> b!81918 (= e!53437 e!53440)))

(assert (=> b!81918 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun res!42543 () Bool)

(assert (=> b!81918 (= res!42543 (contains!745 lt!38298 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81918 (=> (not res!42543) (not e!53440))))

(declare-fun d!20397 () Bool)

(assert (=> d!20397 e!53438))

(declare-fun res!42542 () Bool)

(assert (=> d!20397 (=> (not res!42542) (not e!53438))))

(assert (=> d!20397 (= res!42542 (not (contains!745 lt!38298 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20397 (= lt!38298 e!53441)))

(declare-fun c!12979 () Bool)

(assert (=> d!20397 (= c!12979 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(assert (=> d!20397 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20397 (= (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38298)))

(declare-fun b!81919 () Bool)

(declare-fun e!53439 () Bool)

(assert (=> b!81919 (= e!53439 (= lt!38298 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2293 newMap!16))))))

(declare-fun b!81920 () Bool)

(assert (=> b!81920 (= e!53437 e!53439)))

(declare-fun c!12977 () Bool)

(assert (=> b!81920 (= c!12977 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81921 () Bool)

(assert (=> b!81921 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(assert (=> b!81921 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_values!2276 newMap!16))))))

(assert (=> b!81921 (= e!53440 (= (apply!80 lt!38298 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81922 () Bool)

(assert (=> b!81922 (= e!53442 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81922 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!81923 () Bool)

(assert (=> b!81923 (= e!53439 (isEmpty!329 lt!38298))))

(declare-fun b!81924 () Bool)

(assert (=> b!81924 (= e!53441 (ListLongMap!1452 Nil!1508))))

(assert (= (and d!20397 c!12979) b!81924))

(assert (= (and d!20397 (not c!12979)) b!81917))

(assert (= (and b!81917 c!12978) b!81916))

(assert (= (and b!81917 (not c!12978)) b!81913))

(assert (= (or b!81916 b!81913) bm!7660))

(assert (= (and d!20397 res!42542) b!81914))

(assert (= (and b!81914 res!42544) b!81915))

(assert (= (and b!81915 res!42545) b!81922))

(assert (= (and b!81915 c!12976) b!81918))

(assert (= (and b!81915 (not c!12976)) b!81920))

(assert (= (and b!81918 res!42543) b!81921))

(assert (= (and b!81920 c!12977) b!81919))

(assert (= (and b!81920 (not c!12977)) b!81923))

(declare-fun b_lambda!3643 () Bool)

(assert (=> (not b_lambda!3643) (not b!81916)))

(assert (=> b!81916 t!5185))

(declare-fun b_and!4991 () Bool)

(assert (= b_and!4987 (and (=> t!5185 result!2853) b_and!4991)))

(assert (=> b!81916 t!5187))

(declare-fun b_and!4993 () Bool)

(assert (= b_and!4989 (and (=> t!5187 result!2855) b_and!4993)))

(declare-fun b_lambda!3645 () Bool)

(assert (=> (not b_lambda!3645) (not b!81921)))

(assert (=> b!81921 t!5185))

(declare-fun b_and!4995 () Bool)

(assert (= b_and!4991 (and (=> t!5185 result!2853) b_and!4995)))

(assert (=> b!81921 t!5187))

(declare-fun b_and!4997 () Bool)

(assert (= b_and!4993 (and (=> t!5187 result!2855) b_and!4997)))

(declare-fun m!84393 () Bool)

(assert (=> d!20397 m!84393))

(assert (=> d!20397 m!82321))

(assert (=> b!81916 m!82487))

(assert (=> b!81916 m!82271))

(assert (=> b!81916 m!82491))

(assert (=> b!81916 m!82265))

(assert (=> b!81916 m!82271))

(declare-fun m!84395 () Bool)

(assert (=> b!81916 m!84395))

(declare-fun m!84397 () Bool)

(assert (=> b!81916 m!84397))

(assert (=> b!81916 m!84395))

(assert (=> b!81916 m!82487))

(declare-fun m!84399 () Bool)

(assert (=> b!81916 m!84399))

(declare-fun m!84401 () Bool)

(assert (=> b!81916 m!84401))

(assert (=> b!81918 m!82265))

(assert (=> b!81918 m!82265))

(declare-fun m!84403 () Bool)

(assert (=> b!81918 m!84403))

(declare-fun m!84405 () Bool)

(assert (=> b!81923 m!84405))

(declare-fun m!84407 () Bool)

(assert (=> b!81919 m!84407))

(assert (=> bm!7660 m!84407))

(assert (=> b!81917 m!82265))

(assert (=> b!81917 m!82265))

(assert (=> b!81917 m!82313))

(declare-fun m!84409 () Bool)

(assert (=> b!81914 m!84409))

(assert (=> b!81921 m!82487))

(assert (=> b!81921 m!82271))

(assert (=> b!81921 m!82491))

(assert (=> b!81921 m!82265))

(assert (=> b!81921 m!82271))

(assert (=> b!81921 m!82487))

(assert (=> b!81921 m!82265))

(declare-fun m!84411 () Bool)

(assert (=> b!81921 m!84411))

(assert (=> b!81922 m!82265))

(assert (=> b!81922 m!82265))

(assert (=> b!81922 m!82313))

(assert (=> bm!7531 d!20397))

(declare-fun d!20399 () Bool)

(declare-fun c!12980 () Bool)

(assert (=> d!20399 (= c!12980 (and ((_ is Cons!1507) (t!5178 lt!37514)) (= (_1!1101 (h!2096 (t!5178 lt!37514))) (_1!1101 lt!37268))))))

(declare-fun e!53443 () Option!144)

(assert (=> d!20399 (= (getValueByKey!138 (t!5178 lt!37514) (_1!1101 lt!37268)) e!53443)))

(declare-fun b!81926 () Bool)

(declare-fun e!53444 () Option!144)

(assert (=> b!81926 (= e!53443 e!53444)))

(declare-fun c!12981 () Bool)

(assert (=> b!81926 (= c!12981 (and ((_ is Cons!1507) (t!5178 lt!37514)) (not (= (_1!1101 (h!2096 (t!5178 lt!37514))) (_1!1101 lt!37268)))))))

(declare-fun b!81927 () Bool)

(assert (=> b!81927 (= e!53444 (getValueByKey!138 (t!5178 (t!5178 lt!37514)) (_1!1101 lt!37268)))))

(declare-fun b!81928 () Bool)

(assert (=> b!81928 (= e!53444 None!142)))

(declare-fun b!81925 () Bool)

(assert (=> b!81925 (= e!53443 (Some!143 (_2!1101 (h!2096 (t!5178 lt!37514)))))))

(assert (= (and d!20399 c!12980) b!81925))

(assert (= (and d!20399 (not c!12980)) b!81926))

(assert (= (and b!81926 c!12981) b!81927))

(assert (= (and b!81926 (not c!12981)) b!81928))

(declare-fun m!84413 () Bool)

(assert (=> b!81927 m!84413))

(assert (=> b!80740 d!20399))

(declare-fun d!20401 () Bool)

(assert (=> d!20401 (arrayContainsKey!0 (_keys!3957 newMap!16) lt!37662 #b00000000000000000000000000000000)))

(declare-fun lt!38304 () Unit!2341)

(assert (=> d!20401 (= lt!38304 (choose!13 (_keys!3957 newMap!16) lt!37662 #b00000000000000000000000000000000))))

(assert (=> d!20401 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!20401 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3957 newMap!16) lt!37662 #b00000000000000000000000000000000) lt!38304)))

(declare-fun bs!3466 () Bool)

(assert (= bs!3466 d!20401))

(assert (=> bs!3466 m!82483))

(declare-fun m!84415 () Bool)

(assert (=> bs!3466 m!84415))

(assert (=> b!80854 d!20401))

(declare-fun d!20403 () Bool)

(declare-fun res!42546 () Bool)

(declare-fun e!53445 () Bool)

(assert (=> d!20403 (=> res!42546 e!53445)))

(assert (=> d!20403 (= res!42546 (= (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) lt!37662))))

(assert (=> d!20403 (= (arrayContainsKey!0 (_keys!3957 newMap!16) lt!37662 #b00000000000000000000000000000000) e!53445)))

(declare-fun b!81929 () Bool)

(declare-fun e!53446 () Bool)

(assert (=> b!81929 (= e!53445 e!53446)))

(declare-fun res!42547 () Bool)

(assert (=> b!81929 (=> (not res!42547) (not e!53446))))

(assert (=> b!81929 (= res!42547 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!81930 () Bool)

(assert (=> b!81930 (= e!53446 (arrayContainsKey!0 (_keys!3957 newMap!16) lt!37662 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!20403 (not res!42546)) b!81929))

(assert (= (and b!81929 res!42547) b!81930))

(assert (=> d!20403 m!82265))

(declare-fun m!84417 () Bool)

(assert (=> b!81930 m!84417))

(assert (=> b!80854 d!20403))

(declare-fun b!81931 () Bool)

(declare-fun c!12984 () Bool)

(declare-fun lt!38305 () (_ BitVec 64))

(assert (=> b!81931 (= c!12984 (= lt!38305 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53448 () SeekEntryResult!241)

(declare-fun e!53449 () SeekEntryResult!241)

(assert (=> b!81931 (= e!53448 e!53449)))

(declare-fun b!81932 () Bool)

(declare-fun lt!38306 () SeekEntryResult!241)

(assert (=> b!81932 (= e!53448 (Found!241 (index!3101 lt!38306)))))

(declare-fun b!81933 () Bool)

(declare-fun e!53447 () SeekEntryResult!241)

(assert (=> b!81933 (= e!53447 e!53448)))

(assert (=> b!81933 (= lt!38305 (select (arr!1901 (_keys!3957 newMap!16)) (index!3101 lt!38306)))))

(declare-fun c!12983 () Bool)

(assert (=> b!81933 (= c!12983 (= lt!38305 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81934 () Bool)

(assert (=> b!81934 (= e!53449 (MissingZero!241 (index!3101 lt!38306)))))

(declare-fun d!20405 () Bool)

(declare-fun lt!38307 () SeekEntryResult!241)

(assert (=> d!20405 (and (or ((_ is Undefined!241) lt!38307) (not ((_ is Found!241) lt!38307)) (and (bvsge (index!3100 lt!38307) #b00000000000000000000000000000000) (bvslt (index!3100 lt!38307) (size!2143 (_keys!3957 newMap!16))))) (or ((_ is Undefined!241) lt!38307) ((_ is Found!241) lt!38307) (not ((_ is MissingZero!241) lt!38307)) (and (bvsge (index!3099 lt!38307) #b00000000000000000000000000000000) (bvslt (index!3099 lt!38307) (size!2143 (_keys!3957 newMap!16))))) (or ((_ is Undefined!241) lt!38307) ((_ is Found!241) lt!38307) ((_ is MissingZero!241) lt!38307) (not ((_ is MissingVacant!241) lt!38307)) (and (bvsge (index!3102 lt!38307) #b00000000000000000000000000000000) (bvslt (index!3102 lt!38307) (size!2143 (_keys!3957 newMap!16))))) (or ((_ is Undefined!241) lt!38307) (ite ((_ is Found!241) lt!38307) (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!38307)) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!241) lt!38307) (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3099 lt!38307)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!241) lt!38307) (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3102 lt!38307)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20405 (= lt!38307 e!53447)))

(declare-fun c!12982 () Bool)

(assert (=> d!20405 (= c!12982 (and ((_ is Intermediate!241) lt!38306) (undefined!1053 lt!38306)))))

(assert (=> d!20405 (= lt!38306 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (mask!6299 newMap!16)) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (=> d!20405 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20405 (= (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (_keys!3957 newMap!16) (mask!6299 newMap!16)) lt!38307)))

(declare-fun b!81935 () Bool)

(assert (=> b!81935 (= e!53447 Undefined!241)))

(declare-fun b!81936 () Bool)

(assert (=> b!81936 (= e!53449 (seekKeyOrZeroReturnVacant!0 (x!11692 lt!38306) (index!3101 lt!38306) (index!3101 lt!38306) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (= (and d!20405 c!12982) b!81935))

(assert (= (and d!20405 (not c!12982)) b!81933))

(assert (= (and b!81933 c!12983) b!81932))

(assert (= (and b!81933 (not c!12983)) b!81931))

(assert (= (and b!81931 c!12984) b!81934))

(assert (= (and b!81931 (not c!12984)) b!81936))

(declare-fun m!84419 () Bool)

(assert (=> b!81933 m!84419))

(assert (=> d!20405 m!82265))

(declare-fun m!84421 () Bool)

(assert (=> d!20405 m!84421))

(declare-fun m!84423 () Bool)

(assert (=> d!20405 m!84423))

(declare-fun m!84425 () Bool)

(assert (=> d!20405 m!84425))

(assert (=> d!20405 m!82321))

(assert (=> d!20405 m!84421))

(assert (=> d!20405 m!82265))

(declare-fun m!84427 () Bool)

(assert (=> d!20405 m!84427))

(declare-fun m!84429 () Bool)

(assert (=> d!20405 m!84429))

(assert (=> b!81936 m!82265))

(declare-fun m!84431 () Bool)

(assert (=> b!81936 m!84431))

(assert (=> b!80854 d!20405))

(assert (=> b!80733 d!20207))

(declare-fun d!20407 () Bool)

(declare-fun e!53450 () Bool)

(assert (=> d!20407 e!53450))

(declare-fun res!42548 () Bool)

(assert (=> d!20407 (=> res!42548 e!53450)))

(declare-fun lt!38309 () Bool)

(assert (=> d!20407 (= res!42548 (not lt!38309))))

(declare-fun lt!38308 () Bool)

(assert (=> d!20407 (= lt!38309 lt!38308)))

(declare-fun lt!38311 () Unit!2341)

(declare-fun e!53451 () Unit!2341)

(assert (=> d!20407 (= lt!38311 e!53451)))

(declare-fun c!12985 () Bool)

(assert (=> d!20407 (= c!12985 lt!38308)))

(assert (=> d!20407 (= lt!38308 (containsKey!142 (toList!741 lt!37850) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20407 (= (contains!745 lt!37850 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38309)))

(declare-fun b!81937 () Bool)

(declare-fun lt!38310 () Unit!2341)

(assert (=> b!81937 (= e!53451 lt!38310)))

(assert (=> b!81937 (= lt!38310 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37850) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> b!81937 (isDefined!91 (getValueByKey!138 (toList!741 lt!37850) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81938 () Bool)

(declare-fun Unit!2396 () Unit!2341)

(assert (=> b!81938 (= e!53451 Unit!2396)))

(declare-fun b!81939 () Bool)

(assert (=> b!81939 (= e!53450 (isDefined!91 (getValueByKey!138 (toList!741 lt!37850) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (= (and d!20407 c!12985) b!81937))

(assert (= (and d!20407 (not c!12985)) b!81938))

(assert (= (and d!20407 (not res!42548)) b!81939))

(declare-fun m!84433 () Bool)

(assert (=> d!20407 m!84433))

(declare-fun m!84435 () Bool)

(assert (=> b!81937 m!84435))

(assert (=> b!81937 m!82815))

(assert (=> b!81937 m!82815))

(declare-fun m!84437 () Bool)

(assert (=> b!81937 m!84437))

(assert (=> b!81939 m!82815))

(assert (=> b!81939 m!82815))

(assert (=> b!81939 m!84437))

(assert (=> d!19819 d!20407))

(declare-fun c!12986 () Bool)

(declare-fun d!20409 () Bool)

(assert (=> d!20409 (= c!12986 (and ((_ is Cons!1507) lt!37852) (= (_1!1101 (h!2096 lt!37852)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53452 () Option!144)

(assert (=> d!20409 (= (getValueByKey!138 lt!37852 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) e!53452)))

(declare-fun b!81941 () Bool)

(declare-fun e!53453 () Option!144)

(assert (=> b!81941 (= e!53452 e!53453)))

(declare-fun c!12987 () Bool)

(assert (=> b!81941 (= c!12987 (and ((_ is Cons!1507) lt!37852) (not (= (_1!1101 (h!2096 lt!37852)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!81942 () Bool)

(assert (=> b!81942 (= e!53453 (getValueByKey!138 (t!5178 lt!37852) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81943 () Bool)

(assert (=> b!81943 (= e!53453 None!142)))

(declare-fun b!81940 () Bool)

(assert (=> b!81940 (= e!53452 (Some!143 (_2!1101 (h!2096 lt!37852))))))

(assert (= (and d!20409 c!12986) b!81940))

(assert (= (and d!20409 (not c!12986)) b!81941))

(assert (= (and b!81941 c!12987) b!81942))

(assert (= (and b!81941 (not c!12987)) b!81943))

(declare-fun m!84439 () Bool)

(assert (=> b!81942 m!84439))

(assert (=> d!19819 d!20409))

(declare-fun d!20411 () Bool)

(assert (=> d!20411 (= (getValueByKey!138 lt!37852 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun lt!38312 () Unit!2341)

(assert (=> d!20411 (= lt!38312 (choose!470 lt!37852 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun e!53454 () Bool)

(assert (=> d!20411 e!53454))

(declare-fun res!42549 () Bool)

(assert (=> d!20411 (=> (not res!42549) (not e!53454))))

(assert (=> d!20411 (= res!42549 (isStrictlySorted!296 lt!37852))))

(assert (=> d!20411 (= (lemmaContainsTupThenGetReturnValue!55 lt!37852 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38312)))

(declare-fun b!81944 () Bool)

(declare-fun res!42550 () Bool)

(assert (=> b!81944 (=> (not res!42550) (not e!53454))))

(assert (=> b!81944 (= res!42550 (containsKey!142 lt!37852 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81945 () Bool)

(assert (=> b!81945 (= e!53454 (contains!746 lt!37852 (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (= (and d!20411 res!42549) b!81944))

(assert (= (and b!81944 res!42550) b!81945))

(assert (=> d!20411 m!82809))

(declare-fun m!84441 () Bool)

(assert (=> d!20411 m!84441))

(declare-fun m!84443 () Bool)

(assert (=> d!20411 m!84443))

(declare-fun m!84445 () Bool)

(assert (=> b!81944 m!84445))

(declare-fun m!84447 () Bool)

(assert (=> b!81945 m!84447))

(assert (=> d!19819 d!20411))

(declare-fun b!81946 () Bool)

(declare-fun c!12988 () Bool)

(assert (=> b!81946 (= c!12988 (and ((_ is Cons!1507) (toList!741 lt!37277)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53455 () List!1511)

(declare-fun e!53456 () List!1511)

(assert (=> b!81946 (= e!53455 e!53456)))

(declare-fun b!81947 () Bool)

(declare-fun call!7664 () List!1511)

(assert (=> b!81947 (= e!53456 call!7664)))

(declare-fun e!53457 () List!1511)

(declare-fun c!12990 () Bool)

(declare-fun b!81948 () Bool)

(assert (=> b!81948 (= e!53457 (ite c!12990 (t!5178 (toList!741 lt!37277)) (ite c!12988 (Cons!1507 (h!2096 (toList!741 lt!37277)) (t!5178 (toList!741 lt!37277))) Nil!1508)))))

(declare-fun d!20413 () Bool)

(declare-fun e!53459 () Bool)

(assert (=> d!20413 e!53459))

(declare-fun res!42552 () Bool)

(assert (=> d!20413 (=> (not res!42552) (not e!53459))))

(declare-fun lt!38313 () List!1511)

(assert (=> d!20413 (= res!42552 (isStrictlySorted!296 lt!38313))))

(declare-fun e!53458 () List!1511)

(assert (=> d!20413 (= lt!38313 e!53458)))

(declare-fun c!12989 () Bool)

(assert (=> d!20413 (= c!12989 (and ((_ is Cons!1507) (toList!741 lt!37277)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (=> d!20413 (isStrictlySorted!296 (toList!741 lt!37277))))

(assert (=> d!20413 (= (insertStrictlySorted!58 (toList!741 lt!37277) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38313)))

(declare-fun b!81949 () Bool)

(declare-fun call!7666 () List!1511)

(assert (=> b!81949 (= e!53458 call!7666)))

(declare-fun bm!7661 () Bool)

(declare-fun call!7665 () List!1511)

(assert (=> bm!7661 (= call!7665 call!7666)))

(declare-fun bm!7662 () Bool)

(assert (=> bm!7662 (= call!7664 call!7665)))

(declare-fun b!81950 () Bool)

(assert (=> b!81950 (= e!53459 (contains!746 lt!38313 (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!81951 () Bool)

(assert (=> b!81951 (= e!53458 e!53455)))

(assert (=> b!81951 (= c!12990 (and ((_ is Cons!1507) (toList!741 lt!37277)) (= (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!81952 () Bool)

(assert (=> b!81952 (= e!53456 call!7664)))

(declare-fun b!81953 () Bool)

(declare-fun res!42551 () Bool)

(assert (=> b!81953 (=> (not res!42551) (not e!53459))))

(assert (=> b!81953 (= res!42551 (containsKey!142 lt!38313 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun bm!7663 () Bool)

(assert (=> bm!7663 (= call!7666 ($colon$colon!70 e!53457 (ite c!12989 (h!2096 (toList!741 lt!37277)) (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun c!12991 () Bool)

(assert (=> bm!7663 (= c!12991 c!12989)))

(declare-fun b!81954 () Bool)

(assert (=> b!81954 (= e!53457 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37277)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81955 () Bool)

(assert (=> b!81955 (= e!53455 call!7665)))

(assert (= (and d!20413 c!12989) b!81949))

(assert (= (and d!20413 (not c!12989)) b!81951))

(assert (= (and b!81951 c!12990) b!81955))

(assert (= (and b!81951 (not c!12990)) b!81946))

(assert (= (and b!81946 c!12988) b!81952))

(assert (= (and b!81946 (not c!12988)) b!81947))

(assert (= (or b!81952 b!81947) bm!7662))

(assert (= (or b!81955 bm!7662) bm!7661))

(assert (= (or b!81949 bm!7661) bm!7663))

(assert (= (and bm!7663 c!12991) b!81954))

(assert (= (and bm!7663 (not c!12991)) b!81948))

(assert (= (and d!20413 res!42552) b!81953))

(assert (= (and b!81953 res!42551) b!81950))

(declare-fun m!84449 () Bool)

(assert (=> b!81950 m!84449))

(declare-fun m!84451 () Bool)

(assert (=> b!81953 m!84451))

(declare-fun m!84453 () Bool)

(assert (=> d!20413 m!84453))

(assert (=> d!20413 m!82413))

(declare-fun m!84455 () Bool)

(assert (=> b!81954 m!84455))

(declare-fun m!84457 () Bool)

(assert (=> bm!7663 m!84457))

(assert (=> d!19819 d!20413))

(declare-fun d!20415 () Bool)

(declare-fun c!12992 () Bool)

(assert (=> d!20415 (= c!12992 ((_ is Nil!1508) (toList!741 lt!37557)))))

(declare-fun e!53460 () (InoxSet tuple2!2180))

(assert (=> d!20415 (= (content!85 (toList!741 lt!37557)) e!53460)))

(declare-fun b!81956 () Bool)

(assert (=> b!81956 (= e!53460 ((as const (Array tuple2!2180 Bool)) false))))

(declare-fun b!81957 () Bool)

(assert (=> b!81957 (= e!53460 ((_ map or) (store ((as const (Array tuple2!2180 Bool)) false) (h!2096 (toList!741 lt!37557)) true) (content!85 (t!5178 (toList!741 lt!37557)))))))

(assert (= (and d!20415 c!12992) b!81956))

(assert (= (and d!20415 (not c!12992)) b!81957))

(declare-fun m!84459 () Bool)

(assert (=> b!81957 m!84459))

(assert (=> b!81957 m!83441))

(assert (=> d!19847 d!20415))

(declare-fun d!20417 () Bool)

(assert (=> d!20417 (isDefined!91 (getValueByKey!138 (toList!741 lt!37512) (_1!1101 lt!37268)))))

(declare-fun lt!38314 () Unit!2341)

(assert (=> d!20417 (= lt!38314 (choose!477 (toList!741 lt!37512) (_1!1101 lt!37268)))))

(declare-fun e!53461 () Bool)

(assert (=> d!20417 e!53461))

(declare-fun res!42553 () Bool)

(assert (=> d!20417 (=> (not res!42553) (not e!53461))))

(assert (=> d!20417 (= res!42553 (isStrictlySorted!296 (toList!741 lt!37512)))))

(assert (=> d!20417 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37512) (_1!1101 lt!37268)) lt!38314)))

(declare-fun b!81958 () Bool)

(assert (=> b!81958 (= e!53461 (containsKey!142 (toList!741 lt!37512) (_1!1101 lt!37268)))))

(assert (= (and d!20417 res!42553) b!81958))

(assert (=> d!20417 m!82067))

(assert (=> d!20417 m!82067))

(assert (=> d!20417 m!82395))

(declare-fun m!84461 () Bool)

(assert (=> d!20417 m!84461))

(declare-fun m!84463 () Bool)

(assert (=> d!20417 m!84463))

(assert (=> b!81958 m!82391))

(assert (=> b!80735 d!20417))

(declare-fun d!20419 () Bool)

(assert (=> d!20419 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37512) (_1!1101 lt!37268))) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37512) (_1!1101 lt!37268)))))))

(declare-fun bs!3467 () Bool)

(assert (= bs!3467 d!20419))

(assert (=> bs!3467 m!82067))

(declare-fun m!84465 () Bool)

(assert (=> bs!3467 m!84465))

(assert (=> b!80735 d!20419))

(assert (=> b!80735 d!19809))

(declare-fun d!20421 () Bool)

(declare-fun res!42554 () Bool)

(declare-fun e!53462 () Bool)

(assert (=> d!20421 (=> res!42554 e!53462)))

(assert (=> d!20421 (= res!42554 (and ((_ is Cons!1507) (toList!741 call!7477)) (= (_1!1101 (h!2096 (toList!741 call!7477))) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427)))))))

(assert (=> d!20421 (= (containsKey!142 (toList!741 call!7477) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))) e!53462)))

(declare-fun b!81959 () Bool)

(declare-fun e!53463 () Bool)

(assert (=> b!81959 (= e!53462 e!53463)))

(declare-fun res!42555 () Bool)

(assert (=> b!81959 (=> (not res!42555) (not e!53463))))

(assert (=> b!81959 (= res!42555 (and (or (not ((_ is Cons!1507) (toList!741 call!7477))) (bvsle (_1!1101 (h!2096 (toList!741 call!7477))) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427)))) ((_ is Cons!1507) (toList!741 call!7477)) (bvslt (_1!1101 (h!2096 (toList!741 call!7477))) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427)))))))

(declare-fun b!81960 () Bool)

(assert (=> b!81960 (= e!53463 (containsKey!142 (t!5178 (toList!741 call!7477)) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))

(assert (= (and d!20421 (not res!42554)) b!81959))

(assert (= (and b!81959 res!42555) b!81960))

(assert (=> b!81960 m!81977))

(declare-fun m!84467 () Bool)

(assert (=> b!81960 m!84467))

(assert (=> d!19829 d!20421))

(declare-fun d!20423 () Bool)

(declare-fun res!42556 () Bool)

(declare-fun e!53464 () Bool)

(assert (=> d!20423 (=> res!42556 e!53464)))

(assert (=> d!20423 (= res!42556 (and ((_ is Cons!1507) lt!37514) (= (_1!1101 (h!2096 lt!37514)) (_1!1101 lt!37268))))))

(assert (=> d!20423 (= (containsKey!142 lt!37514 (_1!1101 lt!37268)) e!53464)))

(declare-fun b!81961 () Bool)

(declare-fun e!53465 () Bool)

(assert (=> b!81961 (= e!53464 e!53465)))

(declare-fun res!42557 () Bool)

(assert (=> b!81961 (=> (not res!42557) (not e!53465))))

(assert (=> b!81961 (= res!42557 (and (or (not ((_ is Cons!1507) lt!37514)) (bvsle (_1!1101 (h!2096 lt!37514)) (_1!1101 lt!37268))) ((_ is Cons!1507) lt!37514) (bvslt (_1!1101 (h!2096 lt!37514)) (_1!1101 lt!37268))))))

(declare-fun b!81962 () Bool)

(assert (=> b!81962 (= e!53465 (containsKey!142 (t!5178 lt!37514) (_1!1101 lt!37268)))))

(assert (= (and d!20423 (not res!42556)) b!81961))

(assert (= (and b!81961 res!42557) b!81962))

(declare-fun m!84469 () Bool)

(assert (=> b!81962 m!84469))

(assert (=> b!80746 d!20423))

(assert (=> d!19823 d!19695))

(assert (=> b!80737 d!20419))

(assert (=> b!80737 d!19809))

(declare-fun d!20425 () Bool)

(declare-fun c!12993 () Bool)

(assert (=> d!20425 (= c!12993 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37541))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37541)))) (_1!1101 lt!37283))))))

(declare-fun e!53466 () Option!144)

(assert (=> d!20425 (= (getValueByKey!138 (t!5178 (toList!741 lt!37541)) (_1!1101 lt!37283)) e!53466)))

(declare-fun b!81964 () Bool)

(declare-fun e!53467 () Option!144)

(assert (=> b!81964 (= e!53466 e!53467)))

(declare-fun c!12994 () Bool)

(assert (=> b!81964 (= c!12994 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37541))) (not (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37541)))) (_1!1101 lt!37283)))))))

(declare-fun b!81965 () Bool)

(assert (=> b!81965 (= e!53467 (getValueByKey!138 (t!5178 (t!5178 (toList!741 lt!37541))) (_1!1101 lt!37283)))))

(declare-fun b!81966 () Bool)

(assert (=> b!81966 (= e!53467 None!142)))

(declare-fun b!81963 () Bool)

(assert (=> b!81963 (= e!53466 (Some!143 (_2!1101 (h!2096 (t!5178 (toList!741 lt!37541))))))))

(assert (= (and d!20425 c!12993) b!81963))

(assert (= (and d!20425 (not c!12993)) b!81964))

(assert (= (and b!81964 c!12994) b!81965))

(assert (= (and b!81964 (not c!12994)) b!81966))

(declare-fun m!84471 () Bool)

(assert (=> b!81965 m!84471))

(assert (=> b!81037 d!20425))

(declare-fun c!12995 () Bool)

(declare-fun d!20427 () Bool)

(assert (=> d!20427 (= c!12995 (and ((_ is Cons!1507) (toList!741 lt!37846)) (= (_1!1101 (h!2096 (toList!741 lt!37846))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53468 () Option!144)

(assert (=> d!20427 (= (getValueByKey!138 (toList!741 lt!37846) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) e!53468)))

(declare-fun b!81968 () Bool)

(declare-fun e!53469 () Option!144)

(assert (=> b!81968 (= e!53468 e!53469)))

(declare-fun c!12996 () Bool)

(assert (=> b!81968 (= c!12996 (and ((_ is Cons!1507) (toList!741 lt!37846)) (not (= (_1!1101 (h!2096 (toList!741 lt!37846))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!81969 () Bool)

(assert (=> b!81969 (= e!53469 (getValueByKey!138 (t!5178 (toList!741 lt!37846)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!81970 () Bool)

(assert (=> b!81970 (= e!53469 None!142)))

(declare-fun b!81967 () Bool)

(assert (=> b!81967 (= e!53468 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37846)))))))

(assert (= (and d!20427 c!12995) b!81967))

(assert (= (and d!20427 (not c!12995)) b!81968))

(assert (= (and b!81968 c!12996) b!81969))

(assert (= (and b!81968 (not c!12996)) b!81970))

(declare-fun m!84473 () Bool)

(assert (=> b!81969 m!84473))

(assert (=> b!81005 d!20427))

(declare-fun d!20429 () Bool)

(declare-fun lt!38315 () Bool)

(assert (=> d!20429 (= lt!38315 (select (content!85 lt!37952) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(declare-fun e!53471 () Bool)

(assert (=> d!20429 (= lt!38315 e!53471)))

(declare-fun res!42558 () Bool)

(assert (=> d!20429 (=> (not res!42558) (not e!53471))))

(assert (=> d!20429 (= res!42558 ((_ is Cons!1507) lt!37952))))

(assert (=> d!20429 (= (contains!746 lt!37952 (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))) lt!38315)))

(declare-fun b!81971 () Bool)

(declare-fun e!53470 () Bool)

(assert (=> b!81971 (= e!53471 e!53470)))

(declare-fun res!42559 () Bool)

(assert (=> b!81971 (=> res!42559 e!53470)))

(assert (=> b!81971 (= res!42559 (= (h!2096 lt!37952) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(declare-fun b!81972 () Bool)

(assert (=> b!81972 (= e!53470 (contains!746 (t!5178 lt!37952) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(assert (= (and d!20429 res!42558) b!81971))

(assert (= (and b!81971 (not res!42559)) b!81972))

(declare-fun m!84475 () Bool)

(assert (=> d!20429 m!84475))

(declare-fun m!84477 () Bool)

(assert (=> d!20429 m!84477))

(declare-fun m!84479 () Bool)

(assert (=> b!81972 m!84479))

(assert (=> b!81176 d!20429))

(declare-fun d!20431 () Bool)

(declare-fun lt!38320 () SeekEntryResult!241)

(assert (=> d!20431 (and (or ((_ is Undefined!241) lt!38320) (not ((_ is Found!241) lt!38320)) (and (bvsge (index!3100 lt!38320) #b00000000000000000000000000000000) (bvslt (index!3100 lt!38320) (size!2143 (_keys!3957 newMap!16))))) (or ((_ is Undefined!241) lt!38320) ((_ is Found!241) lt!38320) (not ((_ is MissingVacant!241) lt!38320)) (not (= (index!3102 lt!38320) (index!3101 lt!37652))) (and (bvsge (index!3102 lt!38320) #b00000000000000000000000000000000) (bvslt (index!3102 lt!38320) (size!2143 (_keys!3957 newMap!16))))) (or ((_ is Undefined!241) lt!38320) (ite ((_ is Found!241) lt!38320) (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!38320)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) (and ((_ is MissingVacant!241) lt!38320) (= (index!3102 lt!38320) (index!3101 lt!37652)) (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3102 lt!38320)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!53480 () SeekEntryResult!241)

(assert (=> d!20431 (= lt!38320 e!53480)))

(declare-fun c!13004 () Bool)

(assert (=> d!20431 (= c!13004 (bvsge (x!11692 lt!37652) #b01111111111111111111111111111110))))

(declare-fun lt!38321 () (_ BitVec 64))

(assert (=> d!20431 (= lt!38321 (select (arr!1901 (_keys!3957 newMap!16)) (index!3101 lt!37652)))))

(assert (=> d!20431 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20431 (= (seekKeyOrZeroReturnVacant!0 (x!11692 lt!37652) (index!3101 lt!37652) (index!3101 lt!37652) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)) lt!38320)))

(declare-fun b!81985 () Bool)

(assert (=> b!81985 (= e!53480 Undefined!241)))

(declare-fun b!81986 () Bool)

(declare-fun c!13003 () Bool)

(assert (=> b!81986 (= c!13003 (= lt!38321 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53478 () SeekEntryResult!241)

(declare-fun e!53479 () SeekEntryResult!241)

(assert (=> b!81986 (= e!53478 e!53479)))

(declare-fun b!81987 () Bool)

(assert (=> b!81987 (= e!53478 (Found!241 (index!3101 lt!37652)))))

(declare-fun b!81988 () Bool)

(assert (=> b!81988 (= e!53479 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11692 lt!37652) #b00000000000000000000000000000001) (nextIndex!0 (index!3101 lt!37652) (x!11692 lt!37652) (mask!6299 newMap!16)) (index!3101 lt!37652) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun b!81989 () Bool)

(assert (=> b!81989 (= e!53480 e!53478)))

(declare-fun c!13005 () Bool)

(assert (=> b!81989 (= c!13005 (= lt!38321 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!81990 () Bool)

(assert (=> b!81990 (= e!53479 (MissingVacant!241 (index!3101 lt!37652)))))

(assert (= (and d!20431 c!13004) b!81985))

(assert (= (and d!20431 (not c!13004)) b!81989))

(assert (= (and b!81989 c!13005) b!81987))

(assert (= (and b!81989 (not c!13005)) b!81986))

(assert (= (and b!81986 c!13003) b!81990))

(assert (= (and b!81986 (not c!13003)) b!81988))

(declare-fun m!84481 () Bool)

(assert (=> d!20431 m!84481))

(declare-fun m!84483 () Bool)

(assert (=> d!20431 m!84483))

(assert (=> d!20431 m!82463))

(assert (=> d!20431 m!82321))

(declare-fun m!84485 () Bool)

(assert (=> b!81988 m!84485))

(assert (=> b!81988 m!84485))

(assert (=> b!81988 m!81811))

(declare-fun m!84487 () Bool)

(assert (=> b!81988 m!84487))

(assert (=> b!80831 d!20431))

(declare-fun d!20433 () Bool)

(declare-fun lt!38322 () Bool)

(assert (=> d!20433 (= lt!38322 (select (content!85 (toList!741 lt!37827)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun e!53482 () Bool)

(assert (=> d!20433 (= lt!38322 e!53482)))

(declare-fun res!42560 () Bool)

(assert (=> d!20433 (=> (not res!42560) (not e!53482))))

(assert (=> d!20433 (= res!42560 ((_ is Cons!1507) (toList!741 lt!37827)))))

(assert (=> d!20433 (= (contains!746 (toList!741 lt!37827) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!38322)))

(declare-fun b!81991 () Bool)

(declare-fun e!53481 () Bool)

(assert (=> b!81991 (= e!53482 e!53481)))

(declare-fun res!42561 () Bool)

(assert (=> b!81991 (=> res!42561 e!53481)))

(assert (=> b!81991 (= res!42561 (= (h!2096 (toList!741 lt!37827)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!81992 () Bool)

(assert (=> b!81992 (= e!53481 (contains!746 (t!5178 (toList!741 lt!37827)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!20433 res!42560) b!81991))

(assert (= (and b!81991 (not res!42561)) b!81992))

(declare-fun m!84489 () Bool)

(assert (=> d!20433 m!84489))

(declare-fun m!84491 () Bool)

(assert (=> d!20433 m!84491))

(declare-fun m!84493 () Bool)

(assert (=> b!81992 m!84493))

(assert (=> b!80994 d!20433))

(declare-fun d!20435 () Bool)

(assert (=> d!20435 (= (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37480)) (v!2612 (getValueByKey!138 (toList!741 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37480)))))

(assert (=> d!19873 d!20435))

(declare-fun d!20437 () Bool)

(declare-fun c!13006 () Bool)

(assert (=> d!20437 (= c!13006 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))) lt!37480)))))

(declare-fun e!53483 () Option!144)

(assert (=> d!20437 (= (getValueByKey!138 (toList!741 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!37480) e!53483)))

(declare-fun b!81994 () Bool)

(declare-fun e!53484 () Option!144)

(assert (=> b!81994 (= e!53483 e!53484)))

(declare-fun c!13007 () Bool)

(assert (=> b!81994 (= c!13007 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (not (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))) lt!37480))))))

(declare-fun b!81995 () Bool)

(assert (=> b!81995 (= e!53484 (getValueByKey!138 (t!5178 (toList!741 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) lt!37480))))

(declare-fun b!81996 () Bool)

(assert (=> b!81996 (= e!53484 None!142)))

(declare-fun b!81993 () Bool)

(assert (=> b!81993 (= e!53483 (Some!143 (_2!1101 (h!2096 (toList!741 (+!106 lt!37498 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))))

(assert (= (and d!20437 c!13006) b!81993))

(assert (= (and d!20437 (not c!13006)) b!81994))

(assert (= (and b!81994 c!13007) b!81995))

(assert (= (and b!81994 (not c!13007)) b!81996))

(declare-fun m!84495 () Bool)

(assert (=> b!81995 m!84495))

(assert (=> d!19873 d!20437))

(declare-fun d!20439 () Bool)

(declare-fun res!42562 () Bool)

(declare-fun e!53485 () Bool)

(assert (=> d!20439 (=> res!42562 e!53485)))

(assert (=> d!20439 (= res!42562 (and ((_ is Cons!1507) (toList!741 e!52557)) (= (_1!1101 (h!2096 (toList!741 e!52557))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!20439 (= (containsKey!142 (toList!741 e!52557) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) e!53485)))

(declare-fun b!81997 () Bool)

(declare-fun e!53486 () Bool)

(assert (=> b!81997 (= e!53485 e!53486)))

(declare-fun res!42563 () Bool)

(assert (=> b!81997 (=> (not res!42563) (not e!53486))))

(assert (=> b!81997 (= res!42563 (and (or (not ((_ is Cons!1507) (toList!741 e!52557))) (bvsle (_1!1101 (h!2096 (toList!741 e!52557))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))) ((_ is Cons!1507) (toList!741 e!52557)) (bvslt (_1!1101 (h!2096 (toList!741 e!52557))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(declare-fun b!81998 () Bool)

(assert (=> b!81998 (= e!53486 (containsKey!142 (t!5178 (toList!741 e!52557)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!20439 (not res!42562)) b!81997))

(assert (= (and b!81997 res!42563) b!81998))

(assert (=> b!81998 m!81811))

(declare-fun m!84497 () Bool)

(assert (=> b!81998 m!84497))

(assert (=> d!19705 d!20439))

(declare-fun d!20441 () Bool)

(declare-fun res!42564 () Bool)

(declare-fun e!53487 () Bool)

(assert (=> d!20441 (=> res!42564 e!53487)))

(assert (=> d!20441 (= res!42564 (and ((_ is Cons!1507) (toList!741 lt!37534)) (= (_1!1101 (h!2096 (toList!741 lt!37534))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20441 (= (containsKey!142 (toList!741 lt!37534) #b0000000000000000000000000000000000000000000000000000000000000000) e!53487)))

(declare-fun b!81999 () Bool)

(declare-fun e!53488 () Bool)

(assert (=> b!81999 (= e!53487 e!53488)))

(declare-fun res!42565 () Bool)

(assert (=> b!81999 (=> (not res!42565) (not e!53488))))

(assert (=> b!81999 (= res!42565 (and (or (not ((_ is Cons!1507) (toList!741 lt!37534))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37534))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1507) (toList!741 lt!37534)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37534))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82000 () Bool)

(assert (=> b!82000 (= e!53488 (containsKey!142 (t!5178 (toList!741 lt!37534)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20441 (not res!42564)) b!81999))

(assert (= (and b!81999 res!42565) b!82000))

(declare-fun m!84499 () Bool)

(assert (=> b!82000 m!84499))

(assert (=> d!19763 d!20441))

(declare-fun d!20443 () Bool)

(assert (=> d!20443 (= ($colon$colon!70 e!52868 (ite c!12714 (h!2096 (toList!741 (+!106 lt!37276 lt!37278))) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283)))) (Cons!1507 (ite c!12714 (h!2096 (toList!741 (+!106 lt!37276 lt!37278))) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))) e!52868))))

(assert (=> bm!7556 d!20443))

(assert (=> d!19885 d!19887))

(assert (=> d!19885 d!19889))

(declare-fun d!20445 () Bool)

(assert (=> d!20445 (isDefined!91 (getValueByKey!138 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!20445 true))

(declare-fun _$12!329 () Unit!2341)

(assert (=> d!20445 (= (choose!477 (toList!741 lt!37271) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) _$12!329)))

(declare-fun bs!3468 () Bool)

(assert (= bs!3468 d!20445))

(assert (=> bs!3468 m!81811))

(assert (=> bs!3468 m!81933))

(assert (=> bs!3468 m!81933))

(assert (=> bs!3468 m!81935))

(assert (=> d!19885 d!20445))

(declare-fun d!20447 () Bool)

(declare-fun res!42566 () Bool)

(declare-fun e!53489 () Bool)

(assert (=> d!20447 (=> res!42566 e!53489)))

(assert (=> d!20447 (= res!42566 (or ((_ is Nil!1508) (toList!741 lt!37271)) ((_ is Nil!1508) (t!5178 (toList!741 lt!37271)))))))

(assert (=> d!20447 (= (isStrictlySorted!296 (toList!741 lt!37271)) e!53489)))

(declare-fun b!82001 () Bool)

(declare-fun e!53490 () Bool)

(assert (=> b!82001 (= e!53489 e!53490)))

(declare-fun res!42567 () Bool)

(assert (=> b!82001 (=> (not res!42567) (not e!53490))))

(assert (=> b!82001 (= res!42567 (bvslt (_1!1101 (h!2096 (toList!741 lt!37271))) (_1!1101 (h!2096 (t!5178 (toList!741 lt!37271))))))))

(declare-fun b!82002 () Bool)

(assert (=> b!82002 (= e!53490 (isStrictlySorted!296 (t!5178 (toList!741 lt!37271))))))

(assert (= (and d!20447 (not res!42566)) b!82001))

(assert (= (and b!82001 res!42567) b!82002))

(declare-fun m!84501 () Bool)

(assert (=> b!82002 m!84501))

(assert (=> d!19885 d!20447))

(assert (=> b!80727 d!20163))

(assert (=> b!80727 d!20165))

(assert (=> d!19795 d!19793))

(declare-fun d!20449 () Bool)

(assert (=> d!20449 (= (getValueByKey!138 lt!37543 (_1!1101 lt!37283)) (Some!143 (_2!1101 lt!37283)))))

(assert (=> d!20449 true))

(declare-fun _$22!402 () Unit!2341)

(assert (=> d!20449 (= (choose!470 lt!37543 (_1!1101 lt!37283) (_2!1101 lt!37283)) _$22!402)))

(declare-fun bs!3469 () Bool)

(assert (= bs!3469 d!20449))

(assert (=> bs!3469 m!82105))

(assert (=> d!19795 d!20449))

(declare-fun d!20451 () Bool)

(declare-fun res!42568 () Bool)

(declare-fun e!53491 () Bool)

(assert (=> d!20451 (=> res!42568 e!53491)))

(assert (=> d!20451 (= res!42568 (or ((_ is Nil!1508) lt!37543) ((_ is Nil!1508) (t!5178 lt!37543))))))

(assert (=> d!20451 (= (isStrictlySorted!296 lt!37543) e!53491)))

(declare-fun b!82003 () Bool)

(declare-fun e!53492 () Bool)

(assert (=> b!82003 (= e!53491 e!53492)))

(declare-fun res!42569 () Bool)

(assert (=> b!82003 (=> (not res!42569) (not e!53492))))

(assert (=> b!82003 (= res!42569 (bvslt (_1!1101 (h!2096 lt!37543)) (_1!1101 (h!2096 (t!5178 lt!37543)))))))

(declare-fun b!82004 () Bool)

(assert (=> b!82004 (= e!53492 (isStrictlySorted!296 (t!5178 lt!37543)))))

(assert (= (and d!20451 (not res!42568)) b!82003))

(assert (= (and b!82003 res!42569) b!82004))

(declare-fun m!84503 () Bool)

(assert (=> b!82004 m!84503))

(assert (=> d!19795 d!20451))

(declare-fun d!20453 () Bool)

(assert (=> d!20453 (isDefined!91 (getValueByKey!138 (toList!741 lt!37534) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38323 () Unit!2341)

(assert (=> d!20453 (= lt!38323 (choose!477 (toList!741 lt!37534) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53493 () Bool)

(assert (=> d!20453 e!53493))

(declare-fun res!42570 () Bool)

(assert (=> d!20453 (=> (not res!42570) (not e!53493))))

(assert (=> d!20453 (= res!42570 (isStrictlySorted!296 (toList!741 lt!37534)))))

(assert (=> d!20453 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37534) #b1000000000000000000000000000000000000000000000000000000000000000) lt!38323)))

(declare-fun b!82005 () Bool)

(assert (=> b!82005 (= e!53493 (containsKey!142 (toList!741 lt!37534) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20453 res!42570) b!82005))

(assert (=> d!20453 m!83071))

(assert (=> d!20453 m!83071))

(assert (=> d!20453 m!83073))

(declare-fun m!84505 () Bool)

(assert (=> d!20453 m!84505))

(declare-fun m!84507 () Bool)

(assert (=> d!20453 m!84507))

(assert (=> b!82005 m!83067))

(assert (=> b!81105 d!20453))

(declare-fun d!20455 () Bool)

(assert (=> d!20455 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37534) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37534) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3470 () Bool)

(assert (= bs!3470 d!20455))

(assert (=> bs!3470 m!83071))

(declare-fun m!84509 () Bool)

(assert (=> bs!3470 m!84509))

(assert (=> b!81105 d!20455))

(declare-fun d!20457 () Bool)

(declare-fun c!13008 () Bool)

(assert (=> d!20457 (= c!13008 (and ((_ is Cons!1507) (toList!741 lt!37534)) (= (_1!1101 (h!2096 (toList!741 lt!37534))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53494 () Option!144)

(assert (=> d!20457 (= (getValueByKey!138 (toList!741 lt!37534) #b1000000000000000000000000000000000000000000000000000000000000000) e!53494)))

(declare-fun b!82007 () Bool)

(declare-fun e!53495 () Option!144)

(assert (=> b!82007 (= e!53494 e!53495)))

(declare-fun c!13009 () Bool)

(assert (=> b!82007 (= c!13009 (and ((_ is Cons!1507) (toList!741 lt!37534)) (not (= (_1!1101 (h!2096 (toList!741 lt!37534))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!82008 () Bool)

(assert (=> b!82008 (= e!53495 (getValueByKey!138 (t!5178 (toList!741 lt!37534)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82009 () Bool)

(assert (=> b!82009 (= e!53495 None!142)))

(declare-fun b!82006 () Bool)

(assert (=> b!82006 (= e!53494 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37534)))))))

(assert (= (and d!20457 c!13008) b!82006))

(assert (= (and d!20457 (not c!13008)) b!82007))

(assert (= (and b!82007 c!13009) b!82008))

(assert (= (and b!82007 (not c!13009)) b!82009))

(declare-fun m!84511 () Bool)

(assert (=> b!82008 m!84511))

(assert (=> b!81105 d!20457))

(assert (=> b!80697 d!20079))

(declare-fun d!20459 () Bool)

(declare-fun lt!38324 () Bool)

(assert (=> d!20459 (= lt!38324 (select (content!85 (toList!741 lt!37615)) (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun e!53497 () Bool)

(assert (=> d!20459 (= lt!38324 e!53497)))

(declare-fun res!42571 () Bool)

(assert (=> d!20459 (=> (not res!42571) (not e!53497))))

(assert (=> d!20459 (= res!42571 ((_ is Cons!1507) (toList!741 lt!37615)))))

(assert (=> d!20459 (= (contains!746 (toList!741 lt!37615) (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38324)))

(declare-fun b!82010 () Bool)

(declare-fun e!53496 () Bool)

(assert (=> b!82010 (= e!53497 e!53496)))

(declare-fun res!42572 () Bool)

(assert (=> b!82010 (=> res!42572 e!53496)))

(assert (=> b!82010 (= res!42572 (= (h!2096 (toList!741 lt!37615)) (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!82011 () Bool)

(assert (=> b!82011 (= e!53496 (contains!746 (t!5178 (toList!741 lt!37615)) (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (= (and d!20459 res!42571) b!82010))

(assert (= (and b!82010 (not res!42572)) b!82011))

(declare-fun m!84513 () Bool)

(assert (=> d!20459 m!84513))

(declare-fun m!84515 () Bool)

(assert (=> d!20459 m!84515))

(declare-fun m!84517 () Bool)

(assert (=> b!82011 m!84517))

(assert (=> b!80721 d!20459))

(declare-fun c!13010 () Bool)

(declare-fun d!20461 () Bool)

(assert (=> d!20461 (= c!13010 (and ((_ is Cons!1507) (toList!741 lt!37873)) (= (_1!1101 (h!2096 (toList!741 lt!37873))) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun e!53498 () Option!144)

(assert (=> d!20461 (= (getValueByKey!138 (toList!741 lt!37873) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) e!53498)))

(declare-fun b!82013 () Bool)

(declare-fun e!53499 () Option!144)

(assert (=> b!82013 (= e!53498 e!53499)))

(declare-fun c!13011 () Bool)

(assert (=> b!82013 (= c!13011 (and ((_ is Cons!1507) (toList!741 lt!37873)) (not (= (_1!1101 (h!2096 (toList!741 lt!37873))) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))))

(declare-fun b!82014 () Bool)

(assert (=> b!82014 (= e!53499 (getValueByKey!138 (t!5178 (toList!741 lt!37873)) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82015 () Bool)

(assert (=> b!82015 (= e!53499 None!142)))

(declare-fun b!82012 () Bool)

(assert (=> b!82012 (= e!53498 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37873)))))))

(assert (= (and d!20461 c!13010) b!82012))

(assert (= (and d!20461 (not c!13010)) b!82013))

(assert (= (and b!82013 c!13011) b!82014))

(assert (= (and b!82013 (not c!13011)) b!82015))

(declare-fun m!84519 () Bool)

(assert (=> b!82014 m!84519))

(assert (=> b!81029 d!20461))

(declare-fun d!20463 () Bool)

(declare-fun res!42573 () Bool)

(declare-fun e!53500 () Bool)

(assert (=> d!20463 (=> res!42573 e!53500)))

(assert (=> d!20463 (= res!42573 (and ((_ is Cons!1507) lt!37510) (= (_1!1101 (h!2096 lt!37510)) (_1!1101 lt!37278))))))

(assert (=> d!20463 (= (containsKey!142 lt!37510 (_1!1101 lt!37278)) e!53500)))

(declare-fun b!82016 () Bool)

(declare-fun e!53501 () Bool)

(assert (=> b!82016 (= e!53500 e!53501)))

(declare-fun res!42574 () Bool)

(assert (=> b!82016 (=> (not res!42574) (not e!53501))))

(assert (=> b!82016 (= res!42574 (and (or (not ((_ is Cons!1507) lt!37510)) (bvsle (_1!1101 (h!2096 lt!37510)) (_1!1101 lt!37278))) ((_ is Cons!1507) lt!37510) (bvslt (_1!1101 (h!2096 lt!37510)) (_1!1101 lt!37278))))))

(declare-fun b!82017 () Bool)

(assert (=> b!82017 (= e!53501 (containsKey!142 (t!5178 lt!37510) (_1!1101 lt!37278)))))

(assert (= (and d!20463 (not res!42573)) b!82016))

(assert (= (and b!82016 res!42574) b!82017))

(declare-fun m!84521 () Bool)

(assert (=> b!82017 m!84521))

(assert (=> b!81071 d!20463))

(declare-fun d!20465 () Bool)

(declare-fun res!42575 () Bool)

(declare-fun e!53502 () Bool)

(assert (=> d!20465 (=> res!42575 e!53502)))

(assert (=> d!20465 (= res!42575 (and ((_ is Cons!1507) lt!37937) (= (_1!1101 (h!2096 lt!37937)) (_1!1101 lt!37278))))))

(assert (=> d!20465 (= (containsKey!142 lt!37937 (_1!1101 lt!37278)) e!53502)))

(declare-fun b!82018 () Bool)

(declare-fun e!53503 () Bool)

(assert (=> b!82018 (= e!53502 e!53503)))

(declare-fun res!42576 () Bool)

(assert (=> b!82018 (=> (not res!42576) (not e!53503))))

(assert (=> b!82018 (= res!42576 (and (or (not ((_ is Cons!1507) lt!37937)) (bvsle (_1!1101 (h!2096 lt!37937)) (_1!1101 lt!37278))) ((_ is Cons!1507) lt!37937) (bvslt (_1!1101 (h!2096 lt!37937)) (_1!1101 lt!37278))))))

(declare-fun b!82019 () Bool)

(assert (=> b!82019 (= e!53503 (containsKey!142 (t!5178 lt!37937) (_1!1101 lt!37278)))))

(assert (= (and d!20465 (not res!42575)) b!82018))

(assert (= (and b!82018 res!42576) b!82019))

(declare-fun m!84523 () Bool)

(assert (=> b!82019 m!84523))

(assert (=> b!81124 d!20465))

(declare-fun d!20467 () Bool)

(declare-fun e!53504 () Bool)

(assert (=> d!20467 e!53504))

(declare-fun res!42577 () Bool)

(assert (=> d!20467 (=> res!42577 e!53504)))

(declare-fun lt!38326 () Bool)

(assert (=> d!20467 (= res!42577 (not lt!38326))))

(declare-fun lt!38325 () Bool)

(assert (=> d!20467 (= lt!38326 lt!38325)))

(declare-fun lt!38328 () Unit!2341)

(declare-fun e!53505 () Unit!2341)

(assert (=> d!20467 (= lt!38328 e!53505)))

(declare-fun c!13012 () Bool)

(assert (=> d!20467 (= c!13012 lt!38325)))

(assert (=> d!20467 (= lt!38325 (containsKey!142 (toList!741 (map!1178 (_2!1100 lt!37753))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!20467 (= (contains!745 (map!1178 (_2!1100 lt!37753)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) lt!38326)))

(declare-fun b!82020 () Bool)

(declare-fun lt!38327 () Unit!2341)

(assert (=> b!82020 (= e!53505 lt!38327)))

(assert (=> b!82020 (= lt!38327 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 (map!1178 (_2!1100 lt!37753))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!82020 (isDefined!91 (getValueByKey!138 (toList!741 (map!1178 (_2!1100 lt!37753))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!82021 () Bool)

(declare-fun Unit!2397 () Unit!2341)

(assert (=> b!82021 (= e!53505 Unit!2397)))

(declare-fun b!82022 () Bool)

(assert (=> b!82022 (= e!53504 (isDefined!91 (getValueByKey!138 (toList!741 (map!1178 (_2!1100 lt!37753))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(assert (= (and d!20467 c!13012) b!82020))

(assert (= (and d!20467 (not c!13012)) b!82021))

(assert (= (and d!20467 (not res!42577)) b!82022))

(assert (=> d!20467 m!81811))

(declare-fun m!84525 () Bool)

(assert (=> d!20467 m!84525))

(assert (=> b!82020 m!81811))

(declare-fun m!84527 () Bool)

(assert (=> b!82020 m!84527))

(assert (=> b!82020 m!81811))

(declare-fun m!84529 () Bool)

(assert (=> b!82020 m!84529))

(assert (=> b!82020 m!84529))

(declare-fun m!84531 () Bool)

(assert (=> b!82020 m!84531))

(assert (=> b!82022 m!81811))

(assert (=> b!82022 m!84529))

(assert (=> b!82022 m!84529))

(assert (=> b!82022 m!84531))

(assert (=> b!80925 d!20467))

(assert (=> b!80925 d!20231))

(declare-fun lt!38329 () Bool)

(declare-fun d!20469 () Bool)

(assert (=> d!20469 (= lt!38329 (select (content!85 (toList!741 lt!37819)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(declare-fun e!53507 () Bool)

(assert (=> d!20469 (= lt!38329 e!53507)))

(declare-fun res!42578 () Bool)

(assert (=> d!20469 (=> (not res!42578) (not e!53507))))

(assert (=> d!20469 (= res!42578 ((_ is Cons!1507) (toList!741 lt!37819)))))

(assert (=> d!20469 (= (contains!746 (toList!741 lt!37819) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) lt!38329)))

(declare-fun b!82023 () Bool)

(declare-fun e!53506 () Bool)

(assert (=> b!82023 (= e!53507 e!53506)))

(declare-fun res!42579 () Bool)

(assert (=> b!82023 (=> res!42579 e!53506)))

(assert (=> b!82023 (= res!42579 (= (h!2096 (toList!741 lt!37819)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(declare-fun b!82024 () Bool)

(assert (=> b!82024 (= e!53506 (contains!746 (t!5178 (toList!741 lt!37819)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (= (and d!20469 res!42578) b!82023))

(assert (= (and b!82023 (not res!42579)) b!82024))

(declare-fun m!84533 () Bool)

(assert (=> d!20469 m!84533))

(declare-fun m!84535 () Bool)

(assert (=> d!20469 m!84535))

(declare-fun m!84537 () Bool)

(assert (=> b!82024 m!84537))

(assert (=> b!80990 d!20469))

(assert (=> d!19909 d!19907))

(declare-fun d!20471 () Bool)

(assert (=> d!20471 (= (getValueByKey!138 lt!37551 (_1!1101 lt!37283)) (Some!143 (_2!1101 lt!37283)))))

(assert (=> d!20471 true))

(declare-fun _$22!403 () Unit!2341)

(assert (=> d!20471 (= (choose!470 lt!37551 (_1!1101 lt!37283) (_2!1101 lt!37283)) _$22!403)))

(declare-fun bs!3471 () Bool)

(assert (= bs!3471 d!20471))

(assert (=> bs!3471 m!82137))

(assert (=> d!19909 d!20471))

(declare-fun d!20473 () Bool)

(declare-fun res!42580 () Bool)

(declare-fun e!53508 () Bool)

(assert (=> d!20473 (=> res!42580 e!53508)))

(assert (=> d!20473 (= res!42580 (or ((_ is Nil!1508) lt!37551) ((_ is Nil!1508) (t!5178 lt!37551))))))

(assert (=> d!20473 (= (isStrictlySorted!296 lt!37551) e!53508)))

(declare-fun b!82025 () Bool)

(declare-fun e!53509 () Bool)

(assert (=> b!82025 (= e!53508 e!53509)))

(declare-fun res!42581 () Bool)

(assert (=> b!82025 (=> (not res!42581) (not e!53509))))

(assert (=> b!82025 (= res!42581 (bvslt (_1!1101 (h!2096 lt!37551)) (_1!1101 (h!2096 (t!5178 lt!37551)))))))

(declare-fun b!82026 () Bool)

(assert (=> b!82026 (= e!53509 (isStrictlySorted!296 (t!5178 lt!37551)))))

(assert (= (and d!20473 (not res!42580)) b!82025))

(assert (= (and b!82025 res!42581) b!82026))

(declare-fun m!84539 () Bool)

(assert (=> b!82026 m!84539))

(assert (=> d!19909 d!20473))

(declare-fun d!20475 () Bool)

(assert (=> d!20475 (= ($colon$colon!70 e!52938 (ite c!12740 (h!2096 (toList!741 lt!37276)) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283)))) (Cons!1507 (ite c!12740 (h!2096 (toList!741 lt!37276)) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))) e!52938))))

(assert (=> bm!7562 d!20475))

(assert (=> b!81066 d!20195))

(assert (=> b!81066 d!19775))

(declare-fun d!20477 () Bool)

(declare-fun res!42582 () Bool)

(declare-fun e!53510 () Bool)

(assert (=> d!20477 (=> res!42582 e!53510)))

(assert (=> d!20477 (= res!42582 (or ((_ is Nil!1508) lt!37937) ((_ is Nil!1508) (t!5178 lt!37937))))))

(assert (=> d!20477 (= (isStrictlySorted!296 lt!37937) e!53510)))

(declare-fun b!82027 () Bool)

(declare-fun e!53511 () Bool)

(assert (=> b!82027 (= e!53510 e!53511)))

(declare-fun res!42583 () Bool)

(assert (=> b!82027 (=> (not res!42583) (not e!53511))))

(assert (=> b!82027 (= res!42583 (bvslt (_1!1101 (h!2096 lt!37937)) (_1!1101 (h!2096 (t!5178 lt!37937)))))))

(declare-fun b!82028 () Bool)

(assert (=> b!82028 (= e!53511 (isStrictlySorted!296 (t!5178 lt!37937)))))

(assert (= (and d!20477 (not res!42582)) b!82027))

(assert (= (and b!82027 res!42583) b!82028))

(declare-fun m!84541 () Bool)

(assert (=> b!82028 m!84541))

(assert (=> d!19921 d!20477))

(declare-fun d!20479 () Bool)

(declare-fun res!42584 () Bool)

(declare-fun e!53512 () Bool)

(assert (=> d!20479 (=> res!42584 e!53512)))

(assert (=> d!20479 (= res!42584 (or ((_ is Nil!1508) (toList!741 lt!37276)) ((_ is Nil!1508) (t!5178 (toList!741 lt!37276)))))))

(assert (=> d!20479 (= (isStrictlySorted!296 (toList!741 lt!37276)) e!53512)))

(declare-fun b!82029 () Bool)

(declare-fun e!53513 () Bool)

(assert (=> b!82029 (= e!53512 e!53513)))

(declare-fun res!42585 () Bool)

(assert (=> b!82029 (=> (not res!42585) (not e!53513))))

(assert (=> b!82029 (= res!42585 (bvslt (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 (h!2096 (t!5178 (toList!741 lt!37276))))))))

(declare-fun b!82030 () Bool)

(assert (=> b!82030 (= e!53513 (isStrictlySorted!296 (t!5178 (toList!741 lt!37276))))))

(assert (= (and d!20479 (not res!42584)) b!82029))

(assert (= (and b!82029 res!42585) b!82030))

(declare-fun m!84543 () Bool)

(assert (=> b!82030 m!84543))

(assert (=> d!19921 d!20479))

(declare-fun c!13013 () Bool)

(declare-fun d!20481 () Bool)

(assert (=> d!20481 (= c!13013 (and ((_ is Cons!1507) (toList!741 lt!37882)) (= (_1!1101 (h!2096 (toList!741 lt!37882))) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53514 () Option!144)

(assert (=> d!20481 (= (getValueByKey!138 (toList!741 lt!37882) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53514)))

(declare-fun b!82032 () Bool)

(declare-fun e!53515 () Option!144)

(assert (=> b!82032 (= e!53514 e!53515)))

(declare-fun c!13014 () Bool)

(assert (=> b!82032 (= c!13014 (and ((_ is Cons!1507) (toList!741 lt!37882)) (not (= (_1!1101 (h!2096 (toList!741 lt!37882))) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!82033 () Bool)

(assert (=> b!82033 (= e!53515 (getValueByKey!138 (t!5178 (toList!741 lt!37882)) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82034 () Bool)

(assert (=> b!82034 (= e!53515 None!142)))

(declare-fun b!82031 () Bool)

(assert (=> b!82031 (= e!53514 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37882)))))))

(assert (= (and d!20481 c!13013) b!82031))

(assert (= (and d!20481 (not c!13013)) b!82032))

(assert (= (and b!82032 c!13014) b!82033))

(assert (= (and b!82032 (not c!13014)) b!82034))

(declare-fun m!84545 () Bool)

(assert (=> b!82033 m!84545))

(assert (=> b!81043 d!20481))

(declare-fun d!20483 () Bool)

(declare-fun lt!38330 () Bool)

(assert (=> d!20483 (= lt!38330 (select (content!85 (t!5178 (toList!741 lt!37541))) lt!37283))))

(declare-fun e!53517 () Bool)

(assert (=> d!20483 (= lt!38330 e!53517)))

(declare-fun res!42586 () Bool)

(assert (=> d!20483 (=> (not res!42586) (not e!53517))))

(assert (=> d!20483 (= res!42586 ((_ is Cons!1507) (t!5178 (toList!741 lt!37541))))))

(assert (=> d!20483 (= (contains!746 (t!5178 (toList!741 lt!37541)) lt!37283) lt!38330)))

(declare-fun b!82035 () Bool)

(declare-fun e!53516 () Bool)

(assert (=> b!82035 (= e!53517 e!53516)))

(declare-fun res!42587 () Bool)

(assert (=> b!82035 (=> res!42587 e!53516)))

(assert (=> b!82035 (= res!42587 (= (h!2096 (t!5178 (toList!741 lt!37541))) lt!37283))))

(declare-fun b!82036 () Bool)

(assert (=> b!82036 (= e!53516 (contains!746 (t!5178 (t!5178 (toList!741 lt!37541))) lt!37283))))

(assert (= (and d!20483 res!42586) b!82035))

(assert (= (and b!82035 (not res!42587)) b!82036))

(declare-fun m!84547 () Bool)

(assert (=> d!20483 m!84547))

(declare-fun m!84549 () Bool)

(assert (=> d!20483 m!84549))

(declare-fun m!84551 () Bool)

(assert (=> b!82036 m!84551))

(assert (=> b!80719 d!20483))

(declare-fun d!20485 () Bool)

(assert (=> d!20485 (= (isEmpty!329 lt!37574) (isEmpty!330 (toList!741 lt!37574)))))

(declare-fun bs!3472 () Bool)

(assert (= bs!3472 d!20485))

(declare-fun m!84553 () Bool)

(assert (=> bs!3472 m!84553))

(assert (=> b!80662 d!20485))

(declare-fun d!20487 () Bool)

(declare-fun lt!38331 () Bool)

(assert (=> d!20487 (= lt!38331 (select (content!85 lt!37518) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun e!53519 () Bool)

(assert (=> d!20487 (= lt!38331 e!53519)))

(declare-fun res!42588 () Bool)

(assert (=> d!20487 (=> (not res!42588) (not e!53519))))

(assert (=> d!20487 (= res!42588 ((_ is Cons!1507) lt!37518))))

(assert (=> d!20487 (= (contains!746 lt!37518 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))) lt!38331)))

(declare-fun b!82037 () Bool)

(declare-fun e!53518 () Bool)

(assert (=> b!82037 (= e!53519 e!53518)))

(declare-fun res!42589 () Bool)

(assert (=> b!82037 (=> res!42589 e!53518)))

(assert (=> b!82037 (= res!42589 (= (h!2096 lt!37518) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun b!82038 () Bool)

(assert (=> b!82038 (= e!53518 (contains!746 (t!5178 lt!37518) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(assert (= (and d!20487 res!42588) b!82037))

(assert (= (and b!82037 (not res!42589)) b!82038))

(declare-fun m!84555 () Bool)

(assert (=> d!20487 m!84555))

(declare-fun m!84557 () Bool)

(assert (=> d!20487 m!84557))

(declare-fun m!84559 () Bool)

(assert (=> b!82038 m!84559))

(assert (=> b!80792 d!20487))

(declare-fun b!82039 () Bool)

(declare-fun e!53520 () ListLongMap!1451)

(declare-fun call!7667 () ListLongMap!1451)

(assert (=> b!82039 (= e!53520 call!7667)))

(declare-fun b!82040 () Bool)

(declare-fun res!42592 () Bool)

(declare-fun e!53522 () Bool)

(assert (=> b!82040 (=> (not res!42592) (not e!53522))))

(declare-fun lt!38333 () ListLongMap!1451)

(assert (=> b!82040 (= res!42592 (not (contains!745 lt!38333 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!7664 () Bool)

(assert (=> bm!7664 (= call!7667 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432) (mask!6299 newMap!16) (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) (minValue!2189 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2293 newMap!16)))))

(declare-fun b!82041 () Bool)

(declare-fun e!53521 () Bool)

(assert (=> b!82041 (= e!53522 e!53521)))

(declare-fun c!13015 () Bool)

(declare-fun e!53526 () Bool)

(assert (=> b!82041 (= c!13015 e!53526)))

(declare-fun res!42593 () Bool)

(assert (=> b!82041 (=> (not res!42593) (not e!53526))))

(assert (=> b!82041 (= res!42593 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!82042 () Bool)

(declare-fun lt!38335 () Unit!2341)

(declare-fun lt!38336 () Unit!2341)

(assert (=> b!82042 (= lt!38335 lt!38336)))

(declare-fun lt!38337 () ListLongMap!1451)

(declare-fun lt!38332 () (_ BitVec 64))

(declare-fun lt!38334 () (_ BitVec 64))

(declare-fun lt!38338 () V!3003)

(assert (=> b!82042 (not (contains!745 (+!106 lt!38337 (tuple2!2181 lt!38332 lt!38338)) lt!38334))))

(assert (=> b!82042 (= lt!38336 (addStillNotContains!29 lt!38337 lt!38332 lt!38338 lt!38334))))

(assert (=> b!82042 (= lt!38334 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!82042 (= lt!38338 (get!1179 (select (arr!1902 (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!82042 (= lt!38332 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!82042 (= lt!38337 call!7667)))

(assert (=> b!82042 (= e!53520 (+!106 call!7667 (tuple2!2181 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (get!1179 (select (arr!1902 (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!82043 () Bool)

(declare-fun e!53525 () ListLongMap!1451)

(assert (=> b!82043 (= e!53525 e!53520)))

(declare-fun c!13017 () Bool)

(assert (=> b!82043 (= c!13017 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82044 () Bool)

(declare-fun e!53524 () Bool)

(assert (=> b!82044 (= e!53521 e!53524)))

(assert (=> b!82044 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun res!42591 () Bool)

(assert (=> b!82044 (= res!42591 (contains!745 lt!38333 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82044 (=> (not res!42591) (not e!53524))))

(declare-fun d!20489 () Bool)

(assert (=> d!20489 e!53522))

(declare-fun res!42590 () Bool)

(assert (=> d!20489 (=> (not res!42590) (not e!53522))))

(assert (=> d!20489 (= res!42590 (not (contains!745 lt!38333 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20489 (= lt!38333 e!53525)))

(declare-fun c!13018 () Bool)

(assert (=> d!20489 (= c!13018 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(assert (=> d!20489 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20489 (= (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432) (mask!6299 newMap!16) (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38333)))

(declare-fun b!82045 () Bool)

(declare-fun e!53523 () Bool)

(assert (=> b!82045 (= e!53523 (= lt!38333 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432) (mask!6299 newMap!16) (ite (and c!12569 c!12571) lt!37425 (extraKeys!2140 newMap!16)) (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) (minValue!2189 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2293 newMap!16))))))

(declare-fun b!82046 () Bool)

(assert (=> b!82046 (= e!53521 e!53523)))

(declare-fun c!13016 () Bool)

(assert (=> b!82046 (= c!13016 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!82047 () Bool)

(assert (=> b!82047 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(assert (=> b!82047 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432))))))

(assert (=> b!82047 (= e!53524 (= (apply!80 lt!38333 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 (ite (or c!12569 c!12572) (_values!2276 newMap!16) lt!37432)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!82048 () Bool)

(assert (=> b!82048 (= e!53526 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82048 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!82049 () Bool)

(assert (=> b!82049 (= e!53523 (isEmpty!329 lt!38333))))

(declare-fun b!82050 () Bool)

(assert (=> b!82050 (= e!53525 (ListLongMap!1452 Nil!1508))))

(assert (= (and d!20489 c!13018) b!82050))

(assert (= (and d!20489 (not c!13018)) b!82043))

(assert (= (and b!82043 c!13017) b!82042))

(assert (= (and b!82043 (not c!13017)) b!82039))

(assert (= (or b!82042 b!82039) bm!7664))

(assert (= (and d!20489 res!42590) b!82040))

(assert (= (and b!82040 res!42592) b!82041))

(assert (= (and b!82041 res!42593) b!82048))

(assert (= (and b!82041 c!13015) b!82044))

(assert (= (and b!82041 (not c!13015)) b!82046))

(assert (= (and b!82044 res!42591) b!82047))

(assert (= (and b!82046 c!13016) b!82045))

(assert (= (and b!82046 (not c!13016)) b!82049))

(declare-fun b_lambda!3647 () Bool)

(assert (=> (not b_lambda!3647) (not b!82042)))

(assert (=> b!82042 t!5185))

(declare-fun b_and!4999 () Bool)

(assert (= b_and!4995 (and (=> t!5185 result!2853) b_and!4999)))

(assert (=> b!82042 t!5187))

(declare-fun b_and!5001 () Bool)

(assert (= b_and!4997 (and (=> t!5187 result!2855) b_and!5001)))

(declare-fun b_lambda!3649 () Bool)

(assert (=> (not b_lambda!3649) (not b!82047)))

(assert (=> b!82047 t!5185))

(declare-fun b_and!5003 () Bool)

(assert (= b_and!4999 (and (=> t!5185 result!2853) b_and!5003)))

(assert (=> b!82047 t!5187))

(declare-fun b_and!5005 () Bool)

(assert (= b_and!5001 (and (=> t!5187 result!2855) b_and!5005)))

(declare-fun m!84561 () Bool)

(assert (=> d!20489 m!84561))

(assert (=> d!20489 m!82321))

(assert (=> b!82042 m!82267))

(assert (=> b!82042 m!82271))

(assert (=> b!82042 m!82273))

(assert (=> b!82042 m!82265))

(assert (=> b!82042 m!82271))

(declare-fun m!84563 () Bool)

(assert (=> b!82042 m!84563))

(declare-fun m!84565 () Bool)

(assert (=> b!82042 m!84565))

(assert (=> b!82042 m!84563))

(assert (=> b!82042 m!82267))

(declare-fun m!84567 () Bool)

(assert (=> b!82042 m!84567))

(declare-fun m!84569 () Bool)

(assert (=> b!82042 m!84569))

(assert (=> b!82044 m!82265))

(assert (=> b!82044 m!82265))

(declare-fun m!84571 () Bool)

(assert (=> b!82044 m!84571))

(declare-fun m!84573 () Bool)

(assert (=> b!82049 m!84573))

(declare-fun m!84575 () Bool)

(assert (=> b!82045 m!84575))

(assert (=> bm!7664 m!84575))

(assert (=> b!82043 m!82265))

(assert (=> b!82043 m!82265))

(assert (=> b!82043 m!82313))

(declare-fun m!84577 () Bool)

(assert (=> b!82040 m!84577))

(assert (=> b!82047 m!82267))

(assert (=> b!82047 m!82271))

(assert (=> b!82047 m!82273))

(assert (=> b!82047 m!82265))

(assert (=> b!82047 m!82271))

(assert (=> b!82047 m!82267))

(assert (=> b!82047 m!82265))

(declare-fun m!84579 () Bool)

(assert (=> b!82047 m!84579))

(assert (=> b!82048 m!82265))

(assert (=> b!82048 m!82265))

(assert (=> b!82048 m!82313))

(assert (=> bm!7508 d!20489))

(declare-fun d!20491 () Bool)

(declare-fun res!42594 () Bool)

(declare-fun e!53527 () Bool)

(assert (=> d!20491 (=> res!42594 e!53527)))

(assert (=> d!20491 (= res!42594 (and ((_ is Cons!1507) lt!37559) (= (_1!1101 (h!2096 lt!37559)) (_1!1101 lt!37268))))))

(assert (=> d!20491 (= (containsKey!142 lt!37559 (_1!1101 lt!37268)) e!53527)))

(declare-fun b!82051 () Bool)

(declare-fun e!53528 () Bool)

(assert (=> b!82051 (= e!53527 e!53528)))

(declare-fun res!42595 () Bool)

(assert (=> b!82051 (=> (not res!42595) (not e!53528))))

(assert (=> b!82051 (= res!42595 (and (or (not ((_ is Cons!1507) lt!37559)) (bvsle (_1!1101 (h!2096 lt!37559)) (_1!1101 lt!37268))) ((_ is Cons!1507) lt!37559) (bvslt (_1!1101 (h!2096 lt!37559)) (_1!1101 lt!37268))))))

(declare-fun b!82052 () Bool)

(assert (=> b!82052 (= e!53528 (containsKey!142 (t!5178 lt!37559) (_1!1101 lt!37268)))))

(assert (= (and d!20491 (not res!42594)) b!82051))

(assert (= (and b!82051 res!42595) b!82052))

(declare-fun m!84581 () Bool)

(assert (=> b!82052 m!84581))

(assert (=> b!81170 d!20491))

(assert (=> b!80968 d!19691))

(declare-fun lt!38339 () Bool)

(declare-fun d!20493 () Bool)

(assert (=> d!20493 (= lt!38339 (select (content!85 (toList!741 lt!37802)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!53530 () Bool)

(assert (=> d!20493 (= lt!38339 e!53530)))

(declare-fun res!42596 () Bool)

(assert (=> d!20493 (=> (not res!42596) (not e!53530))))

(assert (=> d!20493 (= res!42596 ((_ is Cons!1507) (toList!741 lt!37802)))))

(assert (=> d!20493 (= (contains!746 (toList!741 lt!37802) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!38339)))

(declare-fun b!82053 () Bool)

(declare-fun e!53529 () Bool)

(assert (=> b!82053 (= e!53530 e!53529)))

(declare-fun res!42597 () Bool)

(assert (=> b!82053 (=> res!42597 e!53529)))

(assert (=> b!82053 (= res!42597 (= (h!2096 (toList!741 lt!37802)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!82054 () Bool)

(assert (=> b!82054 (= e!53529 (contains!746 (t!5178 (toList!741 lt!37802)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!20493 res!42596) b!82053))

(assert (= (and b!82053 (not res!42597)) b!82054))

(declare-fun m!84583 () Bool)

(assert (=> d!20493 m!84583))

(declare-fun m!84585 () Bool)

(assert (=> d!20493 m!84585))

(declare-fun m!84587 () Bool)

(assert (=> b!82054 m!84587))

(assert (=> b!80956 d!20493))

(declare-fun d!20495 () Bool)

(declare-fun e!53531 () Bool)

(assert (=> d!20495 e!53531))

(declare-fun res!42598 () Bool)

(assert (=> d!20495 (=> res!42598 e!53531)))

(declare-fun lt!38341 () Bool)

(assert (=> d!20495 (= res!42598 (not lt!38341))))

(declare-fun lt!38340 () Bool)

(assert (=> d!20495 (= lt!38341 lt!38340)))

(declare-fun lt!38343 () Unit!2341)

(declare-fun e!53532 () Unit!2341)

(assert (=> d!20495 (= lt!38343 e!53532)))

(declare-fun c!13019 () Bool)

(assert (=> d!20495 (= c!13019 lt!38340)))

(assert (=> d!20495 (= lt!38340 (containsKey!142 (toList!741 lt!37827) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!20495 (= (contains!745 lt!37827 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38341)))

(declare-fun b!82055 () Bool)

(declare-fun lt!38342 () Unit!2341)

(assert (=> b!82055 (= e!53532 lt!38342)))

(assert (=> b!82055 (= lt!38342 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37827) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> b!82055 (isDefined!91 (getValueByKey!138 (toList!741 lt!37827) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82056 () Bool)

(declare-fun Unit!2398 () Unit!2341)

(assert (=> b!82056 (= e!53532 Unit!2398)))

(declare-fun b!82057 () Bool)

(assert (=> b!82057 (= e!53531 (isDefined!91 (getValueByKey!138 (toList!741 lt!37827) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20495 c!13019) b!82055))

(assert (= (and d!20495 (not c!13019)) b!82056))

(assert (= (and d!20495 (not res!42598)) b!82057))

(declare-fun m!84589 () Bool)

(assert (=> d!20495 m!84589))

(declare-fun m!84591 () Bool)

(assert (=> b!82055 m!84591))

(assert (=> b!82055 m!82747))

(assert (=> b!82055 m!82747))

(declare-fun m!84593 () Bool)

(assert (=> b!82055 m!84593))

(assert (=> b!82057 m!82747))

(assert (=> b!82057 m!82747))

(assert (=> b!82057 m!84593))

(assert (=> d!19805 d!20495))

(declare-fun d!20497 () Bool)

(declare-fun c!13020 () Bool)

(assert (=> d!20497 (= c!13020 (and ((_ is Cons!1507) lt!37829) (= (_1!1101 (h!2096 lt!37829)) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53533 () Option!144)

(assert (=> d!20497 (= (getValueByKey!138 lt!37829 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53533)))

(declare-fun b!82059 () Bool)

(declare-fun e!53534 () Option!144)

(assert (=> b!82059 (= e!53533 e!53534)))

(declare-fun c!13021 () Bool)

(assert (=> b!82059 (= c!13021 (and ((_ is Cons!1507) lt!37829) (not (= (_1!1101 (h!2096 lt!37829)) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!82060 () Bool)

(assert (=> b!82060 (= e!53534 (getValueByKey!138 (t!5178 lt!37829) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82061 () Bool)

(assert (=> b!82061 (= e!53534 None!142)))

(declare-fun b!82058 () Bool)

(assert (=> b!82058 (= e!53533 (Some!143 (_2!1101 (h!2096 lt!37829))))))

(assert (= (and d!20497 c!13020) b!82058))

(assert (= (and d!20497 (not c!13020)) b!82059))

(assert (= (and b!82059 c!13021) b!82060))

(assert (= (and b!82059 (not c!13021)) b!82061))

(declare-fun m!84595 () Bool)

(assert (=> b!82060 m!84595))

(assert (=> d!19805 d!20497))

(declare-fun d!20499 () Bool)

(assert (=> d!20499 (= (getValueByKey!138 lt!37829 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!38344 () Unit!2341)

(assert (=> d!20499 (= lt!38344 (choose!470 lt!37829 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun e!53535 () Bool)

(assert (=> d!20499 e!53535))

(declare-fun res!42599 () Bool)

(assert (=> d!20499 (=> (not res!42599) (not e!53535))))

(assert (=> d!20499 (= res!42599 (isStrictlySorted!296 lt!37829))))

(assert (=> d!20499 (= (lemmaContainsTupThenGetReturnValue!55 lt!37829 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38344)))

(declare-fun b!82062 () Bool)

(declare-fun res!42600 () Bool)

(assert (=> b!82062 (=> (not res!42600) (not e!53535))))

(assert (=> b!82062 (= res!42600 (containsKey!142 lt!37829 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82063 () Bool)

(assert (=> b!82063 (= e!53535 (contains!746 lt!37829 (tuple2!2181 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20499 res!42599) b!82062))

(assert (= (and b!82062 res!42600) b!82063))

(assert (=> d!20499 m!82741))

(declare-fun m!84597 () Bool)

(assert (=> d!20499 m!84597))

(declare-fun m!84599 () Bool)

(assert (=> d!20499 m!84599))

(declare-fun m!84601 () Bool)

(assert (=> b!82062 m!84601))

(declare-fun m!84603 () Bool)

(assert (=> b!82063 m!84603))

(assert (=> d!19805 d!20499))

(declare-fun b!82064 () Bool)

(declare-fun c!13022 () Bool)

(assert (=> b!82064 (= c!13022 (and ((_ is Cons!1507) (toList!741 lt!37276)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53536 () List!1511)

(declare-fun e!53537 () List!1511)

(assert (=> b!82064 (= e!53536 e!53537)))

(declare-fun b!82065 () Bool)

(declare-fun call!7668 () List!1511)

(assert (=> b!82065 (= e!53537 call!7668)))

(declare-fun b!82066 () Bool)

(declare-fun c!13024 () Bool)

(declare-fun e!53538 () List!1511)

(assert (=> b!82066 (= e!53538 (ite c!13024 (t!5178 (toList!741 lt!37276)) (ite c!13022 (Cons!1507 (h!2096 (toList!741 lt!37276)) (t!5178 (toList!741 lt!37276))) Nil!1508)))))

(declare-fun d!20501 () Bool)

(declare-fun e!53540 () Bool)

(assert (=> d!20501 e!53540))

(declare-fun res!42602 () Bool)

(assert (=> d!20501 (=> (not res!42602) (not e!53540))))

(declare-fun lt!38345 () List!1511)

(assert (=> d!20501 (= res!42602 (isStrictlySorted!296 lt!38345))))

(declare-fun e!53539 () List!1511)

(assert (=> d!20501 (= lt!38345 e!53539)))

(declare-fun c!13023 () Bool)

(assert (=> d!20501 (= c!13023 (and ((_ is Cons!1507) (toList!741 lt!37276)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!20501 (isStrictlySorted!296 (toList!741 lt!37276))))

(assert (=> d!20501 (= (insertStrictlySorted!58 (toList!741 lt!37276) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38345)))

(declare-fun b!82067 () Bool)

(declare-fun call!7670 () List!1511)

(assert (=> b!82067 (= e!53539 call!7670)))

(declare-fun bm!7665 () Bool)

(declare-fun call!7669 () List!1511)

(assert (=> bm!7665 (= call!7669 call!7670)))

(declare-fun bm!7666 () Bool)

(assert (=> bm!7666 (= call!7668 call!7669)))

(declare-fun b!82068 () Bool)

(assert (=> b!82068 (= e!53540 (contains!746 lt!38345 (tuple2!2181 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82069 () Bool)

(assert (=> b!82069 (= e!53539 e!53536)))

(assert (=> b!82069 (= c!13024 (and ((_ is Cons!1507) (toList!741 lt!37276)) (= (_1!1101 (h!2096 (toList!741 lt!37276))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82070 () Bool)

(assert (=> b!82070 (= e!53537 call!7668)))

(declare-fun b!82071 () Bool)

(declare-fun res!42601 () Bool)

(assert (=> b!82071 (=> (not res!42601) (not e!53540))))

(assert (=> b!82071 (= res!42601 (containsKey!142 lt!38345 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun bm!7667 () Bool)

(assert (=> bm!7667 (= call!7670 ($colon$colon!70 e!53538 (ite c!13023 (h!2096 (toList!741 lt!37276)) (tuple2!2181 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun c!13025 () Bool)

(assert (=> bm!7667 (= c!13025 c!13023)))

(declare-fun b!82072 () Bool)

(assert (=> b!82072 (= e!53538 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37276)) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82073 () Bool)

(assert (=> b!82073 (= e!53536 call!7669)))

(assert (= (and d!20501 c!13023) b!82067))

(assert (= (and d!20501 (not c!13023)) b!82069))

(assert (= (and b!82069 c!13024) b!82073))

(assert (= (and b!82069 (not c!13024)) b!82064))

(assert (= (and b!82064 c!13022) b!82070))

(assert (= (and b!82064 (not c!13022)) b!82065))

(assert (= (or b!82070 b!82065) bm!7666))

(assert (= (or b!82073 bm!7666) bm!7665))

(assert (= (or b!82067 bm!7665) bm!7667))

(assert (= (and bm!7667 c!13025) b!82072))

(assert (= (and bm!7667 (not c!13025)) b!82066))

(assert (= (and d!20501 res!42602) b!82071))

(assert (= (and b!82071 res!42601) b!82068))

(declare-fun m!84605 () Bool)

(assert (=> b!82068 m!84605))

(declare-fun m!84607 () Bool)

(assert (=> b!82071 m!84607))

(declare-fun m!84609 () Bool)

(assert (=> d!20501 m!84609))

(assert (=> d!20501 m!83061))

(declare-fun m!84611 () Bool)

(assert (=> b!82072 m!84611))

(declare-fun m!84613 () Bool)

(assert (=> bm!7667 m!84613))

(assert (=> d!19805 d!20501))

(declare-fun b!82074 () Bool)

(declare-fun e!53542 () Bool)

(declare-fun call!7671 () Bool)

(assert (=> b!82074 (= e!53542 call!7671)))

(declare-fun b!82075 () Bool)

(declare-fun e!53541 () Bool)

(assert (=> b!82075 (= e!53541 call!7671)))

(declare-fun bm!7668 () Bool)

(assert (=> bm!7668 (= call!7671 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3957 (_2!1100 lt!37429)) (mask!6299 (_2!1100 lt!37429))))))

(declare-fun b!82076 () Bool)

(assert (=> b!82076 (= e!53542 e!53541)))

(declare-fun lt!38348 () (_ BitVec 64))

(assert (=> b!82076 (= lt!38348 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000))))

(declare-fun lt!38347 () Unit!2341)

(assert (=> b!82076 (= lt!38347 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3957 (_2!1100 lt!37429)) lt!38348 #b00000000000000000000000000000000))))

(assert (=> b!82076 (arrayContainsKey!0 (_keys!3957 (_2!1100 lt!37429)) lt!38348 #b00000000000000000000000000000000)))

(declare-fun lt!38346 () Unit!2341)

(assert (=> b!82076 (= lt!38346 lt!38347)))

(declare-fun res!42604 () Bool)

(assert (=> b!82076 (= res!42604 (= (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000) (_keys!3957 (_2!1100 lt!37429)) (mask!6299 (_2!1100 lt!37429))) (Found!241 #b00000000000000000000000000000000)))))

(assert (=> b!82076 (=> (not res!42604) (not e!53541))))

(declare-fun d!20503 () Bool)

(declare-fun res!42603 () Bool)

(declare-fun e!53543 () Bool)

(assert (=> d!20503 (=> res!42603 e!53543)))

(assert (=> d!20503 (= res!42603 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37429)))))))

(assert (=> d!20503 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 (_2!1100 lt!37429)) (mask!6299 (_2!1100 lt!37429))) e!53543)))

(declare-fun b!82077 () Bool)

(assert (=> b!82077 (= e!53543 e!53542)))

(declare-fun c!13026 () Bool)

(assert (=> b!82077 (= c!13026 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000)))))

(assert (= (and d!20503 (not res!42603)) b!82077))

(assert (= (and b!82077 c!13026) b!82076))

(assert (= (and b!82077 (not c!13026)) b!82074))

(assert (= (and b!82076 res!42604) b!82075))

(assert (= (or b!82075 b!82074) bm!7668))

(declare-fun m!84615 () Bool)

(assert (=> bm!7668 m!84615))

(assert (=> b!82076 m!83493))

(declare-fun m!84617 () Bool)

(assert (=> b!82076 m!84617))

(declare-fun m!84619 () Bool)

(assert (=> b!82076 m!84619))

(assert (=> b!82076 m!83493))

(declare-fun m!84621 () Bool)

(assert (=> b!82076 m!84621))

(assert (=> b!82077 m!83493))

(assert (=> b!82077 m!83493))

(assert (=> b!82077 m!83541))

(assert (=> b!81201 d!20503))

(declare-fun d!20505 () Bool)

(assert (=> d!20505 (= (apply!80 (+!106 lt!37493 (tuple2!2181 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37489) (apply!80 lt!37493 lt!37489))))

(assert (=> d!20505 true))

(declare-fun _$34!827 () Unit!2341)

(assert (=> d!20505 (= (choose!475 lt!37493 lt!37491 (minValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37489) _$34!827)))

(declare-fun bs!3473 () Bool)

(assert (= bs!3473 d!20505))

(assert (=> bs!3473 m!82007))

(assert (=> bs!3473 m!82007))

(assert (=> bs!3473 m!82009))

(assert (=> bs!3473 m!82015))

(assert (=> d!19879 d!20505))

(assert (=> d!19879 d!19863))

(declare-fun d!20507 () Bool)

(declare-fun e!53544 () Bool)

(assert (=> d!20507 e!53544))

(declare-fun res!42605 () Bool)

(assert (=> d!20507 (=> res!42605 e!53544)))

(declare-fun lt!38350 () Bool)

(assert (=> d!20507 (= res!42605 (not lt!38350))))

(declare-fun lt!38349 () Bool)

(assert (=> d!20507 (= lt!38350 lt!38349)))

(declare-fun lt!38352 () Unit!2341)

(declare-fun e!53545 () Unit!2341)

(assert (=> d!20507 (= lt!38352 e!53545)))

(declare-fun c!13027 () Bool)

(assert (=> d!20507 (= c!13027 lt!38349)))

(assert (=> d!20507 (= lt!38349 (containsKey!142 (toList!741 lt!37493) lt!37489))))

(assert (=> d!20507 (= (contains!745 lt!37493 lt!37489) lt!38350)))

(declare-fun b!82078 () Bool)

(declare-fun lt!38351 () Unit!2341)

(assert (=> b!82078 (= e!53545 lt!38351)))

(assert (=> b!82078 (= lt!38351 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37493) lt!37489))))

(assert (=> b!82078 (isDefined!91 (getValueByKey!138 (toList!741 lt!37493) lt!37489))))

(declare-fun b!82079 () Bool)

(declare-fun Unit!2399 () Unit!2341)

(assert (=> b!82079 (= e!53545 Unit!2399)))

(declare-fun b!82080 () Bool)

(assert (=> b!82080 (= e!53544 (isDefined!91 (getValueByKey!138 (toList!741 lt!37493) lt!37489)))))

(assert (= (and d!20507 c!13027) b!82078))

(assert (= (and d!20507 (not c!13027)) b!82079))

(assert (= (and d!20507 (not res!42605)) b!82080))

(declare-fun m!84623 () Bool)

(assert (=> d!20507 m!84623))

(declare-fun m!84625 () Bool)

(assert (=> b!82078 m!84625))

(assert (=> b!82078 m!82919))

(assert (=> b!82078 m!82919))

(declare-fun m!84627 () Bool)

(assert (=> b!82078 m!84627))

(assert (=> b!82080 m!82919))

(assert (=> b!82080 m!82919))

(assert (=> b!82080 m!84627))

(assert (=> d!19879 d!20507))

(assert (=> d!19879 d!19867))

(assert (=> d!19879 d!19869))

(assert (=> b!81165 d!20247))

(assert (=> b!81165 d!19717))

(assert (=> b!80855 d!20079))

(declare-fun d!20509 () Bool)

(declare-fun lt!38353 () Bool)

(assert (=> d!20509 (= lt!38353 (select (content!86 (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!53547 () Bool)

(assert (=> d!20509 (= lt!38353 e!53547)))

(declare-fun res!42607 () Bool)

(assert (=> d!20509 (=> (not res!42607) (not e!53547))))

(assert (=> d!20509 (= res!42607 ((_ is Cons!1508) (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)))))

(assert (=> d!20509 (= (contains!747 (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!38353)))

(declare-fun b!82081 () Bool)

(declare-fun e!53546 () Bool)

(assert (=> b!82081 (= e!53547 e!53546)))

(declare-fun res!42606 () Bool)

(assert (=> b!82081 (=> res!42606 e!53546)))

(assert (=> b!82081 (= res!42606 (= (h!2097 (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!82082 () Bool)

(assert (=> b!82082 (= e!53546 (contains!747 (t!5179 (ite c!12619 (Cons!1508 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) Nil!1509) Nil!1509)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!20509 res!42607) b!82081))

(assert (= (and b!82081 (not res!42606)) b!82082))

(declare-fun m!84629 () Bool)

(assert (=> d!20509 m!84629))

(assert (=> d!20509 m!82383))

(declare-fun m!84631 () Bool)

(assert (=> d!20509 m!84631))

(assert (=> b!82082 m!82383))

(declare-fun m!84633 () Bool)

(assert (=> b!82082 m!84633))

(assert (=> b!80734 d!20509))

(declare-fun d!20511 () Bool)

(declare-fun e!53548 () Bool)

(assert (=> d!20511 e!53548))

(declare-fun res!42608 () Bool)

(assert (=> d!20511 (=> res!42608 e!53548)))

(declare-fun lt!38355 () Bool)

(assert (=> d!20511 (= res!42608 (not lt!38355))))

(declare-fun lt!38354 () Bool)

(assert (=> d!20511 (= lt!38355 lt!38354)))

(declare-fun lt!38357 () Unit!2341)

(declare-fun e!53549 () Unit!2341)

(assert (=> d!20511 (= lt!38357 e!53549)))

(declare-fun c!13028 () Bool)

(assert (=> d!20511 (= c!13028 lt!38354)))

(assert (=> d!20511 (= lt!38354 (containsKey!142 (toList!741 lt!37882) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!20511 (= (contains!745 lt!37882 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38355)))

(declare-fun b!82083 () Bool)

(declare-fun lt!38356 () Unit!2341)

(assert (=> b!82083 (= e!53549 lt!38356)))

(assert (=> b!82083 (= lt!38356 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37882) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> b!82083 (isDefined!91 (getValueByKey!138 (toList!741 lt!37882) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82084 () Bool)

(declare-fun Unit!2400 () Unit!2341)

(assert (=> b!82084 (= e!53549 Unit!2400)))

(declare-fun b!82085 () Bool)

(assert (=> b!82085 (= e!53548 (isDefined!91 (getValueByKey!138 (toList!741 lt!37882) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20511 c!13028) b!82083))

(assert (= (and d!20511 (not c!13028)) b!82084))

(assert (= (and d!20511 (not res!42608)) b!82085))

(declare-fun m!84635 () Bool)

(assert (=> d!20511 m!84635))

(declare-fun m!84637 () Bool)

(assert (=> b!82083 m!84637))

(assert (=> b!82083 m!82911))

(assert (=> b!82083 m!82911))

(declare-fun m!84639 () Bool)

(assert (=> b!82083 m!84639))

(assert (=> b!82085 m!82911))

(assert (=> b!82085 m!82911))

(assert (=> b!82085 m!84639))

(assert (=> d!19859 d!20511))

(declare-fun c!13029 () Bool)

(declare-fun d!20513 () Bool)

(assert (=> d!20513 (= c!13029 (and ((_ is Cons!1507) lt!37884) (= (_1!1101 (h!2096 lt!37884)) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53550 () Option!144)

(assert (=> d!20513 (= (getValueByKey!138 lt!37884 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53550)))

(declare-fun b!82087 () Bool)

(declare-fun e!53551 () Option!144)

(assert (=> b!82087 (= e!53550 e!53551)))

(declare-fun c!13030 () Bool)

(assert (=> b!82087 (= c!13030 (and ((_ is Cons!1507) lt!37884) (not (= (_1!1101 (h!2096 lt!37884)) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!82088 () Bool)

(assert (=> b!82088 (= e!53551 (getValueByKey!138 (t!5178 lt!37884) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82089 () Bool)

(assert (=> b!82089 (= e!53551 None!142)))

(declare-fun b!82086 () Bool)

(assert (=> b!82086 (= e!53550 (Some!143 (_2!1101 (h!2096 lt!37884))))))

(assert (= (and d!20513 c!13029) b!82086))

(assert (= (and d!20513 (not c!13029)) b!82087))

(assert (= (and b!82087 c!13030) b!82088))

(assert (= (and b!82087 (not c!13030)) b!82089))

(declare-fun m!84641 () Bool)

(assert (=> b!82088 m!84641))

(assert (=> d!19859 d!20513))

(declare-fun d!20515 () Bool)

(assert (=> d!20515 (= (getValueByKey!138 lt!37884 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!38358 () Unit!2341)

(assert (=> d!20515 (= lt!38358 (choose!470 lt!37884 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun e!53552 () Bool)

(assert (=> d!20515 e!53552))

(declare-fun res!42609 () Bool)

(assert (=> d!20515 (=> (not res!42609) (not e!53552))))

(assert (=> d!20515 (= res!42609 (isStrictlySorted!296 lt!37884))))

(assert (=> d!20515 (= (lemmaContainsTupThenGetReturnValue!55 lt!37884 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38358)))

(declare-fun b!82090 () Bool)

(declare-fun res!42610 () Bool)

(assert (=> b!82090 (=> (not res!42610) (not e!53552))))

(assert (=> b!82090 (= res!42610 (containsKey!142 lt!37884 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82091 () Bool)

(assert (=> b!82091 (= e!53552 (contains!746 lt!37884 (tuple2!2181 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20515 res!42609) b!82090))

(assert (= (and b!82090 res!42610) b!82091))

(assert (=> d!20515 m!82905))

(declare-fun m!84643 () Bool)

(assert (=> d!20515 m!84643))

(declare-fun m!84645 () Bool)

(assert (=> d!20515 m!84645))

(declare-fun m!84647 () Bool)

(assert (=> b!82090 m!84647))

(declare-fun m!84649 () Bool)

(assert (=> b!82091 m!84649))

(assert (=> d!19859 d!20515))

(declare-fun c!13031 () Bool)

(declare-fun b!82092 () Bool)

(assert (=> b!82092 (= c!13031 (and ((_ is Cons!1507) (toList!741 lt!37498)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37498))) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53553 () List!1511)

(declare-fun e!53554 () List!1511)

(assert (=> b!82092 (= e!53553 e!53554)))

(declare-fun b!82093 () Bool)

(declare-fun call!7672 () List!1511)

(assert (=> b!82093 (= e!53554 call!7672)))

(declare-fun b!82094 () Bool)

(declare-fun c!13033 () Bool)

(declare-fun e!53555 () List!1511)

(assert (=> b!82094 (= e!53555 (ite c!13033 (t!5178 (toList!741 lt!37498)) (ite c!13031 (Cons!1507 (h!2096 (toList!741 lt!37498)) (t!5178 (toList!741 lt!37498))) Nil!1508)))))

(declare-fun d!20517 () Bool)

(declare-fun e!53557 () Bool)

(assert (=> d!20517 e!53557))

(declare-fun res!42612 () Bool)

(assert (=> d!20517 (=> (not res!42612) (not e!53557))))

(declare-fun lt!38359 () List!1511)

(assert (=> d!20517 (= res!42612 (isStrictlySorted!296 lt!38359))))

(declare-fun e!53556 () List!1511)

(assert (=> d!20517 (= lt!38359 e!53556)))

(declare-fun c!13032 () Bool)

(assert (=> d!20517 (= c!13032 (and ((_ is Cons!1507) (toList!741 lt!37498)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37498))) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!20517 (isStrictlySorted!296 (toList!741 lt!37498))))

(assert (=> d!20517 (= (insertStrictlySorted!58 (toList!741 lt!37498) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38359)))

(declare-fun b!82095 () Bool)

(declare-fun call!7674 () List!1511)

(assert (=> b!82095 (= e!53556 call!7674)))

(declare-fun bm!7669 () Bool)

(declare-fun call!7673 () List!1511)

(assert (=> bm!7669 (= call!7673 call!7674)))

(declare-fun bm!7670 () Bool)

(assert (=> bm!7670 (= call!7672 call!7673)))

(declare-fun b!82096 () Bool)

(assert (=> b!82096 (= e!53557 (contains!746 lt!38359 (tuple2!2181 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82097 () Bool)

(assert (=> b!82097 (= e!53556 e!53553)))

(assert (=> b!82097 (= c!13033 (and ((_ is Cons!1507) (toList!741 lt!37498)) (= (_1!1101 (h!2096 (toList!741 lt!37498))) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82098 () Bool)

(assert (=> b!82098 (= e!53554 call!7672)))

(declare-fun b!82099 () Bool)

(declare-fun res!42611 () Bool)

(assert (=> b!82099 (=> (not res!42611) (not e!53557))))

(assert (=> b!82099 (= res!42611 (containsKey!142 lt!38359 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun bm!7671 () Bool)

(assert (=> bm!7671 (= call!7674 ($colon$colon!70 e!53555 (ite c!13032 (h!2096 (toList!741 lt!37498)) (tuple2!2181 (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun c!13034 () Bool)

(assert (=> bm!7671 (= c!13034 c!13032)))

(declare-fun b!82100 () Bool)

(assert (=> b!82100 (= e!53555 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37498)) (_1!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82101 () Bool)

(assert (=> b!82101 (= e!53553 call!7673)))

(assert (= (and d!20517 c!13032) b!82095))

(assert (= (and d!20517 (not c!13032)) b!82097))

(assert (= (and b!82097 c!13033) b!82101))

(assert (= (and b!82097 (not c!13033)) b!82092))

(assert (= (and b!82092 c!13031) b!82098))

(assert (= (and b!82092 (not c!13031)) b!82093))

(assert (= (or b!82098 b!82093) bm!7670))

(assert (= (or b!82101 bm!7670) bm!7669))

(assert (= (or b!82095 bm!7669) bm!7671))

(assert (= (and bm!7671 c!13034) b!82100))

(assert (= (and bm!7671 (not c!13034)) b!82094))

(assert (= (and d!20517 res!42612) b!82099))

(assert (= (and b!82099 res!42611) b!82096))

(declare-fun m!84651 () Bool)

(assert (=> b!82096 m!84651))

(declare-fun m!84653 () Bool)

(assert (=> b!82099 m!84653))

(declare-fun m!84655 () Bool)

(assert (=> d!20517 m!84655))

(declare-fun m!84657 () Bool)

(assert (=> d!20517 m!84657))

(declare-fun m!84659 () Bool)

(assert (=> b!82100 m!84659))

(declare-fun m!84661 () Bool)

(assert (=> bm!7671 m!84661))

(assert (=> d!19859 d!20517))

(assert (=> d!19769 d!19953))

(declare-fun d!20519 () Bool)

(declare-fun e!53558 () Bool)

(assert (=> d!20519 e!53558))

(declare-fun res!42613 () Bool)

(assert (=> d!20519 (=> res!42613 e!53558)))

(declare-fun lt!38361 () Bool)

(assert (=> d!20519 (= res!42613 (not lt!38361))))

(declare-fun lt!38360 () Bool)

(assert (=> d!20519 (= lt!38361 lt!38360)))

(declare-fun lt!38363 () Unit!2341)

(declare-fun e!53559 () Unit!2341)

(assert (=> d!20519 (= lt!38363 e!53559)))

(declare-fun c!13035 () Bool)

(assert (=> d!20519 (= c!13035 lt!38360)))

(assert (=> d!20519 (= lt!38360 (containsKey!142 (toList!741 lt!37615) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (=> d!20519 (= (contains!745 lt!37615 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) lt!38361)))

(declare-fun b!82102 () Bool)

(declare-fun lt!38362 () Unit!2341)

(assert (=> b!82102 (= e!53559 lt!38362)))

(assert (=> b!82102 (= lt!38362 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37615) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (=> b!82102 (isDefined!91 (getValueByKey!138 (toList!741 lt!37615) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!82103 () Bool)

(declare-fun Unit!2401 () Unit!2341)

(assert (=> b!82103 (= e!53559 Unit!2401)))

(declare-fun b!82104 () Bool)

(assert (=> b!82104 (= e!53558 (isDefined!91 (getValueByKey!138 (toList!741 lt!37615) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(assert (= (and d!20519 c!13035) b!82102))

(assert (= (and d!20519 (not c!13035)) b!82103))

(assert (= (and d!20519 (not res!42613)) b!82104))

(declare-fun m!84663 () Bool)

(assert (=> d!20519 m!84663))

(declare-fun m!84665 () Bool)

(assert (=> b!82102 m!84665))

(assert (=> b!82102 m!82363))

(assert (=> b!82102 m!82363))

(declare-fun m!84667 () Bool)

(assert (=> b!82102 m!84667))

(assert (=> b!82104 m!82363))

(assert (=> b!82104 m!82363))

(assert (=> b!82104 m!84667))

(assert (=> d!19731 d!20519))

(declare-fun d!20521 () Bool)

(declare-fun c!13036 () Bool)

(assert (=> d!20521 (= c!13036 (and ((_ is Cons!1507) lt!37617) (= (_1!1101 (h!2096 lt!37617)) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun e!53560 () Option!144)

(assert (=> d!20521 (= (getValueByKey!138 lt!37617 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) e!53560)))

(declare-fun b!82106 () Bool)

(declare-fun e!53561 () Option!144)

(assert (=> b!82106 (= e!53560 e!53561)))

(declare-fun c!13037 () Bool)

(assert (=> b!82106 (= c!13037 (and ((_ is Cons!1507) lt!37617) (not (= (_1!1101 (h!2096 lt!37617)) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))))

(declare-fun b!82107 () Bool)

(assert (=> b!82107 (= e!53561 (getValueByKey!138 (t!5178 lt!37617) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!82108 () Bool)

(assert (=> b!82108 (= e!53561 None!142)))

(declare-fun b!82105 () Bool)

(assert (=> b!82105 (= e!53560 (Some!143 (_2!1101 (h!2096 lt!37617))))))

(assert (= (and d!20521 c!13036) b!82105))

(assert (= (and d!20521 (not c!13036)) b!82106))

(assert (= (and b!82106 c!13037) b!82107))

(assert (= (and b!82106 (not c!13037)) b!82108))

(declare-fun m!84669 () Bool)

(assert (=> b!82107 m!84669))

(assert (=> d!19731 d!20521))

(declare-fun d!20523 () Bool)

(assert (=> d!20523 (= (getValueByKey!138 lt!37617 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (Some!143 (_2!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun lt!38364 () Unit!2341)

(assert (=> d!20523 (= lt!38364 (choose!470 lt!37617 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_2!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53562 () Bool)

(assert (=> d!20523 e!53562))

(declare-fun res!42614 () Bool)

(assert (=> d!20523 (=> (not res!42614) (not e!53562))))

(assert (=> d!20523 (= res!42614 (isStrictlySorted!296 lt!37617))))

(assert (=> d!20523 (= (lemmaContainsTupThenGetReturnValue!55 lt!37617 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_2!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) lt!38364)))

(declare-fun b!82109 () Bool)

(declare-fun res!42615 () Bool)

(assert (=> b!82109 (=> (not res!42615) (not e!53562))))

(assert (=> b!82109 (= res!42615 (containsKey!142 lt!37617 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!82110 () Bool)

(assert (=> b!82110 (= e!53562 (contains!746 lt!37617 (tuple2!2181 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_2!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(assert (= (and d!20523 res!42614) b!82109))

(assert (= (and b!82109 res!42615) b!82110))

(assert (=> d!20523 m!82357))

(declare-fun m!84671 () Bool)

(assert (=> d!20523 m!84671))

(declare-fun m!84673 () Bool)

(assert (=> d!20523 m!84673))

(declare-fun m!84675 () Bool)

(assert (=> b!82109 m!84675))

(declare-fun m!84677 () Bool)

(assert (=> b!82110 m!84677))

(assert (=> d!19731 d!20523))

(declare-fun b!82111 () Bool)

(declare-fun c!13038 () Bool)

(assert (=> b!82111 (= c!13038 (and ((_ is Cons!1507) (toList!741 e!52552)) (bvsgt (_1!1101 (h!2096 (toList!741 e!52552))) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun e!53563 () List!1511)

(declare-fun e!53564 () List!1511)

(assert (=> b!82111 (= e!53563 e!53564)))

(declare-fun b!82112 () Bool)

(declare-fun call!7675 () List!1511)

(assert (=> b!82112 (= e!53564 call!7675)))

(declare-fun b!82113 () Bool)

(declare-fun e!53565 () List!1511)

(declare-fun c!13040 () Bool)

(assert (=> b!82113 (= e!53565 (ite c!13040 (t!5178 (toList!741 e!52552)) (ite c!13038 (Cons!1507 (h!2096 (toList!741 e!52552)) (t!5178 (toList!741 e!52552))) Nil!1508)))))

(declare-fun d!20525 () Bool)

(declare-fun e!53567 () Bool)

(assert (=> d!20525 e!53567))

(declare-fun res!42617 () Bool)

(assert (=> d!20525 (=> (not res!42617) (not e!53567))))

(declare-fun lt!38365 () List!1511)

(assert (=> d!20525 (= res!42617 (isStrictlySorted!296 lt!38365))))

(declare-fun e!53566 () List!1511)

(assert (=> d!20525 (= lt!38365 e!53566)))

(declare-fun c!13039 () Bool)

(assert (=> d!20525 (= c!13039 (and ((_ is Cons!1507) (toList!741 e!52552)) (bvslt (_1!1101 (h!2096 (toList!741 e!52552))) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(assert (=> d!20525 (isStrictlySorted!296 (toList!741 e!52552))))

(assert (=> d!20525 (= (insertStrictlySorted!58 (toList!741 e!52552) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_2!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) lt!38365)))

(declare-fun b!82114 () Bool)

(declare-fun call!7677 () List!1511)

(assert (=> b!82114 (= e!53566 call!7677)))

(declare-fun bm!7672 () Bool)

(declare-fun call!7676 () List!1511)

(assert (=> bm!7672 (= call!7676 call!7677)))

(declare-fun bm!7673 () Bool)

(assert (=> bm!7673 (= call!7675 call!7676)))

(declare-fun b!82115 () Bool)

(assert (=> b!82115 (= e!53567 (contains!746 lt!38365 (tuple2!2181 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_2!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!82116 () Bool)

(assert (=> b!82116 (= e!53566 e!53563)))

(assert (=> b!82116 (= c!13040 (and ((_ is Cons!1507) (toList!741 e!52552)) (= (_1!1101 (h!2096 (toList!741 e!52552))) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!82117 () Bool)

(assert (=> b!82117 (= e!53564 call!7675)))

(declare-fun b!82118 () Bool)

(declare-fun res!42616 () Bool)

(assert (=> b!82118 (=> (not res!42616) (not e!53567))))

(assert (=> b!82118 (= res!42616 (containsKey!142 lt!38365 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun bm!7674 () Bool)

(assert (=> bm!7674 (= call!7677 ($colon$colon!70 e!53565 (ite c!13039 (h!2096 (toList!741 e!52552)) (tuple2!2181 (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_2!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))))

(declare-fun c!13041 () Bool)

(assert (=> bm!7674 (= c!13041 c!13039)))

(declare-fun b!82119 () Bool)

(assert (=> b!82119 (= e!53565 (insertStrictlySorted!58 (t!5178 (toList!741 e!52552)) (_1!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_2!1101 (ite c!12569 (ite c!12571 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37282) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37282)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!82120 () Bool)

(assert (=> b!82120 (= e!53563 call!7676)))

(assert (= (and d!20525 c!13039) b!82114))

(assert (= (and d!20525 (not c!13039)) b!82116))

(assert (= (and b!82116 c!13040) b!82120))

(assert (= (and b!82116 (not c!13040)) b!82111))

(assert (= (and b!82111 c!13038) b!82117))

(assert (= (and b!82111 (not c!13038)) b!82112))

(assert (= (or b!82117 b!82112) bm!7673))

(assert (= (or b!82120 bm!7673) bm!7672))

(assert (= (or b!82114 bm!7672) bm!7674))

(assert (= (and bm!7674 c!13041) b!82119))

(assert (= (and bm!7674 (not c!13041)) b!82113))

(assert (= (and d!20525 res!42617) b!82118))

(assert (= (and b!82118 res!42616) b!82115))

(declare-fun m!84679 () Bool)

(assert (=> b!82115 m!84679))

(declare-fun m!84681 () Bool)

(assert (=> b!82118 m!84681))

(declare-fun m!84683 () Bool)

(assert (=> d!20525 m!84683))

(declare-fun m!84685 () Bool)

(assert (=> d!20525 m!84685))

(declare-fun m!84687 () Bool)

(assert (=> b!82119 m!84687))

(declare-fun m!84689 () Bool)

(assert (=> bm!7674 m!84689))

(assert (=> d!19731 d!20525))

(assert (=> b!80959 d!20219))

(assert (=> b!80959 d!20221))

(assert (=> b!80920 d!19941))

(assert (=> b!81190 d!20079))

(declare-fun d!20527 () Bool)

(declare-fun c!13042 () Bool)

(assert (=> d!20527 (= c!13042 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37553))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37553)))) (_1!1101 lt!37278))))))

(declare-fun e!53568 () Option!144)

(assert (=> d!20527 (= (getValueByKey!138 (t!5178 (toList!741 lt!37553)) (_1!1101 lt!37278)) e!53568)))

(declare-fun b!82122 () Bool)

(declare-fun e!53569 () Option!144)

(assert (=> b!82122 (= e!53568 e!53569)))

(declare-fun c!13043 () Bool)

(assert (=> b!82122 (= c!13043 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37553))) (not (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37553)))) (_1!1101 lt!37278)))))))

(declare-fun b!82123 () Bool)

(assert (=> b!82123 (= e!53569 (getValueByKey!138 (t!5178 (t!5178 (toList!741 lt!37553))) (_1!1101 lt!37278)))))

(declare-fun b!82124 () Bool)

(assert (=> b!82124 (= e!53569 None!142)))

(declare-fun b!82121 () Bool)

(assert (=> b!82121 (= e!53568 (Some!143 (_2!1101 (h!2096 (t!5178 (toList!741 lt!37553))))))))

(assert (= (and d!20527 c!13042) b!82121))

(assert (= (and d!20527 (not c!13042)) b!82122))

(assert (= (and b!82122 c!13043) b!82123))

(assert (= (and b!82122 (not c!13043)) b!82124))

(declare-fun m!84691 () Bool)

(assert (=> b!82123 m!84691))

(assert (=> b!80687 d!20527))

(declare-fun d!20529 () Bool)

(declare-fun e!53570 () Bool)

(assert (=> d!20529 e!53570))

(declare-fun res!42618 () Bool)

(assert (=> d!20529 (=> res!42618 e!53570)))

(declare-fun lt!38367 () Bool)

(assert (=> d!20529 (= res!42618 (not lt!38367))))

(declare-fun lt!38366 () Bool)

(assert (=> d!20529 (= lt!38367 lt!38366)))

(declare-fun lt!38369 () Unit!2341)

(declare-fun e!53571 () Unit!2341)

(assert (=> d!20529 (= lt!38369 e!53571)))

(declare-fun c!13044 () Bool)

(assert (=> d!20529 (= c!13044 lt!38366)))

(assert (=> d!20529 (= lt!38366 (containsKey!142 (toList!741 (getCurrentListMap!435 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))

(assert (=> d!20529 (= (contains!745 (getCurrentListMap!435 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))) lt!38367)))

(declare-fun b!82125 () Bool)

(declare-fun lt!38368 () Unit!2341)

(assert (=> b!82125 (= e!53571 lt!38368)))

(assert (=> b!82125 (= lt!38368 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 (getCurrentListMap!435 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))

(assert (=> b!82125 (isDefined!91 (getValueByKey!138 (toList!741 (getCurrentListMap!435 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))

(declare-fun b!82126 () Bool)

(declare-fun Unit!2402 () Unit!2341)

(assert (=> b!82126 (= e!53571 Unit!2402)))

(declare-fun b!82127 () Bool)

(assert (=> b!82127 (= e!53570 (isDefined!91 (getValueByKey!138 (toList!741 (getCurrentListMap!435 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427)))))))

(assert (= (and d!20529 c!13044) b!82125))

(assert (= (and d!20529 (not c!13044)) b!82126))

(assert (= (and d!20529 (not res!42618)) b!82127))

(assert (=> d!20529 m!81977))

(declare-fun m!84693 () Bool)

(assert (=> d!20529 m!84693))

(assert (=> b!82125 m!81977))

(declare-fun m!84695 () Bool)

(assert (=> b!82125 m!84695))

(assert (=> b!82125 m!81977))

(declare-fun m!84697 () Bool)

(assert (=> b!82125 m!84697))

(assert (=> b!82125 m!84697))

(declare-fun m!84699 () Bool)

(assert (=> b!82125 m!84699))

(assert (=> b!82127 m!81977))

(assert (=> b!82127 m!84697))

(assert (=> b!82127 m!84697))

(assert (=> b!82127 m!84699))

(assert (=> b!81021 d!20529))

(declare-fun d!20531 () Bool)

(declare-fun e!53572 () Bool)

(assert (=> d!20531 e!53572))

(declare-fun res!42626 () Bool)

(assert (=> d!20531 (=> (not res!42626) (not e!53572))))

(assert (=> d!20531 (= res!42626 (or (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))))

(declare-fun lt!38380 () ListLongMap!1451)

(declare-fun lt!38371 () ListLongMap!1451)

(assert (=> d!20531 (= lt!38380 lt!38371)))

(declare-fun lt!38383 () Unit!2341)

(declare-fun e!53579 () Unit!2341)

(assert (=> d!20531 (= lt!38383 e!53579)))

(declare-fun c!13049 () Bool)

(declare-fun e!53578 () Bool)

(assert (=> d!20531 (= c!13049 e!53578)))

(declare-fun res!42619 () Bool)

(assert (=> d!20531 (=> (not res!42619) (not e!53578))))

(assert (=> d!20531 (= res!42619 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun e!53583 () ListLongMap!1451)

(assert (=> d!20531 (= lt!38371 e!53583)))

(declare-fun c!13046 () Bool)

(assert (=> d!20531 (= c!13046 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20531 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20531 (= (getCurrentListMap!435 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38380)))

(declare-fun b!82128 () Bool)

(declare-fun Unit!2403 () Unit!2341)

(assert (=> b!82128 (= e!53579 Unit!2403)))

(declare-fun b!82129 () Bool)

(declare-fun lt!38370 () Unit!2341)

(assert (=> b!82129 (= e!53579 lt!38370)))

(declare-fun lt!38379 () ListLongMap!1451)

(assert (=> b!82129 (= lt!38379 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38385 () (_ BitVec 64))

(assert (=> b!82129 (= lt!38385 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38372 () (_ BitVec 64))

(assert (=> b!82129 (= lt!38372 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38374 () Unit!2341)

(assert (=> b!82129 (= lt!38374 (addStillContains!56 lt!38379 lt!38385 (zeroValue!2189 newMap!16) lt!38372))))

(assert (=> b!82129 (contains!745 (+!106 lt!38379 (tuple2!2181 lt!38385 (zeroValue!2189 newMap!16))) lt!38372)))

(declare-fun lt!38390 () Unit!2341)

(assert (=> b!82129 (= lt!38390 lt!38374)))

(declare-fun lt!38391 () ListLongMap!1451)

(assert (=> b!82129 (= lt!38391 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38387 () (_ BitVec 64))

(assert (=> b!82129 (= lt!38387 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38373 () (_ BitVec 64))

(assert (=> b!82129 (= lt!38373 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38381 () Unit!2341)

(assert (=> b!82129 (= lt!38381 (addApplyDifferent!56 lt!38391 lt!38387 (minValue!2189 newMap!16) lt!38373))))

(assert (=> b!82129 (= (apply!80 (+!106 lt!38391 (tuple2!2181 lt!38387 (minValue!2189 newMap!16))) lt!38373) (apply!80 lt!38391 lt!38373))))

(declare-fun lt!38377 () Unit!2341)

(assert (=> b!82129 (= lt!38377 lt!38381)))

(declare-fun lt!38388 () ListLongMap!1451)

(assert (=> b!82129 (= lt!38388 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38375 () (_ BitVec 64))

(assert (=> b!82129 (= lt!38375 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38378 () (_ BitVec 64))

(assert (=> b!82129 (= lt!38378 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38376 () Unit!2341)

(assert (=> b!82129 (= lt!38376 (addApplyDifferent!56 lt!38388 lt!38375 (zeroValue!2189 newMap!16) lt!38378))))

(assert (=> b!82129 (= (apply!80 (+!106 lt!38388 (tuple2!2181 lt!38375 (zeroValue!2189 newMap!16))) lt!38378) (apply!80 lt!38388 lt!38378))))

(declare-fun lt!38389 () Unit!2341)

(assert (=> b!82129 (= lt!38389 lt!38376)))

(declare-fun lt!38386 () ListLongMap!1451)

(assert (=> b!82129 (= lt!38386 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38384 () (_ BitVec 64))

(assert (=> b!82129 (= lt!38384 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38382 () (_ BitVec 64))

(assert (=> b!82129 (= lt!38382 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!82129 (= lt!38370 (addApplyDifferent!56 lt!38386 lt!38384 (minValue!2189 newMap!16) lt!38382))))

(assert (=> b!82129 (= (apply!80 (+!106 lt!38386 (tuple2!2181 lt!38384 (minValue!2189 newMap!16))) lt!38382) (apply!80 lt!38386 lt!38382))))

(declare-fun b!82130 () Bool)

(declare-fun res!42622 () Bool)

(assert (=> b!82130 (=> (not res!42622) (not e!53572))))

(declare-fun e!53573 () Bool)

(assert (=> b!82130 (= res!42622 e!53573)))

(declare-fun res!42627 () Bool)

(assert (=> b!82130 (=> res!42627 e!53573)))

(declare-fun e!53580 () Bool)

(assert (=> b!82130 (= res!42627 (not e!53580))))

(declare-fun res!42625 () Bool)

(assert (=> b!82130 (=> (not res!42625) (not e!53580))))

(assert (=> b!82130 (= res!42625 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!82131 () Bool)

(declare-fun e!53582 () Bool)

(assert (=> b!82131 (= e!53582 (= (apply!80 lt!38380 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!82132 () Bool)

(declare-fun e!53584 () Bool)

(assert (=> b!82132 (= e!53573 e!53584)))

(declare-fun res!42621 () Bool)

(assert (=> b!82132 (=> (not res!42621) (not e!53584))))

(assert (=> b!82132 (= res!42621 (contains!745 lt!38380 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82132 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun bm!7675 () Bool)

(declare-fun call!7683 () ListLongMap!1451)

(declare-fun call!7684 () ListLongMap!1451)

(assert (=> bm!7675 (= call!7683 call!7684)))

(declare-fun b!82133 () Bool)

(declare-fun e!53577 () Bool)

(assert (=> b!82133 (= e!53577 e!53582)))

(declare-fun res!42623 () Bool)

(declare-fun call!7680 () Bool)

(assert (=> b!82133 (= res!42623 call!7680)))

(assert (=> b!82133 (=> (not res!42623) (not e!53582))))

(declare-fun b!82134 () Bool)

(assert (=> b!82134 (= e!53580 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82135 () Bool)

(assert (=> b!82135 (= e!53577 (not call!7680))))

(declare-fun b!82136 () Bool)

(assert (=> b!82136 (= e!53578 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82137 () Bool)

(declare-fun e!53581 () Bool)

(declare-fun call!7682 () Bool)

(assert (=> b!82137 (= e!53581 (not call!7682))))

(declare-fun bm!7676 () Bool)

(declare-fun call!7681 () ListLongMap!1451)

(assert (=> bm!7676 (= call!7681 call!7683)))

(declare-fun b!82138 () Bool)

(declare-fun e!53575 () ListLongMap!1451)

(declare-fun call!7679 () ListLongMap!1451)

(assert (=> b!82138 (= e!53575 call!7679)))

(declare-fun bm!7677 () Bool)

(assert (=> bm!7677 (= call!7682 (contains!745 lt!38380 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82139 () Bool)

(assert (=> b!82139 (= e!53572 e!53577)))

(declare-fun c!13045 () Bool)

(assert (=> b!82139 (= c!13045 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7678 () Bool)

(assert (=> bm!7678 (= call!7684 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) lt!37432 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bm!7679 () Bool)

(declare-fun call!7678 () ListLongMap!1451)

(assert (=> bm!7679 (= call!7679 call!7678)))

(declare-fun b!82140 () Bool)

(declare-fun res!42620 () Bool)

(assert (=> b!82140 (=> (not res!42620) (not e!53572))))

(assert (=> b!82140 (= res!42620 e!53581)))

(declare-fun c!13048 () Bool)

(assert (=> b!82140 (= c!13048 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!82141 () Bool)

(assert (=> b!82141 (= e!53583 (+!106 call!7678 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!82142 () Bool)

(assert (=> b!82142 (= e!53575 call!7681)))

(declare-fun bm!7680 () Bool)

(declare-fun c!13047 () Bool)

(assert (=> bm!7680 (= call!7678 (+!106 (ite c!13046 call!7684 (ite c!13047 call!7683 call!7681)) (ite (or c!13046 c!13047) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!82143 () Bool)

(assert (=> b!82143 (= e!53584 (= (apply!80 lt!38380 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 lt!37432) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82143 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 lt!37432)))))

(assert (=> b!82143 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!82144 () Bool)

(declare-fun c!13050 () Bool)

(assert (=> b!82144 (= c!13050 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53574 () ListLongMap!1451)

(assert (=> b!82144 (= e!53574 e!53575)))

(declare-fun b!82145 () Bool)

(declare-fun e!53576 () Bool)

(assert (=> b!82145 (= e!53576 (= (apply!80 lt!38380 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun b!82146 () Bool)

(assert (=> b!82146 (= e!53581 e!53576)))

(declare-fun res!42624 () Bool)

(assert (=> b!82146 (= res!42624 call!7682)))

(assert (=> b!82146 (=> (not res!42624) (not e!53576))))

(declare-fun b!82147 () Bool)

(assert (=> b!82147 (= e!53583 e!53574)))

(assert (=> b!82147 (= c!13047 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7681 () Bool)

(assert (=> bm!7681 (= call!7680 (contains!745 lt!38380 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82148 () Bool)

(assert (=> b!82148 (= e!53574 call!7679)))

(assert (= (and d!20531 c!13046) b!82141))

(assert (= (and d!20531 (not c!13046)) b!82147))

(assert (= (and b!82147 c!13047) b!82148))

(assert (= (and b!82147 (not c!13047)) b!82144))

(assert (= (and b!82144 c!13050) b!82138))

(assert (= (and b!82144 (not c!13050)) b!82142))

(assert (= (or b!82138 b!82142) bm!7676))

(assert (= (or b!82148 bm!7676) bm!7675))

(assert (= (or b!82148 b!82138) bm!7679))

(assert (= (or b!82141 bm!7675) bm!7678))

(assert (= (or b!82141 bm!7679) bm!7680))

(assert (= (and d!20531 res!42619) b!82136))

(assert (= (and d!20531 c!13049) b!82129))

(assert (= (and d!20531 (not c!13049)) b!82128))

(assert (= (and d!20531 res!42626) b!82130))

(assert (= (and b!82130 res!42625) b!82134))

(assert (= (and b!82130 (not res!42627)) b!82132))

(assert (= (and b!82132 res!42621) b!82143))

(assert (= (and b!82130 res!42622) b!82140))

(assert (= (and b!82140 c!13048) b!82146))

(assert (= (and b!82140 (not c!13048)) b!82137))

(assert (= (and b!82146 res!42624) b!82145))

(assert (= (or b!82146 b!82137) bm!7677))

(assert (= (and b!82140 res!42620) b!82139))

(assert (= (and b!82139 c!13045) b!82133))

(assert (= (and b!82139 (not c!13045)) b!82135))

(assert (= (and b!82133 res!42623) b!82131))

(assert (= (or b!82133 b!82135) bm!7681))

(declare-fun b_lambda!3651 () Bool)

(assert (=> (not b_lambda!3651) (not b!82143)))

(assert (=> b!82143 t!5185))

(declare-fun b_and!5007 () Bool)

(assert (= b_and!5003 (and (=> t!5185 result!2853) b_and!5007)))

(assert (=> b!82143 t!5187))

(declare-fun b_and!5009 () Bool)

(assert (= b_and!5005 (and (=> t!5187 result!2855) b_and!5009)))

(assert (=> b!82143 m!82265))

(declare-fun m!84701 () Bool)

(assert (=> b!82143 m!84701))

(assert (=> b!82143 m!82265))

(declare-fun m!84703 () Bool)

(assert (=> b!82143 m!84703))

(assert (=> b!82143 m!82271))

(assert (=> b!82143 m!84701))

(assert (=> b!82143 m!82271))

(declare-fun m!84705 () Bool)

(assert (=> b!82143 m!84705))

(declare-fun m!84707 () Bool)

(assert (=> bm!7677 m!84707))

(declare-fun m!84709 () Bool)

(assert (=> bm!7680 m!84709))

(assert (=> b!82129 m!82265))

(declare-fun m!84711 () Bool)

(assert (=> b!82129 m!84711))

(declare-fun m!84713 () Bool)

(assert (=> b!82129 m!84713))

(declare-fun m!84715 () Bool)

(assert (=> b!82129 m!84715))

(declare-fun m!84717 () Bool)

(assert (=> b!82129 m!84717))

(declare-fun m!84719 () Bool)

(assert (=> b!82129 m!84719))

(declare-fun m!84721 () Bool)

(assert (=> b!82129 m!84721))

(declare-fun m!84723 () Bool)

(assert (=> b!82129 m!84723))

(declare-fun m!84725 () Bool)

(assert (=> b!82129 m!84725))

(declare-fun m!84727 () Bool)

(assert (=> b!82129 m!84727))

(assert (=> b!82129 m!84713))

(assert (=> b!82129 m!84717))

(declare-fun m!84729 () Bool)

(assert (=> b!82129 m!84729))

(declare-fun m!84731 () Bool)

(assert (=> b!82129 m!84731))

(declare-fun m!84733 () Bool)

(assert (=> b!82129 m!84733))

(declare-fun m!84735 () Bool)

(assert (=> b!82129 m!84735))

(assert (=> b!82129 m!84735))

(declare-fun m!84737 () Bool)

(assert (=> b!82129 m!84737))

(assert (=> b!82129 m!84725))

(declare-fun m!84739 () Bool)

(assert (=> b!82129 m!84739))

(declare-fun m!84741 () Bool)

(assert (=> b!82129 m!84741))

(declare-fun m!84743 () Bool)

(assert (=> b!82131 m!84743))

(assert (=> b!82136 m!82265))

(assert (=> b!82136 m!82265))

(assert (=> b!82136 m!82313))

(declare-fun m!84745 () Bool)

(assert (=> bm!7681 m!84745))

(assert (=> bm!7678 m!84741))

(declare-fun m!84747 () Bool)

(assert (=> b!82141 m!84747))

(assert (=> b!82134 m!82265))

(assert (=> b!82134 m!82265))

(assert (=> b!82134 m!82313))

(assert (=> b!82132 m!82265))

(assert (=> b!82132 m!82265))

(declare-fun m!84749 () Bool)

(assert (=> b!82132 m!84749))

(assert (=> d!20531 m!82321))

(declare-fun m!84751 () Bool)

(assert (=> b!82145 m!84751))

(assert (=> b!81021 d!20531))

(declare-fun d!20533 () Bool)

(declare-fun lt!38392 () (_ BitVec 32))

(assert (=> d!20533 (and (bvsge lt!38392 #b00000000000000000000000000000000) (bvsle lt!38392 (bvsub (size!2143 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!53585 () (_ BitVec 32))

(assert (=> d!20533 (= lt!38392 e!53585)))

(declare-fun c!13051 () Bool)

(assert (=> d!20533 (= c!13051 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2143 (_keys!3957 newMap!16))))))

(assert (=> d!20533 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2143 (_keys!3957 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2143 (_keys!3957 newMap!16)) (size!2143 (_keys!3957 newMap!16))))))

(assert (=> d!20533 (= (arrayCountValidKeys!0 (_keys!3957 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2143 (_keys!3957 newMap!16))) lt!38392)))

(declare-fun bm!7682 () Bool)

(declare-fun call!7685 () (_ BitVec 32))

(assert (=> bm!7682 (= call!7685 (arrayCountValidKeys!0 (_keys!3957 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!82149 () Bool)

(declare-fun e!53586 () (_ BitVec 32))

(assert (=> b!82149 (= e!53586 call!7685)))

(declare-fun b!82150 () Bool)

(assert (=> b!82150 (= e!53585 #b00000000000000000000000000000000)))

(declare-fun b!82151 () Bool)

(assert (=> b!82151 (= e!53586 (bvadd #b00000000000000000000000000000001 call!7685))))

(declare-fun b!82152 () Bool)

(assert (=> b!82152 (= e!53585 e!53586)))

(declare-fun c!13052 () Bool)

(assert (=> b!82152 (= c!13052 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!20533 c!13051) b!82150))

(assert (= (and d!20533 (not c!13051)) b!82152))

(assert (= (and b!82152 c!13052) b!82151))

(assert (= (and b!82152 (not c!13052)) b!82149))

(assert (= (or b!82151 b!82149) bm!7682))

(declare-fun m!84753 () Bool)

(assert (=> bm!7682 m!84753))

(assert (=> b!82152 m!83667))

(assert (=> b!82152 m!83667))

(assert (=> b!82152 m!83671))

(assert (=> bm!7568 d!20533))

(declare-fun d!20535 () Bool)

(assert (=> d!20535 (= (apply!80 (+!106 lt!37679 (tuple2!2181 lt!37677 (minValue!2189 newMap!16))) lt!37675) (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37679 (tuple2!2181 lt!37677 (minValue!2189 newMap!16)))) lt!37675)))))

(declare-fun bs!3474 () Bool)

(assert (= bs!3474 d!20535))

(declare-fun m!84755 () Bool)

(assert (=> bs!3474 m!84755))

(assert (=> bs!3474 m!84755))

(declare-fun m!84757 () Bool)

(assert (=> bs!3474 m!84757))

(assert (=> b!80857 d!20535))

(declare-fun d!20537 () Bool)

(assert (=> d!20537 (= (apply!80 (+!106 lt!37681 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16))) lt!37671) (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37681 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16)))) lt!37671)))))

(declare-fun bs!3475 () Bool)

(assert (= bs!3475 d!20537))

(declare-fun m!84759 () Bool)

(assert (=> bs!3475 m!84759))

(assert (=> bs!3475 m!84759))

(declare-fun m!84761 () Bool)

(assert (=> bs!3475 m!84761))

(assert (=> b!80857 d!20537))

(declare-fun d!20539 () Bool)

(declare-fun e!53587 () Bool)

(assert (=> d!20539 e!53587))

(declare-fun res!42629 () Bool)

(assert (=> d!20539 (=> (not res!42629) (not e!53587))))

(declare-fun lt!38394 () ListLongMap!1451)

(assert (=> d!20539 (= res!42629 (contains!745 lt!38394 (_1!1101 (tuple2!2181 lt!37680 (minValue!2189 newMap!16)))))))

(declare-fun lt!38396 () List!1511)

(assert (=> d!20539 (= lt!38394 (ListLongMap!1452 lt!38396))))

(declare-fun lt!38395 () Unit!2341)

(declare-fun lt!38393 () Unit!2341)

(assert (=> d!20539 (= lt!38395 lt!38393)))

(assert (=> d!20539 (= (getValueByKey!138 lt!38396 (_1!1101 (tuple2!2181 lt!37680 (minValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37680 (minValue!2189 newMap!16)))))))

(assert (=> d!20539 (= lt!38393 (lemmaContainsTupThenGetReturnValue!55 lt!38396 (_1!1101 (tuple2!2181 lt!37680 (minValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37680 (minValue!2189 newMap!16)))))))

(assert (=> d!20539 (= lt!38396 (insertStrictlySorted!58 (toList!741 lt!37684) (_1!1101 (tuple2!2181 lt!37680 (minValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37680 (minValue!2189 newMap!16)))))))

(assert (=> d!20539 (= (+!106 lt!37684 (tuple2!2181 lt!37680 (minValue!2189 newMap!16))) lt!38394)))

(declare-fun b!82153 () Bool)

(declare-fun res!42628 () Bool)

(assert (=> b!82153 (=> (not res!42628) (not e!53587))))

(assert (=> b!82153 (= res!42628 (= (getValueByKey!138 (toList!741 lt!38394) (_1!1101 (tuple2!2181 lt!37680 (minValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37680 (minValue!2189 newMap!16))))))))

(declare-fun b!82154 () Bool)

(assert (=> b!82154 (= e!53587 (contains!746 (toList!741 lt!38394) (tuple2!2181 lt!37680 (minValue!2189 newMap!16))))))

(assert (= (and d!20539 res!42629) b!82153))

(assert (= (and b!82153 res!42628) b!82154))

(declare-fun m!84763 () Bool)

(assert (=> d!20539 m!84763))

(declare-fun m!84765 () Bool)

(assert (=> d!20539 m!84765))

(declare-fun m!84767 () Bool)

(assert (=> d!20539 m!84767))

(declare-fun m!84769 () Bool)

(assert (=> d!20539 m!84769))

(declare-fun m!84771 () Bool)

(assert (=> b!82153 m!84771))

(declare-fun m!84773 () Bool)

(assert (=> b!82154 m!84773))

(assert (=> b!80857 d!20539))

(declare-fun d!20541 () Bool)

(declare-fun e!53588 () Bool)

(assert (=> d!20541 e!53588))

(declare-fun res!42631 () Bool)

(assert (=> d!20541 (=> (not res!42631) (not e!53588))))

(declare-fun lt!38398 () ListLongMap!1451)

(assert (=> d!20541 (= res!42631 (contains!745 lt!38398 (_1!1101 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16)))))))

(declare-fun lt!38400 () List!1511)

(assert (=> d!20541 (= lt!38398 (ListLongMap!1452 lt!38400))))

(declare-fun lt!38399 () Unit!2341)

(declare-fun lt!38397 () Unit!2341)

(assert (=> d!20541 (= lt!38399 lt!38397)))

(assert (=> d!20541 (= (getValueByKey!138 lt!38400 (_1!1101 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20541 (= lt!38397 (lemmaContainsTupThenGetReturnValue!55 lt!38400 (_1!1101 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20541 (= lt!38400 (insertStrictlySorted!58 (toList!741 lt!37681) (_1!1101 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20541 (= (+!106 lt!37681 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16))) lt!38398)))

(declare-fun b!82155 () Bool)

(declare-fun res!42630 () Bool)

(assert (=> b!82155 (=> (not res!42630) (not e!53588))))

(assert (=> b!82155 (= res!42630 (= (getValueByKey!138 (toList!741 lt!38398) (_1!1101 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16))))))))

(declare-fun b!82156 () Bool)

(assert (=> b!82156 (= e!53588 (contains!746 (toList!741 lt!38398) (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16))))))

(assert (= (and d!20541 res!42631) b!82155))

(assert (= (and b!82155 res!42630) b!82156))

(declare-fun m!84775 () Bool)

(assert (=> d!20541 m!84775))

(declare-fun m!84777 () Bool)

(assert (=> d!20541 m!84777))

(declare-fun m!84779 () Bool)

(assert (=> d!20541 m!84779))

(declare-fun m!84781 () Bool)

(assert (=> d!20541 m!84781))

(declare-fun m!84783 () Bool)

(assert (=> b!82155 m!84783))

(declare-fun m!84785 () Bool)

(assert (=> b!82156 m!84785))

(assert (=> b!80857 d!20541))

(declare-fun d!20543 () Bool)

(assert (=> d!20543 (= (apply!80 (+!106 lt!37679 (tuple2!2181 lt!37677 (minValue!2189 newMap!16))) lt!37675) (apply!80 lt!37679 lt!37675))))

(declare-fun lt!38401 () Unit!2341)

(assert (=> d!20543 (= lt!38401 (choose!475 lt!37679 lt!37677 (minValue!2189 newMap!16) lt!37675))))

(declare-fun e!53589 () Bool)

(assert (=> d!20543 e!53589))

(declare-fun res!42632 () Bool)

(assert (=> d!20543 (=> (not res!42632) (not e!53589))))

(assert (=> d!20543 (= res!42632 (contains!745 lt!37679 lt!37675))))

(assert (=> d!20543 (= (addApplyDifferent!56 lt!37679 lt!37677 (minValue!2189 newMap!16) lt!37675) lt!38401)))

(declare-fun b!82157 () Bool)

(assert (=> b!82157 (= e!53589 (not (= lt!37675 lt!37677)))))

(assert (= (and d!20543 res!42632) b!82157))

(assert (=> d!20543 m!82499))

(declare-fun m!84787 () Bool)

(assert (=> d!20543 m!84787))

(declare-fun m!84789 () Bool)

(assert (=> d!20543 m!84789))

(assert (=> d!20543 m!82499))

(assert (=> d!20543 m!82501))

(assert (=> d!20543 m!82507))

(assert (=> b!80857 d!20543))

(declare-fun d!20545 () Bool)

(declare-fun e!53590 () Bool)

(assert (=> d!20545 e!53590))

(declare-fun res!42633 () Bool)

(assert (=> d!20545 (=> res!42633 e!53590)))

(declare-fun lt!38403 () Bool)

(assert (=> d!20545 (= res!42633 (not lt!38403))))

(declare-fun lt!38402 () Bool)

(assert (=> d!20545 (= lt!38403 lt!38402)))

(declare-fun lt!38405 () Unit!2341)

(declare-fun e!53591 () Unit!2341)

(assert (=> d!20545 (= lt!38405 e!53591)))

(declare-fun c!13053 () Bool)

(assert (=> d!20545 (= c!13053 lt!38402)))

(assert (=> d!20545 (= lt!38402 (containsKey!142 (toList!741 (+!106 lt!37672 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16)))) lt!37665))))

(assert (=> d!20545 (= (contains!745 (+!106 lt!37672 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16))) lt!37665) lt!38403)))

(declare-fun b!82158 () Bool)

(declare-fun lt!38404 () Unit!2341)

(assert (=> b!82158 (= e!53591 lt!38404)))

(assert (=> b!82158 (= lt!38404 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 (+!106 lt!37672 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16)))) lt!37665))))

(assert (=> b!82158 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37672 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16)))) lt!37665))))

(declare-fun b!82159 () Bool)

(declare-fun Unit!2404 () Unit!2341)

(assert (=> b!82159 (= e!53591 Unit!2404)))

(declare-fun b!82160 () Bool)

(assert (=> b!82160 (= e!53590 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37672 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16)))) lt!37665)))))

(assert (= (and d!20545 c!13053) b!82158))

(assert (= (and d!20545 (not c!13053)) b!82159))

(assert (= (and d!20545 (not res!42633)) b!82160))

(declare-fun m!84791 () Bool)

(assert (=> d!20545 m!84791))

(declare-fun m!84793 () Bool)

(assert (=> b!82158 m!84793))

(declare-fun m!84795 () Bool)

(assert (=> b!82158 m!84795))

(assert (=> b!82158 m!84795))

(declare-fun m!84797 () Bool)

(assert (=> b!82158 m!84797))

(assert (=> b!82160 m!84795))

(assert (=> b!82160 m!84795))

(assert (=> b!82160 m!84797))

(assert (=> b!80857 d!20545))

(declare-fun d!20547 () Bool)

(assert (=> d!20547 (= (apply!80 lt!37679 lt!37675) (get!1182 (getValueByKey!138 (toList!741 lt!37679) lt!37675)))))

(declare-fun bs!3476 () Bool)

(assert (= bs!3476 d!20547))

(declare-fun m!84799 () Bool)

(assert (=> bs!3476 m!84799))

(assert (=> bs!3476 m!84799))

(declare-fun m!84801 () Bool)

(assert (=> bs!3476 m!84801))

(assert (=> b!80857 d!20547))

(declare-fun d!20549 () Bool)

(assert (=> d!20549 (= (apply!80 lt!37684 lt!37666) (get!1182 (getValueByKey!138 (toList!741 lt!37684) lt!37666)))))

(declare-fun bs!3477 () Bool)

(assert (= bs!3477 d!20549))

(declare-fun m!84803 () Bool)

(assert (=> bs!3477 m!84803))

(assert (=> bs!3477 m!84803))

(declare-fun m!84805 () Bool)

(assert (=> bs!3477 m!84805))

(assert (=> b!80857 d!20549))

(declare-fun d!20551 () Bool)

(assert (=> d!20551 (= (apply!80 (+!106 lt!37684 (tuple2!2181 lt!37680 (minValue!2189 newMap!16))) lt!37666) (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37684 (tuple2!2181 lt!37680 (minValue!2189 newMap!16)))) lt!37666)))))

(declare-fun bs!3478 () Bool)

(assert (= bs!3478 d!20551))

(declare-fun m!84807 () Bool)

(assert (=> bs!3478 m!84807))

(assert (=> bs!3478 m!84807))

(declare-fun m!84809 () Bool)

(assert (=> bs!3478 m!84809))

(assert (=> b!80857 d!20551))

(declare-fun d!20553 () Bool)

(assert (=> d!20553 (contains!745 (+!106 lt!37672 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16))) lt!37665)))

(declare-fun lt!38406 () Unit!2341)

(assert (=> d!20553 (= lt!38406 (choose!476 lt!37672 lt!37678 (zeroValue!2189 newMap!16) lt!37665))))

(assert (=> d!20553 (contains!745 lt!37672 lt!37665)))

(assert (=> d!20553 (= (addStillContains!56 lt!37672 lt!37678 (zeroValue!2189 newMap!16) lt!37665) lt!38406)))

(declare-fun bs!3479 () Bool)

(assert (= bs!3479 d!20553))

(assert (=> bs!3479 m!82503))

(assert (=> bs!3479 m!82503))

(assert (=> bs!3479 m!82515))

(declare-fun m!84811 () Bool)

(assert (=> bs!3479 m!84811))

(declare-fun m!84813 () Bool)

(assert (=> bs!3479 m!84813))

(assert (=> b!80857 d!20553))

(assert (=> b!80857 d!20397))

(declare-fun d!20555 () Bool)

(declare-fun e!53592 () Bool)

(assert (=> d!20555 e!53592))

(declare-fun res!42635 () Bool)

(assert (=> d!20555 (=> (not res!42635) (not e!53592))))

(declare-fun lt!38408 () ListLongMap!1451)

(assert (=> d!20555 (= res!42635 (contains!745 lt!38408 (_1!1101 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16)))))))

(declare-fun lt!38410 () List!1511)

(assert (=> d!20555 (= lt!38408 (ListLongMap!1452 lt!38410))))

(declare-fun lt!38409 () Unit!2341)

(declare-fun lt!38407 () Unit!2341)

(assert (=> d!20555 (= lt!38409 lt!38407)))

(assert (=> d!20555 (= (getValueByKey!138 lt!38410 (_1!1101 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20555 (= lt!38407 (lemmaContainsTupThenGetReturnValue!55 lt!38410 (_1!1101 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20555 (= lt!38410 (insertStrictlySorted!58 (toList!741 lt!37672) (_1!1101 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20555 (= (+!106 lt!37672 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16))) lt!38408)))

(declare-fun b!82161 () Bool)

(declare-fun res!42634 () Bool)

(assert (=> b!82161 (=> (not res!42634) (not e!53592))))

(assert (=> b!82161 (= res!42634 (= (getValueByKey!138 (toList!741 lt!38408) (_1!1101 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16))))))))

(declare-fun b!82162 () Bool)

(assert (=> b!82162 (= e!53592 (contains!746 (toList!741 lt!38408) (tuple2!2181 lt!37678 (zeroValue!2189 newMap!16))))))

(assert (= (and d!20555 res!42635) b!82161))

(assert (= (and b!82161 res!42634) b!82162))

(declare-fun m!84815 () Bool)

(assert (=> d!20555 m!84815))

(declare-fun m!84817 () Bool)

(assert (=> d!20555 m!84817))

(declare-fun m!84819 () Bool)

(assert (=> d!20555 m!84819))

(declare-fun m!84821 () Bool)

(assert (=> d!20555 m!84821))

(declare-fun m!84823 () Bool)

(assert (=> b!82161 m!84823))

(declare-fun m!84825 () Bool)

(assert (=> b!82162 m!84825))

(assert (=> b!80857 d!20555))

(declare-fun d!20557 () Bool)

(assert (=> d!20557 (= (apply!80 lt!37681 lt!37671) (get!1182 (getValueByKey!138 (toList!741 lt!37681) lt!37671)))))

(declare-fun bs!3480 () Bool)

(assert (= bs!3480 d!20557))

(declare-fun m!84827 () Bool)

(assert (=> bs!3480 m!84827))

(assert (=> bs!3480 m!84827))

(declare-fun m!84829 () Bool)

(assert (=> bs!3480 m!84829))

(assert (=> b!80857 d!20557))

(declare-fun d!20559 () Bool)

(assert (=> d!20559 (= (apply!80 (+!106 lt!37681 (tuple2!2181 lt!37668 (zeroValue!2189 newMap!16))) lt!37671) (apply!80 lt!37681 lt!37671))))

(declare-fun lt!38411 () Unit!2341)

(assert (=> d!20559 (= lt!38411 (choose!475 lt!37681 lt!37668 (zeroValue!2189 newMap!16) lt!37671))))

(declare-fun e!53593 () Bool)

(assert (=> d!20559 e!53593))

(declare-fun res!42636 () Bool)

(assert (=> d!20559 (=> (not res!42636) (not e!53593))))

(assert (=> d!20559 (= res!42636 (contains!745 lt!37681 lt!37671))))

(assert (=> d!20559 (= (addApplyDifferent!56 lt!37681 lt!37668 (zeroValue!2189 newMap!16) lt!37671) lt!38411)))

(declare-fun b!82163 () Bool)

(assert (=> b!82163 (= e!53593 (not (= lt!37671 lt!37668)))))

(assert (= (and d!20559 res!42636) b!82163))

(assert (=> d!20559 m!82511))

(declare-fun m!84831 () Bool)

(assert (=> d!20559 m!84831))

(declare-fun m!84833 () Bool)

(assert (=> d!20559 m!84833))

(assert (=> d!20559 m!82511))

(assert (=> d!20559 m!82513))

(assert (=> d!20559 m!82497))

(assert (=> b!80857 d!20559))

(declare-fun d!20561 () Bool)

(declare-fun e!53594 () Bool)

(assert (=> d!20561 e!53594))

(declare-fun res!42638 () Bool)

(assert (=> d!20561 (=> (not res!42638) (not e!53594))))

(declare-fun lt!38413 () ListLongMap!1451)

(assert (=> d!20561 (= res!42638 (contains!745 lt!38413 (_1!1101 (tuple2!2181 lt!37677 (minValue!2189 newMap!16)))))))

(declare-fun lt!38415 () List!1511)

(assert (=> d!20561 (= lt!38413 (ListLongMap!1452 lt!38415))))

(declare-fun lt!38414 () Unit!2341)

(declare-fun lt!38412 () Unit!2341)

(assert (=> d!20561 (= lt!38414 lt!38412)))

(assert (=> d!20561 (= (getValueByKey!138 lt!38415 (_1!1101 (tuple2!2181 lt!37677 (minValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37677 (minValue!2189 newMap!16)))))))

(assert (=> d!20561 (= lt!38412 (lemmaContainsTupThenGetReturnValue!55 lt!38415 (_1!1101 (tuple2!2181 lt!37677 (minValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37677 (minValue!2189 newMap!16)))))))

(assert (=> d!20561 (= lt!38415 (insertStrictlySorted!58 (toList!741 lt!37679) (_1!1101 (tuple2!2181 lt!37677 (minValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37677 (minValue!2189 newMap!16)))))))

(assert (=> d!20561 (= (+!106 lt!37679 (tuple2!2181 lt!37677 (minValue!2189 newMap!16))) lt!38413)))

(declare-fun b!82164 () Bool)

(declare-fun res!42637 () Bool)

(assert (=> b!82164 (=> (not res!42637) (not e!53594))))

(assert (=> b!82164 (= res!42637 (= (getValueByKey!138 (toList!741 lt!38413) (_1!1101 (tuple2!2181 lt!37677 (minValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37677 (minValue!2189 newMap!16))))))))

(declare-fun b!82165 () Bool)

(assert (=> b!82165 (= e!53594 (contains!746 (toList!741 lt!38413) (tuple2!2181 lt!37677 (minValue!2189 newMap!16))))))

(assert (= (and d!20561 res!42638) b!82164))

(assert (= (and b!82164 res!42637) b!82165))

(declare-fun m!84835 () Bool)

(assert (=> d!20561 m!84835))

(declare-fun m!84837 () Bool)

(assert (=> d!20561 m!84837))

(declare-fun m!84839 () Bool)

(assert (=> d!20561 m!84839))

(declare-fun m!84841 () Bool)

(assert (=> d!20561 m!84841))

(declare-fun m!84843 () Bool)

(assert (=> b!82164 m!84843))

(declare-fun m!84845 () Bool)

(assert (=> b!82165 m!84845))

(assert (=> b!80857 d!20561))

(declare-fun d!20563 () Bool)

(assert (=> d!20563 (= (apply!80 (+!106 lt!37684 (tuple2!2181 lt!37680 (minValue!2189 newMap!16))) lt!37666) (apply!80 lt!37684 lt!37666))))

(declare-fun lt!38416 () Unit!2341)

(assert (=> d!20563 (= lt!38416 (choose!475 lt!37684 lt!37680 (minValue!2189 newMap!16) lt!37666))))

(declare-fun e!53595 () Bool)

(assert (=> d!20563 e!53595))

(declare-fun res!42639 () Bool)

(assert (=> d!20563 (=> (not res!42639) (not e!53595))))

(assert (=> d!20563 (= res!42639 (contains!745 lt!37684 lt!37666))))

(assert (=> d!20563 (= (addApplyDifferent!56 lt!37684 lt!37680 (minValue!2189 newMap!16) lt!37666) lt!38416)))

(declare-fun b!82166 () Bool)

(assert (=> b!82166 (= e!53595 (not (= lt!37666 lt!37680)))))

(assert (= (and d!20563 res!42639) b!82166))

(assert (=> d!20563 m!82521))

(declare-fun m!84847 () Bool)

(assert (=> d!20563 m!84847))

(declare-fun m!84849 () Bool)

(assert (=> d!20563 m!84849))

(assert (=> d!20563 m!82521))

(assert (=> d!20563 m!82523))

(assert (=> d!20563 m!82509))

(assert (=> b!80857 d!20563))

(declare-fun d!20565 () Bool)

(declare-fun lt!38417 () Bool)

(assert (=> d!20565 (= lt!38417 (select (content!85 lt!37514) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(declare-fun e!53597 () Bool)

(assert (=> d!20565 (= lt!38417 e!53597)))

(declare-fun res!42640 () Bool)

(assert (=> d!20565 (=> (not res!42640) (not e!53597))))

(assert (=> d!20565 (= res!42640 ((_ is Cons!1507) lt!37514))))

(assert (=> d!20565 (= (contains!746 lt!37514 (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))) lt!38417)))

(declare-fun b!82167 () Bool)

(declare-fun e!53596 () Bool)

(assert (=> b!82167 (= e!53597 e!53596)))

(declare-fun res!42641 () Bool)

(assert (=> b!82167 (=> res!42641 e!53596)))

(assert (=> b!82167 (= res!42641 (= (h!2096 lt!37514) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(declare-fun b!82168 () Bool)

(assert (=> b!82168 (= e!53596 (contains!746 (t!5178 lt!37514) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(assert (= (and d!20565 res!42640) b!82167))

(assert (= (and b!82167 (not res!42641)) b!82168))

(declare-fun m!84851 () Bool)

(assert (=> d!20565 m!84851))

(declare-fun m!84853 () Bool)

(assert (=> d!20565 m!84853))

(declare-fun m!84855 () Bool)

(assert (=> b!82168 m!84855))

(assert (=> b!80747 d!20565))

(declare-fun d!20567 () Bool)

(declare-fun e!53598 () Bool)

(assert (=> d!20567 e!53598))

(declare-fun res!42643 () Bool)

(assert (=> d!20567 (=> (not res!42643) (not e!53598))))

(declare-fun lt!38419 () ListLongMap!1451)

(assert (=> d!20567 (= res!42643 (contains!745 lt!38419 (_1!1101 (ite (or c!12701 c!12702) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))))))

(declare-fun lt!38421 () List!1511)

(assert (=> d!20567 (= lt!38419 (ListLongMap!1452 lt!38421))))

(declare-fun lt!38420 () Unit!2341)

(declare-fun lt!38418 () Unit!2341)

(assert (=> d!20567 (= lt!38420 lt!38418)))

(assert (=> d!20567 (= (getValueByKey!138 lt!38421 (_1!1101 (ite (or c!12701 c!12702) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))) (Some!143 (_2!1101 (ite (or c!12701 c!12702) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))))))

(assert (=> d!20567 (= lt!38418 (lemmaContainsTupThenGetReturnValue!55 lt!38421 (_1!1101 (ite (or c!12701 c!12702) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))) (_2!1101 (ite (or c!12701 c!12702) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))))))

(assert (=> d!20567 (= lt!38421 (insertStrictlySorted!58 (toList!741 (ite c!12701 call!7556 (ite c!12702 call!7555 call!7553))) (_1!1101 (ite (or c!12701 c!12702) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))) (_2!1101 (ite (or c!12701 c!12702) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))))))

(assert (=> d!20567 (= (+!106 (ite c!12701 call!7556 (ite c!12702 call!7555 call!7553)) (ite (or c!12701 c!12702) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))) lt!38419)))

(declare-fun b!82169 () Bool)

(declare-fun res!42642 () Bool)

(assert (=> b!82169 (=> (not res!42642) (not e!53598))))

(assert (=> b!82169 (= res!42642 (= (getValueByKey!138 (toList!741 lt!38419) (_1!1101 (ite (or c!12701 c!12702) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16)))))) (Some!143 (_2!1101 (ite (or c!12701 c!12702) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))))

(declare-fun b!82170 () Bool)

(assert (=> b!82170 (= e!53598 (contains!746 (toList!741 lt!38419) (ite (or c!12701 c!12702) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12569 (ite c!12571 (minValue!2189 newMap!16) lt!37282) (minValue!2189 newMap!16))))))))

(assert (= (and d!20567 res!42643) b!82169))

(assert (= (and b!82169 res!42642) b!82170))

(declare-fun m!84857 () Bool)

(assert (=> d!20567 m!84857))

(declare-fun m!84859 () Bool)

(assert (=> d!20567 m!84859))

(declare-fun m!84861 () Bool)

(assert (=> d!20567 m!84861))

(declare-fun m!84863 () Bool)

(assert (=> d!20567 m!84863))

(declare-fun m!84865 () Bool)

(assert (=> b!82169 m!84865))

(declare-fun m!84867 () Bool)

(assert (=> b!82170 m!84867))

(assert (=> bm!7552 d!20567))

(declare-fun d!20569 () Bool)

(declare-fun res!42644 () Bool)

(declare-fun e!53599 () Bool)

(assert (=> d!20569 (=> res!42644 e!53599)))

(assert (=> d!20569 (= res!42644 (or ((_ is Nil!1508) lt!37640) ((_ is Nil!1508) (t!5178 lt!37640))))))

(assert (=> d!20569 (= (isStrictlySorted!296 lt!37640) e!53599)))

(declare-fun b!82171 () Bool)

(declare-fun e!53600 () Bool)

(assert (=> b!82171 (= e!53599 e!53600)))

(declare-fun res!42645 () Bool)

(assert (=> b!82171 (=> (not res!42645) (not e!53600))))

(assert (=> b!82171 (= res!42645 (bvslt (_1!1101 (h!2096 lt!37640)) (_1!1101 (h!2096 (t!5178 lt!37640)))))))

(declare-fun b!82172 () Bool)

(assert (=> b!82172 (= e!53600 (isStrictlySorted!296 (t!5178 lt!37640)))))

(assert (= (and d!20569 (not res!42644)) b!82171))

(assert (= (and b!82171 res!42645) b!82172))

(declare-fun m!84869 () Bool)

(assert (=> b!82172 m!84869))

(assert (=> d!19759 d!20569))

(declare-fun d!20571 () Bool)

(declare-fun res!42646 () Bool)

(declare-fun e!53601 () Bool)

(assert (=> d!20571 (=> res!42646 e!53601)))

(assert (=> d!20571 (= res!42646 (or ((_ is Nil!1508) (toList!741 lt!37277)) ((_ is Nil!1508) (t!5178 (toList!741 lt!37277)))))))

(assert (=> d!20571 (= (isStrictlySorted!296 (toList!741 lt!37277)) e!53601)))

(declare-fun b!82173 () Bool)

(declare-fun e!53602 () Bool)

(assert (=> b!82173 (= e!53601 e!53602)))

(declare-fun res!42647 () Bool)

(assert (=> b!82173 (=> (not res!42647) (not e!53602))))

(assert (=> b!82173 (= res!42647 (bvslt (_1!1101 (h!2096 (toList!741 lt!37277))) (_1!1101 (h!2096 (t!5178 (toList!741 lt!37277))))))))

(declare-fun b!82174 () Bool)

(assert (=> b!82174 (= e!53602 (isStrictlySorted!296 (t!5178 (toList!741 lt!37277))))))

(assert (= (and d!20571 (not res!42646)) b!82173))

(assert (= (and b!82173 res!42647) b!82174))

(assert (=> b!82174 m!84357))

(assert (=> d!19759 d!20571))

(declare-fun lt!38422 () Bool)

(declare-fun d!20573 () Bool)

(assert (=> d!20573 (= lt!38422 (select (content!85 (toList!741 lt!37846)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(declare-fun e!53604 () Bool)

(assert (=> d!20573 (= lt!38422 e!53604)))

(declare-fun res!42648 () Bool)

(assert (=> d!20573 (=> (not res!42648) (not e!53604))))

(assert (=> d!20573 (= res!42648 ((_ is Cons!1507) (toList!741 lt!37846)))))

(assert (=> d!20573 (= (contains!746 (toList!741 lt!37846) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) lt!38422)))

(declare-fun b!82175 () Bool)

(declare-fun e!53603 () Bool)

(assert (=> b!82175 (= e!53604 e!53603)))

(declare-fun res!42649 () Bool)

(assert (=> b!82175 (=> res!42649 e!53603)))

(assert (=> b!82175 (= res!42649 (= (h!2096 (toList!741 lt!37846)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(declare-fun b!82176 () Bool)

(assert (=> b!82176 (= e!53603 (contains!746 (t!5178 (toList!741 lt!37846)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))

(assert (= (and d!20573 res!42648) b!82175))

(assert (= (and b!82175 (not res!42649)) b!82176))

(declare-fun m!84871 () Bool)

(assert (=> d!20573 m!84871))

(declare-fun m!84873 () Bool)

(assert (=> d!20573 m!84873))

(declare-fun m!84875 () Bool)

(assert (=> b!82176 m!84875))

(assert (=> b!81006 d!20573))

(declare-fun d!20575 () Bool)

(declare-fun c!13054 () Bool)

(assert (=> d!20575 (= c!13054 (and ((_ is Cons!1507) (t!5178 lt!37559)) (= (_1!1101 (h!2096 (t!5178 lt!37559))) (_1!1101 lt!37268))))))

(declare-fun e!53605 () Option!144)

(assert (=> d!20575 (= (getValueByKey!138 (t!5178 lt!37559) (_1!1101 lt!37268)) e!53605)))

(declare-fun b!82178 () Bool)

(declare-fun e!53606 () Option!144)

(assert (=> b!82178 (= e!53605 e!53606)))

(declare-fun c!13055 () Bool)

(assert (=> b!82178 (= c!13055 (and ((_ is Cons!1507) (t!5178 lt!37559)) (not (= (_1!1101 (h!2096 (t!5178 lt!37559))) (_1!1101 lt!37268)))))))

(declare-fun b!82179 () Bool)

(assert (=> b!82179 (= e!53606 (getValueByKey!138 (t!5178 (t!5178 lt!37559)) (_1!1101 lt!37268)))))

(declare-fun b!82180 () Bool)

(assert (=> b!82180 (= e!53606 None!142)))

(declare-fun b!82177 () Bool)

(assert (=> b!82177 (= e!53605 (Some!143 (_2!1101 (h!2096 (t!5178 lt!37559)))))))

(assert (= (and d!20575 c!13054) b!82177))

(assert (= (and d!20575 (not c!13054)) b!82178))

(assert (= (and b!82178 c!13055) b!82179))

(assert (= (and b!82178 (not c!13055)) b!82180))

(declare-fun m!84877 () Bool)

(assert (=> b!82179 m!84877))

(assert (=> b!81168 d!20575))

(declare-fun d!20577 () Bool)

(declare-fun c!13056 () Bool)

(assert (=> d!20577 (= c!13056 ((_ is Nil!1508) (toList!741 lt!37541)))))

(declare-fun e!53607 () (InoxSet tuple2!2180))

(assert (=> d!20577 (= (content!85 (toList!741 lt!37541)) e!53607)))

(declare-fun b!82181 () Bool)

(assert (=> b!82181 (= e!53607 ((as const (Array tuple2!2180 Bool)) false))))

(declare-fun b!82182 () Bool)

(assert (=> b!82182 (= e!53607 ((_ map or) (store ((as const (Array tuple2!2180 Bool)) false) (h!2096 (toList!741 lt!37541)) true) (content!85 (t!5178 (toList!741 lt!37541)))))))

(assert (= (and d!20577 c!13056) b!82181))

(assert (= (and d!20577 (not c!13056)) b!82182))

(declare-fun m!84879 () Bool)

(assert (=> b!82182 m!84879))

(assert (=> b!82182 m!84547))

(assert (=> d!19729 d!20577))

(declare-fun d!20579 () Bool)

(declare-fun e!53608 () Bool)

(assert (=> d!20579 e!53608))

(declare-fun res!42650 () Bool)

(assert (=> d!20579 (=> res!42650 e!53608)))

(declare-fun lt!38424 () Bool)

(assert (=> d!20579 (= res!42650 (not lt!38424))))

(declare-fun lt!38423 () Bool)

(assert (=> d!20579 (= lt!38424 lt!38423)))

(declare-fun lt!38426 () Unit!2341)

(declare-fun e!53609 () Unit!2341)

(assert (=> d!20579 (= lt!38426 e!53609)))

(declare-fun c!13057 () Bool)

(assert (=> d!20579 (= c!13057 lt!38423)))

(assert (=> d!20579 (= lt!38423 (containsKey!142 (toList!741 lt!37798) (_1!1101 (tuple2!2181 lt!37533 lt!37539))))))

(assert (=> d!20579 (= (contains!745 lt!37798 (_1!1101 (tuple2!2181 lt!37533 lt!37539))) lt!38424)))

(declare-fun b!82183 () Bool)

(declare-fun lt!38425 () Unit!2341)

(assert (=> b!82183 (= e!53609 lt!38425)))

(assert (=> b!82183 (= lt!38425 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37798) (_1!1101 (tuple2!2181 lt!37533 lt!37539))))))

(assert (=> b!82183 (isDefined!91 (getValueByKey!138 (toList!741 lt!37798) (_1!1101 (tuple2!2181 lt!37533 lt!37539))))))

(declare-fun b!82184 () Bool)

(declare-fun Unit!2405 () Unit!2341)

(assert (=> b!82184 (= e!53609 Unit!2405)))

(declare-fun b!82185 () Bool)

(assert (=> b!82185 (= e!53608 (isDefined!91 (getValueByKey!138 (toList!741 lt!37798) (_1!1101 (tuple2!2181 lt!37533 lt!37539)))))))

(assert (= (and d!20579 c!13057) b!82183))

(assert (= (and d!20579 (not c!13057)) b!82184))

(assert (= (and d!20579 (not res!42650)) b!82185))

(declare-fun m!84881 () Bool)

(assert (=> d!20579 m!84881))

(declare-fun m!84883 () Bool)

(assert (=> b!82183 m!84883))

(assert (=> b!82183 m!82659))

(assert (=> b!82183 m!82659))

(declare-fun m!84885 () Bool)

(assert (=> b!82183 m!84885))

(assert (=> b!82185 m!82659))

(assert (=> b!82185 m!82659))

(assert (=> b!82185 m!84885))

(assert (=> d!19781 d!20579))

(declare-fun d!20581 () Bool)

(declare-fun c!13058 () Bool)

(assert (=> d!20581 (= c!13058 (and ((_ is Cons!1507) lt!37800) (= (_1!1101 (h!2096 lt!37800)) (_1!1101 (tuple2!2181 lt!37533 lt!37539)))))))

(declare-fun e!53610 () Option!144)

(assert (=> d!20581 (= (getValueByKey!138 lt!37800 (_1!1101 (tuple2!2181 lt!37533 lt!37539))) e!53610)))

(declare-fun b!82187 () Bool)

(declare-fun e!53611 () Option!144)

(assert (=> b!82187 (= e!53610 e!53611)))

(declare-fun c!13059 () Bool)

(assert (=> b!82187 (= c!13059 (and ((_ is Cons!1507) lt!37800) (not (= (_1!1101 (h!2096 lt!37800)) (_1!1101 (tuple2!2181 lt!37533 lt!37539))))))))

(declare-fun b!82188 () Bool)

(assert (=> b!82188 (= e!53611 (getValueByKey!138 (t!5178 lt!37800) (_1!1101 (tuple2!2181 lt!37533 lt!37539))))))

(declare-fun b!82189 () Bool)

(assert (=> b!82189 (= e!53611 None!142)))

(declare-fun b!82186 () Bool)

(assert (=> b!82186 (= e!53610 (Some!143 (_2!1101 (h!2096 lt!37800))))))

(assert (= (and d!20581 c!13058) b!82186))

(assert (= (and d!20581 (not c!13058)) b!82187))

(assert (= (and b!82187 c!13059) b!82188))

(assert (= (and b!82187 (not c!13059)) b!82189))

(declare-fun m!84887 () Bool)

(assert (=> b!82188 m!84887))

(assert (=> d!19781 d!20581))

(declare-fun d!20583 () Bool)

(assert (=> d!20583 (= (getValueByKey!138 lt!37800 (_1!1101 (tuple2!2181 lt!37533 lt!37539))) (Some!143 (_2!1101 (tuple2!2181 lt!37533 lt!37539))))))

(declare-fun lt!38427 () Unit!2341)

(assert (=> d!20583 (= lt!38427 (choose!470 lt!37800 (_1!1101 (tuple2!2181 lt!37533 lt!37539)) (_2!1101 (tuple2!2181 lt!37533 lt!37539))))))

(declare-fun e!53612 () Bool)

(assert (=> d!20583 e!53612))

(declare-fun res!42651 () Bool)

(assert (=> d!20583 (=> (not res!42651) (not e!53612))))

(assert (=> d!20583 (= res!42651 (isStrictlySorted!296 lt!37800))))

(assert (=> d!20583 (= (lemmaContainsTupThenGetReturnValue!55 lt!37800 (_1!1101 (tuple2!2181 lt!37533 lt!37539)) (_2!1101 (tuple2!2181 lt!37533 lt!37539))) lt!38427)))

(declare-fun b!82190 () Bool)

(declare-fun res!42652 () Bool)

(assert (=> b!82190 (=> (not res!42652) (not e!53612))))

(assert (=> b!82190 (= res!42652 (containsKey!142 lt!37800 (_1!1101 (tuple2!2181 lt!37533 lt!37539))))))

(declare-fun b!82191 () Bool)

(assert (=> b!82191 (= e!53612 (contains!746 lt!37800 (tuple2!2181 (_1!1101 (tuple2!2181 lt!37533 lt!37539)) (_2!1101 (tuple2!2181 lt!37533 lt!37539)))))))

(assert (= (and d!20583 res!42651) b!82190))

(assert (= (and b!82190 res!42652) b!82191))

(assert (=> d!20583 m!82653))

(declare-fun m!84889 () Bool)

(assert (=> d!20583 m!84889))

(declare-fun m!84891 () Bool)

(assert (=> d!20583 m!84891))

(declare-fun m!84893 () Bool)

(assert (=> b!82190 m!84893))

(declare-fun m!84895 () Bool)

(assert (=> b!82191 m!84895))

(assert (=> d!19781 d!20583))

(declare-fun c!13060 () Bool)

(declare-fun b!82192 () Bool)

(assert (=> b!82192 (= c!13060 (and ((_ is Cons!1507) (toList!741 lt!37538)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37538))) (_1!1101 (tuple2!2181 lt!37533 lt!37539)))))))

(declare-fun e!53613 () List!1511)

(declare-fun e!53614 () List!1511)

(assert (=> b!82192 (= e!53613 e!53614)))

(declare-fun b!82193 () Bool)

(declare-fun call!7686 () List!1511)

(assert (=> b!82193 (= e!53614 call!7686)))

(declare-fun c!13062 () Bool)

(declare-fun e!53615 () List!1511)

(declare-fun b!82194 () Bool)

(assert (=> b!82194 (= e!53615 (ite c!13062 (t!5178 (toList!741 lt!37538)) (ite c!13060 (Cons!1507 (h!2096 (toList!741 lt!37538)) (t!5178 (toList!741 lt!37538))) Nil!1508)))))

(declare-fun d!20585 () Bool)

(declare-fun e!53617 () Bool)

(assert (=> d!20585 e!53617))

(declare-fun res!42654 () Bool)

(assert (=> d!20585 (=> (not res!42654) (not e!53617))))

(declare-fun lt!38428 () List!1511)

(assert (=> d!20585 (= res!42654 (isStrictlySorted!296 lt!38428))))

(declare-fun e!53616 () List!1511)

(assert (=> d!20585 (= lt!38428 e!53616)))

(declare-fun c!13061 () Bool)

(assert (=> d!20585 (= c!13061 (and ((_ is Cons!1507) (toList!741 lt!37538)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37538))) (_1!1101 (tuple2!2181 lt!37533 lt!37539)))))))

(assert (=> d!20585 (isStrictlySorted!296 (toList!741 lt!37538))))

(assert (=> d!20585 (= (insertStrictlySorted!58 (toList!741 lt!37538) (_1!1101 (tuple2!2181 lt!37533 lt!37539)) (_2!1101 (tuple2!2181 lt!37533 lt!37539))) lt!38428)))

(declare-fun b!82195 () Bool)

(declare-fun call!7688 () List!1511)

(assert (=> b!82195 (= e!53616 call!7688)))

(declare-fun bm!7683 () Bool)

(declare-fun call!7687 () List!1511)

(assert (=> bm!7683 (= call!7687 call!7688)))

(declare-fun bm!7684 () Bool)

(assert (=> bm!7684 (= call!7686 call!7687)))

(declare-fun b!82196 () Bool)

(assert (=> b!82196 (= e!53617 (contains!746 lt!38428 (tuple2!2181 (_1!1101 (tuple2!2181 lt!37533 lt!37539)) (_2!1101 (tuple2!2181 lt!37533 lt!37539)))))))

(declare-fun b!82197 () Bool)

(assert (=> b!82197 (= e!53616 e!53613)))

(assert (=> b!82197 (= c!13062 (and ((_ is Cons!1507) (toList!741 lt!37538)) (= (_1!1101 (h!2096 (toList!741 lt!37538))) (_1!1101 (tuple2!2181 lt!37533 lt!37539)))))))

(declare-fun b!82198 () Bool)

(assert (=> b!82198 (= e!53614 call!7686)))

(declare-fun b!82199 () Bool)

(declare-fun res!42653 () Bool)

(assert (=> b!82199 (=> (not res!42653) (not e!53617))))

(assert (=> b!82199 (= res!42653 (containsKey!142 lt!38428 (_1!1101 (tuple2!2181 lt!37533 lt!37539))))))

(declare-fun bm!7685 () Bool)

(assert (=> bm!7685 (= call!7688 ($colon$colon!70 e!53615 (ite c!13061 (h!2096 (toList!741 lt!37538)) (tuple2!2181 (_1!1101 (tuple2!2181 lt!37533 lt!37539)) (_2!1101 (tuple2!2181 lt!37533 lt!37539))))))))

(declare-fun c!13063 () Bool)

(assert (=> bm!7685 (= c!13063 c!13061)))

(declare-fun b!82200 () Bool)

(assert (=> b!82200 (= e!53615 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37538)) (_1!1101 (tuple2!2181 lt!37533 lt!37539)) (_2!1101 (tuple2!2181 lt!37533 lt!37539))))))

(declare-fun b!82201 () Bool)

(assert (=> b!82201 (= e!53613 call!7687)))

(assert (= (and d!20585 c!13061) b!82195))

(assert (= (and d!20585 (not c!13061)) b!82197))

(assert (= (and b!82197 c!13062) b!82201))

(assert (= (and b!82197 (not c!13062)) b!82192))

(assert (= (and b!82192 c!13060) b!82198))

(assert (= (and b!82192 (not c!13060)) b!82193))

(assert (= (or b!82198 b!82193) bm!7684))

(assert (= (or b!82201 bm!7684) bm!7683))

(assert (= (or b!82195 bm!7683) bm!7685))

(assert (= (and bm!7685 c!13063) b!82200))

(assert (= (and bm!7685 (not c!13063)) b!82194))

(assert (= (and d!20585 res!42654) b!82199))

(assert (= (and b!82199 res!42653) b!82196))

(declare-fun m!84897 () Bool)

(assert (=> b!82196 m!84897))

(declare-fun m!84899 () Bool)

(assert (=> b!82199 m!84899))

(declare-fun m!84901 () Bool)

(assert (=> d!20585 m!84901))

(declare-fun m!84903 () Bool)

(assert (=> d!20585 m!84903))

(declare-fun m!84905 () Bool)

(assert (=> b!82200 m!84905))

(declare-fun m!84907 () Bool)

(assert (=> bm!7685 m!84907))

(assert (=> d!19781 d!20585))

(declare-fun d!20587 () Bool)

(declare-fun e!53618 () Bool)

(assert (=> d!20587 e!53618))

(declare-fun res!42655 () Bool)

(assert (=> d!20587 (=> res!42655 e!53618)))

(declare-fun lt!38430 () Bool)

(assert (=> d!20587 (= res!42655 (not lt!38430))))

(declare-fun lt!38429 () Bool)

(assert (=> d!20587 (= lt!38430 lt!38429)))

(declare-fun lt!38432 () Unit!2341)

(declare-fun e!53619 () Unit!2341)

(assert (=> d!20587 (= lt!38432 e!53619)))

(declare-fun c!13064 () Bool)

(assert (=> d!20587 (= c!13064 lt!38429)))

(assert (=> d!20587 (= lt!38429 (containsKey!142 (toList!741 lt!37673) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20587 (= (contains!745 lt!37673 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38430)))

(declare-fun b!82202 () Bool)

(declare-fun lt!38431 () Unit!2341)

(assert (=> b!82202 (= e!53619 lt!38431)))

(assert (=> b!82202 (= lt!38431 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37673) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82202 (isDefined!91 (getValueByKey!138 (toList!741 lt!37673) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82203 () Bool)

(declare-fun Unit!2406 () Unit!2341)

(assert (=> b!82203 (= e!53619 Unit!2406)))

(declare-fun b!82204 () Bool)

(assert (=> b!82204 (= e!53618 (isDefined!91 (getValueByKey!138 (toList!741 lt!37673) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20587 c!13064) b!82202))

(assert (= (and d!20587 (not c!13064)) b!82203))

(assert (= (and d!20587 (not res!42655)) b!82204))

(declare-fun m!84909 () Bool)

(assert (=> d!20587 m!84909))

(declare-fun m!84911 () Bool)

(assert (=> b!82202 m!84911))

(declare-fun m!84913 () Bool)

(assert (=> b!82202 m!84913))

(assert (=> b!82202 m!84913))

(declare-fun m!84915 () Bool)

(assert (=> b!82202 m!84915))

(assert (=> b!82204 m!84913))

(assert (=> b!82204 m!84913))

(assert (=> b!82204 m!84915))

(assert (=> bm!7534 d!20587))

(declare-fun d!20589 () Bool)

(declare-fun res!42656 () Bool)

(declare-fun e!53620 () Bool)

(assert (=> d!20589 (=> res!42656 e!53620)))

(assert (=> d!20589 (= res!42656 (and ((_ is Cons!1507) lt!37640) (= (_1!1101 (h!2096 lt!37640)) (_1!1101 lt!37283))))))

(assert (=> d!20589 (= (containsKey!142 lt!37640 (_1!1101 lt!37283)) e!53620)))

(declare-fun b!82205 () Bool)

(declare-fun e!53621 () Bool)

(assert (=> b!82205 (= e!53620 e!53621)))

(declare-fun res!42657 () Bool)

(assert (=> b!82205 (=> (not res!42657) (not e!53621))))

(assert (=> b!82205 (= res!42657 (and (or (not ((_ is Cons!1507) lt!37640)) (bvsle (_1!1101 (h!2096 lt!37640)) (_1!1101 lt!37283))) ((_ is Cons!1507) lt!37640) (bvslt (_1!1101 (h!2096 lt!37640)) (_1!1101 lt!37283))))))

(declare-fun b!82206 () Bool)

(assert (=> b!82206 (= e!53621 (containsKey!142 (t!5178 lt!37640) (_1!1101 lt!37283)))))

(assert (= (and d!20589 (not res!42656)) b!82205))

(assert (= (and b!82205 res!42657) b!82206))

(declare-fun m!84917 () Bool)

(assert (=> b!82206 m!84917))

(assert (=> b!80800 d!20589))

(assert (=> b!81054 d!20331))

(assert (=> b!81054 d!20333))

(declare-fun c!13065 () Bool)

(declare-fun b!82207 () Bool)

(assert (=> b!82207 (= c!13065 (and ((_ is Cons!1507) (t!5178 (toList!741 (+!106 lt!37276 lt!37278)))) (bvsgt (_1!1101 (h!2096 (t!5178 (toList!741 (+!106 lt!37276 lt!37278))))) (_1!1101 lt!37283))))))

(declare-fun e!53622 () List!1511)

(declare-fun e!53623 () List!1511)

(assert (=> b!82207 (= e!53622 e!53623)))

(declare-fun b!82208 () Bool)

(declare-fun call!7689 () List!1511)

(assert (=> b!82208 (= e!53623 call!7689)))

(declare-fun e!53624 () List!1511)

(declare-fun c!13067 () Bool)

(declare-fun b!82209 () Bool)

(assert (=> b!82209 (= e!53624 (ite c!13067 (t!5178 (t!5178 (toList!741 (+!106 lt!37276 lt!37278)))) (ite c!13065 (Cons!1507 (h!2096 (t!5178 (toList!741 (+!106 lt!37276 lt!37278)))) (t!5178 (t!5178 (toList!741 (+!106 lt!37276 lt!37278))))) Nil!1508)))))

(declare-fun d!20591 () Bool)

(declare-fun e!53626 () Bool)

(assert (=> d!20591 e!53626))

(declare-fun res!42659 () Bool)

(assert (=> d!20591 (=> (not res!42659) (not e!53626))))

(declare-fun lt!38433 () List!1511)

(assert (=> d!20591 (= res!42659 (isStrictlySorted!296 lt!38433))))

(declare-fun e!53625 () List!1511)

(assert (=> d!20591 (= lt!38433 e!53625)))

(declare-fun c!13066 () Bool)

(assert (=> d!20591 (= c!13066 (and ((_ is Cons!1507) (t!5178 (toList!741 (+!106 lt!37276 lt!37278)))) (bvslt (_1!1101 (h!2096 (t!5178 (toList!741 (+!106 lt!37276 lt!37278))))) (_1!1101 lt!37283))))))

(assert (=> d!20591 (isStrictlySorted!296 (t!5178 (toList!741 (+!106 lt!37276 lt!37278))))))

(assert (=> d!20591 (= (insertStrictlySorted!58 (t!5178 (toList!741 (+!106 lt!37276 lt!37278))) (_1!1101 lt!37283) (_2!1101 lt!37283)) lt!38433)))

(declare-fun b!82210 () Bool)

(declare-fun call!7691 () List!1511)

(assert (=> b!82210 (= e!53625 call!7691)))

(declare-fun bm!7686 () Bool)

(declare-fun call!7690 () List!1511)

(assert (=> bm!7686 (= call!7690 call!7691)))

(declare-fun bm!7687 () Bool)

(assert (=> bm!7687 (= call!7689 call!7690)))

(declare-fun b!82211 () Bool)

(assert (=> b!82211 (= e!53626 (contains!746 lt!38433 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun b!82212 () Bool)

(assert (=> b!82212 (= e!53625 e!53622)))

(assert (=> b!82212 (= c!13067 (and ((_ is Cons!1507) (t!5178 (toList!741 (+!106 lt!37276 lt!37278)))) (= (_1!1101 (h!2096 (t!5178 (toList!741 (+!106 lt!37276 lt!37278))))) (_1!1101 lt!37283))))))

(declare-fun b!82213 () Bool)

(assert (=> b!82213 (= e!53623 call!7689)))

(declare-fun b!82214 () Bool)

(declare-fun res!42658 () Bool)

(assert (=> b!82214 (=> (not res!42658) (not e!53626))))

(assert (=> b!82214 (= res!42658 (containsKey!142 lt!38433 (_1!1101 lt!37283)))))

(declare-fun bm!7688 () Bool)

(assert (=> bm!7688 (= call!7691 ($colon$colon!70 e!53624 (ite c!13066 (h!2096 (t!5178 (toList!741 (+!106 lt!37276 lt!37278)))) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283)))))))

(declare-fun c!13068 () Bool)

(assert (=> bm!7688 (= c!13068 c!13066)))

(declare-fun b!82215 () Bool)

(assert (=> b!82215 (= e!53624 (insertStrictlySorted!58 (t!5178 (t!5178 (toList!741 (+!106 lt!37276 lt!37278)))) (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(declare-fun b!82216 () Bool)

(assert (=> b!82216 (= e!53622 call!7690)))

(assert (= (and d!20591 c!13066) b!82210))

(assert (= (and d!20591 (not c!13066)) b!82212))

(assert (= (and b!82212 c!13067) b!82216))

(assert (= (and b!82212 (not c!13067)) b!82207))

(assert (= (and b!82207 c!13065) b!82213))

(assert (= (and b!82207 (not c!13065)) b!82208))

(assert (= (or b!82213 b!82208) bm!7687))

(assert (= (or b!82216 bm!7687) bm!7686))

(assert (= (or b!82210 bm!7686) bm!7688))

(assert (= (and bm!7688 c!13068) b!82215))

(assert (= (and bm!7688 (not c!13068)) b!82209))

(assert (= (and d!20591 res!42659) b!82214))

(assert (= (and b!82214 res!42658) b!82211))

(declare-fun m!84919 () Bool)

(assert (=> b!82211 m!84919))

(declare-fun m!84921 () Bool)

(assert (=> b!82214 m!84921))

(declare-fun m!84923 () Bool)

(assert (=> d!20591 m!84923))

(assert (=> d!20591 m!83937))

(declare-fun m!84925 () Bool)

(assert (=> b!82215 m!84925))

(declare-fun m!84927 () Bool)

(assert (=> bm!7688 m!84927))

(assert (=> b!80987 d!20591))

(declare-fun d!20593 () Bool)

(assert (=> d!20593 (= (apply!80 lt!37785 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1182 (getValueByKey!138 (toList!741 lt!37785) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3481 () Bool)

(assert (= bs!3481 d!20593))

(assert (=> bs!3481 m!84095))

(assert (=> bs!3481 m!84095))

(declare-fun m!84929 () Bool)

(assert (=> bs!3481 m!84929))

(assert (=> b!80935 d!20593))

(assert (=> d!19773 d!19953))

(declare-fun d!20595 () Bool)

(declare-fun e!53627 () Bool)

(assert (=> d!20595 e!53627))

(declare-fun res!42661 () Bool)

(assert (=> d!20595 (=> (not res!42661) (not e!53627))))

(declare-fun lt!38435 () ListLongMap!1451)

(assert (=> d!20595 (= res!42661 (contains!745 lt!38435 (_1!1101 (tuple2!2181 lt!37573 lt!37579))))))

(declare-fun lt!38437 () List!1511)

(assert (=> d!20595 (= lt!38435 (ListLongMap!1452 lt!38437))))

(declare-fun lt!38436 () Unit!2341)

(declare-fun lt!38434 () Unit!2341)

(assert (=> d!20595 (= lt!38436 lt!38434)))

(assert (=> d!20595 (= (getValueByKey!138 lt!38437 (_1!1101 (tuple2!2181 lt!37573 lt!37579))) (Some!143 (_2!1101 (tuple2!2181 lt!37573 lt!37579))))))

(assert (=> d!20595 (= lt!38434 (lemmaContainsTupThenGetReturnValue!55 lt!38437 (_1!1101 (tuple2!2181 lt!37573 lt!37579)) (_2!1101 (tuple2!2181 lt!37573 lt!37579))))))

(assert (=> d!20595 (= lt!38437 (insertStrictlySorted!58 (toList!741 lt!37578) (_1!1101 (tuple2!2181 lt!37573 lt!37579)) (_2!1101 (tuple2!2181 lt!37573 lt!37579))))))

(assert (=> d!20595 (= (+!106 lt!37578 (tuple2!2181 lt!37573 lt!37579)) lt!38435)))

(declare-fun b!82217 () Bool)

(declare-fun res!42660 () Bool)

(assert (=> b!82217 (=> (not res!42660) (not e!53627))))

(assert (=> b!82217 (= res!42660 (= (getValueByKey!138 (toList!741 lt!38435) (_1!1101 (tuple2!2181 lt!37573 lt!37579))) (Some!143 (_2!1101 (tuple2!2181 lt!37573 lt!37579)))))))

(declare-fun b!82218 () Bool)

(assert (=> b!82218 (= e!53627 (contains!746 (toList!741 lt!38435) (tuple2!2181 lt!37573 lt!37579)))))

(assert (= (and d!20595 res!42661) b!82217))

(assert (= (and b!82217 res!42660) b!82218))

(declare-fun m!84931 () Bool)

(assert (=> d!20595 m!84931))

(declare-fun m!84933 () Bool)

(assert (=> d!20595 m!84933))

(declare-fun m!84935 () Bool)

(assert (=> d!20595 m!84935))

(declare-fun m!84937 () Bool)

(assert (=> d!20595 m!84937))

(declare-fun m!84939 () Bool)

(assert (=> b!82217 m!84939))

(declare-fun m!84941 () Bool)

(assert (=> b!82218 m!84941))

(assert (=> b!80655 d!20595))

(assert (=> b!80655 d!20185))

(declare-fun d!20597 () Bool)

(assert (=> d!20597 (not (contains!745 (+!106 lt!37578 (tuple2!2181 lt!37573 lt!37579)) lt!37575))))

(declare-fun lt!38438 () Unit!2341)

(assert (=> d!20597 (= lt!38438 (choose!471 lt!37578 lt!37573 lt!37579 lt!37575))))

(declare-fun e!53628 () Bool)

(assert (=> d!20597 e!53628))

(declare-fun res!42662 () Bool)

(assert (=> d!20597 (=> (not res!42662) (not e!53628))))

(assert (=> d!20597 (= res!42662 (not (contains!745 lt!37578 lt!37575)))))

(assert (=> d!20597 (= (addStillNotContains!29 lt!37578 lt!37573 lt!37579 lt!37575) lt!38438)))

(declare-fun b!82219 () Bool)

(assert (=> b!82219 (= e!53628 (not (= lt!37573 lt!37575)))))

(assert (= (and d!20597 res!42662) b!82219))

(assert (=> d!20597 m!82219))

(assert (=> d!20597 m!82219))

(assert (=> d!20597 m!82221))

(declare-fun m!84943 () Bool)

(assert (=> d!20597 m!84943))

(declare-fun m!84945 () Bool)

(assert (=> d!20597 m!84945))

(assert (=> b!80655 d!20597))

(declare-fun d!20599 () Bool)

(declare-fun e!53629 () Bool)

(assert (=> d!20599 e!53629))

(declare-fun res!42664 () Bool)

(assert (=> d!20599 (=> (not res!42664) (not e!53629))))

(declare-fun lt!38440 () ListLongMap!1451)

(assert (=> d!20599 (= res!42664 (contains!745 lt!38440 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!38442 () List!1511)

(assert (=> d!20599 (= lt!38440 (ListLongMap!1452 lt!38442))))

(declare-fun lt!38441 () Unit!2341)

(declare-fun lt!38439 () Unit!2341)

(assert (=> d!20599 (= lt!38441 lt!38439)))

(assert (=> d!20599 (= (getValueByKey!138 lt!38442 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20599 (= lt!38439 (lemmaContainsTupThenGetReturnValue!55 lt!38442 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20599 (= lt!38442 (insertStrictlySorted!58 (toList!741 call!7507) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20599 (= (+!106 call!7507 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!38440)))

(declare-fun b!82220 () Bool)

(declare-fun res!42663 () Bool)

(assert (=> b!82220 (=> (not res!42663) (not e!53629))))

(assert (=> b!82220 (= res!42663 (= (getValueByKey!138 (toList!741 lt!38440) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!82221 () Bool)

(assert (=> b!82221 (= e!53629 (contains!746 (toList!741 lt!38440) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1179 (select (arr!1902 (_values!2276 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!20599 res!42664) b!82220))

(assert (= (and b!82220 res!42663) b!82221))

(declare-fun m!84947 () Bool)

(assert (=> d!20599 m!84947))

(declare-fun m!84949 () Bool)

(assert (=> d!20599 m!84949))

(declare-fun m!84951 () Bool)

(assert (=> d!20599 m!84951))

(declare-fun m!84953 () Bool)

(assert (=> d!20599 m!84953))

(declare-fun m!84955 () Bool)

(assert (=> b!82220 m!84955))

(declare-fun m!84957 () Bool)

(assert (=> b!82221 m!84957))

(assert (=> b!80655 d!20599))

(declare-fun d!20601 () Bool)

(declare-fun e!53630 () Bool)

(assert (=> d!20601 e!53630))

(declare-fun res!42665 () Bool)

(assert (=> d!20601 (=> res!42665 e!53630)))

(declare-fun lt!38444 () Bool)

(assert (=> d!20601 (= res!42665 (not lt!38444))))

(declare-fun lt!38443 () Bool)

(assert (=> d!20601 (= lt!38444 lt!38443)))

(declare-fun lt!38446 () Unit!2341)

(declare-fun e!53631 () Unit!2341)

(assert (=> d!20601 (= lt!38446 e!53631)))

(declare-fun c!13069 () Bool)

(assert (=> d!20601 (= c!13069 lt!38443)))

(assert (=> d!20601 (= lt!38443 (containsKey!142 (toList!741 (+!106 lt!37578 (tuple2!2181 lt!37573 lt!37579))) lt!37575))))

(assert (=> d!20601 (= (contains!745 (+!106 lt!37578 (tuple2!2181 lt!37573 lt!37579)) lt!37575) lt!38444)))

(declare-fun b!82222 () Bool)

(declare-fun lt!38445 () Unit!2341)

(assert (=> b!82222 (= e!53631 lt!38445)))

(assert (=> b!82222 (= lt!38445 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 (+!106 lt!37578 (tuple2!2181 lt!37573 lt!37579))) lt!37575))))

(assert (=> b!82222 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37578 (tuple2!2181 lt!37573 lt!37579))) lt!37575))))

(declare-fun b!82223 () Bool)

(declare-fun Unit!2407 () Unit!2341)

(assert (=> b!82223 (= e!53631 Unit!2407)))

(declare-fun b!82224 () Bool)

(assert (=> b!82224 (= e!53630 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37578 (tuple2!2181 lt!37573 lt!37579))) lt!37575)))))

(assert (= (and d!20601 c!13069) b!82222))

(assert (= (and d!20601 (not c!13069)) b!82223))

(assert (= (and d!20601 (not res!42665)) b!82224))

(declare-fun m!84959 () Bool)

(assert (=> d!20601 m!84959))

(declare-fun m!84961 () Bool)

(assert (=> b!82222 m!84961))

(declare-fun m!84963 () Bool)

(assert (=> b!82222 m!84963))

(assert (=> b!82222 m!84963))

(declare-fun m!84965 () Bool)

(assert (=> b!82222 m!84965))

(assert (=> b!82224 m!84963))

(assert (=> b!82224 m!84963))

(assert (=> b!82224 m!84965))

(assert (=> b!80655 d!20601))

(declare-fun lt!38447 () Bool)

(declare-fun d!20603 () Bool)

(assert (=> d!20603 (= lt!38447 (select (content!85 (toList!741 lt!37873)) (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun e!53633 () Bool)

(assert (=> d!20603 (= lt!38447 e!53633)))

(declare-fun res!42666 () Bool)

(assert (=> d!20603 (=> (not res!42666) (not e!53633))))

(assert (=> d!20603 (= res!42666 ((_ is Cons!1507) (toList!741 lt!37873)))))

(assert (=> d!20603 (= (contains!746 (toList!741 lt!37873) (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38447)))

(declare-fun b!82225 () Bool)

(declare-fun e!53632 () Bool)

(assert (=> b!82225 (= e!53633 e!53632)))

(declare-fun res!42667 () Bool)

(assert (=> b!82225 (=> res!42667 e!53632)))

(assert (=> b!82225 (= res!42667 (= (h!2096 (toList!741 lt!37873)) (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82226 () Bool)

(assert (=> b!82226 (= e!53632 (contains!746 (t!5178 (toList!741 lt!37873)) (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (= (and d!20603 res!42666) b!82225))

(assert (= (and b!82225 (not res!42667)) b!82226))

(declare-fun m!84967 () Bool)

(assert (=> d!20603 m!84967))

(declare-fun m!84969 () Bool)

(assert (=> d!20603 m!84969))

(declare-fun m!84971 () Bool)

(assert (=> b!82226 m!84971))

(assert (=> b!81030 d!20603))

(assert (=> d!19787 d!19785))

(assert (=> d!19787 d!19781))

(declare-fun d!20605 () Bool)

(assert (=> d!20605 (not (contains!745 (+!106 lt!37538 (tuple2!2181 lt!37533 lt!37539)) lt!37535))))

(assert (=> d!20605 true))

(declare-fun _$36!307 () Unit!2341)

(assert (=> d!20605 (= (choose!471 lt!37538 lt!37533 lt!37539 lt!37535) _$36!307)))

(declare-fun bs!3482 () Bool)

(assert (= bs!3482 d!20605))

(assert (=> bs!3482 m!82085))

(assert (=> bs!3482 m!82085))

(assert (=> bs!3482 m!82087))

(assert (=> d!19787 d!20605))

(declare-fun d!20607 () Bool)

(declare-fun e!53634 () Bool)

(assert (=> d!20607 e!53634))

(declare-fun res!42668 () Bool)

(assert (=> d!20607 (=> res!42668 e!53634)))

(declare-fun lt!38449 () Bool)

(assert (=> d!20607 (= res!42668 (not lt!38449))))

(declare-fun lt!38448 () Bool)

(assert (=> d!20607 (= lt!38449 lt!38448)))

(declare-fun lt!38451 () Unit!2341)

(declare-fun e!53635 () Unit!2341)

(assert (=> d!20607 (= lt!38451 e!53635)))

(declare-fun c!13070 () Bool)

(assert (=> d!20607 (= c!13070 lt!38448)))

(assert (=> d!20607 (= lt!38448 (containsKey!142 (toList!741 lt!37538) lt!37535))))

(assert (=> d!20607 (= (contains!745 lt!37538 lt!37535) lt!38449)))

(declare-fun b!82228 () Bool)

(declare-fun lt!38450 () Unit!2341)

(assert (=> b!82228 (= e!53635 lt!38450)))

(assert (=> b!82228 (= lt!38450 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37538) lt!37535))))

(assert (=> b!82228 (isDefined!91 (getValueByKey!138 (toList!741 lt!37538) lt!37535))))

(declare-fun b!82229 () Bool)

(declare-fun Unit!2408 () Unit!2341)

(assert (=> b!82229 (= e!53635 Unit!2408)))

(declare-fun b!82230 () Bool)

(assert (=> b!82230 (= e!53634 (isDefined!91 (getValueByKey!138 (toList!741 lt!37538) lt!37535)))))

(assert (= (and d!20607 c!13070) b!82228))

(assert (= (and d!20607 (not c!13070)) b!82229))

(assert (= (and d!20607 (not res!42668)) b!82230))

(declare-fun m!84973 () Bool)

(assert (=> d!20607 m!84973))

(declare-fun m!84975 () Bool)

(assert (=> b!82228 m!84975))

(declare-fun m!84977 () Bool)

(assert (=> b!82228 m!84977))

(assert (=> b!82228 m!84977))

(declare-fun m!84979 () Bool)

(assert (=> b!82228 m!84979))

(assert (=> b!82230 m!84977))

(assert (=> b!82230 m!84977))

(assert (=> b!82230 m!84979))

(assert (=> d!19787 d!20607))

(declare-fun d!20609 () Bool)

(assert (=> d!20609 (= (+!106 (getCurrentListMap!435 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (getCurrentListMap!435 (_keys!3957 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(assert (=> d!20609 true))

(declare-fun _$5!86 () Unit!2341)

(assert (=> d!20609 (= (choose!474 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3100 lt!37427) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282 (defaultEntry!2293 newMap!16)) _$5!86)))

(declare-fun bs!3483 () Bool)

(assert (= bs!3483 d!20609))

(assert (=> bs!3483 m!81965))

(assert (=> bs!3483 m!81965))

(assert (=> bs!3483 m!82547))

(assert (=> bs!3483 m!81971))

(assert (=> bs!3483 m!82843))

(assert (=> d!19833 d!20609))

(assert (=> d!19833 d!19953))

(assert (=> b!80864 d!20079))

(declare-fun d!20611 () Bool)

(assert (=> d!20611 (isDefined!91 (getValueByKey!138 (toList!741 call!7477) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))

(declare-fun lt!38452 () Unit!2341)

(assert (=> d!20611 (= lt!38452 (choose!477 (toList!741 call!7477) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))

(declare-fun e!53636 () Bool)

(assert (=> d!20611 e!53636))

(declare-fun res!42669 () Bool)

(assert (=> d!20611 (=> (not res!42669) (not e!53636))))

(assert (=> d!20611 (= res!42669 (isStrictlySorted!296 (toList!741 call!7477)))))

(assert (=> d!20611 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 call!7477) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))) lt!38452)))

(declare-fun b!82231 () Bool)

(assert (=> b!82231 (= e!53636 (containsKey!142 (toList!741 call!7477) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))

(assert (= (and d!20611 res!42669) b!82231))

(assert (=> d!20611 m!81977))

(assert (=> d!20611 m!82831))

(assert (=> d!20611 m!82831))

(assert (=> d!20611 m!82833))

(assert (=> d!20611 m!81977))

(declare-fun m!84981 () Bool)

(assert (=> d!20611 m!84981))

(declare-fun m!84983 () Bool)

(assert (=> d!20611 m!84983))

(assert (=> b!82231 m!81977))

(assert (=> b!82231 m!82827))

(assert (=> b!81016 d!20611))

(declare-fun d!20613 () Bool)

(assert (=> d!20613 (= (isDefined!91 (getValueByKey!138 (toList!741 call!7477) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427)))) (not (isEmpty!331 (getValueByKey!138 (toList!741 call!7477) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))))

(declare-fun bs!3484 () Bool)

(assert (= bs!3484 d!20613))

(assert (=> bs!3484 m!82831))

(declare-fun m!84985 () Bool)

(assert (=> bs!3484 m!84985))

(assert (=> b!81016 d!20613))

(declare-fun d!20615 () Bool)

(declare-fun c!13071 () Bool)

(assert (=> d!20615 (= c!13071 (and ((_ is Cons!1507) (toList!741 call!7477)) (= (_1!1101 (h!2096 (toList!741 call!7477))) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427)))))))

(declare-fun e!53637 () Option!144)

(assert (=> d!20615 (= (getValueByKey!138 (toList!741 call!7477) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))) e!53637)))

(declare-fun b!82233 () Bool)

(declare-fun e!53638 () Option!144)

(assert (=> b!82233 (= e!53637 e!53638)))

(declare-fun c!13072 () Bool)

(assert (=> b!82233 (= c!13072 (and ((_ is Cons!1507) (toList!741 call!7477)) (not (= (_1!1101 (h!2096 (toList!741 call!7477))) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))))

(declare-fun b!82234 () Bool)

(assert (=> b!82234 (= e!53638 (getValueByKey!138 (t!5178 (toList!741 call!7477)) (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!37427))))))

(declare-fun b!82235 () Bool)

(assert (=> b!82235 (= e!53638 None!142)))

(declare-fun b!82232 () Bool)

(assert (=> b!82232 (= e!53637 (Some!143 (_2!1101 (h!2096 (toList!741 call!7477)))))))

(assert (= (and d!20615 c!13071) b!82232))

(assert (= (and d!20615 (not c!13071)) b!82233))

(assert (= (and b!82233 c!13072) b!82234))

(assert (= (and b!82233 (not c!13072)) b!82235))

(assert (=> b!82234 m!81977))

(declare-fun m!84987 () Bool)

(assert (=> b!82234 m!84987))

(assert (=> b!81016 d!20615))

(declare-fun d!20617 () Bool)

(declare-fun lt!38453 () Bool)

(assert (=> d!20617 (= lt!38453 (select (content!85 (toList!741 lt!37895)) (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun e!53640 () Bool)

(assert (=> d!20617 (= lt!38453 e!53640)))

(declare-fun res!42670 () Bool)

(assert (=> d!20617 (=> (not res!42670) (not e!53640))))

(assert (=> d!20617 (= res!42670 ((_ is Cons!1507) (toList!741 lt!37895)))))

(assert (=> d!20617 (= (contains!746 (toList!741 lt!37895) (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!38453)))

(declare-fun b!82236 () Bool)

(declare-fun e!53639 () Bool)

(assert (=> b!82236 (= e!53640 e!53639)))

(declare-fun res!42671 () Bool)

(assert (=> b!82236 (=> res!42671 e!53639)))

(assert (=> b!82236 (= res!42671 (= (h!2096 (toList!741 lt!37895)) (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!82237 () Bool)

(assert (=> b!82237 (= e!53639 (contains!746 (t!5178 (toList!741 lt!37895)) (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!20617 res!42670) b!82236))

(assert (= (and b!82236 (not res!42671)) b!82237))

(declare-fun m!84989 () Bool)

(assert (=> d!20617 m!84989))

(declare-fun m!84991 () Bool)

(assert (=> d!20617 m!84991))

(declare-fun m!84993 () Bool)

(assert (=> b!82237 m!84993))

(assert (=> b!81051 d!20617))

(declare-fun d!20619 () Bool)

(declare-fun res!42672 () Bool)

(declare-fun e!53641 () Bool)

(assert (=> d!20619 (=> res!42672 e!53641)))

(assert (=> d!20619 (= res!42672 (and ((_ is Cons!1507) lt!37927) (= (_1!1101 (h!2096 lt!37927)) (_1!1101 lt!37283))))))

(assert (=> d!20619 (= (containsKey!142 lt!37927 (_1!1101 lt!37283)) e!53641)))

(declare-fun b!82238 () Bool)

(declare-fun e!53642 () Bool)

(assert (=> b!82238 (= e!53641 e!53642)))

(declare-fun res!42673 () Bool)

(assert (=> b!82238 (=> (not res!42673) (not e!53642))))

(assert (=> b!82238 (= res!42673 (and (or (not ((_ is Cons!1507) lt!37927)) (bvsle (_1!1101 (h!2096 lt!37927)) (_1!1101 lt!37283))) ((_ is Cons!1507) lt!37927) (bvslt (_1!1101 (h!2096 lt!37927)) (_1!1101 lt!37283))))))

(declare-fun b!82239 () Bool)

(assert (=> b!82239 (= e!53642 (containsKey!142 (t!5178 lt!37927) (_1!1101 lt!37283)))))

(assert (= (and d!20619 (not res!42672)) b!82238))

(assert (= (and b!82238 res!42673) b!82239))

(declare-fun m!84995 () Bool)

(assert (=> b!82239 m!84995))

(assert (=> b!81102 d!20619))

(assert (=> b!81059 d!19761))

(declare-fun d!20621 () Bool)

(assert (=> d!20621 (= (isEmpty!330 (toList!741 lt!37534)) ((_ is Nil!1508) (toList!741 lt!37534)))))

(assert (=> d!19721 d!20621))

(assert (=> b!81024 d!20353))

(assert (=> b!81024 d!19773))

(declare-fun d!20623 () Bool)

(declare-fun e!53643 () Bool)

(assert (=> d!20623 e!53643))

(declare-fun res!42681 () Bool)

(assert (=> d!20623 (=> (not res!42681) (not e!53643))))

(assert (=> d!20623 (= res!42681 (or (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))))

(declare-fun lt!38464 () ListLongMap!1451)

(declare-fun lt!38455 () ListLongMap!1451)

(assert (=> d!20623 (= lt!38464 lt!38455)))

(declare-fun lt!38467 () Unit!2341)

(declare-fun e!53650 () Unit!2341)

(assert (=> d!20623 (= lt!38467 e!53650)))

(declare-fun c!13077 () Bool)

(declare-fun e!53649 () Bool)

(assert (=> d!20623 (= c!13077 e!53649)))

(declare-fun res!42674 () Bool)

(assert (=> d!20623 (=> (not res!42674) (not e!53649))))

(assert (=> d!20623 (= res!42674 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun e!53654 () ListLongMap!1451)

(assert (=> d!20623 (= lt!38455 e!53654)))

(declare-fun c!13074 () Bool)

(assert (=> d!20623 (= c!13074 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20623 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20623 (= (getCurrentListMap!435 (_keys!3957 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38464)))

(declare-fun b!82240 () Bool)

(declare-fun Unit!2409 () Unit!2341)

(assert (=> b!82240 (= e!53650 Unit!2409)))

(declare-fun b!82241 () Bool)

(declare-fun lt!38454 () Unit!2341)

(assert (=> b!82241 (= e!53650 lt!38454)))

(declare-fun lt!38463 () ListLongMap!1451)

(assert (=> b!82241 (= lt!38463 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38469 () (_ BitVec 64))

(assert (=> b!82241 (= lt!38469 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38456 () (_ BitVec 64))

(assert (=> b!82241 (= lt!38456 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38458 () Unit!2341)

(assert (=> b!82241 (= lt!38458 (addStillContains!56 lt!38463 lt!38469 (zeroValue!2189 newMap!16) lt!38456))))

(assert (=> b!82241 (contains!745 (+!106 lt!38463 (tuple2!2181 lt!38469 (zeroValue!2189 newMap!16))) lt!38456)))

(declare-fun lt!38474 () Unit!2341)

(assert (=> b!82241 (= lt!38474 lt!38458)))

(declare-fun lt!38475 () ListLongMap!1451)

(assert (=> b!82241 (= lt!38475 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38471 () (_ BitVec 64))

(assert (=> b!82241 (= lt!38471 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38457 () (_ BitVec 64))

(assert (=> b!82241 (= lt!38457 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38465 () Unit!2341)

(assert (=> b!82241 (= lt!38465 (addApplyDifferent!56 lt!38475 lt!38471 (minValue!2189 newMap!16) lt!38457))))

(assert (=> b!82241 (= (apply!80 (+!106 lt!38475 (tuple2!2181 lt!38471 (minValue!2189 newMap!16))) lt!38457) (apply!80 lt!38475 lt!38457))))

(declare-fun lt!38461 () Unit!2341)

(assert (=> b!82241 (= lt!38461 lt!38465)))

(declare-fun lt!38472 () ListLongMap!1451)

(assert (=> b!82241 (= lt!38472 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38459 () (_ BitVec 64))

(assert (=> b!82241 (= lt!38459 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38462 () (_ BitVec 64))

(assert (=> b!82241 (= lt!38462 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38460 () Unit!2341)

(assert (=> b!82241 (= lt!38460 (addApplyDifferent!56 lt!38472 lt!38459 (zeroValue!2189 newMap!16) lt!38462))))

(assert (=> b!82241 (= (apply!80 (+!106 lt!38472 (tuple2!2181 lt!38459 (zeroValue!2189 newMap!16))) lt!38462) (apply!80 lt!38472 lt!38462))))

(declare-fun lt!38473 () Unit!2341)

(assert (=> b!82241 (= lt!38473 lt!38460)))

(declare-fun lt!38470 () ListLongMap!1451)

(assert (=> b!82241 (= lt!38470 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38468 () (_ BitVec 64))

(assert (=> b!82241 (= lt!38468 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38466 () (_ BitVec 64))

(assert (=> b!82241 (= lt!38466 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!82241 (= lt!38454 (addApplyDifferent!56 lt!38470 lt!38468 (minValue!2189 newMap!16) lt!38466))))

(assert (=> b!82241 (= (apply!80 (+!106 lt!38470 (tuple2!2181 lt!38468 (minValue!2189 newMap!16))) lt!38466) (apply!80 lt!38470 lt!38466))))

(declare-fun b!82242 () Bool)

(declare-fun res!42677 () Bool)

(assert (=> b!82242 (=> (not res!42677) (not e!53643))))

(declare-fun e!53644 () Bool)

(assert (=> b!82242 (= res!42677 e!53644)))

(declare-fun res!42682 () Bool)

(assert (=> b!82242 (=> res!42682 e!53644)))

(declare-fun e!53651 () Bool)

(assert (=> b!82242 (= res!42682 (not e!53651))))

(declare-fun res!42680 () Bool)

(assert (=> b!82242 (=> (not res!42680) (not e!53651))))

(assert (=> b!82242 (= res!42680 (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!82243 () Bool)

(declare-fun e!53653 () Bool)

(assert (=> b!82243 (= e!53653 (= (apply!80 lt!38464 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!82244 () Bool)

(declare-fun e!53655 () Bool)

(assert (=> b!82244 (= e!53644 e!53655)))

(declare-fun res!42676 () Bool)

(assert (=> b!82244 (=> (not res!42676) (not e!53655))))

(assert (=> b!82244 (= res!42676 (contains!745 lt!38464 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82244 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun bm!7689 () Bool)

(declare-fun call!7697 () ListLongMap!1451)

(declare-fun call!7698 () ListLongMap!1451)

(assert (=> bm!7689 (= call!7697 call!7698)))

(declare-fun b!82245 () Bool)

(declare-fun e!53648 () Bool)

(assert (=> b!82245 (= e!53648 e!53653)))

(declare-fun res!42678 () Bool)

(declare-fun call!7694 () Bool)

(assert (=> b!82245 (= res!42678 call!7694)))

(assert (=> b!82245 (=> (not res!42678) (not e!53653))))

(declare-fun b!82246 () Bool)

(assert (=> b!82246 (= e!53651 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82247 () Bool)

(assert (=> b!82247 (= e!53648 (not call!7694))))

(declare-fun b!82248 () Bool)

(assert (=> b!82248 (= e!53649 (validKeyInArray!0 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82249 () Bool)

(declare-fun e!53652 () Bool)

(declare-fun call!7696 () Bool)

(assert (=> b!82249 (= e!53652 (not call!7696))))

(declare-fun bm!7690 () Bool)

(declare-fun call!7695 () ListLongMap!1451)

(assert (=> bm!7690 (= call!7695 call!7697)))

(declare-fun b!82250 () Bool)

(declare-fun e!53646 () ListLongMap!1451)

(declare-fun call!7693 () ListLongMap!1451)

(assert (=> b!82250 (= e!53646 call!7693)))

(declare-fun bm!7691 () Bool)

(assert (=> bm!7691 (= call!7696 (contains!745 lt!38464 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82251 () Bool)

(assert (=> b!82251 (= e!53643 e!53648)))

(declare-fun c!13073 () Bool)

(assert (=> b!82251 (= c!13073 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7692 () Bool)

(assert (=> bm!7692 (= call!7698 (getCurrentListMapNoExtraKeys!71 (_keys!3957 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bm!7693 () Bool)

(declare-fun call!7692 () ListLongMap!1451)

(assert (=> bm!7693 (= call!7693 call!7692)))

(declare-fun b!82252 () Bool)

(declare-fun res!42675 () Bool)

(assert (=> b!82252 (=> (not res!42675) (not e!53643))))

(assert (=> b!82252 (= res!42675 e!53652)))

(declare-fun c!13076 () Bool)

(assert (=> b!82252 (= c!13076 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!82253 () Bool)

(assert (=> b!82253 (= e!53654 (+!106 call!7692 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!82254 () Bool)

(assert (=> b!82254 (= e!53646 call!7695)))

(declare-fun bm!7694 () Bool)

(declare-fun c!13075 () Bool)

(assert (=> bm!7694 (= call!7692 (+!106 (ite c!13074 call!7698 (ite c!13075 call!7697 call!7695)) (ite (or c!13074 c!13075) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!82255 () Bool)

(assert (=> b!82255 (= e!53655 (= (apply!80 lt!38464 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1179 (select (arr!1902 (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82255 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))))))))

(assert (=> b!82255 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_keys!3957 newMap!16))))))

(declare-fun b!82256 () Bool)

(declare-fun c!13078 () Bool)

(assert (=> b!82256 (= c!13078 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53645 () ListLongMap!1451)

(assert (=> b!82256 (= e!53645 e!53646)))

(declare-fun b!82257 () Bool)

(declare-fun e!53647 () Bool)

(assert (=> b!82257 (= e!53647 (= (apply!80 lt!38464 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun b!82258 () Bool)

(assert (=> b!82258 (= e!53652 e!53647)))

(declare-fun res!42679 () Bool)

(assert (=> b!82258 (= res!42679 call!7696)))

(assert (=> b!82258 (=> (not res!42679) (not e!53647))))

(declare-fun b!82259 () Bool)

(assert (=> b!82259 (= e!53654 e!53645)))

(assert (=> b!82259 (= c!13075 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7695 () Bool)

(assert (=> bm!7695 (= call!7694 (contains!745 lt!38464 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82260 () Bool)

(assert (=> b!82260 (= e!53645 call!7693)))

(assert (= (and d!20623 c!13074) b!82253))

(assert (= (and d!20623 (not c!13074)) b!82259))

(assert (= (and b!82259 c!13075) b!82260))

(assert (= (and b!82259 (not c!13075)) b!82256))

(assert (= (and b!82256 c!13078) b!82250))

(assert (= (and b!82256 (not c!13078)) b!82254))

(assert (= (or b!82250 b!82254) bm!7690))

(assert (= (or b!82260 bm!7690) bm!7689))

(assert (= (or b!82260 b!82250) bm!7693))

(assert (= (or b!82253 bm!7689) bm!7692))

(assert (= (or b!82253 bm!7693) bm!7694))

(assert (= (and d!20623 res!42674) b!82248))

(assert (= (and d!20623 c!13077) b!82241))

(assert (= (and d!20623 (not c!13077)) b!82240))

(assert (= (and d!20623 res!42681) b!82242))

(assert (= (and b!82242 res!42680) b!82246))

(assert (= (and b!82242 (not res!42682)) b!82244))

(assert (= (and b!82244 res!42676) b!82255))

(assert (= (and b!82242 res!42677) b!82252))

(assert (= (and b!82252 c!13076) b!82258))

(assert (= (and b!82252 (not c!13076)) b!82249))

(assert (= (and b!82258 res!42679) b!82257))

(assert (= (or b!82258 b!82249) bm!7691))

(assert (= (and b!82252 res!42675) b!82251))

(assert (= (and b!82251 c!13073) b!82245))

(assert (= (and b!82251 (not c!13073)) b!82247))

(assert (= (and b!82245 res!42678) b!82243))

(assert (= (or b!82245 b!82247) bm!7695))

(declare-fun b_lambda!3653 () Bool)

(assert (=> (not b_lambda!3653) (not b!82255)))

(assert (=> b!82255 t!5185))

(declare-fun b_and!5011 () Bool)

(assert (= b_and!5007 (and (=> t!5185 result!2853) b_and!5011)))

(assert (=> b!82255 t!5187))

(declare-fun b_and!5013 () Bool)

(assert (= b_and!5009 (and (=> t!5187 result!2855) b_and!5013)))

(assert (=> b!82255 m!82265))

(declare-fun m!84997 () Bool)

(assert (=> b!82255 m!84997))

(assert (=> b!82255 m!82265))

(declare-fun m!84999 () Bool)

(assert (=> b!82255 m!84999))

(assert (=> b!82255 m!82271))

(assert (=> b!82255 m!84997))

(assert (=> b!82255 m!82271))

(declare-fun m!85001 () Bool)

(assert (=> b!82255 m!85001))

(declare-fun m!85003 () Bool)

(assert (=> bm!7691 m!85003))

(declare-fun m!85005 () Bool)

(assert (=> bm!7694 m!85005))

(assert (=> b!82241 m!82265))

(declare-fun m!85007 () Bool)

(assert (=> b!82241 m!85007))

(declare-fun m!85009 () Bool)

(assert (=> b!82241 m!85009))

(declare-fun m!85011 () Bool)

(assert (=> b!82241 m!85011))

(declare-fun m!85013 () Bool)

(assert (=> b!82241 m!85013))

(declare-fun m!85015 () Bool)

(assert (=> b!82241 m!85015))

(declare-fun m!85017 () Bool)

(assert (=> b!82241 m!85017))

(declare-fun m!85019 () Bool)

(assert (=> b!82241 m!85019))

(declare-fun m!85021 () Bool)

(assert (=> b!82241 m!85021))

(declare-fun m!85023 () Bool)

(assert (=> b!82241 m!85023))

(assert (=> b!82241 m!85009))

(assert (=> b!82241 m!85013))

(declare-fun m!85025 () Bool)

(assert (=> b!82241 m!85025))

(declare-fun m!85027 () Bool)

(assert (=> b!82241 m!85027))

(declare-fun m!85029 () Bool)

(assert (=> b!82241 m!85029))

(declare-fun m!85031 () Bool)

(assert (=> b!82241 m!85031))

(assert (=> b!82241 m!85031))

(declare-fun m!85033 () Bool)

(assert (=> b!82241 m!85033))

(assert (=> b!82241 m!85021))

(declare-fun m!85035 () Bool)

(assert (=> b!82241 m!85035))

(declare-fun m!85037 () Bool)

(assert (=> b!82241 m!85037))

(declare-fun m!85039 () Bool)

(assert (=> b!82243 m!85039))

(assert (=> b!82248 m!82265))

(assert (=> b!82248 m!82265))

(assert (=> b!82248 m!82313))

(declare-fun m!85041 () Bool)

(assert (=> bm!7695 m!85041))

(assert (=> bm!7692 m!85037))

(declare-fun m!85043 () Bool)

(assert (=> b!82253 m!85043))

(assert (=> b!82246 m!82265))

(assert (=> b!82246 m!82265))

(assert (=> b!82246 m!82313))

(assert (=> b!82244 m!82265))

(assert (=> b!82244 m!82265))

(declare-fun m!85045 () Bool)

(assert (=> b!82244 m!85045))

(assert (=> d!20623 m!82321))

(declare-fun m!85047 () Bool)

(assert (=> b!82257 m!85047))

(assert (=> b!81024 d!20623))

(assert (=> d!19941 d!19767))

(declare-fun d!20625 () Bool)

(declare-fun e!53658 () Bool)

(assert (=> d!20625 e!53658))

(declare-fun res!42688 () Bool)

(assert (=> d!20625 (=> (not res!42688) (not e!53658))))

(declare-fun lt!38478 () SeekEntryResult!241)

(assert (=> d!20625 (= res!42688 ((_ is Found!241) lt!38478))))

(assert (=> d!20625 (= lt!38478 (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (=> d!20625 true))

(declare-fun _$33!66 () Unit!2341)

(assert (=> d!20625 (= (choose!480 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)) _$33!66)))

(declare-fun b!82265 () Bool)

(declare-fun res!42687 () Bool)

(assert (=> b!82265 (=> (not res!42687) (not e!53658))))

(assert (=> b!82265 (= res!42687 (inRange!0 (index!3100 lt!38478) (mask!6299 newMap!16)))))

(declare-fun b!82266 () Bool)

(assert (=> b!82266 (= e!53658 (= (select (arr!1901 (_keys!3957 newMap!16)) (index!3100 lt!38478)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!20625 res!42688) b!82265))

(assert (= (and b!82265 res!42687) b!82266))

(assert (=> d!20625 m!81811))

(assert (=> d!20625 m!81957))

(declare-fun m!85049 () Bool)

(assert (=> b!82265 m!85049))

(declare-fun m!85051 () Bool)

(assert (=> b!82266 m!85051))

(assert (=> d!19941 d!20625))

(assert (=> d!19941 d!19953))

(declare-fun d!20627 () Bool)

(declare-fun c!13079 () Bool)

(assert (=> d!20627 (= c!13079 ((_ is Nil!1508) (toList!741 lt!37516)))))

(declare-fun e!53659 () (InoxSet tuple2!2180))

(assert (=> d!20627 (= (content!85 (toList!741 lt!37516)) e!53659)))

(declare-fun b!82267 () Bool)

(assert (=> b!82267 (= e!53659 ((as const (Array tuple2!2180 Bool)) false))))

(declare-fun b!82268 () Bool)

(assert (=> b!82268 (= e!53659 ((_ map or) (store ((as const (Array tuple2!2180 Bool)) false) (h!2096 (toList!741 lt!37516)) true) (content!85 (t!5178 (toList!741 lt!37516)))))))

(assert (= (and d!20627 c!13079) b!82267))

(assert (= (and d!20627 (not c!13079)) b!82268))

(declare-fun m!85053 () Bool)

(assert (=> b!82268 m!85053))

(declare-fun m!85055 () Bool)

(assert (=> b!82268 m!85055))

(assert (=> d!19703 d!20627))

(declare-fun d!20629 () Bool)

(assert (=> d!20629 (isDefined!91 (getValueByKey!138 (toList!741 lt!37534) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38479 () Unit!2341)

(assert (=> d!20629 (= lt!38479 (choose!477 (toList!741 lt!37534) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53660 () Bool)

(assert (=> d!20629 e!53660))

(declare-fun res!42689 () Bool)

(assert (=> d!20629 (=> (not res!42689) (not e!53660))))

(assert (=> d!20629 (= res!42689 (isStrictlySorted!296 (toList!741 lt!37534)))))

(assert (=> d!20629 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37534) #b0000000000000000000000000000000000000000000000000000000000000000) lt!38479)))

(declare-fun b!82269 () Bool)

(assert (=> b!82269 (= e!53660 (containsKey!142 (toList!741 lt!37534) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20629 res!42689) b!82269))

(assert (=> d!20629 m!82457))

(assert (=> d!20629 m!82457))

(assert (=> d!20629 m!82459))

(declare-fun m!85057 () Bool)

(assert (=> d!20629 m!85057))

(assert (=> d!20629 m!84507))

(assert (=> b!82269 m!82453))

(assert (=> b!80809 d!20629))

(declare-fun d!20631 () Bool)

(assert (=> d!20631 (= (isDefined!91 (getValueByKey!138 (toList!741 lt!37534) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!331 (getValueByKey!138 (toList!741 lt!37534) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3485 () Bool)

(assert (= bs!3485 d!20631))

(assert (=> bs!3485 m!82457))

(declare-fun m!85059 () Bool)

(assert (=> bs!3485 m!85059))

(assert (=> b!80809 d!20631))

(declare-fun d!20633 () Bool)

(declare-fun c!13080 () Bool)

(assert (=> d!20633 (= c!13080 (and ((_ is Cons!1507) (toList!741 lt!37534)) (= (_1!1101 (h!2096 (toList!741 lt!37534))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53661 () Option!144)

(assert (=> d!20633 (= (getValueByKey!138 (toList!741 lt!37534) #b0000000000000000000000000000000000000000000000000000000000000000) e!53661)))

(declare-fun b!82271 () Bool)

(declare-fun e!53662 () Option!144)

(assert (=> b!82271 (= e!53661 e!53662)))

(declare-fun c!13081 () Bool)

(assert (=> b!82271 (= c!13081 (and ((_ is Cons!1507) (toList!741 lt!37534)) (not (= (_1!1101 (h!2096 (toList!741 lt!37534))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!82272 () Bool)

(assert (=> b!82272 (= e!53662 (getValueByKey!138 (t!5178 (toList!741 lt!37534)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82273 () Bool)

(assert (=> b!82273 (= e!53662 None!142)))

(declare-fun b!82270 () Bool)

(assert (=> b!82270 (= e!53661 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37534)))))))

(assert (= (and d!20633 c!13080) b!82270))

(assert (= (and d!20633 (not c!13080)) b!82271))

(assert (= (and b!82271 c!13081) b!82272))

(assert (= (and b!82271 (not c!13081)) b!82273))

(declare-fun m!85061 () Bool)

(assert (=> b!82272 m!85061))

(assert (=> b!80809 d!20633))

(declare-fun c!13082 () Bool)

(declare-fun d!20635 () Bool)

(assert (=> d!20635 (= c!13082 (and ((_ is Cons!1507) (toList!741 lt!37798)) (= (_1!1101 (h!2096 (toList!741 lt!37798))) (_1!1101 (tuple2!2181 lt!37533 lt!37539)))))))

(declare-fun e!53663 () Option!144)

(assert (=> d!20635 (= (getValueByKey!138 (toList!741 lt!37798) (_1!1101 (tuple2!2181 lt!37533 lt!37539))) e!53663)))

(declare-fun b!82275 () Bool)

(declare-fun e!53664 () Option!144)

(assert (=> b!82275 (= e!53663 e!53664)))

(declare-fun c!13083 () Bool)

(assert (=> b!82275 (= c!13083 (and ((_ is Cons!1507) (toList!741 lt!37798)) (not (= (_1!1101 (h!2096 (toList!741 lt!37798))) (_1!1101 (tuple2!2181 lt!37533 lt!37539))))))))

(declare-fun b!82276 () Bool)

(assert (=> b!82276 (= e!53664 (getValueByKey!138 (t!5178 (toList!741 lt!37798)) (_1!1101 (tuple2!2181 lt!37533 lt!37539))))))

(declare-fun b!82277 () Bool)

(assert (=> b!82277 (= e!53664 None!142)))

(declare-fun b!82274 () Bool)

(assert (=> b!82274 (= e!53663 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37798)))))))

(assert (= (and d!20635 c!13082) b!82274))

(assert (= (and d!20635 (not c!13082)) b!82275))

(assert (= (and b!82275 c!13083) b!82276))

(assert (= (and b!82275 (not c!13083)) b!82277))

(declare-fun m!85063 () Bool)

(assert (=> b!82276 m!85063))

(assert (=> b!80953 d!20635))

(declare-fun d!20637 () Bool)

(assert (=> d!20637 (isDefined!91 (getValueByKey!138 (toList!741 e!52557) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun lt!38480 () Unit!2341)

(assert (=> d!20637 (= lt!38480 (choose!477 (toList!741 e!52557) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun e!53665 () Bool)

(assert (=> d!20637 e!53665))

(declare-fun res!42690 () Bool)

(assert (=> d!20637 (=> (not res!42690) (not e!53665))))

(assert (=> d!20637 (= res!42690 (isStrictlySorted!296 (toList!741 e!52557)))))

(assert (=> d!20637 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 e!52557) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) lt!38480)))

(declare-fun b!82278 () Bool)

(assert (=> b!82278 (= e!53665 (containsKey!142 (toList!741 e!52557) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!20637 res!42690) b!82278))

(assert (=> d!20637 m!81811))

(assert (=> d!20637 m!82249))

(assert (=> d!20637 m!82249))

(assert (=> d!20637 m!82251))

(assert (=> d!20637 m!81811))

(declare-fun m!85065 () Bool)

(assert (=> d!20637 m!85065))

(declare-fun m!85067 () Bool)

(assert (=> d!20637 m!85067))

(assert (=> b!82278 m!81811))

(assert (=> b!82278 m!82245))

(assert (=> b!80670 d!20637))

(declare-fun d!20639 () Bool)

(assert (=> d!20639 (= (isDefined!91 (getValueByKey!138 (toList!741 e!52557) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))) (not (isEmpty!331 (getValueByKey!138 (toList!741 e!52557) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun bs!3486 () Bool)

(assert (= bs!3486 d!20639))

(assert (=> bs!3486 m!82249))

(declare-fun m!85069 () Bool)

(assert (=> bs!3486 m!85069))

(assert (=> b!80670 d!20639))

(declare-fun c!13084 () Bool)

(declare-fun d!20641 () Bool)

(assert (=> d!20641 (= c!13084 (and ((_ is Cons!1507) (toList!741 e!52557)) (= (_1!1101 (h!2096 (toList!741 e!52557))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355))))))

(declare-fun e!53666 () Option!144)

(assert (=> d!20641 (= (getValueByKey!138 (toList!741 e!52557) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)) e!53666)))

(declare-fun b!82280 () Bool)

(declare-fun e!53667 () Option!144)

(assert (=> b!82280 (= e!53666 e!53667)))

(declare-fun c!13085 () Bool)

(assert (=> b!82280 (= c!13085 (and ((_ is Cons!1507) (toList!741 e!52557)) (not (= (_1!1101 (h!2096 (toList!741 e!52557))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun b!82281 () Bool)

(assert (=> b!82281 (= e!53667 (getValueByKey!138 (t!5178 (toList!741 e!52557)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!82282 () Bool)

(assert (=> b!82282 (= e!53667 None!142)))

(declare-fun b!82279 () Bool)

(assert (=> b!82279 (= e!53666 (Some!143 (_2!1101 (h!2096 (toList!741 e!52557)))))))

(assert (= (and d!20641 c!13084) b!82279))

(assert (= (and d!20641 (not c!13084)) b!82280))

(assert (= (and b!82280 c!13085) b!82281))

(assert (= (and b!82280 (not c!13085)) b!82282))

(assert (=> b!82281 m!81811))

(declare-fun m!85071 () Bool)

(assert (=> b!82281 m!85071))

(assert (=> b!80670 d!20641))

(declare-fun d!20643 () Bool)

(declare-fun res!42691 () Bool)

(declare-fun e!53668 () Bool)

(assert (=> d!20643 (=> res!42691 e!53668)))

(assert (=> d!20643 (= res!42691 (or ((_ is Nil!1508) lt!37927) ((_ is Nil!1508) (t!5178 lt!37927))))))

(assert (=> d!20643 (= (isStrictlySorted!296 lt!37927) e!53668)))

(declare-fun b!82283 () Bool)

(declare-fun e!53669 () Bool)

(assert (=> b!82283 (= e!53668 e!53669)))

(declare-fun res!42692 () Bool)

(assert (=> b!82283 (=> (not res!42692) (not e!53669))))

(assert (=> b!82283 (= res!42692 (bvslt (_1!1101 (h!2096 lt!37927)) (_1!1101 (h!2096 (t!5178 lt!37927)))))))

(declare-fun b!82284 () Bool)

(assert (=> b!82284 (= e!53669 (isStrictlySorted!296 (t!5178 lt!37927)))))

(assert (= (and d!20643 (not res!42691)) b!82283))

(assert (= (and b!82283 res!42692) b!82284))

(declare-fun m!85073 () Bool)

(assert (=> b!82284 m!85073))

(assert (=> d!19911 d!20643))

(assert (=> d!19911 d!20479))

(declare-fun d!20645 () Bool)

(declare-fun res!42693 () Bool)

(declare-fun e!53670 () Bool)

(assert (=> d!20645 (=> res!42693 e!53670)))

(assert (=> d!20645 (= res!42693 (and ((_ is Cons!1507) (toList!741 lt!37534)) (= (_1!1101 (h!2096 (toList!741 lt!37534))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20645 (= (containsKey!142 (toList!741 lt!37534) #b1000000000000000000000000000000000000000000000000000000000000000) e!53670)))

(declare-fun b!82285 () Bool)

(declare-fun e!53671 () Bool)

(assert (=> b!82285 (= e!53670 e!53671)))

(declare-fun res!42694 () Bool)

(assert (=> b!82285 (=> (not res!42694) (not e!53671))))

(assert (=> b!82285 (= res!42694 (and (or (not ((_ is Cons!1507) (toList!741 lt!37534))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37534))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1507) (toList!741 lt!37534)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37534))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82286 () Bool)

(assert (=> b!82286 (= e!53671 (containsKey!142 (t!5178 (toList!741 lt!37534)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20645 (not res!42693)) b!82285))

(assert (= (and b!82285 res!42694) b!82286))

(declare-fun m!85075 () Bool)

(assert (=> b!82286 m!85075))

(assert (=> d!19913 d!20645))

(declare-fun d!20647 () Bool)

(declare-fun e!53672 () Bool)

(assert (=> d!20647 e!53672))

(declare-fun res!42695 () Bool)

(assert (=> d!20647 (=> res!42695 e!53672)))

(declare-fun lt!38482 () Bool)

(assert (=> d!20647 (= res!42695 (not lt!38482))))

(declare-fun lt!38481 () Bool)

(assert (=> d!20647 (= lt!38482 lt!38481)))

(declare-fun lt!38484 () Unit!2341)

(declare-fun e!53673 () Unit!2341)

(assert (=> d!20647 (= lt!38484 e!53673)))

(declare-fun c!13086 () Bool)

(assert (=> d!20647 (= c!13086 lt!38481)))

(assert (=> d!20647 (= lt!38481 (containsKey!142 (toList!741 lt!37846) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20647 (= (contains!745 lt!37846 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38482)))

(declare-fun b!82287 () Bool)

(declare-fun lt!38483 () Unit!2341)

(assert (=> b!82287 (= e!53673 lt!38483)))

(assert (=> b!82287 (= lt!38483 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37846) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> b!82287 (isDefined!91 (getValueByKey!138 (toList!741 lt!37846) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!82288 () Bool)

(declare-fun Unit!2410 () Unit!2341)

(assert (=> b!82288 (= e!53673 Unit!2410)))

(declare-fun b!82289 () Bool)

(assert (=> b!82289 (= e!53672 (isDefined!91 (getValueByKey!138 (toList!741 lt!37846) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (= (and d!20647 c!13086) b!82287))

(assert (= (and d!20647 (not c!13086)) b!82288))

(assert (= (and d!20647 (not res!42695)) b!82289))

(declare-fun m!85077 () Bool)

(assert (=> d!20647 m!85077))

(declare-fun m!85079 () Bool)

(assert (=> b!82287 m!85079))

(assert (=> b!82287 m!82803))

(assert (=> b!82287 m!82803))

(declare-fun m!85081 () Bool)

(assert (=> b!82287 m!85081))

(assert (=> b!82289 m!82803))

(assert (=> b!82289 m!82803))

(assert (=> b!82289 m!85081))

(assert (=> d!19817 d!20647))

(declare-fun c!13087 () Bool)

(declare-fun d!20649 () Bool)

(assert (=> d!20649 (= c!13087 (and ((_ is Cons!1507) lt!37848) (= (_1!1101 (h!2096 lt!37848)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53674 () Option!144)

(assert (=> d!20649 (= (getValueByKey!138 lt!37848 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) e!53674)))

(declare-fun b!82291 () Bool)

(declare-fun e!53675 () Option!144)

(assert (=> b!82291 (= e!53674 e!53675)))

(declare-fun c!13088 () Bool)

(assert (=> b!82291 (= c!13088 (and ((_ is Cons!1507) lt!37848) (not (= (_1!1101 (h!2096 lt!37848)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!82292 () Bool)

(assert (=> b!82292 (= e!53675 (getValueByKey!138 (t!5178 lt!37848) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!82293 () Bool)

(assert (=> b!82293 (= e!53675 None!142)))

(declare-fun b!82290 () Bool)

(assert (=> b!82290 (= e!53674 (Some!143 (_2!1101 (h!2096 lt!37848))))))

(assert (= (and d!20649 c!13087) b!82290))

(assert (= (and d!20649 (not c!13087)) b!82291))

(assert (= (and b!82291 c!13088) b!82292))

(assert (= (and b!82291 (not c!13088)) b!82293))

(declare-fun m!85083 () Bool)

(assert (=> b!82292 m!85083))

(assert (=> d!19817 d!20649))

(declare-fun d!20651 () Bool)

(assert (=> d!20651 (= (getValueByKey!138 lt!37848 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun lt!38485 () Unit!2341)

(assert (=> d!20651 (= lt!38485 (choose!470 lt!37848 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun e!53676 () Bool)

(assert (=> d!20651 e!53676))

(declare-fun res!42696 () Bool)

(assert (=> d!20651 (=> (not res!42696) (not e!53676))))

(assert (=> d!20651 (= res!42696 (isStrictlySorted!296 lt!37848))))

(assert (=> d!20651 (= (lemmaContainsTupThenGetReturnValue!55 lt!37848 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38485)))

(declare-fun b!82294 () Bool)

(declare-fun res!42697 () Bool)

(assert (=> b!82294 (=> (not res!42697) (not e!53676))))

(assert (=> b!82294 (= res!42697 (containsKey!142 lt!37848 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!82295 () Bool)

(assert (=> b!82295 (= e!53676 (contains!746 lt!37848 (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (= (and d!20651 res!42696) b!82294))

(assert (= (and b!82294 res!42697) b!82295))

(assert (=> d!20651 m!82797))

(declare-fun m!85085 () Bool)

(assert (=> d!20651 m!85085))

(declare-fun m!85087 () Bool)

(assert (=> d!20651 m!85087))

(declare-fun m!85089 () Bool)

(assert (=> b!82294 m!85089))

(declare-fun m!85091 () Bool)

(assert (=> b!82295 m!85091))

(assert (=> d!19817 d!20651))

(declare-fun c!13089 () Bool)

(declare-fun b!82296 () Bool)

(assert (=> b!82296 (= c!13089 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (bvsgt (_1!1101 (h!2096 (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53677 () List!1511)

(declare-fun e!53678 () List!1511)

(assert (=> b!82296 (= e!53677 e!53678)))

(declare-fun b!82297 () Bool)

(declare-fun call!7699 () List!1511)

(assert (=> b!82297 (= e!53678 call!7699)))

(declare-fun b!82298 () Bool)

(declare-fun c!13091 () Bool)

(declare-fun e!53679 () List!1511)

(assert (=> b!82298 (= e!53679 (ite c!13091 (t!5178 (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (ite c!13089 (Cons!1507 (h!2096 (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (t!5178 (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))) Nil!1508)))))

(declare-fun d!20653 () Bool)

(declare-fun e!53681 () Bool)

(assert (=> d!20653 e!53681))

(declare-fun res!42699 () Bool)

(assert (=> d!20653 (=> (not res!42699) (not e!53681))))

(declare-fun lt!38486 () List!1511)

(assert (=> d!20653 (= res!42699 (isStrictlySorted!296 lt!38486))))

(declare-fun e!53680 () List!1511)

(assert (=> d!20653 (= lt!38486 e!53680)))

(declare-fun c!13090 () Bool)

(assert (=> d!20653 (= c!13090 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (bvslt (_1!1101 (h!2096 (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (=> d!20653 (isStrictlySorted!296 (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!20653 (= (insertStrictlySorted!58 (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38486)))

(declare-fun b!82299 () Bool)

(declare-fun call!7701 () List!1511)

(assert (=> b!82299 (= e!53680 call!7701)))

(declare-fun bm!7696 () Bool)

(declare-fun call!7700 () List!1511)

(assert (=> bm!7696 (= call!7700 call!7701)))

(declare-fun bm!7697 () Bool)

(assert (=> bm!7697 (= call!7699 call!7700)))

(declare-fun b!82300 () Bool)

(assert (=> b!82300 (= e!53681 (contains!746 lt!38486 (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!82301 () Bool)

(assert (=> b!82301 (= e!53680 e!53677)))

(assert (=> b!82301 (= c!13091 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!82302 () Bool)

(assert (=> b!82302 (= e!53678 call!7699)))

(declare-fun b!82303 () Bool)

(declare-fun res!42698 () Bool)

(assert (=> b!82303 (=> (not res!42698) (not e!53681))))

(assert (=> b!82303 (= res!42698 (containsKey!142 lt!38486 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun bm!7698 () Bool)

(assert (=> bm!7698 (= call!7701 ($colon$colon!70 e!53679 (ite c!13090 (h!2096 (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun c!13092 () Bool)

(assert (=> bm!7698 (= c!13092 c!13090)))

(declare-fun b!82304 () Bool)

(assert (=> b!82304 (= e!53679 (insertStrictlySorted!58 (t!5178 (toList!741 (+!106 lt!37277 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!82305 () Bool)

(assert (=> b!82305 (= e!53677 call!7700)))

(assert (= (and d!20653 c!13090) b!82299))

(assert (= (and d!20653 (not c!13090)) b!82301))

(assert (= (and b!82301 c!13091) b!82305))

(assert (= (and b!82301 (not c!13091)) b!82296))

(assert (= (and b!82296 c!13089) b!82302))

(assert (= (and b!82296 (not c!13089)) b!82297))

(assert (= (or b!82302 b!82297) bm!7697))

(assert (= (or b!82305 bm!7697) bm!7696))

(assert (= (or b!82299 bm!7696) bm!7698))

(assert (= (and bm!7698 c!13092) b!82304))

(assert (= (and bm!7698 (not c!13092)) b!82298))

(assert (= (and d!20653 res!42699) b!82303))

(assert (= (and b!82303 res!42698) b!82300))

(declare-fun m!85093 () Bool)

(assert (=> b!82300 m!85093))

(declare-fun m!85095 () Bool)

(assert (=> b!82303 m!85095))

(declare-fun m!85097 () Bool)

(assert (=> d!20653 m!85097))

(declare-fun m!85099 () Bool)

(assert (=> d!20653 m!85099))

(declare-fun m!85101 () Bool)

(assert (=> b!82304 m!85101))

(declare-fun m!85103 () Bool)

(assert (=> bm!7698 m!85103))

(assert (=> d!19817 d!20653))

(declare-fun d!20655 () Bool)

(declare-fun lt!38487 () Bool)

(assert (=> d!20655 (= lt!38487 (select (content!85 lt!37914) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(declare-fun e!53683 () Bool)

(assert (=> d!20655 (= lt!38487 e!53683)))

(declare-fun res!42700 () Bool)

(assert (=> d!20655 (=> (not res!42700) (not e!53683))))

(assert (=> d!20655 (= res!42700 ((_ is Cons!1507) lt!37914))))

(assert (=> d!20655 (= (contains!746 lt!37914 (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))) lt!38487)))

(declare-fun b!82306 () Bool)

(declare-fun e!53682 () Bool)

(assert (=> b!82306 (= e!53683 e!53682)))

(declare-fun res!42701 () Bool)

(assert (=> b!82306 (=> res!42701 e!53682)))

(assert (=> b!82306 (= res!42701 (= (h!2096 lt!37914) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(declare-fun b!82307 () Bool)

(assert (=> b!82307 (= e!53682 (contains!746 (t!5178 lt!37914) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(assert (= (and d!20655 res!42700) b!82306))

(assert (= (and b!82306 (not res!42701)) b!82307))

(declare-fun m!85105 () Bool)

(assert (=> d!20655 m!85105))

(declare-fun m!85107 () Bool)

(assert (=> d!20655 m!85107))

(declare-fun m!85109 () Bool)

(assert (=> b!82307 m!85109))

(assert (=> b!81077 d!20655))

(declare-fun d!20657 () Bool)

(declare-fun lt!38488 () (_ BitVec 32))

(assert (=> d!20657 (and (bvsge lt!38488 #b00000000000000000000000000000000) (bvsle lt!38488 (bvsub (size!2143 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000)))))

(declare-fun e!53684 () (_ BitVec 32))

(assert (=> d!20657 (= lt!38488 e!53684)))

(declare-fun c!13093 () Bool)

(assert (=> d!20657 (= c!13093 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37429)))))))

(assert (=> d!20657 (and (bvsle #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37429)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2143 (_keys!3957 (_2!1100 lt!37429))) (size!2143 (_keys!3957 (_2!1100 lt!37429)))))))

(assert (=> d!20657 (= (arrayCountValidKeys!0 (_keys!3957 (_2!1100 lt!37429)) #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37429)))) lt!38488)))

(declare-fun bm!7699 () Bool)

(declare-fun call!7702 () (_ BitVec 32))

(assert (=> bm!7699 (= call!7702 (arrayCountValidKeys!0 (_keys!3957 (_2!1100 lt!37429)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (_2!1100 lt!37429)))))))

(declare-fun b!82308 () Bool)

(declare-fun e!53685 () (_ BitVec 32))

(assert (=> b!82308 (= e!53685 call!7702)))

(declare-fun b!82309 () Bool)

(assert (=> b!82309 (= e!53684 #b00000000000000000000000000000000)))

(declare-fun b!82310 () Bool)

(assert (=> b!82310 (= e!53685 (bvadd #b00000000000000000000000000000001 call!7702))))

(declare-fun b!82311 () Bool)

(assert (=> b!82311 (= e!53684 e!53685)))

(declare-fun c!13094 () Bool)

(assert (=> b!82311 (= c!13094 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000)))))

(assert (= (and d!20657 c!13093) b!82309))

(assert (= (and d!20657 (not c!13093)) b!82311))

(assert (= (and b!82311 c!13094) b!82310))

(assert (= (and b!82311 (not c!13094)) b!82308))

(assert (= (or b!82310 b!82308) bm!7699))

(declare-fun m!85111 () Bool)

(assert (=> bm!7699 m!85111))

(assert (=> b!82311 m!83493))

(assert (=> b!82311 m!83493))

(assert (=> b!82311 m!83541))

(assert (=> b!81200 d!20657))

(declare-fun d!20659 () Bool)

(declare-fun lt!38489 () Bool)

(assert (=> d!20659 (= lt!38489 (select (content!85 (t!5178 (toList!741 lt!37516))) lt!37283))))

(declare-fun e!53687 () Bool)

(assert (=> d!20659 (= lt!38489 e!53687)))

(declare-fun res!42702 () Bool)

(assert (=> d!20659 (=> (not res!42702) (not e!53687))))

(assert (=> d!20659 (= res!42702 ((_ is Cons!1507) (t!5178 (toList!741 lt!37516))))))

(assert (=> d!20659 (= (contains!746 (t!5178 (toList!741 lt!37516)) lt!37283) lt!38489)))

(declare-fun b!82312 () Bool)

(declare-fun e!53686 () Bool)

(assert (=> b!82312 (= e!53687 e!53686)))

(declare-fun res!42703 () Bool)

(assert (=> b!82312 (=> res!42703 e!53686)))

(assert (=> b!82312 (= res!42703 (= (h!2096 (t!5178 (toList!741 lt!37516))) lt!37283))))

(declare-fun b!82313 () Bool)

(assert (=> b!82313 (= e!53686 (contains!746 (t!5178 (t!5178 (toList!741 lt!37516))) lt!37283))))

(assert (= (and d!20659 res!42702) b!82312))

(assert (= (and b!82312 (not res!42703)) b!82313))

(assert (=> d!20659 m!85055))

(declare-fun m!85113 () Bool)

(assert (=> d!20659 m!85113))

(declare-fun m!85115 () Bool)

(assert (=> b!82313 m!85115))

(assert (=> b!80669 d!20659))

(declare-fun d!20661 () Bool)

(declare-fun e!53688 () Bool)

(assert (=> d!20661 e!53688))

(declare-fun res!42704 () Bool)

(assert (=> d!20661 (=> res!42704 e!53688)))

(declare-fun lt!38491 () Bool)

(assert (=> d!20661 (= res!42704 (not lt!38491))))

(declare-fun lt!38490 () Bool)

(assert (=> d!20661 (= lt!38491 lt!38490)))

(declare-fun lt!38493 () Unit!2341)

(declare-fun e!53689 () Unit!2341)

(assert (=> d!20661 (= lt!38493 e!53689)))

(declare-fun c!13095 () Bool)

(assert (=> d!20661 (= c!13095 lt!38490)))

(assert (=> d!20661 (= lt!38490 (containsKey!142 (toList!741 lt!37873) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!20661 (= (contains!745 lt!37873 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) lt!38491)))

(declare-fun b!82314 () Bool)

(declare-fun lt!38492 () Unit!2341)

(assert (=> b!82314 (= e!53689 lt!38492)))

(assert (=> b!82314 (= lt!38492 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37873) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> b!82314 (isDefined!91 (getValueByKey!138 (toList!741 lt!37873) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82315 () Bool)

(declare-fun Unit!2411 () Unit!2341)

(assert (=> b!82315 (= e!53689 Unit!2411)))

(declare-fun b!82316 () Bool)

(assert (=> b!82316 (= e!53688 (isDefined!91 (getValueByKey!138 (toList!741 lt!37873) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(assert (= (and d!20661 c!13095) b!82314))

(assert (= (and d!20661 (not c!13095)) b!82315))

(assert (= (and d!20661 (not res!42704)) b!82316))

(declare-fun m!85117 () Bool)

(assert (=> d!20661 m!85117))

(declare-fun m!85119 () Bool)

(assert (=> b!82314 m!85119))

(assert (=> b!82314 m!82871))

(assert (=> b!82314 m!82871))

(declare-fun m!85121 () Bool)

(assert (=> b!82314 m!85121))

(assert (=> b!82316 m!82871))

(assert (=> b!82316 m!82871))

(assert (=> b!82316 m!85121))

(assert (=> d!19841 d!20661))

(declare-fun c!13096 () Bool)

(declare-fun d!20663 () Bool)

(assert (=> d!20663 (= c!13096 (and ((_ is Cons!1507) lt!37875) (= (_1!1101 (h!2096 lt!37875)) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun e!53690 () Option!144)

(assert (=> d!20663 (= (getValueByKey!138 lt!37875 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) e!53690)))

(declare-fun b!82318 () Bool)

(declare-fun e!53691 () Option!144)

(assert (=> b!82318 (= e!53690 e!53691)))

(declare-fun c!13097 () Bool)

(assert (=> b!82318 (= c!13097 (and ((_ is Cons!1507) lt!37875) (not (= (_1!1101 (h!2096 lt!37875)) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))))

(declare-fun b!82319 () Bool)

(assert (=> b!82319 (= e!53691 (getValueByKey!138 (t!5178 lt!37875) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82320 () Bool)

(assert (=> b!82320 (= e!53691 None!142)))

(declare-fun b!82317 () Bool)

(assert (=> b!82317 (= e!53690 (Some!143 (_2!1101 (h!2096 lt!37875))))))

(assert (= (and d!20663 c!13096) b!82317))

(assert (= (and d!20663 (not c!13096)) b!82318))

(assert (= (and b!82318 c!13097) b!82319))

(assert (= (and b!82318 (not c!13097)) b!82320))

(declare-fun m!85123 () Bool)

(assert (=> b!82319 m!85123))

(assert (=> d!19841 d!20663))

(declare-fun d!20665 () Bool)

(assert (=> d!20665 (= (getValueByKey!138 lt!37875 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) (Some!143 (_2!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun lt!38494 () Unit!2341)

(assert (=> d!20665 (= lt!38494 (choose!470 lt!37875 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_2!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53692 () Bool)

(assert (=> d!20665 e!53692))

(declare-fun res!42705 () Bool)

(assert (=> d!20665 (=> (not res!42705) (not e!53692))))

(assert (=> d!20665 (= res!42705 (isStrictlySorted!296 lt!37875))))

(assert (=> d!20665 (= (lemmaContainsTupThenGetReturnValue!55 lt!37875 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_2!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) lt!38494)))

(declare-fun b!82321 () Bool)

(declare-fun res!42706 () Bool)

(assert (=> b!82321 (=> (not res!42706) (not e!53692))))

(assert (=> b!82321 (= res!42706 (containsKey!142 lt!37875 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82322 () Bool)

(assert (=> b!82322 (= e!53692 (contains!746 lt!37875 (tuple2!2181 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_2!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(assert (= (and d!20665 res!42705) b!82321))

(assert (= (and b!82321 res!42706) b!82322))

(assert (=> d!20665 m!82865))

(declare-fun m!85125 () Bool)

(assert (=> d!20665 m!85125))

(declare-fun m!85127 () Bool)

(assert (=> d!20665 m!85127))

(declare-fun m!85129 () Bool)

(assert (=> b!82321 m!85129))

(declare-fun m!85131 () Bool)

(assert (=> b!82322 m!85131))

(assert (=> d!19841 d!20665))

(declare-fun c!13098 () Bool)

(declare-fun b!82323 () Bool)

(assert (=> b!82323 (= c!13098 (and ((_ is Cons!1507) (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497)))) (bvsgt (_1!1101 (h!2096 (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497))))) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun e!53693 () List!1511)

(declare-fun e!53694 () List!1511)

(assert (=> b!82323 (= e!53693 e!53694)))

(declare-fun b!82324 () Bool)

(declare-fun call!7703 () List!1511)

(assert (=> b!82324 (= e!53694 call!7703)))

(declare-fun c!13100 () Bool)

(declare-fun b!82325 () Bool)

(declare-fun e!53695 () List!1511)

(assert (=> b!82325 (= e!53695 (ite c!13100 (t!5178 (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497)))) (ite c!13098 (Cons!1507 (h!2096 (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497)))) (t!5178 (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497))))) Nil!1508)))))

(declare-fun d!20667 () Bool)

(declare-fun e!53697 () Bool)

(assert (=> d!20667 e!53697))

(declare-fun res!42708 () Bool)

(assert (=> d!20667 (=> (not res!42708) (not e!53697))))

(declare-fun lt!38495 () List!1511)

(assert (=> d!20667 (= res!42708 (isStrictlySorted!296 lt!38495))))

(declare-fun e!53696 () List!1511)

(assert (=> d!20667 (= lt!38495 e!53696)))

(declare-fun c!13099 () Bool)

(assert (=> d!20667 (= c!13099 (and ((_ is Cons!1507) (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497)))) (bvslt (_1!1101 (h!2096 (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497))))) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(assert (=> d!20667 (isStrictlySorted!296 (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497))))))

(assert (=> d!20667 (= (insertStrictlySorted!58 (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497))) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_2!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))) lt!38495)))

(declare-fun b!82326 () Bool)

(declare-fun call!7705 () List!1511)

(assert (=> b!82326 (= e!53696 call!7705)))

(declare-fun bm!7700 () Bool)

(declare-fun call!7704 () List!1511)

(assert (=> bm!7700 (= call!7704 call!7705)))

(declare-fun bm!7701 () Bool)

(assert (=> bm!7701 (= call!7703 call!7704)))

(declare-fun b!82327 () Bool)

(assert (=> b!82327 (= e!53697 (contains!746 lt!38495 (tuple2!2181 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_2!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!82328 () Bool)

(assert (=> b!82328 (= e!53696 e!53693)))

(assert (=> b!82328 (= c!13100 (and ((_ is Cons!1507) (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497)))) (= (_1!1101 (h!2096 (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497))))) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!82329 () Bool)

(assert (=> b!82329 (= e!53694 call!7703)))

(declare-fun b!82330 () Bool)

(declare-fun res!42707 () Bool)

(assert (=> b!82330 (=> (not res!42707) (not e!53697))))

(assert (=> b!82330 (= res!42707 (containsKey!142 lt!38495 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun bm!7702 () Bool)

(assert (=> bm!7702 (= call!7705 ($colon$colon!70 e!53695 (ite c!13099 (h!2096 (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497)))) (tuple2!2181 (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_2!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))))

(declare-fun c!13101 () Bool)

(assert (=> bm!7702 (= c!13101 c!13099)))

(declare-fun b!82331 () Bool)

(assert (=> b!82331 (= e!53695 (insertStrictlySorted!58 (t!5178 (toList!741 (ite c!12594 call!7500 (ite c!12595 call!7499 call!7497)))) (_1!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (_2!1101 (ite (or c!12594 c!12595) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82332 () Bool)

(assert (=> b!82332 (= e!53693 call!7704)))

(assert (= (and d!20667 c!13099) b!82326))

(assert (= (and d!20667 (not c!13099)) b!82328))

(assert (= (and b!82328 c!13100) b!82332))

(assert (= (and b!82328 (not c!13100)) b!82323))

(assert (= (and b!82323 c!13098) b!82329))

(assert (= (and b!82323 (not c!13098)) b!82324))

(assert (= (or b!82329 b!82324) bm!7701))

(assert (= (or b!82332 bm!7701) bm!7700))

(assert (= (or b!82326 bm!7700) bm!7702))

(assert (= (and bm!7702 c!13101) b!82331))

(assert (= (and bm!7702 (not c!13101)) b!82325))

(assert (= (and d!20667 res!42708) b!82330))

(assert (= (and b!82330 res!42707) b!82327))

(declare-fun m!85133 () Bool)

(assert (=> b!82327 m!85133))

(declare-fun m!85135 () Bool)

(assert (=> b!82330 m!85135))

(declare-fun m!85137 () Bool)

(assert (=> d!20667 m!85137))

(declare-fun m!85139 () Bool)

(assert (=> d!20667 m!85139))

(declare-fun m!85141 () Bool)

(assert (=> b!82331 m!85141))

(declare-fun m!85143 () Bool)

(assert (=> bm!7702 m!85143))

(assert (=> d!19841 d!20667))

(declare-fun d!20669 () Bool)

(assert (=> d!20669 (= (get!1182 (getValueByKey!138 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2612 (getValueByKey!138 (toList!741 lt!37487) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19723 d!20669))

(assert (=> d!19723 d!20165))

(assert (=> b!81189 d!20079))

(declare-fun d!20671 () Bool)

(assert (=> d!20671 (= (apply!80 lt!37605 lt!37595) (get!1182 (getValueByKey!138 (toList!741 lt!37605) lt!37595)))))

(declare-fun bs!3487 () Bool)

(assert (= bs!3487 d!20671))

(declare-fun m!85145 () Bool)

(assert (=> bs!3487 m!85145))

(assert (=> bs!3487 m!85145))

(declare-fun m!85147 () Bool)

(assert (=> bs!3487 m!85147))

(assert (=> b!80692 d!20671))

(declare-fun d!20673 () Bool)

(assert (=> d!20673 (= (apply!80 (+!106 lt!37603 (tuple2!2181 lt!37601 (minValue!2189 newMap!16))) lt!37599) (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37603 (tuple2!2181 lt!37601 (minValue!2189 newMap!16)))) lt!37599)))))

(declare-fun bs!3488 () Bool)

(assert (= bs!3488 d!20673))

(declare-fun m!85149 () Bool)

(assert (=> bs!3488 m!85149))

(assert (=> bs!3488 m!85149))

(declare-fun m!85151 () Bool)

(assert (=> bs!3488 m!85151))

(assert (=> b!80692 d!20673))

(declare-fun d!20675 () Bool)

(assert (=> d!20675 (= (apply!80 (+!106 lt!37605 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))) lt!37595) (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37605 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))) lt!37595)))))

(declare-fun bs!3489 () Bool)

(assert (= bs!3489 d!20675))

(declare-fun m!85153 () Bool)

(assert (=> bs!3489 m!85153))

(assert (=> bs!3489 m!85153))

(declare-fun m!85155 () Bool)

(assert (=> bs!3489 m!85155))

(assert (=> b!80692 d!20675))

(declare-fun d!20677 () Bool)

(assert (=> d!20677 (= (apply!80 (+!106 lt!37608 (tuple2!2181 lt!37604 (minValue!2189 newMap!16))) lt!37590) (apply!80 lt!37608 lt!37590))))

(declare-fun lt!38496 () Unit!2341)

(assert (=> d!20677 (= lt!38496 (choose!475 lt!37608 lt!37604 (minValue!2189 newMap!16) lt!37590))))

(declare-fun e!53698 () Bool)

(assert (=> d!20677 e!53698))

(declare-fun res!42709 () Bool)

(assert (=> d!20677 (=> (not res!42709) (not e!53698))))

(assert (=> d!20677 (= res!42709 (contains!745 lt!37608 lt!37590))))

(assert (=> d!20677 (= (addApplyDifferent!56 lt!37608 lt!37604 (minValue!2189 newMap!16) lt!37590) lt!38496)))

(declare-fun b!82333 () Bool)

(assert (=> b!82333 (= e!53698 (not (= lt!37590 lt!37604)))))

(assert (= (and d!20677 res!42709) b!82333))

(assert (=> d!20677 m!82303))

(declare-fun m!85157 () Bool)

(assert (=> d!20677 m!85157))

(declare-fun m!85159 () Bool)

(assert (=> d!20677 m!85159))

(assert (=> d!20677 m!82303))

(assert (=> d!20677 m!82305))

(assert (=> d!20677 m!82291))

(assert (=> b!80692 d!20677))

(declare-fun d!20679 () Bool)

(assert (=> d!20679 (= (apply!80 (+!106 lt!37608 (tuple2!2181 lt!37604 (minValue!2189 newMap!16))) lt!37590) (get!1182 (getValueByKey!138 (toList!741 (+!106 lt!37608 (tuple2!2181 lt!37604 (minValue!2189 newMap!16)))) lt!37590)))))

(declare-fun bs!3490 () Bool)

(assert (= bs!3490 d!20679))

(declare-fun m!85161 () Bool)

(assert (=> bs!3490 m!85161))

(assert (=> bs!3490 m!85161))

(declare-fun m!85163 () Bool)

(assert (=> bs!3490 m!85163))

(assert (=> b!80692 d!20679))

(declare-fun d!20681 () Bool)

(assert (=> d!20681 (contains!745 (+!106 lt!37596 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))) lt!37589)))

(declare-fun lt!38497 () Unit!2341)

(assert (=> d!20681 (= lt!38497 (choose!476 lt!37596 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) lt!37589))))

(assert (=> d!20681 (contains!745 lt!37596 lt!37589)))

(assert (=> d!20681 (= (addStillContains!56 lt!37596 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) lt!37589) lt!38497)))

(declare-fun bs!3491 () Bool)

(assert (= bs!3491 d!20681))

(assert (=> bs!3491 m!82285))

(assert (=> bs!3491 m!82285))

(assert (=> bs!3491 m!82297))

(declare-fun m!85165 () Bool)

(assert (=> bs!3491 m!85165))

(declare-fun m!85167 () Bool)

(assert (=> bs!3491 m!85167))

(assert (=> b!80692 d!20681))

(declare-fun d!20683 () Bool)

(assert (=> d!20683 (= (apply!80 lt!37603 lt!37599) (get!1182 (getValueByKey!138 (toList!741 lt!37603) lt!37599)))))

(declare-fun bs!3492 () Bool)

(assert (= bs!3492 d!20683))

(declare-fun m!85169 () Bool)

(assert (=> bs!3492 m!85169))

(assert (=> bs!3492 m!85169))

(declare-fun m!85171 () Bool)

(assert (=> bs!3492 m!85171))

(assert (=> b!80692 d!20683))

(declare-fun d!20685 () Bool)

(declare-fun e!53699 () Bool)

(assert (=> d!20685 e!53699))

(declare-fun res!42711 () Bool)

(assert (=> d!20685 (=> (not res!42711) (not e!53699))))

(declare-fun lt!38499 () ListLongMap!1451)

(assert (=> d!20685 (= res!42711 (contains!745 lt!38499 (_1!1101 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))))))

(declare-fun lt!38501 () List!1511)

(assert (=> d!20685 (= lt!38499 (ListLongMap!1452 lt!38501))))

(declare-fun lt!38500 () Unit!2341)

(declare-fun lt!38498 () Unit!2341)

(assert (=> d!20685 (= lt!38500 lt!38498)))

(assert (=> d!20685 (= (getValueByKey!138 lt!38501 (_1!1101 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))) (Some!143 (_2!1101 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))))))

(assert (=> d!20685 (= lt!38498 (lemmaContainsTupThenGetReturnValue!55 lt!38501 (_1!1101 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))) (_2!1101 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))))))

(assert (=> d!20685 (= lt!38501 (insertStrictlySorted!58 (toList!741 lt!37596) (_1!1101 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))) (_2!1101 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))))))

(assert (=> d!20685 (= (+!106 lt!37596 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))) lt!38499)))

(declare-fun b!82334 () Bool)

(declare-fun res!42710 () Bool)

(assert (=> b!82334 (=> (not res!42710) (not e!53699))))

(assert (=> b!82334 (= res!42710 (= (getValueByKey!138 (toList!741 lt!38499) (_1!1101 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))) (Some!143 (_2!1101 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))))))))

(declare-fun b!82335 () Bool)

(assert (=> b!82335 (= e!53699 (contains!746 (toList!741 lt!38499) (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))))))

(assert (= (and d!20685 res!42711) b!82334))

(assert (= (and b!82334 res!42710) b!82335))

(declare-fun m!85173 () Bool)

(assert (=> d!20685 m!85173))

(declare-fun m!85175 () Bool)

(assert (=> d!20685 m!85175))

(declare-fun m!85177 () Bool)

(assert (=> d!20685 m!85177))

(declare-fun m!85179 () Bool)

(assert (=> d!20685 m!85179))

(declare-fun m!85181 () Bool)

(assert (=> b!82334 m!85181))

(declare-fun m!85183 () Bool)

(assert (=> b!82335 m!85183))

(assert (=> b!80692 d!20685))

(declare-fun d!20687 () Bool)

(declare-fun e!53700 () Bool)

(assert (=> d!20687 e!53700))

(declare-fun res!42713 () Bool)

(assert (=> d!20687 (=> (not res!42713) (not e!53700))))

(declare-fun lt!38503 () ListLongMap!1451)

(assert (=> d!20687 (= res!42713 (contains!745 lt!38503 (_1!1101 (tuple2!2181 lt!37604 (minValue!2189 newMap!16)))))))

(declare-fun lt!38505 () List!1511)

(assert (=> d!20687 (= lt!38503 (ListLongMap!1452 lt!38505))))

(declare-fun lt!38504 () Unit!2341)

(declare-fun lt!38502 () Unit!2341)

(assert (=> d!20687 (= lt!38504 lt!38502)))

(assert (=> d!20687 (= (getValueByKey!138 lt!38505 (_1!1101 (tuple2!2181 lt!37604 (minValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37604 (minValue!2189 newMap!16)))))))

(assert (=> d!20687 (= lt!38502 (lemmaContainsTupThenGetReturnValue!55 lt!38505 (_1!1101 (tuple2!2181 lt!37604 (minValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37604 (minValue!2189 newMap!16)))))))

(assert (=> d!20687 (= lt!38505 (insertStrictlySorted!58 (toList!741 lt!37608) (_1!1101 (tuple2!2181 lt!37604 (minValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37604 (minValue!2189 newMap!16)))))))

(assert (=> d!20687 (= (+!106 lt!37608 (tuple2!2181 lt!37604 (minValue!2189 newMap!16))) lt!38503)))

(declare-fun b!82336 () Bool)

(declare-fun res!42712 () Bool)

(assert (=> b!82336 (=> (not res!42712) (not e!53700))))

(assert (=> b!82336 (= res!42712 (= (getValueByKey!138 (toList!741 lt!38503) (_1!1101 (tuple2!2181 lt!37604 (minValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37604 (minValue!2189 newMap!16))))))))

(declare-fun b!82337 () Bool)

(assert (=> b!82337 (= e!53700 (contains!746 (toList!741 lt!38503) (tuple2!2181 lt!37604 (minValue!2189 newMap!16))))))

(assert (= (and d!20687 res!42713) b!82336))

(assert (= (and b!82336 res!42712) b!82337))

(declare-fun m!85185 () Bool)

(assert (=> d!20687 m!85185))

(declare-fun m!85187 () Bool)

(assert (=> d!20687 m!85187))

(declare-fun m!85189 () Bool)

(assert (=> d!20687 m!85189))

(declare-fun m!85191 () Bool)

(assert (=> d!20687 m!85191))

(declare-fun m!85193 () Bool)

(assert (=> b!82336 m!85193))

(declare-fun m!85195 () Bool)

(assert (=> b!82337 m!85195))

(assert (=> b!80692 d!20687))

(declare-fun d!20689 () Bool)

(assert (=> d!20689 (= (apply!80 lt!37608 lt!37590) (get!1182 (getValueByKey!138 (toList!741 lt!37608) lt!37590)))))

(declare-fun bs!3493 () Bool)

(assert (= bs!3493 d!20689))

(declare-fun m!85197 () Bool)

(assert (=> bs!3493 m!85197))

(assert (=> bs!3493 m!85197))

(declare-fun m!85199 () Bool)

(assert (=> bs!3493 m!85199))

(assert (=> b!80692 d!20689))

(declare-fun d!20691 () Bool)

(assert (=> d!20691 (= (apply!80 (+!106 lt!37603 (tuple2!2181 lt!37601 (minValue!2189 newMap!16))) lt!37599) (apply!80 lt!37603 lt!37599))))

(declare-fun lt!38506 () Unit!2341)

(assert (=> d!20691 (= lt!38506 (choose!475 lt!37603 lt!37601 (minValue!2189 newMap!16) lt!37599))))

(declare-fun e!53701 () Bool)

(assert (=> d!20691 e!53701))

(declare-fun res!42714 () Bool)

(assert (=> d!20691 (=> (not res!42714) (not e!53701))))

(assert (=> d!20691 (= res!42714 (contains!745 lt!37603 lt!37599))))

(assert (=> d!20691 (= (addApplyDifferent!56 lt!37603 lt!37601 (minValue!2189 newMap!16) lt!37599) lt!38506)))

(declare-fun b!82338 () Bool)

(assert (=> b!82338 (= e!53701 (not (= lt!37599 lt!37601)))))

(assert (= (and d!20691 res!42714) b!82338))

(assert (=> d!20691 m!82281))

(declare-fun m!85201 () Bool)

(assert (=> d!20691 m!85201))

(declare-fun m!85203 () Bool)

(assert (=> d!20691 m!85203))

(assert (=> d!20691 m!82281))

(assert (=> d!20691 m!82283))

(assert (=> d!20691 m!82289))

(assert (=> b!80692 d!20691))

(declare-fun d!20693 () Bool)

(assert (=> d!20693 (= (apply!80 (+!106 lt!37605 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))) lt!37595) (apply!80 lt!37605 lt!37595))))

(declare-fun lt!38507 () Unit!2341)

(assert (=> d!20693 (= lt!38507 (choose!475 lt!37605 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) lt!37595))))

(declare-fun e!53702 () Bool)

(assert (=> d!20693 e!53702))

(declare-fun res!42715 () Bool)

(assert (=> d!20693 (=> (not res!42715) (not e!53702))))

(assert (=> d!20693 (= res!42715 (contains!745 lt!37605 lt!37595))))

(assert (=> d!20693 (= (addApplyDifferent!56 lt!37605 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)) lt!37595) lt!38507)))

(declare-fun b!82339 () Bool)

(assert (=> b!82339 (= e!53702 (not (= lt!37595 lt!37592)))))

(assert (= (and d!20693 res!42715) b!82339))

(assert (=> d!20693 m!82293))

(declare-fun m!85205 () Bool)

(assert (=> d!20693 m!85205))

(declare-fun m!85207 () Bool)

(assert (=> d!20693 m!85207))

(assert (=> d!20693 m!82293))

(assert (=> d!20693 m!82295))

(assert (=> d!20693 m!82279))

(assert (=> b!80692 d!20693))

(assert (=> b!80692 d!20489))

(declare-fun d!20695 () Bool)

(declare-fun e!53703 () Bool)

(assert (=> d!20695 e!53703))

(declare-fun res!42716 () Bool)

(assert (=> d!20695 (=> res!42716 e!53703)))

(declare-fun lt!38509 () Bool)

(assert (=> d!20695 (= res!42716 (not lt!38509))))

(declare-fun lt!38508 () Bool)

(assert (=> d!20695 (= lt!38509 lt!38508)))

(declare-fun lt!38511 () Unit!2341)

(declare-fun e!53704 () Unit!2341)

(assert (=> d!20695 (= lt!38511 e!53704)))

(declare-fun c!13102 () Bool)

(assert (=> d!20695 (= c!13102 lt!38508)))

(assert (=> d!20695 (= lt!38508 (containsKey!142 (toList!741 (+!106 lt!37596 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))) lt!37589))))

(assert (=> d!20695 (= (contains!745 (+!106 lt!37596 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))) lt!37589) lt!38509)))

(declare-fun b!82340 () Bool)

(declare-fun lt!38510 () Unit!2341)

(assert (=> b!82340 (= e!53704 lt!38510)))

(assert (=> b!82340 (= lt!38510 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 (+!106 lt!37596 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))) lt!37589))))

(assert (=> b!82340 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37596 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))) lt!37589))))

(declare-fun b!82341 () Bool)

(declare-fun Unit!2412 () Unit!2341)

(assert (=> b!82341 (= e!53704 Unit!2412)))

(declare-fun b!82342 () Bool)

(assert (=> b!82342 (= e!53703 (isDefined!91 (getValueByKey!138 (toList!741 (+!106 lt!37596 (tuple2!2181 lt!37602 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))) lt!37589)))))

(assert (= (and d!20695 c!13102) b!82340))

(assert (= (and d!20695 (not c!13102)) b!82341))

(assert (= (and d!20695 (not res!42716)) b!82342))

(declare-fun m!85209 () Bool)

(assert (=> d!20695 m!85209))

(declare-fun m!85211 () Bool)

(assert (=> b!82340 m!85211))

(declare-fun m!85213 () Bool)

(assert (=> b!82340 m!85213))

(assert (=> b!82340 m!85213))

(declare-fun m!85215 () Bool)

(assert (=> b!82340 m!85215))

(assert (=> b!82342 m!85213))

(assert (=> b!82342 m!85213))

(assert (=> b!82342 m!85215))

(assert (=> b!80692 d!20695))

(declare-fun d!20697 () Bool)

(declare-fun e!53705 () Bool)

(assert (=> d!20697 e!53705))

(declare-fun res!42718 () Bool)

(assert (=> d!20697 (=> (not res!42718) (not e!53705))))

(declare-fun lt!38513 () ListLongMap!1451)

(assert (=> d!20697 (= res!42718 (contains!745 lt!38513 (_1!1101 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))))))

(declare-fun lt!38515 () List!1511)

(assert (=> d!20697 (= lt!38513 (ListLongMap!1452 lt!38515))))

(declare-fun lt!38514 () Unit!2341)

(declare-fun lt!38512 () Unit!2341)

(assert (=> d!20697 (= lt!38514 lt!38512)))

(assert (=> d!20697 (= (getValueByKey!138 lt!38515 (_1!1101 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))) (Some!143 (_2!1101 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))))))

(assert (=> d!20697 (= lt!38512 (lemmaContainsTupThenGetReturnValue!55 lt!38515 (_1!1101 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))) (_2!1101 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))))))

(assert (=> d!20697 (= lt!38515 (insertStrictlySorted!58 (toList!741 lt!37605) (_1!1101 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))) (_2!1101 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))))))

(assert (=> d!20697 (= (+!106 lt!37605 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))) lt!38513)))

(declare-fun b!82343 () Bool)

(declare-fun res!42717 () Bool)

(assert (=> b!82343 (=> (not res!42717) (not e!53705))))

(assert (=> b!82343 (= res!42717 (= (getValueByKey!138 (toList!741 lt!38513) (_1!1101 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16))))) (Some!143 (_2!1101 (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))))))))

(declare-fun b!82344 () Bool)

(assert (=> b!82344 (= e!53705 (contains!746 (toList!741 lt!38513) (tuple2!2181 lt!37592 (ite (and c!12569 c!12571) lt!37282 (zeroValue!2189 newMap!16)))))))

(assert (= (and d!20697 res!42718) b!82343))

(assert (= (and b!82343 res!42717) b!82344))

(declare-fun m!85217 () Bool)

(assert (=> d!20697 m!85217))

(declare-fun m!85219 () Bool)

(assert (=> d!20697 m!85219))

(declare-fun m!85221 () Bool)

(assert (=> d!20697 m!85221))

(declare-fun m!85223 () Bool)

(assert (=> d!20697 m!85223))

(declare-fun m!85225 () Bool)

(assert (=> b!82343 m!85225))

(declare-fun m!85227 () Bool)

(assert (=> b!82344 m!85227))

(assert (=> b!80692 d!20697))

(declare-fun d!20699 () Bool)

(declare-fun e!53706 () Bool)

(assert (=> d!20699 e!53706))

(declare-fun res!42720 () Bool)

(assert (=> d!20699 (=> (not res!42720) (not e!53706))))

(declare-fun lt!38517 () ListLongMap!1451)

(assert (=> d!20699 (= res!42720 (contains!745 lt!38517 (_1!1101 (tuple2!2181 lt!37601 (minValue!2189 newMap!16)))))))

(declare-fun lt!38519 () List!1511)

(assert (=> d!20699 (= lt!38517 (ListLongMap!1452 lt!38519))))

(declare-fun lt!38518 () Unit!2341)

(declare-fun lt!38516 () Unit!2341)

(assert (=> d!20699 (= lt!38518 lt!38516)))

(assert (=> d!20699 (= (getValueByKey!138 lt!38519 (_1!1101 (tuple2!2181 lt!37601 (minValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37601 (minValue!2189 newMap!16)))))))

(assert (=> d!20699 (= lt!38516 (lemmaContainsTupThenGetReturnValue!55 lt!38519 (_1!1101 (tuple2!2181 lt!37601 (minValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37601 (minValue!2189 newMap!16)))))))

(assert (=> d!20699 (= lt!38519 (insertStrictlySorted!58 (toList!741 lt!37603) (_1!1101 (tuple2!2181 lt!37601 (minValue!2189 newMap!16))) (_2!1101 (tuple2!2181 lt!37601 (minValue!2189 newMap!16)))))))

(assert (=> d!20699 (= (+!106 lt!37603 (tuple2!2181 lt!37601 (minValue!2189 newMap!16))) lt!38517)))

(declare-fun b!82345 () Bool)

(declare-fun res!42719 () Bool)

(assert (=> b!82345 (=> (not res!42719) (not e!53706))))

(assert (=> b!82345 (= res!42719 (= (getValueByKey!138 (toList!741 lt!38517) (_1!1101 (tuple2!2181 lt!37601 (minValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 lt!37601 (minValue!2189 newMap!16))))))))

(declare-fun b!82346 () Bool)

(assert (=> b!82346 (= e!53706 (contains!746 (toList!741 lt!38517) (tuple2!2181 lt!37601 (minValue!2189 newMap!16))))))

(assert (= (and d!20699 res!42720) b!82345))

(assert (= (and b!82345 res!42719) b!82346))

(declare-fun m!85229 () Bool)

(assert (=> d!20699 m!85229))

(declare-fun m!85231 () Bool)

(assert (=> d!20699 m!85231))

(declare-fun m!85233 () Bool)

(assert (=> d!20699 m!85233))

(declare-fun m!85235 () Bool)

(assert (=> d!20699 m!85235))

(declare-fun m!85237 () Bool)

(assert (=> b!82345 m!85237))

(declare-fun m!85239 () Bool)

(assert (=> b!82346 m!85239))

(assert (=> b!80692 d!20699))

(declare-fun d!20701 () Bool)

(declare-fun c!13103 () Bool)

(assert (=> d!20701 (= c!13103 (and ((_ is Cons!1507) (toList!741 lt!37842)) (= (_1!1101 (h!2096 (toList!741 lt!37842))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53707 () Option!144)

(assert (=> d!20701 (= (getValueByKey!138 (toList!741 lt!37842) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53707)))

(declare-fun b!82348 () Bool)

(declare-fun e!53708 () Option!144)

(assert (=> b!82348 (= e!53707 e!53708)))

(declare-fun c!13104 () Bool)

(assert (=> b!82348 (= c!13104 (and ((_ is Cons!1507) (toList!741 lt!37842)) (not (= (_1!1101 (h!2096 (toList!741 lt!37842))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!82349 () Bool)

(assert (=> b!82349 (= e!53708 (getValueByKey!138 (t!5178 (toList!741 lt!37842)) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82350 () Bool)

(assert (=> b!82350 (= e!53708 None!142)))

(declare-fun b!82347 () Bool)

(assert (=> b!82347 (= e!53707 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37842)))))))

(assert (= (and d!20701 c!13103) b!82347))

(assert (= (and d!20701 (not c!13103)) b!82348))

(assert (= (and b!82348 c!13104) b!82349))

(assert (= (and b!82348 (not c!13104)) b!82350))

(declare-fun m!85241 () Bool)

(assert (=> b!82349 m!85241))

(assert (=> b!81003 d!20701))

(declare-fun d!20703 () Bool)

(assert (=> d!20703 (isDefined!91 (getValueByKey!138 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38520 () Unit!2341)

(assert (=> d!20703 (= lt!38520 (choose!477 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53709 () Bool)

(assert (=> d!20703 e!53709))

(declare-fun res!42721 () Bool)

(assert (=> d!20703 (=> (not res!42721) (not e!53709))))

(assert (=> d!20703 (= res!42721 (isStrictlySorted!296 (toList!741 lt!37487)))))

(assert (=> d!20703 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000) lt!38520)))

(declare-fun b!82351 () Bool)

(assert (=> b!82351 (= e!53709 (containsKey!142 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20703 res!42721) b!82351))

(assert (=> d!20703 m!82345))

(assert (=> d!20703 m!82345))

(assert (=> d!20703 m!83149))

(declare-fun m!85243 () Bool)

(assert (=> d!20703 m!85243))

(assert (=> d!20703 m!83475))

(assert (=> b!82351 m!83145))

(assert (=> b!81184 d!20703))

(assert (=> b!81184 d!20135))

(assert (=> b!81184 d!20137))

(assert (=> bm!7543 d!19767))

(declare-fun d!20705 () Bool)

(declare-fun e!53710 () Bool)

(assert (=> d!20705 e!53710))

(declare-fun res!42722 () Bool)

(assert (=> d!20705 (=> res!42722 e!53710)))

(declare-fun lt!38522 () Bool)

(assert (=> d!20705 (= res!42722 (not lt!38522))))

(declare-fun lt!38521 () Bool)

(assert (=> d!20705 (= lt!38522 lt!38521)))

(declare-fun lt!38524 () Unit!2341)

(declare-fun e!53711 () Unit!2341)

(assert (=> d!20705 (= lt!38524 e!53711)))

(declare-fun c!13105 () Bool)

(assert (=> d!20705 (= c!13105 lt!38521)))

(assert (=> d!20705 (= lt!38521 (containsKey!142 (toList!741 lt!37597) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20705 (= (contains!745 lt!37597 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38522)))

(declare-fun b!82352 () Bool)

(declare-fun lt!38523 () Unit!2341)

(assert (=> b!82352 (= e!53711 lt!38523)))

(assert (=> b!82352 (= lt!38523 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37597) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82352 (isDefined!91 (getValueByKey!138 (toList!741 lt!37597) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82353 () Bool)

(declare-fun Unit!2413 () Unit!2341)

(assert (=> b!82353 (= e!53711 Unit!2413)))

(declare-fun b!82354 () Bool)

(assert (=> b!82354 (= e!53710 (isDefined!91 (getValueByKey!138 (toList!741 lt!37597) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20705 c!13105) b!82352))

(assert (= (and d!20705 (not c!13105)) b!82353))

(assert (= (and d!20705 (not res!42722)) b!82354))

(declare-fun m!85245 () Bool)

(assert (=> d!20705 m!85245))

(declare-fun m!85247 () Bool)

(assert (=> b!82352 m!85247))

(assert (=> b!82352 m!83195))

(assert (=> b!82352 m!83195))

(declare-fun m!85249 () Bool)

(assert (=> b!82352 m!85249))

(assert (=> b!82354 m!83195))

(assert (=> b!82354 m!83195))

(assert (=> b!82354 m!85249))

(assert (=> bm!7511 d!20705))

(declare-fun d!20707 () Bool)

(assert (=> d!20707 (= (apply!80 lt!37785 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1182 (getValueByKey!138 (toList!741 lt!37785) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3494 () Bool)

(assert (= bs!3494 d!20707))

(assert (=> bs!3494 m!82265))

(declare-fun m!85251 () Bool)

(assert (=> bs!3494 m!85251))

(assert (=> bs!3494 m!85251))

(declare-fun m!85253 () Bool)

(assert (=> bs!3494 m!85253))

(assert (=> b!80947 d!20707))

(declare-fun d!20709 () Bool)

(declare-fun c!13106 () Bool)

(assert (=> d!20709 (= c!13106 ((_ is ValueCellFull!915) (select (arr!1902 (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!53712 () V!3003)

(assert (=> d!20709 (= (get!1179 (select (arr!1902 (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53712)))

(declare-fun b!82355 () Bool)

(assert (=> b!82355 (= e!53712 (get!1180 (select (arr!1902 (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82356 () Bool)

(assert (=> b!82356 (= e!53712 (get!1181 (select (arr!1902 (ite c!12569 (_values!2276 newMap!16) (array!3992 (store (arr!1902 (_values!2276 newMap!16)) (index!3100 lt!37427) (ValueCellFull!915 lt!37282)) (size!2144 (_values!2276 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20709 c!13106) b!82355))

(assert (= (and d!20709 (not c!13106)) b!82356))

(assert (=> b!82355 m!82599))

(assert (=> b!82355 m!82271))

(declare-fun m!85255 () Bool)

(assert (=> b!82355 m!85255))

(assert (=> b!82356 m!82599))

(assert (=> b!82356 m!82271))

(declare-fun m!85257 () Bool)

(assert (=> b!82356 m!85257))

(assert (=> b!80947 d!20709))

(assert (=> b!81107 d!20455))

(assert (=> b!81107 d!20457))

(assert (=> d!19715 d!19953))

(declare-fun d!20711 () Bool)

(assert (=> d!20711 (= (size!2147 newMap!16) (bvadd (_size!418 newMap!16) (bvsdiv (bvadd (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!80841 d!20711))

(declare-fun d!20713 () Bool)

(declare-fun lt!38525 () (_ BitVec 32))

(assert (=> d!20713 (and (bvsge lt!38525 #b00000000000000000000000000000000) (bvsle lt!38525 (bvsub (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!53713 () (_ BitVec 32))

(assert (=> d!20713 (= lt!38525 e!53713)))

(declare-fun c!13107 () Bool)

(assert (=> d!20713 (= c!13107 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> d!20713 (and (bvsle #b00000000000000000000000000000000 (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> d!20713 (= (arrayCountValidKeys!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) #b00000000000000000000000000000000 (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))) lt!38525)))

(declare-fun bm!7703 () Bool)

(declare-fun call!7706 () (_ BitVec 32))

(assert (=> bm!7703 (= call!7706 (arrayCountValidKeys!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!82357 () Bool)

(declare-fun e!53714 () (_ BitVec 32))

(assert (=> b!82357 (= e!53714 call!7706)))

(declare-fun b!82358 () Bool)

(assert (=> b!82358 (= e!53713 #b00000000000000000000000000000000)))

(declare-fun b!82359 () Bool)

(assert (=> b!82359 (= e!53714 (bvadd #b00000000000000000000000000000001 call!7706))))

(declare-fun b!82360 () Bool)

(assert (=> b!82360 (= e!53713 e!53714)))

(declare-fun c!13108 () Bool)

(assert (=> b!82360 (= c!13108 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!20713 c!13107) b!82358))

(assert (= (and d!20713 (not c!13107)) b!82360))

(assert (= (and b!82360 c!13108) b!82359))

(assert (= (and b!82360 (not c!13108)) b!82357))

(assert (= (or b!82359 b!82357) bm!7703))

(declare-fun m!85259 () Bool)

(assert (=> bm!7703 m!85259))

(assert (=> b!82360 m!83225))

(assert (=> b!82360 m!83225))

(assert (=> b!82360 m!83229))

(assert (=> b!80722 d!20713))

(declare-fun d!20715 () Bool)

(declare-fun c!13109 () Bool)

(assert (=> d!20715 (= c!13109 (and ((_ is Cons!1507) (toList!741 lt!37869)) (= (_1!1101 (h!2096 (toList!741 lt!37869))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53715 () Option!144)

(assert (=> d!20715 (= (getValueByKey!138 (toList!741 lt!37869) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53715)))

(declare-fun b!82362 () Bool)

(declare-fun e!53716 () Option!144)

(assert (=> b!82362 (= e!53715 e!53716)))

(declare-fun c!13110 () Bool)

(assert (=> b!82362 (= c!13110 (and ((_ is Cons!1507) (toList!741 lt!37869)) (not (= (_1!1101 (h!2096 (toList!741 lt!37869))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!82363 () Bool)

(assert (=> b!82363 (= e!53716 (getValueByKey!138 (t!5178 (toList!741 lt!37869)) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82364 () Bool)

(assert (=> b!82364 (= e!53716 None!142)))

(declare-fun b!82361 () Bool)

(assert (=> b!82361 (= e!53715 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37869)))))))

(assert (= (and d!20715 c!13109) b!82361))

(assert (= (and d!20715 (not c!13109)) b!82362))

(assert (= (and b!82362 c!13110) b!82363))

(assert (= (and b!82362 (not c!13110)) b!82364))

(declare-fun m!85261 () Bool)

(assert (=> b!82363 m!85261))

(assert (=> b!81027 d!20715))

(declare-fun d!20717 () Bool)

(declare-fun c!13111 () Bool)

(assert (=> d!20717 (= c!13111 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37512))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37512)))) (_1!1101 lt!37268))))))

(declare-fun e!53717 () Option!144)

(assert (=> d!20717 (= (getValueByKey!138 (t!5178 (toList!741 lt!37512)) (_1!1101 lt!37268)) e!53717)))

(declare-fun b!82366 () Bool)

(declare-fun e!53718 () Option!144)

(assert (=> b!82366 (= e!53717 e!53718)))

(declare-fun c!13112 () Bool)

(assert (=> b!82366 (= c!13112 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37512))) (not (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37512)))) (_1!1101 lt!37268)))))))

(declare-fun b!82367 () Bool)

(assert (=> b!82367 (= e!53718 (getValueByKey!138 (t!5178 (t!5178 (toList!741 lt!37512))) (_1!1101 lt!37268)))))

(declare-fun b!82368 () Bool)

(assert (=> b!82368 (= e!53718 None!142)))

(declare-fun b!82365 () Bool)

(assert (=> b!82365 (= e!53717 (Some!143 (_2!1101 (h!2096 (t!5178 (toList!741 lt!37512))))))))

(assert (= (and d!20717 c!13111) b!82365))

(assert (= (and d!20717 (not c!13111)) b!82366))

(assert (= (and b!82366 c!13112) b!82367))

(assert (= (and b!82366 (not c!13112)) b!82368))

(declare-fun m!85263 () Bool)

(assert (=> b!82367 m!85263))

(assert (=> b!80999 d!20717))

(declare-fun b!82369 () Bool)

(declare-fun c!13113 () Bool)

(assert (=> b!82369 (= c!13113 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37276))) (bvsgt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37276)))) (_1!1101 lt!37278))))))

(declare-fun e!53719 () List!1511)

(declare-fun e!53720 () List!1511)

(assert (=> b!82369 (= e!53719 e!53720)))

(declare-fun b!82370 () Bool)

(declare-fun call!7707 () List!1511)

(assert (=> b!82370 (= e!53720 call!7707)))

(declare-fun c!13115 () Bool)

(declare-fun e!53721 () List!1511)

(declare-fun b!82371 () Bool)

(assert (=> b!82371 (= e!53721 (ite c!13115 (t!5178 (t!5178 (toList!741 lt!37276))) (ite c!13113 (Cons!1507 (h!2096 (t!5178 (toList!741 lt!37276))) (t!5178 (t!5178 (toList!741 lt!37276)))) Nil!1508)))))

(declare-fun d!20719 () Bool)

(declare-fun e!53723 () Bool)

(assert (=> d!20719 e!53723))

(declare-fun res!42724 () Bool)

(assert (=> d!20719 (=> (not res!42724) (not e!53723))))

(declare-fun lt!38526 () List!1511)

(assert (=> d!20719 (= res!42724 (isStrictlySorted!296 lt!38526))))

(declare-fun e!53722 () List!1511)

(assert (=> d!20719 (= lt!38526 e!53722)))

(declare-fun c!13114 () Bool)

(assert (=> d!20719 (= c!13114 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37276))) (bvslt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37276)))) (_1!1101 lt!37278))))))

(assert (=> d!20719 (isStrictlySorted!296 (t!5178 (toList!741 lt!37276)))))

(assert (=> d!20719 (= (insertStrictlySorted!58 (t!5178 (toList!741 lt!37276)) (_1!1101 lt!37278) (_2!1101 lt!37278)) lt!38526)))

(declare-fun b!82372 () Bool)

(declare-fun call!7709 () List!1511)

(assert (=> b!82372 (= e!53722 call!7709)))

(declare-fun bm!7704 () Bool)

(declare-fun call!7708 () List!1511)

(assert (=> bm!7704 (= call!7708 call!7709)))

(declare-fun bm!7705 () Bool)

(assert (=> bm!7705 (= call!7707 call!7708)))

(declare-fun b!82373 () Bool)

(assert (=> b!82373 (= e!53723 (contains!746 lt!38526 (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(declare-fun b!82374 () Bool)

(assert (=> b!82374 (= e!53722 e!53719)))

(assert (=> b!82374 (= c!13115 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37276))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37276)))) (_1!1101 lt!37278))))))

(declare-fun b!82375 () Bool)

(assert (=> b!82375 (= e!53720 call!7707)))

(declare-fun b!82376 () Bool)

(declare-fun res!42723 () Bool)

(assert (=> b!82376 (=> (not res!42723) (not e!53723))))

(assert (=> b!82376 (= res!42723 (containsKey!142 lt!38526 (_1!1101 lt!37278)))))

(declare-fun bm!7706 () Bool)

(assert (=> bm!7706 (= call!7709 ($colon$colon!70 e!53721 (ite c!13114 (h!2096 (t!5178 (toList!741 lt!37276))) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278)))))))

(declare-fun c!13116 () Bool)

(assert (=> bm!7706 (= c!13116 c!13114)))

(declare-fun b!82377 () Bool)

(assert (=> b!82377 (= e!53721 (insertStrictlySorted!58 (t!5178 (t!5178 (toList!741 lt!37276))) (_1!1101 lt!37278) (_2!1101 lt!37278)))))

(declare-fun b!82378 () Bool)

(assert (=> b!82378 (= e!53719 call!7708)))

(assert (= (and d!20719 c!13114) b!82372))

(assert (= (and d!20719 (not c!13114)) b!82374))

(assert (= (and b!82374 c!13115) b!82378))

(assert (= (and b!82374 (not c!13115)) b!82369))

(assert (= (and b!82369 c!13113) b!82375))

(assert (= (and b!82369 (not c!13113)) b!82370))

(assert (= (or b!82375 b!82370) bm!7705))

(assert (= (or b!82378 bm!7705) bm!7704))

(assert (= (or b!82372 bm!7704) bm!7706))

(assert (= (and bm!7706 c!13116) b!82377))

(assert (= (and bm!7706 (not c!13116)) b!82371))

(assert (= (and d!20719 res!42724) b!82376))

(assert (= (and b!82376 res!42723) b!82373))

(declare-fun m!85265 () Bool)

(assert (=> b!82373 m!85265))

(declare-fun m!85267 () Bool)

(assert (=> b!82376 m!85267))

(declare-fun m!85269 () Bool)

(assert (=> d!20719 m!85269))

(assert (=> d!20719 m!84543))

(declare-fun m!85271 () Bool)

(assert (=> b!82377 m!85271))

(declare-fun m!85273 () Bool)

(assert (=> bm!7706 m!85273))

(assert (=> b!81125 d!20719))

(declare-fun d!20721 () Bool)

(declare-fun e!53724 () Bool)

(assert (=> d!20721 e!53724))

(declare-fun res!42725 () Bool)

(assert (=> d!20721 (=> res!42725 e!53724)))

(declare-fun lt!38528 () Bool)

(assert (=> d!20721 (= res!42725 (not lt!38528))))

(declare-fun lt!38527 () Bool)

(assert (=> d!20721 (= lt!38528 lt!38527)))

(declare-fun lt!38530 () Unit!2341)

(declare-fun e!53725 () Unit!2341)

(assert (=> d!20721 (= lt!38530 e!53725)))

(declare-fun c!13117 () Bool)

(assert (=> d!20721 (= c!13117 lt!38527)))

(assert (=> d!20721 (= lt!38527 (containsKey!142 (toList!741 lt!37891) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!20721 (= (contains!745 lt!37891 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38528)))

(declare-fun b!82379 () Bool)

(declare-fun lt!38529 () Unit!2341)

(assert (=> b!82379 (= e!53725 lt!38529)))

(assert (=> b!82379 (= lt!38529 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37891) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> b!82379 (isDefined!91 (getValueByKey!138 (toList!741 lt!37891) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82380 () Bool)

(declare-fun Unit!2414 () Unit!2341)

(assert (=> b!82380 (= e!53725 Unit!2414)))

(declare-fun b!82381 () Bool)

(assert (=> b!82381 (= e!53724 (isDefined!91 (getValueByKey!138 (toList!741 lt!37891) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20721 c!13117) b!82379))

(assert (= (and d!20721 (not c!13117)) b!82380))

(assert (= (and d!20721 (not res!42725)) b!82381))

(declare-fun m!85275 () Bool)

(assert (=> d!20721 m!85275))

(declare-fun m!85277 () Bool)

(assert (=> b!82379 m!85277))

(assert (=> b!82379 m!82951))

(assert (=> b!82379 m!82951))

(declare-fun m!85279 () Bool)

(assert (=> b!82379 m!85279))

(assert (=> b!82381 m!82951))

(assert (=> b!82381 m!82951))

(assert (=> b!82381 m!85279))

(assert (=> d!19871 d!20721))

(declare-fun d!20723 () Bool)

(declare-fun c!13118 () Bool)

(assert (=> d!20723 (= c!13118 (and ((_ is Cons!1507) lt!37893) (= (_1!1101 (h!2096 lt!37893)) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53726 () Option!144)

(assert (=> d!20723 (= (getValueByKey!138 lt!37893 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53726)))

(declare-fun b!82383 () Bool)

(declare-fun e!53727 () Option!144)

(assert (=> b!82383 (= e!53726 e!53727)))

(declare-fun c!13119 () Bool)

(assert (=> b!82383 (= c!13119 (and ((_ is Cons!1507) lt!37893) (not (= (_1!1101 (h!2096 lt!37893)) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!82384 () Bool)

(assert (=> b!82384 (= e!53727 (getValueByKey!138 (t!5178 lt!37893) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82385 () Bool)

(assert (=> b!82385 (= e!53727 None!142)))

(declare-fun b!82382 () Bool)

(assert (=> b!82382 (= e!53726 (Some!143 (_2!1101 (h!2096 lt!37893))))))

(assert (= (and d!20723 c!13118) b!82382))

(assert (= (and d!20723 (not c!13118)) b!82383))

(assert (= (and b!82383 c!13119) b!82384))

(assert (= (and b!82383 (not c!13119)) b!82385))

(declare-fun m!85281 () Bool)

(assert (=> b!82384 m!85281))

(assert (=> d!19871 d!20723))

(declare-fun d!20725 () Bool)

(assert (=> d!20725 (= (getValueByKey!138 lt!37893 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!38531 () Unit!2341)

(assert (=> d!20725 (= lt!38531 (choose!470 lt!37893 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun e!53728 () Bool)

(assert (=> d!20725 e!53728))

(declare-fun res!42726 () Bool)

(assert (=> d!20725 (=> (not res!42726) (not e!53728))))

(assert (=> d!20725 (= res!42726 (isStrictlySorted!296 lt!37893))))

(assert (=> d!20725 (= (lemmaContainsTupThenGetReturnValue!55 lt!37893 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38531)))

(declare-fun b!82386 () Bool)

(declare-fun res!42727 () Bool)

(assert (=> b!82386 (=> (not res!42727) (not e!53728))))

(assert (=> b!82386 (= res!42727 (containsKey!142 lt!37893 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82387 () Bool)

(assert (=> b!82387 (= e!53728 (contains!746 lt!37893 (tuple2!2181 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20725 res!42726) b!82386))

(assert (= (and b!82386 res!42727) b!82387))

(assert (=> d!20725 m!82945))

(declare-fun m!85283 () Bool)

(assert (=> d!20725 m!85283))

(declare-fun m!85285 () Bool)

(assert (=> d!20725 m!85285))

(declare-fun m!85287 () Bool)

(assert (=> b!82386 m!85287))

(declare-fun m!85289 () Bool)

(assert (=> b!82387 m!85289))

(assert (=> d!19871 d!20725))

(declare-fun b!82388 () Bool)

(declare-fun c!13120 () Bool)

(assert (=> b!82388 (= c!13120 (and ((_ is Cons!1507) (toList!741 lt!37495)) (bvsgt (_1!1101 (h!2096 (toList!741 lt!37495))) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53729 () List!1511)

(declare-fun e!53730 () List!1511)

(assert (=> b!82388 (= e!53729 e!53730)))

(declare-fun b!82389 () Bool)

(declare-fun call!7710 () List!1511)

(assert (=> b!82389 (= e!53730 call!7710)))

(declare-fun b!82390 () Bool)

(declare-fun e!53731 () List!1511)

(declare-fun c!13122 () Bool)

(assert (=> b!82390 (= e!53731 (ite c!13122 (t!5178 (toList!741 lt!37495)) (ite c!13120 (Cons!1507 (h!2096 (toList!741 lt!37495)) (t!5178 (toList!741 lt!37495))) Nil!1508)))))

(declare-fun d!20727 () Bool)

(declare-fun e!53733 () Bool)

(assert (=> d!20727 e!53733))

(declare-fun res!42729 () Bool)

(assert (=> d!20727 (=> (not res!42729) (not e!53733))))

(declare-fun lt!38532 () List!1511)

(assert (=> d!20727 (= res!42729 (isStrictlySorted!296 lt!38532))))

(declare-fun e!53732 () List!1511)

(assert (=> d!20727 (= lt!38532 e!53732)))

(declare-fun c!13121 () Bool)

(assert (=> d!20727 (= c!13121 (and ((_ is Cons!1507) (toList!741 lt!37495)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37495))) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!20727 (isStrictlySorted!296 (toList!741 lt!37495))))

(assert (=> d!20727 (= (insertStrictlySorted!58 (toList!741 lt!37495) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38532)))

(declare-fun b!82391 () Bool)

(declare-fun call!7712 () List!1511)

(assert (=> b!82391 (= e!53732 call!7712)))

(declare-fun bm!7707 () Bool)

(declare-fun call!7711 () List!1511)

(assert (=> bm!7707 (= call!7711 call!7712)))

(declare-fun bm!7708 () Bool)

(assert (=> bm!7708 (= call!7710 call!7711)))

(declare-fun b!82392 () Bool)

(assert (=> b!82392 (= e!53733 (contains!746 lt!38532 (tuple2!2181 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82393 () Bool)

(assert (=> b!82393 (= e!53732 e!53729)))

(assert (=> b!82393 (= c!13122 (and ((_ is Cons!1507) (toList!741 lt!37495)) (= (_1!1101 (h!2096 (toList!741 lt!37495))) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82394 () Bool)

(assert (=> b!82394 (= e!53730 call!7710)))

(declare-fun b!82395 () Bool)

(declare-fun res!42728 () Bool)

(assert (=> b!82395 (=> (not res!42728) (not e!53733))))

(assert (=> b!82395 (= res!42728 (containsKey!142 lt!38532 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun bm!7709 () Bool)

(assert (=> bm!7709 (= call!7712 ($colon$colon!70 e!53731 (ite c!13121 (h!2096 (toList!741 lt!37495)) (tuple2!2181 (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun c!13123 () Bool)

(assert (=> bm!7709 (= c!13123 c!13121)))

(declare-fun b!82396 () Bool)

(assert (=> b!82396 (= e!53731 (insertStrictlySorted!58 (t!5178 (toList!741 lt!37495)) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82397 () Bool)

(assert (=> b!82397 (= e!53729 call!7711)))

(assert (= (and d!20727 c!13121) b!82391))

(assert (= (and d!20727 (not c!13121)) b!82393))

(assert (= (and b!82393 c!13122) b!82397))

(assert (= (and b!82393 (not c!13122)) b!82388))

(assert (= (and b!82388 c!13120) b!82394))

(assert (= (and b!82388 (not c!13120)) b!82389))

(assert (= (or b!82394 b!82389) bm!7708))

(assert (= (or b!82397 bm!7708) bm!7707))

(assert (= (or b!82391 bm!7707) bm!7709))

(assert (= (and bm!7709 c!13123) b!82396))

(assert (= (and bm!7709 (not c!13123)) b!82390))

(assert (= (and d!20727 res!42729) b!82395))

(assert (= (and b!82395 res!42728) b!82392))

(declare-fun m!85291 () Bool)

(assert (=> b!82392 m!85291))

(declare-fun m!85293 () Bool)

(assert (=> b!82395 m!85293))

(declare-fun m!85295 () Bool)

(assert (=> d!20727 m!85295))

(declare-fun m!85297 () Bool)

(assert (=> d!20727 m!85297))

(declare-fun m!85299 () Bool)

(assert (=> b!82396 m!85299))

(declare-fun m!85301 () Bool)

(assert (=> bm!7709 m!85301))

(assert (=> d!19871 d!20727))

(assert (=> b!80656 d!20349))

(assert (=> d!19881 d!19877))

(assert (=> d!19881 d!19875))

(declare-fun d!20729 () Bool)

(assert (=> d!20729 (contains!745 (+!106 lt!37486 (tuple2!2181 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37479)))

(assert (=> d!20729 true))

(declare-fun _$35!324 () Unit!2341)

(assert (=> d!20729 (= (choose!476 lt!37486 lt!37492 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37479) _$35!324)))

(declare-fun bs!3495 () Bool)

(assert (= bs!3495 d!20729))

(assert (=> bs!3495 m!82011))

(assert (=> bs!3495 m!82011))

(assert (=> bs!3495 m!82023))

(assert (=> d!19881 d!20729))

(declare-fun d!20731 () Bool)

(declare-fun e!53734 () Bool)

(assert (=> d!20731 e!53734))

(declare-fun res!42730 () Bool)

(assert (=> d!20731 (=> res!42730 e!53734)))

(declare-fun lt!38534 () Bool)

(assert (=> d!20731 (= res!42730 (not lt!38534))))

(declare-fun lt!38533 () Bool)

(assert (=> d!20731 (= lt!38534 lt!38533)))

(declare-fun lt!38536 () Unit!2341)

(declare-fun e!53735 () Unit!2341)

(assert (=> d!20731 (= lt!38536 e!53735)))

(declare-fun c!13124 () Bool)

(assert (=> d!20731 (= c!13124 lt!38533)))

(assert (=> d!20731 (= lt!38533 (containsKey!142 (toList!741 lt!37486) lt!37479))))

(assert (=> d!20731 (= (contains!745 lt!37486 lt!37479) lt!38534)))

(declare-fun b!82399 () Bool)

(declare-fun lt!38535 () Unit!2341)

(assert (=> b!82399 (= e!53735 lt!38535)))

(assert (=> b!82399 (= lt!38535 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37486) lt!37479))))

(assert (=> b!82399 (isDefined!91 (getValueByKey!138 (toList!741 lt!37486) lt!37479))))

(declare-fun b!82400 () Bool)

(declare-fun Unit!2415 () Unit!2341)

(assert (=> b!82400 (= e!53735 Unit!2415)))

(declare-fun b!82401 () Bool)

(assert (=> b!82401 (= e!53734 (isDefined!91 (getValueByKey!138 (toList!741 lt!37486) lt!37479)))))

(assert (= (and d!20731 c!13124) b!82399))

(assert (= (and d!20731 (not c!13124)) b!82400))

(assert (= (and d!20731 (not res!42730)) b!82401))

(declare-fun m!85303 () Bool)

(assert (=> d!20731 m!85303))

(declare-fun m!85305 () Bool)

(assert (=> b!82399 m!85305))

(declare-fun m!85307 () Bool)

(assert (=> b!82399 m!85307))

(assert (=> b!82399 m!85307))

(declare-fun m!85309 () Bool)

(assert (=> b!82399 m!85309))

(assert (=> b!82401 m!85307))

(assert (=> b!82401 m!85307))

(assert (=> b!82401 m!85309))

(assert (=> d!19881 d!20731))

(declare-fun d!20733 () Bool)

(assert (=> d!20733 (= ($colon$colon!70 e!52765 (ite c!12664 (h!2096 (toList!741 lt!37277)) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283)))) (Cons!1507 (ite c!12664 (h!2096 (toList!741 lt!37277)) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))) e!52765))))

(assert (=> bm!7524 d!20733))

(declare-fun d!20735 () Bool)

(declare-fun e!53736 () Bool)

(assert (=> d!20735 e!53736))

(declare-fun res!42731 () Bool)

(assert (=> d!20735 (=> res!42731 e!53736)))

(declare-fun lt!38538 () Bool)

(assert (=> d!20735 (= res!42731 (not lt!38538))))

(declare-fun lt!38537 () Bool)

(assert (=> d!20735 (= lt!38538 lt!38537)))

(declare-fun lt!38540 () Unit!2341)

(declare-fun e!53737 () Unit!2341)

(assert (=> d!20735 (= lt!38540 e!53737)))

(declare-fun c!13125 () Bool)

(assert (=> d!20735 (= c!13125 lt!38537)))

(assert (=> d!20735 (= lt!38537 (containsKey!142 (toList!741 lt!37785) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!20735 (= (contains!745 lt!37785 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) lt!38538)))

(declare-fun b!82402 () Bool)

(declare-fun lt!38539 () Unit!2341)

(assert (=> b!82402 (= e!53737 lt!38539)))

(assert (=> b!82402 (= lt!38539 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37785) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82402 (isDefined!91 (getValueByKey!138 (toList!741 lt!37785) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82403 () Bool)

(declare-fun Unit!2416 () Unit!2341)

(assert (=> b!82403 (= e!53737 Unit!2416)))

(declare-fun b!82404 () Bool)

(assert (=> b!82404 (= e!53736 (isDefined!91 (getValueByKey!138 (toList!741 lt!37785) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!20735 c!13125) b!82402))

(assert (= (and d!20735 (not c!13125)) b!82403))

(assert (= (and d!20735 (not res!42731)) b!82404))

(assert (=> d!20735 m!82265))

(declare-fun m!85311 () Bool)

(assert (=> d!20735 m!85311))

(assert (=> b!82402 m!82265))

(declare-fun m!85313 () Bool)

(assert (=> b!82402 m!85313))

(assert (=> b!82402 m!82265))

(assert (=> b!82402 m!85251))

(assert (=> b!82402 m!85251))

(declare-fun m!85315 () Bool)

(assert (=> b!82402 m!85315))

(assert (=> b!82404 m!82265))

(assert (=> b!82404 m!85251))

(assert (=> b!82404 m!85251))

(assert (=> b!82404 m!85315))

(assert (=> b!80936 d!20735))

(assert (=> d!19757 d!19755))

(declare-fun d!20737 () Bool)

(assert (=> d!20737 (= (getValueByKey!138 lt!37518 (_1!1101 lt!37283)) (Some!143 (_2!1101 lt!37283)))))

(assert (=> d!20737 true))

(declare-fun _$22!404 () Unit!2341)

(assert (=> d!20737 (= (choose!470 lt!37518 (_1!1101 lt!37283) (_2!1101 lt!37283)) _$22!404)))

(declare-fun bs!3496 () Bool)

(assert (= bs!3496 d!20737))

(assert (=> bs!3496 m!82073))

(assert (=> d!19757 d!20737))

(declare-fun d!20739 () Bool)

(declare-fun res!42732 () Bool)

(declare-fun e!53738 () Bool)

(assert (=> d!20739 (=> res!42732 e!53738)))

(assert (=> d!20739 (= res!42732 (or ((_ is Nil!1508) lt!37518) ((_ is Nil!1508) (t!5178 lt!37518))))))

(assert (=> d!20739 (= (isStrictlySorted!296 lt!37518) e!53738)))

(declare-fun b!82405 () Bool)

(declare-fun e!53739 () Bool)

(assert (=> b!82405 (= e!53738 e!53739)))

(declare-fun res!42733 () Bool)

(assert (=> b!82405 (=> (not res!42733) (not e!53739))))

(assert (=> b!82405 (= res!42733 (bvslt (_1!1101 (h!2096 lt!37518)) (_1!1101 (h!2096 (t!5178 lt!37518)))))))

(declare-fun b!82406 () Bool)

(assert (=> b!82406 (= e!53739 (isStrictlySorted!296 (t!5178 lt!37518)))))

(assert (= (and d!20739 (not res!42732)) b!82405))

(assert (= (and b!82405 res!42733) b!82406))

(declare-fun m!85317 () Bool)

(assert (=> b!82406 m!85317))

(assert (=> d!19757 d!20739))

(assert (=> b!80699 d!20079))

(declare-fun d!20741 () Bool)

(declare-fun c!13126 () Bool)

(assert (=> d!20741 (= c!13126 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37508))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37508)))) (_1!1101 lt!37278))))))

(declare-fun e!53740 () Option!144)

(assert (=> d!20741 (= (getValueByKey!138 (t!5178 (toList!741 lt!37508)) (_1!1101 lt!37278)) e!53740)))

(declare-fun b!82408 () Bool)

(declare-fun e!53741 () Option!144)

(assert (=> b!82408 (= e!53740 e!53741)))

(declare-fun c!13127 () Bool)

(assert (=> b!82408 (= c!13127 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37508))) (not (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37508)))) (_1!1101 lt!37278)))))))

(declare-fun b!82409 () Bool)

(assert (=> b!82409 (= e!53741 (getValueByKey!138 (t!5178 (t!5178 (toList!741 lt!37508))) (_1!1101 lt!37278)))))

(declare-fun b!82410 () Bool)

(assert (=> b!82410 (= e!53741 None!142)))

(declare-fun b!82407 () Bool)

(assert (=> b!82407 (= e!53740 (Some!143 (_2!1101 (h!2096 (t!5178 (toList!741 lt!37508))))))))

(assert (= (and d!20741 c!13126) b!82407))

(assert (= (and d!20741 (not c!13126)) b!82408))

(assert (= (and b!82408 c!13127) b!82409))

(assert (= (and b!82408 (not c!13127)) b!82410))

(declare-fun m!85319 () Bool)

(assert (=> b!82409 m!85319))

(assert (=> b!80879 d!20741))

(declare-fun d!20743 () Bool)

(declare-fun lt!38541 () Bool)

(assert (=> d!20743 (= lt!38541 (select (content!85 lt!37631) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(declare-fun e!53743 () Bool)

(assert (=> d!20743 (= lt!38541 e!53743)))

(declare-fun res!42734 () Bool)

(assert (=> d!20743 (=> (not res!42734) (not e!53743))))

(assert (=> d!20743 (= res!42734 ((_ is Cons!1507) lt!37631))))

(assert (=> d!20743 (= (contains!746 lt!37631 (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))) lt!38541)))

(declare-fun b!82411 () Bool)

(declare-fun e!53742 () Bool)

(assert (=> b!82411 (= e!53743 e!53742)))

(declare-fun res!42735 () Bool)

(assert (=> b!82411 (=> res!42735 e!53742)))

(assert (=> b!82411 (= res!42735 (= (h!2096 lt!37631) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(declare-fun b!82412 () Bool)

(assert (=> b!82412 (= e!53742 (contains!746 (t!5178 lt!37631) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(assert (= (and d!20743 res!42734) b!82411))

(assert (= (and b!82411 (not res!42735)) b!82412))

(declare-fun m!85321 () Bool)

(assert (=> d!20743 m!85321))

(declare-fun m!85323 () Bool)

(assert (=> d!20743 m!85323))

(declare-fun m!85325 () Bool)

(assert (=> b!82412 m!85325))

(assert (=> b!80772 d!20743))

(declare-fun d!20745 () Bool)

(declare-fun res!42736 () Bool)

(declare-fun e!53744 () Bool)

(assert (=> d!20745 (=> (not res!42736) (not e!53744))))

(assert (=> d!20745 (= res!42736 (simpleValid!56 (_2!1100 lt!37753)))))

(assert (=> d!20745 (= (valid!316 (_2!1100 lt!37753)) e!53744)))

(declare-fun b!82413 () Bool)

(declare-fun res!42737 () Bool)

(assert (=> b!82413 (=> (not res!42737) (not e!53744))))

(assert (=> b!82413 (= res!42737 (= (arrayCountValidKeys!0 (_keys!3957 (_2!1100 lt!37753)) #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37753)))) (_size!418 (_2!1100 lt!37753))))))

(declare-fun b!82414 () Bool)

(declare-fun res!42738 () Bool)

(assert (=> b!82414 (=> (not res!42738) (not e!53744))))

(assert (=> b!82414 (= res!42738 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 (_2!1100 lt!37753)) (mask!6299 (_2!1100 lt!37753))))))

(declare-fun b!82415 () Bool)

(assert (=> b!82415 (= e!53744 (arrayNoDuplicates!0 (_keys!3957 (_2!1100 lt!37753)) #b00000000000000000000000000000000 Nil!1509))))

(assert (= (and d!20745 res!42736) b!82413))

(assert (= (and b!82413 res!42737) b!82414))

(assert (= (and b!82414 res!42738) b!82415))

(declare-fun m!85327 () Bool)

(assert (=> d!20745 m!85327))

(declare-fun m!85329 () Bool)

(assert (=> b!82413 m!85329))

(declare-fun m!85331 () Bool)

(assert (=> b!82414 m!85331))

(declare-fun m!85333 () Bool)

(assert (=> b!82415 m!85333))

(assert (=> b!80927 d!20745))

(declare-fun d!20747 () Bool)

(declare-fun res!42739 () Bool)

(declare-fun e!53745 () Bool)

(assert (=> d!20747 (=> res!42739 e!53745)))

(assert (=> d!20747 (= res!42739 (= (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!20747 (= (arrayContainsKey!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!53745)))

(declare-fun b!82416 () Bool)

(declare-fun e!53746 () Bool)

(assert (=> b!82416 (= e!53745 e!53746)))

(declare-fun res!42740 () Bool)

(assert (=> b!82416 (=> (not res!42740) (not e!53746))))

(assert (=> b!82416 (= res!42740 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!82417 () Bool)

(assert (=> b!82417 (= e!53746 (arrayContainsKey!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!20747 (not res!42739)) b!82416))

(assert (= (and b!82416 res!42740) b!82417))

(assert (=> d!20747 m!83239))

(assert (=> b!82417 m!81811))

(declare-fun m!85335 () Bool)

(assert (=> b!82417 m!85335))

(assert (=> b!80813 d!20747))

(declare-fun d!20749 () Bool)

(declare-fun res!42741 () Bool)

(declare-fun e!53747 () Bool)

(assert (=> d!20749 (=> res!42741 e!53747)))

(assert (=> d!20749 (= res!42741 (and ((_ is Cons!1507) lt!37914) (= (_1!1101 (h!2096 lt!37914)) (_1!1101 lt!37278))))))

(assert (=> d!20749 (= (containsKey!142 lt!37914 (_1!1101 lt!37278)) e!53747)))

(declare-fun b!82418 () Bool)

(declare-fun e!53748 () Bool)

(assert (=> b!82418 (= e!53747 e!53748)))

(declare-fun res!42742 () Bool)

(assert (=> b!82418 (=> (not res!42742) (not e!53748))))

(assert (=> b!82418 (= res!42742 (and (or (not ((_ is Cons!1507) lt!37914)) (bvsle (_1!1101 (h!2096 lt!37914)) (_1!1101 lt!37278))) ((_ is Cons!1507) lt!37914) (bvslt (_1!1101 (h!2096 lt!37914)) (_1!1101 lt!37278))))))

(declare-fun b!82419 () Bool)

(assert (=> b!82419 (= e!53748 (containsKey!142 (t!5178 lt!37914) (_1!1101 lt!37278)))))

(assert (= (and d!20749 (not res!42741)) b!82418))

(assert (= (and b!82418 res!42742) b!82419))

(declare-fun m!85337 () Bool)

(assert (=> b!82419 m!85337))

(assert (=> b!81080 d!20749))

(declare-fun d!20751 () Bool)

(declare-fun lt!38542 () Bool)

(assert (=> d!20751 (= lt!38542 (select (content!85 (toList!741 lt!37798)) (tuple2!2181 lt!37533 lt!37539)))))

(declare-fun e!53750 () Bool)

(assert (=> d!20751 (= lt!38542 e!53750)))

(declare-fun res!42743 () Bool)

(assert (=> d!20751 (=> (not res!42743) (not e!53750))))

(assert (=> d!20751 (= res!42743 ((_ is Cons!1507) (toList!741 lt!37798)))))

(assert (=> d!20751 (= (contains!746 (toList!741 lt!37798) (tuple2!2181 lt!37533 lt!37539)) lt!38542)))

(declare-fun b!82420 () Bool)

(declare-fun e!53749 () Bool)

(assert (=> b!82420 (= e!53750 e!53749)))

(declare-fun res!42744 () Bool)

(assert (=> b!82420 (=> res!42744 e!53749)))

(assert (=> b!82420 (= res!42744 (= (h!2096 (toList!741 lt!37798)) (tuple2!2181 lt!37533 lt!37539)))))

(declare-fun b!82421 () Bool)

(assert (=> b!82421 (= e!53749 (contains!746 (t!5178 (toList!741 lt!37798)) (tuple2!2181 lt!37533 lt!37539)))))

(assert (= (and d!20751 res!42743) b!82420))

(assert (= (and b!82420 (not res!42744)) b!82421))

(declare-fun m!85339 () Bool)

(assert (=> d!20751 m!85339))

(declare-fun m!85341 () Bool)

(assert (=> d!20751 m!85341))

(declare-fun m!85343 () Bool)

(assert (=> b!82421 m!85343))

(assert (=> b!80954 d!20751))

(declare-fun d!20753 () Bool)

(declare-fun res!42745 () Bool)

(declare-fun e!53751 () Bool)

(assert (=> d!20753 (=> res!42745 e!53751)))

(assert (=> d!20753 (= res!42745 (or ((_ is Nil!1508) lt!37914) ((_ is Nil!1508) (t!5178 lt!37914))))))

(assert (=> d!20753 (= (isStrictlySorted!296 lt!37914) e!53751)))

(declare-fun b!82422 () Bool)

(declare-fun e!53752 () Bool)

(assert (=> b!82422 (= e!53751 e!53752)))

(declare-fun res!42746 () Bool)

(assert (=> b!82422 (=> (not res!42746) (not e!53752))))

(assert (=> b!82422 (= res!42746 (bvslt (_1!1101 (h!2096 lt!37914)) (_1!1101 (h!2096 (t!5178 lt!37914)))))))

(declare-fun b!82423 () Bool)

(assert (=> b!82423 (= e!53752 (isStrictlySorted!296 (t!5178 lt!37914)))))

(assert (= (and d!20753 (not res!42745)) b!82422))

(assert (= (and b!82422 res!42746) b!82423))

(declare-fun m!85345 () Bool)

(assert (=> b!82423 m!85345))

(assert (=> d!19899 d!20753))

(declare-fun d!20755 () Bool)

(declare-fun res!42747 () Bool)

(declare-fun e!53753 () Bool)

(assert (=> d!20755 (=> res!42747 e!53753)))

(assert (=> d!20755 (= res!42747 (or ((_ is Nil!1508) (toList!741 lt!37273)) ((_ is Nil!1508) (t!5178 (toList!741 lt!37273)))))))

(assert (=> d!20755 (= (isStrictlySorted!296 (toList!741 lt!37273)) e!53753)))

(declare-fun b!82424 () Bool)

(declare-fun e!53754 () Bool)

(assert (=> b!82424 (= e!53753 e!53754)))

(declare-fun res!42748 () Bool)

(assert (=> b!82424 (=> (not res!42748) (not e!53754))))

(assert (=> b!82424 (= res!42748 (bvslt (_1!1101 (h!2096 (toList!741 lt!37273))) (_1!1101 (h!2096 (t!5178 (toList!741 lt!37273))))))))

(declare-fun b!82425 () Bool)

(assert (=> b!82425 (= e!53754 (isStrictlySorted!296 (t!5178 (toList!741 lt!37273))))))

(assert (= (and d!20755 (not res!42747)) b!82424))

(assert (= (and b!82424 res!42748) b!82425))

(assert (=> b!82425 m!83269))

(assert (=> d!19899 d!20755))

(declare-fun d!20757 () Bool)

(declare-fun res!42749 () Bool)

(declare-fun e!53755 () Bool)

(assert (=> d!20757 (=> res!42749 e!53755)))

(assert (=> d!20757 (= res!42749 (and ((_ is Cons!1507) (toList!741 lt!37487)) (= (_1!1101 (h!2096 (toList!741 lt!37487))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20757 (= (containsKey!142 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000) e!53755)))

(declare-fun b!82426 () Bool)

(declare-fun e!53756 () Bool)

(assert (=> b!82426 (= e!53755 e!53756)))

(declare-fun res!42750 () Bool)

(assert (=> b!82426 (=> (not res!42750) (not e!53756))))

(assert (=> b!82426 (= res!42750 (and (or (not ((_ is Cons!1507) (toList!741 lt!37487))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37487))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1507) (toList!741 lt!37487)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37487))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82427 () Bool)

(assert (=> b!82427 (= e!53756 (containsKey!142 (t!5178 (toList!741 lt!37487)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20757 (not res!42749)) b!82426))

(assert (= (and b!82426 res!42750) b!82427))

(declare-fun m!85347 () Bool)

(assert (=> b!82427 m!85347))

(assert (=> d!19901 d!20757))

(assert (=> b!81138 d!20079))

(declare-fun d!20759 () Bool)

(declare-fun lt!38543 () Bool)

(assert (=> d!20759 (= lt!38543 (select (content!85 (toList!741 lt!37891)) (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun e!53758 () Bool)

(assert (=> d!20759 (= lt!38543 e!53758)))

(declare-fun res!42751 () Bool)

(assert (=> d!20759 (=> (not res!42751) (not e!53758))))

(assert (=> d!20759 (= res!42751 ((_ is Cons!1507) (toList!741 lt!37891)))))

(assert (=> d!20759 (= (contains!746 (toList!741 lt!37891) (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!38543)))

(declare-fun b!82428 () Bool)

(declare-fun e!53757 () Bool)

(assert (=> b!82428 (= e!53758 e!53757)))

(declare-fun res!42752 () Bool)

(assert (=> b!82428 (=> res!42752 e!53757)))

(assert (=> b!82428 (= res!42752 (= (h!2096 (toList!741 lt!37891)) (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!82429 () Bool)

(assert (=> b!82429 (= e!53757 (contains!746 (t!5178 (toList!741 lt!37891)) (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!20759 res!42751) b!82428))

(assert (= (and b!82428 (not res!42752)) b!82429))

(declare-fun m!85349 () Bool)

(assert (=> d!20759 m!85349))

(declare-fun m!85351 () Bool)

(assert (=> d!20759 m!85351))

(declare-fun m!85353 () Bool)

(assert (=> b!82429 m!85353))

(assert (=> b!81049 d!20759))

(declare-fun d!20761 () Bool)

(declare-fun res!42753 () Bool)

(declare-fun e!53759 () Bool)

(assert (=> d!20761 (=> res!42753 e!53759)))

(assert (=> d!20761 (= res!42753 (and ((_ is Cons!1507) (toList!741 lt!37549)) (= (_1!1101 (h!2096 (toList!741 lt!37549))) (_1!1101 lt!37283))))))

(assert (=> d!20761 (= (containsKey!142 (toList!741 lt!37549) (_1!1101 lt!37283)) e!53759)))

(declare-fun b!82430 () Bool)

(declare-fun e!53760 () Bool)

(assert (=> b!82430 (= e!53759 e!53760)))

(declare-fun res!42754 () Bool)

(assert (=> b!82430 (=> (not res!42754) (not e!53760))))

(assert (=> b!82430 (= res!42754 (and (or (not ((_ is Cons!1507) (toList!741 lt!37549))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37549))) (_1!1101 lt!37283))) ((_ is Cons!1507) (toList!741 lt!37549)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37549))) (_1!1101 lt!37283))))))

(declare-fun b!82431 () Bool)

(assert (=> b!82431 (= e!53760 (containsKey!142 (t!5178 (toList!741 lt!37549)) (_1!1101 lt!37283)))))

(assert (= (and d!20761 (not res!42753)) b!82430))

(assert (= (and b!82430 res!42754) b!82431))

(declare-fun m!85355 () Bool)

(assert (=> b!82431 m!85355))

(assert (=> d!19905 d!20761))

(declare-fun d!20763 () Bool)

(declare-fun e!53761 () Bool)

(assert (=> d!20763 e!53761))

(declare-fun res!42756 () Bool)

(assert (=> d!20763 (=> (not res!42756) (not e!53761))))

(declare-fun lt!38545 () ListLongMap!1451)

(assert (=> d!20763 (= res!42756 (contains!745 lt!38545 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun lt!38547 () List!1511)

(assert (=> d!20763 (= lt!38545 (ListLongMap!1452 lt!38547))))

(declare-fun lt!38546 () Unit!2341)

(declare-fun lt!38544 () Unit!2341)

(assert (=> d!20763 (= lt!38546 lt!38544)))

(assert (=> d!20763 (= (getValueByKey!138 lt!38547 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (=> d!20763 (= lt!38544 (lemmaContainsTupThenGetReturnValue!55 lt!38547 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (=> d!20763 (= lt!38547 (insertStrictlySorted!58 (toList!741 call!7531) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (=> d!20763 (= (+!106 call!7531 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))) lt!38545)))

(declare-fun b!82432 () Bool)

(declare-fun res!42755 () Bool)

(assert (=> b!82432 (=> (not res!42755) (not e!53761))))

(assert (=> b!82432 (= res!42755 (= (getValueByKey!138 (toList!741 lt!38545) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(declare-fun b!82433 () Bool)

(assert (=> b!82433 (= e!53761 (contains!746 (toList!741 lt!38545) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(assert (= (and d!20763 res!42756) b!82432))

(assert (= (and b!82432 res!42755) b!82433))

(declare-fun m!85357 () Bool)

(assert (=> d!20763 m!85357))

(declare-fun m!85359 () Bool)

(assert (=> d!20763 m!85359))

(declare-fun m!85361 () Bool)

(assert (=> d!20763 m!85361))

(declare-fun m!85363 () Bool)

(assert (=> d!20763 m!85363))

(declare-fun m!85365 () Bool)

(assert (=> b!82432 m!85365))

(declare-fun m!85367 () Bool)

(assert (=> b!82433 m!85367))

(assert (=> b!80869 d!20763))

(declare-fun d!20765 () Bool)

(declare-fun res!42757 () Bool)

(declare-fun e!53762 () Bool)

(assert (=> d!20765 (=> res!42757 e!53762)))

(assert (=> d!20765 (= res!42757 (and ((_ is Cons!1507) lt!37952) (= (_1!1101 (h!2096 lt!37952)) (_1!1101 lt!37268))))))

(assert (=> d!20765 (= (containsKey!142 lt!37952 (_1!1101 lt!37268)) e!53762)))

(declare-fun b!82434 () Bool)

(declare-fun e!53763 () Bool)

(assert (=> b!82434 (= e!53762 e!53763)))

(declare-fun res!42758 () Bool)

(assert (=> b!82434 (=> (not res!42758) (not e!53763))))

(assert (=> b!82434 (= res!42758 (and (or (not ((_ is Cons!1507) lt!37952)) (bvsle (_1!1101 (h!2096 lt!37952)) (_1!1101 lt!37268))) ((_ is Cons!1507) lt!37952) (bvslt (_1!1101 (h!2096 lt!37952)) (_1!1101 lt!37268))))))

(declare-fun b!82435 () Bool)

(assert (=> b!82435 (= e!53763 (containsKey!142 (t!5178 lt!37952) (_1!1101 lt!37268)))))

(assert (= (and d!20765 (not res!42757)) b!82434))

(assert (= (and b!82434 res!42758) b!82435))

(declare-fun m!85369 () Bool)

(assert (=> b!82435 m!85369))

(assert (=> b!81179 d!20765))

(declare-fun d!20767 () Bool)

(assert (=> d!20767 (isDefined!91 (getValueByKey!138 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!38548 () Unit!2341)

(assert (=> d!20767 (= lt!38548 (choose!477 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!53764 () Bool)

(assert (=> d!20767 e!53764))

(declare-fun res!42759 () Bool)

(assert (=> d!20767 (=> (not res!42759) (not e!53764))))

(assert (=> d!20767 (= res!42759 (isStrictlySorted!296 (toList!741 lt!37534)))))

(assert (=> d!20767 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!38548)))

(declare-fun b!82436 () Bool)

(assert (=> b!82436 (= e!53764 (containsKey!142 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20767 res!42759) b!82436))

(assert (=> d!20767 m!81993))

(assert (=> d!20767 m!82257))

(assert (=> d!20767 m!82257))

(assert (=> d!20767 m!82823))

(assert (=> d!20767 m!81993))

(declare-fun m!85371 () Bool)

(assert (=> d!20767 m!85371))

(assert (=> d!20767 m!84507))

(assert (=> b!82436 m!81993))

(assert (=> b!82436 m!82819))

(assert (=> b!81009 d!20767))

(assert (=> b!81009 d!20023))

(assert (=> b!81009 d!20025))

(assert (=> d!19747 d!19745))

(declare-fun d!20769 () Bool)

(assert (=> d!20769 (= (getValueByKey!138 lt!37514 (_1!1101 lt!37268)) (Some!143 (_2!1101 lt!37268)))))

(assert (=> d!20769 true))

(declare-fun _$22!405 () Unit!2341)

(assert (=> d!20769 (= (choose!470 lt!37514 (_1!1101 lt!37268) (_2!1101 lt!37268)) _$22!405)))

(declare-fun bs!3497 () Bool)

(assert (= bs!3497 d!20769))

(assert (=> bs!3497 m!82061))

(assert (=> d!19747 d!20769))

(declare-fun d!20771 () Bool)

(declare-fun res!42760 () Bool)

(declare-fun e!53765 () Bool)

(assert (=> d!20771 (=> res!42760 e!53765)))

(assert (=> d!20771 (= res!42760 (or ((_ is Nil!1508) lt!37514) ((_ is Nil!1508) (t!5178 lt!37514))))))

(assert (=> d!20771 (= (isStrictlySorted!296 lt!37514) e!53765)))

(declare-fun b!82437 () Bool)

(declare-fun e!53766 () Bool)

(assert (=> b!82437 (= e!53765 e!53766)))

(declare-fun res!42761 () Bool)

(assert (=> b!82437 (=> (not res!42761) (not e!53766))))

(assert (=> b!82437 (= res!42761 (bvslt (_1!1101 (h!2096 lt!37514)) (_1!1101 (h!2096 (t!5178 lt!37514)))))))

(declare-fun b!82438 () Bool)

(assert (=> b!82438 (= e!53766 (isStrictlySorted!296 (t!5178 lt!37514)))))

(assert (= (and d!20771 (not res!42760)) b!82437))

(assert (= (and b!82437 res!42761) b!82438))

(declare-fun m!85373 () Bool)

(assert (=> b!82438 m!85373))

(assert (=> d!19747 d!20771))

(declare-fun d!20773 () Bool)

(assert (=> d!20773 (= (inRange!0 (ite c!12762 (index!3099 lt!37945) (index!3102 lt!37945)) (mask!6299 newMap!16)) (and (bvsge (ite c!12762 (index!3099 lt!37945) (index!3102 lt!37945)) #b00000000000000000000000000000000) (bvslt (ite c!12762 (index!3099 lt!37945) (index!3102 lt!37945)) (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7573 d!20773))

(declare-fun d!20775 () Bool)

(declare-fun c!13128 () Bool)

(assert (=> d!20775 (= c!13128 (and ((_ is Cons!1507) (t!5178 lt!37543)) (= (_1!1101 (h!2096 (t!5178 lt!37543))) (_1!1101 lt!37283))))))

(declare-fun e!53767 () Option!144)

(assert (=> d!20775 (= (getValueByKey!138 (t!5178 lt!37543) (_1!1101 lt!37283)) e!53767)))

(declare-fun b!82440 () Bool)

(declare-fun e!53768 () Option!144)

(assert (=> b!82440 (= e!53767 e!53768)))

(declare-fun c!13129 () Bool)

(assert (=> b!82440 (= c!13129 (and ((_ is Cons!1507) (t!5178 lt!37543)) (not (= (_1!1101 (h!2096 (t!5178 lt!37543))) (_1!1101 lt!37283)))))))

(declare-fun b!82441 () Bool)

(assert (=> b!82441 (= e!53768 (getValueByKey!138 (t!5178 (t!5178 lt!37543)) (_1!1101 lt!37283)))))

(declare-fun b!82442 () Bool)

(assert (=> b!82442 (= e!53768 None!142)))

(declare-fun b!82439 () Bool)

(assert (=> b!82439 (= e!53767 (Some!143 (_2!1101 (h!2096 (t!5178 lt!37543)))))))

(assert (= (and d!20775 c!13128) b!82439))

(assert (= (and d!20775 (not c!13128)) b!82440))

(assert (= (and b!82440 c!13129) b!82441))

(assert (= (and b!82440 (not c!13129)) b!82442))

(declare-fun m!85375 () Bool)

(assert (=> b!82441 m!85375))

(assert (=> b!80975 d!20775))

(declare-fun d!20777 () Bool)

(declare-fun lt!38549 () Bool)

(assert (=> d!20777 (= lt!38549 (select (content!85 (toList!741 lt!37842)) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun e!53770 () Bool)

(assert (=> d!20777 (= lt!38549 e!53770)))

(declare-fun res!42762 () Bool)

(assert (=> d!20777 (=> (not res!42762) (not e!53770))))

(assert (=> d!20777 (= res!42762 ((_ is Cons!1507) (toList!741 lt!37842)))))

(assert (=> d!20777 (= (contains!746 (toList!741 lt!37842) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!38549)))

(declare-fun b!82443 () Bool)

(declare-fun e!53769 () Bool)

(assert (=> b!82443 (= e!53770 e!53769)))

(declare-fun res!42763 () Bool)

(assert (=> b!82443 (=> res!42763 e!53769)))

(assert (=> b!82443 (= res!42763 (= (h!2096 (toList!741 lt!37842)) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!82444 () Bool)

(assert (=> b!82444 (= e!53769 (contains!746 (t!5178 (toList!741 lt!37842)) (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!20777 res!42762) b!82443))

(assert (= (and b!82443 (not res!42763)) b!82444))

(declare-fun m!85377 () Bool)

(assert (=> d!20777 m!85377))

(declare-fun m!85379 () Bool)

(assert (=> d!20777 m!85379))

(declare-fun m!85381 () Bool)

(assert (=> b!82444 m!85381))

(assert (=> b!81004 d!20777))

(declare-fun d!20779 () Bool)

(assert (=> d!20779 (= (apply!80 lt!37673 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1182 (getValueByKey!138 (toList!741 lt!37673) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3498 () Bool)

(assert (= bs!3498 d!20779))

(assert (=> bs!3498 m!84913))

(assert (=> bs!3498 m!84913))

(declare-fun m!85383 () Bool)

(assert (=> bs!3498 m!85383))

(assert (=> b!80859 d!20779))

(assert (=> d!19803 d!19807))

(assert (=> d!19803 d!19801))

(assert (=> d!19803 d!19799))

(assert (=> d!19803 d!19805))

(assert (=> b!80842 d!20711))

(declare-fun b!82445 () Bool)

(declare-fun e!53772 () Bool)

(declare-fun call!7713 () Bool)

(assert (=> b!82445 (= e!53772 call!7713)))

(declare-fun b!82446 () Bool)

(declare-fun e!53771 () Bool)

(assert (=> b!82446 (= e!53771 call!7713)))

(declare-fun bm!7710 () Bool)

(assert (=> bm!7710 (= call!7713 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3957 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992)))))))

(declare-fun b!82447 () Bool)

(assert (=> b!82447 (= e!53772 e!53771)))

(declare-fun lt!38552 () (_ BitVec 64))

(assert (=> b!82447 (= lt!38552 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!38551 () Unit!2341)

(assert (=> b!82447 (= lt!38551 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) lt!38552 #b00000000000000000000000000000000))))

(assert (=> b!82447 (arrayContainsKey!0 (_keys!3957 (v!2608 (underlying!281 thiss!992))) lt!38552 #b00000000000000000000000000000000)))

(declare-fun lt!38550 () Unit!2341)

(assert (=> b!82447 (= lt!38550 lt!38551)))

(declare-fun res!42765 () Bool)

(assert (=> b!82447 (= res!42765 (= (seekEntryOrOpen!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) #b00000000000000000000000000000000) (_keys!3957 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992)))) (Found!241 #b00000000000000000000000000000000)))))

(assert (=> b!82447 (=> (not res!42765) (not e!53771))))

(declare-fun d!20781 () Bool)

(declare-fun res!42764 () Bool)

(declare-fun e!53773 () Bool)

(assert (=> d!20781 (=> res!42764 e!53773)))

(assert (=> d!20781 (= res!42764 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 (v!2608 (underlying!281 thiss!992))))))))

(assert (=> d!20781 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 (v!2608 (underlying!281 thiss!992))) (mask!6299 (v!2608 (underlying!281 thiss!992)))) e!53773)))

(declare-fun b!82448 () Bool)

(assert (=> b!82448 (= e!53773 e!53772)))

(declare-fun c!13130 () Bool)

(assert (=> b!82448 (= c!13130 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!20781 (not res!42764)) b!82448))

(assert (= (and b!82448 c!13130) b!82447))

(assert (= (and b!82448 (not c!13130)) b!82445))

(assert (= (and b!82447 res!42765) b!82446))

(assert (= (or b!82446 b!82445) bm!7710))

(declare-fun m!85385 () Bool)

(assert (=> bm!7710 m!85385))

(assert (=> b!82447 m!83225))

(declare-fun m!85387 () Bool)

(assert (=> b!82447 m!85387))

(declare-fun m!85389 () Bool)

(assert (=> b!82447 m!85389))

(assert (=> b!82447 m!83225))

(declare-fun m!85391 () Bool)

(assert (=> b!82447 m!85391))

(assert (=> b!82448 m!83225))

(assert (=> b!82448 m!83225))

(assert (=> b!82448 m!83229))

(assert (=> b!80723 d!20781))

(declare-fun d!20783 () Bool)

(assert (=> d!20783 (isDefined!91 (getValueByKey!138 (toList!741 lt!37541) (_1!1101 lt!37283)))))

(declare-fun lt!38553 () Unit!2341)

(assert (=> d!20783 (= lt!38553 (choose!477 (toList!741 lt!37541) (_1!1101 lt!37283)))))

(declare-fun e!53774 () Bool)

(assert (=> d!20783 e!53774))

(declare-fun res!42766 () Bool)

(assert (=> d!20783 (=> (not res!42766) (not e!53774))))

(assert (=> d!20783 (= res!42766 (isStrictlySorted!296 (toList!741 lt!37541)))))

(assert (=> d!20783 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37541) (_1!1101 lt!37283)) lt!38553)))

(declare-fun b!82449 () Bool)

(assert (=> b!82449 (= e!53774 (containsKey!142 (toList!741 lt!37541) (_1!1101 lt!37283)))))

(assert (= (and d!20783 res!42766) b!82449))

(assert (=> d!20783 m!82111))

(assert (=> d!20783 m!82111))

(assert (=> d!20783 m!82691))

(declare-fun m!85393 () Bool)

(assert (=> d!20783 m!85393))

(declare-fun m!85395 () Bool)

(assert (=> d!20783 m!85395))

(assert (=> b!82449 m!82687))

(assert (=> b!80970 d!20783))

(assert (=> b!80970 d!20055))

(assert (=> b!80970 d!19851))

(assert (=> d!19919 d!19917))

(declare-fun d!20785 () Bool)

(assert (=> d!20785 (= (getValueByKey!138 lt!37555 (_1!1101 lt!37278)) (Some!143 (_2!1101 lt!37278)))))

(assert (=> d!20785 true))

(declare-fun _$22!406 () Unit!2341)

(assert (=> d!20785 (= (choose!470 lt!37555 (_1!1101 lt!37278) (_2!1101 lt!37278)) _$22!406)))

(declare-fun bs!3499 () Bool)

(assert (= bs!3499 d!20785))

(assert (=> bs!3499 m!82149))

(assert (=> d!19919 d!20785))

(declare-fun d!20787 () Bool)

(declare-fun res!42767 () Bool)

(declare-fun e!53775 () Bool)

(assert (=> d!20787 (=> res!42767 e!53775)))

(assert (=> d!20787 (= res!42767 (or ((_ is Nil!1508) lt!37555) ((_ is Nil!1508) (t!5178 lt!37555))))))

(assert (=> d!20787 (= (isStrictlySorted!296 lt!37555) e!53775)))

(declare-fun b!82450 () Bool)

(declare-fun e!53776 () Bool)

(assert (=> b!82450 (= e!53775 e!53776)))

(declare-fun res!42768 () Bool)

(assert (=> b!82450 (=> (not res!42768) (not e!53776))))

(assert (=> b!82450 (= res!42768 (bvslt (_1!1101 (h!2096 lt!37555)) (_1!1101 (h!2096 (t!5178 lt!37555)))))))

(declare-fun b!82451 () Bool)

(assert (=> b!82451 (= e!53776 (isStrictlySorted!296 (t!5178 lt!37555)))))

(assert (= (and d!20787 (not res!42767)) b!82450))

(assert (= (and b!82450 res!42768) b!82451))

(declare-fun m!85397 () Bool)

(assert (=> b!82451 m!85397))

(assert (=> d!19919 d!20787))

(declare-fun d!20789 () Bool)

(declare-fun lt!38554 () Bool)

(assert (=> d!20789 (= lt!38554 (select (content!85 (toList!741 lt!37869)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun e!53778 () Bool)

(assert (=> d!20789 (= lt!38554 e!53778)))

(declare-fun res!42769 () Bool)

(assert (=> d!20789 (=> (not res!42769) (not e!53778))))

(assert (=> d!20789 (= res!42769 ((_ is Cons!1507) (toList!741 lt!37869)))))

(assert (=> d!20789 (= (contains!746 (toList!741 lt!37869) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!38554)))

(declare-fun b!82452 () Bool)

(declare-fun e!53777 () Bool)

(assert (=> b!82452 (= e!53778 e!53777)))

(declare-fun res!42770 () Bool)

(assert (=> b!82452 (=> res!42770 e!53777)))

(assert (=> b!82452 (= res!42770 (= (h!2096 (toList!741 lt!37869)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!82453 () Bool)

(assert (=> b!82453 (= e!53777 (contains!746 (t!5178 (toList!741 lt!37869)) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!20789 res!42769) b!82452))

(assert (= (and b!82452 (not res!42770)) b!82453))

(declare-fun m!85399 () Bool)

(assert (=> d!20789 m!85399))

(declare-fun m!85401 () Bool)

(assert (=> d!20789 m!85401))

(declare-fun m!85403 () Bool)

(assert (=> b!82453 m!85403))

(assert (=> b!81028 d!20789))

(declare-fun d!20791 () Bool)

(declare-fun lt!38555 () Bool)

(assert (=> d!20791 (= lt!38555 (select (content!85 lt!37510) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(declare-fun e!53780 () Bool)

(assert (=> d!20791 (= lt!38555 e!53780)))

(declare-fun res!42771 () Bool)

(assert (=> d!20791 (=> (not res!42771) (not e!53780))))

(assert (=> d!20791 (= res!42771 ((_ is Cons!1507) lt!37510))))

(assert (=> d!20791 (= (contains!746 lt!37510 (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))) lt!38555)))

(declare-fun b!82454 () Bool)

(declare-fun e!53779 () Bool)

(assert (=> b!82454 (= e!53780 e!53779)))

(declare-fun res!42772 () Bool)

(assert (=> b!82454 (=> res!42772 e!53779)))

(assert (=> b!82454 (= res!42772 (= (h!2096 lt!37510) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(declare-fun b!82455 () Bool)

(assert (=> b!82455 (= e!53779 (contains!746 (t!5178 lt!37510) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))))))

(assert (= (and d!20791 res!42771) b!82454))

(assert (= (and b!82454 (not res!42772)) b!82455))

(declare-fun m!85405 () Bool)

(assert (=> d!20791 m!85405))

(declare-fun m!85407 () Bool)

(assert (=> d!20791 m!85407))

(declare-fun m!85409 () Bool)

(assert (=> b!82455 m!85409))

(assert (=> b!81072 d!20791))

(declare-fun d!20793 () Bool)

(assert (=> d!20793 (= ($colon$colon!70 e!52950 (ite c!12748 (h!2096 (toList!741 lt!37276)) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278)))) (Cons!1507 (ite c!12748 (h!2096 (toList!741 lt!37276)) (tuple2!2181 (_1!1101 lt!37278) (_2!1101 lt!37278))) e!52950))))

(assert (=> bm!7565 d!20793))

(declare-fun d!20795 () Bool)

(declare-fun e!53781 () Bool)

(assert (=> d!20795 e!53781))

(declare-fun res!42773 () Bool)

(assert (=> d!20795 (=> res!42773 e!53781)))

(declare-fun lt!38557 () Bool)

(assert (=> d!20795 (= res!42773 (not lt!38557))))

(declare-fun lt!38556 () Bool)

(assert (=> d!20795 (= lt!38557 lt!38556)))

(declare-fun lt!38559 () Unit!2341)

(declare-fun e!53782 () Unit!2341)

(assert (=> d!20795 (= lt!38559 e!53782)))

(declare-fun c!13131 () Bool)

(assert (=> d!20795 (= c!13131 lt!38556)))

(assert (=> d!20795 (= lt!38556 (containsKey!142 (toList!741 lt!37574) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!20795 (= (contains!745 lt!37574 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!38557)))

(declare-fun b!82456 () Bool)

(declare-fun lt!38558 () Unit!2341)

(assert (=> b!82456 (= e!53782 lt!38558)))

(assert (=> b!82456 (= lt!38558 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37574) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!82456 (isDefined!91 (getValueByKey!138 (toList!741 lt!37574) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!82457 () Bool)

(declare-fun Unit!2417 () Unit!2341)

(assert (=> b!82457 (= e!53782 Unit!2417)))

(declare-fun b!82458 () Bool)

(assert (=> b!82458 (= e!53781 (isDefined!91 (getValueByKey!138 (toList!741 lt!37574) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!20795 c!13131) b!82456))

(assert (= (and d!20795 (not c!13131)) b!82457))

(assert (= (and d!20795 (not res!42773)) b!82458))

(assert (=> d!20795 m!82217))

(declare-fun m!85411 () Bool)

(assert (=> d!20795 m!85411))

(assert (=> b!82456 m!82217))

(declare-fun m!85413 () Bool)

(assert (=> b!82456 m!85413))

(assert (=> b!82456 m!82217))

(assert (=> b!82456 m!83731))

(assert (=> b!82456 m!83731))

(declare-fun m!85415 () Bool)

(assert (=> b!82456 m!85415))

(assert (=> b!82458 m!82217))

(assert (=> b!82458 m!83731))

(assert (=> b!82458 m!83731))

(assert (=> b!82458 m!85415))

(assert (=> b!80657 d!20795))

(declare-fun b!82459 () Bool)

(declare-fun c!13132 () Bool)

(assert (=> b!82459 (= c!13132 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37277))) (bvsgt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37277)))) (_1!1101 lt!37283))))))

(declare-fun e!53783 () List!1511)

(declare-fun e!53784 () List!1511)

(assert (=> b!82459 (= e!53783 e!53784)))

(declare-fun b!82460 () Bool)

(declare-fun call!7714 () List!1511)

(assert (=> b!82460 (= e!53784 call!7714)))

(declare-fun c!13134 () Bool)

(declare-fun e!53785 () List!1511)

(declare-fun b!82461 () Bool)

(assert (=> b!82461 (= e!53785 (ite c!13134 (t!5178 (t!5178 (toList!741 lt!37277))) (ite c!13132 (Cons!1507 (h!2096 (t!5178 (toList!741 lt!37277))) (t!5178 (t!5178 (toList!741 lt!37277)))) Nil!1508)))))

(declare-fun d!20797 () Bool)

(declare-fun e!53787 () Bool)

(assert (=> d!20797 e!53787))

(declare-fun res!42775 () Bool)

(assert (=> d!20797 (=> (not res!42775) (not e!53787))))

(declare-fun lt!38560 () List!1511)

(assert (=> d!20797 (= res!42775 (isStrictlySorted!296 lt!38560))))

(declare-fun e!53786 () List!1511)

(assert (=> d!20797 (= lt!38560 e!53786)))

(declare-fun c!13133 () Bool)

(assert (=> d!20797 (= c!13133 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37277))) (bvslt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37277)))) (_1!1101 lt!37283))))))

(assert (=> d!20797 (isStrictlySorted!296 (t!5178 (toList!741 lt!37277)))))

(assert (=> d!20797 (= (insertStrictlySorted!58 (t!5178 (toList!741 lt!37277)) (_1!1101 lt!37283) (_2!1101 lt!37283)) lt!38560)))

(declare-fun b!82462 () Bool)

(declare-fun call!7716 () List!1511)

(assert (=> b!82462 (= e!53786 call!7716)))

(declare-fun bm!7711 () Bool)

(declare-fun call!7715 () List!1511)

(assert (=> bm!7711 (= call!7715 call!7716)))

(declare-fun bm!7712 () Bool)

(assert (=> bm!7712 (= call!7714 call!7715)))

(declare-fun b!82463 () Bool)

(assert (=> b!82463 (= e!53787 (contains!746 lt!38560 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun b!82464 () Bool)

(assert (=> b!82464 (= e!53786 e!53783)))

(assert (=> b!82464 (= c!13134 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37277))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37277)))) (_1!1101 lt!37283))))))

(declare-fun b!82465 () Bool)

(assert (=> b!82465 (= e!53784 call!7714)))

(declare-fun b!82466 () Bool)

(declare-fun res!42774 () Bool)

(assert (=> b!82466 (=> (not res!42774) (not e!53787))))

(assert (=> b!82466 (= res!42774 (containsKey!142 lt!38560 (_1!1101 lt!37283)))))

(declare-fun bm!7713 () Bool)

(assert (=> bm!7713 (= call!7716 ($colon$colon!70 e!53785 (ite c!13133 (h!2096 (t!5178 (toList!741 lt!37277))) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283)))))))

(declare-fun c!13135 () Bool)

(assert (=> bm!7713 (= c!13135 c!13133)))

(declare-fun b!82467 () Bool)

(assert (=> b!82467 (= e!53785 (insertStrictlySorted!58 (t!5178 (t!5178 (toList!741 lt!37277))) (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(declare-fun b!82468 () Bool)

(assert (=> b!82468 (= e!53783 call!7715)))

(assert (= (and d!20797 c!13133) b!82462))

(assert (= (and d!20797 (not c!13133)) b!82464))

(assert (= (and b!82464 c!13134) b!82468))

(assert (= (and b!82464 (not c!13134)) b!82459))

(assert (= (and b!82459 c!13132) b!82465))

(assert (= (and b!82459 (not c!13132)) b!82460))

(assert (= (or b!82465 b!82460) bm!7712))

(assert (= (or b!82468 bm!7712) bm!7711))

(assert (= (or b!82462 bm!7711) bm!7713))

(assert (= (and bm!7713 c!13135) b!82467))

(assert (= (and bm!7713 (not c!13135)) b!82461))

(assert (= (and d!20797 res!42775) b!82466))

(assert (= (and b!82466 res!42774) b!82463))

(declare-fun m!85417 () Bool)

(assert (=> b!82463 m!85417))

(declare-fun m!85419 () Bool)

(assert (=> b!82466 m!85419))

(declare-fun m!85421 () Bool)

(assert (=> d!20797 m!85421))

(assert (=> d!20797 m!84357))

(declare-fun m!85423 () Bool)

(assert (=> b!82467 m!85423))

(declare-fun m!85425 () Bool)

(assert (=> bm!7713 m!85425))

(assert (=> b!80801 d!20797))

(declare-fun b!82469 () Bool)

(declare-fun c!13136 () Bool)

(assert (=> b!82469 (= c!13136 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37276))) (bvsgt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37276)))) (_1!1101 lt!37283))))))

(declare-fun e!53788 () List!1511)

(declare-fun e!53789 () List!1511)

(assert (=> b!82469 (= e!53788 e!53789)))

(declare-fun b!82470 () Bool)

(declare-fun call!7717 () List!1511)

(assert (=> b!82470 (= e!53789 call!7717)))

(declare-fun e!53790 () List!1511)

(declare-fun b!82471 () Bool)

(declare-fun c!13138 () Bool)

(assert (=> b!82471 (= e!53790 (ite c!13138 (t!5178 (t!5178 (toList!741 lt!37276))) (ite c!13136 (Cons!1507 (h!2096 (t!5178 (toList!741 lt!37276))) (t!5178 (t!5178 (toList!741 lt!37276)))) Nil!1508)))))

(declare-fun d!20799 () Bool)

(declare-fun e!53792 () Bool)

(assert (=> d!20799 e!53792))

(declare-fun res!42777 () Bool)

(assert (=> d!20799 (=> (not res!42777) (not e!53792))))

(declare-fun lt!38561 () List!1511)

(assert (=> d!20799 (= res!42777 (isStrictlySorted!296 lt!38561))))

(declare-fun e!53791 () List!1511)

(assert (=> d!20799 (= lt!38561 e!53791)))

(declare-fun c!13137 () Bool)

(assert (=> d!20799 (= c!13137 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37276))) (bvslt (_1!1101 (h!2096 (t!5178 (toList!741 lt!37276)))) (_1!1101 lt!37283))))))

(assert (=> d!20799 (isStrictlySorted!296 (t!5178 (toList!741 lt!37276)))))

(assert (=> d!20799 (= (insertStrictlySorted!58 (t!5178 (toList!741 lt!37276)) (_1!1101 lt!37283) (_2!1101 lt!37283)) lt!38561)))

(declare-fun b!82472 () Bool)

(declare-fun call!7719 () List!1511)

(assert (=> b!82472 (= e!53791 call!7719)))

(declare-fun bm!7714 () Bool)

(declare-fun call!7718 () List!1511)

(assert (=> bm!7714 (= call!7718 call!7719)))

(declare-fun bm!7715 () Bool)

(assert (=> bm!7715 (= call!7717 call!7718)))

(declare-fun b!82473 () Bool)

(assert (=> b!82473 (= e!53792 (contains!746 lt!38561 (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283))))))

(declare-fun b!82474 () Bool)

(assert (=> b!82474 (= e!53791 e!53788)))

(assert (=> b!82474 (= c!13138 (and ((_ is Cons!1507) (t!5178 (toList!741 lt!37276))) (= (_1!1101 (h!2096 (t!5178 (toList!741 lt!37276)))) (_1!1101 lt!37283))))))

(declare-fun b!82475 () Bool)

(assert (=> b!82475 (= e!53789 call!7717)))

(declare-fun b!82476 () Bool)

(declare-fun res!42776 () Bool)

(assert (=> b!82476 (=> (not res!42776) (not e!53792))))

(assert (=> b!82476 (= res!42776 (containsKey!142 lt!38561 (_1!1101 lt!37283)))))

(declare-fun bm!7716 () Bool)

(assert (=> bm!7716 (= call!7719 ($colon$colon!70 e!53790 (ite c!13137 (h!2096 (t!5178 (toList!741 lt!37276))) (tuple2!2181 (_1!1101 lt!37283) (_2!1101 lt!37283)))))))

(declare-fun c!13139 () Bool)

(assert (=> bm!7716 (= c!13139 c!13137)))

(declare-fun b!82477 () Bool)

(assert (=> b!82477 (= e!53790 (insertStrictlySorted!58 (t!5178 (t!5178 (toList!741 lt!37276))) (_1!1101 lt!37283) (_2!1101 lt!37283)))))

(declare-fun b!82478 () Bool)

(assert (=> b!82478 (= e!53788 call!7718)))

(assert (= (and d!20799 c!13137) b!82472))

(assert (= (and d!20799 (not c!13137)) b!82474))

(assert (= (and b!82474 c!13138) b!82478))

(assert (= (and b!82474 (not c!13138)) b!82469))

(assert (= (and b!82469 c!13136) b!82475))

(assert (= (and b!82469 (not c!13136)) b!82470))

(assert (= (or b!82475 b!82470) bm!7715))

(assert (= (or b!82478 bm!7715) bm!7714))

(assert (= (or b!82472 bm!7714) bm!7716))

(assert (= (and bm!7716 c!13139) b!82477))

(assert (= (and bm!7716 (not c!13139)) b!82471))

(assert (= (and d!20799 res!42777) b!82476))

(assert (= (and b!82476 res!42776) b!82473))

(declare-fun m!85427 () Bool)

(assert (=> b!82473 m!85427))

(declare-fun m!85429 () Bool)

(assert (=> b!82476 m!85429))

(declare-fun m!85431 () Bool)

(assert (=> d!20799 m!85431))

(assert (=> d!20799 m!84543))

(declare-fun m!85433 () Bool)

(assert (=> b!82477 m!85433))

(declare-fun m!85435 () Bool)

(assert (=> bm!7716 m!85435))

(assert (=> b!81103 d!20799))

(declare-fun lt!38562 () Bool)

(declare-fun d!20801 () Bool)

(assert (=> d!20801 (= lt!38562 (select (content!85 (toList!741 lt!37882)) (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun e!53794 () Bool)

(assert (=> d!20801 (= lt!38562 e!53794)))

(declare-fun res!42778 () Bool)

(assert (=> d!20801 (=> (not res!42778) (not e!53794))))

(assert (=> d!20801 (= res!42778 ((_ is Cons!1507) (toList!741 lt!37882)))))

(assert (=> d!20801 (= (contains!746 (toList!741 lt!37882) (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!38562)))

(declare-fun b!82479 () Bool)

(declare-fun e!53793 () Bool)

(assert (=> b!82479 (= e!53794 e!53793)))

(declare-fun res!42779 () Bool)

(assert (=> b!82479 (=> res!42779 e!53793)))

(assert (=> b!82479 (= res!42779 (= (h!2096 (toList!741 lt!37882)) (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(declare-fun b!82480 () Bool)

(assert (=> b!82480 (= e!53793 (contains!746 (t!5178 (toList!741 lt!37882)) (tuple2!2181 lt!37494 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))

(assert (= (and d!20801 res!42778) b!82479))

(assert (= (and b!82479 (not res!42779)) b!82480))

(declare-fun m!85437 () Bool)

(assert (=> d!20801 m!85437))

(declare-fun m!85439 () Bool)

(assert (=> d!20801 m!85439))

(declare-fun m!85441 () Bool)

(assert (=> b!82480 m!85441))

(assert (=> b!81044 d!20801))

(declare-fun d!20803 () Bool)

(declare-fun lt!38563 () Bool)

(assert (=> d!20803 (= lt!38563 (select (content!85 (t!5178 (toList!741 lt!37549))) lt!37283))))

(declare-fun e!53796 () Bool)

(assert (=> d!20803 (= lt!38563 e!53796)))

(declare-fun res!42780 () Bool)

(assert (=> d!20803 (=> (not res!42780) (not e!53796))))

(assert (=> d!20803 (= res!42780 ((_ is Cons!1507) (t!5178 (toList!741 lt!37549))))))

(assert (=> d!20803 (= (contains!746 (t!5178 (toList!741 lt!37549)) lt!37283) lt!38563)))

(declare-fun b!82481 () Bool)

(declare-fun e!53795 () Bool)

(assert (=> b!82481 (= e!53796 e!53795)))

(declare-fun res!42781 () Bool)

(assert (=> b!82481 (=> res!42781 e!53795)))

(assert (=> b!82481 (= res!42781 (= (h!2096 (t!5178 (toList!741 lt!37549))) lt!37283))))

(declare-fun b!82482 () Bool)

(assert (=> b!82482 (= e!53795 (contains!746 (t!5178 (t!5178 (toList!741 lt!37549))) lt!37283))))

(assert (= (and d!20803 res!42780) b!82481))

(assert (= (and b!82481 (not res!42781)) b!82482))

(assert (=> d!20803 m!83201))

(declare-fun m!85443 () Bool)

(assert (=> d!20803 m!85443))

(declare-fun m!85445 () Bool)

(assert (=> b!82482 m!85445))

(assert (=> b!81026 d!20803))

(declare-fun d!20805 () Bool)

(declare-fun res!42782 () Bool)

(declare-fun e!53797 () Bool)

(assert (=> d!20805 (=> res!42782 e!53797)))

(assert (=> d!20805 (= res!42782 (and ((_ is Cons!1507) (toList!741 lt!37487)) (= (_1!1101 (h!2096 (toList!741 lt!37487))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20805 (= (containsKey!142 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000) e!53797)))

(declare-fun b!82483 () Bool)

(declare-fun e!53798 () Bool)

(assert (=> b!82483 (= e!53797 e!53798)))

(declare-fun res!42783 () Bool)

(assert (=> b!82483 (=> (not res!42783) (not e!53798))))

(assert (=> b!82483 (= res!42783 (and (or (not ((_ is Cons!1507) (toList!741 lt!37487))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37487))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1507) (toList!741 lt!37487)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37487))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82484 () Bool)

(assert (=> b!82484 (= e!53798 (containsKey!142 (t!5178 (toList!741 lt!37487)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20805 (not res!42782)) b!82483))

(assert (= (and b!82483 res!42783) b!82484))

(declare-fun m!85447 () Bool)

(assert (=> b!82484 m!85447))

(assert (=> d!19937 d!20805))

(assert (=> b!80928 d!19925))

(declare-fun d!20807 () Bool)

(declare-fun res!42784 () Bool)

(declare-fun e!53799 () Bool)

(assert (=> d!20807 (=> res!42784 e!53799)))

(assert (=> d!20807 (= res!42784 (or ((_ is Nil!1508) lt!37631) ((_ is Nil!1508) (t!5178 lt!37631))))))

(assert (=> d!20807 (= (isStrictlySorted!296 lt!37631) e!53799)))

(declare-fun b!82485 () Bool)

(declare-fun e!53800 () Bool)

(assert (=> b!82485 (= e!53799 e!53800)))

(declare-fun res!42785 () Bool)

(assert (=> b!82485 (=> (not res!42785) (not e!53800))))

(assert (=> b!82485 (= res!42785 (bvslt (_1!1101 (h!2096 lt!37631)) (_1!1101 (h!2096 (t!5178 lt!37631)))))))

(declare-fun b!82486 () Bool)

(assert (=> b!82486 (= e!53800 (isStrictlySorted!296 (t!5178 lt!37631)))))

(assert (= (and d!20807 (not res!42784)) b!82485))

(assert (= (and b!82485 res!42785) b!82486))

(declare-fun m!85449 () Bool)

(assert (=> b!82486 m!85449))

(assert (=> d!19749 d!20807))

(assert (=> d!19749 d!20571))

(declare-fun d!20809 () Bool)

(declare-fun e!53801 () Bool)

(assert (=> d!20809 e!53801))

(declare-fun res!42786 () Bool)

(assert (=> d!20809 (=> res!42786 e!53801)))

(declare-fun lt!38565 () Bool)

(assert (=> d!20809 (= res!42786 (not lt!38565))))

(declare-fun lt!38564 () Bool)

(assert (=> d!20809 (= lt!38565 lt!38564)))

(declare-fun lt!38567 () Unit!2341)

(declare-fun e!53802 () Unit!2341)

(assert (=> d!20809 (= lt!38567 e!53802)))

(declare-fun c!13140 () Bool)

(assert (=> d!20809 (= c!13140 lt!38564)))

(assert (=> d!20809 (= lt!38564 (containsKey!142 (toList!741 lt!37610) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20809 (= (contains!745 lt!37610 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38565)))

(declare-fun b!82487 () Bool)

(declare-fun lt!38566 () Unit!2341)

(assert (=> b!82487 (= e!53802 lt!38566)))

(assert (=> b!82487 (= lt!38566 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37610) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> b!82487 (isDefined!91 (getValueByKey!138 (toList!741 lt!37610) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!82488 () Bool)

(declare-fun Unit!2418 () Unit!2341)

(assert (=> b!82488 (= e!53802 Unit!2418)))

(declare-fun b!82489 () Bool)

(assert (=> b!82489 (= e!53801 (isDefined!91 (getValueByKey!138 (toList!741 lt!37610) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (= (and d!20809 c!13140) b!82487))

(assert (= (and d!20809 (not c!13140)) b!82488))

(assert (= (and d!20809 (not res!42786)) b!82489))

(declare-fun m!85451 () Bool)

(assert (=> d!20809 m!85451))

(declare-fun m!85453 () Bool)

(assert (=> b!82487 m!85453))

(assert (=> b!82487 m!82335))

(assert (=> b!82487 m!82335))

(declare-fun m!85455 () Bool)

(assert (=> b!82487 m!85455))

(assert (=> b!82489 m!82335))

(assert (=> b!82489 m!82335))

(assert (=> b!82489 m!85455))

(assert (=> d!19719 d!20809))

(declare-fun c!13141 () Bool)

(declare-fun d!20811 () Bool)

(assert (=> d!20811 (= c!13141 (and ((_ is Cons!1507) lt!37612) (= (_1!1101 (h!2096 lt!37612)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53803 () Option!144)

(assert (=> d!20811 (= (getValueByKey!138 lt!37612 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) e!53803)))

(declare-fun b!82491 () Bool)

(declare-fun e!53804 () Option!144)

(assert (=> b!82491 (= e!53803 e!53804)))

(declare-fun c!13142 () Bool)

(assert (=> b!82491 (= c!13142 (and ((_ is Cons!1507) lt!37612) (not (= (_1!1101 (h!2096 lt!37612)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!82492 () Bool)

(assert (=> b!82492 (= e!53804 (getValueByKey!138 (t!5178 lt!37612) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!82493 () Bool)

(assert (=> b!82493 (= e!53804 None!142)))

(declare-fun b!82490 () Bool)

(assert (=> b!82490 (= e!53803 (Some!143 (_2!1101 (h!2096 lt!37612))))))

(assert (= (and d!20811 c!13141) b!82490))

(assert (= (and d!20811 (not c!13141)) b!82491))

(assert (= (and b!82491 c!13142) b!82492))

(assert (= (and b!82491 (not c!13142)) b!82493))

(declare-fun m!85457 () Bool)

(assert (=> b!82492 m!85457))

(assert (=> d!19719 d!20811))

(declare-fun d!20813 () Bool)

(assert (=> d!20813 (= (getValueByKey!138 lt!37612 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (Some!143 (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun lt!38568 () Unit!2341)

(assert (=> d!20813 (= lt!38568 (choose!470 lt!37612 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun e!53805 () Bool)

(assert (=> d!20813 e!53805))

(declare-fun res!42787 () Bool)

(assert (=> d!20813 (=> (not res!42787) (not e!53805))))

(assert (=> d!20813 (= res!42787 (isStrictlySorted!296 lt!37612))))

(assert (=> d!20813 (= (lemmaContainsTupThenGetReturnValue!55 lt!37612 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38568)))

(declare-fun b!82494 () Bool)

(declare-fun res!42788 () Bool)

(assert (=> b!82494 (=> (not res!42788) (not e!53805))))

(assert (=> b!82494 (= res!42788 (containsKey!142 lt!37612 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!82495 () Bool)

(assert (=> b!82495 (= e!53805 (contains!746 lt!37612 (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (= (and d!20813 res!42787) b!82494))

(assert (= (and b!82494 res!42788) b!82495))

(assert (=> d!20813 m!82329))

(declare-fun m!85459 () Bool)

(assert (=> d!20813 m!85459))

(declare-fun m!85461 () Bool)

(assert (=> d!20813 m!85461))

(declare-fun m!85463 () Bool)

(assert (=> b!82494 m!85463))

(declare-fun m!85465 () Bool)

(assert (=> b!82495 m!85465))

(assert (=> d!19719 d!20813))

(declare-fun b!82496 () Bool)

(declare-fun c!13143 () Bool)

(assert (=> b!82496 (= c!13143 (and ((_ is Cons!1507) (toList!741 call!7470)) (bvsgt (_1!1101 (h!2096 (toList!741 call!7470))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53806 () List!1511)

(declare-fun e!53807 () List!1511)

(assert (=> b!82496 (= e!53806 e!53807)))

(declare-fun b!82497 () Bool)

(declare-fun call!7720 () List!1511)

(assert (=> b!82497 (= e!53807 call!7720)))

(declare-fun b!82498 () Bool)

(declare-fun c!13145 () Bool)

(declare-fun e!53808 () List!1511)

(assert (=> b!82498 (= e!53808 (ite c!13145 (t!5178 (toList!741 call!7470)) (ite c!13143 (Cons!1507 (h!2096 (toList!741 call!7470)) (t!5178 (toList!741 call!7470))) Nil!1508)))))

(declare-fun d!20815 () Bool)

(declare-fun e!53810 () Bool)

(assert (=> d!20815 e!53810))

(declare-fun res!42790 () Bool)

(assert (=> d!20815 (=> (not res!42790) (not e!53810))))

(declare-fun lt!38569 () List!1511)

(assert (=> d!20815 (= res!42790 (isStrictlySorted!296 lt!38569))))

(declare-fun e!53809 () List!1511)

(assert (=> d!20815 (= lt!38569 e!53809)))

(declare-fun c!13144 () Bool)

(assert (=> d!20815 (= c!13144 (and ((_ is Cons!1507) (toList!741 call!7470)) (bvslt (_1!1101 (h!2096 (toList!741 call!7470))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(assert (=> d!20815 (isStrictlySorted!296 (toList!741 call!7470))))

(assert (=> d!20815 (= (insertStrictlySorted!58 (toList!741 call!7470) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) lt!38569)))

(declare-fun b!82499 () Bool)

(declare-fun call!7722 () List!1511)

(assert (=> b!82499 (= e!53809 call!7722)))

(declare-fun bm!7717 () Bool)

(declare-fun call!7721 () List!1511)

(assert (=> bm!7717 (= call!7721 call!7722)))

(declare-fun bm!7718 () Bool)

(assert (=> bm!7718 (= call!7720 call!7721)))

(declare-fun b!82500 () Bool)

(assert (=> b!82500 (= e!53810 (contains!746 lt!38569 (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!82501 () Bool)

(assert (=> b!82501 (= e!53809 e!53806)))

(assert (=> b!82501 (= c!13145 (and ((_ is Cons!1507) (toList!741 call!7470)) (= (_1!1101 (h!2096 (toList!741 call!7470))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun b!82502 () Bool)

(assert (=> b!82502 (= e!53807 call!7720)))

(declare-fun b!82503 () Bool)

(declare-fun res!42789 () Bool)

(assert (=> b!82503 (=> (not res!42789) (not e!53810))))

(assert (=> b!82503 (= res!42789 (containsKey!142 lt!38569 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun bm!7719 () Bool)

(assert (=> bm!7719 (= call!7722 ($colon$colon!70 e!53808 (ite c!13144 (h!2096 (toList!741 call!7470)) (tuple2!2181 (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun c!13146 () Bool)

(assert (=> bm!7719 (= c!13146 c!13144)))

(declare-fun b!82504 () Bool)

(assert (=> b!82504 (= e!53808 (insertStrictlySorted!58 (t!5178 (toList!741 call!7470)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)) (_2!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!82505 () Bool)

(assert (=> b!82505 (= e!53806 call!7721)))

(assert (= (and d!20815 c!13144) b!82499))

(assert (= (and d!20815 (not c!13144)) b!82501))

(assert (= (and b!82501 c!13145) b!82505))

(assert (= (and b!82501 (not c!13145)) b!82496))

(assert (= (and b!82496 c!13143) b!82502))

(assert (= (and b!82496 (not c!13143)) b!82497))

(assert (= (or b!82502 b!82497) bm!7718))

(assert (= (or b!82505 bm!7718) bm!7717))

(assert (= (or b!82499 bm!7717) bm!7719))

(assert (= (and bm!7719 c!13146) b!82504))

(assert (= (and bm!7719 (not c!13146)) b!82498))

(assert (= (and d!20815 res!42790) b!82503))

(assert (= (and b!82503 res!42789) b!82500))

(declare-fun m!85467 () Bool)

(assert (=> b!82500 m!85467))

(declare-fun m!85469 () Bool)

(assert (=> b!82503 m!85469))

(declare-fun m!85471 () Bool)

(assert (=> d!20815 m!85471))

(declare-fun m!85473 () Bool)

(assert (=> d!20815 m!85473))

(declare-fun m!85475 () Bool)

(assert (=> b!82504 m!85475))

(declare-fun m!85477 () Bool)

(assert (=> bm!7719 m!85477))

(assert (=> d!19719 d!20815))

(assert (=> b!81018 d!20613))

(assert (=> b!81018 d!20615))

(declare-fun d!20817 () Bool)

(declare-fun res!42791 () Bool)

(declare-fun e!53811 () Bool)

(assert (=> d!20817 (=> res!42791 e!53811)))

(assert (=> d!20817 (= res!42791 (and ((_ is Cons!1507) (toList!741 lt!37534)) (= (_1!1101 (h!2096 (toList!741 lt!37534))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!20817 (= (containsKey!142 (toList!741 lt!37534) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53811)))

(declare-fun b!82506 () Bool)

(declare-fun e!53812 () Bool)

(assert (=> b!82506 (= e!53811 e!53812)))

(declare-fun res!42792 () Bool)

(assert (=> b!82506 (=> (not res!42792) (not e!53812))))

(assert (=> b!82506 (= res!42792 (and (or (not ((_ is Cons!1507) (toList!741 lt!37534))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37534))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1507) (toList!741 lt!37534)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37534))) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!82507 () Bool)

(assert (=> b!82507 (= e!53812 (containsKey!142 (t!5178 (toList!741 lt!37534)) (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20817 (not res!42791)) b!82506))

(assert (= (and b!82506 res!42792) b!82507))

(assert (=> b!82507 m!81993))

(declare-fun m!85479 () Bool)

(assert (=> b!82507 m!85479))

(assert (=> d!19825 d!20817))

(declare-fun d!20819 () Bool)

(assert (=> d!20819 (= (get!1182 (getValueByKey!138 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2612 (getValueByKey!138 (toList!741 lt!37487) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19883 d!20819))

(assert (=> d!19883 d!20069))

(declare-fun d!20821 () Bool)

(declare-fun lt!38570 () Bool)

(assert (=> d!20821 (= lt!38570 (select (content!85 lt!37559) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(declare-fun e!53814 () Bool)

(assert (=> d!20821 (= lt!38570 e!53814)))

(declare-fun res!42793 () Bool)

(assert (=> d!20821 (=> (not res!42793) (not e!53814))))

(assert (=> d!20821 (= res!42793 ((_ is Cons!1507) lt!37559))))

(assert (=> d!20821 (= (contains!746 lt!37559 (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))) lt!38570)))

(declare-fun b!82508 () Bool)

(declare-fun e!53813 () Bool)

(assert (=> b!82508 (= e!53814 e!53813)))

(declare-fun res!42794 () Bool)

(assert (=> b!82508 (=> res!42794 e!53813)))

(assert (=> b!82508 (= res!42794 (= (h!2096 lt!37559) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(declare-fun b!82509 () Bool)

(assert (=> b!82509 (= e!53813 (contains!746 (t!5178 lt!37559) (tuple2!2181 (_1!1101 lt!37268) (_2!1101 lt!37268))))))

(assert (= (and d!20821 res!42793) b!82508))

(assert (= (and b!82508 (not res!42794)) b!82509))

(declare-fun m!85481 () Bool)

(assert (=> d!20821 m!85481))

(declare-fun m!85483 () Bool)

(assert (=> d!20821 m!85483))

(declare-fun m!85485 () Bool)

(assert (=> b!82509 m!85485))

(assert (=> b!81171 d!20821))

(declare-fun d!20823 () Bool)

(declare-fun e!53815 () Bool)

(assert (=> d!20823 e!53815))

(declare-fun res!42795 () Bool)

(assert (=> d!20823 (=> res!42795 e!53815)))

(declare-fun lt!38572 () Bool)

(assert (=> d!20823 (= res!42795 (not lt!38572))))

(declare-fun lt!38571 () Bool)

(assert (=> d!20823 (= lt!38572 lt!38571)))

(declare-fun lt!38574 () Unit!2341)

(declare-fun e!53816 () Unit!2341)

(assert (=> d!20823 (= lt!38574 e!53816)))

(declare-fun c!13147 () Bool)

(assert (=> d!20823 (= c!13147 lt!38571)))

(assert (=> d!20823 (= lt!38571 (containsKey!142 (toList!741 lt!37842) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!20823 (= (contains!745 lt!37842 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38572)))

(declare-fun b!82510 () Bool)

(declare-fun lt!38573 () Unit!2341)

(assert (=> b!82510 (= e!53816 lt!38573)))

(assert (=> b!82510 (= lt!38573 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37842) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> b!82510 (isDefined!91 (getValueByKey!138 (toList!741 lt!37842) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82511 () Bool)

(declare-fun Unit!2419 () Unit!2341)

(assert (=> b!82511 (= e!53816 Unit!2419)))

(declare-fun b!82512 () Bool)

(assert (=> b!82512 (= e!53815 (isDefined!91 (getValueByKey!138 (toList!741 lt!37842) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20823 c!13147) b!82510))

(assert (= (and d!20823 (not c!13147)) b!82511))

(assert (= (and d!20823 (not res!42795)) b!82512))

(declare-fun m!85487 () Bool)

(assert (=> d!20823 m!85487))

(declare-fun m!85489 () Bool)

(assert (=> b!82510 m!85489))

(assert (=> b!82510 m!82791))

(assert (=> b!82510 m!82791))

(declare-fun m!85491 () Bool)

(assert (=> b!82510 m!85491))

(assert (=> b!82512 m!82791))

(assert (=> b!82512 m!82791))

(assert (=> b!82512 m!85491))

(assert (=> d!19815 d!20823))

(declare-fun d!20825 () Bool)

(declare-fun c!13148 () Bool)

(assert (=> d!20825 (= c!13148 (and ((_ is Cons!1507) lt!37844) (= (_1!1101 (h!2096 lt!37844)) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53817 () Option!144)

(assert (=> d!20825 (= (getValueByKey!138 lt!37844 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53817)))

(declare-fun b!82514 () Bool)

(declare-fun e!53818 () Option!144)

(assert (=> b!82514 (= e!53817 e!53818)))

(declare-fun c!13149 () Bool)

(assert (=> b!82514 (= c!13149 (and ((_ is Cons!1507) lt!37844) (not (= (_1!1101 (h!2096 lt!37844)) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!82515 () Bool)

(assert (=> b!82515 (= e!53818 (getValueByKey!138 (t!5178 lt!37844) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82516 () Bool)

(assert (=> b!82516 (= e!53818 None!142)))

(declare-fun b!82513 () Bool)

(assert (=> b!82513 (= e!53817 (Some!143 (_2!1101 (h!2096 lt!37844))))))

(assert (= (and d!20825 c!13148) b!82513))

(assert (= (and d!20825 (not c!13148)) b!82514))

(assert (= (and b!82514 c!13149) b!82515))

(assert (= (and b!82514 (not c!13149)) b!82516))

(declare-fun m!85493 () Bool)

(assert (=> b!82515 m!85493))

(assert (=> d!19815 d!20825))

(declare-fun d!20827 () Bool)

(assert (=> d!20827 (= (getValueByKey!138 lt!37844 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!38575 () Unit!2341)

(assert (=> d!20827 (= lt!38575 (choose!470 lt!37844 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun e!53819 () Bool)

(assert (=> d!20827 e!53819))

(declare-fun res!42796 () Bool)

(assert (=> d!20827 (=> (not res!42796) (not e!53819))))

(assert (=> d!20827 (= res!42796 (isStrictlySorted!296 lt!37844))))

(assert (=> d!20827 (= (lemmaContainsTupThenGetReturnValue!55 lt!37844 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38575)))

(declare-fun b!82517 () Bool)

(declare-fun res!42797 () Bool)

(assert (=> b!82517 (=> (not res!42797) (not e!53819))))

(assert (=> b!82517 (= res!42797 (containsKey!142 lt!37844 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82518 () Bool)

(assert (=> b!82518 (= e!53819 (contains!746 lt!37844 (tuple2!2181 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20827 res!42796) b!82517))

(assert (= (and b!82517 res!42797) b!82518))

(assert (=> d!20827 m!82785))

(declare-fun m!85495 () Bool)

(assert (=> d!20827 m!85495))

(declare-fun m!85497 () Bool)

(assert (=> d!20827 m!85497))

(declare-fun m!85499 () Bool)

(assert (=> b!82517 m!85499))

(declare-fun m!85501 () Bool)

(assert (=> b!82518 m!85501))

(assert (=> d!19815 d!20827))

(declare-fun b!82519 () Bool)

(declare-fun c!13150 () Bool)

(assert (=> b!82519 (= c!13150 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (bvsgt (_1!1101 (h!2096 (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53820 () List!1511)

(declare-fun e!53821 () List!1511)

(assert (=> b!82519 (= e!53820 e!53821)))

(declare-fun b!82520 () Bool)

(declare-fun call!7723 () List!1511)

(assert (=> b!82520 (= e!53821 call!7723)))

(declare-fun b!82521 () Bool)

(declare-fun e!53822 () List!1511)

(declare-fun c!13152 () Bool)

(assert (=> b!82521 (= e!53822 (ite c!13152 (t!5178 (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (ite c!13150 (Cons!1507 (h!2096 (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (t!5178 (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))) Nil!1508)))))

(declare-fun d!20829 () Bool)

(declare-fun e!53824 () Bool)

(assert (=> d!20829 e!53824))

(declare-fun res!42799 () Bool)

(assert (=> d!20829 (=> (not res!42799) (not e!53824))))

(declare-fun lt!38576 () List!1511)

(assert (=> d!20829 (= res!42799 (isStrictlySorted!296 lt!38576))))

(declare-fun e!53823 () List!1511)

(assert (=> d!20829 (= lt!38576 e!53823)))

(declare-fun c!13151 () Bool)

(assert (=> d!20829 (= c!13151 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (bvslt (_1!1101 (h!2096 (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!20829 (isStrictlySorted!296 (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(assert (=> d!20829 (= (insertStrictlySorted!58 (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38576)))

(declare-fun b!82522 () Bool)

(declare-fun call!7725 () List!1511)

(assert (=> b!82522 (= e!53823 call!7725)))

(declare-fun bm!7720 () Bool)

(declare-fun call!7724 () List!1511)

(assert (=> bm!7720 (= call!7724 call!7725)))

(declare-fun bm!7721 () Bool)

(assert (=> bm!7721 (= call!7723 call!7724)))

(declare-fun b!82523 () Bool)

(assert (=> b!82523 (= e!53824 (contains!746 lt!38576 (tuple2!2181 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82524 () Bool)

(assert (=> b!82524 (= e!53823 e!53820)))

(assert (=> b!82524 (= c!13152 (and ((_ is Cons!1507) (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (= (_1!1101 (h!2096 (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82525 () Bool)

(assert (=> b!82525 (= e!53821 call!7723)))

(declare-fun b!82526 () Bool)

(declare-fun res!42798 () Bool)

(assert (=> b!82526 (=> (not res!42798) (not e!53824))))

(assert (=> b!82526 (= res!42798 (containsKey!142 lt!38576 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun bm!7722 () Bool)

(assert (=> bm!7722 (= call!7725 ($colon$colon!70 e!53822 (ite c!13151 (h!2096 (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (tuple2!2181 (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun c!13153 () Bool)

(assert (=> bm!7722 (= c!13153 c!13151)))

(declare-fun b!82527 () Bool)

(assert (=> b!82527 (= e!53822 (insertStrictlySorted!58 (t!5178 (toList!741 (+!106 lt!37277 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))) (_1!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82528 () Bool)

(assert (=> b!82528 (= e!53820 call!7724)))

(assert (= (and d!20829 c!13151) b!82522))

(assert (= (and d!20829 (not c!13151)) b!82524))

(assert (= (and b!82524 c!13152) b!82528))

(assert (= (and b!82524 (not c!13152)) b!82519))

(assert (= (and b!82519 c!13150) b!82525))

(assert (= (and b!82519 (not c!13150)) b!82520))

(assert (= (or b!82525 b!82520) bm!7721))

(assert (= (or b!82528 bm!7721) bm!7720))

(assert (= (or b!82522 bm!7720) bm!7722))

(assert (= (and bm!7722 c!13153) b!82527))

(assert (= (and bm!7722 (not c!13153)) b!82521))

(assert (= (and d!20829 res!42799) b!82526))

(assert (= (and b!82526 res!42798) b!82523))

(declare-fun m!85503 () Bool)

(assert (=> b!82523 m!85503))

(declare-fun m!85505 () Bool)

(assert (=> b!82526 m!85505))

(declare-fun m!85507 () Bool)

(assert (=> d!20829 m!85507))

(declare-fun m!85509 () Bool)

(assert (=> d!20829 m!85509))

(declare-fun m!85511 () Bool)

(assert (=> b!82527 m!85511))

(declare-fun m!85513 () Bool)

(assert (=> bm!7722 m!85513))

(assert (=> d!19815 d!20829))

(assert (=> b!80672 d!20639))

(assert (=> b!80672 d!20641))

(assert (=> b!80811 d!20631))

(assert (=> b!80811 d!20633))

(declare-fun b!82529 () Bool)

(declare-fun e!53826 () Bool)

(declare-fun call!7726 () Bool)

(assert (=> b!82529 (= e!53826 call!7726)))

(declare-fun bm!7723 () Bool)

(declare-fun c!13154 () Bool)

(assert (=> bm!7723 (= call!7726 (arrayNoDuplicates!0 (_keys!3957 (_2!1100 lt!37429)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13154 (Cons!1508 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000) Nil!1509) Nil!1509)))))

(declare-fun b!82530 () Bool)

(assert (=> b!82530 (= e!53826 call!7726)))

(declare-fun b!82531 () Bool)

(declare-fun e!53825 () Bool)

(assert (=> b!82531 (= e!53825 e!53826)))

(assert (=> b!82531 (= c!13154 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000)))))

(declare-fun b!82533 () Bool)

(declare-fun e!53828 () Bool)

(assert (=> b!82533 (= e!53828 (contains!747 Nil!1509 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000)))))

(declare-fun b!82532 () Bool)

(declare-fun e!53827 () Bool)

(assert (=> b!82532 (= e!53827 e!53825)))

(declare-fun res!42801 () Bool)

(assert (=> b!82532 (=> (not res!42801) (not e!53825))))

(assert (=> b!82532 (= res!42801 (not e!53828))))

(declare-fun res!42800 () Bool)

(assert (=> b!82532 (=> (not res!42800) (not e!53828))))

(assert (=> b!82532 (= res!42800 (validKeyInArray!0 (select (arr!1901 (_keys!3957 (_2!1100 lt!37429))) #b00000000000000000000000000000000)))))

(declare-fun d!20831 () Bool)

(declare-fun res!42802 () Bool)

(assert (=> d!20831 (=> res!42802 e!53827)))

(assert (=> d!20831 (= res!42802 (bvsge #b00000000000000000000000000000000 (size!2143 (_keys!3957 (_2!1100 lt!37429)))))))

(assert (=> d!20831 (= (arrayNoDuplicates!0 (_keys!3957 (_2!1100 lt!37429)) #b00000000000000000000000000000000 Nil!1509) e!53827)))

(assert (= (and d!20831 (not res!42802)) b!82532))

(assert (= (and b!82532 res!42800) b!82533))

(assert (= (and b!82532 res!42801) b!82531))

(assert (= (and b!82531 c!13154) b!82529))

(assert (= (and b!82531 (not c!13154)) b!82530))

(assert (= (or b!82529 b!82530) bm!7723))

(assert (=> bm!7723 m!83493))

(declare-fun m!85515 () Bool)

(assert (=> bm!7723 m!85515))

(assert (=> b!82531 m!83493))

(assert (=> b!82531 m!83493))

(assert (=> b!82531 m!83541))

(assert (=> b!82533 m!83493))

(assert (=> b!82533 m!83493))

(declare-fun m!85517 () Bool)

(assert (=> b!82533 m!85517))

(assert (=> b!82532 m!83493))

(assert (=> b!82532 m!83493))

(assert (=> b!82532 m!83541))

(assert (=> b!81202 d!20831))

(declare-fun d!20833 () Bool)

(declare-fun e!53829 () Bool)

(assert (=> d!20833 e!53829))

(declare-fun res!42804 () Bool)

(assert (=> d!20833 (=> (not res!42804) (not e!53829))))

(declare-fun lt!38578 () ListLongMap!1451)

(assert (=> d!20833 (= res!42804 (contains!745 lt!38578 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun lt!38580 () List!1511)

(assert (=> d!20833 (= lt!38578 (ListLongMap!1452 lt!38580))))

(declare-fun lt!38579 () Unit!2341)

(declare-fun lt!38577 () Unit!2341)

(assert (=> d!20833 (= lt!38579 lt!38577)))

(assert (=> d!20833 (= (getValueByKey!138 lt!38580 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (=> d!20833 (= lt!38577 (lemmaContainsTupThenGetReturnValue!55 lt!38580 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (=> d!20833 (= lt!38580 (insertStrictlySorted!58 (toList!741 call!7508) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (=> d!20833 (= (+!106 call!7508 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))) lt!38578)))

(declare-fun b!82534 () Bool)

(declare-fun res!42803 () Bool)

(assert (=> b!82534 (=> (not res!42803) (not e!53829))))

(assert (=> b!82534 (= res!42803 (= (getValueByKey!138 (toList!741 lt!38578) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(declare-fun b!82535 () Bool)

(assert (=> b!82535 (= e!53829 (contains!746 (toList!741 lt!38578) (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(assert (= (and d!20833 res!42804) b!82534))

(assert (= (and b!82534 res!42803) b!82535))

(declare-fun m!85519 () Bool)

(assert (=> d!20833 m!85519))

(declare-fun m!85521 () Bool)

(assert (=> d!20833 m!85521))

(declare-fun m!85523 () Bool)

(assert (=> d!20833 m!85523))

(declare-fun m!85525 () Bool)

(assert (=> d!20833 m!85525))

(declare-fun m!85527 () Bool)

(assert (=> b!82534 m!85527))

(declare-fun m!85529 () Bool)

(assert (=> b!82535 m!85529))

(assert (=> b!80704 d!20833))

(declare-fun d!20835 () Bool)

(declare-fun e!53830 () Bool)

(assert (=> d!20835 e!53830))

(declare-fun res!42805 () Bool)

(assert (=> d!20835 (=> res!42805 e!53830)))

(declare-fun lt!38582 () Bool)

(assert (=> d!20835 (= res!42805 (not lt!38582))))

(declare-fun lt!38581 () Bool)

(assert (=> d!20835 (= lt!38582 lt!38581)))

(declare-fun lt!38584 () Unit!2341)

(declare-fun e!53831 () Unit!2341)

(assert (=> d!20835 (= lt!38584 e!53831)))

(declare-fun c!13155 () Bool)

(assert (=> d!20835 (= c!13155 lt!38581)))

(assert (=> d!20835 (= lt!38581 (containsKey!142 (toList!741 lt!37785) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20835 (= (contains!745 lt!37785 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38582)))

(declare-fun b!82536 () Bool)

(declare-fun lt!38583 () Unit!2341)

(assert (=> b!82536 (= e!53831 lt!38583)))

(assert (=> b!82536 (= lt!38583 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37785) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82536 (isDefined!91 (getValueByKey!138 (toList!741 lt!37785) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82537 () Bool)

(declare-fun Unit!2420 () Unit!2341)

(assert (=> b!82537 (= e!53831 Unit!2420)))

(declare-fun b!82538 () Bool)

(assert (=> b!82538 (= e!53830 (isDefined!91 (getValueByKey!138 (toList!741 lt!37785) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20835 c!13155) b!82536))

(assert (= (and d!20835 (not c!13155)) b!82537))

(assert (= (and d!20835 (not res!42805)) b!82538))

(declare-fun m!85531 () Bool)

(assert (=> d!20835 m!85531))

(declare-fun m!85533 () Bool)

(assert (=> b!82536 m!85533))

(assert (=> b!82536 m!83215))

(assert (=> b!82536 m!83215))

(declare-fun m!85535 () Bool)

(assert (=> b!82536 m!85535))

(assert (=> b!82538 m!83215))

(assert (=> b!82538 m!83215))

(assert (=> b!82538 m!85535))

(assert (=> bm!7549 d!20835))

(declare-fun d!20837 () Bool)

(declare-fun res!42806 () Bool)

(declare-fun e!53832 () Bool)

(assert (=> d!20837 (=> res!42806 e!53832)))

(assert (=> d!20837 (= res!42806 (and ((_ is Cons!1507) (toList!741 lt!37541)) (= (_1!1101 (h!2096 (toList!741 lt!37541))) (_1!1101 lt!37283))))))

(assert (=> d!20837 (= (containsKey!142 (toList!741 lt!37541) (_1!1101 lt!37283)) e!53832)))

(declare-fun b!82539 () Bool)

(declare-fun e!53833 () Bool)

(assert (=> b!82539 (= e!53832 e!53833)))

(declare-fun res!42807 () Bool)

(assert (=> b!82539 (=> (not res!42807) (not e!53833))))

(assert (=> b!82539 (= res!42807 (and (or (not ((_ is Cons!1507) (toList!741 lt!37541))) (bvsle (_1!1101 (h!2096 (toList!741 lt!37541))) (_1!1101 lt!37283))) ((_ is Cons!1507) (toList!741 lt!37541)) (bvslt (_1!1101 (h!2096 (toList!741 lt!37541))) (_1!1101 lt!37283))))))

(declare-fun b!82540 () Bool)

(assert (=> b!82540 (= e!53833 (containsKey!142 (t!5178 (toList!741 lt!37541)) (_1!1101 lt!37283)))))

(assert (= (and d!20837 (not res!42806)) b!82539))

(assert (= (and b!82539 res!42807) b!82540))

(declare-fun m!85537 () Bool)

(assert (=> b!82540 m!85537))

(assert (=> d!19791 d!20837))

(declare-fun d!20839 () Bool)

(declare-fun e!53834 () Bool)

(assert (=> d!20839 e!53834))

(declare-fun res!42808 () Bool)

(assert (=> d!20839 (=> res!42808 e!53834)))

(declare-fun lt!38586 () Bool)

(assert (=> d!20839 (= res!42808 (not lt!38586))))

(declare-fun lt!38585 () Bool)

(assert (=> d!20839 (= lt!38586 lt!38585)))

(declare-fun lt!38588 () Unit!2341)

(declare-fun e!53835 () Unit!2341)

(assert (=> d!20839 (= lt!38588 e!53835)))

(declare-fun c!13156 () Bool)

(assert (=> d!20839 (= c!13156 lt!38585)))

(assert (=> d!20839 (= lt!38585 (containsKey!142 (toList!741 lt!37869) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> d!20839 (= (contains!745 lt!37869 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38586)))

(declare-fun b!82541 () Bool)

(declare-fun lt!38587 () Unit!2341)

(assert (=> b!82541 (= e!53835 lt!38587)))

(assert (=> b!82541 (= lt!38587 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37869) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(assert (=> b!82541 (isDefined!91 (getValueByKey!138 (toList!741 lt!37869) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82542 () Bool)

(declare-fun Unit!2421 () Unit!2341)

(assert (=> b!82542 (= e!53835 Unit!2421)))

(declare-fun b!82543 () Bool)

(assert (=> b!82543 (= e!53834 (isDefined!91 (getValueByKey!138 (toList!741 lt!37869) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20839 c!13156) b!82541))

(assert (= (and d!20839 (not c!13156)) b!82542))

(assert (= (and d!20839 (not res!42808)) b!82543))

(declare-fun m!85539 () Bool)

(assert (=> d!20839 m!85539))

(declare-fun m!85541 () Bool)

(assert (=> b!82541 m!85541))

(assert (=> b!82541 m!82859))

(assert (=> b!82541 m!82859))

(declare-fun m!85543 () Bool)

(assert (=> b!82541 m!85543))

(assert (=> b!82543 m!82859))

(assert (=> b!82543 m!82859))

(assert (=> b!82543 m!85543))

(assert (=> d!19839 d!20839))

(declare-fun d!20841 () Bool)

(declare-fun c!13157 () Bool)

(assert (=> d!20841 (= c!13157 (and ((_ is Cons!1507) lt!37871) (= (_1!1101 (h!2096 lt!37871)) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53836 () Option!144)

(assert (=> d!20841 (= (getValueByKey!138 lt!37871 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53836)))

(declare-fun b!82545 () Bool)

(declare-fun e!53837 () Option!144)

(assert (=> b!82545 (= e!53836 e!53837)))

(declare-fun c!13158 () Bool)

(assert (=> b!82545 (= c!13158 (and ((_ is Cons!1507) lt!37871) (not (= (_1!1101 (h!2096 lt!37871)) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!82546 () Bool)

(assert (=> b!82546 (= e!53837 (getValueByKey!138 (t!5178 lt!37871) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82547 () Bool)

(assert (=> b!82547 (= e!53837 None!142)))

(declare-fun b!82544 () Bool)

(assert (=> b!82544 (= e!53836 (Some!143 (_2!1101 (h!2096 lt!37871))))))

(assert (= (and d!20841 c!13157) b!82544))

(assert (= (and d!20841 (not c!13157)) b!82545))

(assert (= (and b!82545 c!13158) b!82546))

(assert (= (and b!82545 (not c!13158)) b!82547))

(declare-fun m!85545 () Bool)

(assert (=> b!82546 m!85545))

(assert (=> d!19839 d!20841))

(declare-fun d!20843 () Bool)

(assert (=> d!20843 (= (getValueByKey!138 lt!37871 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) (Some!143 (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun lt!38589 () Unit!2341)

(assert (=> d!20843 (= lt!38589 (choose!470 lt!37871 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun e!53838 () Bool)

(assert (=> d!20843 e!53838))

(declare-fun res!42809 () Bool)

(assert (=> d!20843 (=> (not res!42809) (not e!53838))))

(assert (=> d!20843 (= res!42809 (isStrictlySorted!296 lt!37871))))

(assert (=> d!20843 (= (lemmaContainsTupThenGetReturnValue!55 lt!37871 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38589)))

(declare-fun b!82548 () Bool)

(declare-fun res!42810 () Bool)

(assert (=> b!82548 (=> (not res!42810) (not e!53838))))

(assert (=> b!82548 (= res!42810 (containsKey!142 lt!37871 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82549 () Bool)

(assert (=> b!82549 (= e!53838 (contains!746 lt!37871 (tuple2!2181 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (= (and d!20843 res!42809) b!82548))

(assert (= (and b!82548 res!42810) b!82549))

(assert (=> d!20843 m!82853))

(declare-fun m!85547 () Bool)

(assert (=> d!20843 m!85547))

(declare-fun m!85549 () Bool)

(assert (=> d!20843 m!85549))

(declare-fun m!85551 () Bool)

(assert (=> b!82548 m!85551))

(declare-fun m!85553 () Bool)

(assert (=> b!82549 m!85553))

(assert (=> d!19839 d!20843))

(declare-fun b!82550 () Bool)

(declare-fun c!13159 () Bool)

(assert (=> b!82550 (= c!13159 (and ((_ is Cons!1507) (toList!741 call!7494)) (bvsgt (_1!1101 (h!2096 (toList!741 call!7494))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53839 () List!1511)

(declare-fun e!53840 () List!1511)

(assert (=> b!82550 (= e!53839 e!53840)))

(declare-fun b!82551 () Bool)

(declare-fun call!7727 () List!1511)

(assert (=> b!82551 (= e!53840 call!7727)))

(declare-fun b!82552 () Bool)

(declare-fun c!13161 () Bool)

(declare-fun e!53841 () List!1511)

(assert (=> b!82552 (= e!53841 (ite c!13161 (t!5178 (toList!741 call!7494)) (ite c!13159 (Cons!1507 (h!2096 (toList!741 call!7494)) (t!5178 (toList!741 call!7494))) Nil!1508)))))

(declare-fun d!20845 () Bool)

(declare-fun e!53843 () Bool)

(assert (=> d!20845 e!53843))

(declare-fun res!42812 () Bool)

(assert (=> d!20845 (=> (not res!42812) (not e!53843))))

(declare-fun lt!38590 () List!1511)

(assert (=> d!20845 (= res!42812 (isStrictlySorted!296 lt!38590))))

(declare-fun e!53842 () List!1511)

(assert (=> d!20845 (= lt!38590 e!53842)))

(declare-fun c!13160 () Bool)

(assert (=> d!20845 (= c!13160 (and ((_ is Cons!1507) (toList!741 call!7494)) (bvslt (_1!1101 (h!2096 (toList!741 call!7494))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(assert (=> d!20845 (isStrictlySorted!296 (toList!741 call!7494))))

(assert (=> d!20845 (= (insertStrictlySorted!58 (toList!741 call!7494) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))) lt!38590)))

(declare-fun b!82553 () Bool)

(declare-fun call!7729 () List!1511)

(assert (=> b!82553 (= e!53842 call!7729)))

(declare-fun bm!7724 () Bool)

(declare-fun call!7728 () List!1511)

(assert (=> bm!7724 (= call!7728 call!7729)))

(declare-fun bm!7725 () Bool)

(assert (=> bm!7725 (= call!7727 call!7728)))

(declare-fun b!82554 () Bool)

(assert (=> b!82554 (= e!53843 (contains!746 lt!38590 (tuple2!2181 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82555 () Bool)

(assert (=> b!82555 (= e!53842 e!53839)))

(assert (=> b!82555 (= c!13161 (and ((_ is Cons!1507) (toList!741 call!7494)) (= (_1!1101 (h!2096 (toList!741 call!7494))) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun b!82556 () Bool)

(assert (=> b!82556 (= e!53840 call!7727)))

(declare-fun b!82557 () Bool)

(declare-fun res!42811 () Bool)

(assert (=> b!82557 (=> (not res!42811) (not e!53843))))

(assert (=> b!82557 (= res!42811 (containsKey!142 lt!38590 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun bm!7726 () Bool)

(assert (=> bm!7726 (= call!7729 ($colon$colon!70 e!53841 (ite c!13160 (h!2096 (toList!741 call!7494)) (tuple2!2181 (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun c!13162 () Bool)

(assert (=> bm!7726 (= c!13162 c!13160)))

(declare-fun b!82558 () Bool)

(assert (=> b!82558 (= e!53841 (insertStrictlySorted!58 (t!5178 (toList!741 call!7494)) (_1!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992))))) (_2!1101 (tuple2!2181 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82559 () Bool)

(assert (=> b!82559 (= e!53839 call!7728)))

(assert (= (and d!20845 c!13160) b!82553))

(assert (= (and d!20845 (not c!13160)) b!82555))

(assert (= (and b!82555 c!13161) b!82559))

(assert (= (and b!82555 (not c!13161)) b!82550))

(assert (= (and b!82550 c!13159) b!82556))

(assert (= (and b!82550 (not c!13159)) b!82551))

(assert (= (or b!82556 b!82551) bm!7725))

(assert (= (or b!82559 bm!7725) bm!7724))

(assert (= (or b!82553 bm!7724) bm!7726))

(assert (= (and bm!7726 c!13162) b!82558))

(assert (= (and bm!7726 (not c!13162)) b!82552))

(assert (= (and d!20845 res!42812) b!82557))

(assert (= (and b!82557 res!42811) b!82554))

(declare-fun m!85555 () Bool)

(assert (=> b!82554 m!85555))

(declare-fun m!85557 () Bool)

(assert (=> b!82557 m!85557))

(declare-fun m!85559 () Bool)

(assert (=> d!20845 m!85559))

(declare-fun m!85561 () Bool)

(assert (=> d!20845 m!85561))

(declare-fun m!85563 () Bool)

(assert (=> b!82558 m!85563))

(declare-fun m!85565 () Bool)

(assert (=> bm!7726 m!85565))

(assert (=> d!19839 d!20845))

(declare-fun d!20847 () Bool)

(declare-fun lt!38591 () Bool)

(assert (=> d!20847 (= lt!38591 (select (content!85 (t!5178 (toList!741 lt!37508))) lt!37278))))

(declare-fun e!53845 () Bool)

(assert (=> d!20847 (= lt!38591 e!53845)))

(declare-fun res!42813 () Bool)

(assert (=> d!20847 (=> (not res!42813) (not e!53845))))

(assert (=> d!20847 (= res!42813 ((_ is Cons!1507) (t!5178 (toList!741 lt!37508))))))

(assert (=> d!20847 (= (contains!746 (t!5178 (toList!741 lt!37508)) lt!37278) lt!38591)))

(declare-fun b!82560 () Bool)

(declare-fun e!53844 () Bool)

(assert (=> b!82560 (= e!53845 e!53844)))

(declare-fun res!42814 () Bool)

(assert (=> b!82560 (=> res!42814 e!53844)))

(assert (=> b!82560 (= res!42814 (= (h!2096 (t!5178 (toList!741 lt!37508))) lt!37278))))

(declare-fun b!82561 () Bool)

(assert (=> b!82561 (= e!53844 (contains!746 (t!5178 (t!5178 (toList!741 lt!37508))) lt!37278))))

(assert (= (and d!20847 res!42813) b!82560))

(assert (= (and b!82560 (not res!42814)) b!82561))

(assert (=> d!20847 m!83451))

(declare-fun m!85567 () Bool)

(assert (=> d!20847 m!85567))

(declare-fun m!85569 () Bool)

(assert (=> b!82561 m!85569))

(assert (=> b!81183 d!20847))

(declare-fun d!20849 () Bool)

(assert (=> d!20849 (= (get!1182 (getValueByKey!138 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2612 (getValueByKey!138 (toList!741 lt!37487) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19727 d!20849))

(assert (=> d!19727 d!20137))

(declare-fun d!20851 () Bool)

(declare-fun lt!38592 () Bool)

(assert (=> d!20851 (= lt!38592 (select (content!86 Nil!1509) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!53847 () Bool)

(assert (=> d!20851 (= lt!38592 e!53847)))

(declare-fun res!42816 () Bool)

(assert (=> d!20851 (=> (not res!42816) (not e!53847))))

(assert (=> d!20851 (= res!42816 ((_ is Cons!1508) Nil!1509))))

(assert (=> d!20851 (= (contains!747 Nil!1509 (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) lt!38592)))

(declare-fun b!82562 () Bool)

(declare-fun e!53846 () Bool)

(assert (=> b!82562 (= e!53847 e!53846)))

(declare-fun res!42815 () Bool)

(assert (=> b!82562 (=> res!42815 e!53846)))

(assert (=> b!82562 (= res!42815 (= (h!2097 Nil!1509) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82563 () Bool)

(assert (=> b!82563 (= e!53846 (contains!747 (t!5179 Nil!1509) (select (arr!1901 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!20851 res!42816) b!82562))

(assert (= (and b!82562 (not res!42815)) b!82563))

(assert (=> d!20851 m!82419))

(assert (=> d!20851 m!82265))

(declare-fun m!85571 () Bool)

(assert (=> d!20851 m!85571))

(assert (=> b!82563 m!82265))

(declare-fun m!85573 () Bool)

(assert (=> b!82563 m!85573))

(assert (=> b!81191 d!20851))

(declare-fun d!20853 () Bool)

(declare-fun c!13163 () Bool)

(assert (=> d!20853 (= c!13163 (and ((_ is Cons!1507) (toList!741 lt!37891)) (= (_1!1101 (h!2096 (toList!741 lt!37891))) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))))))))

(declare-fun e!53848 () Option!144)

(assert (=> d!20853 (= (getValueByKey!138 (toList!741 lt!37891) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))) e!53848)))

(declare-fun b!82565 () Bool)

(declare-fun e!53849 () Option!144)

(assert (=> b!82565 (= e!53848 e!53849)))

(declare-fun c!13164 () Bool)

(assert (=> b!82565 (= c!13164 (and ((_ is Cons!1507) (toList!741 lt!37891)) (not (= (_1!1101 (h!2096 (toList!741 lt!37891))) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))))

(declare-fun b!82566 () Bool)

(assert (=> b!82566 (= e!53849 (getValueByKey!138 (t!5178 (toList!741 lt!37891)) (_1!1101 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992)))))))))

(declare-fun b!82567 () Bool)

(assert (=> b!82567 (= e!53849 None!142)))

(declare-fun b!82564 () Bool)

(assert (=> b!82564 (= e!53848 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37891)))))))

(assert (= (and d!20853 c!13163) b!82564))

(assert (= (and d!20853 (not c!13163)) b!82565))

(assert (= (and b!82565 c!13164) b!82566))

(assert (= (and b!82565 (not c!13164)) b!82567))

(declare-fun m!85575 () Bool)

(assert (=> b!82566 m!85575))

(assert (=> b!81048 d!20853))

(declare-fun d!20855 () Bool)

(declare-fun c!13165 () Bool)

(assert (=> d!20855 (= c!13165 (and ((_ is Cons!1507) (toList!741 lt!37610)) (= (_1!1101 (h!2096 (toList!741 lt!37610))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282)))))))

(declare-fun e!53850 () Option!144)

(assert (=> d!20855 (= (getValueByKey!138 (toList!741 lt!37610) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))) e!53850)))

(declare-fun b!82569 () Bool)

(declare-fun e!53851 () Option!144)

(assert (=> b!82569 (= e!53850 e!53851)))

(declare-fun c!13166 () Bool)

(assert (=> b!82569 (= c!13166 (and ((_ is Cons!1507) (toList!741 lt!37610)) (not (= (_1!1101 (h!2096 (toList!741 lt!37610))) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))))

(declare-fun b!82570 () Bool)

(assert (=> b!82570 (= e!53851 (getValueByKey!138 (t!5178 (toList!741 lt!37610)) (_1!1101 (tuple2!2181 (select (arr!1901 (_keys!3957 (v!2608 (underlying!281 thiss!992)))) from!355) lt!37282))))))

(declare-fun b!82571 () Bool)

(assert (=> b!82571 (= e!53851 None!142)))

(declare-fun b!82568 () Bool)

(assert (=> b!82568 (= e!53850 (Some!143 (_2!1101 (h!2096 (toList!741 lt!37610)))))))

(assert (= (and d!20855 c!13165) b!82568))

(assert (= (and d!20855 (not c!13165)) b!82569))

(assert (= (and b!82569 c!13166) b!82570))

(assert (= (and b!82569 (not c!13166)) b!82571))

(declare-fun m!85577 () Bool)

(assert (=> b!82570 m!85577))

(assert (=> b!80716 d!20855))

(declare-fun d!20857 () Bool)

(declare-fun e!53852 () Bool)

(assert (=> d!20857 e!53852))

(declare-fun res!42817 () Bool)

(assert (=> d!20857 (=> res!42817 e!53852)))

(declare-fun lt!38594 () Bool)

(assert (=> d!20857 (= res!42817 (not lt!38594))))

(declare-fun lt!38593 () Bool)

(assert (=> d!20857 (= lt!38594 lt!38593)))

(declare-fun lt!38596 () Unit!2341)

(declare-fun e!53853 () Unit!2341)

(assert (=> d!20857 (= lt!38596 e!53853)))

(declare-fun c!13167 () Bool)

(assert (=> d!20857 (= c!13167 lt!38593)))

(assert (=> d!20857 (= lt!38593 (containsKey!142 (toList!741 lt!37495) lt!37485))))

(assert (=> d!20857 (= (contains!745 lt!37495 lt!37485) lt!38594)))

(declare-fun b!82572 () Bool)

(declare-fun lt!38595 () Unit!2341)

(assert (=> b!82572 (= e!53853 lt!38595)))

(assert (=> b!82572 (= lt!38595 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!741 lt!37495) lt!37485))))

(assert (=> b!82572 (isDefined!91 (getValueByKey!138 (toList!741 lt!37495) lt!37485))))

(declare-fun b!82573 () Bool)

(declare-fun Unit!2422 () Unit!2341)

(assert (=> b!82573 (= e!53853 Unit!2422)))

(declare-fun b!82574 () Bool)

(assert (=> b!82574 (= e!53852 (isDefined!91 (getValueByKey!138 (toList!741 lt!37495) lt!37485)))))

(assert (= (and d!20857 c!13167) b!82572))

(assert (= (and d!20857 (not c!13167)) b!82573))

(assert (= (and d!20857 (not res!42817)) b!82574))

(declare-fun m!85579 () Bool)

(assert (=> d!20857 m!85579))

(declare-fun m!85581 () Bool)

(assert (=> b!82572 m!85581))

(assert (=> b!82572 m!82891))

(assert (=> b!82572 m!82891))

(declare-fun m!85583 () Bool)

(assert (=> b!82572 m!85583))

(assert (=> b!82574 m!82891))

(assert (=> b!82574 m!82891))

(assert (=> b!82574 m!85583))

(assert (=> d!19857 d!20857))

(assert (=> d!19857 d!19853))

(assert (=> d!19857 d!19861))

(declare-fun d!20859 () Bool)

(assert (=> d!20859 (= (apply!80 (+!106 lt!37495 (tuple2!2181 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))))) lt!37485) (apply!80 lt!37495 lt!37485))))

(assert (=> d!20859 true))

(declare-fun _$34!828 () Unit!2341)

(assert (=> d!20859 (= (choose!475 lt!37495 lt!37482 (zeroValue!2189 (v!2608 (underlying!281 thiss!992))) lt!37485) _$34!828)))

(declare-fun bs!3500 () Bool)

(assert (= bs!3500 d!20859))

(assert (=> bs!3500 m!82019))

(assert (=> bs!3500 m!82019))

(assert (=> bs!3500 m!82021))

(assert (=> bs!3500 m!82005))

(assert (=> d!19857 d!20859))

(assert (=> d!19857 d!19871))

(declare-fun mapNonEmpty!3343 () Bool)

(declare-fun mapRes!3343 () Bool)

(declare-fun tp!8833 () Bool)

(declare-fun e!53855 () Bool)

(assert (=> mapNonEmpty!3343 (= mapRes!3343 (and tp!8833 e!53855))))

(declare-fun mapKey!3343 () (_ BitVec 32))

(declare-fun mapValue!3343 () ValueCell!915)

(declare-fun mapRest!3343 () (Array (_ BitVec 32) ValueCell!915))

(assert (=> mapNonEmpty!3343 (= mapRest!3341 (store mapRest!3343 mapKey!3343 mapValue!3343))))

(declare-fun mapIsEmpty!3343 () Bool)

(assert (=> mapIsEmpty!3343 mapRes!3343))

(declare-fun condMapEmpty!3343 () Bool)

(declare-fun mapDefault!3343 () ValueCell!915)

(assert (=> mapNonEmpty!3341 (= condMapEmpty!3343 (= mapRest!3341 ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3343)))))

(declare-fun e!53854 () Bool)

(assert (=> mapNonEmpty!3341 (= tp!8831 (and e!53854 mapRes!3343))))

(declare-fun b!82576 () Bool)

(assert (=> b!82576 (= e!53854 tp_is_empty!2517)))

(declare-fun b!82575 () Bool)

(assert (=> b!82575 (= e!53855 tp_is_empty!2517)))

(assert (= (and mapNonEmpty!3341 condMapEmpty!3343) mapIsEmpty!3343))

(assert (= (and mapNonEmpty!3341 (not condMapEmpty!3343)) mapNonEmpty!3343))

(assert (= (and mapNonEmpty!3343 ((_ is ValueCellFull!915) mapValue!3343)) b!82575))

(assert (= (and mapNonEmpty!3341 ((_ is ValueCellFull!915) mapDefault!3343)) b!82576))

(declare-fun m!85585 () Bool)

(assert (=> mapNonEmpty!3343 m!85585))

(declare-fun mapNonEmpty!3344 () Bool)

(declare-fun mapRes!3344 () Bool)

(declare-fun tp!8834 () Bool)

(declare-fun e!53857 () Bool)

(assert (=> mapNonEmpty!3344 (= mapRes!3344 (and tp!8834 e!53857))))

(declare-fun mapValue!3344 () ValueCell!915)

(declare-fun mapRest!3344 () (Array (_ BitVec 32) ValueCell!915))

(declare-fun mapKey!3344 () (_ BitVec 32))

(assert (=> mapNonEmpty!3344 (= mapRest!3342 (store mapRest!3344 mapKey!3344 mapValue!3344))))

(declare-fun mapIsEmpty!3344 () Bool)

(assert (=> mapIsEmpty!3344 mapRes!3344))

(declare-fun condMapEmpty!3344 () Bool)

(declare-fun mapDefault!3344 () ValueCell!915)

(assert (=> mapNonEmpty!3342 (= condMapEmpty!3344 (= mapRest!3342 ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3344)))))

(declare-fun e!53856 () Bool)

(assert (=> mapNonEmpty!3342 (= tp!8832 (and e!53856 mapRes!3344))))

(declare-fun b!82578 () Bool)

(assert (=> b!82578 (= e!53856 tp_is_empty!2517)))

(declare-fun b!82577 () Bool)

(assert (=> b!82577 (= e!53857 tp_is_empty!2517)))

(assert (= (and mapNonEmpty!3342 condMapEmpty!3344) mapIsEmpty!3344))

(assert (= (and mapNonEmpty!3342 (not condMapEmpty!3344)) mapNonEmpty!3344))

(assert (= (and mapNonEmpty!3344 ((_ is ValueCellFull!915) mapValue!3344)) b!82577))

(assert (= (and mapNonEmpty!3342 ((_ is ValueCellFull!915) mapDefault!3344)) b!82578))

(declare-fun m!85587 () Bool)

(assert (=> mapNonEmpty!3344 m!85587))

(declare-fun b_lambda!3655 () Bool)

(assert (= b_lambda!3645 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3655)))

(declare-fun b_lambda!3657 () Bool)

(assert (= b_lambda!3635 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3657)))

(declare-fun b_lambda!3659 () Bool)

(assert (= b_lambda!3649 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3659)))

(declare-fun b_lambda!3661 () Bool)

(assert (= b_lambda!3633 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3661)))

(declare-fun b_lambda!3663 () Bool)

(assert (= b_lambda!3625 (or (and b!80271 b_free!2201) (and b!80263 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))))) b_lambda!3663)))

(declare-fun b_lambda!3665 () Bool)

(assert (= b_lambda!3647 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3665)))

(declare-fun b_lambda!3667 () Bool)

(assert (= b_lambda!3651 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3667)))

(declare-fun b_lambda!3669 () Bool)

(assert (= b_lambda!3653 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3669)))

(declare-fun b_lambda!3671 () Bool)

(assert (= b_lambda!3643 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3671)))

(declare-fun b_lambda!3673 () Bool)

(assert (= b_lambda!3627 (or (and b!80271 b_free!2201) (and b!80263 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))))) b_lambda!3673)))

(declare-fun b_lambda!3675 () Bool)

(assert (= b_lambda!3637 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3675)))

(declare-fun b_lambda!3677 () Bool)

(assert (= b_lambda!3639 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3677)))

(declare-fun b_lambda!3679 () Bool)

(assert (= b_lambda!3629 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3679)))

(declare-fun b_lambda!3681 () Bool)

(assert (= b_lambda!3641 (or (and b!80271 b_free!2201 (= (defaultEntry!2293 (v!2608 (underlying!281 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80263 b_free!2203) b_lambda!3681)))

(check-sat (not b!82541) (not d!20539) (not b!82495) (not bm!7709) (not d!20685) (not b_lambda!3663) (not d!20249) (not d!20235) (not d!20507) (not b!81568) (not b!81737) (not b!81360) (not b!81449) (not d!20547) (not d!20595) (not b!82080) (not b!81777) (not d!19965) (not d!20829) (not b!81496) (not bm!7609) (not d!20813) (not b!82043) (not b!81389) (not b!81529) (not b!82033) (not b!81403) (not bm!7691) (not b!81242) (not b!81944) (not d!20625) (not b!82467) (not bm!7597) (not b!81229) (not d!20515) (not b!81724) (not d!20393) (not b!82536) (not b!82449) (not b!82540) (not b!81852) (not mapNonEmpty!3344) (not d!19971) (not d!19975) (not b!81398) (not d!20281) (not b!81651) (not d!20583) (not b!82183) (not b!81950) (not b!81930) (not b!81344) (not b!82191) (not b!81314) (not b!82563) (not b!81509) (not d!20729) (not d!20293) (not bm!7640) (not b!81267) (not b!82204) (not b!82303) (not b!81490) (not b!81916) (not b!82281) (not b!82417) (not b!82072) (not b!82255) (not b!82052) (not b!82055) (not b!82363) (not b!81919) (not b!82132) (not b!81741) (not d!20169) (not d!20671) (not b!81469) (not b!81294) (not d!19947) (not b!82504) (not d!20815) (not d!20835) (not d!20191) (not b!81922) (not d!20617) (not d!20557) (not b!81621) (not b!81609) (not bm!7603) (not d!20037) (not b!81266) (not b!82153) (not bm!7587) (not b!82342) (not b!81834) (not b!81458) (not b!81334) (not b_lambda!3615) (not b!81537) (not b!82415) (not b!81714) (not b!81888) (not b!81485) (not b!82199) (not b!81475) (not b!81288) (not d!20001) (not b!81603) (not b!81290) (not d!20341) (not b!81512) (not d!20163) (not b!81435) (not d!20703) (not d!20127) (not d!20381) (not d!20273) (not d!20505) (not b!81701) (not b_lambda!3669) (not b!81672) (not b!82190) (not b!81758) (not b!82423) (not d!20017) (not b!81803) (not d!20445) (not b!82054) (not b!81377) (not b!82436) (not d!20239) (not b!81312) (not d!20027) (not b!81235) (not b!81895) (not b!81385) (not d!20319) (not b!81473) (not d!20797) (not d!20611) (not b!82063) (not b!81836) (not b!82172) (not b!81226) (not d!20229) (not b!82119) (not b!81220) (not bm!7660) (not b!81487) (not d!20501) (not b!82008) (not bm!7622) (not b!81532) (not bm!7604) (not b!81444) (not b!82319) (not b!82507) (not d!20763) (not d!20431) (not d!19989) (not b!82045) (not b!82425) (not b!81747) (not b_lambda!3661) (not d!20095) (not b!81892) (not b!82154) (not d!20029) (not b!82518) (not d!20411) (not b!82211) (not b!81391) (not d!20311) (not b!82169) (not b!81705) (not d!20455) (not d!20183) (not b!82248) (not b!81722) (not bm!7726) (not b!81712) (not b!81740) (not d!20325) (not d!20135) (not d!20687) (not b!81482) (not bm!7625) (not b_lambda!3623) (not d!19957) (not bm!7667) (not b!82566) (not b!81212) (not b!81465) (not bm!7608) (not b!81457) (not b!82294) (not b!81362) (not b!82441) (not b_lambda!3657) (not b!82352) (not b!82487) (not d!20253) (not b!82158) (not b!82102) (not b!81661) (not b!81907) (not d!20323) (not b!81350) (not b!81225) (not b!82546) (not b!81367) (not b!82527) (not b!82316) (not b!82477) (not b!82226) (not d!20495) (not b!81776) (not d!20407) (not b!81921) (not d!20155) (not bm!7713) (not b!82284) (not d!20203) (not d!20471) (not b!81439) (not b!82168) (not d!20391) (not d!20725) (not b!81667) (not b_lambda!3677) (not d!20613) (not b!81793) (not b!82351) (not b!81759) (not b!82344) (not b!82292) (not b!82349) (not d!20419) (not d!20605) (not b!82083) (not b!81270) (not b!81526) (not b!81498) (not d!20337) (not b!81995) (not d!20707) (not d!19983) (not d!20117) (not b!81795) (not b!81502) (not b!81945) (not d!20525) (not d!20265) (not d!20587) (not d!20519) (not d!20767) (not b!81833) (not b!82476) (not d!20365) (not b!82392) (not d!20299) (not d!20585) (not bm!7678) (not b!82005) (not d!20123) (not d!20295) (not b!81849) (not d!20245) (not b!82022) (not b_lambda!3665) (not d!20593) (not b!82036) (not b!82554) (not b!81957) (not b!81680) (not b!82572) (not b!81255) (not b!82336) (not b!82421) (not b!81470) (not d!20301) (not d!20551) (not b!82047) (not b!81230) (not d!20667) (not d!20833) (not b!81263) (not b_lambda!3655) (not b!82345) (not bm!7692) (not b!82170) (not b!82447) (not bm!7583) (not d!20459) (not b!81754) (not b!81492) (not b!81504) (not b!81515) (not b!82517) (not d!20563) (not b!81962) (not d!20509) (not b!81729) (not b!81658) (not b!81354) (not b!82384) (not b!81207) (not b!81597) (not b!81371) (not b!82110) (not b!81752) (not b!81660) (not b!81782) (not d!20335) (not b!81327) (not b!82360) (not d!20195) (not b!82509) (not b!82396) (not b!82409) (not b!81284) (not b!82512) (not d!20309) (not bm!7580) (not d!20011) (not bm!7649) (not b!81937) (not b_lambda!3671) (not b!82276) (not b!81674) (not d!20601) (not b!81260) (not b!82313) (not d!20695) (not d!20499) (not d!20537) (not b_lambda!3619) (not d!20005) (not b!81887) (not b!81878) (not b!81231) (not b!81415) (not d!20013) (not b!81642) (not b!81857) (not b!82386) (not d!20751) (not b!82327) (not b!81273) (not d!20377) (not b!82141) (not b!82042) (not b!82011) (not b!81807) (not b!82381) (not b!82049) (not d!19963) (not b!81210) (not d!20167) (not d!20363) (not b!81917) (not b!81240) (not d!20697) (not b!81635) (not d!20153) (not b!82272) (not b!82377) (not b!81497) (not d!20511) (not b_lambda!3675) (not d!20517) (not b!82071) (not b!81454) (not b!82156) (not b!82057) (not b!82376) (not d!20629) (not d!20857) (not d!20483) (not b!81819) (not b!81616) (not b!82231) (not b!82414) (not b!81295) (not b!81319) (not b!82243) (not b!81786) (not b_lambda!3601) (not bm!7593) (not b!81745) (not b!81313) (not d!20579) (not b!81703) (not b!82399) (not b!81223) (not b!82104) (not d!20799) (not d!20719) (not d!20023) (not b_lambda!3681) (not b!82346) (not d!20689) (not b!81923) (not b!81785) (not d!20369) (not d!20803) (not b!81954) (not b!82354) (not d!20679) (not b!81495) (not b!81731) (not b!82220) (not b!82004) (not d!20795) (not b!82307) (not d!20485) (not b!82300) (not d!20731) (not b!82489) (not b!82456) (not d!20631) (not b!81687) (not bm!7601) (not d!20231) (not b!82295) (not b!81664) (not b!81396) (not b!82028) (not b!82289) (not b!82239) (not d!20843) (not b!82090) (not b!82482) (not b!82014) (not bm!7659) (not b!82558) (not bm!7671) (not d!20693) (not b!82466) tp_is_empty!2517 (not b!81335) (not bm!7668) (not b!81817) (not b!82196) (not d!20361) (not b!81972) (not b!81539) (not b!81763) (not d!20597) (not b!81874) (not b!81652) (not b!81252) (not b_lambda!3679) (not d!20297) (not b!81772) (not d!20257) (not d!20469) (not b!81675) (not b_lambda!3591) (not b!82000) (not d!20661) (not b!82099) (not b!82244) (not d!20331) (not b!82531) (not b!81297) (not b!81627) (not d!20371) (not b!81844) (not bm!7682) (not b!82164) (not b!82356) (not bm!7631) (not b!81427) (not b!81543) (not b!82174) (not d!20553) (not b!82534) (not b!81535) (not d!20777) (not b!81321) (not b!81859) (not bm!7685) (not d!20531) (not b!81442) (not b!81341) (not b!81631) (not b!81292) (not bm!7680) (not d!20573) (not b_lambda!3603) (not bm!7694) (not d!20721) (not b!81236) (not b!82129) (not d!20591) (not bm!7607) (not b!81419) (not d!20847) (not b!81884) (not b!81998) (not d!20307) (not d!20783) (not b_lambda!3659) (not b!82278) (not d!20567) (not b!81407) (not bm!7722) (not d!20651) (not d!20091) (not b!82048) (not d!20823) (not d!20603) (not b!81412) (not bm!7695) (not b!81732) (not b!82492) (not b_lambda!3667) (not b!82200) (not d!20303) (not b!82222) (not d!20007) (not b!82145) (not b!82224) (not b!81750) (not b!82510) (not d!20609) (not b!81906) (not b!82330) (not bm!7651) (not b!82401) (not b!82549) (not b!81866) (not b!82241) (not b!82451) (not d!20003) (not d!20791) (not b!81418) (not d!20809) (not d!20565) (not b!81268) (not b!81669) (not b!81877) (not b!82134) (not b!82548) (not b!82322) (not b!81619) (not b!82265) (not b!81540) (not d!20529) (not d!20259) (not bm!7648) (not b!81352) (not d!20145) (not b!82561) (not b!82533) (not bm!7710) (not b!82202) (not b!82404) (not b!81879) (not b!81656) (not d!19969) (not b!82444) (not b!82419) (not b!81285) (not b!81684) (not b!81633) (not b!81988) (not b!81821) (not b!82118) (not b!82107) (not b!81992) (not b!82438) (not b!82343) (not b!82304) (not bm!7619) (not b!82085) (not bm!7699) (not b!81792) (not d!20429) (not b!81614) (not b!81306) (not d!20779) (not b_lambda!3631) (not d!20659) (not b!82218) (not d!20151) (not b!82221) (not bm!7664) (not b!81446) (not b!81699) (not b!82020) (not b!81478) (not d!20647) (not b!81808) (not b!81468) (not d!20821) (not d!20705) (not d!20035) (not b!82165) (not d!20827) (not b!81689) (not b!82237) (not b!82078) (not b!81868) (not b!82044) (not b!82115) (not d!20343) (not b!82127) (not mapNonEmpty!3343) (not b!82217) (not d!20397) (not b!82269) (not d!20801) (not b!81421) (not b!81339) (not b!81918) (not b!82030) (not d!20109) (not b!82543) (not b!81810) (not b!81706) (not b!81461) (not b_lambda!3673) (not b!81432) (not b!81897) (not d!20009) (not d!20119) (not b!81958) (not b!82453) (not b!82340) (not b!82176) (not bm!7636) (not d!20545) (not b!82109) (not b!82230) (not d!20735) (not d!20247) (not d!20053) (not b!82538) (not b!81520) (not b!81718) (not b!82077) (not b!81256) (not b!82038) (not b!81463) (not bm!7644) (not b_next!2201) (not b!81969) (not b!82503) (not d!20387) (not b!81953) (not b!81691) (not d!20559) (not b!82314) (not b!81788) (not b!82206) (not d!20737) (not d!20287) (not b!81756) (not d!20759) (not b!81657) (not b!81500) (not b!81927) (not bm!7615) (not b!81942) (not b!82480) (not d!20467) (not b!82257) (not b!82185) (not b!81388) b_and!5013 (not b!82402) (not b!82379) (not b!82136) (not b!81241) (not b!82214) (not bm!7635) (not b!81308) (not b!81640) (not b!81394) (not bm!7702) (not d!20789) (not b!81289) (not b!81316) (not d!20285) (not b!81238) (not d!20223) (not d!20359) (not b!82387) (not d!20405) (not b!81768) (not bm!7579) (not b!82143) (not b!81713) (not d!20555) (not b!81805) (not b!82125) (not d!20073) (not d!20379) (not d!20121) (not b!82287) (not b!82246) (not b!81393) (not b!81939) (not b!82215) (not b!82523) (not b!81965) (not b!82484) (not b!81426) (not d!20021) (not b!81348) (not b!82413) (not b!82096) (not b!81855) (not d!20743) (not d!20065) (not d!20057) (not b!81840) (not d!20283) (not b!82182) (not b!82570) (not bm!7634) (not bm!7716) (not d!20193) (not bm!7677) (not b!82091) (not b!82076) (not b!81208) (not bm!7616) (not b!81375) (not d!20161) (not d!20289) (not d!20543) (not d!20653) (not d!20241) (not d!20217) (not b_lambda!3617) (not b!82123) (not b!82155) (not d!19951) (not d!20267) (not b!81770) (not d!20673) (not b!82068) (not b!81459) (not d!20607) (not b_next!2203) (not b!81683) (not d!20401) (not b!82026) (not b!82406) (not b!81637) (not d!20055) (not b_lambda!3621) (not b!82040) (not d!20851) (not b!82373) (not b!81507) (not b!81936) (not d!20081) (not b!81634) (not b!82473) (not d!20189) (not d!20745) (not b!81709) (not b!81466) (not d!20291) (not d!20233) (not b!81364) (not b!82557) (not b!81299) (not b!81455) (not b!82455) (not b!82268) (not d!20019) (not d!20413) (not b!82335) (not d!20541) (not b!81914) (not d!20535) (not bm!7719) (not b!82526) (not b!81378) (not b!82188) (not b!82435) (not b!82253) (not b!82429) (not bm!7703) b_and!5011 (not b!82334) (not bm!7600) (not b!81598) (not d!20305) (not d!20355) (not d!20353) (not b!81864) (not b!82431) (not b!81612) (not b!82463) (not b!81436) (not b!81911) (not b!81694) (not d!20677) (not b!81655) (not b!81812) (not b!81330) (not b!82395) (not d!20655) (not d!20227) (not d!20549) (not bm!7723) (not d!19979) (not d!20639) (not d!20675) (not b!81523) (not d!20637) (not d!20769) (not bm!7594) (not b!82228) (not d!20417) (not b!81246) (not d!20067) (not d!20727) (not bm!7688) (not d!20329) (not b!82500) (not d!20097) (not d!20255) (not b!82321) (not bm!7632) (not b!82088) (not d!20385) (not b!82433) (not b!81600) (not b!81898) (not b!81726) (not b!82331) (not d!20433) (not b!82017) (not d!20599) (not d!20681) (not d!20199) (not b!81374) (not bm!7653) (not b!81708) (not b!81607) (not d!19973) (not b!82100) (not d!20859) (not d!20077) (not b!82062) (not bm!7591) (not b!81704) (not b!81452) (not b!81517) (not b!82532) (not b!81464) (not bm!7584) (not b!81281) (not d!20489) (not b!81839) (not b!82286) (not bm!7681) (not b!81666) (not b!81542) (not d!20691) (not d!20699) (not bm!7663) (not bm!7642) (not b!81233) (not b!82179) (not d!20449) (not d!20561) (not d!20623) (not d!19959) (not d!20839) (not b!81381) (not b!81890) (not b!81779) (not b!81801) (not b_lambda!3599) (not bm!7614) (not b!82060) (not b!81697) (not b!81222) (not b!82161) (not bm!7698) (not b!81304) (not d!20075) (not b!81798) (not b!81424) (not d!20219) (not bm!7656) (not b!82486) (not b!82427) (not b!82494) (not b!81331) (not b!82234) (not b!82574) (not b!82162) (not b!81761) (not d!20683) (not b!81237) (not bm!7590) (not b!82019) (not bm!7639) (not b!81218) (not b!81903) (not b!82535) (not d!20785) (not d!20179) (not b!82432) (not b!81710) (not b!81686) (not d!20157) (not bm!7706) (not b!81276) (not d!20493) (not b!81787) (not b!82002) (not b!81622) (not b!82311) (not b!81488) (not d!20099) (not b!82152) (not b!81534) (not b!82082) (not d!20263) (not d!20845) (not b!82160) (not b!82131) (not d!20059) (not b!81960) (not bm!7674) (not b!82337) (not b!82458) (not b!81854) (not b!81630) (not b!82412) (not bm!7652) (not b!82024) (not b!81643) (not d!20523) (not d!20665) (not b!82355) (not b!81648) (not bm!7645) (not b!81322) (not b!82367) (not bm!7643) (not d!20339) (not bm!7628) (not b!81405) (not b!82515) (not d!20487) (not d!20453) (not b!82448))
(check-sat b_and!5011 b_and!5013 (not b_next!2201) (not b_next!2203))
