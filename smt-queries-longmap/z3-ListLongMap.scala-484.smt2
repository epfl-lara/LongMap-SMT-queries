; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10350 () Bool)

(assert start!10350)

(declare-fun b!80038 () Bool)

(declare-fun b_free!2197 () Bool)

(declare-fun b_next!2197 () Bool)

(assert (=> b!80038 (= b_free!2197 (not b_next!2197))))

(declare-fun tp!8802 () Bool)

(declare-fun b_and!4877 () Bool)

(assert (=> b!80038 (= tp!8802 b_and!4877)))

(declare-fun b!80045 () Bool)

(declare-fun b_free!2199 () Bool)

(declare-fun b_next!2199 () Bool)

(assert (=> b!80045 (= b_free!2199 (not b_next!2199))))

(declare-fun tp!8799 () Bool)

(declare-fun b_and!4879 () Bool)

(assert (=> b!80045 (= tp!8799 b_and!4879)))

(declare-fun b!80037 () Bool)

(declare-fun e!52280 () Bool)

(declare-fun tp_is_empty!2515 () Bool)

(assert (=> b!80037 (= e!52280 tp_is_empty!2515)))

(declare-fun b!80039 () Bool)

(declare-fun e!52279 () Bool)

(declare-fun e!52274 () Bool)

(assert (=> b!80039 (= e!52279 e!52274)))

(declare-fun res!41743 () Bool)

(assert (=> b!80039 (=> (not res!41743) (not e!52274))))

(declare-datatypes ((V!3001 0))(
  ( (V!3002 (val!1302 Int)) )
))
(declare-datatypes ((array!3965 0))(
  ( (array!3966 (arr!1888 (Array (_ BitVec 32) (_ BitVec 64))) (size!2131 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!914 0))(
  ( (ValueCellFull!914 (v!2599 V!3001)) (EmptyCell!914) )
))
(declare-datatypes ((array!3967 0))(
  ( (array!3968 (arr!1889 (Array (_ BitVec 32) ValueCell!914)) (size!2132 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!736 0))(
  ( (LongMapFixedSize!737 (defaultEntry!2292 Int) (mask!6297 (_ BitVec 32)) (extraKeys!2139 (_ BitVec 32)) (zeroValue!2188 V!3001) (minValue!2188 V!3001) (_size!417 (_ BitVec 32)) (_keys!3955 array!3965) (_values!2275 array!3967) (_vacant!417 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!530 0))(
  ( (Cell!531 (v!2600 LongMapFixedSize!736)) )
))
(declare-datatypes ((LongMap!530 0))(
  ( (LongMap!531 (underlying!276 Cell!530)) )
))
(declare-fun thiss!992 () LongMap!530)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!80039 (= res!41743 (and (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!37084 () V!3001)

(declare-fun get!1183 (ValueCell!914 V!3001) V!3001)

(declare-fun dynLambda!338 (Int (_ BitVec 64)) V!3001)

(assert (=> b!80039 (= lt!37084 (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) from!355) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80040 () Bool)

(declare-fun e!52273 () Bool)

(declare-fun e!52287 () Bool)

(assert (=> b!80040 (= e!52273 e!52287)))

(declare-fun b!80041 () Bool)

(declare-fun res!41741 () Bool)

(declare-fun e!52276 () Bool)

(assert (=> b!80041 (=> (not res!41741) (not e!52276))))

(declare-fun newMap!16 () LongMapFixedSize!736)

(declare-fun valid!325 (LongMapFixedSize!736) Bool)

(assert (=> b!80041 (= res!41741 (valid!325 newMap!16))))

(declare-fun b!80042 () Bool)

(declare-fun res!41740 () Bool)

(assert (=> b!80042 (=> (not res!41740) (not e!52276))))

(assert (=> b!80042 (= res!41740 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6297 newMap!16)) (_size!417 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun b!80043 () Bool)

(declare-fun e!52286 () Bool)

(assert (=> b!80043 (= e!52286 tp_is_empty!2515)))

(declare-fun b!80044 () Bool)

(declare-fun e!52283 () Bool)

(assert (=> b!80044 (= e!52274 e!52283)))

(declare-fun res!41742 () Bool)

(assert (=> b!80044 (=> (not res!41742) (not e!52283))))

(declare-datatypes ((tuple2!2180 0))(
  ( (tuple2!2181 (_1!1101 Bool) (_2!1101 LongMapFixedSize!736)) )
))
(declare-fun lt!37087 () tuple2!2180)

(assert (=> b!80044 (= res!41742 (and (_1!1101 lt!37087) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!2327 0))(
  ( (Unit!2328) )
))
(declare-fun lt!37085 () Unit!2327)

(declare-fun e!52284 () Unit!2327)

(assert (=> b!80044 (= lt!37085 e!52284)))

(declare-datatypes ((tuple2!2182 0))(
  ( (tuple2!2183 (_1!1102 (_ BitVec 64)) (_2!1102 V!3001)) )
))
(declare-datatypes ((List!1514 0))(
  ( (Nil!1511) (Cons!1510 (h!2099 tuple2!2182) (t!5172 List!1514)) )
))
(declare-datatypes ((ListLongMap!1437 0))(
  ( (ListLongMap!1438 (toList!734 List!1514)) )
))
(declare-fun lt!37088 () ListLongMap!1437)

(declare-fun c!12486 () Bool)

(declare-fun contains!742 (ListLongMap!1437 (_ BitVec 64)) Bool)

(assert (=> b!80044 (= c!12486 (contains!742 lt!37088 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun update!116 (LongMapFixedSize!736 (_ BitVec 64) V!3001) tuple2!2180)

(assert (=> b!80044 (= lt!37087 (update!116 newMap!16 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))

(declare-fun e!52277 () Bool)

(declare-fun e!52278 () Bool)

(declare-fun array_inv!1185 (array!3965) Bool)

(declare-fun array_inv!1186 (array!3967) Bool)

(assert (=> b!80045 (= e!52278 (and tp!8799 tp_is_empty!2515 (array_inv!1185 (_keys!3955 newMap!16)) (array_inv!1186 (_values!2275 newMap!16)) e!52277))))

(declare-fun b!80046 () Bool)

(declare-fun e!52285 () Bool)

(assert (=> b!80046 (= e!52285 e!52273)))

(declare-fun mapNonEmpty!3323 () Bool)

(declare-fun mapRes!3323 () Bool)

(declare-fun tp!8801 () Bool)

(assert (=> mapNonEmpty!3323 (= mapRes!3323 (and tp!8801 e!52280))))

(declare-fun mapKey!3324 () (_ BitVec 32))

(declare-fun mapRest!3323 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapValue!3323 () ValueCell!914)

(assert (=> mapNonEmpty!3323 (= (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (store mapRest!3323 mapKey!3324 mapValue!3323))))

(declare-fun mapIsEmpty!3323 () Bool)

(assert (=> mapIsEmpty!3323 mapRes!3323))

(declare-fun mapNonEmpty!3324 () Bool)

(declare-fun mapRes!3324 () Bool)

(declare-fun tp!8800 () Bool)

(assert (=> mapNonEmpty!3324 (= mapRes!3324 (and tp!8800 e!52286))))

(declare-fun mapKey!3323 () (_ BitVec 32))

(declare-fun mapRest!3324 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapValue!3324 () ValueCell!914)

(assert (=> mapNonEmpty!3324 (= (arr!1889 (_values!2275 newMap!16)) (store mapRest!3324 mapKey!3323 mapValue!3324))))

(declare-fun res!41745 () Bool)

(assert (=> start!10350 (=> (not res!41745) (not e!52276))))

(declare-fun valid!326 (LongMap!530) Bool)

(assert (=> start!10350 (= res!41745 (valid!326 thiss!992))))

(assert (=> start!10350 e!52276))

(assert (=> start!10350 e!52285))

(assert (=> start!10350 true))

(assert (=> start!10350 e!52278))

(declare-fun e!52272 () Bool)

(assert (=> b!80038 (= e!52287 (and tp!8802 tp_is_empty!2515 (array_inv!1185 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (array_inv!1186 (_values!2275 (v!2600 (underlying!276 thiss!992)))) e!52272))))

(declare-fun b!80047 () Bool)

(declare-fun e!52270 () Bool)

(assert (=> b!80047 (= e!52270 tp_is_empty!2515)))

(declare-fun b!80048 () Bool)

(declare-fun Unit!2329 () Unit!2327)

(assert (=> b!80048 (= e!52284 Unit!2329)))

(declare-fun mapIsEmpty!3324 () Bool)

(assert (=> mapIsEmpty!3324 mapRes!3324))

(declare-fun b!80049 () Bool)

(declare-fun Unit!2330 () Unit!2327)

(assert (=> b!80049 (= e!52284 Unit!2330)))

(declare-fun lt!37074 () Unit!2327)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!61 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) (_ BitVec 32) Int) Unit!2327)

(assert (=> b!80049 (= lt!37074 (lemmaListMapContainsThenArrayContainsFrom!61 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3965 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!80049 (arrayContainsKey!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!37078 () Unit!2327)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3965 (_ BitVec 32) (_ BitVec 32)) Unit!2327)

(assert (=> b!80049 (= lt!37078 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1515 0))(
  ( (Nil!1512) (Cons!1511 (h!2100 (_ BitVec 64)) (t!5173 List!1515)) )
))
(declare-fun arrayNoDuplicates!0 (array!3965 (_ BitVec 32) List!1515) Bool)

(assert (=> b!80049 (arrayNoDuplicates!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) from!355 Nil!1512)))

(declare-fun lt!37072 () Unit!2327)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3965 (_ BitVec 32) (_ BitVec 64) List!1515) Unit!2327)

(assert (=> b!80049 (= lt!37072 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512)))))

(assert (=> b!80049 false))

(declare-fun b!80050 () Bool)

(declare-fun e!52281 () Bool)

(assert (=> b!80050 (= e!52272 (and e!52281 mapRes!3323))))

(declare-fun condMapEmpty!3323 () Bool)

(declare-fun mapDefault!3323 () ValueCell!914)

(assert (=> b!80050 (= condMapEmpty!3323 (= (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3323)))))

(declare-fun b!80051 () Bool)

(assert (=> b!80051 (= e!52277 (and e!52270 mapRes!3324))))

(declare-fun condMapEmpty!3324 () Bool)

(declare-fun mapDefault!3324 () ValueCell!914)

(assert (=> b!80051 (= condMapEmpty!3324 (= (arr!1889 (_values!2275 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3324)))))

(declare-fun b!80052 () Bool)

(declare-fun res!41746 () Bool)

(assert (=> b!80052 (=> (not res!41746) (not e!52276))))

(assert (=> b!80052 (= res!41746 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!80053 () Bool)

(assert (=> b!80053 (= e!52276 e!52279)))

(declare-fun res!41739 () Bool)

(assert (=> b!80053 (=> (not res!41739) (not e!52279))))

(declare-fun lt!37083 () ListLongMap!1437)

(assert (=> b!80053 (= res!41739 (= lt!37083 lt!37088))))

(declare-fun map!1177 (LongMapFixedSize!736) ListLongMap!1437)

(assert (=> b!80053 (= lt!37088 (map!1177 newMap!16))))

(declare-fun getCurrentListMap!423 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) Int) ListLongMap!1437)

(assert (=> b!80053 (= lt!37083 (getCurrentListMap!423 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun b!80054 () Bool)

(assert (=> b!80054 (= e!52281 tp_is_empty!2515)))

(declare-fun b!80055 () Bool)

(declare-fun e!52275 () Bool)

(assert (=> b!80055 (= e!52275 (or (not (= (size!2132 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6297 (v!2600 (underlying!276 thiss!992)))))) (= (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (size!2132 (_values!2275 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!80056 () Bool)

(assert (=> b!80056 (= e!52283 (not e!52275))))

(declare-fun res!41744 () Bool)

(assert (=> b!80056 (=> res!41744 e!52275)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!80056 (= res!41744 (not (validMask!0 (mask!6297 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun lt!37073 () ListLongMap!1437)

(declare-fun lt!37082 () tuple2!2182)

(declare-fun lt!37079 () tuple2!2182)

(declare-fun lt!37081 () ListLongMap!1437)

(declare-fun +!104 (ListLongMap!1437 tuple2!2182) ListLongMap!1437)

(assert (=> b!80056 (= (+!104 lt!37081 lt!37079) (+!104 (+!104 lt!37073 lt!37079) lt!37082))))

(assert (=> b!80056 (= lt!37079 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun lt!37080 () Unit!2327)

(declare-fun addCommutativeForDiffKeys!23 (ListLongMap!1437 (_ BitVec 64) V!3001 (_ BitVec 64) V!3001) Unit!2327)

(assert (=> b!80056 (= lt!37080 (addCommutativeForDiffKeys!23 lt!37073 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun lt!37086 () ListLongMap!1437)

(assert (=> b!80056 (= lt!37086 lt!37081)))

(assert (=> b!80056 (= lt!37081 (+!104 lt!37073 lt!37082))))

(declare-fun lt!37077 () ListLongMap!1437)

(declare-fun lt!37075 () tuple2!2182)

(assert (=> b!80056 (= lt!37086 (+!104 lt!37077 lt!37075))))

(declare-fun lt!37071 () ListLongMap!1437)

(assert (=> b!80056 (= lt!37073 (+!104 lt!37071 lt!37075))))

(assert (=> b!80056 (= lt!37075 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))

(assert (=> b!80056 (= lt!37077 (+!104 lt!37071 lt!37082))))

(assert (=> b!80056 (= lt!37082 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))

(declare-fun lt!37076 () Unit!2327)

(assert (=> b!80056 (= lt!37076 (addCommutativeForDiffKeys!23 lt!37071 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!68 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) Int) ListLongMap!1437)

(assert (=> b!80056 (= lt!37071 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))))))

(assert (= (and start!10350 res!41745) b!80052))

(assert (= (and b!80052 res!41746) b!80041))

(assert (= (and b!80041 res!41741) b!80042))

(assert (= (and b!80042 res!41740) b!80053))

(assert (= (and b!80053 res!41739) b!80039))

(assert (= (and b!80039 res!41743) b!80044))

(assert (= (and b!80044 c!12486) b!80049))

(assert (= (and b!80044 (not c!12486)) b!80048))

(assert (= (and b!80044 res!41742) b!80056))

(assert (= (and b!80056 (not res!41744)) b!80055))

(assert (= (and b!80050 condMapEmpty!3323) mapIsEmpty!3323))

(assert (= (and b!80050 (not condMapEmpty!3323)) mapNonEmpty!3323))

(get-info :version)

(assert (= (and mapNonEmpty!3323 ((_ is ValueCellFull!914) mapValue!3323)) b!80037))

(assert (= (and b!80050 ((_ is ValueCellFull!914) mapDefault!3323)) b!80054))

(assert (= b!80038 b!80050))

(assert (= b!80040 b!80038))

(assert (= b!80046 b!80040))

(assert (= start!10350 b!80046))

(assert (= (and b!80051 condMapEmpty!3324) mapIsEmpty!3324))

(assert (= (and b!80051 (not condMapEmpty!3324)) mapNonEmpty!3324))

(assert (= (and mapNonEmpty!3324 ((_ is ValueCellFull!914) mapValue!3324)) b!80043))

(assert (= (and b!80051 ((_ is ValueCellFull!914) mapDefault!3324)) b!80047))

(assert (= b!80045 b!80051))

(assert (= start!10350 b!80045))

(declare-fun b_lambda!3567 () Bool)

(assert (=> (not b_lambda!3567) (not b!80039)))

(declare-fun t!5169 () Bool)

(declare-fun tb!1629 () Bool)

(assert (=> (and b!80038 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))) t!5169) tb!1629))

(declare-fun result!2829 () Bool)

(assert (=> tb!1629 (= result!2829 tp_is_empty!2515)))

(assert (=> b!80039 t!5169))

(declare-fun b_and!4881 () Bool)

(assert (= b_and!4877 (and (=> t!5169 result!2829) b_and!4881)))

(declare-fun t!5171 () Bool)

(declare-fun tb!1631 () Bool)

(assert (=> (and b!80045 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))) t!5171) tb!1631))

(declare-fun result!2833 () Bool)

(assert (= result!2833 result!2829))

(assert (=> b!80039 t!5171))

(declare-fun b_and!4883 () Bool)

(assert (= b_and!4879 (and (=> t!5171 result!2833) b_and!4883)))

(declare-fun m!81295 () Bool)

(assert (=> b!80039 m!81295))

(declare-fun m!81297 () Bool)

(assert (=> b!80039 m!81297))

(declare-fun m!81299 () Bool)

(assert (=> b!80039 m!81299))

(assert (=> b!80039 m!81297))

(assert (=> b!80039 m!81299))

(declare-fun m!81301 () Bool)

(assert (=> b!80039 m!81301))

(declare-fun m!81303 () Bool)

(assert (=> b!80041 m!81303))

(declare-fun m!81305 () Bool)

(assert (=> b!80045 m!81305))

(declare-fun m!81307 () Bool)

(assert (=> b!80045 m!81307))

(declare-fun m!81309 () Bool)

(assert (=> mapNonEmpty!3323 m!81309))

(declare-fun m!81311 () Bool)

(assert (=> start!10350 m!81311))

(declare-fun m!81313 () Bool)

(assert (=> mapNonEmpty!3324 m!81313))

(assert (=> b!80044 m!81295))

(assert (=> b!80044 m!81295))

(declare-fun m!81315 () Bool)

(assert (=> b!80044 m!81315))

(assert (=> b!80044 m!81295))

(declare-fun m!81317 () Bool)

(assert (=> b!80044 m!81317))

(declare-fun m!81319 () Bool)

(assert (=> b!80049 m!81319))

(declare-fun m!81321 () Bool)

(assert (=> b!80049 m!81321))

(assert (=> b!80049 m!81295))

(declare-fun m!81323 () Bool)

(assert (=> b!80049 m!81323))

(assert (=> b!80049 m!81295))

(assert (=> b!80049 m!81295))

(declare-fun m!81325 () Bool)

(assert (=> b!80049 m!81325))

(assert (=> b!80049 m!81295))

(declare-fun m!81327 () Bool)

(assert (=> b!80049 m!81327))

(declare-fun m!81329 () Bool)

(assert (=> b!80053 m!81329))

(declare-fun m!81331 () Bool)

(assert (=> b!80053 m!81331))

(declare-fun m!81333 () Bool)

(assert (=> b!80038 m!81333))

(declare-fun m!81335 () Bool)

(assert (=> b!80038 m!81335))

(declare-fun m!81337 () Bool)

(assert (=> b!80056 m!81337))

(declare-fun m!81339 () Bool)

(assert (=> b!80056 m!81339))

(declare-fun m!81341 () Bool)

(assert (=> b!80056 m!81341))

(declare-fun m!81343 () Bool)

(assert (=> b!80056 m!81343))

(declare-fun m!81345 () Bool)

(assert (=> b!80056 m!81345))

(declare-fun m!81347 () Bool)

(assert (=> b!80056 m!81347))

(declare-fun m!81349 () Bool)

(assert (=> b!80056 m!81349))

(assert (=> b!80056 m!81295))

(assert (=> b!80056 m!81341))

(assert (=> b!80056 m!81295))

(declare-fun m!81351 () Bool)

(assert (=> b!80056 m!81351))

(assert (=> b!80056 m!81295))

(declare-fun m!81353 () Bool)

(assert (=> b!80056 m!81353))

(declare-fun m!81355 () Bool)

(assert (=> b!80056 m!81355))

(declare-fun m!81357 () Bool)

(assert (=> b!80056 m!81357))

(check-sat tp_is_empty!2515 (not b_next!2197) (not b!80049) (not b!80044) b_and!4881 (not b_lambda!3567) (not b!80039) b_and!4883 (not b_next!2199) (not b!80056) (not b!80041) (not b!80038) (not mapNonEmpty!3323) (not start!10350) (not b!80053) (not mapNonEmpty!3324) (not b!80045))
(check-sat b_and!4881 b_and!4883 (not b_next!2197) (not b_next!2199))
(get-model)

(declare-fun b_lambda!3573 () Bool)

(assert (= b_lambda!3567 (or (and b!80038 b_free!2197) (and b!80045 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))))) b_lambda!3573)))

(check-sat tp_is_empty!2515 (not b_next!2197) (not b!80049) (not b!80044) b_and!4881 (not b!80039) b_and!4883 (not b_next!2199) (not b!80056) (not b!80041) (not b_lambda!3573) (not b!80038) (not mapNonEmpty!3323) (not start!10350) (not b!80053) (not mapNonEmpty!3324) (not b!80045))
(check-sat b_and!4881 b_and!4883 (not b_next!2197) (not b_next!2199))
(get-model)

(declare-fun d!19567 () Bool)

(declare-fun c!12495 () Bool)

(assert (=> d!19567 (= c!12495 ((_ is ValueCellFull!914) (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun e!52398 () V!3001)

(assert (=> d!19567 (= (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) from!355) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52398)))

(declare-fun b!80187 () Bool)

(declare-fun get!1185 (ValueCell!914 V!3001) V!3001)

(assert (=> b!80187 (= e!52398 (get!1185 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) from!355) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80188 () Bool)

(declare-fun get!1186 (ValueCell!914 V!3001) V!3001)

(assert (=> b!80188 (= e!52398 (get!1186 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) from!355) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19567 c!12495) b!80187))

(assert (= (and d!19567 (not c!12495)) b!80188))

(assert (=> b!80187 m!81297))

(assert (=> b!80187 m!81299))

(declare-fun m!81487 () Bool)

(assert (=> b!80187 m!81487))

(assert (=> b!80188 m!81297))

(assert (=> b!80188 m!81299))

(declare-fun m!81489 () Bool)

(assert (=> b!80188 m!81489))

(assert (=> b!80039 d!19567))

(declare-fun d!19569 () Bool)

(declare-fun e!52403 () Bool)

(assert (=> d!19569 e!52403))

(declare-fun res!41797 () Bool)

(assert (=> d!19569 (=> res!41797 e!52403)))

(declare-fun lt!37208 () Bool)

(assert (=> d!19569 (= res!41797 (not lt!37208))))

(declare-fun lt!37207 () Bool)

(assert (=> d!19569 (= lt!37208 lt!37207)))

(declare-fun lt!37206 () Unit!2327)

(declare-fun e!52404 () Unit!2327)

(assert (=> d!19569 (= lt!37206 e!52404)))

(declare-fun c!12498 () Bool)

(assert (=> d!19569 (= c!12498 lt!37207)))

(declare-fun containsKey!140 (List!1514 (_ BitVec 64)) Bool)

(assert (=> d!19569 (= lt!37207 (containsKey!140 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!19569 (= (contains!742 lt!37088 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) lt!37208)))

(declare-fun b!80195 () Bool)

(declare-fun lt!37205 () Unit!2327)

(assert (=> b!80195 (= e!52404 lt!37205)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!89 (List!1514 (_ BitVec 64)) Unit!2327)

(assert (=> b!80195 (= lt!37205 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-datatypes ((Option!142 0))(
  ( (Some!141 (v!2606 V!3001)) (None!140) )
))
(declare-fun isDefined!90 (Option!142) Bool)

(declare-fun getValueByKey!136 (List!1514 (_ BitVec 64)) Option!142)

(assert (=> b!80195 (isDefined!90 (getValueByKey!136 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun b!80196 () Bool)

(declare-fun Unit!2337 () Unit!2327)

(assert (=> b!80196 (= e!52404 Unit!2337)))

(declare-fun b!80197 () Bool)

(assert (=> b!80197 (= e!52403 (isDefined!90 (getValueByKey!136 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (= (and d!19569 c!12498) b!80195))

(assert (= (and d!19569 (not c!12498)) b!80196))

(assert (= (and d!19569 (not res!41797)) b!80197))

(assert (=> d!19569 m!81295))

(declare-fun m!81491 () Bool)

(assert (=> d!19569 m!81491))

(assert (=> b!80195 m!81295))

(declare-fun m!81493 () Bool)

(assert (=> b!80195 m!81493))

(assert (=> b!80195 m!81295))

(declare-fun m!81495 () Bool)

(assert (=> b!80195 m!81495))

(assert (=> b!80195 m!81495))

(declare-fun m!81497 () Bool)

(assert (=> b!80195 m!81497))

(assert (=> b!80197 m!81295))

(assert (=> b!80197 m!81495))

(assert (=> b!80197 m!81495))

(assert (=> b!80197 m!81497))

(assert (=> b!80044 d!19569))

(declare-fun bm!7423 () Bool)

(declare-fun call!7443 () Bool)

(assert (=> bm!7423 (= call!7443 (arrayContainsKey!0 (_keys!3955 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun c!12532 () Bool)

(declare-fun call!7449 () ListLongMap!1437)

(declare-fun call!7428 () ListLongMap!1437)

(declare-fun call!7447 () ListLongMap!1437)

(declare-fun bm!7424 () Bool)

(declare-fun call!7448 () ListLongMap!1437)

(declare-fun c!12534 () Bool)

(assert (=> bm!7424 (= call!7447 (+!104 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428) (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!80278 () Bool)

(declare-fun e!52461 () ListLongMap!1437)

(declare-fun call!7430 () ListLongMap!1437)

(assert (=> b!80278 (= e!52461 call!7430)))

(declare-fun b!80279 () Bool)

(declare-fun e!52449 () tuple2!2180)

(declare-fun e!52450 () tuple2!2180)

(assert (=> b!80279 (= e!52449 e!52450)))

(assert (=> b!80279 (= c!12534 (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80280 () Bool)

(declare-datatypes ((SeekEntryResult!244 0))(
  ( (MissingZero!244 (index!3111 (_ BitVec 32))) (Found!244 (index!3112 (_ BitVec 32))) (Intermediate!244 (undefined!1056 Bool) (index!3113 (_ BitVec 32)) (x!11694 (_ BitVec 32))) (Undefined!244) (MissingVacant!244 (index!3114 (_ BitVec 32))) )
))
(declare-fun lt!37272 () SeekEntryResult!244)

(declare-fun e!52455 () Bool)

(assert (=> b!80280 (= e!52455 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37272)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun b!80281 () Bool)

(declare-fun e!52463 () tuple2!2180)

(declare-fun lt!37267 () tuple2!2180)

(assert (=> b!80281 (= e!52463 (tuple2!2181 (_1!1101 lt!37267) (_2!1101 lt!37267)))))

(declare-fun call!7445 () tuple2!2180)

(assert (=> b!80281 (= lt!37267 call!7445)))

(declare-fun b!80282 () Bool)

(declare-fun e!52466 () Bool)

(declare-fun call!7446 () Bool)

(assert (=> b!80282 (= e!52466 (not call!7446))))

(declare-fun bm!7425 () Bool)

(declare-fun c!12528 () Bool)

(declare-fun lt!37277 () SeekEntryResult!244)

(declare-fun updateHelperNewKey!29 (LongMapFixedSize!736 (_ BitVec 64) V!3001 (_ BitVec 32)) tuple2!2180)

(assert (=> bm!7425 (= call!7445 (updateHelperNewKey!29 newMap!16 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277))))))

(declare-fun d!19571 () Bool)

(declare-fun e!52457 () Bool)

(assert (=> d!19571 e!52457))

(declare-fun res!41837 () Bool)

(assert (=> d!19571 (=> (not res!41837) (not e!52457))))

(declare-fun lt!37268 () tuple2!2180)

(assert (=> d!19571 (= res!41837 (valid!325 (_2!1101 lt!37268)))))

(assert (=> d!19571 (= lt!37268 e!52449)))

(assert (=> d!19571 (= c!12532 (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvneg (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (=> d!19571 (valid!325 newMap!16)))

(assert (=> d!19571 (= (update!116 newMap!16 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084) lt!37268)))

(declare-fun b!80283 () Bool)

(declare-fun e!52448 () Unit!2327)

(declare-fun Unit!2338 () Unit!2327)

(assert (=> b!80283 (= e!52448 Unit!2338)))

(declare-fun lt!37282 () Unit!2327)

(declare-fun call!7437 () Unit!2327)

(assert (=> b!80283 (= lt!37282 call!7437)))

(declare-fun call!7439 () SeekEntryResult!244)

(assert (=> b!80283 (= lt!37272 call!7439)))

(declare-fun res!41838 () Bool)

(assert (=> b!80283 (= res!41838 ((_ is Found!244) lt!37272))))

(assert (=> b!80283 (=> (not res!41838) (not e!52455))))

(assert (=> b!80283 e!52455))

(declare-fun lt!37279 () Unit!2327)

(assert (=> b!80283 (= lt!37279 lt!37282)))

(assert (=> b!80283 false))

(declare-fun bm!7426 () Bool)

(declare-fun call!7444 () Bool)

(declare-fun call!7436 () Bool)

(assert (=> bm!7426 (= call!7444 call!7436)))

(declare-fun e!52460 () Bool)

(declare-fun lt!37289 () SeekEntryResult!244)

(declare-fun b!80284 () Bool)

(assert (=> b!80284 (= e!52460 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37289)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun bm!7427 () Bool)

(declare-fun call!7433 () Bool)

(declare-fun call!7429 () Bool)

(assert (=> bm!7427 (= call!7433 call!7429)))

(declare-fun b!80285 () Bool)

(declare-fun e!52451 () Bool)

(declare-fun lt!37286 () SeekEntryResult!244)

(assert (=> b!80285 (= e!52451 ((_ is Undefined!244) lt!37286))))

(declare-fun b!80286 () Bool)

(declare-fun e!52458 () tuple2!2180)

(assert (=> b!80286 (= e!52463 e!52458)))

(declare-fun c!12526 () Bool)

(assert (=> b!80286 (= c!12526 ((_ is MissingZero!244) lt!37277))))

(declare-fun b!80287 () Bool)

(assert (=> b!80287 (= e!52461 call!7428)))

(declare-fun b!80288 () Bool)

(declare-fun e!52465 () Bool)

(assert (=> b!80288 (= e!52465 e!52466)))

(declare-fun res!41829 () Bool)

(assert (=> b!80288 (= res!41829 call!7433)))

(assert (=> b!80288 (=> (not res!41829) (not e!52466))))

(declare-fun b!80289 () Bool)

(declare-fun res!41834 () Bool)

(declare-fun e!52453 () Bool)

(assert (=> b!80289 (=> (not res!41834) (not e!52453))))

(assert (=> b!80289 (= res!41834 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3111 lt!37286)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80290 () Bool)

(declare-fun lt!37284 () tuple2!2180)

(assert (=> b!80290 (= lt!37284 call!7445)))

(assert (=> b!80290 (= e!52458 (tuple2!2181 (_1!1101 lt!37284) (_2!1101 lt!37284)))))

(declare-fun b!80291 () Bool)

(declare-fun lt!37276 () Unit!2327)

(assert (=> b!80291 (= lt!37276 e!52448)))

(declare-fun c!12536 () Bool)

(declare-fun call!7434 () Bool)

(assert (=> b!80291 (= c!12536 call!7434)))

(declare-fun e!52464 () tuple2!2180)

(assert (=> b!80291 (= e!52464 (tuple2!2181 false newMap!16))))

(declare-fun bm!7428 () Bool)

(declare-fun call!7440 () SeekEntryResult!244)

(assert (=> bm!7428 (= call!7439 call!7440)))

(declare-fun b!80292 () Bool)

(declare-fun lt!37288 () Unit!2327)

(assert (=> b!80292 (= e!52448 lt!37288)))

(declare-fun call!7426 () Unit!2327)

(assert (=> b!80292 (= lt!37288 call!7426)))

(declare-fun lt!37287 () SeekEntryResult!244)

(assert (=> b!80292 (= lt!37287 call!7439)))

(declare-fun c!12525 () Bool)

(assert (=> b!80292 (= c!12525 ((_ is MissingZero!244) lt!37287))))

(declare-fun e!52462 () Bool)

(assert (=> b!80292 e!52462))

(declare-fun bm!7429 () Bool)

(declare-fun call!7432 () ListLongMap!1437)

(assert (=> bm!7429 (= call!7432 call!7447)))

(declare-fun b!80293 () Bool)

(declare-fun res!41833 () Bool)

(assert (=> b!80293 (= res!41833 call!7429)))

(assert (=> b!80293 (=> (not res!41833) (not e!52455))))

(declare-fun b!80294 () Bool)

(declare-fun e!52447 () Unit!2327)

(declare-fun Unit!2339 () Unit!2327)

(assert (=> b!80294 (= e!52447 Unit!2339)))

(declare-fun lt!37273 () Unit!2327)

(assert (=> b!80294 (= lt!37273 call!7426)))

(declare-fun call!7435 () SeekEntryResult!244)

(assert (=> b!80294 (= lt!37286 call!7435)))

(declare-fun c!12527 () Bool)

(assert (=> b!80294 (= c!12527 ((_ is MissingZero!244) lt!37286))))

(declare-fun e!52459 () Bool)

(assert (=> b!80294 e!52459))

(declare-fun lt!37283 () Unit!2327)

(assert (=> b!80294 (= lt!37283 lt!37273)))

(assert (=> b!80294 false))

(declare-fun bm!7430 () Bool)

(declare-fun call!7442 () ListLongMap!1437)

(assert (=> bm!7430 (= call!7442 (map!1177 newMap!16))))

(declare-fun b!80295 () Bool)

(assert (=> b!80295 (= e!52465 ((_ is Undefined!244) lt!37287))))

(declare-fun bm!7431 () Bool)

(declare-fun c!12529 () Bool)

(assert (=> bm!7431 (= call!7430 (getCurrentListMap!423 (_keys!3955 newMap!16) (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!80296 () Bool)

(declare-fun e!52454 () Bool)

(declare-fun e!52452 () Bool)

(assert (=> b!80296 (= e!52454 e!52452)))

(declare-fun res!41830 () Bool)

(declare-fun call!7438 () ListLongMap!1437)

(assert (=> b!80296 (= res!41830 (contains!742 call!7438 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> b!80296 (=> (not res!41830) (not e!52452))))

(declare-fun b!80297 () Bool)

(declare-fun res!41831 () Bool)

(declare-fun e!52467 () Bool)

(assert (=> b!80297 (=> (not res!41831) (not e!52467))))

(assert (=> b!80297 (= res!41831 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3111 lt!37287)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80298 () Bool)

(declare-fun lt!37271 () Unit!2327)

(declare-fun lt!37285 () Unit!2327)

(assert (=> b!80298 (= lt!37271 lt!37285)))

(assert (=> b!80298 (= call!7432 call!7448)))

(declare-fun lt!37264 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!29 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 V!3001 Int) Unit!2327)

(assert (=> b!80298 (= lt!37285 (lemmaChangeLongMinValueKeyThenAddPairToListMap!29 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) lt!37264 (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) lt!37084 (defaultEntry!2292 newMap!16)))))

(assert (=> b!80298 (= lt!37264 (bvor (extraKeys!2139 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!80298 (= e!52450 (tuple2!2181 true (LongMapFixedSize!737 (defaultEntry!2292 newMap!16) (mask!6297 newMap!16) (bvor (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) (zeroValue!2188 newMap!16) lt!37084 (_size!417 newMap!16) (_keys!3955 newMap!16) (_values!2275 newMap!16) (_vacant!417 newMap!16))))))

(declare-fun b!80299 () Bool)

(declare-fun e!52456 () Bool)

(declare-fun call!7431 () Bool)

(assert (=> b!80299 (= e!52456 (not call!7431))))

(declare-fun bm!7432 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) Int) Unit!2327)

(assert (=> bm!7432 (= call!7426 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)))))

(declare-fun bm!7433 () Bool)

(assert (=> bm!7433 (= call!7429 call!7436)))

(declare-fun b!80300 () Bool)

(assert (=> b!80300 (= e!52451 e!52456)))

(declare-fun res!41835 () Bool)

(declare-fun call!7427 () Bool)

(assert (=> b!80300 (= res!41835 call!7427)))

(assert (=> b!80300 (=> (not res!41835) (not e!52456))))

(declare-fun bm!7434 () Bool)

(declare-fun lt!37269 () (_ BitVec 32))

(assert (=> bm!7434 (= call!7428 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun c!12533 () Bool)

(declare-fun bm!7435 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!7435 (= call!7436 (inRange!0 (ite c!12529 (ite c!12536 (index!3112 lt!37272) (ite c!12525 (index!3111 lt!37287) (index!3114 lt!37287))) (ite c!12533 (index!3112 lt!37289) (ite c!12527 (index!3111 lt!37286) (index!3114 lt!37286)))) (mask!6297 newMap!16)))))

(declare-fun b!80301 () Bool)

(assert (=> b!80301 (= c!12528 ((_ is MissingVacant!244) lt!37277))))

(assert (=> b!80301 (= e!52464 e!52463)))

(declare-fun b!80302 () Bool)

(declare-fun res!41832 () Bool)

(assert (=> b!80302 (= res!41832 call!7444)))

(assert (=> b!80302 (=> (not res!41832) (not e!52460))))

(declare-fun bm!7436 () Bool)

(assert (=> bm!7436 (= call!7438 (map!1177 (_2!1101 lt!37268)))))

(declare-fun bm!7437 () Bool)

(assert (=> bm!7437 (= call!7427 call!7444)))

(declare-fun b!80303 () Bool)

(declare-fun c!12537 () Bool)

(assert (=> b!80303 (= c!12537 ((_ is MissingVacant!244) lt!37287))))

(assert (=> b!80303 (= e!52462 e!52465)))

(declare-fun b!80304 () Bool)

(declare-fun res!41836 () Bool)

(assert (=> b!80304 (=> (not res!41836) (not e!52467))))

(assert (=> b!80304 (= res!41836 call!7433)))

(assert (=> b!80304 (= e!52462 e!52467)))

(declare-fun b!80305 () Bool)

(assert (=> b!80305 (= e!52454 (= call!7438 call!7442))))

(declare-fun b!80306 () Bool)

(declare-fun lt!37266 () Unit!2327)

(assert (=> b!80306 (= e!52447 lt!37266)))

(assert (=> b!80306 (= lt!37266 call!7437)))

(assert (=> b!80306 (= lt!37289 call!7435)))

(declare-fun res!41826 () Bool)

(assert (=> b!80306 (= res!41826 ((_ is Found!244) lt!37289))))

(assert (=> b!80306 (=> (not res!41826) (not e!52460))))

(assert (=> b!80306 e!52460))

(declare-fun b!80307 () Bool)

(declare-fun lt!37278 () Unit!2327)

(declare-fun lt!37280 () Unit!2327)

(assert (=> b!80307 (= lt!37278 lt!37280)))

(assert (=> b!80307 (= call!7432 call!7449)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!29 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 V!3001 Int) Unit!2327)

(assert (=> b!80307 (= lt!37280 (lemmaChangeZeroKeyThenAddPairToListMap!29 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) lt!37269 (zeroValue!2188 newMap!16) lt!37084 (minValue!2188 newMap!16) (defaultEntry!2292 newMap!16)))))

(assert (=> b!80307 (= lt!37269 (bvor (extraKeys!2139 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!80307 (= e!52450 (tuple2!2181 true (LongMapFixedSize!737 (defaultEntry!2292 newMap!16) (mask!6297 newMap!16) (bvor (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) lt!37084 (minValue!2188 newMap!16) (_size!417 newMap!16) (_keys!3955 newMap!16) (_values!2275 newMap!16) (_vacant!417 newMap!16))))))

(declare-fun b!80308 () Bool)

(declare-fun lt!37265 () Unit!2327)

(declare-fun lt!37281 () Unit!2327)

(assert (=> b!80308 (= lt!37265 lt!37281)))

(declare-fun call!7441 () ListLongMap!1437)

(assert (=> b!80308 (contains!742 call!7441 (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277)))))

(declare-fun lt!37263 () array!3967)

(declare-fun lemmaValidKeyInArrayIsInListMap!88 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) Int) Unit!2327)

(assert (=> b!80308 (= lt!37281 (lemmaValidKeyInArrayIsInListMap!88 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3112 lt!37277) (defaultEntry!2292 newMap!16)))))

(assert (=> b!80308 (= lt!37263 (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))))))

(declare-fun lt!37275 () Unit!2327)

(declare-fun lt!37270 () Unit!2327)

(assert (=> b!80308 (= lt!37275 lt!37270)))

(assert (=> b!80308 (= call!7447 call!7430)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!29 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) (_ BitVec 64) V!3001 Int) Unit!2327)

(assert (=> b!80308 (= lt!37270 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!29 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3112 lt!37277) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37274 () Unit!2327)

(assert (=> b!80308 (= lt!37274 e!52447)))

(assert (=> b!80308 (= c!12533 call!7434)))

(assert (=> b!80308 (= e!52458 (tuple2!2181 true (LongMapFixedSize!737 (defaultEntry!2292 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (_size!417 newMap!16) (_keys!3955 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (_vacant!417 newMap!16))))))

(declare-fun b!80309 () Bool)

(assert (=> b!80309 (= e!52449 e!52464)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3965 (_ BitVec 32)) SeekEntryResult!244)

(assert (=> b!80309 (= lt!37277 (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(assert (=> b!80309 (= c!12529 ((_ is Undefined!244) lt!37277))))

(declare-fun b!80310 () Bool)

(declare-fun res!41827 () Bool)

(assert (=> b!80310 (= res!41827 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3114 lt!37287)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80310 (=> (not res!41827) (not e!52466))))

(declare-fun b!80311 () Bool)

(assert (=> b!80311 (= e!52452 (= call!7438 (+!104 call!7442 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!80312 () Bool)

(declare-fun res!41828 () Bool)

(assert (=> b!80312 (= res!41828 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3114 lt!37286)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80312 (=> (not res!41828) (not e!52456))))

(declare-fun bm!7438 () Bool)

(assert (=> bm!7438 (= call!7431 call!7443)))

(declare-fun b!80313 () Bool)

(assert (=> b!80313 (= e!52457 e!52454)))

(declare-fun c!12535 () Bool)

(assert (=> b!80313 (= c!12535 (_1!1101 lt!37268))))

(declare-fun bm!7439 () Bool)

(declare-fun c!12531 () Bool)

(assert (=> bm!7439 (= c!12531 c!12529)))

(assert (=> bm!7439 (= call!7434 (contains!742 e!52461 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun b!80314 () Bool)

(assert (=> b!80314 (= e!52467 (not call!7446))))

(declare-fun bm!7440 () Bool)

(assert (=> bm!7440 (= call!7446 call!7443)))

(declare-fun bm!7441 () Bool)

(assert (=> bm!7441 (= call!7441 (getCurrentListMap!423 (_keys!3955 newMap!16) (ite c!12532 (_values!2275 newMap!16) lt!37263) (mask!6297 newMap!16) (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) (zeroValue!2188 newMap!16) (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!80315 () Bool)

(declare-fun c!12530 () Bool)

(assert (=> b!80315 (= c!12530 ((_ is MissingVacant!244) lt!37286))))

(assert (=> b!80315 (= e!52459 e!52451)))

(declare-fun b!80316 () Bool)

(assert (=> b!80316 (= e!52453 (not call!7431))))

(declare-fun bm!7442 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) Int) Unit!2327)

(assert (=> bm!7442 (= call!7437 (lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)))))

(declare-fun bm!7443 () Bool)

(assert (=> bm!7443 (= call!7440 (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(declare-fun bm!7444 () Bool)

(assert (=> bm!7444 (= call!7449 call!7428)))

(declare-fun bm!7445 () Bool)

(assert (=> bm!7445 (= call!7435 call!7440)))

(declare-fun b!80317 () Bool)

(declare-fun res!41839 () Bool)

(assert (=> b!80317 (=> (not res!41839) (not e!52453))))

(assert (=> b!80317 (= res!41839 call!7427)))

(assert (=> b!80317 (= e!52459 e!52453)))

(declare-fun bm!7446 () Bool)

(assert (=> bm!7446 (= call!7448 call!7441)))

(assert (= (and d!19571 c!12532) b!80279))

(assert (= (and d!19571 (not c!12532)) b!80309))

(assert (= (and b!80279 c!12534) b!80307))

(assert (= (and b!80279 (not c!12534)) b!80298))

(assert (= (or b!80307 b!80298) bm!7444))

(assert (= (or b!80307 b!80298) bm!7446))

(assert (= (or b!80307 b!80298) bm!7429))

(assert (= (and b!80309 c!12529) b!80291))

(assert (= (and b!80309 (not c!12529)) b!80301))

(assert (= (and b!80291 c!12536) b!80283))

(assert (= (and b!80291 (not c!12536)) b!80292))

(assert (= (and b!80283 res!41838) b!80293))

(assert (= (and b!80293 res!41833) b!80280))

(assert (= (and b!80292 c!12525) b!80304))

(assert (= (and b!80292 (not c!12525)) b!80303))

(assert (= (and b!80304 res!41836) b!80297))

(assert (= (and b!80297 res!41831) b!80314))

(assert (= (and b!80303 c!12537) b!80288))

(assert (= (and b!80303 (not c!12537)) b!80295))

(assert (= (and b!80288 res!41829) b!80310))

(assert (= (and b!80310 res!41827) b!80282))

(assert (= (or b!80304 b!80288) bm!7427))

(assert (= (or b!80314 b!80282) bm!7440))

(assert (= (or b!80293 bm!7427) bm!7433))

(assert (= (or b!80283 b!80292) bm!7428))

(assert (= (and b!80301 c!12528) b!80281))

(assert (= (and b!80301 (not c!12528)) b!80286))

(assert (= (and b!80286 c!12526) b!80290))

(assert (= (and b!80286 (not c!12526)) b!80308))

(assert (= (and b!80308 c!12533) b!80306))

(assert (= (and b!80308 (not c!12533)) b!80294))

(assert (= (and b!80306 res!41826) b!80302))

(assert (= (and b!80302 res!41832) b!80284))

(assert (= (and b!80294 c!12527) b!80317))

(assert (= (and b!80294 (not c!12527)) b!80315))

(assert (= (and b!80317 res!41839) b!80289))

(assert (= (and b!80289 res!41834) b!80316))

(assert (= (and b!80315 c!12530) b!80300))

(assert (= (and b!80315 (not c!12530)) b!80285))

(assert (= (and b!80300 res!41835) b!80312))

(assert (= (and b!80312 res!41828) b!80299))

(assert (= (or b!80317 b!80300) bm!7437))

(assert (= (or b!80316 b!80299) bm!7438))

(assert (= (or b!80302 bm!7437) bm!7426))

(assert (= (or b!80306 b!80294) bm!7445))

(assert (= (or b!80281 b!80290) bm!7425))

(assert (= (or b!80283 b!80306) bm!7442))

(assert (= (or bm!7428 bm!7445) bm!7443))

(assert (= (or b!80292 b!80294) bm!7432))

(assert (= (or bm!7440 bm!7438) bm!7423))

(assert (= (or bm!7433 bm!7426) bm!7435))

(assert (= (or b!80291 b!80308) bm!7431))

(assert (= (or b!80291 b!80308) bm!7439))

(assert (= (and bm!7439 c!12531) b!80278))

(assert (= (and bm!7439 (not c!12531)) b!80287))

(assert (= (or bm!7446 b!80308) bm!7441))

(assert (= (or bm!7444 b!80287 b!80308) bm!7434))

(assert (= (or bm!7429 b!80308) bm!7424))

(assert (= (and d!19571 res!41837) b!80313))

(assert (= (and b!80313 c!12535) b!80296))

(assert (= (and b!80313 (not c!12535)) b!80305))

(assert (= (and b!80296 res!41830) b!80311))

(assert (= (or b!80311 b!80305) bm!7430))

(assert (= (or b!80296 b!80311 b!80305) bm!7436))

(declare-fun m!81499 () Bool)

(assert (=> b!80310 m!81499))

(declare-fun m!81501 () Bool)

(assert (=> bm!7435 m!81501))

(assert (=> bm!7425 m!81295))

(declare-fun m!81503 () Bool)

(assert (=> bm!7425 m!81503))

(assert (=> b!80296 m!81295))

(declare-fun m!81505 () Bool)

(assert (=> b!80296 m!81505))

(assert (=> bm!7432 m!81295))

(declare-fun m!81507 () Bool)

(assert (=> bm!7432 m!81507))

(assert (=> bm!7443 m!81295))

(declare-fun m!81509 () Bool)

(assert (=> bm!7443 m!81509))

(declare-fun m!81511 () Bool)

(assert (=> b!80280 m!81511))

(declare-fun m!81513 () Bool)

(assert (=> b!80284 m!81513))

(declare-fun m!81515 () Bool)

(assert (=> bm!7441 m!81515))

(declare-fun m!81517 () Bool)

(assert (=> b!80289 m!81517))

(declare-fun m!81519 () Bool)

(assert (=> bm!7431 m!81519))

(declare-fun m!81521 () Bool)

(assert (=> bm!7431 m!81521))

(assert (=> bm!7439 m!81295))

(declare-fun m!81523 () Bool)

(assert (=> bm!7439 m!81523))

(declare-fun m!81525 () Bool)

(assert (=> b!80312 m!81525))

(assert (=> b!80309 m!81295))

(assert (=> b!80309 m!81509))

(declare-fun m!81527 () Bool)

(assert (=> b!80307 m!81527))

(declare-fun m!81529 () Bool)

(assert (=> b!80297 m!81529))

(assert (=> bm!7442 m!81295))

(declare-fun m!81531 () Bool)

(assert (=> bm!7442 m!81531))

(declare-fun m!81533 () Bool)

(assert (=> d!19571 m!81533))

(assert (=> d!19571 m!81303))

(declare-fun m!81535 () Bool)

(assert (=> b!80311 m!81535))

(declare-fun m!81537 () Bool)

(assert (=> bm!7436 m!81537))

(assert (=> bm!7423 m!81295))

(declare-fun m!81539 () Bool)

(assert (=> bm!7423 m!81539))

(declare-fun m!81541 () Bool)

(assert (=> b!80298 m!81541))

(declare-fun m!81543 () Bool)

(assert (=> b!80308 m!81543))

(declare-fun m!81545 () Bool)

(assert (=> b!80308 m!81545))

(declare-fun m!81547 () Bool)

(assert (=> b!80308 m!81547))

(assert (=> b!80308 m!81519))

(assert (=> b!80308 m!81295))

(declare-fun m!81549 () Bool)

(assert (=> b!80308 m!81549))

(assert (=> b!80308 m!81543))

(assert (=> bm!7430 m!81329))

(declare-fun m!81551 () Bool)

(assert (=> bm!7424 m!81551))

(declare-fun m!81553 () Bool)

(assert (=> bm!7434 m!81553))

(assert (=> b!80044 d!19571))

(declare-fun d!19573 () Bool)

(declare-fun e!52470 () Bool)

(assert (=> d!19573 e!52470))

(declare-fun res!41845 () Bool)

(assert (=> d!19573 (=> (not res!41845) (not e!52470))))

(declare-fun lt!37301 () ListLongMap!1437)

(assert (=> d!19573 (= res!41845 (contains!742 lt!37301 (_1!1102 lt!37082)))))

(declare-fun lt!37300 () List!1514)

(assert (=> d!19573 (= lt!37301 (ListLongMap!1438 lt!37300))))

(declare-fun lt!37299 () Unit!2327)

(declare-fun lt!37298 () Unit!2327)

(assert (=> d!19573 (= lt!37299 lt!37298)))

(assert (=> d!19573 (= (getValueByKey!136 lt!37300 (_1!1102 lt!37082)) (Some!141 (_2!1102 lt!37082)))))

(declare-fun lemmaContainsTupThenGetReturnValue!56 (List!1514 (_ BitVec 64) V!3001) Unit!2327)

(assert (=> d!19573 (= lt!37298 (lemmaContainsTupThenGetReturnValue!56 lt!37300 (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(declare-fun insertStrictlySorted!59 (List!1514 (_ BitVec 64) V!3001) List!1514)

(assert (=> d!19573 (= lt!37300 (insertStrictlySorted!59 (toList!734 (+!104 lt!37073 lt!37079)) (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(assert (=> d!19573 (= (+!104 (+!104 lt!37073 lt!37079) lt!37082) lt!37301)))

(declare-fun b!80322 () Bool)

(declare-fun res!41844 () Bool)

(assert (=> b!80322 (=> (not res!41844) (not e!52470))))

(assert (=> b!80322 (= res!41844 (= (getValueByKey!136 (toList!734 lt!37301) (_1!1102 lt!37082)) (Some!141 (_2!1102 lt!37082))))))

(declare-fun b!80323 () Bool)

(declare-fun contains!745 (List!1514 tuple2!2182) Bool)

(assert (=> b!80323 (= e!52470 (contains!745 (toList!734 lt!37301) lt!37082))))

(assert (= (and d!19573 res!41845) b!80322))

(assert (= (and b!80322 res!41844) b!80323))

(declare-fun m!81555 () Bool)

(assert (=> d!19573 m!81555))

(declare-fun m!81557 () Bool)

(assert (=> d!19573 m!81557))

(declare-fun m!81559 () Bool)

(assert (=> d!19573 m!81559))

(declare-fun m!81561 () Bool)

(assert (=> d!19573 m!81561))

(declare-fun m!81563 () Bool)

(assert (=> b!80322 m!81563))

(declare-fun m!81565 () Bool)

(assert (=> b!80323 m!81565))

(assert (=> b!80056 d!19573))

(declare-fun d!19575 () Bool)

(declare-fun e!52471 () Bool)

(assert (=> d!19575 e!52471))

(declare-fun res!41847 () Bool)

(assert (=> d!19575 (=> (not res!41847) (not e!52471))))

(declare-fun lt!37305 () ListLongMap!1437)

(assert (=> d!19575 (= res!41847 (contains!742 lt!37305 (_1!1102 lt!37075)))))

(declare-fun lt!37304 () List!1514)

(assert (=> d!19575 (= lt!37305 (ListLongMap!1438 lt!37304))))

(declare-fun lt!37303 () Unit!2327)

(declare-fun lt!37302 () Unit!2327)

(assert (=> d!19575 (= lt!37303 lt!37302)))

(assert (=> d!19575 (= (getValueByKey!136 lt!37304 (_1!1102 lt!37075)) (Some!141 (_2!1102 lt!37075)))))

(assert (=> d!19575 (= lt!37302 (lemmaContainsTupThenGetReturnValue!56 lt!37304 (_1!1102 lt!37075) (_2!1102 lt!37075)))))

(assert (=> d!19575 (= lt!37304 (insertStrictlySorted!59 (toList!734 lt!37071) (_1!1102 lt!37075) (_2!1102 lt!37075)))))

(assert (=> d!19575 (= (+!104 lt!37071 lt!37075) lt!37305)))

(declare-fun b!80324 () Bool)

(declare-fun res!41846 () Bool)

(assert (=> b!80324 (=> (not res!41846) (not e!52471))))

(assert (=> b!80324 (= res!41846 (= (getValueByKey!136 (toList!734 lt!37305) (_1!1102 lt!37075)) (Some!141 (_2!1102 lt!37075))))))

(declare-fun b!80325 () Bool)

(assert (=> b!80325 (= e!52471 (contains!745 (toList!734 lt!37305) lt!37075))))

(assert (= (and d!19575 res!41847) b!80324))

(assert (= (and b!80324 res!41846) b!80325))

(declare-fun m!81567 () Bool)

(assert (=> d!19575 m!81567))

(declare-fun m!81569 () Bool)

(assert (=> d!19575 m!81569))

(declare-fun m!81571 () Bool)

(assert (=> d!19575 m!81571))

(declare-fun m!81573 () Bool)

(assert (=> d!19575 m!81573))

(declare-fun m!81575 () Bool)

(assert (=> b!80324 m!81575))

(declare-fun m!81577 () Bool)

(assert (=> b!80325 m!81577))

(assert (=> b!80056 d!19575))

(declare-fun d!19577 () Bool)

(assert (=> d!19577 (= (+!104 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (+!104 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(declare-fun lt!37308 () Unit!2327)

(declare-fun choose!475 (ListLongMap!1437 (_ BitVec 64) V!3001 (_ BitVec 64) V!3001) Unit!2327)

(assert (=> d!19577 (= lt!37308 (choose!475 lt!37073 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))

(assert (=> d!19577 (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19577 (= (addCommutativeForDiffKeys!23 lt!37073 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))) lt!37308)))

(declare-fun bs!3392 () Bool)

(assert (= bs!3392 d!19577))

(assert (=> bs!3392 m!81295))

(declare-fun m!81579 () Bool)

(assert (=> bs!3392 m!81579))

(declare-fun m!81581 () Bool)

(assert (=> bs!3392 m!81581))

(assert (=> bs!3392 m!81581))

(declare-fun m!81583 () Bool)

(assert (=> bs!3392 m!81583))

(declare-fun m!81585 () Bool)

(assert (=> bs!3392 m!81585))

(declare-fun m!81587 () Bool)

(assert (=> bs!3392 m!81587))

(assert (=> bs!3392 m!81585))

(assert (=> b!80056 d!19577))

(declare-fun d!19579 () Bool)

(declare-fun e!52472 () Bool)

(assert (=> d!19579 e!52472))

(declare-fun res!41849 () Bool)

(assert (=> d!19579 (=> (not res!41849) (not e!52472))))

(declare-fun lt!37312 () ListLongMap!1437)

(assert (=> d!19579 (= res!41849 (contains!742 lt!37312 (_1!1102 lt!37079)))))

(declare-fun lt!37311 () List!1514)

(assert (=> d!19579 (= lt!37312 (ListLongMap!1438 lt!37311))))

(declare-fun lt!37310 () Unit!2327)

(declare-fun lt!37309 () Unit!2327)

(assert (=> d!19579 (= lt!37310 lt!37309)))

(assert (=> d!19579 (= (getValueByKey!136 lt!37311 (_1!1102 lt!37079)) (Some!141 (_2!1102 lt!37079)))))

(assert (=> d!19579 (= lt!37309 (lemmaContainsTupThenGetReturnValue!56 lt!37311 (_1!1102 lt!37079) (_2!1102 lt!37079)))))

(assert (=> d!19579 (= lt!37311 (insertStrictlySorted!59 (toList!734 lt!37081) (_1!1102 lt!37079) (_2!1102 lt!37079)))))

(assert (=> d!19579 (= (+!104 lt!37081 lt!37079) lt!37312)))

(declare-fun b!80326 () Bool)

(declare-fun res!41848 () Bool)

(assert (=> b!80326 (=> (not res!41848) (not e!52472))))

(assert (=> b!80326 (= res!41848 (= (getValueByKey!136 (toList!734 lt!37312) (_1!1102 lt!37079)) (Some!141 (_2!1102 lt!37079))))))

(declare-fun b!80327 () Bool)

(assert (=> b!80327 (= e!52472 (contains!745 (toList!734 lt!37312) lt!37079))))

(assert (= (and d!19579 res!41849) b!80326))

(assert (= (and b!80326 res!41848) b!80327))

(declare-fun m!81589 () Bool)

(assert (=> d!19579 m!81589))

(declare-fun m!81591 () Bool)

(assert (=> d!19579 m!81591))

(declare-fun m!81593 () Bool)

(assert (=> d!19579 m!81593))

(declare-fun m!81595 () Bool)

(assert (=> d!19579 m!81595))

(declare-fun m!81597 () Bool)

(assert (=> b!80326 m!81597))

(declare-fun m!81599 () Bool)

(assert (=> b!80327 m!81599))

(assert (=> b!80056 d!19579))

(declare-fun d!19581 () Bool)

(declare-fun e!52473 () Bool)

(assert (=> d!19581 e!52473))

(declare-fun res!41851 () Bool)

(assert (=> d!19581 (=> (not res!41851) (not e!52473))))

(declare-fun lt!37316 () ListLongMap!1437)

(assert (=> d!19581 (= res!41851 (contains!742 lt!37316 (_1!1102 lt!37082)))))

(declare-fun lt!37315 () List!1514)

(assert (=> d!19581 (= lt!37316 (ListLongMap!1438 lt!37315))))

(declare-fun lt!37314 () Unit!2327)

(declare-fun lt!37313 () Unit!2327)

(assert (=> d!19581 (= lt!37314 lt!37313)))

(assert (=> d!19581 (= (getValueByKey!136 lt!37315 (_1!1102 lt!37082)) (Some!141 (_2!1102 lt!37082)))))

(assert (=> d!19581 (= lt!37313 (lemmaContainsTupThenGetReturnValue!56 lt!37315 (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(assert (=> d!19581 (= lt!37315 (insertStrictlySorted!59 (toList!734 lt!37073) (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(assert (=> d!19581 (= (+!104 lt!37073 lt!37082) lt!37316)))

(declare-fun b!80328 () Bool)

(declare-fun res!41850 () Bool)

(assert (=> b!80328 (=> (not res!41850) (not e!52473))))

(assert (=> b!80328 (= res!41850 (= (getValueByKey!136 (toList!734 lt!37316) (_1!1102 lt!37082)) (Some!141 (_2!1102 lt!37082))))))

(declare-fun b!80329 () Bool)

(assert (=> b!80329 (= e!52473 (contains!745 (toList!734 lt!37316) lt!37082))))

(assert (= (and d!19581 res!41851) b!80328))

(assert (= (and b!80328 res!41850) b!80329))

(declare-fun m!81601 () Bool)

(assert (=> d!19581 m!81601))

(declare-fun m!81603 () Bool)

(assert (=> d!19581 m!81603))

(declare-fun m!81605 () Bool)

(assert (=> d!19581 m!81605))

(declare-fun m!81607 () Bool)

(assert (=> d!19581 m!81607))

(declare-fun m!81609 () Bool)

(assert (=> b!80328 m!81609))

(declare-fun m!81611 () Bool)

(assert (=> b!80329 m!81611))

(assert (=> b!80056 d!19581))

(declare-fun d!19583 () Bool)

(assert (=> d!19583 (= (validMask!0 (mask!6297 (v!2600 (underlying!276 thiss!992)))) (and (or (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000001111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000011111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000001111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000011111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000001111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000011111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000001111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000011111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000001111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000011111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000111111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000001111111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000011111111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000111111111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000001111111111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000011111111111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000111111111111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000001111111111111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000011111111111111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000111111111111111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00001111111111111111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00011111111111111111111111111111) (= (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!80056 d!19583))

(declare-fun b!80354 () Bool)

(declare-fun lt!37337 () Unit!2327)

(declare-fun lt!37333 () Unit!2327)

(assert (=> b!80354 (= lt!37337 lt!37333)))

(declare-fun lt!37335 () (_ BitVec 64))

(declare-fun lt!37334 () ListLongMap!1437)

(declare-fun lt!37336 () V!3001)

(declare-fun lt!37332 () (_ BitVec 64))

(assert (=> b!80354 (not (contains!742 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)) lt!37332))))

(declare-fun addStillNotContains!30 (ListLongMap!1437 (_ BitVec 64) V!3001 (_ BitVec 64)) Unit!2327)

(assert (=> b!80354 (= lt!37333 (addStillNotContains!30 lt!37334 lt!37335 lt!37336 lt!37332))))

(assert (=> b!80354 (= lt!37332 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!80354 (= lt!37336 (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!80354 (= lt!37335 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!7452 () ListLongMap!1437)

(assert (=> b!80354 (= lt!37334 call!7452)))

(declare-fun e!52494 () ListLongMap!1437)

(assert (=> b!80354 (= e!52494 (+!104 call!7452 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!80355 () Bool)

(declare-fun e!52489 () Bool)

(declare-fun e!52492 () Bool)

(assert (=> b!80355 (= e!52489 e!52492)))

(assert (=> b!80355 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun lt!37331 () ListLongMap!1437)

(declare-fun res!41862 () Bool)

(assert (=> b!80355 (= res!41862 (contains!742 lt!37331 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80355 (=> (not res!41862) (not e!52492))))

(declare-fun bm!7449 () Bool)

(assert (=> bm!7449 (= call!7452 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun b!80356 () Bool)

(declare-fun e!52491 () Bool)

(declare-fun isEmpty!333 (ListLongMap!1437) Bool)

(assert (=> b!80356 (= e!52491 (isEmpty!333 lt!37331))))

(declare-fun b!80357 () Bool)

(assert (=> b!80357 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> b!80357 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2132 (_values!2275 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun apply!80 (ListLongMap!1437 (_ BitVec 64)) V!3001)

(assert (=> b!80357 (= e!52492 (= (apply!80 lt!37331 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!80358 () Bool)

(assert (=> b!80358 (= e!52494 call!7452)))

(declare-fun b!80359 () Bool)

(declare-fun e!52493 () Bool)

(assert (=> b!80359 (= e!52493 e!52489)))

(declare-fun c!12549 () Bool)

(declare-fun e!52488 () Bool)

(assert (=> b!80359 (= c!12549 e!52488)))

(declare-fun res!41861 () Bool)

(assert (=> b!80359 (=> (not res!41861) (not e!52488))))

(assert (=> b!80359 (= res!41861 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!80360 () Bool)

(declare-fun res!41863 () Bool)

(assert (=> b!80360 (=> (not res!41863) (not e!52493))))

(assert (=> b!80360 (= res!41863 (not (contains!742 lt!37331 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80361 () Bool)

(assert (=> b!80361 (= e!52489 e!52491)))

(declare-fun c!12548 () Bool)

(assert (=> b!80361 (= c!12548 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun d!19585 () Bool)

(assert (=> d!19585 e!52493))

(declare-fun res!41860 () Bool)

(assert (=> d!19585 (=> (not res!41860) (not e!52493))))

(assert (=> d!19585 (= res!41860 (not (contains!742 lt!37331 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!52490 () ListLongMap!1437)

(assert (=> d!19585 (= lt!37331 e!52490)))

(declare-fun c!12546 () Bool)

(assert (=> d!19585 (= c!12546 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> d!19585 (validMask!0 (mask!6297 (v!2600 (underlying!276 thiss!992))))))

(assert (=> d!19585 (= (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))) lt!37331)))

(declare-fun b!80362 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!80362 (= e!52488 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80362 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!80363 () Bool)

(assert (=> b!80363 (= e!52490 (ListLongMap!1438 Nil!1511))))

(declare-fun b!80364 () Bool)

(assert (=> b!80364 (= e!52490 e!52494)))

(declare-fun c!12547 () Bool)

(assert (=> b!80364 (= c!12547 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!80365 () Bool)

(assert (=> b!80365 (= e!52491 (= lt!37331 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19585 c!12546) b!80363))

(assert (= (and d!19585 (not c!12546)) b!80364))

(assert (= (and b!80364 c!12547) b!80354))

(assert (= (and b!80364 (not c!12547)) b!80358))

(assert (= (or b!80354 b!80358) bm!7449))

(assert (= (and d!19585 res!41860) b!80360))

(assert (= (and b!80360 res!41863) b!80359))

(assert (= (and b!80359 res!41861) b!80362))

(assert (= (and b!80359 c!12549) b!80355))

(assert (= (and b!80359 (not c!12549)) b!80361))

(assert (= (and b!80355 res!41862) b!80357))

(assert (= (and b!80361 c!12548) b!80365))

(assert (= (and b!80361 (not c!12548)) b!80356))

(declare-fun b_lambda!3575 () Bool)

(assert (=> (not b_lambda!3575) (not b!80354)))

(assert (=> b!80354 t!5169))

(declare-fun b_and!4901 () Bool)

(assert (= b_and!4881 (and (=> t!5169 result!2829) b_and!4901)))

(assert (=> b!80354 t!5171))

(declare-fun b_and!4903 () Bool)

(assert (= b_and!4883 (and (=> t!5171 result!2833) b_and!4903)))

(declare-fun b_lambda!3577 () Bool)

(assert (=> (not b_lambda!3577) (not b!80357)))

(assert (=> b!80357 t!5169))

(declare-fun b_and!4905 () Bool)

(assert (= b_and!4901 (and (=> t!5169 result!2829) b_and!4905)))

(assert (=> b!80357 t!5171))

(declare-fun b_and!4907 () Bool)

(assert (= b_and!4903 (and (=> t!5171 result!2833) b_and!4907)))

(declare-fun m!81613 () Bool)

(assert (=> b!80354 m!81613))

(declare-fun m!81615 () Bool)

(assert (=> b!80354 m!81615))

(declare-fun m!81617 () Bool)

(assert (=> b!80354 m!81617))

(assert (=> b!80354 m!81299))

(declare-fun m!81619 () Bool)

(assert (=> b!80354 m!81619))

(assert (=> b!80354 m!81617))

(declare-fun m!81621 () Bool)

(assert (=> b!80354 m!81621))

(assert (=> b!80354 m!81299))

(assert (=> b!80354 m!81613))

(declare-fun m!81623 () Bool)

(assert (=> b!80354 m!81623))

(declare-fun m!81625 () Bool)

(assert (=> b!80354 m!81625))

(declare-fun m!81627 () Bool)

(assert (=> bm!7449 m!81627))

(assert (=> b!80362 m!81625))

(assert (=> b!80362 m!81625))

(declare-fun m!81629 () Bool)

(assert (=> b!80362 m!81629))

(assert (=> b!80357 m!81625))

(declare-fun m!81631 () Bool)

(assert (=> b!80357 m!81631))

(assert (=> b!80357 m!81617))

(assert (=> b!80357 m!81299))

(assert (=> b!80357 m!81619))

(assert (=> b!80357 m!81617))

(assert (=> b!80357 m!81299))

(assert (=> b!80357 m!81625))

(assert (=> b!80355 m!81625))

(assert (=> b!80355 m!81625))

(declare-fun m!81633 () Bool)

(assert (=> b!80355 m!81633))

(assert (=> b!80365 m!81627))

(declare-fun m!81635 () Bool)

(assert (=> d!19585 m!81635))

(assert (=> d!19585 m!81345))

(declare-fun m!81637 () Bool)

(assert (=> b!80360 m!81637))

(declare-fun m!81639 () Bool)

(assert (=> b!80356 m!81639))

(assert (=> b!80364 m!81625))

(assert (=> b!80364 m!81625))

(assert (=> b!80364 m!81629))

(assert (=> b!80056 d!19585))

(declare-fun d!19587 () Bool)

(assert (=> d!19587 (= (+!104 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (+!104 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(declare-fun lt!37338 () Unit!2327)

(assert (=> d!19587 (= lt!37338 (choose!475 lt!37071 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))

(assert (=> d!19587 (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19587 (= (addCommutativeForDiffKeys!23 lt!37071 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) lt!37338)))

(declare-fun bs!3393 () Bool)

(assert (= bs!3393 d!19587))

(assert (=> bs!3393 m!81295))

(declare-fun m!81641 () Bool)

(assert (=> bs!3393 m!81641))

(declare-fun m!81643 () Bool)

(assert (=> bs!3393 m!81643))

(assert (=> bs!3393 m!81643))

(declare-fun m!81645 () Bool)

(assert (=> bs!3393 m!81645))

(declare-fun m!81647 () Bool)

(assert (=> bs!3393 m!81647))

(declare-fun m!81649 () Bool)

(assert (=> bs!3393 m!81649))

(assert (=> bs!3393 m!81647))

(assert (=> b!80056 d!19587))

(declare-fun d!19589 () Bool)

(declare-fun e!52495 () Bool)

(assert (=> d!19589 e!52495))

(declare-fun res!41865 () Bool)

(assert (=> d!19589 (=> (not res!41865) (not e!52495))))

(declare-fun lt!37342 () ListLongMap!1437)

(assert (=> d!19589 (= res!41865 (contains!742 lt!37342 (_1!1102 lt!37082)))))

(declare-fun lt!37341 () List!1514)

(assert (=> d!19589 (= lt!37342 (ListLongMap!1438 lt!37341))))

(declare-fun lt!37340 () Unit!2327)

(declare-fun lt!37339 () Unit!2327)

(assert (=> d!19589 (= lt!37340 lt!37339)))

(assert (=> d!19589 (= (getValueByKey!136 lt!37341 (_1!1102 lt!37082)) (Some!141 (_2!1102 lt!37082)))))

(assert (=> d!19589 (= lt!37339 (lemmaContainsTupThenGetReturnValue!56 lt!37341 (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(assert (=> d!19589 (= lt!37341 (insertStrictlySorted!59 (toList!734 lt!37071) (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(assert (=> d!19589 (= (+!104 lt!37071 lt!37082) lt!37342)))

(declare-fun b!80366 () Bool)

(declare-fun res!41864 () Bool)

(assert (=> b!80366 (=> (not res!41864) (not e!52495))))

(assert (=> b!80366 (= res!41864 (= (getValueByKey!136 (toList!734 lt!37342) (_1!1102 lt!37082)) (Some!141 (_2!1102 lt!37082))))))

(declare-fun b!80367 () Bool)

(assert (=> b!80367 (= e!52495 (contains!745 (toList!734 lt!37342) lt!37082))))

(assert (= (and d!19589 res!41865) b!80366))

(assert (= (and b!80366 res!41864) b!80367))

(declare-fun m!81651 () Bool)

(assert (=> d!19589 m!81651))

(declare-fun m!81653 () Bool)

(assert (=> d!19589 m!81653))

(declare-fun m!81655 () Bool)

(assert (=> d!19589 m!81655))

(declare-fun m!81657 () Bool)

(assert (=> d!19589 m!81657))

(declare-fun m!81659 () Bool)

(assert (=> b!80366 m!81659))

(declare-fun m!81661 () Bool)

(assert (=> b!80367 m!81661))

(assert (=> b!80056 d!19589))

(declare-fun d!19591 () Bool)

(declare-fun e!52496 () Bool)

(assert (=> d!19591 e!52496))

(declare-fun res!41867 () Bool)

(assert (=> d!19591 (=> (not res!41867) (not e!52496))))

(declare-fun lt!37346 () ListLongMap!1437)

(assert (=> d!19591 (= res!41867 (contains!742 lt!37346 (_1!1102 lt!37075)))))

(declare-fun lt!37345 () List!1514)

(assert (=> d!19591 (= lt!37346 (ListLongMap!1438 lt!37345))))

(declare-fun lt!37344 () Unit!2327)

(declare-fun lt!37343 () Unit!2327)

(assert (=> d!19591 (= lt!37344 lt!37343)))

(assert (=> d!19591 (= (getValueByKey!136 lt!37345 (_1!1102 lt!37075)) (Some!141 (_2!1102 lt!37075)))))

(assert (=> d!19591 (= lt!37343 (lemmaContainsTupThenGetReturnValue!56 lt!37345 (_1!1102 lt!37075) (_2!1102 lt!37075)))))

(assert (=> d!19591 (= lt!37345 (insertStrictlySorted!59 (toList!734 lt!37077) (_1!1102 lt!37075) (_2!1102 lt!37075)))))

(assert (=> d!19591 (= (+!104 lt!37077 lt!37075) lt!37346)))

(declare-fun b!80368 () Bool)

(declare-fun res!41866 () Bool)

(assert (=> b!80368 (=> (not res!41866) (not e!52496))))

(assert (=> b!80368 (= res!41866 (= (getValueByKey!136 (toList!734 lt!37346) (_1!1102 lt!37075)) (Some!141 (_2!1102 lt!37075))))))

(declare-fun b!80369 () Bool)

(assert (=> b!80369 (= e!52496 (contains!745 (toList!734 lt!37346) lt!37075))))

(assert (= (and d!19591 res!41867) b!80368))

(assert (= (and b!80368 res!41866) b!80369))

(declare-fun m!81663 () Bool)

(assert (=> d!19591 m!81663))

(declare-fun m!81665 () Bool)

(assert (=> d!19591 m!81665))

(declare-fun m!81667 () Bool)

(assert (=> d!19591 m!81667))

(declare-fun m!81669 () Bool)

(assert (=> d!19591 m!81669))

(declare-fun m!81671 () Bool)

(assert (=> b!80368 m!81671))

(declare-fun m!81673 () Bool)

(assert (=> b!80369 m!81673))

(assert (=> b!80056 d!19591))

(declare-fun d!19593 () Bool)

(declare-fun e!52497 () Bool)

(assert (=> d!19593 e!52497))

(declare-fun res!41869 () Bool)

(assert (=> d!19593 (=> (not res!41869) (not e!52497))))

(declare-fun lt!37350 () ListLongMap!1437)

(assert (=> d!19593 (= res!41869 (contains!742 lt!37350 (_1!1102 lt!37079)))))

(declare-fun lt!37349 () List!1514)

(assert (=> d!19593 (= lt!37350 (ListLongMap!1438 lt!37349))))

(declare-fun lt!37348 () Unit!2327)

(declare-fun lt!37347 () Unit!2327)

(assert (=> d!19593 (= lt!37348 lt!37347)))

(assert (=> d!19593 (= (getValueByKey!136 lt!37349 (_1!1102 lt!37079)) (Some!141 (_2!1102 lt!37079)))))

(assert (=> d!19593 (= lt!37347 (lemmaContainsTupThenGetReturnValue!56 lt!37349 (_1!1102 lt!37079) (_2!1102 lt!37079)))))

(assert (=> d!19593 (= lt!37349 (insertStrictlySorted!59 (toList!734 lt!37073) (_1!1102 lt!37079) (_2!1102 lt!37079)))))

(assert (=> d!19593 (= (+!104 lt!37073 lt!37079) lt!37350)))

(declare-fun b!80370 () Bool)

(declare-fun res!41868 () Bool)

(assert (=> b!80370 (=> (not res!41868) (not e!52497))))

(assert (=> b!80370 (= res!41868 (= (getValueByKey!136 (toList!734 lt!37350) (_1!1102 lt!37079)) (Some!141 (_2!1102 lt!37079))))))

(declare-fun b!80371 () Bool)

(assert (=> b!80371 (= e!52497 (contains!745 (toList!734 lt!37350) lt!37079))))

(assert (= (and d!19593 res!41869) b!80370))

(assert (= (and b!80370 res!41868) b!80371))

(declare-fun m!81675 () Bool)

(assert (=> d!19593 m!81675))

(declare-fun m!81677 () Bool)

(assert (=> d!19593 m!81677))

(declare-fun m!81679 () Bool)

(assert (=> d!19593 m!81679))

(declare-fun m!81681 () Bool)

(assert (=> d!19593 m!81681))

(declare-fun m!81683 () Bool)

(assert (=> b!80370 m!81683))

(declare-fun m!81685 () Bool)

(assert (=> b!80371 m!81685))

(assert (=> b!80056 d!19593))

(declare-fun d!19595 () Bool)

(assert (=> d!19595 (= (array_inv!1185 (_keys!3955 newMap!16)) (bvsge (size!2131 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80045 d!19595))

(declare-fun d!19597 () Bool)

(assert (=> d!19597 (= (array_inv!1186 (_values!2275 newMap!16)) (bvsge (size!2132 (_values!2275 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80045 d!19597))

(declare-fun d!19599 () Bool)

(assert (=> d!19599 (= (valid!326 thiss!992) (valid!325 (v!2600 (underlying!276 thiss!992))))))

(declare-fun bs!3394 () Bool)

(assert (= bs!3394 d!19599))

(declare-fun m!81687 () Bool)

(assert (=> bs!3394 m!81687))

(assert (=> start!10350 d!19599))

(declare-fun d!19601 () Bool)

(assert (=> d!19601 (= (array_inv!1185 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvsge (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!80038 d!19601))

(declare-fun d!19603 () Bool)

(assert (=> d!19603 (= (array_inv!1186 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvsge (size!2132 (_values!2275 (v!2600 (underlying!276 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!80038 d!19603))

(declare-fun d!19605 () Bool)

(assert (=> d!19605 (not (arrayContainsKey!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37353 () Unit!2327)

(declare-fun choose!68 (array!3965 (_ BitVec 32) (_ BitVec 64) List!1515) Unit!2327)

(assert (=> d!19605 (= lt!37353 (choose!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512)))))

(assert (=> d!19605 (bvslt (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!19605 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512)) lt!37353)))

(declare-fun bs!3395 () Bool)

(assert (= bs!3395 d!19605))

(assert (=> bs!3395 m!81295))

(assert (=> bs!3395 m!81325))

(assert (=> bs!3395 m!81295))

(declare-fun m!81689 () Bool)

(assert (=> bs!3395 m!81689))

(assert (=> b!80049 d!19605))

(declare-fun d!19607 () Bool)

(assert (=> d!19607 (arrayNoDuplicates!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) from!355 Nil!1512)))

(declare-fun lt!37356 () Unit!2327)

(declare-fun choose!39 (array!3965 (_ BitVec 32) (_ BitVec 32)) Unit!2327)

(assert (=> d!19607 (= lt!37356 (choose!39 (_keys!3955 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!19607 (bvslt (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!19607 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000000 from!355) lt!37356)))

(declare-fun bs!3396 () Bool)

(assert (= bs!3396 d!19607))

(assert (=> bs!3396 m!81321))

(declare-fun m!81691 () Bool)

(assert (=> bs!3396 m!81691))

(assert (=> b!80049 d!19607))

(declare-fun d!19609 () Bool)

(declare-fun res!41874 () Bool)

(declare-fun e!52502 () Bool)

(assert (=> d!19609 (=> res!41874 e!52502)))

(assert (=> d!19609 (= res!41874 (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!19609 (= (arrayContainsKey!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!52502)))

(declare-fun b!80376 () Bool)

(declare-fun e!52503 () Bool)

(assert (=> b!80376 (= e!52502 e!52503)))

(declare-fun res!41875 () Bool)

(assert (=> b!80376 (=> (not res!41875) (not e!52503))))

(assert (=> b!80376 (= res!41875 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!80377 () Bool)

(assert (=> b!80377 (= e!52503 (arrayContainsKey!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!19609 (not res!41874)) b!80376))

(assert (= (and b!80376 res!41875) b!80377))

(assert (=> d!19609 m!81625))

(assert (=> b!80377 m!81295))

(declare-fun m!81693 () Bool)

(assert (=> b!80377 m!81693))

(assert (=> b!80049 d!19609))

(declare-fun d!19611 () Bool)

(declare-fun e!52506 () Bool)

(assert (=> d!19611 e!52506))

(declare-fun c!12552 () Bool)

(assert (=> d!19611 (= c!12552 (and (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!37359 () Unit!2327)

(declare-fun choose!476 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) (_ BitVec 32) Int) Unit!2327)

(assert (=> d!19611 (= lt!37359 (choose!476 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))))))

(assert (=> d!19611 (validMask!0 (mask!6297 (v!2600 (underlying!276 thiss!992))))))

(assert (=> d!19611 (= (lemmaListMapContainsThenArrayContainsFrom!61 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))) lt!37359)))

(declare-fun b!80382 () Bool)

(assert (=> b!80382 (= e!52506 (arrayContainsKey!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!80383 () Bool)

(assert (=> b!80383 (= e!52506 (ite (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!19611 c!12552) b!80382))

(assert (= (and d!19611 (not c!12552)) b!80383))

(assert (=> d!19611 m!81295))

(declare-fun m!81695 () Bool)

(assert (=> d!19611 m!81695))

(assert (=> d!19611 m!81345))

(assert (=> b!80382 m!81295))

(assert (=> b!80382 m!81325))

(assert (=> b!80049 d!19611))

(declare-fun b!80394 () Bool)

(declare-fun e!52518 () Bool)

(declare-fun contains!746 (List!1515 (_ BitVec 64)) Bool)

(assert (=> b!80394 (= e!52518 (contains!746 Nil!1512 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun d!19613 () Bool)

(declare-fun res!41882 () Bool)

(declare-fun e!52515 () Bool)

(assert (=> d!19613 (=> res!41882 e!52515)))

(assert (=> d!19613 (= res!41882 (bvsge from!355 (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> d!19613 (= (arrayNoDuplicates!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) from!355 Nil!1512) e!52515)))

(declare-fun b!80395 () Bool)

(declare-fun e!52517 () Bool)

(declare-fun call!7455 () Bool)

(assert (=> b!80395 (= e!52517 call!7455)))

(declare-fun b!80396 () Bool)

(declare-fun e!52516 () Bool)

(assert (=> b!80396 (= e!52516 e!52517)))

(declare-fun c!12555 () Bool)

(assert (=> b!80396 (= c!12555 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun b!80397 () Bool)

(assert (=> b!80397 (= e!52515 e!52516)))

(declare-fun res!41884 () Bool)

(assert (=> b!80397 (=> (not res!41884) (not e!52516))))

(assert (=> b!80397 (= res!41884 (not e!52518))))

(declare-fun res!41883 () Bool)

(assert (=> b!80397 (=> (not res!41883) (not e!52518))))

(assert (=> b!80397 (= res!41883 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun bm!7452 () Bool)

(assert (=> bm!7452 (= call!7455 (arrayNoDuplicates!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)))))

(declare-fun b!80398 () Bool)

(assert (=> b!80398 (= e!52517 call!7455)))

(assert (= (and d!19613 (not res!41882)) b!80397))

(assert (= (and b!80397 res!41883) b!80394))

(assert (= (and b!80397 res!41884) b!80396))

(assert (= (and b!80396 c!12555) b!80395))

(assert (= (and b!80396 (not c!12555)) b!80398))

(assert (= (or b!80395 b!80398) bm!7452))

(assert (=> b!80394 m!81295))

(assert (=> b!80394 m!81295))

(declare-fun m!81697 () Bool)

(assert (=> b!80394 m!81697))

(assert (=> b!80396 m!81295))

(assert (=> b!80396 m!81295))

(declare-fun m!81699 () Bool)

(assert (=> b!80396 m!81699))

(assert (=> b!80397 m!81295))

(assert (=> b!80397 m!81295))

(assert (=> b!80397 m!81699))

(assert (=> bm!7452 m!81295))

(declare-fun m!81701 () Bool)

(assert (=> bm!7452 m!81701))

(assert (=> b!80049 d!19613))

(declare-fun d!19615 () Bool)

(declare-fun res!41891 () Bool)

(declare-fun e!52521 () Bool)

(assert (=> d!19615 (=> (not res!41891) (not e!52521))))

(declare-fun simpleValid!56 (LongMapFixedSize!736) Bool)

(assert (=> d!19615 (= res!41891 (simpleValid!56 newMap!16))))

(assert (=> d!19615 (= (valid!325 newMap!16) e!52521)))

(declare-fun b!80405 () Bool)

(declare-fun res!41892 () Bool)

(assert (=> b!80405 (=> (not res!41892) (not e!52521))))

(declare-fun arrayCountValidKeys!0 (array!3965 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!80405 (= res!41892 (= (arrayCountValidKeys!0 (_keys!3955 newMap!16) #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (_size!417 newMap!16)))))

(declare-fun b!80406 () Bool)

(declare-fun res!41893 () Bool)

(assert (=> b!80406 (=> (not res!41893) (not e!52521))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3965 (_ BitVec 32)) Bool)

(assert (=> b!80406 (= res!41893 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(declare-fun b!80407 () Bool)

(assert (=> b!80407 (= e!52521 (arrayNoDuplicates!0 (_keys!3955 newMap!16) #b00000000000000000000000000000000 Nil!1512))))

(assert (= (and d!19615 res!41891) b!80405))

(assert (= (and b!80405 res!41892) b!80406))

(assert (= (and b!80406 res!41893) b!80407))

(declare-fun m!81703 () Bool)

(assert (=> d!19615 m!81703))

(declare-fun m!81705 () Bool)

(assert (=> b!80405 m!81705))

(declare-fun m!81707 () Bool)

(assert (=> b!80406 m!81707))

(declare-fun m!81709 () Bool)

(assert (=> b!80407 m!81709))

(assert (=> b!80041 d!19615))

(declare-fun d!19617 () Bool)

(assert (=> d!19617 (= (map!1177 newMap!16) (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun bs!3397 () Bool)

(assert (= bs!3397 d!19617))

(declare-fun m!81711 () Bool)

(assert (=> bs!3397 m!81711))

(assert (=> b!80053 d!19617))

(declare-fun b!80450 () Bool)

(declare-fun e!52555 () Bool)

(assert (=> b!80450 (= e!52555 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!80451 () Bool)

(declare-fun e!52548 () Unit!2327)

(declare-fun lt!37409 () Unit!2327)

(assert (=> b!80451 (= e!52548 lt!37409)))

(declare-fun lt!37417 () ListLongMap!1437)

(assert (=> b!80451 (= lt!37417 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun lt!37412 () (_ BitVec 64))

(assert (=> b!80451 (= lt!37412 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37405 () (_ BitVec 64))

(assert (=> b!80451 (= lt!37405 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37421 () Unit!2327)

(declare-fun addStillContains!56 (ListLongMap!1437 (_ BitVec 64) V!3001 (_ BitVec 64)) Unit!2327)

(assert (=> b!80451 (= lt!37421 (addStillContains!56 lt!37417 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37405))))

(assert (=> b!80451 (contains!742 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37405)))

(declare-fun lt!37424 () Unit!2327)

(assert (=> b!80451 (= lt!37424 lt!37421)))

(declare-fun lt!37413 () ListLongMap!1437)

(assert (=> b!80451 (= lt!37413 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun lt!37404 () (_ BitVec 64))

(assert (=> b!80451 (= lt!37404 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37425 () (_ BitVec 64))

(assert (=> b!80451 (= lt!37425 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37411 () Unit!2327)

(declare-fun addApplyDifferent!56 (ListLongMap!1437 (_ BitVec 64) V!3001 (_ BitVec 64)) Unit!2327)

(assert (=> b!80451 (= lt!37411 (addApplyDifferent!56 lt!37413 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37425))))

(assert (=> b!80451 (= (apply!80 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37425) (apply!80 lt!37413 lt!37425))))

(declare-fun lt!37422 () Unit!2327)

(assert (=> b!80451 (= lt!37422 lt!37411)))

(declare-fun lt!37408 () ListLongMap!1437)

(assert (=> b!80451 (= lt!37408 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun lt!37415 () (_ BitVec 64))

(assert (=> b!80451 (= lt!37415 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37414 () (_ BitVec 64))

(assert (=> b!80451 (= lt!37414 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37423 () Unit!2327)

(assert (=> b!80451 (= lt!37423 (addApplyDifferent!56 lt!37408 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37414))))

(assert (=> b!80451 (= (apply!80 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37414) (apply!80 lt!37408 lt!37414))))

(declare-fun lt!37420 () Unit!2327)

(assert (=> b!80451 (= lt!37420 lt!37423)))

(declare-fun lt!37418 () ListLongMap!1437)

(assert (=> b!80451 (= lt!37418 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun lt!37419 () (_ BitVec 64))

(assert (=> b!80451 (= lt!37419 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37416 () (_ BitVec 64))

(assert (=> b!80451 (= lt!37416 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!80451 (= lt!37409 (addApplyDifferent!56 lt!37418 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37416))))

(assert (=> b!80451 (= (apply!80 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37416) (apply!80 lt!37418 lt!37416))))

(declare-fun b!80452 () Bool)

(declare-fun e!52554 () ListLongMap!1437)

(declare-fun call!7472 () ListLongMap!1437)

(assert (=> b!80452 (= e!52554 call!7472)))

(declare-fun bm!7467 () Bool)

(declare-fun call!7471 () ListLongMap!1437)

(declare-fun call!7470 () ListLongMap!1437)

(assert (=> bm!7467 (= call!7471 call!7470)))

(declare-fun bm!7468 () Bool)

(declare-fun call!7474 () Bool)

(declare-fun lt!37406 () ListLongMap!1437)

(assert (=> bm!7468 (= call!7474 (contains!742 lt!37406 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80453 () Bool)

(declare-fun e!52552 () Bool)

(declare-fun call!7476 () Bool)

(assert (=> b!80453 (= e!52552 (not call!7476))))

(declare-fun b!80454 () Bool)

(declare-fun e!52557 () Bool)

(assert (=> b!80454 (= e!52557 (not call!7474))))

(declare-fun b!80455 () Bool)

(declare-fun e!52551 () ListLongMap!1437)

(declare-fun call!7475 () ListLongMap!1437)

(assert (=> b!80455 (= e!52551 (+!104 call!7475 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun d!19619 () Bool)

(declare-fun e!52559 () Bool)

(assert (=> d!19619 e!52559))

(declare-fun res!41916 () Bool)

(assert (=> d!19619 (=> (not res!41916) (not e!52559))))

(assert (=> d!19619 (= res!41916 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun lt!37410 () ListLongMap!1437)

(assert (=> d!19619 (= lt!37406 lt!37410)))

(declare-fun lt!37407 () Unit!2327)

(assert (=> d!19619 (= lt!37407 e!52548)))

(declare-fun c!12569 () Bool)

(assert (=> d!19619 (= c!12569 e!52555)))

(declare-fun res!41913 () Bool)

(assert (=> d!19619 (=> (not res!41913) (not e!52555))))

(assert (=> d!19619 (= res!41913 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> d!19619 (= lt!37410 e!52551)))

(declare-fun c!12571 () Bool)

(assert (=> d!19619 (= c!12571 (and (not (= (bvand (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19619 (validMask!0 (mask!6297 (v!2600 (underlying!276 thiss!992))))))

(assert (=> d!19619 (= (getCurrentListMap!423 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))) lt!37406)))

(declare-fun bm!7469 () Bool)

(assert (=> bm!7469 (= call!7476 (contains!742 lt!37406 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7470 () Bool)

(assert (=> bm!7470 (= call!7472 call!7471)))

(declare-fun b!80456 () Bool)

(declare-fun e!52558 () Bool)

(assert (=> b!80456 (= e!52558 (= (apply!80 lt!37406 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80456 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2132 (_values!2275 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> b!80456 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!80457 () Bool)

(declare-fun res!41914 () Bool)

(assert (=> b!80457 (=> (not res!41914) (not e!52559))))

(declare-fun e!52550 () Bool)

(assert (=> b!80457 (= res!41914 e!52550)))

(declare-fun res!41917 () Bool)

(assert (=> b!80457 (=> res!41917 e!52550)))

(declare-fun e!52560 () Bool)

(assert (=> b!80457 (= res!41917 (not e!52560))))

(declare-fun res!41912 () Bool)

(assert (=> b!80457 (=> (not res!41912) (not e!52560))))

(assert (=> b!80457 (= res!41912 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!80458 () Bool)

(declare-fun e!52553 () Bool)

(assert (=> b!80458 (= e!52553 (= (apply!80 lt!37406 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun b!80459 () Bool)

(assert (=> b!80459 (= e!52560 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!7471 () Bool)

(declare-fun call!7473 () ListLongMap!1437)

(assert (=> bm!7471 (= call!7473 call!7475)))

(declare-fun b!80460 () Bool)

(assert (=> b!80460 (= e!52557 e!52553)))

(declare-fun res!41920 () Bool)

(assert (=> b!80460 (= res!41920 call!7474)))

(assert (=> b!80460 (=> (not res!41920) (not e!52553))))

(declare-fun b!80461 () Bool)

(assert (=> b!80461 (= e!52554 call!7473)))

(declare-fun b!80462 () Bool)

(assert (=> b!80462 (= e!52559 e!52557)))

(declare-fun c!12568 () Bool)

(assert (=> b!80462 (= c!12568 (not (= (bvand (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80463 () Bool)

(assert (=> b!80463 (= e!52550 e!52558)))

(declare-fun res!41915 () Bool)

(assert (=> b!80463 (=> (not res!41915) (not e!52558))))

(assert (=> b!80463 (= res!41915 (contains!742 lt!37406 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80463 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!80464 () Bool)

(declare-fun res!41918 () Bool)

(assert (=> b!80464 (=> (not res!41918) (not e!52559))))

(assert (=> b!80464 (= res!41918 e!52552)))

(declare-fun c!12572 () Bool)

(assert (=> b!80464 (= c!12572 (not (= (bvand (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80465 () Bool)

(declare-fun e!52549 () ListLongMap!1437)

(assert (=> b!80465 (= e!52549 call!7473)))

(declare-fun b!80466 () Bool)

(declare-fun c!12570 () Bool)

(assert (=> b!80466 (= c!12570 (and (not (= (bvand (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!80466 (= e!52549 e!52554)))

(declare-fun bm!7472 () Bool)

(declare-fun c!12573 () Bool)

(assert (=> bm!7472 (= call!7475 (+!104 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472)) (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun bm!7473 () Bool)

(assert (=> bm!7473 (= call!7470 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun b!80467 () Bool)

(declare-fun e!52556 () Bool)

(assert (=> b!80467 (= e!52552 e!52556)))

(declare-fun res!41919 () Bool)

(assert (=> b!80467 (= res!41919 call!7476)))

(assert (=> b!80467 (=> (not res!41919) (not e!52556))))

(declare-fun b!80468 () Bool)

(assert (=> b!80468 (= e!52551 e!52549)))

(assert (=> b!80468 (= c!12573 (and (not (= (bvand (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80469 () Bool)

(assert (=> b!80469 (= e!52556 (= (apply!80 lt!37406 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun b!80470 () Bool)

(declare-fun Unit!2340 () Unit!2327)

(assert (=> b!80470 (= e!52548 Unit!2340)))

(assert (= (and d!19619 c!12571) b!80455))

(assert (= (and d!19619 (not c!12571)) b!80468))

(assert (= (and b!80468 c!12573) b!80465))

(assert (= (and b!80468 (not c!12573)) b!80466))

(assert (= (and b!80466 c!12570) b!80461))

(assert (= (and b!80466 (not c!12570)) b!80452))

(assert (= (or b!80461 b!80452) bm!7470))

(assert (= (or b!80465 bm!7470) bm!7467))

(assert (= (or b!80465 b!80461) bm!7471))

(assert (= (or b!80455 bm!7467) bm!7473))

(assert (= (or b!80455 bm!7471) bm!7472))

(assert (= (and d!19619 res!41913) b!80450))

(assert (= (and d!19619 c!12569) b!80451))

(assert (= (and d!19619 (not c!12569)) b!80470))

(assert (= (and d!19619 res!41916) b!80457))

(assert (= (and b!80457 res!41912) b!80459))

(assert (= (and b!80457 (not res!41917)) b!80463))

(assert (= (and b!80463 res!41915) b!80456))

(assert (= (and b!80457 res!41914) b!80464))

(assert (= (and b!80464 c!12572) b!80467))

(assert (= (and b!80464 (not c!12572)) b!80453))

(assert (= (and b!80467 res!41919) b!80469))

(assert (= (or b!80467 b!80453) bm!7469))

(assert (= (and b!80464 res!41918) b!80462))

(assert (= (and b!80462 c!12568) b!80460))

(assert (= (and b!80462 (not c!12568)) b!80454))

(assert (= (and b!80460 res!41920) b!80458))

(assert (= (or b!80460 b!80454) bm!7468))

(declare-fun b_lambda!3579 () Bool)

(assert (=> (not b_lambda!3579) (not b!80456)))

(assert (=> b!80456 t!5169))

(declare-fun b_and!4909 () Bool)

(assert (= b_and!4905 (and (=> t!5169 result!2829) b_and!4909)))

(assert (=> b!80456 t!5171))

(declare-fun b_and!4911 () Bool)

(assert (= b_and!4907 (and (=> t!5171 result!2833) b_and!4911)))

(assert (=> b!80456 m!81625))

(declare-fun m!81713 () Bool)

(assert (=> b!80456 m!81713))

(assert (=> b!80456 m!81625))

(assert (=> b!80456 m!81617))

(assert (=> b!80456 m!81617))

(assert (=> b!80456 m!81299))

(assert (=> b!80456 m!81619))

(assert (=> b!80456 m!81299))

(declare-fun m!81715 () Bool)

(assert (=> bm!7469 m!81715))

(assert (=> b!80459 m!81625))

(assert (=> b!80459 m!81625))

(assert (=> b!80459 m!81629))

(declare-fun m!81717 () Bool)

(assert (=> b!80451 m!81717))

(assert (=> b!80451 m!81357))

(declare-fun m!81719 () Bool)

(assert (=> b!80451 m!81719))

(declare-fun m!81721 () Bool)

(assert (=> b!80451 m!81721))

(declare-fun m!81723 () Bool)

(assert (=> b!80451 m!81723))

(declare-fun m!81725 () Bool)

(assert (=> b!80451 m!81725))

(declare-fun m!81727 () Bool)

(assert (=> b!80451 m!81727))

(declare-fun m!81729 () Bool)

(assert (=> b!80451 m!81729))

(declare-fun m!81731 () Bool)

(assert (=> b!80451 m!81731))

(declare-fun m!81733 () Bool)

(assert (=> b!80451 m!81733))

(declare-fun m!81735 () Bool)

(assert (=> b!80451 m!81735))

(declare-fun m!81737 () Bool)

(assert (=> b!80451 m!81737))

(declare-fun m!81739 () Bool)

(assert (=> b!80451 m!81739))

(assert (=> b!80451 m!81721))

(assert (=> b!80451 m!81731))

(assert (=> b!80451 m!81625))

(declare-fun m!81741 () Bool)

(assert (=> b!80451 m!81741))

(assert (=> b!80451 m!81725))

(declare-fun m!81743 () Bool)

(assert (=> b!80451 m!81743))

(assert (=> b!80451 m!81737))

(declare-fun m!81745 () Bool)

(assert (=> b!80451 m!81745))

(assert (=> b!80463 m!81625))

(assert (=> b!80463 m!81625))

(declare-fun m!81747 () Bool)

(assert (=> b!80463 m!81747))

(declare-fun m!81749 () Bool)

(assert (=> b!80455 m!81749))

(declare-fun m!81751 () Bool)

(assert (=> bm!7468 m!81751))

(declare-fun m!81753 () Bool)

(assert (=> b!80458 m!81753))

(assert (=> bm!7473 m!81357))

(declare-fun m!81755 () Bool)

(assert (=> bm!7472 m!81755))

(declare-fun m!81757 () Bool)

(assert (=> b!80469 m!81757))

(assert (=> b!80450 m!81625))

(assert (=> b!80450 m!81625))

(assert (=> b!80450 m!81629))

(assert (=> d!19619 m!81345))

(assert (=> b!80053 d!19619))

(declare-fun condMapEmpty!3339 () Bool)

(declare-fun mapDefault!3339 () ValueCell!914)

(assert (=> mapNonEmpty!3324 (= condMapEmpty!3339 (= mapRest!3324 ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3339)))))

(declare-fun e!52566 () Bool)

(declare-fun mapRes!3339 () Bool)

(assert (=> mapNonEmpty!3324 (= tp!8800 (and e!52566 mapRes!3339))))

(declare-fun b!80478 () Bool)

(assert (=> b!80478 (= e!52566 tp_is_empty!2515)))

(declare-fun b!80477 () Bool)

(declare-fun e!52565 () Bool)

(assert (=> b!80477 (= e!52565 tp_is_empty!2515)))

(declare-fun mapNonEmpty!3339 () Bool)

(declare-fun tp!8829 () Bool)

(assert (=> mapNonEmpty!3339 (= mapRes!3339 (and tp!8829 e!52565))))

(declare-fun mapRest!3339 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapKey!3339 () (_ BitVec 32))

(declare-fun mapValue!3339 () ValueCell!914)

(assert (=> mapNonEmpty!3339 (= mapRest!3324 (store mapRest!3339 mapKey!3339 mapValue!3339))))

(declare-fun mapIsEmpty!3339 () Bool)

(assert (=> mapIsEmpty!3339 mapRes!3339))

(assert (= (and mapNonEmpty!3324 condMapEmpty!3339) mapIsEmpty!3339))

(assert (= (and mapNonEmpty!3324 (not condMapEmpty!3339)) mapNonEmpty!3339))

(assert (= (and mapNonEmpty!3339 ((_ is ValueCellFull!914) mapValue!3339)) b!80477))

(assert (= (and mapNonEmpty!3324 ((_ is ValueCellFull!914) mapDefault!3339)) b!80478))

(declare-fun m!81759 () Bool)

(assert (=> mapNonEmpty!3339 m!81759))

(declare-fun condMapEmpty!3340 () Bool)

(declare-fun mapDefault!3340 () ValueCell!914)

(assert (=> mapNonEmpty!3323 (= condMapEmpty!3340 (= mapRest!3323 ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3340)))))

(declare-fun e!52568 () Bool)

(declare-fun mapRes!3340 () Bool)

(assert (=> mapNonEmpty!3323 (= tp!8801 (and e!52568 mapRes!3340))))

(declare-fun b!80480 () Bool)

(assert (=> b!80480 (= e!52568 tp_is_empty!2515)))

(declare-fun b!80479 () Bool)

(declare-fun e!52567 () Bool)

(assert (=> b!80479 (= e!52567 tp_is_empty!2515)))

(declare-fun mapNonEmpty!3340 () Bool)

(declare-fun tp!8830 () Bool)

(assert (=> mapNonEmpty!3340 (= mapRes!3340 (and tp!8830 e!52567))))

(declare-fun mapRest!3340 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapValue!3340 () ValueCell!914)

(declare-fun mapKey!3340 () (_ BitVec 32))

(assert (=> mapNonEmpty!3340 (= mapRest!3323 (store mapRest!3340 mapKey!3340 mapValue!3340))))

(declare-fun mapIsEmpty!3340 () Bool)

(assert (=> mapIsEmpty!3340 mapRes!3340))

(assert (= (and mapNonEmpty!3323 condMapEmpty!3340) mapIsEmpty!3340))

(assert (= (and mapNonEmpty!3323 (not condMapEmpty!3340)) mapNonEmpty!3340))

(assert (= (and mapNonEmpty!3340 ((_ is ValueCellFull!914) mapValue!3340)) b!80479))

(assert (= (and mapNonEmpty!3323 ((_ is ValueCellFull!914) mapDefault!3340)) b!80480))

(declare-fun m!81761 () Bool)

(assert (=> mapNonEmpty!3340 m!81761))

(declare-fun b_lambda!3581 () Bool)

(assert (= b_lambda!3579 (or (and b!80038 b_free!2197) (and b!80045 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))))) b_lambda!3581)))

(declare-fun b_lambda!3583 () Bool)

(assert (= b_lambda!3577 (or (and b!80038 b_free!2197) (and b!80045 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))))) b_lambda!3583)))

(declare-fun b_lambda!3585 () Bool)

(assert (= b_lambda!3575 (or (and b!80038 b_free!2197) (and b!80045 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))))) b_lambda!3585)))

(check-sat (not b!80322) (not d!19607) (not b_lambda!3581) tp_is_empty!2515 (not b!80377) (not b!80455) (not bm!7431) (not b!80188) (not b!80311) (not d!19579) (not b!80355) (not b_next!2197) (not b!80356) (not d!19605) (not b!80325) (not d!19585) (not b_lambda!3585) (not bm!7436) (not b!80365) (not bm!7473) (not d!19587) (not b!80368) (not b!80197) (not b!80396) (not b!80328) (not d!19571) (not d!19611) (not b!80195) (not b!80324) (not bm!7452) (not d!19573) (not b!80397) (not bm!7443) (not b!80323) (not d!19619) (not b!80326) (not d!19591) (not b!80459) (not bm!7430) (not mapNonEmpty!3339) (not b!80456) (not b!80357) b_and!4909 (not b!80366) (not bm!7425) (not b!80371) (not b!80458) (not b!80405) (not d!19615) (not b!80360) (not b!80308) (not b!80354) (not bm!7434) (not b!80307) (not b!80370) (not bm!7472) (not b_next!2199) (not b!80394) (not d!19593) (not b!80369) (not b!80382) (not b!80362) (not bm!7432) (not b!80187) (not b!80327) (not b!80407) (not b!80469) (not b!80450) (not bm!7423) (not d!19575) (not d!19581) (not mapNonEmpty!3340) b_and!4911 (not b!80367) (not b!80364) (not bm!7469) (not b_lambda!3583) (not d!19617) (not bm!7439) (not bm!7449) (not b_lambda!3573) (not bm!7441) (not b!80296) (not d!19569) (not d!19577) (not bm!7442) (not b!80406) (not d!19589) (not b!80329) (not b!80451) (not bm!7435) (not b!80309) (not bm!7468) (not b!80298) (not bm!7424) (not d!19599) (not b!80463))
(check-sat b_and!4909 b_and!4911 (not b_next!2197) (not b_next!2199))
(get-model)

(declare-fun d!19621 () Bool)

(declare-fun e!52569 () Bool)

(assert (=> d!19621 e!52569))

(declare-fun res!41921 () Bool)

(assert (=> d!19621 (=> res!41921 e!52569)))

(declare-fun lt!37429 () Bool)

(assert (=> d!19621 (= res!41921 (not lt!37429))))

(declare-fun lt!37428 () Bool)

(assert (=> d!19621 (= lt!37429 lt!37428)))

(declare-fun lt!37427 () Unit!2327)

(declare-fun e!52570 () Unit!2327)

(assert (=> d!19621 (= lt!37427 e!52570)))

(declare-fun c!12574 () Bool)

(assert (=> d!19621 (= c!12574 lt!37428)))

(assert (=> d!19621 (= lt!37428 (containsKey!140 (toList!734 lt!37331) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19621 (= (contains!742 lt!37331 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37429)))

(declare-fun b!80481 () Bool)

(declare-fun lt!37426 () Unit!2327)

(assert (=> b!80481 (= e!52570 lt!37426)))

(assert (=> b!80481 (= lt!37426 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37331) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80481 (isDefined!90 (getValueByKey!136 (toList!734 lt!37331) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80482 () Bool)

(declare-fun Unit!2341 () Unit!2327)

(assert (=> b!80482 (= e!52570 Unit!2341)))

(declare-fun b!80483 () Bool)

(assert (=> b!80483 (= e!52569 (isDefined!90 (getValueByKey!136 (toList!734 lt!37331) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19621 c!12574) b!80481))

(assert (= (and d!19621 (not c!12574)) b!80482))

(assert (= (and d!19621 (not res!41921)) b!80483))

(declare-fun m!81763 () Bool)

(assert (=> d!19621 m!81763))

(declare-fun m!81765 () Bool)

(assert (=> b!80481 m!81765))

(declare-fun m!81767 () Bool)

(assert (=> b!80481 m!81767))

(assert (=> b!80481 m!81767))

(declare-fun m!81769 () Bool)

(assert (=> b!80481 m!81769))

(assert (=> b!80483 m!81767))

(assert (=> b!80483 m!81767))

(assert (=> b!80483 m!81769))

(assert (=> b!80360 d!19621))

(declare-fun d!19623 () Bool)

(declare-fun e!52571 () Bool)

(assert (=> d!19623 e!52571))

(declare-fun res!41922 () Bool)

(assert (=> d!19623 (=> res!41922 e!52571)))

(declare-fun lt!37433 () Bool)

(assert (=> d!19623 (= res!41922 (not lt!37433))))

(declare-fun lt!37432 () Bool)

(assert (=> d!19623 (= lt!37433 lt!37432)))

(declare-fun lt!37431 () Unit!2327)

(declare-fun e!52572 () Unit!2327)

(assert (=> d!19623 (= lt!37431 e!52572)))

(declare-fun c!12575 () Bool)

(assert (=> d!19623 (= c!12575 lt!37432)))

(assert (=> d!19623 (= lt!37432 (containsKey!140 (toList!734 lt!37301) (_1!1102 lt!37082)))))

(assert (=> d!19623 (= (contains!742 lt!37301 (_1!1102 lt!37082)) lt!37433)))

(declare-fun b!80484 () Bool)

(declare-fun lt!37430 () Unit!2327)

(assert (=> b!80484 (= e!52572 lt!37430)))

(assert (=> b!80484 (= lt!37430 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37301) (_1!1102 lt!37082)))))

(assert (=> b!80484 (isDefined!90 (getValueByKey!136 (toList!734 lt!37301) (_1!1102 lt!37082)))))

(declare-fun b!80485 () Bool)

(declare-fun Unit!2342 () Unit!2327)

(assert (=> b!80485 (= e!52572 Unit!2342)))

(declare-fun b!80486 () Bool)

(assert (=> b!80486 (= e!52571 (isDefined!90 (getValueByKey!136 (toList!734 lt!37301) (_1!1102 lt!37082))))))

(assert (= (and d!19623 c!12575) b!80484))

(assert (= (and d!19623 (not c!12575)) b!80485))

(assert (= (and d!19623 (not res!41922)) b!80486))

(declare-fun m!81771 () Bool)

(assert (=> d!19623 m!81771))

(declare-fun m!81773 () Bool)

(assert (=> b!80484 m!81773))

(assert (=> b!80484 m!81563))

(assert (=> b!80484 m!81563))

(declare-fun m!81775 () Bool)

(assert (=> b!80484 m!81775))

(assert (=> b!80486 m!81563))

(assert (=> b!80486 m!81563))

(assert (=> b!80486 m!81775))

(assert (=> d!19573 d!19623))

(declare-fun b!80498 () Bool)

(declare-fun e!52578 () Option!142)

(assert (=> b!80498 (= e!52578 None!140)))

(declare-fun b!80495 () Bool)

(declare-fun e!52577 () Option!142)

(assert (=> b!80495 (= e!52577 (Some!141 (_2!1102 (h!2099 lt!37300))))))

(declare-fun b!80497 () Bool)

(assert (=> b!80497 (= e!52578 (getValueByKey!136 (t!5172 lt!37300) (_1!1102 lt!37082)))))

(declare-fun d!19625 () Bool)

(declare-fun c!12580 () Bool)

(assert (=> d!19625 (= c!12580 (and ((_ is Cons!1510) lt!37300) (= (_1!1102 (h!2099 lt!37300)) (_1!1102 lt!37082))))))

(assert (=> d!19625 (= (getValueByKey!136 lt!37300 (_1!1102 lt!37082)) e!52577)))

(declare-fun b!80496 () Bool)

(assert (=> b!80496 (= e!52577 e!52578)))

(declare-fun c!12581 () Bool)

(assert (=> b!80496 (= c!12581 (and ((_ is Cons!1510) lt!37300) (not (= (_1!1102 (h!2099 lt!37300)) (_1!1102 lt!37082)))))))

(assert (= (and d!19625 c!12580) b!80495))

(assert (= (and d!19625 (not c!12580)) b!80496))

(assert (= (and b!80496 c!12581) b!80497))

(assert (= (and b!80496 (not c!12581)) b!80498))

(declare-fun m!81777 () Bool)

(assert (=> b!80497 m!81777))

(assert (=> d!19573 d!19625))

(declare-fun d!19627 () Bool)

(assert (=> d!19627 (= (getValueByKey!136 lt!37300 (_1!1102 lt!37082)) (Some!141 (_2!1102 lt!37082)))))

(declare-fun lt!37436 () Unit!2327)

(declare-fun choose!477 (List!1514 (_ BitVec 64) V!3001) Unit!2327)

(assert (=> d!19627 (= lt!37436 (choose!477 lt!37300 (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(declare-fun e!52581 () Bool)

(assert (=> d!19627 e!52581))

(declare-fun res!41927 () Bool)

(assert (=> d!19627 (=> (not res!41927) (not e!52581))))

(declare-fun isStrictlySorted!291 (List!1514) Bool)

(assert (=> d!19627 (= res!41927 (isStrictlySorted!291 lt!37300))))

(assert (=> d!19627 (= (lemmaContainsTupThenGetReturnValue!56 lt!37300 (_1!1102 lt!37082) (_2!1102 lt!37082)) lt!37436)))

(declare-fun b!80503 () Bool)

(declare-fun res!41928 () Bool)

(assert (=> b!80503 (=> (not res!41928) (not e!52581))))

(assert (=> b!80503 (= res!41928 (containsKey!140 lt!37300 (_1!1102 lt!37082)))))

(declare-fun b!80504 () Bool)

(assert (=> b!80504 (= e!52581 (contains!745 lt!37300 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(assert (= (and d!19627 res!41927) b!80503))

(assert (= (and b!80503 res!41928) b!80504))

(assert (=> d!19627 m!81557))

(declare-fun m!81779 () Bool)

(assert (=> d!19627 m!81779))

(declare-fun m!81781 () Bool)

(assert (=> d!19627 m!81781))

(declare-fun m!81783 () Bool)

(assert (=> b!80503 m!81783))

(declare-fun m!81785 () Bool)

(assert (=> b!80504 m!81785))

(assert (=> d!19573 d!19627))

(declare-fun b!80525 () Bool)

(declare-fun e!52595 () List!1514)

(declare-fun call!7485 () List!1514)

(assert (=> b!80525 (= e!52595 call!7485)))

(declare-fun c!12593 () Bool)

(declare-fun e!52592 () List!1514)

(declare-fun bm!7480 () Bool)

(declare-fun call!7484 () List!1514)

(declare-fun $colon$colon!69 (List!1514 tuple2!2182) List!1514)

(assert (=> bm!7480 (= call!7484 ($colon$colon!69 e!52592 (ite c!12593 (h!2099 (toList!734 (+!104 lt!37073 lt!37079))) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082)))))))

(declare-fun c!12591 () Bool)

(assert (=> bm!7480 (= c!12591 c!12593)))

(declare-fun b!80526 () Bool)

(declare-fun e!52596 () Bool)

(declare-fun lt!37439 () List!1514)

(assert (=> b!80526 (= e!52596 (contains!745 lt!37439 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun bm!7481 () Bool)

(declare-fun call!7483 () List!1514)

(assert (=> bm!7481 (= call!7485 call!7483)))

(declare-fun d!19629 () Bool)

(assert (=> d!19629 e!52596))

(declare-fun res!41934 () Bool)

(assert (=> d!19629 (=> (not res!41934) (not e!52596))))

(assert (=> d!19629 (= res!41934 (isStrictlySorted!291 lt!37439))))

(declare-fun e!52594 () List!1514)

(assert (=> d!19629 (= lt!37439 e!52594)))

(assert (=> d!19629 (= c!12593 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37073 lt!37079))) (bvslt (_1!1102 (h!2099 (toList!734 (+!104 lt!37073 lt!37079)))) (_1!1102 lt!37082))))))

(assert (=> d!19629 (isStrictlySorted!291 (toList!734 (+!104 lt!37073 lt!37079)))))

(assert (=> d!19629 (= (insertStrictlySorted!59 (toList!734 (+!104 lt!37073 lt!37079)) (_1!1102 lt!37082) (_2!1102 lt!37082)) lt!37439)))

(declare-fun c!12590 () Bool)

(declare-fun b!80527 () Bool)

(assert (=> b!80527 (= c!12590 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37073 lt!37079))) (bvsgt (_1!1102 (h!2099 (toList!734 (+!104 lt!37073 lt!37079)))) (_1!1102 lt!37082))))))

(declare-fun e!52593 () List!1514)

(assert (=> b!80527 (= e!52593 e!52595)))

(declare-fun b!80528 () Bool)

(assert (=> b!80528 (= e!52593 call!7483)))

(declare-fun b!80529 () Bool)

(assert (=> b!80529 (= e!52594 call!7484)))

(declare-fun bm!7482 () Bool)

(assert (=> bm!7482 (= call!7483 call!7484)))

(declare-fun b!80530 () Bool)

(declare-fun res!41933 () Bool)

(assert (=> b!80530 (=> (not res!41933) (not e!52596))))

(assert (=> b!80530 (= res!41933 (containsKey!140 lt!37439 (_1!1102 lt!37082)))))

(declare-fun b!80531 () Bool)

(assert (=> b!80531 (= e!52595 call!7485)))

(declare-fun c!12592 () Bool)

(declare-fun b!80532 () Bool)

(assert (=> b!80532 (= e!52592 (ite c!12592 (t!5172 (toList!734 (+!104 lt!37073 lt!37079))) (ite c!12590 (Cons!1510 (h!2099 (toList!734 (+!104 lt!37073 lt!37079))) (t!5172 (toList!734 (+!104 lt!37073 lt!37079)))) Nil!1511)))))

(declare-fun b!80533 () Bool)

(assert (=> b!80533 (= e!52594 e!52593)))

(assert (=> b!80533 (= c!12592 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37073 lt!37079))) (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37073 lt!37079)))) (_1!1102 lt!37082))))))

(declare-fun b!80534 () Bool)

(assert (=> b!80534 (= e!52592 (insertStrictlySorted!59 (t!5172 (toList!734 (+!104 lt!37073 lt!37079))) (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(assert (= (and d!19629 c!12593) b!80529))

(assert (= (and d!19629 (not c!12593)) b!80533))

(assert (= (and b!80533 c!12592) b!80528))

(assert (= (and b!80533 (not c!12592)) b!80527))

(assert (= (and b!80527 c!12590) b!80531))

(assert (= (and b!80527 (not c!12590)) b!80525))

(assert (= (or b!80531 b!80525) bm!7481))

(assert (= (or b!80528 bm!7481) bm!7482))

(assert (= (or b!80529 bm!7482) bm!7480))

(assert (= (and bm!7480 c!12591) b!80534))

(assert (= (and bm!7480 (not c!12591)) b!80532))

(assert (= (and d!19629 res!41934) b!80530))

(assert (= (and b!80530 res!41933) b!80526))

(declare-fun m!81787 () Bool)

(assert (=> d!19629 m!81787))

(declare-fun m!81789 () Bool)

(assert (=> d!19629 m!81789))

(declare-fun m!81791 () Bool)

(assert (=> b!80534 m!81791))

(declare-fun m!81793 () Bool)

(assert (=> bm!7480 m!81793))

(declare-fun m!81795 () Bool)

(assert (=> b!80530 m!81795))

(declare-fun m!81797 () Bool)

(assert (=> b!80526 m!81797))

(assert (=> d!19573 d!19629))

(declare-fun d!19631 () Bool)

(assert (=> d!19631 (contains!742 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37405)))

(declare-fun lt!37442 () Unit!2327)

(declare-fun choose!478 (ListLongMap!1437 (_ BitVec 64) V!3001 (_ BitVec 64)) Unit!2327)

(assert (=> d!19631 (= lt!37442 (choose!478 lt!37417 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37405))))

(assert (=> d!19631 (contains!742 lt!37417 lt!37405)))

(assert (=> d!19631 (= (addStillContains!56 lt!37417 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37405) lt!37442)))

(declare-fun bs!3398 () Bool)

(assert (= bs!3398 d!19631))

(assert (=> bs!3398 m!81731))

(assert (=> bs!3398 m!81731))

(assert (=> bs!3398 m!81733))

(declare-fun m!81799 () Bool)

(assert (=> bs!3398 m!81799))

(declare-fun m!81801 () Bool)

(assert (=> bs!3398 m!81801))

(assert (=> b!80451 d!19631))

(declare-fun d!19633 () Bool)

(declare-fun e!52597 () Bool)

(assert (=> d!19633 e!52597))

(declare-fun res!41936 () Bool)

(assert (=> d!19633 (=> (not res!41936) (not e!52597))))

(declare-fun lt!37446 () ListLongMap!1437)

(assert (=> d!19633 (= res!41936 (contains!742 lt!37446 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!37445 () List!1514)

(assert (=> d!19633 (= lt!37446 (ListLongMap!1438 lt!37445))))

(declare-fun lt!37444 () Unit!2327)

(declare-fun lt!37443 () Unit!2327)

(assert (=> d!19633 (= lt!37444 lt!37443)))

(assert (=> d!19633 (= (getValueByKey!136 lt!37445 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19633 (= lt!37443 (lemmaContainsTupThenGetReturnValue!56 lt!37445 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19633 (= lt!37445 (insertStrictlySorted!59 (toList!734 lt!37417) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19633 (= (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37446)))

(declare-fun b!80536 () Bool)

(declare-fun res!41935 () Bool)

(assert (=> b!80536 (=> (not res!41935) (not e!52597))))

(assert (=> b!80536 (= res!41935 (= (getValueByKey!136 (toList!734 lt!37446) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!80537 () Bool)

(assert (=> b!80537 (= e!52597 (contains!745 (toList!734 lt!37446) (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19633 res!41936) b!80536))

(assert (= (and b!80536 res!41935) b!80537))

(declare-fun m!81803 () Bool)

(assert (=> d!19633 m!81803))

(declare-fun m!81805 () Bool)

(assert (=> d!19633 m!81805))

(declare-fun m!81807 () Bool)

(assert (=> d!19633 m!81807))

(declare-fun m!81809 () Bool)

(assert (=> d!19633 m!81809))

(declare-fun m!81811 () Bool)

(assert (=> b!80536 m!81811))

(declare-fun m!81813 () Bool)

(assert (=> b!80537 m!81813))

(assert (=> b!80451 d!19633))

(declare-fun d!19635 () Bool)

(declare-fun get!1187 (Option!142) V!3001)

(assert (=> d!19635 (= (apply!80 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37416) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37416)))))

(declare-fun bs!3399 () Bool)

(assert (= bs!3399 d!19635))

(declare-fun m!81815 () Bool)

(assert (=> bs!3399 m!81815))

(assert (=> bs!3399 m!81815))

(declare-fun m!81817 () Bool)

(assert (=> bs!3399 m!81817))

(assert (=> b!80451 d!19635))

(declare-fun d!19637 () Bool)

(declare-fun e!52598 () Bool)

(assert (=> d!19637 e!52598))

(declare-fun res!41938 () Bool)

(assert (=> d!19637 (=> (not res!41938) (not e!52598))))

(declare-fun lt!37450 () ListLongMap!1437)

(assert (=> d!19637 (= res!41938 (contains!742 lt!37450 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!37449 () List!1514)

(assert (=> d!19637 (= lt!37450 (ListLongMap!1438 lt!37449))))

(declare-fun lt!37448 () Unit!2327)

(declare-fun lt!37447 () Unit!2327)

(assert (=> d!19637 (= lt!37448 lt!37447)))

(assert (=> d!19637 (= (getValueByKey!136 lt!37449 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19637 (= lt!37447 (lemmaContainsTupThenGetReturnValue!56 lt!37449 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19637 (= lt!37449 (insertStrictlySorted!59 (toList!734 lt!37418) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19637 (= (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37450)))

(declare-fun b!80538 () Bool)

(declare-fun res!41937 () Bool)

(assert (=> b!80538 (=> (not res!41937) (not e!52598))))

(assert (=> b!80538 (= res!41937 (= (getValueByKey!136 (toList!734 lt!37450) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!80539 () Bool)

(assert (=> b!80539 (= e!52598 (contains!745 (toList!734 lt!37450) (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19637 res!41938) b!80538))

(assert (= (and b!80538 res!41937) b!80539))

(declare-fun m!81819 () Bool)

(assert (=> d!19637 m!81819))

(declare-fun m!81821 () Bool)

(assert (=> d!19637 m!81821))

(declare-fun m!81823 () Bool)

(assert (=> d!19637 m!81823))

(declare-fun m!81825 () Bool)

(assert (=> d!19637 m!81825))

(declare-fun m!81827 () Bool)

(assert (=> b!80538 m!81827))

(declare-fun m!81829 () Bool)

(assert (=> b!80539 m!81829))

(assert (=> b!80451 d!19637))

(assert (=> b!80451 d!19585))

(declare-fun d!19639 () Bool)

(assert (=> d!19639 (= (apply!80 lt!37413 lt!37425) (get!1187 (getValueByKey!136 (toList!734 lt!37413) lt!37425)))))

(declare-fun bs!3400 () Bool)

(assert (= bs!3400 d!19639))

(declare-fun m!81831 () Bool)

(assert (=> bs!3400 m!81831))

(assert (=> bs!3400 m!81831))

(declare-fun m!81833 () Bool)

(assert (=> bs!3400 m!81833))

(assert (=> b!80451 d!19639))

(declare-fun d!19641 () Bool)

(declare-fun e!52599 () Bool)

(assert (=> d!19641 e!52599))

(declare-fun res!41939 () Bool)

(assert (=> d!19641 (=> res!41939 e!52599)))

(declare-fun lt!37454 () Bool)

(assert (=> d!19641 (= res!41939 (not lt!37454))))

(declare-fun lt!37453 () Bool)

(assert (=> d!19641 (= lt!37454 lt!37453)))

(declare-fun lt!37452 () Unit!2327)

(declare-fun e!52600 () Unit!2327)

(assert (=> d!19641 (= lt!37452 e!52600)))

(declare-fun c!12594 () Bool)

(assert (=> d!19641 (= c!12594 lt!37453)))

(assert (=> d!19641 (= lt!37453 (containsKey!140 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37405))))

(assert (=> d!19641 (= (contains!742 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37405) lt!37454)))

(declare-fun b!80540 () Bool)

(declare-fun lt!37451 () Unit!2327)

(assert (=> b!80540 (= e!52600 lt!37451)))

(assert (=> b!80540 (= lt!37451 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37405))))

(assert (=> b!80540 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37405))))

(declare-fun b!80541 () Bool)

(declare-fun Unit!2343 () Unit!2327)

(assert (=> b!80541 (= e!52600 Unit!2343)))

(declare-fun b!80542 () Bool)

(assert (=> b!80542 (= e!52599 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37405)))))

(assert (= (and d!19641 c!12594) b!80540))

(assert (= (and d!19641 (not c!12594)) b!80541))

(assert (= (and d!19641 (not res!41939)) b!80542))

(declare-fun m!81835 () Bool)

(assert (=> d!19641 m!81835))

(declare-fun m!81837 () Bool)

(assert (=> b!80540 m!81837))

(declare-fun m!81839 () Bool)

(assert (=> b!80540 m!81839))

(assert (=> b!80540 m!81839))

(declare-fun m!81841 () Bool)

(assert (=> b!80540 m!81841))

(assert (=> b!80542 m!81839))

(assert (=> b!80542 m!81839))

(assert (=> b!80542 m!81841))

(assert (=> b!80451 d!19641))

(declare-fun d!19643 () Bool)

(assert (=> d!19643 (= (apply!80 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37425) (apply!80 lt!37413 lt!37425))))

(declare-fun lt!37457 () Unit!2327)

(declare-fun choose!479 (ListLongMap!1437 (_ BitVec 64) V!3001 (_ BitVec 64)) Unit!2327)

(assert (=> d!19643 (= lt!37457 (choose!479 lt!37413 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37425))))

(declare-fun e!52603 () Bool)

(assert (=> d!19643 e!52603))

(declare-fun res!41942 () Bool)

(assert (=> d!19643 (=> (not res!41942) (not e!52603))))

(assert (=> d!19643 (= res!41942 (contains!742 lt!37413 lt!37425))))

(assert (=> d!19643 (= (addApplyDifferent!56 lt!37413 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37425) lt!37457)))

(declare-fun b!80546 () Bool)

(assert (=> b!80546 (= e!52603 (not (= lt!37425 lt!37404)))))

(assert (= (and d!19643 res!41942) b!80546))

(declare-fun m!81843 () Bool)

(assert (=> d!19643 m!81843))

(declare-fun m!81845 () Bool)

(assert (=> d!19643 m!81845))

(assert (=> d!19643 m!81725))

(assert (=> d!19643 m!81739))

(assert (=> d!19643 m!81725))

(assert (=> d!19643 m!81727))

(assert (=> b!80451 d!19643))

(declare-fun d!19645 () Bool)

(assert (=> d!19645 (= (apply!80 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37416) (apply!80 lt!37418 lt!37416))))

(declare-fun lt!37458 () Unit!2327)

(assert (=> d!19645 (= lt!37458 (choose!479 lt!37418 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37416))))

(declare-fun e!52604 () Bool)

(assert (=> d!19645 e!52604))

(declare-fun res!41943 () Bool)

(assert (=> d!19645 (=> (not res!41943) (not e!52604))))

(assert (=> d!19645 (= res!41943 (contains!742 lt!37418 lt!37416))))

(assert (=> d!19645 (= (addApplyDifferent!56 lt!37418 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37416) lt!37458)))

(declare-fun b!80547 () Bool)

(assert (=> b!80547 (= e!52604 (not (= lt!37416 lt!37419)))))

(assert (= (and d!19645 res!41943) b!80547))

(declare-fun m!81847 () Bool)

(assert (=> d!19645 m!81847))

(declare-fun m!81849 () Bool)

(assert (=> d!19645 m!81849))

(assert (=> d!19645 m!81737))

(assert (=> d!19645 m!81717))

(assert (=> d!19645 m!81737))

(assert (=> d!19645 m!81745))

(assert (=> b!80451 d!19645))

(declare-fun d!19647 () Bool)

(assert (=> d!19647 (= (apply!80 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37414) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37414)))))

(declare-fun bs!3401 () Bool)

(assert (= bs!3401 d!19647))

(declare-fun m!81851 () Bool)

(assert (=> bs!3401 m!81851))

(assert (=> bs!3401 m!81851))

(declare-fun m!81853 () Bool)

(assert (=> bs!3401 m!81853))

(assert (=> b!80451 d!19647))

(declare-fun d!19649 () Bool)

(declare-fun e!52605 () Bool)

(assert (=> d!19649 e!52605))

(declare-fun res!41945 () Bool)

(assert (=> d!19649 (=> (not res!41945) (not e!52605))))

(declare-fun lt!37462 () ListLongMap!1437)

(assert (=> d!19649 (= res!41945 (contains!742 lt!37462 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!37461 () List!1514)

(assert (=> d!19649 (= lt!37462 (ListLongMap!1438 lt!37461))))

(declare-fun lt!37460 () Unit!2327)

(declare-fun lt!37459 () Unit!2327)

(assert (=> d!19649 (= lt!37460 lt!37459)))

(assert (=> d!19649 (= (getValueByKey!136 lt!37461 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19649 (= lt!37459 (lemmaContainsTupThenGetReturnValue!56 lt!37461 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19649 (= lt!37461 (insertStrictlySorted!59 (toList!734 lt!37413) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19649 (= (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37462)))

(declare-fun b!80548 () Bool)

(declare-fun res!41944 () Bool)

(assert (=> b!80548 (=> (not res!41944) (not e!52605))))

(assert (=> b!80548 (= res!41944 (= (getValueByKey!136 (toList!734 lt!37462) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!80549 () Bool)

(assert (=> b!80549 (= e!52605 (contains!745 (toList!734 lt!37462) (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19649 res!41945) b!80548))

(assert (= (and b!80548 res!41944) b!80549))

(declare-fun m!81855 () Bool)

(assert (=> d!19649 m!81855))

(declare-fun m!81857 () Bool)

(assert (=> d!19649 m!81857))

(declare-fun m!81859 () Bool)

(assert (=> d!19649 m!81859))

(declare-fun m!81861 () Bool)

(assert (=> d!19649 m!81861))

(declare-fun m!81863 () Bool)

(assert (=> b!80548 m!81863))

(declare-fun m!81865 () Bool)

(assert (=> b!80549 m!81865))

(assert (=> b!80451 d!19649))

(declare-fun d!19651 () Bool)

(assert (=> d!19651 (= (apply!80 lt!37418 lt!37416) (get!1187 (getValueByKey!136 (toList!734 lt!37418) lt!37416)))))

(declare-fun bs!3402 () Bool)

(assert (= bs!3402 d!19651))

(declare-fun m!81867 () Bool)

(assert (=> bs!3402 m!81867))

(assert (=> bs!3402 m!81867))

(declare-fun m!81869 () Bool)

(assert (=> bs!3402 m!81869))

(assert (=> b!80451 d!19651))

(declare-fun d!19653 () Bool)

(assert (=> d!19653 (= (apply!80 lt!37408 lt!37414) (get!1187 (getValueByKey!136 (toList!734 lt!37408) lt!37414)))))

(declare-fun bs!3403 () Bool)

(assert (= bs!3403 d!19653))

(declare-fun m!81871 () Bool)

(assert (=> bs!3403 m!81871))

(assert (=> bs!3403 m!81871))

(declare-fun m!81873 () Bool)

(assert (=> bs!3403 m!81873))

(assert (=> b!80451 d!19653))

(declare-fun d!19655 () Bool)

(assert (=> d!19655 (= (apply!80 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37414) (apply!80 lt!37408 lt!37414))))

(declare-fun lt!37463 () Unit!2327)

(assert (=> d!19655 (= lt!37463 (choose!479 lt!37408 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37414))))

(declare-fun e!52606 () Bool)

(assert (=> d!19655 e!52606))

(declare-fun res!41946 () Bool)

(assert (=> d!19655 (=> (not res!41946) (not e!52606))))

(assert (=> d!19655 (= res!41946 (contains!742 lt!37408 lt!37414))))

(assert (=> d!19655 (= (addApplyDifferent!56 lt!37408 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37414) lt!37463)))

(declare-fun b!80550 () Bool)

(assert (=> b!80550 (= e!52606 (not (= lt!37414 lt!37415)))))

(assert (= (and d!19655 res!41946) b!80550))

(declare-fun m!81875 () Bool)

(assert (=> d!19655 m!81875))

(declare-fun m!81877 () Bool)

(assert (=> d!19655 m!81877))

(assert (=> d!19655 m!81721))

(assert (=> d!19655 m!81741))

(assert (=> d!19655 m!81721))

(assert (=> d!19655 m!81723))

(assert (=> b!80451 d!19655))

(declare-fun d!19657 () Bool)

(declare-fun e!52607 () Bool)

(assert (=> d!19657 e!52607))

(declare-fun res!41948 () Bool)

(assert (=> d!19657 (=> (not res!41948) (not e!52607))))

(declare-fun lt!37467 () ListLongMap!1437)

(assert (=> d!19657 (= res!41948 (contains!742 lt!37467 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!37466 () List!1514)

(assert (=> d!19657 (= lt!37467 (ListLongMap!1438 lt!37466))))

(declare-fun lt!37465 () Unit!2327)

(declare-fun lt!37464 () Unit!2327)

(assert (=> d!19657 (= lt!37465 lt!37464)))

(assert (=> d!19657 (= (getValueByKey!136 lt!37466 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19657 (= lt!37464 (lemmaContainsTupThenGetReturnValue!56 lt!37466 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19657 (= lt!37466 (insertStrictlySorted!59 (toList!734 lt!37408) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19657 (= (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37467)))

(declare-fun b!80551 () Bool)

(declare-fun res!41947 () Bool)

(assert (=> b!80551 (=> (not res!41947) (not e!52607))))

(assert (=> b!80551 (= res!41947 (= (getValueByKey!136 (toList!734 lt!37467) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!80552 () Bool)

(assert (=> b!80552 (= e!52607 (contains!745 (toList!734 lt!37467) (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19657 res!41948) b!80551))

(assert (= (and b!80551 res!41947) b!80552))

(declare-fun m!81879 () Bool)

(assert (=> d!19657 m!81879))

(declare-fun m!81881 () Bool)

(assert (=> d!19657 m!81881))

(declare-fun m!81883 () Bool)

(assert (=> d!19657 m!81883))

(declare-fun m!81885 () Bool)

(assert (=> d!19657 m!81885))

(declare-fun m!81887 () Bool)

(assert (=> b!80551 m!81887))

(declare-fun m!81889 () Bool)

(assert (=> b!80552 m!81889))

(assert (=> b!80451 d!19657))

(declare-fun d!19659 () Bool)

(assert (=> d!19659 (= (apply!80 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37425) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37425)))))

(declare-fun bs!3404 () Bool)

(assert (= bs!3404 d!19659))

(declare-fun m!81891 () Bool)

(assert (=> bs!3404 m!81891))

(assert (=> bs!3404 m!81891))

(declare-fun m!81893 () Bool)

(assert (=> bs!3404 m!81893))

(assert (=> b!80451 d!19659))

(declare-fun d!19661 () Bool)

(declare-fun e!52608 () Bool)

(assert (=> d!19661 e!52608))

(declare-fun res!41950 () Bool)

(assert (=> d!19661 (=> (not res!41950) (not e!52608))))

(declare-fun lt!37471 () ListLongMap!1437)

(assert (=> d!19661 (= res!41950 (contains!742 lt!37471 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun lt!37470 () List!1514)

(assert (=> d!19661 (= lt!37471 (ListLongMap!1438 lt!37470))))

(declare-fun lt!37469 () Unit!2327)

(declare-fun lt!37468 () Unit!2327)

(assert (=> d!19661 (= lt!37469 lt!37468)))

(assert (=> d!19661 (= (getValueByKey!136 lt!37470 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (Some!141 (_2!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!19661 (= lt!37468 (lemmaContainsTupThenGetReturnValue!56 lt!37470 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_2!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!19661 (= lt!37470 (insertStrictlySorted!59 (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472))) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_2!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!19661 (= (+!104 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472)) (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37471)))

(declare-fun b!80553 () Bool)

(declare-fun res!41949 () Bool)

(assert (=> b!80553 (=> (not res!41949) (not e!52608))))

(assert (=> b!80553 (= res!41949 (= (getValueByKey!136 (toList!734 lt!37471) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (Some!141 (_2!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun b!80554 () Bool)

(assert (=> b!80554 (= e!52608 (contains!745 (toList!734 lt!37471) (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (= (and d!19661 res!41950) b!80553))

(assert (= (and b!80553 res!41949) b!80554))

(declare-fun m!81895 () Bool)

(assert (=> d!19661 m!81895))

(declare-fun m!81897 () Bool)

(assert (=> d!19661 m!81897))

(declare-fun m!81899 () Bool)

(assert (=> d!19661 m!81899))

(declare-fun m!81901 () Bool)

(assert (=> d!19661 m!81901))

(declare-fun m!81903 () Bool)

(assert (=> b!80553 m!81903))

(declare-fun m!81905 () Bool)

(assert (=> b!80554 m!81905))

(assert (=> bm!7472 d!19661))

(declare-fun d!19663 () Bool)

(declare-fun e!52609 () Bool)

(assert (=> d!19663 e!52609))

(declare-fun res!41951 () Bool)

(assert (=> d!19663 (=> res!41951 e!52609)))

(declare-fun lt!37475 () Bool)

(assert (=> d!19663 (= res!41951 (not lt!37475))))

(declare-fun lt!37474 () Bool)

(assert (=> d!19663 (= lt!37475 lt!37474)))

(declare-fun lt!37473 () Unit!2327)

(declare-fun e!52610 () Unit!2327)

(assert (=> d!19663 (= lt!37473 e!52610)))

(declare-fun c!12595 () Bool)

(assert (=> d!19663 (= c!12595 lt!37474)))

(assert (=> d!19663 (= lt!37474 (containsKey!140 (toList!734 lt!37346) (_1!1102 lt!37075)))))

(assert (=> d!19663 (= (contains!742 lt!37346 (_1!1102 lt!37075)) lt!37475)))

(declare-fun b!80555 () Bool)

(declare-fun lt!37472 () Unit!2327)

(assert (=> b!80555 (= e!52610 lt!37472)))

(assert (=> b!80555 (= lt!37472 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37346) (_1!1102 lt!37075)))))

(assert (=> b!80555 (isDefined!90 (getValueByKey!136 (toList!734 lt!37346) (_1!1102 lt!37075)))))

(declare-fun b!80556 () Bool)

(declare-fun Unit!2344 () Unit!2327)

(assert (=> b!80556 (= e!52610 Unit!2344)))

(declare-fun b!80557 () Bool)

(assert (=> b!80557 (= e!52609 (isDefined!90 (getValueByKey!136 (toList!734 lt!37346) (_1!1102 lt!37075))))))

(assert (= (and d!19663 c!12595) b!80555))

(assert (= (and d!19663 (not c!12595)) b!80556))

(assert (= (and d!19663 (not res!41951)) b!80557))

(declare-fun m!81907 () Bool)

(assert (=> d!19663 m!81907))

(declare-fun m!81909 () Bool)

(assert (=> b!80555 m!81909))

(assert (=> b!80555 m!81671))

(assert (=> b!80555 m!81671))

(declare-fun m!81911 () Bool)

(assert (=> b!80555 m!81911))

(assert (=> b!80557 m!81671))

(assert (=> b!80557 m!81671))

(assert (=> b!80557 m!81911))

(assert (=> d!19591 d!19663))

(declare-fun b!80561 () Bool)

(declare-fun e!52612 () Option!142)

(assert (=> b!80561 (= e!52612 None!140)))

(declare-fun b!80558 () Bool)

(declare-fun e!52611 () Option!142)

(assert (=> b!80558 (= e!52611 (Some!141 (_2!1102 (h!2099 lt!37345))))))

(declare-fun b!80560 () Bool)

(assert (=> b!80560 (= e!52612 (getValueByKey!136 (t!5172 lt!37345) (_1!1102 lt!37075)))))

(declare-fun d!19665 () Bool)

(declare-fun c!12596 () Bool)

(assert (=> d!19665 (= c!12596 (and ((_ is Cons!1510) lt!37345) (= (_1!1102 (h!2099 lt!37345)) (_1!1102 lt!37075))))))

(assert (=> d!19665 (= (getValueByKey!136 lt!37345 (_1!1102 lt!37075)) e!52611)))

(declare-fun b!80559 () Bool)

(assert (=> b!80559 (= e!52611 e!52612)))

(declare-fun c!12597 () Bool)

(assert (=> b!80559 (= c!12597 (and ((_ is Cons!1510) lt!37345) (not (= (_1!1102 (h!2099 lt!37345)) (_1!1102 lt!37075)))))))

(assert (= (and d!19665 c!12596) b!80558))

(assert (= (and d!19665 (not c!12596)) b!80559))

(assert (= (and b!80559 c!12597) b!80560))

(assert (= (and b!80559 (not c!12597)) b!80561))

(declare-fun m!81913 () Bool)

(assert (=> b!80560 m!81913))

(assert (=> d!19591 d!19665))

(declare-fun d!19667 () Bool)

(assert (=> d!19667 (= (getValueByKey!136 lt!37345 (_1!1102 lt!37075)) (Some!141 (_2!1102 lt!37075)))))

(declare-fun lt!37476 () Unit!2327)

(assert (=> d!19667 (= lt!37476 (choose!477 lt!37345 (_1!1102 lt!37075) (_2!1102 lt!37075)))))

(declare-fun e!52613 () Bool)

(assert (=> d!19667 e!52613))

(declare-fun res!41952 () Bool)

(assert (=> d!19667 (=> (not res!41952) (not e!52613))))

(assert (=> d!19667 (= res!41952 (isStrictlySorted!291 lt!37345))))

(assert (=> d!19667 (= (lemmaContainsTupThenGetReturnValue!56 lt!37345 (_1!1102 lt!37075) (_2!1102 lt!37075)) lt!37476)))

(declare-fun b!80562 () Bool)

(declare-fun res!41953 () Bool)

(assert (=> b!80562 (=> (not res!41953) (not e!52613))))

(assert (=> b!80562 (= res!41953 (containsKey!140 lt!37345 (_1!1102 lt!37075)))))

(declare-fun b!80563 () Bool)

(assert (=> b!80563 (= e!52613 (contains!745 lt!37345 (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(assert (= (and d!19667 res!41952) b!80562))

(assert (= (and b!80562 res!41953) b!80563))

(assert (=> d!19667 m!81665))

(declare-fun m!81915 () Bool)

(assert (=> d!19667 m!81915))

(declare-fun m!81917 () Bool)

(assert (=> d!19667 m!81917))

(declare-fun m!81919 () Bool)

(assert (=> b!80562 m!81919))

(declare-fun m!81921 () Bool)

(assert (=> b!80563 m!81921))

(assert (=> d!19591 d!19667))

(declare-fun b!80564 () Bool)

(declare-fun e!52617 () List!1514)

(declare-fun call!7488 () List!1514)

(assert (=> b!80564 (= e!52617 call!7488)))

(declare-fun c!12601 () Bool)

(declare-fun bm!7483 () Bool)

(declare-fun e!52614 () List!1514)

(declare-fun call!7487 () List!1514)

(assert (=> bm!7483 (= call!7487 ($colon$colon!69 e!52614 (ite c!12601 (h!2099 (toList!734 lt!37077)) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075)))))))

(declare-fun c!12599 () Bool)

(assert (=> bm!7483 (= c!12599 c!12601)))

(declare-fun b!80565 () Bool)

(declare-fun e!52618 () Bool)

(declare-fun lt!37477 () List!1514)

(assert (=> b!80565 (= e!52618 (contains!745 lt!37477 (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(declare-fun bm!7484 () Bool)

(declare-fun call!7486 () List!1514)

(assert (=> bm!7484 (= call!7488 call!7486)))

(declare-fun d!19669 () Bool)

(assert (=> d!19669 e!52618))

(declare-fun res!41955 () Bool)

(assert (=> d!19669 (=> (not res!41955) (not e!52618))))

(assert (=> d!19669 (= res!41955 (isStrictlySorted!291 lt!37477))))

(declare-fun e!52616 () List!1514)

(assert (=> d!19669 (= lt!37477 e!52616)))

(assert (=> d!19669 (= c!12601 (and ((_ is Cons!1510) (toList!734 lt!37077)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37077))) (_1!1102 lt!37075))))))

(assert (=> d!19669 (isStrictlySorted!291 (toList!734 lt!37077))))

(assert (=> d!19669 (= (insertStrictlySorted!59 (toList!734 lt!37077) (_1!1102 lt!37075) (_2!1102 lt!37075)) lt!37477)))

(declare-fun b!80566 () Bool)

(declare-fun c!12598 () Bool)

(assert (=> b!80566 (= c!12598 (and ((_ is Cons!1510) (toList!734 lt!37077)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37077))) (_1!1102 lt!37075))))))

(declare-fun e!52615 () List!1514)

(assert (=> b!80566 (= e!52615 e!52617)))

(declare-fun b!80567 () Bool)

(assert (=> b!80567 (= e!52615 call!7486)))

(declare-fun b!80568 () Bool)

(assert (=> b!80568 (= e!52616 call!7487)))

(declare-fun bm!7485 () Bool)

(assert (=> bm!7485 (= call!7486 call!7487)))

(declare-fun b!80569 () Bool)

(declare-fun res!41954 () Bool)

(assert (=> b!80569 (=> (not res!41954) (not e!52618))))

(assert (=> b!80569 (= res!41954 (containsKey!140 lt!37477 (_1!1102 lt!37075)))))

(declare-fun b!80570 () Bool)

(assert (=> b!80570 (= e!52617 call!7488)))

(declare-fun c!12600 () Bool)

(declare-fun b!80571 () Bool)

(assert (=> b!80571 (= e!52614 (ite c!12600 (t!5172 (toList!734 lt!37077)) (ite c!12598 (Cons!1510 (h!2099 (toList!734 lt!37077)) (t!5172 (toList!734 lt!37077))) Nil!1511)))))

(declare-fun b!80572 () Bool)

(assert (=> b!80572 (= e!52616 e!52615)))

(assert (=> b!80572 (= c!12600 (and ((_ is Cons!1510) (toList!734 lt!37077)) (= (_1!1102 (h!2099 (toList!734 lt!37077))) (_1!1102 lt!37075))))))

(declare-fun b!80573 () Bool)

(assert (=> b!80573 (= e!52614 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37077)) (_1!1102 lt!37075) (_2!1102 lt!37075)))))

(assert (= (and d!19669 c!12601) b!80568))

(assert (= (and d!19669 (not c!12601)) b!80572))

(assert (= (and b!80572 c!12600) b!80567))

(assert (= (and b!80572 (not c!12600)) b!80566))

(assert (= (and b!80566 c!12598) b!80570))

(assert (= (and b!80566 (not c!12598)) b!80564))

(assert (= (or b!80570 b!80564) bm!7484))

(assert (= (or b!80567 bm!7484) bm!7485))

(assert (= (or b!80568 bm!7485) bm!7483))

(assert (= (and bm!7483 c!12599) b!80573))

(assert (= (and bm!7483 (not c!12599)) b!80571))

(assert (= (and d!19669 res!41955) b!80569))

(assert (= (and b!80569 res!41954) b!80565))

(declare-fun m!81923 () Bool)

(assert (=> d!19669 m!81923))

(declare-fun m!81925 () Bool)

(assert (=> d!19669 m!81925))

(declare-fun m!81927 () Bool)

(assert (=> b!80573 m!81927))

(declare-fun m!81929 () Bool)

(assert (=> bm!7483 m!81929))

(declare-fun m!81931 () Bool)

(assert (=> b!80569 m!81931))

(declare-fun m!81933 () Bool)

(assert (=> b!80565 m!81933))

(assert (=> d!19591 d!19669))

(declare-fun d!19671 () Bool)

(declare-fun e!52619 () Bool)

(assert (=> d!19671 e!52619))

(declare-fun res!41956 () Bool)

(assert (=> d!19671 (=> res!41956 e!52619)))

(declare-fun lt!37481 () Bool)

(assert (=> d!19671 (= res!41956 (not lt!37481))))

(declare-fun lt!37480 () Bool)

(assert (=> d!19671 (= lt!37481 lt!37480)))

(declare-fun lt!37479 () Unit!2327)

(declare-fun e!52620 () Unit!2327)

(assert (=> d!19671 (= lt!37479 e!52620)))

(declare-fun c!12602 () Bool)

(assert (=> d!19671 (= c!12602 lt!37480)))

(assert (=> d!19671 (= lt!37480 (containsKey!140 (toList!734 lt!37350) (_1!1102 lt!37079)))))

(assert (=> d!19671 (= (contains!742 lt!37350 (_1!1102 lt!37079)) lt!37481)))

(declare-fun b!80574 () Bool)

(declare-fun lt!37478 () Unit!2327)

(assert (=> b!80574 (= e!52620 lt!37478)))

(assert (=> b!80574 (= lt!37478 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37350) (_1!1102 lt!37079)))))

(assert (=> b!80574 (isDefined!90 (getValueByKey!136 (toList!734 lt!37350) (_1!1102 lt!37079)))))

(declare-fun b!80575 () Bool)

(declare-fun Unit!2345 () Unit!2327)

(assert (=> b!80575 (= e!52620 Unit!2345)))

(declare-fun b!80576 () Bool)

(assert (=> b!80576 (= e!52619 (isDefined!90 (getValueByKey!136 (toList!734 lt!37350) (_1!1102 lt!37079))))))

(assert (= (and d!19671 c!12602) b!80574))

(assert (= (and d!19671 (not c!12602)) b!80575))

(assert (= (and d!19671 (not res!41956)) b!80576))

(declare-fun m!81935 () Bool)

(assert (=> d!19671 m!81935))

(declare-fun m!81937 () Bool)

(assert (=> b!80574 m!81937))

(assert (=> b!80574 m!81683))

(assert (=> b!80574 m!81683))

(declare-fun m!81939 () Bool)

(assert (=> b!80574 m!81939))

(assert (=> b!80576 m!81683))

(assert (=> b!80576 m!81683))

(assert (=> b!80576 m!81939))

(assert (=> d!19593 d!19671))

(declare-fun b!80580 () Bool)

(declare-fun e!52622 () Option!142)

(assert (=> b!80580 (= e!52622 None!140)))

(declare-fun b!80577 () Bool)

(declare-fun e!52621 () Option!142)

(assert (=> b!80577 (= e!52621 (Some!141 (_2!1102 (h!2099 lt!37349))))))

(declare-fun b!80579 () Bool)

(assert (=> b!80579 (= e!52622 (getValueByKey!136 (t!5172 lt!37349) (_1!1102 lt!37079)))))

(declare-fun d!19673 () Bool)

(declare-fun c!12603 () Bool)

(assert (=> d!19673 (= c!12603 (and ((_ is Cons!1510) lt!37349) (= (_1!1102 (h!2099 lt!37349)) (_1!1102 lt!37079))))))

(assert (=> d!19673 (= (getValueByKey!136 lt!37349 (_1!1102 lt!37079)) e!52621)))

(declare-fun b!80578 () Bool)

(assert (=> b!80578 (= e!52621 e!52622)))

(declare-fun c!12604 () Bool)

(assert (=> b!80578 (= c!12604 (and ((_ is Cons!1510) lt!37349) (not (= (_1!1102 (h!2099 lt!37349)) (_1!1102 lt!37079)))))))

(assert (= (and d!19673 c!12603) b!80577))

(assert (= (and d!19673 (not c!12603)) b!80578))

(assert (= (and b!80578 c!12604) b!80579))

(assert (= (and b!80578 (not c!12604)) b!80580))

(declare-fun m!81941 () Bool)

(assert (=> b!80579 m!81941))

(assert (=> d!19593 d!19673))

(declare-fun d!19675 () Bool)

(assert (=> d!19675 (= (getValueByKey!136 lt!37349 (_1!1102 lt!37079)) (Some!141 (_2!1102 lt!37079)))))

(declare-fun lt!37482 () Unit!2327)

(assert (=> d!19675 (= lt!37482 (choose!477 lt!37349 (_1!1102 lt!37079) (_2!1102 lt!37079)))))

(declare-fun e!52623 () Bool)

(assert (=> d!19675 e!52623))

(declare-fun res!41957 () Bool)

(assert (=> d!19675 (=> (not res!41957) (not e!52623))))

(assert (=> d!19675 (= res!41957 (isStrictlySorted!291 lt!37349))))

(assert (=> d!19675 (= (lemmaContainsTupThenGetReturnValue!56 lt!37349 (_1!1102 lt!37079) (_2!1102 lt!37079)) lt!37482)))

(declare-fun b!80581 () Bool)

(declare-fun res!41958 () Bool)

(assert (=> b!80581 (=> (not res!41958) (not e!52623))))

(assert (=> b!80581 (= res!41958 (containsKey!140 lt!37349 (_1!1102 lt!37079)))))

(declare-fun b!80582 () Bool)

(assert (=> b!80582 (= e!52623 (contains!745 lt!37349 (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(assert (= (and d!19675 res!41957) b!80581))

(assert (= (and b!80581 res!41958) b!80582))

(assert (=> d!19675 m!81677))

(declare-fun m!81943 () Bool)

(assert (=> d!19675 m!81943))

(declare-fun m!81945 () Bool)

(assert (=> d!19675 m!81945))

(declare-fun m!81947 () Bool)

(assert (=> b!80581 m!81947))

(declare-fun m!81949 () Bool)

(assert (=> b!80582 m!81949))

(assert (=> d!19593 d!19675))

(declare-fun b!80583 () Bool)

(declare-fun e!52627 () List!1514)

(declare-fun call!7491 () List!1514)

(assert (=> b!80583 (= e!52627 call!7491)))

(declare-fun e!52624 () List!1514)

(declare-fun c!12608 () Bool)

(declare-fun call!7490 () List!1514)

(declare-fun bm!7486 () Bool)

(assert (=> bm!7486 (= call!7490 ($colon$colon!69 e!52624 (ite c!12608 (h!2099 (toList!734 lt!37073)) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079)))))))

(declare-fun c!12606 () Bool)

(assert (=> bm!7486 (= c!12606 c!12608)))

(declare-fun b!80584 () Bool)

(declare-fun e!52628 () Bool)

(declare-fun lt!37483 () List!1514)

(assert (=> b!80584 (= e!52628 (contains!745 lt!37483 (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(declare-fun bm!7487 () Bool)

(declare-fun call!7489 () List!1514)

(assert (=> bm!7487 (= call!7491 call!7489)))

(declare-fun d!19677 () Bool)

(assert (=> d!19677 e!52628))

(declare-fun res!41960 () Bool)

(assert (=> d!19677 (=> (not res!41960) (not e!52628))))

(assert (=> d!19677 (= res!41960 (isStrictlySorted!291 lt!37483))))

(declare-fun e!52626 () List!1514)

(assert (=> d!19677 (= lt!37483 e!52626)))

(assert (=> d!19677 (= c!12608 (and ((_ is Cons!1510) (toList!734 lt!37073)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 lt!37079))))))

(assert (=> d!19677 (isStrictlySorted!291 (toList!734 lt!37073))))

(assert (=> d!19677 (= (insertStrictlySorted!59 (toList!734 lt!37073) (_1!1102 lt!37079) (_2!1102 lt!37079)) lt!37483)))

(declare-fun b!80585 () Bool)

(declare-fun c!12605 () Bool)

(assert (=> b!80585 (= c!12605 (and ((_ is Cons!1510) (toList!734 lt!37073)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 lt!37079))))))

(declare-fun e!52625 () List!1514)

(assert (=> b!80585 (= e!52625 e!52627)))

(declare-fun b!80586 () Bool)

(assert (=> b!80586 (= e!52625 call!7489)))

(declare-fun b!80587 () Bool)

(assert (=> b!80587 (= e!52626 call!7490)))

(declare-fun bm!7488 () Bool)

(assert (=> bm!7488 (= call!7489 call!7490)))

(declare-fun b!80588 () Bool)

(declare-fun res!41959 () Bool)

(assert (=> b!80588 (=> (not res!41959) (not e!52628))))

(assert (=> b!80588 (= res!41959 (containsKey!140 lt!37483 (_1!1102 lt!37079)))))

(declare-fun b!80589 () Bool)

(assert (=> b!80589 (= e!52627 call!7491)))

(declare-fun b!80590 () Bool)

(declare-fun c!12607 () Bool)

(assert (=> b!80590 (= e!52624 (ite c!12607 (t!5172 (toList!734 lt!37073)) (ite c!12605 (Cons!1510 (h!2099 (toList!734 lt!37073)) (t!5172 (toList!734 lt!37073))) Nil!1511)))))

(declare-fun b!80591 () Bool)

(assert (=> b!80591 (= e!52626 e!52625)))

(assert (=> b!80591 (= c!12607 (and ((_ is Cons!1510) (toList!734 lt!37073)) (= (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 lt!37079))))))

(declare-fun b!80592 () Bool)

(assert (=> b!80592 (= e!52624 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37073)) (_1!1102 lt!37079) (_2!1102 lt!37079)))))

(assert (= (and d!19677 c!12608) b!80587))

(assert (= (and d!19677 (not c!12608)) b!80591))

(assert (= (and b!80591 c!12607) b!80586))

(assert (= (and b!80591 (not c!12607)) b!80585))

(assert (= (and b!80585 c!12605) b!80589))

(assert (= (and b!80585 (not c!12605)) b!80583))

(assert (= (or b!80589 b!80583) bm!7487))

(assert (= (or b!80586 bm!7487) bm!7488))

(assert (= (or b!80587 bm!7488) bm!7486))

(assert (= (and bm!7486 c!12606) b!80592))

(assert (= (and bm!7486 (not c!12606)) b!80590))

(assert (= (and d!19677 res!41960) b!80588))

(assert (= (and b!80588 res!41959) b!80584))

(declare-fun m!81951 () Bool)

(assert (=> d!19677 m!81951))

(declare-fun m!81953 () Bool)

(assert (=> d!19677 m!81953))

(declare-fun m!81955 () Bool)

(assert (=> b!80592 m!81955))

(declare-fun m!81957 () Bool)

(assert (=> bm!7486 m!81957))

(declare-fun m!81959 () Bool)

(assert (=> b!80588 m!81959))

(declare-fun m!81961 () Bool)

(assert (=> b!80584 m!81961))

(assert (=> d!19593 d!19677))

(declare-fun d!19679 () Bool)

(assert (=> d!19679 (= (inRange!0 (ite c!12529 (ite c!12536 (index!3112 lt!37272) (ite c!12525 (index!3111 lt!37287) (index!3114 lt!37287))) (ite c!12533 (index!3112 lt!37289) (ite c!12527 (index!3111 lt!37286) (index!3114 lt!37286)))) (mask!6297 newMap!16)) (and (bvsge (ite c!12529 (ite c!12536 (index!3112 lt!37272) (ite c!12525 (index!3111 lt!37287) (index!3114 lt!37287))) (ite c!12533 (index!3112 lt!37289) (ite c!12527 (index!3111 lt!37286) (index!3114 lt!37286)))) #b00000000000000000000000000000000) (bvslt (ite c!12529 (ite c!12536 (index!3112 lt!37272) (ite c!12525 (index!3111 lt!37287) (index!3114 lt!37287))) (ite c!12533 (index!3112 lt!37289) (ite c!12527 (index!3111 lt!37286) (index!3114 lt!37286)))) (bvadd (mask!6297 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7435 d!19679))

(declare-fun d!19681 () Bool)

(declare-fun res!41961 () Bool)

(declare-fun e!52629 () Bool)

(assert (=> d!19681 (=> (not res!41961) (not e!52629))))

(assert (=> d!19681 (= res!41961 (simpleValid!56 (_2!1101 lt!37268)))))

(assert (=> d!19681 (= (valid!325 (_2!1101 lt!37268)) e!52629)))

(declare-fun b!80593 () Bool)

(declare-fun res!41962 () Bool)

(assert (=> b!80593 (=> (not res!41962) (not e!52629))))

(assert (=> b!80593 (= res!41962 (= (arrayCountValidKeys!0 (_keys!3955 (_2!1101 lt!37268)) #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37268)))) (_size!417 (_2!1101 lt!37268))))))

(declare-fun b!80594 () Bool)

(declare-fun res!41963 () Bool)

(assert (=> b!80594 (=> (not res!41963) (not e!52629))))

(assert (=> b!80594 (= res!41963 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3955 (_2!1101 lt!37268)) (mask!6297 (_2!1101 lt!37268))))))

(declare-fun b!80595 () Bool)

(assert (=> b!80595 (= e!52629 (arrayNoDuplicates!0 (_keys!3955 (_2!1101 lt!37268)) #b00000000000000000000000000000000 Nil!1512))))

(assert (= (and d!19681 res!41961) b!80593))

(assert (= (and b!80593 res!41962) b!80594))

(assert (= (and b!80594 res!41963) b!80595))

(declare-fun m!81963 () Bool)

(assert (=> d!19681 m!81963))

(declare-fun m!81965 () Bool)

(assert (=> b!80593 m!81965))

(declare-fun m!81967 () Bool)

(assert (=> b!80594 m!81967))

(declare-fun m!81969 () Bool)

(assert (=> b!80595 m!81969))

(assert (=> d!19571 d!19681))

(assert (=> d!19571 d!19615))

(declare-fun d!19683 () Bool)

(declare-fun e!52632 () Bool)

(assert (=> d!19683 e!52632))

(declare-fun res!41969 () Bool)

(assert (=> d!19683 (=> (not res!41969) (not e!52632))))

(declare-fun lt!37489 () SeekEntryResult!244)

(assert (=> d!19683 (= res!41969 ((_ is Found!244) lt!37489))))

(assert (=> d!19683 (= lt!37489 (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(declare-fun lt!37488 () Unit!2327)

(declare-fun choose!480 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) Int) Unit!2327)

(assert (=> d!19683 (= lt!37488 (choose!480 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)))))

(assert (=> d!19683 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19683 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)) lt!37488)))

(declare-fun b!80600 () Bool)

(declare-fun res!41968 () Bool)

(assert (=> b!80600 (=> (not res!41968) (not e!52632))))

(assert (=> b!80600 (= res!41968 (inRange!0 (index!3112 lt!37489) (mask!6297 newMap!16)))))

(declare-fun b!80601 () Bool)

(assert (=> b!80601 (= e!52632 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37489)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> b!80601 (and (bvsge (index!3112 lt!37489) #b00000000000000000000000000000000) (bvslt (index!3112 lt!37489) (size!2131 (_keys!3955 newMap!16))))))

(assert (= (and d!19683 res!41969) b!80600))

(assert (= (and b!80600 res!41968) b!80601))

(assert (=> d!19683 m!81295))

(assert (=> d!19683 m!81509))

(assert (=> d!19683 m!81295))

(declare-fun m!81971 () Bool)

(assert (=> d!19683 m!81971))

(declare-fun m!81973 () Bool)

(assert (=> d!19683 m!81973))

(declare-fun m!81975 () Bool)

(assert (=> b!80600 m!81975))

(declare-fun m!81977 () Bool)

(assert (=> b!80601 m!81977))

(assert (=> bm!7442 d!19683))

(declare-fun d!19685 () Bool)

(assert (=> d!19685 (= (apply!80 lt!37406 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1187 (getValueByKey!136 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3405 () Bool)

(assert (= bs!3405 d!19685))

(declare-fun m!81979 () Bool)

(assert (=> bs!3405 m!81979))

(assert (=> bs!3405 m!81979))

(declare-fun m!81981 () Bool)

(assert (=> bs!3405 m!81981))

(assert (=> b!80469 d!19685))

(declare-fun d!19687 () Bool)

(assert (=> d!19687 (= (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80362 d!19687))

(declare-fun b!80605 () Bool)

(declare-fun e!52634 () Option!142)

(assert (=> b!80605 (= e!52634 None!140)))

(declare-fun b!80602 () Bool)

(declare-fun e!52633 () Option!142)

(assert (=> b!80602 (= e!52633 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37342)))))))

(declare-fun b!80604 () Bool)

(assert (=> b!80604 (= e!52634 (getValueByKey!136 (t!5172 (toList!734 lt!37342)) (_1!1102 lt!37082)))))

(declare-fun d!19689 () Bool)

(declare-fun c!12609 () Bool)

(assert (=> d!19689 (= c!12609 (and ((_ is Cons!1510) (toList!734 lt!37342)) (= (_1!1102 (h!2099 (toList!734 lt!37342))) (_1!1102 lt!37082))))))

(assert (=> d!19689 (= (getValueByKey!136 (toList!734 lt!37342) (_1!1102 lt!37082)) e!52633)))

(declare-fun b!80603 () Bool)

(assert (=> b!80603 (= e!52633 e!52634)))

(declare-fun c!12610 () Bool)

(assert (=> b!80603 (= c!12610 (and ((_ is Cons!1510) (toList!734 lt!37342)) (not (= (_1!1102 (h!2099 (toList!734 lt!37342))) (_1!1102 lt!37082)))))))

(assert (= (and d!19689 c!12609) b!80602))

(assert (= (and d!19689 (not c!12609)) b!80603))

(assert (= (and b!80603 c!12610) b!80604))

(assert (= (and b!80603 (not c!12610)) b!80605))

(declare-fun m!81983 () Bool)

(assert (=> b!80604 m!81983))

(assert (=> b!80366 d!19689))

(declare-fun d!19691 () Bool)

(declare-fun lt!37492 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!85 (List!1515) (InoxSet (_ BitVec 64)))

(assert (=> d!19691 (= lt!37492 (select (content!85 Nil!1512) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun e!52640 () Bool)

(assert (=> d!19691 (= lt!37492 e!52640)))

(declare-fun res!41975 () Bool)

(assert (=> d!19691 (=> (not res!41975) (not e!52640))))

(assert (=> d!19691 (= res!41975 ((_ is Cons!1511) Nil!1512))))

(assert (=> d!19691 (= (contains!746 Nil!1512 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) lt!37492)))

(declare-fun b!80610 () Bool)

(declare-fun e!52639 () Bool)

(assert (=> b!80610 (= e!52640 e!52639)))

(declare-fun res!41974 () Bool)

(assert (=> b!80610 (=> res!41974 e!52639)))

(assert (=> b!80610 (= res!41974 (= (h!2100 Nil!1512) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun b!80611 () Bool)

(assert (=> b!80611 (= e!52639 (contains!746 (t!5173 Nil!1512) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (= (and d!19691 res!41975) b!80610))

(assert (= (and b!80610 (not res!41974)) b!80611))

(declare-fun m!81985 () Bool)

(assert (=> d!19691 m!81985))

(assert (=> d!19691 m!81295))

(declare-fun m!81987 () Bool)

(assert (=> d!19691 m!81987))

(assert (=> b!80611 m!81295))

(declare-fun m!81989 () Bool)

(assert (=> b!80611 m!81989))

(assert (=> b!80394 d!19691))

(assert (=> b!80364 d!19687))

(declare-fun d!19693 () Bool)

(assert (=> d!19693 (= (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (and (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80396 d!19693))

(declare-fun d!19695 () Bool)

(declare-fun e!52641 () Bool)

(assert (=> d!19695 e!52641))

(declare-fun res!41977 () Bool)

(assert (=> d!19695 (=> (not res!41977) (not e!52641))))

(declare-fun lt!37496 () ListLongMap!1437)

(assert (=> d!19695 (= res!41977 (contains!742 lt!37496 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!37495 () List!1514)

(assert (=> d!19695 (= lt!37496 (ListLongMap!1438 lt!37495))))

(declare-fun lt!37494 () Unit!2327)

(declare-fun lt!37493 () Unit!2327)

(assert (=> d!19695 (= lt!37494 lt!37493)))

(assert (=> d!19695 (= (getValueByKey!136 lt!37495 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19695 (= lt!37493 (lemmaContainsTupThenGetReturnValue!56 lt!37495 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19695 (= lt!37495 (insertStrictlySorted!59 (toList!734 call!7475) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19695 (= (+!104 call!7475 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37496)))

(declare-fun b!80612 () Bool)

(declare-fun res!41976 () Bool)

(assert (=> b!80612 (=> (not res!41976) (not e!52641))))

(assert (=> b!80612 (= res!41976 (= (getValueByKey!136 (toList!734 lt!37496) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!80613 () Bool)

(assert (=> b!80613 (= e!52641 (contains!745 (toList!734 lt!37496) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19695 res!41977) b!80612))

(assert (= (and b!80612 res!41976) b!80613))

(declare-fun m!81991 () Bool)

(assert (=> d!19695 m!81991))

(declare-fun m!81993 () Bool)

(assert (=> d!19695 m!81993))

(declare-fun m!81995 () Bool)

(assert (=> d!19695 m!81995))

(declare-fun m!81997 () Bool)

(assert (=> d!19695 m!81997))

(declare-fun m!81999 () Bool)

(assert (=> b!80612 m!81999))

(declare-fun m!82001 () Bool)

(assert (=> b!80613 m!82001))

(assert (=> b!80455 d!19695))

(declare-fun d!19697 () Bool)

(declare-fun e!52642 () Bool)

(assert (=> d!19697 e!52642))

(declare-fun res!41979 () Bool)

(assert (=> d!19697 (=> (not res!41979) (not e!52642))))

(declare-fun lt!37500 () ListLongMap!1437)

(assert (=> d!19697 (= res!41979 (contains!742 lt!37500 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun lt!37499 () List!1514)

(assert (=> d!19697 (= lt!37500 (ListLongMap!1438 lt!37499))))

(declare-fun lt!37498 () Unit!2327)

(declare-fun lt!37497 () Unit!2327)

(assert (=> d!19697 (= lt!37498 lt!37497)))

(assert (=> d!19697 (= (getValueByKey!136 lt!37499 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (Some!141 (_2!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!19697 (= lt!37497 (lemmaContainsTupThenGetReturnValue!56 lt!37499 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_2!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!19697 (= lt!37499 (insertStrictlySorted!59 (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428)) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_2!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!19697 (= (+!104 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428) (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!37500)))

(declare-fun b!80614 () Bool)

(declare-fun res!41978 () Bool)

(assert (=> b!80614 (=> (not res!41978) (not e!52642))))

(assert (=> b!80614 (= res!41978 (= (getValueByKey!136 (toList!734 lt!37500) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (Some!141 (_2!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(declare-fun b!80615 () Bool)

(assert (=> b!80615 (= e!52642 (contains!745 (toList!734 lt!37500) (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (= (and d!19697 res!41979) b!80614))

(assert (= (and b!80614 res!41978) b!80615))

(declare-fun m!82003 () Bool)

(assert (=> d!19697 m!82003))

(declare-fun m!82005 () Bool)

(assert (=> d!19697 m!82005))

(declare-fun m!82007 () Bool)

(assert (=> d!19697 m!82007))

(declare-fun m!82009 () Bool)

(assert (=> d!19697 m!82009))

(declare-fun m!82011 () Bool)

(assert (=> b!80614 m!82011))

(declare-fun m!82013 () Bool)

(assert (=> b!80615 m!82013))

(assert (=> bm!7424 d!19697))

(declare-fun b!80619 () Bool)

(declare-fun e!52644 () Option!142)

(assert (=> b!80619 (= e!52644 None!140)))

(declare-fun b!80616 () Bool)

(declare-fun e!52643 () Option!142)

(assert (=> b!80616 (= e!52643 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37346)))))))

(declare-fun b!80618 () Bool)

(assert (=> b!80618 (= e!52644 (getValueByKey!136 (t!5172 (toList!734 lt!37346)) (_1!1102 lt!37075)))))

(declare-fun d!19699 () Bool)

(declare-fun c!12611 () Bool)

(assert (=> d!19699 (= c!12611 (and ((_ is Cons!1510) (toList!734 lt!37346)) (= (_1!1102 (h!2099 (toList!734 lt!37346))) (_1!1102 lt!37075))))))

(assert (=> d!19699 (= (getValueByKey!136 (toList!734 lt!37346) (_1!1102 lt!37075)) e!52643)))

(declare-fun b!80617 () Bool)

(assert (=> b!80617 (= e!52643 e!52644)))

(declare-fun c!12612 () Bool)

(assert (=> b!80617 (= c!12612 (and ((_ is Cons!1510) (toList!734 lt!37346)) (not (= (_1!1102 (h!2099 (toList!734 lt!37346))) (_1!1102 lt!37075)))))))

(assert (= (and d!19699 c!12611) b!80616))

(assert (= (and d!19699 (not c!12611)) b!80617))

(assert (= (and b!80617 c!12612) b!80618))

(assert (= (and b!80617 (not c!12612)) b!80619))

(declare-fun m!82015 () Bool)

(assert (=> b!80618 m!82015))

(assert (=> b!80368 d!19699))

(declare-fun b!80623 () Bool)

(declare-fun e!52646 () Option!142)

(assert (=> b!80623 (= e!52646 None!140)))

(declare-fun b!80620 () Bool)

(declare-fun e!52645 () Option!142)

(assert (=> b!80620 (= e!52645 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37350)))))))

(declare-fun b!80622 () Bool)

(assert (=> b!80622 (= e!52646 (getValueByKey!136 (t!5172 (toList!734 lt!37350)) (_1!1102 lt!37079)))))

(declare-fun d!19701 () Bool)

(declare-fun c!12613 () Bool)

(assert (=> d!19701 (= c!12613 (and ((_ is Cons!1510) (toList!734 lt!37350)) (= (_1!1102 (h!2099 (toList!734 lt!37350))) (_1!1102 lt!37079))))))

(assert (=> d!19701 (= (getValueByKey!136 (toList!734 lt!37350) (_1!1102 lt!37079)) e!52645)))

(declare-fun b!80621 () Bool)

(assert (=> b!80621 (= e!52645 e!52646)))

(declare-fun c!12614 () Bool)

(assert (=> b!80621 (= c!12614 (and ((_ is Cons!1510) (toList!734 lt!37350)) (not (= (_1!1102 (h!2099 (toList!734 lt!37350))) (_1!1102 lt!37079)))))))

(assert (= (and d!19701 c!12613) b!80620))

(assert (= (and d!19701 (not c!12613)) b!80621))

(assert (= (and b!80621 c!12614) b!80622))

(assert (= (and b!80621 (not c!12614)) b!80623))

(declare-fun m!82017 () Bool)

(assert (=> b!80622 m!82017))

(assert (=> b!80370 d!19701))

(declare-fun e!52650 () Bool)

(declare-fun b!80624 () Bool)

(assert (=> b!80624 (= e!52650 (contains!746 (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!19703 () Bool)

(declare-fun res!41980 () Bool)

(declare-fun e!52647 () Bool)

(assert (=> d!19703 (=> res!41980 e!52647)))

(assert (=> d!19703 (= res!41980 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> d!19703 (= (arrayNoDuplicates!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)) e!52647)))

(declare-fun b!80625 () Bool)

(declare-fun e!52649 () Bool)

(declare-fun call!7492 () Bool)

(assert (=> b!80625 (= e!52649 call!7492)))

(declare-fun b!80626 () Bool)

(declare-fun e!52648 () Bool)

(assert (=> b!80626 (= e!52648 e!52649)))

(declare-fun c!12615 () Bool)

(assert (=> b!80626 (= c!12615 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!80627 () Bool)

(assert (=> b!80627 (= e!52647 e!52648)))

(declare-fun res!41982 () Bool)

(assert (=> b!80627 (=> (not res!41982) (not e!52648))))

(assert (=> b!80627 (= res!41982 (not e!52650))))

(declare-fun res!41981 () Bool)

(assert (=> b!80627 (=> (not res!41981) (not e!52650))))

(assert (=> b!80627 (= res!41981 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!7489 () Bool)

(assert (=> bm!7489 (= call!7492 (arrayNoDuplicates!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12615 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512))))))

(declare-fun b!80628 () Bool)

(assert (=> b!80628 (= e!52649 call!7492)))

(assert (= (and d!19703 (not res!41980)) b!80627))

(assert (= (and b!80627 res!41981) b!80624))

(assert (= (and b!80627 res!41982) b!80626))

(assert (= (and b!80626 c!12615) b!80625))

(assert (= (and b!80626 (not c!12615)) b!80628))

(assert (= (or b!80625 b!80628) bm!7489))

(declare-fun m!82019 () Bool)

(assert (=> b!80624 m!82019))

(assert (=> b!80624 m!82019))

(declare-fun m!82021 () Bool)

(assert (=> b!80624 m!82021))

(assert (=> b!80626 m!82019))

(assert (=> b!80626 m!82019))

(declare-fun m!82023 () Bool)

(assert (=> b!80626 m!82023))

(assert (=> b!80627 m!82019))

(assert (=> b!80627 m!82019))

(assert (=> b!80627 m!82023))

(assert (=> bm!7489 m!82019))

(declare-fun m!82025 () Bool)

(assert (=> bm!7489 m!82025))

(assert (=> bm!7452 d!19703))

(declare-fun d!19705 () Bool)

(declare-fun lt!37503 () Bool)

(declare-fun content!86 (List!1514) (InoxSet tuple2!2182))

(assert (=> d!19705 (= lt!37503 (select (content!86 (toList!734 lt!37305)) lt!37075))))

(declare-fun e!52655 () Bool)

(assert (=> d!19705 (= lt!37503 e!52655)))

(declare-fun res!41988 () Bool)

(assert (=> d!19705 (=> (not res!41988) (not e!52655))))

(assert (=> d!19705 (= res!41988 ((_ is Cons!1510) (toList!734 lt!37305)))))

(assert (=> d!19705 (= (contains!745 (toList!734 lt!37305) lt!37075) lt!37503)))

(declare-fun b!80633 () Bool)

(declare-fun e!52656 () Bool)

(assert (=> b!80633 (= e!52655 e!52656)))

(declare-fun res!41987 () Bool)

(assert (=> b!80633 (=> res!41987 e!52656)))

(assert (=> b!80633 (= res!41987 (= (h!2099 (toList!734 lt!37305)) lt!37075))))

(declare-fun b!80634 () Bool)

(assert (=> b!80634 (= e!52656 (contains!745 (t!5172 (toList!734 lt!37305)) lt!37075))))

(assert (= (and d!19705 res!41988) b!80633))

(assert (= (and b!80633 (not res!41987)) b!80634))

(declare-fun m!82027 () Bool)

(assert (=> d!19705 m!82027))

(declare-fun m!82029 () Bool)

(assert (=> d!19705 m!82029))

(declare-fun m!82031 () Bool)

(assert (=> b!80634 m!82031))

(assert (=> b!80325 d!19705))

(declare-fun d!19707 () Bool)

(declare-fun e!52657 () Bool)

(assert (=> d!19707 e!52657))

(declare-fun res!41989 () Bool)

(assert (=> d!19707 (=> res!41989 e!52657)))

(declare-fun lt!37507 () Bool)

(assert (=> d!19707 (= res!41989 (not lt!37507))))

(declare-fun lt!37506 () Bool)

(assert (=> d!19707 (= lt!37507 lt!37506)))

(declare-fun lt!37505 () Unit!2327)

(declare-fun e!52658 () Unit!2327)

(assert (=> d!19707 (= lt!37505 e!52658)))

(declare-fun c!12616 () Bool)

(assert (=> d!19707 (= c!12616 lt!37506)))

(assert (=> d!19707 (= lt!37506 (containsKey!140 (toList!734 call!7441) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))

(assert (=> d!19707 (= (contains!742 call!7441 (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))) lt!37507)))

(declare-fun b!80635 () Bool)

(declare-fun lt!37504 () Unit!2327)

(assert (=> b!80635 (= e!52658 lt!37504)))

(assert (=> b!80635 (= lt!37504 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 call!7441) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))

(assert (=> b!80635 (isDefined!90 (getValueByKey!136 (toList!734 call!7441) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))

(declare-fun b!80636 () Bool)

(declare-fun Unit!2346 () Unit!2327)

(assert (=> b!80636 (= e!52658 Unit!2346)))

(declare-fun b!80637 () Bool)

(assert (=> b!80637 (= e!52657 (isDefined!90 (getValueByKey!136 (toList!734 call!7441) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277)))))))

(assert (= (and d!19707 c!12616) b!80635))

(assert (= (and d!19707 (not c!12616)) b!80636))

(assert (= (and d!19707 (not res!41989)) b!80637))

(assert (=> d!19707 m!81543))

(declare-fun m!82033 () Bool)

(assert (=> d!19707 m!82033))

(assert (=> b!80635 m!81543))

(declare-fun m!82035 () Bool)

(assert (=> b!80635 m!82035))

(assert (=> b!80635 m!81543))

(declare-fun m!82037 () Bool)

(assert (=> b!80635 m!82037))

(assert (=> b!80635 m!82037))

(declare-fun m!82039 () Bool)

(assert (=> b!80635 m!82039))

(assert (=> b!80637 m!81543))

(assert (=> b!80637 m!82037))

(assert (=> b!80637 m!82037))

(assert (=> b!80637 m!82039))

(assert (=> b!80308 d!19707))

(declare-fun d!19709 () Bool)

(declare-fun e!52661 () Bool)

(assert (=> d!19709 e!52661))

(declare-fun res!41992 () Bool)

(assert (=> d!19709 (=> (not res!41992) (not e!52661))))

(assert (=> d!19709 (= res!41992 (and (bvsge (index!3112 lt!37277) #b00000000000000000000000000000000) (bvslt (index!3112 lt!37277) (size!2131 (_keys!3955 newMap!16)))))))

(declare-fun lt!37510 () Unit!2327)

(declare-fun choose!481 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) Int) Unit!2327)

(assert (=> d!19709 (= lt!37510 (choose!481 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3112 lt!37277) (defaultEntry!2292 newMap!16)))))

(assert (=> d!19709 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19709 (= (lemmaValidKeyInArrayIsInListMap!88 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3112 lt!37277) (defaultEntry!2292 newMap!16)) lt!37510)))

(declare-fun b!80640 () Bool)

(assert (=> b!80640 (= e!52661 (contains!742 (getCurrentListMap!423 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))

(assert (= (and d!19709 res!41992) b!80640))

(declare-fun m!82041 () Bool)

(assert (=> d!19709 m!82041))

(assert (=> d!19709 m!81973))

(declare-fun m!82043 () Bool)

(assert (=> b!80640 m!82043))

(assert (=> b!80640 m!81543))

(assert (=> b!80640 m!82043))

(assert (=> b!80640 m!81543))

(declare-fun m!82045 () Bool)

(assert (=> b!80640 m!82045))

(assert (=> b!80308 d!19709))

(declare-fun d!19711 () Bool)

(declare-fun e!52664 () Bool)

(assert (=> d!19711 e!52664))

(declare-fun res!41995 () Bool)

(assert (=> d!19711 (=> (not res!41995) (not e!52664))))

(assert (=> d!19711 (= res!41995 (and (bvsge (index!3112 lt!37277) #b00000000000000000000000000000000) (bvslt (index!3112 lt!37277) (size!2132 (_values!2275 newMap!16)))))))

(declare-fun lt!37513 () Unit!2327)

(declare-fun choose!482 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) (_ BitVec 64) V!3001 Int) Unit!2327)

(assert (=> d!19711 (= lt!37513 (choose!482 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3112 lt!37277) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 (defaultEntry!2292 newMap!16)))))

(assert (=> d!19711 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19711 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!29 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3112 lt!37277) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 (defaultEntry!2292 newMap!16)) lt!37513)))

(declare-fun b!80643 () Bool)

(assert (=> b!80643 (= e!52664 (= (+!104 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (getCurrentListMap!423 (_keys!3955 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))))))

(assert (= (and d!19711 res!41995) b!80643))

(assert (=> d!19711 m!81295))

(declare-fun m!82047 () Bool)

(assert (=> d!19711 m!82047))

(assert (=> d!19711 m!81973))

(assert (=> b!80643 m!81711))

(assert (=> b!80643 m!81711))

(declare-fun m!82049 () Bool)

(assert (=> b!80643 m!82049))

(assert (=> b!80643 m!81519))

(declare-fun m!82051 () Bool)

(assert (=> b!80643 m!82051))

(assert (=> b!80308 d!19711))

(assert (=> b!80459 d!19687))

(declare-fun d!19713 () Bool)

(declare-fun lt!37514 () Bool)

(assert (=> d!19713 (= lt!37514 (select (content!86 (toList!734 lt!37301)) lt!37082))))

(declare-fun e!52665 () Bool)

(assert (=> d!19713 (= lt!37514 e!52665)))

(declare-fun res!41997 () Bool)

(assert (=> d!19713 (=> (not res!41997) (not e!52665))))

(assert (=> d!19713 (= res!41997 ((_ is Cons!1510) (toList!734 lt!37301)))))

(assert (=> d!19713 (= (contains!745 (toList!734 lt!37301) lt!37082) lt!37514)))

(declare-fun b!80644 () Bool)

(declare-fun e!52666 () Bool)

(assert (=> b!80644 (= e!52665 e!52666)))

(declare-fun res!41996 () Bool)

(assert (=> b!80644 (=> res!41996 e!52666)))

(assert (=> b!80644 (= res!41996 (= (h!2099 (toList!734 lt!37301)) lt!37082))))

(declare-fun b!80645 () Bool)

(assert (=> b!80645 (= e!52666 (contains!745 (t!5172 (toList!734 lt!37301)) lt!37082))))

(assert (= (and d!19713 res!41997) b!80644))

(assert (= (and b!80644 (not res!41996)) b!80645))

(declare-fun m!82053 () Bool)

(assert (=> d!19713 m!82053))

(declare-fun m!82055 () Bool)

(assert (=> d!19713 m!82055))

(declare-fun m!82057 () Bool)

(assert (=> b!80645 m!82057))

(assert (=> b!80323 d!19713))

(assert (=> bm!7430 d!19617))

(declare-fun d!19715 () Bool)

(assert (=> d!19715 (= (get!1186 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) from!355) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80188 d!19715))

(declare-fun d!19717 () Bool)

(declare-fun res!41998 () Bool)

(declare-fun e!52667 () Bool)

(assert (=> d!19717 (=> (not res!41998) (not e!52667))))

(assert (=> d!19717 (= res!41998 (simpleValid!56 (v!2600 (underlying!276 thiss!992))))))

(assert (=> d!19717 (= (valid!325 (v!2600 (underlying!276 thiss!992))) e!52667)))

(declare-fun b!80646 () Bool)

(declare-fun res!41999 () Bool)

(assert (=> b!80646 (=> (not res!41999) (not e!52667))))

(assert (=> b!80646 (= res!41999 (= (arrayCountValidKeys!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000000 (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))) (_size!417 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun b!80647 () Bool)

(declare-fun res!42000 () Bool)

(assert (=> b!80647 (=> (not res!42000) (not e!52667))))

(assert (=> b!80647 (= res!42000 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun b!80648 () Bool)

(assert (=> b!80648 (= e!52667 (arrayNoDuplicates!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000000 Nil!1512))))

(assert (= (and d!19717 res!41998) b!80646))

(assert (= (and b!80646 res!41999) b!80647))

(assert (= (and b!80647 res!42000) b!80648))

(declare-fun m!82059 () Bool)

(assert (=> d!19717 m!82059))

(declare-fun m!82061 () Bool)

(assert (=> b!80646 m!82061))

(declare-fun m!82063 () Bool)

(assert (=> b!80647 m!82063))

(declare-fun m!82065 () Bool)

(assert (=> b!80648 m!82065))

(assert (=> d!19599 d!19717))

(declare-fun d!19719 () Bool)

(declare-fun e!52668 () Bool)

(assert (=> d!19719 e!52668))

(declare-fun res!42001 () Bool)

(assert (=> d!19719 (=> res!42001 e!52668)))

(declare-fun lt!37518 () Bool)

(assert (=> d!19719 (= res!42001 (not lt!37518))))

(declare-fun lt!37517 () Bool)

(assert (=> d!19719 (= lt!37518 lt!37517)))

(declare-fun lt!37516 () Unit!2327)

(declare-fun e!52669 () Unit!2327)

(assert (=> d!19719 (= lt!37516 e!52669)))

(declare-fun c!12617 () Bool)

(assert (=> d!19719 (= c!12617 lt!37517)))

(assert (=> d!19719 (= lt!37517 (containsKey!140 (toList!734 lt!37331) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19719 (= (contains!742 lt!37331 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37518)))

(declare-fun b!80649 () Bool)

(declare-fun lt!37515 () Unit!2327)

(assert (=> b!80649 (= e!52669 lt!37515)))

(assert (=> b!80649 (= lt!37515 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37331) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80649 (isDefined!90 (getValueByKey!136 (toList!734 lt!37331) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80650 () Bool)

(declare-fun Unit!2347 () Unit!2327)

(assert (=> b!80650 (= e!52669 Unit!2347)))

(declare-fun b!80651 () Bool)

(assert (=> b!80651 (= e!52668 (isDefined!90 (getValueByKey!136 (toList!734 lt!37331) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19719 c!12617) b!80649))

(assert (= (and d!19719 (not c!12617)) b!80650))

(assert (= (and d!19719 (not res!42001)) b!80651))

(declare-fun m!82067 () Bool)

(assert (=> d!19719 m!82067))

(declare-fun m!82069 () Bool)

(assert (=> b!80649 m!82069))

(declare-fun m!82071 () Bool)

(assert (=> b!80649 m!82071))

(assert (=> b!80649 m!82071))

(declare-fun m!82073 () Bool)

(assert (=> b!80649 m!82073))

(assert (=> b!80651 m!82071))

(assert (=> b!80651 m!82071))

(assert (=> b!80651 m!82073))

(assert (=> d!19585 d!19719))

(assert (=> d!19585 d!19583))

(declare-fun b!80686 () Bool)

(declare-fun c!12627 () Bool)

(declare-fun lt!37596 () SeekEntryResult!244)

(assert (=> b!80686 (= c!12627 ((_ is MissingVacant!244) lt!37596))))

(declare-fun e!52691 () Bool)

(declare-fun e!52686 () Bool)

(assert (=> b!80686 (= e!52691 e!52686)))

(declare-fun b!80687 () Bool)

(declare-fun res!42026 () Bool)

(declare-fun e!52693 () Bool)

(assert (=> b!80687 (=> (not res!42026) (not e!52693))))

(declare-fun lt!37581 () tuple2!2180)

(assert (=> b!80687 (= res!42026 (valid!325 (_2!1101 lt!37581)))))

(declare-fun b!80688 () Bool)

(declare-fun e!52687 () Unit!2327)

(declare-fun Unit!2348 () Unit!2327)

(assert (=> b!80688 (= e!52687 Unit!2348)))

(declare-fun lt!37607 () Unit!2327)

(assert (=> b!80688 (= lt!37607 (lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37597 () SeekEntryResult!244)

(declare-fun call!7503 () SeekEntryResult!244)

(assert (=> b!80688 (= lt!37597 call!7503)))

(declare-fun res!42024 () Bool)

(assert (=> b!80688 (= res!42024 ((_ is Found!244) lt!37597))))

(declare-fun e!52688 () Bool)

(assert (=> b!80688 (=> (not res!42024) (not e!52688))))

(assert (=> b!80688 e!52688))

(declare-fun lt!37602 () Unit!2327)

(assert (=> b!80688 (= lt!37602 lt!37607)))

(assert (=> b!80688 false))

(declare-fun bm!7498 () Bool)

(assert (=> bm!7498 (= call!7503 (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(declare-fun b!80689 () Bool)

(declare-fun lt!37599 () Unit!2327)

(assert (=> b!80689 (= e!52687 lt!37599)))

(assert (=> b!80689 (= lt!37599 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)))))

(assert (=> b!80689 (= lt!37596 call!7503)))

(declare-fun c!12629 () Bool)

(assert (=> b!80689 (= c!12629 ((_ is MissingZero!244) lt!37596))))

(assert (=> b!80689 e!52691))

(declare-fun b!80690 () Bool)

(declare-fun e!52692 () Unit!2327)

(declare-fun Unit!2349 () Unit!2327)

(assert (=> b!80690 (= e!52692 Unit!2349)))

(declare-fun lt!37590 () Unit!2327)

(declare-fun lemmaArrayContainsKeyThenInListMap!17 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) (_ BitVec 32) Int) Unit!2327)

(assert (=> b!80690 (= lt!37590 (lemmaArrayContainsKeyThenInListMap!17 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(assert (=> b!80690 (contains!742 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))

(declare-fun lt!37604 () Unit!2327)

(assert (=> b!80690 (= lt!37604 lt!37590)))

(assert (=> b!80690 false))

(declare-fun d!19721 () Bool)

(assert (=> d!19721 e!52693))

(declare-fun res!42025 () Bool)

(assert (=> d!19721 (=> (not res!42025) (not e!52693))))

(assert (=> d!19721 (= res!42025 (_1!1101 lt!37581))))

(assert (=> d!19721 (= lt!37581 (tuple2!2181 true (LongMapFixedSize!737 (defaultEntry!2292 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (bvadd (_size!417 newMap!16) #b00000000000000000000000000000001) (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (_vacant!417 newMap!16))))))

(declare-fun lt!37591 () Unit!2327)

(declare-fun lt!37608 () Unit!2327)

(assert (=> d!19721 (= lt!37591 lt!37608)))

(declare-fun lt!37598 () array!3967)

(declare-fun lt!37593 () array!3965)

(assert (=> d!19721 (contains!742 (getCurrentListMap!423 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277))))))

(assert (=> d!19721 (= lt!37608 (lemmaValidKeyInArrayIsInListMap!88 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (defaultEntry!2292 newMap!16)))))

(assert (=> d!19721 (= lt!37598 (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))))))

(assert (=> d!19721 (= lt!37593 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun lt!37585 () Unit!2327)

(declare-fun lt!37586 () Unit!2327)

(assert (=> d!19721 (= lt!37585 lt!37586)))

(declare-fun lt!37603 () array!3965)

(assert (=> d!19721 (= (arrayCountValidKeys!0 lt!37603 (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (bvadd (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3965 (_ BitVec 32)) Unit!2327)

(assert (=> d!19721 (= lt!37586 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!37603 (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277))))))

(assert (=> d!19721 (= lt!37603 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun lt!37605 () Unit!2327)

(declare-fun lt!37589 () Unit!2327)

(assert (=> d!19721 (= lt!37605 lt!37589)))

(declare-fun lt!37606 () array!3965)

(assert (=> d!19721 (arrayContainsKey!0 lt!37606 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3965 (_ BitVec 64) (_ BitVec 32)) Unit!2327)

(assert (=> d!19721 (= lt!37589 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!37606 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277))))))

(assert (=> d!19721 (= lt!37606 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun lt!37583 () Unit!2327)

(declare-fun lt!37601 () Unit!2327)

(assert (=> d!19721 (= lt!37583 lt!37601)))

(assert (=> d!19721 (= (+!104 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (getCurrentListMap!423 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!17 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) (_ BitVec 64) V!3001 Int) Unit!2327)

(assert (=> d!19721 (= lt!37601 (lemmaAddValidKeyToArrayThenAddPairToListMap!17 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37588 () Unit!2327)

(declare-fun lt!37594 () Unit!2327)

(assert (=> d!19721 (= lt!37588 lt!37594)))

(assert (=> d!19721 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (mask!6297 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3965 (_ BitVec 32) (_ BitVec 32)) Unit!2327)

(assert (=> d!19721 (= lt!37594 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (mask!6297 newMap!16)))))

(declare-fun lt!37600 () Unit!2327)

(declare-fun lt!37582 () Unit!2327)

(assert (=> d!19721 (= lt!37600 lt!37582)))

(assert (=> d!19721 (= (arrayCountValidKeys!0 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3955 newMap!16) #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3965 (_ BitVec 32) (_ BitVec 64)) Unit!2327)

(assert (=> d!19721 (= lt!37582 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3955 newMap!16) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun lt!37592 () Unit!2327)

(declare-fun lt!37584 () Unit!2327)

(assert (=> d!19721 (= lt!37592 lt!37584)))

(declare-fun lt!37580 () (_ BitVec 32))

(declare-fun lt!37579 () List!1515)

(assert (=> d!19721 (arrayNoDuplicates!0 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) lt!37580 lt!37579)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3965 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1515) Unit!2327)

(assert (=> d!19721 (= lt!37584 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3955 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) lt!37580 lt!37579))))

(assert (=> d!19721 (= lt!37579 Nil!1512)))

(assert (=> d!19721 (= lt!37580 #b00000000000000000000000000000000)))

(declare-fun lt!37595 () Unit!2327)

(assert (=> d!19721 (= lt!37595 e!52692)))

(declare-fun c!12626 () Bool)

(assert (=> d!19721 (= c!12626 (arrayContainsKey!0 (_keys!3955 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!37587 () Unit!2327)

(assert (=> d!19721 (= lt!37587 e!52687)))

(declare-fun c!12628 () Bool)

(assert (=> d!19721 (= c!12628 (contains!742 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!19721 (valid!325 newMap!16)))

(assert (=> d!19721 (= (updateHelperNewKey!29 newMap!16 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277))) lt!37581)))

(declare-fun b!80691 () Bool)

(declare-fun res!42021 () Bool)

(declare-fun e!52690 () Bool)

(assert (=> b!80691 (=> (not res!42021) (not e!52690))))

(declare-fun call!7502 () Bool)

(assert (=> b!80691 (= res!42021 call!7502)))

(assert (=> b!80691 (= e!52691 e!52690)))

(declare-fun bm!7499 () Bool)

(declare-fun call!7504 () Bool)

(assert (=> bm!7499 (= call!7504 (inRange!0 (ite c!12628 (index!3112 lt!37597) (ite c!12629 (index!3111 lt!37596) (index!3114 lt!37596))) (mask!6297 newMap!16)))))

(declare-fun bm!7500 () Bool)

(declare-fun call!7501 () Bool)

(assert (=> bm!7500 (= call!7501 (arrayContainsKey!0 (_keys!3955 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!80692 () Bool)

(declare-fun e!52689 () Bool)

(assert (=> b!80692 (= e!52689 (not call!7501))))

(declare-fun b!80693 () Bool)

(declare-fun Unit!2350 () Unit!2327)

(assert (=> b!80693 (= e!52692 Unit!2350)))

(declare-fun b!80694 () Bool)

(assert (=> b!80694 (= e!52690 (not call!7501))))

(declare-fun b!80695 () Bool)

(assert (=> b!80695 (= e!52686 e!52689)))

(declare-fun res!42027 () Bool)

(assert (=> b!80695 (= res!42027 call!7502)))

(assert (=> b!80695 (=> (not res!42027) (not e!52689))))

(declare-fun bm!7501 () Bool)

(assert (=> bm!7501 (= call!7502 call!7504)))

(declare-fun b!80696 () Bool)

(declare-fun res!42028 () Bool)

(assert (=> b!80696 (=> (not res!42028) (not e!52690))))

(assert (=> b!80696 (= res!42028 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3111 lt!37596)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80697 () Bool)

(declare-fun res!42022 () Bool)

(assert (=> b!80697 (=> (not res!42022) (not e!52693))))

(assert (=> b!80697 (= res!42022 (contains!742 (map!1177 (_2!1101 lt!37581)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun b!80698 () Bool)

(declare-fun res!42023 () Bool)

(assert (=> b!80698 (= res!42023 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3114 lt!37596)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80698 (=> (not res!42023) (not e!52689))))

(declare-fun b!80699 () Bool)

(assert (=> b!80699 (= e!52688 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37597)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun b!80700 () Bool)

(assert (=> b!80700 (= e!52693 (= (map!1177 (_2!1101 lt!37581)) (+!104 (map!1177 newMap!16) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!80701 () Bool)

(assert (=> b!80701 (= e!52686 ((_ is Undefined!244) lt!37596))))

(declare-fun b!80702 () Bool)

(declare-fun res!42020 () Bool)

(assert (=> b!80702 (= res!42020 call!7504)))

(assert (=> b!80702 (=> (not res!42020) (not e!52688))))

(assert (= (and d!19721 c!12628) b!80688))

(assert (= (and d!19721 (not c!12628)) b!80689))

(assert (= (and b!80688 res!42024) b!80702))

(assert (= (and b!80702 res!42020) b!80699))

(assert (= (and b!80689 c!12629) b!80691))

(assert (= (and b!80689 (not c!12629)) b!80686))

(assert (= (and b!80691 res!42021) b!80696))

(assert (= (and b!80696 res!42028) b!80694))

(assert (= (and b!80686 c!12627) b!80695))

(assert (= (and b!80686 (not c!12627)) b!80701))

(assert (= (and b!80695 res!42027) b!80698))

(assert (= (and b!80698 res!42023) b!80692))

(assert (= (or b!80691 b!80695) bm!7501))

(assert (= (or b!80694 b!80692) bm!7500))

(assert (= (or b!80702 bm!7501) bm!7499))

(assert (= (or b!80688 b!80689) bm!7498))

(assert (= (and d!19721 c!12626) b!80690))

(assert (= (and d!19721 (not c!12626)) b!80693))

(assert (= (and d!19721 res!42025) b!80687))

(assert (= (and b!80687 res!42026) b!80697))

(assert (= (and b!80697 res!42022) b!80700))

(assert (=> b!80690 m!81295))

(declare-fun m!82075 () Bool)

(assert (=> b!80690 m!82075))

(assert (=> b!80690 m!81711))

(assert (=> b!80690 m!81711))

(assert (=> b!80690 m!81295))

(declare-fun m!82077 () Bool)

(assert (=> b!80690 m!82077))

(declare-fun m!82079 () Bool)

(assert (=> b!80697 m!82079))

(assert (=> b!80697 m!82079))

(assert (=> b!80697 m!81295))

(declare-fun m!82081 () Bool)

(assert (=> b!80697 m!82081))

(declare-fun m!82083 () Bool)

(assert (=> b!80698 m!82083))

(assert (=> b!80688 m!81295))

(assert (=> b!80688 m!81531))

(declare-fun m!82085 () Bool)

(assert (=> b!80699 m!82085))

(assert (=> bm!7498 m!81295))

(assert (=> bm!7498 m!81509))

(declare-fun m!82087 () Bool)

(assert (=> b!80687 m!82087))

(assert (=> b!80689 m!81295))

(assert (=> b!80689 m!81507))

(declare-fun m!82089 () Bool)

(assert (=> b!80696 m!82089))

(assert (=> bm!7500 m!81295))

(assert (=> bm!7500 m!81539))

(assert (=> b!80700 m!82079))

(assert (=> b!80700 m!81329))

(assert (=> b!80700 m!81329))

(declare-fun m!82091 () Bool)

(assert (=> b!80700 m!82091))

(declare-fun m!82093 () Bool)

(assert (=> bm!7499 m!82093))

(assert (=> d!19721 m!81295))

(declare-fun m!82095 () Bool)

(assert (=> d!19721 m!82095))

(assert (=> d!19721 m!81295))

(declare-fun m!82097 () Bool)

(assert (=> d!19721 m!82097))

(assert (=> d!19721 m!81711))

(declare-fun m!82099 () Bool)

(assert (=> d!19721 m!82099))

(assert (=> d!19721 m!81295))

(declare-fun m!82101 () Bool)

(assert (=> d!19721 m!82101))

(assert (=> d!19721 m!81711))

(assert (=> d!19721 m!82049))

(declare-fun m!82103 () Bool)

(assert (=> d!19721 m!82103))

(assert (=> d!19721 m!81295))

(declare-fun m!82105 () Bool)

(assert (=> d!19721 m!82105))

(assert (=> d!19721 m!81295))

(declare-fun m!82107 () Bool)

(assert (=> d!19721 m!82107))

(declare-fun m!82109 () Bool)

(assert (=> d!19721 m!82109))

(declare-fun m!82111 () Bool)

(assert (=> d!19721 m!82111))

(declare-fun m!82113 () Bool)

(assert (=> d!19721 m!82113))

(assert (=> d!19721 m!81705))

(assert (=> d!19721 m!81295))

(assert (=> d!19721 m!81539))

(declare-fun m!82115 () Bool)

(assert (=> d!19721 m!82115))

(assert (=> d!19721 m!81711))

(assert (=> d!19721 m!81295))

(assert (=> d!19721 m!82077))

(declare-fun m!82117 () Bool)

(assert (=> d!19721 m!82117))

(declare-fun m!82119 () Bool)

(assert (=> d!19721 m!82119))

(assert (=> d!19721 m!82117))

(declare-fun m!82121 () Bool)

(assert (=> d!19721 m!82121))

(assert (=> d!19721 m!81303))

(declare-fun m!82123 () Bool)

(assert (=> d!19721 m!82123))

(declare-fun m!82125 () Bool)

(assert (=> d!19721 m!82125))

(declare-fun m!82127 () Bool)

(assert (=> d!19721 m!82127))

(assert (=> d!19721 m!82119))

(assert (=> d!19721 m!81295))

(declare-fun m!82129 () Bool)

(assert (=> d!19721 m!82129))

(assert (=> bm!7425 d!19721))

(declare-fun b!80703 () Bool)

(declare-fun e!52701 () Bool)

(assert (=> b!80703 (= e!52701 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80704 () Bool)

(declare-fun e!52694 () Unit!2327)

(declare-fun lt!37614 () Unit!2327)

(assert (=> b!80704 (= e!52694 lt!37614)))

(declare-fun lt!37622 () ListLongMap!1437)

(assert (=> b!80704 (= lt!37622 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37617 () (_ BitVec 64))

(assert (=> b!80704 (= lt!37617 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37610 () (_ BitVec 64))

(assert (=> b!80704 (= lt!37610 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37626 () Unit!2327)

(assert (=> b!80704 (= lt!37626 (addStillContains!56 lt!37622 lt!37617 (zeroValue!2188 newMap!16) lt!37610))))

(assert (=> b!80704 (contains!742 (+!104 lt!37622 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16))) lt!37610)))

(declare-fun lt!37629 () Unit!2327)

(assert (=> b!80704 (= lt!37629 lt!37626)))

(declare-fun lt!37618 () ListLongMap!1437)

(assert (=> b!80704 (= lt!37618 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37609 () (_ BitVec 64))

(assert (=> b!80704 (= lt!37609 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37630 () (_ BitVec 64))

(assert (=> b!80704 (= lt!37630 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37616 () Unit!2327)

(assert (=> b!80704 (= lt!37616 (addApplyDifferent!56 lt!37618 lt!37609 (minValue!2188 newMap!16) lt!37630))))

(assert (=> b!80704 (= (apply!80 (+!104 lt!37618 (tuple2!2183 lt!37609 (minValue!2188 newMap!16))) lt!37630) (apply!80 lt!37618 lt!37630))))

(declare-fun lt!37627 () Unit!2327)

(assert (=> b!80704 (= lt!37627 lt!37616)))

(declare-fun lt!37613 () ListLongMap!1437)

(assert (=> b!80704 (= lt!37613 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37620 () (_ BitVec 64))

(assert (=> b!80704 (= lt!37620 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37619 () (_ BitVec 64))

(assert (=> b!80704 (= lt!37619 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37628 () Unit!2327)

(assert (=> b!80704 (= lt!37628 (addApplyDifferent!56 lt!37613 lt!37620 (zeroValue!2188 newMap!16) lt!37619))))

(assert (=> b!80704 (= (apply!80 (+!104 lt!37613 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16))) lt!37619) (apply!80 lt!37613 lt!37619))))

(declare-fun lt!37625 () Unit!2327)

(assert (=> b!80704 (= lt!37625 lt!37628)))

(declare-fun lt!37623 () ListLongMap!1437)

(assert (=> b!80704 (= lt!37623 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37624 () (_ BitVec 64))

(assert (=> b!80704 (= lt!37624 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37621 () (_ BitVec 64))

(assert (=> b!80704 (= lt!37621 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80704 (= lt!37614 (addApplyDifferent!56 lt!37623 lt!37624 (minValue!2188 newMap!16) lt!37621))))

(assert (=> b!80704 (= (apply!80 (+!104 lt!37623 (tuple2!2183 lt!37624 (minValue!2188 newMap!16))) lt!37621) (apply!80 lt!37623 lt!37621))))

(declare-fun b!80705 () Bool)

(declare-fun e!52700 () ListLongMap!1437)

(declare-fun call!7507 () ListLongMap!1437)

(assert (=> b!80705 (= e!52700 call!7507)))

(declare-fun bm!7502 () Bool)

(declare-fun call!7506 () ListLongMap!1437)

(declare-fun call!7505 () ListLongMap!1437)

(assert (=> bm!7502 (= call!7506 call!7505)))

(declare-fun bm!7503 () Bool)

(declare-fun call!7509 () Bool)

(declare-fun lt!37611 () ListLongMap!1437)

(assert (=> bm!7503 (= call!7509 (contains!742 lt!37611 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80706 () Bool)

(declare-fun e!52698 () Bool)

(declare-fun call!7511 () Bool)

(assert (=> b!80706 (= e!52698 (not call!7511))))

(declare-fun b!80707 () Bool)

(declare-fun e!52703 () Bool)

(assert (=> b!80707 (= e!52703 (not call!7509))))

(declare-fun b!80708 () Bool)

(declare-fun e!52697 () ListLongMap!1437)

(declare-fun call!7510 () ListLongMap!1437)

(assert (=> b!80708 (= e!52697 (+!104 call!7510 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun d!19723 () Bool)

(declare-fun e!52705 () Bool)

(assert (=> d!19723 e!52705))

(declare-fun res!42033 () Bool)

(assert (=> d!19723 (=> (not res!42033) (not e!52705))))

(assert (=> d!19723 (= res!42033 (or (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))))

(declare-fun lt!37615 () ListLongMap!1437)

(assert (=> d!19723 (= lt!37611 lt!37615)))

(declare-fun lt!37612 () Unit!2327)

(assert (=> d!19723 (= lt!37612 e!52694)))

(declare-fun c!12631 () Bool)

(assert (=> d!19723 (= c!12631 e!52701)))

(declare-fun res!42030 () Bool)

(assert (=> d!19723 (=> (not res!42030) (not e!52701))))

(assert (=> d!19723 (= res!42030 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19723 (= lt!37615 e!52697)))

(declare-fun c!12633 () Bool)

(assert (=> d!19723 (= c!12633 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19723 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19723 (= (getCurrentListMap!423 (_keys!3955 newMap!16) (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!37611)))

(declare-fun bm!7504 () Bool)

(assert (=> bm!7504 (= call!7511 (contains!742 lt!37611 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7505 () Bool)

(assert (=> bm!7505 (= call!7507 call!7506)))

(declare-fun e!52704 () Bool)

(declare-fun b!80709 () Bool)

(assert (=> b!80709 (= e!52704 (= (apply!80 lt!37611 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80709 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))))))))

(assert (=> b!80709 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80710 () Bool)

(declare-fun res!42031 () Bool)

(assert (=> b!80710 (=> (not res!42031) (not e!52705))))

(declare-fun e!52696 () Bool)

(assert (=> b!80710 (= res!42031 e!52696)))

(declare-fun res!42034 () Bool)

(assert (=> b!80710 (=> res!42034 e!52696)))

(declare-fun e!52706 () Bool)

(assert (=> b!80710 (= res!42034 (not e!52706))))

(declare-fun res!42029 () Bool)

(assert (=> b!80710 (=> (not res!42029) (not e!52706))))

(assert (=> b!80710 (= res!42029 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80711 () Bool)

(declare-fun e!52699 () Bool)

(assert (=> b!80711 (= e!52699 (= (apply!80 lt!37611 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun b!80712 () Bool)

(assert (=> b!80712 (= e!52706 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7506 () Bool)

(declare-fun call!7508 () ListLongMap!1437)

(assert (=> bm!7506 (= call!7508 call!7510)))

(declare-fun b!80713 () Bool)

(assert (=> b!80713 (= e!52703 e!52699)))

(declare-fun res!42037 () Bool)

(assert (=> b!80713 (= res!42037 call!7509)))

(assert (=> b!80713 (=> (not res!42037) (not e!52699))))

(declare-fun b!80714 () Bool)

(assert (=> b!80714 (= e!52700 call!7508)))

(declare-fun b!80715 () Bool)

(assert (=> b!80715 (= e!52705 e!52703)))

(declare-fun c!12630 () Bool)

(assert (=> b!80715 (= c!12630 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80716 () Bool)

(assert (=> b!80716 (= e!52696 e!52704)))

(declare-fun res!42032 () Bool)

(assert (=> b!80716 (=> (not res!42032) (not e!52704))))

(assert (=> b!80716 (= res!42032 (contains!742 lt!37611 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80716 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80717 () Bool)

(declare-fun res!42035 () Bool)

(assert (=> b!80717 (=> (not res!42035) (not e!52705))))

(assert (=> b!80717 (= res!42035 e!52698)))

(declare-fun c!12634 () Bool)

(assert (=> b!80717 (= c!12634 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80718 () Bool)

(declare-fun e!52695 () ListLongMap!1437)

(assert (=> b!80718 (= e!52695 call!7508)))

(declare-fun b!80719 () Bool)

(declare-fun c!12632 () Bool)

(assert (=> b!80719 (= c!12632 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!80719 (= e!52695 e!52700)))

(declare-fun bm!7507 () Bool)

(declare-fun c!12635 () Bool)

(assert (=> bm!7507 (= call!7510 (+!104 (ite c!12633 call!7505 (ite c!12635 call!7506 call!7507)) (ite (or c!12633 c!12635) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7508 () Bool)

(assert (=> bm!7508 (= call!7505 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!80720 () Bool)

(declare-fun e!52702 () Bool)

(assert (=> b!80720 (= e!52698 e!52702)))

(declare-fun res!42036 () Bool)

(assert (=> b!80720 (= res!42036 call!7511)))

(assert (=> b!80720 (=> (not res!42036) (not e!52702))))

(declare-fun b!80721 () Bool)

(assert (=> b!80721 (= e!52697 e!52695)))

(assert (=> b!80721 (= c!12635 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80722 () Bool)

(assert (=> b!80722 (= e!52702 (= (apply!80 lt!37611 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!80723 () Bool)

(declare-fun Unit!2351 () Unit!2327)

(assert (=> b!80723 (= e!52694 Unit!2351)))

(assert (= (and d!19723 c!12633) b!80708))

(assert (= (and d!19723 (not c!12633)) b!80721))

(assert (= (and b!80721 c!12635) b!80718))

(assert (= (and b!80721 (not c!12635)) b!80719))

(assert (= (and b!80719 c!12632) b!80714))

(assert (= (and b!80719 (not c!12632)) b!80705))

(assert (= (or b!80714 b!80705) bm!7505))

(assert (= (or b!80718 bm!7505) bm!7502))

(assert (= (or b!80718 b!80714) bm!7506))

(assert (= (or b!80708 bm!7502) bm!7508))

(assert (= (or b!80708 bm!7506) bm!7507))

(assert (= (and d!19723 res!42030) b!80703))

(assert (= (and d!19723 c!12631) b!80704))

(assert (= (and d!19723 (not c!12631)) b!80723))

(assert (= (and d!19723 res!42033) b!80710))

(assert (= (and b!80710 res!42029) b!80712))

(assert (= (and b!80710 (not res!42034)) b!80716))

(assert (= (and b!80716 res!42032) b!80709))

(assert (= (and b!80710 res!42031) b!80717))

(assert (= (and b!80717 c!12634) b!80720))

(assert (= (and b!80717 (not c!12634)) b!80706))

(assert (= (and b!80720 res!42036) b!80722))

(assert (= (or b!80720 b!80706) bm!7504))

(assert (= (and b!80717 res!42035) b!80715))

(assert (= (and b!80715 c!12630) b!80713))

(assert (= (and b!80715 (not c!12630)) b!80707))

(assert (= (and b!80713 res!42037) b!80711))

(assert (= (or b!80713 b!80707) bm!7503))

(declare-fun b_lambda!3587 () Bool)

(assert (=> (not b_lambda!3587) (not b!80709)))

(declare-fun tb!1641 () Bool)

(declare-fun t!5186 () Bool)

(assert (=> (and b!80038 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16)) t!5186) tb!1641))

(declare-fun result!2849 () Bool)

(assert (=> tb!1641 (= result!2849 tp_is_empty!2515)))

(assert (=> b!80709 t!5186))

(declare-fun b_and!4913 () Bool)

(assert (= b_and!4909 (and (=> t!5186 result!2849) b_and!4913)))

(declare-fun t!5188 () Bool)

(declare-fun tb!1643 () Bool)

(assert (=> (and b!80045 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 newMap!16)) t!5188) tb!1643))

(declare-fun result!2851 () Bool)

(assert (= result!2851 result!2849))

(assert (=> b!80709 t!5188))

(declare-fun b_and!4915 () Bool)

(assert (= b_and!4911 (and (=> t!5188 result!2851) b_and!4915)))

(declare-fun m!82131 () Bool)

(assert (=> b!80709 m!82131))

(declare-fun m!82133 () Bool)

(assert (=> b!80709 m!82133))

(assert (=> b!80709 m!82131))

(declare-fun m!82135 () Bool)

(assert (=> b!80709 m!82135))

(assert (=> b!80709 m!82135))

(declare-fun m!82137 () Bool)

(assert (=> b!80709 m!82137))

(declare-fun m!82139 () Bool)

(assert (=> b!80709 m!82139))

(assert (=> b!80709 m!82137))

(declare-fun m!82141 () Bool)

(assert (=> bm!7504 m!82141))

(assert (=> b!80712 m!82131))

(assert (=> b!80712 m!82131))

(declare-fun m!82143 () Bool)

(assert (=> b!80712 m!82143))

(declare-fun m!82145 () Bool)

(assert (=> b!80704 m!82145))

(declare-fun m!82147 () Bool)

(assert (=> b!80704 m!82147))

(declare-fun m!82149 () Bool)

(assert (=> b!80704 m!82149))

(declare-fun m!82151 () Bool)

(assert (=> b!80704 m!82151))

(declare-fun m!82153 () Bool)

(assert (=> b!80704 m!82153))

(declare-fun m!82155 () Bool)

(assert (=> b!80704 m!82155))

(declare-fun m!82157 () Bool)

(assert (=> b!80704 m!82157))

(declare-fun m!82159 () Bool)

(assert (=> b!80704 m!82159))

(declare-fun m!82161 () Bool)

(assert (=> b!80704 m!82161))

(declare-fun m!82163 () Bool)

(assert (=> b!80704 m!82163))

(declare-fun m!82165 () Bool)

(assert (=> b!80704 m!82165))

(declare-fun m!82167 () Bool)

(assert (=> b!80704 m!82167))

(declare-fun m!82169 () Bool)

(assert (=> b!80704 m!82169))

(assert (=> b!80704 m!82151))

(assert (=> b!80704 m!82161))

(assert (=> b!80704 m!82131))

(declare-fun m!82171 () Bool)

(assert (=> b!80704 m!82171))

(assert (=> b!80704 m!82155))

(declare-fun m!82173 () Bool)

(assert (=> b!80704 m!82173))

(assert (=> b!80704 m!82167))

(declare-fun m!82175 () Bool)

(assert (=> b!80704 m!82175))

(assert (=> b!80716 m!82131))

(assert (=> b!80716 m!82131))

(declare-fun m!82177 () Bool)

(assert (=> b!80716 m!82177))

(declare-fun m!82179 () Bool)

(assert (=> b!80708 m!82179))

(declare-fun m!82181 () Bool)

(assert (=> bm!7503 m!82181))

(declare-fun m!82183 () Bool)

(assert (=> b!80711 m!82183))

(assert (=> bm!7508 m!82147))

(declare-fun m!82185 () Bool)

(assert (=> bm!7507 m!82185))

(declare-fun m!82187 () Bool)

(assert (=> b!80722 m!82187))

(assert (=> b!80703 m!82131))

(assert (=> b!80703 m!82131))

(assert (=> b!80703 m!82143))

(assert (=> d!19723 m!81973))

(assert (=> bm!7431 d!19723))

(declare-fun b!80724 () Bool)

(declare-fun lt!37637 () Unit!2327)

(declare-fun lt!37633 () Unit!2327)

(assert (=> b!80724 (= lt!37637 lt!37633)))

(declare-fun lt!37632 () (_ BitVec 64))

(declare-fun lt!37635 () (_ BitVec 64))

(declare-fun lt!37636 () V!3001)

(declare-fun lt!37634 () ListLongMap!1437)

(assert (=> b!80724 (not (contains!742 (+!104 lt!37634 (tuple2!2183 lt!37635 lt!37636)) lt!37632))))

(assert (=> b!80724 (= lt!37633 (addStillNotContains!30 lt!37634 lt!37635 lt!37636 lt!37632))))

(assert (=> b!80724 (= lt!37632 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!80724 (= lt!37636 (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!80724 (= lt!37635 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!7512 () ListLongMap!1437)

(assert (=> b!80724 (= lt!37634 call!7512)))

(declare-fun e!52713 () ListLongMap!1437)

(assert (=> b!80724 (= e!52713 (+!104 call!7512 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!80725 () Bool)

(declare-fun e!52708 () Bool)

(declare-fun e!52711 () Bool)

(assert (=> b!80725 (= e!52708 e!52711)))

(assert (=> b!80725 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun res!42040 () Bool)

(declare-fun lt!37631 () ListLongMap!1437)

(assert (=> b!80725 (= res!42040 (contains!742 lt!37631 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!80725 (=> (not res!42040) (not e!52711))))

(declare-fun bm!7509 () Bool)

(assert (=> bm!7509 (= call!7512 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun b!80726 () Bool)

(declare-fun e!52710 () Bool)

(assert (=> b!80726 (= e!52710 (isEmpty!333 lt!37631))))

(declare-fun b!80727 () Bool)

(assert (=> b!80727 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> b!80727 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2132 (_values!2275 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> b!80727 (= e!52711 (= (apply!80 lt!37631 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!80728 () Bool)

(assert (=> b!80728 (= e!52713 call!7512)))

(declare-fun b!80729 () Bool)

(declare-fun e!52712 () Bool)

(assert (=> b!80729 (= e!52712 e!52708)))

(declare-fun c!12639 () Bool)

(declare-fun e!52707 () Bool)

(assert (=> b!80729 (= c!12639 e!52707)))

(declare-fun res!42039 () Bool)

(assert (=> b!80729 (=> (not res!42039) (not e!52707))))

(assert (=> b!80729 (= res!42039 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!80730 () Bool)

(declare-fun res!42041 () Bool)

(assert (=> b!80730 (=> (not res!42041) (not e!52712))))

(assert (=> b!80730 (= res!42041 (not (contains!742 lt!37631 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80731 () Bool)

(assert (=> b!80731 (= e!52708 e!52710)))

(declare-fun c!12638 () Bool)

(assert (=> b!80731 (= c!12638 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun d!19725 () Bool)

(assert (=> d!19725 e!52712))

(declare-fun res!42038 () Bool)

(assert (=> d!19725 (=> (not res!42038) (not e!52712))))

(assert (=> d!19725 (= res!42038 (not (contains!742 lt!37631 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!52709 () ListLongMap!1437)

(assert (=> d!19725 (= lt!37631 e!52709)))

(declare-fun c!12636 () Bool)

(assert (=> d!19725 (= c!12636 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> d!19725 (validMask!0 (mask!6297 (v!2600 (underlying!276 thiss!992))))))

(assert (=> d!19725 (= (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))) lt!37631)))

(declare-fun b!80732 () Bool)

(assert (=> b!80732 (= e!52707 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!80732 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!80733 () Bool)

(assert (=> b!80733 (= e!52709 (ListLongMap!1438 Nil!1511))))

(declare-fun b!80734 () Bool)

(assert (=> b!80734 (= e!52709 e!52713)))

(declare-fun c!12637 () Bool)

(assert (=> b!80734 (= c!12637 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!80735 () Bool)

(assert (=> b!80735 (= e!52710 (= lt!37631 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19725 c!12636) b!80733))

(assert (= (and d!19725 (not c!12636)) b!80734))

(assert (= (and b!80734 c!12637) b!80724))

(assert (= (and b!80734 (not c!12637)) b!80728))

(assert (= (or b!80724 b!80728) bm!7509))

(assert (= (and d!19725 res!42038) b!80730))

(assert (= (and b!80730 res!42041) b!80729))

(assert (= (and b!80729 res!42039) b!80732))

(assert (= (and b!80729 c!12639) b!80725))

(assert (= (and b!80729 (not c!12639)) b!80731))

(assert (= (and b!80725 res!42040) b!80727))

(assert (= (and b!80731 c!12638) b!80735))

(assert (= (and b!80731 (not c!12638)) b!80726))

(declare-fun b_lambda!3589 () Bool)

(assert (=> (not b_lambda!3589) (not b!80724)))

(assert (=> b!80724 t!5169))

(declare-fun b_and!4917 () Bool)

(assert (= b_and!4913 (and (=> t!5169 result!2829) b_and!4917)))

(assert (=> b!80724 t!5171))

(declare-fun b_and!4919 () Bool)

(assert (= b_and!4915 (and (=> t!5171 result!2833) b_and!4919)))

(declare-fun b_lambda!3591 () Bool)

(assert (=> (not b_lambda!3591) (not b!80727)))

(assert (=> b!80727 t!5169))

(declare-fun b_and!4921 () Bool)

(assert (= b_and!4917 (and (=> t!5169 result!2829) b_and!4921)))

(assert (=> b!80727 t!5171))

(declare-fun b_and!4923 () Bool)

(assert (= b_and!4919 (and (=> t!5171 result!2833) b_and!4923)))

(declare-fun m!82189 () Bool)

(assert (=> b!80724 m!82189))

(declare-fun m!82191 () Bool)

(assert (=> b!80724 m!82191))

(declare-fun m!82193 () Bool)

(assert (=> b!80724 m!82193))

(assert (=> b!80724 m!81299))

(declare-fun m!82195 () Bool)

(assert (=> b!80724 m!82195))

(assert (=> b!80724 m!82193))

(declare-fun m!82197 () Bool)

(assert (=> b!80724 m!82197))

(assert (=> b!80724 m!81299))

(assert (=> b!80724 m!82189))

(declare-fun m!82199 () Bool)

(assert (=> b!80724 m!82199))

(declare-fun m!82201 () Bool)

(assert (=> b!80724 m!82201))

(declare-fun m!82203 () Bool)

(assert (=> bm!7509 m!82203))

(assert (=> b!80732 m!82201))

(assert (=> b!80732 m!82201))

(declare-fun m!82205 () Bool)

(assert (=> b!80732 m!82205))

(assert (=> b!80727 m!82201))

(declare-fun m!82207 () Bool)

(assert (=> b!80727 m!82207))

(assert (=> b!80727 m!82193))

(assert (=> b!80727 m!81299))

(assert (=> b!80727 m!82195))

(assert (=> b!80727 m!82193))

(assert (=> b!80727 m!81299))

(assert (=> b!80727 m!82201))

(assert (=> b!80725 m!82201))

(assert (=> b!80725 m!82201))

(declare-fun m!82209 () Bool)

(assert (=> b!80725 m!82209))

(assert (=> b!80735 m!82203))

(declare-fun m!82211 () Bool)

(assert (=> d!19725 m!82211))

(assert (=> d!19725 m!81345))

(declare-fun m!82213 () Bool)

(assert (=> b!80730 m!82213))

(declare-fun m!82215 () Bool)

(assert (=> b!80726 m!82215))

(assert (=> b!80734 m!82201))

(assert (=> b!80734 m!82201))

(assert (=> b!80734 m!82205))

(assert (=> bm!7449 d!19725))

(declare-fun d!19727 () Bool)

(declare-fun lt!37638 () Bool)

(assert (=> d!19727 (= lt!37638 (select (content!86 (toList!734 lt!37316)) lt!37082))))

(declare-fun e!52714 () Bool)

(assert (=> d!19727 (= lt!37638 e!52714)))

(declare-fun res!42043 () Bool)

(assert (=> d!19727 (=> (not res!42043) (not e!52714))))

(assert (=> d!19727 (= res!42043 ((_ is Cons!1510) (toList!734 lt!37316)))))

(assert (=> d!19727 (= (contains!745 (toList!734 lt!37316) lt!37082) lt!37638)))

(declare-fun b!80736 () Bool)

(declare-fun e!52715 () Bool)

(assert (=> b!80736 (= e!52714 e!52715)))

(declare-fun res!42042 () Bool)

(assert (=> b!80736 (=> res!42042 e!52715)))

(assert (=> b!80736 (= res!42042 (= (h!2099 (toList!734 lt!37316)) lt!37082))))

(declare-fun b!80737 () Bool)

(assert (=> b!80737 (= e!52715 (contains!745 (t!5172 (toList!734 lt!37316)) lt!37082))))

(assert (= (and d!19727 res!42043) b!80736))

(assert (= (and b!80736 (not res!42042)) b!80737))

(declare-fun m!82217 () Bool)

(assert (=> d!19727 m!82217))

(declare-fun m!82219 () Bool)

(assert (=> d!19727 m!82219))

(declare-fun m!82221 () Bool)

(assert (=> b!80737 m!82221))

(assert (=> b!80329 d!19727))

(declare-fun d!19729 () Bool)

(declare-fun c!12640 () Bool)

(assert (=> d!19729 (= c!12640 ((_ is ValueCellFull!914) (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!52716 () V!3001)

(assert (=> d!19729 (= (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52716)))

(declare-fun b!80738 () Bool)

(assert (=> b!80738 (= e!52716 (get!1185 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80739 () Bool)

(assert (=> b!80739 (= e!52716 (get!1186 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19729 c!12640) b!80738))

(assert (= (and d!19729 (not c!12640)) b!80739))

(assert (=> b!80738 m!81617))

(assert (=> b!80738 m!81299))

(declare-fun m!82223 () Bool)

(assert (=> b!80738 m!82223))

(assert (=> b!80739 m!81617))

(assert (=> b!80739 m!81299))

(declare-fun m!82225 () Bool)

(assert (=> b!80739 m!82225))

(assert (=> b!80354 d!19729))

(declare-fun d!19731 () Bool)

(declare-fun e!52717 () Bool)

(assert (=> d!19731 e!52717))

(declare-fun res!42045 () Bool)

(assert (=> d!19731 (=> (not res!42045) (not e!52717))))

(declare-fun lt!37642 () ListLongMap!1437)

(assert (=> d!19731 (= res!42045 (contains!742 lt!37642 (_1!1102 (tuple2!2183 lt!37335 lt!37336))))))

(declare-fun lt!37641 () List!1514)

(assert (=> d!19731 (= lt!37642 (ListLongMap!1438 lt!37641))))

(declare-fun lt!37640 () Unit!2327)

(declare-fun lt!37639 () Unit!2327)

(assert (=> d!19731 (= lt!37640 lt!37639)))

(assert (=> d!19731 (= (getValueByKey!136 lt!37641 (_1!1102 (tuple2!2183 lt!37335 lt!37336))) (Some!141 (_2!1102 (tuple2!2183 lt!37335 lt!37336))))))

(assert (=> d!19731 (= lt!37639 (lemmaContainsTupThenGetReturnValue!56 lt!37641 (_1!1102 (tuple2!2183 lt!37335 lt!37336)) (_2!1102 (tuple2!2183 lt!37335 lt!37336))))))

(assert (=> d!19731 (= lt!37641 (insertStrictlySorted!59 (toList!734 lt!37334) (_1!1102 (tuple2!2183 lt!37335 lt!37336)) (_2!1102 (tuple2!2183 lt!37335 lt!37336))))))

(assert (=> d!19731 (= (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)) lt!37642)))

(declare-fun b!80740 () Bool)

(declare-fun res!42044 () Bool)

(assert (=> b!80740 (=> (not res!42044) (not e!52717))))

(assert (=> b!80740 (= res!42044 (= (getValueByKey!136 (toList!734 lt!37642) (_1!1102 (tuple2!2183 lt!37335 lt!37336))) (Some!141 (_2!1102 (tuple2!2183 lt!37335 lt!37336)))))))

(declare-fun b!80741 () Bool)

(assert (=> b!80741 (= e!52717 (contains!745 (toList!734 lt!37642) (tuple2!2183 lt!37335 lt!37336)))))

(assert (= (and d!19731 res!42045) b!80740))

(assert (= (and b!80740 res!42044) b!80741))

(declare-fun m!82227 () Bool)

(assert (=> d!19731 m!82227))

(declare-fun m!82229 () Bool)

(assert (=> d!19731 m!82229))

(declare-fun m!82231 () Bool)

(assert (=> d!19731 m!82231))

(declare-fun m!82233 () Bool)

(assert (=> d!19731 m!82233))

(declare-fun m!82235 () Bool)

(assert (=> b!80740 m!82235))

(declare-fun m!82237 () Bool)

(assert (=> b!80741 m!82237))

(assert (=> b!80354 d!19731))

(declare-fun d!19733 () Bool)

(declare-fun e!52718 () Bool)

(assert (=> d!19733 e!52718))

(declare-fun res!42046 () Bool)

(assert (=> d!19733 (=> res!42046 e!52718)))

(declare-fun lt!37646 () Bool)

(assert (=> d!19733 (= res!42046 (not lt!37646))))

(declare-fun lt!37645 () Bool)

(assert (=> d!19733 (= lt!37646 lt!37645)))

(declare-fun lt!37644 () Unit!2327)

(declare-fun e!52719 () Unit!2327)

(assert (=> d!19733 (= lt!37644 e!52719)))

(declare-fun c!12641 () Bool)

(assert (=> d!19733 (= c!12641 lt!37645)))

(assert (=> d!19733 (= lt!37645 (containsKey!140 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))) lt!37332))))

(assert (=> d!19733 (= (contains!742 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)) lt!37332) lt!37646)))

(declare-fun b!80742 () Bool)

(declare-fun lt!37643 () Unit!2327)

(assert (=> b!80742 (= e!52719 lt!37643)))

(assert (=> b!80742 (= lt!37643 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))) lt!37332))))

(assert (=> b!80742 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))) lt!37332))))

(declare-fun b!80743 () Bool)

(declare-fun Unit!2352 () Unit!2327)

(assert (=> b!80743 (= e!52719 Unit!2352)))

(declare-fun b!80744 () Bool)

(assert (=> b!80744 (= e!52718 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))) lt!37332)))))

(assert (= (and d!19733 c!12641) b!80742))

(assert (= (and d!19733 (not c!12641)) b!80743))

(assert (= (and d!19733 (not res!42046)) b!80744))

(declare-fun m!82239 () Bool)

(assert (=> d!19733 m!82239))

(declare-fun m!82241 () Bool)

(assert (=> b!80742 m!82241))

(declare-fun m!82243 () Bool)

(assert (=> b!80742 m!82243))

(assert (=> b!80742 m!82243))

(declare-fun m!82245 () Bool)

(assert (=> b!80742 m!82245))

(assert (=> b!80744 m!82243))

(assert (=> b!80744 m!82243))

(assert (=> b!80744 m!82245))

(assert (=> b!80354 d!19733))

(declare-fun d!19735 () Bool)

(assert (=> d!19735 (not (contains!742 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)) lt!37332))))

(declare-fun lt!37649 () Unit!2327)

(declare-fun choose!483 (ListLongMap!1437 (_ BitVec 64) V!3001 (_ BitVec 64)) Unit!2327)

(assert (=> d!19735 (= lt!37649 (choose!483 lt!37334 lt!37335 lt!37336 lt!37332))))

(declare-fun e!52722 () Bool)

(assert (=> d!19735 e!52722))

(declare-fun res!42049 () Bool)

(assert (=> d!19735 (=> (not res!42049) (not e!52722))))

(assert (=> d!19735 (= res!42049 (not (contains!742 lt!37334 lt!37332)))))

(assert (=> d!19735 (= (addStillNotContains!30 lt!37334 lt!37335 lt!37336 lt!37332) lt!37649)))

(declare-fun b!80748 () Bool)

(assert (=> b!80748 (= e!52722 (not (= lt!37335 lt!37332)))))

(assert (= (and d!19735 res!42049) b!80748))

(assert (=> d!19735 m!81613))

(assert (=> d!19735 m!81613))

(assert (=> d!19735 m!81623))

(declare-fun m!82247 () Bool)

(assert (=> d!19735 m!82247))

(declare-fun m!82249 () Bool)

(assert (=> d!19735 m!82249))

(assert (=> b!80354 d!19735))

(declare-fun d!19737 () Bool)

(declare-fun e!52723 () Bool)

(assert (=> d!19737 e!52723))

(declare-fun res!42051 () Bool)

(assert (=> d!19737 (=> (not res!42051) (not e!52723))))

(declare-fun lt!37653 () ListLongMap!1437)

(assert (=> d!19737 (= res!42051 (contains!742 lt!37653 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!37652 () List!1514)

(assert (=> d!19737 (= lt!37653 (ListLongMap!1438 lt!37652))))

(declare-fun lt!37651 () Unit!2327)

(declare-fun lt!37650 () Unit!2327)

(assert (=> d!19737 (= lt!37651 lt!37650)))

(assert (=> d!19737 (= (getValueByKey!136 lt!37652 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19737 (= lt!37650 (lemmaContainsTupThenGetReturnValue!56 lt!37652 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19737 (= lt!37652 (insertStrictlySorted!59 (toList!734 call!7452) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19737 (= (+!104 call!7452 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!37653)))

(declare-fun b!80749 () Bool)

(declare-fun res!42050 () Bool)

(assert (=> b!80749 (=> (not res!42050) (not e!52723))))

(assert (=> b!80749 (= res!42050 (= (getValueByKey!136 (toList!734 lt!37653) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!80750 () Bool)

(assert (=> b!80750 (= e!52723 (contains!745 (toList!734 lt!37653) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!19737 res!42051) b!80749))

(assert (= (and b!80749 res!42050) b!80750))

(declare-fun m!82251 () Bool)

(assert (=> d!19737 m!82251))

(declare-fun m!82253 () Bool)

(assert (=> d!19737 m!82253))

(declare-fun m!82255 () Bool)

(assert (=> d!19737 m!82255))

(declare-fun m!82257 () Bool)

(assert (=> d!19737 m!82257))

(declare-fun m!82259 () Bool)

(assert (=> b!80749 m!82259))

(declare-fun m!82261 () Bool)

(assert (=> b!80750 m!82261))

(assert (=> b!80354 d!19737))

(declare-fun d!19739 () Bool)

(declare-fun lt!37654 () Bool)

(assert (=> d!19739 (= lt!37654 (select (content!86 (toList!734 lt!37312)) lt!37079))))

(declare-fun e!52724 () Bool)

(assert (=> d!19739 (= lt!37654 e!52724)))

(declare-fun res!42053 () Bool)

(assert (=> d!19739 (=> (not res!42053) (not e!52724))))

(assert (=> d!19739 (= res!42053 ((_ is Cons!1510) (toList!734 lt!37312)))))

(assert (=> d!19739 (= (contains!745 (toList!734 lt!37312) lt!37079) lt!37654)))

(declare-fun b!80751 () Bool)

(declare-fun e!52725 () Bool)

(assert (=> b!80751 (= e!52724 e!52725)))

(declare-fun res!42052 () Bool)

(assert (=> b!80751 (=> res!42052 e!52725)))

(assert (=> b!80751 (= res!42052 (= (h!2099 (toList!734 lt!37312)) lt!37079))))

(declare-fun b!80752 () Bool)

(assert (=> b!80752 (= e!52725 (contains!745 (t!5172 (toList!734 lt!37312)) lt!37079))))

(assert (= (and d!19739 res!42053) b!80751))

(assert (= (and b!80751 (not res!42052)) b!80752))

(declare-fun m!82263 () Bool)

(assert (=> d!19739 m!82263))

(declare-fun m!82265 () Bool)

(assert (=> d!19739 m!82265))

(declare-fun m!82267 () Bool)

(assert (=> b!80752 m!82267))

(assert (=> b!80327 d!19739))

(declare-fun d!19741 () Bool)

(assert (=> d!19741 (= (apply!80 lt!37331 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1187 (getValueByKey!136 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3406 () Bool)

(assert (= bs!3406 d!19741))

(assert (=> bs!3406 m!81625))

(declare-fun m!82269 () Bool)

(assert (=> bs!3406 m!82269))

(assert (=> bs!3406 m!82269))

(declare-fun m!82271 () Bool)

(assert (=> bs!3406 m!82271))

(assert (=> b!80357 d!19741))

(assert (=> b!80357 d!19729))

(declare-fun d!19743 () Bool)

(declare-fun lt!37657 () (_ BitVec 32))

(assert (=> d!19743 (and (bvsge lt!37657 #b00000000000000000000000000000000) (bvsle lt!37657 (bvsub (size!2131 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!52731 () (_ BitVec 32))

(assert (=> d!19743 (= lt!37657 e!52731)))

(declare-fun c!12647 () Bool)

(assert (=> d!19743 (= c!12647 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19743 (and (bvsle #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2131 (_keys!3955 newMap!16)) (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19743 (= (arrayCountValidKeys!0 (_keys!3955 newMap!16) #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) lt!37657)))

(declare-fun bm!7512 () Bool)

(declare-fun call!7515 () (_ BitVec 32))

(assert (=> bm!7512 (= call!7515 (arrayCountValidKeys!0 (_keys!3955 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80761 () Bool)

(declare-fun e!52730 () (_ BitVec 32))

(assert (=> b!80761 (= e!52731 e!52730)))

(declare-fun c!12646 () Bool)

(assert (=> b!80761 (= c!12646 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80762 () Bool)

(assert (=> b!80762 (= e!52730 call!7515)))

(declare-fun b!80763 () Bool)

(assert (=> b!80763 (= e!52730 (bvadd #b00000000000000000000000000000001 call!7515))))

(declare-fun b!80764 () Bool)

(assert (=> b!80764 (= e!52731 #b00000000000000000000000000000000)))

(assert (= (and d!19743 c!12647) b!80764))

(assert (= (and d!19743 (not c!12647)) b!80761))

(assert (= (and b!80761 c!12646) b!80763))

(assert (= (and b!80761 (not c!12646)) b!80762))

(assert (= (or b!80763 b!80762) bm!7512))

(declare-fun m!82273 () Bool)

(assert (=> bm!7512 m!82273))

(assert (=> b!80761 m!82131))

(assert (=> b!80761 m!82131))

(assert (=> b!80761 m!82143))

(assert (=> b!80405 d!19743))

(declare-fun b!80765 () Bool)

(declare-fun e!52739 () Bool)

(assert (=> b!80765 (= e!52739 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80766 () Bool)

(declare-fun e!52732 () Unit!2327)

(declare-fun lt!37663 () Unit!2327)

(assert (=> b!80766 (= e!52732 lt!37663)))

(declare-fun lt!37671 () ListLongMap!1437)

(assert (=> b!80766 (= lt!37671 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12532 (_values!2275 newMap!16) lt!37263) (mask!6297 newMap!16) (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) (zeroValue!2188 newMap!16) (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37666 () (_ BitVec 64))

(assert (=> b!80766 (= lt!37666 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37659 () (_ BitVec 64))

(assert (=> b!80766 (= lt!37659 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37675 () Unit!2327)

(assert (=> b!80766 (= lt!37675 (addStillContains!56 lt!37671 lt!37666 (zeroValue!2188 newMap!16) lt!37659))))

(assert (=> b!80766 (contains!742 (+!104 lt!37671 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16))) lt!37659)))

(declare-fun lt!37678 () Unit!2327)

(assert (=> b!80766 (= lt!37678 lt!37675)))

(declare-fun lt!37667 () ListLongMap!1437)

(assert (=> b!80766 (= lt!37667 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12532 (_values!2275 newMap!16) lt!37263) (mask!6297 newMap!16) (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) (zeroValue!2188 newMap!16) (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37658 () (_ BitVec 64))

(assert (=> b!80766 (= lt!37658 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37679 () (_ BitVec 64))

(assert (=> b!80766 (= lt!37679 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37665 () Unit!2327)

(assert (=> b!80766 (= lt!37665 (addApplyDifferent!56 lt!37667 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) lt!37679))))

(assert (=> b!80766 (= (apply!80 (+!104 lt!37667 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) lt!37679) (apply!80 lt!37667 lt!37679))))

(declare-fun lt!37676 () Unit!2327)

(assert (=> b!80766 (= lt!37676 lt!37665)))

(declare-fun lt!37662 () ListLongMap!1437)

(assert (=> b!80766 (= lt!37662 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12532 (_values!2275 newMap!16) lt!37263) (mask!6297 newMap!16) (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) (zeroValue!2188 newMap!16) (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37669 () (_ BitVec 64))

(assert (=> b!80766 (= lt!37669 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37668 () (_ BitVec 64))

(assert (=> b!80766 (= lt!37668 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37677 () Unit!2327)

(assert (=> b!80766 (= lt!37677 (addApplyDifferent!56 lt!37662 lt!37669 (zeroValue!2188 newMap!16) lt!37668))))

(assert (=> b!80766 (= (apply!80 (+!104 lt!37662 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16))) lt!37668) (apply!80 lt!37662 lt!37668))))

(declare-fun lt!37674 () Unit!2327)

(assert (=> b!80766 (= lt!37674 lt!37677)))

(declare-fun lt!37672 () ListLongMap!1437)

(assert (=> b!80766 (= lt!37672 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12532 (_values!2275 newMap!16) lt!37263) (mask!6297 newMap!16) (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) (zeroValue!2188 newMap!16) (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37673 () (_ BitVec 64))

(assert (=> b!80766 (= lt!37673 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37670 () (_ BitVec 64))

(assert (=> b!80766 (= lt!37670 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80766 (= lt!37663 (addApplyDifferent!56 lt!37672 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) lt!37670))))

(assert (=> b!80766 (= (apply!80 (+!104 lt!37672 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) lt!37670) (apply!80 lt!37672 lt!37670))))

(declare-fun b!80767 () Bool)

(declare-fun e!52738 () ListLongMap!1437)

(declare-fun call!7518 () ListLongMap!1437)

(assert (=> b!80767 (= e!52738 call!7518)))

(declare-fun bm!7513 () Bool)

(declare-fun call!7517 () ListLongMap!1437)

(declare-fun call!7516 () ListLongMap!1437)

(assert (=> bm!7513 (= call!7517 call!7516)))

(declare-fun bm!7514 () Bool)

(declare-fun call!7520 () Bool)

(declare-fun lt!37660 () ListLongMap!1437)

(assert (=> bm!7514 (= call!7520 (contains!742 lt!37660 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80768 () Bool)

(declare-fun e!52736 () Bool)

(declare-fun call!7522 () Bool)

(assert (=> b!80768 (= e!52736 (not call!7522))))

(declare-fun b!80769 () Bool)

(declare-fun e!52741 () Bool)

(assert (=> b!80769 (= e!52741 (not call!7520))))

(declare-fun call!7521 () ListLongMap!1437)

(declare-fun b!80770 () Bool)

(declare-fun e!52735 () ListLongMap!1437)

(assert (=> b!80770 (= e!52735 (+!104 call!7521 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))))

(declare-fun d!19745 () Bool)

(declare-fun e!52743 () Bool)

(assert (=> d!19745 e!52743))

(declare-fun res!42058 () Bool)

(assert (=> d!19745 (=> (not res!42058) (not e!52743))))

(assert (=> d!19745 (= res!42058 (or (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))))

(declare-fun lt!37664 () ListLongMap!1437)

(assert (=> d!19745 (= lt!37660 lt!37664)))

(declare-fun lt!37661 () Unit!2327)

(assert (=> d!19745 (= lt!37661 e!52732)))

(declare-fun c!12649 () Bool)

(assert (=> d!19745 (= c!12649 e!52739)))

(declare-fun res!42055 () Bool)

(assert (=> d!19745 (=> (not res!42055) (not e!52739))))

(assert (=> d!19745 (= res!42055 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19745 (= lt!37664 e!52735)))

(declare-fun c!12651 () Bool)

(assert (=> d!19745 (= c!12651 (and (not (= (bvand (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19745 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19745 (= (getCurrentListMap!423 (_keys!3955 newMap!16) (ite c!12532 (_values!2275 newMap!16) lt!37263) (mask!6297 newMap!16) (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) (zeroValue!2188 newMap!16) (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!37660)))

(declare-fun bm!7515 () Bool)

(assert (=> bm!7515 (= call!7522 (contains!742 lt!37660 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7516 () Bool)

(assert (=> bm!7516 (= call!7518 call!7517)))

(declare-fun b!80771 () Bool)

(declare-fun e!52742 () Bool)

(assert (=> b!80771 (= e!52742 (= (apply!80 lt!37660 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (ite c!12532 (_values!2275 newMap!16) lt!37263)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80771 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (ite c!12532 (_values!2275 newMap!16) lt!37263))))))

(assert (=> b!80771 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80772 () Bool)

(declare-fun res!42056 () Bool)

(assert (=> b!80772 (=> (not res!42056) (not e!52743))))

(declare-fun e!52734 () Bool)

(assert (=> b!80772 (= res!42056 e!52734)))

(declare-fun res!42059 () Bool)

(assert (=> b!80772 (=> res!42059 e!52734)))

(declare-fun e!52744 () Bool)

(assert (=> b!80772 (= res!42059 (not e!52744))))

(declare-fun res!42054 () Bool)

(assert (=> b!80772 (=> (not res!42054) (not e!52744))))

(assert (=> b!80772 (= res!42054 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80773 () Bool)

(declare-fun e!52737 () Bool)

(assert (=> b!80773 (= e!52737 (= (apply!80 lt!37660 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))

(declare-fun b!80774 () Bool)

(assert (=> b!80774 (= e!52744 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7517 () Bool)

(declare-fun call!7519 () ListLongMap!1437)

(assert (=> bm!7517 (= call!7519 call!7521)))

(declare-fun b!80775 () Bool)

(assert (=> b!80775 (= e!52741 e!52737)))

(declare-fun res!42062 () Bool)

(assert (=> b!80775 (= res!42062 call!7520)))

(assert (=> b!80775 (=> (not res!42062) (not e!52737))))

(declare-fun b!80776 () Bool)

(assert (=> b!80776 (= e!52738 call!7519)))

(declare-fun b!80777 () Bool)

(assert (=> b!80777 (= e!52743 e!52741)))

(declare-fun c!12648 () Bool)

(assert (=> b!80777 (= c!12648 (not (= (bvand (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80778 () Bool)

(assert (=> b!80778 (= e!52734 e!52742)))

(declare-fun res!42057 () Bool)

(assert (=> b!80778 (=> (not res!42057) (not e!52742))))

(assert (=> b!80778 (= res!42057 (contains!742 lt!37660 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80778 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80779 () Bool)

(declare-fun res!42060 () Bool)

(assert (=> b!80779 (=> (not res!42060) (not e!52743))))

(assert (=> b!80779 (= res!42060 e!52736)))

(declare-fun c!12652 () Bool)

(assert (=> b!80779 (= c!12652 (not (= (bvand (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80780 () Bool)

(declare-fun e!52733 () ListLongMap!1437)

(assert (=> b!80780 (= e!52733 call!7519)))

(declare-fun c!12650 () Bool)

(declare-fun b!80781 () Bool)

(assert (=> b!80781 (= c!12650 (and (not (= (bvand (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!80781 (= e!52733 e!52738)))

(declare-fun c!12653 () Bool)

(declare-fun bm!7518 () Bool)

(assert (=> bm!7518 (= call!7521 (+!104 (ite c!12651 call!7516 (ite c!12653 call!7517 call!7518)) (ite (or c!12651 c!12653) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(declare-fun bm!7519 () Bool)

(assert (=> bm!7519 (= call!7516 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12532 (_values!2275 newMap!16) lt!37263) (mask!6297 newMap!16) (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) (zeroValue!2188 newMap!16) (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!80782 () Bool)

(declare-fun e!52740 () Bool)

(assert (=> b!80782 (= e!52736 e!52740)))

(declare-fun res!42061 () Bool)

(assert (=> b!80782 (= res!42061 call!7522)))

(assert (=> b!80782 (=> (not res!42061) (not e!52740))))

(declare-fun b!80783 () Bool)

(assert (=> b!80783 (= e!52735 e!52733)))

(assert (=> b!80783 (= c!12653 (and (not (= (bvand (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80784 () Bool)

(assert (=> b!80784 (= e!52740 (= (apply!80 lt!37660 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!80785 () Bool)

(declare-fun Unit!2353 () Unit!2327)

(assert (=> b!80785 (= e!52732 Unit!2353)))

(assert (= (and d!19745 c!12651) b!80770))

(assert (= (and d!19745 (not c!12651)) b!80783))

(assert (= (and b!80783 c!12653) b!80780))

(assert (= (and b!80783 (not c!12653)) b!80781))

(assert (= (and b!80781 c!12650) b!80776))

(assert (= (and b!80781 (not c!12650)) b!80767))

(assert (= (or b!80776 b!80767) bm!7516))

(assert (= (or b!80780 bm!7516) bm!7513))

(assert (= (or b!80780 b!80776) bm!7517))

(assert (= (or b!80770 bm!7513) bm!7519))

(assert (= (or b!80770 bm!7517) bm!7518))

(assert (= (and d!19745 res!42055) b!80765))

(assert (= (and d!19745 c!12649) b!80766))

(assert (= (and d!19745 (not c!12649)) b!80785))

(assert (= (and d!19745 res!42058) b!80772))

(assert (= (and b!80772 res!42054) b!80774))

(assert (= (and b!80772 (not res!42059)) b!80778))

(assert (= (and b!80778 res!42057) b!80771))

(assert (= (and b!80772 res!42056) b!80779))

(assert (= (and b!80779 c!12652) b!80782))

(assert (= (and b!80779 (not c!12652)) b!80768))

(assert (= (and b!80782 res!42061) b!80784))

(assert (= (or b!80782 b!80768) bm!7515))

(assert (= (and b!80779 res!42060) b!80777))

(assert (= (and b!80777 c!12648) b!80775))

(assert (= (and b!80777 (not c!12648)) b!80769))

(assert (= (and b!80775 res!42062) b!80773))

(assert (= (or b!80775 b!80769) bm!7514))

(declare-fun b_lambda!3593 () Bool)

(assert (=> (not b_lambda!3593) (not b!80771)))

(assert (=> b!80771 t!5186))

(declare-fun b_and!4925 () Bool)

(assert (= b_and!4921 (and (=> t!5186 result!2849) b_and!4925)))

(assert (=> b!80771 t!5188))

(declare-fun b_and!4927 () Bool)

(assert (= b_and!4923 (and (=> t!5188 result!2851) b_and!4927)))

(assert (=> b!80771 m!82131))

(declare-fun m!82275 () Bool)

(assert (=> b!80771 m!82275))

(assert (=> b!80771 m!82131))

(declare-fun m!82277 () Bool)

(assert (=> b!80771 m!82277))

(assert (=> b!80771 m!82277))

(assert (=> b!80771 m!82137))

(declare-fun m!82279 () Bool)

(assert (=> b!80771 m!82279))

(assert (=> b!80771 m!82137))

(declare-fun m!82281 () Bool)

(assert (=> bm!7515 m!82281))

(assert (=> b!80774 m!82131))

(assert (=> b!80774 m!82131))

(assert (=> b!80774 m!82143))

(declare-fun m!82283 () Bool)

(assert (=> b!80766 m!82283))

(declare-fun m!82285 () Bool)

(assert (=> b!80766 m!82285))

(declare-fun m!82287 () Bool)

(assert (=> b!80766 m!82287))

(declare-fun m!82289 () Bool)

(assert (=> b!80766 m!82289))

(declare-fun m!82291 () Bool)

(assert (=> b!80766 m!82291))

(declare-fun m!82293 () Bool)

(assert (=> b!80766 m!82293))

(declare-fun m!82295 () Bool)

(assert (=> b!80766 m!82295))

(declare-fun m!82297 () Bool)

(assert (=> b!80766 m!82297))

(declare-fun m!82299 () Bool)

(assert (=> b!80766 m!82299))

(declare-fun m!82301 () Bool)

(assert (=> b!80766 m!82301))

(declare-fun m!82303 () Bool)

(assert (=> b!80766 m!82303))

(declare-fun m!82305 () Bool)

(assert (=> b!80766 m!82305))

(declare-fun m!82307 () Bool)

(assert (=> b!80766 m!82307))

(assert (=> b!80766 m!82289))

(assert (=> b!80766 m!82299))

(assert (=> b!80766 m!82131))

(declare-fun m!82309 () Bool)

(assert (=> b!80766 m!82309))

(assert (=> b!80766 m!82293))

(declare-fun m!82311 () Bool)

(assert (=> b!80766 m!82311))

(assert (=> b!80766 m!82305))

(declare-fun m!82313 () Bool)

(assert (=> b!80766 m!82313))

(assert (=> b!80778 m!82131))

(assert (=> b!80778 m!82131))

(declare-fun m!82315 () Bool)

(assert (=> b!80778 m!82315))

(declare-fun m!82317 () Bool)

(assert (=> b!80770 m!82317))

(declare-fun m!82319 () Bool)

(assert (=> bm!7514 m!82319))

(declare-fun m!82321 () Bool)

(assert (=> b!80773 m!82321))

(assert (=> bm!7519 m!82285))

(declare-fun m!82323 () Bool)

(assert (=> bm!7518 m!82323))

(declare-fun m!82325 () Bool)

(assert (=> b!80784 m!82325))

(assert (=> b!80765 m!82131))

(assert (=> b!80765 m!82131))

(assert (=> b!80765 m!82143))

(assert (=> d!19745 m!81973))

(assert (=> bm!7441 d!19745))

(assert (=> b!80450 d!19687))

(declare-fun b!80786 () Bool)

(declare-fun e!52748 () Bool)

(assert (=> b!80786 (= e!52748 (contains!746 Nil!1512 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!19747 () Bool)

(declare-fun res!42063 () Bool)

(declare-fun e!52745 () Bool)

(assert (=> d!19747 (=> res!42063 e!52745)))

(assert (=> d!19747 (= res!42063 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19747 (= (arrayNoDuplicates!0 (_keys!3955 newMap!16) #b00000000000000000000000000000000 Nil!1512) e!52745)))

(declare-fun b!80787 () Bool)

(declare-fun e!52747 () Bool)

(declare-fun call!7523 () Bool)

(assert (=> b!80787 (= e!52747 call!7523)))

(declare-fun b!80788 () Bool)

(declare-fun e!52746 () Bool)

(assert (=> b!80788 (= e!52746 e!52747)))

(declare-fun c!12654 () Bool)

(assert (=> b!80788 (= c!12654 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80789 () Bool)

(assert (=> b!80789 (= e!52745 e!52746)))

(declare-fun res!42065 () Bool)

(assert (=> b!80789 (=> (not res!42065) (not e!52746))))

(assert (=> b!80789 (= res!42065 (not e!52748))))

(declare-fun res!42064 () Bool)

(assert (=> b!80789 (=> (not res!42064) (not e!52748))))

(assert (=> b!80789 (= res!42064 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7520 () Bool)

(assert (=> bm!7520 (= call!7523 (arrayNoDuplicates!0 (_keys!3955 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12654 (Cons!1511 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) Nil!1512) Nil!1512)))))

(declare-fun b!80790 () Bool)

(assert (=> b!80790 (= e!52747 call!7523)))

(assert (= (and d!19747 (not res!42063)) b!80789))

(assert (= (and b!80789 res!42064) b!80786))

(assert (= (and b!80789 res!42065) b!80788))

(assert (= (and b!80788 c!12654) b!80787))

(assert (= (and b!80788 (not c!12654)) b!80790))

(assert (= (or b!80787 b!80790) bm!7520))

(assert (=> b!80786 m!82131))

(assert (=> b!80786 m!82131))

(declare-fun m!82327 () Bool)

(assert (=> b!80786 m!82327))

(assert (=> b!80788 m!82131))

(assert (=> b!80788 m!82131))

(assert (=> b!80788 m!82143))

(assert (=> b!80789 m!82131))

(assert (=> b!80789 m!82131))

(assert (=> b!80789 m!82143))

(assert (=> bm!7520 m!82131))

(declare-fun m!82329 () Bool)

(assert (=> bm!7520 m!82329))

(assert (=> b!80407 d!19747))

(declare-fun b!80791 () Bool)

(declare-fun e!52756 () Bool)

(assert (=> b!80791 (= e!52756 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80792 () Bool)

(declare-fun e!52749 () Unit!2327)

(declare-fun lt!37685 () Unit!2327)

(assert (=> b!80792 (= e!52749 lt!37685)))

(declare-fun lt!37693 () ListLongMap!1437)

(assert (=> b!80792 (= lt!37693 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37688 () (_ BitVec 64))

(assert (=> b!80792 (= lt!37688 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37681 () (_ BitVec 64))

(assert (=> b!80792 (= lt!37681 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37697 () Unit!2327)

(assert (=> b!80792 (= lt!37697 (addStillContains!56 lt!37693 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) lt!37681))))

(assert (=> b!80792 (contains!742 (+!104 lt!37693 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))) lt!37681)))

(declare-fun lt!37700 () Unit!2327)

(assert (=> b!80792 (= lt!37700 lt!37697)))

(declare-fun lt!37689 () ListLongMap!1437)

(assert (=> b!80792 (= lt!37689 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37680 () (_ BitVec 64))

(assert (=> b!80792 (= lt!37680 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37701 () (_ BitVec 64))

(assert (=> b!80792 (= lt!37701 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37687 () Unit!2327)

(assert (=> b!80792 (= lt!37687 (addApplyDifferent!56 lt!37689 lt!37680 (minValue!2188 newMap!16) lt!37701))))

(assert (=> b!80792 (= (apply!80 (+!104 lt!37689 (tuple2!2183 lt!37680 (minValue!2188 newMap!16))) lt!37701) (apply!80 lt!37689 lt!37701))))

(declare-fun lt!37698 () Unit!2327)

(assert (=> b!80792 (= lt!37698 lt!37687)))

(declare-fun lt!37684 () ListLongMap!1437)

(assert (=> b!80792 (= lt!37684 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37691 () (_ BitVec 64))

(assert (=> b!80792 (= lt!37691 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37690 () (_ BitVec 64))

(assert (=> b!80792 (= lt!37690 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37699 () Unit!2327)

(assert (=> b!80792 (= lt!37699 (addApplyDifferent!56 lt!37684 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) lt!37690))))

(assert (=> b!80792 (= (apply!80 (+!104 lt!37684 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))) lt!37690) (apply!80 lt!37684 lt!37690))))

(declare-fun lt!37696 () Unit!2327)

(assert (=> b!80792 (= lt!37696 lt!37699)))

(declare-fun lt!37694 () ListLongMap!1437)

(assert (=> b!80792 (= lt!37694 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37695 () (_ BitVec 64))

(assert (=> b!80792 (= lt!37695 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37692 () (_ BitVec 64))

(assert (=> b!80792 (= lt!37692 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80792 (= lt!37685 (addApplyDifferent!56 lt!37694 lt!37695 (minValue!2188 newMap!16) lt!37692))))

(assert (=> b!80792 (= (apply!80 (+!104 lt!37694 (tuple2!2183 lt!37695 (minValue!2188 newMap!16))) lt!37692) (apply!80 lt!37694 lt!37692))))

(declare-fun b!80793 () Bool)

(declare-fun e!52755 () ListLongMap!1437)

(declare-fun call!7526 () ListLongMap!1437)

(assert (=> b!80793 (= e!52755 call!7526)))

(declare-fun bm!7521 () Bool)

(declare-fun call!7525 () ListLongMap!1437)

(declare-fun call!7524 () ListLongMap!1437)

(assert (=> bm!7521 (= call!7525 call!7524)))

(declare-fun bm!7522 () Bool)

(declare-fun call!7528 () Bool)

(declare-fun lt!37682 () ListLongMap!1437)

(assert (=> bm!7522 (= call!7528 (contains!742 lt!37682 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80794 () Bool)

(declare-fun e!52753 () Bool)

(declare-fun call!7530 () Bool)

(assert (=> b!80794 (= e!52753 (not call!7530))))

(declare-fun b!80795 () Bool)

(declare-fun e!52758 () Bool)

(assert (=> b!80795 (= e!52758 (not call!7528))))

(declare-fun b!80796 () Bool)

(declare-fun e!52752 () ListLongMap!1437)

(declare-fun call!7529 () ListLongMap!1437)

(assert (=> b!80796 (= e!52752 (+!104 call!7529 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun d!19749 () Bool)

(declare-fun e!52760 () Bool)

(assert (=> d!19749 e!52760))

(declare-fun res!42070 () Bool)

(assert (=> d!19749 (=> (not res!42070) (not e!52760))))

(assert (=> d!19749 (= res!42070 (or (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))))

(declare-fun lt!37686 () ListLongMap!1437)

(assert (=> d!19749 (= lt!37682 lt!37686)))

(declare-fun lt!37683 () Unit!2327)

(assert (=> d!19749 (= lt!37683 e!52749)))

(declare-fun c!12656 () Bool)

(assert (=> d!19749 (= c!12656 e!52756)))

(declare-fun res!42067 () Bool)

(assert (=> d!19749 (=> (not res!42067) (not e!52756))))

(assert (=> d!19749 (= res!42067 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19749 (= lt!37686 e!52752)))

(declare-fun c!12658 () Bool)

(assert (=> d!19749 (= c!12658 (and (not (= (bvand (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19749 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19749 (= (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!37682)))

(declare-fun bm!7523 () Bool)

(assert (=> bm!7523 (= call!7530 (contains!742 lt!37682 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7524 () Bool)

(assert (=> bm!7524 (= call!7526 call!7525)))

(declare-fun b!80797 () Bool)

(declare-fun e!52759 () Bool)

(assert (=> b!80797 (= e!52759 (= (apply!80 lt!37682 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80797 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (_values!2275 newMap!16))))))

(assert (=> b!80797 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80798 () Bool)

(declare-fun res!42068 () Bool)

(assert (=> b!80798 (=> (not res!42068) (not e!52760))))

(declare-fun e!52751 () Bool)

(assert (=> b!80798 (= res!42068 e!52751)))

(declare-fun res!42071 () Bool)

(assert (=> b!80798 (=> res!42071 e!52751)))

(declare-fun e!52761 () Bool)

(assert (=> b!80798 (= res!42071 (not e!52761))))

(declare-fun res!42066 () Bool)

(assert (=> b!80798 (=> (not res!42066) (not e!52761))))

(assert (=> b!80798 (= res!42066 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80799 () Bool)

(declare-fun e!52754 () Bool)

(assert (=> b!80799 (= e!52754 (= (apply!80 lt!37682 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun b!80800 () Bool)

(assert (=> b!80800 (= e!52761 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7525 () Bool)

(declare-fun call!7527 () ListLongMap!1437)

(assert (=> bm!7525 (= call!7527 call!7529)))

(declare-fun b!80801 () Bool)

(assert (=> b!80801 (= e!52758 e!52754)))

(declare-fun res!42074 () Bool)

(assert (=> b!80801 (= res!42074 call!7528)))

(assert (=> b!80801 (=> (not res!42074) (not e!52754))))

(declare-fun b!80802 () Bool)

(assert (=> b!80802 (= e!52755 call!7527)))

(declare-fun b!80803 () Bool)

(assert (=> b!80803 (= e!52760 e!52758)))

(declare-fun c!12655 () Bool)

(assert (=> b!80803 (= c!12655 (not (= (bvand (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80804 () Bool)

(assert (=> b!80804 (= e!52751 e!52759)))

(declare-fun res!42069 () Bool)

(assert (=> b!80804 (=> (not res!42069) (not e!52759))))

(assert (=> b!80804 (= res!42069 (contains!742 lt!37682 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80804 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80805 () Bool)

(declare-fun res!42072 () Bool)

(assert (=> b!80805 (=> (not res!42072) (not e!52760))))

(assert (=> b!80805 (= res!42072 e!52753)))

(declare-fun c!12659 () Bool)

(assert (=> b!80805 (= c!12659 (not (= (bvand (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80806 () Bool)

(declare-fun e!52750 () ListLongMap!1437)

(assert (=> b!80806 (= e!52750 call!7527)))

(declare-fun c!12657 () Bool)

(declare-fun b!80807 () Bool)

(assert (=> b!80807 (= c!12657 (and (not (= (bvand (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!80807 (= e!52750 e!52755)))

(declare-fun c!12660 () Bool)

(declare-fun bm!7526 () Bool)

(assert (=> bm!7526 (= call!7529 (+!104 (ite c!12658 call!7524 (ite c!12660 call!7525 call!7526)) (ite (or c!12658 c!12660) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7527 () Bool)

(assert (=> bm!7527 (= call!7524 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!80808 () Bool)

(declare-fun e!52757 () Bool)

(assert (=> b!80808 (= e!52753 e!52757)))

(declare-fun res!42073 () Bool)

(assert (=> b!80808 (= res!42073 call!7530)))

(assert (=> b!80808 (=> (not res!42073) (not e!52757))))

(declare-fun b!80809 () Bool)

(assert (=> b!80809 (= e!52752 e!52750)))

(assert (=> b!80809 (= c!12660 (and (not (= (bvand (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80810 () Bool)

(assert (=> b!80810 (= e!52757 (= (apply!80 lt!37682 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))))

(declare-fun b!80811 () Bool)

(declare-fun Unit!2354 () Unit!2327)

(assert (=> b!80811 (= e!52749 Unit!2354)))

(assert (= (and d!19749 c!12658) b!80796))

(assert (= (and d!19749 (not c!12658)) b!80809))

(assert (= (and b!80809 c!12660) b!80806))

(assert (= (and b!80809 (not c!12660)) b!80807))

(assert (= (and b!80807 c!12657) b!80802))

(assert (= (and b!80807 (not c!12657)) b!80793))

(assert (= (or b!80802 b!80793) bm!7524))

(assert (= (or b!80806 bm!7524) bm!7521))

(assert (= (or b!80806 b!80802) bm!7525))

(assert (= (or b!80796 bm!7521) bm!7527))

(assert (= (or b!80796 bm!7525) bm!7526))

(assert (= (and d!19749 res!42067) b!80791))

(assert (= (and d!19749 c!12656) b!80792))

(assert (= (and d!19749 (not c!12656)) b!80811))

(assert (= (and d!19749 res!42070) b!80798))

(assert (= (and b!80798 res!42066) b!80800))

(assert (= (and b!80798 (not res!42071)) b!80804))

(assert (= (and b!80804 res!42069) b!80797))

(assert (= (and b!80798 res!42068) b!80805))

(assert (= (and b!80805 c!12659) b!80808))

(assert (= (and b!80805 (not c!12659)) b!80794))

(assert (= (and b!80808 res!42073) b!80810))

(assert (= (or b!80808 b!80794) bm!7523))

(assert (= (and b!80805 res!42072) b!80803))

(assert (= (and b!80803 c!12655) b!80801))

(assert (= (and b!80803 (not c!12655)) b!80795))

(assert (= (and b!80801 res!42074) b!80799))

(assert (= (or b!80801 b!80795) bm!7522))

(declare-fun b_lambda!3595 () Bool)

(assert (=> (not b_lambda!3595) (not b!80797)))

(assert (=> b!80797 t!5186))

(declare-fun b_and!4929 () Bool)

(assert (= b_and!4925 (and (=> t!5186 result!2849) b_and!4929)))

(assert (=> b!80797 t!5188))

(declare-fun b_and!4931 () Bool)

(assert (= b_and!4927 (and (=> t!5188 result!2851) b_and!4931)))

(assert (=> b!80797 m!82131))

(declare-fun m!82331 () Bool)

(assert (=> b!80797 m!82331))

(assert (=> b!80797 m!82131))

(declare-fun m!82333 () Bool)

(assert (=> b!80797 m!82333))

(assert (=> b!80797 m!82333))

(assert (=> b!80797 m!82137))

(declare-fun m!82335 () Bool)

(assert (=> b!80797 m!82335))

(assert (=> b!80797 m!82137))

(declare-fun m!82337 () Bool)

(assert (=> bm!7523 m!82337))

(assert (=> b!80800 m!82131))

(assert (=> b!80800 m!82131))

(assert (=> b!80800 m!82143))

(declare-fun m!82339 () Bool)

(assert (=> b!80792 m!82339))

(declare-fun m!82341 () Bool)

(assert (=> b!80792 m!82341))

(declare-fun m!82343 () Bool)

(assert (=> b!80792 m!82343))

(declare-fun m!82345 () Bool)

(assert (=> b!80792 m!82345))

(declare-fun m!82347 () Bool)

(assert (=> b!80792 m!82347))

(declare-fun m!82349 () Bool)

(assert (=> b!80792 m!82349))

(declare-fun m!82351 () Bool)

(assert (=> b!80792 m!82351))

(declare-fun m!82353 () Bool)

(assert (=> b!80792 m!82353))

(declare-fun m!82355 () Bool)

(assert (=> b!80792 m!82355))

(declare-fun m!82357 () Bool)

(assert (=> b!80792 m!82357))

(declare-fun m!82359 () Bool)

(assert (=> b!80792 m!82359))

(declare-fun m!82361 () Bool)

(assert (=> b!80792 m!82361))

(declare-fun m!82363 () Bool)

(assert (=> b!80792 m!82363))

(assert (=> b!80792 m!82345))

(assert (=> b!80792 m!82355))

(assert (=> b!80792 m!82131))

(declare-fun m!82365 () Bool)

(assert (=> b!80792 m!82365))

(assert (=> b!80792 m!82349))

(declare-fun m!82367 () Bool)

(assert (=> b!80792 m!82367))

(assert (=> b!80792 m!82361))

(declare-fun m!82369 () Bool)

(assert (=> b!80792 m!82369))

(assert (=> b!80804 m!82131))

(assert (=> b!80804 m!82131))

(declare-fun m!82371 () Bool)

(assert (=> b!80804 m!82371))

(declare-fun m!82373 () Bool)

(assert (=> b!80796 m!82373))

(declare-fun m!82375 () Bool)

(assert (=> bm!7522 m!82375))

(declare-fun m!82377 () Bool)

(assert (=> b!80799 m!82377))

(assert (=> bm!7527 m!82341))

(declare-fun m!82379 () Bool)

(assert (=> bm!7526 m!82379))

(declare-fun m!82381 () Bool)

(assert (=> b!80810 m!82381))

(assert (=> b!80791 m!82131))

(assert (=> b!80791 m!82131))

(assert (=> b!80791 m!82143))

(assert (=> d!19749 m!81973))

(assert (=> bm!7434 d!19749))

(declare-fun d!19751 () Bool)

(declare-fun res!42079 () Bool)

(declare-fun e!52766 () Bool)

(assert (=> d!19751 (=> res!42079 e!52766)))

(assert (=> d!19751 (= res!42079 (and ((_ is Cons!1510) (toList!734 lt!37088)) (= (_1!1102 (h!2099 (toList!734 lt!37088))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (=> d!19751 (= (containsKey!140 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) e!52766)))

(declare-fun b!80816 () Bool)

(declare-fun e!52767 () Bool)

(assert (=> b!80816 (= e!52766 e!52767)))

(declare-fun res!42080 () Bool)

(assert (=> b!80816 (=> (not res!42080) (not e!52767))))

(assert (=> b!80816 (= res!42080 (and (or (not ((_ is Cons!1510) (toList!734 lt!37088))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37088))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))) ((_ is Cons!1510) (toList!734 lt!37088)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37088))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(declare-fun b!80817 () Bool)

(assert (=> b!80817 (= e!52767 (containsKey!140 (t!5172 (toList!734 lt!37088)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (= (and d!19751 (not res!42079)) b!80816))

(assert (= (and b!80816 res!42080) b!80817))

(assert (=> b!80817 m!81295))

(declare-fun m!82383 () Bool)

(assert (=> b!80817 m!82383))

(assert (=> d!19569 d!19751))

(assert (=> bm!7473 d!19585))

(declare-fun d!19753 () Bool)

(declare-fun e!52768 () Bool)

(assert (=> d!19753 e!52768))

(declare-fun res!42081 () Bool)

(assert (=> d!19753 (=> res!42081 e!52768)))

(declare-fun lt!37705 () Bool)

(assert (=> d!19753 (= res!42081 (not lt!37705))))

(declare-fun lt!37704 () Bool)

(assert (=> d!19753 (= lt!37705 lt!37704)))

(declare-fun lt!37703 () Unit!2327)

(declare-fun e!52769 () Unit!2327)

(assert (=> d!19753 (= lt!37703 e!52769)))

(declare-fun c!12661 () Bool)

(assert (=> d!19753 (= c!12661 lt!37704)))

(assert (=> d!19753 (= lt!37704 (containsKey!140 (toList!734 lt!37305) (_1!1102 lt!37075)))))

(assert (=> d!19753 (= (contains!742 lt!37305 (_1!1102 lt!37075)) lt!37705)))

(declare-fun b!80818 () Bool)

(declare-fun lt!37702 () Unit!2327)

(assert (=> b!80818 (= e!52769 lt!37702)))

(assert (=> b!80818 (= lt!37702 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37305) (_1!1102 lt!37075)))))

(assert (=> b!80818 (isDefined!90 (getValueByKey!136 (toList!734 lt!37305) (_1!1102 lt!37075)))))

(declare-fun b!80819 () Bool)

(declare-fun Unit!2355 () Unit!2327)

(assert (=> b!80819 (= e!52769 Unit!2355)))

(declare-fun b!80820 () Bool)

(assert (=> b!80820 (= e!52768 (isDefined!90 (getValueByKey!136 (toList!734 lt!37305) (_1!1102 lt!37075))))))

(assert (= (and d!19753 c!12661) b!80818))

(assert (= (and d!19753 (not c!12661)) b!80819))

(assert (= (and d!19753 (not res!42081)) b!80820))

(declare-fun m!82385 () Bool)

(assert (=> d!19753 m!82385))

(declare-fun m!82387 () Bool)

(assert (=> b!80818 m!82387))

(assert (=> b!80818 m!81575))

(assert (=> b!80818 m!81575))

(declare-fun m!82389 () Bool)

(assert (=> b!80818 m!82389))

(assert (=> b!80820 m!81575))

(assert (=> b!80820 m!81575))

(assert (=> b!80820 m!82389))

(assert (=> d!19575 d!19753))

(declare-fun b!80824 () Bool)

(declare-fun e!52771 () Option!142)

(assert (=> b!80824 (= e!52771 None!140)))

(declare-fun b!80821 () Bool)

(declare-fun e!52770 () Option!142)

(assert (=> b!80821 (= e!52770 (Some!141 (_2!1102 (h!2099 lt!37304))))))

(declare-fun b!80823 () Bool)

(assert (=> b!80823 (= e!52771 (getValueByKey!136 (t!5172 lt!37304) (_1!1102 lt!37075)))))

(declare-fun d!19755 () Bool)

(declare-fun c!12662 () Bool)

(assert (=> d!19755 (= c!12662 (and ((_ is Cons!1510) lt!37304) (= (_1!1102 (h!2099 lt!37304)) (_1!1102 lt!37075))))))

(assert (=> d!19755 (= (getValueByKey!136 lt!37304 (_1!1102 lt!37075)) e!52770)))

(declare-fun b!80822 () Bool)

(assert (=> b!80822 (= e!52770 e!52771)))

(declare-fun c!12663 () Bool)

(assert (=> b!80822 (= c!12663 (and ((_ is Cons!1510) lt!37304) (not (= (_1!1102 (h!2099 lt!37304)) (_1!1102 lt!37075)))))))

(assert (= (and d!19755 c!12662) b!80821))

(assert (= (and d!19755 (not c!12662)) b!80822))

(assert (= (and b!80822 c!12663) b!80823))

(assert (= (and b!80822 (not c!12663)) b!80824))

(declare-fun m!82391 () Bool)

(assert (=> b!80823 m!82391))

(assert (=> d!19575 d!19755))

(declare-fun d!19757 () Bool)

(assert (=> d!19757 (= (getValueByKey!136 lt!37304 (_1!1102 lt!37075)) (Some!141 (_2!1102 lt!37075)))))

(declare-fun lt!37706 () Unit!2327)

(assert (=> d!19757 (= lt!37706 (choose!477 lt!37304 (_1!1102 lt!37075) (_2!1102 lt!37075)))))

(declare-fun e!52772 () Bool)

(assert (=> d!19757 e!52772))

(declare-fun res!42082 () Bool)

(assert (=> d!19757 (=> (not res!42082) (not e!52772))))

(assert (=> d!19757 (= res!42082 (isStrictlySorted!291 lt!37304))))

(assert (=> d!19757 (= (lemmaContainsTupThenGetReturnValue!56 lt!37304 (_1!1102 lt!37075) (_2!1102 lt!37075)) lt!37706)))

(declare-fun b!80825 () Bool)

(declare-fun res!42083 () Bool)

(assert (=> b!80825 (=> (not res!42083) (not e!52772))))

(assert (=> b!80825 (= res!42083 (containsKey!140 lt!37304 (_1!1102 lt!37075)))))

(declare-fun b!80826 () Bool)

(assert (=> b!80826 (= e!52772 (contains!745 lt!37304 (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(assert (= (and d!19757 res!42082) b!80825))

(assert (= (and b!80825 res!42083) b!80826))

(assert (=> d!19757 m!81569))

(declare-fun m!82393 () Bool)

(assert (=> d!19757 m!82393))

(declare-fun m!82395 () Bool)

(assert (=> d!19757 m!82395))

(declare-fun m!82397 () Bool)

(assert (=> b!80825 m!82397))

(declare-fun m!82399 () Bool)

(assert (=> b!80826 m!82399))

(assert (=> d!19575 d!19757))

(declare-fun b!80827 () Bool)

(declare-fun e!52776 () List!1514)

(declare-fun call!7533 () List!1514)

(assert (=> b!80827 (= e!52776 call!7533)))

(declare-fun bm!7528 () Bool)

(declare-fun c!12667 () Bool)

(declare-fun e!52773 () List!1514)

(declare-fun call!7532 () List!1514)

(assert (=> bm!7528 (= call!7532 ($colon$colon!69 e!52773 (ite c!12667 (h!2099 (toList!734 lt!37071)) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075)))))))

(declare-fun c!12665 () Bool)

(assert (=> bm!7528 (= c!12665 c!12667)))

(declare-fun b!80828 () Bool)

(declare-fun e!52777 () Bool)

(declare-fun lt!37707 () List!1514)

(assert (=> b!80828 (= e!52777 (contains!745 lt!37707 (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(declare-fun bm!7529 () Bool)

(declare-fun call!7531 () List!1514)

(assert (=> bm!7529 (= call!7533 call!7531)))

(declare-fun d!19759 () Bool)

(assert (=> d!19759 e!52777))

(declare-fun res!42085 () Bool)

(assert (=> d!19759 (=> (not res!42085) (not e!52777))))

(assert (=> d!19759 (= res!42085 (isStrictlySorted!291 lt!37707))))

(declare-fun e!52775 () List!1514)

(assert (=> d!19759 (= lt!37707 e!52775)))

(assert (=> d!19759 (= c!12667 (and ((_ is Cons!1510) (toList!734 lt!37071)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 lt!37075))))))

(assert (=> d!19759 (isStrictlySorted!291 (toList!734 lt!37071))))

(assert (=> d!19759 (= (insertStrictlySorted!59 (toList!734 lt!37071) (_1!1102 lt!37075) (_2!1102 lt!37075)) lt!37707)))

(declare-fun b!80829 () Bool)

(declare-fun c!12664 () Bool)

(assert (=> b!80829 (= c!12664 (and ((_ is Cons!1510) (toList!734 lt!37071)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 lt!37075))))))

(declare-fun e!52774 () List!1514)

(assert (=> b!80829 (= e!52774 e!52776)))

(declare-fun b!80830 () Bool)

(assert (=> b!80830 (= e!52774 call!7531)))

(declare-fun b!80831 () Bool)

(assert (=> b!80831 (= e!52775 call!7532)))

(declare-fun bm!7530 () Bool)

(assert (=> bm!7530 (= call!7531 call!7532)))

(declare-fun b!80832 () Bool)

(declare-fun res!42084 () Bool)

(assert (=> b!80832 (=> (not res!42084) (not e!52777))))

(assert (=> b!80832 (= res!42084 (containsKey!140 lt!37707 (_1!1102 lt!37075)))))

(declare-fun b!80833 () Bool)

(assert (=> b!80833 (= e!52776 call!7533)))

(declare-fun c!12666 () Bool)

(declare-fun b!80834 () Bool)

(assert (=> b!80834 (= e!52773 (ite c!12666 (t!5172 (toList!734 lt!37071)) (ite c!12664 (Cons!1510 (h!2099 (toList!734 lt!37071)) (t!5172 (toList!734 lt!37071))) Nil!1511)))))

(declare-fun b!80835 () Bool)

(assert (=> b!80835 (= e!52775 e!52774)))

(assert (=> b!80835 (= c!12666 (and ((_ is Cons!1510) (toList!734 lt!37071)) (= (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 lt!37075))))))

(declare-fun b!80836 () Bool)

(assert (=> b!80836 (= e!52773 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37071)) (_1!1102 lt!37075) (_2!1102 lt!37075)))))

(assert (= (and d!19759 c!12667) b!80831))

(assert (= (and d!19759 (not c!12667)) b!80835))

(assert (= (and b!80835 c!12666) b!80830))

(assert (= (and b!80835 (not c!12666)) b!80829))

(assert (= (and b!80829 c!12664) b!80833))

(assert (= (and b!80829 (not c!12664)) b!80827))

(assert (= (or b!80833 b!80827) bm!7529))

(assert (= (or b!80830 bm!7529) bm!7530))

(assert (= (or b!80831 bm!7530) bm!7528))

(assert (= (and bm!7528 c!12665) b!80836))

(assert (= (and bm!7528 (not c!12665)) b!80834))

(assert (= (and d!19759 res!42085) b!80832))

(assert (= (and b!80832 res!42084) b!80828))

(declare-fun m!82401 () Bool)

(assert (=> d!19759 m!82401))

(declare-fun m!82403 () Bool)

(assert (=> d!19759 m!82403))

(declare-fun m!82405 () Bool)

(assert (=> b!80836 m!82405))

(declare-fun m!82407 () Bool)

(assert (=> bm!7528 m!82407))

(declare-fun m!82409 () Bool)

(assert (=> b!80832 m!82409))

(declare-fun m!82411 () Bool)

(assert (=> b!80828 m!82411))

(assert (=> d!19575 d!19759))

(declare-fun d!19761 () Bool)

(assert (=> d!19761 (= (map!1177 (_2!1101 lt!37268)) (getCurrentListMap!423 (_keys!3955 (_2!1101 lt!37268)) (_values!2275 (_2!1101 lt!37268)) (mask!6297 (_2!1101 lt!37268)) (extraKeys!2139 (_2!1101 lt!37268)) (zeroValue!2188 (_2!1101 lt!37268)) (minValue!2188 (_2!1101 lt!37268)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1101 lt!37268))))))

(declare-fun bs!3407 () Bool)

(assert (= bs!3407 d!19761))

(declare-fun m!82413 () Bool)

(assert (=> bs!3407 m!82413))

(assert (=> bm!7436 d!19761))

(declare-fun d!19763 () Bool)

(declare-fun e!52778 () Bool)

(assert (=> d!19763 e!52778))

(declare-fun res!42086 () Bool)

(assert (=> d!19763 (=> res!42086 e!52778)))

(declare-fun lt!37711 () Bool)

(assert (=> d!19763 (= res!42086 (not lt!37711))))

(declare-fun lt!37710 () Bool)

(assert (=> d!19763 (= lt!37711 lt!37710)))

(declare-fun lt!37709 () Unit!2327)

(declare-fun e!52779 () Unit!2327)

(assert (=> d!19763 (= lt!37709 e!52779)))

(declare-fun c!12668 () Bool)

(assert (=> d!19763 (= c!12668 lt!37710)))

(assert (=> d!19763 (= lt!37710 (containsKey!140 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19763 (= (contains!742 lt!37406 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37711)))

(declare-fun b!80837 () Bool)

(declare-fun lt!37708 () Unit!2327)

(assert (=> b!80837 (= e!52779 lt!37708)))

(assert (=> b!80837 (= lt!37708 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80837 (isDefined!90 (getValueByKey!136 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80838 () Bool)

(declare-fun Unit!2356 () Unit!2327)

(assert (=> b!80838 (= e!52779 Unit!2356)))

(declare-fun b!80839 () Bool)

(assert (=> b!80839 (= e!52778 (isDefined!90 (getValueByKey!136 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19763 c!12668) b!80837))

(assert (= (and d!19763 (not c!12668)) b!80838))

(assert (= (and d!19763 (not res!42086)) b!80839))

(declare-fun m!82415 () Bool)

(assert (=> d!19763 m!82415))

(declare-fun m!82417 () Bool)

(assert (=> b!80837 m!82417))

(declare-fun m!82419 () Bool)

(assert (=> b!80837 m!82419))

(assert (=> b!80837 m!82419))

(declare-fun m!82421 () Bool)

(assert (=> b!80837 m!82421))

(assert (=> b!80839 m!82419))

(assert (=> b!80839 m!82419))

(assert (=> b!80839 m!82421))

(assert (=> bm!7468 d!19763))

(assert (=> d!19605 d!19609))

(declare-fun d!19765 () Bool)

(assert (=> d!19765 (not (arrayContainsKey!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!19765 true))

(declare-fun _$68!67 () Unit!2327)

(assert (=> d!19765 (= (choose!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512)) _$68!67)))

(declare-fun bs!3408 () Bool)

(assert (= bs!3408 d!19765))

(assert (=> bs!3408 m!81295))

(assert (=> bs!3408 m!81325))

(assert (=> d!19605 d!19765))

(declare-fun b!80852 () Bool)

(declare-fun e!52786 () SeekEntryResult!244)

(declare-fun e!52788 () SeekEntryResult!244)

(assert (=> b!80852 (= e!52786 e!52788)))

(declare-fun lt!37719 () (_ BitVec 64))

(declare-fun lt!37720 () SeekEntryResult!244)

(assert (=> b!80852 (= lt!37719 (select (arr!1888 (_keys!3955 newMap!16)) (index!3113 lt!37720)))))

(declare-fun c!12676 () Bool)

(assert (=> b!80852 (= c!12676 (= lt!37719 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun b!80853 () Bool)

(declare-fun c!12675 () Bool)

(assert (=> b!80853 (= c!12675 (= lt!37719 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52787 () SeekEntryResult!244)

(assert (=> b!80853 (= e!52788 e!52787)))

(declare-fun d!19767 () Bool)

(declare-fun lt!37718 () SeekEntryResult!244)

(assert (=> d!19767 (and (or ((_ is Undefined!244) lt!37718) (not ((_ is Found!244) lt!37718)) (and (bvsge (index!3112 lt!37718) #b00000000000000000000000000000000) (bvslt (index!3112 lt!37718) (size!2131 (_keys!3955 newMap!16))))) (or ((_ is Undefined!244) lt!37718) ((_ is Found!244) lt!37718) (not ((_ is MissingZero!244) lt!37718)) (and (bvsge (index!3111 lt!37718) #b00000000000000000000000000000000) (bvslt (index!3111 lt!37718) (size!2131 (_keys!3955 newMap!16))))) (or ((_ is Undefined!244) lt!37718) ((_ is Found!244) lt!37718) ((_ is MissingZero!244) lt!37718) (not ((_ is MissingVacant!244) lt!37718)) (and (bvsge (index!3114 lt!37718) #b00000000000000000000000000000000) (bvslt (index!3114 lt!37718) (size!2131 (_keys!3955 newMap!16))))) (or ((_ is Undefined!244) lt!37718) (ite ((_ is Found!244) lt!37718) (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37718)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (ite ((_ is MissingZero!244) lt!37718) (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3111 lt!37718)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!244) lt!37718) (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3114 lt!37718)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19767 (= lt!37718 e!52786)))

(declare-fun c!12677 () Bool)

(assert (=> d!19767 (= c!12677 (and ((_ is Intermediate!244) lt!37720) (undefined!1056 lt!37720)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3965 (_ BitVec 32)) SeekEntryResult!244)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!19767 (= lt!37720 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (mask!6297 newMap!16)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(assert (=> d!19767 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19767 (= (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)) lt!37718)))

(declare-fun b!80854 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3965 (_ BitVec 32)) SeekEntryResult!244)

(assert (=> b!80854 (= e!52787 (seekKeyOrZeroReturnVacant!0 (x!11694 lt!37720) (index!3113 lt!37720) (index!3113 lt!37720) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(declare-fun b!80855 () Bool)

(assert (=> b!80855 (= e!52786 Undefined!244)))

(declare-fun b!80856 () Bool)

(assert (=> b!80856 (= e!52787 (MissingZero!244 (index!3113 lt!37720)))))

(declare-fun b!80857 () Bool)

(assert (=> b!80857 (= e!52788 (Found!244 (index!3113 lt!37720)))))

(assert (= (and d!19767 c!12677) b!80855))

(assert (= (and d!19767 (not c!12677)) b!80852))

(assert (= (and b!80852 c!12676) b!80857))

(assert (= (and b!80852 (not c!12676)) b!80853))

(assert (= (and b!80853 c!12675) b!80856))

(assert (= (and b!80853 (not c!12675)) b!80854))

(declare-fun m!82423 () Bool)

(assert (=> b!80852 m!82423))

(assert (=> d!19767 m!81295))

(declare-fun m!82425 () Bool)

(assert (=> d!19767 m!82425))

(assert (=> d!19767 m!82425))

(assert (=> d!19767 m!81295))

(declare-fun m!82427 () Bool)

(assert (=> d!19767 m!82427))

(declare-fun m!82429 () Bool)

(assert (=> d!19767 m!82429))

(assert (=> d!19767 m!81973))

(declare-fun m!82431 () Bool)

(assert (=> d!19767 m!82431))

(declare-fun m!82433 () Bool)

(assert (=> d!19767 m!82433))

(assert (=> b!80854 m!81295))

(declare-fun m!82435 () Bool)

(assert (=> b!80854 m!82435))

(assert (=> bm!7443 d!19767))

(assert (=> b!80365 d!19725))

(declare-fun d!19769 () Bool)

(declare-fun e!52789 () Bool)

(assert (=> d!19769 e!52789))

(declare-fun res!42087 () Bool)

(assert (=> d!19769 (=> res!42087 e!52789)))

(declare-fun lt!37724 () Bool)

(assert (=> d!19769 (= res!42087 (not lt!37724))))

(declare-fun lt!37723 () Bool)

(assert (=> d!19769 (= lt!37724 lt!37723)))

(declare-fun lt!37722 () Unit!2327)

(declare-fun e!52790 () Unit!2327)

(assert (=> d!19769 (= lt!37722 e!52790)))

(declare-fun c!12678 () Bool)

(assert (=> d!19769 (= c!12678 lt!37723)))

(assert (=> d!19769 (= lt!37723 (containsKey!140 (toList!734 lt!37312) (_1!1102 lt!37079)))))

(assert (=> d!19769 (= (contains!742 lt!37312 (_1!1102 lt!37079)) lt!37724)))

(declare-fun b!80858 () Bool)

(declare-fun lt!37721 () Unit!2327)

(assert (=> b!80858 (= e!52790 lt!37721)))

(assert (=> b!80858 (= lt!37721 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37312) (_1!1102 lt!37079)))))

(assert (=> b!80858 (isDefined!90 (getValueByKey!136 (toList!734 lt!37312) (_1!1102 lt!37079)))))

(declare-fun b!80859 () Bool)

(declare-fun Unit!2357 () Unit!2327)

(assert (=> b!80859 (= e!52790 Unit!2357)))

(declare-fun b!80860 () Bool)

(assert (=> b!80860 (= e!52789 (isDefined!90 (getValueByKey!136 (toList!734 lt!37312) (_1!1102 lt!37079))))))

(assert (= (and d!19769 c!12678) b!80858))

(assert (= (and d!19769 (not c!12678)) b!80859))

(assert (= (and d!19769 (not res!42087)) b!80860))

(declare-fun m!82437 () Bool)

(assert (=> d!19769 m!82437))

(declare-fun m!82439 () Bool)

(assert (=> b!80858 m!82439))

(assert (=> b!80858 m!81597))

(assert (=> b!80858 m!81597))

(declare-fun m!82441 () Bool)

(assert (=> b!80858 m!82441))

(assert (=> b!80860 m!81597))

(assert (=> b!80860 m!81597))

(assert (=> b!80860 m!82441))

(assert (=> d!19579 d!19769))

(declare-fun b!80864 () Bool)

(declare-fun e!52792 () Option!142)

(assert (=> b!80864 (= e!52792 None!140)))

(declare-fun b!80861 () Bool)

(declare-fun e!52791 () Option!142)

(assert (=> b!80861 (= e!52791 (Some!141 (_2!1102 (h!2099 lt!37311))))))

(declare-fun b!80863 () Bool)

(assert (=> b!80863 (= e!52792 (getValueByKey!136 (t!5172 lt!37311) (_1!1102 lt!37079)))))

(declare-fun d!19771 () Bool)

(declare-fun c!12679 () Bool)

(assert (=> d!19771 (= c!12679 (and ((_ is Cons!1510) lt!37311) (= (_1!1102 (h!2099 lt!37311)) (_1!1102 lt!37079))))))

(assert (=> d!19771 (= (getValueByKey!136 lt!37311 (_1!1102 lt!37079)) e!52791)))

(declare-fun b!80862 () Bool)

(assert (=> b!80862 (= e!52791 e!52792)))

(declare-fun c!12680 () Bool)

(assert (=> b!80862 (= c!12680 (and ((_ is Cons!1510) lt!37311) (not (= (_1!1102 (h!2099 lt!37311)) (_1!1102 lt!37079)))))))

(assert (= (and d!19771 c!12679) b!80861))

(assert (= (and d!19771 (not c!12679)) b!80862))

(assert (= (and b!80862 c!12680) b!80863))

(assert (= (and b!80862 (not c!12680)) b!80864))

(declare-fun m!82443 () Bool)

(assert (=> b!80863 m!82443))

(assert (=> d!19579 d!19771))

(declare-fun d!19773 () Bool)

(assert (=> d!19773 (= (getValueByKey!136 lt!37311 (_1!1102 lt!37079)) (Some!141 (_2!1102 lt!37079)))))

(declare-fun lt!37725 () Unit!2327)

(assert (=> d!19773 (= lt!37725 (choose!477 lt!37311 (_1!1102 lt!37079) (_2!1102 lt!37079)))))

(declare-fun e!52793 () Bool)

(assert (=> d!19773 e!52793))

(declare-fun res!42088 () Bool)

(assert (=> d!19773 (=> (not res!42088) (not e!52793))))

(assert (=> d!19773 (= res!42088 (isStrictlySorted!291 lt!37311))))

(assert (=> d!19773 (= (lemmaContainsTupThenGetReturnValue!56 lt!37311 (_1!1102 lt!37079) (_2!1102 lt!37079)) lt!37725)))

(declare-fun b!80865 () Bool)

(declare-fun res!42089 () Bool)

(assert (=> b!80865 (=> (not res!42089) (not e!52793))))

(assert (=> b!80865 (= res!42089 (containsKey!140 lt!37311 (_1!1102 lt!37079)))))

(declare-fun b!80866 () Bool)

(assert (=> b!80866 (= e!52793 (contains!745 lt!37311 (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(assert (= (and d!19773 res!42088) b!80865))

(assert (= (and b!80865 res!42089) b!80866))

(assert (=> d!19773 m!81591))

(declare-fun m!82445 () Bool)

(assert (=> d!19773 m!82445))

(declare-fun m!82447 () Bool)

(assert (=> d!19773 m!82447))

(declare-fun m!82449 () Bool)

(assert (=> b!80865 m!82449))

(declare-fun m!82451 () Bool)

(assert (=> b!80866 m!82451))

(assert (=> d!19579 d!19773))

(declare-fun b!80867 () Bool)

(declare-fun e!52797 () List!1514)

(declare-fun call!7536 () List!1514)

(assert (=> b!80867 (= e!52797 call!7536)))

(declare-fun bm!7531 () Bool)

(declare-fun c!12684 () Bool)

(declare-fun e!52794 () List!1514)

(declare-fun call!7535 () List!1514)

(assert (=> bm!7531 (= call!7535 ($colon$colon!69 e!52794 (ite c!12684 (h!2099 (toList!734 lt!37081)) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079)))))))

(declare-fun c!12682 () Bool)

(assert (=> bm!7531 (= c!12682 c!12684)))

(declare-fun b!80868 () Bool)

(declare-fun e!52798 () Bool)

(declare-fun lt!37726 () List!1514)

(assert (=> b!80868 (= e!52798 (contains!745 lt!37726 (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(declare-fun bm!7532 () Bool)

(declare-fun call!7534 () List!1514)

(assert (=> bm!7532 (= call!7536 call!7534)))

(declare-fun d!19775 () Bool)

(assert (=> d!19775 e!52798))

(declare-fun res!42091 () Bool)

(assert (=> d!19775 (=> (not res!42091) (not e!52798))))

(assert (=> d!19775 (= res!42091 (isStrictlySorted!291 lt!37726))))

(declare-fun e!52796 () List!1514)

(assert (=> d!19775 (= lt!37726 e!52796)))

(assert (=> d!19775 (= c!12684 (and ((_ is Cons!1510) (toList!734 lt!37081)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37081))) (_1!1102 lt!37079))))))

(assert (=> d!19775 (isStrictlySorted!291 (toList!734 lt!37081))))

(assert (=> d!19775 (= (insertStrictlySorted!59 (toList!734 lt!37081) (_1!1102 lt!37079) (_2!1102 lt!37079)) lt!37726)))

(declare-fun b!80869 () Bool)

(declare-fun c!12681 () Bool)

(assert (=> b!80869 (= c!12681 (and ((_ is Cons!1510) (toList!734 lt!37081)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37081))) (_1!1102 lt!37079))))))

(declare-fun e!52795 () List!1514)

(assert (=> b!80869 (= e!52795 e!52797)))

(declare-fun b!80870 () Bool)

(assert (=> b!80870 (= e!52795 call!7534)))

(declare-fun b!80871 () Bool)

(assert (=> b!80871 (= e!52796 call!7535)))

(declare-fun bm!7533 () Bool)

(assert (=> bm!7533 (= call!7534 call!7535)))

(declare-fun b!80872 () Bool)

(declare-fun res!42090 () Bool)

(assert (=> b!80872 (=> (not res!42090) (not e!52798))))

(assert (=> b!80872 (= res!42090 (containsKey!140 lt!37726 (_1!1102 lt!37079)))))

(declare-fun b!80873 () Bool)

(assert (=> b!80873 (= e!52797 call!7536)))

(declare-fun c!12683 () Bool)

(declare-fun b!80874 () Bool)

(assert (=> b!80874 (= e!52794 (ite c!12683 (t!5172 (toList!734 lt!37081)) (ite c!12681 (Cons!1510 (h!2099 (toList!734 lt!37081)) (t!5172 (toList!734 lt!37081))) Nil!1511)))))

(declare-fun b!80875 () Bool)

(assert (=> b!80875 (= e!52796 e!52795)))

(assert (=> b!80875 (= c!12683 (and ((_ is Cons!1510) (toList!734 lt!37081)) (= (_1!1102 (h!2099 (toList!734 lt!37081))) (_1!1102 lt!37079))))))

(declare-fun b!80876 () Bool)

(assert (=> b!80876 (= e!52794 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37081)) (_1!1102 lt!37079) (_2!1102 lt!37079)))))

(assert (= (and d!19775 c!12684) b!80871))

(assert (= (and d!19775 (not c!12684)) b!80875))

(assert (= (and b!80875 c!12683) b!80870))

(assert (= (and b!80875 (not c!12683)) b!80869))

(assert (= (and b!80869 c!12681) b!80873))

(assert (= (and b!80869 (not c!12681)) b!80867))

(assert (= (or b!80873 b!80867) bm!7532))

(assert (= (or b!80870 bm!7532) bm!7533))

(assert (= (or b!80871 bm!7533) bm!7531))

(assert (= (and bm!7531 c!12682) b!80876))

(assert (= (and bm!7531 (not c!12682)) b!80874))

(assert (= (and d!19775 res!42091) b!80872))

(assert (= (and b!80872 res!42090) b!80868))

(declare-fun m!82453 () Bool)

(assert (=> d!19775 m!82453))

(declare-fun m!82455 () Bool)

(assert (=> d!19775 m!82455))

(declare-fun m!82457 () Bool)

(assert (=> b!80876 m!82457))

(declare-fun m!82459 () Bool)

(assert (=> bm!7531 m!82459))

(declare-fun m!82461 () Bool)

(assert (=> b!80872 m!82461))

(declare-fun m!82463 () Bool)

(assert (=> b!80868 m!82463))

(assert (=> d!19579 d!19775))

(declare-fun d!19777 () Bool)

(declare-fun lt!37727 () Bool)

(assert (=> d!19777 (= lt!37727 (select (content!86 (toList!734 lt!37342)) lt!37082))))

(declare-fun e!52799 () Bool)

(assert (=> d!19777 (= lt!37727 e!52799)))

(declare-fun res!42093 () Bool)

(assert (=> d!19777 (=> (not res!42093) (not e!52799))))

(assert (=> d!19777 (= res!42093 ((_ is Cons!1510) (toList!734 lt!37342)))))

(assert (=> d!19777 (= (contains!745 (toList!734 lt!37342) lt!37082) lt!37727)))

(declare-fun b!80877 () Bool)

(declare-fun e!52800 () Bool)

(assert (=> b!80877 (= e!52799 e!52800)))

(declare-fun res!42092 () Bool)

(assert (=> b!80877 (=> res!42092 e!52800)))

(assert (=> b!80877 (= res!42092 (= (h!2099 (toList!734 lt!37342)) lt!37082))))

(declare-fun b!80878 () Bool)

(assert (=> b!80878 (= e!52800 (contains!745 (t!5172 (toList!734 lt!37342)) lt!37082))))

(assert (= (and d!19777 res!42093) b!80877))

(assert (= (and b!80877 (not res!42092)) b!80878))

(declare-fun m!82465 () Bool)

(assert (=> d!19777 m!82465))

(declare-fun m!82467 () Bool)

(assert (=> d!19777 m!82467))

(declare-fun m!82469 () Bool)

(assert (=> b!80878 m!82469))

(assert (=> b!80367 d!19777))

(declare-fun d!19779 () Bool)

(declare-fun e!52801 () Bool)

(assert (=> d!19779 e!52801))

(declare-fun res!42094 () Bool)

(assert (=> d!19779 (=> res!42094 e!52801)))

(declare-fun lt!37731 () Bool)

(assert (=> d!19779 (= res!42094 (not lt!37731))))

(declare-fun lt!37730 () Bool)

(assert (=> d!19779 (= lt!37731 lt!37730)))

(declare-fun lt!37729 () Unit!2327)

(declare-fun e!52802 () Unit!2327)

(assert (=> d!19779 (= lt!37729 e!52802)))

(declare-fun c!12685 () Bool)

(assert (=> d!19779 (= c!12685 lt!37730)))

(assert (=> d!19779 (= lt!37730 (containsKey!140 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19779 (= (contains!742 lt!37406 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37731)))

(declare-fun b!80879 () Bool)

(declare-fun lt!37728 () Unit!2327)

(assert (=> b!80879 (= e!52802 lt!37728)))

(assert (=> b!80879 (= lt!37728 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80879 (isDefined!90 (getValueByKey!136 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80880 () Bool)

(declare-fun Unit!2358 () Unit!2327)

(assert (=> b!80880 (= e!52802 Unit!2358)))

(declare-fun b!80881 () Bool)

(assert (=> b!80881 (= e!52801 (isDefined!90 (getValueByKey!136 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19779 c!12685) b!80879))

(assert (= (and d!19779 (not c!12685)) b!80880))

(assert (= (and d!19779 (not res!42094)) b!80881))

(declare-fun m!82471 () Bool)

(assert (=> d!19779 m!82471))

(declare-fun m!82473 () Bool)

(assert (=> b!80879 m!82473))

(assert (=> b!80879 m!81979))

(assert (=> b!80879 m!81979))

(declare-fun m!82475 () Bool)

(assert (=> b!80879 m!82475))

(assert (=> b!80881 m!81979))

(assert (=> b!80881 m!81979))

(assert (=> b!80881 m!82475))

(assert (=> bm!7469 d!19779))

(declare-fun d!19781 () Bool)

(declare-fun e!52803 () Bool)

(assert (=> d!19781 e!52803))

(declare-fun res!42096 () Bool)

(assert (=> d!19781 (=> (not res!42096) (not e!52803))))

(declare-fun lt!37735 () ListLongMap!1437)

(assert (=> d!19781 (= res!42096 (contains!742 lt!37735 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun lt!37734 () List!1514)

(assert (=> d!19781 (= lt!37735 (ListLongMap!1438 lt!37734))))

(declare-fun lt!37733 () Unit!2327)

(declare-fun lt!37732 () Unit!2327)

(assert (=> d!19781 (= lt!37733 lt!37732)))

(assert (=> d!19781 (= (getValueByKey!136 lt!37734 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19781 (= lt!37732 (lemmaContainsTupThenGetReturnValue!56 lt!37734 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19781 (= lt!37734 (insertStrictlySorted!59 (toList!734 lt!37073) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19781 (= (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) lt!37735)))

(declare-fun b!80882 () Bool)

(declare-fun res!42095 () Bool)

(assert (=> b!80882 (=> (not res!42095) (not e!52803))))

(assert (=> b!80882 (= res!42095 (= (getValueByKey!136 (toList!734 lt!37735) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!80883 () Bool)

(assert (=> b!80883 (= e!52803 (contains!745 (toList!734 lt!37735) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (= (and d!19781 res!42096) b!80882))

(assert (= (and b!80882 res!42095) b!80883))

(declare-fun m!82477 () Bool)

(assert (=> d!19781 m!82477))

(declare-fun m!82479 () Bool)

(assert (=> d!19781 m!82479))

(declare-fun m!82481 () Bool)

(assert (=> d!19781 m!82481))

(declare-fun m!82483 () Bool)

(assert (=> d!19781 m!82483))

(declare-fun m!82485 () Bool)

(assert (=> b!80882 m!82485))

(declare-fun m!82487 () Bool)

(assert (=> b!80883 m!82487))

(assert (=> d!19577 d!19781))

(declare-fun d!19783 () Bool)

(declare-fun e!52804 () Bool)

(assert (=> d!19783 e!52804))

(declare-fun res!42098 () Bool)

(assert (=> d!19783 (=> (not res!42098) (not e!52804))))

(declare-fun lt!37739 () ListLongMap!1437)

(assert (=> d!19783 (= res!42098 (contains!742 lt!37739 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun lt!37738 () List!1514)

(assert (=> d!19783 (= lt!37739 (ListLongMap!1438 lt!37738))))

(declare-fun lt!37737 () Unit!2327)

(declare-fun lt!37736 () Unit!2327)

(assert (=> d!19783 (= lt!37737 lt!37736)))

(assert (=> d!19783 (= (getValueByKey!136 lt!37738 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19783 (= lt!37736 (lemmaContainsTupThenGetReturnValue!56 lt!37738 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19783 (= lt!37738 (insertStrictlySorted!59 (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19783 (= (+!104 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) lt!37739)))

(declare-fun b!80884 () Bool)

(declare-fun res!42097 () Bool)

(assert (=> b!80884 (=> (not res!42097) (not e!52804))))

(assert (=> b!80884 (= res!42097 (= (getValueByKey!136 (toList!734 lt!37739) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!80885 () Bool)

(assert (=> b!80885 (= e!52804 (contains!745 (toList!734 lt!37739) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (= (and d!19783 res!42098) b!80884))

(assert (= (and b!80884 res!42097) b!80885))

(declare-fun m!82489 () Bool)

(assert (=> d!19783 m!82489))

(declare-fun m!82491 () Bool)

(assert (=> d!19783 m!82491))

(declare-fun m!82493 () Bool)

(assert (=> d!19783 m!82493))

(declare-fun m!82495 () Bool)

(assert (=> d!19783 m!82495))

(declare-fun m!82497 () Bool)

(assert (=> b!80884 m!82497))

(declare-fun m!82499 () Bool)

(assert (=> b!80885 m!82499))

(assert (=> d!19577 d!19783))

(declare-fun d!19785 () Bool)

(assert (=> d!19785 (= (+!104 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (+!104 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (=> d!19785 true))

(declare-fun _$28!134 () Unit!2327)

(assert (=> d!19785 (= (choose!475 lt!37073 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))) _$28!134)))

(declare-fun bs!3409 () Bool)

(assert (= bs!3409 d!19785))

(assert (=> bs!3409 m!81581))

(assert (=> bs!3409 m!81581))

(assert (=> bs!3409 m!81583))

(assert (=> bs!3409 m!81585))

(assert (=> bs!3409 m!81585))

(assert (=> bs!3409 m!81587))

(assert (=> d!19577 d!19785))

(declare-fun d!19787 () Bool)

(declare-fun e!52805 () Bool)

(assert (=> d!19787 e!52805))

(declare-fun res!42100 () Bool)

(assert (=> d!19787 (=> (not res!42100) (not e!52805))))

(declare-fun lt!37743 () ListLongMap!1437)

(assert (=> d!19787 (= res!42100 (contains!742 lt!37743 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!37742 () List!1514)

(assert (=> d!19787 (= lt!37743 (ListLongMap!1438 lt!37742))))

(declare-fun lt!37741 () Unit!2327)

(declare-fun lt!37740 () Unit!2327)

(assert (=> d!19787 (= lt!37741 lt!37740)))

(assert (=> d!19787 (= (getValueByKey!136 lt!37742 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19787 (= lt!37740 (lemmaContainsTupThenGetReturnValue!56 lt!37742 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19787 (= lt!37742 (insertStrictlySorted!59 (toList!734 lt!37073) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19787 (= (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37743)))

(declare-fun b!80886 () Bool)

(declare-fun res!42099 () Bool)

(assert (=> b!80886 (=> (not res!42099) (not e!52805))))

(assert (=> b!80886 (= res!42099 (= (getValueByKey!136 (toList!734 lt!37743) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!80887 () Bool)

(assert (=> b!80887 (= e!52805 (contains!745 (toList!734 lt!37743) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19787 res!42100) b!80886))

(assert (= (and b!80886 res!42099) b!80887))

(declare-fun m!82501 () Bool)

(assert (=> d!19787 m!82501))

(declare-fun m!82503 () Bool)

(assert (=> d!19787 m!82503))

(declare-fun m!82505 () Bool)

(assert (=> d!19787 m!82505))

(declare-fun m!82507 () Bool)

(assert (=> d!19787 m!82507))

(declare-fun m!82509 () Bool)

(assert (=> b!80886 m!82509))

(declare-fun m!82511 () Bool)

(assert (=> b!80887 m!82511))

(assert (=> d!19577 d!19787))

(declare-fun d!19789 () Bool)

(declare-fun e!52806 () Bool)

(assert (=> d!19789 e!52806))

(declare-fun res!42102 () Bool)

(assert (=> d!19789 (=> (not res!42102) (not e!52806))))

(declare-fun lt!37747 () ListLongMap!1437)

(assert (=> d!19789 (= res!42102 (contains!742 lt!37747 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!37746 () List!1514)

(assert (=> d!19789 (= lt!37747 (ListLongMap!1438 lt!37746))))

(declare-fun lt!37745 () Unit!2327)

(declare-fun lt!37744 () Unit!2327)

(assert (=> d!19789 (= lt!37745 lt!37744)))

(assert (=> d!19789 (= (getValueByKey!136 lt!37746 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19789 (= lt!37744 (lemmaContainsTupThenGetReturnValue!56 lt!37746 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19789 (= lt!37746 (insertStrictlySorted!59 (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19789 (= (+!104 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37747)))

(declare-fun b!80888 () Bool)

(declare-fun res!42101 () Bool)

(assert (=> b!80888 (=> (not res!42101) (not e!52806))))

(assert (=> b!80888 (= res!42101 (= (getValueByKey!136 (toList!734 lt!37747) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!80889 () Bool)

(assert (=> b!80889 (= e!52806 (contains!745 (toList!734 lt!37747) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19789 res!42102) b!80888))

(assert (= (and b!80888 res!42101) b!80889))

(declare-fun m!82513 () Bool)

(assert (=> d!19789 m!82513))

(declare-fun m!82515 () Bool)

(assert (=> d!19789 m!82515))

(declare-fun m!82517 () Bool)

(assert (=> d!19789 m!82517))

(declare-fun m!82519 () Bool)

(assert (=> d!19789 m!82519))

(declare-fun m!82521 () Bool)

(assert (=> b!80888 m!82521))

(declare-fun m!82523 () Bool)

(assert (=> b!80889 m!82523))

(assert (=> d!19577 d!19789))

(declare-fun d!19791 () Bool)

(declare-fun e!52807 () Bool)

(assert (=> d!19791 e!52807))

(declare-fun res!42104 () Bool)

(assert (=> d!19791 (=> (not res!42104) (not e!52807))))

(declare-fun lt!37751 () ListLongMap!1437)

(assert (=> d!19791 (= res!42104 (contains!742 lt!37751 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!37750 () List!1514)

(assert (=> d!19791 (= lt!37751 (ListLongMap!1438 lt!37750))))

(declare-fun lt!37749 () Unit!2327)

(declare-fun lt!37748 () Unit!2327)

(assert (=> d!19791 (= lt!37749 lt!37748)))

(assert (=> d!19791 (= (getValueByKey!136 lt!37750 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19791 (= lt!37748 (lemmaContainsTupThenGetReturnValue!56 lt!37750 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19791 (= lt!37750 (insertStrictlySorted!59 (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19791 (= (+!104 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37751)))

(declare-fun b!80890 () Bool)

(declare-fun res!42103 () Bool)

(assert (=> b!80890 (=> (not res!42103) (not e!52807))))

(assert (=> b!80890 (= res!42103 (= (getValueByKey!136 (toList!734 lt!37751) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!80891 () Bool)

(assert (=> b!80891 (= e!52807 (contains!745 (toList!734 lt!37751) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19791 res!42104) b!80890))

(assert (= (and b!80890 res!42103) b!80891))

(declare-fun m!82525 () Bool)

(assert (=> d!19791 m!82525))

(declare-fun m!82527 () Bool)

(assert (=> d!19791 m!82527))

(declare-fun m!82529 () Bool)

(assert (=> d!19791 m!82529))

(declare-fun m!82531 () Bool)

(assert (=> d!19791 m!82531))

(declare-fun m!82533 () Bool)

(assert (=> b!80890 m!82533))

(declare-fun m!82535 () Bool)

(assert (=> b!80891 m!82535))

(assert (=> d!19587 d!19791))

(declare-fun d!19793 () Bool)

(declare-fun e!52808 () Bool)

(assert (=> d!19793 e!52808))

(declare-fun res!42106 () Bool)

(assert (=> d!19793 (=> (not res!42106) (not e!52808))))

(declare-fun lt!37755 () ListLongMap!1437)

(assert (=> d!19793 (= res!42106 (contains!742 lt!37755 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun lt!37754 () List!1514)

(assert (=> d!19793 (= lt!37755 (ListLongMap!1438 lt!37754))))

(declare-fun lt!37753 () Unit!2327)

(declare-fun lt!37752 () Unit!2327)

(assert (=> d!19793 (= lt!37753 lt!37752)))

(assert (=> d!19793 (= (getValueByKey!136 lt!37754 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19793 (= lt!37752 (lemmaContainsTupThenGetReturnValue!56 lt!37754 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19793 (= lt!37754 (insertStrictlySorted!59 (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19793 (= (+!104 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) lt!37755)))

(declare-fun b!80892 () Bool)

(declare-fun res!42105 () Bool)

(assert (=> b!80892 (=> (not res!42105) (not e!52808))))

(assert (=> b!80892 (= res!42105 (= (getValueByKey!136 (toList!734 lt!37755) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!80893 () Bool)

(assert (=> b!80893 (= e!52808 (contains!745 (toList!734 lt!37755) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (= (and d!19793 res!42106) b!80892))

(assert (= (and b!80892 res!42105) b!80893))

(declare-fun m!82537 () Bool)

(assert (=> d!19793 m!82537))

(declare-fun m!82539 () Bool)

(assert (=> d!19793 m!82539))

(declare-fun m!82541 () Bool)

(assert (=> d!19793 m!82541))

(declare-fun m!82543 () Bool)

(assert (=> d!19793 m!82543))

(declare-fun m!82545 () Bool)

(assert (=> b!80892 m!82545))

(declare-fun m!82547 () Bool)

(assert (=> b!80893 m!82547))

(assert (=> d!19587 d!19793))

(declare-fun d!19795 () Bool)

(declare-fun e!52809 () Bool)

(assert (=> d!19795 e!52809))

(declare-fun res!42108 () Bool)

(assert (=> d!19795 (=> (not res!42108) (not e!52809))))

(declare-fun lt!37759 () ListLongMap!1437)

(assert (=> d!19795 (= res!42108 (contains!742 lt!37759 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!37758 () List!1514)

(assert (=> d!19795 (= lt!37759 (ListLongMap!1438 lt!37758))))

(declare-fun lt!37757 () Unit!2327)

(declare-fun lt!37756 () Unit!2327)

(assert (=> d!19795 (= lt!37757 lt!37756)))

(assert (=> d!19795 (= (getValueByKey!136 lt!37758 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19795 (= lt!37756 (lemmaContainsTupThenGetReturnValue!56 lt!37758 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19795 (= lt!37758 (insertStrictlySorted!59 (toList!734 lt!37071) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19795 (= (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37759)))

(declare-fun b!80894 () Bool)

(declare-fun res!42107 () Bool)

(assert (=> b!80894 (=> (not res!42107) (not e!52809))))

(assert (=> b!80894 (= res!42107 (= (getValueByKey!136 (toList!734 lt!37759) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!80895 () Bool)

(assert (=> b!80895 (= e!52809 (contains!745 (toList!734 lt!37759) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19795 res!42108) b!80894))

(assert (= (and b!80894 res!42107) b!80895))

(declare-fun m!82549 () Bool)

(assert (=> d!19795 m!82549))

(declare-fun m!82551 () Bool)

(assert (=> d!19795 m!82551))

(declare-fun m!82553 () Bool)

(assert (=> d!19795 m!82553))

(declare-fun m!82555 () Bool)

(assert (=> d!19795 m!82555))

(declare-fun m!82557 () Bool)

(assert (=> b!80894 m!82557))

(declare-fun m!82559 () Bool)

(assert (=> b!80895 m!82559))

(assert (=> d!19587 d!19795))

(declare-fun d!19797 () Bool)

(declare-fun e!52810 () Bool)

(assert (=> d!19797 e!52810))

(declare-fun res!42110 () Bool)

(assert (=> d!19797 (=> (not res!42110) (not e!52810))))

(declare-fun lt!37763 () ListLongMap!1437)

(assert (=> d!19797 (= res!42110 (contains!742 lt!37763 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun lt!37762 () List!1514)

(assert (=> d!19797 (= lt!37763 (ListLongMap!1438 lt!37762))))

(declare-fun lt!37761 () Unit!2327)

(declare-fun lt!37760 () Unit!2327)

(assert (=> d!19797 (= lt!37761 lt!37760)))

(assert (=> d!19797 (= (getValueByKey!136 lt!37762 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19797 (= lt!37760 (lemmaContainsTupThenGetReturnValue!56 lt!37762 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19797 (= lt!37762 (insertStrictlySorted!59 (toList!734 lt!37071) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19797 (= (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) lt!37763)))

(declare-fun b!80896 () Bool)

(declare-fun res!42109 () Bool)

(assert (=> b!80896 (=> (not res!42109) (not e!52810))))

(assert (=> b!80896 (= res!42109 (= (getValueByKey!136 (toList!734 lt!37763) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!80897 () Bool)

(assert (=> b!80897 (= e!52810 (contains!745 (toList!734 lt!37763) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (= (and d!19797 res!42110) b!80896))

(assert (= (and b!80896 res!42109) b!80897))

(declare-fun m!82561 () Bool)

(assert (=> d!19797 m!82561))

(declare-fun m!82563 () Bool)

(assert (=> d!19797 m!82563))

(declare-fun m!82565 () Bool)

(assert (=> d!19797 m!82565))

(declare-fun m!82567 () Bool)

(assert (=> d!19797 m!82567))

(declare-fun m!82569 () Bool)

(assert (=> b!80896 m!82569))

(declare-fun m!82571 () Bool)

(assert (=> b!80897 m!82571))

(assert (=> d!19587 d!19797))

(declare-fun d!19799 () Bool)

(assert (=> d!19799 (= (+!104 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (+!104 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (=> d!19799 true))

(declare-fun _$28!135 () Unit!2327)

(assert (=> d!19799 (= (choose!475 lt!37071 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) _$28!135)))

(declare-fun bs!3410 () Bool)

(assert (= bs!3410 d!19799))

(assert (=> bs!3410 m!81643))

(assert (=> bs!3410 m!81643))

(assert (=> bs!3410 m!81645))

(assert (=> bs!3410 m!81647))

(assert (=> bs!3410 m!81647))

(assert (=> bs!3410 m!81649))

(assert (=> d!19587 d!19799))

(declare-fun d!19801 () Bool)

(assert (=> d!19801 (= (+!104 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37269 lt!37084 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37766 () Unit!2327)

(declare-fun choose!484 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 V!3001 Int) Unit!2327)

(assert (=> d!19801 (= lt!37766 (choose!484 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) lt!37269 (zeroValue!2188 newMap!16) lt!37084 (minValue!2188 newMap!16) (defaultEntry!2292 newMap!16)))))

(assert (=> d!19801 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19801 (= (lemmaChangeZeroKeyThenAddPairToListMap!29 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) lt!37269 (zeroValue!2188 newMap!16) lt!37084 (minValue!2188 newMap!16) (defaultEntry!2292 newMap!16)) lt!37766)))

(declare-fun bs!3411 () Bool)

(assert (= bs!3411 d!19801))

(declare-fun m!82573 () Bool)

(assert (=> bs!3411 m!82573))

(assert (=> bs!3411 m!81711))

(declare-fun m!82575 () Bool)

(assert (=> bs!3411 m!82575))

(declare-fun m!82577 () Bool)

(assert (=> bs!3411 m!82577))

(assert (=> bs!3411 m!81973))

(assert (=> bs!3411 m!81711))

(assert (=> b!80307 d!19801))

(assert (=> b!80397 d!19693))

(declare-fun b!80901 () Bool)

(declare-fun e!52812 () Option!142)

(assert (=> b!80901 (= e!52812 None!140)))

(declare-fun b!80898 () Bool)

(declare-fun e!52811 () Option!142)

(assert (=> b!80898 (= e!52811 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37301)))))))

(declare-fun b!80900 () Bool)

(assert (=> b!80900 (= e!52812 (getValueByKey!136 (t!5172 (toList!734 lt!37301)) (_1!1102 lt!37082)))))

(declare-fun d!19803 () Bool)

(declare-fun c!12686 () Bool)

(assert (=> d!19803 (= c!12686 (and ((_ is Cons!1510) (toList!734 lt!37301)) (= (_1!1102 (h!2099 (toList!734 lt!37301))) (_1!1102 lt!37082))))))

(assert (=> d!19803 (= (getValueByKey!136 (toList!734 lt!37301) (_1!1102 lt!37082)) e!52811)))

(declare-fun b!80899 () Bool)

(assert (=> b!80899 (= e!52811 e!52812)))

(declare-fun c!12687 () Bool)

(assert (=> b!80899 (= c!12687 (and ((_ is Cons!1510) (toList!734 lt!37301)) (not (= (_1!1102 (h!2099 (toList!734 lt!37301))) (_1!1102 lt!37082)))))))

(assert (= (and d!19803 c!12686) b!80898))

(assert (= (and d!19803 (not c!12686)) b!80899))

(assert (= (and b!80899 c!12687) b!80900))

(assert (= (and b!80899 (not c!12687)) b!80901))

(declare-fun m!82579 () Bool)

(assert (=> b!80900 m!82579))

(assert (=> b!80322 d!19803))

(declare-fun d!19805 () Bool)

(declare-fun res!42111 () Bool)

(declare-fun e!52813 () Bool)

(assert (=> d!19805 (=> res!42111 e!52813)))

(assert (=> d!19805 (= res!42111 (= (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!19805 (= (arrayContainsKey!0 (_keys!3955 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b00000000000000000000000000000000) e!52813)))

(declare-fun b!80902 () Bool)

(declare-fun e!52814 () Bool)

(assert (=> b!80902 (= e!52813 e!52814)))

(declare-fun res!42112 () Bool)

(assert (=> b!80902 (=> (not res!42112) (not e!52814))))

(assert (=> b!80902 (= res!42112 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80903 () Bool)

(assert (=> b!80903 (= e!52814 (arrayContainsKey!0 (_keys!3955 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!19805 (not res!42111)) b!80902))

(assert (= (and b!80902 res!42112) b!80903))

(assert (=> d!19805 m!82131))

(assert (=> b!80903 m!81295))

(declare-fun m!82581 () Bool)

(assert (=> b!80903 m!82581))

(assert (=> bm!7423 d!19805))

(declare-fun d!19807 () Bool)

(assert (=> d!19807 (= (apply!80 lt!37406 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1187 (getValueByKey!136 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3412 () Bool)

(assert (= bs!3412 d!19807))

(assert (=> bs!3412 m!81625))

(declare-fun m!82583 () Bool)

(assert (=> bs!3412 m!82583))

(assert (=> bs!3412 m!82583))

(declare-fun m!82585 () Bool)

(assert (=> bs!3412 m!82585))

(assert (=> b!80456 d!19807))

(assert (=> b!80456 d!19729))

(declare-fun b!80904 () Bool)

(declare-fun e!52822 () Bool)

(assert (=> b!80904 (= e!52822 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80905 () Bool)

(declare-fun e!52815 () Unit!2327)

(declare-fun lt!37772 () Unit!2327)

(assert (=> b!80905 (= e!52815 lt!37772)))

(declare-fun lt!37780 () ListLongMap!1437)

(assert (=> b!80905 (= lt!37780 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37775 () (_ BitVec 64))

(assert (=> b!80905 (= lt!37775 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37768 () (_ BitVec 64))

(assert (=> b!80905 (= lt!37768 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37784 () Unit!2327)

(assert (=> b!80905 (= lt!37784 (addStillContains!56 lt!37780 lt!37775 (zeroValue!2188 newMap!16) lt!37768))))

(assert (=> b!80905 (contains!742 (+!104 lt!37780 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16))) lt!37768)))

(declare-fun lt!37787 () Unit!2327)

(assert (=> b!80905 (= lt!37787 lt!37784)))

(declare-fun lt!37776 () ListLongMap!1437)

(assert (=> b!80905 (= lt!37776 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37767 () (_ BitVec 64))

(assert (=> b!80905 (= lt!37767 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37788 () (_ BitVec 64))

(assert (=> b!80905 (= lt!37788 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37774 () Unit!2327)

(assert (=> b!80905 (= lt!37774 (addApplyDifferent!56 lt!37776 lt!37767 (minValue!2188 newMap!16) lt!37788))))

(assert (=> b!80905 (= (apply!80 (+!104 lt!37776 (tuple2!2183 lt!37767 (minValue!2188 newMap!16))) lt!37788) (apply!80 lt!37776 lt!37788))))

(declare-fun lt!37785 () Unit!2327)

(assert (=> b!80905 (= lt!37785 lt!37774)))

(declare-fun lt!37771 () ListLongMap!1437)

(assert (=> b!80905 (= lt!37771 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37778 () (_ BitVec 64))

(assert (=> b!80905 (= lt!37778 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37777 () (_ BitVec 64))

(assert (=> b!80905 (= lt!37777 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37786 () Unit!2327)

(assert (=> b!80905 (= lt!37786 (addApplyDifferent!56 lt!37771 lt!37778 (zeroValue!2188 newMap!16) lt!37777))))

(assert (=> b!80905 (= (apply!80 (+!104 lt!37771 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16))) lt!37777) (apply!80 lt!37771 lt!37777))))

(declare-fun lt!37783 () Unit!2327)

(assert (=> b!80905 (= lt!37783 lt!37786)))

(declare-fun lt!37781 () ListLongMap!1437)

(assert (=> b!80905 (= lt!37781 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37782 () (_ BitVec 64))

(assert (=> b!80905 (= lt!37782 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37779 () (_ BitVec 64))

(assert (=> b!80905 (= lt!37779 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80905 (= lt!37772 (addApplyDifferent!56 lt!37781 lt!37782 (minValue!2188 newMap!16) lt!37779))))

(assert (=> b!80905 (= (apply!80 (+!104 lt!37781 (tuple2!2183 lt!37782 (minValue!2188 newMap!16))) lt!37779) (apply!80 lt!37781 lt!37779))))

(declare-fun b!80906 () Bool)

(declare-fun e!52821 () ListLongMap!1437)

(declare-fun call!7539 () ListLongMap!1437)

(assert (=> b!80906 (= e!52821 call!7539)))

(declare-fun bm!7534 () Bool)

(declare-fun call!7538 () ListLongMap!1437)

(declare-fun call!7537 () ListLongMap!1437)

(assert (=> bm!7534 (= call!7538 call!7537)))

(declare-fun bm!7535 () Bool)

(declare-fun call!7541 () Bool)

(declare-fun lt!37769 () ListLongMap!1437)

(assert (=> bm!7535 (= call!7541 (contains!742 lt!37769 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80907 () Bool)

(declare-fun e!52819 () Bool)

(declare-fun call!7543 () Bool)

(assert (=> b!80907 (= e!52819 (not call!7543))))

(declare-fun b!80908 () Bool)

(declare-fun e!52824 () Bool)

(assert (=> b!80908 (= e!52824 (not call!7541))))

(declare-fun b!80909 () Bool)

(declare-fun e!52818 () ListLongMap!1437)

(declare-fun call!7542 () ListLongMap!1437)

(assert (=> b!80909 (= e!52818 (+!104 call!7542 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun d!19809 () Bool)

(declare-fun e!52826 () Bool)

(assert (=> d!19809 e!52826))

(declare-fun res!42117 () Bool)

(assert (=> d!19809 (=> (not res!42117) (not e!52826))))

(assert (=> d!19809 (= res!42117 (or (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))))

(declare-fun lt!37773 () ListLongMap!1437)

(assert (=> d!19809 (= lt!37769 lt!37773)))

(declare-fun lt!37770 () Unit!2327)

(assert (=> d!19809 (= lt!37770 e!52815)))

(declare-fun c!12689 () Bool)

(assert (=> d!19809 (= c!12689 e!52822)))

(declare-fun res!42114 () Bool)

(assert (=> d!19809 (=> (not res!42114) (not e!52822))))

(assert (=> d!19809 (= res!42114 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19809 (= lt!37773 e!52818)))

(declare-fun c!12691 () Bool)

(assert (=> d!19809 (= c!12691 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19809 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19809 (= (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!37769)))

(declare-fun bm!7536 () Bool)

(assert (=> bm!7536 (= call!7543 (contains!742 lt!37769 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7537 () Bool)

(assert (=> bm!7537 (= call!7539 call!7538)))

(declare-fun b!80910 () Bool)

(declare-fun e!52825 () Bool)

(assert (=> b!80910 (= e!52825 (= (apply!80 lt!37769 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80910 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (_values!2275 newMap!16))))))

(assert (=> b!80910 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80911 () Bool)

(declare-fun res!42115 () Bool)

(assert (=> b!80911 (=> (not res!42115) (not e!52826))))

(declare-fun e!52817 () Bool)

(assert (=> b!80911 (= res!42115 e!52817)))

(declare-fun res!42118 () Bool)

(assert (=> b!80911 (=> res!42118 e!52817)))

(declare-fun e!52827 () Bool)

(assert (=> b!80911 (= res!42118 (not e!52827))))

(declare-fun res!42113 () Bool)

(assert (=> b!80911 (=> (not res!42113) (not e!52827))))

(assert (=> b!80911 (= res!42113 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80912 () Bool)

(declare-fun e!52820 () Bool)

(assert (=> b!80912 (= e!52820 (= (apply!80 lt!37769 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun b!80913 () Bool)

(assert (=> b!80913 (= e!52827 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7538 () Bool)

(declare-fun call!7540 () ListLongMap!1437)

(assert (=> bm!7538 (= call!7540 call!7542)))

(declare-fun b!80914 () Bool)

(assert (=> b!80914 (= e!52824 e!52820)))

(declare-fun res!42121 () Bool)

(assert (=> b!80914 (= res!42121 call!7541)))

(assert (=> b!80914 (=> (not res!42121) (not e!52820))))

(declare-fun b!80915 () Bool)

(assert (=> b!80915 (= e!52821 call!7540)))

(declare-fun b!80916 () Bool)

(assert (=> b!80916 (= e!52826 e!52824)))

(declare-fun c!12688 () Bool)

(assert (=> b!80916 (= c!12688 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80917 () Bool)

(assert (=> b!80917 (= e!52817 e!52825)))

(declare-fun res!42116 () Bool)

(assert (=> b!80917 (=> (not res!42116) (not e!52825))))

(assert (=> b!80917 (= res!42116 (contains!742 lt!37769 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80917 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80918 () Bool)

(declare-fun res!42119 () Bool)

(assert (=> b!80918 (=> (not res!42119) (not e!52826))))

(assert (=> b!80918 (= res!42119 e!52819)))

(declare-fun c!12692 () Bool)

(assert (=> b!80918 (= c!12692 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80919 () Bool)

(declare-fun e!52816 () ListLongMap!1437)

(assert (=> b!80919 (= e!52816 call!7540)))

(declare-fun b!80920 () Bool)

(declare-fun c!12690 () Bool)

(assert (=> b!80920 (= c!12690 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!80920 (= e!52816 e!52821)))

(declare-fun c!12693 () Bool)

(declare-fun bm!7539 () Bool)

(assert (=> bm!7539 (= call!7542 (+!104 (ite c!12691 call!7537 (ite c!12693 call!7538 call!7539)) (ite (or c!12691 c!12693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7540 () Bool)

(assert (=> bm!7540 (= call!7537 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!80921 () Bool)

(declare-fun e!52823 () Bool)

(assert (=> b!80921 (= e!52819 e!52823)))

(declare-fun res!42120 () Bool)

(assert (=> b!80921 (= res!42120 call!7543)))

(assert (=> b!80921 (=> (not res!42120) (not e!52823))))

(declare-fun b!80922 () Bool)

(assert (=> b!80922 (= e!52818 e!52816)))

(assert (=> b!80922 (= c!12693 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80923 () Bool)

(assert (=> b!80923 (= e!52823 (= (apply!80 lt!37769 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!80924 () Bool)

(declare-fun Unit!2359 () Unit!2327)

(assert (=> b!80924 (= e!52815 Unit!2359)))

(assert (= (and d!19809 c!12691) b!80909))

(assert (= (and d!19809 (not c!12691)) b!80922))

(assert (= (and b!80922 c!12693) b!80919))

(assert (= (and b!80922 (not c!12693)) b!80920))

(assert (= (and b!80920 c!12690) b!80915))

(assert (= (and b!80920 (not c!12690)) b!80906))

(assert (= (or b!80915 b!80906) bm!7537))

(assert (= (or b!80919 bm!7537) bm!7534))

(assert (= (or b!80919 b!80915) bm!7538))

(assert (= (or b!80909 bm!7534) bm!7540))

(assert (= (or b!80909 bm!7538) bm!7539))

(assert (= (and d!19809 res!42114) b!80904))

(assert (= (and d!19809 c!12689) b!80905))

(assert (= (and d!19809 (not c!12689)) b!80924))

(assert (= (and d!19809 res!42117) b!80911))

(assert (= (and b!80911 res!42113) b!80913))

(assert (= (and b!80911 (not res!42118)) b!80917))

(assert (= (and b!80917 res!42116) b!80910))

(assert (= (and b!80911 res!42115) b!80918))

(assert (= (and b!80918 c!12692) b!80921))

(assert (= (and b!80918 (not c!12692)) b!80907))

(assert (= (and b!80921 res!42120) b!80923))

(assert (= (or b!80921 b!80907) bm!7536))

(assert (= (and b!80918 res!42119) b!80916))

(assert (= (and b!80916 c!12688) b!80914))

(assert (= (and b!80916 (not c!12688)) b!80908))

(assert (= (and b!80914 res!42121) b!80912))

(assert (= (or b!80914 b!80908) bm!7535))

(declare-fun b_lambda!3597 () Bool)

(assert (=> (not b_lambda!3597) (not b!80910)))

(assert (=> b!80910 t!5186))

(declare-fun b_and!4933 () Bool)

(assert (= b_and!4929 (and (=> t!5186 result!2849) b_and!4933)))

(assert (=> b!80910 t!5188))

(declare-fun b_and!4935 () Bool)

(assert (= b_and!4931 (and (=> t!5188 result!2851) b_and!4935)))

(assert (=> b!80910 m!82131))

(declare-fun m!82587 () Bool)

(assert (=> b!80910 m!82587))

(assert (=> b!80910 m!82131))

(assert (=> b!80910 m!82333))

(assert (=> b!80910 m!82333))

(assert (=> b!80910 m!82137))

(assert (=> b!80910 m!82335))

(assert (=> b!80910 m!82137))

(declare-fun m!82589 () Bool)

(assert (=> bm!7536 m!82589))

(assert (=> b!80913 m!82131))

(assert (=> b!80913 m!82131))

(assert (=> b!80913 m!82143))

(declare-fun m!82591 () Bool)

(assert (=> b!80905 m!82591))

(declare-fun m!82593 () Bool)

(assert (=> b!80905 m!82593))

(declare-fun m!82595 () Bool)

(assert (=> b!80905 m!82595))

(declare-fun m!82597 () Bool)

(assert (=> b!80905 m!82597))

(declare-fun m!82599 () Bool)

(assert (=> b!80905 m!82599))

(declare-fun m!82601 () Bool)

(assert (=> b!80905 m!82601))

(declare-fun m!82603 () Bool)

(assert (=> b!80905 m!82603))

(declare-fun m!82605 () Bool)

(assert (=> b!80905 m!82605))

(declare-fun m!82607 () Bool)

(assert (=> b!80905 m!82607))

(declare-fun m!82609 () Bool)

(assert (=> b!80905 m!82609))

(declare-fun m!82611 () Bool)

(assert (=> b!80905 m!82611))

(declare-fun m!82613 () Bool)

(assert (=> b!80905 m!82613))

(declare-fun m!82615 () Bool)

(assert (=> b!80905 m!82615))

(assert (=> b!80905 m!82597))

(assert (=> b!80905 m!82607))

(assert (=> b!80905 m!82131))

(declare-fun m!82617 () Bool)

(assert (=> b!80905 m!82617))

(assert (=> b!80905 m!82601))

(declare-fun m!82619 () Bool)

(assert (=> b!80905 m!82619))

(assert (=> b!80905 m!82613))

(declare-fun m!82621 () Bool)

(assert (=> b!80905 m!82621))

(assert (=> b!80917 m!82131))

(assert (=> b!80917 m!82131))

(declare-fun m!82623 () Bool)

(assert (=> b!80917 m!82623))

(declare-fun m!82625 () Bool)

(assert (=> b!80909 m!82625))

(declare-fun m!82627 () Bool)

(assert (=> bm!7535 m!82627))

(declare-fun m!82629 () Bool)

(assert (=> b!80912 m!82629))

(assert (=> bm!7540 m!82593))

(declare-fun m!82631 () Bool)

(assert (=> bm!7539 m!82631))

(declare-fun m!82633 () Bool)

(assert (=> b!80923 m!82633))

(assert (=> b!80904 m!82131))

(assert (=> b!80904 m!82131))

(assert (=> b!80904 m!82143))

(assert (=> d!19809 m!81973))

(assert (=> d!19617 d!19809))

(declare-fun d!19811 () Bool)

(declare-fun e!52828 () Bool)

(assert (=> d!19811 e!52828))

(declare-fun res!42122 () Bool)

(assert (=> d!19811 (=> res!42122 e!52828)))

(declare-fun lt!37792 () Bool)

(assert (=> d!19811 (= res!42122 (not lt!37792))))

(declare-fun lt!37791 () Bool)

(assert (=> d!19811 (= lt!37792 lt!37791)))

(declare-fun lt!37790 () Unit!2327)

(declare-fun e!52829 () Unit!2327)

(assert (=> d!19811 (= lt!37790 e!52829)))

(declare-fun c!12694 () Bool)

(assert (=> d!19811 (= c!12694 lt!37791)))

(assert (=> d!19811 (= lt!37791 (containsKey!140 (toList!734 lt!37316) (_1!1102 lt!37082)))))

(assert (=> d!19811 (= (contains!742 lt!37316 (_1!1102 lt!37082)) lt!37792)))

(declare-fun b!80925 () Bool)

(declare-fun lt!37789 () Unit!2327)

(assert (=> b!80925 (= e!52829 lt!37789)))

(assert (=> b!80925 (= lt!37789 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37316) (_1!1102 lt!37082)))))

(assert (=> b!80925 (isDefined!90 (getValueByKey!136 (toList!734 lt!37316) (_1!1102 lt!37082)))))

(declare-fun b!80926 () Bool)

(declare-fun Unit!2360 () Unit!2327)

(assert (=> b!80926 (= e!52829 Unit!2360)))

(declare-fun b!80927 () Bool)

(assert (=> b!80927 (= e!52828 (isDefined!90 (getValueByKey!136 (toList!734 lt!37316) (_1!1102 lt!37082))))))

(assert (= (and d!19811 c!12694) b!80925))

(assert (= (and d!19811 (not c!12694)) b!80926))

(assert (= (and d!19811 (not res!42122)) b!80927))

(declare-fun m!82635 () Bool)

(assert (=> d!19811 m!82635))

(declare-fun m!82637 () Bool)

(assert (=> b!80925 m!82637))

(assert (=> b!80925 m!81609))

(assert (=> b!80925 m!81609))

(declare-fun m!82639 () Bool)

(assert (=> b!80925 m!82639))

(assert (=> b!80927 m!81609))

(assert (=> b!80927 m!81609))

(assert (=> b!80927 m!82639))

(assert (=> d!19581 d!19811))

(declare-fun b!80931 () Bool)

(declare-fun e!52831 () Option!142)

(assert (=> b!80931 (= e!52831 None!140)))

(declare-fun b!80928 () Bool)

(declare-fun e!52830 () Option!142)

(assert (=> b!80928 (= e!52830 (Some!141 (_2!1102 (h!2099 lt!37315))))))

(declare-fun b!80930 () Bool)

(assert (=> b!80930 (= e!52831 (getValueByKey!136 (t!5172 lt!37315) (_1!1102 lt!37082)))))

(declare-fun d!19813 () Bool)

(declare-fun c!12695 () Bool)

(assert (=> d!19813 (= c!12695 (and ((_ is Cons!1510) lt!37315) (= (_1!1102 (h!2099 lt!37315)) (_1!1102 lt!37082))))))

(assert (=> d!19813 (= (getValueByKey!136 lt!37315 (_1!1102 lt!37082)) e!52830)))

(declare-fun b!80929 () Bool)

(assert (=> b!80929 (= e!52830 e!52831)))

(declare-fun c!12696 () Bool)

(assert (=> b!80929 (= c!12696 (and ((_ is Cons!1510) lt!37315) (not (= (_1!1102 (h!2099 lt!37315)) (_1!1102 lt!37082)))))))

(assert (= (and d!19813 c!12695) b!80928))

(assert (= (and d!19813 (not c!12695)) b!80929))

(assert (= (and b!80929 c!12696) b!80930))

(assert (= (and b!80929 (not c!12696)) b!80931))

(declare-fun m!82641 () Bool)

(assert (=> b!80930 m!82641))

(assert (=> d!19581 d!19813))

(declare-fun d!19815 () Bool)

(assert (=> d!19815 (= (getValueByKey!136 lt!37315 (_1!1102 lt!37082)) (Some!141 (_2!1102 lt!37082)))))

(declare-fun lt!37793 () Unit!2327)

(assert (=> d!19815 (= lt!37793 (choose!477 lt!37315 (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(declare-fun e!52832 () Bool)

(assert (=> d!19815 e!52832))

(declare-fun res!42123 () Bool)

(assert (=> d!19815 (=> (not res!42123) (not e!52832))))

(assert (=> d!19815 (= res!42123 (isStrictlySorted!291 lt!37315))))

(assert (=> d!19815 (= (lemmaContainsTupThenGetReturnValue!56 lt!37315 (_1!1102 lt!37082) (_2!1102 lt!37082)) lt!37793)))

(declare-fun b!80932 () Bool)

(declare-fun res!42124 () Bool)

(assert (=> b!80932 (=> (not res!42124) (not e!52832))))

(assert (=> b!80932 (= res!42124 (containsKey!140 lt!37315 (_1!1102 lt!37082)))))

(declare-fun b!80933 () Bool)

(assert (=> b!80933 (= e!52832 (contains!745 lt!37315 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(assert (= (and d!19815 res!42123) b!80932))

(assert (= (and b!80932 res!42124) b!80933))

(assert (=> d!19815 m!81603))

(declare-fun m!82643 () Bool)

(assert (=> d!19815 m!82643))

(declare-fun m!82645 () Bool)

(assert (=> d!19815 m!82645))

(declare-fun m!82647 () Bool)

(assert (=> b!80932 m!82647))

(declare-fun m!82649 () Bool)

(assert (=> b!80933 m!82649))

(assert (=> d!19581 d!19815))

(declare-fun b!80934 () Bool)

(declare-fun e!52836 () List!1514)

(declare-fun call!7546 () List!1514)

(assert (=> b!80934 (= e!52836 call!7546)))

(declare-fun e!52833 () List!1514)

(declare-fun bm!7541 () Bool)

(declare-fun c!12700 () Bool)

(declare-fun call!7545 () List!1514)

(assert (=> bm!7541 (= call!7545 ($colon$colon!69 e!52833 (ite c!12700 (h!2099 (toList!734 lt!37073)) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082)))))))

(declare-fun c!12698 () Bool)

(assert (=> bm!7541 (= c!12698 c!12700)))

(declare-fun b!80935 () Bool)

(declare-fun e!52837 () Bool)

(declare-fun lt!37794 () List!1514)

(assert (=> b!80935 (= e!52837 (contains!745 lt!37794 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun bm!7542 () Bool)

(declare-fun call!7544 () List!1514)

(assert (=> bm!7542 (= call!7546 call!7544)))

(declare-fun d!19817 () Bool)

(assert (=> d!19817 e!52837))

(declare-fun res!42126 () Bool)

(assert (=> d!19817 (=> (not res!42126) (not e!52837))))

(assert (=> d!19817 (= res!42126 (isStrictlySorted!291 lt!37794))))

(declare-fun e!52835 () List!1514)

(assert (=> d!19817 (= lt!37794 e!52835)))

(assert (=> d!19817 (= c!12700 (and ((_ is Cons!1510) (toList!734 lt!37073)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 lt!37082))))))

(assert (=> d!19817 (isStrictlySorted!291 (toList!734 lt!37073))))

(assert (=> d!19817 (= (insertStrictlySorted!59 (toList!734 lt!37073) (_1!1102 lt!37082) (_2!1102 lt!37082)) lt!37794)))

(declare-fun b!80936 () Bool)

(declare-fun c!12697 () Bool)

(assert (=> b!80936 (= c!12697 (and ((_ is Cons!1510) (toList!734 lt!37073)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 lt!37082))))))

(declare-fun e!52834 () List!1514)

(assert (=> b!80936 (= e!52834 e!52836)))

(declare-fun b!80937 () Bool)

(assert (=> b!80937 (= e!52834 call!7544)))

(declare-fun b!80938 () Bool)

(assert (=> b!80938 (= e!52835 call!7545)))

(declare-fun bm!7543 () Bool)

(assert (=> bm!7543 (= call!7544 call!7545)))

(declare-fun b!80939 () Bool)

(declare-fun res!42125 () Bool)

(assert (=> b!80939 (=> (not res!42125) (not e!52837))))

(assert (=> b!80939 (= res!42125 (containsKey!140 lt!37794 (_1!1102 lt!37082)))))

(declare-fun b!80940 () Bool)

(assert (=> b!80940 (= e!52836 call!7546)))

(declare-fun c!12699 () Bool)

(declare-fun b!80941 () Bool)

(assert (=> b!80941 (= e!52833 (ite c!12699 (t!5172 (toList!734 lt!37073)) (ite c!12697 (Cons!1510 (h!2099 (toList!734 lt!37073)) (t!5172 (toList!734 lt!37073))) Nil!1511)))))

(declare-fun b!80942 () Bool)

(assert (=> b!80942 (= e!52835 e!52834)))

(assert (=> b!80942 (= c!12699 (and ((_ is Cons!1510) (toList!734 lt!37073)) (= (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 lt!37082))))))

(declare-fun b!80943 () Bool)

(assert (=> b!80943 (= e!52833 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37073)) (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(assert (= (and d!19817 c!12700) b!80938))

(assert (= (and d!19817 (not c!12700)) b!80942))

(assert (= (and b!80942 c!12699) b!80937))

(assert (= (and b!80942 (not c!12699)) b!80936))

(assert (= (and b!80936 c!12697) b!80940))

(assert (= (and b!80936 (not c!12697)) b!80934))

(assert (= (or b!80940 b!80934) bm!7542))

(assert (= (or b!80937 bm!7542) bm!7543))

(assert (= (or b!80938 bm!7543) bm!7541))

(assert (= (and bm!7541 c!12698) b!80943))

(assert (= (and bm!7541 (not c!12698)) b!80941))

(assert (= (and d!19817 res!42126) b!80939))

(assert (= (and b!80939 res!42125) b!80935))

(declare-fun m!82651 () Bool)

(assert (=> d!19817 m!82651))

(assert (=> d!19817 m!81953))

(declare-fun m!82653 () Bool)

(assert (=> b!80943 m!82653))

(declare-fun m!82655 () Bool)

(assert (=> bm!7541 m!82655))

(declare-fun m!82657 () Bool)

(assert (=> b!80939 m!82657))

(declare-fun m!82659 () Bool)

(assert (=> b!80935 m!82659))

(assert (=> d!19581 d!19817))

(declare-fun d!19819 () Bool)

(declare-fun lt!37795 () Bool)

(assert (=> d!19819 (= lt!37795 (select (content!86 (toList!734 lt!37346)) lt!37075))))

(declare-fun e!52838 () Bool)

(assert (=> d!19819 (= lt!37795 e!52838)))

(declare-fun res!42128 () Bool)

(assert (=> d!19819 (=> (not res!42128) (not e!52838))))

(assert (=> d!19819 (= res!42128 ((_ is Cons!1510) (toList!734 lt!37346)))))

(assert (=> d!19819 (= (contains!745 (toList!734 lt!37346) lt!37075) lt!37795)))

(declare-fun b!80944 () Bool)

(declare-fun e!52839 () Bool)

(assert (=> b!80944 (= e!52838 e!52839)))

(declare-fun res!42127 () Bool)

(assert (=> b!80944 (=> res!42127 e!52839)))

(assert (=> b!80944 (= res!42127 (= (h!2099 (toList!734 lt!37346)) lt!37075))))

(declare-fun b!80945 () Bool)

(assert (=> b!80945 (= e!52839 (contains!745 (t!5172 (toList!734 lt!37346)) lt!37075))))

(assert (= (and d!19819 res!42128) b!80944))

(assert (= (and b!80944 (not res!42127)) b!80945))

(declare-fun m!82661 () Bool)

(assert (=> d!19819 m!82661))

(declare-fun m!82663 () Bool)

(assert (=> d!19819 m!82663))

(declare-fun m!82665 () Bool)

(assert (=> b!80945 m!82665))

(assert (=> b!80369 d!19819))

(declare-fun b!80949 () Bool)

(declare-fun e!52841 () Option!142)

(assert (=> b!80949 (= e!52841 None!140)))

(declare-fun b!80946 () Bool)

(declare-fun e!52840 () Option!142)

(assert (=> b!80946 (= e!52840 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37305)))))))

(declare-fun b!80948 () Bool)

(assert (=> b!80948 (= e!52841 (getValueByKey!136 (t!5172 (toList!734 lt!37305)) (_1!1102 lt!37075)))))

(declare-fun d!19821 () Bool)

(declare-fun c!12701 () Bool)

(assert (=> d!19821 (= c!12701 (and ((_ is Cons!1510) (toList!734 lt!37305)) (= (_1!1102 (h!2099 (toList!734 lt!37305))) (_1!1102 lt!37075))))))

(assert (=> d!19821 (= (getValueByKey!136 (toList!734 lt!37305) (_1!1102 lt!37075)) e!52840)))

(declare-fun b!80947 () Bool)

(assert (=> b!80947 (= e!52840 e!52841)))

(declare-fun c!12702 () Bool)

(assert (=> b!80947 (= c!12702 (and ((_ is Cons!1510) (toList!734 lt!37305)) (not (= (_1!1102 (h!2099 (toList!734 lt!37305))) (_1!1102 lt!37075)))))))

(assert (= (and d!19821 c!12701) b!80946))

(assert (= (and d!19821 (not c!12701)) b!80947))

(assert (= (and b!80947 c!12702) b!80948))

(assert (= (and b!80947 (not c!12702)) b!80949))

(declare-fun m!82667 () Bool)

(assert (=> b!80948 m!82667))

(assert (=> b!80324 d!19821))

(assert (=> b!80309 d!19767))

(declare-fun d!19823 () Bool)

(assert (=> d!19823 (= (apply!80 lt!37406 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1187 (getValueByKey!136 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3413 () Bool)

(assert (= bs!3413 d!19823))

(assert (=> bs!3413 m!82419))

(assert (=> bs!3413 m!82419))

(declare-fun m!82669 () Bool)

(assert (=> bs!3413 m!82669))

(assert (=> b!80458 d!19823))

(declare-fun d!19825 () Bool)

(declare-fun res!42129 () Bool)

(declare-fun e!52842 () Bool)

(assert (=> d!19825 (=> res!42129 e!52842)))

(assert (=> d!19825 (= res!42129 (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!19825 (= (arrayContainsKey!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!52842)))

(declare-fun b!80950 () Bool)

(declare-fun e!52843 () Bool)

(assert (=> b!80950 (= e!52842 e!52843)))

(declare-fun res!42130 () Bool)

(assert (=> b!80950 (=> (not res!42130) (not e!52843))))

(assert (=> b!80950 (= res!42130 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!80951 () Bool)

(assert (=> b!80951 (= e!52843 (arrayContainsKey!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!19825 (not res!42129)) b!80950))

(assert (= (and b!80950 res!42130) b!80951))

(assert (=> d!19825 m!82201))

(assert (=> b!80951 m!81295))

(declare-fun m!82671 () Bool)

(assert (=> b!80951 m!82671))

(assert (=> b!80377 d!19825))

(declare-fun d!19827 () Bool)

(declare-fun lt!37796 () Bool)

(assert (=> d!19827 (= lt!37796 (select (content!86 (toList!734 lt!37350)) lt!37079))))

(declare-fun e!52844 () Bool)

(assert (=> d!19827 (= lt!37796 e!52844)))

(declare-fun res!42132 () Bool)

(assert (=> d!19827 (=> (not res!42132) (not e!52844))))

(assert (=> d!19827 (= res!42132 ((_ is Cons!1510) (toList!734 lt!37350)))))

(assert (=> d!19827 (= (contains!745 (toList!734 lt!37350) lt!37079) lt!37796)))

(declare-fun b!80952 () Bool)

(declare-fun e!52845 () Bool)

(assert (=> b!80952 (= e!52844 e!52845)))

(declare-fun res!42131 () Bool)

(assert (=> b!80952 (=> res!42131 e!52845)))

(assert (=> b!80952 (= res!42131 (= (h!2099 (toList!734 lt!37350)) lt!37079))))

(declare-fun b!80953 () Bool)

(assert (=> b!80953 (= e!52845 (contains!745 (t!5172 (toList!734 lt!37350)) lt!37079))))

(assert (= (and d!19827 res!42132) b!80952))

(assert (= (and b!80952 (not res!42131)) b!80953))

(declare-fun m!82673 () Bool)

(assert (=> d!19827 m!82673))

(declare-fun m!82675 () Bool)

(assert (=> d!19827 m!82675))

(declare-fun m!82677 () Bool)

(assert (=> b!80953 m!82677))

(assert (=> b!80371 d!19827))

(declare-fun b!80957 () Bool)

(declare-fun e!52847 () Option!142)

(assert (=> b!80957 (= e!52847 None!140)))

(declare-fun b!80954 () Bool)

(declare-fun e!52846 () Option!142)

(assert (=> b!80954 (= e!52846 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37312)))))))

(declare-fun b!80956 () Bool)

(assert (=> b!80956 (= e!52847 (getValueByKey!136 (t!5172 (toList!734 lt!37312)) (_1!1102 lt!37079)))))

(declare-fun d!19829 () Bool)

(declare-fun c!12703 () Bool)

(assert (=> d!19829 (= c!12703 (and ((_ is Cons!1510) (toList!734 lt!37312)) (= (_1!1102 (h!2099 (toList!734 lt!37312))) (_1!1102 lt!37079))))))

(assert (=> d!19829 (= (getValueByKey!136 (toList!734 lt!37312) (_1!1102 lt!37079)) e!52846)))

(declare-fun b!80955 () Bool)

(assert (=> b!80955 (= e!52846 e!52847)))

(declare-fun c!12704 () Bool)

(assert (=> b!80955 (= c!12704 (and ((_ is Cons!1510) (toList!734 lt!37312)) (not (= (_1!1102 (h!2099 (toList!734 lt!37312))) (_1!1102 lt!37079)))))))

(assert (= (and d!19829 c!12703) b!80954))

(assert (= (and d!19829 (not c!12703)) b!80955))

(assert (= (and b!80955 c!12704) b!80956))

(assert (= (and b!80955 (not c!12704)) b!80957))

(declare-fun m!82679 () Bool)

(assert (=> b!80956 m!82679))

(assert (=> b!80326 d!19829))

(declare-fun d!19831 () Bool)

(declare-fun isEmpty!334 (Option!142) Bool)

(assert (=> d!19831 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))))

(declare-fun bs!3414 () Bool)

(assert (= bs!3414 d!19831))

(assert (=> bs!3414 m!81495))

(declare-fun m!82681 () Bool)

(assert (=> bs!3414 m!82681))

(assert (=> b!80197 d!19831))

(declare-fun b!80961 () Bool)

(declare-fun e!52849 () Option!142)

(assert (=> b!80961 (= e!52849 None!140)))

(declare-fun b!80958 () Bool)

(declare-fun e!52848 () Option!142)

(assert (=> b!80958 (= e!52848 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37088)))))))

(declare-fun b!80960 () Bool)

(assert (=> b!80960 (= e!52849 (getValueByKey!136 (t!5172 (toList!734 lt!37088)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun d!19833 () Bool)

(declare-fun c!12705 () Bool)

(assert (=> d!19833 (= c!12705 (and ((_ is Cons!1510) (toList!734 lt!37088)) (= (_1!1102 (h!2099 (toList!734 lt!37088))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (=> d!19833 (= (getValueByKey!136 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) e!52848)))

(declare-fun b!80959 () Bool)

(assert (=> b!80959 (= e!52848 e!52849)))

(declare-fun c!12706 () Bool)

(assert (=> b!80959 (= c!12706 (and ((_ is Cons!1510) (toList!734 lt!37088)) (not (= (_1!1102 (h!2099 (toList!734 lt!37088))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))))

(assert (= (and d!19833 c!12705) b!80958))

(assert (= (and d!19833 (not c!12705)) b!80959))

(assert (= (and b!80959 c!12706) b!80960))

(assert (= (and b!80959 (not c!12706)) b!80961))

(assert (=> b!80960 m!81295))

(declare-fun m!82683 () Bool)

(assert (=> b!80960 m!82683))

(assert (=> b!80197 d!19833))

(declare-fun d!19835 () Bool)

(declare-fun e!52852 () Bool)

(assert (=> d!19835 e!52852))

(declare-fun c!12709 () Bool)

(assert (=> d!19835 (= c!12709 (and (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!19835 true))

(declare-fun _$29!102 () Unit!2327)

(assert (=> d!19835 (= (choose!476 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))) _$29!102)))

(declare-fun b!80966 () Bool)

(assert (=> b!80966 (= e!52852 (arrayContainsKey!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!80967 () Bool)

(assert (=> b!80967 (= e!52852 (ite (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!19835 c!12709) b!80966))

(assert (= (and d!19835 (not c!12709)) b!80967))

(assert (=> b!80966 m!81295))

(assert (=> b!80966 m!81325))

(assert (=> d!19611 d!19835))

(assert (=> d!19611 d!19583))

(declare-fun d!19837 () Bool)

(assert (=> d!19837 (isDefined!90 (getValueByKey!136 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun lt!37799 () Unit!2327)

(declare-fun choose!485 (List!1514 (_ BitVec 64)) Unit!2327)

(assert (=> d!19837 (= lt!37799 (choose!485 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun e!52855 () Bool)

(assert (=> d!19837 e!52855))

(declare-fun res!42135 () Bool)

(assert (=> d!19837 (=> (not res!42135) (not e!52855))))

(assert (=> d!19837 (= res!42135 (isStrictlySorted!291 (toList!734 lt!37088)))))

(assert (=> d!19837 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) lt!37799)))

(declare-fun b!80970 () Bool)

(assert (=> b!80970 (= e!52855 (containsKey!140 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (= (and d!19837 res!42135) b!80970))

(assert (=> d!19837 m!81295))

(assert (=> d!19837 m!81495))

(assert (=> d!19837 m!81495))

(assert (=> d!19837 m!81497))

(assert (=> d!19837 m!81295))

(declare-fun m!82685 () Bool)

(assert (=> d!19837 m!82685))

(declare-fun m!82687 () Bool)

(assert (=> d!19837 m!82687))

(assert (=> b!80970 m!81295))

(assert (=> b!80970 m!81491))

(assert (=> b!80195 d!19837))

(assert (=> b!80195 d!19831))

(assert (=> b!80195 d!19833))

(declare-fun d!19839 () Bool)

(declare-fun e!52856 () Bool)

(assert (=> d!19839 e!52856))

(declare-fun res!42137 () Bool)

(assert (=> d!19839 (=> (not res!42137) (not e!52856))))

(declare-fun lt!37803 () ListLongMap!1437)

(assert (=> d!19839 (= res!42137 (contains!742 lt!37803 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun lt!37802 () List!1514)

(assert (=> d!19839 (= lt!37803 (ListLongMap!1438 lt!37802))))

(declare-fun lt!37801 () Unit!2327)

(declare-fun lt!37800 () Unit!2327)

(assert (=> d!19839 (= lt!37801 lt!37800)))

(assert (=> d!19839 (= (getValueByKey!136 lt!37802 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19839 (= lt!37800 (lemmaContainsTupThenGetReturnValue!56 lt!37802 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19839 (= lt!37802 (insertStrictlySorted!59 (toList!734 call!7442) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19839 (= (+!104 call!7442 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) lt!37803)))

(declare-fun b!80971 () Bool)

(declare-fun res!42136 () Bool)

(assert (=> b!80971 (=> (not res!42136) (not e!52856))))

(assert (=> b!80971 (= res!42136 (= (getValueByKey!136 (toList!734 lt!37803) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!80972 () Bool)

(assert (=> b!80972 (= e!52856 (contains!745 (toList!734 lt!37803) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (= (and d!19839 res!42137) b!80971))

(assert (= (and b!80971 res!42136) b!80972))

(declare-fun m!82689 () Bool)

(assert (=> d!19839 m!82689))

(declare-fun m!82691 () Bool)

(assert (=> d!19839 m!82691))

(declare-fun m!82693 () Bool)

(assert (=> d!19839 m!82693))

(declare-fun m!82695 () Bool)

(assert (=> d!19839 m!82695))

(declare-fun m!82697 () Bool)

(assert (=> b!80971 m!82697))

(declare-fun m!82699 () Bool)

(assert (=> b!80972 m!82699))

(assert (=> b!80311 d!19839))

(declare-fun d!19841 () Bool)

(declare-fun e!52857 () Bool)

(assert (=> d!19841 e!52857))

(declare-fun res!42138 () Bool)

(assert (=> d!19841 (=> res!42138 e!52857)))

(declare-fun lt!37807 () Bool)

(assert (=> d!19841 (= res!42138 (not lt!37807))))

(declare-fun lt!37806 () Bool)

(assert (=> d!19841 (= lt!37807 lt!37806)))

(declare-fun lt!37805 () Unit!2327)

(declare-fun e!52858 () Unit!2327)

(assert (=> d!19841 (= lt!37805 e!52858)))

(declare-fun c!12710 () Bool)

(assert (=> d!19841 (= c!12710 lt!37806)))

(assert (=> d!19841 (= lt!37806 (containsKey!140 (toList!734 call!7438) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!19841 (= (contains!742 call!7438 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) lt!37807)))

(declare-fun b!80973 () Bool)

(declare-fun lt!37804 () Unit!2327)

(assert (=> b!80973 (= e!52858 lt!37804)))

(assert (=> b!80973 (= lt!37804 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 call!7438) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> b!80973 (isDefined!90 (getValueByKey!136 (toList!734 call!7438) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun b!80974 () Bool)

(declare-fun Unit!2361 () Unit!2327)

(assert (=> b!80974 (= e!52858 Unit!2361)))

(declare-fun b!80975 () Bool)

(assert (=> b!80975 (= e!52857 (isDefined!90 (getValueByKey!136 (toList!734 call!7438) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (= (and d!19841 c!12710) b!80973))

(assert (= (and d!19841 (not c!12710)) b!80974))

(assert (= (and d!19841 (not res!42138)) b!80975))

(assert (=> d!19841 m!81295))

(declare-fun m!82701 () Bool)

(assert (=> d!19841 m!82701))

(assert (=> b!80973 m!81295))

(declare-fun m!82703 () Bool)

(assert (=> b!80973 m!82703))

(assert (=> b!80973 m!81295))

(declare-fun m!82705 () Bool)

(assert (=> b!80973 m!82705))

(assert (=> b!80973 m!82705))

(declare-fun m!82707 () Bool)

(assert (=> b!80973 m!82707))

(assert (=> b!80975 m!81295))

(assert (=> b!80975 m!82705))

(assert (=> b!80975 m!82705))

(assert (=> b!80975 m!82707))

(assert (=> b!80296 d!19841))

(declare-fun d!19843 () Bool)

(assert (=> d!19843 (= (get!1185 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) from!355) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2599 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> b!80187 d!19843))

(declare-fun d!19845 () Bool)

(declare-fun e!52859 () Bool)

(assert (=> d!19845 e!52859))

(declare-fun res!42139 () Bool)

(assert (=> d!19845 (=> res!42139 e!52859)))

(declare-fun lt!37811 () Bool)

(assert (=> d!19845 (= res!42139 (not lt!37811))))

(declare-fun lt!37810 () Bool)

(assert (=> d!19845 (= lt!37811 lt!37810)))

(declare-fun lt!37809 () Unit!2327)

(declare-fun e!52860 () Unit!2327)

(assert (=> d!19845 (= lt!37809 e!52860)))

(declare-fun c!12711 () Bool)

(assert (=> d!19845 (= c!12711 lt!37810)))

(assert (=> d!19845 (= lt!37810 (containsKey!140 (toList!734 e!52461) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!19845 (= (contains!742 e!52461 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) lt!37811)))

(declare-fun b!80976 () Bool)

(declare-fun lt!37808 () Unit!2327)

(assert (=> b!80976 (= e!52860 lt!37808)))

(assert (=> b!80976 (= lt!37808 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 e!52461) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> b!80976 (isDefined!90 (getValueByKey!136 (toList!734 e!52461) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun b!80977 () Bool)

(declare-fun Unit!2362 () Unit!2327)

(assert (=> b!80977 (= e!52860 Unit!2362)))

(declare-fun b!80978 () Bool)

(assert (=> b!80978 (= e!52859 (isDefined!90 (getValueByKey!136 (toList!734 e!52461) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (= (and d!19845 c!12711) b!80976))

(assert (= (and d!19845 (not c!12711)) b!80977))

(assert (= (and d!19845 (not res!42139)) b!80978))

(assert (=> d!19845 m!81295))

(declare-fun m!82709 () Bool)

(assert (=> d!19845 m!82709))

(assert (=> b!80976 m!81295))

(declare-fun m!82711 () Bool)

(assert (=> b!80976 m!82711))

(assert (=> b!80976 m!81295))

(declare-fun m!82713 () Bool)

(assert (=> b!80976 m!82713))

(assert (=> b!80976 m!82713))

(declare-fun m!82715 () Bool)

(assert (=> b!80976 m!82715))

(assert (=> b!80978 m!81295))

(assert (=> b!80978 m!82713))

(assert (=> b!80978 m!82713))

(assert (=> b!80978 m!82715))

(assert (=> bm!7439 d!19845))

(declare-fun b!80995 () Bool)

(declare-fun e!52870 () Bool)

(declare-fun lt!37817 () SeekEntryResult!244)

(assert (=> b!80995 (= e!52870 ((_ is Undefined!244) lt!37817))))

(declare-fun b!80996 () Bool)

(declare-fun e!52869 () Bool)

(declare-fun e!52871 () Bool)

(assert (=> b!80996 (= e!52869 e!52871)))

(declare-fun res!42149 () Bool)

(declare-fun call!7552 () Bool)

(assert (=> b!80996 (= res!42149 call!7552)))

(assert (=> b!80996 (=> (not res!42149) (not e!52871))))

(declare-fun c!12717 () Bool)

(declare-fun bm!7548 () Bool)

(assert (=> bm!7548 (= call!7552 (inRange!0 (ite c!12717 (index!3111 lt!37817) (index!3114 lt!37817)) (mask!6297 newMap!16)))))

(declare-fun b!80997 () Bool)

(declare-fun call!7551 () Bool)

(assert (=> b!80997 (= e!52871 (not call!7551))))

(declare-fun b!80998 () Bool)

(declare-fun res!42148 () Bool)

(declare-fun e!52872 () Bool)

(assert (=> b!80998 (=> (not res!42148) (not e!52872))))

(assert (=> b!80998 (= res!42148 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3114 lt!37817)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80998 (and (bvsge (index!3114 lt!37817) #b00000000000000000000000000000000) (bvslt (index!3114 lt!37817) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!80999 () Bool)

(declare-fun res!42150 () Bool)

(assert (=> b!80999 (=> (not res!42150) (not e!52872))))

(assert (=> b!80999 (= res!42150 call!7552)))

(assert (=> b!80999 (= e!52870 e!52872)))

(declare-fun b!81000 () Bool)

(assert (=> b!81000 (= e!52872 (not call!7551))))

(declare-fun bm!7549 () Bool)

(assert (=> bm!7549 (= call!7551 (arrayContainsKey!0 (_keys!3955 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!81001 () Bool)

(assert (=> b!81001 (= e!52869 e!52870)))

(declare-fun c!12716 () Bool)

(assert (=> b!81001 (= c!12716 ((_ is MissingVacant!244) lt!37817))))

(declare-fun d!19847 () Bool)

(assert (=> d!19847 e!52869))

(assert (=> d!19847 (= c!12717 ((_ is MissingZero!244) lt!37817))))

(assert (=> d!19847 (= lt!37817 (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(declare-fun lt!37816 () Unit!2327)

(declare-fun choose!486 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) Int) Unit!2327)

(assert (=> d!19847 (= lt!37816 (choose!486 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)))))

(assert (=> d!19847 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19847 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)) lt!37816)))

(declare-fun b!81002 () Bool)

(assert (=> b!81002 (and (bvsge (index!3111 lt!37817) #b00000000000000000000000000000000) (bvslt (index!3111 lt!37817) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun res!42151 () Bool)

(assert (=> b!81002 (= res!42151 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3111 lt!37817)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81002 (=> (not res!42151) (not e!52871))))

(assert (= (and d!19847 c!12717) b!80996))

(assert (= (and d!19847 (not c!12717)) b!81001))

(assert (= (and b!80996 res!42149) b!81002))

(assert (= (and b!81002 res!42151) b!80997))

(assert (= (and b!81001 c!12716) b!80999))

(assert (= (and b!81001 (not c!12716)) b!80995))

(assert (= (and b!80999 res!42150) b!80998))

(assert (= (and b!80998 res!42148) b!81000))

(assert (= (or b!80996 b!80999) bm!7548))

(assert (= (or b!80997 b!81000) bm!7549))

(declare-fun m!82717 () Bool)

(assert (=> b!81002 m!82717))

(assert (=> bm!7549 m!81295))

(assert (=> bm!7549 m!81539))

(declare-fun m!82719 () Bool)

(assert (=> bm!7548 m!82719))

(assert (=> d!19847 m!81295))

(assert (=> d!19847 m!81509))

(assert (=> d!19847 m!81295))

(declare-fun m!82721 () Bool)

(assert (=> d!19847 m!82721))

(assert (=> d!19847 m!81973))

(declare-fun m!82723 () Bool)

(assert (=> b!80998 m!82723))

(assert (=> bm!7432 d!19847))

(declare-fun b!81011 () Bool)

(declare-fun res!42162 () Bool)

(declare-fun e!52875 () Bool)

(assert (=> b!81011 (=> (not res!42162) (not e!52875))))

(assert (=> b!81011 (= res!42162 (and (= (size!2132 (_values!2275 newMap!16)) (bvadd (mask!6297 newMap!16) #b00000000000000000000000000000001)) (= (size!2131 (_keys!3955 newMap!16)) (size!2132 (_values!2275 newMap!16))) (bvsge (_size!417 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!417 newMap!16) (bvadd (mask!6297 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!81013 () Bool)

(declare-fun res!42163 () Bool)

(assert (=> b!81013 (=> (not res!42163) (not e!52875))))

(declare-fun size!2137 (LongMapFixedSize!736) (_ BitVec 32))

(assert (=> b!81013 (= res!42163 (= (size!2137 newMap!16) (bvadd (_size!417 newMap!16) (bvsdiv (bvadd (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!81014 () Bool)

(assert (=> b!81014 (= e!52875 (and (bvsge (extraKeys!2139 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2139 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!417 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!81012 () Bool)

(declare-fun res!42160 () Bool)

(assert (=> b!81012 (=> (not res!42160) (not e!52875))))

(assert (=> b!81012 (= res!42160 (bvsge (size!2137 newMap!16) (_size!417 newMap!16)))))

(declare-fun d!19849 () Bool)

(declare-fun res!42161 () Bool)

(assert (=> d!19849 (=> (not res!42161) (not e!52875))))

(assert (=> d!19849 (= res!42161 (validMask!0 (mask!6297 newMap!16)))))

(assert (=> d!19849 (= (simpleValid!56 newMap!16) e!52875)))

(assert (= (and d!19849 res!42161) b!81011))

(assert (= (and b!81011 res!42162) b!81012))

(assert (= (and b!81012 res!42160) b!81013))

(assert (= (and b!81013 res!42163) b!81014))

(declare-fun m!82725 () Bool)

(assert (=> b!81013 m!82725))

(assert (=> b!81012 m!82725))

(assert (=> d!19849 m!81973))

(assert (=> d!19615 d!19849))

(assert (=> d!19607 d!19613))

(declare-fun d!19851 () Bool)

(assert (=> d!19851 (arrayNoDuplicates!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) from!355 Nil!1512)))

(assert (=> d!19851 true))

(declare-fun _$71!108 () Unit!2327)

(assert (=> d!19851 (= (choose!39 (_keys!3955 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!108)))

(declare-fun bs!3415 () Bool)

(assert (= bs!3415 d!19851))

(assert (=> bs!3415 m!81321))

(assert (=> d!19607 d!19851))

(declare-fun d!19853 () Bool)

(assert (=> d!19853 (= (+!104 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37264 (zeroValue!2188 newMap!16) lt!37084 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37820 () Unit!2327)

(declare-fun choose!487 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 V!3001 Int) Unit!2327)

(assert (=> d!19853 (= lt!37820 (choose!487 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) lt!37264 (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) lt!37084 (defaultEntry!2292 newMap!16)))))

(assert (=> d!19853 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19853 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!29 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) lt!37264 (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) lt!37084 (defaultEntry!2292 newMap!16)) lt!37820)))

(declare-fun bs!3416 () Bool)

(assert (= bs!3416 d!19853))

(assert (=> bs!3416 m!81973))

(assert (=> bs!3416 m!81711))

(assert (=> bs!3416 m!81711))

(declare-fun m!82727 () Bool)

(assert (=> bs!3416 m!82727))

(declare-fun m!82729 () Bool)

(assert (=> bs!3416 m!82729))

(declare-fun m!82731 () Bool)

(assert (=> bs!3416 m!82731))

(assert (=> b!80298 d!19853))

(declare-fun d!19855 () Bool)

(declare-fun e!52876 () Bool)

(assert (=> d!19855 e!52876))

(declare-fun res!42164 () Bool)

(assert (=> d!19855 (=> res!42164 e!52876)))

(declare-fun lt!37824 () Bool)

(assert (=> d!19855 (= res!42164 (not lt!37824))))

(declare-fun lt!37823 () Bool)

(assert (=> d!19855 (= lt!37824 lt!37823)))

(declare-fun lt!37822 () Unit!2327)

(declare-fun e!52877 () Unit!2327)

(assert (=> d!19855 (= lt!37822 e!52877)))

(declare-fun c!12718 () Bool)

(assert (=> d!19855 (= c!12718 lt!37823)))

(assert (=> d!19855 (= lt!37823 (containsKey!140 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!19855 (= (contains!742 lt!37406 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!37824)))

(declare-fun b!81015 () Bool)

(declare-fun lt!37821 () Unit!2327)

(assert (=> b!81015 (= e!52877 lt!37821)))

(assert (=> b!81015 (= lt!37821 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!81015 (isDefined!90 (getValueByKey!136 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!81016 () Bool)

(declare-fun Unit!2363 () Unit!2327)

(assert (=> b!81016 (= e!52877 Unit!2363)))

(declare-fun b!81017 () Bool)

(assert (=> b!81017 (= e!52876 (isDefined!90 (getValueByKey!136 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!19855 c!12718) b!81015))

(assert (= (and d!19855 (not c!12718)) b!81016))

(assert (= (and d!19855 (not res!42164)) b!81017))

(assert (=> d!19855 m!81625))

(declare-fun m!82733 () Bool)

(assert (=> d!19855 m!82733))

(assert (=> b!81015 m!81625))

(declare-fun m!82735 () Bool)

(assert (=> b!81015 m!82735))

(assert (=> b!81015 m!81625))

(assert (=> b!81015 m!82583))

(assert (=> b!81015 m!82583))

(declare-fun m!82737 () Bool)

(assert (=> b!81015 m!82737))

(assert (=> b!81017 m!81625))

(assert (=> b!81017 m!82583))

(assert (=> b!81017 m!82583))

(assert (=> b!81017 m!82737))

(assert (=> b!80463 d!19855))

(assert (=> d!19619 d!19583))

(declare-fun d!19857 () Bool)

(declare-fun e!52878 () Bool)

(assert (=> d!19857 e!52878))

(declare-fun res!42165 () Bool)

(assert (=> d!19857 (=> res!42165 e!52878)))

(declare-fun lt!37828 () Bool)

(assert (=> d!19857 (= res!42165 (not lt!37828))))

(declare-fun lt!37827 () Bool)

(assert (=> d!19857 (= lt!37828 lt!37827)))

(declare-fun lt!37826 () Unit!2327)

(declare-fun e!52879 () Unit!2327)

(assert (=> d!19857 (= lt!37826 e!52879)))

(declare-fun c!12719 () Bool)

(assert (=> d!19857 (= c!12719 lt!37827)))

(assert (=> d!19857 (= lt!37827 (containsKey!140 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!19857 (= (contains!742 lt!37331 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!37828)))

(declare-fun b!81018 () Bool)

(declare-fun lt!37825 () Unit!2327)

(assert (=> b!81018 (= e!52879 lt!37825)))

(assert (=> b!81018 (= lt!37825 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!81018 (isDefined!90 (getValueByKey!136 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!81019 () Bool)

(declare-fun Unit!2364 () Unit!2327)

(assert (=> b!81019 (= e!52879 Unit!2364)))

(declare-fun b!81020 () Bool)

(assert (=> b!81020 (= e!52878 (isDefined!90 (getValueByKey!136 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!19857 c!12719) b!81018))

(assert (= (and d!19857 (not c!12719)) b!81019))

(assert (= (and d!19857 (not res!42165)) b!81020))

(assert (=> d!19857 m!81625))

(declare-fun m!82739 () Bool)

(assert (=> d!19857 m!82739))

(assert (=> b!81018 m!81625))

(declare-fun m!82741 () Bool)

(assert (=> b!81018 m!82741))

(assert (=> b!81018 m!81625))

(assert (=> b!81018 m!82269))

(assert (=> b!81018 m!82269))

(declare-fun m!82743 () Bool)

(assert (=> b!81018 m!82743))

(assert (=> b!81020 m!81625))

(assert (=> b!81020 m!82269))

(assert (=> b!81020 m!82269))

(assert (=> b!81020 m!82743))

(assert (=> b!80355 d!19857))

(declare-fun b!81024 () Bool)

(declare-fun e!52881 () Option!142)

(assert (=> b!81024 (= e!52881 None!140)))

(declare-fun b!81021 () Bool)

(declare-fun e!52880 () Option!142)

(assert (=> b!81021 (= e!52880 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37316)))))))

(declare-fun b!81023 () Bool)

(assert (=> b!81023 (= e!52881 (getValueByKey!136 (t!5172 (toList!734 lt!37316)) (_1!1102 lt!37082)))))

(declare-fun d!19859 () Bool)

(declare-fun c!12720 () Bool)

(assert (=> d!19859 (= c!12720 (and ((_ is Cons!1510) (toList!734 lt!37316)) (= (_1!1102 (h!2099 (toList!734 lt!37316))) (_1!1102 lt!37082))))))

(assert (=> d!19859 (= (getValueByKey!136 (toList!734 lt!37316) (_1!1102 lt!37082)) e!52880)))

(declare-fun b!81022 () Bool)

(assert (=> b!81022 (= e!52880 e!52881)))

(declare-fun c!12721 () Bool)

(assert (=> b!81022 (= c!12721 (and ((_ is Cons!1510) (toList!734 lt!37316)) (not (= (_1!1102 (h!2099 (toList!734 lt!37316))) (_1!1102 lt!37082)))))))

(assert (= (and d!19859 c!12720) b!81021))

(assert (= (and d!19859 (not c!12720)) b!81022))

(assert (= (and b!81022 c!12721) b!81023))

(assert (= (and b!81022 (not c!12721)) b!81024))

(declare-fun m!82745 () Bool)

(assert (=> b!81023 m!82745))

(assert (=> b!80328 d!19859))

(declare-fun d!19861 () Bool)

(declare-fun e!52882 () Bool)

(assert (=> d!19861 e!52882))

(declare-fun res!42166 () Bool)

(assert (=> d!19861 (=> res!42166 e!52882)))

(declare-fun lt!37832 () Bool)

(assert (=> d!19861 (= res!42166 (not lt!37832))))

(declare-fun lt!37831 () Bool)

(assert (=> d!19861 (= lt!37832 lt!37831)))

(declare-fun lt!37830 () Unit!2327)

(declare-fun e!52883 () Unit!2327)

(assert (=> d!19861 (= lt!37830 e!52883)))

(declare-fun c!12722 () Bool)

(assert (=> d!19861 (= c!12722 lt!37831)))

(assert (=> d!19861 (= lt!37831 (containsKey!140 (toList!734 lt!37342) (_1!1102 lt!37082)))))

(assert (=> d!19861 (= (contains!742 lt!37342 (_1!1102 lt!37082)) lt!37832)))

(declare-fun b!81025 () Bool)

(declare-fun lt!37829 () Unit!2327)

(assert (=> b!81025 (= e!52883 lt!37829)))

(assert (=> b!81025 (= lt!37829 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37342) (_1!1102 lt!37082)))))

(assert (=> b!81025 (isDefined!90 (getValueByKey!136 (toList!734 lt!37342) (_1!1102 lt!37082)))))

(declare-fun b!81026 () Bool)

(declare-fun Unit!2365 () Unit!2327)

(assert (=> b!81026 (= e!52883 Unit!2365)))

(declare-fun b!81027 () Bool)

(assert (=> b!81027 (= e!52882 (isDefined!90 (getValueByKey!136 (toList!734 lt!37342) (_1!1102 lt!37082))))))

(assert (= (and d!19861 c!12722) b!81025))

(assert (= (and d!19861 (not c!12722)) b!81026))

(assert (= (and d!19861 (not res!42166)) b!81027))

(declare-fun m!82747 () Bool)

(assert (=> d!19861 m!82747))

(declare-fun m!82749 () Bool)

(assert (=> b!81025 m!82749))

(assert (=> b!81025 m!81659))

(assert (=> b!81025 m!81659))

(declare-fun m!82751 () Bool)

(assert (=> b!81025 m!82751))

(assert (=> b!81027 m!81659))

(assert (=> b!81027 m!81659))

(assert (=> b!81027 m!82751))

(assert (=> d!19589 d!19861))

(declare-fun b!81031 () Bool)

(declare-fun e!52885 () Option!142)

(assert (=> b!81031 (= e!52885 None!140)))

(declare-fun b!81028 () Bool)

(declare-fun e!52884 () Option!142)

(assert (=> b!81028 (= e!52884 (Some!141 (_2!1102 (h!2099 lt!37341))))))

(declare-fun b!81030 () Bool)

(assert (=> b!81030 (= e!52885 (getValueByKey!136 (t!5172 lt!37341) (_1!1102 lt!37082)))))

(declare-fun d!19863 () Bool)

(declare-fun c!12723 () Bool)

(assert (=> d!19863 (= c!12723 (and ((_ is Cons!1510) lt!37341) (= (_1!1102 (h!2099 lt!37341)) (_1!1102 lt!37082))))))

(assert (=> d!19863 (= (getValueByKey!136 lt!37341 (_1!1102 lt!37082)) e!52884)))

(declare-fun b!81029 () Bool)

(assert (=> b!81029 (= e!52884 e!52885)))

(declare-fun c!12724 () Bool)

(assert (=> b!81029 (= c!12724 (and ((_ is Cons!1510) lt!37341) (not (= (_1!1102 (h!2099 lt!37341)) (_1!1102 lt!37082)))))))

(assert (= (and d!19863 c!12723) b!81028))

(assert (= (and d!19863 (not c!12723)) b!81029))

(assert (= (and b!81029 c!12724) b!81030))

(assert (= (and b!81029 (not c!12724)) b!81031))

(declare-fun m!82753 () Bool)

(assert (=> b!81030 m!82753))

(assert (=> d!19589 d!19863))

(declare-fun d!19865 () Bool)

(assert (=> d!19865 (= (getValueByKey!136 lt!37341 (_1!1102 lt!37082)) (Some!141 (_2!1102 lt!37082)))))

(declare-fun lt!37833 () Unit!2327)

(assert (=> d!19865 (= lt!37833 (choose!477 lt!37341 (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(declare-fun e!52886 () Bool)

(assert (=> d!19865 e!52886))

(declare-fun res!42167 () Bool)

(assert (=> d!19865 (=> (not res!42167) (not e!52886))))

(assert (=> d!19865 (= res!42167 (isStrictlySorted!291 lt!37341))))

(assert (=> d!19865 (= (lemmaContainsTupThenGetReturnValue!56 lt!37341 (_1!1102 lt!37082) (_2!1102 lt!37082)) lt!37833)))

(declare-fun b!81032 () Bool)

(declare-fun res!42168 () Bool)

(assert (=> b!81032 (=> (not res!42168) (not e!52886))))

(assert (=> b!81032 (= res!42168 (containsKey!140 lt!37341 (_1!1102 lt!37082)))))

(declare-fun b!81033 () Bool)

(assert (=> b!81033 (= e!52886 (contains!745 lt!37341 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(assert (= (and d!19865 res!42167) b!81032))

(assert (= (and b!81032 res!42168) b!81033))

(assert (=> d!19865 m!81653))

(declare-fun m!82755 () Bool)

(assert (=> d!19865 m!82755))

(declare-fun m!82757 () Bool)

(assert (=> d!19865 m!82757))

(declare-fun m!82759 () Bool)

(assert (=> b!81032 m!82759))

(declare-fun m!82761 () Bool)

(assert (=> b!81033 m!82761))

(assert (=> d!19589 d!19865))

(declare-fun b!81034 () Bool)

(declare-fun e!52890 () List!1514)

(declare-fun call!7555 () List!1514)

(assert (=> b!81034 (= e!52890 call!7555)))

(declare-fun e!52887 () List!1514)

(declare-fun call!7554 () List!1514)

(declare-fun c!12728 () Bool)

(declare-fun bm!7550 () Bool)

(assert (=> bm!7550 (= call!7554 ($colon$colon!69 e!52887 (ite c!12728 (h!2099 (toList!734 lt!37071)) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082)))))))

(declare-fun c!12726 () Bool)

(assert (=> bm!7550 (= c!12726 c!12728)))

(declare-fun b!81035 () Bool)

(declare-fun e!52891 () Bool)

(declare-fun lt!37834 () List!1514)

(assert (=> b!81035 (= e!52891 (contains!745 lt!37834 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun bm!7551 () Bool)

(declare-fun call!7553 () List!1514)

(assert (=> bm!7551 (= call!7555 call!7553)))

(declare-fun d!19867 () Bool)

(assert (=> d!19867 e!52891))

(declare-fun res!42170 () Bool)

(assert (=> d!19867 (=> (not res!42170) (not e!52891))))

(assert (=> d!19867 (= res!42170 (isStrictlySorted!291 lt!37834))))

(declare-fun e!52889 () List!1514)

(assert (=> d!19867 (= lt!37834 e!52889)))

(assert (=> d!19867 (= c!12728 (and ((_ is Cons!1510) (toList!734 lt!37071)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 lt!37082))))))

(assert (=> d!19867 (isStrictlySorted!291 (toList!734 lt!37071))))

(assert (=> d!19867 (= (insertStrictlySorted!59 (toList!734 lt!37071) (_1!1102 lt!37082) (_2!1102 lt!37082)) lt!37834)))

(declare-fun b!81036 () Bool)

(declare-fun c!12725 () Bool)

(assert (=> b!81036 (= c!12725 (and ((_ is Cons!1510) (toList!734 lt!37071)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 lt!37082))))))

(declare-fun e!52888 () List!1514)

(assert (=> b!81036 (= e!52888 e!52890)))

(declare-fun b!81037 () Bool)

(assert (=> b!81037 (= e!52888 call!7553)))

(declare-fun b!81038 () Bool)

(assert (=> b!81038 (= e!52889 call!7554)))

(declare-fun bm!7552 () Bool)

(assert (=> bm!7552 (= call!7553 call!7554)))

(declare-fun b!81039 () Bool)

(declare-fun res!42169 () Bool)

(assert (=> b!81039 (=> (not res!42169) (not e!52891))))

(assert (=> b!81039 (= res!42169 (containsKey!140 lt!37834 (_1!1102 lt!37082)))))

(declare-fun b!81040 () Bool)

(assert (=> b!81040 (= e!52890 call!7555)))

(declare-fun b!81041 () Bool)

(declare-fun c!12727 () Bool)

(assert (=> b!81041 (= e!52887 (ite c!12727 (t!5172 (toList!734 lt!37071)) (ite c!12725 (Cons!1510 (h!2099 (toList!734 lt!37071)) (t!5172 (toList!734 lt!37071))) Nil!1511)))))

(declare-fun b!81042 () Bool)

(assert (=> b!81042 (= e!52889 e!52888)))

(assert (=> b!81042 (= c!12727 (and ((_ is Cons!1510) (toList!734 lt!37071)) (= (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 lt!37082))))))

(declare-fun b!81043 () Bool)

(assert (=> b!81043 (= e!52887 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37071)) (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(assert (= (and d!19867 c!12728) b!81038))

(assert (= (and d!19867 (not c!12728)) b!81042))

(assert (= (and b!81042 c!12727) b!81037))

(assert (= (and b!81042 (not c!12727)) b!81036))

(assert (= (and b!81036 c!12725) b!81040))

(assert (= (and b!81036 (not c!12725)) b!81034))

(assert (= (or b!81040 b!81034) bm!7551))

(assert (= (or b!81037 bm!7551) bm!7552))

(assert (= (or b!81038 bm!7552) bm!7550))

(assert (= (and bm!7550 c!12726) b!81043))

(assert (= (and bm!7550 (not c!12726)) b!81041))

(assert (= (and d!19867 res!42170) b!81039))

(assert (= (and b!81039 res!42169) b!81035))

(declare-fun m!82763 () Bool)

(assert (=> d!19867 m!82763))

(assert (=> d!19867 m!82403))

(declare-fun m!82765 () Bool)

(assert (=> b!81043 m!82765))

(declare-fun m!82767 () Bool)

(assert (=> bm!7550 m!82767))

(declare-fun m!82769 () Bool)

(assert (=> b!81039 m!82769))

(declare-fun m!82771 () Bool)

(assert (=> b!81035 m!82771))

(assert (=> d!19589 d!19867))

(assert (=> b!80382 d!19609))

(declare-fun d!19869 () Bool)

(declare-fun isEmpty!335 (List!1514) Bool)

(assert (=> d!19869 (= (isEmpty!333 lt!37331) (isEmpty!335 (toList!734 lt!37331)))))

(declare-fun bs!3417 () Bool)

(assert (= bs!3417 d!19869))

(declare-fun m!82773 () Bool)

(assert (=> bs!3417 m!82773))

(assert (=> b!80356 d!19869))

(declare-fun b!81052 () Bool)

(declare-fun e!52898 () Bool)

(declare-fun call!7558 () Bool)

(assert (=> b!81052 (= e!52898 call!7558)))

(declare-fun b!81053 () Bool)

(declare-fun e!52899 () Bool)

(assert (=> b!81053 (= e!52899 call!7558)))

(declare-fun b!81054 () Bool)

(declare-fun e!52900 () Bool)

(assert (=> b!81054 (= e!52900 e!52899)))

(declare-fun c!12731 () Bool)

(assert (=> b!81054 (= c!12731 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81055 () Bool)

(assert (=> b!81055 (= e!52899 e!52898)))

(declare-fun lt!37842 () (_ BitVec 64))

(assert (=> b!81055 (= lt!37842 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37843 () Unit!2327)

(assert (=> b!81055 (= lt!37843 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3955 newMap!16) lt!37842 #b00000000000000000000000000000000))))

(assert (=> b!81055 (arrayContainsKey!0 (_keys!3955 newMap!16) lt!37842 #b00000000000000000000000000000000)))

(declare-fun lt!37841 () Unit!2327)

(assert (=> b!81055 (= lt!37841 lt!37843)))

(declare-fun res!42176 () Bool)

(assert (=> b!81055 (= res!42176 (= (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) (_keys!3955 newMap!16) (mask!6297 newMap!16)) (Found!244 #b00000000000000000000000000000000)))))

(assert (=> b!81055 (=> (not res!42176) (not e!52898))))

(declare-fun bm!7555 () Bool)

(assert (=> bm!7555 (= call!7558 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(declare-fun d!19871 () Bool)

(declare-fun res!42175 () Bool)

(assert (=> d!19871 (=> res!42175 e!52900)))

(assert (=> d!19871 (= res!42175 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19871 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3955 newMap!16) (mask!6297 newMap!16)) e!52900)))

(assert (= (and d!19871 (not res!42175)) b!81054))

(assert (= (and b!81054 c!12731) b!81055))

(assert (= (and b!81054 (not c!12731)) b!81053))

(assert (= (and b!81055 res!42176) b!81052))

(assert (= (or b!81052 b!81053) bm!7555))

(assert (=> b!81054 m!82131))

(assert (=> b!81054 m!82131))

(assert (=> b!81054 m!82143))

(assert (=> b!81055 m!82131))

(declare-fun m!82775 () Bool)

(assert (=> b!81055 m!82775))

(declare-fun m!82777 () Bool)

(assert (=> b!81055 m!82777))

(assert (=> b!81055 m!82131))

(declare-fun m!82779 () Bool)

(assert (=> b!81055 m!82779))

(declare-fun m!82781 () Bool)

(assert (=> bm!7555 m!82781))

(assert (=> b!80406 d!19871))

(declare-fun condMapEmpty!3341 () Bool)

(declare-fun mapDefault!3341 () ValueCell!914)

(assert (=> mapNonEmpty!3340 (= condMapEmpty!3341 (= mapRest!3340 ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3341)))))

(declare-fun e!52902 () Bool)

(declare-fun mapRes!3341 () Bool)

(assert (=> mapNonEmpty!3340 (= tp!8830 (and e!52902 mapRes!3341))))

(declare-fun b!81057 () Bool)

(assert (=> b!81057 (= e!52902 tp_is_empty!2515)))

(declare-fun b!81056 () Bool)

(declare-fun e!52901 () Bool)

(assert (=> b!81056 (= e!52901 tp_is_empty!2515)))

(declare-fun mapNonEmpty!3341 () Bool)

(declare-fun tp!8831 () Bool)

(assert (=> mapNonEmpty!3341 (= mapRes!3341 (and tp!8831 e!52901))))

(declare-fun mapKey!3341 () (_ BitVec 32))

(declare-fun mapRest!3341 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapValue!3341 () ValueCell!914)

(assert (=> mapNonEmpty!3341 (= mapRest!3340 (store mapRest!3341 mapKey!3341 mapValue!3341))))

(declare-fun mapIsEmpty!3341 () Bool)

(assert (=> mapIsEmpty!3341 mapRes!3341))

(assert (= (and mapNonEmpty!3340 condMapEmpty!3341) mapIsEmpty!3341))

(assert (= (and mapNonEmpty!3340 (not condMapEmpty!3341)) mapNonEmpty!3341))

(assert (= (and mapNonEmpty!3341 ((_ is ValueCellFull!914) mapValue!3341)) b!81056))

(assert (= (and mapNonEmpty!3340 ((_ is ValueCellFull!914) mapDefault!3341)) b!81057))

(declare-fun m!82783 () Bool)

(assert (=> mapNonEmpty!3341 m!82783))

(declare-fun condMapEmpty!3342 () Bool)

(declare-fun mapDefault!3342 () ValueCell!914)

(assert (=> mapNonEmpty!3339 (= condMapEmpty!3342 (= mapRest!3339 ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3342)))))

(declare-fun e!52904 () Bool)

(declare-fun mapRes!3342 () Bool)

(assert (=> mapNonEmpty!3339 (= tp!8829 (and e!52904 mapRes!3342))))

(declare-fun b!81059 () Bool)

(assert (=> b!81059 (= e!52904 tp_is_empty!2515)))

(declare-fun b!81058 () Bool)

(declare-fun e!52903 () Bool)

(assert (=> b!81058 (= e!52903 tp_is_empty!2515)))

(declare-fun mapNonEmpty!3342 () Bool)

(declare-fun tp!8832 () Bool)

(assert (=> mapNonEmpty!3342 (= mapRes!3342 (and tp!8832 e!52903))))

(declare-fun mapRest!3342 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapValue!3342 () ValueCell!914)

(declare-fun mapKey!3342 () (_ BitVec 32))

(assert (=> mapNonEmpty!3342 (= mapRest!3339 (store mapRest!3342 mapKey!3342 mapValue!3342))))

(declare-fun mapIsEmpty!3342 () Bool)

(assert (=> mapIsEmpty!3342 mapRes!3342))

(assert (= (and mapNonEmpty!3339 condMapEmpty!3342) mapIsEmpty!3342))

(assert (= (and mapNonEmpty!3339 (not condMapEmpty!3342)) mapNonEmpty!3342))

(assert (= (and mapNonEmpty!3342 ((_ is ValueCellFull!914) mapValue!3342)) b!81058))

(assert (= (and mapNonEmpty!3339 ((_ is ValueCellFull!914) mapDefault!3342)) b!81059))

(declare-fun m!82785 () Bool)

(assert (=> mapNonEmpty!3342 m!82785))

(declare-fun b_lambda!3599 () Bool)

(assert (= b_lambda!3597 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3599)))

(declare-fun b_lambda!3601 () Bool)

(assert (= b_lambda!3591 (or (and b!80038 b_free!2197) (and b!80045 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))))) b_lambda!3601)))

(declare-fun b_lambda!3603 () Bool)

(assert (= b_lambda!3593 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3603)))

(declare-fun b_lambda!3605 () Bool)

(assert (= b_lambda!3595 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3605)))

(declare-fun b_lambda!3607 () Bool)

(assert (= b_lambda!3589 (or (and b!80038 b_free!2197) (and b!80045 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))))) b_lambda!3607)))

(declare-fun b_lambda!3609 () Bool)

(assert (= b_lambda!3587 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3609)))

(check-sat (not d!19785) (not b!80573) (not bm!7555) (not d!19631) (not b!80592) (not d!19791) (not b!80913) (not b!80483) (not d!19633) (not b!81027) (not b!80732) (not b_lambda!3581) (not d!19735) tp_is_empty!2515 (not d!19869) (not b!80588) (not d!19761) (not b!81039) (not d!19637) (not b!80752) (not b!80711) (not b!80749) (not b!81018) (not b!80892) (not b!80637) (not b!80888) (not b!80766) (not b!80635) (not bm!7548) (not d!19865) (not b!80534) (not d!19621) (not b!81032) (not b!80792) (not b!80784) (not b!80948) (not b!80868) (not d!19827) (not b!80700) (not b!80734) (not b!80860) (not d!19717) (not b!80730) (not d!19677) (not d!19767) (not b!80893) (not b!80565) (not d!19741) (not b!80643) (not d!19801) (not b!80778) (not b!80799) (not bm!7535) (not d!19779) (not d!19719) (not b!80538) (not d!19649) (not bm!7508) (not d!19667) (not b!80839) b_and!4935 (not d!19797) (not b_lambda!3603) (not b!80562) (not b!80881) (not d!19851) (not b_next!2197) (not b!80975) (not b!80909) (not bm!7541) (not b!80971) (not b!80876) (not b!80537) (not d!19685) (not d!19795) b_and!4933 (not b!81013) (not d!19623) (not d!19769) (not b!80978) (not b!80945) (not b_lambda!3585) (not b!80504) (not d!19727) (not b!80503) (not b!80953) (not b!80739) (not b!80569) (not b!80970) (not b!80786) (not b!80823) (not bm!7500) (not b!80927) (not d!19753) (not b!80497) (not d!19641) (not b!80584) (not d!19643) (not b!80923) (not b!80557) (not b!80791) (not b!80932) (not bm!7520) (not b!80883) (not b!80972) (not b!80481) (not b!80624) (not b!81023) (not b!80956) (not b!80648) (not d!19723) (not b!80604) (not d!19659) (not b!80905) (not d!19775) (not d!19733) (not d!19645) (not b!80539) (not bm!7514) (not bm!7504) (not b!80687) (not b!80866) (not d!19697) (not d!19809) (not b!80820) (not d!19635) (not b!80704) (not d!19781) (not b!80551) (not b!80817) (not bm!7527) (not b!80744) (not b!80579) (not d!19725) (not bm!7549) (not bm!7489) (not d!19739) (not bm!7480) (not b!80788) (not d!19745) (not d!19783) (not d!19657) (not b!81030) (not d!19777) (not d!19709) (not b!80708) (not d!19651) (not b!80836) (not b_lambda!3607) (not d!19773) (not b!80879) (not d!19831) (not d!19627) (not b!81015) (not b_lambda!3609) (not d!19661) (not b!80627) (not bm!7531) (not d!19721) (not b!80725) (not b!80865) (not bm!7515) (not b!80600) (not b!80697) (not b!80622) (not b!80935) (not b!80552) (not b!80709) (not b!81020) (not d!19681) (not b!80738) (not d!19731) (not d!19867) (not b!80549) (not b!80593) (not b!80727) (not b!80536) (not d!19793) (not b!81054) (not b!80726) (not b!80553) (not b!80854) (not d!19737) (not b!80649) (not b!81017) (not b!80765) (not b!80689) (not bm!7522) (not bm!7539) (not b!80750) (not d!19817) (not b!80574) (not b!80688) (not d!19837) (not b!80560) (not d!19711) (not d!19669) (not b!80900) (not bm!7512) (not b!80645) (not b!80882) (not b!80540) (not d!19787) (not b!80554) (not b!80903) (not d!19853) (not b!80887) (not mapNonEmpty!3342) (not b!80891) (not b!80925) (not d!19857) (not b!80858) (not bm!7526) (not b!80563) (not b!80486) (not b!80703) (not b!80960) (not bm!7503) (not mapNonEmpty!3341) (not bm!7528) (not b!80722) (not b!80890) (not d!19811) (not d!19799) (not b!80742) (not d!19789) (not b!80526) (not b!80741) (not b!80800) (not b!80774) (not b!80740) (not b!80933) (not b_next!2199) (not d!19765) (not b!80951) (not b!81043) (not b!80797) (not b!80542) (not d!19847) (not bm!7550) (not b!80484) (not b!80804) (not d!19629) (not b!80976) (not b!80837) (not b!80761) (not b!80724) (not d!19815) (not d!19849) (not d!19757) (not b!80576) (not b!80828) (not b_lambda!3601) (not b!80966) (not b!80939) (not bm!7518) (not b!80618) (not d!19713) (not b!81012) (not b!80771) (not b!80615) (not b!80594) (not b!80930) (not b!80910) (not bm!7483) (not b!80897) (not b!80634) (not bm!7509) (not b!80613) (not b!80896) (not b!80895) (not b!80737) (not bm!7499) (not b!80973) (not bm!7540) (not b!80555) (not b!80878) (not b!80884) (not d!19819) (not b_lambda!3583) (not b!80626) (not d!19763) (not b!80716) (not b!80651) (not b!80646) (not bm!7536) (not b_lambda!3605) (not b_lambda!3573) (not d!19655) (not b!80810) (not b!80530) (not b!80773) (not b!81033) (not b!80735) (not bm!7498) (not d!19855) (not d!19675) (not d!19823) (not b!80872) (not bm!7519) (not d!19749) (not b_lambda!3599) (not b!80912) (not b!80863) (not b!80943) (not d!19695) (not b!80647) (not b!80826) (not b!80581) (not b!80640) (not b!80595) (not d!19671) (not d!19839) (not d!19861) (not d!19807) (not b!80789) (not b!81025) (not b!80825) (not d!19647) (not b!80885) (not b!81035) (not d!19683) (not d!19841) (not b!80611) (not bm!7486) (not bm!7507) (not d!19639) (not b!80832) (not b!80818) (not b!80889) (not b!80690) (not b!80612) (not b!80894) (not b!80614) (not b!80904) (not b!80770) (not d!19705) (not d!19691) (not bm!7523) (not b!81055) (not d!19707) (not b!80582) (not b!80886) (not d!19845) (not d!19663) (not b!80796) (not b!80548) (not b!80917) (not b!80712) (not d!19653) (not d!19759))
(check-sat b_and!4933 b_and!4935 (not b_next!2197) (not b_next!2199))
(get-model)

(declare-fun d!19873 () Bool)

(declare-fun res!42181 () Bool)

(declare-fun e!52909 () Bool)

(assert (=> d!19873 (=> res!42181 e!52909)))

(assert (=> d!19873 (= res!42181 (or ((_ is Nil!1511) lt!37726) ((_ is Nil!1511) (t!5172 lt!37726))))))

(assert (=> d!19873 (= (isStrictlySorted!291 lt!37726) e!52909)))

(declare-fun b!81064 () Bool)

(declare-fun e!52910 () Bool)

(assert (=> b!81064 (= e!52909 e!52910)))

(declare-fun res!42182 () Bool)

(assert (=> b!81064 (=> (not res!42182) (not e!52910))))

(assert (=> b!81064 (= res!42182 (bvslt (_1!1102 (h!2099 lt!37726)) (_1!1102 (h!2099 (t!5172 lt!37726)))))))

(declare-fun b!81065 () Bool)

(assert (=> b!81065 (= e!52910 (isStrictlySorted!291 (t!5172 lt!37726)))))

(assert (= (and d!19873 (not res!42181)) b!81064))

(assert (= (and b!81064 res!42182) b!81065))

(declare-fun m!82787 () Bool)

(assert (=> b!81065 m!82787))

(assert (=> d!19775 d!19873))

(declare-fun d!19875 () Bool)

(declare-fun res!42183 () Bool)

(declare-fun e!52911 () Bool)

(assert (=> d!19875 (=> res!42183 e!52911)))

(assert (=> d!19875 (= res!42183 (or ((_ is Nil!1511) (toList!734 lt!37081)) ((_ is Nil!1511) (t!5172 (toList!734 lt!37081)))))))

(assert (=> d!19875 (= (isStrictlySorted!291 (toList!734 lt!37081)) e!52911)))

(declare-fun b!81066 () Bool)

(declare-fun e!52912 () Bool)

(assert (=> b!81066 (= e!52911 e!52912)))

(declare-fun res!42184 () Bool)

(assert (=> b!81066 (=> (not res!42184) (not e!52912))))

(assert (=> b!81066 (= res!42184 (bvslt (_1!1102 (h!2099 (toList!734 lt!37081))) (_1!1102 (h!2099 (t!5172 (toList!734 lt!37081))))))))

(declare-fun b!81067 () Bool)

(assert (=> b!81067 (= e!52912 (isStrictlySorted!291 (t!5172 (toList!734 lt!37081))))))

(assert (= (and d!19875 (not res!42183)) b!81066))

(assert (= (and b!81066 res!42184) b!81067))

(declare-fun m!82789 () Bool)

(assert (=> b!81067 m!82789))

(assert (=> d!19775 d!19875))

(declare-fun d!19877 () Bool)

(assert (=> d!19877 (= (apply!80 lt!37660 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1187 (getValueByKey!136 (toList!734 lt!37660) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3418 () Bool)

(assert (= bs!3418 d!19877))

(assert (=> bs!3418 m!82131))

(declare-fun m!82791 () Bool)

(assert (=> bs!3418 m!82791))

(assert (=> bs!3418 m!82791))

(declare-fun m!82793 () Bool)

(assert (=> bs!3418 m!82793))

(assert (=> b!80771 d!19877))

(declare-fun d!19879 () Bool)

(declare-fun c!12732 () Bool)

(assert (=> d!19879 (= c!12732 ((_ is ValueCellFull!914) (select (arr!1889 (ite c!12532 (_values!2275 newMap!16) lt!37263)) #b00000000000000000000000000000000)))))

(declare-fun e!52913 () V!3001)

(assert (=> d!19879 (= (get!1183 (select (arr!1889 (ite c!12532 (_values!2275 newMap!16) lt!37263)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52913)))

(declare-fun b!81068 () Bool)

(assert (=> b!81068 (= e!52913 (get!1185 (select (arr!1889 (ite c!12532 (_values!2275 newMap!16) lt!37263)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81069 () Bool)

(assert (=> b!81069 (= e!52913 (get!1186 (select (arr!1889 (ite c!12532 (_values!2275 newMap!16) lt!37263)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19879 c!12732) b!81068))

(assert (= (and d!19879 (not c!12732)) b!81069))

(assert (=> b!81068 m!82277))

(assert (=> b!81068 m!82137))

(declare-fun m!82795 () Bool)

(assert (=> b!81068 m!82795))

(assert (=> b!81069 m!82277))

(assert (=> b!81069 m!82137))

(declare-fun m!82797 () Bool)

(assert (=> b!81069 m!82797))

(assert (=> b!80771 d!19879))

(declare-fun b!81070 () Bool)

(declare-fun e!52921 () Bool)

(assert (=> b!81070 (= e!52921 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81071 () Bool)

(declare-fun e!52914 () Unit!2327)

(declare-fun lt!37849 () Unit!2327)

(assert (=> b!81071 (= e!52914 lt!37849)))

(declare-fun lt!37857 () ListLongMap!1437)

(assert (=> b!81071 (= lt!37857 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37269 lt!37084 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37852 () (_ BitVec 64))

(assert (=> b!81071 (= lt!37852 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37845 () (_ BitVec 64))

(assert (=> b!81071 (= lt!37845 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37861 () Unit!2327)

(assert (=> b!81071 (= lt!37861 (addStillContains!56 lt!37857 lt!37852 lt!37084 lt!37845))))

(assert (=> b!81071 (contains!742 (+!104 lt!37857 (tuple2!2183 lt!37852 lt!37084)) lt!37845)))

(declare-fun lt!37864 () Unit!2327)

(assert (=> b!81071 (= lt!37864 lt!37861)))

(declare-fun lt!37853 () ListLongMap!1437)

(assert (=> b!81071 (= lt!37853 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37269 lt!37084 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37844 () (_ BitVec 64))

(assert (=> b!81071 (= lt!37844 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37865 () (_ BitVec 64))

(assert (=> b!81071 (= lt!37865 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37851 () Unit!2327)

(assert (=> b!81071 (= lt!37851 (addApplyDifferent!56 lt!37853 lt!37844 (minValue!2188 newMap!16) lt!37865))))

(assert (=> b!81071 (= (apply!80 (+!104 lt!37853 (tuple2!2183 lt!37844 (minValue!2188 newMap!16))) lt!37865) (apply!80 lt!37853 lt!37865))))

(declare-fun lt!37862 () Unit!2327)

(assert (=> b!81071 (= lt!37862 lt!37851)))

(declare-fun lt!37848 () ListLongMap!1437)

(assert (=> b!81071 (= lt!37848 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37269 lt!37084 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37855 () (_ BitVec 64))

(assert (=> b!81071 (= lt!37855 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37854 () (_ BitVec 64))

(assert (=> b!81071 (= lt!37854 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37863 () Unit!2327)

(assert (=> b!81071 (= lt!37863 (addApplyDifferent!56 lt!37848 lt!37855 lt!37084 lt!37854))))

(assert (=> b!81071 (= (apply!80 (+!104 lt!37848 (tuple2!2183 lt!37855 lt!37084)) lt!37854) (apply!80 lt!37848 lt!37854))))

(declare-fun lt!37860 () Unit!2327)

(assert (=> b!81071 (= lt!37860 lt!37863)))

(declare-fun lt!37858 () ListLongMap!1437)

(assert (=> b!81071 (= lt!37858 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37269 lt!37084 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37859 () (_ BitVec 64))

(assert (=> b!81071 (= lt!37859 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37856 () (_ BitVec 64))

(assert (=> b!81071 (= lt!37856 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81071 (= lt!37849 (addApplyDifferent!56 lt!37858 lt!37859 (minValue!2188 newMap!16) lt!37856))))

(assert (=> b!81071 (= (apply!80 (+!104 lt!37858 (tuple2!2183 lt!37859 (minValue!2188 newMap!16))) lt!37856) (apply!80 lt!37858 lt!37856))))

(declare-fun b!81072 () Bool)

(declare-fun e!52920 () ListLongMap!1437)

(declare-fun call!7561 () ListLongMap!1437)

(assert (=> b!81072 (= e!52920 call!7561)))

(declare-fun bm!7556 () Bool)

(declare-fun call!7560 () ListLongMap!1437)

(declare-fun call!7559 () ListLongMap!1437)

(assert (=> bm!7556 (= call!7560 call!7559)))

(declare-fun bm!7557 () Bool)

(declare-fun call!7563 () Bool)

(declare-fun lt!37846 () ListLongMap!1437)

(assert (=> bm!7557 (= call!7563 (contains!742 lt!37846 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81073 () Bool)

(declare-fun e!52918 () Bool)

(declare-fun call!7565 () Bool)

(assert (=> b!81073 (= e!52918 (not call!7565))))

(declare-fun b!81074 () Bool)

(declare-fun e!52923 () Bool)

(assert (=> b!81074 (= e!52923 (not call!7563))))

(declare-fun b!81075 () Bool)

(declare-fun e!52917 () ListLongMap!1437)

(declare-fun call!7564 () ListLongMap!1437)

(assert (=> b!81075 (= e!52917 (+!104 call!7564 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun d!19881 () Bool)

(declare-fun e!52925 () Bool)

(assert (=> d!19881 e!52925))

(declare-fun res!42189 () Bool)

(assert (=> d!19881 (=> (not res!42189) (not e!52925))))

(assert (=> d!19881 (= res!42189 (or (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))))

(declare-fun lt!37850 () ListLongMap!1437)

(assert (=> d!19881 (= lt!37846 lt!37850)))

(declare-fun lt!37847 () Unit!2327)

(assert (=> d!19881 (= lt!37847 e!52914)))

(declare-fun c!12734 () Bool)

(assert (=> d!19881 (= c!12734 e!52921)))

(declare-fun res!42186 () Bool)

(assert (=> d!19881 (=> (not res!42186) (not e!52921))))

(assert (=> d!19881 (= res!42186 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19881 (= lt!37850 e!52917)))

(declare-fun c!12736 () Bool)

(assert (=> d!19881 (= c!12736 (and (not (= (bvand lt!37269 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!37269 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19881 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19881 (= (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37269 lt!37084 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!37846)))

(declare-fun bm!7558 () Bool)

(assert (=> bm!7558 (= call!7565 (contains!742 lt!37846 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7559 () Bool)

(assert (=> bm!7559 (= call!7561 call!7560)))

(declare-fun b!81076 () Bool)

(declare-fun e!52924 () Bool)

(assert (=> b!81076 (= e!52924 (= (apply!80 lt!37846 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81076 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (_values!2275 newMap!16))))))

(assert (=> b!81076 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81077 () Bool)

(declare-fun res!42187 () Bool)

(assert (=> b!81077 (=> (not res!42187) (not e!52925))))

(declare-fun e!52916 () Bool)

(assert (=> b!81077 (= res!42187 e!52916)))

(declare-fun res!42190 () Bool)

(assert (=> b!81077 (=> res!42190 e!52916)))

(declare-fun e!52926 () Bool)

(assert (=> b!81077 (= res!42190 (not e!52926))))

(declare-fun res!42185 () Bool)

(assert (=> b!81077 (=> (not res!42185) (not e!52926))))

(assert (=> b!81077 (= res!42185 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81078 () Bool)

(declare-fun e!52919 () Bool)

(assert (=> b!81078 (= e!52919 (= (apply!80 lt!37846 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun b!81079 () Bool)

(assert (=> b!81079 (= e!52926 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7560 () Bool)

(declare-fun call!7562 () ListLongMap!1437)

(assert (=> bm!7560 (= call!7562 call!7564)))

(declare-fun b!81080 () Bool)

(assert (=> b!81080 (= e!52923 e!52919)))

(declare-fun res!42193 () Bool)

(assert (=> b!81080 (= res!42193 call!7563)))

(assert (=> b!81080 (=> (not res!42193) (not e!52919))))

(declare-fun b!81081 () Bool)

(assert (=> b!81081 (= e!52920 call!7562)))

(declare-fun b!81082 () Bool)

(assert (=> b!81082 (= e!52925 e!52923)))

(declare-fun c!12733 () Bool)

(assert (=> b!81082 (= c!12733 (not (= (bvand lt!37269 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81083 () Bool)

(assert (=> b!81083 (= e!52916 e!52924)))

(declare-fun res!42188 () Bool)

(assert (=> b!81083 (=> (not res!42188) (not e!52924))))

(assert (=> b!81083 (= res!42188 (contains!742 lt!37846 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81083 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81084 () Bool)

(declare-fun res!42191 () Bool)

(assert (=> b!81084 (=> (not res!42191) (not e!52925))))

(assert (=> b!81084 (= res!42191 e!52918)))

(declare-fun c!12737 () Bool)

(assert (=> b!81084 (= c!12737 (not (= (bvand lt!37269 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81085 () Bool)

(declare-fun e!52915 () ListLongMap!1437)

(assert (=> b!81085 (= e!52915 call!7562)))

(declare-fun b!81086 () Bool)

(declare-fun c!12735 () Bool)

(assert (=> b!81086 (= c!12735 (and (not (= (bvand lt!37269 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!37269 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!81086 (= e!52915 e!52920)))

(declare-fun bm!7561 () Bool)

(declare-fun c!12738 () Bool)

(assert (=> bm!7561 (= call!7564 (+!104 (ite c!12736 call!7559 (ite c!12738 call!7560 call!7561)) (ite (or c!12736 c!12738) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7562 () Bool)

(assert (=> bm!7562 (= call!7559 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37269 lt!37084 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!81087 () Bool)

(declare-fun e!52922 () Bool)

(assert (=> b!81087 (= e!52918 e!52922)))

(declare-fun res!42192 () Bool)

(assert (=> b!81087 (= res!42192 call!7565)))

(assert (=> b!81087 (=> (not res!42192) (not e!52922))))

(declare-fun b!81088 () Bool)

(assert (=> b!81088 (= e!52917 e!52915)))

(assert (=> b!81088 (= c!12738 (and (not (= (bvand lt!37269 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!37269 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81089 () Bool)

(assert (=> b!81089 (= e!52922 (= (apply!80 lt!37846 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37084))))

(declare-fun b!81090 () Bool)

(declare-fun Unit!2366 () Unit!2327)

(assert (=> b!81090 (= e!52914 Unit!2366)))

(assert (= (and d!19881 c!12736) b!81075))

(assert (= (and d!19881 (not c!12736)) b!81088))

(assert (= (and b!81088 c!12738) b!81085))

(assert (= (and b!81088 (not c!12738)) b!81086))

(assert (= (and b!81086 c!12735) b!81081))

(assert (= (and b!81086 (not c!12735)) b!81072))

(assert (= (or b!81081 b!81072) bm!7559))

(assert (= (or b!81085 bm!7559) bm!7556))

(assert (= (or b!81085 b!81081) bm!7560))

(assert (= (or b!81075 bm!7556) bm!7562))

(assert (= (or b!81075 bm!7560) bm!7561))

(assert (= (and d!19881 res!42186) b!81070))

(assert (= (and d!19881 c!12734) b!81071))

(assert (= (and d!19881 (not c!12734)) b!81090))

(assert (= (and d!19881 res!42189) b!81077))

(assert (= (and b!81077 res!42185) b!81079))

(assert (= (and b!81077 (not res!42190)) b!81083))

(assert (= (and b!81083 res!42188) b!81076))

(assert (= (and b!81077 res!42187) b!81084))

(assert (= (and b!81084 c!12737) b!81087))

(assert (= (and b!81084 (not c!12737)) b!81073))

(assert (= (and b!81087 res!42192) b!81089))

(assert (= (or b!81087 b!81073) bm!7558))

(assert (= (and b!81084 res!42191) b!81082))

(assert (= (and b!81082 c!12733) b!81080))

(assert (= (and b!81082 (not c!12733)) b!81074))

(assert (= (and b!81080 res!42193) b!81078))

(assert (= (or b!81080 b!81074) bm!7557))

(declare-fun b_lambda!3611 () Bool)

(assert (=> (not b_lambda!3611) (not b!81076)))

(assert (=> b!81076 t!5186))

(declare-fun b_and!4937 () Bool)

(assert (= b_and!4933 (and (=> t!5186 result!2849) b_and!4937)))

(assert (=> b!81076 t!5188))

(declare-fun b_and!4939 () Bool)

(assert (= b_and!4935 (and (=> t!5188 result!2851) b_and!4939)))

(assert (=> b!81076 m!82131))

(declare-fun m!82799 () Bool)

(assert (=> b!81076 m!82799))

(assert (=> b!81076 m!82131))

(assert (=> b!81076 m!82333))

(assert (=> b!81076 m!82333))

(assert (=> b!81076 m!82137))

(assert (=> b!81076 m!82335))

(assert (=> b!81076 m!82137))

(declare-fun m!82801 () Bool)

(assert (=> bm!7558 m!82801))

(assert (=> b!81079 m!82131))

(assert (=> b!81079 m!82131))

(assert (=> b!81079 m!82143))

(declare-fun m!82803 () Bool)

(assert (=> b!81071 m!82803))

(declare-fun m!82805 () Bool)

(assert (=> b!81071 m!82805))

(declare-fun m!82807 () Bool)

(assert (=> b!81071 m!82807))

(declare-fun m!82809 () Bool)

(assert (=> b!81071 m!82809))

(declare-fun m!82811 () Bool)

(assert (=> b!81071 m!82811))

(declare-fun m!82813 () Bool)

(assert (=> b!81071 m!82813))

(declare-fun m!82815 () Bool)

(assert (=> b!81071 m!82815))

(declare-fun m!82817 () Bool)

(assert (=> b!81071 m!82817))

(declare-fun m!82819 () Bool)

(assert (=> b!81071 m!82819))

(declare-fun m!82821 () Bool)

(assert (=> b!81071 m!82821))

(declare-fun m!82823 () Bool)

(assert (=> b!81071 m!82823))

(declare-fun m!82825 () Bool)

(assert (=> b!81071 m!82825))

(declare-fun m!82827 () Bool)

(assert (=> b!81071 m!82827))

(assert (=> b!81071 m!82809))

(assert (=> b!81071 m!82819))

(assert (=> b!81071 m!82131))

(declare-fun m!82829 () Bool)

(assert (=> b!81071 m!82829))

(assert (=> b!81071 m!82813))

(declare-fun m!82831 () Bool)

(assert (=> b!81071 m!82831))

(assert (=> b!81071 m!82825))

(declare-fun m!82833 () Bool)

(assert (=> b!81071 m!82833))

(assert (=> b!81083 m!82131))

(assert (=> b!81083 m!82131))

(declare-fun m!82835 () Bool)

(assert (=> b!81083 m!82835))

(declare-fun m!82837 () Bool)

(assert (=> b!81075 m!82837))

(declare-fun m!82839 () Bool)

(assert (=> bm!7557 m!82839))

(declare-fun m!82841 () Bool)

(assert (=> b!81078 m!82841))

(assert (=> bm!7562 m!82805))

(declare-fun m!82843 () Bool)

(assert (=> bm!7561 m!82843))

(declare-fun m!82845 () Bool)

(assert (=> b!81089 m!82845))

(assert (=> b!81070 m!82131))

(assert (=> b!81070 m!82131))

(assert (=> b!81070 m!82143))

(assert (=> d!19881 m!81973))

(assert (=> d!19801 d!19881))

(assert (=> d!19801 d!19809))

(declare-fun d!19883 () Bool)

(assert (=> d!19883 (= (+!104 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37269 lt!37084 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(assert (=> d!19883 true))

(declare-fun _$7!68 () Unit!2327)

(assert (=> d!19883 (= (choose!484 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) lt!37269 (zeroValue!2188 newMap!16) lt!37084 (minValue!2188 newMap!16) (defaultEntry!2292 newMap!16)) _$7!68)))

(declare-fun bs!3419 () Bool)

(assert (= bs!3419 d!19883))

(assert (=> bs!3419 m!81711))

(assert (=> bs!3419 m!81711))

(assert (=> bs!3419 m!82575))

(assert (=> bs!3419 m!82577))

(assert (=> d!19801 d!19883))

(declare-fun d!19885 () Bool)

(assert (=> d!19885 (= (validMask!0 (mask!6297 newMap!16)) (and (or (= (mask!6297 newMap!16) #b00000000000000000000000000000111) (= (mask!6297 newMap!16) #b00000000000000000000000000001111) (= (mask!6297 newMap!16) #b00000000000000000000000000011111) (= (mask!6297 newMap!16) #b00000000000000000000000000111111) (= (mask!6297 newMap!16) #b00000000000000000000000001111111) (= (mask!6297 newMap!16) #b00000000000000000000000011111111) (= (mask!6297 newMap!16) #b00000000000000000000000111111111) (= (mask!6297 newMap!16) #b00000000000000000000001111111111) (= (mask!6297 newMap!16) #b00000000000000000000011111111111) (= (mask!6297 newMap!16) #b00000000000000000000111111111111) (= (mask!6297 newMap!16) #b00000000000000000001111111111111) (= (mask!6297 newMap!16) #b00000000000000000011111111111111) (= (mask!6297 newMap!16) #b00000000000000000111111111111111) (= (mask!6297 newMap!16) #b00000000000000001111111111111111) (= (mask!6297 newMap!16) #b00000000000000011111111111111111) (= (mask!6297 newMap!16) #b00000000000000111111111111111111) (= (mask!6297 newMap!16) #b00000000000001111111111111111111) (= (mask!6297 newMap!16) #b00000000000011111111111111111111) (= (mask!6297 newMap!16) #b00000000000111111111111111111111) (= (mask!6297 newMap!16) #b00000000001111111111111111111111) (= (mask!6297 newMap!16) #b00000000011111111111111111111111) (= (mask!6297 newMap!16) #b00000000111111111111111111111111) (= (mask!6297 newMap!16) #b00000001111111111111111111111111) (= (mask!6297 newMap!16) #b00000011111111111111111111111111) (= (mask!6297 newMap!16) #b00000111111111111111111111111111) (= (mask!6297 newMap!16) #b00001111111111111111111111111111) (= (mask!6297 newMap!16) #b00011111111111111111111111111111) (= (mask!6297 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6297 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!19801 d!19885))

(declare-fun d!19887 () Bool)

(declare-fun e!52927 () Bool)

(assert (=> d!19887 e!52927))

(declare-fun res!42195 () Bool)

(assert (=> d!19887 (=> (not res!42195) (not e!52927))))

(declare-fun lt!37869 () ListLongMap!1437)

(assert (=> d!19887 (= res!42195 (contains!742 lt!37869 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084))))))

(declare-fun lt!37868 () List!1514)

(assert (=> d!19887 (= lt!37869 (ListLongMap!1438 lt!37868))))

(declare-fun lt!37867 () Unit!2327)

(declare-fun lt!37866 () Unit!2327)

(assert (=> d!19887 (= lt!37867 lt!37866)))

(assert (=> d!19887 (= (getValueByKey!136 lt!37868 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084))) (Some!141 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084))))))

(assert (=> d!19887 (= lt!37866 (lemmaContainsTupThenGetReturnValue!56 lt!37868 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084))))))

(assert (=> d!19887 (= lt!37868 (insertStrictlySorted!59 (toList!734 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084))))))

(assert (=> d!19887 (= (+!104 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084)) lt!37869)))

(declare-fun b!81091 () Bool)

(declare-fun res!42194 () Bool)

(assert (=> b!81091 (=> (not res!42194) (not e!52927))))

(assert (=> b!81091 (= res!42194 (= (getValueByKey!136 (toList!734 lt!37869) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084))) (Some!141 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084)))))))

(declare-fun b!81092 () Bool)

(assert (=> b!81092 (= e!52927 (contains!745 (toList!734 lt!37869) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084)))))

(assert (= (and d!19887 res!42195) b!81091))

(assert (= (and b!81091 res!42194) b!81092))

(declare-fun m!82847 () Bool)

(assert (=> d!19887 m!82847))

(declare-fun m!82849 () Bool)

(assert (=> d!19887 m!82849))

(declare-fun m!82851 () Bool)

(assert (=> d!19887 m!82851))

(declare-fun m!82853 () Bool)

(assert (=> d!19887 m!82853))

(declare-fun m!82855 () Bool)

(assert (=> b!81091 m!82855))

(declare-fun m!82857 () Bool)

(assert (=> b!81092 m!82857))

(assert (=> d!19801 d!19887))

(declare-fun d!19889 () Bool)

(declare-fun res!42196 () Bool)

(declare-fun e!52928 () Bool)

(assert (=> d!19889 (=> res!42196 e!52928)))

(assert (=> d!19889 (= res!42196 (or ((_ is Nil!1511) lt!37834) ((_ is Nil!1511) (t!5172 lt!37834))))))

(assert (=> d!19889 (= (isStrictlySorted!291 lt!37834) e!52928)))

(declare-fun b!81093 () Bool)

(declare-fun e!52929 () Bool)

(assert (=> b!81093 (= e!52928 e!52929)))

(declare-fun res!42197 () Bool)

(assert (=> b!81093 (=> (not res!42197) (not e!52929))))

(assert (=> b!81093 (= res!42197 (bvslt (_1!1102 (h!2099 lt!37834)) (_1!1102 (h!2099 (t!5172 lt!37834)))))))

(declare-fun b!81094 () Bool)

(assert (=> b!81094 (= e!52929 (isStrictlySorted!291 (t!5172 lt!37834)))))

(assert (= (and d!19889 (not res!42196)) b!81093))

(assert (= (and b!81093 res!42197) b!81094))

(declare-fun m!82859 () Bool)

(assert (=> b!81094 m!82859))

(assert (=> d!19867 d!19889))

(declare-fun d!19891 () Bool)

(declare-fun res!42198 () Bool)

(declare-fun e!52930 () Bool)

(assert (=> d!19891 (=> res!42198 e!52930)))

(assert (=> d!19891 (= res!42198 (or ((_ is Nil!1511) (toList!734 lt!37071)) ((_ is Nil!1511) (t!5172 (toList!734 lt!37071)))))))

(assert (=> d!19891 (= (isStrictlySorted!291 (toList!734 lt!37071)) e!52930)))

(declare-fun b!81095 () Bool)

(declare-fun e!52931 () Bool)

(assert (=> b!81095 (= e!52930 e!52931)))

(declare-fun res!42199 () Bool)

(assert (=> b!81095 (=> (not res!42199) (not e!52931))))

(assert (=> b!81095 (= res!42199 (bvslt (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 (h!2099 (t!5172 (toList!734 lt!37071))))))))

(declare-fun b!81096 () Bool)

(assert (=> b!81096 (= e!52931 (isStrictlySorted!291 (t!5172 (toList!734 lt!37071))))))

(assert (= (and d!19891 (not res!42198)) b!81095))

(assert (= (and b!81095 res!42199) b!81096))

(declare-fun m!82861 () Bool)

(assert (=> b!81096 m!82861))

(assert (=> d!19867 d!19891))

(declare-fun lt!37870 () Bool)

(declare-fun d!19893 () Bool)

(assert (=> d!19893 (= lt!37870 (select (content!86 (toList!734 lt!37450)) (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun e!52932 () Bool)

(assert (=> d!19893 (= lt!37870 e!52932)))

(declare-fun res!42201 () Bool)

(assert (=> d!19893 (=> (not res!42201) (not e!52932))))

(assert (=> d!19893 (= res!42201 ((_ is Cons!1510) (toList!734 lt!37450)))))

(assert (=> d!19893 (= (contains!745 (toList!734 lt!37450) (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37870)))

(declare-fun b!81097 () Bool)

(declare-fun e!52933 () Bool)

(assert (=> b!81097 (= e!52932 e!52933)))

(declare-fun res!42200 () Bool)

(assert (=> b!81097 (=> res!42200 e!52933)))

(assert (=> b!81097 (= res!42200 (= (h!2099 (toList!734 lt!37450)) (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!81098 () Bool)

(assert (=> b!81098 (= e!52933 (contains!745 (t!5172 (toList!734 lt!37450)) (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19893 res!42201) b!81097))

(assert (= (and b!81097 (not res!42200)) b!81098))

(declare-fun m!82863 () Bool)

(assert (=> d!19893 m!82863))

(declare-fun m!82865 () Bool)

(assert (=> d!19893 m!82865))

(declare-fun m!82867 () Bool)

(assert (=> b!81098 m!82867))

(assert (=> b!80539 d!19893))

(declare-fun b!81102 () Bool)

(declare-fun e!52935 () Option!142)

(assert (=> b!81102 (= e!52935 None!140)))

(declare-fun b!81099 () Bool)

(declare-fun e!52934 () Option!142)

(assert (=> b!81099 (= e!52934 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37759)))))))

(declare-fun b!81101 () Bool)

(assert (=> b!81101 (= e!52935 (getValueByKey!136 (t!5172 (toList!734 lt!37759)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!19895 () Bool)

(declare-fun c!12739 () Bool)

(assert (=> d!19895 (= c!12739 (and ((_ is Cons!1510) (toList!734 lt!37759)) (= (_1!1102 (h!2099 (toList!734 lt!37759))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!19895 (= (getValueByKey!136 (toList!734 lt!37759) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!52934)))

(declare-fun b!81100 () Bool)

(assert (=> b!81100 (= e!52934 e!52935)))

(declare-fun c!12740 () Bool)

(assert (=> b!81100 (= c!12740 (and ((_ is Cons!1510) (toList!734 lt!37759)) (not (= (_1!1102 (h!2099 (toList!734 lt!37759))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!19895 c!12739) b!81099))

(assert (= (and d!19895 (not c!12739)) b!81100))

(assert (= (and b!81100 c!12740) b!81101))

(assert (= (and b!81100 (not c!12740)) b!81102))

(declare-fun m!82869 () Bool)

(assert (=> b!81101 m!82869))

(assert (=> b!80894 d!19895))

(declare-fun d!19897 () Bool)

(assert (=> d!19897 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37301) (_1!1102 lt!37082))) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37301) (_1!1102 lt!37082)))))))

(declare-fun bs!3420 () Bool)

(assert (= bs!3420 d!19897))

(assert (=> bs!3420 m!81563))

(declare-fun m!82871 () Bool)

(assert (=> bs!3420 m!82871))

(assert (=> b!80486 d!19897))

(assert (=> b!80486 d!19803))

(declare-fun d!19899 () Bool)

(declare-fun res!42202 () Bool)

(declare-fun e!52936 () Bool)

(assert (=> d!19899 (=> res!42202 e!52936)))

(assert (=> d!19899 (= res!42202 (and ((_ is Cons!1510) (toList!734 lt!37316)) (= (_1!1102 (h!2099 (toList!734 lt!37316))) (_1!1102 lt!37082))))))

(assert (=> d!19899 (= (containsKey!140 (toList!734 lt!37316) (_1!1102 lt!37082)) e!52936)))

(declare-fun b!81103 () Bool)

(declare-fun e!52937 () Bool)

(assert (=> b!81103 (= e!52936 e!52937)))

(declare-fun res!42203 () Bool)

(assert (=> b!81103 (=> (not res!42203) (not e!52937))))

(assert (=> b!81103 (= res!42203 (and (or (not ((_ is Cons!1510) (toList!734 lt!37316))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37316))) (_1!1102 lt!37082))) ((_ is Cons!1510) (toList!734 lt!37316)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37316))) (_1!1102 lt!37082))))))

(declare-fun b!81104 () Bool)

(assert (=> b!81104 (= e!52937 (containsKey!140 (t!5172 (toList!734 lt!37316)) (_1!1102 lt!37082)))))

(assert (= (and d!19899 (not res!42202)) b!81103))

(assert (= (and b!81103 res!42203) b!81104))

(declare-fun m!82873 () Bool)

(assert (=> b!81104 m!82873))

(assert (=> d!19811 d!19899))

(declare-fun d!19901 () Bool)

(assert (=> d!19901 (= (+!104 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (getCurrentListMap!423 (_keys!3955 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(assert (=> d!19901 true))

(declare-fun _$5!86 () Unit!2327)

(assert (=> d!19901 (= (choose!482 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3112 lt!37277) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 (defaultEntry!2292 newMap!16)) _$5!86)))

(declare-fun bs!3421 () Bool)

(assert (= bs!3421 d!19901))

(assert (=> bs!3421 m!81711))

(assert (=> bs!3421 m!81711))

(assert (=> bs!3421 m!82049))

(assert (=> bs!3421 m!81519))

(assert (=> bs!3421 m!82051))

(assert (=> d!19711 d!19901))

(assert (=> d!19711 d!19885))

(declare-fun d!19903 () Bool)

(declare-fun lt!37871 () Bool)

(assert (=> d!19903 (= lt!37871 (select (content!86 (toList!734 lt!37803)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(declare-fun e!52938 () Bool)

(assert (=> d!19903 (= lt!37871 e!52938)))

(declare-fun res!42205 () Bool)

(assert (=> d!19903 (=> (not res!42205) (not e!52938))))

(assert (=> d!19903 (= res!42205 ((_ is Cons!1510) (toList!734 lt!37803)))))

(assert (=> d!19903 (= (contains!745 (toList!734 lt!37803) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) lt!37871)))

(declare-fun b!81105 () Bool)

(declare-fun e!52939 () Bool)

(assert (=> b!81105 (= e!52938 e!52939)))

(declare-fun res!42204 () Bool)

(assert (=> b!81105 (=> res!42204 e!52939)))

(assert (=> b!81105 (= res!42204 (= (h!2099 (toList!734 lt!37803)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(declare-fun b!81106 () Bool)

(assert (=> b!81106 (= e!52939 (contains!745 (t!5172 (toList!734 lt!37803)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (= (and d!19903 res!42205) b!81105))

(assert (= (and b!81105 (not res!42204)) b!81106))

(declare-fun m!82875 () Bool)

(assert (=> d!19903 m!82875))

(declare-fun m!82877 () Bool)

(assert (=> d!19903 m!82877))

(declare-fun m!82879 () Bool)

(assert (=> b!81106 m!82879))

(assert (=> b!80972 d!19903))

(declare-fun d!19905 () Bool)

(assert (=> d!19905 (= ($colon$colon!69 e!52592 (ite c!12593 (h!2099 (toList!734 (+!104 lt!37073 lt!37079))) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082)))) (Cons!1510 (ite c!12593 (h!2099 (toList!734 (+!104 lt!37073 lt!37079))) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))) e!52592))))

(assert (=> bm!7480 d!19905))

(declare-fun d!19907 () Bool)

(declare-fun c!12743 () Bool)

(assert (=> d!19907 (= c!12743 ((_ is Nil!1511) (toList!734 lt!37305)))))

(declare-fun e!52942 () (InoxSet tuple2!2182))

(assert (=> d!19907 (= (content!86 (toList!734 lt!37305)) e!52942)))

(declare-fun b!81111 () Bool)

(assert (=> b!81111 (= e!52942 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!81112 () Bool)

(assert (=> b!81112 (= e!52942 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2099 (toList!734 lt!37305)) true) (content!86 (t!5172 (toList!734 lt!37305)))))))

(assert (= (and d!19907 c!12743) b!81111))

(assert (= (and d!19907 (not c!12743)) b!81112))

(declare-fun m!82881 () Bool)

(assert (=> b!81112 m!82881))

(declare-fun m!82883 () Bool)

(assert (=> b!81112 m!82883))

(assert (=> d!19705 d!19907))

(declare-fun b!81113 () Bool)

(declare-fun e!52946 () List!1514)

(declare-fun call!7568 () List!1514)

(assert (=> b!81113 (= e!52946 call!7568)))

(declare-fun bm!7563 () Bool)

(declare-fun e!52943 () List!1514)

(declare-fun call!7567 () List!1514)

(declare-fun c!12747 () Bool)

(assert (=> bm!7563 (= call!7567 ($colon$colon!69 e!52943 (ite c!12747 (h!2099 (t!5172 (toList!734 lt!37071))) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075)))))))

(declare-fun c!12745 () Bool)

(assert (=> bm!7563 (= c!12745 c!12747)))

(declare-fun b!81114 () Bool)

(declare-fun e!52947 () Bool)

(declare-fun lt!37872 () List!1514)

(assert (=> b!81114 (= e!52947 (contains!745 lt!37872 (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(declare-fun bm!7564 () Bool)

(declare-fun call!7566 () List!1514)

(assert (=> bm!7564 (= call!7568 call!7566)))

(declare-fun d!19909 () Bool)

(assert (=> d!19909 e!52947))

(declare-fun res!42207 () Bool)

(assert (=> d!19909 (=> (not res!42207) (not e!52947))))

(assert (=> d!19909 (= res!42207 (isStrictlySorted!291 lt!37872))))

(declare-fun e!52945 () List!1514)

(assert (=> d!19909 (= lt!37872 e!52945)))

(assert (=> d!19909 (= c!12747 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37071))) (bvslt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37071)))) (_1!1102 lt!37075))))))

(assert (=> d!19909 (isStrictlySorted!291 (t!5172 (toList!734 lt!37071)))))

(assert (=> d!19909 (= (insertStrictlySorted!59 (t!5172 (toList!734 lt!37071)) (_1!1102 lt!37075) (_2!1102 lt!37075)) lt!37872)))

(declare-fun b!81115 () Bool)

(declare-fun c!12744 () Bool)

(assert (=> b!81115 (= c!12744 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37071))) (bvsgt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37071)))) (_1!1102 lt!37075))))))

(declare-fun e!52944 () List!1514)

(assert (=> b!81115 (= e!52944 e!52946)))

(declare-fun b!81116 () Bool)

(assert (=> b!81116 (= e!52944 call!7566)))

(declare-fun b!81117 () Bool)

(assert (=> b!81117 (= e!52945 call!7567)))

(declare-fun bm!7565 () Bool)

(assert (=> bm!7565 (= call!7566 call!7567)))

(declare-fun b!81118 () Bool)

(declare-fun res!42206 () Bool)

(assert (=> b!81118 (=> (not res!42206) (not e!52947))))

(assert (=> b!81118 (= res!42206 (containsKey!140 lt!37872 (_1!1102 lt!37075)))))

(declare-fun b!81119 () Bool)

(assert (=> b!81119 (= e!52946 call!7568)))

(declare-fun c!12746 () Bool)

(declare-fun b!81120 () Bool)

(assert (=> b!81120 (= e!52943 (ite c!12746 (t!5172 (t!5172 (toList!734 lt!37071))) (ite c!12744 (Cons!1510 (h!2099 (t!5172 (toList!734 lt!37071))) (t!5172 (t!5172 (toList!734 lt!37071)))) Nil!1511)))))

(declare-fun b!81121 () Bool)

(assert (=> b!81121 (= e!52945 e!52944)))

(assert (=> b!81121 (= c!12746 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37071))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37071)))) (_1!1102 lt!37075))))))

(declare-fun b!81122 () Bool)

(assert (=> b!81122 (= e!52943 (insertStrictlySorted!59 (t!5172 (t!5172 (toList!734 lt!37071))) (_1!1102 lt!37075) (_2!1102 lt!37075)))))

(assert (= (and d!19909 c!12747) b!81117))

(assert (= (and d!19909 (not c!12747)) b!81121))

(assert (= (and b!81121 c!12746) b!81116))

(assert (= (and b!81121 (not c!12746)) b!81115))

(assert (= (and b!81115 c!12744) b!81119))

(assert (= (and b!81115 (not c!12744)) b!81113))

(assert (= (or b!81119 b!81113) bm!7564))

(assert (= (or b!81116 bm!7564) bm!7565))

(assert (= (or b!81117 bm!7565) bm!7563))

(assert (= (and bm!7563 c!12745) b!81122))

(assert (= (and bm!7563 (not c!12745)) b!81120))

(assert (= (and d!19909 res!42207) b!81118))

(assert (= (and b!81118 res!42206) b!81114))

(declare-fun m!82885 () Bool)

(assert (=> d!19909 m!82885))

(assert (=> d!19909 m!82861))

(declare-fun m!82887 () Bool)

(assert (=> b!81122 m!82887))

(declare-fun m!82889 () Bool)

(assert (=> bm!7563 m!82889))

(declare-fun m!82891 () Bool)

(assert (=> b!81118 m!82891))

(declare-fun m!82893 () Bool)

(assert (=> b!81114 m!82893))

(assert (=> b!80836 d!19909))

(declare-fun b!81126 () Bool)

(declare-fun e!52949 () Option!142)

(assert (=> b!81126 (= e!52949 None!140)))

(declare-fun b!81123 () Bool)

(declare-fun e!52948 () Option!142)

(assert (=> b!81123 (= e!52948 (Some!141 (_2!1102 (h!2099 (t!5172 (toList!734 lt!37312))))))))

(declare-fun b!81125 () Bool)

(assert (=> b!81125 (= e!52949 (getValueByKey!136 (t!5172 (t!5172 (toList!734 lt!37312))) (_1!1102 lt!37079)))))

(declare-fun d!19911 () Bool)

(declare-fun c!12748 () Bool)

(assert (=> d!19911 (= c!12748 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37312))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37312)))) (_1!1102 lt!37079))))))

(assert (=> d!19911 (= (getValueByKey!136 (t!5172 (toList!734 lt!37312)) (_1!1102 lt!37079)) e!52948)))

(declare-fun b!81124 () Bool)

(assert (=> b!81124 (= e!52948 e!52949)))

(declare-fun c!12749 () Bool)

(assert (=> b!81124 (= c!12749 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37312))) (not (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37312)))) (_1!1102 lt!37079)))))))

(assert (= (and d!19911 c!12748) b!81123))

(assert (= (and d!19911 (not c!12748)) b!81124))

(assert (= (and b!81124 c!12749) b!81125))

(assert (= (and b!81124 (not c!12749)) b!81126))

(declare-fun m!82895 () Bool)

(assert (=> b!81125 m!82895))

(assert (=> b!80956 d!19911))

(declare-fun d!19913 () Bool)

(assert (=> d!19913 (isDefined!90 (getValueByKey!136 (toList!734 call!7441) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))

(declare-fun lt!37873 () Unit!2327)

(assert (=> d!19913 (= lt!37873 (choose!485 (toList!734 call!7441) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))

(declare-fun e!52950 () Bool)

(assert (=> d!19913 e!52950))

(declare-fun res!42208 () Bool)

(assert (=> d!19913 (=> (not res!42208) (not e!52950))))

(assert (=> d!19913 (= res!42208 (isStrictlySorted!291 (toList!734 call!7441)))))

(assert (=> d!19913 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 call!7441) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))) lt!37873)))

(declare-fun b!81127 () Bool)

(assert (=> b!81127 (= e!52950 (containsKey!140 (toList!734 call!7441) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))

(assert (= (and d!19913 res!42208) b!81127))

(assert (=> d!19913 m!81543))

(assert (=> d!19913 m!82037))

(assert (=> d!19913 m!82037))

(assert (=> d!19913 m!82039))

(assert (=> d!19913 m!81543))

(declare-fun m!82897 () Bool)

(assert (=> d!19913 m!82897))

(declare-fun m!82899 () Bool)

(assert (=> d!19913 m!82899))

(assert (=> b!81127 m!81543))

(assert (=> b!81127 m!82033))

(assert (=> b!80635 d!19913))

(declare-fun d!19915 () Bool)

(assert (=> d!19915 (= (isDefined!90 (getValueByKey!136 (toList!734 call!7441) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277)))) (not (isEmpty!334 (getValueByKey!136 (toList!734 call!7441) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))))

(declare-fun bs!3422 () Bool)

(assert (= bs!3422 d!19915))

(assert (=> bs!3422 m!82037))

(declare-fun m!82901 () Bool)

(assert (=> bs!3422 m!82901))

(assert (=> b!80635 d!19915))

(declare-fun b!81131 () Bool)

(declare-fun e!52952 () Option!142)

(assert (=> b!81131 (= e!52952 None!140)))

(declare-fun b!81128 () Bool)

(declare-fun e!52951 () Option!142)

(assert (=> b!81128 (= e!52951 (Some!141 (_2!1102 (h!2099 (toList!734 call!7441)))))))

(declare-fun b!81130 () Bool)

(assert (=> b!81130 (= e!52952 (getValueByKey!136 (t!5172 (toList!734 call!7441)) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))

(declare-fun d!19917 () Bool)

(declare-fun c!12750 () Bool)

(assert (=> d!19917 (= c!12750 (and ((_ is Cons!1510) (toList!734 call!7441)) (= (_1!1102 (h!2099 (toList!734 call!7441))) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277)))))))

(assert (=> d!19917 (= (getValueByKey!136 (toList!734 call!7441) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))) e!52951)))

(declare-fun b!81129 () Bool)

(assert (=> b!81129 (= e!52951 e!52952)))

(declare-fun c!12751 () Bool)

(assert (=> b!81129 (= c!12751 (and ((_ is Cons!1510) (toList!734 call!7441)) (not (= (_1!1102 (h!2099 (toList!734 call!7441))) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))))

(assert (= (and d!19917 c!12750) b!81128))

(assert (= (and d!19917 (not c!12750)) b!81129))

(assert (= (and b!81129 c!12751) b!81130))

(assert (= (and b!81129 (not c!12751)) b!81131))

(assert (=> b!81130 m!81543))

(declare-fun m!82903 () Bool)

(assert (=> b!81130 m!82903))

(assert (=> b!80635 d!19917))

(declare-fun b!81135 () Bool)

(declare-fun e!52954 () Option!142)

(assert (=> b!81135 (= e!52954 None!140)))

(declare-fun b!81132 () Bool)

(declare-fun e!52953 () Option!142)

(assert (=> b!81132 (= e!52953 (Some!141 (_2!1102 (h!2099 (t!5172 (toList!734 lt!37305))))))))

(declare-fun b!81134 () Bool)

(assert (=> b!81134 (= e!52954 (getValueByKey!136 (t!5172 (t!5172 (toList!734 lt!37305))) (_1!1102 lt!37075)))))

(declare-fun d!19919 () Bool)

(declare-fun c!12752 () Bool)

(assert (=> d!19919 (= c!12752 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37305))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37305)))) (_1!1102 lt!37075))))))

(assert (=> d!19919 (= (getValueByKey!136 (t!5172 (toList!734 lt!37305)) (_1!1102 lt!37075)) e!52953)))

(declare-fun b!81133 () Bool)

(assert (=> b!81133 (= e!52953 e!52954)))

(declare-fun c!12753 () Bool)

(assert (=> b!81133 (= c!12753 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37305))) (not (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37305)))) (_1!1102 lt!37075)))))))

(assert (= (and d!19919 c!12752) b!81132))

(assert (= (and d!19919 (not c!12752)) b!81133))

(assert (= (and b!81133 c!12753) b!81134))

(assert (= (and b!81133 (not c!12753)) b!81135))

(declare-fun m!82905 () Bool)

(assert (=> b!81134 m!82905))

(assert (=> b!80948 d!19919))

(declare-fun b!81139 () Bool)

(declare-fun e!52956 () Option!142)

(assert (=> b!81139 (= e!52956 None!140)))

(declare-fun b!81136 () Bool)

(declare-fun e!52955 () Option!142)

(assert (=> b!81136 (= e!52955 (Some!141 (_2!1102 (h!2099 (t!5172 (toList!734 lt!37346))))))))

(declare-fun b!81138 () Bool)

(assert (=> b!81138 (= e!52956 (getValueByKey!136 (t!5172 (t!5172 (toList!734 lt!37346))) (_1!1102 lt!37075)))))

(declare-fun d!19921 () Bool)

(declare-fun c!12754 () Bool)

(assert (=> d!19921 (= c!12754 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37346))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37346)))) (_1!1102 lt!37075))))))

(assert (=> d!19921 (= (getValueByKey!136 (t!5172 (toList!734 lt!37346)) (_1!1102 lt!37075)) e!52955)))

(declare-fun b!81137 () Bool)

(assert (=> b!81137 (= e!52955 e!52956)))

(declare-fun c!12755 () Bool)

(assert (=> b!81137 (= c!12755 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37346))) (not (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37346)))) (_1!1102 lt!37075)))))))

(assert (= (and d!19921 c!12754) b!81136))

(assert (= (and d!19921 (not c!12754)) b!81137))

(assert (= (and b!81137 c!12755) b!81138))

(assert (= (and b!81137 (not c!12755)) b!81139))

(declare-fun m!82907 () Bool)

(assert (=> b!81138 m!82907))

(assert (=> b!80618 d!19921))

(declare-fun d!19923 () Bool)

(assert (=> d!19923 (= (isDefined!90 (getValueByKey!136 (toList!734 call!7438) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))) (not (isEmpty!334 (getValueByKey!136 (toList!734 call!7438) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))))

(declare-fun bs!3423 () Bool)

(assert (= bs!3423 d!19923))

(assert (=> bs!3423 m!82705))

(declare-fun m!82909 () Bool)

(assert (=> bs!3423 m!82909))

(assert (=> b!80975 d!19923))

(declare-fun b!81143 () Bool)

(declare-fun e!52958 () Option!142)

(assert (=> b!81143 (= e!52958 None!140)))

(declare-fun b!81140 () Bool)

(declare-fun e!52957 () Option!142)

(assert (=> b!81140 (= e!52957 (Some!141 (_2!1102 (h!2099 (toList!734 call!7438)))))))

(declare-fun b!81142 () Bool)

(assert (=> b!81142 (= e!52958 (getValueByKey!136 (t!5172 (toList!734 call!7438)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun d!19925 () Bool)

(declare-fun c!12756 () Bool)

(assert (=> d!19925 (= c!12756 (and ((_ is Cons!1510) (toList!734 call!7438)) (= (_1!1102 (h!2099 (toList!734 call!7438))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (=> d!19925 (= (getValueByKey!136 (toList!734 call!7438) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) e!52957)))

(declare-fun b!81141 () Bool)

(assert (=> b!81141 (= e!52957 e!52958)))

(declare-fun c!12757 () Bool)

(assert (=> b!81141 (= c!12757 (and ((_ is Cons!1510) (toList!734 call!7438)) (not (= (_1!1102 (h!2099 (toList!734 call!7438))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))))

(assert (= (and d!19925 c!12756) b!81140))

(assert (= (and d!19925 (not c!12756)) b!81141))

(assert (= (and b!81141 c!12757) b!81142))

(assert (= (and b!81141 (not c!12757)) b!81143))

(assert (=> b!81142 m!81295))

(declare-fun m!82911 () Bool)

(assert (=> b!81142 m!82911))

(assert (=> b!80975 d!19925))

(assert (=> d!19631 d!19641))

(assert (=> d!19631 d!19633))

(declare-fun d!19927 () Bool)

(assert (=> d!19927 (contains!742 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37405)))

(assert (=> d!19927 true))

(declare-fun _$35!324 () Unit!2327)

(assert (=> d!19927 (= (choose!478 lt!37417 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37405) _$35!324)))

(declare-fun bs!3424 () Bool)

(assert (= bs!3424 d!19927))

(assert (=> bs!3424 m!81731))

(assert (=> bs!3424 m!81731))

(assert (=> bs!3424 m!81733))

(assert (=> d!19631 d!19927))

(declare-fun d!19929 () Bool)

(declare-fun e!52959 () Bool)

(assert (=> d!19929 e!52959))

(declare-fun res!42209 () Bool)

(assert (=> d!19929 (=> res!42209 e!52959)))

(declare-fun lt!37877 () Bool)

(assert (=> d!19929 (= res!42209 (not lt!37877))))

(declare-fun lt!37876 () Bool)

(assert (=> d!19929 (= lt!37877 lt!37876)))

(declare-fun lt!37875 () Unit!2327)

(declare-fun e!52960 () Unit!2327)

(assert (=> d!19929 (= lt!37875 e!52960)))

(declare-fun c!12758 () Bool)

(assert (=> d!19929 (= c!12758 lt!37876)))

(assert (=> d!19929 (= lt!37876 (containsKey!140 (toList!734 lt!37417) lt!37405))))

(assert (=> d!19929 (= (contains!742 lt!37417 lt!37405) lt!37877)))

(declare-fun b!81145 () Bool)

(declare-fun lt!37874 () Unit!2327)

(assert (=> b!81145 (= e!52960 lt!37874)))

(assert (=> b!81145 (= lt!37874 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37417) lt!37405))))

(assert (=> b!81145 (isDefined!90 (getValueByKey!136 (toList!734 lt!37417) lt!37405))))

(declare-fun b!81146 () Bool)

(declare-fun Unit!2367 () Unit!2327)

(assert (=> b!81146 (= e!52960 Unit!2367)))

(declare-fun b!81147 () Bool)

(assert (=> b!81147 (= e!52959 (isDefined!90 (getValueByKey!136 (toList!734 lt!37417) lt!37405)))))

(assert (= (and d!19929 c!12758) b!81145))

(assert (= (and d!19929 (not c!12758)) b!81146))

(assert (= (and d!19929 (not res!42209)) b!81147))

(declare-fun m!82913 () Bool)

(assert (=> d!19929 m!82913))

(declare-fun m!82915 () Bool)

(assert (=> b!81145 m!82915))

(declare-fun m!82917 () Bool)

(assert (=> b!81145 m!82917))

(assert (=> b!81145 m!82917))

(declare-fun m!82919 () Bool)

(assert (=> b!81145 m!82919))

(assert (=> b!81147 m!82917))

(assert (=> b!81147 m!82917))

(assert (=> b!81147 m!82919))

(assert (=> d!19631 d!19929))

(declare-fun d!19931 () Bool)

(declare-fun e!52961 () Bool)

(assert (=> d!19931 e!52961))

(declare-fun res!42211 () Bool)

(assert (=> d!19931 (=> (not res!42211) (not e!52961))))

(declare-fun lt!37881 () ListLongMap!1437)

(assert (=> d!19931 (= res!42211 (contains!742 lt!37881 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun lt!37880 () List!1514)

(assert (=> d!19931 (= lt!37881 (ListLongMap!1438 lt!37880))))

(declare-fun lt!37879 () Unit!2327)

(declare-fun lt!37878 () Unit!2327)

(assert (=> d!19931 (= lt!37879 lt!37878)))

(assert (=> d!19931 (= (getValueByKey!136 lt!37880 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19931 (= lt!37878 (lemmaContainsTupThenGetReturnValue!56 lt!37880 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19931 (= lt!37880 (insertStrictlySorted!59 (toList!734 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!19931 (= (+!104 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) lt!37881)))

(declare-fun b!81148 () Bool)

(declare-fun res!42210 () Bool)

(assert (=> b!81148 (=> (not res!42210) (not e!52961))))

(assert (=> b!81148 (= res!42210 (= (getValueByKey!136 (toList!734 lt!37881) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!81149 () Bool)

(assert (=> b!81149 (= e!52961 (contains!745 (toList!734 lt!37881) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (= (and d!19931 res!42211) b!81148))

(assert (= (and b!81148 res!42210) b!81149))

(declare-fun m!82921 () Bool)

(assert (=> d!19931 m!82921))

(declare-fun m!82923 () Bool)

(assert (=> d!19931 m!82923))

(declare-fun m!82925 () Bool)

(assert (=> d!19931 m!82925))

(declare-fun m!82927 () Bool)

(assert (=> d!19931 m!82927))

(declare-fun m!82929 () Bool)

(assert (=> b!81148 m!82929))

(declare-fun m!82931 () Bool)

(assert (=> b!81149 m!82931))

(assert (=> b!80643 d!19931))

(assert (=> b!80643 d!19809))

(declare-fun b!81150 () Bool)

(declare-fun e!52969 () Bool)

(assert (=> b!81150 (= e!52969 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81151 () Bool)

(declare-fun e!52962 () Unit!2327)

(declare-fun lt!37887 () Unit!2327)

(assert (=> b!81151 (= e!52962 lt!37887)))

(declare-fun lt!37895 () ListLongMap!1437)

(assert (=> b!81151 (= lt!37895 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37890 () (_ BitVec 64))

(assert (=> b!81151 (= lt!37890 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37883 () (_ BitVec 64))

(assert (=> b!81151 (= lt!37883 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37899 () Unit!2327)

(assert (=> b!81151 (= lt!37899 (addStillContains!56 lt!37895 lt!37890 (zeroValue!2188 newMap!16) lt!37883))))

(assert (=> b!81151 (contains!742 (+!104 lt!37895 (tuple2!2183 lt!37890 (zeroValue!2188 newMap!16))) lt!37883)))

(declare-fun lt!37902 () Unit!2327)

(assert (=> b!81151 (= lt!37902 lt!37899)))

(declare-fun lt!37891 () ListLongMap!1437)

(assert (=> b!81151 (= lt!37891 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37882 () (_ BitVec 64))

(assert (=> b!81151 (= lt!37882 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37903 () (_ BitVec 64))

(assert (=> b!81151 (= lt!37903 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37889 () Unit!2327)

(assert (=> b!81151 (= lt!37889 (addApplyDifferent!56 lt!37891 lt!37882 (minValue!2188 newMap!16) lt!37903))))

(assert (=> b!81151 (= (apply!80 (+!104 lt!37891 (tuple2!2183 lt!37882 (minValue!2188 newMap!16))) lt!37903) (apply!80 lt!37891 lt!37903))))

(declare-fun lt!37900 () Unit!2327)

(assert (=> b!81151 (= lt!37900 lt!37889)))

(declare-fun lt!37886 () ListLongMap!1437)

(assert (=> b!81151 (= lt!37886 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37893 () (_ BitVec 64))

(assert (=> b!81151 (= lt!37893 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37892 () (_ BitVec 64))

(assert (=> b!81151 (= lt!37892 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37901 () Unit!2327)

(assert (=> b!81151 (= lt!37901 (addApplyDifferent!56 lt!37886 lt!37893 (zeroValue!2188 newMap!16) lt!37892))))

(assert (=> b!81151 (= (apply!80 (+!104 lt!37886 (tuple2!2183 lt!37893 (zeroValue!2188 newMap!16))) lt!37892) (apply!80 lt!37886 lt!37892))))

(declare-fun lt!37898 () Unit!2327)

(assert (=> b!81151 (= lt!37898 lt!37901)))

(declare-fun lt!37896 () ListLongMap!1437)

(assert (=> b!81151 (= lt!37896 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37897 () (_ BitVec 64))

(assert (=> b!81151 (= lt!37897 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37894 () (_ BitVec 64))

(assert (=> b!81151 (= lt!37894 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81151 (= lt!37887 (addApplyDifferent!56 lt!37896 lt!37897 (minValue!2188 newMap!16) lt!37894))))

(assert (=> b!81151 (= (apply!80 (+!104 lt!37896 (tuple2!2183 lt!37897 (minValue!2188 newMap!16))) lt!37894) (apply!80 lt!37896 lt!37894))))

(declare-fun b!81152 () Bool)

(declare-fun e!52968 () ListLongMap!1437)

(declare-fun call!7571 () ListLongMap!1437)

(assert (=> b!81152 (= e!52968 call!7571)))

(declare-fun bm!7566 () Bool)

(declare-fun call!7570 () ListLongMap!1437)

(declare-fun call!7569 () ListLongMap!1437)

(assert (=> bm!7566 (= call!7570 call!7569)))

(declare-fun bm!7567 () Bool)

(declare-fun call!7573 () Bool)

(declare-fun lt!37884 () ListLongMap!1437)

(assert (=> bm!7567 (= call!7573 (contains!742 lt!37884 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81153 () Bool)

(declare-fun e!52966 () Bool)

(declare-fun call!7575 () Bool)

(assert (=> b!81153 (= e!52966 (not call!7575))))

(declare-fun b!81154 () Bool)

(declare-fun e!52971 () Bool)

(assert (=> b!81154 (= e!52971 (not call!7573))))

(declare-fun b!81155 () Bool)

(declare-fun e!52965 () ListLongMap!1437)

(declare-fun call!7574 () ListLongMap!1437)

(assert (=> b!81155 (= e!52965 (+!104 call!7574 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun d!19933 () Bool)

(declare-fun e!52973 () Bool)

(assert (=> d!19933 e!52973))

(declare-fun res!42216 () Bool)

(assert (=> d!19933 (=> (not res!42216) (not e!52973))))

(assert (=> d!19933 (= res!42216 (or (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))))

(declare-fun lt!37888 () ListLongMap!1437)

(assert (=> d!19933 (= lt!37884 lt!37888)))

(declare-fun lt!37885 () Unit!2327)

(assert (=> d!19933 (= lt!37885 e!52962)))

(declare-fun c!12760 () Bool)

(assert (=> d!19933 (= c!12760 e!52969)))

(declare-fun res!42213 () Bool)

(assert (=> d!19933 (=> (not res!42213) (not e!52969))))

(assert (=> d!19933 (= res!42213 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19933 (= lt!37888 e!52965)))

(declare-fun c!12762 () Bool)

(assert (=> d!19933 (= c!12762 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19933 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19933 (= (getCurrentListMap!423 (_keys!3955 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!37884)))

(declare-fun bm!7568 () Bool)

(assert (=> bm!7568 (= call!7575 (contains!742 lt!37884 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7569 () Bool)

(assert (=> bm!7569 (= call!7571 call!7570)))

(declare-fun e!52972 () Bool)

(declare-fun b!81156 () Bool)

(assert (=> b!81156 (= e!52972 (= (apply!80 lt!37884 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81156 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))))))))

(assert (=> b!81156 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81157 () Bool)

(declare-fun res!42214 () Bool)

(assert (=> b!81157 (=> (not res!42214) (not e!52973))))

(declare-fun e!52964 () Bool)

(assert (=> b!81157 (= res!42214 e!52964)))

(declare-fun res!42217 () Bool)

(assert (=> b!81157 (=> res!42217 e!52964)))

(declare-fun e!52974 () Bool)

(assert (=> b!81157 (= res!42217 (not e!52974))))

(declare-fun res!42212 () Bool)

(assert (=> b!81157 (=> (not res!42212) (not e!52974))))

(assert (=> b!81157 (= res!42212 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81158 () Bool)

(declare-fun e!52967 () Bool)

(assert (=> b!81158 (= e!52967 (= (apply!80 lt!37884 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun b!81159 () Bool)

(assert (=> b!81159 (= e!52974 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7570 () Bool)

(declare-fun call!7572 () ListLongMap!1437)

(assert (=> bm!7570 (= call!7572 call!7574)))

(declare-fun b!81160 () Bool)

(assert (=> b!81160 (= e!52971 e!52967)))

(declare-fun res!42220 () Bool)

(assert (=> b!81160 (= res!42220 call!7573)))

(assert (=> b!81160 (=> (not res!42220) (not e!52967))))

(declare-fun b!81161 () Bool)

(assert (=> b!81161 (= e!52968 call!7572)))

(declare-fun b!81162 () Bool)

(assert (=> b!81162 (= e!52973 e!52971)))

(declare-fun c!12759 () Bool)

(assert (=> b!81162 (= c!12759 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81163 () Bool)

(assert (=> b!81163 (= e!52964 e!52972)))

(declare-fun res!42215 () Bool)

(assert (=> b!81163 (=> (not res!42215) (not e!52972))))

(assert (=> b!81163 (= res!42215 (contains!742 lt!37884 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81163 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81164 () Bool)

(declare-fun res!42218 () Bool)

(assert (=> b!81164 (=> (not res!42218) (not e!52973))))

(assert (=> b!81164 (= res!42218 e!52966)))

(declare-fun c!12763 () Bool)

(assert (=> b!81164 (= c!12763 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81165 () Bool)

(declare-fun e!52963 () ListLongMap!1437)

(assert (=> b!81165 (= e!52963 call!7572)))

(declare-fun b!81166 () Bool)

(declare-fun c!12761 () Bool)

(assert (=> b!81166 (= c!12761 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!81166 (= e!52963 e!52968)))

(declare-fun bm!7571 () Bool)

(declare-fun c!12764 () Bool)

(assert (=> bm!7571 (= call!7574 (+!104 (ite c!12762 call!7569 (ite c!12764 call!7570 call!7571)) (ite (or c!12762 c!12764) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7572 () Bool)

(assert (=> bm!7572 (= call!7569 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!81167 () Bool)

(declare-fun e!52970 () Bool)

(assert (=> b!81167 (= e!52966 e!52970)))

(declare-fun res!42219 () Bool)

(assert (=> b!81167 (= res!42219 call!7575)))

(assert (=> b!81167 (=> (not res!42219) (not e!52970))))

(declare-fun b!81168 () Bool)

(assert (=> b!81168 (= e!52965 e!52963)))

(assert (=> b!81168 (= c!12764 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81169 () Bool)

(assert (=> b!81169 (= e!52970 (= (apply!80 lt!37884 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!81170 () Bool)

(declare-fun Unit!2368 () Unit!2327)

(assert (=> b!81170 (= e!52962 Unit!2368)))

(assert (= (and d!19933 c!12762) b!81155))

(assert (= (and d!19933 (not c!12762)) b!81168))

(assert (= (and b!81168 c!12764) b!81165))

(assert (= (and b!81168 (not c!12764)) b!81166))

(assert (= (and b!81166 c!12761) b!81161))

(assert (= (and b!81166 (not c!12761)) b!81152))

(assert (= (or b!81161 b!81152) bm!7569))

(assert (= (or b!81165 bm!7569) bm!7566))

(assert (= (or b!81165 b!81161) bm!7570))

(assert (= (or b!81155 bm!7566) bm!7572))

(assert (= (or b!81155 bm!7570) bm!7571))

(assert (= (and d!19933 res!42213) b!81150))

(assert (= (and d!19933 c!12760) b!81151))

(assert (= (and d!19933 (not c!12760)) b!81170))

(assert (= (and d!19933 res!42216) b!81157))

(assert (= (and b!81157 res!42212) b!81159))

(assert (= (and b!81157 (not res!42217)) b!81163))

(assert (= (and b!81163 res!42215) b!81156))

(assert (= (and b!81157 res!42214) b!81164))

(assert (= (and b!81164 c!12763) b!81167))

(assert (= (and b!81164 (not c!12763)) b!81153))

(assert (= (and b!81167 res!42219) b!81169))

(assert (= (or b!81167 b!81153) bm!7568))

(assert (= (and b!81164 res!42218) b!81162))

(assert (= (and b!81162 c!12759) b!81160))

(assert (= (and b!81162 (not c!12759)) b!81154))

(assert (= (and b!81160 res!42220) b!81158))

(assert (= (or b!81160 b!81154) bm!7567))

(declare-fun b_lambda!3613 () Bool)

(assert (=> (not b_lambda!3613) (not b!81156)))

(assert (=> b!81156 t!5186))

(declare-fun b_and!4941 () Bool)

(assert (= b_and!4937 (and (=> t!5186 result!2849) b_and!4941)))

(assert (=> b!81156 t!5188))

(declare-fun b_and!4943 () Bool)

(assert (= b_and!4939 (and (=> t!5188 result!2851) b_and!4943)))

(assert (=> b!81156 m!82131))

(declare-fun m!82933 () Bool)

(assert (=> b!81156 m!82933))

(assert (=> b!81156 m!82131))

(declare-fun m!82935 () Bool)

(assert (=> b!81156 m!82935))

(assert (=> b!81156 m!82935))

(assert (=> b!81156 m!82137))

(declare-fun m!82937 () Bool)

(assert (=> b!81156 m!82937))

(assert (=> b!81156 m!82137))

(declare-fun m!82939 () Bool)

(assert (=> bm!7568 m!82939))

(assert (=> b!81159 m!82131))

(assert (=> b!81159 m!82131))

(assert (=> b!81159 m!82143))

(declare-fun m!82941 () Bool)

(assert (=> b!81151 m!82941))

(declare-fun m!82943 () Bool)

(assert (=> b!81151 m!82943))

(declare-fun m!82945 () Bool)

(assert (=> b!81151 m!82945))

(declare-fun m!82947 () Bool)

(assert (=> b!81151 m!82947))

(declare-fun m!82949 () Bool)

(assert (=> b!81151 m!82949))

(declare-fun m!82951 () Bool)

(assert (=> b!81151 m!82951))

(declare-fun m!82953 () Bool)

(assert (=> b!81151 m!82953))

(declare-fun m!82955 () Bool)

(assert (=> b!81151 m!82955))

(declare-fun m!82957 () Bool)

(assert (=> b!81151 m!82957))

(declare-fun m!82959 () Bool)

(assert (=> b!81151 m!82959))

(declare-fun m!82961 () Bool)

(assert (=> b!81151 m!82961))

(declare-fun m!82963 () Bool)

(assert (=> b!81151 m!82963))

(declare-fun m!82965 () Bool)

(assert (=> b!81151 m!82965))

(assert (=> b!81151 m!82947))

(assert (=> b!81151 m!82957))

(assert (=> b!81151 m!82131))

(declare-fun m!82967 () Bool)

(assert (=> b!81151 m!82967))

(assert (=> b!81151 m!82951))

(declare-fun m!82969 () Bool)

(assert (=> b!81151 m!82969))

(assert (=> b!81151 m!82963))

(declare-fun m!82971 () Bool)

(assert (=> b!81151 m!82971))

(assert (=> b!81163 m!82131))

(assert (=> b!81163 m!82131))

(declare-fun m!82973 () Bool)

(assert (=> b!81163 m!82973))

(declare-fun m!82975 () Bool)

(assert (=> b!81155 m!82975))

(declare-fun m!82977 () Bool)

(assert (=> bm!7567 m!82977))

(declare-fun m!82979 () Bool)

(assert (=> b!81158 m!82979))

(assert (=> bm!7572 m!82943))

(declare-fun m!82981 () Bool)

(assert (=> bm!7571 m!82981))

(declare-fun m!82983 () Bool)

(assert (=> b!81169 m!82983))

(assert (=> b!81150 m!82131))

(assert (=> b!81150 m!82131))

(assert (=> b!81150 m!82143))

(assert (=> d!19933 m!81973))

(assert (=> b!80643 d!19933))

(declare-fun d!19935 () Bool)

(declare-fun lt!37904 () Bool)

(assert (=> d!19935 (= lt!37904 (select (content!86 (t!5172 (toList!734 lt!37305))) lt!37075))))

(declare-fun e!52975 () Bool)

(assert (=> d!19935 (= lt!37904 e!52975)))

(declare-fun res!42222 () Bool)

(assert (=> d!19935 (=> (not res!42222) (not e!52975))))

(assert (=> d!19935 (= res!42222 ((_ is Cons!1510) (t!5172 (toList!734 lt!37305))))))

(assert (=> d!19935 (= (contains!745 (t!5172 (toList!734 lt!37305)) lt!37075) lt!37904)))

(declare-fun b!81171 () Bool)

(declare-fun e!52976 () Bool)

(assert (=> b!81171 (= e!52975 e!52976)))

(declare-fun res!42221 () Bool)

(assert (=> b!81171 (=> res!42221 e!52976)))

(assert (=> b!81171 (= res!42221 (= (h!2099 (t!5172 (toList!734 lt!37305))) lt!37075))))

(declare-fun b!81172 () Bool)

(assert (=> b!81172 (= e!52976 (contains!745 (t!5172 (t!5172 (toList!734 lt!37305))) lt!37075))))

(assert (= (and d!19935 res!42222) b!81171))

(assert (= (and b!81171 (not res!42221)) b!81172))

(assert (=> d!19935 m!82883))

(declare-fun m!82985 () Bool)

(assert (=> d!19935 m!82985))

(declare-fun m!82987 () Bool)

(assert (=> b!81172 m!82987))

(assert (=> b!80634 d!19935))

(declare-fun d!19937 () Bool)

(declare-fun lt!37905 () Bool)

(assert (=> d!19937 (= lt!37905 (select (content!86 (toList!734 lt!37462)) (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun e!52977 () Bool)

(assert (=> d!19937 (= lt!37905 e!52977)))

(declare-fun res!42224 () Bool)

(assert (=> d!19937 (=> (not res!42224) (not e!52977))))

(assert (=> d!19937 (= res!42224 ((_ is Cons!1510) (toList!734 lt!37462)))))

(assert (=> d!19937 (= (contains!745 (toList!734 lt!37462) (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37905)))

(declare-fun b!81173 () Bool)

(declare-fun e!52978 () Bool)

(assert (=> b!81173 (= e!52977 e!52978)))

(declare-fun res!42223 () Bool)

(assert (=> b!81173 (=> res!42223 e!52978)))

(assert (=> b!81173 (= res!42223 (= (h!2099 (toList!734 lt!37462)) (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!81174 () Bool)

(assert (=> b!81174 (= e!52978 (contains!745 (t!5172 (toList!734 lt!37462)) (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19937 res!42224) b!81173))

(assert (= (and b!81173 (not res!42223)) b!81174))

(declare-fun m!82989 () Bool)

(assert (=> d!19937 m!82989))

(declare-fun m!82991 () Bool)

(assert (=> d!19937 m!82991))

(declare-fun m!82993 () Bool)

(assert (=> b!81174 m!82993))

(assert (=> b!80549 d!19937))

(declare-fun d!19939 () Bool)

(declare-fun lt!37906 () Bool)

(assert (=> d!19939 (= lt!37906 (select (content!86 (toList!734 lt!37446)) (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun e!52979 () Bool)

(assert (=> d!19939 (= lt!37906 e!52979)))

(declare-fun res!42226 () Bool)

(assert (=> d!19939 (=> (not res!42226) (not e!52979))))

(assert (=> d!19939 (= res!42226 ((_ is Cons!1510) (toList!734 lt!37446)))))

(assert (=> d!19939 (= (contains!745 (toList!734 lt!37446) (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37906)))

(declare-fun b!81175 () Bool)

(declare-fun e!52980 () Bool)

(assert (=> b!81175 (= e!52979 e!52980)))

(declare-fun res!42225 () Bool)

(assert (=> b!81175 (=> res!42225 e!52980)))

(assert (=> b!81175 (= res!42225 (= (h!2099 (toList!734 lt!37446)) (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!81176 () Bool)

(assert (=> b!81176 (= e!52980 (contains!745 (t!5172 (toList!734 lt!37446)) (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!19939 res!42226) b!81175))

(assert (= (and b!81175 (not res!42225)) b!81176))

(declare-fun m!82995 () Bool)

(assert (=> d!19939 m!82995))

(declare-fun m!82997 () Bool)

(assert (=> d!19939 m!82997))

(declare-fun m!82999 () Bool)

(assert (=> b!81176 m!82999))

(assert (=> b!80537 d!19939))

(declare-fun d!19941 () Bool)

(declare-fun e!52981 () Bool)

(assert (=> d!19941 e!52981))

(declare-fun res!42227 () Bool)

(assert (=> d!19941 (=> res!42227 e!52981)))

(declare-fun lt!37910 () Bool)

(assert (=> d!19941 (= res!42227 (not lt!37910))))

(declare-fun lt!37909 () Bool)

(assert (=> d!19941 (= lt!37910 lt!37909)))

(declare-fun lt!37908 () Unit!2327)

(declare-fun e!52982 () Unit!2327)

(assert (=> d!19941 (= lt!37908 e!52982)))

(declare-fun c!12765 () Bool)

(assert (=> d!19941 (= c!12765 lt!37909)))

(assert (=> d!19941 (= lt!37909 (containsKey!140 (toList!734 (getCurrentListMap!423 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)))))))

(assert (=> d!19941 (= (contains!742 (getCurrentListMap!423 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)))) lt!37910)))

(declare-fun b!81177 () Bool)

(declare-fun lt!37907 () Unit!2327)

(assert (=> b!81177 (= e!52982 lt!37907)))

(assert (=> b!81177 (= lt!37907 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (getCurrentListMap!423 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)))))))

(assert (=> b!81177 (isDefined!90 (getValueByKey!136 (toList!734 (getCurrentListMap!423 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)))))))

(declare-fun b!81178 () Bool)

(declare-fun Unit!2369 () Unit!2327)

(assert (=> b!81178 (= e!52982 Unit!2369)))

(declare-fun b!81179 () Bool)

(assert (=> b!81179 (= e!52981 (isDefined!90 (getValueByKey!136 (toList!734 (getCurrentListMap!423 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277))))))))

(assert (= (and d!19941 c!12765) b!81177))

(assert (= (and d!19941 (not c!12765)) b!81178))

(assert (= (and d!19941 (not res!42227)) b!81179))

(assert (=> d!19941 m!82117))

(declare-fun m!83001 () Bool)

(assert (=> d!19941 m!83001))

(assert (=> b!81177 m!82117))

(declare-fun m!83003 () Bool)

(assert (=> b!81177 m!83003))

(assert (=> b!81177 m!82117))

(declare-fun m!83005 () Bool)

(assert (=> b!81177 m!83005))

(assert (=> b!81177 m!83005))

(declare-fun m!83007 () Bool)

(assert (=> b!81177 m!83007))

(assert (=> b!81179 m!82117))

(assert (=> b!81179 m!83005))

(assert (=> b!81179 m!83005))

(assert (=> b!81179 m!83007))

(assert (=> d!19721 d!19941))

(declare-fun e!52986 () Bool)

(declare-fun b!81180 () Bool)

(assert (=> b!81180 (= e!52986 (contains!746 lt!37579 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) lt!37580)))))

(declare-fun d!19943 () Bool)

(declare-fun res!42228 () Bool)

(declare-fun e!52983 () Bool)

(assert (=> d!19943 (=> res!42228 e!52983)))

(assert (=> d!19943 (= res!42228 (bvsge lt!37580 (size!2131 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))))))))

(assert (=> d!19943 (= (arrayNoDuplicates!0 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) lt!37580 lt!37579) e!52983)))

(declare-fun b!81181 () Bool)

(declare-fun e!52985 () Bool)

(declare-fun call!7576 () Bool)

(assert (=> b!81181 (= e!52985 call!7576)))

(declare-fun b!81182 () Bool)

(declare-fun e!52984 () Bool)

(assert (=> b!81182 (= e!52984 e!52985)))

(declare-fun c!12766 () Bool)

(assert (=> b!81182 (= c!12766 (validKeyInArray!0 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) lt!37580)))))

(declare-fun b!81183 () Bool)

(assert (=> b!81183 (= e!52983 e!52984)))

(declare-fun res!42230 () Bool)

(assert (=> b!81183 (=> (not res!42230) (not e!52984))))

(assert (=> b!81183 (= res!42230 (not e!52986))))

(declare-fun res!42229 () Bool)

(assert (=> b!81183 (=> (not res!42229) (not e!52986))))

(assert (=> b!81183 (= res!42229 (validKeyInArray!0 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) lt!37580)))))

(declare-fun bm!7573 () Bool)

(assert (=> bm!7573 (= call!7576 (arrayNoDuplicates!0 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (bvadd lt!37580 #b00000000000000000000000000000001) (ite c!12766 (Cons!1511 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) lt!37580) lt!37579) lt!37579)))))

(declare-fun b!81184 () Bool)

(assert (=> b!81184 (= e!52985 call!7576)))

(assert (= (and d!19943 (not res!42228)) b!81183))

(assert (= (and b!81183 res!42229) b!81180))

(assert (= (and b!81183 res!42230) b!81182))

(assert (= (and b!81182 c!12766) b!81181))

(assert (= (and b!81182 (not c!12766)) b!81184))

(assert (= (or b!81181 b!81184) bm!7573))

(declare-fun m!83009 () Bool)

(assert (=> b!81180 m!83009))

(assert (=> b!81180 m!83009))

(declare-fun m!83011 () Bool)

(assert (=> b!81180 m!83011))

(assert (=> b!81182 m!83009))

(assert (=> b!81182 m!83009))

(declare-fun m!83013 () Bool)

(assert (=> b!81182 m!83013))

(assert (=> b!81183 m!83009))

(assert (=> b!81183 m!83009))

(assert (=> b!81183 m!83013))

(assert (=> bm!7573 m!83009))

(declare-fun m!83015 () Bool)

(assert (=> bm!7573 m!83015))

(assert (=> d!19721 d!19943))

(declare-fun d!19945 () Bool)

(declare-fun e!52987 () Bool)

(assert (=> d!19945 e!52987))

(declare-fun res!42231 () Bool)

(assert (=> d!19945 (=> res!42231 e!52987)))

(declare-fun lt!37914 () Bool)

(assert (=> d!19945 (= res!42231 (not lt!37914))))

(declare-fun lt!37913 () Bool)

(assert (=> d!19945 (= lt!37914 lt!37913)))

(declare-fun lt!37912 () Unit!2327)

(declare-fun e!52988 () Unit!2327)

(assert (=> d!19945 (= lt!37912 e!52988)))

(declare-fun c!12767 () Bool)

(assert (=> d!19945 (= c!12767 lt!37913)))

(assert (=> d!19945 (= lt!37913 (containsKey!140 (toList!734 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!19945 (= (contains!742 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) lt!37914)))

(declare-fun b!81185 () Bool)

(declare-fun lt!37911 () Unit!2327)

(assert (=> b!81185 (= e!52988 lt!37911)))

(assert (=> b!81185 (= lt!37911 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> b!81185 (isDefined!90 (getValueByKey!136 (toList!734 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun b!81186 () Bool)

(declare-fun Unit!2370 () Unit!2327)

(assert (=> b!81186 (= e!52988 Unit!2370)))

(declare-fun b!81187 () Bool)

(assert (=> b!81187 (= e!52987 (isDefined!90 (getValueByKey!136 (toList!734 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (= (and d!19945 c!12767) b!81185))

(assert (= (and d!19945 (not c!12767)) b!81186))

(assert (= (and d!19945 (not res!42231)) b!81187))

(assert (=> d!19945 m!81295))

(declare-fun m!83017 () Bool)

(assert (=> d!19945 m!83017))

(assert (=> b!81185 m!81295))

(declare-fun m!83019 () Bool)

(assert (=> b!81185 m!83019))

(assert (=> b!81185 m!81295))

(declare-fun m!83021 () Bool)

(assert (=> b!81185 m!83021))

(assert (=> b!81185 m!83021))

(declare-fun m!83023 () Bool)

(assert (=> b!81185 m!83023))

(assert (=> b!81187 m!81295))

(assert (=> b!81187 m!83021))

(assert (=> b!81187 m!83021))

(assert (=> b!81187 m!83023))

(assert (=> d!19721 d!19945))

(assert (=> d!19721 d!19809))

(declare-fun b!81188 () Bool)

(declare-fun e!52996 () Bool)

(assert (=> b!81188 (= e!52996 (validKeyInArray!0 (select (arr!1888 lt!37593) #b00000000000000000000000000000000)))))

(declare-fun b!81189 () Bool)

(declare-fun e!52989 () Unit!2327)

(declare-fun lt!37920 () Unit!2327)

(assert (=> b!81189 (= e!52989 lt!37920)))

(declare-fun lt!37928 () ListLongMap!1437)

(assert (=> b!81189 (= lt!37928 (getCurrentListMapNoExtraKeys!68 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37923 () (_ BitVec 64))

(assert (=> b!81189 (= lt!37923 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37916 () (_ BitVec 64))

(assert (=> b!81189 (= lt!37916 (select (arr!1888 lt!37593) #b00000000000000000000000000000000))))

(declare-fun lt!37932 () Unit!2327)

(assert (=> b!81189 (= lt!37932 (addStillContains!56 lt!37928 lt!37923 (zeroValue!2188 newMap!16) lt!37916))))

(assert (=> b!81189 (contains!742 (+!104 lt!37928 (tuple2!2183 lt!37923 (zeroValue!2188 newMap!16))) lt!37916)))

(declare-fun lt!37935 () Unit!2327)

(assert (=> b!81189 (= lt!37935 lt!37932)))

(declare-fun lt!37924 () ListLongMap!1437)

(assert (=> b!81189 (= lt!37924 (getCurrentListMapNoExtraKeys!68 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37915 () (_ BitVec 64))

(assert (=> b!81189 (= lt!37915 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37936 () (_ BitVec 64))

(assert (=> b!81189 (= lt!37936 (select (arr!1888 lt!37593) #b00000000000000000000000000000000))))

(declare-fun lt!37922 () Unit!2327)

(assert (=> b!81189 (= lt!37922 (addApplyDifferent!56 lt!37924 lt!37915 (minValue!2188 newMap!16) lt!37936))))

(assert (=> b!81189 (= (apply!80 (+!104 lt!37924 (tuple2!2183 lt!37915 (minValue!2188 newMap!16))) lt!37936) (apply!80 lt!37924 lt!37936))))

(declare-fun lt!37933 () Unit!2327)

(assert (=> b!81189 (= lt!37933 lt!37922)))

(declare-fun lt!37919 () ListLongMap!1437)

(assert (=> b!81189 (= lt!37919 (getCurrentListMapNoExtraKeys!68 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37926 () (_ BitVec 64))

(assert (=> b!81189 (= lt!37926 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37925 () (_ BitVec 64))

(assert (=> b!81189 (= lt!37925 (select (arr!1888 lt!37593) #b00000000000000000000000000000000))))

(declare-fun lt!37934 () Unit!2327)

(assert (=> b!81189 (= lt!37934 (addApplyDifferent!56 lt!37919 lt!37926 (zeroValue!2188 newMap!16) lt!37925))))

(assert (=> b!81189 (= (apply!80 (+!104 lt!37919 (tuple2!2183 lt!37926 (zeroValue!2188 newMap!16))) lt!37925) (apply!80 lt!37919 lt!37925))))

(declare-fun lt!37931 () Unit!2327)

(assert (=> b!81189 (= lt!37931 lt!37934)))

(declare-fun lt!37929 () ListLongMap!1437)

(assert (=> b!81189 (= lt!37929 (getCurrentListMapNoExtraKeys!68 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37930 () (_ BitVec 64))

(assert (=> b!81189 (= lt!37930 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37927 () (_ BitVec 64))

(assert (=> b!81189 (= lt!37927 (select (arr!1888 lt!37593) #b00000000000000000000000000000000))))

(assert (=> b!81189 (= lt!37920 (addApplyDifferent!56 lt!37929 lt!37930 (minValue!2188 newMap!16) lt!37927))))

(assert (=> b!81189 (= (apply!80 (+!104 lt!37929 (tuple2!2183 lt!37930 (minValue!2188 newMap!16))) lt!37927) (apply!80 lt!37929 lt!37927))))

(declare-fun b!81190 () Bool)

(declare-fun e!52995 () ListLongMap!1437)

(declare-fun call!7579 () ListLongMap!1437)

(assert (=> b!81190 (= e!52995 call!7579)))

(declare-fun bm!7574 () Bool)

(declare-fun call!7578 () ListLongMap!1437)

(declare-fun call!7577 () ListLongMap!1437)

(assert (=> bm!7574 (= call!7578 call!7577)))

(declare-fun bm!7575 () Bool)

(declare-fun call!7581 () Bool)

(declare-fun lt!37917 () ListLongMap!1437)

(assert (=> bm!7575 (= call!7581 (contains!742 lt!37917 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81191 () Bool)

(declare-fun e!52993 () Bool)

(declare-fun call!7583 () Bool)

(assert (=> b!81191 (= e!52993 (not call!7583))))

(declare-fun b!81192 () Bool)

(declare-fun e!52998 () Bool)

(assert (=> b!81192 (= e!52998 (not call!7581))))

(declare-fun b!81193 () Bool)

(declare-fun e!52992 () ListLongMap!1437)

(declare-fun call!7582 () ListLongMap!1437)

(assert (=> b!81193 (= e!52992 (+!104 call!7582 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun d!19947 () Bool)

(declare-fun e!53000 () Bool)

(assert (=> d!19947 e!53000))

(declare-fun res!42236 () Bool)

(assert (=> d!19947 (=> (not res!42236) (not e!53000))))

(assert (=> d!19947 (= res!42236 (or (bvsge #b00000000000000000000000000000000 (size!2131 lt!37593)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 lt!37593)))))))

(declare-fun lt!37921 () ListLongMap!1437)

(assert (=> d!19947 (= lt!37917 lt!37921)))

(declare-fun lt!37918 () Unit!2327)

(assert (=> d!19947 (= lt!37918 e!52989)))

(declare-fun c!12769 () Bool)

(assert (=> d!19947 (= c!12769 e!52996)))

(declare-fun res!42233 () Bool)

(assert (=> d!19947 (=> (not res!42233) (not e!52996))))

(assert (=> d!19947 (= res!42233 (bvslt #b00000000000000000000000000000000 (size!2131 lt!37593)))))

(assert (=> d!19947 (= lt!37921 e!52992)))

(declare-fun c!12771 () Bool)

(assert (=> d!19947 (= c!12771 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19947 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19947 (= (getCurrentListMap!423 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!37917)))

(declare-fun bm!7576 () Bool)

(assert (=> bm!7576 (= call!7583 (contains!742 lt!37917 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7577 () Bool)

(assert (=> bm!7577 (= call!7579 call!7578)))

(declare-fun b!81194 () Bool)

(declare-fun e!52999 () Bool)

(assert (=> b!81194 (= e!52999 (= (apply!80 lt!37917 (select (arr!1888 lt!37593) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 lt!37598) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81194 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 lt!37598)))))

(assert (=> b!81194 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 lt!37593)))))

(declare-fun b!81195 () Bool)

(declare-fun res!42234 () Bool)

(assert (=> b!81195 (=> (not res!42234) (not e!53000))))

(declare-fun e!52991 () Bool)

(assert (=> b!81195 (= res!42234 e!52991)))

(declare-fun res!42237 () Bool)

(assert (=> b!81195 (=> res!42237 e!52991)))

(declare-fun e!53001 () Bool)

(assert (=> b!81195 (= res!42237 (not e!53001))))

(declare-fun res!42232 () Bool)

(assert (=> b!81195 (=> (not res!42232) (not e!53001))))

(assert (=> b!81195 (= res!42232 (bvslt #b00000000000000000000000000000000 (size!2131 lt!37593)))))

(declare-fun b!81196 () Bool)

(declare-fun e!52994 () Bool)

(assert (=> b!81196 (= e!52994 (= (apply!80 lt!37917 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun b!81197 () Bool)

(assert (=> b!81197 (= e!53001 (validKeyInArray!0 (select (arr!1888 lt!37593) #b00000000000000000000000000000000)))))

(declare-fun bm!7578 () Bool)

(declare-fun call!7580 () ListLongMap!1437)

(assert (=> bm!7578 (= call!7580 call!7582)))

(declare-fun b!81198 () Bool)

(assert (=> b!81198 (= e!52998 e!52994)))

(declare-fun res!42240 () Bool)

(assert (=> b!81198 (= res!42240 call!7581)))

(assert (=> b!81198 (=> (not res!42240) (not e!52994))))

(declare-fun b!81199 () Bool)

(assert (=> b!81199 (= e!52995 call!7580)))

(declare-fun b!81200 () Bool)

(assert (=> b!81200 (= e!53000 e!52998)))

(declare-fun c!12768 () Bool)

(assert (=> b!81200 (= c!12768 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81201 () Bool)

(assert (=> b!81201 (= e!52991 e!52999)))

(declare-fun res!42235 () Bool)

(assert (=> b!81201 (=> (not res!42235) (not e!52999))))

(assert (=> b!81201 (= res!42235 (contains!742 lt!37917 (select (arr!1888 lt!37593) #b00000000000000000000000000000000)))))

(assert (=> b!81201 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 lt!37593)))))

(declare-fun b!81202 () Bool)

(declare-fun res!42238 () Bool)

(assert (=> b!81202 (=> (not res!42238) (not e!53000))))

(assert (=> b!81202 (= res!42238 e!52993)))

(declare-fun c!12772 () Bool)

(assert (=> b!81202 (= c!12772 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81203 () Bool)

(declare-fun e!52990 () ListLongMap!1437)

(assert (=> b!81203 (= e!52990 call!7580)))

(declare-fun b!81204 () Bool)

(declare-fun c!12770 () Bool)

(assert (=> b!81204 (= c!12770 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!81204 (= e!52990 e!52995)))

(declare-fun bm!7579 () Bool)

(declare-fun c!12773 () Bool)

(assert (=> bm!7579 (= call!7582 (+!104 (ite c!12771 call!7577 (ite c!12773 call!7578 call!7579)) (ite (or c!12771 c!12773) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7580 () Bool)

(assert (=> bm!7580 (= call!7577 (getCurrentListMapNoExtraKeys!68 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!81205 () Bool)

(declare-fun e!52997 () Bool)

(assert (=> b!81205 (= e!52993 e!52997)))

(declare-fun res!42239 () Bool)

(assert (=> b!81205 (= res!42239 call!7583)))

(assert (=> b!81205 (=> (not res!42239) (not e!52997))))

(declare-fun b!81206 () Bool)

(assert (=> b!81206 (= e!52992 e!52990)))

(assert (=> b!81206 (= c!12773 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81207 () Bool)

(assert (=> b!81207 (= e!52997 (= (apply!80 lt!37917 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!81208 () Bool)

(declare-fun Unit!2371 () Unit!2327)

(assert (=> b!81208 (= e!52989 Unit!2371)))

(assert (= (and d!19947 c!12771) b!81193))

(assert (= (and d!19947 (not c!12771)) b!81206))

(assert (= (and b!81206 c!12773) b!81203))

(assert (= (and b!81206 (not c!12773)) b!81204))

(assert (= (and b!81204 c!12770) b!81199))

(assert (= (and b!81204 (not c!12770)) b!81190))

(assert (= (or b!81199 b!81190) bm!7577))

(assert (= (or b!81203 bm!7577) bm!7574))

(assert (= (or b!81203 b!81199) bm!7578))

(assert (= (or b!81193 bm!7574) bm!7580))

(assert (= (or b!81193 bm!7578) bm!7579))

(assert (= (and d!19947 res!42233) b!81188))

(assert (= (and d!19947 c!12769) b!81189))

(assert (= (and d!19947 (not c!12769)) b!81208))

(assert (= (and d!19947 res!42236) b!81195))

(assert (= (and b!81195 res!42232) b!81197))

(assert (= (and b!81195 (not res!42237)) b!81201))

(assert (= (and b!81201 res!42235) b!81194))

(assert (= (and b!81195 res!42234) b!81202))

(assert (= (and b!81202 c!12772) b!81205))

(assert (= (and b!81202 (not c!12772)) b!81191))

(assert (= (and b!81205 res!42239) b!81207))

(assert (= (or b!81205 b!81191) bm!7576))

(assert (= (and b!81202 res!42238) b!81200))

(assert (= (and b!81200 c!12768) b!81198))

(assert (= (and b!81200 (not c!12768)) b!81192))

(assert (= (and b!81198 res!42240) b!81196))

(assert (= (or b!81198 b!81192) bm!7575))

(declare-fun b_lambda!3615 () Bool)

(assert (=> (not b_lambda!3615) (not b!81194)))

(assert (=> b!81194 t!5186))

(declare-fun b_and!4945 () Bool)

(assert (= b_and!4941 (and (=> t!5186 result!2849) b_and!4945)))

(assert (=> b!81194 t!5188))

(declare-fun b_and!4947 () Bool)

(assert (= b_and!4943 (and (=> t!5188 result!2851) b_and!4947)))

(declare-fun m!83025 () Bool)

(assert (=> b!81194 m!83025))

(declare-fun m!83027 () Bool)

(assert (=> b!81194 m!83027))

(assert (=> b!81194 m!83025))

(declare-fun m!83029 () Bool)

(assert (=> b!81194 m!83029))

(assert (=> b!81194 m!83029))

(assert (=> b!81194 m!82137))

(declare-fun m!83031 () Bool)

(assert (=> b!81194 m!83031))

(assert (=> b!81194 m!82137))

(declare-fun m!83033 () Bool)

(assert (=> bm!7576 m!83033))

(assert (=> b!81197 m!83025))

(assert (=> b!81197 m!83025))

(declare-fun m!83035 () Bool)

(assert (=> b!81197 m!83035))

(declare-fun m!83037 () Bool)

(assert (=> b!81189 m!83037))

(declare-fun m!83039 () Bool)

(assert (=> b!81189 m!83039))

(declare-fun m!83041 () Bool)

(assert (=> b!81189 m!83041))

(declare-fun m!83043 () Bool)

(assert (=> b!81189 m!83043))

(declare-fun m!83045 () Bool)

(assert (=> b!81189 m!83045))

(declare-fun m!83047 () Bool)

(assert (=> b!81189 m!83047))

(declare-fun m!83049 () Bool)

(assert (=> b!81189 m!83049))

(declare-fun m!83051 () Bool)

(assert (=> b!81189 m!83051))

(declare-fun m!83053 () Bool)

(assert (=> b!81189 m!83053))

(declare-fun m!83055 () Bool)

(assert (=> b!81189 m!83055))

(declare-fun m!83057 () Bool)

(assert (=> b!81189 m!83057))

(declare-fun m!83059 () Bool)

(assert (=> b!81189 m!83059))

(declare-fun m!83061 () Bool)

(assert (=> b!81189 m!83061))

(assert (=> b!81189 m!83043))

(assert (=> b!81189 m!83053))

(assert (=> b!81189 m!83025))

(declare-fun m!83063 () Bool)

(assert (=> b!81189 m!83063))

(assert (=> b!81189 m!83047))

(declare-fun m!83065 () Bool)

(assert (=> b!81189 m!83065))

(assert (=> b!81189 m!83059))

(declare-fun m!83067 () Bool)

(assert (=> b!81189 m!83067))

(assert (=> b!81201 m!83025))

(assert (=> b!81201 m!83025))

(declare-fun m!83069 () Bool)

(assert (=> b!81201 m!83069))

(declare-fun m!83071 () Bool)

(assert (=> b!81193 m!83071))

(declare-fun m!83073 () Bool)

(assert (=> bm!7575 m!83073))

(declare-fun m!83075 () Bool)

(assert (=> b!81196 m!83075))

(assert (=> bm!7580 m!83039))

(declare-fun m!83077 () Bool)

(assert (=> bm!7579 m!83077))

(declare-fun m!83079 () Bool)

(assert (=> b!81207 m!83079))

(assert (=> b!81188 m!83025))

(assert (=> b!81188 m!83025))

(assert (=> b!81188 m!83035))

(assert (=> d!19947 m!81973))

(assert (=> d!19721 d!19947))

(assert (=> d!19721 d!19805))

(declare-fun d!19949 () Bool)

(declare-fun res!42241 () Bool)

(declare-fun e!53002 () Bool)

(assert (=> d!19949 (=> res!42241 e!53002)))

(assert (=> d!19949 (= res!42241 (= (select (arr!1888 lt!37606) #b00000000000000000000000000000000) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!19949 (= (arrayContainsKey!0 lt!37606 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b00000000000000000000000000000000) e!53002)))

(declare-fun b!81209 () Bool)

(declare-fun e!53003 () Bool)

(assert (=> b!81209 (= e!53002 e!53003)))

(declare-fun res!42242 () Bool)

(assert (=> b!81209 (=> (not res!42242) (not e!53003))))

(assert (=> b!81209 (= res!42242 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2131 lt!37606)))))

(declare-fun b!81210 () Bool)

(assert (=> b!81210 (= e!53003 (arrayContainsKey!0 lt!37606 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!19949 (not res!42241)) b!81209))

(assert (= (and b!81209 res!42242) b!81210))

(declare-fun m!83081 () Bool)

(assert (=> d!19949 m!83081))

(assert (=> b!81210 m!81295))

(declare-fun m!83083 () Bool)

(assert (=> b!81210 m!83083))

(assert (=> d!19721 d!19949))

(assert (=> d!19721 d!19743))

(declare-fun d!19951 () Bool)

(declare-fun e!53006 () Bool)

(assert (=> d!19951 e!53006))

(declare-fun res!42245 () Bool)

(assert (=> d!19951 (=> (not res!42245) (not e!53006))))

(assert (=> d!19951 (= res!42245 (and (bvsge (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000000) (bvslt (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (size!2131 (_keys!3955 newMap!16)))))))

(declare-fun lt!37939 () Unit!2327)

(declare-fun choose!102 ((_ BitVec 64) array!3965 (_ BitVec 32) (_ BitVec 32)) Unit!2327)

(assert (=> d!19951 (= lt!37939 (choose!102 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (mask!6297 newMap!16)))))

(assert (=> d!19951 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19951 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (mask!6297 newMap!16)) lt!37939)))

(declare-fun b!81213 () Bool)

(assert (=> b!81213 (= e!53006 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (mask!6297 newMap!16)))))

(assert (= (and d!19951 res!42245) b!81213))

(assert (=> d!19951 m!81295))

(declare-fun m!83085 () Bool)

(assert (=> d!19951 m!83085))

(assert (=> d!19951 m!81973))

(assert (=> b!81213 m!82113))

(assert (=> b!81213 m!82115))

(assert (=> d!19721 d!19951))

(declare-fun d!19953 () Bool)

(declare-fun lt!37940 () (_ BitVec 32))

(assert (=> d!19953 (and (bvsge lt!37940 #b00000000000000000000000000000000) (bvsle lt!37940 (bvsub (size!2131 lt!37603) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)))))))

(declare-fun e!53008 () (_ BitVec 32))

(assert (=> d!19953 (= lt!37940 e!53008)))

(declare-fun c!12775 () Bool)

(assert (=> d!19953 (= c!12775 (bvsge (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (bvadd (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000001)))))

(assert (=> d!19953 (and (bvsle (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (bvadd (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000001)) (bvsge (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000001) (size!2131 lt!37603)))))

(assert (=> d!19953 (= (arrayCountValidKeys!0 lt!37603 (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (bvadd (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000001)) lt!37940)))

(declare-fun bm!7581 () Bool)

(declare-fun call!7584 () (_ BitVec 32))

(assert (=> bm!7581 (= call!7584 (arrayCountValidKeys!0 lt!37603 (bvadd (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000001) (bvadd (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000001)))))

(declare-fun b!81214 () Bool)

(declare-fun e!53007 () (_ BitVec 32))

(assert (=> b!81214 (= e!53008 e!53007)))

(declare-fun c!12774 () Bool)

(assert (=> b!81214 (= c!12774 (validKeyInArray!0 (select (arr!1888 lt!37603) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)))))))

(declare-fun b!81215 () Bool)

(assert (=> b!81215 (= e!53007 call!7584)))

(declare-fun b!81216 () Bool)

(assert (=> b!81216 (= e!53007 (bvadd #b00000000000000000000000000000001 call!7584))))

(declare-fun b!81217 () Bool)

(assert (=> b!81217 (= e!53008 #b00000000000000000000000000000000)))

(assert (= (and d!19953 c!12775) b!81217))

(assert (= (and d!19953 (not c!12775)) b!81214))

(assert (= (and b!81214 c!12774) b!81216))

(assert (= (and b!81214 (not c!12774)) b!81215))

(assert (= (or b!81216 b!81215) bm!7581))

(declare-fun m!83087 () Bool)

(assert (=> bm!7581 m!83087))

(declare-fun m!83089 () Bool)

(assert (=> b!81214 m!83089))

(assert (=> b!81214 m!83089))

(declare-fun m!83091 () Bool)

(assert (=> b!81214 m!83091))

(assert (=> d!19721 d!19953))

(declare-fun d!19955 () Bool)

(declare-fun e!53009 () Bool)

(assert (=> d!19955 e!53009))

(declare-fun res!42246 () Bool)

(assert (=> d!19955 (=> (not res!42246) (not e!53009))))

(assert (=> d!19955 (= res!42246 (and (bvsge (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000000) (bvslt (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (size!2131 lt!37593))))))

(declare-fun lt!37941 () Unit!2327)

(assert (=> d!19955 (= lt!37941 (choose!481 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (defaultEntry!2292 newMap!16)))))

(assert (=> d!19955 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19955 (= (lemmaValidKeyInArrayIsInListMap!88 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (defaultEntry!2292 newMap!16)) lt!37941)))

(declare-fun b!81218 () Bool)

(assert (=> b!81218 (= e!53009 (contains!742 (getCurrentListMap!423 lt!37593 lt!37598 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1888 lt!37593) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)))))))

(assert (= (and d!19955 res!42246) b!81218))

(declare-fun m!83093 () Bool)

(assert (=> d!19955 m!83093))

(assert (=> d!19955 m!81973))

(assert (=> b!81218 m!82119))

(declare-fun m!83095 () Bool)

(assert (=> b!81218 m!83095))

(assert (=> b!81218 m!82119))

(assert (=> b!81218 m!83095))

(declare-fun m!83097 () Bool)

(assert (=> b!81218 m!83097))

(assert (=> d!19721 d!19955))

(declare-fun d!19957 () Bool)

(assert (=> d!19957 (= (arrayCountValidKeys!0 lt!37603 (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (bvadd (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!37944 () Unit!2327)

(declare-fun choose!2 (array!3965 (_ BitVec 32)) Unit!2327)

(assert (=> d!19957 (= lt!37944 (choose!2 lt!37603 (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277))))))

(declare-fun e!53012 () Bool)

(assert (=> d!19957 e!53012))

(declare-fun res!42251 () Bool)

(assert (=> d!19957 (=> (not res!42251) (not e!53012))))

(assert (=> d!19957 (= res!42251 (and (bvsge (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000000) (bvslt (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (size!2131 lt!37603))))))

(assert (=> d!19957 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!37603 (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277))) lt!37944)))

(declare-fun b!81223 () Bool)

(declare-fun res!42252 () Bool)

(assert (=> b!81223 (=> (not res!42252) (not e!53012))))

(assert (=> b!81223 (= res!42252 (validKeyInArray!0 (select (arr!1888 lt!37603) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)))))))

(declare-fun b!81224 () Bool)

(assert (=> b!81224 (= e!53012 (bvslt (size!2131 lt!37603) #b01111111111111111111111111111111))))

(assert (= (and d!19957 res!42251) b!81223))

(assert (= (and b!81223 res!42252) b!81224))

(assert (=> d!19957 m!82111))

(declare-fun m!83099 () Bool)

(assert (=> d!19957 m!83099))

(assert (=> b!81223 m!83089))

(assert (=> b!81223 m!83089))

(assert (=> b!81223 m!83091))

(assert (=> d!19721 d!19957))

(declare-fun lt!37945 () (_ BitVec 32))

(declare-fun d!19959 () Bool)

(assert (=> d!19959 (and (bvsge lt!37945 #b00000000000000000000000000000000) (bvsle lt!37945 (bvsub (size!2131 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!53014 () (_ BitVec 32))

(assert (=> d!19959 (= lt!37945 e!53014)))

(declare-fun c!12777 () Bool)

(assert (=> d!19959 (= c!12777 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19959 (and (bvsle #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2131 (_keys!3955 newMap!16)) (size!2131 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))))))))

(assert (=> d!19959 (= (arrayCountValidKeys!0 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) lt!37945)))

(declare-fun call!7585 () (_ BitVec 32))

(declare-fun bm!7582 () Bool)

(assert (=> bm!7582 (= call!7585 (arrayCountValidKeys!0 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81225 () Bool)

(declare-fun e!53013 () (_ BitVec 32))

(assert (=> b!81225 (= e!53014 e!53013)))

(declare-fun c!12776 () Bool)

(assert (=> b!81225 (= c!12776 (validKeyInArray!0 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!81226 () Bool)

(assert (=> b!81226 (= e!53013 call!7585)))

(declare-fun b!81227 () Bool)

(assert (=> b!81227 (= e!53013 (bvadd #b00000000000000000000000000000001 call!7585))))

(declare-fun b!81228 () Bool)

(assert (=> b!81228 (= e!53014 #b00000000000000000000000000000000)))

(assert (= (and d!19959 c!12777) b!81228))

(assert (= (and d!19959 (not c!12777)) b!81225))

(assert (= (and b!81225 c!12776) b!81227))

(assert (= (and b!81225 (not c!12776)) b!81226))

(assert (= (or b!81227 b!81226) bm!7582))

(declare-fun m!83101 () Bool)

(assert (=> bm!7582 m!83101))

(declare-fun m!83103 () Bool)

(assert (=> b!81225 m!83103))

(assert (=> b!81225 m!83103))

(declare-fun m!83105 () Bool)

(assert (=> b!81225 m!83105))

(assert (=> d!19721 d!19959))

(assert (=> d!19721 d!19615))

(assert (=> d!19721 d!19931))

(declare-fun d!19961 () Bool)

(declare-fun e!53017 () Bool)

(assert (=> d!19961 e!53017))

(declare-fun res!42255 () Bool)

(assert (=> d!19961 (=> (not res!42255) (not e!53017))))

(assert (=> d!19961 (= res!42255 (and (bvsge (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000000) (bvslt (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (size!2131 (_keys!3955 newMap!16))) (bvslt (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (size!2132 (_values!2275 newMap!16)))))))

(declare-fun lt!37948 () Unit!2327)

(declare-fun choose!488 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) (_ BitVec 64) V!3001 Int) Unit!2327)

(assert (=> d!19961 (= lt!37948 (choose!488 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 (defaultEntry!2292 newMap!16)))))

(assert (=> d!19961 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19961 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!17 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084 (defaultEntry!2292 newMap!16)) lt!37948)))

(declare-fun b!81231 () Bool)

(assert (=> b!81231 (= e!53017 (= (+!104 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (getCurrentListMap!423 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))))))

(assert (= (and d!19961 res!42255) b!81231))

(assert (=> d!19961 m!81295))

(declare-fun m!83107 () Bool)

(assert (=> d!19961 m!83107))

(assert (=> d!19961 m!81973))

(assert (=> b!81231 m!82103))

(assert (=> b!81231 m!82113))

(assert (=> b!81231 m!82099))

(assert (=> b!81231 m!81711))

(assert (=> b!81231 m!82049))

(assert (=> b!81231 m!81711))

(assert (=> d!19721 d!19961))

(declare-fun b!81232 () Bool)

(declare-fun e!53018 () Bool)

(declare-fun call!7586 () Bool)

(assert (=> b!81232 (= e!53018 call!7586)))

(declare-fun b!81233 () Bool)

(declare-fun e!53019 () Bool)

(assert (=> b!81233 (= e!53019 call!7586)))

(declare-fun b!81234 () Bool)

(declare-fun e!53020 () Bool)

(assert (=> b!81234 (= e!53020 e!53019)))

(declare-fun c!12778 () Bool)

(assert (=> b!81234 (= c!12778 (validKeyInArray!0 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!81235 () Bool)

(assert (=> b!81235 (= e!53019 e!53018)))

(declare-fun lt!37950 () (_ BitVec 64))

(assert (=> b!81235 (= lt!37950 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!37951 () Unit!2327)

(assert (=> b!81235 (= lt!37951 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) lt!37950 #b00000000000000000000000000000000))))

(assert (=> b!81235 (arrayContainsKey!0 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) lt!37950 #b00000000000000000000000000000000)))

(declare-fun lt!37949 () Unit!2327)

(assert (=> b!81235 (= lt!37949 lt!37951)))

(declare-fun res!42257 () Bool)

(assert (=> b!81235 (= res!42257 (= (seekEntryOrOpen!0 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000) (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (mask!6297 newMap!16)) (Found!244 #b00000000000000000000000000000000)))))

(assert (=> b!81235 (=> (not res!42257) (not e!53018))))

(declare-fun bm!7583 () Bool)

(assert (=> bm!7583 (= call!7586 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (mask!6297 newMap!16)))))

(declare-fun d!19963 () Bool)

(declare-fun res!42256 () Bool)

(assert (=> d!19963 (=> res!42256 e!53020)))

(assert (=> d!19963 (= res!42256 (bvsge #b00000000000000000000000000000000 (size!2131 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))))))))

(assert (=> d!19963 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (mask!6297 newMap!16)) e!53020)))

(assert (= (and d!19963 (not res!42256)) b!81234))

(assert (= (and b!81234 c!12778) b!81235))

(assert (= (and b!81234 (not c!12778)) b!81233))

(assert (= (and b!81235 res!42257) b!81232))

(assert (= (or b!81232 b!81233) bm!7583))

(assert (=> b!81234 m!83103))

(assert (=> b!81234 m!83103))

(assert (=> b!81234 m!83105))

(assert (=> b!81235 m!83103))

(declare-fun m!83109 () Bool)

(assert (=> b!81235 m!83109))

(declare-fun m!83111 () Bool)

(assert (=> b!81235 m!83111))

(assert (=> b!81235 m!83103))

(declare-fun m!83113 () Bool)

(assert (=> b!81235 m!83113))

(declare-fun m!83115 () Bool)

(assert (=> bm!7583 m!83115))

(assert (=> d!19721 d!19963))

(declare-fun e!53028 () Bool)

(declare-fun b!81236 () Bool)

(assert (=> b!81236 (= e!53028 (validKeyInArray!0 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!81237 () Bool)

(declare-fun e!53021 () Unit!2327)

(declare-fun lt!37957 () Unit!2327)

(assert (=> b!81237 (= e!53021 lt!37957)))

(declare-fun lt!37965 () ListLongMap!1437)

(assert (=> b!81237 (= lt!37965 (getCurrentListMapNoExtraKeys!68 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37960 () (_ BitVec 64))

(assert (=> b!81237 (= lt!37960 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37953 () (_ BitVec 64))

(assert (=> b!81237 (= lt!37953 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!37969 () Unit!2327)

(assert (=> b!81237 (= lt!37969 (addStillContains!56 lt!37965 lt!37960 (zeroValue!2188 newMap!16) lt!37953))))

(assert (=> b!81237 (contains!742 (+!104 lt!37965 (tuple2!2183 lt!37960 (zeroValue!2188 newMap!16))) lt!37953)))

(declare-fun lt!37972 () Unit!2327)

(assert (=> b!81237 (= lt!37972 lt!37969)))

(declare-fun lt!37961 () ListLongMap!1437)

(assert (=> b!81237 (= lt!37961 (getCurrentListMapNoExtraKeys!68 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37952 () (_ BitVec 64))

(assert (=> b!81237 (= lt!37952 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37973 () (_ BitVec 64))

(assert (=> b!81237 (= lt!37973 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!37959 () Unit!2327)

(assert (=> b!81237 (= lt!37959 (addApplyDifferent!56 lt!37961 lt!37952 (minValue!2188 newMap!16) lt!37973))))

(assert (=> b!81237 (= (apply!80 (+!104 lt!37961 (tuple2!2183 lt!37952 (minValue!2188 newMap!16))) lt!37973) (apply!80 lt!37961 lt!37973))))

(declare-fun lt!37970 () Unit!2327)

(assert (=> b!81237 (= lt!37970 lt!37959)))

(declare-fun lt!37956 () ListLongMap!1437)

(assert (=> b!81237 (= lt!37956 (getCurrentListMapNoExtraKeys!68 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37963 () (_ BitVec 64))

(assert (=> b!81237 (= lt!37963 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37962 () (_ BitVec 64))

(assert (=> b!81237 (= lt!37962 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!37971 () Unit!2327)

(assert (=> b!81237 (= lt!37971 (addApplyDifferent!56 lt!37956 lt!37963 (zeroValue!2188 newMap!16) lt!37962))))

(assert (=> b!81237 (= (apply!80 (+!104 lt!37956 (tuple2!2183 lt!37963 (zeroValue!2188 newMap!16))) lt!37962) (apply!80 lt!37956 lt!37962))))

(declare-fun lt!37968 () Unit!2327)

(assert (=> b!81237 (= lt!37968 lt!37971)))

(declare-fun lt!37966 () ListLongMap!1437)

(assert (=> b!81237 (= lt!37966 (getCurrentListMapNoExtraKeys!68 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37967 () (_ BitVec 64))

(assert (=> b!81237 (= lt!37967 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37964 () (_ BitVec 64))

(assert (=> b!81237 (= lt!37964 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!81237 (= lt!37957 (addApplyDifferent!56 lt!37966 lt!37967 (minValue!2188 newMap!16) lt!37964))))

(assert (=> b!81237 (= (apply!80 (+!104 lt!37966 (tuple2!2183 lt!37967 (minValue!2188 newMap!16))) lt!37964) (apply!80 lt!37966 lt!37964))))

(declare-fun b!81238 () Bool)

(declare-fun e!53027 () ListLongMap!1437)

(declare-fun call!7589 () ListLongMap!1437)

(assert (=> b!81238 (= e!53027 call!7589)))

(declare-fun bm!7584 () Bool)

(declare-fun call!7588 () ListLongMap!1437)

(declare-fun call!7587 () ListLongMap!1437)

(assert (=> bm!7584 (= call!7588 call!7587)))

(declare-fun bm!7585 () Bool)

(declare-fun call!7591 () Bool)

(declare-fun lt!37954 () ListLongMap!1437)

(assert (=> bm!7585 (= call!7591 (contains!742 lt!37954 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81239 () Bool)

(declare-fun e!53025 () Bool)

(declare-fun call!7593 () Bool)

(assert (=> b!81239 (= e!53025 (not call!7593))))

(declare-fun b!81240 () Bool)

(declare-fun e!53030 () Bool)

(assert (=> b!81240 (= e!53030 (not call!7591))))

(declare-fun b!81241 () Bool)

(declare-fun e!53024 () ListLongMap!1437)

(declare-fun call!7592 () ListLongMap!1437)

(assert (=> b!81241 (= e!53024 (+!104 call!7592 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun d!19965 () Bool)

(declare-fun e!53032 () Bool)

(assert (=> d!19965 e!53032))

(declare-fun res!42262 () Bool)

(assert (=> d!19965 (=> (not res!42262) (not e!53032))))

(assert (=> d!19965 (= res!42262 (or (bvsge #b00000000000000000000000000000000 (size!2131 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))))))))))

(declare-fun lt!37958 () ListLongMap!1437)

(assert (=> d!19965 (= lt!37954 lt!37958)))

(declare-fun lt!37955 () Unit!2327)

(assert (=> d!19965 (= lt!37955 e!53021)))

(declare-fun c!12780 () Bool)

(assert (=> d!19965 (= c!12780 e!53028)))

(declare-fun res!42259 () Bool)

(assert (=> d!19965 (=> (not res!42259) (not e!53028))))

(assert (=> d!19965 (= res!42259 (bvslt #b00000000000000000000000000000000 (size!2131 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))))))))

(assert (=> d!19965 (= lt!37958 e!53024)))

(declare-fun c!12782 () Bool)

(assert (=> d!19965 (= c!12782 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19965 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!19965 (= (getCurrentListMap!423 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!37954)))

(declare-fun bm!7586 () Bool)

(assert (=> bm!7586 (= call!7593 (contains!742 lt!37954 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7587 () Bool)

(assert (=> bm!7587 (= call!7589 call!7588)))

(declare-fun b!81242 () Bool)

(declare-fun e!53031 () Bool)

(assert (=> b!81242 (= e!53031 (= (apply!80 lt!37954 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81242 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))))))))

(assert (=> b!81242 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))))))))

(declare-fun b!81243 () Bool)

(declare-fun res!42260 () Bool)

(assert (=> b!81243 (=> (not res!42260) (not e!53032))))

(declare-fun e!53023 () Bool)

(assert (=> b!81243 (= res!42260 e!53023)))

(declare-fun res!42263 () Bool)

(assert (=> b!81243 (=> res!42263 e!53023)))

(declare-fun e!53033 () Bool)

(assert (=> b!81243 (= res!42263 (not e!53033))))

(declare-fun res!42258 () Bool)

(assert (=> b!81243 (=> (not res!42258) (not e!53033))))

(assert (=> b!81243 (= res!42258 (bvslt #b00000000000000000000000000000000 (size!2131 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))))))))

(declare-fun b!81244 () Bool)

(declare-fun e!53026 () Bool)

(assert (=> b!81244 (= e!53026 (= (apply!80 lt!37954 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun b!81245 () Bool)

(assert (=> b!81245 (= e!53033 (validKeyInArray!0 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7588 () Bool)

(declare-fun call!7590 () ListLongMap!1437)

(assert (=> bm!7588 (= call!7590 call!7592)))

(declare-fun b!81246 () Bool)

(assert (=> b!81246 (= e!53030 e!53026)))

(declare-fun res!42266 () Bool)

(assert (=> b!81246 (= res!42266 call!7591)))

(assert (=> b!81246 (=> (not res!42266) (not e!53026))))

(declare-fun b!81247 () Bool)

(assert (=> b!81247 (= e!53027 call!7590)))

(declare-fun b!81248 () Bool)

(assert (=> b!81248 (= e!53032 e!53030)))

(declare-fun c!12779 () Bool)

(assert (=> b!81248 (= c!12779 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81249 () Bool)

(assert (=> b!81249 (= e!53023 e!53031)))

(declare-fun res!42261 () Bool)

(assert (=> b!81249 (=> (not res!42261) (not e!53031))))

(assert (=> b!81249 (= res!42261 (contains!742 lt!37954 (select (arr!1888 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!81249 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))))))))

(declare-fun b!81250 () Bool)

(declare-fun res!42264 () Bool)

(assert (=> b!81250 (=> (not res!42264) (not e!53032))))

(assert (=> b!81250 (= res!42264 e!53025)))

(declare-fun c!12783 () Bool)

(assert (=> b!81250 (= c!12783 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81251 () Bool)

(declare-fun e!53022 () ListLongMap!1437)

(assert (=> b!81251 (= e!53022 call!7590)))

(declare-fun b!81252 () Bool)

(declare-fun c!12781 () Bool)

(assert (=> b!81252 (= c!12781 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!81252 (= e!53022 e!53027)))

(declare-fun bm!7589 () Bool)

(declare-fun c!12784 () Bool)

(assert (=> bm!7589 (= call!7592 (+!104 (ite c!12782 call!7587 (ite c!12784 call!7588 call!7589)) (ite (or c!12782 c!12784) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7590 () Bool)

(assert (=> bm!7590 (= call!7587 (getCurrentListMapNoExtraKeys!68 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!81253 () Bool)

(declare-fun e!53029 () Bool)

(assert (=> b!81253 (= e!53025 e!53029)))

(declare-fun res!42265 () Bool)

(assert (=> b!81253 (= res!42265 call!7593)))

(assert (=> b!81253 (=> (not res!42265) (not e!53029))))

(declare-fun b!81254 () Bool)

(assert (=> b!81254 (= e!53024 e!53022)))

(assert (=> b!81254 (= c!12784 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81255 () Bool)

(assert (=> b!81255 (= e!53029 (= (apply!80 lt!37954 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!81256 () Bool)

(declare-fun Unit!2372 () Unit!2327)

(assert (=> b!81256 (= e!53021 Unit!2372)))

(assert (= (and d!19965 c!12782) b!81241))

(assert (= (and d!19965 (not c!12782)) b!81254))

(assert (= (and b!81254 c!12784) b!81251))

(assert (= (and b!81254 (not c!12784)) b!81252))

(assert (= (and b!81252 c!12781) b!81247))

(assert (= (and b!81252 (not c!12781)) b!81238))

(assert (= (or b!81247 b!81238) bm!7587))

(assert (= (or b!81251 bm!7587) bm!7584))

(assert (= (or b!81251 b!81247) bm!7588))

(assert (= (or b!81241 bm!7584) bm!7590))

(assert (= (or b!81241 bm!7588) bm!7589))

(assert (= (and d!19965 res!42259) b!81236))

(assert (= (and d!19965 c!12780) b!81237))

(assert (= (and d!19965 (not c!12780)) b!81256))

(assert (= (and d!19965 res!42262) b!81243))

(assert (= (and b!81243 res!42258) b!81245))

(assert (= (and b!81243 (not res!42263)) b!81249))

(assert (= (and b!81249 res!42261) b!81242))

(assert (= (and b!81243 res!42260) b!81250))

(assert (= (and b!81250 c!12783) b!81253))

(assert (= (and b!81250 (not c!12783)) b!81239))

(assert (= (and b!81253 res!42265) b!81255))

(assert (= (or b!81253 b!81239) bm!7586))

(assert (= (and b!81250 res!42264) b!81248))

(assert (= (and b!81248 c!12779) b!81246))

(assert (= (and b!81248 (not c!12779)) b!81240))

(assert (= (and b!81246 res!42266) b!81244))

(assert (= (or b!81246 b!81240) bm!7585))

(declare-fun b_lambda!3617 () Bool)

(assert (=> (not b_lambda!3617) (not b!81242)))

(assert (=> b!81242 t!5186))

(declare-fun b_and!4949 () Bool)

(assert (= b_and!4945 (and (=> t!5186 result!2849) b_and!4949)))

(assert (=> b!81242 t!5188))

(declare-fun b_and!4951 () Bool)

(assert (= b_and!4947 (and (=> t!5188 result!2851) b_and!4951)))

(assert (=> b!81242 m!83103))

(declare-fun m!83117 () Bool)

(assert (=> b!81242 m!83117))

(assert (=> b!81242 m!83103))

(declare-fun m!83119 () Bool)

(assert (=> b!81242 m!83119))

(assert (=> b!81242 m!83119))

(assert (=> b!81242 m!82137))

(declare-fun m!83121 () Bool)

(assert (=> b!81242 m!83121))

(assert (=> b!81242 m!82137))

(declare-fun m!83123 () Bool)

(assert (=> bm!7586 m!83123))

(assert (=> b!81245 m!83103))

(assert (=> b!81245 m!83103))

(assert (=> b!81245 m!83105))

(declare-fun m!83125 () Bool)

(assert (=> b!81237 m!83125))

(declare-fun m!83127 () Bool)

(assert (=> b!81237 m!83127))

(declare-fun m!83129 () Bool)

(assert (=> b!81237 m!83129))

(declare-fun m!83131 () Bool)

(assert (=> b!81237 m!83131))

(declare-fun m!83133 () Bool)

(assert (=> b!81237 m!83133))

(declare-fun m!83135 () Bool)

(assert (=> b!81237 m!83135))

(declare-fun m!83137 () Bool)

(assert (=> b!81237 m!83137))

(declare-fun m!83139 () Bool)

(assert (=> b!81237 m!83139))

(declare-fun m!83141 () Bool)

(assert (=> b!81237 m!83141))

(declare-fun m!83143 () Bool)

(assert (=> b!81237 m!83143))

(declare-fun m!83145 () Bool)

(assert (=> b!81237 m!83145))

(declare-fun m!83147 () Bool)

(assert (=> b!81237 m!83147))

(declare-fun m!83149 () Bool)

(assert (=> b!81237 m!83149))

(assert (=> b!81237 m!83131))

(assert (=> b!81237 m!83141))

(assert (=> b!81237 m!83103))

(declare-fun m!83151 () Bool)

(assert (=> b!81237 m!83151))

(assert (=> b!81237 m!83135))

(declare-fun m!83153 () Bool)

(assert (=> b!81237 m!83153))

(assert (=> b!81237 m!83147))

(declare-fun m!83155 () Bool)

(assert (=> b!81237 m!83155))

(assert (=> b!81249 m!83103))

(assert (=> b!81249 m!83103))

(declare-fun m!83157 () Bool)

(assert (=> b!81249 m!83157))

(declare-fun m!83159 () Bool)

(assert (=> b!81241 m!83159))

(declare-fun m!83161 () Bool)

(assert (=> bm!7585 m!83161))

(declare-fun m!83163 () Bool)

(assert (=> b!81244 m!83163))

(assert (=> bm!7590 m!83127))

(declare-fun m!83165 () Bool)

(assert (=> bm!7589 m!83165))

(declare-fun m!83167 () Bool)

(assert (=> b!81255 m!83167))

(assert (=> b!81236 m!83103))

(assert (=> b!81236 m!83103))

(assert (=> b!81236 m!83105))

(assert (=> d!19965 m!81973))

(assert (=> d!19721 d!19965))

(declare-fun d!19967 () Bool)

(declare-fun e!53039 () Bool)

(assert (=> d!19967 e!53039))

(declare-fun res!42275 () Bool)

(assert (=> d!19967 (=> (not res!42275) (not e!53039))))

(assert (=> d!19967 (= res!42275 (and (bvsge (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000000) (bvslt (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (size!2131 (_keys!3955 newMap!16)))))))

(declare-fun lt!37976 () Unit!2327)

(declare-fun choose!1 (array!3965 (_ BitVec 32) (_ BitVec 64)) Unit!2327)

(assert (=> d!19967 (= lt!37976 (choose!1 (_keys!3955 newMap!16) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun e!53038 () Bool)

(assert (=> d!19967 e!53038))

(declare-fun res!42278 () Bool)

(assert (=> d!19967 (=> (not res!42278) (not e!53038))))

(assert (=> d!19967 (= res!42278 (and (bvsge (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000000) (bvslt (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (size!2131 (_keys!3955 newMap!16)))))))

(assert (=> d!19967 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3955 newMap!16) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) lt!37976)))

(declare-fun b!81268 () Bool)

(assert (=> b!81268 (= e!53039 (= (arrayCountValidKeys!0 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3955 newMap!16) #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!81265 () Bool)

(declare-fun res!42276 () Bool)

(assert (=> b!81265 (=> (not res!42276) (not e!53038))))

(assert (=> b!81265 (= res!42276 (not (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277))))))))

(declare-fun b!81267 () Bool)

(assert (=> b!81267 (= e!53038 (bvslt (size!2131 (_keys!3955 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!81266 () Bool)

(declare-fun res!42277 () Bool)

(assert (=> b!81266 (=> (not res!42277) (not e!53038))))

(assert (=> b!81266 (= res!42277 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (= (and d!19967 res!42278) b!81265))

(assert (= (and b!81265 res!42276) b!81266))

(assert (= (and b!81266 res!42277) b!81267))

(assert (= (and d!19967 res!42275) b!81268))

(assert (=> d!19967 m!81295))

(declare-fun m!83169 () Bool)

(assert (=> d!19967 m!83169))

(assert (=> b!81268 m!82113))

(assert (=> b!81268 m!82109))

(assert (=> b!81268 m!81705))

(declare-fun m!83171 () Bool)

(assert (=> b!81265 m!83171))

(assert (=> b!81265 m!83171))

(declare-fun m!83173 () Bool)

(assert (=> b!81265 m!83173))

(assert (=> b!81266 m!81295))

(assert (=> b!81266 m!81699))

(assert (=> d!19721 d!19967))

(declare-fun d!19969 () Bool)

(assert (=> d!19969 (arrayContainsKey!0 lt!37606 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!37979 () Unit!2327)

(declare-fun choose!13 (array!3965 (_ BitVec 64) (_ BitVec 32)) Unit!2327)

(assert (=> d!19969 (= lt!37979 (choose!13 lt!37606 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277))))))

(assert (=> d!19969 (bvsge (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000000)))

(assert (=> d!19969 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!37606 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277))) lt!37979)))

(declare-fun bs!3425 () Bool)

(assert (= bs!3425 d!19969))

(assert (=> bs!3425 m!81295))

(assert (=> bs!3425 m!82095))

(assert (=> bs!3425 m!81295))

(declare-fun m!83175 () Bool)

(assert (=> bs!3425 m!83175))

(assert (=> d!19721 d!19969))

(declare-fun d!19971 () Bool)

(declare-fun e!53042 () Bool)

(assert (=> d!19971 e!53042))

(declare-fun res!42281 () Bool)

(assert (=> d!19971 (=> (not res!42281) (not e!53042))))

(assert (=> d!19971 (= res!42281 (and (bvsge (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) #b00000000000000000000000000000000) (bvslt (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (size!2131 (_keys!3955 newMap!16)))))))

(declare-fun lt!37982 () Unit!2327)

(declare-fun choose!41 (array!3965 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1515) Unit!2327)

(assert (=> d!19971 (= lt!37982 (choose!41 (_keys!3955 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) lt!37580 lt!37579))))

(assert (=> d!19971 (bvslt (size!2131 (_keys!3955 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!19971 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3955 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) lt!37580 lt!37579) lt!37982)))

(declare-fun b!81271 () Bool)

(assert (=> b!81271 (= e!53042 (arrayNoDuplicates!0 (array!3966 (store (arr!1888 (_keys!3955 newMap!16)) (ite c!12528 (index!3114 lt!37277) (index!3111 lt!37277)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (size!2131 (_keys!3955 newMap!16))) lt!37580 lt!37579))))

(assert (= (and d!19971 res!42281) b!81271))

(assert (=> d!19971 m!81295))

(declare-fun m!83177 () Bool)

(assert (=> d!19971 m!83177))

(assert (=> b!81271 m!82113))

(assert (=> b!81271 m!82125))

(assert (=> d!19721 d!19971))

(declare-fun d!19973 () Bool)

(declare-fun e!53043 () Bool)

(assert (=> d!19973 e!53043))

(declare-fun res!42282 () Bool)

(assert (=> d!19973 (=> res!42282 e!53043)))

(declare-fun lt!37986 () Bool)

(assert (=> d!19973 (= res!42282 (not lt!37986))))

(declare-fun lt!37985 () Bool)

(assert (=> d!19973 (= lt!37986 lt!37985)))

(declare-fun lt!37984 () Unit!2327)

(declare-fun e!53044 () Unit!2327)

(assert (=> d!19973 (= lt!37984 e!53044)))

(declare-fun c!12785 () Bool)

(assert (=> d!19973 (= c!12785 lt!37985)))

(assert (=> d!19973 (= lt!37985 (containsKey!140 (toList!734 lt!37660) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19973 (= (contains!742 lt!37660 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) lt!37986)))

(declare-fun b!81272 () Bool)

(declare-fun lt!37983 () Unit!2327)

(assert (=> b!81272 (= e!53044 lt!37983)))

(assert (=> b!81272 (= lt!37983 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37660) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81272 (isDefined!90 (getValueByKey!136 (toList!734 lt!37660) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81273 () Bool)

(declare-fun Unit!2373 () Unit!2327)

(assert (=> b!81273 (= e!53044 Unit!2373)))

(declare-fun b!81274 () Bool)

(assert (=> b!81274 (= e!53043 (isDefined!90 (getValueByKey!136 (toList!734 lt!37660) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!19973 c!12785) b!81272))

(assert (= (and d!19973 (not c!12785)) b!81273))

(assert (= (and d!19973 (not res!42282)) b!81274))

(assert (=> d!19973 m!82131))

(declare-fun m!83179 () Bool)

(assert (=> d!19973 m!83179))

(assert (=> b!81272 m!82131))

(declare-fun m!83181 () Bool)

(assert (=> b!81272 m!83181))

(assert (=> b!81272 m!82131))

(assert (=> b!81272 m!82791))

(assert (=> b!81272 m!82791))

(declare-fun m!83183 () Bool)

(assert (=> b!81272 m!83183))

(assert (=> b!81274 m!82131))

(assert (=> b!81274 m!82791))

(assert (=> b!81274 m!82791))

(assert (=> b!81274 m!83183))

(assert (=> b!80778 d!19973))

(declare-fun d!19975 () Bool)

(assert (=> d!19975 (isDefined!90 (getValueByKey!136 (toList!734 e!52461) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun lt!37987 () Unit!2327)

(assert (=> d!19975 (= lt!37987 (choose!485 (toList!734 e!52461) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun e!53045 () Bool)

(assert (=> d!19975 e!53045))

(declare-fun res!42283 () Bool)

(assert (=> d!19975 (=> (not res!42283) (not e!53045))))

(assert (=> d!19975 (= res!42283 (isStrictlySorted!291 (toList!734 e!52461)))))

(assert (=> d!19975 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 e!52461) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) lt!37987)))

(declare-fun b!81275 () Bool)

(assert (=> b!81275 (= e!53045 (containsKey!140 (toList!734 e!52461) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (= (and d!19975 res!42283) b!81275))

(assert (=> d!19975 m!81295))

(assert (=> d!19975 m!82713))

(assert (=> d!19975 m!82713))

(assert (=> d!19975 m!82715))

(assert (=> d!19975 m!81295))

(declare-fun m!83185 () Bool)

(assert (=> d!19975 m!83185))

(declare-fun m!83187 () Bool)

(assert (=> d!19975 m!83187))

(assert (=> b!81275 m!81295))

(assert (=> b!81275 m!82709))

(assert (=> b!80976 d!19975))

(declare-fun d!19977 () Bool)

(assert (=> d!19977 (= (isDefined!90 (getValueByKey!136 (toList!734 e!52461) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))) (not (isEmpty!334 (getValueByKey!136 (toList!734 e!52461) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))))

(declare-fun bs!3426 () Bool)

(assert (= bs!3426 d!19977))

(assert (=> bs!3426 m!82713))

(declare-fun m!83189 () Bool)

(assert (=> bs!3426 m!83189))

(assert (=> b!80976 d!19977))

(declare-fun b!81279 () Bool)

(declare-fun e!53047 () Option!142)

(assert (=> b!81279 (= e!53047 None!140)))

(declare-fun b!81276 () Bool)

(declare-fun e!53046 () Option!142)

(assert (=> b!81276 (= e!53046 (Some!141 (_2!1102 (h!2099 (toList!734 e!52461)))))))

(declare-fun b!81278 () Bool)

(assert (=> b!81278 (= e!53047 (getValueByKey!136 (t!5172 (toList!734 e!52461)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun d!19979 () Bool)

(declare-fun c!12786 () Bool)

(assert (=> d!19979 (= c!12786 (and ((_ is Cons!1510) (toList!734 e!52461)) (= (_1!1102 (h!2099 (toList!734 e!52461))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (=> d!19979 (= (getValueByKey!136 (toList!734 e!52461) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) e!53046)))

(declare-fun b!81277 () Bool)

(assert (=> b!81277 (= e!53046 e!53047)))

(declare-fun c!12787 () Bool)

(assert (=> b!81277 (= c!12787 (and ((_ is Cons!1510) (toList!734 e!52461)) (not (= (_1!1102 (h!2099 (toList!734 e!52461))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))))

(assert (= (and d!19979 c!12786) b!81276))

(assert (= (and d!19979 (not c!12786)) b!81277))

(assert (= (and b!81277 c!12787) b!81278))

(assert (= (and b!81277 (not c!12787)) b!81279))

(assert (=> b!81278 m!81295))

(declare-fun m!83191 () Bool)

(assert (=> b!81278 m!83191))

(assert (=> b!80976 d!19979))

(declare-fun d!19981 () Bool)

(declare-fun lt!37988 () (_ BitVec 32))

(assert (=> d!19981 (and (bvsge lt!37988 #b00000000000000000000000000000000) (bvsle lt!37988 (bvsub (size!2131 (_keys!3955 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!53049 () (_ BitVec 32))

(assert (=> d!19981 (= lt!37988 e!53049)))

(declare-fun c!12789 () Bool)

(assert (=> d!19981 (= c!12789 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19981 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2131 (_keys!3955 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2131 (_keys!3955 newMap!16)) (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!19981 (= (arrayCountValidKeys!0 (_keys!3955 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2131 (_keys!3955 newMap!16))) lt!37988)))

(declare-fun bm!7591 () Bool)

(declare-fun call!7594 () (_ BitVec 32))

(assert (=> bm!7591 (= call!7594 (arrayCountValidKeys!0 (_keys!3955 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81280 () Bool)

(declare-fun e!53048 () (_ BitVec 32))

(assert (=> b!81280 (= e!53049 e!53048)))

(declare-fun c!12788 () Bool)

(assert (=> b!81280 (= c!12788 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!81281 () Bool)

(assert (=> b!81281 (= e!53048 call!7594)))

(declare-fun b!81282 () Bool)

(assert (=> b!81282 (= e!53048 (bvadd #b00000000000000000000000000000001 call!7594))))

(declare-fun b!81283 () Bool)

(assert (=> b!81283 (= e!53049 #b00000000000000000000000000000000)))

(assert (= (and d!19981 c!12789) b!81283))

(assert (= (and d!19981 (not c!12789)) b!81280))

(assert (= (and b!81280 c!12788) b!81282))

(assert (= (and b!81280 (not c!12788)) b!81281))

(assert (= (or b!81282 b!81281) bm!7591))

(declare-fun m!83193 () Bool)

(assert (=> bm!7591 m!83193))

(declare-fun m!83195 () Bool)

(assert (=> b!81280 m!83195))

(assert (=> b!81280 m!83195))

(declare-fun m!83197 () Bool)

(assert (=> b!81280 m!83197))

(assert (=> bm!7512 d!19981))

(assert (=> b!80966 d!19609))

(declare-fun d!19983 () Bool)

(declare-fun e!53050 () Bool)

(assert (=> d!19983 e!53050))

(declare-fun res!42285 () Bool)

(assert (=> d!19983 (=> (not res!42285) (not e!53050))))

(declare-fun lt!37992 () ListLongMap!1437)

(assert (=> d!19983 (= res!42285 (contains!742 lt!37992 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun lt!37991 () List!1514)

(assert (=> d!19983 (= lt!37992 (ListLongMap!1438 lt!37991))))

(declare-fun lt!37990 () Unit!2327)

(declare-fun lt!37989 () Unit!2327)

(assert (=> d!19983 (= lt!37990 lt!37989)))

(assert (=> d!19983 (= (getValueByKey!136 lt!37991 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!19983 (= lt!37989 (lemmaContainsTupThenGetReturnValue!56 lt!37991 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!19983 (= lt!37991 (insertStrictlySorted!59 (toList!734 call!7542) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!19983 (= (+!104 call!7542 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) lt!37992)))

(declare-fun b!81284 () Bool)

(declare-fun res!42284 () Bool)

(assert (=> b!81284 (=> (not res!42284) (not e!53050))))

(assert (=> b!81284 (= res!42284 (= (getValueByKey!136 (toList!734 lt!37992) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(declare-fun b!81285 () Bool)

(assert (=> b!81285 (= e!53050 (contains!745 (toList!734 lt!37992) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(assert (= (and d!19983 res!42285) b!81284))

(assert (= (and b!81284 res!42284) b!81285))

(declare-fun m!83199 () Bool)

(assert (=> d!19983 m!83199))

(declare-fun m!83201 () Bool)

(assert (=> d!19983 m!83201))

(declare-fun m!83203 () Bool)

(assert (=> d!19983 m!83203))

(declare-fun m!83205 () Bool)

(assert (=> d!19983 m!83205))

(declare-fun m!83207 () Bool)

(assert (=> b!81284 m!83207))

(declare-fun m!83209 () Bool)

(assert (=> b!81285 m!83209))

(assert (=> b!80909 d!19983))

(declare-fun b!81286 () Bool)

(declare-fun e!53054 () List!1514)

(declare-fun call!7597 () List!1514)

(assert (=> b!81286 (= e!53054 call!7597)))

(declare-fun call!7596 () List!1514)

(declare-fun bm!7592 () Bool)

(declare-fun e!53051 () List!1514)

(declare-fun c!12793 () Bool)

(assert (=> bm!7592 (= call!7596 ($colon$colon!69 e!53051 (ite c!12793 (h!2099 (t!5172 (toList!734 lt!37073))) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082)))))))

(declare-fun c!12791 () Bool)

(assert (=> bm!7592 (= c!12791 c!12793)))

(declare-fun b!81287 () Bool)

(declare-fun e!53055 () Bool)

(declare-fun lt!37993 () List!1514)

(assert (=> b!81287 (= e!53055 (contains!745 lt!37993 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun bm!7593 () Bool)

(declare-fun call!7595 () List!1514)

(assert (=> bm!7593 (= call!7597 call!7595)))

(declare-fun d!19985 () Bool)

(assert (=> d!19985 e!53055))

(declare-fun res!42287 () Bool)

(assert (=> d!19985 (=> (not res!42287) (not e!53055))))

(assert (=> d!19985 (= res!42287 (isStrictlySorted!291 lt!37993))))

(declare-fun e!53053 () List!1514)

(assert (=> d!19985 (= lt!37993 e!53053)))

(assert (=> d!19985 (= c!12793 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37073))) (bvslt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37073)))) (_1!1102 lt!37082))))))

(assert (=> d!19985 (isStrictlySorted!291 (t!5172 (toList!734 lt!37073)))))

(assert (=> d!19985 (= (insertStrictlySorted!59 (t!5172 (toList!734 lt!37073)) (_1!1102 lt!37082) (_2!1102 lt!37082)) lt!37993)))

(declare-fun b!81288 () Bool)

(declare-fun c!12790 () Bool)

(assert (=> b!81288 (= c!12790 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37073))) (bvsgt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37073)))) (_1!1102 lt!37082))))))

(declare-fun e!53052 () List!1514)

(assert (=> b!81288 (= e!53052 e!53054)))

(declare-fun b!81289 () Bool)

(assert (=> b!81289 (= e!53052 call!7595)))

(declare-fun b!81290 () Bool)

(assert (=> b!81290 (= e!53053 call!7596)))

(declare-fun bm!7594 () Bool)

(assert (=> bm!7594 (= call!7595 call!7596)))

(declare-fun b!81291 () Bool)

(declare-fun res!42286 () Bool)

(assert (=> b!81291 (=> (not res!42286) (not e!53055))))

(assert (=> b!81291 (= res!42286 (containsKey!140 lt!37993 (_1!1102 lt!37082)))))

(declare-fun b!81292 () Bool)

(assert (=> b!81292 (= e!53054 call!7597)))

(declare-fun b!81293 () Bool)

(declare-fun c!12792 () Bool)

(assert (=> b!81293 (= e!53051 (ite c!12792 (t!5172 (t!5172 (toList!734 lt!37073))) (ite c!12790 (Cons!1510 (h!2099 (t!5172 (toList!734 lt!37073))) (t!5172 (t!5172 (toList!734 lt!37073)))) Nil!1511)))))

(declare-fun b!81294 () Bool)

(assert (=> b!81294 (= e!53053 e!53052)))

(assert (=> b!81294 (= c!12792 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37073))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37073)))) (_1!1102 lt!37082))))))

(declare-fun b!81295 () Bool)

(assert (=> b!81295 (= e!53051 (insertStrictlySorted!59 (t!5172 (t!5172 (toList!734 lt!37073))) (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(assert (= (and d!19985 c!12793) b!81290))

(assert (= (and d!19985 (not c!12793)) b!81294))

(assert (= (and b!81294 c!12792) b!81289))

(assert (= (and b!81294 (not c!12792)) b!81288))

(assert (= (and b!81288 c!12790) b!81292))

(assert (= (and b!81288 (not c!12790)) b!81286))

(assert (= (or b!81292 b!81286) bm!7593))

(assert (= (or b!81289 bm!7593) bm!7594))

(assert (= (or b!81290 bm!7594) bm!7592))

(assert (= (and bm!7592 c!12791) b!81295))

(assert (= (and bm!7592 (not c!12791)) b!81293))

(assert (= (and d!19985 res!42287) b!81291))

(assert (= (and b!81291 res!42286) b!81287))

(declare-fun m!83211 () Bool)

(assert (=> d!19985 m!83211))

(declare-fun m!83213 () Bool)

(assert (=> d!19985 m!83213))

(declare-fun m!83215 () Bool)

(assert (=> b!81295 m!83215))

(declare-fun m!83217 () Bool)

(assert (=> bm!7592 m!83217))

(declare-fun m!83219 () Bool)

(assert (=> b!81291 m!83219))

(declare-fun m!83221 () Bool)

(assert (=> b!81287 m!83221))

(assert (=> b!80943 d!19985))

(declare-fun d!19987 () Bool)

(declare-fun e!53056 () Bool)

(assert (=> d!19987 e!53056))

(declare-fun res!42288 () Bool)

(assert (=> d!19987 (=> res!42288 e!53056)))

(declare-fun lt!37997 () Bool)

(assert (=> d!19987 (= res!42288 (not lt!37997))))

(declare-fun lt!37996 () Bool)

(assert (=> d!19987 (= lt!37997 lt!37996)))

(declare-fun lt!37995 () Unit!2327)

(declare-fun e!53057 () Unit!2327)

(assert (=> d!19987 (= lt!37995 e!53057)))

(declare-fun c!12794 () Bool)

(assert (=> d!19987 (= c!12794 lt!37996)))

(assert (=> d!19987 (= lt!37996 (containsKey!140 (toList!734 lt!37450) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!19987 (= (contains!742 lt!37450 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37997)))

(declare-fun b!81296 () Bool)

(declare-fun lt!37994 () Unit!2327)

(assert (=> b!81296 (= e!53057 lt!37994)))

(assert (=> b!81296 (= lt!37994 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37450) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> b!81296 (isDefined!90 (getValueByKey!136 (toList!734 lt!37450) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81297 () Bool)

(declare-fun Unit!2374 () Unit!2327)

(assert (=> b!81297 (= e!53057 Unit!2374)))

(declare-fun b!81298 () Bool)

(assert (=> b!81298 (= e!53056 (isDefined!90 (getValueByKey!136 (toList!734 lt!37450) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!19987 c!12794) b!81296))

(assert (= (and d!19987 (not c!12794)) b!81297))

(assert (= (and d!19987 (not res!42288)) b!81298))

(declare-fun m!83223 () Bool)

(assert (=> d!19987 m!83223))

(declare-fun m!83225 () Bool)

(assert (=> b!81296 m!83225))

(assert (=> b!81296 m!81827))

(assert (=> b!81296 m!81827))

(declare-fun m!83227 () Bool)

(assert (=> b!81296 m!83227))

(assert (=> b!81298 m!81827))

(assert (=> b!81298 m!81827))

(assert (=> b!81298 m!83227))

(assert (=> d!19637 d!19987))

(declare-fun b!81302 () Bool)

(declare-fun e!53059 () Option!142)

(assert (=> b!81302 (= e!53059 None!140)))

(declare-fun b!81299 () Bool)

(declare-fun e!53058 () Option!142)

(assert (=> b!81299 (= e!53058 (Some!141 (_2!1102 (h!2099 lt!37449))))))

(declare-fun b!81301 () Bool)

(assert (=> b!81301 (= e!53059 (getValueByKey!136 (t!5172 lt!37449) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun c!12795 () Bool)

(declare-fun d!19989 () Bool)

(assert (=> d!19989 (= c!12795 (and ((_ is Cons!1510) lt!37449) (= (_1!1102 (h!2099 lt!37449)) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!19989 (= (getValueByKey!136 lt!37449 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53058)))

(declare-fun b!81300 () Bool)

(assert (=> b!81300 (= e!53058 e!53059)))

(declare-fun c!12796 () Bool)

(assert (=> b!81300 (= c!12796 (and ((_ is Cons!1510) lt!37449) (not (= (_1!1102 (h!2099 lt!37449)) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!19989 c!12795) b!81299))

(assert (= (and d!19989 (not c!12795)) b!81300))

(assert (= (and b!81300 c!12796) b!81301))

(assert (= (and b!81300 (not c!12796)) b!81302))

(declare-fun m!83229 () Bool)

(assert (=> b!81301 m!83229))

(assert (=> d!19637 d!19989))

(declare-fun d!19991 () Bool)

(assert (=> d!19991 (= (getValueByKey!136 lt!37449 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!37998 () Unit!2327)

(assert (=> d!19991 (= lt!37998 (choose!477 lt!37449 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun e!53060 () Bool)

(assert (=> d!19991 e!53060))

(declare-fun res!42289 () Bool)

(assert (=> d!19991 (=> (not res!42289) (not e!53060))))

(assert (=> d!19991 (= res!42289 (isStrictlySorted!291 lt!37449))))

(assert (=> d!19991 (= (lemmaContainsTupThenGetReturnValue!56 lt!37449 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37998)))

(declare-fun b!81303 () Bool)

(declare-fun res!42290 () Bool)

(assert (=> b!81303 (=> (not res!42290) (not e!53060))))

(assert (=> b!81303 (= res!42290 (containsKey!140 lt!37449 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81304 () Bool)

(assert (=> b!81304 (= e!53060 (contains!745 lt!37449 (tuple2!2183 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!19991 res!42289) b!81303))

(assert (= (and b!81303 res!42290) b!81304))

(assert (=> d!19991 m!81821))

(declare-fun m!83231 () Bool)

(assert (=> d!19991 m!83231))

(declare-fun m!83233 () Bool)

(assert (=> d!19991 m!83233))

(declare-fun m!83235 () Bool)

(assert (=> b!81303 m!83235))

(declare-fun m!83237 () Bool)

(assert (=> b!81304 m!83237))

(assert (=> d!19637 d!19991))

(declare-fun b!81305 () Bool)

(declare-fun e!53064 () List!1514)

(declare-fun call!7600 () List!1514)

(assert (=> b!81305 (= e!53064 call!7600)))

(declare-fun c!12800 () Bool)

(declare-fun e!53061 () List!1514)

(declare-fun call!7599 () List!1514)

(declare-fun bm!7595 () Bool)

(assert (=> bm!7595 (= call!7599 ($colon$colon!69 e!53061 (ite c!12800 (h!2099 (toList!734 lt!37418)) (tuple2!2183 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun c!12798 () Bool)

(assert (=> bm!7595 (= c!12798 c!12800)))

(declare-fun lt!37999 () List!1514)

(declare-fun e!53065 () Bool)

(declare-fun b!81306 () Bool)

(assert (=> b!81306 (= e!53065 (contains!745 lt!37999 (tuple2!2183 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun bm!7596 () Bool)

(declare-fun call!7598 () List!1514)

(assert (=> bm!7596 (= call!7600 call!7598)))

(declare-fun d!19993 () Bool)

(assert (=> d!19993 e!53065))

(declare-fun res!42292 () Bool)

(assert (=> d!19993 (=> (not res!42292) (not e!53065))))

(assert (=> d!19993 (= res!42292 (isStrictlySorted!291 lt!37999))))

(declare-fun e!53063 () List!1514)

(assert (=> d!19993 (= lt!37999 e!53063)))

(assert (=> d!19993 (= c!12800 (and ((_ is Cons!1510) (toList!734 lt!37418)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37418))) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!19993 (isStrictlySorted!291 (toList!734 lt!37418))))

(assert (=> d!19993 (= (insertStrictlySorted!59 (toList!734 lt!37418) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37999)))

(declare-fun b!81307 () Bool)

(declare-fun c!12797 () Bool)

(assert (=> b!81307 (= c!12797 (and ((_ is Cons!1510) (toList!734 lt!37418)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37418))) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun e!53062 () List!1514)

(assert (=> b!81307 (= e!53062 e!53064)))

(declare-fun b!81308 () Bool)

(assert (=> b!81308 (= e!53062 call!7598)))

(declare-fun b!81309 () Bool)

(assert (=> b!81309 (= e!53063 call!7599)))

(declare-fun bm!7597 () Bool)

(assert (=> bm!7597 (= call!7598 call!7599)))

(declare-fun b!81310 () Bool)

(declare-fun res!42291 () Bool)

(assert (=> b!81310 (=> (not res!42291) (not e!53065))))

(assert (=> b!81310 (= res!42291 (containsKey!140 lt!37999 (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81311 () Bool)

(assert (=> b!81311 (= e!53064 call!7600)))

(declare-fun b!81312 () Bool)

(declare-fun c!12799 () Bool)

(assert (=> b!81312 (= e!53061 (ite c!12799 (t!5172 (toList!734 lt!37418)) (ite c!12797 (Cons!1510 (h!2099 (toList!734 lt!37418)) (t!5172 (toList!734 lt!37418))) Nil!1511)))))

(declare-fun b!81313 () Bool)

(assert (=> b!81313 (= e!53063 e!53062)))

(assert (=> b!81313 (= c!12799 (and ((_ is Cons!1510) (toList!734 lt!37418)) (= (_1!1102 (h!2099 (toList!734 lt!37418))) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!81314 () Bool)

(assert (=> b!81314 (= e!53061 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37418)) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (= (and d!19993 c!12800) b!81309))

(assert (= (and d!19993 (not c!12800)) b!81313))

(assert (= (and b!81313 c!12799) b!81308))

(assert (= (and b!81313 (not c!12799)) b!81307))

(assert (= (and b!81307 c!12797) b!81311))

(assert (= (and b!81307 (not c!12797)) b!81305))

(assert (= (or b!81311 b!81305) bm!7596))

(assert (= (or b!81308 bm!7596) bm!7597))

(assert (= (or b!81309 bm!7597) bm!7595))

(assert (= (and bm!7595 c!12798) b!81314))

(assert (= (and bm!7595 (not c!12798)) b!81312))

(assert (= (and d!19993 res!42292) b!81310))

(assert (= (and b!81310 res!42291) b!81306))

(declare-fun m!83239 () Bool)

(assert (=> d!19993 m!83239))

(declare-fun m!83241 () Bool)

(assert (=> d!19993 m!83241))

(declare-fun m!83243 () Bool)

(assert (=> b!81314 m!83243))

(declare-fun m!83245 () Bool)

(assert (=> bm!7595 m!83245))

(declare-fun m!83247 () Bool)

(assert (=> b!81310 m!83247))

(declare-fun m!83249 () Bool)

(assert (=> b!81306 m!83249))

(assert (=> d!19637 d!19993))

(declare-fun d!19995 () Bool)

(assert (=> d!19995 (= (apply!80 lt!37662 lt!37668) (get!1187 (getValueByKey!136 (toList!734 lt!37662) lt!37668)))))

(declare-fun bs!3427 () Bool)

(assert (= bs!3427 d!19995))

(declare-fun m!83251 () Bool)

(assert (=> bs!3427 m!83251))

(assert (=> bs!3427 m!83251))

(declare-fun m!83253 () Bool)

(assert (=> bs!3427 m!83253))

(assert (=> b!80766 d!19995))

(declare-fun d!19997 () Bool)

(declare-fun e!53066 () Bool)

(assert (=> d!19997 e!53066))

(declare-fun res!42294 () Bool)

(assert (=> d!19997 (=> (not res!42294) (not e!53066))))

(declare-fun lt!38003 () ListLongMap!1437)

(assert (=> d!19997 (= res!42294 (contains!742 lt!38003 (_1!1102 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(declare-fun lt!38002 () List!1514)

(assert (=> d!19997 (= lt!38003 (ListLongMap!1438 lt!38002))))

(declare-fun lt!38001 () Unit!2327)

(declare-fun lt!38000 () Unit!2327)

(assert (=> d!19997 (= lt!38001 lt!38000)))

(assert (=> d!19997 (= (getValueByKey!136 lt!38002 (_1!1102 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))) (Some!141 (_2!1102 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(assert (=> d!19997 (= lt!38000 (lemmaContainsTupThenGetReturnValue!56 lt!38002 (_1!1102 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) (_2!1102 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(assert (=> d!19997 (= lt!38002 (insertStrictlySorted!59 (toList!734 lt!37667) (_1!1102 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) (_2!1102 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(assert (=> d!19997 (= (+!104 lt!37667 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) lt!38003)))

(declare-fun b!81315 () Bool)

(declare-fun res!42293 () Bool)

(assert (=> b!81315 (=> (not res!42293) (not e!53066))))

(assert (=> b!81315 (= res!42293 (= (getValueByKey!136 (toList!734 lt!38003) (_1!1102 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))) (Some!141 (_2!1102 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))))))

(declare-fun b!81316 () Bool)

(assert (=> b!81316 (= e!53066 (contains!745 (toList!734 lt!38003) (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))))

(assert (= (and d!19997 res!42294) b!81315))

(assert (= (and b!81315 res!42293) b!81316))

(declare-fun m!83255 () Bool)

(assert (=> d!19997 m!83255))

(declare-fun m!83257 () Bool)

(assert (=> d!19997 m!83257))

(declare-fun m!83259 () Bool)

(assert (=> d!19997 m!83259))

(declare-fun m!83261 () Bool)

(assert (=> d!19997 m!83261))

(declare-fun m!83263 () Bool)

(assert (=> b!81315 m!83263))

(declare-fun m!83265 () Bool)

(assert (=> b!81316 m!83265))

(assert (=> b!80766 d!19997))

(declare-fun d!19999 () Bool)

(assert (=> d!19999 (= (apply!80 lt!37672 lt!37670) (get!1187 (getValueByKey!136 (toList!734 lt!37672) lt!37670)))))

(declare-fun bs!3428 () Bool)

(assert (= bs!3428 d!19999))

(declare-fun m!83267 () Bool)

(assert (=> bs!3428 m!83267))

(assert (=> bs!3428 m!83267))

(declare-fun m!83269 () Bool)

(assert (=> bs!3428 m!83269))

(assert (=> b!80766 d!19999))

(declare-fun d!20001 () Bool)

(declare-fun e!53067 () Bool)

(assert (=> d!20001 e!53067))

(declare-fun res!42295 () Bool)

(assert (=> d!20001 (=> res!42295 e!53067)))

(declare-fun lt!38007 () Bool)

(assert (=> d!20001 (= res!42295 (not lt!38007))))

(declare-fun lt!38006 () Bool)

(assert (=> d!20001 (= lt!38007 lt!38006)))

(declare-fun lt!38005 () Unit!2327)

(declare-fun e!53068 () Unit!2327)

(assert (=> d!20001 (= lt!38005 e!53068)))

(declare-fun c!12801 () Bool)

(assert (=> d!20001 (= c!12801 lt!38006)))

(assert (=> d!20001 (= lt!38006 (containsKey!140 (toList!734 (+!104 lt!37671 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16)))) lt!37659))))

(assert (=> d!20001 (= (contains!742 (+!104 lt!37671 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16))) lt!37659) lt!38007)))

(declare-fun b!81317 () Bool)

(declare-fun lt!38004 () Unit!2327)

(assert (=> b!81317 (= e!53068 lt!38004)))

(assert (=> b!81317 (= lt!38004 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (+!104 lt!37671 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16)))) lt!37659))))

(assert (=> b!81317 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37671 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16)))) lt!37659))))

(declare-fun b!81318 () Bool)

(declare-fun Unit!2375 () Unit!2327)

(assert (=> b!81318 (= e!53068 Unit!2375)))

(declare-fun b!81319 () Bool)

(assert (=> b!81319 (= e!53067 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37671 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16)))) lt!37659)))))

(assert (= (and d!20001 c!12801) b!81317))

(assert (= (and d!20001 (not c!12801)) b!81318))

(assert (= (and d!20001 (not res!42295)) b!81319))

(declare-fun m!83271 () Bool)

(assert (=> d!20001 m!83271))

(declare-fun m!83273 () Bool)

(assert (=> b!81317 m!83273))

(declare-fun m!83275 () Bool)

(assert (=> b!81317 m!83275))

(assert (=> b!81317 m!83275))

(declare-fun m!83277 () Bool)

(assert (=> b!81317 m!83277))

(assert (=> b!81319 m!83275))

(assert (=> b!81319 m!83275))

(assert (=> b!81319 m!83277))

(assert (=> b!80766 d!20001))

(declare-fun d!20003 () Bool)

(assert (=> d!20003 (= (apply!80 lt!37667 lt!37679) (get!1187 (getValueByKey!136 (toList!734 lt!37667) lt!37679)))))

(declare-fun bs!3429 () Bool)

(assert (= bs!3429 d!20003))

(declare-fun m!83279 () Bool)

(assert (=> bs!3429 m!83279))

(assert (=> bs!3429 m!83279))

(declare-fun m!83281 () Bool)

(assert (=> bs!3429 m!83281))

(assert (=> b!80766 d!20003))

(declare-fun d!20005 () Bool)

(assert (=> d!20005 (= (apply!80 (+!104 lt!37662 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16))) lt!37668) (apply!80 lt!37662 lt!37668))))

(declare-fun lt!38008 () Unit!2327)

(assert (=> d!20005 (= lt!38008 (choose!479 lt!37662 lt!37669 (zeroValue!2188 newMap!16) lt!37668))))

(declare-fun e!53069 () Bool)

(assert (=> d!20005 e!53069))

(declare-fun res!42296 () Bool)

(assert (=> d!20005 (=> (not res!42296) (not e!53069))))

(assert (=> d!20005 (= res!42296 (contains!742 lt!37662 lt!37668))))

(assert (=> d!20005 (= (addApplyDifferent!56 lt!37662 lt!37669 (zeroValue!2188 newMap!16) lt!37668) lt!38008)))

(declare-fun b!81320 () Bool)

(assert (=> b!81320 (= e!53069 (not (= lt!37668 lt!37669)))))

(assert (= (and d!20005 res!42296) b!81320))

(declare-fun m!83283 () Bool)

(assert (=> d!20005 m!83283))

(declare-fun m!83285 () Bool)

(assert (=> d!20005 m!83285))

(assert (=> d!20005 m!82289))

(assert (=> d!20005 m!82309))

(assert (=> d!20005 m!82289))

(assert (=> d!20005 m!82291))

(assert (=> b!80766 d!20005))

(declare-fun d!20007 () Bool)

(assert (=> d!20007 (= (apply!80 (+!104 lt!37667 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) lt!37679) (apply!80 lt!37667 lt!37679))))

(declare-fun lt!38009 () Unit!2327)

(assert (=> d!20007 (= lt!38009 (choose!479 lt!37667 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) lt!37679))))

(declare-fun e!53070 () Bool)

(assert (=> d!20007 e!53070))

(declare-fun res!42297 () Bool)

(assert (=> d!20007 (=> (not res!42297) (not e!53070))))

(assert (=> d!20007 (= res!42297 (contains!742 lt!37667 lt!37679))))

(assert (=> d!20007 (= (addApplyDifferent!56 lt!37667 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) lt!37679) lt!38009)))

(declare-fun b!81321 () Bool)

(assert (=> b!81321 (= e!53070 (not (= lt!37679 lt!37658)))))

(assert (= (and d!20007 res!42297) b!81321))

(declare-fun m!83287 () Bool)

(assert (=> d!20007 m!83287))

(declare-fun m!83289 () Bool)

(assert (=> d!20007 m!83289))

(assert (=> d!20007 m!82293))

(assert (=> d!20007 m!82307))

(assert (=> d!20007 m!82293))

(assert (=> d!20007 m!82295))

(assert (=> b!80766 d!20007))

(declare-fun b!81322 () Bool)

(declare-fun lt!38016 () Unit!2327)

(declare-fun lt!38012 () Unit!2327)

(assert (=> b!81322 (= lt!38016 lt!38012)))

(declare-fun lt!38014 () (_ BitVec 64))

(declare-fun lt!38011 () (_ BitVec 64))

(declare-fun lt!38013 () ListLongMap!1437)

(declare-fun lt!38015 () V!3001)

(assert (=> b!81322 (not (contains!742 (+!104 lt!38013 (tuple2!2183 lt!38014 lt!38015)) lt!38011))))

(assert (=> b!81322 (= lt!38012 (addStillNotContains!30 lt!38013 lt!38014 lt!38015 lt!38011))))

(assert (=> b!81322 (= lt!38011 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81322 (= lt!38015 (get!1183 (select (arr!1889 (ite c!12532 (_values!2275 newMap!16) lt!37263)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81322 (= lt!38014 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7601 () ListLongMap!1437)

(assert (=> b!81322 (= lt!38013 call!7601)))

(declare-fun e!53077 () ListLongMap!1437)

(assert (=> b!81322 (= e!53077 (+!104 call!7601 (tuple2!2183 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) (get!1183 (select (arr!1889 (ite c!12532 (_values!2275 newMap!16) lt!37263)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81323 () Bool)

(declare-fun e!53072 () Bool)

(declare-fun e!53075 () Bool)

(assert (=> b!81323 (= e!53072 e!53075)))

(assert (=> b!81323 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun res!42300 () Bool)

(declare-fun lt!38010 () ListLongMap!1437)

(assert (=> b!81323 (= res!42300 (contains!742 lt!38010 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81323 (=> (not res!42300) (not e!53075))))

(declare-fun bm!7598 () Bool)

(assert (=> bm!7598 (= call!7601 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12532 (_values!2275 newMap!16) lt!37263) (mask!6297 newMap!16) (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) (zeroValue!2188 newMap!16) (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16)))))

(declare-fun b!81324 () Bool)

(declare-fun e!53074 () Bool)

(assert (=> b!81324 (= e!53074 (isEmpty!333 lt!38010))))

(declare-fun b!81325 () Bool)

(assert (=> b!81325 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> b!81325 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (ite c!12532 (_values!2275 newMap!16) lt!37263))))))

(assert (=> b!81325 (= e!53075 (= (apply!80 lt!38010 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (ite c!12532 (_values!2275 newMap!16) lt!37263)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81326 () Bool)

(assert (=> b!81326 (= e!53077 call!7601)))

(declare-fun b!81327 () Bool)

(declare-fun e!53076 () Bool)

(assert (=> b!81327 (= e!53076 e!53072)))

(declare-fun c!12805 () Bool)

(declare-fun e!53071 () Bool)

(assert (=> b!81327 (= c!12805 e!53071)))

(declare-fun res!42299 () Bool)

(assert (=> b!81327 (=> (not res!42299) (not e!53071))))

(assert (=> b!81327 (= res!42299 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81328 () Bool)

(declare-fun res!42301 () Bool)

(assert (=> b!81328 (=> (not res!42301) (not e!53076))))

(assert (=> b!81328 (= res!42301 (not (contains!742 lt!38010 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81329 () Bool)

(assert (=> b!81329 (= e!53072 e!53074)))

(declare-fun c!12804 () Bool)

(assert (=> b!81329 (= c!12804 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun d!20009 () Bool)

(assert (=> d!20009 e!53076))

(declare-fun res!42298 () Bool)

(assert (=> d!20009 (=> (not res!42298) (not e!53076))))

(assert (=> d!20009 (= res!42298 (not (contains!742 lt!38010 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53073 () ListLongMap!1437)

(assert (=> d!20009 (= lt!38010 e!53073)))

(declare-fun c!12802 () Bool)

(assert (=> d!20009 (= c!12802 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!20009 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!20009 (= (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12532 (_values!2275 newMap!16) lt!37263) (mask!6297 newMap!16) (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) (zeroValue!2188 newMap!16) (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38010)))

(declare-fun b!81330 () Bool)

(assert (=> b!81330 (= e!53071 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81330 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!81331 () Bool)

(assert (=> b!81331 (= e!53073 (ListLongMap!1438 Nil!1511))))

(declare-fun b!81332 () Bool)

(assert (=> b!81332 (= e!53073 e!53077)))

(declare-fun c!12803 () Bool)

(assert (=> b!81332 (= c!12803 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81333 () Bool)

(assert (=> b!81333 (= e!53074 (= lt!38010 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12532 (_values!2275 newMap!16) lt!37263) (mask!6297 newMap!16) (ite c!12532 (ite c!12534 (extraKeys!2139 newMap!16) lt!37264) (extraKeys!2139 newMap!16)) (zeroValue!2188 newMap!16) (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16))))))

(assert (= (and d!20009 c!12802) b!81331))

(assert (= (and d!20009 (not c!12802)) b!81332))

(assert (= (and b!81332 c!12803) b!81322))

(assert (= (and b!81332 (not c!12803)) b!81326))

(assert (= (or b!81322 b!81326) bm!7598))

(assert (= (and d!20009 res!42298) b!81328))

(assert (= (and b!81328 res!42301) b!81327))

(assert (= (and b!81327 res!42299) b!81330))

(assert (= (and b!81327 c!12805) b!81323))

(assert (= (and b!81327 (not c!12805)) b!81329))

(assert (= (and b!81323 res!42300) b!81325))

(assert (= (and b!81329 c!12804) b!81333))

(assert (= (and b!81329 (not c!12804)) b!81324))

(declare-fun b_lambda!3619 () Bool)

(assert (=> (not b_lambda!3619) (not b!81322)))

(assert (=> b!81322 t!5186))

(declare-fun b_and!4953 () Bool)

(assert (= b_and!4949 (and (=> t!5186 result!2849) b_and!4953)))

(assert (=> b!81322 t!5188))

(declare-fun b_and!4955 () Bool)

(assert (= b_and!4951 (and (=> t!5188 result!2851) b_and!4955)))

(declare-fun b_lambda!3621 () Bool)

(assert (=> (not b_lambda!3621) (not b!81325)))

(assert (=> b!81325 t!5186))

(declare-fun b_and!4957 () Bool)

(assert (= b_and!4953 (and (=> t!5186 result!2849) b_and!4957)))

(assert (=> b!81325 t!5188))

(declare-fun b_and!4959 () Bool)

(assert (= b_and!4955 (and (=> t!5188 result!2851) b_and!4959)))

(declare-fun m!83291 () Bool)

(assert (=> b!81322 m!83291))

(declare-fun m!83293 () Bool)

(assert (=> b!81322 m!83293))

(assert (=> b!81322 m!82277))

(assert (=> b!81322 m!82137))

(assert (=> b!81322 m!82279))

(assert (=> b!81322 m!82277))

(declare-fun m!83295 () Bool)

(assert (=> b!81322 m!83295))

(assert (=> b!81322 m!82137))

(assert (=> b!81322 m!83291))

(declare-fun m!83297 () Bool)

(assert (=> b!81322 m!83297))

(assert (=> b!81322 m!82131))

(declare-fun m!83299 () Bool)

(assert (=> bm!7598 m!83299))

(assert (=> b!81330 m!82131))

(assert (=> b!81330 m!82131))

(assert (=> b!81330 m!82143))

(assert (=> b!81325 m!82131))

(declare-fun m!83301 () Bool)

(assert (=> b!81325 m!83301))

(assert (=> b!81325 m!82277))

(assert (=> b!81325 m!82137))

(assert (=> b!81325 m!82279))

(assert (=> b!81325 m!82277))

(assert (=> b!81325 m!82137))

(assert (=> b!81325 m!82131))

(assert (=> b!81323 m!82131))

(assert (=> b!81323 m!82131))

(declare-fun m!83303 () Bool)

(assert (=> b!81323 m!83303))

(assert (=> b!81333 m!83299))

(declare-fun m!83305 () Bool)

(assert (=> d!20009 m!83305))

(assert (=> d!20009 m!81973))

(declare-fun m!83307 () Bool)

(assert (=> b!81328 m!83307))

(declare-fun m!83309 () Bool)

(assert (=> b!81324 m!83309))

(assert (=> b!81332 m!82131))

(assert (=> b!81332 m!82131))

(assert (=> b!81332 m!82143))

(assert (=> b!80766 d!20009))

(declare-fun d!20011 () Bool)

(assert (=> d!20011 (= (apply!80 (+!104 lt!37662 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16))) lt!37668) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37662 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16)))) lt!37668)))))

(declare-fun bs!3430 () Bool)

(assert (= bs!3430 d!20011))

(declare-fun m!83311 () Bool)

(assert (=> bs!3430 m!83311))

(assert (=> bs!3430 m!83311))

(declare-fun m!83313 () Bool)

(assert (=> bs!3430 m!83313))

(assert (=> b!80766 d!20011))

(declare-fun d!20013 () Bool)

(assert (=> d!20013 (contains!742 (+!104 lt!37671 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16))) lt!37659)))

(declare-fun lt!38017 () Unit!2327)

(assert (=> d!20013 (= lt!38017 (choose!478 lt!37671 lt!37666 (zeroValue!2188 newMap!16) lt!37659))))

(assert (=> d!20013 (contains!742 lt!37671 lt!37659)))

(assert (=> d!20013 (= (addStillContains!56 lt!37671 lt!37666 (zeroValue!2188 newMap!16) lt!37659) lt!38017)))

(declare-fun bs!3431 () Bool)

(assert (= bs!3431 d!20013))

(assert (=> bs!3431 m!82299))

(assert (=> bs!3431 m!82299))

(assert (=> bs!3431 m!82301))

(declare-fun m!83315 () Bool)

(assert (=> bs!3431 m!83315))

(declare-fun m!83317 () Bool)

(assert (=> bs!3431 m!83317))

(assert (=> b!80766 d!20013))

(declare-fun d!20015 () Bool)

(declare-fun e!53078 () Bool)

(assert (=> d!20015 e!53078))

(declare-fun res!42303 () Bool)

(assert (=> d!20015 (=> (not res!42303) (not e!53078))))

(declare-fun lt!38021 () ListLongMap!1437)

(assert (=> d!20015 (= res!42303 (contains!742 lt!38021 (_1!1102 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16)))))))

(declare-fun lt!38020 () List!1514)

(assert (=> d!20015 (= lt!38021 (ListLongMap!1438 lt!38020))))

(declare-fun lt!38019 () Unit!2327)

(declare-fun lt!38018 () Unit!2327)

(assert (=> d!20015 (= lt!38019 lt!38018)))

(assert (=> d!20015 (= (getValueByKey!136 lt!38020 (_1!1102 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20015 (= lt!38018 (lemmaContainsTupThenGetReturnValue!56 lt!38020 (_1!1102 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20015 (= lt!38020 (insertStrictlySorted!59 (toList!734 lt!37662) (_1!1102 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20015 (= (+!104 lt!37662 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16))) lt!38021)))

(declare-fun b!81334 () Bool)

(declare-fun res!42302 () Bool)

(assert (=> b!81334 (=> (not res!42302) (not e!53078))))

(assert (=> b!81334 (= res!42302 (= (getValueByKey!136 (toList!734 lt!38021) (_1!1102 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16))))))))

(declare-fun b!81335 () Bool)

(assert (=> b!81335 (= e!53078 (contains!745 (toList!734 lt!38021) (tuple2!2183 lt!37669 (zeroValue!2188 newMap!16))))))

(assert (= (and d!20015 res!42303) b!81334))

(assert (= (and b!81334 res!42302) b!81335))

(declare-fun m!83319 () Bool)

(assert (=> d!20015 m!83319))

(declare-fun m!83321 () Bool)

(assert (=> d!20015 m!83321))

(declare-fun m!83323 () Bool)

(assert (=> d!20015 m!83323))

(declare-fun m!83325 () Bool)

(assert (=> d!20015 m!83325))

(declare-fun m!83327 () Bool)

(assert (=> b!81334 m!83327))

(declare-fun m!83329 () Bool)

(assert (=> b!81335 m!83329))

(assert (=> b!80766 d!20015))

(declare-fun d!20017 () Bool)

(declare-fun e!53079 () Bool)

(assert (=> d!20017 e!53079))

(declare-fun res!42305 () Bool)

(assert (=> d!20017 (=> (not res!42305) (not e!53079))))

(declare-fun lt!38025 () ListLongMap!1437)

(assert (=> d!20017 (= res!42305 (contains!742 lt!38025 (_1!1102 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(declare-fun lt!38024 () List!1514)

(assert (=> d!20017 (= lt!38025 (ListLongMap!1438 lt!38024))))

(declare-fun lt!38023 () Unit!2327)

(declare-fun lt!38022 () Unit!2327)

(assert (=> d!20017 (= lt!38023 lt!38022)))

(assert (=> d!20017 (= (getValueByKey!136 lt!38024 (_1!1102 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))) (Some!141 (_2!1102 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(assert (=> d!20017 (= lt!38022 (lemmaContainsTupThenGetReturnValue!56 lt!38024 (_1!1102 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) (_2!1102 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(assert (=> d!20017 (= lt!38024 (insertStrictlySorted!59 (toList!734 lt!37672) (_1!1102 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) (_2!1102 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(assert (=> d!20017 (= (+!104 lt!37672 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) lt!38025)))

(declare-fun b!81336 () Bool)

(declare-fun res!42304 () Bool)

(assert (=> b!81336 (=> (not res!42304) (not e!53079))))

(assert (=> b!81336 (= res!42304 (= (getValueByKey!136 (toList!734 lt!38025) (_1!1102 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))) (Some!141 (_2!1102 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))))))

(declare-fun b!81337 () Bool)

(assert (=> b!81337 (= e!53079 (contains!745 (toList!734 lt!38025) (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))))

(assert (= (and d!20017 res!42305) b!81336))

(assert (= (and b!81336 res!42304) b!81337))

(declare-fun m!83331 () Bool)

(assert (=> d!20017 m!83331))

(declare-fun m!83333 () Bool)

(assert (=> d!20017 m!83333))

(declare-fun m!83335 () Bool)

(assert (=> d!20017 m!83335))

(declare-fun m!83337 () Bool)

(assert (=> d!20017 m!83337))

(declare-fun m!83339 () Bool)

(assert (=> b!81336 m!83339))

(declare-fun m!83341 () Bool)

(assert (=> b!81337 m!83341))

(assert (=> b!80766 d!20017))

(declare-fun d!20019 () Bool)

(assert (=> d!20019 (= (apply!80 (+!104 lt!37672 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) lt!37670) (apply!80 lt!37672 lt!37670))))

(declare-fun lt!38026 () Unit!2327)

(assert (=> d!20019 (= lt!38026 (choose!479 lt!37672 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) lt!37670))))

(declare-fun e!53080 () Bool)

(assert (=> d!20019 e!53080))

(declare-fun res!42306 () Bool)

(assert (=> d!20019 (=> (not res!42306) (not e!53080))))

(assert (=> d!20019 (= res!42306 (contains!742 lt!37672 lt!37670))))

(assert (=> d!20019 (= (addApplyDifferent!56 lt!37672 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)) lt!37670) lt!38026)))

(declare-fun b!81338 () Bool)

(assert (=> b!81338 (= e!53080 (not (= lt!37670 lt!37673)))))

(assert (= (and d!20019 res!42306) b!81338))

(declare-fun m!83343 () Bool)

(assert (=> d!20019 m!83343))

(declare-fun m!83345 () Bool)

(assert (=> d!20019 m!83345))

(assert (=> d!20019 m!82305))

(assert (=> d!20019 m!82283))

(assert (=> d!20019 m!82305))

(assert (=> d!20019 m!82313))

(assert (=> b!80766 d!20019))

(declare-fun d!20021 () Bool)

(declare-fun e!53081 () Bool)

(assert (=> d!20021 e!53081))

(declare-fun res!42308 () Bool)

(assert (=> d!20021 (=> (not res!42308) (not e!53081))))

(declare-fun lt!38030 () ListLongMap!1437)

(assert (=> d!20021 (= res!42308 (contains!742 lt!38030 (_1!1102 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16)))))))

(declare-fun lt!38029 () List!1514)

(assert (=> d!20021 (= lt!38030 (ListLongMap!1438 lt!38029))))

(declare-fun lt!38028 () Unit!2327)

(declare-fun lt!38027 () Unit!2327)

(assert (=> d!20021 (= lt!38028 lt!38027)))

(assert (=> d!20021 (= (getValueByKey!136 lt!38029 (_1!1102 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20021 (= lt!38027 (lemmaContainsTupThenGetReturnValue!56 lt!38029 (_1!1102 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20021 (= lt!38029 (insertStrictlySorted!59 (toList!734 lt!37671) (_1!1102 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20021 (= (+!104 lt!37671 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16))) lt!38030)))

(declare-fun b!81339 () Bool)

(declare-fun res!42307 () Bool)

(assert (=> b!81339 (=> (not res!42307) (not e!53081))))

(assert (=> b!81339 (= res!42307 (= (getValueByKey!136 (toList!734 lt!38030) (_1!1102 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16))))))))

(declare-fun b!81340 () Bool)

(assert (=> b!81340 (= e!53081 (contains!745 (toList!734 lt!38030) (tuple2!2183 lt!37666 (zeroValue!2188 newMap!16))))))

(assert (= (and d!20021 res!42308) b!81339))

(assert (= (and b!81339 res!42307) b!81340))

(declare-fun m!83347 () Bool)

(assert (=> d!20021 m!83347))

(declare-fun m!83349 () Bool)

(assert (=> d!20021 m!83349))

(declare-fun m!83351 () Bool)

(assert (=> d!20021 m!83351))

(declare-fun m!83353 () Bool)

(assert (=> d!20021 m!83353))

(declare-fun m!83355 () Bool)

(assert (=> b!81339 m!83355))

(declare-fun m!83357 () Bool)

(assert (=> b!81340 m!83357))

(assert (=> b!80766 d!20021))

(declare-fun d!20023 () Bool)

(assert (=> d!20023 (= (apply!80 (+!104 lt!37667 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) lt!37679) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37667 (tuple2!2183 lt!37658 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))) lt!37679)))))

(declare-fun bs!3432 () Bool)

(assert (= bs!3432 d!20023))

(declare-fun m!83359 () Bool)

(assert (=> bs!3432 m!83359))

(assert (=> bs!3432 m!83359))

(declare-fun m!83361 () Bool)

(assert (=> bs!3432 m!83361))

(assert (=> b!80766 d!20023))

(declare-fun d!20025 () Bool)

(assert (=> d!20025 (= (apply!80 (+!104 lt!37672 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) lt!37670) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37672 (tuple2!2183 lt!37673 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))) lt!37670)))))

(declare-fun bs!3433 () Bool)

(assert (= bs!3433 d!20025))

(declare-fun m!83363 () Bool)

(assert (=> bs!3433 m!83363))

(assert (=> bs!3433 m!83363))

(declare-fun m!83365 () Bool)

(assert (=> bs!3433 m!83365))

(assert (=> b!80766 d!20025))

(declare-fun d!20027 () Bool)

(declare-fun e!53082 () Bool)

(assert (=> d!20027 e!53082))

(declare-fun res!42309 () Bool)

(assert (=> d!20027 (=> res!42309 e!53082)))

(declare-fun lt!38034 () Bool)

(assert (=> d!20027 (= res!42309 (not lt!38034))))

(declare-fun lt!38033 () Bool)

(assert (=> d!20027 (= lt!38034 lt!38033)))

(declare-fun lt!38032 () Unit!2327)

(declare-fun e!53083 () Unit!2327)

(assert (=> d!20027 (= lt!38032 e!53083)))

(declare-fun c!12806 () Bool)

(assert (=> d!20027 (= c!12806 lt!38033)))

(assert (=> d!20027 (= lt!38033 (containsKey!140 (toList!734 lt!37803) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!20027 (= (contains!742 lt!37803 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38034)))

(declare-fun b!81341 () Bool)

(declare-fun lt!38031 () Unit!2327)

(assert (=> b!81341 (= e!53083 lt!38031)))

(assert (=> b!81341 (= lt!38031 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37803) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> b!81341 (isDefined!90 (getValueByKey!136 (toList!734 lt!37803) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!81342 () Bool)

(declare-fun Unit!2376 () Unit!2327)

(assert (=> b!81342 (= e!53083 Unit!2376)))

(declare-fun b!81343 () Bool)

(assert (=> b!81343 (= e!53082 (isDefined!90 (getValueByKey!136 (toList!734 lt!37803) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (= (and d!20027 c!12806) b!81341))

(assert (= (and d!20027 (not c!12806)) b!81342))

(assert (= (and d!20027 (not res!42309)) b!81343))

(declare-fun m!83367 () Bool)

(assert (=> d!20027 m!83367))

(declare-fun m!83369 () Bool)

(assert (=> b!81341 m!83369))

(assert (=> b!81341 m!82697))

(assert (=> b!81341 m!82697))

(declare-fun m!83371 () Bool)

(assert (=> b!81341 m!83371))

(assert (=> b!81343 m!82697))

(assert (=> b!81343 m!82697))

(assert (=> b!81343 m!83371))

(assert (=> d!19839 d!20027))

(declare-fun b!81347 () Bool)

(declare-fun e!53085 () Option!142)

(assert (=> b!81347 (= e!53085 None!140)))

(declare-fun b!81344 () Bool)

(declare-fun e!53084 () Option!142)

(assert (=> b!81344 (= e!53084 (Some!141 (_2!1102 (h!2099 lt!37802))))))

(declare-fun b!81346 () Bool)

(assert (=> b!81346 (= e!53085 (getValueByKey!136 (t!5172 lt!37802) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun c!12807 () Bool)

(declare-fun d!20029 () Bool)

(assert (=> d!20029 (= c!12807 (and ((_ is Cons!1510) lt!37802) (= (_1!1102 (h!2099 lt!37802)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20029 (= (getValueByKey!136 lt!37802 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) e!53084)))

(declare-fun b!81345 () Bool)

(assert (=> b!81345 (= e!53084 e!53085)))

(declare-fun c!12808 () Bool)

(assert (=> b!81345 (= c!12808 (and ((_ is Cons!1510) lt!37802) (not (= (_1!1102 (h!2099 lt!37802)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (= (and d!20029 c!12807) b!81344))

(assert (= (and d!20029 (not c!12807)) b!81345))

(assert (= (and b!81345 c!12808) b!81346))

(assert (= (and b!81345 (not c!12808)) b!81347))

(declare-fun m!83373 () Bool)

(assert (=> b!81346 m!83373))

(assert (=> d!19839 d!20029))

(declare-fun d!20031 () Bool)

(assert (=> d!20031 (= (getValueByKey!136 lt!37802 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun lt!38035 () Unit!2327)

(assert (=> d!20031 (= lt!38035 (choose!477 lt!37802 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun e!53086 () Bool)

(assert (=> d!20031 e!53086))

(declare-fun res!42310 () Bool)

(assert (=> d!20031 (=> (not res!42310) (not e!53086))))

(assert (=> d!20031 (= res!42310 (isStrictlySorted!291 lt!37802))))

(assert (=> d!20031 (= (lemmaContainsTupThenGetReturnValue!56 lt!37802 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38035)))

(declare-fun b!81348 () Bool)

(declare-fun res!42311 () Bool)

(assert (=> b!81348 (=> (not res!42311) (not e!53086))))

(assert (=> b!81348 (= res!42311 (containsKey!140 lt!37802 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!81349 () Bool)

(assert (=> b!81349 (= e!53086 (contains!745 lt!37802 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (= (and d!20031 res!42310) b!81348))

(assert (= (and b!81348 res!42311) b!81349))

(assert (=> d!20031 m!82691))

(declare-fun m!83375 () Bool)

(assert (=> d!20031 m!83375))

(declare-fun m!83377 () Bool)

(assert (=> d!20031 m!83377))

(declare-fun m!83379 () Bool)

(assert (=> b!81348 m!83379))

(declare-fun m!83381 () Bool)

(assert (=> b!81349 m!83381))

(assert (=> d!19839 d!20031))

(declare-fun b!81350 () Bool)

(declare-fun e!53090 () List!1514)

(declare-fun call!7604 () List!1514)

(assert (=> b!81350 (= e!53090 call!7604)))

(declare-fun c!12812 () Bool)

(declare-fun e!53087 () List!1514)

(declare-fun call!7603 () List!1514)

(declare-fun bm!7599 () Bool)

(assert (=> bm!7599 (= call!7603 ($colon$colon!69 e!53087 (ite c!12812 (h!2099 (toList!734 call!7442)) (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(declare-fun c!12810 () Bool)

(assert (=> bm!7599 (= c!12810 c!12812)))

(declare-fun lt!38036 () List!1514)

(declare-fun b!81351 () Bool)

(declare-fun e!53091 () Bool)

(assert (=> b!81351 (= e!53091 (contains!745 lt!38036 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun bm!7600 () Bool)

(declare-fun call!7602 () List!1514)

(assert (=> bm!7600 (= call!7604 call!7602)))

(declare-fun d!20033 () Bool)

(assert (=> d!20033 e!53091))

(declare-fun res!42313 () Bool)

(assert (=> d!20033 (=> (not res!42313) (not e!53091))))

(assert (=> d!20033 (= res!42313 (isStrictlySorted!291 lt!38036))))

(declare-fun e!53089 () List!1514)

(assert (=> d!20033 (= lt!38036 e!53089)))

(assert (=> d!20033 (= c!12812 (and ((_ is Cons!1510) (toList!734 call!7442)) (bvslt (_1!1102 (h!2099 (toList!734 call!7442))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20033 (isStrictlySorted!291 (toList!734 call!7442))))

(assert (=> d!20033 (= (insertStrictlySorted!59 (toList!734 call!7442) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38036)))

(declare-fun b!81352 () Bool)

(declare-fun c!12809 () Bool)

(assert (=> b!81352 (= c!12809 (and ((_ is Cons!1510) (toList!734 call!7442)) (bvsgt (_1!1102 (h!2099 (toList!734 call!7442))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun e!53088 () List!1514)

(assert (=> b!81352 (= e!53088 e!53090)))

(declare-fun b!81353 () Bool)

(assert (=> b!81353 (= e!53088 call!7602)))

(declare-fun b!81354 () Bool)

(assert (=> b!81354 (= e!53089 call!7603)))

(declare-fun bm!7601 () Bool)

(assert (=> bm!7601 (= call!7602 call!7603)))

(declare-fun b!81355 () Bool)

(declare-fun res!42312 () Bool)

(assert (=> b!81355 (=> (not res!42312) (not e!53091))))

(assert (=> b!81355 (= res!42312 (containsKey!140 lt!38036 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!81356 () Bool)

(assert (=> b!81356 (= e!53090 call!7604)))

(declare-fun c!12811 () Bool)

(declare-fun b!81357 () Bool)

(assert (=> b!81357 (= e!53087 (ite c!12811 (t!5172 (toList!734 call!7442)) (ite c!12809 (Cons!1510 (h!2099 (toList!734 call!7442)) (t!5172 (toList!734 call!7442))) Nil!1511)))))

(declare-fun b!81358 () Bool)

(assert (=> b!81358 (= e!53089 e!53088)))

(assert (=> b!81358 (= c!12811 (and ((_ is Cons!1510) (toList!734 call!7442)) (= (_1!1102 (h!2099 (toList!734 call!7442))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!81359 () Bool)

(assert (=> b!81359 (= e!53087 (insertStrictlySorted!59 (t!5172 (toList!734 call!7442)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (= (and d!20033 c!12812) b!81354))

(assert (= (and d!20033 (not c!12812)) b!81358))

(assert (= (and b!81358 c!12811) b!81353))

(assert (= (and b!81358 (not c!12811)) b!81352))

(assert (= (and b!81352 c!12809) b!81356))

(assert (= (and b!81352 (not c!12809)) b!81350))

(assert (= (or b!81356 b!81350) bm!7600))

(assert (= (or b!81353 bm!7600) bm!7601))

(assert (= (or b!81354 bm!7601) bm!7599))

(assert (= (and bm!7599 c!12810) b!81359))

(assert (= (and bm!7599 (not c!12810)) b!81357))

(assert (= (and d!20033 res!42313) b!81355))

(assert (= (and b!81355 res!42312) b!81351))

(declare-fun m!83383 () Bool)

(assert (=> d!20033 m!83383))

(declare-fun m!83385 () Bool)

(assert (=> d!20033 m!83385))

(declare-fun m!83387 () Bool)

(assert (=> b!81359 m!83387))

(declare-fun m!83389 () Bool)

(assert (=> bm!7599 m!83389))

(declare-fun m!83391 () Bool)

(assert (=> b!81355 m!83391))

(declare-fun m!83393 () Bool)

(assert (=> b!81351 m!83393))

(assert (=> d!19839 d!20033))

(assert (=> b!80689 d!19847))

(declare-fun d!20035 () Bool)

(declare-fun c!12813 () Bool)

(assert (=> d!20035 (= c!12813 ((_ is Nil!1511) (toList!734 lt!37301)))))

(declare-fun e!53092 () (InoxSet tuple2!2182))

(assert (=> d!20035 (= (content!86 (toList!734 lt!37301)) e!53092)))

(declare-fun b!81360 () Bool)

(assert (=> b!81360 (= e!53092 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!81361 () Bool)

(assert (=> b!81361 (= e!53092 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2099 (toList!734 lt!37301)) true) (content!86 (t!5172 (toList!734 lt!37301)))))))

(assert (= (and d!20035 c!12813) b!81360))

(assert (= (and d!20035 (not c!12813)) b!81361))

(declare-fun m!83395 () Bool)

(assert (=> b!81361 m!83395))

(declare-fun m!83397 () Bool)

(assert (=> b!81361 m!83397))

(assert (=> d!19713 d!20035))

(assert (=> bm!7549 d!19805))

(declare-fun d!20037 () Bool)

(declare-fun res!42314 () Bool)

(declare-fun e!53093 () Bool)

(assert (=> d!20037 (=> res!42314 e!53093)))

(assert (=> d!20037 (= res!42314 (and ((_ is Cons!1510) (toList!734 call!7441)) (= (_1!1102 (h!2099 (toList!734 call!7441))) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277)))))))

(assert (=> d!20037 (= (containsKey!140 (toList!734 call!7441) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))) e!53093)))

(declare-fun b!81362 () Bool)

(declare-fun e!53094 () Bool)

(assert (=> b!81362 (= e!53093 e!53094)))

(declare-fun res!42315 () Bool)

(assert (=> b!81362 (=> (not res!42315) (not e!53094))))

(assert (=> b!81362 (= res!42315 (and (or (not ((_ is Cons!1510) (toList!734 call!7441))) (bvsle (_1!1102 (h!2099 (toList!734 call!7441))) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277)))) ((_ is Cons!1510) (toList!734 call!7441)) (bvslt (_1!1102 (h!2099 (toList!734 call!7441))) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277)))))))

(declare-fun b!81363 () Bool)

(assert (=> b!81363 (= e!53094 (containsKey!140 (t!5172 (toList!734 call!7441)) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))

(assert (= (and d!20037 (not res!42314)) b!81362))

(assert (= (and b!81362 res!42315) b!81363))

(assert (=> b!81363 m!81543))

(declare-fun m!83399 () Bool)

(assert (=> b!81363 m!83399))

(assert (=> d!19707 d!20037))

(declare-fun d!20039 () Bool)

(assert (=> d!20039 (= (apply!80 lt!37660 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1187 (getValueByKey!136 (toList!734 lt!37660) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3434 () Bool)

(assert (= bs!3434 d!20039))

(declare-fun m!83401 () Bool)

(assert (=> bs!3434 m!83401))

(assert (=> bs!3434 m!83401))

(declare-fun m!83403 () Bool)

(assert (=> bs!3434 m!83403))

(assert (=> b!80784 d!20039))

(assert (=> d!19745 d!19885))

(declare-fun b!81367 () Bool)

(declare-fun e!53096 () Option!142)

(assert (=> b!81367 (= e!53096 None!140)))

(declare-fun b!81364 () Bool)

(declare-fun e!53095 () Option!142)

(assert (=> b!81364 (= e!53095 (Some!141 (_2!1102 (h!2099 (t!5172 lt!37345)))))))

(declare-fun b!81366 () Bool)

(assert (=> b!81366 (= e!53096 (getValueByKey!136 (t!5172 (t!5172 lt!37345)) (_1!1102 lt!37075)))))

(declare-fun d!20041 () Bool)

(declare-fun c!12814 () Bool)

(assert (=> d!20041 (= c!12814 (and ((_ is Cons!1510) (t!5172 lt!37345)) (= (_1!1102 (h!2099 (t!5172 lt!37345))) (_1!1102 lt!37075))))))

(assert (=> d!20041 (= (getValueByKey!136 (t!5172 lt!37345) (_1!1102 lt!37075)) e!53095)))

(declare-fun b!81365 () Bool)

(assert (=> b!81365 (= e!53095 e!53096)))

(declare-fun c!12815 () Bool)

(assert (=> b!81365 (= c!12815 (and ((_ is Cons!1510) (t!5172 lt!37345)) (not (= (_1!1102 (h!2099 (t!5172 lt!37345))) (_1!1102 lt!37075)))))))

(assert (= (and d!20041 c!12814) b!81364))

(assert (= (and d!20041 (not c!12814)) b!81365))

(assert (= (and b!81365 c!12815) b!81366))

(assert (= (and b!81365 (not c!12815)) b!81367))

(declare-fun m!83405 () Bool)

(assert (=> b!81366 m!83405))

(assert (=> b!80560 d!20041))

(declare-fun d!20043 () Bool)

(declare-fun lt!38037 () Bool)

(assert (=> d!20043 (= lt!38037 (select (content!86 (toList!734 lt!37747)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun e!53097 () Bool)

(assert (=> d!20043 (= lt!38037 e!53097)))

(declare-fun res!42317 () Bool)

(assert (=> d!20043 (=> (not res!42317) (not e!53097))))

(assert (=> d!20043 (= res!42317 ((_ is Cons!1510) (toList!734 lt!37747)))))

(assert (=> d!20043 (= (contains!745 (toList!734 lt!37747) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!38037)))

(declare-fun b!81368 () Bool)

(declare-fun e!53098 () Bool)

(assert (=> b!81368 (= e!53097 e!53098)))

(declare-fun res!42316 () Bool)

(assert (=> b!81368 (=> res!42316 e!53098)))

(assert (=> b!81368 (= res!42316 (= (h!2099 (toList!734 lt!37747)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!81369 () Bool)

(assert (=> b!81369 (= e!53098 (contains!745 (t!5172 (toList!734 lt!37747)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!20043 res!42317) b!81368))

(assert (= (and b!81368 (not res!42316)) b!81369))

(declare-fun m!83407 () Bool)

(assert (=> d!20043 m!83407))

(declare-fun m!83409 () Bool)

(assert (=> d!20043 m!83409))

(declare-fun m!83411 () Bool)

(assert (=> b!81369 m!83411))

(assert (=> b!80889 d!20043))

(declare-fun b!81373 () Bool)

(declare-fun e!53100 () Option!142)

(assert (=> b!81373 (= e!53100 None!140)))

(declare-fun b!81370 () Bool)

(declare-fun e!53099 () Option!142)

(assert (=> b!81370 (= e!53099 (Some!141 (_2!1102 (h!2099 (t!5172 (toList!734 lt!37342))))))))

(declare-fun b!81372 () Bool)

(assert (=> b!81372 (= e!53100 (getValueByKey!136 (t!5172 (t!5172 (toList!734 lt!37342))) (_1!1102 lt!37082)))))

(declare-fun d!20045 () Bool)

(declare-fun c!12816 () Bool)

(assert (=> d!20045 (= c!12816 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37342))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37342)))) (_1!1102 lt!37082))))))

(assert (=> d!20045 (= (getValueByKey!136 (t!5172 (toList!734 lt!37342)) (_1!1102 lt!37082)) e!53099)))

(declare-fun b!81371 () Bool)

(assert (=> b!81371 (= e!53099 e!53100)))

(declare-fun c!12817 () Bool)

(assert (=> b!81371 (= c!12817 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37342))) (not (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37342)))) (_1!1102 lt!37082)))))))

(assert (= (and d!20045 c!12816) b!81370))

(assert (= (and d!20045 (not c!12816)) b!81371))

(assert (= (and b!81371 c!12817) b!81372))

(assert (= (and b!81371 (not c!12817)) b!81373))

(declare-fun m!83413 () Bool)

(assert (=> b!81372 m!83413))

(assert (=> b!80604 d!20045))

(declare-fun d!20047 () Bool)

(declare-fun e!53101 () Bool)

(assert (=> d!20047 e!53101))

(declare-fun res!42318 () Bool)

(assert (=> d!20047 (=> res!42318 e!53101)))

(declare-fun lt!38041 () Bool)

(assert (=> d!20047 (= res!42318 (not lt!38041))))

(declare-fun lt!38040 () Bool)

(assert (=> d!20047 (= lt!38041 lt!38040)))

(declare-fun lt!38039 () Unit!2327)

(declare-fun e!53102 () Unit!2327)

(assert (=> d!20047 (= lt!38039 e!53102)))

(declare-fun c!12818 () Bool)

(assert (=> d!20047 (= c!12818 lt!38040)))

(assert (=> d!20047 (= lt!38040 (containsKey!140 (toList!734 lt!37462) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!20047 (= (contains!742 lt!37462 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38041)))

(declare-fun b!81374 () Bool)

(declare-fun lt!38038 () Unit!2327)

(assert (=> b!81374 (= e!53102 lt!38038)))

(assert (=> b!81374 (= lt!38038 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37462) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> b!81374 (isDefined!90 (getValueByKey!136 (toList!734 lt!37462) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81375 () Bool)

(declare-fun Unit!2377 () Unit!2327)

(assert (=> b!81375 (= e!53102 Unit!2377)))

(declare-fun b!81376 () Bool)

(assert (=> b!81376 (= e!53101 (isDefined!90 (getValueByKey!136 (toList!734 lt!37462) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20047 c!12818) b!81374))

(assert (= (and d!20047 (not c!12818)) b!81375))

(assert (= (and d!20047 (not res!42318)) b!81376))

(declare-fun m!83415 () Bool)

(assert (=> d!20047 m!83415))

(declare-fun m!83417 () Bool)

(assert (=> b!81374 m!83417))

(assert (=> b!81374 m!81863))

(assert (=> b!81374 m!81863))

(declare-fun m!83419 () Bool)

(assert (=> b!81374 m!83419))

(assert (=> b!81376 m!81863))

(assert (=> b!81376 m!81863))

(assert (=> b!81376 m!83419))

(assert (=> d!19649 d!20047))

(declare-fun b!81380 () Bool)

(declare-fun e!53104 () Option!142)

(assert (=> b!81380 (= e!53104 None!140)))

(declare-fun b!81377 () Bool)

(declare-fun e!53103 () Option!142)

(assert (=> b!81377 (= e!53103 (Some!141 (_2!1102 (h!2099 lt!37461))))))

(declare-fun b!81379 () Bool)

(assert (=> b!81379 (= e!53104 (getValueByKey!136 (t!5172 lt!37461) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20049 () Bool)

(declare-fun c!12819 () Bool)

(assert (=> d!20049 (= c!12819 (and ((_ is Cons!1510) lt!37461) (= (_1!1102 (h!2099 lt!37461)) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20049 (= (getValueByKey!136 lt!37461 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53103)))

(declare-fun b!81378 () Bool)

(assert (=> b!81378 (= e!53103 e!53104)))

(declare-fun c!12820 () Bool)

(assert (=> b!81378 (= c!12820 (and ((_ is Cons!1510) lt!37461) (not (= (_1!1102 (h!2099 lt!37461)) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20049 c!12819) b!81377))

(assert (= (and d!20049 (not c!12819)) b!81378))

(assert (= (and b!81378 c!12820) b!81379))

(assert (= (and b!81378 (not c!12820)) b!81380))

(declare-fun m!83421 () Bool)

(assert (=> b!81379 m!83421))

(assert (=> d!19649 d!20049))

(declare-fun d!20051 () Bool)

(assert (=> d!20051 (= (getValueByKey!136 lt!37461 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!38042 () Unit!2327)

(assert (=> d!20051 (= lt!38042 (choose!477 lt!37461 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun e!53105 () Bool)

(assert (=> d!20051 e!53105))

(declare-fun res!42319 () Bool)

(assert (=> d!20051 (=> (not res!42319) (not e!53105))))

(assert (=> d!20051 (= res!42319 (isStrictlySorted!291 lt!37461))))

(assert (=> d!20051 (= (lemmaContainsTupThenGetReturnValue!56 lt!37461 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38042)))

(declare-fun b!81381 () Bool)

(declare-fun res!42320 () Bool)

(assert (=> b!81381 (=> (not res!42320) (not e!53105))))

(assert (=> b!81381 (= res!42320 (containsKey!140 lt!37461 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81382 () Bool)

(assert (=> b!81382 (= e!53105 (contains!745 lt!37461 (tuple2!2183 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20051 res!42319) b!81381))

(assert (= (and b!81381 res!42320) b!81382))

(assert (=> d!20051 m!81857))

(declare-fun m!83423 () Bool)

(assert (=> d!20051 m!83423))

(declare-fun m!83425 () Bool)

(assert (=> d!20051 m!83425))

(declare-fun m!83427 () Bool)

(assert (=> b!81381 m!83427))

(declare-fun m!83429 () Bool)

(assert (=> b!81382 m!83429))

(assert (=> d!19649 d!20051))

(declare-fun b!81383 () Bool)

(declare-fun e!53109 () List!1514)

(declare-fun call!7607 () List!1514)

(assert (=> b!81383 (= e!53109 call!7607)))

(declare-fun call!7606 () List!1514)

(declare-fun bm!7602 () Bool)

(declare-fun c!12824 () Bool)

(declare-fun e!53106 () List!1514)

(assert (=> bm!7602 (= call!7606 ($colon$colon!69 e!53106 (ite c!12824 (h!2099 (toList!734 lt!37413)) (tuple2!2183 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun c!12822 () Bool)

(assert (=> bm!7602 (= c!12822 c!12824)))

(declare-fun e!53110 () Bool)

(declare-fun b!81384 () Bool)

(declare-fun lt!38043 () List!1514)

(assert (=> b!81384 (= e!53110 (contains!745 lt!38043 (tuple2!2183 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun bm!7603 () Bool)

(declare-fun call!7605 () List!1514)

(assert (=> bm!7603 (= call!7607 call!7605)))

(declare-fun d!20053 () Bool)

(assert (=> d!20053 e!53110))

(declare-fun res!42322 () Bool)

(assert (=> d!20053 (=> (not res!42322) (not e!53110))))

(assert (=> d!20053 (= res!42322 (isStrictlySorted!291 lt!38043))))

(declare-fun e!53108 () List!1514)

(assert (=> d!20053 (= lt!38043 e!53108)))

(assert (=> d!20053 (= c!12824 (and ((_ is Cons!1510) (toList!734 lt!37413)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37413))) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20053 (isStrictlySorted!291 (toList!734 lt!37413))))

(assert (=> d!20053 (= (insertStrictlySorted!59 (toList!734 lt!37413) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38043)))

(declare-fun b!81385 () Bool)

(declare-fun c!12821 () Bool)

(assert (=> b!81385 (= c!12821 (and ((_ is Cons!1510) (toList!734 lt!37413)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37413))) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun e!53107 () List!1514)

(assert (=> b!81385 (= e!53107 e!53109)))

(declare-fun b!81386 () Bool)

(assert (=> b!81386 (= e!53107 call!7605)))

(declare-fun b!81387 () Bool)

(assert (=> b!81387 (= e!53108 call!7606)))

(declare-fun bm!7604 () Bool)

(assert (=> bm!7604 (= call!7605 call!7606)))

(declare-fun b!81388 () Bool)

(declare-fun res!42321 () Bool)

(assert (=> b!81388 (=> (not res!42321) (not e!53110))))

(assert (=> b!81388 (= res!42321 (containsKey!140 lt!38043 (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81389 () Bool)

(assert (=> b!81389 (= e!53109 call!7607)))

(declare-fun b!81390 () Bool)

(declare-fun c!12823 () Bool)

(assert (=> b!81390 (= e!53106 (ite c!12823 (t!5172 (toList!734 lt!37413)) (ite c!12821 (Cons!1510 (h!2099 (toList!734 lt!37413)) (t!5172 (toList!734 lt!37413))) Nil!1511)))))

(declare-fun b!81391 () Bool)

(assert (=> b!81391 (= e!53108 e!53107)))

(assert (=> b!81391 (= c!12823 (and ((_ is Cons!1510) (toList!734 lt!37413)) (= (_1!1102 (h!2099 (toList!734 lt!37413))) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!81392 () Bool)

(assert (=> b!81392 (= e!53106 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37413)) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (= (and d!20053 c!12824) b!81387))

(assert (= (and d!20053 (not c!12824)) b!81391))

(assert (= (and b!81391 c!12823) b!81386))

(assert (= (and b!81391 (not c!12823)) b!81385))

(assert (= (and b!81385 c!12821) b!81389))

(assert (= (and b!81385 (not c!12821)) b!81383))

(assert (= (or b!81389 b!81383) bm!7603))

(assert (= (or b!81386 bm!7603) bm!7604))

(assert (= (or b!81387 bm!7604) bm!7602))

(assert (= (and bm!7602 c!12822) b!81392))

(assert (= (and bm!7602 (not c!12822)) b!81390))

(assert (= (and d!20053 res!42322) b!81388))

(assert (= (and b!81388 res!42321) b!81384))

(declare-fun m!83431 () Bool)

(assert (=> d!20053 m!83431))

(declare-fun m!83433 () Bool)

(assert (=> d!20053 m!83433))

(declare-fun m!83435 () Bool)

(assert (=> b!81392 m!83435))

(declare-fun m!83437 () Bool)

(assert (=> bm!7602 m!83437))

(declare-fun m!83439 () Bool)

(assert (=> b!81388 m!83439))

(declare-fun m!83441 () Bool)

(assert (=> b!81384 m!83441))

(assert (=> d!19649 d!20053))

(declare-fun d!20055 () Bool)

(declare-fun res!42323 () Bool)

(declare-fun e!53111 () Bool)

(assert (=> d!20055 (=> res!42323 e!53111)))

(assert (=> d!20055 (= res!42323 (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!20055 (= (arrayContainsKey!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!53111)))

(declare-fun b!81393 () Bool)

(declare-fun e!53112 () Bool)

(assert (=> b!81393 (= e!53111 e!53112)))

(declare-fun res!42324 () Bool)

(assert (=> b!81393 (=> (not res!42324) (not e!53112))))

(assert (=> b!81393 (= res!42324 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!81394 () Bool)

(assert (=> b!81394 (= e!53112 (arrayContainsKey!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!20055 (not res!42323)) b!81393))

(assert (= (and b!81393 res!42324) b!81394))

(declare-fun m!83443 () Bool)

(assert (=> d!20055 m!83443))

(assert (=> b!81394 m!81295))

(declare-fun m!83445 () Bool)

(assert (=> b!81394 m!83445))

(assert (=> b!80951 d!20055))

(declare-fun d!20057 () Bool)

(declare-fun res!42325 () Bool)

(declare-fun e!53113 () Bool)

(assert (=> d!20057 (=> res!42325 e!53113)))

(assert (=> d!20057 (= res!42325 (= (select (arr!1888 (_keys!3955 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!20057 (= (arrayContainsKey!0 (_keys!3955 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!53113)))

(declare-fun b!81395 () Bool)

(declare-fun e!53114 () Bool)

(assert (=> b!81395 (= e!53113 e!53114)))

(declare-fun res!42326 () Bool)

(assert (=> b!81395 (=> (not res!42326) (not e!53114))))

(assert (=> b!81395 (= res!42326 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81396 () Bool)

(assert (=> b!81396 (= e!53114 (arrayContainsKey!0 (_keys!3955 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!20057 (not res!42325)) b!81395))

(assert (= (and b!81395 res!42326) b!81396))

(assert (=> d!20057 m!83195))

(assert (=> b!81396 m!81295))

(declare-fun m!83447 () Bool)

(assert (=> b!81396 m!83447))

(assert (=> b!80903 d!20057))

(declare-fun b!81400 () Bool)

(declare-fun e!53116 () Option!142)

(assert (=> b!81400 (= e!53116 None!140)))

(declare-fun b!81397 () Bool)

(declare-fun e!53115 () Option!142)

(assert (=> b!81397 (= e!53115 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37450)))))))

(declare-fun b!81399 () Bool)

(assert (=> b!81399 (= e!53116 (getValueByKey!136 (t!5172 (toList!734 lt!37450)) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20059 () Bool)

(declare-fun c!12825 () Bool)

(assert (=> d!20059 (= c!12825 (and ((_ is Cons!1510) (toList!734 lt!37450)) (= (_1!1102 (h!2099 (toList!734 lt!37450))) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20059 (= (getValueByKey!136 (toList!734 lt!37450) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53115)))

(declare-fun b!81398 () Bool)

(assert (=> b!81398 (= e!53115 e!53116)))

(declare-fun c!12826 () Bool)

(assert (=> b!81398 (= c!12826 (and ((_ is Cons!1510) (toList!734 lt!37450)) (not (= (_1!1102 (h!2099 (toList!734 lt!37450))) (_1!1102 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20059 c!12825) b!81397))

(assert (= (and d!20059 (not c!12825)) b!81398))

(assert (= (and b!81398 c!12826) b!81399))

(assert (= (and b!81398 (not c!12826)) b!81400))

(declare-fun m!83449 () Bool)

(assert (=> b!81399 m!83449))

(assert (=> b!80538 d!20059))

(declare-fun d!20061 () Bool)

(declare-fun res!42327 () Bool)

(declare-fun e!53117 () Bool)

(assert (=> d!20061 (=> res!42327 e!53117)))

(assert (=> d!20061 (= res!42327 (and ((_ is Cons!1510) (toList!734 e!52461)) (= (_1!1102 (h!2099 (toList!734 e!52461))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (=> d!20061 (= (containsKey!140 (toList!734 e!52461) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) e!53117)))

(declare-fun b!81401 () Bool)

(declare-fun e!53118 () Bool)

(assert (=> b!81401 (= e!53117 e!53118)))

(declare-fun res!42328 () Bool)

(assert (=> b!81401 (=> (not res!42328) (not e!53118))))

(assert (=> b!81401 (= res!42328 (and (or (not ((_ is Cons!1510) (toList!734 e!52461))) (bvsle (_1!1102 (h!2099 (toList!734 e!52461))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))) ((_ is Cons!1510) (toList!734 e!52461)) (bvslt (_1!1102 (h!2099 (toList!734 e!52461))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(declare-fun b!81402 () Bool)

(assert (=> b!81402 (= e!53118 (containsKey!140 (t!5172 (toList!734 e!52461)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (= (and d!20061 (not res!42327)) b!81401))

(assert (= (and b!81401 res!42328) b!81402))

(assert (=> b!81402 m!81295))

(declare-fun m!83451 () Bool)

(assert (=> b!81402 m!83451))

(assert (=> d!19845 d!20061))

(declare-fun d!20063 () Bool)

(declare-fun lt!38044 () Bool)

(assert (=> d!20063 (= lt!38044 (select (content!86 (toList!734 lt!37735)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(declare-fun e!53119 () Bool)

(assert (=> d!20063 (= lt!38044 e!53119)))

(declare-fun res!42330 () Bool)

(assert (=> d!20063 (=> (not res!42330) (not e!53119))))

(assert (=> d!20063 (= res!42330 ((_ is Cons!1510) (toList!734 lt!37735)))))

(assert (=> d!20063 (= (contains!745 (toList!734 lt!37735) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) lt!38044)))

(declare-fun b!81403 () Bool)

(declare-fun e!53120 () Bool)

(assert (=> b!81403 (= e!53119 e!53120)))

(declare-fun res!42329 () Bool)

(assert (=> b!81403 (=> res!42329 e!53120)))

(assert (=> b!81403 (= res!42329 (= (h!2099 (toList!734 lt!37735)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(declare-fun b!81404 () Bool)

(assert (=> b!81404 (= e!53120 (contains!745 (t!5172 (toList!734 lt!37735)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (= (and d!20063 res!42330) b!81403))

(assert (= (and b!81403 (not res!42329)) b!81404))

(declare-fun m!83453 () Bool)

(assert (=> d!20063 m!83453))

(declare-fun m!83455 () Bool)

(assert (=> d!20063 m!83455))

(declare-fun m!83457 () Bool)

(assert (=> b!81404 m!83457))

(assert (=> b!80883 d!20063))

(declare-fun d!20065 () Bool)

(declare-fun e!53121 () Bool)

(assert (=> d!20065 e!53121))

(declare-fun res!42331 () Bool)

(assert (=> d!20065 (=> res!42331 e!53121)))

(declare-fun lt!38048 () Bool)

(assert (=> d!20065 (= res!42331 (not lt!38048))))

(declare-fun lt!38047 () Bool)

(assert (=> d!20065 (= lt!38048 lt!38047)))

(declare-fun lt!38046 () Unit!2327)

(declare-fun e!53122 () Unit!2327)

(assert (=> d!20065 (= lt!38046 e!53122)))

(declare-fun c!12827 () Bool)

(assert (=> d!20065 (= c!12827 lt!38047)))

(assert (=> d!20065 (= lt!38047 (containsKey!140 (toList!734 lt!37611) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20065 (= (contains!742 lt!37611 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38048)))

(declare-fun b!81405 () Bool)

(declare-fun lt!38045 () Unit!2327)

(assert (=> b!81405 (= e!53122 lt!38045)))

(assert (=> b!81405 (= lt!38045 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37611) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81405 (isDefined!90 (getValueByKey!136 (toList!734 lt!37611) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81406 () Bool)

(declare-fun Unit!2378 () Unit!2327)

(assert (=> b!81406 (= e!53122 Unit!2378)))

(declare-fun b!81407 () Bool)

(assert (=> b!81407 (= e!53121 (isDefined!90 (getValueByKey!136 (toList!734 lt!37611) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20065 c!12827) b!81405))

(assert (= (and d!20065 (not c!12827)) b!81406))

(assert (= (and d!20065 (not res!42331)) b!81407))

(declare-fun m!83459 () Bool)

(assert (=> d!20065 m!83459))

(declare-fun m!83461 () Bool)

(assert (=> b!81405 m!83461))

(declare-fun m!83463 () Bool)

(assert (=> b!81405 m!83463))

(assert (=> b!81405 m!83463))

(declare-fun m!83465 () Bool)

(assert (=> b!81405 m!83465))

(assert (=> b!81407 m!83463))

(assert (=> b!81407 m!83463))

(assert (=> b!81407 m!83465))

(assert (=> bm!7503 d!20065))

(declare-fun d!20067 () Bool)

(assert (=> d!20067 (isDefined!90 (getValueByKey!136 (toList!734 lt!37305) (_1!1102 lt!37075)))))

(declare-fun lt!38049 () Unit!2327)

(assert (=> d!20067 (= lt!38049 (choose!485 (toList!734 lt!37305) (_1!1102 lt!37075)))))

(declare-fun e!53123 () Bool)

(assert (=> d!20067 e!53123))

(declare-fun res!42332 () Bool)

(assert (=> d!20067 (=> (not res!42332) (not e!53123))))

(assert (=> d!20067 (= res!42332 (isStrictlySorted!291 (toList!734 lt!37305)))))

(assert (=> d!20067 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37305) (_1!1102 lt!37075)) lt!38049)))

(declare-fun b!81408 () Bool)

(assert (=> b!81408 (= e!53123 (containsKey!140 (toList!734 lt!37305) (_1!1102 lt!37075)))))

(assert (= (and d!20067 res!42332) b!81408))

(assert (=> d!20067 m!81575))

(assert (=> d!20067 m!81575))

(assert (=> d!20067 m!82389))

(declare-fun m!83467 () Bool)

(assert (=> d!20067 m!83467))

(declare-fun m!83469 () Bool)

(assert (=> d!20067 m!83469))

(assert (=> b!81408 m!82385))

(assert (=> b!80818 d!20067))

(declare-fun d!20069 () Bool)

(assert (=> d!20069 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37305) (_1!1102 lt!37075))) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37305) (_1!1102 lt!37075)))))))

(declare-fun bs!3435 () Bool)

(assert (= bs!3435 d!20069))

(assert (=> bs!3435 m!81575))

(declare-fun m!83471 () Bool)

(assert (=> bs!3435 m!83471))

(assert (=> b!80818 d!20069))

(assert (=> b!80818 d!19821))

(declare-fun d!20071 () Bool)

(assert (=> d!20071 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37346) (_1!1102 lt!37075))) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37346) (_1!1102 lt!37075)))))))

(declare-fun bs!3436 () Bool)

(assert (= bs!3436 d!20071))

(assert (=> bs!3436 m!81671))

(declare-fun m!83473 () Bool)

(assert (=> bs!3436 m!83473))

(assert (=> b!80557 d!20071))

(assert (=> b!80557 d!19699))

(declare-fun d!20073 () Bool)

(declare-fun lt!38050 () Bool)

(assert (=> d!20073 (= lt!38050 (select (content!86 (toList!734 lt!37759)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun e!53124 () Bool)

(assert (=> d!20073 (= lt!38050 e!53124)))

(declare-fun res!42334 () Bool)

(assert (=> d!20073 (=> (not res!42334) (not e!53124))))

(assert (=> d!20073 (= res!42334 ((_ is Cons!1510) (toList!734 lt!37759)))))

(assert (=> d!20073 (= (contains!745 (toList!734 lt!37759) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!38050)))

(declare-fun b!81409 () Bool)

(declare-fun e!53125 () Bool)

(assert (=> b!81409 (= e!53124 e!53125)))

(declare-fun res!42333 () Bool)

(assert (=> b!81409 (=> res!42333 e!53125)))

(assert (=> b!81409 (= res!42333 (= (h!2099 (toList!734 lt!37759)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!81410 () Bool)

(assert (=> b!81410 (= e!53125 (contains!745 (t!5172 (toList!734 lt!37759)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!20073 res!42334) b!81409))

(assert (= (and b!81409 (not res!42333)) b!81410))

(declare-fun m!83475 () Bool)

(assert (=> d!20073 m!83475))

(declare-fun m!83477 () Bool)

(assert (=> d!20073 m!83477))

(declare-fun m!83479 () Bool)

(assert (=> b!81410 m!83479))

(assert (=> b!80895 d!20073))

(declare-fun d!20075 () Bool)

(assert (=> d!20075 (= (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80904 d!20075))

(declare-fun d!20077 () Bool)

(declare-fun lt!38051 () Bool)

(assert (=> d!20077 (= lt!38051 (select (content!86 lt!37439) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun e!53126 () Bool)

(assert (=> d!20077 (= lt!38051 e!53126)))

(declare-fun res!42336 () Bool)

(assert (=> d!20077 (=> (not res!42336) (not e!53126))))

(assert (=> d!20077 (= res!42336 ((_ is Cons!1510) lt!37439))))

(assert (=> d!20077 (= (contains!745 lt!37439 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))) lt!38051)))

(declare-fun b!81411 () Bool)

(declare-fun e!53127 () Bool)

(assert (=> b!81411 (= e!53126 e!53127)))

(declare-fun res!42335 () Bool)

(assert (=> b!81411 (=> res!42335 e!53127)))

(assert (=> b!81411 (= res!42335 (= (h!2099 lt!37439) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun b!81412 () Bool)

(assert (=> b!81412 (= e!53127 (contains!745 (t!5172 lt!37439) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(assert (= (and d!20077 res!42336) b!81411))

(assert (= (and b!81411 (not res!42335)) b!81412))

(declare-fun m!83481 () Bool)

(assert (=> d!20077 m!83481))

(declare-fun m!83483 () Bool)

(assert (=> d!20077 m!83483))

(declare-fun m!83485 () Bool)

(assert (=> b!81412 m!83485))

(assert (=> b!80526 d!20077))

(declare-fun d!20079 () Bool)

(declare-fun lt!38052 () Bool)

(assert (=> d!20079 (= lt!38052 (select (content!86 (t!5172 (toList!734 lt!37312))) lt!37079))))

(declare-fun e!53128 () Bool)

(assert (=> d!20079 (= lt!38052 e!53128)))

(declare-fun res!42338 () Bool)

(assert (=> d!20079 (=> (not res!42338) (not e!53128))))

(assert (=> d!20079 (= res!42338 ((_ is Cons!1510) (t!5172 (toList!734 lt!37312))))))

(assert (=> d!20079 (= (contains!745 (t!5172 (toList!734 lt!37312)) lt!37079) lt!38052)))

(declare-fun b!81413 () Bool)

(declare-fun e!53129 () Bool)

(assert (=> b!81413 (= e!53128 e!53129)))

(declare-fun res!42337 () Bool)

(assert (=> b!81413 (=> res!42337 e!53129)))

(assert (=> b!81413 (= res!42337 (= (h!2099 (t!5172 (toList!734 lt!37312))) lt!37079))))

(declare-fun b!81414 () Bool)

(assert (=> b!81414 (= e!53129 (contains!745 (t!5172 (t!5172 (toList!734 lt!37312))) lt!37079))))

(assert (= (and d!20079 res!42338) b!81413))

(assert (= (and b!81413 (not res!42337)) b!81414))

(declare-fun m!83487 () Bool)

(assert (=> d!20079 m!83487))

(declare-fun m!83489 () Bool)

(assert (=> d!20079 m!83489))

(declare-fun m!83491 () Bool)

(assert (=> b!81414 m!83491))

(assert (=> b!80752 d!20079))

(assert (=> d!19675 d!19673))

(declare-fun d!20081 () Bool)

(assert (=> d!20081 (= (getValueByKey!136 lt!37349 (_1!1102 lt!37079)) (Some!141 (_2!1102 lt!37079)))))

(assert (=> d!20081 true))

(declare-fun _$22!400 () Unit!2327)

(assert (=> d!20081 (= (choose!477 lt!37349 (_1!1102 lt!37079) (_2!1102 lt!37079)) _$22!400)))

(declare-fun bs!3437 () Bool)

(assert (= bs!3437 d!20081))

(assert (=> bs!3437 m!81677))

(assert (=> d!19675 d!20081))

(declare-fun d!20083 () Bool)

(declare-fun res!42339 () Bool)

(declare-fun e!53130 () Bool)

(assert (=> d!20083 (=> res!42339 e!53130)))

(assert (=> d!20083 (= res!42339 (or ((_ is Nil!1511) lt!37349) ((_ is Nil!1511) (t!5172 lt!37349))))))

(assert (=> d!20083 (= (isStrictlySorted!291 lt!37349) e!53130)))

(declare-fun b!81415 () Bool)

(declare-fun e!53131 () Bool)

(assert (=> b!81415 (= e!53130 e!53131)))

(declare-fun res!42340 () Bool)

(assert (=> b!81415 (=> (not res!42340) (not e!53131))))

(assert (=> b!81415 (= res!42340 (bvslt (_1!1102 (h!2099 lt!37349)) (_1!1102 (h!2099 (t!5172 lt!37349)))))))

(declare-fun b!81416 () Bool)

(assert (=> b!81416 (= e!53131 (isStrictlySorted!291 (t!5172 lt!37349)))))

(assert (= (and d!20083 (not res!42339)) b!81415))

(assert (= (and b!81415 res!42340) b!81416))

(declare-fun m!83493 () Bool)

(assert (=> b!81416 m!83493))

(assert (=> d!19675 d!20083))

(declare-fun d!20085 () Bool)

(assert (=> d!20085 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3438 () Bool)

(assert (= bs!3438 d!20085))

(assert (=> bs!3438 m!81979))

(declare-fun m!83495 () Bool)

(assert (=> bs!3438 m!83495))

(assert (=> b!80881 d!20085))

(declare-fun b!81420 () Bool)

(declare-fun e!53133 () Option!142)

(assert (=> b!81420 (= e!53133 None!140)))

(declare-fun b!81417 () Bool)

(declare-fun e!53132 () Option!142)

(assert (=> b!81417 (= e!53132 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37406)))))))

(declare-fun b!81419 () Bool)

(assert (=> b!81419 (= e!53133 (getValueByKey!136 (t!5172 (toList!734 lt!37406)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!20087 () Bool)

(declare-fun c!12828 () Bool)

(assert (=> d!20087 (= c!12828 (and ((_ is Cons!1510) (toList!734 lt!37406)) (= (_1!1102 (h!2099 (toList!734 lt!37406))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20087 (= (getValueByKey!136 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000) e!53132)))

(declare-fun b!81418 () Bool)

(assert (=> b!81418 (= e!53132 e!53133)))

(declare-fun c!12829 () Bool)

(assert (=> b!81418 (= c!12829 (and ((_ is Cons!1510) (toList!734 lt!37406)) (not (= (_1!1102 (h!2099 (toList!734 lt!37406))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!20087 c!12828) b!81417))

(assert (= (and d!20087 (not c!12828)) b!81418))

(assert (= (and b!81418 c!12829) b!81419))

(assert (= (and b!81418 (not c!12829)) b!81420))

(declare-fun m!83497 () Bool)

(assert (=> b!81419 m!83497))

(assert (=> b!80881 d!20087))

(declare-fun d!20089 () Bool)

(declare-fun res!42341 () Bool)

(declare-fun e!53134 () Bool)

(assert (=> d!20089 (=> res!42341 e!53134)))

(assert (=> d!20089 (= res!42341 (and ((_ is Cons!1510) lt!37345) (= (_1!1102 (h!2099 lt!37345)) (_1!1102 lt!37075))))))

(assert (=> d!20089 (= (containsKey!140 lt!37345 (_1!1102 lt!37075)) e!53134)))

(declare-fun b!81421 () Bool)

(declare-fun e!53135 () Bool)

(assert (=> b!81421 (= e!53134 e!53135)))

(declare-fun res!42342 () Bool)

(assert (=> b!81421 (=> (not res!42342) (not e!53135))))

(assert (=> b!81421 (= res!42342 (and (or (not ((_ is Cons!1510) lt!37345)) (bvsle (_1!1102 (h!2099 lt!37345)) (_1!1102 lt!37075))) ((_ is Cons!1510) lt!37345) (bvslt (_1!1102 (h!2099 lt!37345)) (_1!1102 lt!37075))))))

(declare-fun b!81422 () Bool)

(assert (=> b!81422 (= e!53135 (containsKey!140 (t!5172 lt!37345) (_1!1102 lt!37075)))))

(assert (= (and d!20089 (not res!42341)) b!81421))

(assert (= (and b!81421 res!42342) b!81422))

(declare-fun m!83499 () Bool)

(assert (=> b!81422 m!83499))

(assert (=> b!80562 d!20089))

(assert (=> d!19773 d!19771))

(declare-fun d!20091 () Bool)

(assert (=> d!20091 (= (getValueByKey!136 lt!37311 (_1!1102 lt!37079)) (Some!141 (_2!1102 lt!37079)))))

(assert (=> d!20091 true))

(declare-fun _$22!401 () Unit!2327)

(assert (=> d!20091 (= (choose!477 lt!37311 (_1!1102 lt!37079) (_2!1102 lt!37079)) _$22!401)))

(declare-fun bs!3439 () Bool)

(assert (= bs!3439 d!20091))

(assert (=> bs!3439 m!81591))

(assert (=> d!19773 d!20091))

(declare-fun d!20093 () Bool)

(declare-fun res!42343 () Bool)

(declare-fun e!53136 () Bool)

(assert (=> d!20093 (=> res!42343 e!53136)))

(assert (=> d!20093 (= res!42343 (or ((_ is Nil!1511) lt!37311) ((_ is Nil!1511) (t!5172 lt!37311))))))

(assert (=> d!20093 (= (isStrictlySorted!291 lt!37311) e!53136)))

(declare-fun b!81423 () Bool)

(declare-fun e!53137 () Bool)

(assert (=> b!81423 (= e!53136 e!53137)))

(declare-fun res!42344 () Bool)

(assert (=> b!81423 (=> (not res!42344) (not e!53137))))

(assert (=> b!81423 (= res!42344 (bvslt (_1!1102 (h!2099 lt!37311)) (_1!1102 (h!2099 (t!5172 lt!37311)))))))

(declare-fun b!81424 () Bool)

(assert (=> b!81424 (= e!53137 (isStrictlySorted!291 (t!5172 lt!37311)))))

(assert (= (and d!20093 (not res!42343)) b!81423))

(assert (= (and b!81423 res!42344) b!81424))

(declare-fun m!83501 () Bool)

(assert (=> b!81424 m!83501))

(assert (=> d!19773 d!20093))

(assert (=> d!19865 d!19863))

(declare-fun d!20095 () Bool)

(assert (=> d!20095 (= (getValueByKey!136 lt!37341 (_1!1102 lt!37082)) (Some!141 (_2!1102 lt!37082)))))

(assert (=> d!20095 true))

(declare-fun _$22!402 () Unit!2327)

(assert (=> d!20095 (= (choose!477 lt!37341 (_1!1102 lt!37082) (_2!1102 lt!37082)) _$22!402)))

(declare-fun bs!3440 () Bool)

(assert (= bs!3440 d!20095))

(assert (=> bs!3440 m!81653))

(assert (=> d!19865 d!20095))

(declare-fun d!20097 () Bool)

(declare-fun res!42345 () Bool)

(declare-fun e!53138 () Bool)

(assert (=> d!20097 (=> res!42345 e!53138)))

(assert (=> d!20097 (= res!42345 (or ((_ is Nil!1511) lt!37341) ((_ is Nil!1511) (t!5172 lt!37341))))))

(assert (=> d!20097 (= (isStrictlySorted!291 lt!37341) e!53138)))

(declare-fun b!81425 () Bool)

(declare-fun e!53139 () Bool)

(assert (=> b!81425 (= e!53138 e!53139)))

(declare-fun res!42346 () Bool)

(assert (=> b!81425 (=> (not res!42346) (not e!53139))))

(assert (=> b!81425 (= res!42346 (bvslt (_1!1102 (h!2099 lt!37341)) (_1!1102 (h!2099 (t!5172 lt!37341)))))))

(declare-fun b!81426 () Bool)

(assert (=> b!81426 (= e!53139 (isStrictlySorted!291 (t!5172 lt!37341)))))

(assert (= (and d!20097 (not res!42345)) b!81425))

(assert (= (and b!81425 res!42346) b!81426))

(declare-fun m!83503 () Bool)

(assert (=> b!81426 m!83503))

(assert (=> d!19865 d!20097))

(declare-fun b!81430 () Bool)

(declare-fun e!53141 () Option!142)

(assert (=> b!81430 (= e!53141 None!140)))

(declare-fun b!81427 () Bool)

(declare-fun e!53140 () Option!142)

(assert (=> b!81427 (= e!53140 (Some!141 (_2!1102 (h!2099 (t!5172 lt!37315)))))))

(declare-fun b!81429 () Bool)

(assert (=> b!81429 (= e!53141 (getValueByKey!136 (t!5172 (t!5172 lt!37315)) (_1!1102 lt!37082)))))

(declare-fun d!20099 () Bool)

(declare-fun c!12830 () Bool)

(assert (=> d!20099 (= c!12830 (and ((_ is Cons!1510) (t!5172 lt!37315)) (= (_1!1102 (h!2099 (t!5172 lt!37315))) (_1!1102 lt!37082))))))

(assert (=> d!20099 (= (getValueByKey!136 (t!5172 lt!37315) (_1!1102 lt!37082)) e!53140)))

(declare-fun b!81428 () Bool)

(assert (=> b!81428 (= e!53140 e!53141)))

(declare-fun c!12831 () Bool)

(assert (=> b!81428 (= c!12831 (and ((_ is Cons!1510) (t!5172 lt!37315)) (not (= (_1!1102 (h!2099 (t!5172 lt!37315))) (_1!1102 lt!37082)))))))

(assert (= (and d!20099 c!12830) b!81427))

(assert (= (and d!20099 (not c!12830)) b!81428))

(assert (= (and b!81428 c!12831) b!81429))

(assert (= (and b!81428 (not c!12831)) b!81430))

(declare-fun m!83505 () Bool)

(assert (=> b!81429 m!83505))

(assert (=> b!80930 d!20099))

(declare-fun d!20101 () Bool)

(assert (=> d!20101 (= (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80732 d!20101))

(declare-fun d!20103 () Bool)

(declare-fun e!53142 () Bool)

(assert (=> d!20103 e!53142))

(declare-fun res!42347 () Bool)

(assert (=> d!20103 (=> res!42347 e!53142)))

(declare-fun lt!38056 () Bool)

(assert (=> d!20103 (= res!42347 (not lt!38056))))

(declare-fun lt!38055 () Bool)

(assert (=> d!20103 (= lt!38056 lt!38055)))

(declare-fun lt!38054 () Unit!2327)

(declare-fun e!53143 () Unit!2327)

(assert (=> d!20103 (= lt!38054 e!53143)))

(declare-fun c!12832 () Bool)

(assert (=> d!20103 (= c!12832 lt!38055)))

(assert (=> d!20103 (= lt!38055 (containsKey!140 (toList!734 lt!37743) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!20103 (= (contains!742 lt!37743 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38056)))

(declare-fun b!81431 () Bool)

(declare-fun lt!38053 () Unit!2327)

(assert (=> b!81431 (= e!53143 lt!38053)))

(assert (=> b!81431 (= lt!38053 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37743) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> b!81431 (isDefined!90 (getValueByKey!136 (toList!734 lt!37743) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81432 () Bool)

(declare-fun Unit!2379 () Unit!2327)

(assert (=> b!81432 (= e!53143 Unit!2379)))

(declare-fun b!81433 () Bool)

(assert (=> b!81433 (= e!53142 (isDefined!90 (getValueByKey!136 (toList!734 lt!37743) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20103 c!12832) b!81431))

(assert (= (and d!20103 (not c!12832)) b!81432))

(assert (= (and d!20103 (not res!42347)) b!81433))

(declare-fun m!83507 () Bool)

(assert (=> d!20103 m!83507))

(declare-fun m!83509 () Bool)

(assert (=> b!81431 m!83509))

(assert (=> b!81431 m!82509))

(assert (=> b!81431 m!82509))

(declare-fun m!83511 () Bool)

(assert (=> b!81431 m!83511))

(assert (=> b!81433 m!82509))

(assert (=> b!81433 m!82509))

(assert (=> b!81433 m!83511))

(assert (=> d!19787 d!20103))

(declare-fun b!81437 () Bool)

(declare-fun e!53145 () Option!142)

(assert (=> b!81437 (= e!53145 None!140)))

(declare-fun b!81434 () Bool)

(declare-fun e!53144 () Option!142)

(assert (=> b!81434 (= e!53144 (Some!141 (_2!1102 (h!2099 lt!37742))))))

(declare-fun b!81436 () Bool)

(assert (=> b!81436 (= e!53145 (getValueByKey!136 (t!5172 lt!37742) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20105 () Bool)

(declare-fun c!12833 () Bool)

(assert (=> d!20105 (= c!12833 (and ((_ is Cons!1510) lt!37742) (= (_1!1102 (h!2099 lt!37742)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20105 (= (getValueByKey!136 lt!37742 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53144)))

(declare-fun b!81435 () Bool)

(assert (=> b!81435 (= e!53144 e!53145)))

(declare-fun c!12834 () Bool)

(assert (=> b!81435 (= c!12834 (and ((_ is Cons!1510) lt!37742) (not (= (_1!1102 (h!2099 lt!37742)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20105 c!12833) b!81434))

(assert (= (and d!20105 (not c!12833)) b!81435))

(assert (= (and b!81435 c!12834) b!81436))

(assert (= (and b!81435 (not c!12834)) b!81437))

(declare-fun m!83513 () Bool)

(assert (=> b!81436 m!83513))

(assert (=> d!19787 d!20105))

(declare-fun d!20107 () Bool)

(assert (=> d!20107 (= (getValueByKey!136 lt!37742 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!38057 () Unit!2327)

(assert (=> d!20107 (= lt!38057 (choose!477 lt!37742 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun e!53146 () Bool)

(assert (=> d!20107 e!53146))

(declare-fun res!42348 () Bool)

(assert (=> d!20107 (=> (not res!42348) (not e!53146))))

(assert (=> d!20107 (= res!42348 (isStrictlySorted!291 lt!37742))))

(assert (=> d!20107 (= (lemmaContainsTupThenGetReturnValue!56 lt!37742 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38057)))

(declare-fun b!81438 () Bool)

(declare-fun res!42349 () Bool)

(assert (=> b!81438 (=> (not res!42349) (not e!53146))))

(assert (=> b!81438 (= res!42349 (containsKey!140 lt!37742 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81439 () Bool)

(assert (=> b!81439 (= e!53146 (contains!745 lt!37742 (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20107 res!42348) b!81438))

(assert (= (and b!81438 res!42349) b!81439))

(assert (=> d!20107 m!82503))

(declare-fun m!83515 () Bool)

(assert (=> d!20107 m!83515))

(declare-fun m!83517 () Bool)

(assert (=> d!20107 m!83517))

(declare-fun m!83519 () Bool)

(assert (=> b!81438 m!83519))

(declare-fun m!83521 () Bool)

(assert (=> b!81439 m!83521))

(assert (=> d!19787 d!20107))

(declare-fun b!81440 () Bool)

(declare-fun e!53150 () List!1514)

(declare-fun call!7610 () List!1514)

(assert (=> b!81440 (= e!53150 call!7610)))

(declare-fun bm!7605 () Bool)

(declare-fun call!7609 () List!1514)

(declare-fun e!53147 () List!1514)

(declare-fun c!12838 () Bool)

(assert (=> bm!7605 (= call!7609 ($colon$colon!69 e!53147 (ite c!12838 (h!2099 (toList!734 lt!37073)) (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun c!12836 () Bool)

(assert (=> bm!7605 (= c!12836 c!12838)))

(declare-fun b!81441 () Bool)

(declare-fun e!53151 () Bool)

(declare-fun lt!38058 () List!1514)

(assert (=> b!81441 (= e!53151 (contains!745 lt!38058 (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun bm!7606 () Bool)

(declare-fun call!7608 () List!1514)

(assert (=> bm!7606 (= call!7610 call!7608)))

(declare-fun d!20109 () Bool)

(assert (=> d!20109 e!53151))

(declare-fun res!42351 () Bool)

(assert (=> d!20109 (=> (not res!42351) (not e!53151))))

(assert (=> d!20109 (= res!42351 (isStrictlySorted!291 lt!38058))))

(declare-fun e!53149 () List!1514)

(assert (=> d!20109 (= lt!38058 e!53149)))

(assert (=> d!20109 (= c!12838 (and ((_ is Cons!1510) (toList!734 lt!37073)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20109 (isStrictlySorted!291 (toList!734 lt!37073))))

(assert (=> d!20109 (= (insertStrictlySorted!59 (toList!734 lt!37073) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38058)))

(declare-fun b!81442 () Bool)

(declare-fun c!12835 () Bool)

(assert (=> b!81442 (= c!12835 (and ((_ is Cons!1510) (toList!734 lt!37073)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun e!53148 () List!1514)

(assert (=> b!81442 (= e!53148 e!53150)))

(declare-fun b!81443 () Bool)

(assert (=> b!81443 (= e!53148 call!7608)))

(declare-fun b!81444 () Bool)

(assert (=> b!81444 (= e!53149 call!7609)))

(declare-fun bm!7607 () Bool)

(assert (=> bm!7607 (= call!7608 call!7609)))

(declare-fun b!81445 () Bool)

(declare-fun res!42350 () Bool)

(assert (=> b!81445 (=> (not res!42350) (not e!53151))))

(assert (=> b!81445 (= res!42350 (containsKey!140 lt!38058 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81446 () Bool)

(assert (=> b!81446 (= e!53150 call!7610)))

(declare-fun b!81447 () Bool)

(declare-fun c!12837 () Bool)

(assert (=> b!81447 (= e!53147 (ite c!12837 (t!5172 (toList!734 lt!37073)) (ite c!12835 (Cons!1510 (h!2099 (toList!734 lt!37073)) (t!5172 (toList!734 lt!37073))) Nil!1511)))))

(declare-fun b!81448 () Bool)

(assert (=> b!81448 (= e!53149 e!53148)))

(assert (=> b!81448 (= c!12837 (and ((_ is Cons!1510) (toList!734 lt!37073)) (= (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!81449 () Bool)

(assert (=> b!81449 (= e!53147 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37073)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (= (and d!20109 c!12838) b!81444))

(assert (= (and d!20109 (not c!12838)) b!81448))

(assert (= (and b!81448 c!12837) b!81443))

(assert (= (and b!81448 (not c!12837)) b!81442))

(assert (= (and b!81442 c!12835) b!81446))

(assert (= (and b!81442 (not c!12835)) b!81440))

(assert (= (or b!81446 b!81440) bm!7606))

(assert (= (or b!81443 bm!7606) bm!7607))

(assert (= (or b!81444 bm!7607) bm!7605))

(assert (= (and bm!7605 c!12836) b!81449))

(assert (= (and bm!7605 (not c!12836)) b!81447))

(assert (= (and d!20109 res!42351) b!81445))

(assert (= (and b!81445 res!42350) b!81441))

(declare-fun m!83523 () Bool)

(assert (=> d!20109 m!83523))

(assert (=> d!20109 m!81953))

(declare-fun m!83525 () Bool)

(assert (=> b!81449 m!83525))

(declare-fun m!83527 () Bool)

(assert (=> bm!7605 m!83527))

(declare-fun m!83529 () Bool)

(assert (=> b!81445 m!83529))

(declare-fun m!83531 () Bool)

(assert (=> b!81441 m!83531))

(assert (=> d!19787 d!20109))

(declare-fun d!20111 () Bool)

(assert (=> d!20111 (= (apply!80 lt!37611 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1187 (getValueByKey!136 (toList!734 lt!37611) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3441 () Bool)

(assert (= bs!3441 d!20111))

(assert (=> bs!3441 m!83463))

(assert (=> bs!3441 m!83463))

(declare-fun m!83533 () Bool)

(assert (=> bs!3441 m!83533))

(assert (=> b!80711 d!20111))

(declare-fun d!20113 () Bool)

(assert (=> d!20113 (isDefined!90 (getValueByKey!136 (toList!734 lt!37316) (_1!1102 lt!37082)))))

(declare-fun lt!38059 () Unit!2327)

(assert (=> d!20113 (= lt!38059 (choose!485 (toList!734 lt!37316) (_1!1102 lt!37082)))))

(declare-fun e!53152 () Bool)

(assert (=> d!20113 e!53152))

(declare-fun res!42352 () Bool)

(assert (=> d!20113 (=> (not res!42352) (not e!53152))))

(assert (=> d!20113 (= res!42352 (isStrictlySorted!291 (toList!734 lt!37316)))))

(assert (=> d!20113 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37316) (_1!1102 lt!37082)) lt!38059)))

(declare-fun b!81450 () Bool)

(assert (=> b!81450 (= e!53152 (containsKey!140 (toList!734 lt!37316) (_1!1102 lt!37082)))))

(assert (= (and d!20113 res!42352) b!81450))

(assert (=> d!20113 m!81609))

(assert (=> d!20113 m!81609))

(assert (=> d!20113 m!82639))

(declare-fun m!83535 () Bool)

(assert (=> d!20113 m!83535))

(declare-fun m!83537 () Bool)

(assert (=> d!20113 m!83537))

(assert (=> b!81450 m!82635))

(assert (=> b!80925 d!20113))

(declare-fun d!20115 () Bool)

(assert (=> d!20115 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37316) (_1!1102 lt!37082))) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37316) (_1!1102 lt!37082)))))))

(declare-fun bs!3442 () Bool)

(assert (= bs!3442 d!20115))

(assert (=> bs!3442 m!81609))

(declare-fun m!83539 () Bool)

(assert (=> bs!3442 m!83539))

(assert (=> b!80925 d!20115))

(assert (=> b!80925 d!19859))

(declare-fun d!20117 () Bool)

(declare-fun e!53153 () Bool)

(assert (=> d!20117 e!53153))

(declare-fun res!42353 () Bool)

(assert (=> d!20117 (=> res!42353 e!53153)))

(declare-fun lt!38063 () Bool)

(assert (=> d!20117 (= res!42353 (not lt!38063))))

(declare-fun lt!38062 () Bool)

(assert (=> d!20117 (= lt!38063 lt!38062)))

(declare-fun lt!38061 () Unit!2327)

(declare-fun e!53154 () Unit!2327)

(assert (=> d!20117 (= lt!38061 e!53154)))

(declare-fun c!12839 () Bool)

(assert (=> d!20117 (= c!12839 lt!38062)))

(assert (=> d!20117 (= lt!38062 (containsKey!140 (toList!734 lt!37682) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20117 (= (contains!742 lt!37682 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38063)))

(declare-fun b!81451 () Bool)

(declare-fun lt!38060 () Unit!2327)

(assert (=> b!81451 (= e!53154 lt!38060)))

(assert (=> b!81451 (= lt!38060 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37682) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81451 (isDefined!90 (getValueByKey!136 (toList!734 lt!37682) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81452 () Bool)

(declare-fun Unit!2380 () Unit!2327)

(assert (=> b!81452 (= e!53154 Unit!2380)))

(declare-fun b!81453 () Bool)

(assert (=> b!81453 (= e!53153 (isDefined!90 (getValueByKey!136 (toList!734 lt!37682) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20117 c!12839) b!81451))

(assert (= (and d!20117 (not c!12839)) b!81452))

(assert (= (and d!20117 (not res!42353)) b!81453))

(declare-fun m!83541 () Bool)

(assert (=> d!20117 m!83541))

(declare-fun m!83543 () Bool)

(assert (=> b!81451 m!83543))

(declare-fun m!83545 () Bool)

(assert (=> b!81451 m!83545))

(assert (=> b!81451 m!83545))

(declare-fun m!83547 () Bool)

(assert (=> b!81451 m!83547))

(assert (=> b!81453 m!83545))

(assert (=> b!81453 m!83545))

(assert (=> b!81453 m!83547))

(assert (=> bm!7522 d!20117))

(assert (=> b!80761 d!20075))

(declare-fun d!20119 () Bool)

(declare-fun e!53155 () Bool)

(assert (=> d!20119 e!53155))

(declare-fun res!42354 () Bool)

(assert (=> d!20119 (=> res!42354 e!53155)))

(declare-fun lt!38067 () Bool)

(assert (=> d!20119 (= res!42354 (not lt!38067))))

(declare-fun lt!38066 () Bool)

(assert (=> d!20119 (= lt!38067 lt!38066)))

(declare-fun lt!38065 () Unit!2327)

(declare-fun e!53156 () Unit!2327)

(assert (=> d!20119 (= lt!38065 e!53156)))

(declare-fun c!12840 () Bool)

(assert (=> d!20119 (= c!12840 lt!38066)))

(assert (=> d!20119 (= lt!38066 (containsKey!140 (toList!734 lt!37769) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20119 (= (contains!742 lt!37769 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38067)))

(declare-fun b!81454 () Bool)

(declare-fun lt!38064 () Unit!2327)

(assert (=> b!81454 (= e!53156 lt!38064)))

(assert (=> b!81454 (= lt!38064 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37769) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81454 (isDefined!90 (getValueByKey!136 (toList!734 lt!37769) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81455 () Bool)

(declare-fun Unit!2381 () Unit!2327)

(assert (=> b!81455 (= e!53156 Unit!2381)))

(declare-fun b!81456 () Bool)

(assert (=> b!81456 (= e!53155 (isDefined!90 (getValueByKey!136 (toList!734 lt!37769) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20119 c!12840) b!81454))

(assert (= (and d!20119 (not c!12840)) b!81455))

(assert (= (and d!20119 (not res!42354)) b!81456))

(declare-fun m!83549 () Bool)

(assert (=> d!20119 m!83549))

(declare-fun m!83551 () Bool)

(assert (=> b!81454 m!83551))

(declare-fun m!83553 () Bool)

(assert (=> b!81454 m!83553))

(assert (=> b!81454 m!83553))

(declare-fun m!83555 () Bool)

(assert (=> b!81454 m!83555))

(assert (=> b!81456 m!83553))

(assert (=> b!81456 m!83553))

(assert (=> b!81456 m!83555))

(assert (=> bm!7536 d!20119))

(declare-fun d!20121 () Bool)

(declare-fun e!53157 () Bool)

(assert (=> d!20121 e!53157))

(declare-fun res!42355 () Bool)

(assert (=> d!20121 (=> res!42355 e!53157)))

(declare-fun lt!38071 () Bool)

(assert (=> d!20121 (= res!42355 (not lt!38071))))

(declare-fun lt!38070 () Bool)

(assert (=> d!20121 (= lt!38071 lt!38070)))

(declare-fun lt!38069 () Unit!2327)

(declare-fun e!53158 () Unit!2327)

(assert (=> d!20121 (= lt!38069 e!53158)))

(declare-fun c!12841 () Bool)

(assert (=> d!20121 (= c!12841 lt!38070)))

(assert (=> d!20121 (= lt!38070 (containsKey!140 (toList!734 lt!37471) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20121 (= (contains!742 lt!37471 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) lt!38071)))

(declare-fun b!81457 () Bool)

(declare-fun lt!38068 () Unit!2327)

(assert (=> b!81457 (= e!53158 lt!38068)))

(assert (=> b!81457 (= lt!38068 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37471) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> b!81457 (isDefined!90 (getValueByKey!136 (toList!734 lt!37471) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!81458 () Bool)

(declare-fun Unit!2382 () Unit!2327)

(assert (=> b!81458 (= e!53158 Unit!2382)))

(declare-fun b!81459 () Bool)

(assert (=> b!81459 (= e!53157 (isDefined!90 (getValueByKey!136 (toList!734 lt!37471) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20121 c!12841) b!81457))

(assert (= (and d!20121 (not c!12841)) b!81458))

(assert (= (and d!20121 (not res!42355)) b!81459))

(declare-fun m!83557 () Bool)

(assert (=> d!20121 m!83557))

(declare-fun m!83559 () Bool)

(assert (=> b!81457 m!83559))

(assert (=> b!81457 m!81903))

(assert (=> b!81457 m!81903))

(declare-fun m!83561 () Bool)

(assert (=> b!81457 m!83561))

(assert (=> b!81459 m!81903))

(assert (=> b!81459 m!81903))

(assert (=> b!81459 m!83561))

(assert (=> d!19661 d!20121))

(declare-fun b!81463 () Bool)

(declare-fun e!53160 () Option!142)

(assert (=> b!81463 (= e!53160 None!140)))

(declare-fun b!81460 () Bool)

(declare-fun e!53159 () Option!142)

(assert (=> b!81460 (= e!53159 (Some!141 (_2!1102 (h!2099 lt!37470))))))

(declare-fun b!81462 () Bool)

(assert (=> b!81462 (= e!53160 (getValueByKey!136 (t!5172 lt!37470) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun c!12842 () Bool)

(declare-fun d!20123 () Bool)

(assert (=> d!20123 (= c!12842 (and ((_ is Cons!1510) lt!37470) (= (_1!1102 (h!2099 lt!37470)) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (=> d!20123 (= (getValueByKey!136 lt!37470 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) e!53159)))

(declare-fun b!81461 () Bool)

(assert (=> b!81461 (= e!53159 e!53160)))

(declare-fun c!12843 () Bool)

(assert (=> b!81461 (= c!12843 (and ((_ is Cons!1510) lt!37470) (not (= (_1!1102 (h!2099 lt!37470)) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))))

(assert (= (and d!20123 c!12842) b!81460))

(assert (= (and d!20123 (not c!12842)) b!81461))

(assert (= (and b!81461 c!12843) b!81462))

(assert (= (and b!81461 (not c!12843)) b!81463))

(declare-fun m!83563 () Bool)

(assert (=> b!81462 m!83563))

(assert (=> d!19661 d!20123))

(declare-fun d!20125 () Bool)

(assert (=> d!20125 (= (getValueByKey!136 lt!37470 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (Some!141 (_2!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun lt!38072 () Unit!2327)

(assert (=> d!20125 (= lt!38072 (choose!477 lt!37470 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_2!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun e!53161 () Bool)

(assert (=> d!20125 e!53161))

(declare-fun res!42356 () Bool)

(assert (=> d!20125 (=> (not res!42356) (not e!53161))))

(assert (=> d!20125 (= res!42356 (isStrictlySorted!291 lt!37470))))

(assert (=> d!20125 (= (lemmaContainsTupThenGetReturnValue!56 lt!37470 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_2!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) lt!38072)))

(declare-fun b!81464 () Bool)

(declare-fun res!42357 () Bool)

(assert (=> b!81464 (=> (not res!42357) (not e!53161))))

(assert (=> b!81464 (= res!42357 (containsKey!140 lt!37470 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!81465 () Bool)

(assert (=> b!81465 (= e!53161 (contains!745 lt!37470 (tuple2!2183 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_2!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20125 res!42356) b!81464))

(assert (= (and b!81464 res!42357) b!81465))

(assert (=> d!20125 m!81897))

(declare-fun m!83565 () Bool)

(assert (=> d!20125 m!83565))

(declare-fun m!83567 () Bool)

(assert (=> d!20125 m!83567))

(declare-fun m!83569 () Bool)

(assert (=> b!81464 m!83569))

(declare-fun m!83571 () Bool)

(assert (=> b!81465 m!83571))

(assert (=> d!19661 d!20125))

(declare-fun b!81466 () Bool)

(declare-fun e!53165 () List!1514)

(declare-fun call!7613 () List!1514)

(assert (=> b!81466 (= e!53165 call!7613)))

(declare-fun bm!7608 () Bool)

(declare-fun c!12847 () Bool)

(declare-fun e!53162 () List!1514)

(declare-fun call!7612 () List!1514)

(assert (=> bm!7608 (= call!7612 ($colon$colon!69 e!53162 (ite c!12847 (h!2099 (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472)))) (tuple2!2183 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_2!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))))

(declare-fun c!12845 () Bool)

(assert (=> bm!7608 (= c!12845 c!12847)))

(declare-fun b!81467 () Bool)

(declare-fun e!53166 () Bool)

(declare-fun lt!38073 () List!1514)

(assert (=> b!81467 (= e!53166 (contains!745 lt!38073 (tuple2!2183 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_2!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun bm!7609 () Bool)

(declare-fun call!7611 () List!1514)

(assert (=> bm!7609 (= call!7613 call!7611)))

(declare-fun d!20127 () Bool)

(assert (=> d!20127 e!53166))

(declare-fun res!42359 () Bool)

(assert (=> d!20127 (=> (not res!42359) (not e!53166))))

(assert (=> d!20127 (= res!42359 (isStrictlySorted!291 lt!38073))))

(declare-fun e!53164 () List!1514)

(assert (=> d!20127 (= lt!38073 e!53164)))

(assert (=> d!20127 (= c!12847 (and ((_ is Cons!1510) (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472)))) (bvslt (_1!1102 (h!2099 (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472))))) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (=> d!20127 (isStrictlySorted!291 (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472))))))

(assert (=> d!20127 (= (insertStrictlySorted!59 (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472))) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_2!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) lt!38073)))

(declare-fun c!12844 () Bool)

(declare-fun b!81468 () Bool)

(assert (=> b!81468 (= c!12844 (and ((_ is Cons!1510) (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472)))) (bvsgt (_1!1102 (h!2099 (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472))))) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun e!53163 () List!1514)

(assert (=> b!81468 (= e!53163 e!53165)))

(declare-fun b!81469 () Bool)

(assert (=> b!81469 (= e!53163 call!7611)))

(declare-fun b!81470 () Bool)

(assert (=> b!81470 (= e!53164 call!7612)))

(declare-fun bm!7610 () Bool)

(assert (=> bm!7610 (= call!7611 call!7612)))

(declare-fun b!81471 () Bool)

(declare-fun res!42358 () Bool)

(assert (=> b!81471 (=> (not res!42358) (not e!53166))))

(assert (=> b!81471 (= res!42358 (containsKey!140 lt!38073 (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!81472 () Bool)

(assert (=> b!81472 (= e!53165 call!7613)))

(declare-fun b!81473 () Bool)

(declare-fun c!12846 () Bool)

(assert (=> b!81473 (= e!53162 (ite c!12846 (t!5172 (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472)))) (ite c!12844 (Cons!1510 (h!2099 (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472)))) (t!5172 (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472))))) Nil!1511)))))

(declare-fun b!81474 () Bool)

(assert (=> b!81474 (= e!53164 e!53163)))

(assert (=> b!81474 (= c!12846 (and ((_ is Cons!1510) (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472)))) (= (_1!1102 (h!2099 (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472))))) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun b!81475 () Bool)

(assert (=> b!81475 (= e!53162 (insertStrictlySorted!59 (t!5172 (toList!734 (ite c!12571 call!7470 (ite c!12573 call!7471 call!7472)))) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_2!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20127 c!12847) b!81470))

(assert (= (and d!20127 (not c!12847)) b!81474))

(assert (= (and b!81474 c!12846) b!81469))

(assert (= (and b!81474 (not c!12846)) b!81468))

(assert (= (and b!81468 c!12844) b!81472))

(assert (= (and b!81468 (not c!12844)) b!81466))

(assert (= (or b!81472 b!81466) bm!7609))

(assert (= (or b!81469 bm!7609) bm!7610))

(assert (= (or b!81470 bm!7610) bm!7608))

(assert (= (and bm!7608 c!12845) b!81475))

(assert (= (and bm!7608 (not c!12845)) b!81473))

(assert (= (and d!20127 res!42359) b!81471))

(assert (= (and b!81471 res!42358) b!81467))

(declare-fun m!83573 () Bool)

(assert (=> d!20127 m!83573))

(declare-fun m!83575 () Bool)

(assert (=> d!20127 m!83575))

(declare-fun m!83577 () Bool)

(assert (=> b!81475 m!83577))

(declare-fun m!83579 () Bool)

(assert (=> bm!7608 m!83579))

(declare-fun m!83581 () Bool)

(assert (=> b!81471 m!83581))

(declare-fun m!83583 () Bool)

(assert (=> b!81467 m!83583))

(assert (=> d!19661 d!20127))

(declare-fun d!20129 () Bool)

(assert (=> d!20129 (= (get!1187 (getValueByKey!136 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2606 (getValueByKey!136 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19741 d!20129))

(declare-fun b!81479 () Bool)

(declare-fun e!53168 () Option!142)

(assert (=> b!81479 (= e!53168 None!140)))

(declare-fun b!81476 () Bool)

(declare-fun e!53167 () Option!142)

(assert (=> b!81476 (= e!53167 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37331)))))))

(declare-fun b!81478 () Bool)

(assert (=> b!81478 (= e!53168 (getValueByKey!136 (t!5172 (toList!734 lt!37331)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!12848 () Bool)

(declare-fun d!20131 () Bool)

(assert (=> d!20131 (= c!12848 (and ((_ is Cons!1510) (toList!734 lt!37331)) (= (_1!1102 (h!2099 (toList!734 lt!37331))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!20131 (= (getValueByKey!136 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53167)))

(declare-fun b!81477 () Bool)

(assert (=> b!81477 (= e!53167 e!53168)))

(declare-fun c!12849 () Bool)

(assert (=> b!81477 (= c!12849 (and ((_ is Cons!1510) (toList!734 lt!37331)) (not (= (_1!1102 (h!2099 (toList!734 lt!37331))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!20131 c!12848) b!81476))

(assert (= (and d!20131 (not c!12848)) b!81477))

(assert (= (and b!81477 c!12849) b!81478))

(assert (= (and b!81477 (not c!12849)) b!81479))

(assert (=> b!81478 m!81625))

(declare-fun m!83585 () Bool)

(assert (=> b!81478 m!83585))

(assert (=> d!19741 d!20131))

(declare-fun d!20133 () Bool)

(declare-fun e!53169 () Bool)

(assert (=> d!20133 e!53169))

(declare-fun res!42360 () Bool)

(assert (=> d!20133 (=> res!42360 e!53169)))

(declare-fun lt!38077 () Bool)

(assert (=> d!20133 (= res!42360 (not lt!38077))))

(declare-fun lt!38076 () Bool)

(assert (=> d!20133 (= lt!38077 lt!38076)))

(declare-fun lt!38075 () Unit!2327)

(declare-fun e!53170 () Unit!2327)

(assert (=> d!20133 (= lt!38075 e!53170)))

(declare-fun c!12850 () Bool)

(assert (=> d!20133 (= c!12850 lt!38076)))

(assert (=> d!20133 (= lt!38076 (containsKey!140 (toList!734 lt!37735) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!20133 (= (contains!742 lt!37735 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38077)))

(declare-fun b!81480 () Bool)

(declare-fun lt!38074 () Unit!2327)

(assert (=> b!81480 (= e!53170 lt!38074)))

(assert (=> b!81480 (= lt!38074 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37735) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> b!81480 (isDefined!90 (getValueByKey!136 (toList!734 lt!37735) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!81481 () Bool)

(declare-fun Unit!2383 () Unit!2327)

(assert (=> b!81481 (= e!53170 Unit!2383)))

(declare-fun b!81482 () Bool)

(assert (=> b!81482 (= e!53169 (isDefined!90 (getValueByKey!136 (toList!734 lt!37735) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (= (and d!20133 c!12850) b!81480))

(assert (= (and d!20133 (not c!12850)) b!81481))

(assert (= (and d!20133 (not res!42360)) b!81482))

(declare-fun m!83587 () Bool)

(assert (=> d!20133 m!83587))

(declare-fun m!83589 () Bool)

(assert (=> b!81480 m!83589))

(assert (=> b!81480 m!82485))

(assert (=> b!81480 m!82485))

(declare-fun m!83591 () Bool)

(assert (=> b!81480 m!83591))

(assert (=> b!81482 m!82485))

(assert (=> b!81482 m!82485))

(assert (=> b!81482 m!83591))

(assert (=> d!19781 d!20133))

(declare-fun b!81486 () Bool)

(declare-fun e!53172 () Option!142)

(assert (=> b!81486 (= e!53172 None!140)))

(declare-fun b!81483 () Bool)

(declare-fun e!53171 () Option!142)

(assert (=> b!81483 (= e!53171 (Some!141 (_2!1102 (h!2099 lt!37734))))))

(declare-fun b!81485 () Bool)

(assert (=> b!81485 (= e!53172 (getValueByKey!136 (t!5172 lt!37734) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun c!12851 () Bool)

(declare-fun d!20135 () Bool)

(assert (=> d!20135 (= c!12851 (and ((_ is Cons!1510) lt!37734) (= (_1!1102 (h!2099 lt!37734)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20135 (= (getValueByKey!136 lt!37734 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) e!53171)))

(declare-fun b!81484 () Bool)

(assert (=> b!81484 (= e!53171 e!53172)))

(declare-fun c!12852 () Bool)

(assert (=> b!81484 (= c!12852 (and ((_ is Cons!1510) lt!37734) (not (= (_1!1102 (h!2099 lt!37734)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (= (and d!20135 c!12851) b!81483))

(assert (= (and d!20135 (not c!12851)) b!81484))

(assert (= (and b!81484 c!12852) b!81485))

(assert (= (and b!81484 (not c!12852)) b!81486))

(declare-fun m!83593 () Bool)

(assert (=> b!81485 m!83593))

(assert (=> d!19781 d!20135))

(declare-fun d!20137 () Bool)

(assert (=> d!20137 (= (getValueByKey!136 lt!37734 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun lt!38078 () Unit!2327)

(assert (=> d!20137 (= lt!38078 (choose!477 lt!37734 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun e!53173 () Bool)

(assert (=> d!20137 e!53173))

(declare-fun res!42361 () Bool)

(assert (=> d!20137 (=> (not res!42361) (not e!53173))))

(assert (=> d!20137 (= res!42361 (isStrictlySorted!291 lt!37734))))

(assert (=> d!20137 (= (lemmaContainsTupThenGetReturnValue!56 lt!37734 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38078)))

(declare-fun b!81487 () Bool)

(declare-fun res!42362 () Bool)

(assert (=> b!81487 (=> (not res!42362) (not e!53173))))

(assert (=> b!81487 (= res!42362 (containsKey!140 lt!37734 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!81488 () Bool)

(assert (=> b!81488 (= e!53173 (contains!745 lt!37734 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (= (and d!20137 res!42361) b!81487))

(assert (= (and b!81487 res!42362) b!81488))

(assert (=> d!20137 m!82479))

(declare-fun m!83595 () Bool)

(assert (=> d!20137 m!83595))

(declare-fun m!83597 () Bool)

(assert (=> d!20137 m!83597))

(declare-fun m!83599 () Bool)

(assert (=> b!81487 m!83599))

(declare-fun m!83601 () Bool)

(assert (=> b!81488 m!83601))

(assert (=> d!19781 d!20137))

(declare-fun b!81489 () Bool)

(declare-fun e!53177 () List!1514)

(declare-fun call!7616 () List!1514)

(assert (=> b!81489 (= e!53177 call!7616)))

(declare-fun e!53174 () List!1514)

(declare-fun bm!7611 () Bool)

(declare-fun c!12856 () Bool)

(declare-fun call!7615 () List!1514)

(assert (=> bm!7611 (= call!7615 ($colon$colon!69 e!53174 (ite c!12856 (h!2099 (toList!734 lt!37073)) (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(declare-fun c!12854 () Bool)

(assert (=> bm!7611 (= c!12854 c!12856)))

(declare-fun b!81490 () Bool)

(declare-fun lt!38079 () List!1514)

(declare-fun e!53178 () Bool)

(assert (=> b!81490 (= e!53178 (contains!745 lt!38079 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun bm!7612 () Bool)

(declare-fun call!7614 () List!1514)

(assert (=> bm!7612 (= call!7616 call!7614)))

(declare-fun d!20139 () Bool)

(assert (=> d!20139 e!53178))

(declare-fun res!42364 () Bool)

(assert (=> d!20139 (=> (not res!42364) (not e!53178))))

(assert (=> d!20139 (= res!42364 (isStrictlySorted!291 lt!38079))))

(declare-fun e!53176 () List!1514)

(assert (=> d!20139 (= lt!38079 e!53176)))

(assert (=> d!20139 (= c!12856 (and ((_ is Cons!1510) (toList!734 lt!37073)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20139 (isStrictlySorted!291 (toList!734 lt!37073))))

(assert (=> d!20139 (= (insertStrictlySorted!59 (toList!734 lt!37073) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38079)))

(declare-fun c!12853 () Bool)

(declare-fun b!81491 () Bool)

(assert (=> b!81491 (= c!12853 (and ((_ is Cons!1510) (toList!734 lt!37073)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun e!53175 () List!1514)

(assert (=> b!81491 (= e!53175 e!53177)))

(declare-fun b!81492 () Bool)

(assert (=> b!81492 (= e!53175 call!7614)))

(declare-fun b!81493 () Bool)

(assert (=> b!81493 (= e!53176 call!7615)))

(declare-fun bm!7613 () Bool)

(assert (=> bm!7613 (= call!7614 call!7615)))

(declare-fun b!81494 () Bool)

(declare-fun res!42363 () Bool)

(assert (=> b!81494 (=> (not res!42363) (not e!53178))))

(assert (=> b!81494 (= res!42363 (containsKey!140 lt!38079 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!81495 () Bool)

(assert (=> b!81495 (= e!53177 call!7616)))

(declare-fun b!81496 () Bool)

(declare-fun c!12855 () Bool)

(assert (=> b!81496 (= e!53174 (ite c!12855 (t!5172 (toList!734 lt!37073)) (ite c!12853 (Cons!1510 (h!2099 (toList!734 lt!37073)) (t!5172 (toList!734 lt!37073))) Nil!1511)))))

(declare-fun b!81497 () Bool)

(assert (=> b!81497 (= e!53176 e!53175)))

(assert (=> b!81497 (= c!12855 (and ((_ is Cons!1510) (toList!734 lt!37073)) (= (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!81498 () Bool)

(assert (=> b!81498 (= e!53174 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37073)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (= (and d!20139 c!12856) b!81493))

(assert (= (and d!20139 (not c!12856)) b!81497))

(assert (= (and b!81497 c!12855) b!81492))

(assert (= (and b!81497 (not c!12855)) b!81491))

(assert (= (and b!81491 c!12853) b!81495))

(assert (= (and b!81491 (not c!12853)) b!81489))

(assert (= (or b!81495 b!81489) bm!7612))

(assert (= (or b!81492 bm!7612) bm!7613))

(assert (= (or b!81493 bm!7613) bm!7611))

(assert (= (and bm!7611 c!12854) b!81498))

(assert (= (and bm!7611 (not c!12854)) b!81496))

(assert (= (and d!20139 res!42364) b!81494))

(assert (= (and b!81494 res!42363) b!81490))

(declare-fun m!83603 () Bool)

(assert (=> d!20139 m!83603))

(assert (=> d!20139 m!81953))

(declare-fun m!83605 () Bool)

(assert (=> b!81498 m!83605))

(declare-fun m!83607 () Bool)

(assert (=> bm!7611 m!83607))

(declare-fun m!83609 () Bool)

(assert (=> b!81494 m!83609))

(declare-fun m!83611 () Bool)

(assert (=> b!81490 m!83611))

(assert (=> d!19781 d!20139))

(declare-fun d!20141 () Bool)

(assert (=> d!20141 (= (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37414)) (v!2606 (getValueByKey!136 (toList!734 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37414)))))

(assert (=> d!19647 d!20141))

(declare-fun b!81502 () Bool)

(declare-fun e!53180 () Option!142)

(assert (=> b!81502 (= e!53180 None!140)))

(declare-fun b!81499 () Bool)

(declare-fun e!53179 () Option!142)

(assert (=> b!81499 (= e!53179 (Some!141 (_2!1102 (h!2099 (toList!734 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))))

(declare-fun b!81501 () Bool)

(assert (=> b!81501 (= e!53180 (getValueByKey!136 (t!5172 (toList!734 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) lt!37414))))

(declare-fun c!12857 () Bool)

(declare-fun d!20143 () Bool)

(assert (=> d!20143 (= c!12857 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))) lt!37414)))))

(assert (=> d!20143 (= (getValueByKey!136 (toList!734 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37414) e!53179)))

(declare-fun b!81500 () Bool)

(assert (=> b!81500 (= e!53179 e!53180)))

(declare-fun c!12858 () Bool)

(assert (=> b!81500 (= c!12858 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (not (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))) lt!37414))))))

(assert (= (and d!20143 c!12857) b!81499))

(assert (= (and d!20143 (not c!12857)) b!81500))

(assert (= (and b!81500 c!12858) b!81501))

(assert (= (and b!81500 (not c!12858)) b!81502))

(declare-fun m!83613 () Bool)

(assert (=> b!81501 m!83613))

(assert (=> d!19647 d!20143))

(declare-fun d!20145 () Bool)

(assert (=> d!20145 (contains!742 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))

(declare-fun lt!38082 () Unit!2327)

(declare-fun choose!489 (array!3965 array!3967 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) (_ BitVec 32) Int) Unit!2327)

(assert (=> d!20145 (= lt!38082 (choose!489 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(assert (=> d!20145 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!20145 (= (lemmaArrayContainsKeyThenInListMap!17 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38082)))

(declare-fun bs!3443 () Bool)

(assert (= bs!3443 d!20145))

(assert (=> bs!3443 m!81711))

(assert (=> bs!3443 m!81711))

(assert (=> bs!3443 m!81295))

(assert (=> bs!3443 m!82077))

(assert (=> bs!3443 m!81295))

(declare-fun m!83615 () Bool)

(assert (=> bs!3443 m!83615))

(assert (=> bs!3443 m!81973))

(assert (=> b!80690 d!20145))

(assert (=> b!80690 d!19945))

(assert (=> b!80690 d!19809))

(declare-fun d!20147 () Bool)

(declare-fun res!42365 () Bool)

(declare-fun e!53181 () Bool)

(assert (=> d!20147 (=> res!42365 e!53181)))

(assert (=> d!20147 (= res!42365 (and ((_ is Cons!1510) (toList!734 lt!37305)) (= (_1!1102 (h!2099 (toList!734 lt!37305))) (_1!1102 lt!37075))))))

(assert (=> d!20147 (= (containsKey!140 (toList!734 lt!37305) (_1!1102 lt!37075)) e!53181)))

(declare-fun b!81503 () Bool)

(declare-fun e!53182 () Bool)

(assert (=> b!81503 (= e!53181 e!53182)))

(declare-fun res!42366 () Bool)

(assert (=> b!81503 (=> (not res!42366) (not e!53182))))

(assert (=> b!81503 (= res!42366 (and (or (not ((_ is Cons!1510) (toList!734 lt!37305))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37305))) (_1!1102 lt!37075))) ((_ is Cons!1510) (toList!734 lt!37305)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37305))) (_1!1102 lt!37075))))))

(declare-fun b!81504 () Bool)

(assert (=> b!81504 (= e!53182 (containsKey!140 (t!5172 (toList!734 lt!37305)) (_1!1102 lt!37075)))))

(assert (= (and d!20147 (not res!42365)) b!81503))

(assert (= (and b!81503 res!42366) b!81504))

(declare-fun m!83617 () Bool)

(assert (=> b!81504 m!83617))

(assert (=> d!19753 d!20147))

(declare-fun d!20149 () Bool)

(declare-fun e!53183 () Bool)

(assert (=> d!20149 e!53183))

(declare-fun res!42367 () Bool)

(assert (=> d!20149 (=> res!42367 e!53183)))

(declare-fun lt!38086 () Bool)

(assert (=> d!20149 (= res!42367 (not lt!38086))))

(declare-fun lt!38085 () Bool)

(assert (=> d!20149 (= lt!38086 lt!38085)))

(declare-fun lt!38084 () Unit!2327)

(declare-fun e!53184 () Unit!2327)

(assert (=> d!20149 (= lt!38084 e!53184)))

(declare-fun c!12859 () Bool)

(assert (=> d!20149 (= c!12859 lt!38085)))

(assert (=> d!20149 (= lt!38085 (containsKey!140 (toList!734 lt!37759) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!20149 (= (contains!742 lt!37759 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38086)))

(declare-fun b!81505 () Bool)

(declare-fun lt!38083 () Unit!2327)

(assert (=> b!81505 (= e!53184 lt!38083)))

(assert (=> b!81505 (= lt!38083 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37759) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> b!81505 (isDefined!90 (getValueByKey!136 (toList!734 lt!37759) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81506 () Bool)

(declare-fun Unit!2384 () Unit!2327)

(assert (=> b!81506 (= e!53184 Unit!2384)))

(declare-fun b!81507 () Bool)

(assert (=> b!81507 (= e!53183 (isDefined!90 (getValueByKey!136 (toList!734 lt!37759) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20149 c!12859) b!81505))

(assert (= (and d!20149 (not c!12859)) b!81506))

(assert (= (and d!20149 (not res!42367)) b!81507))

(declare-fun m!83619 () Bool)

(assert (=> d!20149 m!83619))

(declare-fun m!83621 () Bool)

(assert (=> b!81505 m!83621))

(assert (=> b!81505 m!82557))

(assert (=> b!81505 m!82557))

(declare-fun m!83623 () Bool)

(assert (=> b!81505 m!83623))

(assert (=> b!81507 m!82557))

(assert (=> b!81507 m!82557))

(assert (=> b!81507 m!83623))

(assert (=> d!19795 d!20149))

(declare-fun b!81511 () Bool)

(declare-fun e!53186 () Option!142)

(assert (=> b!81511 (= e!53186 None!140)))

(declare-fun b!81508 () Bool)

(declare-fun e!53185 () Option!142)

(assert (=> b!81508 (= e!53185 (Some!141 (_2!1102 (h!2099 lt!37758))))))

(declare-fun b!81510 () Bool)

(assert (=> b!81510 (= e!53186 (getValueByKey!136 (t!5172 lt!37758) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20151 () Bool)

(declare-fun c!12860 () Bool)

(assert (=> d!20151 (= c!12860 (and ((_ is Cons!1510) lt!37758) (= (_1!1102 (h!2099 lt!37758)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20151 (= (getValueByKey!136 lt!37758 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53185)))

(declare-fun b!81509 () Bool)

(assert (=> b!81509 (= e!53185 e!53186)))

(declare-fun c!12861 () Bool)

(assert (=> b!81509 (= c!12861 (and ((_ is Cons!1510) lt!37758) (not (= (_1!1102 (h!2099 lt!37758)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20151 c!12860) b!81508))

(assert (= (and d!20151 (not c!12860)) b!81509))

(assert (= (and b!81509 c!12861) b!81510))

(assert (= (and b!81509 (not c!12861)) b!81511))

(declare-fun m!83625 () Bool)

(assert (=> b!81510 m!83625))

(assert (=> d!19795 d!20151))

(declare-fun d!20153 () Bool)

(assert (=> d!20153 (= (getValueByKey!136 lt!37758 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!38087 () Unit!2327)

(assert (=> d!20153 (= lt!38087 (choose!477 lt!37758 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun e!53187 () Bool)

(assert (=> d!20153 e!53187))

(declare-fun res!42368 () Bool)

(assert (=> d!20153 (=> (not res!42368) (not e!53187))))

(assert (=> d!20153 (= res!42368 (isStrictlySorted!291 lt!37758))))

(assert (=> d!20153 (= (lemmaContainsTupThenGetReturnValue!56 lt!37758 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38087)))

(declare-fun b!81512 () Bool)

(declare-fun res!42369 () Bool)

(assert (=> b!81512 (=> (not res!42369) (not e!53187))))

(assert (=> b!81512 (= res!42369 (containsKey!140 lt!37758 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81513 () Bool)

(assert (=> b!81513 (= e!53187 (contains!745 lt!37758 (tuple2!2183 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20153 res!42368) b!81512))

(assert (= (and b!81512 res!42369) b!81513))

(assert (=> d!20153 m!82551))

(declare-fun m!83627 () Bool)

(assert (=> d!20153 m!83627))

(declare-fun m!83629 () Bool)

(assert (=> d!20153 m!83629))

(declare-fun m!83631 () Bool)

(assert (=> b!81512 m!83631))

(declare-fun m!83633 () Bool)

(assert (=> b!81513 m!83633))

(assert (=> d!19795 d!20153))

(declare-fun b!81514 () Bool)

(declare-fun e!53191 () List!1514)

(declare-fun call!7619 () List!1514)

(assert (=> b!81514 (= e!53191 call!7619)))

(declare-fun call!7618 () List!1514)

(declare-fun c!12865 () Bool)

(declare-fun bm!7614 () Bool)

(declare-fun e!53188 () List!1514)

(assert (=> bm!7614 (= call!7618 ($colon$colon!69 e!53188 (ite c!12865 (h!2099 (toList!734 lt!37071)) (tuple2!2183 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun c!12863 () Bool)

(assert (=> bm!7614 (= c!12863 c!12865)))

(declare-fun b!81515 () Bool)

(declare-fun e!53192 () Bool)

(declare-fun lt!38088 () List!1514)

(assert (=> b!81515 (= e!53192 (contains!745 lt!38088 (tuple2!2183 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun bm!7615 () Bool)

(declare-fun call!7617 () List!1514)

(assert (=> bm!7615 (= call!7619 call!7617)))

(declare-fun d!20155 () Bool)

(assert (=> d!20155 e!53192))

(declare-fun res!42371 () Bool)

(assert (=> d!20155 (=> (not res!42371) (not e!53192))))

(assert (=> d!20155 (= res!42371 (isStrictlySorted!291 lt!38088))))

(declare-fun e!53190 () List!1514)

(assert (=> d!20155 (= lt!38088 e!53190)))

(assert (=> d!20155 (= c!12865 (and ((_ is Cons!1510) (toList!734 lt!37071)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20155 (isStrictlySorted!291 (toList!734 lt!37071))))

(assert (=> d!20155 (= (insertStrictlySorted!59 (toList!734 lt!37071) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38088)))

(declare-fun b!81516 () Bool)

(declare-fun c!12862 () Bool)

(assert (=> b!81516 (= c!12862 (and ((_ is Cons!1510) (toList!734 lt!37071)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun e!53189 () List!1514)

(assert (=> b!81516 (= e!53189 e!53191)))

(declare-fun b!81517 () Bool)

(assert (=> b!81517 (= e!53189 call!7617)))

(declare-fun b!81518 () Bool)

(assert (=> b!81518 (= e!53190 call!7618)))

(declare-fun bm!7616 () Bool)

(assert (=> bm!7616 (= call!7617 call!7618)))

(declare-fun b!81519 () Bool)

(declare-fun res!42370 () Bool)

(assert (=> b!81519 (=> (not res!42370) (not e!53192))))

(assert (=> b!81519 (= res!42370 (containsKey!140 lt!38088 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81520 () Bool)

(assert (=> b!81520 (= e!53191 call!7619)))

(declare-fun b!81521 () Bool)

(declare-fun c!12864 () Bool)

(assert (=> b!81521 (= e!53188 (ite c!12864 (t!5172 (toList!734 lt!37071)) (ite c!12862 (Cons!1510 (h!2099 (toList!734 lt!37071)) (t!5172 (toList!734 lt!37071))) Nil!1511)))))

(declare-fun b!81522 () Bool)

(assert (=> b!81522 (= e!53190 e!53189)))

(assert (=> b!81522 (= c!12864 (and ((_ is Cons!1510) (toList!734 lt!37071)) (= (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!81523 () Bool)

(assert (=> b!81523 (= e!53188 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37071)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (= (and d!20155 c!12865) b!81518))

(assert (= (and d!20155 (not c!12865)) b!81522))

(assert (= (and b!81522 c!12864) b!81517))

(assert (= (and b!81522 (not c!12864)) b!81516))

(assert (= (and b!81516 c!12862) b!81520))

(assert (= (and b!81516 (not c!12862)) b!81514))

(assert (= (or b!81520 b!81514) bm!7615))

(assert (= (or b!81517 bm!7615) bm!7616))

(assert (= (or b!81518 bm!7616) bm!7614))

(assert (= (and bm!7614 c!12863) b!81523))

(assert (= (and bm!7614 (not c!12863)) b!81521))

(assert (= (and d!20155 res!42371) b!81519))

(assert (= (and b!81519 res!42370) b!81515))

(declare-fun m!83635 () Bool)

(assert (=> d!20155 m!83635))

(assert (=> d!20155 m!82403))

(declare-fun m!83637 () Bool)

(assert (=> b!81523 m!83637))

(declare-fun m!83639 () Bool)

(assert (=> bm!7614 m!83639))

(declare-fun m!83641 () Bool)

(assert (=> b!81519 m!83641))

(declare-fun m!83643 () Bool)

(assert (=> b!81515 m!83643))

(assert (=> d!19795 d!20155))

(declare-fun d!20157 () Bool)

(declare-fun e!53193 () Bool)

(assert (=> d!20157 e!53193))

(declare-fun res!42372 () Bool)

(assert (=> d!20157 (=> res!42372 e!53193)))

(declare-fun lt!38092 () Bool)

(assert (=> d!20157 (= res!42372 (not lt!38092))))

(declare-fun lt!38091 () Bool)

(assert (=> d!20157 (= lt!38092 lt!38091)))

(declare-fun lt!38090 () Unit!2327)

(declare-fun e!53194 () Unit!2327)

(assert (=> d!20157 (= lt!38090 e!53194)))

(declare-fun c!12866 () Bool)

(assert (=> d!20157 (= c!12866 lt!38091)))

(assert (=> d!20157 (= lt!38091 (containsKey!140 (toList!734 (getCurrentListMap!423 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))

(assert (=> d!20157 (= (contains!742 (getCurrentListMap!423 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))) lt!38092)))

(declare-fun b!81524 () Bool)

(declare-fun lt!38089 () Unit!2327)

(assert (=> b!81524 (= e!53194 lt!38089)))

(assert (=> b!81524 (= lt!38089 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (getCurrentListMap!423 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))

(assert (=> b!81524 (isDefined!90 (getValueByKey!136 (toList!734 (getCurrentListMap!423 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277))))))

(declare-fun b!81525 () Bool)

(declare-fun Unit!2385 () Unit!2327)

(assert (=> b!81525 (= e!53194 Unit!2385)))

(declare-fun b!81526 () Bool)

(assert (=> b!81526 (= e!53193 (isDefined!90 (getValueByKey!136 (toList!734 (getCurrentListMap!423 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277)))))))

(assert (= (and d!20157 c!12866) b!81524))

(assert (= (and d!20157 (not c!12866)) b!81525))

(assert (= (and d!20157 (not res!42372)) b!81526))

(assert (=> d!20157 m!81543))

(declare-fun m!83645 () Bool)

(assert (=> d!20157 m!83645))

(assert (=> b!81524 m!81543))

(declare-fun m!83647 () Bool)

(assert (=> b!81524 m!83647))

(assert (=> b!81524 m!81543))

(declare-fun m!83649 () Bool)

(assert (=> b!81524 m!83649))

(assert (=> b!81524 m!83649))

(declare-fun m!83651 () Bool)

(assert (=> b!81524 m!83651))

(assert (=> b!81526 m!81543))

(assert (=> b!81526 m!83649))

(assert (=> b!81526 m!83649))

(assert (=> b!81526 m!83651))

(assert (=> b!80640 d!20157))

(declare-fun b!81527 () Bool)

(declare-fun e!53202 () Bool)

(assert (=> b!81527 (= e!53202 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81528 () Bool)

(declare-fun e!53195 () Unit!2327)

(declare-fun lt!38098 () Unit!2327)

(assert (=> b!81528 (= e!53195 lt!38098)))

(declare-fun lt!38106 () ListLongMap!1437)

(assert (=> b!81528 (= lt!38106 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38101 () (_ BitVec 64))

(assert (=> b!81528 (= lt!38101 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38094 () (_ BitVec 64))

(assert (=> b!81528 (= lt!38094 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38110 () Unit!2327)

(assert (=> b!81528 (= lt!38110 (addStillContains!56 lt!38106 lt!38101 (zeroValue!2188 newMap!16) lt!38094))))

(assert (=> b!81528 (contains!742 (+!104 lt!38106 (tuple2!2183 lt!38101 (zeroValue!2188 newMap!16))) lt!38094)))

(declare-fun lt!38113 () Unit!2327)

(assert (=> b!81528 (= lt!38113 lt!38110)))

(declare-fun lt!38102 () ListLongMap!1437)

(assert (=> b!81528 (= lt!38102 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38093 () (_ BitVec 64))

(assert (=> b!81528 (= lt!38093 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38114 () (_ BitVec 64))

(assert (=> b!81528 (= lt!38114 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38100 () Unit!2327)

(assert (=> b!81528 (= lt!38100 (addApplyDifferent!56 lt!38102 lt!38093 (minValue!2188 newMap!16) lt!38114))))

(assert (=> b!81528 (= (apply!80 (+!104 lt!38102 (tuple2!2183 lt!38093 (minValue!2188 newMap!16))) lt!38114) (apply!80 lt!38102 lt!38114))))

(declare-fun lt!38111 () Unit!2327)

(assert (=> b!81528 (= lt!38111 lt!38100)))

(declare-fun lt!38097 () ListLongMap!1437)

(assert (=> b!81528 (= lt!38097 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38104 () (_ BitVec 64))

(assert (=> b!81528 (= lt!38104 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38103 () (_ BitVec 64))

(assert (=> b!81528 (= lt!38103 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38112 () Unit!2327)

(assert (=> b!81528 (= lt!38112 (addApplyDifferent!56 lt!38097 lt!38104 (zeroValue!2188 newMap!16) lt!38103))))

(assert (=> b!81528 (= (apply!80 (+!104 lt!38097 (tuple2!2183 lt!38104 (zeroValue!2188 newMap!16))) lt!38103) (apply!80 lt!38097 lt!38103))))

(declare-fun lt!38109 () Unit!2327)

(assert (=> b!81528 (= lt!38109 lt!38112)))

(declare-fun lt!38107 () ListLongMap!1437)

(assert (=> b!81528 (= lt!38107 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38108 () (_ BitVec 64))

(assert (=> b!81528 (= lt!38108 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38105 () (_ BitVec 64))

(assert (=> b!81528 (= lt!38105 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81528 (= lt!38098 (addApplyDifferent!56 lt!38107 lt!38108 (minValue!2188 newMap!16) lt!38105))))

(assert (=> b!81528 (= (apply!80 (+!104 lt!38107 (tuple2!2183 lt!38108 (minValue!2188 newMap!16))) lt!38105) (apply!80 lt!38107 lt!38105))))

(declare-fun b!81529 () Bool)

(declare-fun e!53201 () ListLongMap!1437)

(declare-fun call!7622 () ListLongMap!1437)

(assert (=> b!81529 (= e!53201 call!7622)))

(declare-fun bm!7617 () Bool)

(declare-fun call!7621 () ListLongMap!1437)

(declare-fun call!7620 () ListLongMap!1437)

(assert (=> bm!7617 (= call!7621 call!7620)))

(declare-fun bm!7618 () Bool)

(declare-fun call!7624 () Bool)

(declare-fun lt!38095 () ListLongMap!1437)

(assert (=> bm!7618 (= call!7624 (contains!742 lt!38095 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81530 () Bool)

(declare-fun e!53199 () Bool)

(declare-fun call!7626 () Bool)

(assert (=> b!81530 (= e!53199 (not call!7626))))

(declare-fun b!81531 () Bool)

(declare-fun e!53204 () Bool)

(assert (=> b!81531 (= e!53204 (not call!7624))))

(declare-fun b!81532 () Bool)

(declare-fun e!53198 () ListLongMap!1437)

(declare-fun call!7625 () ListLongMap!1437)

(assert (=> b!81532 (= e!53198 (+!104 call!7625 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun d!20159 () Bool)

(declare-fun e!53206 () Bool)

(assert (=> d!20159 e!53206))

(declare-fun res!42377 () Bool)

(assert (=> d!20159 (=> (not res!42377) (not e!53206))))

(assert (=> d!20159 (= res!42377 (or (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))))

(declare-fun lt!38099 () ListLongMap!1437)

(assert (=> d!20159 (= lt!38095 lt!38099)))

(declare-fun lt!38096 () Unit!2327)

(assert (=> d!20159 (= lt!38096 e!53195)))

(declare-fun c!12868 () Bool)

(assert (=> d!20159 (= c!12868 e!53202)))

(declare-fun res!42374 () Bool)

(assert (=> d!20159 (=> (not res!42374) (not e!53202))))

(assert (=> d!20159 (= res!42374 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!20159 (= lt!38099 e!53198)))

(declare-fun c!12870 () Bool)

(assert (=> d!20159 (= c!12870 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20159 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!20159 (= (getCurrentListMap!423 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38095)))

(declare-fun bm!7619 () Bool)

(assert (=> bm!7619 (= call!7626 (contains!742 lt!38095 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7620 () Bool)

(assert (=> bm!7620 (= call!7622 call!7621)))

(declare-fun e!53205 () Bool)

(declare-fun b!81533 () Bool)

(assert (=> b!81533 (= e!53205 (= (apply!80 lt!38095 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 lt!37263) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81533 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 lt!37263)))))

(assert (=> b!81533 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81534 () Bool)

(declare-fun res!42375 () Bool)

(assert (=> b!81534 (=> (not res!42375) (not e!53206))))

(declare-fun e!53197 () Bool)

(assert (=> b!81534 (= res!42375 e!53197)))

(declare-fun res!42378 () Bool)

(assert (=> b!81534 (=> res!42378 e!53197)))

(declare-fun e!53207 () Bool)

(assert (=> b!81534 (= res!42378 (not e!53207))))

(declare-fun res!42373 () Bool)

(assert (=> b!81534 (=> (not res!42373) (not e!53207))))

(assert (=> b!81534 (= res!42373 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81535 () Bool)

(declare-fun e!53200 () Bool)

(assert (=> b!81535 (= e!53200 (= (apply!80 lt!38095 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun b!81536 () Bool)

(assert (=> b!81536 (= e!53207 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7621 () Bool)

(declare-fun call!7623 () ListLongMap!1437)

(assert (=> bm!7621 (= call!7623 call!7625)))

(declare-fun b!81537 () Bool)

(assert (=> b!81537 (= e!53204 e!53200)))

(declare-fun res!42381 () Bool)

(assert (=> b!81537 (= res!42381 call!7624)))

(assert (=> b!81537 (=> (not res!42381) (not e!53200))))

(declare-fun b!81538 () Bool)

(assert (=> b!81538 (= e!53201 call!7623)))

(declare-fun b!81539 () Bool)

(assert (=> b!81539 (= e!53206 e!53204)))

(declare-fun c!12867 () Bool)

(assert (=> b!81539 (= c!12867 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81540 () Bool)

(assert (=> b!81540 (= e!53197 e!53205)))

(declare-fun res!42376 () Bool)

(assert (=> b!81540 (=> (not res!42376) (not e!53205))))

(assert (=> b!81540 (= res!42376 (contains!742 lt!38095 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81540 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81541 () Bool)

(declare-fun res!42379 () Bool)

(assert (=> b!81541 (=> (not res!42379) (not e!53206))))

(assert (=> b!81541 (= res!42379 e!53199)))

(declare-fun c!12871 () Bool)

(assert (=> b!81541 (= c!12871 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81542 () Bool)

(declare-fun e!53196 () ListLongMap!1437)

(assert (=> b!81542 (= e!53196 call!7623)))

(declare-fun b!81543 () Bool)

(declare-fun c!12869 () Bool)

(assert (=> b!81543 (= c!12869 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!81543 (= e!53196 e!53201)))

(declare-fun bm!7622 () Bool)

(declare-fun c!12872 () Bool)

(assert (=> bm!7622 (= call!7625 (+!104 (ite c!12870 call!7620 (ite c!12872 call!7621 call!7622)) (ite (or c!12870 c!12872) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7623 () Bool)

(assert (=> bm!7623 (= call!7620 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!81544 () Bool)

(declare-fun e!53203 () Bool)

(assert (=> b!81544 (= e!53199 e!53203)))

(declare-fun res!42380 () Bool)

(assert (=> b!81544 (= res!42380 call!7626)))

(assert (=> b!81544 (=> (not res!42380) (not e!53203))))

(declare-fun b!81545 () Bool)

(assert (=> b!81545 (= e!53198 e!53196)))

(assert (=> b!81545 (= c!12872 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81546 () Bool)

(assert (=> b!81546 (= e!53203 (= (apply!80 lt!38095 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!81547 () Bool)

(declare-fun Unit!2386 () Unit!2327)

(assert (=> b!81547 (= e!53195 Unit!2386)))

(assert (= (and d!20159 c!12870) b!81532))

(assert (= (and d!20159 (not c!12870)) b!81545))

(assert (= (and b!81545 c!12872) b!81542))

(assert (= (and b!81545 (not c!12872)) b!81543))

(assert (= (and b!81543 c!12869) b!81538))

(assert (= (and b!81543 (not c!12869)) b!81529))

(assert (= (or b!81538 b!81529) bm!7620))

(assert (= (or b!81542 bm!7620) bm!7617))

(assert (= (or b!81542 b!81538) bm!7621))

(assert (= (or b!81532 bm!7617) bm!7623))

(assert (= (or b!81532 bm!7621) bm!7622))

(assert (= (and d!20159 res!42374) b!81527))

(assert (= (and d!20159 c!12868) b!81528))

(assert (= (and d!20159 (not c!12868)) b!81547))

(assert (= (and d!20159 res!42377) b!81534))

(assert (= (and b!81534 res!42373) b!81536))

(assert (= (and b!81534 (not res!42378)) b!81540))

(assert (= (and b!81540 res!42376) b!81533))

(assert (= (and b!81534 res!42375) b!81541))

(assert (= (and b!81541 c!12871) b!81544))

(assert (= (and b!81541 (not c!12871)) b!81530))

(assert (= (and b!81544 res!42380) b!81546))

(assert (= (or b!81544 b!81530) bm!7619))

(assert (= (and b!81541 res!42379) b!81539))

(assert (= (and b!81539 c!12867) b!81537))

(assert (= (and b!81539 (not c!12867)) b!81531))

(assert (= (and b!81537 res!42381) b!81535))

(assert (= (or b!81537 b!81531) bm!7618))

(declare-fun b_lambda!3623 () Bool)

(assert (=> (not b_lambda!3623) (not b!81533)))

(assert (=> b!81533 t!5186))

(declare-fun b_and!4961 () Bool)

(assert (= b_and!4957 (and (=> t!5186 result!2849) b_and!4961)))

(assert (=> b!81533 t!5188))

(declare-fun b_and!4963 () Bool)

(assert (= b_and!4959 (and (=> t!5188 result!2851) b_and!4963)))

(assert (=> b!81533 m!82131))

(declare-fun m!83653 () Bool)

(assert (=> b!81533 m!83653))

(assert (=> b!81533 m!82131))

(declare-fun m!83655 () Bool)

(assert (=> b!81533 m!83655))

(assert (=> b!81533 m!83655))

(assert (=> b!81533 m!82137))

(declare-fun m!83657 () Bool)

(assert (=> b!81533 m!83657))

(assert (=> b!81533 m!82137))

(declare-fun m!83659 () Bool)

(assert (=> bm!7619 m!83659))

(assert (=> b!81536 m!82131))

(assert (=> b!81536 m!82131))

(assert (=> b!81536 m!82143))

(declare-fun m!83661 () Bool)

(assert (=> b!81528 m!83661))

(declare-fun m!83663 () Bool)

(assert (=> b!81528 m!83663))

(declare-fun m!83665 () Bool)

(assert (=> b!81528 m!83665))

(declare-fun m!83667 () Bool)

(assert (=> b!81528 m!83667))

(declare-fun m!83669 () Bool)

(assert (=> b!81528 m!83669))

(declare-fun m!83671 () Bool)

(assert (=> b!81528 m!83671))

(declare-fun m!83673 () Bool)

(assert (=> b!81528 m!83673))

(declare-fun m!83675 () Bool)

(assert (=> b!81528 m!83675))

(declare-fun m!83677 () Bool)

(assert (=> b!81528 m!83677))

(declare-fun m!83679 () Bool)

(assert (=> b!81528 m!83679))

(declare-fun m!83681 () Bool)

(assert (=> b!81528 m!83681))

(declare-fun m!83683 () Bool)

(assert (=> b!81528 m!83683))

(declare-fun m!83685 () Bool)

(assert (=> b!81528 m!83685))

(assert (=> b!81528 m!83667))

(assert (=> b!81528 m!83677))

(assert (=> b!81528 m!82131))

(declare-fun m!83687 () Bool)

(assert (=> b!81528 m!83687))

(assert (=> b!81528 m!83671))

(declare-fun m!83689 () Bool)

(assert (=> b!81528 m!83689))

(assert (=> b!81528 m!83683))

(declare-fun m!83691 () Bool)

(assert (=> b!81528 m!83691))

(assert (=> b!81540 m!82131))

(assert (=> b!81540 m!82131))

(declare-fun m!83693 () Bool)

(assert (=> b!81540 m!83693))

(declare-fun m!83695 () Bool)

(assert (=> b!81532 m!83695))

(declare-fun m!83697 () Bool)

(assert (=> bm!7618 m!83697))

(declare-fun m!83699 () Bool)

(assert (=> b!81535 m!83699))

(assert (=> bm!7623 m!83663))

(declare-fun m!83701 () Bool)

(assert (=> bm!7622 m!83701))

(declare-fun m!83703 () Bool)

(assert (=> b!81546 m!83703))

(assert (=> b!81527 m!82131))

(assert (=> b!81527 m!82131))

(assert (=> b!81527 m!82143))

(assert (=> d!20159 m!81973))

(assert (=> b!80640 d!20159))

(declare-fun b!81551 () Bool)

(declare-fun e!53209 () Option!142)

(assert (=> b!81551 (= e!53209 None!140)))

(declare-fun b!81548 () Bool)

(declare-fun e!53208 () Option!142)

(assert (=> b!81548 (= e!53208 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37743)))))))

(declare-fun b!81550 () Bool)

(assert (=> b!81550 (= e!53209 (getValueByKey!136 (t!5172 (toList!734 lt!37743)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20161 () Bool)

(declare-fun c!12873 () Bool)

(assert (=> d!20161 (= c!12873 (and ((_ is Cons!1510) (toList!734 lt!37743)) (= (_1!1102 (h!2099 (toList!734 lt!37743))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20161 (= (getValueByKey!136 (toList!734 lt!37743) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53208)))

(declare-fun b!81549 () Bool)

(assert (=> b!81549 (= e!53208 e!53209)))

(declare-fun c!12874 () Bool)

(assert (=> b!81549 (= c!12874 (and ((_ is Cons!1510) (toList!734 lt!37743)) (not (= (_1!1102 (h!2099 (toList!734 lt!37743))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20161 c!12873) b!81548))

(assert (= (and d!20161 (not c!12873)) b!81549))

(assert (= (and b!81549 c!12874) b!81550))

(assert (= (and b!81549 (not c!12874)) b!81551))

(declare-fun m!83705 () Bool)

(assert (=> b!81550 m!83705))

(assert (=> b!80886 d!20161))

(declare-fun d!20163 () Bool)

(assert (=> d!20163 (= ($colon$colon!69 e!52624 (ite c!12608 (h!2099 (toList!734 lt!37073)) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079)))) (Cons!1510 (ite c!12608 (h!2099 (toList!734 lt!37073)) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))) e!52624))))

(assert (=> bm!7486 d!20163))

(declare-fun d!20165 () Bool)

(assert (=> d!20165 (= ($colon$colon!69 e!52887 (ite c!12728 (h!2099 (toList!734 lt!37071)) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082)))) (Cons!1510 (ite c!12728 (h!2099 (toList!734 lt!37071)) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))) e!52887))))

(assert (=> bm!7550 d!20165))

(declare-fun d!20167 () Bool)

(declare-fun lt!38115 () (_ BitVec 32))

(assert (=> d!20167 (and (bvsge lt!38115 #b00000000000000000000000000000000) (bvsle lt!38115 (bvsub (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!53211 () (_ BitVec 32))

(assert (=> d!20167 (= lt!38115 e!53211)))

(declare-fun c!12876 () Bool)

(assert (=> d!20167 (= c!12876 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> d!20167 (and (bvsle #b00000000000000000000000000000000 (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> d!20167 (= (arrayCountValidKeys!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000000 (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))) lt!38115)))

(declare-fun bm!7624 () Bool)

(declare-fun call!7627 () (_ BitVec 32))

(assert (=> bm!7624 (= call!7627 (arrayCountValidKeys!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!81552 () Bool)

(declare-fun e!53210 () (_ BitVec 32))

(assert (=> b!81552 (= e!53211 e!53210)))

(declare-fun c!12875 () Bool)

(assert (=> b!81552 (= c!12875 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!81553 () Bool)

(assert (=> b!81553 (= e!53210 call!7627)))

(declare-fun b!81554 () Bool)

(assert (=> b!81554 (= e!53210 (bvadd #b00000000000000000000000000000001 call!7627))))

(declare-fun b!81555 () Bool)

(assert (=> b!81555 (= e!53211 #b00000000000000000000000000000000)))

(assert (= (and d!20167 c!12876) b!81555))

(assert (= (and d!20167 (not c!12876)) b!81552))

(assert (= (and b!81552 c!12875) b!81554))

(assert (= (and b!81552 (not c!12875)) b!81553))

(assert (= (or b!81554 b!81553) bm!7624))

(declare-fun m!83707 () Bool)

(assert (=> bm!7624 m!83707))

(declare-fun m!83709 () Bool)

(assert (=> b!81552 m!83709))

(assert (=> b!81552 m!83709))

(declare-fun m!83711 () Bool)

(assert (=> b!81552 m!83711))

(assert (=> b!80646 d!20167))

(declare-fun d!20169 () Bool)

(assert (=> d!20169 (= ($colon$colon!69 e!52794 (ite c!12684 (h!2099 (toList!734 lt!37081)) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079)))) (Cons!1510 (ite c!12684 (h!2099 (toList!734 lt!37081)) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))) e!52794))))

(assert (=> bm!7531 d!20169))

(declare-fun d!20171 () Bool)

(declare-fun c!12877 () Bool)

(assert (=> d!20171 (= c!12877 ((_ is ValueCellFull!914) (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!53212 () V!3001)

(assert (=> d!20171 (= (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53212)))

(declare-fun b!81556 () Bool)

(assert (=> b!81556 (= e!53212 (get!1185 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81557 () Bool)

(assert (=> b!81557 (= e!53212 (get!1186 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20171 c!12877) b!81556))

(assert (= (and d!20171 (not c!12877)) b!81557))

(assert (=> b!81556 m!82193))

(assert (=> b!81556 m!81299))

(declare-fun m!83713 () Bool)

(assert (=> b!81556 m!83713))

(assert (=> b!81557 m!82193))

(assert (=> b!81557 m!81299))

(declare-fun m!83715 () Bool)

(assert (=> b!81557 m!83715))

(assert (=> b!80724 d!20171))

(declare-fun d!20173 () Bool)

(declare-fun e!53213 () Bool)

(assert (=> d!20173 e!53213))

(declare-fun res!42383 () Bool)

(assert (=> d!20173 (=> (not res!42383) (not e!53213))))

(declare-fun lt!38119 () ListLongMap!1437)

(assert (=> d!20173 (= res!42383 (contains!742 lt!38119 (_1!1102 (tuple2!2183 lt!37635 lt!37636))))))

(declare-fun lt!38118 () List!1514)

(assert (=> d!20173 (= lt!38119 (ListLongMap!1438 lt!38118))))

(declare-fun lt!38117 () Unit!2327)

(declare-fun lt!38116 () Unit!2327)

(assert (=> d!20173 (= lt!38117 lt!38116)))

(assert (=> d!20173 (= (getValueByKey!136 lt!38118 (_1!1102 (tuple2!2183 lt!37635 lt!37636))) (Some!141 (_2!1102 (tuple2!2183 lt!37635 lt!37636))))))

(assert (=> d!20173 (= lt!38116 (lemmaContainsTupThenGetReturnValue!56 lt!38118 (_1!1102 (tuple2!2183 lt!37635 lt!37636)) (_2!1102 (tuple2!2183 lt!37635 lt!37636))))))

(assert (=> d!20173 (= lt!38118 (insertStrictlySorted!59 (toList!734 lt!37634) (_1!1102 (tuple2!2183 lt!37635 lt!37636)) (_2!1102 (tuple2!2183 lt!37635 lt!37636))))))

(assert (=> d!20173 (= (+!104 lt!37634 (tuple2!2183 lt!37635 lt!37636)) lt!38119)))

(declare-fun b!81558 () Bool)

(declare-fun res!42382 () Bool)

(assert (=> b!81558 (=> (not res!42382) (not e!53213))))

(assert (=> b!81558 (= res!42382 (= (getValueByKey!136 (toList!734 lt!38119) (_1!1102 (tuple2!2183 lt!37635 lt!37636))) (Some!141 (_2!1102 (tuple2!2183 lt!37635 lt!37636)))))))

(declare-fun b!81559 () Bool)

(assert (=> b!81559 (= e!53213 (contains!745 (toList!734 lt!38119) (tuple2!2183 lt!37635 lt!37636)))))

(assert (= (and d!20173 res!42383) b!81558))

(assert (= (and b!81558 res!42382) b!81559))

(declare-fun m!83717 () Bool)

(assert (=> d!20173 m!83717))

(declare-fun m!83719 () Bool)

(assert (=> d!20173 m!83719))

(declare-fun m!83721 () Bool)

(assert (=> d!20173 m!83721))

(declare-fun m!83723 () Bool)

(assert (=> d!20173 m!83723))

(declare-fun m!83725 () Bool)

(assert (=> b!81558 m!83725))

(declare-fun m!83727 () Bool)

(assert (=> b!81559 m!83727))

(assert (=> b!80724 d!20173))

(declare-fun d!20175 () Bool)

(declare-fun e!53214 () Bool)

(assert (=> d!20175 e!53214))

(declare-fun res!42384 () Bool)

(assert (=> d!20175 (=> res!42384 e!53214)))

(declare-fun lt!38123 () Bool)

(assert (=> d!20175 (= res!42384 (not lt!38123))))

(declare-fun lt!38122 () Bool)

(assert (=> d!20175 (= lt!38123 lt!38122)))

(declare-fun lt!38121 () Unit!2327)

(declare-fun e!53215 () Unit!2327)

(assert (=> d!20175 (= lt!38121 e!53215)))

(declare-fun c!12878 () Bool)

(assert (=> d!20175 (= c!12878 lt!38122)))

(assert (=> d!20175 (= lt!38122 (containsKey!140 (toList!734 (+!104 lt!37634 (tuple2!2183 lt!37635 lt!37636))) lt!37632))))

(assert (=> d!20175 (= (contains!742 (+!104 lt!37634 (tuple2!2183 lt!37635 lt!37636)) lt!37632) lt!38123)))

(declare-fun b!81560 () Bool)

(declare-fun lt!38120 () Unit!2327)

(assert (=> b!81560 (= e!53215 lt!38120)))

(assert (=> b!81560 (= lt!38120 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (+!104 lt!37634 (tuple2!2183 lt!37635 lt!37636))) lt!37632))))

(assert (=> b!81560 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37634 (tuple2!2183 lt!37635 lt!37636))) lt!37632))))

(declare-fun b!81561 () Bool)

(declare-fun Unit!2387 () Unit!2327)

(assert (=> b!81561 (= e!53215 Unit!2387)))

(declare-fun b!81562 () Bool)

(assert (=> b!81562 (= e!53214 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37634 (tuple2!2183 lt!37635 lt!37636))) lt!37632)))))

(assert (= (and d!20175 c!12878) b!81560))

(assert (= (and d!20175 (not c!12878)) b!81561))

(assert (= (and d!20175 (not res!42384)) b!81562))

(declare-fun m!83729 () Bool)

(assert (=> d!20175 m!83729))

(declare-fun m!83731 () Bool)

(assert (=> b!81560 m!83731))

(declare-fun m!83733 () Bool)

(assert (=> b!81560 m!83733))

(assert (=> b!81560 m!83733))

(declare-fun m!83735 () Bool)

(assert (=> b!81560 m!83735))

(assert (=> b!81562 m!83733))

(assert (=> b!81562 m!83733))

(assert (=> b!81562 m!83735))

(assert (=> b!80724 d!20175))

(declare-fun d!20177 () Bool)

(assert (=> d!20177 (not (contains!742 (+!104 lt!37634 (tuple2!2183 lt!37635 lt!37636)) lt!37632))))

(declare-fun lt!38124 () Unit!2327)

(assert (=> d!20177 (= lt!38124 (choose!483 lt!37634 lt!37635 lt!37636 lt!37632))))

(declare-fun e!53216 () Bool)

(assert (=> d!20177 e!53216))

(declare-fun res!42385 () Bool)

(assert (=> d!20177 (=> (not res!42385) (not e!53216))))

(assert (=> d!20177 (= res!42385 (not (contains!742 lt!37634 lt!37632)))))

(assert (=> d!20177 (= (addStillNotContains!30 lt!37634 lt!37635 lt!37636 lt!37632) lt!38124)))

(declare-fun b!81563 () Bool)

(assert (=> b!81563 (= e!53216 (not (= lt!37635 lt!37632)))))

(assert (= (and d!20177 res!42385) b!81563))

(assert (=> d!20177 m!82189))

(assert (=> d!20177 m!82189))

(assert (=> d!20177 m!82199))

(declare-fun m!83737 () Bool)

(assert (=> d!20177 m!83737))

(declare-fun m!83739 () Bool)

(assert (=> d!20177 m!83739))

(assert (=> b!80724 d!20177))

(declare-fun d!20179 () Bool)

(declare-fun e!53217 () Bool)

(assert (=> d!20179 e!53217))

(declare-fun res!42387 () Bool)

(assert (=> d!20179 (=> (not res!42387) (not e!53217))))

(declare-fun lt!38128 () ListLongMap!1437)

(assert (=> d!20179 (= res!42387 (contains!742 lt!38128 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!38127 () List!1514)

(assert (=> d!20179 (= lt!38128 (ListLongMap!1438 lt!38127))))

(declare-fun lt!38126 () Unit!2327)

(declare-fun lt!38125 () Unit!2327)

(assert (=> d!20179 (= lt!38126 lt!38125)))

(assert (=> d!20179 (= (getValueByKey!136 lt!38127 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20179 (= lt!38125 (lemmaContainsTupThenGetReturnValue!56 lt!38127 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20179 (= lt!38127 (insertStrictlySorted!59 (toList!734 call!7512) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20179 (= (+!104 call!7512 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!38128)))

(declare-fun b!81564 () Bool)

(declare-fun res!42386 () Bool)

(assert (=> b!81564 (=> (not res!42386) (not e!53217))))

(assert (=> b!81564 (= res!42386 (= (getValueByKey!136 (toList!734 lt!38128) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!81565 () Bool)

(assert (=> b!81565 (= e!53217 (contains!745 (toList!734 lt!38128) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!20179 res!42387) b!81564))

(assert (= (and b!81564 res!42386) b!81565))

(declare-fun m!83741 () Bool)

(assert (=> d!20179 m!83741))

(declare-fun m!83743 () Bool)

(assert (=> d!20179 m!83743))

(declare-fun m!83745 () Bool)

(assert (=> d!20179 m!83745))

(declare-fun m!83747 () Bool)

(assert (=> d!20179 m!83747))

(declare-fun m!83749 () Bool)

(assert (=> b!81564 m!83749))

(declare-fun m!83751 () Bool)

(assert (=> b!81565 m!83751))

(assert (=> b!80724 d!20179))

(declare-fun d!20181 () Bool)

(assert (=> d!20181 (= (apply!80 lt!37682 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1187 (getValueByKey!136 (toList!734 lt!37682) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3444 () Bool)

(assert (= bs!3444 d!20181))

(assert (=> bs!3444 m!83545))

(assert (=> bs!3444 m!83545))

(declare-fun m!83753 () Bool)

(assert (=> bs!3444 m!83753))

(assert (=> b!80799 d!20181))

(declare-fun d!20183 () Bool)

(assert (=> d!20183 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3445 () Bool)

(assert (= bs!3445 d!20183))

(assert (=> bs!3445 m!82269))

(declare-fun m!83755 () Bool)

(assert (=> bs!3445 m!83755))

(assert (=> b!81020 d!20183))

(assert (=> b!81020 d!20131))

(declare-fun b!81569 () Bool)

(declare-fun e!53219 () Option!142)

(assert (=> b!81569 (= e!53219 None!140)))

(declare-fun b!81566 () Bool)

(declare-fun e!53218 () Option!142)

(assert (=> b!81566 (= e!53218 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37471)))))))

(declare-fun b!81568 () Bool)

(assert (=> b!81568 (= e!53219 (getValueByKey!136 (t!5172 (toList!734 lt!37471)) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun c!12879 () Bool)

(declare-fun d!20185 () Bool)

(assert (=> d!20185 (= c!12879 (and ((_ is Cons!1510) (toList!734 lt!37471)) (= (_1!1102 (h!2099 (toList!734 lt!37471))) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (=> d!20185 (= (getValueByKey!136 (toList!734 lt!37471) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) e!53218)))

(declare-fun b!81567 () Bool)

(assert (=> b!81567 (= e!53218 e!53219)))

(declare-fun c!12880 () Bool)

(assert (=> b!81567 (= c!12880 (and ((_ is Cons!1510) (toList!734 lt!37471)) (not (= (_1!1102 (h!2099 (toList!734 lt!37471))) (_1!1102 (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))))

(assert (= (and d!20185 c!12879) b!81566))

(assert (= (and d!20185 (not c!12879)) b!81567))

(assert (= (and b!81567 c!12880) b!81568))

(assert (= (and b!81567 (not c!12880)) b!81569))

(declare-fun m!83757 () Bool)

(assert (=> b!81568 m!83757))

(assert (=> b!80553 d!20185))

(declare-fun d!20187 () Bool)

(declare-fun res!42388 () Bool)

(declare-fun e!53220 () Bool)

(assert (=> d!20187 (=> res!42388 e!53220)))

(assert (=> d!20187 (= res!42388 (or ((_ is Nil!1511) lt!37483) ((_ is Nil!1511) (t!5172 lt!37483))))))

(assert (=> d!20187 (= (isStrictlySorted!291 lt!37483) e!53220)))

(declare-fun b!81570 () Bool)

(declare-fun e!53221 () Bool)

(assert (=> b!81570 (= e!53220 e!53221)))

(declare-fun res!42389 () Bool)

(assert (=> b!81570 (=> (not res!42389) (not e!53221))))

(assert (=> b!81570 (= res!42389 (bvslt (_1!1102 (h!2099 lt!37483)) (_1!1102 (h!2099 (t!5172 lt!37483)))))))

(declare-fun b!81571 () Bool)

(assert (=> b!81571 (= e!53221 (isStrictlySorted!291 (t!5172 lt!37483)))))

(assert (= (and d!20187 (not res!42388)) b!81570))

(assert (= (and b!81570 res!42389) b!81571))

(declare-fun m!83759 () Bool)

(assert (=> b!81571 m!83759))

(assert (=> d!19677 d!20187))

(declare-fun d!20189 () Bool)

(declare-fun res!42390 () Bool)

(declare-fun e!53222 () Bool)

(assert (=> d!20189 (=> res!42390 e!53222)))

(assert (=> d!20189 (= res!42390 (or ((_ is Nil!1511) (toList!734 lt!37073)) ((_ is Nil!1511) (t!5172 (toList!734 lt!37073)))))))

(assert (=> d!20189 (= (isStrictlySorted!291 (toList!734 lt!37073)) e!53222)))

(declare-fun b!81572 () Bool)

(declare-fun e!53223 () Bool)

(assert (=> b!81572 (= e!53222 e!53223)))

(declare-fun res!42391 () Bool)

(assert (=> b!81572 (=> (not res!42391) (not e!53223))))

(assert (=> b!81572 (= res!42391 (bvslt (_1!1102 (h!2099 (toList!734 lt!37073))) (_1!1102 (h!2099 (t!5172 (toList!734 lt!37073))))))))

(declare-fun b!81573 () Bool)

(assert (=> b!81573 (= e!53223 (isStrictlySorted!291 (t!5172 (toList!734 lt!37073))))))

(assert (= (and d!20189 (not res!42390)) b!81572))

(assert (= (and b!81572 res!42391) b!81573))

(assert (=> b!81573 m!83213))

(assert (=> d!19677 d!20189))

(declare-fun b!81577 () Bool)

(declare-fun e!53225 () Option!142)

(assert (=> b!81577 (= e!53225 None!140)))

(declare-fun b!81574 () Bool)

(declare-fun e!53224 () Option!142)

(assert (=> b!81574 (= e!53224 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37735)))))))

(declare-fun b!81576 () Bool)

(assert (=> b!81576 (= e!53225 (getValueByKey!136 (t!5172 (toList!734 lt!37735)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun c!12881 () Bool)

(declare-fun d!20191 () Bool)

(assert (=> d!20191 (= c!12881 (and ((_ is Cons!1510) (toList!734 lt!37735)) (= (_1!1102 (h!2099 (toList!734 lt!37735))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20191 (= (getValueByKey!136 (toList!734 lt!37735) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) e!53224)))

(declare-fun b!81575 () Bool)

(assert (=> b!81575 (= e!53224 e!53225)))

(declare-fun c!12882 () Bool)

(assert (=> b!81575 (= c!12882 (and ((_ is Cons!1510) (toList!734 lt!37735)) (not (= (_1!1102 (h!2099 (toList!734 lt!37735))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (= (and d!20191 c!12881) b!81574))

(assert (= (and d!20191 (not c!12881)) b!81575))

(assert (= (and b!81575 c!12882) b!81576))

(assert (= (and b!81575 (not c!12882)) b!81577))

(declare-fun m!83761 () Bool)

(assert (=> b!81576 m!83761))

(assert (=> b!80882 d!20191))

(declare-fun d!20193 () Bool)

(assert (=> d!20193 (= (apply!80 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37425) (apply!80 lt!37413 lt!37425))))

(assert (=> d!20193 true))

(declare-fun _$34!823 () Unit!2327)

(assert (=> d!20193 (= (choose!479 lt!37413 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37425) _$34!823)))

(declare-fun bs!3446 () Bool)

(assert (= bs!3446 d!20193))

(assert (=> bs!3446 m!81725))

(assert (=> bs!3446 m!81725))

(assert (=> bs!3446 m!81727))

(assert (=> bs!3446 m!81739))

(assert (=> d!19643 d!20193))

(assert (=> d!19643 d!19639))

(declare-fun d!20195 () Bool)

(declare-fun e!53226 () Bool)

(assert (=> d!20195 e!53226))

(declare-fun res!42392 () Bool)

(assert (=> d!20195 (=> res!42392 e!53226)))

(declare-fun lt!38132 () Bool)

(assert (=> d!20195 (= res!42392 (not lt!38132))))

(declare-fun lt!38131 () Bool)

(assert (=> d!20195 (= lt!38132 lt!38131)))

(declare-fun lt!38130 () Unit!2327)

(declare-fun e!53227 () Unit!2327)

(assert (=> d!20195 (= lt!38130 e!53227)))

(declare-fun c!12883 () Bool)

(assert (=> d!20195 (= c!12883 lt!38131)))

(assert (=> d!20195 (= lt!38131 (containsKey!140 (toList!734 lt!37413) lt!37425))))

(assert (=> d!20195 (= (contains!742 lt!37413 lt!37425) lt!38132)))

(declare-fun b!81579 () Bool)

(declare-fun lt!38129 () Unit!2327)

(assert (=> b!81579 (= e!53227 lt!38129)))

(assert (=> b!81579 (= lt!38129 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37413) lt!37425))))

(assert (=> b!81579 (isDefined!90 (getValueByKey!136 (toList!734 lt!37413) lt!37425))))

(declare-fun b!81580 () Bool)

(declare-fun Unit!2388 () Unit!2327)

(assert (=> b!81580 (= e!53227 Unit!2388)))

(declare-fun b!81581 () Bool)

(assert (=> b!81581 (= e!53226 (isDefined!90 (getValueByKey!136 (toList!734 lt!37413) lt!37425)))))

(assert (= (and d!20195 c!12883) b!81579))

(assert (= (and d!20195 (not c!12883)) b!81580))

(assert (= (and d!20195 (not res!42392)) b!81581))

(declare-fun m!83763 () Bool)

(assert (=> d!20195 m!83763))

(declare-fun m!83765 () Bool)

(assert (=> b!81579 m!83765))

(assert (=> b!81579 m!81831))

(assert (=> b!81579 m!81831))

(declare-fun m!83767 () Bool)

(assert (=> b!81579 m!83767))

(assert (=> b!81581 m!81831))

(assert (=> b!81581 m!81831))

(assert (=> b!81581 m!83767))

(assert (=> d!19643 d!20195))

(assert (=> d!19643 d!19659))

(assert (=> d!19643 d!19649))

(declare-fun d!20197 () Bool)

(declare-fun c!12884 () Bool)

(assert (=> d!20197 (= c!12884 ((_ is Nil!1511) (toList!734 lt!37342)))))

(declare-fun e!53228 () (InoxSet tuple2!2182))

(assert (=> d!20197 (= (content!86 (toList!734 lt!37342)) e!53228)))

(declare-fun b!81582 () Bool)

(assert (=> b!81582 (= e!53228 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!81583 () Bool)

(assert (=> b!81583 (= e!53228 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2099 (toList!734 lt!37342)) true) (content!86 (t!5172 (toList!734 lt!37342)))))))

(assert (= (and d!20197 c!12884) b!81582))

(assert (= (and d!20197 (not c!12884)) b!81583))

(declare-fun m!83769 () Bool)

(assert (=> b!81583 m!83769))

(declare-fun m!83771 () Bool)

(assert (=> b!81583 m!83771))

(assert (=> d!19777 d!20197))

(declare-fun d!20199 () Bool)

(declare-fun e!53229 () Bool)

(assert (=> d!20199 e!53229))

(declare-fun res!42393 () Bool)

(assert (=> d!20199 (=> res!42393 e!53229)))

(declare-fun lt!38136 () Bool)

(assert (=> d!20199 (= res!42393 (not lt!38136))))

(declare-fun lt!38135 () Bool)

(assert (=> d!20199 (= lt!38136 lt!38135)))

(declare-fun lt!38134 () Unit!2327)

(declare-fun e!53230 () Unit!2327)

(assert (=> d!20199 (= lt!38134 e!53230)))

(declare-fun c!12885 () Bool)

(assert (=> d!20199 (= c!12885 lt!38135)))

(assert (=> d!20199 (= lt!38135 (containsKey!140 (toList!734 lt!37769) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!20199 (= (contains!742 lt!37769 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) lt!38136)))

(declare-fun b!81584 () Bool)

(declare-fun lt!38133 () Unit!2327)

(assert (=> b!81584 (= e!53230 lt!38133)))

(assert (=> b!81584 (= lt!38133 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37769) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81584 (isDefined!90 (getValueByKey!136 (toList!734 lt!37769) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81585 () Bool)

(declare-fun Unit!2389 () Unit!2327)

(assert (=> b!81585 (= e!53230 Unit!2389)))

(declare-fun b!81586 () Bool)

(assert (=> b!81586 (= e!53229 (isDefined!90 (getValueByKey!136 (toList!734 lt!37769) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!20199 c!12885) b!81584))

(assert (= (and d!20199 (not c!12885)) b!81585))

(assert (= (and d!20199 (not res!42393)) b!81586))

(assert (=> d!20199 m!82131))

(declare-fun m!83773 () Bool)

(assert (=> d!20199 m!83773))

(assert (=> b!81584 m!82131))

(declare-fun m!83775 () Bool)

(assert (=> b!81584 m!83775))

(assert (=> b!81584 m!82131))

(declare-fun m!83777 () Bool)

(assert (=> b!81584 m!83777))

(assert (=> b!81584 m!83777))

(declare-fun m!83779 () Bool)

(assert (=> b!81584 m!83779))

(assert (=> b!81586 m!82131))

(assert (=> b!81586 m!83777))

(assert (=> b!81586 m!83777))

(assert (=> b!81586 m!83779))

(assert (=> b!80917 d!20199))

(declare-fun d!20201 () Bool)

(declare-fun res!42394 () Bool)

(declare-fun e!53231 () Bool)

(assert (=> d!20201 (=> res!42394 e!53231)))

(assert (=> d!20201 (= res!42394 (and ((_ is Cons!1510) (toList!734 lt!37406)) (= (_1!1102 (h!2099 (toList!734 lt!37406))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20201 (= (containsKey!140 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000) e!53231)))

(declare-fun b!81587 () Bool)

(declare-fun e!53232 () Bool)

(assert (=> b!81587 (= e!53231 e!53232)))

(declare-fun res!42395 () Bool)

(assert (=> b!81587 (=> (not res!42395) (not e!53232))))

(assert (=> b!81587 (= res!42395 (and (or (not ((_ is Cons!1510) (toList!734 lt!37406))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37406))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1510) (toList!734 lt!37406)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37406))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81588 () Bool)

(assert (=> b!81588 (= e!53232 (containsKey!140 (t!5172 (toList!734 lt!37406)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20201 (not res!42394)) b!81587))

(assert (= (and b!81587 res!42395) b!81588))

(declare-fun m!83781 () Bool)

(assert (=> b!81588 m!83781))

(assert (=> d!19763 d!20201))

(declare-fun d!20203 () Bool)

(assert (=> d!20203 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))) lt!37332))))

(declare-fun lt!38137 () Unit!2327)

(assert (=> d!20203 (= lt!38137 (choose!485 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))) lt!37332))))

(declare-fun e!53233 () Bool)

(assert (=> d!20203 e!53233))

(declare-fun res!42396 () Bool)

(assert (=> d!20203 (=> (not res!42396) (not e!53233))))

(assert (=> d!20203 (= res!42396 (isStrictlySorted!291 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)))))))

(assert (=> d!20203 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))) lt!37332) lt!38137)))

(declare-fun b!81589 () Bool)

(assert (=> b!81589 (= e!53233 (containsKey!140 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))) lt!37332))))

(assert (= (and d!20203 res!42396) b!81589))

(assert (=> d!20203 m!82243))

(assert (=> d!20203 m!82243))

(assert (=> d!20203 m!82245))

(declare-fun m!83783 () Bool)

(assert (=> d!20203 m!83783))

(declare-fun m!83785 () Bool)

(assert (=> d!20203 m!83785))

(assert (=> b!81589 m!82239))

(assert (=> b!80742 d!20203))

(declare-fun d!20205 () Bool)

(assert (=> d!20205 (= (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))) lt!37332)) (not (isEmpty!334 (getValueByKey!136 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))) lt!37332))))))

(declare-fun bs!3447 () Bool)

(assert (= bs!3447 d!20205))

(assert (=> bs!3447 m!82243))

(declare-fun m!83787 () Bool)

(assert (=> bs!3447 m!83787))

(assert (=> b!80742 d!20205))

(declare-fun b!81593 () Bool)

(declare-fun e!53235 () Option!142)

(assert (=> b!81593 (= e!53235 None!140)))

(declare-fun e!53234 () Option!142)

(declare-fun b!81590 () Bool)

(assert (=> b!81590 (= e!53234 (Some!141 (_2!1102 (h!2099 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)))))))))

(declare-fun b!81592 () Bool)

(assert (=> b!81592 (= e!53235 (getValueByKey!136 (t!5172 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)))) lt!37332))))

(declare-fun d!20207 () Bool)

(declare-fun c!12886 () Bool)

(assert (=> d!20207 (= c!12886 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)))) (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))))) lt!37332)))))

(assert (=> d!20207 (= (getValueByKey!136 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))) lt!37332) e!53234)))

(declare-fun b!81591 () Bool)

(assert (=> b!81591 (= e!53234 e!53235)))

(declare-fun c!12887 () Bool)

(assert (=> b!81591 (= c!12887 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)))) (not (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))))) lt!37332))))))

(assert (= (and d!20207 c!12886) b!81590))

(assert (= (and d!20207 (not c!12886)) b!81591))

(assert (= (and b!81591 c!12887) b!81592))

(assert (= (and b!81591 (not c!12887)) b!81593))

(declare-fun m!83789 () Bool)

(assert (=> b!81592 m!83789))

(assert (=> b!80742 d!20207))

(declare-fun d!20209 () Bool)

(assert (=> d!20209 (= (apply!80 lt!37660 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1187 (getValueByKey!136 (toList!734 lt!37660) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3448 () Bool)

(assert (= bs!3448 d!20209))

(declare-fun m!83791 () Bool)

(assert (=> bs!3448 m!83791))

(assert (=> bs!3448 m!83791))

(declare-fun m!83793 () Bool)

(assert (=> bs!3448 m!83793))

(assert (=> b!80773 d!20209))

(declare-fun d!20211 () Bool)

(declare-fun e!53236 () Bool)

(assert (=> d!20211 e!53236))

(declare-fun res!42397 () Bool)

(assert (=> d!20211 (=> res!42397 e!53236)))

(declare-fun lt!38141 () Bool)

(assert (=> d!20211 (= res!42397 (not lt!38141))))

(declare-fun lt!38140 () Bool)

(assert (=> d!20211 (= lt!38141 lt!38140)))

(declare-fun lt!38139 () Unit!2327)

(declare-fun e!53237 () Unit!2327)

(assert (=> d!20211 (= lt!38139 e!53237)))

(declare-fun c!12888 () Bool)

(assert (=> d!20211 (= c!12888 lt!38140)))

(assert (=> d!20211 (= lt!38140 (containsKey!140 (toList!734 (map!1177 (_2!1101 lt!37581))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!20211 (= (contains!742 (map!1177 (_2!1101 lt!37581)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) lt!38141)))

(declare-fun b!81594 () Bool)

(declare-fun lt!38138 () Unit!2327)

(assert (=> b!81594 (= e!53237 lt!38138)))

(assert (=> b!81594 (= lt!38138 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (map!1177 (_2!1101 lt!37581))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> b!81594 (isDefined!90 (getValueByKey!136 (toList!734 (map!1177 (_2!1101 lt!37581))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun b!81595 () Bool)

(declare-fun Unit!2390 () Unit!2327)

(assert (=> b!81595 (= e!53237 Unit!2390)))

(declare-fun b!81596 () Bool)

(assert (=> b!81596 (= e!53236 (isDefined!90 (getValueByKey!136 (toList!734 (map!1177 (_2!1101 lt!37581))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (= (and d!20211 c!12888) b!81594))

(assert (= (and d!20211 (not c!12888)) b!81595))

(assert (= (and d!20211 (not res!42397)) b!81596))

(assert (=> d!20211 m!81295))

(declare-fun m!83795 () Bool)

(assert (=> d!20211 m!83795))

(assert (=> b!81594 m!81295))

(declare-fun m!83797 () Bool)

(assert (=> b!81594 m!83797))

(assert (=> b!81594 m!81295))

(declare-fun m!83799 () Bool)

(assert (=> b!81594 m!83799))

(assert (=> b!81594 m!83799))

(declare-fun m!83801 () Bool)

(assert (=> b!81594 m!83801))

(assert (=> b!81596 m!81295))

(assert (=> b!81596 m!83799))

(assert (=> b!81596 m!83799))

(assert (=> b!81596 m!83801))

(assert (=> b!80697 d!20211))

(declare-fun d!20213 () Bool)

(assert (=> d!20213 (= (map!1177 (_2!1101 lt!37581)) (getCurrentListMap!423 (_keys!3955 (_2!1101 lt!37581)) (_values!2275 (_2!1101 lt!37581)) (mask!6297 (_2!1101 lt!37581)) (extraKeys!2139 (_2!1101 lt!37581)) (zeroValue!2188 (_2!1101 lt!37581)) (minValue!2188 (_2!1101 lt!37581)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1101 lt!37581))))))

(declare-fun bs!3449 () Bool)

(assert (= bs!3449 d!20213))

(declare-fun m!83803 () Bool)

(assert (=> bs!3449 m!83803))

(assert (=> b!80697 d!20213))

(assert (=> b!80637 d!19915))

(assert (=> b!80637 d!19917))

(declare-fun d!20215 () Bool)

(assert (=> d!20215 (= (apply!80 (+!104 lt!37776 (tuple2!2183 lt!37767 (minValue!2188 newMap!16))) lt!37788) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37776 (tuple2!2183 lt!37767 (minValue!2188 newMap!16)))) lt!37788)))))

(declare-fun bs!3450 () Bool)

(assert (= bs!3450 d!20215))

(declare-fun m!83805 () Bool)

(assert (=> bs!3450 m!83805))

(assert (=> bs!3450 m!83805))

(declare-fun m!83807 () Bool)

(assert (=> bs!3450 m!83807))

(assert (=> b!80905 d!20215))

(declare-fun d!20217 () Bool)

(declare-fun e!53238 () Bool)

(assert (=> d!20217 e!53238))

(declare-fun res!42399 () Bool)

(assert (=> d!20217 (=> (not res!42399) (not e!53238))))

(declare-fun lt!38145 () ListLongMap!1437)

(assert (=> d!20217 (= res!42399 (contains!742 lt!38145 (_1!1102 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16)))))))

(declare-fun lt!38144 () List!1514)

(assert (=> d!20217 (= lt!38145 (ListLongMap!1438 lt!38144))))

(declare-fun lt!38143 () Unit!2327)

(declare-fun lt!38142 () Unit!2327)

(assert (=> d!20217 (= lt!38143 lt!38142)))

(assert (=> d!20217 (= (getValueByKey!136 lt!38144 (_1!1102 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20217 (= lt!38142 (lemmaContainsTupThenGetReturnValue!56 lt!38144 (_1!1102 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20217 (= lt!38144 (insertStrictlySorted!59 (toList!734 lt!37771) (_1!1102 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20217 (= (+!104 lt!37771 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16))) lt!38145)))

(declare-fun b!81597 () Bool)

(declare-fun res!42398 () Bool)

(assert (=> b!81597 (=> (not res!42398) (not e!53238))))

(assert (=> b!81597 (= res!42398 (= (getValueByKey!136 (toList!734 lt!38145) (_1!1102 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16))))))))

(declare-fun b!81598 () Bool)

(assert (=> b!81598 (= e!53238 (contains!745 (toList!734 lt!38145) (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16))))))

(assert (= (and d!20217 res!42399) b!81597))

(assert (= (and b!81597 res!42398) b!81598))

(declare-fun m!83809 () Bool)

(assert (=> d!20217 m!83809))

(declare-fun m!83811 () Bool)

(assert (=> d!20217 m!83811))

(declare-fun m!83813 () Bool)

(assert (=> d!20217 m!83813))

(declare-fun m!83815 () Bool)

(assert (=> d!20217 m!83815))

(declare-fun m!83817 () Bool)

(assert (=> b!81597 m!83817))

(declare-fun m!83819 () Bool)

(assert (=> b!81598 m!83819))

(assert (=> b!80905 d!20217))

(declare-fun d!20219 () Bool)

(assert (=> d!20219 (= (apply!80 lt!37776 lt!37788) (get!1187 (getValueByKey!136 (toList!734 lt!37776) lt!37788)))))

(declare-fun bs!3451 () Bool)

(assert (= bs!3451 d!20219))

(declare-fun m!83821 () Bool)

(assert (=> bs!3451 m!83821))

(assert (=> bs!3451 m!83821))

(declare-fun m!83823 () Bool)

(assert (=> bs!3451 m!83823))

(assert (=> b!80905 d!20219))

(declare-fun d!20221 () Bool)

(assert (=> d!20221 (= (apply!80 (+!104 lt!37771 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16))) lt!37777) (apply!80 lt!37771 lt!37777))))

(declare-fun lt!38146 () Unit!2327)

(assert (=> d!20221 (= lt!38146 (choose!479 lt!37771 lt!37778 (zeroValue!2188 newMap!16) lt!37777))))

(declare-fun e!53239 () Bool)

(assert (=> d!20221 e!53239))

(declare-fun res!42400 () Bool)

(assert (=> d!20221 (=> (not res!42400) (not e!53239))))

(assert (=> d!20221 (= res!42400 (contains!742 lt!37771 lt!37777))))

(assert (=> d!20221 (= (addApplyDifferent!56 lt!37771 lt!37778 (zeroValue!2188 newMap!16) lt!37777) lt!38146)))

(declare-fun b!81599 () Bool)

(assert (=> b!81599 (= e!53239 (not (= lt!37777 lt!37778)))))

(assert (= (and d!20221 res!42400) b!81599))

(declare-fun m!83825 () Bool)

(assert (=> d!20221 m!83825))

(declare-fun m!83827 () Bool)

(assert (=> d!20221 m!83827))

(assert (=> d!20221 m!82597))

(assert (=> d!20221 m!82617))

(assert (=> d!20221 m!82597))

(assert (=> d!20221 m!82599))

(assert (=> b!80905 d!20221))

(declare-fun d!20223 () Bool)

(assert (=> d!20223 (= (apply!80 (+!104 lt!37781 (tuple2!2183 lt!37782 (minValue!2188 newMap!16))) lt!37779) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37781 (tuple2!2183 lt!37782 (minValue!2188 newMap!16)))) lt!37779)))))

(declare-fun bs!3452 () Bool)

(assert (= bs!3452 d!20223))

(declare-fun m!83829 () Bool)

(assert (=> bs!3452 m!83829))

(assert (=> bs!3452 m!83829))

(declare-fun m!83831 () Bool)

(assert (=> bs!3452 m!83831))

(assert (=> b!80905 d!20223))

(declare-fun d!20225 () Bool)

(assert (=> d!20225 (= (apply!80 (+!104 lt!37776 (tuple2!2183 lt!37767 (minValue!2188 newMap!16))) lt!37788) (apply!80 lt!37776 lt!37788))))

(declare-fun lt!38147 () Unit!2327)

(assert (=> d!20225 (= lt!38147 (choose!479 lt!37776 lt!37767 (minValue!2188 newMap!16) lt!37788))))

(declare-fun e!53240 () Bool)

(assert (=> d!20225 e!53240))

(declare-fun res!42401 () Bool)

(assert (=> d!20225 (=> (not res!42401) (not e!53240))))

(assert (=> d!20225 (= res!42401 (contains!742 lt!37776 lt!37788))))

(assert (=> d!20225 (= (addApplyDifferent!56 lt!37776 lt!37767 (minValue!2188 newMap!16) lt!37788) lt!38147)))

(declare-fun b!81600 () Bool)

(assert (=> b!81600 (= e!53240 (not (= lt!37788 lt!37767)))))

(assert (= (and d!20225 res!42401) b!81600))

(declare-fun m!83833 () Bool)

(assert (=> d!20225 m!83833))

(declare-fun m!83835 () Bool)

(assert (=> d!20225 m!83835))

(assert (=> d!20225 m!82601))

(assert (=> d!20225 m!82615))

(assert (=> d!20225 m!82601))

(assert (=> d!20225 m!82603))

(assert (=> b!80905 d!20225))

(declare-fun d!20227 () Bool)

(assert (=> d!20227 (= (apply!80 (+!104 lt!37771 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16))) lt!37777) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37771 (tuple2!2183 lt!37778 (zeroValue!2188 newMap!16)))) lt!37777)))))

(declare-fun bs!3453 () Bool)

(assert (= bs!3453 d!20227))

(declare-fun m!83837 () Bool)

(assert (=> bs!3453 m!83837))

(assert (=> bs!3453 m!83837))

(declare-fun m!83839 () Bool)

(assert (=> bs!3453 m!83839))

(assert (=> b!80905 d!20227))

(declare-fun d!20229 () Bool)

(assert (=> d!20229 (= (apply!80 lt!37771 lt!37777) (get!1187 (getValueByKey!136 (toList!734 lt!37771) lt!37777)))))

(declare-fun bs!3454 () Bool)

(assert (= bs!3454 d!20229))

(declare-fun m!83841 () Bool)

(assert (=> bs!3454 m!83841))

(assert (=> bs!3454 m!83841))

(declare-fun m!83843 () Bool)

(assert (=> bs!3454 m!83843))

(assert (=> b!80905 d!20229))

(declare-fun b!81601 () Bool)

(declare-fun lt!38154 () Unit!2327)

(declare-fun lt!38150 () Unit!2327)

(assert (=> b!81601 (= lt!38154 lt!38150)))

(declare-fun lt!38152 () (_ BitVec 64))

(declare-fun lt!38151 () ListLongMap!1437)

(declare-fun lt!38149 () (_ BitVec 64))

(declare-fun lt!38153 () V!3001)

(assert (=> b!81601 (not (contains!742 (+!104 lt!38151 (tuple2!2183 lt!38152 lt!38153)) lt!38149))))

(assert (=> b!81601 (= lt!38150 (addStillNotContains!30 lt!38151 lt!38152 lt!38153 lt!38149))))

(assert (=> b!81601 (= lt!38149 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81601 (= lt!38153 (get!1183 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81601 (= lt!38152 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7628 () ListLongMap!1437)

(assert (=> b!81601 (= lt!38151 call!7628)))

(declare-fun e!53247 () ListLongMap!1437)

(assert (=> b!81601 (= e!53247 (+!104 call!7628 (tuple2!2183 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) (get!1183 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81602 () Bool)

(declare-fun e!53242 () Bool)

(declare-fun e!53245 () Bool)

(assert (=> b!81602 (= e!53242 e!53245)))

(assert (=> b!81602 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun res!42404 () Bool)

(declare-fun lt!38148 () ListLongMap!1437)

(assert (=> b!81602 (= res!42404 (contains!742 lt!38148 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81602 (=> (not res!42404) (not e!53245))))

(declare-fun bm!7625 () Bool)

(assert (=> bm!7625 (= call!7628 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16)))))

(declare-fun b!81603 () Bool)

(declare-fun e!53244 () Bool)

(assert (=> b!81603 (= e!53244 (isEmpty!333 lt!38148))))

(declare-fun b!81604 () Bool)

(assert (=> b!81604 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> b!81604 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (_values!2275 newMap!16))))))

(assert (=> b!81604 (= e!53245 (= (apply!80 lt!38148 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81605 () Bool)

(assert (=> b!81605 (= e!53247 call!7628)))

(declare-fun b!81606 () Bool)

(declare-fun e!53246 () Bool)

(assert (=> b!81606 (= e!53246 e!53242)))

(declare-fun c!12892 () Bool)

(declare-fun e!53241 () Bool)

(assert (=> b!81606 (= c!12892 e!53241)))

(declare-fun res!42403 () Bool)

(assert (=> b!81606 (=> (not res!42403) (not e!53241))))

(assert (=> b!81606 (= res!42403 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81607 () Bool)

(declare-fun res!42405 () Bool)

(assert (=> b!81607 (=> (not res!42405) (not e!53246))))

(assert (=> b!81607 (= res!42405 (not (contains!742 lt!38148 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81608 () Bool)

(assert (=> b!81608 (= e!53242 e!53244)))

(declare-fun c!12891 () Bool)

(assert (=> b!81608 (= c!12891 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun d!20231 () Bool)

(assert (=> d!20231 e!53246))

(declare-fun res!42402 () Bool)

(assert (=> d!20231 (=> (not res!42402) (not e!53246))))

(assert (=> d!20231 (= res!42402 (not (contains!742 lt!38148 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53243 () ListLongMap!1437)

(assert (=> d!20231 (= lt!38148 e!53243)))

(declare-fun c!12889 () Bool)

(assert (=> d!20231 (= c!12889 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!20231 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!20231 (= (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38148)))

(declare-fun b!81609 () Bool)

(assert (=> b!81609 (= e!53241 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81609 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!81610 () Bool)

(assert (=> b!81610 (= e!53243 (ListLongMap!1438 Nil!1511))))

(declare-fun b!81611 () Bool)

(assert (=> b!81611 (= e!53243 e!53247)))

(declare-fun c!12890 () Bool)

(assert (=> b!81611 (= c!12890 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81612 () Bool)

(assert (=> b!81612 (= e!53244 (= lt!38148 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16))))))

(assert (= (and d!20231 c!12889) b!81610))

(assert (= (and d!20231 (not c!12889)) b!81611))

(assert (= (and b!81611 c!12890) b!81601))

(assert (= (and b!81611 (not c!12890)) b!81605))

(assert (= (or b!81601 b!81605) bm!7625))

(assert (= (and d!20231 res!42402) b!81607))

(assert (= (and b!81607 res!42405) b!81606))

(assert (= (and b!81606 res!42403) b!81609))

(assert (= (and b!81606 c!12892) b!81602))

(assert (= (and b!81606 (not c!12892)) b!81608))

(assert (= (and b!81602 res!42404) b!81604))

(assert (= (and b!81608 c!12891) b!81612))

(assert (= (and b!81608 (not c!12891)) b!81603))

(declare-fun b_lambda!3625 () Bool)

(assert (=> (not b_lambda!3625) (not b!81601)))

(assert (=> b!81601 t!5186))

(declare-fun b_and!4965 () Bool)

(assert (= b_and!4961 (and (=> t!5186 result!2849) b_and!4965)))

(assert (=> b!81601 t!5188))

(declare-fun b_and!4967 () Bool)

(assert (= b_and!4963 (and (=> t!5188 result!2851) b_and!4967)))

(declare-fun b_lambda!3627 () Bool)

(assert (=> (not b_lambda!3627) (not b!81604)))

(assert (=> b!81604 t!5186))

(declare-fun b_and!4969 () Bool)

(assert (= b_and!4965 (and (=> t!5186 result!2849) b_and!4969)))

(assert (=> b!81604 t!5188))

(declare-fun b_and!4971 () Bool)

(assert (= b_and!4967 (and (=> t!5188 result!2851) b_and!4971)))

(declare-fun m!83845 () Bool)

(assert (=> b!81601 m!83845))

(declare-fun m!83847 () Bool)

(assert (=> b!81601 m!83847))

(assert (=> b!81601 m!82333))

(assert (=> b!81601 m!82137))

(assert (=> b!81601 m!82335))

(assert (=> b!81601 m!82333))

(declare-fun m!83849 () Bool)

(assert (=> b!81601 m!83849))

(assert (=> b!81601 m!82137))

(assert (=> b!81601 m!83845))

(declare-fun m!83851 () Bool)

(assert (=> b!81601 m!83851))

(assert (=> b!81601 m!82131))

(declare-fun m!83853 () Bool)

(assert (=> bm!7625 m!83853))

(assert (=> b!81609 m!82131))

(assert (=> b!81609 m!82131))

(assert (=> b!81609 m!82143))

(assert (=> b!81604 m!82131))

(declare-fun m!83855 () Bool)

(assert (=> b!81604 m!83855))

(assert (=> b!81604 m!82333))

(assert (=> b!81604 m!82137))

(assert (=> b!81604 m!82335))

(assert (=> b!81604 m!82333))

(assert (=> b!81604 m!82137))

(assert (=> b!81604 m!82131))

(assert (=> b!81602 m!82131))

(assert (=> b!81602 m!82131))

(declare-fun m!83857 () Bool)

(assert (=> b!81602 m!83857))

(assert (=> b!81612 m!83853))

(declare-fun m!83859 () Bool)

(assert (=> d!20231 m!83859))

(assert (=> d!20231 m!81973))

(declare-fun m!83861 () Bool)

(assert (=> b!81607 m!83861))

(declare-fun m!83863 () Bool)

(assert (=> b!81603 m!83863))

(assert (=> b!81611 m!82131))

(assert (=> b!81611 m!82131))

(assert (=> b!81611 m!82143))

(assert (=> b!80905 d!20231))

(declare-fun d!20233 () Bool)

(assert (=> d!20233 (= (apply!80 (+!104 lt!37781 (tuple2!2183 lt!37782 (minValue!2188 newMap!16))) lt!37779) (apply!80 lt!37781 lt!37779))))

(declare-fun lt!38155 () Unit!2327)

(assert (=> d!20233 (= lt!38155 (choose!479 lt!37781 lt!37782 (minValue!2188 newMap!16) lt!37779))))

(declare-fun e!53248 () Bool)

(assert (=> d!20233 e!53248))

(declare-fun res!42406 () Bool)

(assert (=> d!20233 (=> (not res!42406) (not e!53248))))

(assert (=> d!20233 (= res!42406 (contains!742 lt!37781 lt!37779))))

(assert (=> d!20233 (= (addApplyDifferent!56 lt!37781 lt!37782 (minValue!2188 newMap!16) lt!37779) lt!38155)))

(declare-fun b!81613 () Bool)

(assert (=> b!81613 (= e!53248 (not (= lt!37779 lt!37782)))))

(assert (= (and d!20233 res!42406) b!81613))

(declare-fun m!83865 () Bool)

(assert (=> d!20233 m!83865))

(declare-fun m!83867 () Bool)

(assert (=> d!20233 m!83867))

(assert (=> d!20233 m!82613))

(assert (=> d!20233 m!82591))

(assert (=> d!20233 m!82613))

(assert (=> d!20233 m!82621))

(assert (=> b!80905 d!20233))

(declare-fun d!20235 () Bool)

(assert (=> d!20235 (contains!742 (+!104 lt!37780 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16))) lt!37768)))

(declare-fun lt!38156 () Unit!2327)

(assert (=> d!20235 (= lt!38156 (choose!478 lt!37780 lt!37775 (zeroValue!2188 newMap!16) lt!37768))))

(assert (=> d!20235 (contains!742 lt!37780 lt!37768)))

(assert (=> d!20235 (= (addStillContains!56 lt!37780 lt!37775 (zeroValue!2188 newMap!16) lt!37768) lt!38156)))

(declare-fun bs!3455 () Bool)

(assert (= bs!3455 d!20235))

(assert (=> bs!3455 m!82607))

(assert (=> bs!3455 m!82607))

(assert (=> bs!3455 m!82609))

(declare-fun m!83869 () Bool)

(assert (=> bs!3455 m!83869))

(declare-fun m!83871 () Bool)

(assert (=> bs!3455 m!83871))

(assert (=> b!80905 d!20235))

(declare-fun d!20237 () Bool)

(declare-fun e!53249 () Bool)

(assert (=> d!20237 e!53249))

(declare-fun res!42407 () Bool)

(assert (=> d!20237 (=> res!42407 e!53249)))

(declare-fun lt!38160 () Bool)

(assert (=> d!20237 (= res!42407 (not lt!38160))))

(declare-fun lt!38159 () Bool)

(assert (=> d!20237 (= lt!38160 lt!38159)))

(declare-fun lt!38158 () Unit!2327)

(declare-fun e!53250 () Unit!2327)

(assert (=> d!20237 (= lt!38158 e!53250)))

(declare-fun c!12893 () Bool)

(assert (=> d!20237 (= c!12893 lt!38159)))

(assert (=> d!20237 (= lt!38159 (containsKey!140 (toList!734 (+!104 lt!37780 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16)))) lt!37768))))

(assert (=> d!20237 (= (contains!742 (+!104 lt!37780 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16))) lt!37768) lt!38160)))

(declare-fun b!81614 () Bool)

(declare-fun lt!38157 () Unit!2327)

(assert (=> b!81614 (= e!53250 lt!38157)))

(assert (=> b!81614 (= lt!38157 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (+!104 lt!37780 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16)))) lt!37768))))

(assert (=> b!81614 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37780 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16)))) lt!37768))))

(declare-fun b!81615 () Bool)

(declare-fun Unit!2391 () Unit!2327)

(assert (=> b!81615 (= e!53250 Unit!2391)))

(declare-fun b!81616 () Bool)

(assert (=> b!81616 (= e!53249 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37780 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16)))) lt!37768)))))

(assert (= (and d!20237 c!12893) b!81614))

(assert (= (and d!20237 (not c!12893)) b!81615))

(assert (= (and d!20237 (not res!42407)) b!81616))

(declare-fun m!83873 () Bool)

(assert (=> d!20237 m!83873))

(declare-fun m!83875 () Bool)

(assert (=> b!81614 m!83875))

(declare-fun m!83877 () Bool)

(assert (=> b!81614 m!83877))

(assert (=> b!81614 m!83877))

(declare-fun m!83879 () Bool)

(assert (=> b!81614 m!83879))

(assert (=> b!81616 m!83877))

(assert (=> b!81616 m!83877))

(assert (=> b!81616 m!83879))

(assert (=> b!80905 d!20237))

(declare-fun d!20239 () Bool)

(declare-fun e!53251 () Bool)

(assert (=> d!20239 e!53251))

(declare-fun res!42409 () Bool)

(assert (=> d!20239 (=> (not res!42409) (not e!53251))))

(declare-fun lt!38164 () ListLongMap!1437)

(assert (=> d!20239 (= res!42409 (contains!742 lt!38164 (_1!1102 (tuple2!2183 lt!37782 (minValue!2188 newMap!16)))))))

(declare-fun lt!38163 () List!1514)

(assert (=> d!20239 (= lt!38164 (ListLongMap!1438 lt!38163))))

(declare-fun lt!38162 () Unit!2327)

(declare-fun lt!38161 () Unit!2327)

(assert (=> d!20239 (= lt!38162 lt!38161)))

(assert (=> d!20239 (= (getValueByKey!136 lt!38163 (_1!1102 (tuple2!2183 lt!37782 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37782 (minValue!2188 newMap!16)))))))

(assert (=> d!20239 (= lt!38161 (lemmaContainsTupThenGetReturnValue!56 lt!38163 (_1!1102 (tuple2!2183 lt!37782 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37782 (minValue!2188 newMap!16)))))))

(assert (=> d!20239 (= lt!38163 (insertStrictlySorted!59 (toList!734 lt!37781) (_1!1102 (tuple2!2183 lt!37782 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37782 (minValue!2188 newMap!16)))))))

(assert (=> d!20239 (= (+!104 lt!37781 (tuple2!2183 lt!37782 (minValue!2188 newMap!16))) lt!38164)))

(declare-fun b!81617 () Bool)

(declare-fun res!42408 () Bool)

(assert (=> b!81617 (=> (not res!42408) (not e!53251))))

(assert (=> b!81617 (= res!42408 (= (getValueByKey!136 (toList!734 lt!38164) (_1!1102 (tuple2!2183 lt!37782 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37782 (minValue!2188 newMap!16))))))))

(declare-fun b!81618 () Bool)

(assert (=> b!81618 (= e!53251 (contains!745 (toList!734 lt!38164) (tuple2!2183 lt!37782 (minValue!2188 newMap!16))))))

(assert (= (and d!20239 res!42409) b!81617))

(assert (= (and b!81617 res!42408) b!81618))

(declare-fun m!83881 () Bool)

(assert (=> d!20239 m!83881))

(declare-fun m!83883 () Bool)

(assert (=> d!20239 m!83883))

(declare-fun m!83885 () Bool)

(assert (=> d!20239 m!83885))

(declare-fun m!83887 () Bool)

(assert (=> d!20239 m!83887))

(declare-fun m!83889 () Bool)

(assert (=> b!81617 m!83889))

(declare-fun m!83891 () Bool)

(assert (=> b!81618 m!83891))

(assert (=> b!80905 d!20239))

(declare-fun d!20241 () Bool)

(assert (=> d!20241 (= (apply!80 lt!37781 lt!37779) (get!1187 (getValueByKey!136 (toList!734 lt!37781) lt!37779)))))

(declare-fun bs!3456 () Bool)

(assert (= bs!3456 d!20241))

(declare-fun m!83893 () Bool)

(assert (=> bs!3456 m!83893))

(assert (=> bs!3456 m!83893))

(declare-fun m!83895 () Bool)

(assert (=> bs!3456 m!83895))

(assert (=> b!80905 d!20241))

(declare-fun d!20243 () Bool)

(declare-fun e!53252 () Bool)

(assert (=> d!20243 e!53252))

(declare-fun res!42411 () Bool)

(assert (=> d!20243 (=> (not res!42411) (not e!53252))))

(declare-fun lt!38168 () ListLongMap!1437)

(assert (=> d!20243 (= res!42411 (contains!742 lt!38168 (_1!1102 (tuple2!2183 lt!37767 (minValue!2188 newMap!16)))))))

(declare-fun lt!38167 () List!1514)

(assert (=> d!20243 (= lt!38168 (ListLongMap!1438 lt!38167))))

(declare-fun lt!38166 () Unit!2327)

(declare-fun lt!38165 () Unit!2327)

(assert (=> d!20243 (= lt!38166 lt!38165)))

(assert (=> d!20243 (= (getValueByKey!136 lt!38167 (_1!1102 (tuple2!2183 lt!37767 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37767 (minValue!2188 newMap!16)))))))

(assert (=> d!20243 (= lt!38165 (lemmaContainsTupThenGetReturnValue!56 lt!38167 (_1!1102 (tuple2!2183 lt!37767 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37767 (minValue!2188 newMap!16)))))))

(assert (=> d!20243 (= lt!38167 (insertStrictlySorted!59 (toList!734 lt!37776) (_1!1102 (tuple2!2183 lt!37767 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37767 (minValue!2188 newMap!16)))))))

(assert (=> d!20243 (= (+!104 lt!37776 (tuple2!2183 lt!37767 (minValue!2188 newMap!16))) lt!38168)))

(declare-fun b!81619 () Bool)

(declare-fun res!42410 () Bool)

(assert (=> b!81619 (=> (not res!42410) (not e!53252))))

(assert (=> b!81619 (= res!42410 (= (getValueByKey!136 (toList!734 lt!38168) (_1!1102 (tuple2!2183 lt!37767 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37767 (minValue!2188 newMap!16))))))))

(declare-fun b!81620 () Bool)

(assert (=> b!81620 (= e!53252 (contains!745 (toList!734 lt!38168) (tuple2!2183 lt!37767 (minValue!2188 newMap!16))))))

(assert (= (and d!20243 res!42411) b!81619))

(assert (= (and b!81619 res!42410) b!81620))

(declare-fun m!83897 () Bool)

(assert (=> d!20243 m!83897))

(declare-fun m!83899 () Bool)

(assert (=> d!20243 m!83899))

(declare-fun m!83901 () Bool)

(assert (=> d!20243 m!83901))

(declare-fun m!83903 () Bool)

(assert (=> d!20243 m!83903))

(declare-fun m!83905 () Bool)

(assert (=> b!81619 m!83905))

(declare-fun m!83907 () Bool)

(assert (=> b!81620 m!83907))

(assert (=> b!80905 d!20243))

(declare-fun d!20245 () Bool)

(declare-fun e!53253 () Bool)

(assert (=> d!20245 e!53253))

(declare-fun res!42413 () Bool)

(assert (=> d!20245 (=> (not res!42413) (not e!53253))))

(declare-fun lt!38172 () ListLongMap!1437)

(assert (=> d!20245 (= res!42413 (contains!742 lt!38172 (_1!1102 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16)))))))

(declare-fun lt!38171 () List!1514)

(assert (=> d!20245 (= lt!38172 (ListLongMap!1438 lt!38171))))

(declare-fun lt!38170 () Unit!2327)

(declare-fun lt!38169 () Unit!2327)

(assert (=> d!20245 (= lt!38170 lt!38169)))

(assert (=> d!20245 (= (getValueByKey!136 lt!38171 (_1!1102 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20245 (= lt!38169 (lemmaContainsTupThenGetReturnValue!56 lt!38171 (_1!1102 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20245 (= lt!38171 (insertStrictlySorted!59 (toList!734 lt!37780) (_1!1102 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20245 (= (+!104 lt!37780 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16))) lt!38172)))

(declare-fun b!81621 () Bool)

(declare-fun res!42412 () Bool)

(assert (=> b!81621 (=> (not res!42412) (not e!53253))))

(assert (=> b!81621 (= res!42412 (= (getValueByKey!136 (toList!734 lt!38172) (_1!1102 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16))))))))

(declare-fun b!81622 () Bool)

(assert (=> b!81622 (= e!53253 (contains!745 (toList!734 lt!38172) (tuple2!2183 lt!37775 (zeroValue!2188 newMap!16))))))

(assert (= (and d!20245 res!42413) b!81621))

(assert (= (and b!81621 res!42412) b!81622))

(declare-fun m!83909 () Bool)

(assert (=> d!20245 m!83909))

(declare-fun m!83911 () Bool)

(assert (=> d!20245 m!83911))

(declare-fun m!83913 () Bool)

(assert (=> d!20245 m!83913))

(declare-fun m!83915 () Bool)

(assert (=> d!20245 m!83915))

(declare-fun m!83917 () Bool)

(assert (=> b!81621 m!83917))

(declare-fun m!83919 () Bool)

(assert (=> b!81622 m!83919))

(assert (=> b!80905 d!20245))

(declare-fun d!20247 () Bool)

(assert (=> d!20247 (= (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37425)) (v!2606 (getValueByKey!136 (toList!734 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37425)))))

(assert (=> d!19659 d!20247))

(declare-fun b!81626 () Bool)

(declare-fun e!53255 () Option!142)

(assert (=> b!81626 (= e!53255 None!140)))

(declare-fun e!53254 () Option!142)

(declare-fun b!81623 () Bool)

(assert (=> b!81623 (= e!53254 (Some!141 (_2!1102 (h!2099 (toList!734 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))))

(declare-fun b!81625 () Bool)

(assert (=> b!81625 (= e!53255 (getValueByKey!136 (t!5172 (toList!734 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) lt!37425))))

(declare-fun d!20249 () Bool)

(declare-fun c!12894 () Bool)

(assert (=> d!20249 (= c!12894 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))) lt!37425)))))

(assert (=> d!20249 (= (getValueByKey!136 (toList!734 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37425) e!53254)))

(declare-fun b!81624 () Bool)

(assert (=> b!81624 (= e!53254 e!53255)))

(declare-fun c!12895 () Bool)

(assert (=> b!81624 (= c!12895 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (not (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37413 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))) lt!37425))))))

(assert (= (and d!20249 c!12894) b!81623))

(assert (= (and d!20249 (not c!12894)) b!81624))

(assert (= (and b!81624 c!12895) b!81625))

(assert (= (and b!81624 (not c!12895)) b!81626))

(declare-fun m!83921 () Bool)

(assert (=> b!81625 m!83921))

(assert (=> d!19659 d!20249))

(declare-fun d!20251 () Bool)

(declare-fun e!53256 () Bool)

(assert (=> d!20251 e!53256))

(declare-fun res!42415 () Bool)

(assert (=> d!20251 (=> (not res!42415) (not e!53256))))

(declare-fun lt!38176 () ListLongMap!1437)

(assert (=> d!20251 (= res!42415 (contains!742 lt!38176 (_1!1102 (ite (or c!12658 c!12660) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(declare-fun lt!38175 () List!1514)

(assert (=> d!20251 (= lt!38176 (ListLongMap!1438 lt!38175))))

(declare-fun lt!38174 () Unit!2327)

(declare-fun lt!38173 () Unit!2327)

(assert (=> d!20251 (= lt!38174 lt!38173)))

(assert (=> d!20251 (= (getValueByKey!136 lt!38175 (_1!1102 (ite (or c!12658 c!12660) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))) (Some!141 (_2!1102 (ite (or c!12658 c!12660) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20251 (= lt!38173 (lemmaContainsTupThenGetReturnValue!56 lt!38175 (_1!1102 (ite (or c!12658 c!12660) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (_2!1102 (ite (or c!12658 c!12660) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20251 (= lt!38175 (insertStrictlySorted!59 (toList!734 (ite c!12658 call!7524 (ite c!12660 call!7525 call!7526))) (_1!1102 (ite (or c!12658 c!12660) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (_2!1102 (ite (or c!12658 c!12660) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20251 (= (+!104 (ite c!12658 call!7524 (ite c!12660 call!7525 call!7526)) (ite (or c!12658 c!12660) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) lt!38176)))

(declare-fun b!81627 () Bool)

(declare-fun res!42414 () Bool)

(assert (=> b!81627 (=> (not res!42414) (not e!53256))))

(assert (=> b!81627 (= res!42414 (= (getValueByKey!136 (toList!734 lt!38176) (_1!1102 (ite (or c!12658 c!12660) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))) (Some!141 (_2!1102 (ite (or c!12658 c!12660) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))))

(declare-fun b!81628 () Bool)

(assert (=> b!81628 (= e!53256 (contains!745 (toList!734 lt!38176) (ite (or c!12658 c!12660) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (= (and d!20251 res!42415) b!81627))

(assert (= (and b!81627 res!42414) b!81628))

(declare-fun m!83923 () Bool)

(assert (=> d!20251 m!83923))

(declare-fun m!83925 () Bool)

(assert (=> d!20251 m!83925))

(declare-fun m!83927 () Bool)

(assert (=> d!20251 m!83927))

(declare-fun m!83929 () Bool)

(assert (=> d!20251 m!83929))

(declare-fun m!83931 () Bool)

(assert (=> b!81627 m!83931))

(declare-fun m!83933 () Bool)

(assert (=> b!81628 m!83933))

(assert (=> bm!7526 d!20251))

(declare-fun d!20253 () Bool)

(declare-fun lt!38177 () Bool)

(assert (=> d!20253 (= lt!38177 (select (content!86 lt!37345) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(declare-fun e!53257 () Bool)

(assert (=> d!20253 (= lt!38177 e!53257)))

(declare-fun res!42417 () Bool)

(assert (=> d!20253 (=> (not res!42417) (not e!53257))))

(assert (=> d!20253 (= res!42417 ((_ is Cons!1510) lt!37345))))

(assert (=> d!20253 (= (contains!745 lt!37345 (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))) lt!38177)))

(declare-fun b!81629 () Bool)

(declare-fun e!53258 () Bool)

(assert (=> b!81629 (= e!53257 e!53258)))

(declare-fun res!42416 () Bool)

(assert (=> b!81629 (=> res!42416 e!53258)))

(assert (=> b!81629 (= res!42416 (= (h!2099 lt!37345) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(declare-fun b!81630 () Bool)

(assert (=> b!81630 (= e!53258 (contains!745 (t!5172 lt!37345) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(assert (= (and d!20253 res!42417) b!81629))

(assert (= (and b!81629 (not res!42416)) b!81630))

(declare-fun m!83935 () Bool)

(assert (=> d!20253 m!83935))

(declare-fun m!83937 () Bool)

(assert (=> d!20253 m!83937))

(declare-fun m!83939 () Bool)

(assert (=> b!81630 m!83939))

(assert (=> b!80563 d!20253))

(assert (=> b!80970 d!19751))

(declare-fun d!20255 () Bool)

(assert (=> d!20255 (= (apply!80 lt!37769 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1187 (getValueByKey!136 (toList!734 lt!37769) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3457 () Bool)

(assert (= bs!3457 d!20255))

(assert (=> bs!3457 m!83553))

(assert (=> bs!3457 m!83553))

(declare-fun m!83941 () Bool)

(assert (=> bs!3457 m!83941))

(assert (=> b!80923 d!20255))

(assert (=> b!80712 d!20075))

(declare-fun d!20257 () Bool)

(declare-fun lt!38178 () Bool)

(assert (=> d!20257 (= lt!38178 (select (content!86 (t!5172 (toList!734 lt!37350))) lt!37079))))

(declare-fun e!53259 () Bool)

(assert (=> d!20257 (= lt!38178 e!53259)))

(declare-fun res!42419 () Bool)

(assert (=> d!20257 (=> (not res!42419) (not e!53259))))

(assert (=> d!20257 (= res!42419 ((_ is Cons!1510) (t!5172 (toList!734 lt!37350))))))

(assert (=> d!20257 (= (contains!745 (t!5172 (toList!734 lt!37350)) lt!37079) lt!38178)))

(declare-fun b!81631 () Bool)

(declare-fun e!53260 () Bool)

(assert (=> b!81631 (= e!53259 e!53260)))

(declare-fun res!42418 () Bool)

(assert (=> b!81631 (=> res!42418 e!53260)))

(assert (=> b!81631 (= res!42418 (= (h!2099 (t!5172 (toList!734 lt!37350))) lt!37079))))

(declare-fun b!81632 () Bool)

(assert (=> b!81632 (= e!53260 (contains!745 (t!5172 (t!5172 (toList!734 lt!37350))) lt!37079))))

(assert (= (and d!20257 res!42419) b!81631))

(assert (= (and b!81631 (not res!42418)) b!81632))

(declare-fun m!83943 () Bool)

(assert (=> d!20257 m!83943))

(declare-fun m!83945 () Bool)

(assert (=> d!20257 m!83945))

(declare-fun m!83947 () Bool)

(assert (=> b!81632 m!83947))

(assert (=> b!80953 d!20257))

(assert (=> d!19809 d!19885))

(declare-fun d!20259 () Bool)

(declare-fun lt!38179 () Bool)

(assert (=> d!20259 (= lt!38179 (select (content!86 (t!5172 (toList!734 lt!37346))) lt!37075))))

(declare-fun e!53261 () Bool)

(assert (=> d!20259 (= lt!38179 e!53261)))

(declare-fun res!42421 () Bool)

(assert (=> d!20259 (=> (not res!42421) (not e!53261))))

(assert (=> d!20259 (= res!42421 ((_ is Cons!1510) (t!5172 (toList!734 lt!37346))))))

(assert (=> d!20259 (= (contains!745 (t!5172 (toList!734 lt!37346)) lt!37075) lt!38179)))

(declare-fun b!81633 () Bool)

(declare-fun e!53262 () Bool)

(assert (=> b!81633 (= e!53261 e!53262)))

(declare-fun res!42420 () Bool)

(assert (=> b!81633 (=> res!42420 e!53262)))

(assert (=> b!81633 (= res!42420 (= (h!2099 (t!5172 (toList!734 lt!37346))) lt!37075))))

(declare-fun b!81634 () Bool)

(assert (=> b!81634 (= e!53262 (contains!745 (t!5172 (t!5172 (toList!734 lt!37346))) lt!37075))))

(assert (= (and d!20259 res!42421) b!81633))

(assert (= (and b!81633 (not res!42420)) b!81634))

(declare-fun m!83949 () Bool)

(assert (=> d!20259 m!83949))

(declare-fun m!83951 () Bool)

(assert (=> d!20259 m!83951))

(declare-fun m!83953 () Bool)

(assert (=> b!81634 m!83953))

(assert (=> b!80945 d!20259))

(declare-fun lt!38180 () Bool)

(declare-fun d!20261 () Bool)

(assert (=> d!20261 (= lt!38180 (select (content!85 (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!53264 () Bool)

(assert (=> d!20261 (= lt!38180 e!53264)))

(declare-fun res!42423 () Bool)

(assert (=> d!20261 (=> (not res!42423) (not e!53264))))

(assert (=> d!20261 (= res!42423 ((_ is Cons!1511) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)))))

(assert (=> d!20261 (= (contains!746 (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!38180)))

(declare-fun b!81635 () Bool)

(declare-fun e!53263 () Bool)

(assert (=> b!81635 (= e!53264 e!53263)))

(declare-fun res!42422 () Bool)

(assert (=> b!81635 (=> res!42422 e!53263)))

(assert (=> b!81635 (= res!42422 (= (h!2100 (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!81636 () Bool)

(assert (=> b!81636 (= e!53263 (contains!746 (t!5173 (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!20261 res!42423) b!81635))

(assert (= (and b!81635 (not res!42422)) b!81636))

(declare-fun m!83955 () Bool)

(assert (=> d!20261 m!83955))

(assert (=> d!20261 m!82019))

(declare-fun m!83957 () Bool)

(assert (=> d!20261 m!83957))

(assert (=> b!81636 m!82019))

(declare-fun m!83959 () Bool)

(assert (=> b!81636 m!83959))

(assert (=> b!80624 d!20261))

(assert (=> b!80978 d!19977))

(assert (=> b!80978 d!19979))

(declare-fun d!20263 () Bool)

(declare-fun res!42424 () Bool)

(declare-fun e!53265 () Bool)

(assert (=> d!20263 (=> res!42424 e!53265)))

(assert (=> d!20263 (= res!42424 (and ((_ is Cons!1510) (toList!734 lt!37331)) (= (_1!1102 (h!2099 (toList!734 lt!37331))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20263 (= (containsKey!140 (toList!734 lt!37331) #b1000000000000000000000000000000000000000000000000000000000000000) e!53265)))

(declare-fun b!81637 () Bool)

(declare-fun e!53266 () Bool)

(assert (=> b!81637 (= e!53265 e!53266)))

(declare-fun res!42425 () Bool)

(assert (=> b!81637 (=> (not res!42425) (not e!53266))))

(assert (=> b!81637 (= res!42425 (and (or (not ((_ is Cons!1510) (toList!734 lt!37331))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37331))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1510) (toList!734 lt!37331)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37331))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81638 () Bool)

(assert (=> b!81638 (= e!53266 (containsKey!140 (t!5172 (toList!734 lt!37331)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20263 (not res!42424)) b!81637))

(assert (= (and b!81637 res!42425) b!81638))

(declare-fun m!83961 () Bool)

(assert (=> b!81638 m!83961))

(assert (=> d!19621 d!20263))

(declare-fun b!81657 () Bool)

(declare-fun lt!38186 () SeekEntryResult!244)

(assert (=> b!81657 (and (bvsge (index!3113 lt!38186) #b00000000000000000000000000000000) (bvslt (index!3113 lt!38186) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun e!53279 () Bool)

(assert (=> b!81657 (= e!53279 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3113 lt!38186)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53280 () SeekEntryResult!244)

(declare-fun b!81658 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!81658 (= e!53280 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (mask!6297 newMap!16)) #b00000000000000000000000000000000 (mask!6297 newMap!16)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(declare-fun b!81659 () Bool)

(declare-fun e!53278 () SeekEntryResult!244)

(assert (=> b!81659 (= e!53278 e!53280)))

(declare-fun lt!38185 () (_ BitVec 64))

(declare-fun c!12904 () Bool)

(assert (=> b!81659 (= c!12904 (or (= lt!38185 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (= (bvadd lt!38185 lt!38185) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!20265 () Bool)

(declare-fun e!53281 () Bool)

(assert (=> d!20265 e!53281))

(declare-fun c!12902 () Bool)

(assert (=> d!20265 (= c!12902 (and ((_ is Intermediate!244) lt!38186) (undefined!1056 lt!38186)))))

(assert (=> d!20265 (= lt!38186 e!53278)))

(declare-fun c!12903 () Bool)

(assert (=> d!20265 (= c!12903 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!20265 (= lt!38185 (select (arr!1888 (_keys!3955 newMap!16)) (toIndex!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (mask!6297 newMap!16))))))

(assert (=> d!20265 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!20265 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (mask!6297 newMap!16)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)) lt!38186)))

(declare-fun b!81660 () Bool)

(assert (=> b!81660 (= e!53281 (bvsge (x!11694 lt!38186) #b01111111111111111111111111111110))))

(declare-fun b!81661 () Bool)

(assert (=> b!81661 (= e!53280 (Intermediate!244 false (toIndex!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (mask!6297 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!81662 () Bool)

(assert (=> b!81662 (= e!53278 (Intermediate!244 true (toIndex!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (mask!6297 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!81663 () Bool)

(assert (=> b!81663 (and (bvsge (index!3113 lt!38186) #b00000000000000000000000000000000) (bvslt (index!3113 lt!38186) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun res!42432 () Bool)

(assert (=> b!81663 (= res!42432 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3113 lt!38186)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81663 (=> res!42432 e!53279)))

(declare-fun b!81664 () Bool)

(assert (=> b!81664 (and (bvsge (index!3113 lt!38186) #b00000000000000000000000000000000) (bvslt (index!3113 lt!38186) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun res!42433 () Bool)

(assert (=> b!81664 (= res!42433 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3113 lt!38186)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> b!81664 (=> res!42433 e!53279)))

(declare-fun e!53277 () Bool)

(assert (=> b!81664 (= e!53277 e!53279)))

(declare-fun b!81665 () Bool)

(assert (=> b!81665 (= e!53281 e!53277)))

(declare-fun res!42434 () Bool)

(assert (=> b!81665 (= res!42434 (and ((_ is Intermediate!244) lt!38186) (not (undefined!1056 lt!38186)) (bvslt (x!11694 lt!38186) #b01111111111111111111111111111110) (bvsge (x!11694 lt!38186) #b00000000000000000000000000000000) (bvsge (x!11694 lt!38186) #b00000000000000000000000000000000)))))

(assert (=> b!81665 (=> (not res!42434) (not e!53277))))

(assert (= (and d!20265 c!12903) b!81662))

(assert (= (and d!20265 (not c!12903)) b!81659))

(assert (= (and b!81659 c!12904) b!81661))

(assert (= (and b!81659 (not c!12904)) b!81658))

(assert (= (and d!20265 c!12902) b!81660))

(assert (= (and d!20265 (not c!12902)) b!81665))

(assert (= (and b!81665 res!42434) b!81664))

(assert (= (and b!81664 (not res!42433)) b!81663))

(assert (= (and b!81663 (not res!42432)) b!81657))

(declare-fun m!83963 () Bool)

(assert (=> b!81664 m!83963))

(assert (=> d!20265 m!82425))

(declare-fun m!83965 () Bool)

(assert (=> d!20265 m!83965))

(assert (=> d!20265 m!81973))

(assert (=> b!81657 m!83963))

(assert (=> b!81658 m!82425))

(declare-fun m!83967 () Bool)

(assert (=> b!81658 m!83967))

(assert (=> b!81658 m!83967))

(assert (=> b!81658 m!81295))

(declare-fun m!83969 () Bool)

(assert (=> b!81658 m!83969))

(assert (=> b!81663 m!83963))

(assert (=> d!19767 d!20265))

(declare-fun d!20267 () Bool)

(declare-fun lt!38192 () (_ BitVec 32))

(declare-fun lt!38191 () (_ BitVec 32))

(assert (=> d!20267 (= lt!38192 (bvmul (bvxor lt!38191 (bvlshr lt!38191 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!20267 (= lt!38191 ((_ extract 31 0) (bvand (bvxor (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvlshr (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!20267 (and (bvsge (mask!6297 newMap!16) #b00000000000000000000000000000000) (let ((res!42435 (let ((h!2104 ((_ extract 31 0) (bvand (bvxor (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (bvlshr (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11796 (bvmul (bvxor h!2104 (bvlshr h!2104 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11796 (bvlshr x!11796 #b00000000000000000000000000001101)) (mask!6297 newMap!16)))))) (and (bvslt res!42435 (bvadd (mask!6297 newMap!16) #b00000000000000000000000000000001)) (bvsge res!42435 #b00000000000000000000000000000000))))))

(assert (=> d!20267 (= (toIndex!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (mask!6297 newMap!16)) (bvand (bvxor lt!38192 (bvlshr lt!38192 #b00000000000000000000000000001101)) (mask!6297 newMap!16)))))

(assert (=> d!19767 d!20267))

(assert (=> d!19767 d!19885))

(declare-fun d!20269 () Bool)

(declare-fun res!42436 () Bool)

(declare-fun e!53282 () Bool)

(assert (=> d!20269 (=> res!42436 e!53282)))

(assert (=> d!20269 (= res!42436 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)))) (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))))) lt!37332)))))

(assert (=> d!20269 (= (containsKey!140 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))) lt!37332) e!53282)))

(declare-fun b!81666 () Bool)

(declare-fun e!53283 () Bool)

(assert (=> b!81666 (= e!53282 e!53283)))

(declare-fun res!42437 () Bool)

(assert (=> b!81666 (=> (not res!42437) (not e!53283))))

(assert (=> b!81666 (= res!42437 (and (or (not ((_ is Cons!1510) (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))))) (bvsle (_1!1102 (h!2099 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))))) lt!37332)) ((_ is Cons!1510) (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)))) (bvslt (_1!1102 (h!2099 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336))))) lt!37332)))))

(declare-fun b!81667 () Bool)

(assert (=> b!81667 (= e!53283 (containsKey!140 (t!5172 (toList!734 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)))) lt!37332))))

(assert (= (and d!20269 (not res!42436)) b!81666))

(assert (= (and b!81666 res!42437) b!81667))

(declare-fun m!83971 () Bool)

(assert (=> b!81667 m!83971))

(assert (=> d!19733 d!20269))

(declare-fun b!81671 () Bool)

(declare-fun e!53285 () Option!142)

(assert (=> b!81671 (= e!53285 None!140)))

(declare-fun b!81668 () Bool)

(declare-fun e!53284 () Option!142)

(assert (=> b!81668 (= e!53284 (Some!141 (_2!1102 (h!2099 (t!5172 lt!37300)))))))

(declare-fun b!81670 () Bool)

(assert (=> b!81670 (= e!53285 (getValueByKey!136 (t!5172 (t!5172 lt!37300)) (_1!1102 lt!37082)))))

(declare-fun d!20271 () Bool)

(declare-fun c!12905 () Bool)

(assert (=> d!20271 (= c!12905 (and ((_ is Cons!1510) (t!5172 lt!37300)) (= (_1!1102 (h!2099 (t!5172 lt!37300))) (_1!1102 lt!37082))))))

(assert (=> d!20271 (= (getValueByKey!136 (t!5172 lt!37300) (_1!1102 lt!37082)) e!53284)))

(declare-fun b!81669 () Bool)

(assert (=> b!81669 (= e!53284 e!53285)))

(declare-fun c!12906 () Bool)

(assert (=> b!81669 (= c!12906 (and ((_ is Cons!1510) (t!5172 lt!37300)) (not (= (_1!1102 (h!2099 (t!5172 lt!37300))) (_1!1102 lt!37082)))))))

(assert (= (and d!20271 c!12905) b!81668))

(assert (= (and d!20271 (not c!12905)) b!81669))

(assert (= (and b!81669 c!12906) b!81670))

(assert (= (and b!81669 (not c!12906)) b!81671))

(declare-fun m!83973 () Bool)

(assert (=> b!81670 m!83973))

(assert (=> b!80497 d!20271))

(declare-fun d!20273 () Bool)

(declare-fun e!53286 () Bool)

(assert (=> d!20273 e!53286))

(declare-fun res!42438 () Bool)

(assert (=> d!20273 (=> res!42438 e!53286)))

(declare-fun lt!38196 () Bool)

(assert (=> d!20273 (= res!42438 (not lt!38196))))

(declare-fun lt!38195 () Bool)

(assert (=> d!20273 (= lt!38196 lt!38195)))

(declare-fun lt!38194 () Unit!2327)

(declare-fun e!53287 () Unit!2327)

(assert (=> d!20273 (= lt!38194 e!53287)))

(declare-fun c!12907 () Bool)

(assert (=> d!20273 (= c!12907 lt!38195)))

(assert (=> d!20273 (= lt!38195 (containsKey!140 (toList!734 lt!37631) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20273 (= (contains!742 lt!37631 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38196)))

(declare-fun b!81672 () Bool)

(declare-fun lt!38193 () Unit!2327)

(assert (=> b!81672 (= e!53287 lt!38193)))

(assert (=> b!81672 (= lt!38193 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37631) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81672 (isDefined!90 (getValueByKey!136 (toList!734 lt!37631) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81673 () Bool)

(declare-fun Unit!2392 () Unit!2327)

(assert (=> b!81673 (= e!53287 Unit!2392)))

(declare-fun b!81674 () Bool)

(assert (=> b!81674 (= e!53286 (isDefined!90 (getValueByKey!136 (toList!734 lt!37631) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20273 c!12907) b!81672))

(assert (= (and d!20273 (not c!12907)) b!81673))

(assert (= (and d!20273 (not res!42438)) b!81674))

(declare-fun m!83975 () Bool)

(assert (=> d!20273 m!83975))

(declare-fun m!83977 () Bool)

(assert (=> b!81672 m!83977))

(declare-fun m!83979 () Bool)

(assert (=> b!81672 m!83979))

(assert (=> b!81672 m!83979))

(declare-fun m!83981 () Bool)

(assert (=> b!81672 m!83981))

(assert (=> b!81674 m!83979))

(assert (=> b!81674 m!83979))

(assert (=> b!81674 m!83981))

(assert (=> d!19725 d!20273))

(assert (=> d!19725 d!19583))

(declare-fun d!20275 () Bool)

(declare-fun lt!38197 () Bool)

(assert (=> d!20275 (= lt!38197 (select (content!86 (toList!734 lt!37743)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun e!53288 () Bool)

(assert (=> d!20275 (= lt!38197 e!53288)))

(declare-fun res!42440 () Bool)

(assert (=> d!20275 (=> (not res!42440) (not e!53288))))

(assert (=> d!20275 (= res!42440 ((_ is Cons!1510) (toList!734 lt!37743)))))

(assert (=> d!20275 (= (contains!745 (toList!734 lt!37743) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!38197)))

(declare-fun b!81675 () Bool)

(declare-fun e!53289 () Bool)

(assert (=> b!81675 (= e!53288 e!53289)))

(declare-fun res!42439 () Bool)

(assert (=> b!81675 (=> res!42439 e!53289)))

(assert (=> b!81675 (= res!42439 (= (h!2099 (toList!734 lt!37743)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!81676 () Bool)

(assert (=> b!81676 (= e!53289 (contains!745 (t!5172 (toList!734 lt!37743)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!20275 res!42440) b!81675))

(assert (= (and b!81675 (not res!42439)) b!81676))

(declare-fun m!83983 () Bool)

(assert (=> d!20275 m!83983))

(declare-fun m!83985 () Bool)

(assert (=> d!20275 m!83985))

(declare-fun m!83987 () Bool)

(assert (=> b!81676 m!83987))

(assert (=> b!80887 d!20275))

(declare-fun d!20277 () Bool)

(declare-fun lt!38198 () Bool)

(assert (=> d!20277 (= lt!38198 (select (content!86 lt!37483) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(declare-fun e!53290 () Bool)

(assert (=> d!20277 (= lt!38198 e!53290)))

(declare-fun res!42442 () Bool)

(assert (=> d!20277 (=> (not res!42442) (not e!53290))))

(assert (=> d!20277 (= res!42442 ((_ is Cons!1510) lt!37483))))

(assert (=> d!20277 (= (contains!745 lt!37483 (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))) lt!38198)))

(declare-fun b!81677 () Bool)

(declare-fun e!53291 () Bool)

(assert (=> b!81677 (= e!53290 e!53291)))

(declare-fun res!42441 () Bool)

(assert (=> b!81677 (=> res!42441 e!53291)))

(assert (=> b!81677 (= res!42441 (= (h!2099 lt!37483) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(declare-fun b!81678 () Bool)

(assert (=> b!81678 (= e!53291 (contains!745 (t!5172 lt!37483) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(assert (= (and d!20277 res!42442) b!81677))

(assert (= (and b!81677 (not res!42441)) b!81678))

(declare-fun m!83989 () Bool)

(assert (=> d!20277 m!83989))

(declare-fun m!83991 () Bool)

(assert (=> d!20277 m!83991))

(declare-fun m!83993 () Bool)

(assert (=> b!81678 m!83993))

(assert (=> b!80584 d!20277))

(declare-fun d!20279 () Bool)

(declare-fun lt!38199 () Bool)

(assert (=> d!20279 (= lt!38199 (select (content!86 lt!37726) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(declare-fun e!53292 () Bool)

(assert (=> d!20279 (= lt!38199 e!53292)))

(declare-fun res!42444 () Bool)

(assert (=> d!20279 (=> (not res!42444) (not e!53292))))

(assert (=> d!20279 (= res!42444 ((_ is Cons!1510) lt!37726))))

(assert (=> d!20279 (= (contains!745 lt!37726 (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))) lt!38199)))

(declare-fun b!81679 () Bool)

(declare-fun e!53293 () Bool)

(assert (=> b!81679 (= e!53292 e!53293)))

(declare-fun res!42443 () Bool)

(assert (=> b!81679 (=> res!42443 e!53293)))

(assert (=> b!81679 (= res!42443 (= (h!2099 lt!37726) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(declare-fun b!81680 () Bool)

(assert (=> b!81680 (= e!53293 (contains!745 (t!5172 lt!37726) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(assert (= (and d!20279 res!42444) b!81679))

(assert (= (and b!81679 (not res!42443)) b!81680))

(declare-fun m!83995 () Bool)

(assert (=> d!20279 m!83995))

(declare-fun m!83997 () Bool)

(assert (=> d!20279 m!83997))

(declare-fun m!83999 () Bool)

(assert (=> b!81680 m!83999))

(assert (=> b!80868 d!20279))

(declare-fun b!81684 () Bool)

(declare-fun e!53295 () Option!142)

(assert (=> b!81684 (= e!53295 None!140)))

(declare-fun b!81681 () Bool)

(declare-fun e!53294 () Option!142)

(assert (=> b!81681 (= e!53294 (Some!141 (_2!1102 (h!2099 (t!5172 lt!37304)))))))

(declare-fun b!81683 () Bool)

(assert (=> b!81683 (= e!53295 (getValueByKey!136 (t!5172 (t!5172 lt!37304)) (_1!1102 lt!37075)))))

(declare-fun d!20281 () Bool)

(declare-fun c!12908 () Bool)

(assert (=> d!20281 (= c!12908 (and ((_ is Cons!1510) (t!5172 lt!37304)) (= (_1!1102 (h!2099 (t!5172 lt!37304))) (_1!1102 lt!37075))))))

(assert (=> d!20281 (= (getValueByKey!136 (t!5172 lt!37304) (_1!1102 lt!37075)) e!53294)))

(declare-fun b!81682 () Bool)

(assert (=> b!81682 (= e!53294 e!53295)))

(declare-fun c!12909 () Bool)

(assert (=> b!81682 (= c!12909 (and ((_ is Cons!1510) (t!5172 lt!37304)) (not (= (_1!1102 (h!2099 (t!5172 lt!37304))) (_1!1102 lt!37075)))))))

(assert (= (and d!20281 c!12908) b!81681))

(assert (= (and d!20281 (not c!12908)) b!81682))

(assert (= (and b!81682 c!12909) b!81683))

(assert (= (and b!81682 (not c!12909)) b!81684))

(declare-fun m!84001 () Bool)

(assert (=> b!81683 m!84001))

(assert (=> b!80823 d!20281))

(declare-fun d!20283 () Bool)

(declare-fun lt!38200 () Bool)

(assert (=> d!20283 (= lt!38200 (select (content!86 lt!37834) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun e!53296 () Bool)

(assert (=> d!20283 (= lt!38200 e!53296)))

(declare-fun res!42446 () Bool)

(assert (=> d!20283 (=> (not res!42446) (not e!53296))))

(assert (=> d!20283 (= res!42446 ((_ is Cons!1510) lt!37834))))

(assert (=> d!20283 (= (contains!745 lt!37834 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))) lt!38200)))

(declare-fun b!81685 () Bool)

(declare-fun e!53297 () Bool)

(assert (=> b!81685 (= e!53296 e!53297)))

(declare-fun res!42445 () Bool)

(assert (=> b!81685 (=> res!42445 e!53297)))

(assert (=> b!81685 (= res!42445 (= (h!2099 lt!37834) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun b!81686 () Bool)

(assert (=> b!81686 (= e!53297 (contains!745 (t!5172 lt!37834) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(assert (= (and d!20283 res!42446) b!81685))

(assert (= (and b!81685 (not res!42445)) b!81686))

(declare-fun m!84003 () Bool)

(assert (=> d!20283 m!84003))

(declare-fun m!84005 () Bool)

(assert (=> d!20283 m!84005))

(declare-fun m!84007 () Bool)

(assert (=> b!81686 m!84007))

(assert (=> b!81035 d!20283))

(declare-fun b!81687 () Bool)

(declare-fun e!53298 () Bool)

(declare-fun call!7629 () Bool)

(assert (=> b!81687 (= e!53298 call!7629)))

(declare-fun b!81688 () Bool)

(declare-fun e!53299 () Bool)

(assert (=> b!81688 (= e!53299 call!7629)))

(declare-fun b!81689 () Bool)

(declare-fun e!53300 () Bool)

(assert (=> b!81689 (= e!53300 e!53299)))

(declare-fun c!12910 () Bool)

(assert (=> b!81689 (= c!12910 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!81690 () Bool)

(assert (=> b!81690 (= e!53299 e!53298)))

(declare-fun lt!38202 () (_ BitVec 64))

(assert (=> b!81690 (= lt!38202 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!38203 () Unit!2327)

(assert (=> b!81690 (= lt!38203 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) lt!38202 #b00000000000000000000000000000000))))

(assert (=> b!81690 (arrayContainsKey!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) lt!38202 #b00000000000000000000000000000000)))

(declare-fun lt!38201 () Unit!2327)

(assert (=> b!81690 (= lt!38201 lt!38203)))

(declare-fun res!42448 () Bool)

(assert (=> b!81690 (= res!42448 (= (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) #b00000000000000000000000000000000) (_keys!3955 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992)))) (Found!244 #b00000000000000000000000000000000)))))

(assert (=> b!81690 (=> (not res!42448) (not e!53298))))

(declare-fun bm!7626 () Bool)

(assert (=> bm!7626 (= call!7629 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3955 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun d!20285 () Bool)

(declare-fun res!42447 () Bool)

(assert (=> d!20285 (=> res!42447 e!53300)))

(assert (=> d!20285 (= res!42447 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> d!20285 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992)))) e!53300)))

(assert (= (and d!20285 (not res!42447)) b!81689))

(assert (= (and b!81689 c!12910) b!81690))

(assert (= (and b!81689 (not c!12910)) b!81688))

(assert (= (and b!81690 res!42448) b!81687))

(assert (= (or b!81687 b!81688) bm!7626))

(assert (=> b!81689 m!83709))

(assert (=> b!81689 m!83709))

(assert (=> b!81689 m!83711))

(assert (=> b!81690 m!83709))

(declare-fun m!84009 () Bool)

(assert (=> b!81690 m!84009))

(declare-fun m!84011 () Bool)

(assert (=> b!81690 m!84011))

(assert (=> b!81690 m!83709))

(declare-fun m!84013 () Bool)

(assert (=> b!81690 m!84013))

(declare-fun m!84015 () Bool)

(assert (=> bm!7626 m!84015))

(assert (=> b!80647 d!20285))

(declare-fun b!81703 () Bool)

(declare-fun e!53308 () SeekEntryResult!244)

(assert (=> b!81703 (= e!53308 Undefined!244)))

(declare-fun b!81704 () Bool)

(declare-fun e!53309 () SeekEntryResult!244)

(assert (=> b!81704 (= e!53308 e!53309)))

(declare-fun c!12917 () Bool)

(declare-fun lt!38209 () (_ BitVec 64))

(assert (=> b!81704 (= c!12917 (= lt!38209 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun d!20287 () Bool)

(declare-fun lt!38208 () SeekEntryResult!244)

(assert (=> d!20287 (and (or ((_ is Undefined!244) lt!38208) (not ((_ is Found!244) lt!38208)) (and (bvsge (index!3112 lt!38208) #b00000000000000000000000000000000) (bvslt (index!3112 lt!38208) (size!2131 (_keys!3955 newMap!16))))) (or ((_ is Undefined!244) lt!38208) ((_ is Found!244) lt!38208) (not ((_ is MissingVacant!244) lt!38208)) (not (= (index!3114 lt!38208) (index!3113 lt!37720))) (and (bvsge (index!3114 lt!38208) #b00000000000000000000000000000000) (bvslt (index!3114 lt!38208) (size!2131 (_keys!3955 newMap!16))))) (or ((_ is Undefined!244) lt!38208) (ite ((_ is Found!244) lt!38208) (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!38208)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) (and ((_ is MissingVacant!244) lt!38208) (= (index!3114 lt!38208) (index!3113 lt!37720)) (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3114 lt!38208)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!20287 (= lt!38208 e!53308)))

(declare-fun c!12918 () Bool)

(assert (=> d!20287 (= c!12918 (bvsge (x!11694 lt!37720) #b01111111111111111111111111111110))))

(assert (=> d!20287 (= lt!38209 (select (arr!1888 (_keys!3955 newMap!16)) (index!3113 lt!37720)))))

(assert (=> d!20287 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!20287 (= (seekKeyOrZeroReturnVacant!0 (x!11694 lt!37720) (index!3113 lt!37720) (index!3113 lt!37720) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)) lt!38208)))

(declare-fun b!81705 () Bool)

(declare-fun c!12919 () Bool)

(assert (=> b!81705 (= c!12919 (= lt!38209 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53307 () SeekEntryResult!244)

(assert (=> b!81705 (= e!53309 e!53307)))

(declare-fun b!81706 () Bool)

(assert (=> b!81706 (= e!53307 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11694 lt!37720) #b00000000000000000000000000000001) (nextIndex!0 (index!3113 lt!37720) (x!11694 lt!37720) (mask!6297 newMap!16)) (index!3113 lt!37720) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(declare-fun b!81707 () Bool)

(assert (=> b!81707 (= e!53309 (Found!244 (index!3113 lt!37720)))))

(declare-fun b!81708 () Bool)

(assert (=> b!81708 (= e!53307 (MissingVacant!244 (index!3113 lt!37720)))))

(assert (= (and d!20287 c!12918) b!81703))

(assert (= (and d!20287 (not c!12918)) b!81704))

(assert (= (and b!81704 c!12917) b!81707))

(assert (= (and b!81704 (not c!12917)) b!81705))

(assert (= (and b!81705 c!12919) b!81708))

(assert (= (and b!81705 (not c!12919)) b!81706))

(declare-fun m!84017 () Bool)

(assert (=> d!20287 m!84017))

(declare-fun m!84019 () Bool)

(assert (=> d!20287 m!84019))

(assert (=> d!20287 m!82423))

(assert (=> d!20287 m!81973))

(declare-fun m!84021 () Bool)

(assert (=> b!81706 m!84021))

(assert (=> b!81706 m!84021))

(assert (=> b!81706 m!81295))

(declare-fun m!84023 () Bool)

(assert (=> b!81706 m!84023))

(assert (=> b!80854 d!20287))

(declare-fun d!20289 () Bool)

(declare-fun e!53310 () Bool)

(assert (=> d!20289 e!53310))

(declare-fun res!42449 () Bool)

(assert (=> d!20289 (=> res!42449 e!53310)))

(declare-fun lt!38213 () Bool)

(assert (=> d!20289 (= res!42449 (not lt!38213))))

(declare-fun lt!38212 () Bool)

(assert (=> d!20289 (= lt!38213 lt!38212)))

(declare-fun lt!38211 () Unit!2327)

(declare-fun e!53311 () Unit!2327)

(assert (=> d!20289 (= lt!38211 e!53311)))

(declare-fun c!12920 () Bool)

(assert (=> d!20289 (= c!12920 lt!38212)))

(assert (=> d!20289 (= lt!38212 (containsKey!140 (toList!734 lt!37631) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!20289 (= (contains!742 lt!37631 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!38213)))

(declare-fun b!81709 () Bool)

(declare-fun lt!38210 () Unit!2327)

(assert (=> b!81709 (= e!53311 lt!38210)))

(assert (=> b!81709 (= lt!38210 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37631) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!81709 (isDefined!90 (getValueByKey!136 (toList!734 lt!37631) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!81710 () Bool)

(declare-fun Unit!2393 () Unit!2327)

(assert (=> b!81710 (= e!53311 Unit!2393)))

(declare-fun b!81711 () Bool)

(assert (=> b!81711 (= e!53310 (isDefined!90 (getValueByKey!136 (toList!734 lt!37631) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!20289 c!12920) b!81709))

(assert (= (and d!20289 (not c!12920)) b!81710))

(assert (= (and d!20289 (not res!42449)) b!81711))

(assert (=> d!20289 m!82201))

(declare-fun m!84025 () Bool)

(assert (=> d!20289 m!84025))

(assert (=> b!81709 m!82201))

(declare-fun m!84027 () Bool)

(assert (=> b!81709 m!84027))

(assert (=> b!81709 m!82201))

(declare-fun m!84029 () Bool)

(assert (=> b!81709 m!84029))

(assert (=> b!81709 m!84029))

(declare-fun m!84031 () Bool)

(assert (=> b!81709 m!84031))

(assert (=> b!81711 m!82201))

(assert (=> b!81711 m!84029))

(assert (=> b!81711 m!84029))

(assert (=> b!81711 m!84031))

(assert (=> b!80725 d!20289))

(assert (=> b!80800 d!20075))

(declare-fun lt!38214 () Bool)

(declare-fun d!20291 () Bool)

(assert (=> d!20291 (= lt!38214 (select (content!86 (toList!734 lt!37471)) (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun e!53312 () Bool)

(assert (=> d!20291 (= lt!38214 e!53312)))

(declare-fun res!42451 () Bool)

(assert (=> d!20291 (=> (not res!42451) (not e!53312))))

(assert (=> d!20291 (= res!42451 ((_ is Cons!1510) (toList!734 lt!37471)))))

(assert (=> d!20291 (= (contains!745 (toList!734 lt!37471) (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38214)))

(declare-fun b!81712 () Bool)

(declare-fun e!53313 () Bool)

(assert (=> b!81712 (= e!53312 e!53313)))

(declare-fun res!42450 () Bool)

(assert (=> b!81712 (=> res!42450 e!53313)))

(assert (=> b!81712 (= res!42450 (= (h!2099 (toList!734 lt!37471)) (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81713 () Bool)

(assert (=> b!81713 (= e!53313 (contains!745 (t!5172 (toList!734 lt!37471)) (ite (or c!12571 c!12573) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (= (and d!20291 res!42451) b!81712))

(assert (= (and b!81712 (not res!42450)) b!81713))

(declare-fun m!84033 () Bool)

(assert (=> d!20291 m!84033))

(declare-fun m!84035 () Bool)

(assert (=> d!20291 m!84035))

(declare-fun m!84037 () Bool)

(assert (=> b!81713 m!84037))

(assert (=> b!80554 d!20291))

(declare-fun lt!38215 () Bool)

(declare-fun d!20293 () Bool)

(assert (=> d!20293 (= lt!38215 (select (content!86 (toList!734 lt!37755)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(declare-fun e!53314 () Bool)

(assert (=> d!20293 (= lt!38215 e!53314)))

(declare-fun res!42453 () Bool)

(assert (=> d!20293 (=> (not res!42453) (not e!53314))))

(assert (=> d!20293 (= res!42453 ((_ is Cons!1510) (toList!734 lt!37755)))))

(assert (=> d!20293 (= (contains!745 (toList!734 lt!37755) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) lt!38215)))

(declare-fun b!81714 () Bool)

(declare-fun e!53315 () Bool)

(assert (=> b!81714 (= e!53314 e!53315)))

(declare-fun res!42452 () Bool)

(assert (=> b!81714 (=> res!42452 e!53315)))

(assert (=> b!81714 (= res!42452 (= (h!2099 (toList!734 lt!37755)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(declare-fun b!81715 () Bool)

(assert (=> b!81715 (= e!53315 (contains!745 (t!5172 (toList!734 lt!37755)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (= (and d!20293 res!42453) b!81714))

(assert (= (and b!81714 (not res!42452)) b!81715))

(declare-fun m!84039 () Bool)

(assert (=> d!20293 m!84039))

(declare-fun m!84041 () Bool)

(assert (=> d!20293 m!84041))

(declare-fun m!84043 () Bool)

(assert (=> b!81715 m!84043))

(assert (=> b!80893 d!20293))

(declare-fun d!20295 () Bool)

(assert (=> d!20295 (= (isEmpty!333 lt!37631) (isEmpty!335 (toList!734 lt!37631)))))

(declare-fun bs!3458 () Bool)

(assert (= bs!3458 d!20295))

(declare-fun m!84045 () Bool)

(assert (=> bs!3458 m!84045))

(assert (=> b!80726 d!20295))

(declare-fun b!81719 () Bool)

(declare-fun e!53317 () Option!142)

(assert (=> b!81719 (= e!53317 None!140)))

(declare-fun b!81716 () Bool)

(declare-fun e!53316 () Option!142)

(assert (=> b!81716 (= e!53316 (Some!141 (_2!1102 (h!2099 (t!5172 (toList!734 lt!37088))))))))

(declare-fun b!81718 () Bool)

(assert (=> b!81718 (= e!53317 (getValueByKey!136 (t!5172 (t!5172 (toList!734 lt!37088))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun c!12921 () Bool)

(declare-fun d!20297 () Bool)

(assert (=> d!20297 (= c!12921 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37088))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37088)))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (=> d!20297 (= (getValueByKey!136 (t!5172 (toList!734 lt!37088)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) e!53316)))

(declare-fun b!81717 () Bool)

(assert (=> b!81717 (= e!53316 e!53317)))

(declare-fun c!12922 () Bool)

(assert (=> b!81717 (= c!12922 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37088))) (not (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37088)))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))))

(assert (= (and d!20297 c!12921) b!81716))

(assert (= (and d!20297 (not c!12921)) b!81717))

(assert (= (and b!81717 c!12922) b!81718))

(assert (= (and b!81717 (not c!12922)) b!81719))

(assert (=> b!81718 m!81295))

(declare-fun m!84047 () Bool)

(assert (=> b!81718 m!84047))

(assert (=> b!80960 d!20297))

(declare-fun d!20299 () Bool)

(declare-fun c!12923 () Bool)

(assert (=> d!20299 (= c!12923 ((_ is Nil!1511) (toList!734 lt!37350)))))

(declare-fun e!53318 () (InoxSet tuple2!2182))

(assert (=> d!20299 (= (content!86 (toList!734 lt!37350)) e!53318)))

(declare-fun b!81720 () Bool)

(assert (=> b!81720 (= e!53318 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!81721 () Bool)

(assert (=> b!81721 (= e!53318 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2099 (toList!734 lt!37350)) true) (content!86 (t!5172 (toList!734 lt!37350)))))))

(assert (= (and d!20299 c!12923) b!81720))

(assert (= (and d!20299 (not c!12923)) b!81721))

(declare-fun m!84049 () Bool)

(assert (=> b!81721 m!84049))

(assert (=> b!81721 m!83943))

(assert (=> d!19827 d!20299))

(declare-fun d!20301 () Bool)

(declare-fun lt!38216 () Bool)

(assert (=> d!20301 (= lt!38216 (select (content!85 Nil!1512) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!53320 () Bool)

(assert (=> d!20301 (= lt!38216 e!53320)))

(declare-fun res!42455 () Bool)

(assert (=> d!20301 (=> (not res!42455) (not e!53320))))

(assert (=> d!20301 (= res!42455 ((_ is Cons!1511) Nil!1512))))

(assert (=> d!20301 (= (contains!746 Nil!1512 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) lt!38216)))

(declare-fun b!81722 () Bool)

(declare-fun e!53319 () Bool)

(assert (=> b!81722 (= e!53320 e!53319)))

(declare-fun res!42454 () Bool)

(assert (=> b!81722 (=> res!42454 e!53319)))

(assert (=> b!81722 (= res!42454 (= (h!2100 Nil!1512) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81723 () Bool)

(assert (=> b!81723 (= e!53319 (contains!746 (t!5173 Nil!1512) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!20301 res!42455) b!81722))

(assert (= (and b!81722 (not res!42454)) b!81723))

(assert (=> d!20301 m!81985))

(assert (=> d!20301 m!82131))

(declare-fun m!84051 () Bool)

(assert (=> d!20301 m!84051))

(assert (=> b!81723 m!82131))

(declare-fun m!84053 () Bool)

(assert (=> b!81723 m!84053))

(assert (=> b!80786 d!20301))

(declare-fun d!20303 () Bool)

(assert (=> d!20303 (= (get!1187 (getValueByKey!136 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2606 (getValueByKey!136 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19807 d!20303))

(declare-fun b!81727 () Bool)

(declare-fun e!53322 () Option!142)

(assert (=> b!81727 (= e!53322 None!140)))

(declare-fun b!81724 () Bool)

(declare-fun e!53321 () Option!142)

(assert (=> b!81724 (= e!53321 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37406)))))))

(declare-fun b!81726 () Bool)

(assert (=> b!81726 (= e!53322 (getValueByKey!136 (t!5172 (toList!734 lt!37406)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!12924 () Bool)

(declare-fun d!20305 () Bool)

(assert (=> d!20305 (= c!12924 (and ((_ is Cons!1510) (toList!734 lt!37406)) (= (_1!1102 (h!2099 (toList!734 lt!37406))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!20305 (= (getValueByKey!136 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53321)))

(declare-fun b!81725 () Bool)

(assert (=> b!81725 (= e!53321 e!53322)))

(declare-fun c!12925 () Bool)

(assert (=> b!81725 (= c!12925 (and ((_ is Cons!1510) (toList!734 lt!37406)) (not (= (_1!1102 (h!2099 (toList!734 lt!37406))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!20305 c!12924) b!81724))

(assert (= (and d!20305 (not c!12924)) b!81725))

(assert (= (and b!81725 c!12925) b!81726))

(assert (= (and b!81725 (not c!12925)) b!81727))

(assert (=> b!81726 m!81625))

(declare-fun m!84055 () Bool)

(assert (=> b!81726 m!84055))

(assert (=> d!19807 d!20305))

(declare-fun b!81731 () Bool)

(declare-fun e!53324 () Option!142)

(assert (=> b!81731 (= e!53324 None!140)))

(declare-fun b!81728 () Bool)

(declare-fun e!53323 () Option!142)

(assert (=> b!81728 (= e!53323 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37500)))))))

(declare-fun b!81730 () Bool)

(assert (=> b!81730 (= e!53324 (getValueByKey!136 (t!5172 (toList!734 lt!37500)) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun c!12926 () Bool)

(declare-fun d!20307 () Bool)

(assert (=> d!20307 (= c!12926 (and ((_ is Cons!1510) (toList!734 lt!37500)) (= (_1!1102 (h!2099 (toList!734 lt!37500))) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (=> d!20307 (= (getValueByKey!136 (toList!734 lt!37500) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) e!53323)))

(declare-fun b!81729 () Bool)

(assert (=> b!81729 (= e!53323 e!53324)))

(declare-fun c!12927 () Bool)

(assert (=> b!81729 (= c!12927 (and ((_ is Cons!1510) (toList!734 lt!37500)) (not (= (_1!1102 (h!2099 (toList!734 lt!37500))) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))))

(assert (= (and d!20307 c!12926) b!81728))

(assert (= (and d!20307 (not c!12926)) b!81729))

(assert (= (and b!81729 c!12927) b!81730))

(assert (= (and b!81729 (not c!12927)) b!81731))

(declare-fun m!84057 () Bool)

(assert (=> b!81730 m!84057))

(assert (=> b!80614 d!20307))

(assert (=> b!80820 d!20069))

(assert (=> b!80820 d!19821))

(declare-fun d!20309 () Bool)

(declare-fun c!12928 () Bool)

(assert (=> d!20309 (= c!12928 ((_ is Nil!1511) (toList!734 lt!37346)))))

(declare-fun e!53325 () (InoxSet tuple2!2182))

(assert (=> d!20309 (= (content!86 (toList!734 lt!37346)) e!53325)))

(declare-fun b!81732 () Bool)

(assert (=> b!81732 (= e!53325 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!81733 () Bool)

(assert (=> b!81733 (= e!53325 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2099 (toList!734 lt!37346)) true) (content!86 (t!5172 (toList!734 lt!37346)))))))

(assert (= (and d!20309 c!12928) b!81732))

(assert (= (and d!20309 (not c!12928)) b!81733))

(declare-fun m!84059 () Bool)

(assert (=> b!81733 m!84059))

(assert (=> b!81733 m!83949))

(assert (=> d!19819 d!20309))

(assert (=> b!80774 d!20075))

(declare-fun b!81734 () Bool)

(declare-fun e!53329 () List!1514)

(declare-fun call!7632 () List!1514)

(assert (=> b!81734 (= e!53329 call!7632)))

(declare-fun call!7631 () List!1514)

(declare-fun bm!7627 () Bool)

(declare-fun c!12932 () Bool)

(declare-fun e!53326 () List!1514)

(assert (=> bm!7627 (= call!7631 ($colon$colon!69 e!53326 (ite c!12932 (h!2099 (t!5172 (toList!734 lt!37073))) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079)))))))

(declare-fun c!12930 () Bool)

(assert (=> bm!7627 (= c!12930 c!12932)))

(declare-fun b!81735 () Bool)

(declare-fun e!53330 () Bool)

(declare-fun lt!38217 () List!1514)

(assert (=> b!81735 (= e!53330 (contains!745 lt!38217 (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(declare-fun bm!7628 () Bool)

(declare-fun call!7630 () List!1514)

(assert (=> bm!7628 (= call!7632 call!7630)))

(declare-fun d!20311 () Bool)

(assert (=> d!20311 e!53330))

(declare-fun res!42457 () Bool)

(assert (=> d!20311 (=> (not res!42457) (not e!53330))))

(assert (=> d!20311 (= res!42457 (isStrictlySorted!291 lt!38217))))

(declare-fun e!53328 () List!1514)

(assert (=> d!20311 (= lt!38217 e!53328)))

(assert (=> d!20311 (= c!12932 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37073))) (bvslt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37073)))) (_1!1102 lt!37079))))))

(assert (=> d!20311 (isStrictlySorted!291 (t!5172 (toList!734 lt!37073)))))

(assert (=> d!20311 (= (insertStrictlySorted!59 (t!5172 (toList!734 lt!37073)) (_1!1102 lt!37079) (_2!1102 lt!37079)) lt!38217)))

(declare-fun b!81736 () Bool)

(declare-fun c!12929 () Bool)

(assert (=> b!81736 (= c!12929 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37073))) (bvsgt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37073)))) (_1!1102 lt!37079))))))

(declare-fun e!53327 () List!1514)

(assert (=> b!81736 (= e!53327 e!53329)))

(declare-fun b!81737 () Bool)

(assert (=> b!81737 (= e!53327 call!7630)))

(declare-fun b!81738 () Bool)

(assert (=> b!81738 (= e!53328 call!7631)))

(declare-fun bm!7629 () Bool)

(assert (=> bm!7629 (= call!7630 call!7631)))

(declare-fun b!81739 () Bool)

(declare-fun res!42456 () Bool)

(assert (=> b!81739 (=> (not res!42456) (not e!53330))))

(assert (=> b!81739 (= res!42456 (containsKey!140 lt!38217 (_1!1102 lt!37079)))))

(declare-fun b!81740 () Bool)

(assert (=> b!81740 (= e!53329 call!7632)))

(declare-fun b!81741 () Bool)

(declare-fun c!12931 () Bool)

(assert (=> b!81741 (= e!53326 (ite c!12931 (t!5172 (t!5172 (toList!734 lt!37073))) (ite c!12929 (Cons!1510 (h!2099 (t!5172 (toList!734 lt!37073))) (t!5172 (t!5172 (toList!734 lt!37073)))) Nil!1511)))))

(declare-fun b!81742 () Bool)

(assert (=> b!81742 (= e!53328 e!53327)))

(assert (=> b!81742 (= c!12931 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37073))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37073)))) (_1!1102 lt!37079))))))

(declare-fun b!81743 () Bool)

(assert (=> b!81743 (= e!53326 (insertStrictlySorted!59 (t!5172 (t!5172 (toList!734 lt!37073))) (_1!1102 lt!37079) (_2!1102 lt!37079)))))

(assert (= (and d!20311 c!12932) b!81738))

(assert (= (and d!20311 (not c!12932)) b!81742))

(assert (= (and b!81742 c!12931) b!81737))

(assert (= (and b!81742 (not c!12931)) b!81736))

(assert (= (and b!81736 c!12929) b!81740))

(assert (= (and b!81736 (not c!12929)) b!81734))

(assert (= (or b!81740 b!81734) bm!7628))

(assert (= (or b!81737 bm!7628) bm!7629))

(assert (= (or b!81738 bm!7629) bm!7627))

(assert (= (and bm!7627 c!12930) b!81743))

(assert (= (and bm!7627 (not c!12930)) b!81741))

(assert (= (and d!20311 res!42457) b!81739))

(assert (= (and b!81739 res!42456) b!81735))

(declare-fun m!84061 () Bool)

(assert (=> d!20311 m!84061))

(assert (=> d!20311 m!83213))

(declare-fun m!84063 () Bool)

(assert (=> b!81743 m!84063))

(declare-fun m!84065 () Bool)

(assert (=> bm!7627 m!84065))

(declare-fun m!84067 () Bool)

(assert (=> b!81739 m!84067))

(declare-fun m!84069 () Bool)

(assert (=> b!81735 m!84069))

(assert (=> b!80592 d!20311))

(assert (=> d!19849 d!19885))

(declare-fun b!81744 () Bool)

(declare-fun e!53334 () List!1514)

(declare-fun call!7635 () List!1514)

(assert (=> b!81744 (= e!53334 call!7635)))

(declare-fun c!12936 () Bool)

(declare-fun e!53331 () List!1514)

(declare-fun bm!7630 () Bool)

(declare-fun call!7634 () List!1514)

(assert (=> bm!7630 (= call!7634 ($colon$colon!69 e!53331 (ite c!12936 (h!2099 (t!5172 (toList!734 lt!37081))) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079)))))))

(declare-fun c!12934 () Bool)

(assert (=> bm!7630 (= c!12934 c!12936)))

(declare-fun b!81745 () Bool)

(declare-fun e!53335 () Bool)

(declare-fun lt!38218 () List!1514)

(assert (=> b!81745 (= e!53335 (contains!745 lt!38218 (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(declare-fun bm!7631 () Bool)

(declare-fun call!7633 () List!1514)

(assert (=> bm!7631 (= call!7635 call!7633)))

(declare-fun d!20313 () Bool)

(assert (=> d!20313 e!53335))

(declare-fun res!42459 () Bool)

(assert (=> d!20313 (=> (not res!42459) (not e!53335))))

(assert (=> d!20313 (= res!42459 (isStrictlySorted!291 lt!38218))))

(declare-fun e!53333 () List!1514)

(assert (=> d!20313 (= lt!38218 e!53333)))

(assert (=> d!20313 (= c!12936 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37081))) (bvslt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37081)))) (_1!1102 lt!37079))))))

(assert (=> d!20313 (isStrictlySorted!291 (t!5172 (toList!734 lt!37081)))))

(assert (=> d!20313 (= (insertStrictlySorted!59 (t!5172 (toList!734 lt!37081)) (_1!1102 lt!37079) (_2!1102 lt!37079)) lt!38218)))

(declare-fun b!81746 () Bool)

(declare-fun c!12933 () Bool)

(assert (=> b!81746 (= c!12933 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37081))) (bvsgt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37081)))) (_1!1102 lt!37079))))))

(declare-fun e!53332 () List!1514)

(assert (=> b!81746 (= e!53332 e!53334)))

(declare-fun b!81747 () Bool)

(assert (=> b!81747 (= e!53332 call!7633)))

(declare-fun b!81748 () Bool)

(assert (=> b!81748 (= e!53333 call!7634)))

(declare-fun bm!7632 () Bool)

(assert (=> bm!7632 (= call!7633 call!7634)))

(declare-fun b!81749 () Bool)

(declare-fun res!42458 () Bool)

(assert (=> b!81749 (=> (not res!42458) (not e!53335))))

(assert (=> b!81749 (= res!42458 (containsKey!140 lt!38218 (_1!1102 lt!37079)))))

(declare-fun b!81750 () Bool)

(assert (=> b!81750 (= e!53334 call!7635)))

(declare-fun b!81751 () Bool)

(declare-fun c!12935 () Bool)

(assert (=> b!81751 (= e!53331 (ite c!12935 (t!5172 (t!5172 (toList!734 lt!37081))) (ite c!12933 (Cons!1510 (h!2099 (t!5172 (toList!734 lt!37081))) (t!5172 (t!5172 (toList!734 lt!37081)))) Nil!1511)))))

(declare-fun b!81752 () Bool)

(assert (=> b!81752 (= e!53333 e!53332)))

(assert (=> b!81752 (= c!12935 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37081))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37081)))) (_1!1102 lt!37079))))))

(declare-fun b!81753 () Bool)

(assert (=> b!81753 (= e!53331 (insertStrictlySorted!59 (t!5172 (t!5172 (toList!734 lt!37081))) (_1!1102 lt!37079) (_2!1102 lt!37079)))))

(assert (= (and d!20313 c!12936) b!81748))

(assert (= (and d!20313 (not c!12936)) b!81752))

(assert (= (and b!81752 c!12935) b!81747))

(assert (= (and b!81752 (not c!12935)) b!81746))

(assert (= (and b!81746 c!12933) b!81750))

(assert (= (and b!81746 (not c!12933)) b!81744))

(assert (= (or b!81750 b!81744) bm!7631))

(assert (= (or b!81747 bm!7631) bm!7632))

(assert (= (or b!81748 bm!7632) bm!7630))

(assert (= (and bm!7630 c!12934) b!81753))

(assert (= (and bm!7630 (not c!12934)) b!81751))

(assert (= (and d!20313 res!42459) b!81749))

(assert (= (and b!81749 res!42458) b!81745))

(declare-fun m!84071 () Bool)

(assert (=> d!20313 m!84071))

(assert (=> d!20313 m!82789))

(declare-fun m!84073 () Bool)

(assert (=> b!81753 m!84073))

(declare-fun m!84075 () Bool)

(assert (=> bm!7630 m!84075))

(declare-fun m!84077 () Bool)

(assert (=> b!81749 m!84077))

(declare-fun m!84079 () Bool)

(assert (=> b!81745 m!84079))

(assert (=> b!80876 d!20313))

(declare-fun d!20315 () Bool)

(declare-fun res!42460 () Bool)

(declare-fun e!53336 () Bool)

(assert (=> d!20315 (=> res!42460 e!53336)))

(assert (=> d!20315 (= res!42460 (and ((_ is Cons!1510) lt!37304) (= (_1!1102 (h!2099 lt!37304)) (_1!1102 lt!37075))))))

(assert (=> d!20315 (= (containsKey!140 lt!37304 (_1!1102 lt!37075)) e!53336)))

(declare-fun b!81754 () Bool)

(declare-fun e!53337 () Bool)

(assert (=> b!81754 (= e!53336 e!53337)))

(declare-fun res!42461 () Bool)

(assert (=> b!81754 (=> (not res!42461) (not e!53337))))

(assert (=> b!81754 (= res!42461 (and (or (not ((_ is Cons!1510) lt!37304)) (bvsle (_1!1102 (h!2099 lt!37304)) (_1!1102 lt!37075))) ((_ is Cons!1510) lt!37304) (bvslt (_1!1102 (h!2099 lt!37304)) (_1!1102 lt!37075))))))

(declare-fun b!81755 () Bool)

(assert (=> b!81755 (= e!53337 (containsKey!140 (t!5172 lt!37304) (_1!1102 lt!37075)))))

(assert (= (and d!20315 (not res!42460)) b!81754))

(assert (= (and b!81754 res!42461) b!81755))

(declare-fun m!84081 () Bool)

(assert (=> b!81755 m!84081))

(assert (=> b!80825 d!20315))

(declare-fun b!81756 () Bool)

(declare-fun e!53341 () List!1514)

(declare-fun call!7638 () List!1514)

(assert (=> b!81756 (= e!53341 call!7638)))

(declare-fun c!12940 () Bool)

(declare-fun call!7637 () List!1514)

(declare-fun bm!7633 () Bool)

(declare-fun e!53338 () List!1514)

(assert (=> bm!7633 (= call!7637 ($colon$colon!69 e!53338 (ite c!12940 (h!2099 (t!5172 (toList!734 lt!37071))) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082)))))))

(declare-fun c!12938 () Bool)

(assert (=> bm!7633 (= c!12938 c!12940)))

(declare-fun b!81757 () Bool)

(declare-fun e!53342 () Bool)

(declare-fun lt!38219 () List!1514)

(assert (=> b!81757 (= e!53342 (contains!745 lt!38219 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun bm!7634 () Bool)

(declare-fun call!7636 () List!1514)

(assert (=> bm!7634 (= call!7638 call!7636)))

(declare-fun d!20317 () Bool)

(assert (=> d!20317 e!53342))

(declare-fun res!42463 () Bool)

(assert (=> d!20317 (=> (not res!42463) (not e!53342))))

(assert (=> d!20317 (= res!42463 (isStrictlySorted!291 lt!38219))))

(declare-fun e!53340 () List!1514)

(assert (=> d!20317 (= lt!38219 e!53340)))

(assert (=> d!20317 (= c!12940 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37071))) (bvslt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37071)))) (_1!1102 lt!37082))))))

(assert (=> d!20317 (isStrictlySorted!291 (t!5172 (toList!734 lt!37071)))))

(assert (=> d!20317 (= (insertStrictlySorted!59 (t!5172 (toList!734 lt!37071)) (_1!1102 lt!37082) (_2!1102 lt!37082)) lt!38219)))

(declare-fun b!81758 () Bool)

(declare-fun c!12937 () Bool)

(assert (=> b!81758 (= c!12937 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37071))) (bvsgt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37071)))) (_1!1102 lt!37082))))))

(declare-fun e!53339 () List!1514)

(assert (=> b!81758 (= e!53339 e!53341)))

(declare-fun b!81759 () Bool)

(assert (=> b!81759 (= e!53339 call!7636)))

(declare-fun b!81760 () Bool)

(assert (=> b!81760 (= e!53340 call!7637)))

(declare-fun bm!7635 () Bool)

(assert (=> bm!7635 (= call!7636 call!7637)))

(declare-fun b!81761 () Bool)

(declare-fun res!42462 () Bool)

(assert (=> b!81761 (=> (not res!42462) (not e!53342))))

(assert (=> b!81761 (= res!42462 (containsKey!140 lt!38219 (_1!1102 lt!37082)))))

(declare-fun b!81762 () Bool)

(assert (=> b!81762 (= e!53341 call!7638)))

(declare-fun c!12939 () Bool)

(declare-fun b!81763 () Bool)

(assert (=> b!81763 (= e!53338 (ite c!12939 (t!5172 (t!5172 (toList!734 lt!37071))) (ite c!12937 (Cons!1510 (h!2099 (t!5172 (toList!734 lt!37071))) (t!5172 (t!5172 (toList!734 lt!37071)))) Nil!1511)))))

(declare-fun b!81764 () Bool)

(assert (=> b!81764 (= e!53340 e!53339)))

(assert (=> b!81764 (= c!12939 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37071))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37071)))) (_1!1102 lt!37082))))))

(declare-fun b!81765 () Bool)

(assert (=> b!81765 (= e!53338 (insertStrictlySorted!59 (t!5172 (t!5172 (toList!734 lt!37071))) (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(assert (= (and d!20317 c!12940) b!81760))

(assert (= (and d!20317 (not c!12940)) b!81764))

(assert (= (and b!81764 c!12939) b!81759))

(assert (= (and b!81764 (not c!12939)) b!81758))

(assert (= (and b!81758 c!12937) b!81762))

(assert (= (and b!81758 (not c!12937)) b!81756))

(assert (= (or b!81762 b!81756) bm!7634))

(assert (= (or b!81759 bm!7634) bm!7635))

(assert (= (or b!81760 bm!7635) bm!7633))

(assert (= (and bm!7633 c!12938) b!81765))

(assert (= (and bm!7633 (not c!12938)) b!81763))

(assert (= (and d!20317 res!42463) b!81761))

(assert (= (and b!81761 res!42462) b!81757))

(declare-fun m!84083 () Bool)

(assert (=> d!20317 m!84083))

(assert (=> d!20317 m!82861))

(declare-fun m!84085 () Bool)

(assert (=> b!81765 m!84085))

(declare-fun m!84087 () Bool)

(assert (=> bm!7633 m!84087))

(declare-fun m!84089 () Bool)

(assert (=> b!81761 m!84089))

(declare-fun m!84091 () Bool)

(assert (=> b!81757 m!84091))

(assert (=> b!81043 d!20317))

(declare-fun d!20319 () Bool)

(assert (=> d!20319 (= (inRange!0 (index!3112 lt!37489) (mask!6297 newMap!16)) (and (bvsge (index!3112 lt!37489) #b00000000000000000000000000000000) (bvslt (index!3112 lt!37489) (bvadd (mask!6297 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!80600 d!20319))

(assert (=> b!80734 d!20101))

(declare-fun b!81766 () Bool)

(declare-fun lt!38226 () Unit!2327)

(declare-fun lt!38222 () Unit!2327)

(assert (=> b!81766 (= lt!38226 lt!38222)))

(declare-fun lt!38224 () (_ BitVec 64))

(declare-fun lt!38221 () (_ BitVec 64))

(declare-fun lt!38225 () V!3001)

(declare-fun lt!38223 () ListLongMap!1437)

(assert (=> b!81766 (not (contains!742 (+!104 lt!38223 (tuple2!2183 lt!38224 lt!38225)) lt!38221))))

(assert (=> b!81766 (= lt!38222 (addStillNotContains!30 lt!38223 lt!38224 lt!38225 lt!38221))))

(assert (=> b!81766 (= lt!38221 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81766 (= lt!38225 (get!1183 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81766 (= lt!38224 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7639 () ListLongMap!1437)

(assert (=> b!81766 (= lt!38223 call!7639)))

(declare-fun e!53349 () ListLongMap!1437)

(assert (=> b!81766 (= e!53349 (+!104 call!7639 (tuple2!2183 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) (get!1183 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81767 () Bool)

(declare-fun e!53344 () Bool)

(declare-fun e!53347 () Bool)

(assert (=> b!81767 (= e!53344 e!53347)))

(assert (=> b!81767 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun res!42466 () Bool)

(declare-fun lt!38220 () ListLongMap!1437)

(assert (=> b!81767 (= res!42466 (contains!742 lt!38220 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81767 (=> (not res!42466) (not e!53347))))

(declare-fun bm!7636 () Bool)

(assert (=> bm!7636 (= call!7639 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) (minValue!2188 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16)))))

(declare-fun b!81768 () Bool)

(declare-fun e!53346 () Bool)

(assert (=> b!81768 (= e!53346 (isEmpty!333 lt!38220))))

(declare-fun b!81769 () Bool)

(assert (=> b!81769 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> b!81769 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (_values!2275 newMap!16))))))

(assert (=> b!81769 (= e!53347 (= (apply!80 lt!38220 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81770 () Bool)

(assert (=> b!81770 (= e!53349 call!7639)))

(declare-fun b!81771 () Bool)

(declare-fun e!53348 () Bool)

(assert (=> b!81771 (= e!53348 e!53344)))

(declare-fun c!12944 () Bool)

(declare-fun e!53343 () Bool)

(assert (=> b!81771 (= c!12944 e!53343)))

(declare-fun res!42465 () Bool)

(assert (=> b!81771 (=> (not res!42465) (not e!53343))))

(assert (=> b!81771 (= res!42465 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81772 () Bool)

(declare-fun res!42467 () Bool)

(assert (=> b!81772 (=> (not res!42467) (not e!53348))))

(assert (=> b!81772 (= res!42467 (not (contains!742 lt!38220 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81773 () Bool)

(assert (=> b!81773 (= e!53344 e!53346)))

(declare-fun c!12943 () Bool)

(assert (=> b!81773 (= c!12943 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun d!20321 () Bool)

(assert (=> d!20321 e!53348))

(declare-fun res!42464 () Bool)

(assert (=> d!20321 (=> (not res!42464) (not e!53348))))

(assert (=> d!20321 (= res!42464 (not (contains!742 lt!38220 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53345 () ListLongMap!1437)

(assert (=> d!20321 (= lt!38220 e!53345)))

(declare-fun c!12941 () Bool)

(assert (=> d!20321 (= c!12941 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!20321 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!20321 (= (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38220)))

(declare-fun b!81774 () Bool)

(assert (=> b!81774 (= e!53343 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81774 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!81775 () Bool)

(assert (=> b!81775 (= e!53345 (ListLongMap!1438 Nil!1511))))

(declare-fun b!81776 () Bool)

(assert (=> b!81776 (= e!53345 e!53349)))

(declare-fun c!12942 () Bool)

(assert (=> b!81776 (= c!12942 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81777 () Bool)

(assert (=> b!81777 (= e!53346 (= lt!38220 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (ite (and c!12532 c!12534) lt!37269 (extraKeys!2139 newMap!16)) (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) (minValue!2188 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16))))))

(assert (= (and d!20321 c!12941) b!81775))

(assert (= (and d!20321 (not c!12941)) b!81776))

(assert (= (and b!81776 c!12942) b!81766))

(assert (= (and b!81776 (not c!12942)) b!81770))

(assert (= (or b!81766 b!81770) bm!7636))

(assert (= (and d!20321 res!42464) b!81772))

(assert (= (and b!81772 res!42467) b!81771))

(assert (= (and b!81771 res!42465) b!81774))

(assert (= (and b!81771 c!12944) b!81767))

(assert (= (and b!81771 (not c!12944)) b!81773))

(assert (= (and b!81767 res!42466) b!81769))

(assert (= (and b!81773 c!12943) b!81777))

(assert (= (and b!81773 (not c!12943)) b!81768))

(declare-fun b_lambda!3629 () Bool)

(assert (=> (not b_lambda!3629) (not b!81766)))

(assert (=> b!81766 t!5186))

(declare-fun b_and!4973 () Bool)

(assert (= b_and!4969 (and (=> t!5186 result!2849) b_and!4973)))

(assert (=> b!81766 t!5188))

(declare-fun b_and!4975 () Bool)

(assert (= b_and!4971 (and (=> t!5188 result!2851) b_and!4975)))

(declare-fun b_lambda!3631 () Bool)

(assert (=> (not b_lambda!3631) (not b!81769)))

(assert (=> b!81769 t!5186))

(declare-fun b_and!4977 () Bool)

(assert (= b_and!4973 (and (=> t!5186 result!2849) b_and!4977)))

(assert (=> b!81769 t!5188))

(declare-fun b_and!4979 () Bool)

(assert (= b_and!4975 (and (=> t!5188 result!2851) b_and!4979)))

(declare-fun m!84093 () Bool)

(assert (=> b!81766 m!84093))

(declare-fun m!84095 () Bool)

(assert (=> b!81766 m!84095))

(assert (=> b!81766 m!82333))

(assert (=> b!81766 m!82137))

(assert (=> b!81766 m!82335))

(assert (=> b!81766 m!82333))

(declare-fun m!84097 () Bool)

(assert (=> b!81766 m!84097))

(assert (=> b!81766 m!82137))

(assert (=> b!81766 m!84093))

(declare-fun m!84099 () Bool)

(assert (=> b!81766 m!84099))

(assert (=> b!81766 m!82131))

(declare-fun m!84101 () Bool)

(assert (=> bm!7636 m!84101))

(assert (=> b!81774 m!82131))

(assert (=> b!81774 m!82131))

(assert (=> b!81774 m!82143))

(assert (=> b!81769 m!82131))

(declare-fun m!84103 () Bool)

(assert (=> b!81769 m!84103))

(assert (=> b!81769 m!82333))

(assert (=> b!81769 m!82137))

(assert (=> b!81769 m!82335))

(assert (=> b!81769 m!82333))

(assert (=> b!81769 m!82137))

(assert (=> b!81769 m!82131))

(assert (=> b!81767 m!82131))

(assert (=> b!81767 m!82131))

(declare-fun m!84105 () Bool)

(assert (=> b!81767 m!84105))

(assert (=> b!81777 m!84101))

(declare-fun m!84107 () Bool)

(assert (=> d!20321 m!84107))

(assert (=> d!20321 m!81973))

(declare-fun m!84109 () Bool)

(assert (=> b!81772 m!84109))

(declare-fun m!84111 () Bool)

(assert (=> b!81768 m!84111))

(assert (=> b!81776 m!82131))

(assert (=> b!81776 m!82131))

(assert (=> b!81776 m!82143))

(assert (=> bm!7527 d!20321))

(declare-fun d!20323 () Bool)

(assert (=> d!20323 (isDefined!90 (getValueByKey!136 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38227 () Unit!2327)

(assert (=> d!20323 (= lt!38227 (choose!485 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53350 () Bool)

(assert (=> d!20323 e!53350))

(declare-fun res!42468 () Bool)

(assert (=> d!20323 (=> (not res!42468) (not e!53350))))

(assert (=> d!20323 (= res!42468 (isStrictlySorted!291 (toList!734 lt!37406)))))

(assert (=> d!20323 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000) lt!38227)))

(declare-fun b!81778 () Bool)

(assert (=> b!81778 (= e!53350 (containsKey!140 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20323 res!42468) b!81778))

(assert (=> d!20323 m!82419))

(assert (=> d!20323 m!82419))

(assert (=> d!20323 m!82421))

(declare-fun m!84113 () Bool)

(assert (=> d!20323 m!84113))

(declare-fun m!84115 () Bool)

(assert (=> d!20323 m!84115))

(assert (=> b!81778 m!82415))

(assert (=> b!80837 d!20323))

(declare-fun d!20325 () Bool)

(assert (=> d!20325 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3459 () Bool)

(assert (= bs!3459 d!20325))

(assert (=> bs!3459 m!82419))

(declare-fun m!84117 () Bool)

(assert (=> bs!3459 m!84117))

(assert (=> b!80837 d!20325))

(declare-fun b!81782 () Bool)

(declare-fun e!53352 () Option!142)

(assert (=> b!81782 (= e!53352 None!140)))

(declare-fun b!81779 () Bool)

(declare-fun e!53351 () Option!142)

(assert (=> b!81779 (= e!53351 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37406)))))))

(declare-fun b!81781 () Bool)

(assert (=> b!81781 (= e!53352 (getValueByKey!136 (t!5172 (toList!734 lt!37406)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!20327 () Bool)

(declare-fun c!12945 () Bool)

(assert (=> d!20327 (= c!12945 (and ((_ is Cons!1510) (toList!734 lt!37406)) (= (_1!1102 (h!2099 (toList!734 lt!37406))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20327 (= (getValueByKey!136 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000) e!53351)))

(declare-fun b!81780 () Bool)

(assert (=> b!81780 (= e!53351 e!53352)))

(declare-fun c!12946 () Bool)

(assert (=> b!81780 (= c!12946 (and ((_ is Cons!1510) (toList!734 lt!37406)) (not (= (_1!1102 (h!2099 (toList!734 lt!37406))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!20327 c!12945) b!81779))

(assert (= (and d!20327 (not c!12945)) b!81780))

(assert (= (and b!81780 c!12946) b!81781))

(assert (= (and b!81780 (not c!12946)) b!81782))

(declare-fun m!84119 () Bool)

(assert (=> b!81781 m!84119))

(assert (=> b!80837 d!20327))

(declare-fun d!20329 () Bool)

(declare-fun lt!38228 () (_ BitVec 32))

(assert (=> d!20329 (and (bvsge lt!38228 #b00000000000000000000000000000000) (bvsle lt!38228 (bvsub (size!2131 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000)))))

(declare-fun e!53354 () (_ BitVec 32))

(assert (=> d!20329 (= lt!38228 e!53354)))

(declare-fun c!12948 () Bool)

(assert (=> d!20329 (= c!12948 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37268)))))))

(assert (=> d!20329 (and (bvsle #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37268)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2131 (_keys!3955 (_2!1101 lt!37268))) (size!2131 (_keys!3955 (_2!1101 lt!37268)))))))

(assert (=> d!20329 (= (arrayCountValidKeys!0 (_keys!3955 (_2!1101 lt!37268)) #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37268)))) lt!38228)))

(declare-fun bm!7637 () Bool)

(declare-fun call!7640 () (_ BitVec 32))

(assert (=> bm!7637 (= call!7640 (arrayCountValidKeys!0 (_keys!3955 (_2!1101 lt!37268)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (_2!1101 lt!37268)))))))

(declare-fun b!81783 () Bool)

(declare-fun e!53353 () (_ BitVec 32))

(assert (=> b!81783 (= e!53354 e!53353)))

(declare-fun c!12947 () Bool)

(assert (=> b!81783 (= c!12947 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000)))))

(declare-fun b!81784 () Bool)

(assert (=> b!81784 (= e!53353 call!7640)))

(declare-fun b!81785 () Bool)

(assert (=> b!81785 (= e!53353 (bvadd #b00000000000000000000000000000001 call!7640))))

(declare-fun b!81786 () Bool)

(assert (=> b!81786 (= e!53354 #b00000000000000000000000000000000)))

(assert (= (and d!20329 c!12948) b!81786))

(assert (= (and d!20329 (not c!12948)) b!81783))

(assert (= (and b!81783 c!12947) b!81785))

(assert (= (and b!81783 (not c!12947)) b!81784))

(assert (= (or b!81785 b!81784) bm!7637))

(declare-fun m!84121 () Bool)

(assert (=> bm!7637 m!84121))

(declare-fun m!84123 () Bool)

(assert (=> b!81783 m!84123))

(assert (=> b!81783 m!84123))

(declare-fun m!84125 () Bool)

(assert (=> b!81783 m!84125))

(assert (=> b!80593 d!20329))

(declare-fun d!20331 () Bool)

(assert (=> d!20331 (= (inRange!0 (ite c!12717 (index!3111 lt!37817) (index!3114 lt!37817)) (mask!6297 newMap!16)) (and (bvsge (ite c!12717 (index!3111 lt!37817) (index!3114 lt!37817)) #b00000000000000000000000000000000) (bvslt (ite c!12717 (index!3111 lt!37817) (index!3114 lt!37817)) (bvadd (mask!6297 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7548 d!20331))

(assert (=> b!80927 d!20115))

(assert (=> b!80927 d!19859))

(declare-fun b!81787 () Bool)

(declare-fun e!53358 () List!1514)

(declare-fun call!7643 () List!1514)

(assert (=> b!81787 (= e!53358 call!7643)))

(declare-fun e!53355 () List!1514)

(declare-fun bm!7638 () Bool)

(declare-fun call!7642 () List!1514)

(declare-fun c!12952 () Bool)

(assert (=> bm!7638 (= call!7642 ($colon$colon!69 e!53355 (ite c!12952 (h!2099 (t!5172 (toList!734 (+!104 lt!37073 lt!37079)))) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082)))))))

(declare-fun c!12950 () Bool)

(assert (=> bm!7638 (= c!12950 c!12952)))

(declare-fun b!81788 () Bool)

(declare-fun e!53359 () Bool)

(declare-fun lt!38229 () List!1514)

(assert (=> b!81788 (= e!53359 (contains!745 lt!38229 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun bm!7639 () Bool)

(declare-fun call!7641 () List!1514)

(assert (=> bm!7639 (= call!7643 call!7641)))

(declare-fun d!20333 () Bool)

(assert (=> d!20333 e!53359))

(declare-fun res!42470 () Bool)

(assert (=> d!20333 (=> (not res!42470) (not e!53359))))

(assert (=> d!20333 (= res!42470 (isStrictlySorted!291 lt!38229))))

(declare-fun e!53357 () List!1514)

(assert (=> d!20333 (= lt!38229 e!53357)))

(assert (=> d!20333 (= c!12952 (and ((_ is Cons!1510) (t!5172 (toList!734 (+!104 lt!37073 lt!37079)))) (bvslt (_1!1102 (h!2099 (t!5172 (toList!734 (+!104 lt!37073 lt!37079))))) (_1!1102 lt!37082))))))

(assert (=> d!20333 (isStrictlySorted!291 (t!5172 (toList!734 (+!104 lt!37073 lt!37079))))))

(assert (=> d!20333 (= (insertStrictlySorted!59 (t!5172 (toList!734 (+!104 lt!37073 lt!37079))) (_1!1102 lt!37082) (_2!1102 lt!37082)) lt!38229)))

(declare-fun c!12949 () Bool)

(declare-fun b!81789 () Bool)

(assert (=> b!81789 (= c!12949 (and ((_ is Cons!1510) (t!5172 (toList!734 (+!104 lt!37073 lt!37079)))) (bvsgt (_1!1102 (h!2099 (t!5172 (toList!734 (+!104 lt!37073 lt!37079))))) (_1!1102 lt!37082))))))

(declare-fun e!53356 () List!1514)

(assert (=> b!81789 (= e!53356 e!53358)))

(declare-fun b!81790 () Bool)

(assert (=> b!81790 (= e!53356 call!7641)))

(declare-fun b!81791 () Bool)

(assert (=> b!81791 (= e!53357 call!7642)))

(declare-fun bm!7640 () Bool)

(assert (=> bm!7640 (= call!7641 call!7642)))

(declare-fun b!81792 () Bool)

(declare-fun res!42469 () Bool)

(assert (=> b!81792 (=> (not res!42469) (not e!53359))))

(assert (=> b!81792 (= res!42469 (containsKey!140 lt!38229 (_1!1102 lt!37082)))))

(declare-fun b!81793 () Bool)

(assert (=> b!81793 (= e!53358 call!7643)))

(declare-fun b!81794 () Bool)

(declare-fun c!12951 () Bool)

(assert (=> b!81794 (= e!53355 (ite c!12951 (t!5172 (t!5172 (toList!734 (+!104 lt!37073 lt!37079)))) (ite c!12949 (Cons!1510 (h!2099 (t!5172 (toList!734 (+!104 lt!37073 lt!37079)))) (t!5172 (t!5172 (toList!734 (+!104 lt!37073 lt!37079))))) Nil!1511)))))

(declare-fun b!81795 () Bool)

(assert (=> b!81795 (= e!53357 e!53356)))

(assert (=> b!81795 (= c!12951 (and ((_ is Cons!1510) (t!5172 (toList!734 (+!104 lt!37073 lt!37079)))) (= (_1!1102 (h!2099 (t!5172 (toList!734 (+!104 lt!37073 lt!37079))))) (_1!1102 lt!37082))))))

(declare-fun b!81796 () Bool)

(assert (=> b!81796 (= e!53355 (insertStrictlySorted!59 (t!5172 (t!5172 (toList!734 (+!104 lt!37073 lt!37079)))) (_1!1102 lt!37082) (_2!1102 lt!37082)))))

(assert (= (and d!20333 c!12952) b!81791))

(assert (= (and d!20333 (not c!12952)) b!81795))

(assert (= (and b!81795 c!12951) b!81790))

(assert (= (and b!81795 (not c!12951)) b!81789))

(assert (= (and b!81789 c!12949) b!81793))

(assert (= (and b!81789 (not c!12949)) b!81787))

(assert (= (or b!81793 b!81787) bm!7639))

(assert (= (or b!81790 bm!7639) bm!7640))

(assert (= (or b!81791 bm!7640) bm!7638))

(assert (= (and bm!7638 c!12950) b!81796))

(assert (= (and bm!7638 (not c!12950)) b!81794))

(assert (= (and d!20333 res!42470) b!81792))

(assert (= (and b!81792 res!42469) b!81788))

(declare-fun m!84127 () Bool)

(assert (=> d!20333 m!84127))

(declare-fun m!84129 () Bool)

(assert (=> d!20333 m!84129))

(declare-fun m!84131 () Bool)

(assert (=> b!81796 m!84131))

(declare-fun m!84133 () Bool)

(assert (=> bm!7638 m!84133))

(declare-fun m!84135 () Bool)

(assert (=> b!81792 m!84135))

(declare-fun m!84137 () Bool)

(assert (=> b!81788 m!84137))

(assert (=> b!80534 d!20333))

(declare-fun d!20335 () Bool)

(declare-fun e!53360 () Bool)

(assert (=> d!20335 e!53360))

(declare-fun res!42471 () Bool)

(assert (=> d!20335 (=> res!42471 e!53360)))

(declare-fun lt!38233 () Bool)

(assert (=> d!20335 (= res!42471 (not lt!38233))))

(declare-fun lt!38232 () Bool)

(assert (=> d!20335 (= lt!38233 lt!38232)))

(declare-fun lt!38231 () Unit!2327)

(declare-fun e!53361 () Unit!2327)

(assert (=> d!20335 (= lt!38231 e!53361)))

(declare-fun c!12953 () Bool)

(assert (=> d!20335 (= c!12953 lt!38232)))

(assert (=> d!20335 (= lt!38232 (containsKey!140 (toList!734 lt!37755) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!20335 (= (contains!742 lt!37755 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38233)))

(declare-fun b!81797 () Bool)

(declare-fun lt!38230 () Unit!2327)

(assert (=> b!81797 (= e!53361 lt!38230)))

(assert (=> b!81797 (= lt!38230 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37755) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> b!81797 (isDefined!90 (getValueByKey!136 (toList!734 lt!37755) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!81798 () Bool)

(declare-fun Unit!2394 () Unit!2327)

(assert (=> b!81798 (= e!53361 Unit!2394)))

(declare-fun b!81799 () Bool)

(assert (=> b!81799 (= e!53360 (isDefined!90 (getValueByKey!136 (toList!734 lt!37755) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (= (and d!20335 c!12953) b!81797))

(assert (= (and d!20335 (not c!12953)) b!81798))

(assert (= (and d!20335 (not res!42471)) b!81799))

(declare-fun m!84139 () Bool)

(assert (=> d!20335 m!84139))

(declare-fun m!84141 () Bool)

(assert (=> b!81797 m!84141))

(assert (=> b!81797 m!82545))

(assert (=> b!81797 m!82545))

(declare-fun m!84143 () Bool)

(assert (=> b!81797 m!84143))

(assert (=> b!81799 m!82545))

(assert (=> b!81799 m!82545))

(assert (=> b!81799 m!84143))

(assert (=> d!19793 d!20335))

(declare-fun b!81803 () Bool)

(declare-fun e!53363 () Option!142)

(assert (=> b!81803 (= e!53363 None!140)))

(declare-fun b!81800 () Bool)

(declare-fun e!53362 () Option!142)

(assert (=> b!81800 (= e!53362 (Some!141 (_2!1102 (h!2099 lt!37754))))))

(declare-fun b!81802 () Bool)

(assert (=> b!81802 (= e!53363 (getValueByKey!136 (t!5172 lt!37754) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun c!12954 () Bool)

(declare-fun d!20337 () Bool)

(assert (=> d!20337 (= c!12954 (and ((_ is Cons!1510) lt!37754) (= (_1!1102 (h!2099 lt!37754)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20337 (= (getValueByKey!136 lt!37754 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) e!53362)))

(declare-fun b!81801 () Bool)

(assert (=> b!81801 (= e!53362 e!53363)))

(declare-fun c!12955 () Bool)

(assert (=> b!81801 (= c!12955 (and ((_ is Cons!1510) lt!37754) (not (= (_1!1102 (h!2099 lt!37754)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (= (and d!20337 c!12954) b!81800))

(assert (= (and d!20337 (not c!12954)) b!81801))

(assert (= (and b!81801 c!12955) b!81802))

(assert (= (and b!81801 (not c!12955)) b!81803))

(declare-fun m!84145 () Bool)

(assert (=> b!81802 m!84145))

(assert (=> d!19793 d!20337))

(declare-fun d!20339 () Bool)

(assert (=> d!20339 (= (getValueByKey!136 lt!37754 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun lt!38234 () Unit!2327)

(assert (=> d!20339 (= lt!38234 (choose!477 lt!37754 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun e!53364 () Bool)

(assert (=> d!20339 e!53364))

(declare-fun res!42472 () Bool)

(assert (=> d!20339 (=> (not res!42472) (not e!53364))))

(assert (=> d!20339 (= res!42472 (isStrictlySorted!291 lt!37754))))

(assert (=> d!20339 (= (lemmaContainsTupThenGetReturnValue!56 lt!37754 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38234)))

(declare-fun b!81804 () Bool)

(declare-fun res!42473 () Bool)

(assert (=> b!81804 (=> (not res!42473) (not e!53364))))

(assert (=> b!81804 (= res!42473 (containsKey!140 lt!37754 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!81805 () Bool)

(assert (=> b!81805 (= e!53364 (contains!745 lt!37754 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (= (and d!20339 res!42472) b!81804))

(assert (= (and b!81804 res!42473) b!81805))

(assert (=> d!20339 m!82539))

(declare-fun m!84147 () Bool)

(assert (=> d!20339 m!84147))

(declare-fun m!84149 () Bool)

(assert (=> d!20339 m!84149))

(declare-fun m!84151 () Bool)

(assert (=> b!81804 m!84151))

(declare-fun m!84153 () Bool)

(assert (=> b!81805 m!84153))

(assert (=> d!19793 d!20339))

(declare-fun b!81806 () Bool)

(declare-fun e!53368 () List!1514)

(declare-fun call!7646 () List!1514)

(assert (=> b!81806 (= e!53368 call!7646)))

(declare-fun e!53365 () List!1514)

(declare-fun call!7645 () List!1514)

(declare-fun c!12959 () Bool)

(declare-fun bm!7641 () Bool)

(assert (=> bm!7641 (= call!7645 ($colon$colon!69 e!53365 (ite c!12959 (h!2099 (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(declare-fun c!12957 () Bool)

(assert (=> bm!7641 (= c!12957 c!12959)))

(declare-fun e!53369 () Bool)

(declare-fun b!81807 () Bool)

(declare-fun lt!38235 () List!1514)

(assert (=> b!81807 (= e!53369 (contains!745 lt!38235 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun bm!7642 () Bool)

(declare-fun call!7644 () List!1514)

(assert (=> bm!7642 (= call!7646 call!7644)))

(declare-fun d!20341 () Bool)

(assert (=> d!20341 e!53369))

(declare-fun res!42475 () Bool)

(assert (=> d!20341 (=> (not res!42475) (not e!53369))))

(assert (=> d!20341 (= res!42475 (isStrictlySorted!291 lt!38235))))

(declare-fun e!53367 () List!1514)

(assert (=> d!20341 (= lt!38235 e!53367)))

(assert (=> d!20341 (= c!12959 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (bvslt (_1!1102 (h!2099 (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20341 (isStrictlySorted!291 (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!20341 (= (insertStrictlySorted!59 (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38235)))

(declare-fun b!81808 () Bool)

(declare-fun c!12956 () Bool)

(assert (=> b!81808 (= c!12956 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (bvsgt (_1!1102 (h!2099 (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun e!53366 () List!1514)

(assert (=> b!81808 (= e!53366 e!53368)))

(declare-fun b!81809 () Bool)

(assert (=> b!81809 (= e!53366 call!7644)))

(declare-fun b!81810 () Bool)

(assert (=> b!81810 (= e!53367 call!7645)))

(declare-fun bm!7643 () Bool)

(assert (=> bm!7643 (= call!7644 call!7645)))

(declare-fun b!81811 () Bool)

(declare-fun res!42474 () Bool)

(assert (=> b!81811 (=> (not res!42474) (not e!53369))))

(assert (=> b!81811 (= res!42474 (containsKey!140 lt!38235 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!81812 () Bool)

(assert (=> b!81812 (= e!53368 call!7646)))

(declare-fun b!81813 () Bool)

(declare-fun c!12958 () Bool)

(assert (=> b!81813 (= e!53365 (ite c!12958 (t!5172 (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (ite c!12956 (Cons!1510 (h!2099 (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (t!5172 (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))) Nil!1511)))))

(declare-fun b!81814 () Bool)

(assert (=> b!81814 (= e!53367 e!53366)))

(assert (=> b!81814 (= c!12958 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!81815 () Bool)

(assert (=> b!81815 (= e!53365 (insertStrictlySorted!59 (t!5172 (toList!734 (+!104 lt!37071 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (= (and d!20341 c!12959) b!81810))

(assert (= (and d!20341 (not c!12959)) b!81814))

(assert (= (and b!81814 c!12958) b!81809))

(assert (= (and b!81814 (not c!12958)) b!81808))

(assert (= (and b!81808 c!12956) b!81812))

(assert (= (and b!81808 (not c!12956)) b!81806))

(assert (= (or b!81812 b!81806) bm!7642))

(assert (= (or b!81809 bm!7642) bm!7643))

(assert (= (or b!81810 bm!7643) bm!7641))

(assert (= (and bm!7641 c!12957) b!81815))

(assert (= (and bm!7641 (not c!12957)) b!81813))

(assert (= (and d!20341 res!42475) b!81811))

(assert (= (and b!81811 res!42474) b!81807))

(declare-fun m!84155 () Bool)

(assert (=> d!20341 m!84155))

(declare-fun m!84157 () Bool)

(assert (=> d!20341 m!84157))

(declare-fun m!84159 () Bool)

(assert (=> b!81815 m!84159))

(declare-fun m!84161 () Bool)

(assert (=> bm!7641 m!84161))

(declare-fun m!84163 () Bool)

(assert (=> b!81811 m!84163))

(declare-fun m!84165 () Bool)

(assert (=> b!81807 m!84165))

(assert (=> d!19793 d!20341))

(assert (=> d!19837 d!19831))

(assert (=> d!19837 d!19833))

(declare-fun d!20343 () Bool)

(assert (=> d!20343 (isDefined!90 (getValueByKey!136 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (=> d!20343 true))

(declare-fun _$12!329 () Unit!2327)

(assert (=> d!20343 (= (choose!485 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) _$12!329)))

(declare-fun bs!3460 () Bool)

(assert (= bs!3460 d!20343))

(assert (=> bs!3460 m!81295))

(assert (=> bs!3460 m!81495))

(assert (=> bs!3460 m!81495))

(assert (=> bs!3460 m!81497))

(assert (=> d!19837 d!20343))

(declare-fun d!20345 () Bool)

(declare-fun res!42476 () Bool)

(declare-fun e!53370 () Bool)

(assert (=> d!20345 (=> res!42476 e!53370)))

(assert (=> d!20345 (= res!42476 (or ((_ is Nil!1511) (toList!734 lt!37088)) ((_ is Nil!1511) (t!5172 (toList!734 lt!37088)))))))

(assert (=> d!20345 (= (isStrictlySorted!291 (toList!734 lt!37088)) e!53370)))

(declare-fun b!81816 () Bool)

(declare-fun e!53371 () Bool)

(assert (=> b!81816 (= e!53370 e!53371)))

(declare-fun res!42477 () Bool)

(assert (=> b!81816 (=> (not res!42477) (not e!53371))))

(assert (=> b!81816 (= res!42477 (bvslt (_1!1102 (h!2099 (toList!734 lt!37088))) (_1!1102 (h!2099 (t!5172 (toList!734 lt!37088))))))))

(declare-fun b!81817 () Bool)

(assert (=> b!81817 (= e!53371 (isStrictlySorted!291 (t!5172 (toList!734 lt!37088))))))

(assert (= (and d!20345 (not res!42476)) b!81816))

(assert (= (and b!81816 res!42477) b!81817))

(declare-fun m!84167 () Bool)

(assert (=> b!81817 m!84167))

(assert (=> d!19837 d!20345))

(declare-fun d!20347 () Bool)

(assert (=> d!20347 (= (apply!80 lt!37769 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1187 (getValueByKey!136 (toList!734 lt!37769) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3461 () Bool)

(assert (= bs!3461 d!20347))

(assert (=> bs!3461 m!82131))

(assert (=> bs!3461 m!83777))

(assert (=> bs!3461 m!83777))

(declare-fun m!84169 () Bool)

(assert (=> bs!3461 m!84169))

(assert (=> b!80910 d!20347))

(declare-fun d!20349 () Bool)

(declare-fun c!12960 () Bool)

(assert (=> d!20349 (= c!12960 ((_ is ValueCellFull!914) (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!53372 () V!3001)

(assert (=> d!20349 (= (get!1183 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53372)))

(declare-fun b!81818 () Bool)

(assert (=> b!81818 (= e!53372 (get!1185 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81819 () Bool)

(assert (=> b!81819 (= e!53372 (get!1186 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20349 c!12960) b!81818))

(assert (= (and d!20349 (not c!12960)) b!81819))

(assert (=> b!81818 m!82333))

(assert (=> b!81818 m!82137))

(declare-fun m!84171 () Bool)

(assert (=> b!81818 m!84171))

(assert (=> b!81819 m!82333))

(assert (=> b!81819 m!82137))

(declare-fun m!84173 () Bool)

(assert (=> b!81819 m!84173))

(assert (=> b!80910 d!20349))

(declare-fun d!20351 () Bool)

(assert (=> d!20351 (= (apply!80 (+!104 lt!37408 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37414) (apply!80 lt!37408 lt!37414))))

(assert (=> d!20351 true))

(declare-fun _$34!824 () Unit!2327)

(assert (=> d!20351 (= (choose!479 lt!37408 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37414) _$34!824)))

(declare-fun bs!3462 () Bool)

(assert (= bs!3462 d!20351))

(assert (=> bs!3462 m!81721))

(assert (=> bs!3462 m!81721))

(assert (=> bs!3462 m!81723))

(assert (=> bs!3462 m!81741))

(assert (=> d!19655 d!20351))

(declare-fun d!20353 () Bool)

(declare-fun e!53373 () Bool)

(assert (=> d!20353 e!53373))

(declare-fun res!42478 () Bool)

(assert (=> d!20353 (=> res!42478 e!53373)))

(declare-fun lt!38239 () Bool)

(assert (=> d!20353 (= res!42478 (not lt!38239))))

(declare-fun lt!38238 () Bool)

(assert (=> d!20353 (= lt!38239 lt!38238)))

(declare-fun lt!38237 () Unit!2327)

(declare-fun e!53374 () Unit!2327)

(assert (=> d!20353 (= lt!38237 e!53374)))

(declare-fun c!12961 () Bool)

(assert (=> d!20353 (= c!12961 lt!38238)))

(assert (=> d!20353 (= lt!38238 (containsKey!140 (toList!734 lt!37408) lt!37414))))

(assert (=> d!20353 (= (contains!742 lt!37408 lt!37414) lt!38239)))

(declare-fun b!81820 () Bool)

(declare-fun lt!38236 () Unit!2327)

(assert (=> b!81820 (= e!53374 lt!38236)))

(assert (=> b!81820 (= lt!38236 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37408) lt!37414))))

(assert (=> b!81820 (isDefined!90 (getValueByKey!136 (toList!734 lt!37408) lt!37414))))

(declare-fun b!81821 () Bool)

(declare-fun Unit!2395 () Unit!2327)

(assert (=> b!81821 (= e!53374 Unit!2395)))

(declare-fun b!81822 () Bool)

(assert (=> b!81822 (= e!53373 (isDefined!90 (getValueByKey!136 (toList!734 lt!37408) lt!37414)))))

(assert (= (and d!20353 c!12961) b!81820))

(assert (= (and d!20353 (not c!12961)) b!81821))

(assert (= (and d!20353 (not res!42478)) b!81822))

(declare-fun m!84175 () Bool)

(assert (=> d!20353 m!84175))

(declare-fun m!84177 () Bool)

(assert (=> b!81820 m!84177))

(assert (=> b!81820 m!81871))

(assert (=> b!81820 m!81871))

(declare-fun m!84179 () Bool)

(assert (=> b!81820 m!84179))

(assert (=> b!81822 m!81871))

(assert (=> b!81822 m!81871))

(assert (=> b!81822 m!84179))

(assert (=> d!19655 d!20353))

(assert (=> d!19655 d!19653))

(assert (=> d!19655 d!19647))

(assert (=> d!19655 d!19657))

(declare-fun d!20355 () Bool)

(declare-fun e!53375 () Bool)

(assert (=> d!20355 e!53375))

(declare-fun res!42479 () Bool)

(assert (=> d!20355 (=> res!42479 e!53375)))

(declare-fun lt!38243 () Bool)

(assert (=> d!20355 (= res!42479 (not lt!38243))))

(declare-fun lt!38242 () Bool)

(assert (=> d!20355 (= lt!38243 lt!38242)))

(declare-fun lt!38241 () Unit!2327)

(declare-fun e!53376 () Unit!2327)

(assert (=> d!20355 (= lt!38241 e!53376)))

(declare-fun c!12962 () Bool)

(assert (=> d!20355 (= c!12962 lt!38242)))

(assert (=> d!20355 (= lt!38242 (containsKey!140 (toList!734 lt!37660) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20355 (= (contains!742 lt!37660 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38243)))

(declare-fun b!81823 () Bool)

(declare-fun lt!38240 () Unit!2327)

(assert (=> b!81823 (= e!53376 lt!38240)))

(assert (=> b!81823 (= lt!38240 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37660) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81823 (isDefined!90 (getValueByKey!136 (toList!734 lt!37660) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81824 () Bool)

(declare-fun Unit!2396 () Unit!2327)

(assert (=> b!81824 (= e!53376 Unit!2396)))

(declare-fun b!81825 () Bool)

(assert (=> b!81825 (= e!53375 (isDefined!90 (getValueByKey!136 (toList!734 lt!37660) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20355 c!12962) b!81823))

(assert (= (and d!20355 (not c!12962)) b!81824))

(assert (= (and d!20355 (not res!42479)) b!81825))

(declare-fun m!84181 () Bool)

(assert (=> d!20355 m!84181))

(declare-fun m!84183 () Bool)

(assert (=> b!81823 m!84183))

(assert (=> b!81823 m!83791))

(assert (=> b!81823 m!83791))

(declare-fun m!84185 () Bool)

(assert (=> b!81823 m!84185))

(assert (=> b!81825 m!83791))

(assert (=> b!81825 m!83791))

(assert (=> b!81825 m!84185))

(assert (=> bm!7514 d!20355))

(declare-fun d!20357 () Bool)

(declare-fun lt!38244 () Bool)

(assert (=> d!20357 (= lt!38244 (select (content!86 (t!5172 (toList!734 lt!37316))) lt!37082))))

(declare-fun e!53377 () Bool)

(assert (=> d!20357 (= lt!38244 e!53377)))

(declare-fun res!42481 () Bool)

(assert (=> d!20357 (=> (not res!42481) (not e!53377))))

(assert (=> d!20357 (= res!42481 ((_ is Cons!1510) (t!5172 (toList!734 lt!37316))))))

(assert (=> d!20357 (= (contains!745 (t!5172 (toList!734 lt!37316)) lt!37082) lt!38244)))

(declare-fun b!81826 () Bool)

(declare-fun e!53378 () Bool)

(assert (=> b!81826 (= e!53377 e!53378)))

(declare-fun res!42480 () Bool)

(assert (=> b!81826 (=> res!42480 e!53378)))

(assert (=> b!81826 (= res!42480 (= (h!2099 (t!5172 (toList!734 lt!37316))) lt!37082))))

(declare-fun b!81827 () Bool)

(assert (=> b!81827 (= e!53378 (contains!745 (t!5172 (t!5172 (toList!734 lt!37316))) lt!37082))))

(assert (= (and d!20357 res!42481) b!81826))

(assert (= (and b!81826 (not res!42480)) b!81827))

(declare-fun m!84187 () Bool)

(assert (=> d!20357 m!84187))

(declare-fun m!84189 () Bool)

(assert (=> d!20357 m!84189))

(declare-fun m!84191 () Bool)

(assert (=> b!81827 m!84191))

(assert (=> b!80737 d!20357))

(declare-fun d!20359 () Bool)

(declare-fun res!42482 () Bool)

(declare-fun e!53379 () Bool)

(assert (=> d!20359 (=> res!42482 e!53379)))

(assert (=> d!20359 (= res!42482 (and ((_ is Cons!1510) lt!37315) (= (_1!1102 (h!2099 lt!37315)) (_1!1102 lt!37082))))))

(assert (=> d!20359 (= (containsKey!140 lt!37315 (_1!1102 lt!37082)) e!53379)))

(declare-fun b!81828 () Bool)

(declare-fun e!53380 () Bool)

(assert (=> b!81828 (= e!53379 e!53380)))

(declare-fun res!42483 () Bool)

(assert (=> b!81828 (=> (not res!42483) (not e!53380))))

(assert (=> b!81828 (= res!42483 (and (or (not ((_ is Cons!1510) lt!37315)) (bvsle (_1!1102 (h!2099 lt!37315)) (_1!1102 lt!37082))) ((_ is Cons!1510) lt!37315) (bvslt (_1!1102 (h!2099 lt!37315)) (_1!1102 lt!37082))))))

(declare-fun b!81829 () Bool)

(assert (=> b!81829 (= e!53380 (containsKey!140 (t!5172 lt!37315) (_1!1102 lt!37082)))))

(assert (= (and d!20359 (not res!42482)) b!81828))

(assert (= (and b!81828 res!42483) b!81829))

(declare-fun m!84193 () Bool)

(assert (=> b!81829 m!84193))

(assert (=> b!80932 d!20359))

(declare-fun d!20361 () Bool)

(assert (=> d!20361 (= (inRange!0 (ite c!12628 (index!3112 lt!37597) (ite c!12629 (index!3111 lt!37596) (index!3114 lt!37596))) (mask!6297 newMap!16)) (and (bvsge (ite c!12628 (index!3112 lt!37597) (ite c!12629 (index!3111 lt!37596) (index!3114 lt!37596))) #b00000000000000000000000000000000) (bvslt (ite c!12628 (index!3112 lt!37597) (ite c!12629 (index!3111 lt!37596) (index!3114 lt!37596))) (bvadd (mask!6297 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7499 d!20361))

(declare-fun d!20363 () Bool)

(declare-fun c!12963 () Bool)

(assert (=> d!20363 (= c!12963 ((_ is Nil!1511) (toList!734 lt!37312)))))

(declare-fun e!53381 () (InoxSet tuple2!2182))

(assert (=> d!20363 (= (content!86 (toList!734 lt!37312)) e!53381)))

(declare-fun b!81830 () Bool)

(assert (=> b!81830 (= e!53381 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!81831 () Bool)

(assert (=> b!81831 (= e!53381 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2099 (toList!734 lt!37312)) true) (content!86 (t!5172 (toList!734 lt!37312)))))))

(assert (= (and d!20363 c!12963) b!81830))

(assert (= (and d!20363 (not c!12963)) b!81831))

(declare-fun m!84195 () Bool)

(assert (=> b!81831 m!84195))

(assert (=> b!81831 m!83487))

(assert (=> d!19739 d!20363))

(declare-fun d!20365 () Bool)

(declare-fun e!53382 () Bool)

(assert (=> d!20365 e!53382))

(declare-fun res!42485 () Bool)

(assert (=> d!20365 (=> (not res!42485) (not e!53382))))

(declare-fun lt!38248 () ListLongMap!1437)

(assert (=> d!20365 (= res!42485 (contains!742 lt!38248 (_1!1102 (ite (or c!12633 c!12635) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(declare-fun lt!38247 () List!1514)

(assert (=> d!20365 (= lt!38248 (ListLongMap!1438 lt!38247))))

(declare-fun lt!38246 () Unit!2327)

(declare-fun lt!38245 () Unit!2327)

(assert (=> d!20365 (= lt!38246 lt!38245)))

(assert (=> d!20365 (= (getValueByKey!136 lt!38247 (_1!1102 (ite (or c!12633 c!12635) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))) (Some!141 (_2!1102 (ite (or c!12633 c!12635) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20365 (= lt!38245 (lemmaContainsTupThenGetReturnValue!56 lt!38247 (_1!1102 (ite (or c!12633 c!12635) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (_2!1102 (ite (or c!12633 c!12635) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20365 (= lt!38247 (insertStrictlySorted!59 (toList!734 (ite c!12633 call!7505 (ite c!12635 call!7506 call!7507))) (_1!1102 (ite (or c!12633 c!12635) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (_2!1102 (ite (or c!12633 c!12635) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20365 (= (+!104 (ite c!12633 call!7505 (ite c!12635 call!7506 call!7507)) (ite (or c!12633 c!12635) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) lt!38248)))

(declare-fun b!81832 () Bool)

(declare-fun res!42484 () Bool)

(assert (=> b!81832 (=> (not res!42484) (not e!53382))))

(assert (=> b!81832 (= res!42484 (= (getValueByKey!136 (toList!734 lt!38248) (_1!1102 (ite (or c!12633 c!12635) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))) (Some!141 (_2!1102 (ite (or c!12633 c!12635) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))))

(declare-fun b!81833 () Bool)

(assert (=> b!81833 (= e!53382 (contains!745 (toList!734 lt!38248) (ite (or c!12633 c!12635) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (= (and d!20365 res!42485) b!81832))

(assert (= (and b!81832 res!42484) b!81833))

(declare-fun m!84197 () Bool)

(assert (=> d!20365 m!84197))

(declare-fun m!84199 () Bool)

(assert (=> d!20365 m!84199))

(declare-fun m!84201 () Bool)

(assert (=> d!20365 m!84201))

(declare-fun m!84203 () Bool)

(assert (=> d!20365 m!84203))

(declare-fun m!84205 () Bool)

(assert (=> b!81832 m!84205))

(declare-fun m!84207 () Bool)

(assert (=> b!81833 m!84207))

(assert (=> bm!7507 d!20365))

(declare-fun d!20367 () Bool)

(assert (=> d!20367 (isDefined!90 (getValueByKey!136 (toList!734 lt!37331) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38249 () Unit!2327)

(assert (=> d!20367 (= lt!38249 (choose!485 (toList!734 lt!37331) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53383 () Bool)

(assert (=> d!20367 e!53383))

(declare-fun res!42486 () Bool)

(assert (=> d!20367 (=> (not res!42486) (not e!53383))))

(assert (=> d!20367 (= res!42486 (isStrictlySorted!291 (toList!734 lt!37331)))))

(assert (=> d!20367 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37331) #b1000000000000000000000000000000000000000000000000000000000000000) lt!38249)))

(declare-fun b!81834 () Bool)

(assert (=> b!81834 (= e!53383 (containsKey!140 (toList!734 lt!37331) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20367 res!42486) b!81834))

(assert (=> d!20367 m!81767))

(assert (=> d!20367 m!81767))

(assert (=> d!20367 m!81769))

(declare-fun m!84209 () Bool)

(assert (=> d!20367 m!84209))

(declare-fun m!84211 () Bool)

(assert (=> d!20367 m!84211))

(assert (=> b!81834 m!81763))

(assert (=> b!80481 d!20367))

(declare-fun d!20369 () Bool)

(assert (=> d!20369 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37331) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37331) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3463 () Bool)

(assert (= bs!3463 d!20369))

(assert (=> bs!3463 m!81767))

(declare-fun m!84213 () Bool)

(assert (=> bs!3463 m!84213))

(assert (=> b!80481 d!20369))

(declare-fun b!81838 () Bool)

(declare-fun e!53385 () Option!142)

(assert (=> b!81838 (= e!53385 None!140)))

(declare-fun b!81835 () Bool)

(declare-fun e!53384 () Option!142)

(assert (=> b!81835 (= e!53384 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37331)))))))

(declare-fun b!81837 () Bool)

(assert (=> b!81837 (= e!53385 (getValueByKey!136 (t!5172 (toList!734 lt!37331)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!20371 () Bool)

(declare-fun c!12964 () Bool)

(assert (=> d!20371 (= c!12964 (and ((_ is Cons!1510) (toList!734 lt!37331)) (= (_1!1102 (h!2099 (toList!734 lt!37331))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20371 (= (getValueByKey!136 (toList!734 lt!37331) #b1000000000000000000000000000000000000000000000000000000000000000) e!53384)))

(declare-fun b!81836 () Bool)

(assert (=> b!81836 (= e!53384 e!53385)))

(declare-fun c!12965 () Bool)

(assert (=> b!81836 (= c!12965 (and ((_ is Cons!1510) (toList!734 lt!37331)) (not (= (_1!1102 (h!2099 (toList!734 lt!37331))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!20371 c!12964) b!81835))

(assert (= (and d!20371 (not c!12964)) b!81836))

(assert (= (and b!81836 c!12965) b!81837))

(assert (= (and b!81836 (not c!12965)) b!81838))

(declare-fun m!84215 () Bool)

(assert (=> b!81837 m!84215))

(assert (=> b!80481 d!20371))

(declare-fun d!20373 () Bool)

(declare-fun res!42487 () Bool)

(declare-fun e!53386 () Bool)

(assert (=> d!20373 (=> res!42487 e!53386)))

(assert (=> d!20373 (= res!42487 (and ((_ is Cons!1510) lt!37477) (= (_1!1102 (h!2099 lt!37477)) (_1!1102 lt!37075))))))

(assert (=> d!20373 (= (containsKey!140 lt!37477 (_1!1102 lt!37075)) e!53386)))

(declare-fun b!81839 () Bool)

(declare-fun e!53387 () Bool)

(assert (=> b!81839 (= e!53386 e!53387)))

(declare-fun res!42488 () Bool)

(assert (=> b!81839 (=> (not res!42488) (not e!53387))))

(assert (=> b!81839 (= res!42488 (and (or (not ((_ is Cons!1510) lt!37477)) (bvsle (_1!1102 (h!2099 lt!37477)) (_1!1102 lt!37075))) ((_ is Cons!1510) lt!37477) (bvslt (_1!1102 (h!2099 lt!37477)) (_1!1102 lt!37075))))))

(declare-fun b!81840 () Bool)

(assert (=> b!81840 (= e!53387 (containsKey!140 (t!5172 lt!37477) (_1!1102 lt!37075)))))

(assert (= (and d!20373 (not res!42487)) b!81839))

(assert (= (and b!81839 res!42488) b!81840))

(declare-fun m!84217 () Bool)

(assert (=> b!81840 m!84217))

(assert (=> b!80569 d!20373))

(declare-fun b!81841 () Bool)

(declare-fun lt!38256 () Unit!2327)

(declare-fun lt!38252 () Unit!2327)

(assert (=> b!81841 (= lt!38256 lt!38252)))

(declare-fun lt!38254 () (_ BitVec 64))

(declare-fun lt!38255 () V!3001)

(declare-fun lt!38251 () (_ BitVec 64))

(declare-fun lt!38253 () ListLongMap!1437)

(assert (=> b!81841 (not (contains!742 (+!104 lt!38253 (tuple2!2183 lt!38254 lt!38255)) lt!38251))))

(assert (=> b!81841 (= lt!38252 (addStillNotContains!30 lt!38253 lt!38254 lt!38255 lt!38251))))

(assert (=> b!81841 (= lt!38251 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81841 (= lt!38255 (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81841 (= lt!38254 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!7647 () ListLongMap!1437)

(assert (=> b!81841 (= lt!38253 call!7647)))

(declare-fun e!53394 () ListLongMap!1437)

(assert (=> b!81841 (= e!53394 (+!104 call!7647 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81842 () Bool)

(declare-fun e!53389 () Bool)

(declare-fun e!53392 () Bool)

(assert (=> b!81842 (= e!53389 e!53392)))

(assert (=> b!81842 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun lt!38250 () ListLongMap!1437)

(declare-fun res!42491 () Bool)

(assert (=> b!81842 (= res!42491 (contains!742 lt!38250 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!81842 (=> (not res!42491) (not e!53392))))

(declare-fun bm!7644 () Bool)

(assert (=> bm!7644 (= call!7647 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun b!81843 () Bool)

(declare-fun e!53391 () Bool)

(assert (=> b!81843 (= e!53391 (isEmpty!333 lt!38250))))

(declare-fun b!81844 () Bool)

(assert (=> b!81844 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> b!81844 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2132 (_values!2275 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> b!81844 (= e!53392 (= (apply!80 lt!38250 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81845 () Bool)

(assert (=> b!81845 (= e!53394 call!7647)))

(declare-fun b!81846 () Bool)

(declare-fun e!53393 () Bool)

(assert (=> b!81846 (= e!53393 e!53389)))

(declare-fun c!12969 () Bool)

(declare-fun e!53388 () Bool)

(assert (=> b!81846 (= c!12969 e!53388)))

(declare-fun res!42490 () Bool)

(assert (=> b!81846 (=> (not res!42490) (not e!53388))))

(assert (=> b!81846 (= res!42490 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!81847 () Bool)

(declare-fun res!42492 () Bool)

(assert (=> b!81847 (=> (not res!42492) (not e!53393))))

(assert (=> b!81847 (= res!42492 (not (contains!742 lt!38250 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81848 () Bool)

(assert (=> b!81848 (= e!53389 e!53391)))

(declare-fun c!12968 () Bool)

(assert (=> b!81848 (= c!12968 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun d!20375 () Bool)

(assert (=> d!20375 e!53393))

(declare-fun res!42489 () Bool)

(assert (=> d!20375 (=> (not res!42489) (not e!53393))))

(assert (=> d!20375 (= res!42489 (not (contains!742 lt!38250 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53390 () ListLongMap!1437)

(assert (=> d!20375 (= lt!38250 e!53390)))

(declare-fun c!12966 () Bool)

(assert (=> d!20375 (= c!12966 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> d!20375 (validMask!0 (mask!6297 (v!2600 (underlying!276 thiss!992))))))

(assert (=> d!20375 (= (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992)))) lt!38250)))

(declare-fun b!81849 () Bool)

(assert (=> b!81849 (= e!53388 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!81849 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!81850 () Bool)

(assert (=> b!81850 (= e!53390 (ListLongMap!1438 Nil!1511))))

(declare-fun b!81851 () Bool)

(assert (=> b!81851 (= e!53390 e!53394)))

(declare-fun c!12967 () Bool)

(assert (=> b!81851 (= c!12967 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!81852 () Bool)

(assert (=> b!81852 (= e!53391 (= lt!38250 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (_values!2275 (v!2600 (underlying!276 thiss!992))) (mask!6297 (v!2600 (underlying!276 thiss!992))) (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) (zeroValue!2188 (v!2600 (underlying!276 thiss!992))) (minValue!2188 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!20375 c!12966) b!81850))

(assert (= (and d!20375 (not c!12966)) b!81851))

(assert (= (and b!81851 c!12967) b!81841))

(assert (= (and b!81851 (not c!12967)) b!81845))

(assert (= (or b!81841 b!81845) bm!7644))

(assert (= (and d!20375 res!42489) b!81847))

(assert (= (and b!81847 res!42492) b!81846))

(assert (= (and b!81846 res!42490) b!81849))

(assert (= (and b!81846 c!12969) b!81842))

(assert (= (and b!81846 (not c!12969)) b!81848))

(assert (= (and b!81842 res!42491) b!81844))

(assert (= (and b!81848 c!12968) b!81852))

(assert (= (and b!81848 (not c!12968)) b!81843))

(declare-fun b_lambda!3633 () Bool)

(assert (=> (not b_lambda!3633) (not b!81841)))

(assert (=> b!81841 t!5169))

(declare-fun b_and!4981 () Bool)

(assert (= b_and!4977 (and (=> t!5169 result!2829) b_and!4981)))

(assert (=> b!81841 t!5171))

(declare-fun b_and!4983 () Bool)

(assert (= b_and!4979 (and (=> t!5171 result!2833) b_and!4983)))

(declare-fun b_lambda!3635 () Bool)

(assert (=> (not b_lambda!3635) (not b!81844)))

(assert (=> b!81844 t!5169))

(declare-fun b_and!4985 () Bool)

(assert (= b_and!4981 (and (=> t!5169 result!2829) b_and!4985)))

(assert (=> b!81844 t!5171))

(declare-fun b_and!4987 () Bool)

(assert (= b_and!4983 (and (=> t!5171 result!2833) b_and!4987)))

(declare-fun m!84219 () Bool)

(assert (=> b!81841 m!84219))

(declare-fun m!84221 () Bool)

(assert (=> b!81841 m!84221))

(declare-fun m!84223 () Bool)

(assert (=> b!81841 m!84223))

(assert (=> b!81841 m!81299))

(declare-fun m!84225 () Bool)

(assert (=> b!81841 m!84225))

(assert (=> b!81841 m!84223))

(declare-fun m!84227 () Bool)

(assert (=> b!81841 m!84227))

(assert (=> b!81841 m!81299))

(assert (=> b!81841 m!84219))

(declare-fun m!84229 () Bool)

(assert (=> b!81841 m!84229))

(assert (=> b!81841 m!83443))

(declare-fun m!84231 () Bool)

(assert (=> bm!7644 m!84231))

(assert (=> b!81849 m!83443))

(assert (=> b!81849 m!83443))

(declare-fun m!84233 () Bool)

(assert (=> b!81849 m!84233))

(assert (=> b!81844 m!83443))

(declare-fun m!84235 () Bool)

(assert (=> b!81844 m!84235))

(assert (=> b!81844 m!84223))

(assert (=> b!81844 m!81299))

(assert (=> b!81844 m!84225))

(assert (=> b!81844 m!84223))

(assert (=> b!81844 m!81299))

(assert (=> b!81844 m!83443))

(assert (=> b!81842 m!83443))

(assert (=> b!81842 m!83443))

(declare-fun m!84237 () Bool)

(assert (=> b!81842 m!84237))

(assert (=> b!81852 m!84231))

(declare-fun m!84239 () Bool)

(assert (=> d!20375 m!84239))

(assert (=> d!20375 m!81345))

(declare-fun m!84241 () Bool)

(assert (=> b!81847 m!84241))

(declare-fun m!84243 () Bool)

(assert (=> b!81843 m!84243))

(assert (=> b!81851 m!83443))

(assert (=> b!81851 m!83443))

(assert (=> b!81851 m!84233))

(assert (=> bm!7509 d!20375))

(declare-fun b!81856 () Bool)

(declare-fun e!53396 () Option!142)

(assert (=> b!81856 (= e!53396 None!140)))

(declare-fun b!81853 () Bool)

(declare-fun e!53395 () Option!142)

(assert (=> b!81853 (= e!53395 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37755)))))))

(declare-fun b!81855 () Bool)

(assert (=> b!81855 (= e!53396 (getValueByKey!136 (t!5172 (toList!734 lt!37755)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun c!12970 () Bool)

(declare-fun d!20377 () Bool)

(assert (=> d!20377 (= c!12970 (and ((_ is Cons!1510) (toList!734 lt!37755)) (= (_1!1102 (h!2099 (toList!734 lt!37755))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20377 (= (getValueByKey!136 (toList!734 lt!37755) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) e!53395)))

(declare-fun b!81854 () Bool)

(assert (=> b!81854 (= e!53395 e!53396)))

(declare-fun c!12971 () Bool)

(assert (=> b!81854 (= c!12971 (and ((_ is Cons!1510) (toList!734 lt!37755)) (not (= (_1!1102 (h!2099 (toList!734 lt!37755))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (= (and d!20377 c!12970) b!81853))

(assert (= (and d!20377 (not c!12970)) b!81854))

(assert (= (and b!81854 c!12971) b!81855))

(assert (= (and b!81854 (not c!12971)) b!81856))

(declare-fun m!84245 () Bool)

(assert (=> b!81855 m!84245))

(assert (=> b!80892 d!20377))

(declare-fun b!81857 () Bool)

(declare-fun e!53400 () Bool)

(assert (=> b!81857 (= e!53400 (contains!746 Nil!1512 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!20379 () Bool)

(declare-fun res!42493 () Bool)

(declare-fun e!53397 () Bool)

(assert (=> d!20379 (=> res!42493 e!53397)))

(assert (=> d!20379 (= res!42493 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> d!20379 (= (arrayNoDuplicates!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000000 Nil!1512) e!53397)))

(declare-fun b!81858 () Bool)

(declare-fun e!53399 () Bool)

(declare-fun call!7648 () Bool)

(assert (=> b!81858 (= e!53399 call!7648)))

(declare-fun b!81859 () Bool)

(declare-fun e!53398 () Bool)

(assert (=> b!81859 (= e!53398 e!53399)))

(declare-fun c!12972 () Bool)

(assert (=> b!81859 (= c!12972 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!81860 () Bool)

(assert (=> b!81860 (= e!53397 e!53398)))

(declare-fun res!42495 () Bool)

(assert (=> b!81860 (=> (not res!42495) (not e!53398))))

(assert (=> b!81860 (= res!42495 (not e!53400))))

(declare-fun res!42494 () Bool)

(assert (=> b!81860 (=> (not res!42494) (not e!53400))))

(assert (=> b!81860 (= res!42494 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7645 () Bool)

(assert (=> bm!7645 (= call!7648 (arrayNoDuplicates!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12972 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) #b00000000000000000000000000000000) Nil!1512) Nil!1512)))))

(declare-fun b!81861 () Bool)

(assert (=> b!81861 (= e!53399 call!7648)))

(assert (= (and d!20379 (not res!42493)) b!81860))

(assert (= (and b!81860 res!42494) b!81857))

(assert (= (and b!81860 res!42495) b!81859))

(assert (= (and b!81859 c!12972) b!81858))

(assert (= (and b!81859 (not c!12972)) b!81861))

(assert (= (or b!81858 b!81861) bm!7645))

(assert (=> b!81857 m!83709))

(assert (=> b!81857 m!83709))

(declare-fun m!84247 () Bool)

(assert (=> b!81857 m!84247))

(assert (=> b!81859 m!83709))

(assert (=> b!81859 m!83709))

(assert (=> b!81859 m!83711))

(assert (=> b!81860 m!83709))

(assert (=> b!81860 m!83709))

(assert (=> b!81860 m!83711))

(assert (=> bm!7645 m!83709))

(declare-fun m!84249 () Bool)

(assert (=> bm!7645 m!84249))

(assert (=> b!80648 d!20379))

(assert (=> d!19667 d!19665))

(declare-fun d!20381 () Bool)

(assert (=> d!20381 (= (getValueByKey!136 lt!37345 (_1!1102 lt!37075)) (Some!141 (_2!1102 lt!37075)))))

(assert (=> d!20381 true))

(declare-fun _$22!403 () Unit!2327)

(assert (=> d!20381 (= (choose!477 lt!37345 (_1!1102 lt!37075) (_2!1102 lt!37075)) _$22!403)))

(declare-fun bs!3464 () Bool)

(assert (= bs!3464 d!20381))

(assert (=> bs!3464 m!81665))

(assert (=> d!19667 d!20381))

(declare-fun d!20383 () Bool)

(declare-fun res!42496 () Bool)

(declare-fun e!53401 () Bool)

(assert (=> d!20383 (=> res!42496 e!53401)))

(assert (=> d!20383 (= res!42496 (or ((_ is Nil!1511) lt!37345) ((_ is Nil!1511) (t!5172 lt!37345))))))

(assert (=> d!20383 (= (isStrictlySorted!291 lt!37345) e!53401)))

(declare-fun b!81862 () Bool)

(declare-fun e!53402 () Bool)

(assert (=> b!81862 (= e!53401 e!53402)))

(declare-fun res!42497 () Bool)

(assert (=> b!81862 (=> (not res!42497) (not e!53402))))

(assert (=> b!81862 (= res!42497 (bvslt (_1!1102 (h!2099 lt!37345)) (_1!1102 (h!2099 (t!5172 lt!37345)))))))

(declare-fun b!81863 () Bool)

(assert (=> b!81863 (= e!53402 (isStrictlySorted!291 (t!5172 lt!37345)))))

(assert (= (and d!20383 (not res!42496)) b!81862))

(assert (= (and b!81862 res!42497) b!81863))

(declare-fun m!84251 () Bool)

(assert (=> b!81863 m!84251))

(assert (=> d!19667 d!20383))

(assert (=> b!80483 d!20369))

(assert (=> b!80483 d!20371))

(declare-fun d!20385 () Bool)

(assert (=> d!20385 (= (apply!80 lt!37631 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1187 (getValueByKey!136 (toList!734 lt!37631) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3465 () Bool)

(assert (= bs!3465 d!20385))

(assert (=> bs!3465 m!82201))

(assert (=> bs!3465 m!84029))

(assert (=> bs!3465 m!84029))

(declare-fun m!84253 () Bool)

(assert (=> bs!3465 m!84253))

(assert (=> b!80727 d!20385))

(assert (=> b!80727 d!20171))

(declare-fun b!81867 () Bool)

(declare-fun e!53404 () Option!142)

(assert (=> b!81867 (= e!53404 None!140)))

(declare-fun b!81864 () Bool)

(declare-fun e!53403 () Option!142)

(assert (=> b!81864 (= e!53403 (Some!141 (_2!1102 (h!2099 (t!5172 lt!37341)))))))

(declare-fun b!81866 () Bool)

(assert (=> b!81866 (= e!53404 (getValueByKey!136 (t!5172 (t!5172 lt!37341)) (_1!1102 lt!37082)))))

(declare-fun d!20387 () Bool)

(declare-fun c!12973 () Bool)

(assert (=> d!20387 (= c!12973 (and ((_ is Cons!1510) (t!5172 lt!37341)) (= (_1!1102 (h!2099 (t!5172 lt!37341))) (_1!1102 lt!37082))))))

(assert (=> d!20387 (= (getValueByKey!136 (t!5172 lt!37341) (_1!1102 lt!37082)) e!53403)))

(declare-fun b!81865 () Bool)

(assert (=> b!81865 (= e!53403 e!53404)))

(declare-fun c!12974 () Bool)

(assert (=> b!81865 (= c!12974 (and ((_ is Cons!1510) (t!5172 lt!37341)) (not (= (_1!1102 (h!2099 (t!5172 lt!37341))) (_1!1102 lt!37082)))))))

(assert (= (and d!20387 c!12973) b!81864))

(assert (= (and d!20387 (not c!12973)) b!81865))

(assert (= (and b!81865 c!12974) b!81866))

(assert (= (and b!81865 (not c!12974)) b!81867))

(declare-fun m!84255 () Bool)

(assert (=> b!81866 m!84255))

(assert (=> b!81030 d!20387))

(declare-fun d!20389 () Bool)

(declare-fun res!42498 () Bool)

(declare-fun e!53405 () Bool)

(assert (=> d!20389 (=> res!42498 e!53405)))

(assert (=> d!20389 (= res!42498 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))) lt!37405)))))

(assert (=> d!20389 (= (containsKey!140 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37405) e!53405)))

(declare-fun b!81868 () Bool)

(declare-fun e!53406 () Bool)

(assert (=> b!81868 (= e!53405 e!53406)))

(declare-fun res!42499 () Bool)

(assert (=> b!81868 (=> (not res!42499) (not e!53406))))

(assert (=> b!81868 (= res!42499 (and (or (not ((_ is Cons!1510) (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))) (bvsle (_1!1102 (h!2099 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))) lt!37405)) ((_ is Cons!1510) (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (bvslt (_1!1102 (h!2099 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))) lt!37405)))))

(declare-fun b!81869 () Bool)

(assert (=> b!81869 (= e!53406 (containsKey!140 (t!5172 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) lt!37405))))

(assert (= (and d!20389 (not res!42498)) b!81868))

(assert (= (and b!81868 res!42499) b!81869))

(declare-fun m!84257 () Bool)

(assert (=> b!81869 m!84257))

(assert (=> d!19641 d!20389))

(declare-fun b!81873 () Bool)

(declare-fun e!53408 () Option!142)

(assert (=> b!81873 (= e!53408 None!140)))

(declare-fun b!81870 () Bool)

(declare-fun e!53407 () Option!142)

(assert (=> b!81870 (= e!53407 (Some!141 (_2!1102 (h!2099 (t!5172 lt!37311)))))))

(declare-fun b!81872 () Bool)

(assert (=> b!81872 (= e!53408 (getValueByKey!136 (t!5172 (t!5172 lt!37311)) (_1!1102 lt!37079)))))

(declare-fun d!20391 () Bool)

(declare-fun c!12975 () Bool)

(assert (=> d!20391 (= c!12975 (and ((_ is Cons!1510) (t!5172 lt!37311)) (= (_1!1102 (h!2099 (t!5172 lt!37311))) (_1!1102 lt!37079))))))

(assert (=> d!20391 (= (getValueByKey!136 (t!5172 lt!37311) (_1!1102 lt!37079)) e!53407)))

(declare-fun b!81871 () Bool)

(assert (=> b!81871 (= e!53407 e!53408)))

(declare-fun c!12976 () Bool)

(assert (=> b!81871 (= c!12976 (and ((_ is Cons!1510) (t!5172 lt!37311)) (not (= (_1!1102 (h!2099 (t!5172 lt!37311))) (_1!1102 lt!37079)))))))

(assert (= (and d!20391 c!12975) b!81870))

(assert (= (and d!20391 (not c!12975)) b!81871))

(assert (= (and b!81871 c!12976) b!81872))

(assert (= (and b!81871 (not c!12976)) b!81873))

(declare-fun m!84259 () Bool)

(assert (=> b!81872 m!84259))

(assert (=> b!80863 d!20391))

(declare-fun d!20393 () Bool)

(declare-fun e!53409 () Bool)

(assert (=> d!20393 e!53409))

(declare-fun res!42500 () Bool)

(assert (=> d!20393 (=> res!42500 e!53409)))

(declare-fun lt!38260 () Bool)

(assert (=> d!20393 (= res!42500 (not lt!38260))))

(declare-fun lt!38259 () Bool)

(assert (=> d!20393 (= lt!38260 lt!38259)))

(declare-fun lt!38258 () Unit!2327)

(declare-fun e!53410 () Unit!2327)

(assert (=> d!20393 (= lt!38258 e!53410)))

(declare-fun c!12977 () Bool)

(assert (=> d!20393 (= c!12977 lt!38259)))

(assert (=> d!20393 (= lt!38259 (containsKey!140 (toList!734 lt!37467) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!20393 (= (contains!742 lt!37467 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38260)))

(declare-fun b!81874 () Bool)

(declare-fun lt!38257 () Unit!2327)

(assert (=> b!81874 (= e!53410 lt!38257)))

(assert (=> b!81874 (= lt!38257 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37467) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> b!81874 (isDefined!90 (getValueByKey!136 (toList!734 lt!37467) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81875 () Bool)

(declare-fun Unit!2397 () Unit!2327)

(assert (=> b!81875 (= e!53410 Unit!2397)))

(declare-fun b!81876 () Bool)

(assert (=> b!81876 (= e!53409 (isDefined!90 (getValueByKey!136 (toList!734 lt!37467) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20393 c!12977) b!81874))

(assert (= (and d!20393 (not c!12977)) b!81875))

(assert (= (and d!20393 (not res!42500)) b!81876))

(declare-fun m!84261 () Bool)

(assert (=> d!20393 m!84261))

(declare-fun m!84263 () Bool)

(assert (=> b!81874 m!84263))

(assert (=> b!81874 m!81887))

(assert (=> b!81874 m!81887))

(declare-fun m!84265 () Bool)

(assert (=> b!81874 m!84265))

(assert (=> b!81876 m!81887))

(assert (=> b!81876 m!81887))

(assert (=> b!81876 m!84265))

(assert (=> d!19657 d!20393))

(declare-fun b!81880 () Bool)

(declare-fun e!53412 () Option!142)

(assert (=> b!81880 (= e!53412 None!140)))

(declare-fun b!81877 () Bool)

(declare-fun e!53411 () Option!142)

(assert (=> b!81877 (= e!53411 (Some!141 (_2!1102 (h!2099 lt!37466))))))

(declare-fun b!81879 () Bool)

(assert (=> b!81879 (= e!53412 (getValueByKey!136 (t!5172 lt!37466) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20395 () Bool)

(declare-fun c!12978 () Bool)

(assert (=> d!20395 (= c!12978 (and ((_ is Cons!1510) lt!37466) (= (_1!1102 (h!2099 lt!37466)) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20395 (= (getValueByKey!136 lt!37466 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53411)))

(declare-fun b!81878 () Bool)

(assert (=> b!81878 (= e!53411 e!53412)))

(declare-fun c!12979 () Bool)

(assert (=> b!81878 (= c!12979 (and ((_ is Cons!1510) lt!37466) (not (= (_1!1102 (h!2099 lt!37466)) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20395 c!12978) b!81877))

(assert (= (and d!20395 (not c!12978)) b!81878))

(assert (= (and b!81878 c!12979) b!81879))

(assert (= (and b!81878 (not c!12979)) b!81880))

(declare-fun m!84267 () Bool)

(assert (=> b!81879 m!84267))

(assert (=> d!19657 d!20395))

(declare-fun d!20397 () Bool)

(assert (=> d!20397 (= (getValueByKey!136 lt!37466 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!38261 () Unit!2327)

(assert (=> d!20397 (= lt!38261 (choose!477 lt!37466 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun e!53413 () Bool)

(assert (=> d!20397 e!53413))

(declare-fun res!42501 () Bool)

(assert (=> d!20397 (=> (not res!42501) (not e!53413))))

(assert (=> d!20397 (= res!42501 (isStrictlySorted!291 lt!37466))))

(assert (=> d!20397 (= (lemmaContainsTupThenGetReturnValue!56 lt!37466 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38261)))

(declare-fun b!81881 () Bool)

(declare-fun res!42502 () Bool)

(assert (=> b!81881 (=> (not res!42502) (not e!53413))))

(assert (=> b!81881 (= res!42502 (containsKey!140 lt!37466 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81882 () Bool)

(assert (=> b!81882 (= e!53413 (contains!745 lt!37466 (tuple2!2183 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20397 res!42501) b!81881))

(assert (= (and b!81881 res!42502) b!81882))

(assert (=> d!20397 m!81881))

(declare-fun m!84269 () Bool)

(assert (=> d!20397 m!84269))

(declare-fun m!84271 () Bool)

(assert (=> d!20397 m!84271))

(declare-fun m!84273 () Bool)

(assert (=> b!81881 m!84273))

(declare-fun m!84275 () Bool)

(assert (=> b!81882 m!84275))

(assert (=> d!19657 d!20397))

(declare-fun b!81883 () Bool)

(declare-fun e!53417 () List!1514)

(declare-fun call!7651 () List!1514)

(assert (=> b!81883 (= e!53417 call!7651)))

(declare-fun bm!7646 () Bool)

(declare-fun e!53414 () List!1514)

(declare-fun c!12983 () Bool)

(declare-fun call!7650 () List!1514)

(assert (=> bm!7646 (= call!7650 ($colon$colon!69 e!53414 (ite c!12983 (h!2099 (toList!734 lt!37408)) (tuple2!2183 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun c!12981 () Bool)

(assert (=> bm!7646 (= c!12981 c!12983)))

(declare-fun b!81884 () Bool)

(declare-fun e!53418 () Bool)

(declare-fun lt!38262 () List!1514)

(assert (=> b!81884 (= e!53418 (contains!745 lt!38262 (tuple2!2183 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun bm!7647 () Bool)

(declare-fun call!7649 () List!1514)

(assert (=> bm!7647 (= call!7651 call!7649)))

(declare-fun d!20399 () Bool)

(assert (=> d!20399 e!53418))

(declare-fun res!42504 () Bool)

(assert (=> d!20399 (=> (not res!42504) (not e!53418))))

(assert (=> d!20399 (= res!42504 (isStrictlySorted!291 lt!38262))))

(declare-fun e!53416 () List!1514)

(assert (=> d!20399 (= lt!38262 e!53416)))

(assert (=> d!20399 (= c!12983 (and ((_ is Cons!1510) (toList!734 lt!37408)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37408))) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20399 (isStrictlySorted!291 (toList!734 lt!37408))))

(assert (=> d!20399 (= (insertStrictlySorted!59 (toList!734 lt!37408) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38262)))

(declare-fun c!12980 () Bool)

(declare-fun b!81885 () Bool)

(assert (=> b!81885 (= c!12980 (and ((_ is Cons!1510) (toList!734 lt!37408)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37408))) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun e!53415 () List!1514)

(assert (=> b!81885 (= e!53415 e!53417)))

(declare-fun b!81886 () Bool)

(assert (=> b!81886 (= e!53415 call!7649)))

(declare-fun b!81887 () Bool)

(assert (=> b!81887 (= e!53416 call!7650)))

(declare-fun bm!7648 () Bool)

(assert (=> bm!7648 (= call!7649 call!7650)))

(declare-fun b!81888 () Bool)

(declare-fun res!42503 () Bool)

(assert (=> b!81888 (=> (not res!42503) (not e!53418))))

(assert (=> b!81888 (= res!42503 (containsKey!140 lt!38262 (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!81889 () Bool)

(assert (=> b!81889 (= e!53417 call!7651)))

(declare-fun c!12982 () Bool)

(declare-fun b!81890 () Bool)

(assert (=> b!81890 (= e!53414 (ite c!12982 (t!5172 (toList!734 lt!37408)) (ite c!12980 (Cons!1510 (h!2099 (toList!734 lt!37408)) (t!5172 (toList!734 lt!37408))) Nil!1511)))))

(declare-fun b!81891 () Bool)

(assert (=> b!81891 (= e!53416 e!53415)))

(assert (=> b!81891 (= c!12982 (and ((_ is Cons!1510) (toList!734 lt!37408)) (= (_1!1102 (h!2099 (toList!734 lt!37408))) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!81892 () Bool)

(assert (=> b!81892 (= e!53414 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37408)) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (= (and d!20399 c!12983) b!81887))

(assert (= (and d!20399 (not c!12983)) b!81891))

(assert (= (and b!81891 c!12982) b!81886))

(assert (= (and b!81891 (not c!12982)) b!81885))

(assert (= (and b!81885 c!12980) b!81889))

(assert (= (and b!81885 (not c!12980)) b!81883))

(assert (= (or b!81889 b!81883) bm!7647))

(assert (= (or b!81886 bm!7647) bm!7648))

(assert (= (or b!81887 bm!7648) bm!7646))

(assert (= (and bm!7646 c!12981) b!81892))

(assert (= (and bm!7646 (not c!12981)) b!81890))

(assert (= (and d!20399 res!42504) b!81888))

(assert (= (and b!81888 res!42503) b!81884))

(declare-fun m!84277 () Bool)

(assert (=> d!20399 m!84277))

(declare-fun m!84279 () Bool)

(assert (=> d!20399 m!84279))

(declare-fun m!84281 () Bool)

(assert (=> b!81892 m!84281))

(declare-fun m!84283 () Bool)

(assert (=> bm!7646 m!84283))

(declare-fun m!84285 () Bool)

(assert (=> b!81888 m!84285))

(declare-fun m!84287 () Bool)

(assert (=> b!81884 m!84287))

(assert (=> d!19657 d!20399))

(declare-fun d!20401 () Bool)

(assert (=> d!20401 (= (content!85 Nil!1512) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!19691 d!20401))

(declare-fun b!81896 () Bool)

(declare-fun e!53420 () Option!142)

(assert (=> b!81896 (= e!53420 None!140)))

(declare-fun b!81893 () Bool)

(declare-fun e!53419 () Option!142)

(assert (=> b!81893 (= e!53419 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37653)))))))

(declare-fun b!81895 () Bool)

(assert (=> b!81895 (= e!53420 (getValueByKey!136 (t!5172 (toList!734 lt!37653)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!12984 () Bool)

(declare-fun d!20403 () Bool)

(assert (=> d!20403 (= c!12984 (and ((_ is Cons!1510) (toList!734 lt!37653)) (= (_1!1102 (h!2099 (toList!734 lt!37653))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!20403 (= (getValueByKey!136 (toList!734 lt!37653) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!53419)))

(declare-fun b!81894 () Bool)

(assert (=> b!81894 (= e!53419 e!53420)))

(declare-fun c!12985 () Bool)

(assert (=> b!81894 (= c!12985 (and ((_ is Cons!1510) (toList!734 lt!37653)) (not (= (_1!1102 (h!2099 (toList!734 lt!37653))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!20403 c!12984) b!81893))

(assert (= (and d!20403 (not c!12984)) b!81894))

(assert (= (and b!81894 c!12985) b!81895))

(assert (= (and b!81894 (not c!12985)) b!81896))

(declare-fun m!84289 () Bool)

(assert (=> b!81895 m!84289))

(assert (=> b!80749 d!20403))

(declare-fun d!20405 () Bool)

(declare-fun e!53421 () Bool)

(assert (=> d!20405 e!53421))

(declare-fun res!42506 () Bool)

(assert (=> d!20405 (=> (not res!42506) (not e!53421))))

(declare-fun lt!38266 () ListLongMap!1437)

(assert (=> d!20405 (= res!42506 (contains!742 lt!38266 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun lt!38265 () List!1514)

(assert (=> d!20405 (= lt!38266 (ListLongMap!1438 lt!38265))))

(declare-fun lt!38264 () Unit!2327)

(declare-fun lt!38263 () Unit!2327)

(assert (=> d!20405 (= lt!38264 lt!38263)))

(assert (=> d!20405 (= (getValueByKey!136 lt!38265 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!20405 (= lt!38263 (lemmaContainsTupThenGetReturnValue!56 lt!38265 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!20405 (= lt!38265 (insertStrictlySorted!59 (toList!734 call!7510) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!20405 (= (+!104 call!7510 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) lt!38266)))

(declare-fun b!81897 () Bool)

(declare-fun res!42505 () Bool)

(assert (=> b!81897 (=> (not res!42505) (not e!53421))))

(assert (=> b!81897 (= res!42505 (= (getValueByKey!136 (toList!734 lt!38266) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(declare-fun b!81898 () Bool)

(assert (=> b!81898 (= e!53421 (contains!745 (toList!734 lt!38266) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(assert (= (and d!20405 res!42506) b!81897))

(assert (= (and b!81897 res!42505) b!81898))

(declare-fun m!84291 () Bool)

(assert (=> d!20405 m!84291))

(declare-fun m!84293 () Bool)

(assert (=> d!20405 m!84293))

(declare-fun m!84295 () Bool)

(assert (=> d!20405 m!84295))

(declare-fun m!84297 () Bool)

(assert (=> d!20405 m!84297))

(declare-fun m!84299 () Bool)

(assert (=> b!81897 m!84299))

(declare-fun m!84301 () Bool)

(assert (=> b!81898 m!84301))

(assert (=> b!80708 d!20405))

(assert (=> b!80744 d!20205))

(assert (=> b!80744 d!20207))

(declare-fun d!20407 () Bool)

(assert (not d!20407))

(assert (=> b!80611 d!20407))

(declare-fun d!20409 () Bool)

(assert (=> d!20409 (isDefined!90 (getValueByKey!136 (toList!734 lt!37350) (_1!1102 lt!37079)))))

(declare-fun lt!38267 () Unit!2327)

(assert (=> d!20409 (= lt!38267 (choose!485 (toList!734 lt!37350) (_1!1102 lt!37079)))))

(declare-fun e!53422 () Bool)

(assert (=> d!20409 e!53422))

(declare-fun res!42507 () Bool)

(assert (=> d!20409 (=> (not res!42507) (not e!53422))))

(assert (=> d!20409 (= res!42507 (isStrictlySorted!291 (toList!734 lt!37350)))))

(assert (=> d!20409 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37350) (_1!1102 lt!37079)) lt!38267)))

(declare-fun b!81899 () Bool)

(assert (=> b!81899 (= e!53422 (containsKey!140 (toList!734 lt!37350) (_1!1102 lt!37079)))))

(assert (= (and d!20409 res!42507) b!81899))

(assert (=> d!20409 m!81683))

(assert (=> d!20409 m!81683))

(assert (=> d!20409 m!81939))

(declare-fun m!84303 () Bool)

(assert (=> d!20409 m!84303))

(declare-fun m!84305 () Bool)

(assert (=> d!20409 m!84305))

(assert (=> b!81899 m!81935))

(assert (=> b!80574 d!20409))

(declare-fun d!20411 () Bool)

(assert (=> d!20411 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37350) (_1!1102 lt!37079))) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37350) (_1!1102 lt!37079)))))))

(declare-fun bs!3466 () Bool)

(assert (= bs!3466 d!20411))

(assert (=> bs!3466 m!81683))

(declare-fun m!84307 () Bool)

(assert (=> bs!3466 m!84307))

(assert (=> b!80574 d!20411))

(assert (=> b!80574 d!19701))

(declare-fun d!20413 () Bool)

(assert (=> d!20413 (isDefined!90 (getValueByKey!136 (toList!734 lt!37312) (_1!1102 lt!37079)))))

(declare-fun lt!38268 () Unit!2327)

(assert (=> d!20413 (= lt!38268 (choose!485 (toList!734 lt!37312) (_1!1102 lt!37079)))))

(declare-fun e!53423 () Bool)

(assert (=> d!20413 e!53423))

(declare-fun res!42508 () Bool)

(assert (=> d!20413 (=> (not res!42508) (not e!53423))))

(assert (=> d!20413 (= res!42508 (isStrictlySorted!291 (toList!734 lt!37312)))))

(assert (=> d!20413 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37312) (_1!1102 lt!37079)) lt!38268)))

(declare-fun b!81900 () Bool)

(assert (=> b!81900 (= e!53423 (containsKey!140 (toList!734 lt!37312) (_1!1102 lt!37079)))))

(assert (= (and d!20413 res!42508) b!81900))

(assert (=> d!20413 m!81597))

(assert (=> d!20413 m!81597))

(assert (=> d!20413 m!82441))

(declare-fun m!84309 () Bool)

(assert (=> d!20413 m!84309))

(declare-fun m!84311 () Bool)

(assert (=> d!20413 m!84311))

(assert (=> b!81900 m!82437))

(assert (=> b!80858 d!20413))

(declare-fun d!20415 () Bool)

(assert (=> d!20415 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37312) (_1!1102 lt!37079))) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37312) (_1!1102 lt!37079)))))))

(declare-fun bs!3467 () Bool)

(assert (= bs!3467 d!20415))

(assert (=> bs!3467 m!81597))

(declare-fun m!84313 () Bool)

(assert (=> bs!3467 m!84313))

(assert (=> b!80858 d!20415))

(assert (=> b!80858 d!19829))

(declare-fun d!20417 () Bool)

(declare-fun lt!38269 () Bool)

(assert (=> d!20417 (= lt!38269 (select (content!86 (toList!734 lt!37500)) (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun e!53424 () Bool)

(assert (=> d!20417 (= lt!38269 e!53424)))

(declare-fun res!42510 () Bool)

(assert (=> d!20417 (=> (not res!42510) (not e!53424))))

(assert (=> d!20417 (= res!42510 ((_ is Cons!1510) (toList!734 lt!37500)))))

(assert (=> d!20417 (= (contains!745 (toList!734 lt!37500) (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38269)))

(declare-fun b!81901 () Bool)

(declare-fun e!53425 () Bool)

(assert (=> b!81901 (= e!53424 e!53425)))

(declare-fun res!42509 () Bool)

(assert (=> b!81901 (=> res!42509 e!53425)))

(assert (=> b!81901 (= res!42509 (= (h!2099 (toList!734 lt!37500)) (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!81902 () Bool)

(assert (=> b!81902 (= e!53425 (contains!745 (t!5172 (toList!734 lt!37500)) (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (= (and d!20417 res!42510) b!81901))

(assert (= (and b!81901 (not res!42509)) b!81902))

(declare-fun m!84315 () Bool)

(assert (=> d!20417 m!84315))

(declare-fun m!84317 () Bool)

(assert (=> d!20417 m!84317))

(declare-fun m!84319 () Bool)

(assert (=> b!81902 m!84319))

(assert (=> b!80615 d!20417))

(declare-fun d!20419 () Bool)

(assert (=> d!20419 (isDefined!90 (getValueByKey!136 (toList!734 lt!37342) (_1!1102 lt!37082)))))

(declare-fun lt!38270 () Unit!2327)

(assert (=> d!20419 (= lt!38270 (choose!485 (toList!734 lt!37342) (_1!1102 lt!37082)))))

(declare-fun e!53426 () Bool)

(assert (=> d!20419 e!53426))

(declare-fun res!42511 () Bool)

(assert (=> d!20419 (=> (not res!42511) (not e!53426))))

(assert (=> d!20419 (= res!42511 (isStrictlySorted!291 (toList!734 lt!37342)))))

(assert (=> d!20419 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37342) (_1!1102 lt!37082)) lt!38270)))

(declare-fun b!81903 () Bool)

(assert (=> b!81903 (= e!53426 (containsKey!140 (toList!734 lt!37342) (_1!1102 lt!37082)))))

(assert (= (and d!20419 res!42511) b!81903))

(assert (=> d!20419 m!81659))

(assert (=> d!20419 m!81659))

(assert (=> d!20419 m!82751))

(declare-fun m!84321 () Bool)

(assert (=> d!20419 m!84321))

(declare-fun m!84323 () Bool)

(assert (=> d!20419 m!84323))

(assert (=> b!81903 m!82747))

(assert (=> b!81025 d!20419))

(declare-fun d!20421 () Bool)

(assert (=> d!20421 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37342) (_1!1102 lt!37082))) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37342) (_1!1102 lt!37082)))))))

(declare-fun bs!3468 () Bool)

(assert (= bs!3468 d!20421))

(assert (=> bs!3468 m!81659))

(declare-fun m!84325 () Bool)

(assert (=> bs!3468 m!84325))

(assert (=> b!81025 d!20421))

(assert (=> b!81025 d!19689))

(declare-fun d!20423 () Bool)

(assert (=> d!20423 (= (get!1187 (getValueByKey!136 (toList!734 lt!37408) lt!37414)) (v!2606 (getValueByKey!136 (toList!734 lt!37408) lt!37414)))))

(assert (=> d!19653 d!20423))

(declare-fun b!81907 () Bool)

(declare-fun e!53428 () Option!142)

(assert (=> b!81907 (= e!53428 None!140)))

(declare-fun b!81904 () Bool)

(declare-fun e!53427 () Option!142)

(assert (=> b!81904 (= e!53427 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37408)))))))

(declare-fun b!81906 () Bool)

(assert (=> b!81906 (= e!53428 (getValueByKey!136 (t!5172 (toList!734 lt!37408)) lt!37414))))

(declare-fun d!20425 () Bool)

(declare-fun c!12986 () Bool)

(assert (=> d!20425 (= c!12986 (and ((_ is Cons!1510) (toList!734 lt!37408)) (= (_1!1102 (h!2099 (toList!734 lt!37408))) lt!37414)))))

(assert (=> d!20425 (= (getValueByKey!136 (toList!734 lt!37408) lt!37414) e!53427)))

(declare-fun b!81905 () Bool)

(assert (=> b!81905 (= e!53427 e!53428)))

(declare-fun c!12987 () Bool)

(assert (=> b!81905 (= c!12987 (and ((_ is Cons!1510) (toList!734 lt!37408)) (not (= (_1!1102 (h!2099 (toList!734 lt!37408))) lt!37414))))))

(assert (= (and d!20425 c!12986) b!81904))

(assert (= (and d!20425 (not c!12986)) b!81905))

(assert (= (and b!81905 c!12987) b!81906))

(assert (= (and b!81905 (not c!12987)) b!81907))

(declare-fun m!84327 () Bool)

(assert (=> b!81906 m!84327))

(assert (=> d!19653 d!20425))

(declare-fun d!20427 () Bool)

(declare-fun lt!38271 () Bool)

(assert (=> d!20427 (= lt!38271 (select (content!86 lt!37304) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(declare-fun e!53429 () Bool)

(assert (=> d!20427 (= lt!38271 e!53429)))

(declare-fun res!42513 () Bool)

(assert (=> d!20427 (=> (not res!42513) (not e!53429))))

(assert (=> d!20427 (= res!42513 ((_ is Cons!1510) lt!37304))))

(assert (=> d!20427 (= (contains!745 lt!37304 (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))) lt!38271)))

(declare-fun b!81908 () Bool)

(declare-fun e!53430 () Bool)

(assert (=> b!81908 (= e!53429 e!53430)))

(declare-fun res!42512 () Bool)

(assert (=> b!81908 (=> res!42512 e!53430)))

(assert (=> b!81908 (= res!42512 (= (h!2099 lt!37304) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(declare-fun b!81909 () Bool)

(assert (=> b!81909 (= e!53430 (contains!745 (t!5172 lt!37304) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(assert (= (and d!20427 res!42513) b!81908))

(assert (= (and b!81908 (not res!42512)) b!81909))

(declare-fun m!84329 () Bool)

(assert (=> d!20427 m!84329))

(declare-fun m!84331 () Bool)

(assert (=> d!20427 m!84331))

(declare-fun m!84333 () Bool)

(assert (=> b!81909 m!84333))

(assert (=> b!80826 d!20427))

(declare-fun d!20429 () Bool)

(declare-fun c!12988 () Bool)

(assert (=> d!20429 (= c!12988 ((_ is Nil!1511) (toList!734 lt!37316)))))

(declare-fun e!53431 () (InoxSet tuple2!2182))

(assert (=> d!20429 (= (content!86 (toList!734 lt!37316)) e!53431)))

(declare-fun b!81910 () Bool)

(assert (=> b!81910 (= e!53431 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!81911 () Bool)

(assert (=> b!81911 (= e!53431 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2099 (toList!734 lt!37316)) true) (content!86 (t!5172 (toList!734 lt!37316)))))))

(assert (= (and d!20429 c!12988) b!81910))

(assert (= (and d!20429 (not c!12988)) b!81911))

(declare-fun m!84335 () Bool)

(assert (=> b!81911 m!84335))

(assert (=> b!81911 m!84187))

(assert (=> d!19727 d!20429))

(declare-fun d!20431 () Bool)

(declare-fun res!42514 () Bool)

(declare-fun e!53432 () Bool)

(assert (=> d!20431 (=> res!42514 e!53432)))

(assert (=> d!20431 (= res!42514 (and ((_ is Cons!1510) lt!37794) (= (_1!1102 (h!2099 lt!37794)) (_1!1102 lt!37082))))))

(assert (=> d!20431 (= (containsKey!140 lt!37794 (_1!1102 lt!37082)) e!53432)))

(declare-fun b!81912 () Bool)

(declare-fun e!53433 () Bool)

(assert (=> b!81912 (= e!53432 e!53433)))

(declare-fun res!42515 () Bool)

(assert (=> b!81912 (=> (not res!42515) (not e!53433))))

(assert (=> b!81912 (= res!42515 (and (or (not ((_ is Cons!1510) lt!37794)) (bvsle (_1!1102 (h!2099 lt!37794)) (_1!1102 lt!37082))) ((_ is Cons!1510) lt!37794) (bvslt (_1!1102 (h!2099 lt!37794)) (_1!1102 lt!37082))))))

(declare-fun b!81913 () Bool)

(assert (=> b!81913 (= e!53433 (containsKey!140 (t!5172 lt!37794) (_1!1102 lt!37082)))))

(assert (= (and d!20431 (not res!42514)) b!81912))

(assert (= (and b!81912 res!42515) b!81913))

(declare-fun m!84337 () Bool)

(assert (=> b!81913 m!84337))

(assert (=> b!80939 d!20431))

(declare-fun d!20433 () Bool)

(declare-fun res!42516 () Bool)

(declare-fun e!53434 () Bool)

(assert (=> d!20433 (=> res!42516 e!53434)))

(assert (=> d!20433 (= res!42516 (and ((_ is Cons!1510) (toList!734 lt!37331)) (= (_1!1102 (h!2099 (toList!734 lt!37331))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20433 (= (containsKey!140 (toList!734 lt!37331) #b0000000000000000000000000000000000000000000000000000000000000000) e!53434)))

(declare-fun b!81914 () Bool)

(declare-fun e!53435 () Bool)

(assert (=> b!81914 (= e!53434 e!53435)))

(declare-fun res!42517 () Bool)

(assert (=> b!81914 (=> (not res!42517) (not e!53435))))

(assert (=> b!81914 (= res!42517 (and (or (not ((_ is Cons!1510) (toList!734 lt!37331))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37331))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1510) (toList!734 lt!37331)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37331))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81915 () Bool)

(assert (=> b!81915 (= e!53435 (containsKey!140 (t!5172 (toList!734 lt!37331)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20433 (not res!42516)) b!81914))

(assert (= (and b!81914 res!42517) b!81915))

(declare-fun m!84339 () Bool)

(assert (=> b!81915 m!84339))

(assert (=> d!19719 d!20433))

(assert (=> b!80735 d!20375))

(declare-fun b!81919 () Bool)

(declare-fun e!53437 () Option!142)

(assert (=> b!81919 (= e!53437 None!140)))

(declare-fun b!81916 () Bool)

(declare-fun e!53436 () Option!142)

(assert (=> b!81916 (= e!53436 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37467)))))))

(declare-fun b!81918 () Bool)

(assert (=> b!81918 (= e!53437 (getValueByKey!136 (t!5172 (toList!734 lt!37467)) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun c!12989 () Bool)

(declare-fun d!20435 () Bool)

(assert (=> d!20435 (= c!12989 (and ((_ is Cons!1510) (toList!734 lt!37467)) (= (_1!1102 (h!2099 (toList!734 lt!37467))) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20435 (= (getValueByKey!136 (toList!734 lt!37467) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53436)))

(declare-fun b!81917 () Bool)

(assert (=> b!81917 (= e!53436 e!53437)))

(declare-fun c!12990 () Bool)

(assert (=> b!81917 (= c!12990 (and ((_ is Cons!1510) (toList!734 lt!37467)) (not (= (_1!1102 (h!2099 (toList!734 lt!37467))) (_1!1102 (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20435 c!12989) b!81916))

(assert (= (and d!20435 (not c!12989)) b!81917))

(assert (= (and b!81917 c!12990) b!81918))

(assert (= (and b!81917 (not c!12990)) b!81919))

(declare-fun m!84341 () Bool)

(assert (=> b!81918 m!84341))

(assert (=> b!80551 d!20435))

(declare-fun d!20437 () Bool)

(declare-fun res!42518 () Bool)

(declare-fun e!53438 () Bool)

(assert (=> d!20437 (=> res!42518 e!53438)))

(assert (=> d!20437 (= res!42518 (and ((_ is Cons!1510) (toList!734 lt!37406)) (= (_1!1102 (h!2099 (toList!734 lt!37406))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!20437 (= (containsKey!140 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53438)))

(declare-fun b!81920 () Bool)

(declare-fun e!53439 () Bool)

(assert (=> b!81920 (= e!53438 e!53439)))

(declare-fun res!42519 () Bool)

(assert (=> b!81920 (=> (not res!42519) (not e!53439))))

(assert (=> b!81920 (= res!42519 (and (or (not ((_ is Cons!1510) (toList!734 lt!37406))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37406))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1510) (toList!734 lt!37406)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37406))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!81921 () Bool)

(assert (=> b!81921 (= e!53439 (containsKey!140 (t!5172 (toList!734 lt!37406)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20437 (not res!42518)) b!81920))

(assert (= (and b!81920 res!42519) b!81921))

(assert (=> b!81921 m!81625))

(declare-fun m!84343 () Bool)

(assert (=> b!81921 m!84343))

(assert (=> d!19855 d!20437))

(declare-fun d!20439 () Bool)

(assert (=> d!20439 (= (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80626 d!20439))

(assert (=> b!81054 d!20075))

(declare-fun b!81922 () Bool)

(declare-fun e!53440 () Bool)

(declare-fun call!7652 () Bool)

(assert (=> b!81922 (= e!53440 call!7652)))

(declare-fun b!81923 () Bool)

(declare-fun e!53441 () Bool)

(assert (=> b!81923 (= e!53441 call!7652)))

(declare-fun b!81924 () Bool)

(declare-fun e!53442 () Bool)

(assert (=> b!81924 (= e!53442 e!53441)))

(declare-fun c!12991 () Bool)

(assert (=> b!81924 (= c!12991 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000)))))

(declare-fun b!81925 () Bool)

(assert (=> b!81925 (= e!53441 e!53440)))

(declare-fun lt!38273 () (_ BitVec 64))

(assert (=> b!81925 (= lt!38273 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000))))

(declare-fun lt!38274 () Unit!2327)

(assert (=> b!81925 (= lt!38274 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3955 (_2!1101 lt!37268)) lt!38273 #b00000000000000000000000000000000))))

(assert (=> b!81925 (arrayContainsKey!0 (_keys!3955 (_2!1101 lt!37268)) lt!38273 #b00000000000000000000000000000000)))

(declare-fun lt!38272 () Unit!2327)

(assert (=> b!81925 (= lt!38272 lt!38274)))

(declare-fun res!42521 () Bool)

(assert (=> b!81925 (= res!42521 (= (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000) (_keys!3955 (_2!1101 lt!37268)) (mask!6297 (_2!1101 lt!37268))) (Found!244 #b00000000000000000000000000000000)))))

(assert (=> b!81925 (=> (not res!42521) (not e!53440))))

(declare-fun bm!7649 () Bool)

(assert (=> bm!7649 (= call!7652 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3955 (_2!1101 lt!37268)) (mask!6297 (_2!1101 lt!37268))))))

(declare-fun d!20441 () Bool)

(declare-fun res!42520 () Bool)

(assert (=> d!20441 (=> res!42520 e!53442)))

(assert (=> d!20441 (= res!42520 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37268)))))))

(assert (=> d!20441 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3955 (_2!1101 lt!37268)) (mask!6297 (_2!1101 lt!37268))) e!53442)))

(assert (= (and d!20441 (not res!42520)) b!81924))

(assert (= (and b!81924 c!12991) b!81925))

(assert (= (and b!81924 (not c!12991)) b!81923))

(assert (= (and b!81925 res!42521) b!81922))

(assert (= (or b!81922 b!81923) bm!7649))

(assert (=> b!81924 m!84123))

(assert (=> b!81924 m!84123))

(assert (=> b!81924 m!84125))

(assert (=> b!81925 m!84123))

(declare-fun m!84345 () Bool)

(assert (=> b!81925 m!84345))

(declare-fun m!84347 () Bool)

(assert (=> b!81925 m!84347))

(assert (=> b!81925 m!84123))

(declare-fun m!84349 () Bool)

(assert (=> b!81925 m!84349))

(declare-fun m!84351 () Bool)

(assert (=> bm!7649 m!84351))

(assert (=> b!80594 d!20441))

(declare-fun d!20443 () Bool)

(assert (=> d!20443 (= ($colon$colon!69 e!52614 (ite c!12601 (h!2099 (toList!734 lt!37077)) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075)))) (Cons!1510 (ite c!12601 (h!2099 (toList!734 lt!37077)) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))) e!52614))))

(assert (=> bm!7483 d!20443))

(declare-fun d!20445 () Bool)

(declare-fun e!53443 () Bool)

(assert (=> d!20445 e!53443))

(declare-fun res!42523 () Bool)

(assert (=> d!20445 (=> (not res!42523) (not e!53443))))

(declare-fun lt!38278 () ListLongMap!1437)

(assert (=> d!20445 (= res!42523 (contains!742 lt!38278 (_1!1102 (ite (or c!12651 c!12653) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))))))

(declare-fun lt!38277 () List!1514)

(assert (=> d!20445 (= lt!38278 (ListLongMap!1438 lt!38277))))

(declare-fun lt!38276 () Unit!2327)

(declare-fun lt!38275 () Unit!2327)

(assert (=> d!20445 (= lt!38276 lt!38275)))

(assert (=> d!20445 (= (getValueByKey!136 lt!38277 (_1!1102 (ite (or c!12651 c!12653) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))) (Some!141 (_2!1102 (ite (or c!12651 c!12653) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))))))

(assert (=> d!20445 (= lt!38275 (lemmaContainsTupThenGetReturnValue!56 lt!38277 (_1!1102 (ite (or c!12651 c!12653) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))) (_2!1102 (ite (or c!12651 c!12653) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))))))

(assert (=> d!20445 (= lt!38277 (insertStrictlySorted!59 (toList!734 (ite c!12651 call!7516 (ite c!12653 call!7517 call!7518))) (_1!1102 (ite (or c!12651 c!12653) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))) (_2!1102 (ite (or c!12651 c!12653) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))))))

(assert (=> d!20445 (= (+!104 (ite c!12651 call!7516 (ite c!12653 call!7517 call!7518)) (ite (or c!12651 c!12653) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))) lt!38278)))

(declare-fun b!81926 () Bool)

(declare-fun res!42522 () Bool)

(assert (=> b!81926 (=> (not res!42522) (not e!53443))))

(assert (=> b!81926 (= res!42522 (= (getValueByKey!136 (toList!734 lt!38278) (_1!1102 (ite (or c!12651 c!12653) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))) (Some!141 (_2!1102 (ite (or c!12651 c!12653) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))))

(declare-fun b!81927 () Bool)

(assert (=> b!81927 (= e!53443 (contains!745 (toList!734 lt!38278) (ite (or c!12651 c!12653) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(assert (= (and d!20445 res!42523) b!81926))

(assert (= (and b!81926 res!42522) b!81927))

(declare-fun m!84353 () Bool)

(assert (=> d!20445 m!84353))

(declare-fun m!84355 () Bool)

(assert (=> d!20445 m!84355))

(declare-fun m!84357 () Bool)

(assert (=> d!20445 m!84357))

(declare-fun m!84359 () Bool)

(assert (=> d!20445 m!84359))

(declare-fun m!84361 () Bool)

(assert (=> b!81926 m!84361))

(declare-fun m!84363 () Bool)

(assert (=> b!81927 m!84363))

(assert (=> bm!7518 d!20445))

(declare-fun d!20447 () Bool)

(declare-fun e!53444 () Bool)

(assert (=> d!20447 e!53444))

(declare-fun res!42524 () Bool)

(assert (=> d!20447 (=> res!42524 e!53444)))

(declare-fun lt!38282 () Bool)

(assert (=> d!20447 (= res!42524 (not lt!38282))))

(declare-fun lt!38281 () Bool)

(assert (=> d!20447 (= lt!38282 lt!38281)))

(declare-fun lt!38280 () Unit!2327)

(declare-fun e!53445 () Unit!2327)

(assert (=> d!20447 (= lt!38280 e!53445)))

(declare-fun c!12992 () Bool)

(assert (=> d!20447 (= c!12992 lt!38281)))

(assert (=> d!20447 (= lt!38281 (containsKey!140 (toList!734 lt!37642) (_1!1102 (tuple2!2183 lt!37335 lt!37336))))))

(assert (=> d!20447 (= (contains!742 lt!37642 (_1!1102 (tuple2!2183 lt!37335 lt!37336))) lt!38282)))

(declare-fun b!81928 () Bool)

(declare-fun lt!38279 () Unit!2327)

(assert (=> b!81928 (= e!53445 lt!38279)))

(assert (=> b!81928 (= lt!38279 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37642) (_1!1102 (tuple2!2183 lt!37335 lt!37336))))))

(assert (=> b!81928 (isDefined!90 (getValueByKey!136 (toList!734 lt!37642) (_1!1102 (tuple2!2183 lt!37335 lt!37336))))))

(declare-fun b!81929 () Bool)

(declare-fun Unit!2398 () Unit!2327)

(assert (=> b!81929 (= e!53445 Unit!2398)))

(declare-fun b!81930 () Bool)

(assert (=> b!81930 (= e!53444 (isDefined!90 (getValueByKey!136 (toList!734 lt!37642) (_1!1102 (tuple2!2183 lt!37335 lt!37336)))))))

(assert (= (and d!20447 c!12992) b!81928))

(assert (= (and d!20447 (not c!12992)) b!81929))

(assert (= (and d!20447 (not res!42524)) b!81930))

(declare-fun m!84365 () Bool)

(assert (=> d!20447 m!84365))

(declare-fun m!84367 () Bool)

(assert (=> b!81928 m!84367))

(assert (=> b!81928 m!82235))

(assert (=> b!81928 m!82235))

(declare-fun m!84369 () Bool)

(assert (=> b!81928 m!84369))

(assert (=> b!81930 m!82235))

(assert (=> b!81930 m!82235))

(assert (=> b!81930 m!84369))

(assert (=> d!19731 d!20447))

(declare-fun b!81934 () Bool)

(declare-fun e!53447 () Option!142)

(assert (=> b!81934 (= e!53447 None!140)))

(declare-fun b!81931 () Bool)

(declare-fun e!53446 () Option!142)

(assert (=> b!81931 (= e!53446 (Some!141 (_2!1102 (h!2099 lt!37641))))))

(declare-fun b!81933 () Bool)

(assert (=> b!81933 (= e!53447 (getValueByKey!136 (t!5172 lt!37641) (_1!1102 (tuple2!2183 lt!37335 lt!37336))))))

(declare-fun d!20449 () Bool)

(declare-fun c!12993 () Bool)

(assert (=> d!20449 (= c!12993 (and ((_ is Cons!1510) lt!37641) (= (_1!1102 (h!2099 lt!37641)) (_1!1102 (tuple2!2183 lt!37335 lt!37336)))))))

(assert (=> d!20449 (= (getValueByKey!136 lt!37641 (_1!1102 (tuple2!2183 lt!37335 lt!37336))) e!53446)))

(declare-fun b!81932 () Bool)

(assert (=> b!81932 (= e!53446 e!53447)))

(declare-fun c!12994 () Bool)

(assert (=> b!81932 (= c!12994 (and ((_ is Cons!1510) lt!37641) (not (= (_1!1102 (h!2099 lt!37641)) (_1!1102 (tuple2!2183 lt!37335 lt!37336))))))))

(assert (= (and d!20449 c!12993) b!81931))

(assert (= (and d!20449 (not c!12993)) b!81932))

(assert (= (and b!81932 c!12994) b!81933))

(assert (= (and b!81932 (not c!12994)) b!81934))

(declare-fun m!84371 () Bool)

(assert (=> b!81933 m!84371))

(assert (=> d!19731 d!20449))

(declare-fun d!20451 () Bool)

(assert (=> d!20451 (= (getValueByKey!136 lt!37641 (_1!1102 (tuple2!2183 lt!37335 lt!37336))) (Some!141 (_2!1102 (tuple2!2183 lt!37335 lt!37336))))))

(declare-fun lt!38283 () Unit!2327)

(assert (=> d!20451 (= lt!38283 (choose!477 lt!37641 (_1!1102 (tuple2!2183 lt!37335 lt!37336)) (_2!1102 (tuple2!2183 lt!37335 lt!37336))))))

(declare-fun e!53448 () Bool)

(assert (=> d!20451 e!53448))

(declare-fun res!42525 () Bool)

(assert (=> d!20451 (=> (not res!42525) (not e!53448))))

(assert (=> d!20451 (= res!42525 (isStrictlySorted!291 lt!37641))))

(assert (=> d!20451 (= (lemmaContainsTupThenGetReturnValue!56 lt!37641 (_1!1102 (tuple2!2183 lt!37335 lt!37336)) (_2!1102 (tuple2!2183 lt!37335 lt!37336))) lt!38283)))

(declare-fun b!81935 () Bool)

(declare-fun res!42526 () Bool)

(assert (=> b!81935 (=> (not res!42526) (not e!53448))))

(assert (=> b!81935 (= res!42526 (containsKey!140 lt!37641 (_1!1102 (tuple2!2183 lt!37335 lt!37336))))))

(declare-fun b!81936 () Bool)

(assert (=> b!81936 (= e!53448 (contains!745 lt!37641 (tuple2!2183 (_1!1102 (tuple2!2183 lt!37335 lt!37336)) (_2!1102 (tuple2!2183 lt!37335 lt!37336)))))))

(assert (= (and d!20451 res!42525) b!81935))

(assert (= (and b!81935 res!42526) b!81936))

(assert (=> d!20451 m!82229))

(declare-fun m!84373 () Bool)

(assert (=> d!20451 m!84373))

(declare-fun m!84375 () Bool)

(assert (=> d!20451 m!84375))

(declare-fun m!84377 () Bool)

(assert (=> b!81935 m!84377))

(declare-fun m!84379 () Bool)

(assert (=> b!81936 m!84379))

(assert (=> d!19731 d!20451))

(declare-fun b!81937 () Bool)

(declare-fun e!53452 () List!1514)

(declare-fun call!7655 () List!1514)

(assert (=> b!81937 (= e!53452 call!7655)))

(declare-fun e!53449 () List!1514)

(declare-fun c!12998 () Bool)

(declare-fun call!7654 () List!1514)

(declare-fun bm!7650 () Bool)

(assert (=> bm!7650 (= call!7654 ($colon$colon!69 e!53449 (ite c!12998 (h!2099 (toList!734 lt!37334)) (tuple2!2183 (_1!1102 (tuple2!2183 lt!37335 lt!37336)) (_2!1102 (tuple2!2183 lt!37335 lt!37336))))))))

(declare-fun c!12996 () Bool)

(assert (=> bm!7650 (= c!12996 c!12998)))

(declare-fun lt!38284 () List!1514)

(declare-fun e!53453 () Bool)

(declare-fun b!81938 () Bool)

(assert (=> b!81938 (= e!53453 (contains!745 lt!38284 (tuple2!2183 (_1!1102 (tuple2!2183 lt!37335 lt!37336)) (_2!1102 (tuple2!2183 lt!37335 lt!37336)))))))

(declare-fun bm!7651 () Bool)

(declare-fun call!7653 () List!1514)

(assert (=> bm!7651 (= call!7655 call!7653)))

(declare-fun d!20453 () Bool)

(assert (=> d!20453 e!53453))

(declare-fun res!42528 () Bool)

(assert (=> d!20453 (=> (not res!42528) (not e!53453))))

(assert (=> d!20453 (= res!42528 (isStrictlySorted!291 lt!38284))))

(declare-fun e!53451 () List!1514)

(assert (=> d!20453 (= lt!38284 e!53451)))

(assert (=> d!20453 (= c!12998 (and ((_ is Cons!1510) (toList!734 lt!37334)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37334))) (_1!1102 (tuple2!2183 lt!37335 lt!37336)))))))

(assert (=> d!20453 (isStrictlySorted!291 (toList!734 lt!37334))))

(assert (=> d!20453 (= (insertStrictlySorted!59 (toList!734 lt!37334) (_1!1102 (tuple2!2183 lt!37335 lt!37336)) (_2!1102 (tuple2!2183 lt!37335 lt!37336))) lt!38284)))

(declare-fun b!81939 () Bool)

(declare-fun c!12995 () Bool)

(assert (=> b!81939 (= c!12995 (and ((_ is Cons!1510) (toList!734 lt!37334)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37334))) (_1!1102 (tuple2!2183 lt!37335 lt!37336)))))))

(declare-fun e!53450 () List!1514)

(assert (=> b!81939 (= e!53450 e!53452)))

(declare-fun b!81940 () Bool)

(assert (=> b!81940 (= e!53450 call!7653)))

(declare-fun b!81941 () Bool)

(assert (=> b!81941 (= e!53451 call!7654)))

(declare-fun bm!7652 () Bool)

(assert (=> bm!7652 (= call!7653 call!7654)))

(declare-fun b!81942 () Bool)

(declare-fun res!42527 () Bool)

(assert (=> b!81942 (=> (not res!42527) (not e!53453))))

(assert (=> b!81942 (= res!42527 (containsKey!140 lt!38284 (_1!1102 (tuple2!2183 lt!37335 lt!37336))))))

(declare-fun b!81943 () Bool)

(assert (=> b!81943 (= e!53452 call!7655)))

(declare-fun c!12997 () Bool)

(declare-fun b!81944 () Bool)

(assert (=> b!81944 (= e!53449 (ite c!12997 (t!5172 (toList!734 lt!37334)) (ite c!12995 (Cons!1510 (h!2099 (toList!734 lt!37334)) (t!5172 (toList!734 lt!37334))) Nil!1511)))))

(declare-fun b!81945 () Bool)

(assert (=> b!81945 (= e!53451 e!53450)))

(assert (=> b!81945 (= c!12997 (and ((_ is Cons!1510) (toList!734 lt!37334)) (= (_1!1102 (h!2099 (toList!734 lt!37334))) (_1!1102 (tuple2!2183 lt!37335 lt!37336)))))))

(declare-fun b!81946 () Bool)

(assert (=> b!81946 (= e!53449 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37334)) (_1!1102 (tuple2!2183 lt!37335 lt!37336)) (_2!1102 (tuple2!2183 lt!37335 lt!37336))))))

(assert (= (and d!20453 c!12998) b!81941))

(assert (= (and d!20453 (not c!12998)) b!81945))

(assert (= (and b!81945 c!12997) b!81940))

(assert (= (and b!81945 (not c!12997)) b!81939))

(assert (= (and b!81939 c!12995) b!81943))

(assert (= (and b!81939 (not c!12995)) b!81937))

(assert (= (or b!81943 b!81937) bm!7651))

(assert (= (or b!81940 bm!7651) bm!7652))

(assert (= (or b!81941 bm!7652) bm!7650))

(assert (= (and bm!7650 c!12996) b!81946))

(assert (= (and bm!7650 (not c!12996)) b!81944))

(assert (= (and d!20453 res!42528) b!81942))

(assert (= (and b!81942 res!42527) b!81938))

(declare-fun m!84381 () Bool)

(assert (=> d!20453 m!84381))

(declare-fun m!84383 () Bool)

(assert (=> d!20453 m!84383))

(declare-fun m!84385 () Bool)

(assert (=> b!81946 m!84385))

(declare-fun m!84387 () Bool)

(assert (=> bm!7650 m!84387))

(declare-fun m!84389 () Bool)

(assert (=> b!81942 m!84389))

(declare-fun m!84391 () Bool)

(assert (=> b!81938 m!84391))

(assert (=> d!19731 d!20453))

(declare-fun b!81947 () Bool)

(declare-fun res!42531 () Bool)

(declare-fun e!53454 () Bool)

(assert (=> b!81947 (=> (not res!42531) (not e!53454))))

(assert (=> b!81947 (= res!42531 (and (= (size!2132 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000001)) (= (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (size!2132 (_values!2275 (v!2600 (underlying!276 thiss!992))))) (bvsge (_size!417 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!417 (v!2600 (underlying!276 thiss!992))) (bvadd (mask!6297 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!81949 () Bool)

(declare-fun res!42532 () Bool)

(assert (=> b!81949 (=> (not res!42532) (not e!53454))))

(assert (=> b!81949 (= res!42532 (= (size!2137 (v!2600 (underlying!276 thiss!992))) (bvadd (_size!417 (v!2600 (underlying!276 thiss!992))) (bvsdiv (bvadd (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!81950 () Bool)

(assert (=> b!81950 (= e!53454 (and (bvsge (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2139 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!417 (v!2600 (underlying!276 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!81948 () Bool)

(declare-fun res!42529 () Bool)

(assert (=> b!81948 (=> (not res!42529) (not e!53454))))

(assert (=> b!81948 (= res!42529 (bvsge (size!2137 (v!2600 (underlying!276 thiss!992))) (_size!417 (v!2600 (underlying!276 thiss!992)))))))

(declare-fun d!20455 () Bool)

(declare-fun res!42530 () Bool)

(assert (=> d!20455 (=> (not res!42530) (not e!53454))))

(assert (=> d!20455 (= res!42530 (validMask!0 (mask!6297 (v!2600 (underlying!276 thiss!992)))))))

(assert (=> d!20455 (= (simpleValid!56 (v!2600 (underlying!276 thiss!992))) e!53454)))

(assert (= (and d!20455 res!42530) b!81947))

(assert (= (and b!81947 res!42531) b!81948))

(assert (= (and b!81948 res!42529) b!81949))

(assert (= (and b!81949 res!42532) b!81950))

(declare-fun m!84393 () Bool)

(assert (=> b!81949 m!84393))

(assert (=> b!81948 m!84393))

(assert (=> d!20455 m!81345))

(assert (=> d!19717 d!20455))

(declare-fun d!20457 () Bool)

(declare-fun e!53455 () Bool)

(assert (=> d!20457 e!53455))

(declare-fun res!42534 () Bool)

(assert (=> d!20457 (=> (not res!42534) (not e!53455))))

(declare-fun lt!38288 () ListLongMap!1437)

(assert (=> d!20457 (= res!42534 (contains!742 lt!38288 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun lt!38287 () List!1514)

(assert (=> d!20457 (= lt!38288 (ListLongMap!1438 lt!38287))))

(declare-fun lt!38286 () Unit!2327)

(declare-fun lt!38285 () Unit!2327)

(assert (=> d!20457 (= lt!38286 lt!38285)))

(assert (=> d!20457 (= (getValueByKey!136 lt!38287 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!20457 (= lt!38285 (lemmaContainsTupThenGetReturnValue!56 lt!38287 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!20457 (= lt!38287 (insertStrictlySorted!59 (toList!734 call!7529) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!20457 (= (+!104 call!7529 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) lt!38288)))

(declare-fun b!81951 () Bool)

(declare-fun res!42533 () Bool)

(assert (=> b!81951 (=> (not res!42533) (not e!53455))))

(assert (=> b!81951 (= res!42533 (= (getValueByKey!136 (toList!734 lt!38288) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(declare-fun b!81952 () Bool)

(assert (=> b!81952 (= e!53455 (contains!745 (toList!734 lt!38288) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(assert (= (and d!20457 res!42534) b!81951))

(assert (= (and b!81951 res!42533) b!81952))

(declare-fun m!84395 () Bool)

(assert (=> d!20457 m!84395))

(declare-fun m!84397 () Bool)

(assert (=> d!20457 m!84397))

(declare-fun m!84399 () Bool)

(assert (=> d!20457 m!84399))

(declare-fun m!84401 () Bool)

(assert (=> d!20457 m!84401))

(declare-fun m!84403 () Bool)

(assert (=> b!81951 m!84403))

(declare-fun m!84405 () Bool)

(assert (=> b!81952 m!84405))

(assert (=> b!80796 d!20457))

(declare-fun d!20459 () Bool)

(assert (=> d!20459 (contains!742 (getCurrentListMap!423 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!37277)))))

(assert (=> d!20459 true))

(declare-fun _$16!102 () Unit!2327)

(assert (=> d!20459 (= (choose!481 (_keys!3955 newMap!16) lt!37263 (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3112 lt!37277) (defaultEntry!2292 newMap!16)) _$16!102)))

(declare-fun bs!3469 () Bool)

(assert (= bs!3469 d!20459))

(assert (=> bs!3469 m!82043))

(assert (=> bs!3469 m!81543))

(assert (=> bs!3469 m!82043))

(assert (=> bs!3469 m!81543))

(assert (=> bs!3469 m!82045))

(assert (=> d!19709 d!20459))

(assert (=> d!19709 d!19885))

(declare-fun d!20461 () Bool)

(declare-fun e!53456 () Bool)

(assert (=> d!20461 e!53456))

(declare-fun res!42535 () Bool)

(assert (=> d!20461 (=> res!42535 e!53456)))

(declare-fun lt!38292 () Bool)

(assert (=> d!20461 (= res!42535 (not lt!38292))))

(declare-fun lt!38291 () Bool)

(assert (=> d!20461 (= lt!38292 lt!38291)))

(declare-fun lt!38290 () Unit!2327)

(declare-fun e!53457 () Unit!2327)

(assert (=> d!20461 (= lt!38290 e!53457)))

(declare-fun c!12999 () Bool)

(assert (=> d!20461 (= c!12999 lt!38291)))

(assert (=> d!20461 (= lt!38291 (containsKey!140 (toList!734 lt!37500) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20461 (= (contains!742 lt!37500 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) lt!38292)))

(declare-fun b!81953 () Bool)

(declare-fun lt!38289 () Unit!2327)

(assert (=> b!81953 (= e!53457 lt!38289)))

(assert (=> b!81953 (= lt!38289 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37500) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> b!81953 (isDefined!90 (getValueByKey!136 (toList!734 lt!37500) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!81954 () Bool)

(declare-fun Unit!2399 () Unit!2327)

(assert (=> b!81954 (= e!53457 Unit!2399)))

(declare-fun b!81955 () Bool)

(assert (=> b!81955 (= e!53456 (isDefined!90 (getValueByKey!136 (toList!734 lt!37500) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (= (and d!20461 c!12999) b!81953))

(assert (= (and d!20461 (not c!12999)) b!81954))

(assert (= (and d!20461 (not res!42535)) b!81955))

(declare-fun m!84407 () Bool)

(assert (=> d!20461 m!84407))

(declare-fun m!84409 () Bool)

(assert (=> b!81953 m!84409))

(assert (=> b!81953 m!82011))

(assert (=> b!81953 m!82011))

(declare-fun m!84411 () Bool)

(assert (=> b!81953 m!84411))

(assert (=> b!81955 m!82011))

(assert (=> b!81955 m!82011))

(assert (=> b!81955 m!84411))

(assert (=> d!19697 d!20461))

(declare-fun b!81959 () Bool)

(declare-fun e!53459 () Option!142)

(assert (=> b!81959 (= e!53459 None!140)))

(declare-fun b!81956 () Bool)

(declare-fun e!53458 () Option!142)

(assert (=> b!81956 (= e!53458 (Some!141 (_2!1102 (h!2099 lt!37499))))))

(declare-fun b!81958 () Bool)

(assert (=> b!81958 (= e!53459 (getValueByKey!136 (t!5172 lt!37499) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun d!20463 () Bool)

(declare-fun c!13000 () Bool)

(assert (=> d!20463 (= c!13000 (and ((_ is Cons!1510) lt!37499) (= (_1!1102 (h!2099 lt!37499)) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (=> d!20463 (= (getValueByKey!136 lt!37499 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) e!53458)))

(declare-fun b!81957 () Bool)

(assert (=> b!81957 (= e!53458 e!53459)))

(declare-fun c!13001 () Bool)

(assert (=> b!81957 (= c!13001 (and ((_ is Cons!1510) lt!37499) (not (= (_1!1102 (h!2099 lt!37499)) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))))

(assert (= (and d!20463 c!13000) b!81956))

(assert (= (and d!20463 (not c!13000)) b!81957))

(assert (= (and b!81957 c!13001) b!81958))

(assert (= (and b!81957 (not c!13001)) b!81959))

(declare-fun m!84413 () Bool)

(assert (=> b!81958 m!84413))

(assert (=> d!19697 d!20463))

(declare-fun d!20465 () Bool)

(assert (=> d!20465 (= (getValueByKey!136 lt!37499 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (Some!141 (_2!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun lt!38293 () Unit!2327)

(assert (=> d!20465 (= lt!38293 (choose!477 lt!37499 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_2!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun e!53460 () Bool)

(assert (=> d!20465 e!53460))

(declare-fun res!42536 () Bool)

(assert (=> d!20465 (=> (not res!42536) (not e!53460))))

(assert (=> d!20465 (= res!42536 (isStrictlySorted!291 lt!37499))))

(assert (=> d!20465 (= (lemmaContainsTupThenGetReturnValue!56 lt!37499 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_2!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) lt!38293)))

(declare-fun b!81960 () Bool)

(declare-fun res!42537 () Bool)

(assert (=> b!81960 (=> (not res!42537) (not e!53460))))

(assert (=> b!81960 (= res!42537 (containsKey!140 lt!37499 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!81961 () Bool)

(assert (=> b!81961 (= e!53460 (contains!745 lt!37499 (tuple2!2183 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_2!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (= (and d!20465 res!42536) b!81960))

(assert (= (and b!81960 res!42537) b!81961))

(assert (=> d!20465 m!82005))

(declare-fun m!84415 () Bool)

(assert (=> d!20465 m!84415))

(declare-fun m!84417 () Bool)

(assert (=> d!20465 m!84417))

(declare-fun m!84419 () Bool)

(assert (=> b!81960 m!84419))

(declare-fun m!84421 () Bool)

(assert (=> b!81961 m!84421))

(assert (=> d!19697 d!20465))

(declare-fun b!81962 () Bool)

(declare-fun e!53464 () List!1514)

(declare-fun call!7658 () List!1514)

(assert (=> b!81962 (= e!53464 call!7658)))

(declare-fun c!13005 () Bool)

(declare-fun call!7657 () List!1514)

(declare-fun e!53461 () List!1514)

(declare-fun bm!7653 () Bool)

(assert (=> bm!7653 (= call!7657 ($colon$colon!69 e!53461 (ite c!13005 (h!2099 (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428))) (tuple2!2183 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_2!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))))

(declare-fun c!13003 () Bool)

(assert (=> bm!7653 (= c!13003 c!13005)))

(declare-fun b!81963 () Bool)

(declare-fun e!53465 () Bool)

(declare-fun lt!38294 () List!1514)

(assert (=> b!81963 (= e!53465 (contains!745 lt!38294 (tuple2!2183 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_2!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(declare-fun bm!7654 () Bool)

(declare-fun call!7656 () List!1514)

(assert (=> bm!7654 (= call!7658 call!7656)))

(declare-fun d!20467 () Bool)

(assert (=> d!20467 e!53465))

(declare-fun res!42539 () Bool)

(assert (=> d!20467 (=> (not res!42539) (not e!53465))))

(assert (=> d!20467 (= res!42539 (isStrictlySorted!291 lt!38294))))

(declare-fun e!53463 () List!1514)

(assert (=> d!20467 (= lt!38294 e!53463)))

(assert (=> d!20467 (= c!13005 (and ((_ is Cons!1510) (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428))) (bvslt (_1!1102 (h!2099 (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428)))) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (=> d!20467 (isStrictlySorted!291 (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428)))))

(assert (=> d!20467 (= (insertStrictlySorted!59 (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428)) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_2!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) lt!38294)))

(declare-fun b!81964 () Bool)

(declare-fun c!13002 () Bool)

(assert (=> b!81964 (= c!13002 (and ((_ is Cons!1510) (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428))) (bvsgt (_1!1102 (h!2099 (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428)))) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(declare-fun e!53462 () List!1514)

(assert (=> b!81964 (= e!53462 e!53464)))

(declare-fun b!81965 () Bool)

(assert (=> b!81965 (= e!53462 call!7656)))

(declare-fun b!81966 () Bool)

(assert (=> b!81966 (= e!53463 call!7657)))

(declare-fun bm!7655 () Bool)

(assert (=> bm!7655 (= call!7656 call!7657)))

(declare-fun b!81967 () Bool)

(declare-fun res!42538 () Bool)

(assert (=> b!81967 (=> (not res!42538) (not e!53465))))

(assert (=> b!81967 (= res!42538 (containsKey!140 lt!38294 (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!81968 () Bool)

(assert (=> b!81968 (= e!53464 call!7658)))

(declare-fun c!13004 () Bool)

(declare-fun b!81969 () Bool)

(assert (=> b!81969 (= e!53461 (ite c!13004 (t!5172 (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428))) (ite c!13002 (Cons!1510 (h!2099 (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428))) (t!5172 (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428)))) Nil!1511)))))

(declare-fun b!81970 () Bool)

(assert (=> b!81970 (= e!53463 e!53462)))

(assert (=> b!81970 (= c!13004 (and ((_ is Cons!1510) (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428))) (= (_1!1102 (h!2099 (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428)))) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(declare-fun b!81971 () Bool)

(assert (=> b!81971 (= e!53461 (insertStrictlySorted!59 (t!5172 (toList!734 (ite c!12532 (ite c!12534 call!7448 call!7449) call!7428))) (_1!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_2!1102 (ite c!12532 (ite c!12534 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37084) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (= (and d!20467 c!13005) b!81966))

(assert (= (and d!20467 (not c!13005)) b!81970))

(assert (= (and b!81970 c!13004) b!81965))

(assert (= (and b!81970 (not c!13004)) b!81964))

(assert (= (and b!81964 c!13002) b!81968))

(assert (= (and b!81964 (not c!13002)) b!81962))

(assert (= (or b!81968 b!81962) bm!7654))

(assert (= (or b!81965 bm!7654) bm!7655))

(assert (= (or b!81966 bm!7655) bm!7653))

(assert (= (and bm!7653 c!13003) b!81971))

(assert (= (and bm!7653 (not c!13003)) b!81969))

(assert (= (and d!20467 res!42539) b!81967))

(assert (= (and b!81967 res!42538) b!81963))

(declare-fun m!84423 () Bool)

(assert (=> d!20467 m!84423))

(declare-fun m!84425 () Bool)

(assert (=> d!20467 m!84425))

(declare-fun m!84427 () Bool)

(assert (=> b!81971 m!84427))

(declare-fun m!84429 () Bool)

(assert (=> bm!7653 m!84429))

(declare-fun m!84431 () Bool)

(assert (=> b!81967 m!84431))

(declare-fun m!84433 () Bool)

(assert (=> b!81963 m!84433))

(assert (=> d!19697 d!20467))

(declare-fun d!20469 () Bool)

(declare-fun res!42540 () Bool)

(declare-fun e!53466 () Bool)

(assert (=> d!20469 (=> res!42540 e!53466)))

(assert (=> d!20469 (= res!42540 (or ((_ is Nil!1511) lt!37477) ((_ is Nil!1511) (t!5172 lt!37477))))))

(assert (=> d!20469 (= (isStrictlySorted!291 lt!37477) e!53466)))

(declare-fun b!81972 () Bool)

(declare-fun e!53467 () Bool)

(assert (=> b!81972 (= e!53466 e!53467)))

(declare-fun res!42541 () Bool)

(assert (=> b!81972 (=> (not res!42541) (not e!53467))))

(assert (=> b!81972 (= res!42541 (bvslt (_1!1102 (h!2099 lt!37477)) (_1!1102 (h!2099 (t!5172 lt!37477)))))))

(declare-fun b!81973 () Bool)

(assert (=> b!81973 (= e!53467 (isStrictlySorted!291 (t!5172 lt!37477)))))

(assert (= (and d!20469 (not res!42540)) b!81972))

(assert (= (and b!81972 res!42541) b!81973))

(declare-fun m!84435 () Bool)

(assert (=> b!81973 m!84435))

(assert (=> d!19669 d!20469))

(declare-fun d!20471 () Bool)

(declare-fun res!42542 () Bool)

(declare-fun e!53468 () Bool)

(assert (=> d!20471 (=> res!42542 e!53468)))

(assert (=> d!20471 (= res!42542 (or ((_ is Nil!1511) (toList!734 lt!37077)) ((_ is Nil!1511) (t!5172 (toList!734 lt!37077)))))))

(assert (=> d!20471 (= (isStrictlySorted!291 (toList!734 lt!37077)) e!53468)))

(declare-fun b!81974 () Bool)

(declare-fun e!53469 () Bool)

(assert (=> b!81974 (= e!53468 e!53469)))

(declare-fun res!42543 () Bool)

(assert (=> b!81974 (=> (not res!42543) (not e!53469))))

(assert (=> b!81974 (= res!42543 (bvslt (_1!1102 (h!2099 (toList!734 lt!37077))) (_1!1102 (h!2099 (t!5172 (toList!734 lt!37077))))))))

(declare-fun b!81975 () Bool)

(assert (=> b!81975 (= e!53469 (isStrictlySorted!291 (t!5172 (toList!734 lt!37077))))))

(assert (= (and d!20471 (not res!42542)) b!81974))

(assert (= (and b!81974 res!42543) b!81975))

(declare-fun m!84437 () Bool)

(assert (=> b!81975 m!84437))

(assert (=> d!19669 d!20471))

(declare-fun b!81979 () Bool)

(declare-fun e!53471 () Option!142)

(assert (=> b!81979 (= e!53471 None!140)))

(declare-fun b!81976 () Bool)

(declare-fun e!53470 () Option!142)

(assert (=> b!81976 (= e!53470 (Some!141 (_2!1102 (h!2099 (t!5172 (toList!734 lt!37350))))))))

(declare-fun b!81978 () Bool)

(assert (=> b!81978 (= e!53471 (getValueByKey!136 (t!5172 (t!5172 (toList!734 lt!37350))) (_1!1102 lt!37079)))))

(declare-fun d!20473 () Bool)

(declare-fun c!13006 () Bool)

(assert (=> d!20473 (= c!13006 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37350))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37350)))) (_1!1102 lt!37079))))))

(assert (=> d!20473 (= (getValueByKey!136 (t!5172 (toList!734 lt!37350)) (_1!1102 lt!37079)) e!53470)))

(declare-fun b!81977 () Bool)

(assert (=> b!81977 (= e!53470 e!53471)))

(declare-fun c!13007 () Bool)

(assert (=> b!81977 (= c!13007 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37350))) (not (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37350)))) (_1!1102 lt!37079)))))))

(assert (= (and d!20473 c!13006) b!81976))

(assert (= (and d!20473 (not c!13006)) b!81977))

(assert (= (and b!81977 c!13007) b!81978))

(assert (= (and b!81977 (not c!13007)) b!81979))

(declare-fun m!84439 () Bool)

(assert (=> b!81978 m!84439))

(assert (=> b!80622 d!20473))

(declare-fun d!20475 () Bool)

(declare-fun lt!38295 () Bool)

(assert (=> d!20475 (= lt!38295 (select (content!86 lt!37315) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun e!53472 () Bool)

(assert (=> d!20475 (= lt!38295 e!53472)))

(declare-fun res!42545 () Bool)

(assert (=> d!20475 (=> (not res!42545) (not e!53472))))

(assert (=> d!20475 (= res!42545 ((_ is Cons!1510) lt!37315))))

(assert (=> d!20475 (= (contains!745 lt!37315 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))) lt!38295)))

(declare-fun b!81980 () Bool)

(declare-fun e!53473 () Bool)

(assert (=> b!81980 (= e!53472 e!53473)))

(declare-fun res!42544 () Bool)

(assert (=> b!81980 (=> res!42544 e!53473)))

(assert (=> b!81980 (= res!42544 (= (h!2099 lt!37315) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun b!81981 () Bool)

(assert (=> b!81981 (= e!53473 (contains!745 (t!5172 lt!37315) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(assert (= (and d!20475 res!42545) b!81980))

(assert (= (and b!81980 (not res!42544)) b!81981))

(declare-fun m!84441 () Bool)

(assert (=> d!20475 m!84441))

(declare-fun m!84443 () Bool)

(assert (=> d!20475 m!84443))

(declare-fun m!84445 () Bool)

(assert (=> b!81981 m!84445))

(assert (=> b!80933 d!20475))

(declare-fun d!20477 () Bool)

(declare-fun res!42546 () Bool)

(declare-fun e!53474 () Bool)

(assert (=> d!20477 (=> res!42546 e!53474)))

(assert (=> d!20477 (= res!42546 (and ((_ is Cons!1510) (toList!734 lt!37350)) (= (_1!1102 (h!2099 (toList!734 lt!37350))) (_1!1102 lt!37079))))))

(assert (=> d!20477 (= (containsKey!140 (toList!734 lt!37350) (_1!1102 lt!37079)) e!53474)))

(declare-fun b!81982 () Bool)

(declare-fun e!53475 () Bool)

(assert (=> b!81982 (= e!53474 e!53475)))

(declare-fun res!42547 () Bool)

(assert (=> b!81982 (=> (not res!42547) (not e!53475))))

(assert (=> b!81982 (= res!42547 (and (or (not ((_ is Cons!1510) (toList!734 lt!37350))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37350))) (_1!1102 lt!37079))) ((_ is Cons!1510) (toList!734 lt!37350)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37350))) (_1!1102 lt!37079))))))

(declare-fun b!81983 () Bool)

(assert (=> b!81983 (= e!53475 (containsKey!140 (t!5172 (toList!734 lt!37350)) (_1!1102 lt!37079)))))

(assert (= (and d!20477 (not res!42546)) b!81982))

(assert (= (and b!81982 res!42547) b!81983))

(declare-fun m!84447 () Bool)

(assert (=> b!81983 m!84447))

(assert (=> d!19671 d!20477))

(declare-fun d!20479 () Bool)

(declare-fun res!42548 () Bool)

(declare-fun e!53476 () Bool)

(assert (=> d!20479 (=> res!42548 e!53476)))

(assert (=> d!20479 (= res!42548 (and ((_ is Cons!1510) (toList!734 lt!37342)) (= (_1!1102 (h!2099 (toList!734 lt!37342))) (_1!1102 lt!37082))))))

(assert (=> d!20479 (= (containsKey!140 (toList!734 lt!37342) (_1!1102 lt!37082)) e!53476)))

(declare-fun b!81984 () Bool)

(declare-fun e!53477 () Bool)

(assert (=> b!81984 (= e!53476 e!53477)))

(declare-fun res!42549 () Bool)

(assert (=> b!81984 (=> (not res!42549) (not e!53477))))

(assert (=> b!81984 (= res!42549 (and (or (not ((_ is Cons!1510) (toList!734 lt!37342))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37342))) (_1!1102 lt!37082))) ((_ is Cons!1510) (toList!734 lt!37342)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37342))) (_1!1102 lt!37082))))))

(declare-fun b!81985 () Bool)

(assert (=> b!81985 (= e!53477 (containsKey!140 (t!5172 (toList!734 lt!37342)) (_1!1102 lt!37082)))))

(assert (= (and d!20479 (not res!42548)) b!81984))

(assert (= (and b!81984 res!42549) b!81985))

(declare-fun m!84449 () Bool)

(assert (=> b!81985 m!84449))

(assert (=> d!19861 d!20479))

(declare-fun d!20481 () Bool)

(declare-fun res!42550 () Bool)

(declare-fun e!53478 () Bool)

(assert (=> d!20481 (=> res!42550 e!53478)))

(assert (=> d!20481 (= res!42550 (and ((_ is Cons!1510) (toList!734 lt!37312)) (= (_1!1102 (h!2099 (toList!734 lt!37312))) (_1!1102 lt!37079))))))

(assert (=> d!20481 (= (containsKey!140 (toList!734 lt!37312) (_1!1102 lt!37079)) e!53478)))

(declare-fun b!81986 () Bool)

(declare-fun e!53479 () Bool)

(assert (=> b!81986 (= e!53478 e!53479)))

(declare-fun res!42551 () Bool)

(assert (=> b!81986 (=> (not res!42551) (not e!53479))))

(assert (=> b!81986 (= res!42551 (and (or (not ((_ is Cons!1510) (toList!734 lt!37312))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37312))) (_1!1102 lt!37079))) ((_ is Cons!1510) (toList!734 lt!37312)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37312))) (_1!1102 lt!37079))))))

(declare-fun b!81987 () Bool)

(assert (=> b!81987 (= e!53479 (containsKey!140 (t!5172 (toList!734 lt!37312)) (_1!1102 lt!37079)))))

(assert (= (and d!20481 (not res!42550)) b!81986))

(assert (= (and b!81986 res!42551) b!81987))

(declare-fun m!84451 () Bool)

(assert (=> b!81987 m!84451))

(assert (=> d!19769 d!20481))

(assert (=> bm!7500 d!19805))

(declare-fun b!81988 () Bool)

(declare-fun lt!38302 () Unit!2327)

(declare-fun lt!38298 () Unit!2327)

(assert (=> b!81988 (= lt!38302 lt!38298)))

(declare-fun lt!38299 () ListLongMap!1437)

(declare-fun lt!38300 () (_ BitVec 64))

(declare-fun lt!38301 () V!3001)

(declare-fun lt!38297 () (_ BitVec 64))

(assert (=> b!81988 (not (contains!742 (+!104 lt!38299 (tuple2!2183 lt!38300 lt!38301)) lt!38297))))

(assert (=> b!81988 (= lt!38298 (addStillNotContains!30 lt!38299 lt!38300 lt!38301 lt!38297))))

(assert (=> b!81988 (= lt!38297 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81988 (= lt!38301 (get!1183 (select (arr!1889 (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81988 (= lt!38300 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7659 () ListLongMap!1437)

(assert (=> b!81988 (= lt!38299 call!7659)))

(declare-fun e!53486 () ListLongMap!1437)

(assert (=> b!81988 (= e!53486 (+!104 call!7659 (tuple2!2183 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) (get!1183 (select (arr!1889 (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81989 () Bool)

(declare-fun e!53481 () Bool)

(declare-fun e!53484 () Bool)

(assert (=> b!81989 (= e!53481 e!53484)))

(assert (=> b!81989 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun res!42554 () Bool)

(declare-fun lt!38296 () ListLongMap!1437)

(assert (=> b!81989 (= res!42554 (contains!742 lt!38296 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81989 (=> (not res!42554) (not e!53484))))

(declare-fun bm!7656 () Bool)

(assert (=> bm!7656 (= call!7659 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16)))))

(declare-fun b!81990 () Bool)

(declare-fun e!53483 () Bool)

(assert (=> b!81990 (= e!53483 (isEmpty!333 lt!38296))))

(declare-fun b!81991 () Bool)

(assert (=> b!81991 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> b!81991 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))))))))

(assert (=> b!81991 (= e!53484 (= (apply!80 lt!38296 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81992 () Bool)

(assert (=> b!81992 (= e!53486 call!7659)))

(declare-fun b!81993 () Bool)

(declare-fun e!53485 () Bool)

(assert (=> b!81993 (= e!53485 e!53481)))

(declare-fun c!13011 () Bool)

(declare-fun e!53480 () Bool)

(assert (=> b!81993 (= c!13011 e!53480)))

(declare-fun res!42553 () Bool)

(assert (=> b!81993 (=> (not res!42553) (not e!53480))))

(assert (=> b!81993 (= res!42553 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!81994 () Bool)

(declare-fun res!42555 () Bool)

(assert (=> b!81994 (=> (not res!42555) (not e!53485))))

(assert (=> b!81994 (= res!42555 (not (contains!742 lt!38296 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81995 () Bool)

(assert (=> b!81995 (= e!53481 e!53483)))

(declare-fun c!13010 () Bool)

(assert (=> b!81995 (= c!13010 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun d!20483 () Bool)

(assert (=> d!20483 e!53485))

(declare-fun res!42552 () Bool)

(assert (=> d!20483 (=> (not res!42552) (not e!53485))))

(assert (=> d!20483 (= res!42552 (not (contains!742 lt!38296 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53482 () ListLongMap!1437)

(assert (=> d!20483 (= lt!38296 e!53482)))

(declare-fun c!13008 () Bool)

(assert (=> d!20483 (= c!13008 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!20483 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!20483 (= (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38296)))

(declare-fun b!81996 () Bool)

(assert (=> b!81996 (= e!53480 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81996 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!81997 () Bool)

(assert (=> b!81997 (= e!53482 (ListLongMap!1438 Nil!1511))))

(declare-fun b!81998 () Bool)

(assert (=> b!81998 (= e!53482 e!53486)))

(declare-fun c!13009 () Bool)

(assert (=> b!81998 (= c!13009 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81999 () Bool)

(assert (=> b!81999 (= e!53483 (= lt!38296 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16)))) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16))))))

(assert (= (and d!20483 c!13008) b!81997))

(assert (= (and d!20483 (not c!13008)) b!81998))

(assert (= (and b!81998 c!13009) b!81988))

(assert (= (and b!81998 (not c!13009)) b!81992))

(assert (= (or b!81988 b!81992) bm!7656))

(assert (= (and d!20483 res!42552) b!81994))

(assert (= (and b!81994 res!42555) b!81993))

(assert (= (and b!81993 res!42553) b!81996))

(assert (= (and b!81993 c!13011) b!81989))

(assert (= (and b!81993 (not c!13011)) b!81995))

(assert (= (and b!81989 res!42554) b!81991))

(assert (= (and b!81995 c!13010) b!81999))

(assert (= (and b!81995 (not c!13010)) b!81990))

(declare-fun b_lambda!3637 () Bool)

(assert (=> (not b_lambda!3637) (not b!81988)))

(assert (=> b!81988 t!5186))

(declare-fun b_and!4989 () Bool)

(assert (= b_and!4985 (and (=> t!5186 result!2849) b_and!4989)))

(assert (=> b!81988 t!5188))

(declare-fun b_and!4991 () Bool)

(assert (= b_and!4987 (and (=> t!5188 result!2851) b_and!4991)))

(declare-fun b_lambda!3639 () Bool)

(assert (=> (not b_lambda!3639) (not b!81991)))

(assert (=> b!81991 t!5186))

(declare-fun b_and!4993 () Bool)

(assert (= b_and!4989 (and (=> t!5186 result!2849) b_and!4993)))

(assert (=> b!81991 t!5188))

(declare-fun b_and!4995 () Bool)

(assert (= b_and!4991 (and (=> t!5188 result!2851) b_and!4995)))

(declare-fun m!84453 () Bool)

(assert (=> b!81988 m!84453))

(declare-fun m!84455 () Bool)

(assert (=> b!81988 m!84455))

(assert (=> b!81988 m!82135))

(assert (=> b!81988 m!82137))

(assert (=> b!81988 m!82139))

(assert (=> b!81988 m!82135))

(declare-fun m!84457 () Bool)

(assert (=> b!81988 m!84457))

(assert (=> b!81988 m!82137))

(assert (=> b!81988 m!84453))

(declare-fun m!84459 () Bool)

(assert (=> b!81988 m!84459))

(assert (=> b!81988 m!82131))

(declare-fun m!84461 () Bool)

(assert (=> bm!7656 m!84461))

(assert (=> b!81996 m!82131))

(assert (=> b!81996 m!82131))

(assert (=> b!81996 m!82143))

(assert (=> b!81991 m!82131))

(declare-fun m!84463 () Bool)

(assert (=> b!81991 m!84463))

(assert (=> b!81991 m!82135))

(assert (=> b!81991 m!82137))

(assert (=> b!81991 m!82139))

(assert (=> b!81991 m!82135))

(assert (=> b!81991 m!82137))

(assert (=> b!81991 m!82131))

(assert (=> b!81989 m!82131))

(assert (=> b!81989 m!82131))

(declare-fun m!84465 () Bool)

(assert (=> b!81989 m!84465))

(assert (=> b!81999 m!84461))

(declare-fun m!84467 () Bool)

(assert (=> d!20483 m!84467))

(assert (=> d!20483 m!81973))

(declare-fun m!84469 () Bool)

(assert (=> b!81994 m!84469))

(declare-fun m!84471 () Bool)

(assert (=> b!81990 m!84471))

(assert (=> b!81998 m!82131))

(assert (=> b!81998 m!82131))

(assert (=> b!81998 m!82143))

(assert (=> bm!7508 d!20483))

(assert (=> d!19851 d!19613))

(declare-fun d!20485 () Bool)

(declare-fun res!42556 () Bool)

(declare-fun e!53487 () Bool)

(assert (=> d!20485 (=> res!42556 e!53487)))

(assert (=> d!20485 (= res!42556 (and ((_ is Cons!1510) lt!37300) (= (_1!1102 (h!2099 lt!37300)) (_1!1102 lt!37082))))))

(assert (=> d!20485 (= (containsKey!140 lt!37300 (_1!1102 lt!37082)) e!53487)))

(declare-fun b!82000 () Bool)

(declare-fun e!53488 () Bool)

(assert (=> b!82000 (= e!53487 e!53488)))

(declare-fun res!42557 () Bool)

(assert (=> b!82000 (=> (not res!42557) (not e!53488))))

(assert (=> b!82000 (= res!42557 (and (or (not ((_ is Cons!1510) lt!37300)) (bvsle (_1!1102 (h!2099 lt!37300)) (_1!1102 lt!37082))) ((_ is Cons!1510) lt!37300) (bvslt (_1!1102 (h!2099 lt!37300)) (_1!1102 lt!37082))))))

(declare-fun b!82001 () Bool)

(assert (=> b!82001 (= e!53488 (containsKey!140 (t!5172 lt!37300) (_1!1102 lt!37082)))))

(assert (= (and d!20485 (not res!42556)) b!82000))

(assert (= (and b!82000 res!42557) b!82001))

(declare-fun m!84473 () Bool)

(assert (=> b!82001 m!84473))

(assert (=> b!80503 d!20485))

(declare-fun b!82005 () Bool)

(declare-fun e!53490 () Option!142)

(assert (=> b!82005 (= e!53490 None!140)))

(declare-fun b!82002 () Bool)

(declare-fun e!53489 () Option!142)

(assert (=> b!82002 (= e!53489 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37642)))))))

(declare-fun b!82004 () Bool)

(assert (=> b!82004 (= e!53490 (getValueByKey!136 (t!5172 (toList!734 lt!37642)) (_1!1102 (tuple2!2183 lt!37335 lt!37336))))))

(declare-fun d!20487 () Bool)

(declare-fun c!13012 () Bool)

(assert (=> d!20487 (= c!13012 (and ((_ is Cons!1510) (toList!734 lt!37642)) (= (_1!1102 (h!2099 (toList!734 lt!37642))) (_1!1102 (tuple2!2183 lt!37335 lt!37336)))))))

(assert (=> d!20487 (= (getValueByKey!136 (toList!734 lt!37642) (_1!1102 (tuple2!2183 lt!37335 lt!37336))) e!53489)))

(declare-fun b!82003 () Bool)

(assert (=> b!82003 (= e!53489 e!53490)))

(declare-fun c!13013 () Bool)

(assert (=> b!82003 (= c!13013 (and ((_ is Cons!1510) (toList!734 lt!37642)) (not (= (_1!1102 (h!2099 (toList!734 lt!37642))) (_1!1102 (tuple2!2183 lt!37335 lt!37336))))))))

(assert (= (and d!20487 c!13012) b!82002))

(assert (= (and d!20487 (not c!13012)) b!82003))

(assert (= (and b!82003 c!13013) b!82004))

(assert (= (and b!82003 (not c!13013)) b!82005))

(declare-fun m!84475 () Bool)

(assert (=> b!82004 m!84475))

(assert (=> b!80740 d!20487))

(assert (=> d!19847 d!19767))

(declare-fun b!82022 () Bool)

(declare-fun e!53501 () Bool)

(declare-fun lt!38305 () SeekEntryResult!244)

(assert (=> b!82022 (= e!53501 ((_ is Undefined!244) lt!38305))))

(declare-fun c!13019 () Bool)

(declare-fun bm!7661 () Bool)

(declare-fun call!7665 () Bool)

(assert (=> bm!7661 (= call!7665 (inRange!0 (ite c!13019 (index!3111 lt!38305) (index!3114 lt!38305)) (mask!6297 newMap!16)))))

(declare-fun b!82023 () Bool)

(declare-fun res!42568 () Bool)

(declare-fun e!53499 () Bool)

(assert (=> b!82023 (=> (not res!42568) (not e!53499))))

(assert (=> b!82023 (= res!42568 call!7665)))

(assert (=> b!82023 (= e!53501 e!53499)))

(declare-fun b!82024 () Bool)

(declare-fun e!53502 () Bool)

(declare-fun e!53500 () Bool)

(assert (=> b!82024 (= e!53502 e!53500)))

(declare-fun res!42569 () Bool)

(assert (=> b!82024 (= res!42569 call!7665)))

(assert (=> b!82024 (=> (not res!42569) (not e!53500))))

(declare-fun d!20489 () Bool)

(assert (=> d!20489 e!53502))

(assert (=> d!20489 (= c!13019 ((_ is MissingZero!244) lt!38305))))

(assert (=> d!20489 (= lt!38305 (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(assert (=> d!20489 true))

(declare-fun _$34!827 () Unit!2327)

(assert (=> d!20489 (= (choose!486 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)) _$34!827)))

(declare-fun b!82025 () Bool)

(declare-fun call!7664 () Bool)

(assert (=> b!82025 (= e!53500 (not call!7664))))

(declare-fun b!82026 () Bool)

(assert (=> b!82026 (= e!53499 (not call!7664))))

(declare-fun b!82027 () Bool)

(declare-fun res!42567 () Bool)

(assert (=> b!82027 (= res!42567 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3111 lt!38305)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82027 (=> (not res!42567) (not e!53500))))

(declare-fun b!82028 () Bool)

(declare-fun res!42566 () Bool)

(assert (=> b!82028 (=> (not res!42566) (not e!53499))))

(assert (=> b!82028 (= res!42566 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3114 lt!38305)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7662 () Bool)

(assert (=> bm!7662 (= call!7664 (arrayContainsKey!0 (_keys!3955 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!82029 () Bool)

(assert (=> b!82029 (= e!53502 e!53501)))

(declare-fun c!13018 () Bool)

(assert (=> b!82029 (= c!13018 ((_ is MissingVacant!244) lt!38305))))

(assert (= (and d!20489 c!13019) b!82024))

(assert (= (and d!20489 (not c!13019)) b!82029))

(assert (= (and b!82024 res!42569) b!82027))

(assert (= (and b!82027 res!42567) b!82025))

(assert (= (and b!82029 c!13018) b!82023))

(assert (= (and b!82029 (not c!13018)) b!82022))

(assert (= (and b!82023 res!42568) b!82028))

(assert (= (and b!82028 res!42566) b!82026))

(assert (= (or b!82024 b!82023) bm!7661))

(assert (= (or b!82025 b!82026) bm!7662))

(declare-fun m!84477 () Bool)

(assert (=> bm!7661 m!84477))

(assert (=> d!20489 m!81295))

(assert (=> d!20489 m!81509))

(declare-fun m!84479 () Bool)

(assert (=> b!82027 m!84479))

(assert (=> bm!7662 m!81295))

(assert (=> bm!7662 m!81539))

(declare-fun m!84481 () Bool)

(assert (=> b!82028 m!84481))

(assert (=> d!19847 d!20489))

(assert (=> d!19847 d!19885))

(declare-fun d!20491 () Bool)

(assert (=> d!20491 (= ($colon$colon!69 e!52833 (ite c!12700 (h!2099 (toList!734 lt!37073)) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082)))) (Cons!1510 (ite c!12700 (h!2099 (toList!734 lt!37073)) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))) e!52833))))

(assert (=> bm!7541 d!20491))

(declare-fun d!20493 () Bool)

(assert (=> d!20493 (= (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37416)) (v!2606 (getValueByKey!136 (toList!734 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37416)))))

(assert (=> d!19635 d!20493))

(declare-fun b!82033 () Bool)

(declare-fun e!53504 () Option!142)

(assert (=> b!82033 (= e!53504 None!140)))

(declare-fun b!82030 () Bool)

(declare-fun e!53503 () Option!142)

(assert (=> b!82030 (= e!53503 (Some!141 (_2!1102 (h!2099 (toList!734 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))))

(declare-fun b!82032 () Bool)

(assert (=> b!82032 (= e!53504 (getValueByKey!136 (t!5172 (toList!734 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) lt!37416))))

(declare-fun d!20495 () Bool)

(declare-fun c!13020 () Bool)

(assert (=> d!20495 (= c!13020 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))) lt!37416)))))

(assert (=> d!20495 (= (getValueByKey!136 (toList!734 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37416) e!53503)))

(declare-fun b!82031 () Bool)

(assert (=> b!82031 (= e!53503 e!53504)))

(declare-fun c!13021 () Bool)

(assert (=> b!82031 (= c!13021 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (not (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))) lt!37416))))))

(assert (= (and d!20495 c!13020) b!82030))

(assert (= (and d!20495 (not c!13020)) b!82031))

(assert (= (and b!82031 c!13021) b!82032))

(assert (= (and b!82031 (not c!13021)) b!82033))

(declare-fun m!84483 () Bool)

(assert (=> b!82032 m!84483))

(assert (=> d!19635 d!20495))

(declare-fun b!82037 () Bool)

(declare-fun e!53506 () Option!142)

(assert (=> b!82037 (= e!53506 None!140)))

(declare-fun b!82034 () Bool)

(declare-fun e!53505 () Option!142)

(assert (=> b!82034 (= e!53505 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37496)))))))

(declare-fun b!82036 () Bool)

(assert (=> b!82036 (= e!53506 (getValueByKey!136 (t!5172 (toList!734 lt!37496)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20497 () Bool)

(declare-fun c!13022 () Bool)

(assert (=> d!20497 (= c!13022 (and ((_ is Cons!1510) (toList!734 lt!37496)) (= (_1!1102 (h!2099 (toList!734 lt!37496))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20497 (= (getValueByKey!136 (toList!734 lt!37496) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53505)))

(declare-fun b!82035 () Bool)

(assert (=> b!82035 (= e!53505 e!53506)))

(declare-fun c!13023 () Bool)

(assert (=> b!82035 (= c!13023 (and ((_ is Cons!1510) (toList!734 lt!37496)) (not (= (_1!1102 (h!2099 (toList!734 lt!37496))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20497 c!13022) b!82034))

(assert (= (and d!20497 (not c!13022)) b!82035))

(assert (= (and b!82035 c!13023) b!82036))

(assert (= (and b!82035 (not c!13023)) b!82037))

(declare-fun m!84485 () Bool)

(assert (=> b!82036 m!84485))

(assert (=> b!80612 d!20497))

(declare-fun lt!38306 () Bool)

(declare-fun d!20499 () Bool)

(assert (=> d!20499 (= lt!38306 (select (content!86 (toList!734 lt!37653)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!53507 () Bool)

(assert (=> d!20499 (= lt!38306 e!53507)))

(declare-fun res!42571 () Bool)

(assert (=> d!20499 (=> (not res!42571) (not e!53507))))

(assert (=> d!20499 (= res!42571 ((_ is Cons!1510) (toList!734 lt!37653)))))

(assert (=> d!20499 (= (contains!745 (toList!734 lt!37653) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!38306)))

(declare-fun b!82038 () Bool)

(declare-fun e!53508 () Bool)

(assert (=> b!82038 (= e!53507 e!53508)))

(declare-fun res!42570 () Bool)

(assert (=> b!82038 (=> res!42570 e!53508)))

(assert (=> b!82038 (= res!42570 (= (h!2099 (toList!734 lt!37653)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!82039 () Bool)

(assert (=> b!82039 (= e!53508 (contains!745 (t!5172 (toList!734 lt!37653)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!20499 res!42571) b!82038))

(assert (= (and b!82038 (not res!42570)) b!82039))

(declare-fun m!84487 () Bool)

(assert (=> d!20499 m!84487))

(declare-fun m!84489 () Bool)

(assert (=> d!20499 m!84489))

(declare-fun m!84491 () Bool)

(assert (=> b!82039 m!84491))

(assert (=> b!80750 d!20499))

(assert (=> b!80788 d!20075))

(declare-fun d!20501 () Bool)

(declare-fun e!53509 () Bool)

(assert (=> d!20501 e!53509))

(declare-fun res!42572 () Bool)

(assert (=> d!20501 (=> res!42572 e!53509)))

(declare-fun lt!38310 () Bool)

(assert (=> d!20501 (= res!42572 (not lt!38310))))

(declare-fun lt!38309 () Bool)

(assert (=> d!20501 (= lt!38310 lt!38309)))

(declare-fun lt!38308 () Unit!2327)

(declare-fun e!53510 () Unit!2327)

(assert (=> d!20501 (= lt!38308 e!53510)))

(declare-fun c!13024 () Bool)

(assert (=> d!20501 (= c!13024 lt!38309)))

(assert (=> d!20501 (= lt!38309 (containsKey!140 (toList!734 lt!37611) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20501 (= (contains!742 lt!37611 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38310)))

(declare-fun b!82040 () Bool)

(declare-fun lt!38307 () Unit!2327)

(assert (=> b!82040 (= e!53510 lt!38307)))

(assert (=> b!82040 (= lt!38307 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37611) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82040 (isDefined!90 (getValueByKey!136 (toList!734 lt!37611) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82041 () Bool)

(declare-fun Unit!2400 () Unit!2327)

(assert (=> b!82041 (= e!53510 Unit!2400)))

(declare-fun b!82042 () Bool)

(assert (=> b!82042 (= e!53509 (isDefined!90 (getValueByKey!136 (toList!734 lt!37611) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20501 c!13024) b!82040))

(assert (= (and d!20501 (not c!13024)) b!82041))

(assert (= (and d!20501 (not res!42572)) b!82042))

(declare-fun m!84493 () Bool)

(assert (=> d!20501 m!84493))

(declare-fun m!84495 () Bool)

(assert (=> b!82040 m!84495))

(declare-fun m!84497 () Bool)

(assert (=> b!82040 m!84497))

(assert (=> b!82040 m!84497))

(declare-fun m!84499 () Bool)

(assert (=> b!82040 m!84499))

(assert (=> b!82042 m!84497))

(assert (=> b!82042 m!84497))

(assert (=> b!82042 m!84499))

(assert (=> bm!7504 d!20501))

(declare-fun d!20503 () Bool)

(assert (=> d!20503 (= (get!1185 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2599 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80738 d!20503))

(assert (=> b!80700 d!20213))

(declare-fun d!20505 () Bool)

(declare-fun e!53511 () Bool)

(assert (=> d!20505 e!53511))

(declare-fun res!42574 () Bool)

(assert (=> d!20505 (=> (not res!42574) (not e!53511))))

(declare-fun lt!38314 () ListLongMap!1437)

(assert (=> d!20505 (= res!42574 (contains!742 lt!38314 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun lt!38313 () List!1514)

(assert (=> d!20505 (= lt!38314 (ListLongMap!1438 lt!38313))))

(declare-fun lt!38312 () Unit!2327)

(declare-fun lt!38311 () Unit!2327)

(assert (=> d!20505 (= lt!38312 lt!38311)))

(assert (=> d!20505 (= (getValueByKey!136 lt!38313 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!20505 (= lt!38311 (lemmaContainsTupThenGetReturnValue!56 lt!38313 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!20505 (= lt!38313 (insertStrictlySorted!59 (toList!734 (map!1177 newMap!16)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!20505 (= (+!104 (map!1177 newMap!16) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) lt!38314)))

(declare-fun b!82043 () Bool)

(declare-fun res!42573 () Bool)

(assert (=> b!82043 (=> (not res!42573) (not e!53511))))

(assert (=> b!82043 (= res!42573 (= (getValueByKey!136 (toList!734 lt!38314) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!82044 () Bool)

(assert (=> b!82044 (= e!53511 (contains!745 (toList!734 lt!38314) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (= (and d!20505 res!42574) b!82043))

(assert (= (and b!82043 res!42573) b!82044))

(declare-fun m!84501 () Bool)

(assert (=> d!20505 m!84501))

(declare-fun m!84503 () Bool)

(assert (=> d!20505 m!84503))

(declare-fun m!84505 () Bool)

(assert (=> d!20505 m!84505))

(declare-fun m!84507 () Bool)

(assert (=> d!20505 m!84507))

(declare-fun m!84509 () Bool)

(assert (=> b!82043 m!84509))

(declare-fun m!84511 () Bool)

(assert (=> b!82044 m!84511))

(assert (=> b!80700 d!20505))

(assert (=> b!80700 d!19617))

(declare-fun d!20507 () Bool)

(declare-fun res!42575 () Bool)

(declare-fun e!53512 () Bool)

(assert (=> d!20507 (=> res!42575 e!53512)))

(assert (=> d!20507 (= res!42575 (or ((_ is Nil!1511) lt!37794) ((_ is Nil!1511) (t!5172 lt!37794))))))

(assert (=> d!20507 (= (isStrictlySorted!291 lt!37794) e!53512)))

(declare-fun b!82045 () Bool)

(declare-fun e!53513 () Bool)

(assert (=> b!82045 (= e!53512 e!53513)))

(declare-fun res!42576 () Bool)

(assert (=> b!82045 (=> (not res!42576) (not e!53513))))

(assert (=> b!82045 (= res!42576 (bvslt (_1!1102 (h!2099 lt!37794)) (_1!1102 (h!2099 (t!5172 lt!37794)))))))

(declare-fun b!82046 () Bool)

(assert (=> b!82046 (= e!53513 (isStrictlySorted!291 (t!5172 lt!37794)))))

(assert (= (and d!20507 (not res!42575)) b!82045))

(assert (= (and b!82045 res!42576) b!82046))

(declare-fun m!84513 () Bool)

(assert (=> b!82046 m!84513))

(assert (=> d!19817 d!20507))

(assert (=> d!19817 d!20189))

(assert (=> b!80791 d!20075))

(declare-fun d!20509 () Bool)

(declare-fun e!53514 () Bool)

(assert (=> d!20509 e!53514))

(declare-fun res!42577 () Bool)

(assert (=> d!20509 (=> res!42577 e!53514)))

(declare-fun lt!38318 () Bool)

(assert (=> d!20509 (= res!42577 (not lt!38318))))

(declare-fun lt!38317 () Bool)

(assert (=> d!20509 (= lt!38318 lt!38317)))

(declare-fun lt!38316 () Unit!2327)

(declare-fun e!53515 () Unit!2327)

(assert (=> d!20509 (= lt!38316 e!53515)))

(declare-fun c!13025 () Bool)

(assert (=> d!20509 (= c!13025 lt!38317)))

(assert (=> d!20509 (= lt!38317 (containsKey!140 (toList!734 lt!37769) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20509 (= (contains!742 lt!37769 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38318)))

(declare-fun b!82047 () Bool)

(declare-fun lt!38315 () Unit!2327)

(assert (=> b!82047 (= e!53515 lt!38315)))

(assert (=> b!82047 (= lt!38315 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37769) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82047 (isDefined!90 (getValueByKey!136 (toList!734 lt!37769) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82048 () Bool)

(declare-fun Unit!2401 () Unit!2327)

(assert (=> b!82048 (= e!53515 Unit!2401)))

(declare-fun b!82049 () Bool)

(assert (=> b!82049 (= e!53514 (isDefined!90 (getValueByKey!136 (toList!734 lt!37769) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20509 c!13025) b!82047))

(assert (= (and d!20509 (not c!13025)) b!82048))

(assert (= (and d!20509 (not res!42577)) b!82049))

(declare-fun m!84515 () Bool)

(assert (=> d!20509 m!84515))

(declare-fun m!84517 () Bool)

(assert (=> b!82047 m!84517))

(declare-fun m!84519 () Bool)

(assert (=> b!82047 m!84519))

(assert (=> b!82047 m!84519))

(declare-fun m!84521 () Bool)

(assert (=> b!82047 m!84521))

(assert (=> b!82049 m!84519))

(assert (=> b!82049 m!84519))

(assert (=> b!82049 m!84521))

(assert (=> bm!7535 d!20509))

(declare-fun d!20511 () Bool)

(assert (=> d!20511 (= (isEmpty!334 (getValueByKey!136 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))) (not ((_ is Some!141) (getValueByKey!136 (toList!734 lt!37088) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))))

(assert (=> d!19831 d!20511))

(declare-fun d!20513 () Bool)

(assert (=> d!20513 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37405))))

(declare-fun lt!38319 () Unit!2327)

(assert (=> d!20513 (= lt!38319 (choose!485 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37405))))

(declare-fun e!53516 () Bool)

(assert (=> d!20513 e!53516))

(declare-fun res!42578 () Bool)

(assert (=> d!20513 (=> (not res!42578) (not e!53516))))

(assert (=> d!20513 (= res!42578 (isStrictlySorted!291 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20513 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37405) lt!38319)))

(declare-fun b!82050 () Bool)

(assert (=> b!82050 (= e!53516 (containsKey!140 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37405))))

(assert (= (and d!20513 res!42578) b!82050))

(assert (=> d!20513 m!81839))

(assert (=> d!20513 m!81839))

(assert (=> d!20513 m!81841))

(declare-fun m!84523 () Bool)

(assert (=> d!20513 m!84523))

(declare-fun m!84525 () Bool)

(assert (=> d!20513 m!84525))

(assert (=> b!82050 m!81835))

(assert (=> b!80540 d!20513))

(declare-fun d!20515 () Bool)

(assert (=> d!20515 (= (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37405)) (not (isEmpty!334 (getValueByKey!136 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37405))))))

(declare-fun bs!3470 () Bool)

(assert (= bs!3470 d!20515))

(assert (=> bs!3470 m!81839))

(declare-fun m!84527 () Bool)

(assert (=> bs!3470 m!84527))

(assert (=> b!80540 d!20515))

(declare-fun b!82054 () Bool)

(declare-fun e!53518 () Option!142)

(assert (=> b!82054 (= e!53518 None!140)))

(declare-fun e!53517 () Option!142)

(declare-fun b!82051 () Bool)

(assert (=> b!82051 (= e!53517 (Some!141 (_2!1102 (h!2099 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))))

(declare-fun b!82053 () Bool)

(assert (=> b!82053 (= e!53518 (getValueByKey!136 (t!5172 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) lt!37405))))

(declare-fun c!13026 () Bool)

(declare-fun d!20517 () Bool)

(assert (=> d!20517 (= c!13026 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))) lt!37405)))))

(assert (=> d!20517 (= (getValueByKey!136 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!37405) e!53517)))

(declare-fun b!82052 () Bool)

(assert (=> b!82052 (= e!53517 e!53518)))

(declare-fun c!13027 () Bool)

(assert (=> b!82052 (= c!13027 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))) (not (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37417 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))) lt!37405))))))

(assert (= (and d!20517 c!13026) b!82051))

(assert (= (and d!20517 (not c!13026)) b!82052))

(assert (= (and b!82052 c!13027) b!82053))

(assert (= (and b!82052 (not c!13027)) b!82054))

(declare-fun m!84529 () Bool)

(assert (=> b!82053 m!84529))

(assert (=> b!80540 d!20517))

(declare-fun d!20519 () Bool)

(assert (=> d!20519 (= (get!1187 (getValueByKey!136 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2606 (getValueByKey!136 (toList!734 lt!37406) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19823 d!20519))

(assert (=> d!19823 d!20327))

(declare-fun b!82058 () Bool)

(declare-fun e!53520 () Option!142)

(assert (=> b!82058 (= e!53520 None!140)))

(declare-fun b!82055 () Bool)

(declare-fun e!53519 () Option!142)

(assert (=> b!82055 (= e!53519 (Some!141 (_2!1102 (h!2099 (t!5172 (toList!734 lt!37301))))))))

(declare-fun b!82057 () Bool)

(assert (=> b!82057 (= e!53520 (getValueByKey!136 (t!5172 (t!5172 (toList!734 lt!37301))) (_1!1102 lt!37082)))))

(declare-fun d!20521 () Bool)

(declare-fun c!13028 () Bool)

(assert (=> d!20521 (= c!13028 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37301))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37301)))) (_1!1102 lt!37082))))))

(assert (=> d!20521 (= (getValueByKey!136 (t!5172 (toList!734 lt!37301)) (_1!1102 lt!37082)) e!53519)))

(declare-fun b!82056 () Bool)

(assert (=> b!82056 (= e!53519 e!53520)))

(declare-fun c!13029 () Bool)

(assert (=> b!82056 (= c!13029 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37301))) (not (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37301)))) (_1!1102 lt!37082)))))))

(assert (= (and d!20521 c!13028) b!82055))

(assert (= (and d!20521 (not c!13028)) b!82056))

(assert (= (and b!82056 c!13029) b!82057))

(assert (= (and b!82056 (not c!13029)) b!82058))

(declare-fun m!84531 () Bool)

(assert (=> b!82057 m!84531))

(assert (=> b!80900 d!20521))

(declare-fun d!20523 () Bool)

(declare-fun res!42579 () Bool)

(declare-fun e!53521 () Bool)

(assert (=> d!20523 (=> (not res!42579) (not e!53521))))

(assert (=> d!20523 (= res!42579 (simpleValid!56 (_2!1101 lt!37581)))))

(assert (=> d!20523 (= (valid!325 (_2!1101 lt!37581)) e!53521)))

(declare-fun b!82059 () Bool)

(declare-fun res!42580 () Bool)

(assert (=> b!82059 (=> (not res!42580) (not e!53521))))

(assert (=> b!82059 (= res!42580 (= (arrayCountValidKeys!0 (_keys!3955 (_2!1101 lt!37581)) #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37581)))) (_size!417 (_2!1101 lt!37581))))))

(declare-fun b!82060 () Bool)

(declare-fun res!42581 () Bool)

(assert (=> b!82060 (=> (not res!42581) (not e!53521))))

(assert (=> b!82060 (= res!42581 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3955 (_2!1101 lt!37581)) (mask!6297 (_2!1101 lt!37581))))))

(declare-fun b!82061 () Bool)

(assert (=> b!82061 (= e!53521 (arrayNoDuplicates!0 (_keys!3955 (_2!1101 lt!37581)) #b00000000000000000000000000000000 Nil!1512))))

(assert (= (and d!20523 res!42579) b!82059))

(assert (= (and b!82059 res!42580) b!82060))

(assert (= (and b!82060 res!42581) b!82061))

(declare-fun m!84533 () Bool)

(assert (=> d!20523 m!84533))

(declare-fun m!84535 () Bool)

(assert (=> b!82059 m!84535))

(declare-fun m!84537 () Bool)

(assert (=> b!82060 m!84537))

(declare-fun m!84539 () Bool)

(assert (=> b!82061 m!84539))

(assert (=> b!80687 d!20523))

(declare-fun d!20525 () Bool)

(declare-fun res!42582 () Bool)

(declare-fun e!53522 () Bool)

(assert (=> d!20525 (=> res!42582 e!53522)))

(assert (=> d!20525 (= res!42582 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37088))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37088)))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (=> d!20525 (= (containsKey!140 (t!5172 (toList!734 lt!37088)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) e!53522)))

(declare-fun b!82062 () Bool)

(declare-fun e!53523 () Bool)

(assert (=> b!82062 (= e!53522 e!53523)))

(declare-fun res!42583 () Bool)

(assert (=> b!82062 (=> (not res!42583) (not e!53523))))

(assert (=> b!82062 (= res!42583 (and (or (not ((_ is Cons!1510) (t!5172 (toList!734 lt!37088)))) (bvsle (_1!1102 (h!2099 (t!5172 (toList!734 lt!37088)))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))) ((_ is Cons!1510) (t!5172 (toList!734 lt!37088))) (bvslt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37088)))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(declare-fun b!82063 () Bool)

(assert (=> b!82063 (= e!53523 (containsKey!140 (t!5172 (t!5172 (toList!734 lt!37088))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (= (and d!20525 (not res!42582)) b!82062))

(assert (= (and b!82062 res!42583) b!82063))

(assert (=> b!82063 m!81295))

(declare-fun m!84541 () Bool)

(assert (=> b!82063 m!84541))

(assert (=> b!80817 d!20525))

(declare-fun d!20527 () Bool)

(declare-fun lt!38320 () Bool)

(assert (=> d!20527 (= lt!38320 (select (content!86 (toList!734 lt!37467)) (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun e!53524 () Bool)

(assert (=> d!20527 (= lt!38320 e!53524)))

(declare-fun res!42585 () Bool)

(assert (=> d!20527 (=> (not res!42585) (not e!53524))))

(assert (=> d!20527 (= res!42585 ((_ is Cons!1510) (toList!734 lt!37467)))))

(assert (=> d!20527 (= (contains!745 (toList!734 lt!37467) (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!38320)))

(declare-fun b!82064 () Bool)

(declare-fun e!53525 () Bool)

(assert (=> b!82064 (= e!53524 e!53525)))

(declare-fun res!42584 () Bool)

(assert (=> b!82064 (=> res!42584 e!53525)))

(assert (=> b!82064 (= res!42584 (= (h!2099 (toList!734 lt!37467)) (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!82065 () Bool)

(assert (=> b!82065 (= e!53525 (contains!745 (t!5172 (toList!734 lt!37467)) (tuple2!2183 lt!37415 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!20527 res!42585) b!82064))

(assert (= (and b!82064 (not res!42584)) b!82065))

(declare-fun m!84543 () Bool)

(assert (=> d!20527 m!84543))

(declare-fun m!84545 () Bool)

(assert (=> d!20527 m!84545))

(declare-fun m!84547 () Bool)

(assert (=> b!82065 m!84547))

(assert (=> b!80552 d!20527))

(declare-fun d!20529 () Bool)

(declare-fun e!53526 () Bool)

(assert (=> d!20529 e!53526))

(declare-fun res!42586 () Bool)

(assert (=> d!20529 (=> res!42586 e!53526)))

(declare-fun lt!38324 () Bool)

(assert (=> d!20529 (= res!42586 (not lt!38324))))

(declare-fun lt!38323 () Bool)

(assert (=> d!20529 (= lt!38324 lt!38323)))

(declare-fun lt!38322 () Unit!2327)

(declare-fun e!53527 () Unit!2327)

(assert (=> d!20529 (= lt!38322 e!53527)))

(declare-fun c!13030 () Bool)

(assert (=> d!20529 (= c!13030 lt!38323)))

(assert (=> d!20529 (= lt!38323 (containsKey!140 (toList!734 lt!37751) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!20529 (= (contains!742 lt!37751 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38324)))

(declare-fun b!82066 () Bool)

(declare-fun lt!38321 () Unit!2327)

(assert (=> b!82066 (= e!53527 lt!38321)))

(assert (=> b!82066 (= lt!38321 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37751) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> b!82066 (isDefined!90 (getValueByKey!136 (toList!734 lt!37751) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!82067 () Bool)

(declare-fun Unit!2402 () Unit!2327)

(assert (=> b!82067 (= e!53527 Unit!2402)))

(declare-fun b!82068 () Bool)

(assert (=> b!82068 (= e!53526 (isDefined!90 (getValueByKey!136 (toList!734 lt!37751) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20529 c!13030) b!82066))

(assert (= (and d!20529 (not c!13030)) b!82067))

(assert (= (and d!20529 (not res!42586)) b!82068))

(declare-fun m!84549 () Bool)

(assert (=> d!20529 m!84549))

(declare-fun m!84551 () Bool)

(assert (=> b!82066 m!84551))

(assert (=> b!82066 m!82533))

(assert (=> b!82066 m!82533))

(declare-fun m!84553 () Bool)

(assert (=> b!82066 m!84553))

(assert (=> b!82068 m!82533))

(assert (=> b!82068 m!82533))

(assert (=> b!82068 m!84553))

(assert (=> d!19791 d!20529))

(declare-fun b!82072 () Bool)

(declare-fun e!53529 () Option!142)

(assert (=> b!82072 (= e!53529 None!140)))

(declare-fun b!82069 () Bool)

(declare-fun e!53528 () Option!142)

(assert (=> b!82069 (= e!53528 (Some!141 (_2!1102 (h!2099 lt!37750))))))

(declare-fun b!82071 () Bool)

(assert (=> b!82071 (= e!53529 (getValueByKey!136 (t!5172 lt!37750) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20531 () Bool)

(declare-fun c!13031 () Bool)

(assert (=> d!20531 (= c!13031 (and ((_ is Cons!1510) lt!37750) (= (_1!1102 (h!2099 lt!37750)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20531 (= (getValueByKey!136 lt!37750 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53528)))

(declare-fun b!82070 () Bool)

(assert (=> b!82070 (= e!53528 e!53529)))

(declare-fun c!13032 () Bool)

(assert (=> b!82070 (= c!13032 (and ((_ is Cons!1510) lt!37750) (not (= (_1!1102 (h!2099 lt!37750)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20531 c!13031) b!82069))

(assert (= (and d!20531 (not c!13031)) b!82070))

(assert (= (and b!82070 c!13032) b!82071))

(assert (= (and b!82070 (not c!13032)) b!82072))

(declare-fun m!84555 () Bool)

(assert (=> b!82071 m!84555))

(assert (=> d!19791 d!20531))

(declare-fun d!20533 () Bool)

(assert (=> d!20533 (= (getValueByKey!136 lt!37750 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!38325 () Unit!2327)

(assert (=> d!20533 (= lt!38325 (choose!477 lt!37750 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun e!53530 () Bool)

(assert (=> d!20533 e!53530))

(declare-fun res!42587 () Bool)

(assert (=> d!20533 (=> (not res!42587) (not e!53530))))

(assert (=> d!20533 (= res!42587 (isStrictlySorted!291 lt!37750))))

(assert (=> d!20533 (= (lemmaContainsTupThenGetReturnValue!56 lt!37750 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38325)))

(declare-fun b!82073 () Bool)

(declare-fun res!42588 () Bool)

(assert (=> b!82073 (=> (not res!42588) (not e!53530))))

(assert (=> b!82073 (= res!42588 (containsKey!140 lt!37750 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!82074 () Bool)

(assert (=> b!82074 (= e!53530 (contains!745 lt!37750 (tuple2!2183 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20533 res!42587) b!82073))

(assert (= (and b!82073 res!42588) b!82074))

(assert (=> d!20533 m!82527))

(declare-fun m!84557 () Bool)

(assert (=> d!20533 m!84557))

(declare-fun m!84559 () Bool)

(assert (=> d!20533 m!84559))

(declare-fun m!84561 () Bool)

(assert (=> b!82073 m!84561))

(declare-fun m!84563 () Bool)

(assert (=> b!82074 m!84563))

(assert (=> d!19791 d!20533))

(declare-fun b!82075 () Bool)

(declare-fun e!53534 () List!1514)

(declare-fun call!7668 () List!1514)

(assert (=> b!82075 (= e!53534 call!7668)))

(declare-fun e!53531 () List!1514)

(declare-fun bm!7663 () Bool)

(declare-fun c!13036 () Bool)

(declare-fun call!7667 () List!1514)

(assert (=> bm!7663 (= call!7667 ($colon$colon!69 e!53531 (ite c!13036 (h!2099 (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (tuple2!2183 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun c!13034 () Bool)

(assert (=> bm!7663 (= c!13034 c!13036)))

(declare-fun b!82076 () Bool)

(declare-fun e!53535 () Bool)

(declare-fun lt!38326 () List!1514)

(assert (=> b!82076 (= e!53535 (contains!745 lt!38326 (tuple2!2183 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun bm!7664 () Bool)

(declare-fun call!7666 () List!1514)

(assert (=> bm!7664 (= call!7668 call!7666)))

(declare-fun d!20535 () Bool)

(assert (=> d!20535 e!53535))

(declare-fun res!42590 () Bool)

(assert (=> d!20535 (=> (not res!42590) (not e!53535))))

(assert (=> d!20535 (= res!42590 (isStrictlySorted!291 lt!38326))))

(declare-fun e!53533 () List!1514)

(assert (=> d!20535 (= lt!38326 e!53533)))

(assert (=> d!20535 (= c!13036 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (bvslt (_1!1102 (h!2099 (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20535 (isStrictlySorted!291 (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!20535 (= (insertStrictlySorted!59 (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38326)))

(declare-fun b!82077 () Bool)

(declare-fun c!13033 () Bool)

(assert (=> b!82077 (= c!13033 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (bvsgt (_1!1102 (h!2099 (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun e!53532 () List!1514)

(assert (=> b!82077 (= e!53532 e!53534)))

(declare-fun b!82078 () Bool)

(assert (=> b!82078 (= e!53532 call!7666)))

(declare-fun b!82079 () Bool)

(assert (=> b!82079 (= e!53533 call!7667)))

(declare-fun bm!7665 () Bool)

(assert (=> bm!7665 (= call!7666 call!7667)))

(declare-fun b!82080 () Bool)

(declare-fun res!42589 () Bool)

(assert (=> b!82080 (=> (not res!42589) (not e!53535))))

(assert (=> b!82080 (= res!42589 (containsKey!140 lt!38326 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!82081 () Bool)

(assert (=> b!82081 (= e!53534 call!7668)))

(declare-fun b!82082 () Bool)

(declare-fun c!13035 () Bool)

(assert (=> b!82082 (= e!53531 (ite c!13035 (t!5172 (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (ite c!13033 (Cons!1510 (h!2099 (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (t!5172 (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))) Nil!1511)))))

(declare-fun b!82083 () Bool)

(assert (=> b!82083 (= e!53533 e!53532)))

(assert (=> b!82083 (= c!13035 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!82084 () Bool)

(assert (=> b!82084 (= e!53531 (insertStrictlySorted!59 (t!5172 (toList!734 (+!104 lt!37071 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (= (and d!20535 c!13036) b!82079))

(assert (= (and d!20535 (not c!13036)) b!82083))

(assert (= (and b!82083 c!13035) b!82078))

(assert (= (and b!82083 (not c!13035)) b!82077))

(assert (= (and b!82077 c!13033) b!82081))

(assert (= (and b!82077 (not c!13033)) b!82075))

(assert (= (or b!82081 b!82075) bm!7664))

(assert (= (or b!82078 bm!7664) bm!7665))

(assert (= (or b!82079 bm!7665) bm!7663))

(assert (= (and bm!7663 c!13034) b!82084))

(assert (= (and bm!7663 (not c!13034)) b!82082))

(assert (= (and d!20535 res!42590) b!82080))

(assert (= (and b!82080 res!42589) b!82076))

(declare-fun m!84565 () Bool)

(assert (=> d!20535 m!84565))

(declare-fun m!84567 () Bool)

(assert (=> d!20535 m!84567))

(declare-fun m!84569 () Bool)

(assert (=> b!82084 m!84569))

(declare-fun m!84571 () Bool)

(assert (=> bm!7663 m!84571))

(declare-fun m!84573 () Bool)

(assert (=> b!82080 m!84573))

(declare-fun m!84575 () Bool)

(assert (=> b!82076 m!84575))

(assert (=> d!19791 d!20535))

(declare-fun b!82085 () Bool)

(declare-fun e!53539 () Bool)

(assert (=> b!82085 (= e!53539 (contains!746 Nil!1512 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000)))))

(declare-fun d!20537 () Bool)

(declare-fun res!42591 () Bool)

(declare-fun e!53536 () Bool)

(assert (=> d!20537 (=> res!42591 e!53536)))

(assert (=> d!20537 (= res!42591 (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37268)))))))

(assert (=> d!20537 (= (arrayNoDuplicates!0 (_keys!3955 (_2!1101 lt!37268)) #b00000000000000000000000000000000 Nil!1512) e!53536)))

(declare-fun b!82086 () Bool)

(declare-fun e!53538 () Bool)

(declare-fun call!7669 () Bool)

(assert (=> b!82086 (= e!53538 call!7669)))

(declare-fun b!82087 () Bool)

(declare-fun e!53537 () Bool)

(assert (=> b!82087 (= e!53537 e!53538)))

(declare-fun c!13037 () Bool)

(assert (=> b!82087 (= c!13037 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000)))))

(declare-fun b!82088 () Bool)

(assert (=> b!82088 (= e!53536 e!53537)))

(declare-fun res!42593 () Bool)

(assert (=> b!82088 (=> (not res!42593) (not e!53537))))

(assert (=> b!82088 (= res!42593 (not e!53539))))

(declare-fun res!42592 () Bool)

(assert (=> b!82088 (=> (not res!42592) (not e!53539))))

(assert (=> b!82088 (= res!42592 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000)))))

(declare-fun bm!7666 () Bool)

(assert (=> bm!7666 (= call!7669 (arrayNoDuplicates!0 (_keys!3955 (_2!1101 lt!37268)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13037 (Cons!1511 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000) Nil!1512) Nil!1512)))))

(declare-fun b!82089 () Bool)

(assert (=> b!82089 (= e!53538 call!7669)))

(assert (= (and d!20537 (not res!42591)) b!82088))

(assert (= (and b!82088 res!42592) b!82085))

(assert (= (and b!82088 res!42593) b!82087))

(assert (= (and b!82087 c!13037) b!82086))

(assert (= (and b!82087 (not c!13037)) b!82089))

(assert (= (or b!82086 b!82089) bm!7666))

(assert (=> b!82085 m!84123))

(assert (=> b!82085 m!84123))

(declare-fun m!84577 () Bool)

(assert (=> b!82085 m!84577))

(assert (=> b!82087 m!84123))

(assert (=> b!82087 m!84123))

(assert (=> b!82087 m!84125))

(assert (=> b!82088 m!84123))

(assert (=> b!82088 m!84123))

(assert (=> b!82088 m!84125))

(assert (=> bm!7666 m!84123))

(declare-fun m!84579 () Bool)

(assert (=> bm!7666 m!84579))

(assert (=> b!80595 d!20537))

(assert (=> b!80839 d!20325))

(assert (=> b!80839 d!20327))

(assert (=> b!80627 d!20439))

(declare-fun b!82090 () Bool)

(declare-fun e!53540 () Bool)

(declare-fun call!7670 () Bool)

(assert (=> b!82090 (= e!53540 call!7670)))

(declare-fun b!82091 () Bool)

(declare-fun e!53541 () Bool)

(assert (=> b!82091 (= e!53541 call!7670)))

(declare-fun b!82092 () Bool)

(declare-fun e!53542 () Bool)

(assert (=> b!82092 (= e!53542 e!53541)))

(declare-fun c!13038 () Bool)

(assert (=> b!82092 (= c!13038 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!82093 () Bool)

(assert (=> b!82093 (= e!53541 e!53540)))

(declare-fun lt!38328 () (_ BitVec 64))

(assert (=> b!82093 (= lt!38328 (select (arr!1888 (_keys!3955 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!38329 () Unit!2327)

(assert (=> b!82093 (= lt!38329 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3955 newMap!16) lt!38328 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!82093 (arrayContainsKey!0 (_keys!3955 newMap!16) lt!38328 #b00000000000000000000000000000000)))

(declare-fun lt!38327 () Unit!2327)

(assert (=> b!82093 (= lt!38327 lt!38329)))

(declare-fun res!42595 () Bool)

(assert (=> b!82093 (= res!42595 (= (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3955 newMap!16) (mask!6297 newMap!16)) (Found!244 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!82093 (=> (not res!42595) (not e!53540))))

(declare-fun bm!7667 () Bool)

(assert (=> bm!7667 (= call!7670 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(declare-fun d!20539 () Bool)

(declare-fun res!42594 () Bool)

(assert (=> d!20539 (=> res!42594 e!53542)))

(assert (=> d!20539 (= res!42594 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!20539 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3955 newMap!16) (mask!6297 newMap!16)) e!53542)))

(assert (= (and d!20539 (not res!42594)) b!82092))

(assert (= (and b!82092 c!13038) b!82093))

(assert (= (and b!82092 (not c!13038)) b!82091))

(assert (= (and b!82093 res!42595) b!82090))

(assert (= (or b!82090 b!82091) bm!7667))

(assert (=> b!82092 m!83195))

(assert (=> b!82092 m!83195))

(assert (=> b!82092 m!83197))

(assert (=> b!82093 m!83195))

(declare-fun m!84581 () Bool)

(assert (=> b!82093 m!84581))

(declare-fun m!84583 () Bool)

(assert (=> b!82093 m!84583))

(assert (=> b!82093 m!83195))

(declare-fun m!84585 () Bool)

(assert (=> b!82093 m!84585))

(declare-fun m!84587 () Bool)

(assert (=> bm!7667 m!84587))

(assert (=> bm!7555 d!20539))

(assert (=> bm!7519 d!20009))

(declare-fun d!20541 () Bool)

(declare-fun lt!38330 () Bool)

(assert (=> d!20541 (= lt!38330 (select (content!86 lt!37477) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(declare-fun e!53543 () Bool)

(assert (=> d!20541 (= lt!38330 e!53543)))

(declare-fun res!42597 () Bool)

(assert (=> d!20541 (=> (not res!42597) (not e!53543))))

(assert (=> d!20541 (= res!42597 ((_ is Cons!1510) lt!37477))))

(assert (=> d!20541 (= (contains!745 lt!37477 (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))) lt!38330)))

(declare-fun b!82094 () Bool)

(declare-fun e!53544 () Bool)

(assert (=> b!82094 (= e!53543 e!53544)))

(declare-fun res!42596 () Bool)

(assert (=> b!82094 (=> res!42596 e!53544)))

(assert (=> b!82094 (= res!42596 (= (h!2099 lt!37477) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(declare-fun b!82095 () Bool)

(assert (=> b!82095 (= e!53544 (contains!745 (t!5172 lt!37477) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(assert (= (and d!20541 res!42597) b!82094))

(assert (= (and b!82094 (not res!42596)) b!82095))

(declare-fun m!84589 () Bool)

(assert (=> d!20541 m!84589))

(declare-fun m!84591 () Bool)

(assert (=> d!20541 m!84591))

(declare-fun m!84593 () Bool)

(assert (=> b!82095 m!84593))

(assert (=> b!80565 d!20541))

(declare-fun d!20543 () Bool)

(declare-fun e!53545 () Bool)

(assert (=> d!20543 e!53545))

(declare-fun res!42598 () Bool)

(assert (=> d!20543 (=> res!42598 e!53545)))

(declare-fun lt!38334 () Bool)

(assert (=> d!20543 (= res!42598 (not lt!38334))))

(declare-fun lt!38333 () Bool)

(assert (=> d!20543 (= lt!38334 lt!38333)))

(declare-fun lt!38332 () Unit!2327)

(declare-fun e!53546 () Unit!2327)

(assert (=> d!20543 (= lt!38332 e!53546)))

(declare-fun c!13039 () Bool)

(assert (=> d!20543 (= c!13039 lt!38333)))

(assert (=> d!20543 (= lt!38333 (containsKey!140 (toList!734 lt!37682) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20543 (= (contains!742 lt!37682 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38334)))

(declare-fun b!82096 () Bool)

(declare-fun lt!38331 () Unit!2327)

(assert (=> b!82096 (= e!53546 lt!38331)))

(assert (=> b!82096 (= lt!38331 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37682) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82096 (isDefined!90 (getValueByKey!136 (toList!734 lt!37682) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82097 () Bool)

(declare-fun Unit!2403 () Unit!2327)

(assert (=> b!82097 (= e!53546 Unit!2403)))

(declare-fun b!82098 () Bool)

(assert (=> b!82098 (= e!53545 (isDefined!90 (getValueByKey!136 (toList!734 lt!37682) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20543 c!13039) b!82096))

(assert (= (and d!20543 (not c!13039)) b!82097))

(assert (= (and d!20543 (not res!42598)) b!82098))

(declare-fun m!84595 () Bool)

(assert (=> d!20543 m!84595))

(declare-fun m!84597 () Bool)

(assert (=> b!82096 m!84597))

(declare-fun m!84599 () Bool)

(assert (=> b!82096 m!84599))

(assert (=> b!82096 m!84599))

(declare-fun m!84601 () Bool)

(assert (=> b!82096 m!84601))

(assert (=> b!82098 m!84599))

(assert (=> b!82098 m!84599))

(assert (=> b!82098 m!84601))

(assert (=> bm!7523 d!20543))

(assert (=> d!19785 d!19789))

(assert (=> d!19785 d!19781))

(assert (=> d!19785 d!19783))

(assert (=> d!19785 d!19787))

(declare-fun d!20545 () Bool)

(assert (=> d!20545 (= (apply!80 lt!37769 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1187 (getValueByKey!136 (toList!734 lt!37769) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3471 () Bool)

(assert (= bs!3471 d!20545))

(assert (=> bs!3471 m!84519))

(assert (=> bs!3471 m!84519))

(declare-fun m!84603 () Bool)

(assert (=> bs!3471 m!84603))

(assert (=> b!80912 d!20545))

(declare-fun d!20547 () Bool)

(declare-fun e!53547 () Bool)

(assert (=> d!20547 e!53547))

(declare-fun res!42599 () Bool)

(assert (=> d!20547 (=> res!42599 e!53547)))

(declare-fun lt!38338 () Bool)

(assert (=> d!20547 (= res!42599 (not lt!38338))))

(declare-fun lt!38337 () Bool)

(assert (=> d!20547 (= lt!38338 lt!38337)))

(declare-fun lt!38336 () Unit!2327)

(declare-fun e!53548 () Unit!2327)

(assert (=> d!20547 (= lt!38336 e!53548)))

(declare-fun c!13040 () Bool)

(assert (=> d!20547 (= c!13040 lt!38337)))

(assert (=> d!20547 (= lt!38337 (containsKey!140 (toList!734 lt!37653) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20547 (= (contains!742 lt!37653 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!38338)))

(declare-fun b!82099 () Bool)

(declare-fun lt!38335 () Unit!2327)

(assert (=> b!82099 (= e!53548 lt!38335)))

(assert (=> b!82099 (= lt!38335 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37653) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!82099 (isDefined!90 (getValueByKey!136 (toList!734 lt!37653) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!82100 () Bool)

(declare-fun Unit!2404 () Unit!2327)

(assert (=> b!82100 (= e!53548 Unit!2404)))

(declare-fun b!82101 () Bool)

(assert (=> b!82101 (= e!53547 (isDefined!90 (getValueByKey!136 (toList!734 lt!37653) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!20547 c!13040) b!82099))

(assert (= (and d!20547 (not c!13040)) b!82100))

(assert (= (and d!20547 (not res!42599)) b!82101))

(declare-fun m!84605 () Bool)

(assert (=> d!20547 m!84605))

(declare-fun m!84607 () Bool)

(assert (=> b!82099 m!84607))

(assert (=> b!82099 m!82259))

(assert (=> b!82099 m!82259))

(declare-fun m!84609 () Bool)

(assert (=> b!82099 m!84609))

(assert (=> b!82101 m!82259))

(assert (=> b!82101 m!82259))

(assert (=> b!82101 m!84609))

(assert (=> d!19737 d!20547))

(declare-fun b!82105 () Bool)

(declare-fun e!53550 () Option!142)

(assert (=> b!82105 (= e!53550 None!140)))

(declare-fun b!82102 () Bool)

(declare-fun e!53549 () Option!142)

(assert (=> b!82102 (= e!53549 (Some!141 (_2!1102 (h!2099 lt!37652))))))

(declare-fun b!82104 () Bool)

(assert (=> b!82104 (= e!53550 (getValueByKey!136 (t!5172 lt!37652) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!13041 () Bool)

(declare-fun d!20549 () Bool)

(assert (=> d!20549 (= c!13041 (and ((_ is Cons!1510) lt!37652) (= (_1!1102 (h!2099 lt!37652)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!20549 (= (getValueByKey!136 lt!37652 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!53549)))

(declare-fun b!82103 () Bool)

(assert (=> b!82103 (= e!53549 e!53550)))

(declare-fun c!13042 () Bool)

(assert (=> b!82103 (= c!13042 (and ((_ is Cons!1510) lt!37652) (not (= (_1!1102 (h!2099 lt!37652)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!20549 c!13041) b!82102))

(assert (= (and d!20549 (not c!13041)) b!82103))

(assert (= (and b!82103 c!13042) b!82104))

(assert (= (and b!82103 (not c!13042)) b!82105))

(declare-fun m!84611 () Bool)

(assert (=> b!82104 m!84611))

(assert (=> d!19737 d!20549))

(declare-fun d!20551 () Bool)

(assert (=> d!20551 (= (getValueByKey!136 lt!37652 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!38339 () Unit!2327)

(assert (=> d!20551 (= lt!38339 (choose!477 lt!37652 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!53551 () Bool)

(assert (=> d!20551 e!53551))

(declare-fun res!42600 () Bool)

(assert (=> d!20551 (=> (not res!42600) (not e!53551))))

(assert (=> d!20551 (= res!42600 (isStrictlySorted!291 lt!37652))))

(assert (=> d!20551 (= (lemmaContainsTupThenGetReturnValue!56 lt!37652 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!38339)))

(declare-fun b!82106 () Bool)

(declare-fun res!42601 () Bool)

(assert (=> b!82106 (=> (not res!42601) (not e!53551))))

(assert (=> b!82106 (= res!42601 (containsKey!140 lt!37652 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!82107 () Bool)

(assert (=> b!82107 (= e!53551 (contains!745 lt!37652 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!20551 res!42600) b!82106))

(assert (= (and b!82106 res!42601) b!82107))

(assert (=> d!20551 m!82253))

(declare-fun m!84613 () Bool)

(assert (=> d!20551 m!84613))

(declare-fun m!84615 () Bool)

(assert (=> d!20551 m!84615))

(declare-fun m!84617 () Bool)

(assert (=> b!82106 m!84617))

(declare-fun m!84619 () Bool)

(assert (=> b!82107 m!84619))

(assert (=> d!19737 d!20551))

(declare-fun b!82108 () Bool)

(declare-fun e!53555 () List!1514)

(declare-fun call!7673 () List!1514)

(assert (=> b!82108 (= e!53555 call!7673)))

(declare-fun call!7672 () List!1514)

(declare-fun c!13046 () Bool)

(declare-fun bm!7668 () Bool)

(declare-fun e!53552 () List!1514)

(assert (=> bm!7668 (= call!7672 ($colon$colon!69 e!53552 (ite c!13046 (h!2099 (toList!734 call!7452)) (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!13044 () Bool)

(assert (=> bm!7668 (= c!13044 c!13046)))

(declare-fun lt!38340 () List!1514)

(declare-fun e!53556 () Bool)

(declare-fun b!82109 () Bool)

(assert (=> b!82109 (= e!53556 (contains!745 lt!38340 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!7669 () Bool)

(declare-fun call!7671 () List!1514)

(assert (=> bm!7669 (= call!7673 call!7671)))

(declare-fun d!20553 () Bool)

(assert (=> d!20553 e!53556))

(declare-fun res!42603 () Bool)

(assert (=> d!20553 (=> (not res!42603) (not e!53556))))

(assert (=> d!20553 (= res!42603 (isStrictlySorted!291 lt!38340))))

(declare-fun e!53554 () List!1514)

(assert (=> d!20553 (= lt!38340 e!53554)))

(assert (=> d!20553 (= c!13046 (and ((_ is Cons!1510) (toList!734 call!7452)) (bvslt (_1!1102 (h!2099 (toList!734 call!7452))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!20553 (isStrictlySorted!291 (toList!734 call!7452))))

(assert (=> d!20553 (= (insertStrictlySorted!59 (toList!734 call!7452) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!38340)))

(declare-fun c!13043 () Bool)

(declare-fun b!82110 () Bool)

(assert (=> b!82110 (= c!13043 (and ((_ is Cons!1510) (toList!734 call!7452)) (bvsgt (_1!1102 (h!2099 (toList!734 call!7452))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!53553 () List!1514)

(assert (=> b!82110 (= e!53553 e!53555)))

(declare-fun b!82111 () Bool)

(assert (=> b!82111 (= e!53553 call!7671)))

(declare-fun b!82112 () Bool)

(assert (=> b!82112 (= e!53554 call!7672)))

(declare-fun bm!7670 () Bool)

(assert (=> bm!7670 (= call!7671 call!7672)))

(declare-fun b!82113 () Bool)

(declare-fun res!42602 () Bool)

(assert (=> b!82113 (=> (not res!42602) (not e!53556))))

(assert (=> b!82113 (= res!42602 (containsKey!140 lt!38340 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!82114 () Bool)

(assert (=> b!82114 (= e!53555 call!7673)))

(declare-fun c!13045 () Bool)

(declare-fun b!82115 () Bool)

(assert (=> b!82115 (= e!53552 (ite c!13045 (t!5172 (toList!734 call!7452)) (ite c!13043 (Cons!1510 (h!2099 (toList!734 call!7452)) (t!5172 (toList!734 call!7452))) Nil!1511)))))

(declare-fun b!82116 () Bool)

(assert (=> b!82116 (= e!53554 e!53553)))

(assert (=> b!82116 (= c!13045 (and ((_ is Cons!1510) (toList!734 call!7452)) (= (_1!1102 (h!2099 (toList!734 call!7452))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!82117 () Bool)

(assert (=> b!82117 (= e!53552 (insertStrictlySorted!59 (t!5172 (toList!734 call!7452)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!20553 c!13046) b!82112))

(assert (= (and d!20553 (not c!13046)) b!82116))

(assert (= (and b!82116 c!13045) b!82111))

(assert (= (and b!82116 (not c!13045)) b!82110))

(assert (= (and b!82110 c!13043) b!82114))

(assert (= (and b!82110 (not c!13043)) b!82108))

(assert (= (or b!82114 b!82108) bm!7669))

(assert (= (or b!82111 bm!7669) bm!7670))

(assert (= (or b!82112 bm!7670) bm!7668))

(assert (= (and bm!7668 c!13044) b!82117))

(assert (= (and bm!7668 (not c!13044)) b!82115))

(assert (= (and d!20553 res!42603) b!82113))

(assert (= (and b!82113 res!42602) b!82109))

(declare-fun m!84621 () Bool)

(assert (=> d!20553 m!84621))

(declare-fun m!84623 () Bool)

(assert (=> d!20553 m!84623))

(declare-fun m!84625 () Bool)

(assert (=> b!82117 m!84625))

(declare-fun m!84627 () Bool)

(assert (=> bm!7668 m!84627))

(declare-fun m!84629 () Bool)

(assert (=> b!82113 m!84629))

(declare-fun m!84631 () Bool)

(assert (=> b!82109 m!84631))

(assert (=> d!19737 d!20553))

(declare-fun d!20555 () Bool)

(assert (=> d!20555 (isDefined!90 (getValueByKey!136 (toList!734 lt!37331) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38341 () Unit!2327)

(assert (=> d!20555 (= lt!38341 (choose!485 (toList!734 lt!37331) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53557 () Bool)

(assert (=> d!20555 e!53557))

(declare-fun res!42604 () Bool)

(assert (=> d!20555 (=> (not res!42604) (not e!53557))))

(assert (=> d!20555 (= res!42604 (isStrictlySorted!291 (toList!734 lt!37331)))))

(assert (=> d!20555 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37331) #b0000000000000000000000000000000000000000000000000000000000000000) lt!38341)))

(declare-fun b!82118 () Bool)

(assert (=> b!82118 (= e!53557 (containsKey!140 (toList!734 lt!37331) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20555 res!42604) b!82118))

(assert (=> d!20555 m!82071))

(assert (=> d!20555 m!82071))

(assert (=> d!20555 m!82073))

(declare-fun m!84633 () Bool)

(assert (=> d!20555 m!84633))

(assert (=> d!20555 m!84211))

(assert (=> b!82118 m!82067))

(assert (=> b!80649 d!20555))

(declare-fun d!20557 () Bool)

(assert (=> d!20557 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37331) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37331) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3472 () Bool)

(assert (= bs!3472 d!20557))

(assert (=> bs!3472 m!82071))

(declare-fun m!84635 () Bool)

(assert (=> bs!3472 m!84635))

(assert (=> b!80649 d!20557))

(declare-fun b!82122 () Bool)

(declare-fun e!53559 () Option!142)

(assert (=> b!82122 (= e!53559 None!140)))

(declare-fun b!82119 () Bool)

(declare-fun e!53558 () Option!142)

(assert (=> b!82119 (= e!53558 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37331)))))))

(declare-fun b!82121 () Bool)

(assert (=> b!82121 (= e!53559 (getValueByKey!136 (t!5172 (toList!734 lt!37331)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!20559 () Bool)

(declare-fun c!13047 () Bool)

(assert (=> d!20559 (= c!13047 (and ((_ is Cons!1510) (toList!734 lt!37331)) (= (_1!1102 (h!2099 (toList!734 lt!37331))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20559 (= (getValueByKey!136 (toList!734 lt!37331) #b0000000000000000000000000000000000000000000000000000000000000000) e!53558)))

(declare-fun b!82120 () Bool)

(assert (=> b!82120 (= e!53558 e!53559)))

(declare-fun c!13048 () Bool)

(assert (=> b!82120 (= c!13048 (and ((_ is Cons!1510) (toList!734 lt!37331)) (not (= (_1!1102 (h!2099 (toList!734 lt!37331))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!20559 c!13047) b!82119))

(assert (= (and d!20559 (not c!13047)) b!82120))

(assert (= (and b!82120 c!13048) b!82121))

(assert (= (and b!82120 (not c!13048)) b!82122))

(declare-fun m!84637 () Bool)

(assert (=> b!82121 m!84637))

(assert (=> b!80649 d!20559))

(assert (=> d!19799 d!19791))

(assert (=> d!19799 d!19797))

(assert (=> d!19799 d!19793))

(assert (=> d!19799 d!19795))

(declare-fun b!82126 () Bool)

(declare-fun e!53561 () Option!142)

(assert (=> b!82126 (= e!53561 None!140)))

(declare-fun b!82123 () Bool)

(declare-fun e!53560 () Option!142)

(assert (=> b!82123 (= e!53560 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37751)))))))

(declare-fun b!82125 () Bool)

(assert (=> b!82125 (= e!53561 (getValueByKey!136 (t!5172 (toList!734 lt!37751)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20561 () Bool)

(declare-fun c!13049 () Bool)

(assert (=> d!20561 (= c!13049 (and ((_ is Cons!1510) (toList!734 lt!37751)) (= (_1!1102 (h!2099 (toList!734 lt!37751))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20561 (= (getValueByKey!136 (toList!734 lt!37751) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53560)))

(declare-fun b!82124 () Bool)

(assert (=> b!82124 (= e!53560 e!53561)))

(declare-fun c!13050 () Bool)

(assert (=> b!82124 (= c!13050 (and ((_ is Cons!1510) (toList!734 lt!37751)) (not (= (_1!1102 (h!2099 (toList!734 lt!37751))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20561 c!13049) b!82123))

(assert (= (and d!20561 (not c!13049)) b!82124))

(assert (= (and b!82124 c!13050) b!82125))

(assert (= (and b!82124 (not c!13050)) b!82126))

(declare-fun m!84639 () Bool)

(assert (=> b!82125 m!84639))

(assert (=> b!80890 d!20561))

(declare-fun d!20563 () Bool)

(assert (=> d!20563 (isDefined!90 (getValueByKey!136 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!38342 () Unit!2327)

(assert (=> d!20563 (= lt!38342 (choose!485 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!53562 () Bool)

(assert (=> d!20563 e!53562))

(declare-fun res!42605 () Bool)

(assert (=> d!20563 (=> (not res!42605) (not e!53562))))

(assert (=> d!20563 (= res!42605 (isStrictlySorted!291 (toList!734 lt!37406)))))

(assert (=> d!20563 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!38342)))

(declare-fun b!82127 () Bool)

(assert (=> b!82127 (= e!53562 (containsKey!140 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20563 res!42605) b!82127))

(assert (=> d!20563 m!81625))

(assert (=> d!20563 m!82583))

(assert (=> d!20563 m!82583))

(assert (=> d!20563 m!82737))

(assert (=> d!20563 m!81625))

(declare-fun m!84641 () Bool)

(assert (=> d!20563 m!84641))

(assert (=> d!20563 m!84115))

(assert (=> b!82127 m!81625))

(assert (=> b!82127 m!82733))

(assert (=> b!81015 d!20563))

(declare-fun d!20565 () Bool)

(assert (=> d!20565 (= (isDefined!90 (getValueByKey!136 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!334 (getValueByKey!136 (toList!734 lt!37406) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3473 () Bool)

(assert (= bs!3473 d!20565))

(assert (=> bs!3473 m!82583))

(declare-fun m!84643 () Bool)

(assert (=> bs!3473 m!84643))

(assert (=> b!81015 d!20565))

(assert (=> b!81015 d!20305))

(declare-fun d!20567 () Bool)

(declare-fun res!42606 () Bool)

(declare-fun e!53563 () Bool)

(assert (=> d!20567 (=> res!42606 e!53563)))

(assert (=> d!20567 (= res!42606 (and ((_ is Cons!1510) lt!37707) (= (_1!1102 (h!2099 lt!37707)) (_1!1102 lt!37075))))))

(assert (=> d!20567 (= (containsKey!140 lt!37707 (_1!1102 lt!37075)) e!53563)))

(declare-fun b!82128 () Bool)

(declare-fun e!53564 () Bool)

(assert (=> b!82128 (= e!53563 e!53564)))

(declare-fun res!42607 () Bool)

(assert (=> b!82128 (=> (not res!42607) (not e!53564))))

(assert (=> b!82128 (= res!42607 (and (or (not ((_ is Cons!1510) lt!37707)) (bvsle (_1!1102 (h!2099 lt!37707)) (_1!1102 lt!37075))) ((_ is Cons!1510) lt!37707) (bvslt (_1!1102 (h!2099 lt!37707)) (_1!1102 lt!37075))))))

(declare-fun b!82129 () Bool)

(assert (=> b!82129 (= e!53564 (containsKey!140 (t!5172 lt!37707) (_1!1102 lt!37075)))))

(assert (= (and d!20567 (not res!42606)) b!82128))

(assert (= (and b!82128 res!42607) b!82129))

(declare-fun m!84645 () Bool)

(assert (=> b!82129 m!84645))

(assert (=> b!80832 d!20567))

(declare-fun b!82133 () Bool)

(declare-fun e!53566 () Option!142)

(assert (=> b!82133 (= e!53566 None!140)))

(declare-fun b!82130 () Bool)

(declare-fun e!53565 () Option!142)

(assert (=> b!82130 (= e!53565 (Some!141 (_2!1102 (h!2099 (t!5172 lt!37349)))))))

(declare-fun b!82132 () Bool)

(assert (=> b!82132 (= e!53566 (getValueByKey!136 (t!5172 (t!5172 lt!37349)) (_1!1102 lt!37079)))))

(declare-fun d!20569 () Bool)

(declare-fun c!13051 () Bool)

(assert (=> d!20569 (= c!13051 (and ((_ is Cons!1510) (t!5172 lt!37349)) (= (_1!1102 (h!2099 (t!5172 lt!37349))) (_1!1102 lt!37079))))))

(assert (=> d!20569 (= (getValueByKey!136 (t!5172 lt!37349) (_1!1102 lt!37079)) e!53565)))

(declare-fun b!82131 () Bool)

(assert (=> b!82131 (= e!53565 e!53566)))

(declare-fun c!13052 () Bool)

(assert (=> b!82131 (= c!13052 (and ((_ is Cons!1510) (t!5172 lt!37349)) (not (= (_1!1102 (h!2099 (t!5172 lt!37349))) (_1!1102 lt!37079)))))))

(assert (= (and d!20569 c!13051) b!82130))

(assert (= (and d!20569 (not c!13051)) b!82131))

(assert (= (and b!82131 c!13052) b!82132))

(assert (= (and b!82131 (not c!13052)) b!82133))

(declare-fun m!84647 () Bool)

(assert (=> b!82132 m!84647))

(assert (=> b!80579 d!20569))

(declare-fun d!20571 () Bool)

(declare-fun lt!38343 () Bool)

(assert (=> d!20571 (= lt!38343 (select (content!86 lt!37300) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun e!53567 () Bool)

(assert (=> d!20571 (= lt!38343 e!53567)))

(declare-fun res!42609 () Bool)

(assert (=> d!20571 (=> (not res!42609) (not e!53567))))

(assert (=> d!20571 (= res!42609 ((_ is Cons!1510) lt!37300))))

(assert (=> d!20571 (= (contains!745 lt!37300 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))) lt!38343)))

(declare-fun b!82134 () Bool)

(declare-fun e!53568 () Bool)

(assert (=> b!82134 (= e!53567 e!53568)))

(declare-fun res!42608 () Bool)

(assert (=> b!82134 (=> res!42608 e!53568)))

(assert (=> b!82134 (= res!42608 (= (h!2099 lt!37300) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun b!82135 () Bool)

(assert (=> b!82135 (= e!53568 (contains!745 (t!5172 lt!37300) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(assert (= (and d!20571 res!42609) b!82134))

(assert (= (and b!82134 (not res!42608)) b!82135))

(declare-fun m!84649 () Bool)

(assert (=> d!20571 m!84649))

(declare-fun m!84651 () Bool)

(assert (=> d!20571 m!84651))

(declare-fun m!84653 () Bool)

(assert (=> b!82135 m!84653))

(assert (=> b!80504 d!20571))

(declare-fun d!20573 () Bool)

(declare-fun lt!38344 () Bool)

(assert (=> d!20573 (= lt!38344 (select (content!86 (toList!734 lt!37642)) (tuple2!2183 lt!37335 lt!37336)))))

(declare-fun e!53569 () Bool)

(assert (=> d!20573 (= lt!38344 e!53569)))

(declare-fun res!42611 () Bool)

(assert (=> d!20573 (=> (not res!42611) (not e!53569))))

(assert (=> d!20573 (= res!42611 ((_ is Cons!1510) (toList!734 lt!37642)))))

(assert (=> d!20573 (= (contains!745 (toList!734 lt!37642) (tuple2!2183 lt!37335 lt!37336)) lt!38344)))

(declare-fun b!82136 () Bool)

(declare-fun e!53570 () Bool)

(assert (=> b!82136 (= e!53569 e!53570)))

(declare-fun res!42610 () Bool)

(assert (=> b!82136 (=> res!42610 e!53570)))

(assert (=> b!82136 (= res!42610 (= (h!2099 (toList!734 lt!37642)) (tuple2!2183 lt!37335 lt!37336)))))

(declare-fun b!82137 () Bool)

(assert (=> b!82137 (= e!53570 (contains!745 (t!5172 (toList!734 lt!37642)) (tuple2!2183 lt!37335 lt!37336)))))

(assert (= (and d!20573 res!42611) b!82136))

(assert (= (and b!82136 (not res!42610)) b!82137))

(declare-fun m!84655 () Bool)

(assert (=> d!20573 m!84655))

(declare-fun m!84657 () Bool)

(assert (=> d!20573 m!84657))

(declare-fun m!84659 () Bool)

(assert (=> b!82137 m!84659))

(assert (=> b!80741 d!20573))

(assert (=> d!19765 d!19609))

(assert (=> d!19683 d!19767))

(declare-fun d!20575 () Bool)

(declare-fun e!53573 () Bool)

(assert (=> d!20575 e!53573))

(declare-fun res!42617 () Bool)

(assert (=> d!20575 (=> (not res!42617) (not e!53573))))

(declare-fun lt!38347 () SeekEntryResult!244)

(assert (=> d!20575 (= res!42617 ((_ is Found!244) lt!38347))))

(assert (=> d!20575 (= lt!38347 (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(assert (=> d!20575 true))

(declare-fun _$33!66 () Unit!2327)

(assert (=> d!20575 (= (choose!480 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)) _$33!66)))

(declare-fun b!82142 () Bool)

(declare-fun res!42616 () Bool)

(assert (=> b!82142 (=> (not res!42616) (not e!53573))))

(assert (=> b!82142 (= res!42616 (inRange!0 (index!3112 lt!38347) (mask!6297 newMap!16)))))

(declare-fun b!82143 () Bool)

(assert (=> b!82143 (= e!53573 (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!38347)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (= (and d!20575 res!42617) b!82142))

(assert (= (and b!82142 res!42616) b!82143))

(assert (=> d!20575 m!81295))

(assert (=> d!20575 m!81509))

(declare-fun m!84661 () Bool)

(assert (=> b!82142 m!84661))

(declare-fun m!84663 () Bool)

(assert (=> b!82143 m!84663))

(assert (=> d!19683 d!20575))

(assert (=> d!19683 d!19885))

(declare-fun b!82147 () Bool)

(declare-fun e!53575 () Option!142)

(assert (=> b!82147 (= e!53575 None!140)))

(declare-fun b!82144 () Bool)

(declare-fun e!53574 () Option!142)

(assert (=> b!82144 (= e!53574 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37739)))))))

(declare-fun b!82146 () Bool)

(assert (=> b!82146 (= e!53575 (getValueByKey!136 (t!5172 (toList!734 lt!37739)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun d!20577 () Bool)

(declare-fun c!13053 () Bool)

(assert (=> d!20577 (= c!13053 (and ((_ is Cons!1510) (toList!734 lt!37739)) (= (_1!1102 (h!2099 (toList!734 lt!37739))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20577 (= (getValueByKey!136 (toList!734 lt!37739) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) e!53574)))

(declare-fun b!82145 () Bool)

(assert (=> b!82145 (= e!53574 e!53575)))

(declare-fun c!13054 () Bool)

(assert (=> b!82145 (= c!13054 (and ((_ is Cons!1510) (toList!734 lt!37739)) (not (= (_1!1102 (h!2099 (toList!734 lt!37739))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (= (and d!20577 c!13053) b!82144))

(assert (= (and d!20577 (not c!13053)) b!82145))

(assert (= (and b!82145 c!13054) b!82146))

(assert (= (and b!82145 (not c!13054)) b!82147))

(declare-fun m!84665 () Bool)

(assert (=> b!82146 m!84665))

(assert (=> b!80884 d!20577))

(declare-fun d!20579 () Bool)

(assert (=> d!20579 (= (apply!80 lt!37611 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1187 (getValueByKey!136 (toList!734 lt!37611) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3474 () Bool)

(assert (= bs!3474 d!20579))

(assert (=> bs!3474 m!84497))

(assert (=> bs!3474 m!84497))

(declare-fun m!84667 () Bool)

(assert (=> bs!3474 m!84667))

(assert (=> b!80722 d!20579))

(assert (=> d!19723 d!19885))

(assert (=> d!19757 d!19755))

(declare-fun d!20581 () Bool)

(assert (=> d!20581 (= (getValueByKey!136 lt!37304 (_1!1102 lt!37075)) (Some!141 (_2!1102 lt!37075)))))

(assert (=> d!20581 true))

(declare-fun _$22!404 () Unit!2327)

(assert (=> d!20581 (= (choose!477 lt!37304 (_1!1102 lt!37075) (_2!1102 lt!37075)) _$22!404)))

(declare-fun bs!3475 () Bool)

(assert (= bs!3475 d!20581))

(assert (=> bs!3475 m!81569))

(assert (=> d!19757 d!20581))

(declare-fun d!20583 () Bool)

(declare-fun res!42618 () Bool)

(declare-fun e!53576 () Bool)

(assert (=> d!20583 (=> res!42618 e!53576)))

(assert (=> d!20583 (= res!42618 (or ((_ is Nil!1511) lt!37304) ((_ is Nil!1511) (t!5172 lt!37304))))))

(assert (=> d!20583 (= (isStrictlySorted!291 lt!37304) e!53576)))

(declare-fun b!82148 () Bool)

(declare-fun e!53577 () Bool)

(assert (=> b!82148 (= e!53576 e!53577)))

(declare-fun res!42619 () Bool)

(assert (=> b!82148 (=> (not res!42619) (not e!53577))))

(assert (=> b!82148 (= res!42619 (bvslt (_1!1102 (h!2099 lt!37304)) (_1!1102 (h!2099 (t!5172 lt!37304)))))))

(declare-fun b!82149 () Bool)

(assert (=> b!82149 (= e!53577 (isStrictlySorted!291 (t!5172 lt!37304)))))

(assert (= (and d!20583 (not res!42618)) b!82148))

(assert (= (and b!82148 res!42619) b!82149))

(declare-fun m!84669 () Bool)

(assert (=> b!82149 m!84669))

(assert (=> d!19757 d!20583))

(declare-fun b!82150 () Bool)

(declare-fun e!53581 () List!1514)

(declare-fun call!7676 () List!1514)

(assert (=> b!82150 (= e!53581 call!7676)))

(declare-fun e!53578 () List!1514)

(declare-fun bm!7671 () Bool)

(declare-fun call!7675 () List!1514)

(declare-fun c!13058 () Bool)

(assert (=> bm!7671 (= call!7675 ($colon$colon!69 e!53578 (ite c!13058 (h!2099 (t!5172 (toList!734 lt!37077))) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075)))))))

(declare-fun c!13056 () Bool)

(assert (=> bm!7671 (= c!13056 c!13058)))

(declare-fun b!82151 () Bool)

(declare-fun e!53582 () Bool)

(declare-fun lt!38348 () List!1514)

(assert (=> b!82151 (= e!53582 (contains!745 lt!38348 (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(declare-fun bm!7672 () Bool)

(declare-fun call!7674 () List!1514)

(assert (=> bm!7672 (= call!7676 call!7674)))

(declare-fun d!20585 () Bool)

(assert (=> d!20585 e!53582))

(declare-fun res!42621 () Bool)

(assert (=> d!20585 (=> (not res!42621) (not e!53582))))

(assert (=> d!20585 (= res!42621 (isStrictlySorted!291 lt!38348))))

(declare-fun e!53580 () List!1514)

(assert (=> d!20585 (= lt!38348 e!53580)))

(assert (=> d!20585 (= c!13058 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37077))) (bvslt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37077)))) (_1!1102 lt!37075))))))

(assert (=> d!20585 (isStrictlySorted!291 (t!5172 (toList!734 lt!37077)))))

(assert (=> d!20585 (= (insertStrictlySorted!59 (t!5172 (toList!734 lt!37077)) (_1!1102 lt!37075) (_2!1102 lt!37075)) lt!38348)))

(declare-fun b!82152 () Bool)

(declare-fun c!13055 () Bool)

(assert (=> b!82152 (= c!13055 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37077))) (bvsgt (_1!1102 (h!2099 (t!5172 (toList!734 lt!37077)))) (_1!1102 lt!37075))))))

(declare-fun e!53579 () List!1514)

(assert (=> b!82152 (= e!53579 e!53581)))

(declare-fun b!82153 () Bool)

(assert (=> b!82153 (= e!53579 call!7674)))

(declare-fun b!82154 () Bool)

(assert (=> b!82154 (= e!53580 call!7675)))

(declare-fun bm!7673 () Bool)

(assert (=> bm!7673 (= call!7674 call!7675)))

(declare-fun b!82155 () Bool)

(declare-fun res!42620 () Bool)

(assert (=> b!82155 (=> (not res!42620) (not e!53582))))

(assert (=> b!82155 (= res!42620 (containsKey!140 lt!38348 (_1!1102 lt!37075)))))

(declare-fun b!82156 () Bool)

(assert (=> b!82156 (= e!53581 call!7676)))

(declare-fun c!13057 () Bool)

(declare-fun b!82157 () Bool)

(assert (=> b!82157 (= e!53578 (ite c!13057 (t!5172 (t!5172 (toList!734 lt!37077))) (ite c!13055 (Cons!1510 (h!2099 (t!5172 (toList!734 lt!37077))) (t!5172 (t!5172 (toList!734 lt!37077)))) Nil!1511)))))

(declare-fun b!82158 () Bool)

(assert (=> b!82158 (= e!53580 e!53579)))

(assert (=> b!82158 (= c!13057 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37077))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37077)))) (_1!1102 lt!37075))))))

(declare-fun b!82159 () Bool)

(assert (=> b!82159 (= e!53578 (insertStrictlySorted!59 (t!5172 (t!5172 (toList!734 lt!37077))) (_1!1102 lt!37075) (_2!1102 lt!37075)))))

(assert (= (and d!20585 c!13058) b!82154))

(assert (= (and d!20585 (not c!13058)) b!82158))

(assert (= (and b!82158 c!13057) b!82153))

(assert (= (and b!82158 (not c!13057)) b!82152))

(assert (= (and b!82152 c!13055) b!82156))

(assert (= (and b!82152 (not c!13055)) b!82150))

(assert (= (or b!82156 b!82150) bm!7672))

(assert (= (or b!82153 bm!7672) bm!7673))

(assert (= (or b!82154 bm!7673) bm!7671))

(assert (= (and bm!7671 c!13056) b!82159))

(assert (= (and bm!7671 (not c!13056)) b!82157))

(assert (= (and d!20585 res!42621) b!82155))

(assert (= (and b!82155 res!42620) b!82151))

(declare-fun m!84671 () Bool)

(assert (=> d!20585 m!84671))

(assert (=> d!20585 m!84437))

(declare-fun m!84673 () Bool)

(assert (=> b!82159 m!84673))

(declare-fun m!84675 () Bool)

(assert (=> bm!7671 m!84675))

(declare-fun m!84677 () Bool)

(assert (=> b!82155 m!84677))

(declare-fun m!84679 () Bool)

(assert (=> b!82151 m!84679))

(assert (=> b!80573 d!20585))

(declare-fun d!20587 () Bool)

(declare-fun lt!38349 () Bool)

(assert (=> d!20587 (= lt!38349 (select (content!86 lt!37794) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun e!53583 () Bool)

(assert (=> d!20587 (= lt!38349 e!53583)))

(declare-fun res!42623 () Bool)

(assert (=> d!20587 (=> (not res!42623) (not e!53583))))

(assert (=> d!20587 (= res!42623 ((_ is Cons!1510) lt!37794))))

(assert (=> d!20587 (= (contains!745 lt!37794 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))) lt!38349)))

(declare-fun b!82160 () Bool)

(declare-fun e!53584 () Bool)

(assert (=> b!82160 (= e!53583 e!53584)))

(declare-fun res!42622 () Bool)

(assert (=> b!82160 (=> res!42622 e!53584)))

(assert (=> b!82160 (= res!42622 (= (h!2099 lt!37794) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun b!82161 () Bool)

(assert (=> b!82161 (= e!53584 (contains!745 (t!5172 lt!37794) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(assert (= (and d!20587 res!42623) b!82160))

(assert (= (and b!82160 (not res!42622)) b!82161))

(declare-fun m!84681 () Bool)

(assert (=> d!20587 m!84681))

(declare-fun m!84683 () Bool)

(assert (=> d!20587 m!84683))

(declare-fun m!84685 () Bool)

(assert (=> b!82161 m!84685))

(assert (=> b!80935 d!20587))

(declare-fun b!82165 () Bool)

(declare-fun e!53586 () Option!142)

(assert (=> b!82165 (= e!53586 None!140)))

(declare-fun b!82162 () Bool)

(declare-fun e!53585 () Option!142)

(assert (=> b!82162 (= e!53585 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37763)))))))

(declare-fun b!82164 () Bool)

(assert (=> b!82164 (= e!53586 (getValueByKey!136 (t!5172 (toList!734 lt!37763)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun c!13059 () Bool)

(declare-fun d!20589 () Bool)

(assert (=> d!20589 (= c!13059 (and ((_ is Cons!1510) (toList!734 lt!37763)) (= (_1!1102 (h!2099 (toList!734 lt!37763))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20589 (= (getValueByKey!136 (toList!734 lt!37763) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) e!53585)))

(declare-fun b!82163 () Bool)

(assert (=> b!82163 (= e!53585 e!53586)))

(declare-fun c!13060 () Bool)

(assert (=> b!82163 (= c!13060 (and ((_ is Cons!1510) (toList!734 lt!37763)) (not (= (_1!1102 (h!2099 (toList!734 lt!37763))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (= (and d!20589 c!13059) b!82162))

(assert (= (and d!20589 (not c!13059)) b!82163))

(assert (= (and b!82163 c!13060) b!82164))

(assert (= (and b!82163 (not c!13060)) b!82165))

(declare-fun m!84687 () Bool)

(assert (=> b!82164 m!84687))

(assert (=> b!80896 d!20589))

(declare-fun d!20591 () Bool)

(assert (=> d!20591 (isDefined!90 (getValueByKey!136 (toList!734 call!7438) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun lt!38350 () Unit!2327)

(assert (=> d!20591 (= lt!38350 (choose!485 (toList!734 call!7438) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(declare-fun e!53587 () Bool)

(assert (=> d!20591 e!53587))

(declare-fun res!42624 () Bool)

(assert (=> d!20591 (=> (not res!42624) (not e!53587))))

(assert (=> d!20591 (= res!42624 (isStrictlySorted!291 (toList!734 call!7438)))))

(assert (=> d!20591 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 call!7438) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) lt!38350)))

(declare-fun b!82166 () Bool)

(assert (=> b!82166 (= e!53587 (containsKey!140 (toList!734 call!7438) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (= (and d!20591 res!42624) b!82166))

(assert (=> d!20591 m!81295))

(assert (=> d!20591 m!82705))

(assert (=> d!20591 m!82705))

(assert (=> d!20591 m!82707))

(assert (=> d!20591 m!81295))

(declare-fun m!84689 () Bool)

(assert (=> d!20591 m!84689))

(declare-fun m!84691 () Bool)

(assert (=> d!20591 m!84691))

(assert (=> b!82166 m!81295))

(assert (=> b!82166 m!82701))

(assert (=> b!80973 d!20591))

(assert (=> b!80973 d!19923))

(assert (=> b!80973 d!19925))

(declare-fun d!20593 () Bool)

(declare-fun lt!38351 () Bool)

(assert (=> d!20593 (= lt!38351 (select (content!86 (toList!734 lt!37496)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun e!53588 () Bool)

(assert (=> d!20593 (= lt!38351 e!53588)))

(declare-fun res!42626 () Bool)

(assert (=> d!20593 (=> (not res!42626) (not e!53588))))

(assert (=> d!20593 (= res!42626 ((_ is Cons!1510) (toList!734 lt!37496)))))

(assert (=> d!20593 (= (contains!745 (toList!734 lt!37496) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!38351)))

(declare-fun b!82167 () Bool)

(declare-fun e!53589 () Bool)

(assert (=> b!82167 (= e!53588 e!53589)))

(declare-fun res!42625 () Bool)

(assert (=> b!82167 (=> res!42625 e!53589)))

(assert (=> b!82167 (= res!42625 (= (h!2099 (toList!734 lt!37496)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!82168 () Bool)

(assert (=> b!82168 (= e!53589 (contains!745 (t!5172 (toList!734 lt!37496)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!20593 res!42626) b!82167))

(assert (= (and b!82167 (not res!42625)) b!82168))

(declare-fun m!84693 () Bool)

(assert (=> d!20593 m!84693))

(declare-fun m!84695 () Bool)

(assert (=> d!20593 m!84695))

(declare-fun m!84697 () Bool)

(assert (=> b!82168 m!84697))

(assert (=> b!80613 d!20593))

(declare-fun d!20595 () Bool)

(declare-fun e!53590 () Bool)

(assert (=> d!20595 e!53590))

(declare-fun res!42627 () Bool)

(assert (=> d!20595 (=> res!42627 e!53590)))

(declare-fun lt!38355 () Bool)

(assert (=> d!20595 (= res!42627 (not lt!38355))))

(declare-fun lt!38354 () Bool)

(assert (=> d!20595 (= lt!38355 lt!38354)))

(declare-fun lt!38353 () Unit!2327)

(declare-fun e!53591 () Unit!2327)

(assert (=> d!20595 (= lt!38353 e!53591)))

(declare-fun c!13061 () Bool)

(assert (=> d!20595 (= c!13061 lt!38354)))

(assert (=> d!20595 (= lt!38354 (containsKey!140 (toList!734 lt!37682) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!20595 (= (contains!742 lt!37682 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) lt!38355)))

(declare-fun b!82169 () Bool)

(declare-fun lt!38352 () Unit!2327)

(assert (=> b!82169 (= e!53591 lt!38352)))

(assert (=> b!82169 (= lt!38352 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37682) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82169 (isDefined!90 (getValueByKey!136 (toList!734 lt!37682) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82170 () Bool)

(declare-fun Unit!2405 () Unit!2327)

(assert (=> b!82170 (= e!53591 Unit!2405)))

(declare-fun b!82171 () Bool)

(assert (=> b!82171 (= e!53590 (isDefined!90 (getValueByKey!136 (toList!734 lt!37682) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!20595 c!13061) b!82169))

(assert (= (and d!20595 (not c!13061)) b!82170))

(assert (= (and d!20595 (not res!42627)) b!82171))

(assert (=> d!20595 m!82131))

(declare-fun m!84699 () Bool)

(assert (=> d!20595 m!84699))

(assert (=> b!82169 m!82131))

(declare-fun m!84701 () Bool)

(assert (=> b!82169 m!84701))

(assert (=> b!82169 m!82131))

(declare-fun m!84703 () Bool)

(assert (=> b!82169 m!84703))

(assert (=> b!82169 m!84703))

(declare-fun m!84705 () Bool)

(assert (=> b!82169 m!84705))

(assert (=> b!82171 m!82131))

(assert (=> b!82171 m!84703))

(assert (=> b!82171 m!84703))

(assert (=> b!82171 m!84705))

(assert (=> b!80804 d!20595))

(declare-fun b!82172 () Bool)

(declare-fun res!42630 () Bool)

(declare-fun e!53592 () Bool)

(assert (=> b!82172 (=> (not res!42630) (not e!53592))))

(assert (=> b!82172 (= res!42630 (and (= (size!2132 (_values!2275 (_2!1101 lt!37268))) (bvadd (mask!6297 (_2!1101 lt!37268)) #b00000000000000000000000000000001)) (= (size!2131 (_keys!3955 (_2!1101 lt!37268))) (size!2132 (_values!2275 (_2!1101 lt!37268)))) (bvsge (_size!417 (_2!1101 lt!37268)) #b00000000000000000000000000000000) (bvsle (_size!417 (_2!1101 lt!37268)) (bvadd (mask!6297 (_2!1101 lt!37268)) #b00000000000000000000000000000001))))))

(declare-fun b!82174 () Bool)

(declare-fun res!42631 () Bool)

(assert (=> b!82174 (=> (not res!42631) (not e!53592))))

(assert (=> b!82174 (= res!42631 (= (size!2137 (_2!1101 lt!37268)) (bvadd (_size!417 (_2!1101 lt!37268)) (bvsdiv (bvadd (extraKeys!2139 (_2!1101 lt!37268)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!82175 () Bool)

(assert (=> b!82175 (= e!53592 (and (bvsge (extraKeys!2139 (_2!1101 lt!37268)) #b00000000000000000000000000000000) (bvsle (extraKeys!2139 (_2!1101 lt!37268)) #b00000000000000000000000000000011) (bvsge (_vacant!417 (_2!1101 lt!37268)) #b00000000000000000000000000000000)))))

(declare-fun b!82173 () Bool)

(declare-fun res!42628 () Bool)

(assert (=> b!82173 (=> (not res!42628) (not e!53592))))

(assert (=> b!82173 (= res!42628 (bvsge (size!2137 (_2!1101 lt!37268)) (_size!417 (_2!1101 lt!37268))))))

(declare-fun d!20597 () Bool)

(declare-fun res!42629 () Bool)

(assert (=> d!20597 (=> (not res!42629) (not e!53592))))

(assert (=> d!20597 (= res!42629 (validMask!0 (mask!6297 (_2!1101 lt!37268))))))

(assert (=> d!20597 (= (simpleValid!56 (_2!1101 lt!37268)) e!53592)))

(assert (= (and d!20597 res!42629) b!82172))

(assert (= (and b!82172 res!42630) b!82173))

(assert (= (and b!82173 res!42628) b!82174))

(assert (= (and b!82174 res!42631) b!82175))

(declare-fun m!84707 () Bool)

(assert (=> b!82174 m!84707))

(assert (=> b!82173 m!84707))

(declare-fun m!84709 () Bool)

(assert (=> d!20597 m!84709))

(assert (=> d!19681 d!20597))

(declare-fun d!20599 () Bool)

(declare-fun e!53593 () Bool)

(assert (=> d!20599 e!53593))

(declare-fun res!42633 () Bool)

(assert (=> d!20599 (=> (not res!42633) (not e!53593))))

(declare-fun lt!38359 () ListLongMap!1437)

(assert (=> d!20599 (= res!42633 (contains!742 lt!38359 (_1!1102 (ite (or c!12691 c!12693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(declare-fun lt!38358 () List!1514)

(assert (=> d!20599 (= lt!38359 (ListLongMap!1438 lt!38358))))

(declare-fun lt!38357 () Unit!2327)

(declare-fun lt!38356 () Unit!2327)

(assert (=> d!20599 (= lt!38357 lt!38356)))

(assert (=> d!20599 (= (getValueByKey!136 lt!38358 (_1!1102 (ite (or c!12691 c!12693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))) (Some!141 (_2!1102 (ite (or c!12691 c!12693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20599 (= lt!38356 (lemmaContainsTupThenGetReturnValue!56 lt!38358 (_1!1102 (ite (or c!12691 c!12693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (_2!1102 (ite (or c!12691 c!12693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20599 (= lt!38358 (insertStrictlySorted!59 (toList!734 (ite c!12691 call!7537 (ite c!12693 call!7538 call!7539))) (_1!1102 (ite (or c!12691 c!12693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (_2!1102 (ite (or c!12691 c!12693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20599 (= (+!104 (ite c!12691 call!7537 (ite c!12693 call!7538 call!7539)) (ite (or c!12691 c!12693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) lt!38359)))

(declare-fun b!82176 () Bool)

(declare-fun res!42632 () Bool)

(assert (=> b!82176 (=> (not res!42632) (not e!53593))))

(assert (=> b!82176 (= res!42632 (= (getValueByKey!136 (toList!734 lt!38359) (_1!1102 (ite (or c!12691 c!12693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))) (Some!141 (_2!1102 (ite (or c!12691 c!12693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))))

(declare-fun b!82177 () Bool)

(assert (=> b!82177 (= e!53593 (contains!745 (toList!734 lt!38359) (ite (or c!12691 c!12693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (= (and d!20599 res!42633) b!82176))

(assert (= (and b!82176 res!42632) b!82177))

(declare-fun m!84711 () Bool)

(assert (=> d!20599 m!84711))

(declare-fun m!84713 () Bool)

(assert (=> d!20599 m!84713))

(declare-fun m!84715 () Bool)

(assert (=> d!20599 m!84715))

(declare-fun m!84717 () Bool)

(assert (=> d!20599 m!84717))

(declare-fun m!84719 () Bool)

(assert (=> b!82176 m!84719))

(declare-fun m!84721 () Bool)

(assert (=> b!82177 m!84721))

(assert (=> bm!7539 d!20599))

(assert (=> b!80789 d!20075))

(assert (=> b!80576 d!20411))

(assert (=> b!80576 d!19701))

(declare-fun d!20601 () Bool)

(assert (=> d!20601 (= (get!1186 (select (arr!1889 (_values!2275 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!338 (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80739 d!20601))

(assert (=> b!80860 d!20415))

(assert (=> b!80860 d!19829))

(assert (=> b!81027 d!20421))

(assert (=> b!81027 d!19689))

(declare-fun d!20603 () Bool)

(declare-fun res!42634 () Bool)

(declare-fun e!53594 () Bool)

(assert (=> d!20603 (=> res!42634 e!53594)))

(assert (=> d!20603 (= res!42634 (and ((_ is Cons!1510) (toList!734 lt!37331)) (= (_1!1102 (h!2099 (toList!734 lt!37331))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!20603 (= (containsKey!140 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53594)))

(declare-fun b!82178 () Bool)

(declare-fun e!53595 () Bool)

(assert (=> b!82178 (= e!53594 e!53595)))

(declare-fun res!42635 () Bool)

(assert (=> b!82178 (=> (not res!42635) (not e!53595))))

(assert (=> b!82178 (= res!42635 (and (or (not ((_ is Cons!1510) (toList!734 lt!37331))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37331))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1510) (toList!734 lt!37331)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37331))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!82179 () Bool)

(assert (=> b!82179 (= e!53595 (containsKey!140 (t!5172 (toList!734 lt!37331)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20603 (not res!42634)) b!82178))

(assert (= (and b!82178 res!42635) b!82179))

(assert (=> b!82179 m!81625))

(declare-fun m!84723 () Bool)

(assert (=> b!82179 m!84723))

(assert (=> d!19857 d!20603))

(declare-fun d!20605 () Bool)

(declare-fun res!42636 () Bool)

(declare-fun e!53596 () Bool)

(assert (=> d!20605 (=> res!42636 e!53596)))

(assert (=> d!20605 (= res!42636 (or ((_ is Nil!1511) lt!37439) ((_ is Nil!1511) (t!5172 lt!37439))))))

(assert (=> d!20605 (= (isStrictlySorted!291 lt!37439) e!53596)))

(declare-fun b!82180 () Bool)

(declare-fun e!53597 () Bool)

(assert (=> b!82180 (= e!53596 e!53597)))

(declare-fun res!42637 () Bool)

(assert (=> b!82180 (=> (not res!42637) (not e!53597))))

(assert (=> b!82180 (= res!42637 (bvslt (_1!1102 (h!2099 lt!37439)) (_1!1102 (h!2099 (t!5172 lt!37439)))))))

(declare-fun b!82181 () Bool)

(assert (=> b!82181 (= e!53597 (isStrictlySorted!291 (t!5172 lt!37439)))))

(assert (= (and d!20605 (not res!42636)) b!82180))

(assert (= (and b!82180 res!42637) b!82181))

(declare-fun m!84725 () Bool)

(assert (=> b!82181 m!84725))

(assert (=> d!19629 d!20605))

(declare-fun d!20607 () Bool)

(declare-fun res!42638 () Bool)

(declare-fun e!53598 () Bool)

(assert (=> d!20607 (=> res!42638 e!53598)))

(assert (=> d!20607 (= res!42638 (or ((_ is Nil!1511) (toList!734 (+!104 lt!37073 lt!37079))) ((_ is Nil!1511) (t!5172 (toList!734 (+!104 lt!37073 lt!37079))))))))

(assert (=> d!20607 (= (isStrictlySorted!291 (toList!734 (+!104 lt!37073 lt!37079))) e!53598)))

(declare-fun b!82182 () Bool)

(declare-fun e!53599 () Bool)

(assert (=> b!82182 (= e!53598 e!53599)))

(declare-fun res!42639 () Bool)

(assert (=> b!82182 (=> (not res!42639) (not e!53599))))

(assert (=> b!82182 (= res!42639 (bvslt (_1!1102 (h!2099 (toList!734 (+!104 lt!37073 lt!37079)))) (_1!1102 (h!2099 (t!5172 (toList!734 (+!104 lt!37073 lt!37079)))))))))

(declare-fun b!82183 () Bool)

(assert (=> b!82183 (= e!53599 (isStrictlySorted!291 (t!5172 (toList!734 (+!104 lt!37073 lt!37079)))))))

(assert (= (and d!20607 (not res!42638)) b!82182))

(assert (= (and b!82182 res!42639) b!82183))

(assert (=> b!82183 m!84129))

(assert (=> d!19629 d!20607))

(declare-fun d!20609 () Bool)

(assert (=> d!20609 (contains!742 (+!104 lt!37693 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))) lt!37681)))

(declare-fun lt!38360 () Unit!2327)

(assert (=> d!20609 (= lt!38360 (choose!478 lt!37693 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) lt!37681))))

(assert (=> d!20609 (contains!742 lt!37693 lt!37681)))

(assert (=> d!20609 (= (addStillContains!56 lt!37693 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) lt!37681) lt!38360)))

(declare-fun bs!3476 () Bool)

(assert (= bs!3476 d!20609))

(assert (=> bs!3476 m!82355))

(assert (=> bs!3476 m!82355))

(assert (=> bs!3476 m!82357))

(declare-fun m!84727 () Bool)

(assert (=> bs!3476 m!84727))

(declare-fun m!84729 () Bool)

(assert (=> bs!3476 m!84729))

(assert (=> b!80792 d!20609))

(declare-fun d!20611 () Bool)

(assert (=> d!20611 (= (apply!80 lt!37689 lt!37701) (get!1187 (getValueByKey!136 (toList!734 lt!37689) lt!37701)))))

(declare-fun bs!3477 () Bool)

(assert (= bs!3477 d!20611))

(declare-fun m!84731 () Bool)

(assert (=> bs!3477 m!84731))

(assert (=> bs!3477 m!84731))

(declare-fun m!84733 () Bool)

(assert (=> bs!3477 m!84733))

(assert (=> b!80792 d!20611))

(declare-fun d!20613 () Bool)

(assert (=> d!20613 (= (apply!80 (+!104 lt!37689 (tuple2!2183 lt!37680 (minValue!2188 newMap!16))) lt!37701) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37689 (tuple2!2183 lt!37680 (minValue!2188 newMap!16)))) lt!37701)))))

(declare-fun bs!3478 () Bool)

(assert (= bs!3478 d!20613))

(declare-fun m!84735 () Bool)

(assert (=> bs!3478 m!84735))

(assert (=> bs!3478 m!84735))

(declare-fun m!84737 () Bool)

(assert (=> bs!3478 m!84737))

(assert (=> b!80792 d!20613))

(declare-fun d!20615 () Bool)

(declare-fun e!53600 () Bool)

(assert (=> d!20615 e!53600))

(declare-fun res!42640 () Bool)

(assert (=> d!20615 (=> res!42640 e!53600)))

(declare-fun lt!38364 () Bool)

(assert (=> d!20615 (= res!42640 (not lt!38364))))

(declare-fun lt!38363 () Bool)

(assert (=> d!20615 (= lt!38364 lt!38363)))

(declare-fun lt!38362 () Unit!2327)

(declare-fun e!53601 () Unit!2327)

(assert (=> d!20615 (= lt!38362 e!53601)))

(declare-fun c!13062 () Bool)

(assert (=> d!20615 (= c!13062 lt!38363)))

(assert (=> d!20615 (= lt!38363 (containsKey!140 (toList!734 (+!104 lt!37693 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))) lt!37681))))

(assert (=> d!20615 (= (contains!742 (+!104 lt!37693 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))) lt!37681) lt!38364)))

(declare-fun b!82184 () Bool)

(declare-fun lt!38361 () Unit!2327)

(assert (=> b!82184 (= e!53601 lt!38361)))

(assert (=> b!82184 (= lt!38361 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (+!104 lt!37693 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))) lt!37681))))

(assert (=> b!82184 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37693 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))) lt!37681))))

(declare-fun b!82185 () Bool)

(declare-fun Unit!2406 () Unit!2327)

(assert (=> b!82185 (= e!53601 Unit!2406)))

(declare-fun b!82186 () Bool)

(assert (=> b!82186 (= e!53600 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37693 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))) lt!37681)))))

(assert (= (and d!20615 c!13062) b!82184))

(assert (= (and d!20615 (not c!13062)) b!82185))

(assert (= (and d!20615 (not res!42640)) b!82186))

(declare-fun m!84739 () Bool)

(assert (=> d!20615 m!84739))

(declare-fun m!84741 () Bool)

(assert (=> b!82184 m!84741))

(declare-fun m!84743 () Bool)

(assert (=> b!82184 m!84743))

(assert (=> b!82184 m!84743))

(declare-fun m!84745 () Bool)

(assert (=> b!82184 m!84745))

(assert (=> b!82186 m!84743))

(assert (=> b!82186 m!84743))

(assert (=> b!82186 m!84745))

(assert (=> b!80792 d!20615))

(declare-fun d!20617 () Bool)

(declare-fun e!53602 () Bool)

(assert (=> d!20617 e!53602))

(declare-fun res!42642 () Bool)

(assert (=> d!20617 (=> (not res!42642) (not e!53602))))

(declare-fun lt!38368 () ListLongMap!1437)

(assert (=> d!20617 (= res!42642 (contains!742 lt!38368 (_1!1102 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))))))

(declare-fun lt!38367 () List!1514)

(assert (=> d!20617 (= lt!38368 (ListLongMap!1438 lt!38367))))

(declare-fun lt!38366 () Unit!2327)

(declare-fun lt!38365 () Unit!2327)

(assert (=> d!20617 (= lt!38366 lt!38365)))

(assert (=> d!20617 (= (getValueByKey!136 lt!38367 (_1!1102 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))) (Some!141 (_2!1102 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))))))

(assert (=> d!20617 (= lt!38365 (lemmaContainsTupThenGetReturnValue!56 lt!38367 (_1!1102 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))) (_2!1102 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))))))

(assert (=> d!20617 (= lt!38367 (insertStrictlySorted!59 (toList!734 lt!37693) (_1!1102 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))) (_2!1102 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))))))

(assert (=> d!20617 (= (+!104 lt!37693 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))) lt!38368)))

(declare-fun b!82187 () Bool)

(declare-fun res!42641 () Bool)

(assert (=> b!82187 (=> (not res!42641) (not e!53602))))

(assert (=> b!82187 (= res!42641 (= (getValueByKey!136 (toList!734 lt!38368) (_1!1102 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))) (Some!141 (_2!1102 (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))))))))

(declare-fun b!82188 () Bool)

(assert (=> b!82188 (= e!53602 (contains!745 (toList!734 lt!38368) (tuple2!2183 lt!37688 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))))))

(assert (= (and d!20617 res!42642) b!82187))

(assert (= (and b!82187 res!42641) b!82188))

(declare-fun m!84747 () Bool)

(assert (=> d!20617 m!84747))

(declare-fun m!84749 () Bool)

(assert (=> d!20617 m!84749))

(declare-fun m!84751 () Bool)

(assert (=> d!20617 m!84751))

(declare-fun m!84753 () Bool)

(assert (=> d!20617 m!84753))

(declare-fun m!84755 () Bool)

(assert (=> b!82187 m!84755))

(declare-fun m!84757 () Bool)

(assert (=> b!82188 m!84757))

(assert (=> b!80792 d!20617))

(declare-fun d!20619 () Bool)

(assert (=> d!20619 (= (apply!80 (+!104 lt!37694 (tuple2!2183 lt!37695 (minValue!2188 newMap!16))) lt!37692) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37694 (tuple2!2183 lt!37695 (minValue!2188 newMap!16)))) lt!37692)))))

(declare-fun bs!3479 () Bool)

(assert (= bs!3479 d!20619))

(declare-fun m!84759 () Bool)

(assert (=> bs!3479 m!84759))

(assert (=> bs!3479 m!84759))

(declare-fun m!84761 () Bool)

(assert (=> bs!3479 m!84761))

(assert (=> b!80792 d!20619))

(declare-fun d!20621 () Bool)

(assert (=> d!20621 (= (apply!80 (+!104 lt!37684 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))) lt!37690) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37684 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))) lt!37690)))))

(declare-fun bs!3480 () Bool)

(assert (= bs!3480 d!20621))

(declare-fun m!84763 () Bool)

(assert (=> bs!3480 m!84763))

(assert (=> bs!3480 m!84763))

(declare-fun m!84765 () Bool)

(assert (=> bs!3480 m!84765))

(assert (=> b!80792 d!20621))

(declare-fun d!20623 () Bool)

(assert (=> d!20623 (= (apply!80 (+!104 lt!37689 (tuple2!2183 lt!37680 (minValue!2188 newMap!16))) lt!37701) (apply!80 lt!37689 lt!37701))))

(declare-fun lt!38369 () Unit!2327)

(assert (=> d!20623 (= lt!38369 (choose!479 lt!37689 lt!37680 (minValue!2188 newMap!16) lt!37701))))

(declare-fun e!53603 () Bool)

(assert (=> d!20623 e!53603))

(declare-fun res!42643 () Bool)

(assert (=> d!20623 (=> (not res!42643) (not e!53603))))

(assert (=> d!20623 (= res!42643 (contains!742 lt!37689 lt!37701))))

(assert (=> d!20623 (= (addApplyDifferent!56 lt!37689 lt!37680 (minValue!2188 newMap!16) lt!37701) lt!38369)))

(declare-fun b!82189 () Bool)

(assert (=> b!82189 (= e!53603 (not (= lt!37701 lt!37680)))))

(assert (= (and d!20623 res!42643) b!82189))

(declare-fun m!84767 () Bool)

(assert (=> d!20623 m!84767))

(declare-fun m!84769 () Bool)

(assert (=> d!20623 m!84769))

(assert (=> d!20623 m!82349))

(assert (=> d!20623 m!82363))

(assert (=> d!20623 m!82349))

(assert (=> d!20623 m!82351))

(assert (=> b!80792 d!20623))

(declare-fun d!20625 () Bool)

(assert (=> d!20625 (= (apply!80 (+!104 lt!37684 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))) lt!37690) (apply!80 lt!37684 lt!37690))))

(declare-fun lt!38370 () Unit!2327)

(assert (=> d!20625 (= lt!38370 (choose!479 lt!37684 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) lt!37690))))

(declare-fun e!53604 () Bool)

(assert (=> d!20625 e!53604))

(declare-fun res!42644 () Bool)

(assert (=> d!20625 (=> (not res!42644) (not e!53604))))

(assert (=> d!20625 (= res!42644 (contains!742 lt!37684 lt!37690))))

(assert (=> d!20625 (= (addApplyDifferent!56 lt!37684 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)) lt!37690) lt!38370)))

(declare-fun b!82190 () Bool)

(assert (=> b!82190 (= e!53604 (not (= lt!37690 lt!37691)))))

(assert (= (and d!20625 res!42644) b!82190))

(declare-fun m!84771 () Bool)

(assert (=> d!20625 m!84771))

(declare-fun m!84773 () Bool)

(assert (=> d!20625 m!84773))

(assert (=> d!20625 m!82345))

(assert (=> d!20625 m!82365))

(assert (=> d!20625 m!82345))

(assert (=> d!20625 m!82347))

(assert (=> b!80792 d!20625))

(declare-fun d!20627 () Bool)

(declare-fun e!53605 () Bool)

(assert (=> d!20627 e!53605))

(declare-fun res!42646 () Bool)

(assert (=> d!20627 (=> (not res!42646) (not e!53605))))

(declare-fun lt!38374 () ListLongMap!1437)

(assert (=> d!20627 (= res!42646 (contains!742 lt!38374 (_1!1102 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))))))

(declare-fun lt!38373 () List!1514)

(assert (=> d!20627 (= lt!38374 (ListLongMap!1438 lt!38373))))

(declare-fun lt!38372 () Unit!2327)

(declare-fun lt!38371 () Unit!2327)

(assert (=> d!20627 (= lt!38372 lt!38371)))

(assert (=> d!20627 (= (getValueByKey!136 lt!38373 (_1!1102 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))) (Some!141 (_2!1102 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))))))

(assert (=> d!20627 (= lt!38371 (lemmaContainsTupThenGetReturnValue!56 lt!38373 (_1!1102 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))) (_2!1102 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))))))

(assert (=> d!20627 (= lt!38373 (insertStrictlySorted!59 (toList!734 lt!37684) (_1!1102 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))) (_2!1102 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))))))

(assert (=> d!20627 (= (+!104 lt!37684 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))) lt!38374)))

(declare-fun b!82191 () Bool)

(declare-fun res!42645 () Bool)

(assert (=> b!82191 (=> (not res!42645) (not e!53605))))

(assert (=> b!82191 (= res!42645 (= (getValueByKey!136 (toList!734 lt!38374) (_1!1102 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16))))) (Some!141 (_2!1102 (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))))))))

(declare-fun b!82192 () Bool)

(assert (=> b!82192 (= e!53605 (contains!745 (toList!734 lt!38374) (tuple2!2183 lt!37691 (ite (and c!12532 c!12534) lt!37084 (zeroValue!2188 newMap!16)))))))

(assert (= (and d!20627 res!42646) b!82191))

(assert (= (and b!82191 res!42645) b!82192))

(declare-fun m!84775 () Bool)

(assert (=> d!20627 m!84775))

(declare-fun m!84777 () Bool)

(assert (=> d!20627 m!84777))

(declare-fun m!84779 () Bool)

(assert (=> d!20627 m!84779))

(declare-fun m!84781 () Bool)

(assert (=> d!20627 m!84781))

(declare-fun m!84783 () Bool)

(assert (=> b!82191 m!84783))

(declare-fun m!84785 () Bool)

(assert (=> b!82192 m!84785))

(assert (=> b!80792 d!20627))

(declare-fun d!20629 () Bool)

(assert (=> d!20629 (= (apply!80 (+!104 lt!37694 (tuple2!2183 lt!37695 (minValue!2188 newMap!16))) lt!37692) (apply!80 lt!37694 lt!37692))))

(declare-fun lt!38375 () Unit!2327)

(assert (=> d!20629 (= lt!38375 (choose!479 lt!37694 lt!37695 (minValue!2188 newMap!16) lt!37692))))

(declare-fun e!53606 () Bool)

(assert (=> d!20629 e!53606))

(declare-fun res!42647 () Bool)

(assert (=> d!20629 (=> (not res!42647) (not e!53606))))

(assert (=> d!20629 (= res!42647 (contains!742 lt!37694 lt!37692))))

(assert (=> d!20629 (= (addApplyDifferent!56 lt!37694 lt!37695 (minValue!2188 newMap!16) lt!37692) lt!38375)))

(declare-fun b!82193 () Bool)

(assert (=> b!82193 (= e!53606 (not (= lt!37692 lt!37695)))))

(assert (= (and d!20629 res!42647) b!82193))

(declare-fun m!84787 () Bool)

(assert (=> d!20629 m!84787))

(declare-fun m!84789 () Bool)

(assert (=> d!20629 m!84789))

(assert (=> d!20629 m!82361))

(assert (=> d!20629 m!82339))

(assert (=> d!20629 m!82361))

(assert (=> d!20629 m!82369))

(assert (=> b!80792 d!20629))

(declare-fun d!20631 () Bool)

(assert (=> d!20631 (= (apply!80 lt!37684 lt!37690) (get!1187 (getValueByKey!136 (toList!734 lt!37684) lt!37690)))))

(declare-fun bs!3481 () Bool)

(assert (= bs!3481 d!20631))

(declare-fun m!84791 () Bool)

(assert (=> bs!3481 m!84791))

(assert (=> bs!3481 m!84791))

(declare-fun m!84793 () Bool)

(assert (=> bs!3481 m!84793))

(assert (=> b!80792 d!20631))

(declare-fun d!20633 () Bool)

(declare-fun e!53607 () Bool)

(assert (=> d!20633 e!53607))

(declare-fun res!42649 () Bool)

(assert (=> d!20633 (=> (not res!42649) (not e!53607))))

(declare-fun lt!38379 () ListLongMap!1437)

(assert (=> d!20633 (= res!42649 (contains!742 lt!38379 (_1!1102 (tuple2!2183 lt!37695 (minValue!2188 newMap!16)))))))

(declare-fun lt!38378 () List!1514)

(assert (=> d!20633 (= lt!38379 (ListLongMap!1438 lt!38378))))

(declare-fun lt!38377 () Unit!2327)

(declare-fun lt!38376 () Unit!2327)

(assert (=> d!20633 (= lt!38377 lt!38376)))

(assert (=> d!20633 (= (getValueByKey!136 lt!38378 (_1!1102 (tuple2!2183 lt!37695 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37695 (minValue!2188 newMap!16)))))))

(assert (=> d!20633 (= lt!38376 (lemmaContainsTupThenGetReturnValue!56 lt!38378 (_1!1102 (tuple2!2183 lt!37695 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37695 (minValue!2188 newMap!16)))))))

(assert (=> d!20633 (= lt!38378 (insertStrictlySorted!59 (toList!734 lt!37694) (_1!1102 (tuple2!2183 lt!37695 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37695 (minValue!2188 newMap!16)))))))

(assert (=> d!20633 (= (+!104 lt!37694 (tuple2!2183 lt!37695 (minValue!2188 newMap!16))) lt!38379)))

(declare-fun b!82194 () Bool)

(declare-fun res!42648 () Bool)

(assert (=> b!82194 (=> (not res!42648) (not e!53607))))

(assert (=> b!82194 (= res!42648 (= (getValueByKey!136 (toList!734 lt!38379) (_1!1102 (tuple2!2183 lt!37695 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37695 (minValue!2188 newMap!16))))))))

(declare-fun b!82195 () Bool)

(assert (=> b!82195 (= e!53607 (contains!745 (toList!734 lt!38379) (tuple2!2183 lt!37695 (minValue!2188 newMap!16))))))

(assert (= (and d!20633 res!42649) b!82194))

(assert (= (and b!82194 res!42648) b!82195))

(declare-fun m!84795 () Bool)

(assert (=> d!20633 m!84795))

(declare-fun m!84797 () Bool)

(assert (=> d!20633 m!84797))

(declare-fun m!84799 () Bool)

(assert (=> d!20633 m!84799))

(declare-fun m!84801 () Bool)

(assert (=> d!20633 m!84801))

(declare-fun m!84803 () Bool)

(assert (=> b!82194 m!84803))

(declare-fun m!84805 () Bool)

(assert (=> b!82195 m!84805))

(assert (=> b!80792 d!20633))

(declare-fun d!20635 () Bool)

(assert (=> d!20635 (= (apply!80 lt!37694 lt!37692) (get!1187 (getValueByKey!136 (toList!734 lt!37694) lt!37692)))))

(declare-fun bs!3482 () Bool)

(assert (= bs!3482 d!20635))

(declare-fun m!84807 () Bool)

(assert (=> bs!3482 m!84807))

(assert (=> bs!3482 m!84807))

(declare-fun m!84809 () Bool)

(assert (=> bs!3482 m!84809))

(assert (=> b!80792 d!20635))

(assert (=> b!80792 d!20321))

(declare-fun d!20637 () Bool)

(declare-fun e!53608 () Bool)

(assert (=> d!20637 e!53608))

(declare-fun res!42651 () Bool)

(assert (=> d!20637 (=> (not res!42651) (not e!53608))))

(declare-fun lt!38383 () ListLongMap!1437)

(assert (=> d!20637 (= res!42651 (contains!742 lt!38383 (_1!1102 (tuple2!2183 lt!37680 (minValue!2188 newMap!16)))))))

(declare-fun lt!38382 () List!1514)

(assert (=> d!20637 (= lt!38383 (ListLongMap!1438 lt!38382))))

(declare-fun lt!38381 () Unit!2327)

(declare-fun lt!38380 () Unit!2327)

(assert (=> d!20637 (= lt!38381 lt!38380)))

(assert (=> d!20637 (= (getValueByKey!136 lt!38382 (_1!1102 (tuple2!2183 lt!37680 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37680 (minValue!2188 newMap!16)))))))

(assert (=> d!20637 (= lt!38380 (lemmaContainsTupThenGetReturnValue!56 lt!38382 (_1!1102 (tuple2!2183 lt!37680 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37680 (minValue!2188 newMap!16)))))))

(assert (=> d!20637 (= lt!38382 (insertStrictlySorted!59 (toList!734 lt!37689) (_1!1102 (tuple2!2183 lt!37680 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37680 (minValue!2188 newMap!16)))))))

(assert (=> d!20637 (= (+!104 lt!37689 (tuple2!2183 lt!37680 (minValue!2188 newMap!16))) lt!38383)))

(declare-fun b!82196 () Bool)

(declare-fun res!42650 () Bool)

(assert (=> b!82196 (=> (not res!42650) (not e!53608))))

(assert (=> b!82196 (= res!42650 (= (getValueByKey!136 (toList!734 lt!38383) (_1!1102 (tuple2!2183 lt!37680 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37680 (minValue!2188 newMap!16))))))))

(declare-fun b!82197 () Bool)

(assert (=> b!82197 (= e!53608 (contains!745 (toList!734 lt!38383) (tuple2!2183 lt!37680 (minValue!2188 newMap!16))))))

(assert (= (and d!20637 res!42651) b!82196))

(assert (= (and b!82196 res!42650) b!82197))

(declare-fun m!84811 () Bool)

(assert (=> d!20637 m!84811))

(declare-fun m!84813 () Bool)

(assert (=> d!20637 m!84813))

(declare-fun m!84815 () Bool)

(assert (=> d!20637 m!84815))

(declare-fun m!84817 () Bool)

(assert (=> d!20637 m!84817))

(declare-fun m!84819 () Bool)

(assert (=> b!82196 m!84819))

(declare-fun m!84821 () Bool)

(assert (=> b!82197 m!84821))

(assert (=> b!80792 d!20637))

(assert (=> d!19853 d!19809))

(declare-fun d!20639 () Bool)

(assert (=> d!20639 (= (+!104 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37264 (zeroValue!2188 newMap!16) lt!37084 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(assert (=> d!20639 true))

(declare-fun _$8!70 () Unit!2327)

(assert (=> d!20639 (= (choose!487 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) lt!37264 (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) lt!37084 (defaultEntry!2292 newMap!16)) _$8!70)))

(declare-fun bs!3483 () Bool)

(assert (= bs!3483 d!20639))

(assert (=> bs!3483 m!81711))

(assert (=> bs!3483 m!81711))

(assert (=> bs!3483 m!82727))

(assert (=> bs!3483 m!82731))

(assert (=> d!19853 d!20639))

(declare-fun d!20641 () Bool)

(declare-fun e!53609 () Bool)

(assert (=> d!20641 e!53609))

(declare-fun res!42653 () Bool)

(assert (=> d!20641 (=> (not res!42653) (not e!53609))))

(declare-fun lt!38387 () ListLongMap!1437)

(assert (=> d!20641 (= res!42653 (contains!742 lt!38387 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084))))))

(declare-fun lt!38386 () List!1514)

(assert (=> d!20641 (= lt!38387 (ListLongMap!1438 lt!38386))))

(declare-fun lt!38385 () Unit!2327)

(declare-fun lt!38384 () Unit!2327)

(assert (=> d!20641 (= lt!38385 lt!38384)))

(assert (=> d!20641 (= (getValueByKey!136 lt!38386 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084))))))

(assert (=> d!20641 (= lt!38384 (lemmaContainsTupThenGetReturnValue!56 lt!38386 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084))))))

(assert (=> d!20641 (= lt!38386 (insertStrictlySorted!59 (toList!734 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084))))))

(assert (=> d!20641 (= (+!104 (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)) lt!38387)))

(declare-fun b!82198 () Bool)

(declare-fun res!42652 () Bool)

(assert (=> b!82198 (=> (not res!42652) (not e!53609))))

(assert (=> b!82198 (= res!42652 (= (getValueByKey!136 (toList!734 lt!38387) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)))))))

(declare-fun b!82199 () Bool)

(assert (=> b!82199 (= e!53609 (contains!745 (toList!734 lt!38387) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)))))

(assert (= (and d!20641 res!42653) b!82198))

(assert (= (and b!82198 res!42652) b!82199))

(declare-fun m!84823 () Bool)

(assert (=> d!20641 m!84823))

(declare-fun m!84825 () Bool)

(assert (=> d!20641 m!84825))

(declare-fun m!84827 () Bool)

(assert (=> d!20641 m!84827))

(declare-fun m!84829 () Bool)

(assert (=> d!20641 m!84829))

(declare-fun m!84831 () Bool)

(assert (=> b!82198 m!84831))

(declare-fun m!84833 () Bool)

(assert (=> b!82199 m!84833))

(assert (=> d!19853 d!20641))

(declare-fun b!82200 () Bool)

(declare-fun e!53617 () Bool)

(assert (=> b!82200 (= e!53617 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82201 () Bool)

(declare-fun e!53610 () Unit!2327)

(declare-fun lt!38393 () Unit!2327)

(assert (=> b!82201 (= e!53610 lt!38393)))

(declare-fun lt!38401 () ListLongMap!1437)

(assert (=> b!82201 (= lt!38401 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37264 (zeroValue!2188 newMap!16) lt!37084 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38396 () (_ BitVec 64))

(assert (=> b!82201 (= lt!38396 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38389 () (_ BitVec 64))

(assert (=> b!82201 (= lt!38389 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38405 () Unit!2327)

(assert (=> b!82201 (= lt!38405 (addStillContains!56 lt!38401 lt!38396 (zeroValue!2188 newMap!16) lt!38389))))

(assert (=> b!82201 (contains!742 (+!104 lt!38401 (tuple2!2183 lt!38396 (zeroValue!2188 newMap!16))) lt!38389)))

(declare-fun lt!38408 () Unit!2327)

(assert (=> b!82201 (= lt!38408 lt!38405)))

(declare-fun lt!38397 () ListLongMap!1437)

(assert (=> b!82201 (= lt!38397 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37264 (zeroValue!2188 newMap!16) lt!37084 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38388 () (_ BitVec 64))

(assert (=> b!82201 (= lt!38388 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38409 () (_ BitVec 64))

(assert (=> b!82201 (= lt!38409 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38395 () Unit!2327)

(assert (=> b!82201 (= lt!38395 (addApplyDifferent!56 lt!38397 lt!38388 lt!37084 lt!38409))))

(assert (=> b!82201 (= (apply!80 (+!104 lt!38397 (tuple2!2183 lt!38388 lt!37084)) lt!38409) (apply!80 lt!38397 lt!38409))))

(declare-fun lt!38406 () Unit!2327)

(assert (=> b!82201 (= lt!38406 lt!38395)))

(declare-fun lt!38392 () ListLongMap!1437)

(assert (=> b!82201 (= lt!38392 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37264 (zeroValue!2188 newMap!16) lt!37084 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38399 () (_ BitVec 64))

(assert (=> b!82201 (= lt!38399 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38398 () (_ BitVec 64))

(assert (=> b!82201 (= lt!38398 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38407 () Unit!2327)

(assert (=> b!82201 (= lt!38407 (addApplyDifferent!56 lt!38392 lt!38399 (zeroValue!2188 newMap!16) lt!38398))))

(assert (=> b!82201 (= (apply!80 (+!104 lt!38392 (tuple2!2183 lt!38399 (zeroValue!2188 newMap!16))) lt!38398) (apply!80 lt!38392 lt!38398))))

(declare-fun lt!38404 () Unit!2327)

(assert (=> b!82201 (= lt!38404 lt!38407)))

(declare-fun lt!38402 () ListLongMap!1437)

(assert (=> b!82201 (= lt!38402 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37264 (zeroValue!2188 newMap!16) lt!37084 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38403 () (_ BitVec 64))

(assert (=> b!82201 (= lt!38403 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38400 () (_ BitVec 64))

(assert (=> b!82201 (= lt!38400 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!82201 (= lt!38393 (addApplyDifferent!56 lt!38402 lt!38403 lt!37084 lt!38400))))

(assert (=> b!82201 (= (apply!80 (+!104 lt!38402 (tuple2!2183 lt!38403 lt!37084)) lt!38400) (apply!80 lt!38402 lt!38400))))

(declare-fun b!82202 () Bool)

(declare-fun e!53616 () ListLongMap!1437)

(declare-fun call!7679 () ListLongMap!1437)

(assert (=> b!82202 (= e!53616 call!7679)))

(declare-fun bm!7674 () Bool)

(declare-fun call!7678 () ListLongMap!1437)

(declare-fun call!7677 () ListLongMap!1437)

(assert (=> bm!7674 (= call!7678 call!7677)))

(declare-fun bm!7675 () Bool)

(declare-fun call!7681 () Bool)

(declare-fun lt!38390 () ListLongMap!1437)

(assert (=> bm!7675 (= call!7681 (contains!742 lt!38390 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82203 () Bool)

(declare-fun e!53614 () Bool)

(declare-fun call!7683 () Bool)

(assert (=> b!82203 (= e!53614 (not call!7683))))

(declare-fun b!82204 () Bool)

(declare-fun e!53619 () Bool)

(assert (=> b!82204 (= e!53619 (not call!7681))))

(declare-fun b!82205 () Bool)

(declare-fun e!53613 () ListLongMap!1437)

(declare-fun call!7682 () ListLongMap!1437)

(assert (=> b!82205 (= e!53613 (+!104 call!7682 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084)))))

(declare-fun d!20643 () Bool)

(declare-fun e!53621 () Bool)

(assert (=> d!20643 e!53621))

(declare-fun res!42658 () Bool)

(assert (=> d!20643 (=> (not res!42658) (not e!53621))))

(assert (=> d!20643 (= res!42658 (or (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))))

(declare-fun lt!38394 () ListLongMap!1437)

(assert (=> d!20643 (= lt!38390 lt!38394)))

(declare-fun lt!38391 () Unit!2327)

(assert (=> d!20643 (= lt!38391 e!53610)))

(declare-fun c!13064 () Bool)

(assert (=> d!20643 (= c!13064 e!53617)))

(declare-fun res!42655 () Bool)

(assert (=> d!20643 (=> (not res!42655) (not e!53617))))

(assert (=> d!20643 (= res!42655 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!20643 (= lt!38394 e!53613)))

(declare-fun c!13066 () Bool)

(assert (=> d!20643 (= c!13066 (and (not (= (bvand lt!37264 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!37264 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20643 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!20643 (= (getCurrentListMap!423 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37264 (zeroValue!2188 newMap!16) lt!37084 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38390)))

(declare-fun bm!7676 () Bool)

(assert (=> bm!7676 (= call!7683 (contains!742 lt!38390 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7677 () Bool)

(assert (=> bm!7677 (= call!7679 call!7678)))

(declare-fun b!82206 () Bool)

(declare-fun e!53620 () Bool)

(assert (=> b!82206 (= e!53620 (= (apply!80 lt!38390 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82206 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (_values!2275 newMap!16))))))

(assert (=> b!82206 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!82207 () Bool)

(declare-fun res!42656 () Bool)

(assert (=> b!82207 (=> (not res!42656) (not e!53621))))

(declare-fun e!53612 () Bool)

(assert (=> b!82207 (= res!42656 e!53612)))

(declare-fun res!42659 () Bool)

(assert (=> b!82207 (=> res!42659 e!53612)))

(declare-fun e!53622 () Bool)

(assert (=> b!82207 (= res!42659 (not e!53622))))

(declare-fun res!42654 () Bool)

(assert (=> b!82207 (=> (not res!42654) (not e!53622))))

(assert (=> b!82207 (= res!42654 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!82208 () Bool)

(declare-fun e!53615 () Bool)

(assert (=> b!82208 (= e!53615 (= (apply!80 lt!38390 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37084))))

(declare-fun b!82209 () Bool)

(assert (=> b!82209 (= e!53622 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7678 () Bool)

(declare-fun call!7680 () ListLongMap!1437)

(assert (=> bm!7678 (= call!7680 call!7682)))

(declare-fun b!82210 () Bool)

(assert (=> b!82210 (= e!53619 e!53615)))

(declare-fun res!42662 () Bool)

(assert (=> b!82210 (= res!42662 call!7681)))

(assert (=> b!82210 (=> (not res!42662) (not e!53615))))

(declare-fun b!82211 () Bool)

(assert (=> b!82211 (= e!53616 call!7680)))

(declare-fun b!82212 () Bool)

(assert (=> b!82212 (= e!53621 e!53619)))

(declare-fun c!13063 () Bool)

(assert (=> b!82212 (= c!13063 (not (= (bvand lt!37264 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!82213 () Bool)

(assert (=> b!82213 (= e!53612 e!53620)))

(declare-fun res!42657 () Bool)

(assert (=> b!82213 (=> (not res!42657) (not e!53620))))

(assert (=> b!82213 (= res!42657 (contains!742 lt!38390 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82213 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!82214 () Bool)

(declare-fun res!42660 () Bool)

(assert (=> b!82214 (=> (not res!42660) (not e!53621))))

(assert (=> b!82214 (= res!42660 e!53614)))

(declare-fun c!13067 () Bool)

(assert (=> b!82214 (= c!13067 (not (= (bvand lt!37264 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!82215 () Bool)

(declare-fun e!53611 () ListLongMap!1437)

(assert (=> b!82215 (= e!53611 call!7680)))

(declare-fun b!82216 () Bool)

(declare-fun c!13065 () Bool)

(assert (=> b!82216 (= c!13065 (and (not (= (bvand lt!37264 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!37264 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!82216 (= e!53611 e!53616)))

(declare-fun c!13068 () Bool)

(declare-fun bm!7679 () Bool)

(assert (=> bm!7679 (= call!7682 (+!104 (ite c!13066 call!7677 (ite c!13068 call!7678 call!7679)) (ite (or c!13066 c!13068) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37084))))))

(declare-fun bm!7680 () Bool)

(assert (=> bm!7680 (= call!7677 (getCurrentListMapNoExtraKeys!68 (_keys!3955 newMap!16) (_values!2275 newMap!16) (mask!6297 newMap!16) lt!37264 (zeroValue!2188 newMap!16) lt!37084 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!82217 () Bool)

(declare-fun e!53618 () Bool)

(assert (=> b!82217 (= e!53614 e!53618)))

(declare-fun res!42661 () Bool)

(assert (=> b!82217 (= res!42661 call!7683)))

(assert (=> b!82217 (=> (not res!42661) (not e!53618))))

(declare-fun b!82218 () Bool)

(assert (=> b!82218 (= e!53613 e!53611)))

(assert (=> b!82218 (= c!13068 (and (not (= (bvand lt!37264 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!37264 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!82219 () Bool)

(assert (=> b!82219 (= e!53618 (= (apply!80 lt!38390 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!82220 () Bool)

(declare-fun Unit!2407 () Unit!2327)

(assert (=> b!82220 (= e!53610 Unit!2407)))

(assert (= (and d!20643 c!13066) b!82205))

(assert (= (and d!20643 (not c!13066)) b!82218))

(assert (= (and b!82218 c!13068) b!82215))

(assert (= (and b!82218 (not c!13068)) b!82216))

(assert (= (and b!82216 c!13065) b!82211))

(assert (= (and b!82216 (not c!13065)) b!82202))

(assert (= (or b!82211 b!82202) bm!7677))

(assert (= (or b!82215 bm!7677) bm!7674))

(assert (= (or b!82215 b!82211) bm!7678))

(assert (= (or b!82205 bm!7674) bm!7680))

(assert (= (or b!82205 bm!7678) bm!7679))

(assert (= (and d!20643 res!42655) b!82200))

(assert (= (and d!20643 c!13064) b!82201))

(assert (= (and d!20643 (not c!13064)) b!82220))

(assert (= (and d!20643 res!42658) b!82207))

(assert (= (and b!82207 res!42654) b!82209))

(assert (= (and b!82207 (not res!42659)) b!82213))

(assert (= (and b!82213 res!42657) b!82206))

(assert (= (and b!82207 res!42656) b!82214))

(assert (= (and b!82214 c!13067) b!82217))

(assert (= (and b!82214 (not c!13067)) b!82203))

(assert (= (and b!82217 res!42661) b!82219))

(assert (= (or b!82217 b!82203) bm!7676))

(assert (= (and b!82214 res!42660) b!82212))

(assert (= (and b!82212 c!13063) b!82210))

(assert (= (and b!82212 (not c!13063)) b!82204))

(assert (= (and b!82210 res!42662) b!82208))

(assert (= (or b!82210 b!82204) bm!7675))

(declare-fun b_lambda!3641 () Bool)

(assert (=> (not b_lambda!3641) (not b!82206)))

(assert (=> b!82206 t!5186))

(declare-fun b_and!4997 () Bool)

(assert (= b_and!4993 (and (=> t!5186 result!2849) b_and!4997)))

(assert (=> b!82206 t!5188))

(declare-fun b_and!4999 () Bool)

(assert (= b_and!4995 (and (=> t!5188 result!2851) b_and!4999)))

(assert (=> b!82206 m!82131))

(declare-fun m!84835 () Bool)

(assert (=> b!82206 m!84835))

(assert (=> b!82206 m!82131))

(assert (=> b!82206 m!82333))

(assert (=> b!82206 m!82333))

(assert (=> b!82206 m!82137))

(assert (=> b!82206 m!82335))

(assert (=> b!82206 m!82137))

(declare-fun m!84837 () Bool)

(assert (=> bm!7676 m!84837))

(assert (=> b!82209 m!82131))

(assert (=> b!82209 m!82131))

(assert (=> b!82209 m!82143))

(declare-fun m!84839 () Bool)

(assert (=> b!82201 m!84839))

(declare-fun m!84841 () Bool)

(assert (=> b!82201 m!84841))

(declare-fun m!84843 () Bool)

(assert (=> b!82201 m!84843))

(declare-fun m!84845 () Bool)

(assert (=> b!82201 m!84845))

(declare-fun m!84847 () Bool)

(assert (=> b!82201 m!84847))

(declare-fun m!84849 () Bool)

(assert (=> b!82201 m!84849))

(declare-fun m!84851 () Bool)

(assert (=> b!82201 m!84851))

(declare-fun m!84853 () Bool)

(assert (=> b!82201 m!84853))

(declare-fun m!84855 () Bool)

(assert (=> b!82201 m!84855))

(declare-fun m!84857 () Bool)

(assert (=> b!82201 m!84857))

(declare-fun m!84859 () Bool)

(assert (=> b!82201 m!84859))

(declare-fun m!84861 () Bool)

(assert (=> b!82201 m!84861))

(declare-fun m!84863 () Bool)

(assert (=> b!82201 m!84863))

(assert (=> b!82201 m!84845))

(assert (=> b!82201 m!84855))

(assert (=> b!82201 m!82131))

(declare-fun m!84865 () Bool)

(assert (=> b!82201 m!84865))

(assert (=> b!82201 m!84849))

(declare-fun m!84867 () Bool)

(assert (=> b!82201 m!84867))

(assert (=> b!82201 m!84861))

(declare-fun m!84869 () Bool)

(assert (=> b!82201 m!84869))

(assert (=> b!82213 m!82131))

(assert (=> b!82213 m!82131))

(declare-fun m!84871 () Bool)

(assert (=> b!82213 m!84871))

(declare-fun m!84873 () Bool)

(assert (=> b!82205 m!84873))

(declare-fun m!84875 () Bool)

(assert (=> bm!7675 m!84875))

(declare-fun m!84877 () Bool)

(assert (=> b!82208 m!84877))

(assert (=> bm!7680 m!84841))

(declare-fun m!84879 () Bool)

(assert (=> bm!7679 m!84879))

(declare-fun m!84881 () Bool)

(assert (=> b!82219 m!84881))

(assert (=> b!82200 m!82131))

(assert (=> b!82200 m!82131))

(assert (=> b!82200 m!82143))

(assert (=> d!20643 m!81973))

(assert (=> d!19853 d!20643))

(assert (=> d!19853 d!19885))

(declare-fun d!20645 () Bool)

(declare-fun res!42663 () Bool)

(declare-fun e!53623 () Bool)

(assert (=> d!20645 (=> res!42663 e!53623)))

(assert (=> d!20645 (= res!42663 (and ((_ is Cons!1510) (toList!734 lt!37301)) (= (_1!1102 (h!2099 (toList!734 lt!37301))) (_1!1102 lt!37082))))))

(assert (=> d!20645 (= (containsKey!140 (toList!734 lt!37301) (_1!1102 lt!37082)) e!53623)))

(declare-fun b!82221 () Bool)

(declare-fun e!53624 () Bool)

(assert (=> b!82221 (= e!53623 e!53624)))

(declare-fun res!42664 () Bool)

(assert (=> b!82221 (=> (not res!42664) (not e!53624))))

(assert (=> b!82221 (= res!42664 (and (or (not ((_ is Cons!1510) (toList!734 lt!37301))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37301))) (_1!1102 lt!37082))) ((_ is Cons!1510) (toList!734 lt!37301)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37301))) (_1!1102 lt!37082))))))

(declare-fun b!82222 () Bool)

(assert (=> b!82222 (= e!53624 (containsKey!140 (t!5172 (toList!734 lt!37301)) (_1!1102 lt!37082)))))

(assert (= (and d!20645 (not res!42663)) b!82221))

(assert (= (and b!82221 res!42664) b!82222))

(declare-fun m!84883 () Bool)

(assert (=> b!82222 m!84883))

(assert (=> d!19623 d!20645))

(declare-fun d!20647 () Bool)

(declare-fun res!42665 () Bool)

(declare-fun e!53625 () Bool)

(assert (=> d!20647 (=> res!42665 e!53625)))

(assert (=> d!20647 (= res!42665 (and ((_ is Cons!1510) lt!37349) (= (_1!1102 (h!2099 lt!37349)) (_1!1102 lt!37079))))))

(assert (=> d!20647 (= (containsKey!140 lt!37349 (_1!1102 lt!37079)) e!53625)))

(declare-fun b!82223 () Bool)

(declare-fun e!53626 () Bool)

(assert (=> b!82223 (= e!53625 e!53626)))

(declare-fun res!42666 () Bool)

(assert (=> b!82223 (=> (not res!42666) (not e!53626))))

(assert (=> b!82223 (= res!42666 (and (or (not ((_ is Cons!1510) lt!37349)) (bvsle (_1!1102 (h!2099 lt!37349)) (_1!1102 lt!37079))) ((_ is Cons!1510) lt!37349) (bvslt (_1!1102 (h!2099 lt!37349)) (_1!1102 lt!37079))))))

(declare-fun b!82224 () Bool)

(assert (=> b!82224 (= e!53626 (containsKey!140 (t!5172 lt!37349) (_1!1102 lt!37079)))))

(assert (= (and d!20647 (not res!42665)) b!82223))

(assert (= (and b!82223 res!42666) b!82224))

(declare-fun m!84885 () Bool)

(assert (=> b!82224 m!84885))

(assert (=> b!80581 d!20647))

(assert (=> b!80688 d!19683))

(declare-fun d!20649 () Bool)

(declare-fun res!42667 () Bool)

(declare-fun e!53627 () Bool)

(assert (=> d!20649 (=> res!42667 e!53627)))

(assert (=> d!20649 (= res!42667 (and ((_ is Cons!1510) lt!37341) (= (_1!1102 (h!2099 lt!37341)) (_1!1102 lt!37082))))))

(assert (=> d!20649 (= (containsKey!140 lt!37341 (_1!1102 lt!37082)) e!53627)))

(declare-fun b!82225 () Bool)

(declare-fun e!53628 () Bool)

(assert (=> b!82225 (= e!53627 e!53628)))

(declare-fun res!42668 () Bool)

(assert (=> b!82225 (=> (not res!42668) (not e!53628))))

(assert (=> b!82225 (= res!42668 (and (or (not ((_ is Cons!1510) lt!37341)) (bvsle (_1!1102 (h!2099 lt!37341)) (_1!1102 lt!37082))) ((_ is Cons!1510) lt!37341) (bvslt (_1!1102 (h!2099 lt!37341)) (_1!1102 lt!37082))))))

(declare-fun b!82226 () Bool)

(assert (=> b!82226 (= e!53628 (containsKey!140 (t!5172 lt!37341) (_1!1102 lt!37082)))))

(assert (= (and d!20649 (not res!42667)) b!82225))

(assert (= (and b!82225 res!42668) b!82226))

(declare-fun m!84887 () Bool)

(assert (=> b!82226 m!84887))

(assert (=> b!81032 d!20649))

(assert (=> d!19815 d!19813))

(declare-fun d!20651 () Bool)

(assert (=> d!20651 (= (getValueByKey!136 lt!37315 (_1!1102 lt!37082)) (Some!141 (_2!1102 lt!37082)))))

(assert (=> d!20651 true))

(declare-fun _$22!405 () Unit!2327)

(assert (=> d!20651 (= (choose!477 lt!37315 (_1!1102 lt!37082) (_2!1102 lt!37082)) _$22!405)))

(declare-fun bs!3484 () Bool)

(assert (= bs!3484 d!20651))

(assert (=> bs!3484 m!81603))

(assert (=> d!19815 d!20651))

(declare-fun d!20653 () Bool)

(declare-fun res!42669 () Bool)

(declare-fun e!53629 () Bool)

(assert (=> d!20653 (=> res!42669 e!53629)))

(assert (=> d!20653 (= res!42669 (or ((_ is Nil!1511) lt!37315) ((_ is Nil!1511) (t!5172 lt!37315))))))

(assert (=> d!20653 (= (isStrictlySorted!291 lt!37315) e!53629)))

(declare-fun b!82227 () Bool)

(declare-fun e!53630 () Bool)

(assert (=> b!82227 (= e!53629 e!53630)))

(declare-fun res!42670 () Bool)

(assert (=> b!82227 (=> (not res!42670) (not e!53630))))

(assert (=> b!82227 (= res!42670 (bvslt (_1!1102 (h!2099 lt!37315)) (_1!1102 (h!2099 (t!5172 lt!37315)))))))

(declare-fun b!82228 () Bool)

(assert (=> b!82228 (= e!53630 (isStrictlySorted!291 (t!5172 lt!37315)))))

(assert (= (and d!20653 (not res!42669)) b!82227))

(assert (= (and b!82227 res!42670) b!82228))

(declare-fun m!84889 () Bool)

(assert (=> b!82228 m!84889))

(assert (=> d!19815 d!20653))

(declare-fun d!20655 () Bool)

(declare-fun res!42671 () Bool)

(declare-fun e!53631 () Bool)

(assert (=> d!20655 (=> res!42671 e!53631)))

(assert (=> d!20655 (= res!42671 (and ((_ is Cons!1510) lt!37311) (= (_1!1102 (h!2099 lt!37311)) (_1!1102 lt!37079))))))

(assert (=> d!20655 (= (containsKey!140 lt!37311 (_1!1102 lt!37079)) e!53631)))

(declare-fun b!82229 () Bool)

(declare-fun e!53632 () Bool)

(assert (=> b!82229 (= e!53631 e!53632)))

(declare-fun res!42672 () Bool)

(assert (=> b!82229 (=> (not res!42672) (not e!53632))))

(assert (=> b!82229 (= res!42672 (and (or (not ((_ is Cons!1510) lt!37311)) (bvsle (_1!1102 (h!2099 lt!37311)) (_1!1102 lt!37079))) ((_ is Cons!1510) lt!37311) (bvslt (_1!1102 (h!2099 lt!37311)) (_1!1102 lt!37079))))))

(declare-fun b!82230 () Bool)

(assert (=> b!82230 (= e!53632 (containsKey!140 (t!5172 lt!37311) (_1!1102 lt!37079)))))

(assert (= (and d!20655 (not res!42671)) b!82229))

(assert (= (and b!82229 res!42672) b!82230))

(declare-fun m!84891 () Bool)

(assert (=> b!82230 m!84891))

(assert (=> b!80865 d!20655))

(declare-fun d!20657 () Bool)

(assert (=> d!20657 (= (apply!80 lt!37682 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1187 (getValueByKey!136 (toList!734 lt!37682) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3485 () Bool)

(assert (= bs!3485 d!20657))

(assert (=> bs!3485 m!84599))

(assert (=> bs!3485 m!84599))

(declare-fun m!84893 () Bool)

(assert (=> bs!3485 m!84893))

(assert (=> b!80810 d!20657))

(assert (=> d!19749 d!19885))

(declare-fun d!20659 () Bool)

(assert (=> d!20659 (= (size!2137 newMap!16) (bvadd (_size!417 newMap!16) (bvsdiv (bvadd (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!81012 d!20659))

(declare-fun d!20661 () Bool)

(assert (=> d!20661 (arrayContainsKey!0 (_keys!3955 newMap!16) lt!37842 #b00000000000000000000000000000000)))

(declare-fun lt!38410 () Unit!2327)

(assert (=> d!20661 (= lt!38410 (choose!13 (_keys!3955 newMap!16) lt!37842 #b00000000000000000000000000000000))))

(assert (=> d!20661 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!20661 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3955 newMap!16) lt!37842 #b00000000000000000000000000000000) lt!38410)))

(declare-fun bs!3486 () Bool)

(assert (= bs!3486 d!20661))

(assert (=> bs!3486 m!82777))

(declare-fun m!84895 () Bool)

(assert (=> bs!3486 m!84895))

(assert (=> b!81055 d!20661))

(declare-fun d!20663 () Bool)

(declare-fun res!42673 () Bool)

(declare-fun e!53633 () Bool)

(assert (=> d!20663 (=> res!42673 e!53633)))

(assert (=> d!20663 (= res!42673 (= (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) lt!37842))))

(assert (=> d!20663 (= (arrayContainsKey!0 (_keys!3955 newMap!16) lt!37842 #b00000000000000000000000000000000) e!53633)))

(declare-fun b!82231 () Bool)

(declare-fun e!53634 () Bool)

(assert (=> b!82231 (= e!53633 e!53634)))

(declare-fun res!42674 () Bool)

(assert (=> b!82231 (=> (not res!42674) (not e!53634))))

(assert (=> b!82231 (= res!42674 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2131 (_keys!3955 newMap!16))))))

(declare-fun b!82232 () Bool)

(assert (=> b!82232 (= e!53634 (arrayContainsKey!0 (_keys!3955 newMap!16) lt!37842 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!20663 (not res!42673)) b!82231))

(assert (= (and b!82231 res!42674) b!82232))

(assert (=> d!20663 m!82131))

(declare-fun m!84897 () Bool)

(assert (=> b!82232 m!84897))

(assert (=> b!81055 d!20663))

(declare-fun b!82233 () Bool)

(declare-fun e!53635 () SeekEntryResult!244)

(declare-fun e!53637 () SeekEntryResult!244)

(assert (=> b!82233 (= e!53635 e!53637)))

(declare-fun lt!38412 () (_ BitVec 64))

(declare-fun lt!38413 () SeekEntryResult!244)

(assert (=> b!82233 (= lt!38412 (select (arr!1888 (_keys!3955 newMap!16)) (index!3113 lt!38413)))))

(declare-fun c!13070 () Bool)

(assert (=> b!82233 (= c!13070 (= lt!38412 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82234 () Bool)

(declare-fun c!13069 () Bool)

(assert (=> b!82234 (= c!13069 (= lt!38412 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53636 () SeekEntryResult!244)

(assert (=> b!82234 (= e!53637 e!53636)))

(declare-fun d!20665 () Bool)

(declare-fun lt!38411 () SeekEntryResult!244)

(assert (=> d!20665 (and (or ((_ is Undefined!244) lt!38411) (not ((_ is Found!244) lt!38411)) (and (bvsge (index!3112 lt!38411) #b00000000000000000000000000000000) (bvslt (index!3112 lt!38411) (size!2131 (_keys!3955 newMap!16))))) (or ((_ is Undefined!244) lt!38411) ((_ is Found!244) lt!38411) (not ((_ is MissingZero!244) lt!38411)) (and (bvsge (index!3111 lt!38411) #b00000000000000000000000000000000) (bvslt (index!3111 lt!38411) (size!2131 (_keys!3955 newMap!16))))) (or ((_ is Undefined!244) lt!38411) ((_ is Found!244) lt!38411) ((_ is MissingZero!244) lt!38411) (not ((_ is MissingVacant!244) lt!38411)) (and (bvsge (index!3114 lt!38411) #b00000000000000000000000000000000) (bvslt (index!3114 lt!38411) (size!2131 (_keys!3955 newMap!16))))) (or ((_ is Undefined!244) lt!38411) (ite ((_ is Found!244) lt!38411) (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3112 lt!38411)) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!244) lt!38411) (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3111 lt!38411)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!244) lt!38411) (= (select (arr!1888 (_keys!3955 newMap!16)) (index!3114 lt!38411)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20665 (= lt!38411 e!53635)))

(declare-fun c!13071 () Bool)

(assert (=> d!20665 (= c!13071 (and ((_ is Intermediate!244) lt!38413) (undefined!1056 lt!38413)))))

(assert (=> d!20665 (= lt!38413 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) (mask!6297 newMap!16)) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(assert (=> d!20665 (validMask!0 (mask!6297 newMap!16))))

(assert (=> d!20665 (= (seekEntryOrOpen!0 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) (_keys!3955 newMap!16) (mask!6297 newMap!16)) lt!38411)))

(declare-fun b!82235 () Bool)

(assert (=> b!82235 (= e!53636 (seekKeyOrZeroReturnVacant!0 (x!11694 lt!38413) (index!3113 lt!38413) (index!3113 lt!38413) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) (_keys!3955 newMap!16) (mask!6297 newMap!16)))))

(declare-fun b!82236 () Bool)

(assert (=> b!82236 (= e!53635 Undefined!244)))

(declare-fun b!82237 () Bool)

(assert (=> b!82237 (= e!53636 (MissingZero!244 (index!3113 lt!38413)))))

(declare-fun b!82238 () Bool)

(assert (=> b!82238 (= e!53637 (Found!244 (index!3113 lt!38413)))))

(assert (= (and d!20665 c!13071) b!82236))

(assert (= (and d!20665 (not c!13071)) b!82233))

(assert (= (and b!82233 c!13070) b!82238))

(assert (= (and b!82233 (not c!13070)) b!82234))

(assert (= (and b!82234 c!13069) b!82237))

(assert (= (and b!82234 (not c!13069)) b!82235))

(declare-fun m!84899 () Bool)

(assert (=> b!82233 m!84899))

(assert (=> d!20665 m!82131))

(declare-fun m!84901 () Bool)

(assert (=> d!20665 m!84901))

(assert (=> d!20665 m!84901))

(assert (=> d!20665 m!82131))

(declare-fun m!84903 () Bool)

(assert (=> d!20665 m!84903))

(declare-fun m!84905 () Bool)

(assert (=> d!20665 m!84905))

(assert (=> d!20665 m!81973))

(declare-fun m!84907 () Bool)

(assert (=> d!20665 m!84907))

(declare-fun m!84909 () Bool)

(assert (=> d!20665 m!84909))

(assert (=> b!82235 m!82131))

(declare-fun m!84911 () Bool)

(assert (=> b!82235 m!84911))

(assert (=> b!81055 d!20665))

(declare-fun d!20667 () Bool)

(assert (=> d!20667 (= (get!1187 (getValueByKey!136 (toList!734 lt!37413) lt!37425)) (v!2606 (getValueByKey!136 (toList!734 lt!37413) lt!37425)))))

(assert (=> d!19639 d!20667))

(declare-fun b!82242 () Bool)

(declare-fun e!53639 () Option!142)

(assert (=> b!82242 (= e!53639 None!140)))

(declare-fun b!82239 () Bool)

(declare-fun e!53638 () Option!142)

(assert (=> b!82239 (= e!53638 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37413)))))))

(declare-fun b!82241 () Bool)

(assert (=> b!82241 (= e!53639 (getValueByKey!136 (t!5172 (toList!734 lt!37413)) lt!37425))))

(declare-fun d!20669 () Bool)

(declare-fun c!13072 () Bool)

(assert (=> d!20669 (= c!13072 (and ((_ is Cons!1510) (toList!734 lt!37413)) (= (_1!1102 (h!2099 (toList!734 lt!37413))) lt!37425)))))

(assert (=> d!20669 (= (getValueByKey!136 (toList!734 lt!37413) lt!37425) e!53638)))

(declare-fun b!82240 () Bool)

(assert (=> b!82240 (= e!53638 e!53639)))

(declare-fun c!13073 () Bool)

(assert (=> b!82240 (= c!13073 (and ((_ is Cons!1510) (toList!734 lt!37413)) (not (= (_1!1102 (h!2099 (toList!734 lt!37413))) lt!37425))))))

(assert (= (and d!20669 c!13072) b!82239))

(assert (= (and d!20669 (not c!13072)) b!82240))

(assert (= (and b!82240 c!13073) b!82241))

(assert (= (and b!82240 (not c!13073)) b!82242))

(declare-fun m!84913 () Bool)

(assert (=> b!82241 m!84913))

(assert (=> d!19639 d!20669))

(declare-fun d!20671 () Bool)

(assert (=> d!20671 (= ($colon$colon!69 e!52773 (ite c!12667 (h!2099 (toList!734 lt!37071)) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075)))) (Cons!1510 (ite c!12667 (h!2099 (toList!734 lt!37071)) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))) e!52773))))

(assert (=> bm!7528 d!20671))

(assert (=> d!19735 d!19733))

(assert (=> d!19735 d!19731))

(declare-fun d!20673 () Bool)

(assert (=> d!20673 (not (contains!742 (+!104 lt!37334 (tuple2!2183 lt!37335 lt!37336)) lt!37332))))

(assert (=> d!20673 true))

(declare-fun _$36!307 () Unit!2327)

(assert (=> d!20673 (= (choose!483 lt!37334 lt!37335 lt!37336 lt!37332) _$36!307)))

(declare-fun bs!3487 () Bool)

(assert (= bs!3487 d!20673))

(assert (=> bs!3487 m!81613))

(assert (=> bs!3487 m!81613))

(assert (=> bs!3487 m!81623))

(assert (=> d!19735 d!20673))

(declare-fun d!20675 () Bool)

(declare-fun e!53640 () Bool)

(assert (=> d!20675 e!53640))

(declare-fun res!42675 () Bool)

(assert (=> d!20675 (=> res!42675 e!53640)))

(declare-fun lt!38417 () Bool)

(assert (=> d!20675 (= res!42675 (not lt!38417))))

(declare-fun lt!38416 () Bool)

(assert (=> d!20675 (= lt!38417 lt!38416)))

(declare-fun lt!38415 () Unit!2327)

(declare-fun e!53641 () Unit!2327)

(assert (=> d!20675 (= lt!38415 e!53641)))

(declare-fun c!13074 () Bool)

(assert (=> d!20675 (= c!13074 lt!38416)))

(assert (=> d!20675 (= lt!38416 (containsKey!140 (toList!734 lt!37334) lt!37332))))

(assert (=> d!20675 (= (contains!742 lt!37334 lt!37332) lt!38417)))

(declare-fun b!82244 () Bool)

(declare-fun lt!38414 () Unit!2327)

(assert (=> b!82244 (= e!53641 lt!38414)))

(assert (=> b!82244 (= lt!38414 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37334) lt!37332))))

(assert (=> b!82244 (isDefined!90 (getValueByKey!136 (toList!734 lt!37334) lt!37332))))

(declare-fun b!82245 () Bool)

(declare-fun Unit!2408 () Unit!2327)

(assert (=> b!82245 (= e!53641 Unit!2408)))

(declare-fun b!82246 () Bool)

(assert (=> b!82246 (= e!53640 (isDefined!90 (getValueByKey!136 (toList!734 lt!37334) lt!37332)))))

(assert (= (and d!20675 c!13074) b!82244))

(assert (= (and d!20675 (not c!13074)) b!82245))

(assert (= (and d!20675 (not res!42675)) b!82246))

(declare-fun m!84915 () Bool)

(assert (=> d!20675 m!84915))

(declare-fun m!84917 () Bool)

(assert (=> b!82244 m!84917))

(declare-fun m!84919 () Bool)

(assert (=> b!82244 m!84919))

(assert (=> b!82244 m!84919))

(declare-fun m!84921 () Bool)

(assert (=> b!82244 m!84921))

(assert (=> b!82246 m!84919))

(assert (=> b!82246 m!84919))

(assert (=> b!82246 m!84921))

(assert (=> d!19735 d!20675))

(declare-fun b!82247 () Bool)

(declare-fun e!53645 () Bool)

(assert (=> b!82247 (= e!53645 (contains!746 (ite c!12615 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!20677 () Bool)

(declare-fun res!42676 () Bool)

(declare-fun e!53642 () Bool)

(assert (=> d!20677 (=> res!42676 e!53642)))

(assert (=> d!20677 (= res!42676 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2131 (_keys!3955 (v!2600 (underlying!276 thiss!992))))))))

(assert (=> d!20677 (= (arrayNoDuplicates!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12615 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512))) e!53642)))

(declare-fun b!82248 () Bool)

(declare-fun e!53644 () Bool)

(declare-fun call!7684 () Bool)

(assert (=> b!82248 (= e!53644 call!7684)))

(declare-fun b!82249 () Bool)

(declare-fun e!53643 () Bool)

(assert (=> b!82249 (= e!53643 e!53644)))

(declare-fun c!13075 () Bool)

(assert (=> b!82249 (= c!13075 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!82250 () Bool)

(assert (=> b!82250 (= e!53642 e!53643)))

(declare-fun res!42678 () Bool)

(assert (=> b!82250 (=> (not res!42678) (not e!53643))))

(assert (=> b!82250 (= res!42678 (not e!53645))))

(declare-fun res!42677 () Bool)

(assert (=> b!82250 (=> (not res!42677) (not e!53645))))

(assert (=> b!82250 (= res!42677 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!7681 () Bool)

(assert (=> bm!7681 (= call!7684 (arrayNoDuplicates!0 (_keys!3955 (v!2600 (underlying!276 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13075 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!12615 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512))) (ite c!12615 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)) (ite c!12555 (Cons!1511 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) Nil!1512) Nil!1512)))))))

(declare-fun b!82251 () Bool)

(assert (=> b!82251 (= e!53644 call!7684)))

(assert (= (and d!20677 (not res!42676)) b!82250))

(assert (= (and b!82250 res!42677) b!82247))

(assert (= (and b!82250 res!42678) b!82249))

(assert (= (and b!82249 c!13075) b!82248))

(assert (= (and b!82249 (not c!13075)) b!82251))

(assert (= (or b!82248 b!82251) bm!7681))

(declare-fun m!84923 () Bool)

(assert (=> b!82247 m!84923))

(assert (=> b!82247 m!84923))

(declare-fun m!84925 () Bool)

(assert (=> b!82247 m!84925))

(assert (=> b!82249 m!84923))

(assert (=> b!82249 m!84923))

(declare-fun m!84927 () Bool)

(assert (=> b!82249 m!84927))

(assert (=> b!82250 m!84923))

(assert (=> b!82250 m!84923))

(assert (=> b!82250 m!84927))

(assert (=> bm!7681 m!84923))

(declare-fun m!84929 () Bool)

(assert (=> bm!7681 m!84929))

(assert (=> bm!7489 d!20677))

(declare-fun d!20679 () Bool)

(declare-fun res!42679 () Bool)

(declare-fun e!53646 () Bool)

(assert (=> d!20679 (=> res!42679 e!53646)))

(assert (=> d!20679 (= res!42679 (and ((_ is Cons!1510) (toList!734 call!7438)) (= (_1!1102 (h!2099 (toList!734 call!7438))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(assert (=> d!20679 (= (containsKey!140 (toList!734 call!7438) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)) e!53646)))

(declare-fun b!82252 () Bool)

(declare-fun e!53647 () Bool)

(assert (=> b!82252 (= e!53646 e!53647)))

(declare-fun res!42680 () Bool)

(assert (=> b!82252 (=> (not res!42680) (not e!53647))))

(assert (=> b!82252 (= res!42680 (and (or (not ((_ is Cons!1510) (toList!734 call!7438))) (bvsle (_1!1102 (h!2099 (toList!734 call!7438))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))) ((_ is Cons!1510) (toList!734 call!7438)) (bvslt (_1!1102 (h!2099 (toList!734 call!7438))) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355))))))

(declare-fun b!82253 () Bool)

(assert (=> b!82253 (= e!53647 (containsKey!140 (t!5172 (toList!734 call!7438)) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355)))))

(assert (= (and d!20679 (not res!42679)) b!82252))

(assert (= (and b!82252 res!42680) b!82253))

(assert (=> b!82253 m!81295))

(declare-fun m!84931 () Bool)

(assert (=> b!82253 m!84931))

(assert (=> d!19841 d!20679))

(declare-fun d!20681 () Bool)

(declare-fun e!53648 () Bool)

(assert (=> d!20681 e!53648))

(declare-fun res!42681 () Bool)

(assert (=> d!20681 (=> res!42681 e!53648)))

(declare-fun lt!38421 () Bool)

(assert (=> d!20681 (= res!42681 (not lt!38421))))

(declare-fun lt!38420 () Bool)

(assert (=> d!20681 (= lt!38421 lt!38420)))

(declare-fun lt!38419 () Unit!2327)

(declare-fun e!53649 () Unit!2327)

(assert (=> d!20681 (= lt!38419 e!53649)))

(declare-fun c!13076 () Bool)

(assert (=> d!20681 (= c!13076 lt!38420)))

(assert (=> d!20681 (= lt!38420 (containsKey!140 (toList!734 lt!37496) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!20681 (= (contains!742 lt!37496 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38421)))

(declare-fun b!82254 () Bool)

(declare-fun lt!38418 () Unit!2327)

(assert (=> b!82254 (= e!53649 lt!38418)))

(assert (=> b!82254 (= lt!38418 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37496) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> b!82254 (isDefined!90 (getValueByKey!136 (toList!734 lt!37496) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!82255 () Bool)

(declare-fun Unit!2409 () Unit!2327)

(assert (=> b!82255 (= e!53649 Unit!2409)))

(declare-fun b!82256 () Bool)

(assert (=> b!82256 (= e!53648 (isDefined!90 (getValueByKey!136 (toList!734 lt!37496) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20681 c!13076) b!82254))

(assert (= (and d!20681 (not c!13076)) b!82255))

(assert (= (and d!20681 (not res!42681)) b!82256))

(declare-fun m!84933 () Bool)

(assert (=> d!20681 m!84933))

(declare-fun m!84935 () Bool)

(assert (=> b!82254 m!84935))

(assert (=> b!82254 m!81999))

(assert (=> b!82254 m!81999))

(declare-fun m!84937 () Bool)

(assert (=> b!82254 m!84937))

(assert (=> b!82256 m!81999))

(assert (=> b!82256 m!81999))

(assert (=> b!82256 m!84937))

(assert (=> d!19695 d!20681))

(declare-fun b!82260 () Bool)

(declare-fun e!53651 () Option!142)

(assert (=> b!82260 (= e!53651 None!140)))

(declare-fun b!82257 () Bool)

(declare-fun e!53650 () Option!142)

(assert (=> b!82257 (= e!53650 (Some!141 (_2!1102 (h!2099 lt!37495))))))

(declare-fun b!82259 () Bool)

(assert (=> b!82259 (= e!53651 (getValueByKey!136 (t!5172 lt!37495) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20683 () Bool)

(declare-fun c!13077 () Bool)

(assert (=> d!20683 (= c!13077 (and ((_ is Cons!1510) lt!37495) (= (_1!1102 (h!2099 lt!37495)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20683 (= (getValueByKey!136 lt!37495 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53650)))

(declare-fun b!82258 () Bool)

(assert (=> b!82258 (= e!53650 e!53651)))

(declare-fun c!13078 () Bool)

(assert (=> b!82258 (= c!13078 (and ((_ is Cons!1510) lt!37495) (not (= (_1!1102 (h!2099 lt!37495)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20683 c!13077) b!82257))

(assert (= (and d!20683 (not c!13077)) b!82258))

(assert (= (and b!82258 c!13078) b!82259))

(assert (= (and b!82258 (not c!13078)) b!82260))

(declare-fun m!84939 () Bool)

(assert (=> b!82259 m!84939))

(assert (=> d!19695 d!20683))

(declare-fun d!20685 () Bool)

(assert (=> d!20685 (= (getValueByKey!136 lt!37495 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!38422 () Unit!2327)

(assert (=> d!20685 (= lt!38422 (choose!477 lt!37495 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun e!53652 () Bool)

(assert (=> d!20685 e!53652))

(declare-fun res!42682 () Bool)

(assert (=> d!20685 (=> (not res!42682) (not e!53652))))

(assert (=> d!20685 (= res!42682 (isStrictlySorted!291 lt!37495))))

(assert (=> d!20685 (= (lemmaContainsTupThenGetReturnValue!56 lt!37495 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38422)))

(declare-fun b!82261 () Bool)

(declare-fun res!42683 () Bool)

(assert (=> b!82261 (=> (not res!42683) (not e!53652))))

(assert (=> b!82261 (= res!42683 (containsKey!140 lt!37495 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!82262 () Bool)

(assert (=> b!82262 (= e!53652 (contains!745 lt!37495 (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20685 res!42682) b!82261))

(assert (= (and b!82261 res!42683) b!82262))

(assert (=> d!20685 m!81993))

(declare-fun m!84941 () Bool)

(assert (=> d!20685 m!84941))

(declare-fun m!84943 () Bool)

(assert (=> d!20685 m!84943))

(declare-fun m!84945 () Bool)

(assert (=> b!82261 m!84945))

(declare-fun m!84947 () Bool)

(assert (=> b!82262 m!84947))

(assert (=> d!19695 d!20685))

(declare-fun b!82263 () Bool)

(declare-fun e!53656 () List!1514)

(declare-fun call!7687 () List!1514)

(assert (=> b!82263 (= e!53656 call!7687)))

(declare-fun c!13082 () Bool)

(declare-fun bm!7682 () Bool)

(declare-fun call!7686 () List!1514)

(declare-fun e!53653 () List!1514)

(assert (=> bm!7682 (= call!7686 ($colon$colon!69 e!53653 (ite c!13082 (h!2099 (toList!734 call!7475)) (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun c!13080 () Bool)

(assert (=> bm!7682 (= c!13080 c!13082)))

(declare-fun b!82264 () Bool)

(declare-fun e!53657 () Bool)

(declare-fun lt!38423 () List!1514)

(assert (=> b!82264 (= e!53657 (contains!745 lt!38423 (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun bm!7683 () Bool)

(declare-fun call!7685 () List!1514)

(assert (=> bm!7683 (= call!7687 call!7685)))

(declare-fun d!20687 () Bool)

(assert (=> d!20687 e!53657))

(declare-fun res!42685 () Bool)

(assert (=> d!20687 (=> (not res!42685) (not e!53657))))

(assert (=> d!20687 (= res!42685 (isStrictlySorted!291 lt!38423))))

(declare-fun e!53655 () List!1514)

(assert (=> d!20687 (= lt!38423 e!53655)))

(assert (=> d!20687 (= c!13082 (and ((_ is Cons!1510) (toList!734 call!7475)) (bvslt (_1!1102 (h!2099 (toList!734 call!7475))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20687 (isStrictlySorted!291 (toList!734 call!7475))))

(assert (=> d!20687 (= (insertStrictlySorted!59 (toList!734 call!7475) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38423)))

(declare-fun b!82265 () Bool)

(declare-fun c!13079 () Bool)

(assert (=> b!82265 (= c!13079 (and ((_ is Cons!1510) (toList!734 call!7475)) (bvsgt (_1!1102 (h!2099 (toList!734 call!7475))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun e!53654 () List!1514)

(assert (=> b!82265 (= e!53654 e!53656)))

(declare-fun b!82266 () Bool)

(assert (=> b!82266 (= e!53654 call!7685)))

(declare-fun b!82267 () Bool)

(assert (=> b!82267 (= e!53655 call!7686)))

(declare-fun bm!7684 () Bool)

(assert (=> bm!7684 (= call!7685 call!7686)))

(declare-fun b!82268 () Bool)

(declare-fun res!42684 () Bool)

(assert (=> b!82268 (=> (not res!42684) (not e!53657))))

(assert (=> b!82268 (= res!42684 (containsKey!140 lt!38423 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!82269 () Bool)

(assert (=> b!82269 (= e!53656 call!7687)))

(declare-fun c!13081 () Bool)

(declare-fun b!82270 () Bool)

(assert (=> b!82270 (= e!53653 (ite c!13081 (t!5172 (toList!734 call!7475)) (ite c!13079 (Cons!1510 (h!2099 (toList!734 call!7475)) (t!5172 (toList!734 call!7475))) Nil!1511)))))

(declare-fun b!82271 () Bool)

(assert (=> b!82271 (= e!53655 e!53654)))

(assert (=> b!82271 (= c!13081 (and ((_ is Cons!1510) (toList!734 call!7475)) (= (_1!1102 (h!2099 (toList!734 call!7475))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!82272 () Bool)

(assert (=> b!82272 (= e!53653 (insertStrictlySorted!59 (t!5172 (toList!734 call!7475)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (= (and d!20687 c!13082) b!82267))

(assert (= (and d!20687 (not c!13082)) b!82271))

(assert (= (and b!82271 c!13081) b!82266))

(assert (= (and b!82271 (not c!13081)) b!82265))

(assert (= (and b!82265 c!13079) b!82269))

(assert (= (and b!82265 (not c!13079)) b!82263))

(assert (= (or b!82269 b!82263) bm!7683))

(assert (= (or b!82266 bm!7683) bm!7684))

(assert (= (or b!82267 bm!7684) bm!7682))

(assert (= (and bm!7682 c!13080) b!82272))

(assert (= (and bm!7682 (not c!13080)) b!82270))

(assert (= (and d!20687 res!42685) b!82268))

(assert (= (and b!82268 res!42684) b!82264))

(declare-fun m!84949 () Bool)

(assert (=> d!20687 m!84949))

(declare-fun m!84951 () Bool)

(assert (=> d!20687 m!84951))

(declare-fun m!84953 () Bool)

(assert (=> b!82272 m!84953))

(declare-fun m!84955 () Bool)

(assert (=> bm!7682 m!84955))

(declare-fun m!84957 () Bool)

(assert (=> b!82268 m!84957))

(declare-fun m!84959 () Bool)

(assert (=> b!82264 m!84959))

(assert (=> d!19695 d!20687))

(assert (=> b!80913 d!20075))

(declare-fun b!82273 () Bool)

(declare-fun e!53665 () Bool)

(assert (=> b!82273 (= e!53665 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000)))))

(declare-fun b!82274 () Bool)

(declare-fun e!53658 () Unit!2327)

(declare-fun lt!38429 () Unit!2327)

(assert (=> b!82274 (= e!53658 lt!38429)))

(declare-fun lt!38437 () ListLongMap!1437)

(assert (=> b!82274 (= lt!38437 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (_2!1101 lt!37268)) (_values!2275 (_2!1101 lt!37268)) (mask!6297 (_2!1101 lt!37268)) (extraKeys!2139 (_2!1101 lt!37268)) (zeroValue!2188 (_2!1101 lt!37268)) (minValue!2188 (_2!1101 lt!37268)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1101 lt!37268))))))

(declare-fun lt!38432 () (_ BitVec 64))

(assert (=> b!82274 (= lt!38432 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38425 () (_ BitVec 64))

(assert (=> b!82274 (= lt!38425 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000))))

(declare-fun lt!38441 () Unit!2327)

(assert (=> b!82274 (= lt!38441 (addStillContains!56 lt!38437 lt!38432 (zeroValue!2188 (_2!1101 lt!37268)) lt!38425))))

(assert (=> b!82274 (contains!742 (+!104 lt!38437 (tuple2!2183 lt!38432 (zeroValue!2188 (_2!1101 lt!37268)))) lt!38425)))

(declare-fun lt!38444 () Unit!2327)

(assert (=> b!82274 (= lt!38444 lt!38441)))

(declare-fun lt!38433 () ListLongMap!1437)

(assert (=> b!82274 (= lt!38433 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (_2!1101 lt!37268)) (_values!2275 (_2!1101 lt!37268)) (mask!6297 (_2!1101 lt!37268)) (extraKeys!2139 (_2!1101 lt!37268)) (zeroValue!2188 (_2!1101 lt!37268)) (minValue!2188 (_2!1101 lt!37268)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1101 lt!37268))))))

(declare-fun lt!38424 () (_ BitVec 64))

(assert (=> b!82274 (= lt!38424 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38445 () (_ BitVec 64))

(assert (=> b!82274 (= lt!38445 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000))))

(declare-fun lt!38431 () Unit!2327)

(assert (=> b!82274 (= lt!38431 (addApplyDifferent!56 lt!38433 lt!38424 (minValue!2188 (_2!1101 lt!37268)) lt!38445))))

(assert (=> b!82274 (= (apply!80 (+!104 lt!38433 (tuple2!2183 lt!38424 (minValue!2188 (_2!1101 lt!37268)))) lt!38445) (apply!80 lt!38433 lt!38445))))

(declare-fun lt!38442 () Unit!2327)

(assert (=> b!82274 (= lt!38442 lt!38431)))

(declare-fun lt!38428 () ListLongMap!1437)

(assert (=> b!82274 (= lt!38428 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (_2!1101 lt!37268)) (_values!2275 (_2!1101 lt!37268)) (mask!6297 (_2!1101 lt!37268)) (extraKeys!2139 (_2!1101 lt!37268)) (zeroValue!2188 (_2!1101 lt!37268)) (minValue!2188 (_2!1101 lt!37268)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1101 lt!37268))))))

(declare-fun lt!38435 () (_ BitVec 64))

(assert (=> b!82274 (= lt!38435 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38434 () (_ BitVec 64))

(assert (=> b!82274 (= lt!38434 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000))))

(declare-fun lt!38443 () Unit!2327)

(assert (=> b!82274 (= lt!38443 (addApplyDifferent!56 lt!38428 lt!38435 (zeroValue!2188 (_2!1101 lt!37268)) lt!38434))))

(assert (=> b!82274 (= (apply!80 (+!104 lt!38428 (tuple2!2183 lt!38435 (zeroValue!2188 (_2!1101 lt!37268)))) lt!38434) (apply!80 lt!38428 lt!38434))))

(declare-fun lt!38440 () Unit!2327)

(assert (=> b!82274 (= lt!38440 lt!38443)))

(declare-fun lt!38438 () ListLongMap!1437)

(assert (=> b!82274 (= lt!38438 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (_2!1101 lt!37268)) (_values!2275 (_2!1101 lt!37268)) (mask!6297 (_2!1101 lt!37268)) (extraKeys!2139 (_2!1101 lt!37268)) (zeroValue!2188 (_2!1101 lt!37268)) (minValue!2188 (_2!1101 lt!37268)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1101 lt!37268))))))

(declare-fun lt!38439 () (_ BitVec 64))

(assert (=> b!82274 (= lt!38439 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38436 () (_ BitVec 64))

(assert (=> b!82274 (= lt!38436 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000))))

(assert (=> b!82274 (= lt!38429 (addApplyDifferent!56 lt!38438 lt!38439 (minValue!2188 (_2!1101 lt!37268)) lt!38436))))

(assert (=> b!82274 (= (apply!80 (+!104 lt!38438 (tuple2!2183 lt!38439 (minValue!2188 (_2!1101 lt!37268)))) lt!38436) (apply!80 lt!38438 lt!38436))))

(declare-fun b!82275 () Bool)

(declare-fun e!53664 () ListLongMap!1437)

(declare-fun call!7690 () ListLongMap!1437)

(assert (=> b!82275 (= e!53664 call!7690)))

(declare-fun bm!7685 () Bool)

(declare-fun call!7689 () ListLongMap!1437)

(declare-fun call!7688 () ListLongMap!1437)

(assert (=> bm!7685 (= call!7689 call!7688)))

(declare-fun bm!7686 () Bool)

(declare-fun call!7692 () Bool)

(declare-fun lt!38426 () ListLongMap!1437)

(assert (=> bm!7686 (= call!7692 (contains!742 lt!38426 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82276 () Bool)

(declare-fun e!53662 () Bool)

(declare-fun call!7694 () Bool)

(assert (=> b!82276 (= e!53662 (not call!7694))))

(declare-fun b!82277 () Bool)

(declare-fun e!53667 () Bool)

(assert (=> b!82277 (= e!53667 (not call!7692))))

(declare-fun b!82278 () Bool)

(declare-fun e!53661 () ListLongMap!1437)

(declare-fun call!7693 () ListLongMap!1437)

(assert (=> b!82278 (= e!53661 (+!104 call!7693 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (_2!1101 lt!37268)))))))

(declare-fun d!20689 () Bool)

(declare-fun e!53669 () Bool)

(assert (=> d!20689 e!53669))

(declare-fun res!42690 () Bool)

(assert (=> d!20689 (=> (not res!42690) (not e!53669))))

(assert (=> d!20689 (= res!42690 (or (bvsge #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37268)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37268)))))))))

(declare-fun lt!38430 () ListLongMap!1437)

(assert (=> d!20689 (= lt!38426 lt!38430)))

(declare-fun lt!38427 () Unit!2327)

(assert (=> d!20689 (= lt!38427 e!53658)))

(declare-fun c!13084 () Bool)

(assert (=> d!20689 (= c!13084 e!53665)))

(declare-fun res!42687 () Bool)

(assert (=> d!20689 (=> (not res!42687) (not e!53665))))

(assert (=> d!20689 (= res!42687 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37268)))))))

(assert (=> d!20689 (= lt!38430 e!53661)))

(declare-fun c!13086 () Bool)

(assert (=> d!20689 (= c!13086 (and (not (= (bvand (extraKeys!2139 (_2!1101 lt!37268)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 (_2!1101 lt!37268)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20689 (validMask!0 (mask!6297 (_2!1101 lt!37268)))))

(assert (=> d!20689 (= (getCurrentListMap!423 (_keys!3955 (_2!1101 lt!37268)) (_values!2275 (_2!1101 lt!37268)) (mask!6297 (_2!1101 lt!37268)) (extraKeys!2139 (_2!1101 lt!37268)) (zeroValue!2188 (_2!1101 lt!37268)) (minValue!2188 (_2!1101 lt!37268)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1101 lt!37268))) lt!38426)))

(declare-fun bm!7687 () Bool)

(assert (=> bm!7687 (= call!7694 (contains!742 lt!38426 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7688 () Bool)

(assert (=> bm!7688 (= call!7690 call!7689)))

(declare-fun b!82279 () Bool)

(declare-fun e!53668 () Bool)

(assert (=> b!82279 (= e!53668 (= (apply!80 lt!38426 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000)) (get!1183 (select (arr!1889 (_values!2275 (_2!1101 lt!37268))) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 (_2!1101 lt!37268)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82279 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2132 (_values!2275 (_2!1101 lt!37268)))))))

(assert (=> b!82279 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37268)))))))

(declare-fun b!82280 () Bool)

(declare-fun res!42688 () Bool)

(assert (=> b!82280 (=> (not res!42688) (not e!53669))))

(declare-fun e!53660 () Bool)

(assert (=> b!82280 (= res!42688 e!53660)))

(declare-fun res!42691 () Bool)

(assert (=> b!82280 (=> res!42691 e!53660)))

(declare-fun e!53670 () Bool)

(assert (=> b!82280 (= res!42691 (not e!53670))))

(declare-fun res!42686 () Bool)

(assert (=> b!82280 (=> (not res!42686) (not e!53670))))

(assert (=> b!82280 (= res!42686 (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37268)))))))

(declare-fun b!82281 () Bool)

(declare-fun e!53663 () Bool)

(assert (=> b!82281 (= e!53663 (= (apply!80 lt!38426 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 (_2!1101 lt!37268))))))

(declare-fun b!82282 () Bool)

(assert (=> b!82282 (= e!53670 (validKeyInArray!0 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000)))))

(declare-fun bm!7689 () Bool)

(declare-fun call!7691 () ListLongMap!1437)

(assert (=> bm!7689 (= call!7691 call!7693)))

(declare-fun b!82283 () Bool)

(assert (=> b!82283 (= e!53667 e!53663)))

(declare-fun res!42694 () Bool)

(assert (=> b!82283 (= res!42694 call!7692)))

(assert (=> b!82283 (=> (not res!42694) (not e!53663))))

(declare-fun b!82284 () Bool)

(assert (=> b!82284 (= e!53664 call!7691)))

(declare-fun b!82285 () Bool)

(assert (=> b!82285 (= e!53669 e!53667)))

(declare-fun c!13083 () Bool)

(assert (=> b!82285 (= c!13083 (not (= (bvand (extraKeys!2139 (_2!1101 lt!37268)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!82286 () Bool)

(assert (=> b!82286 (= e!53660 e!53668)))

(declare-fun res!42689 () Bool)

(assert (=> b!82286 (=> (not res!42689) (not e!53668))))

(assert (=> b!82286 (= res!42689 (contains!742 lt!38426 (select (arr!1888 (_keys!3955 (_2!1101 lt!37268))) #b00000000000000000000000000000000)))))

(assert (=> b!82286 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2131 (_keys!3955 (_2!1101 lt!37268)))))))

(declare-fun b!82287 () Bool)

(declare-fun res!42692 () Bool)

(assert (=> b!82287 (=> (not res!42692) (not e!53669))))

(assert (=> b!82287 (= res!42692 e!53662)))

(declare-fun c!13087 () Bool)

(assert (=> b!82287 (= c!13087 (not (= (bvand (extraKeys!2139 (_2!1101 lt!37268)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!82288 () Bool)

(declare-fun e!53659 () ListLongMap!1437)

(assert (=> b!82288 (= e!53659 call!7691)))

(declare-fun b!82289 () Bool)

(declare-fun c!13085 () Bool)

(assert (=> b!82289 (= c!13085 (and (not (= (bvand (extraKeys!2139 (_2!1101 lt!37268)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 (_2!1101 lt!37268)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!82289 (= e!53659 e!53664)))

(declare-fun c!13088 () Bool)

(declare-fun bm!7690 () Bool)

(assert (=> bm!7690 (= call!7693 (+!104 (ite c!13086 call!7688 (ite c!13088 call!7689 call!7690)) (ite (or c!13086 c!13088) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (_2!1101 lt!37268))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (_2!1101 lt!37268))))))))

(declare-fun bm!7691 () Bool)

(assert (=> bm!7691 (= call!7688 (getCurrentListMapNoExtraKeys!68 (_keys!3955 (_2!1101 lt!37268)) (_values!2275 (_2!1101 lt!37268)) (mask!6297 (_2!1101 lt!37268)) (extraKeys!2139 (_2!1101 lt!37268)) (zeroValue!2188 (_2!1101 lt!37268)) (minValue!2188 (_2!1101 lt!37268)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1101 lt!37268))))))

(declare-fun b!82290 () Bool)

(declare-fun e!53666 () Bool)

(assert (=> b!82290 (= e!53662 e!53666)))

(declare-fun res!42693 () Bool)

(assert (=> b!82290 (= res!42693 call!7694)))

(assert (=> b!82290 (=> (not res!42693) (not e!53666))))

(declare-fun b!82291 () Bool)

(assert (=> b!82291 (= e!53661 e!53659)))

(assert (=> b!82291 (= c!13088 (and (not (= (bvand (extraKeys!2139 (_2!1101 lt!37268)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 (_2!1101 lt!37268)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!82292 () Bool)

(assert (=> b!82292 (= e!53666 (= (apply!80 lt!38426 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 (_2!1101 lt!37268))))))

(declare-fun b!82293 () Bool)

(declare-fun Unit!2410 () Unit!2327)

(assert (=> b!82293 (= e!53658 Unit!2410)))

(assert (= (and d!20689 c!13086) b!82278))

(assert (= (and d!20689 (not c!13086)) b!82291))

(assert (= (and b!82291 c!13088) b!82288))

(assert (= (and b!82291 (not c!13088)) b!82289))

(assert (= (and b!82289 c!13085) b!82284))

(assert (= (and b!82289 (not c!13085)) b!82275))

(assert (= (or b!82284 b!82275) bm!7688))

(assert (= (or b!82288 bm!7688) bm!7685))

(assert (= (or b!82288 b!82284) bm!7689))

(assert (= (or b!82278 bm!7685) bm!7691))

(assert (= (or b!82278 bm!7689) bm!7690))

(assert (= (and d!20689 res!42687) b!82273))

(assert (= (and d!20689 c!13084) b!82274))

(assert (= (and d!20689 (not c!13084)) b!82293))

(assert (= (and d!20689 res!42690) b!82280))

(assert (= (and b!82280 res!42686) b!82282))

(assert (= (and b!82280 (not res!42691)) b!82286))

(assert (= (and b!82286 res!42689) b!82279))

(assert (= (and b!82280 res!42688) b!82287))

(assert (= (and b!82287 c!13087) b!82290))

(assert (= (and b!82287 (not c!13087)) b!82276))

(assert (= (and b!82290 res!42693) b!82292))

(assert (= (or b!82290 b!82276) bm!7687))

(assert (= (and b!82287 res!42692) b!82285))

(assert (= (and b!82285 c!13083) b!82283))

(assert (= (and b!82285 (not c!13083)) b!82277))

(assert (= (and b!82283 res!42694) b!82281))

(assert (= (or b!82283 b!82277) bm!7686))

(declare-fun b_lambda!3643 () Bool)

(assert (=> (not b_lambda!3643) (not b!82279)))

(declare-fun tb!1645 () Bool)

(declare-fun t!5191 () Bool)

(assert (=> (and b!80038 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 (_2!1101 lt!37268))) t!5191) tb!1645))

(declare-fun result!2853 () Bool)

(assert (=> tb!1645 (= result!2853 tp_is_empty!2515)))

(assert (=> b!82279 t!5191))

(declare-fun b_and!5001 () Bool)

(assert (= b_and!4997 (and (=> t!5191 result!2853) b_and!5001)))

(declare-fun t!5193 () Bool)

(declare-fun tb!1647 () Bool)

(assert (=> (and b!80045 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (_2!1101 lt!37268))) t!5193) tb!1647))

(declare-fun result!2855 () Bool)

(assert (= result!2855 result!2853))

(assert (=> b!82279 t!5193))

(declare-fun b_and!5003 () Bool)

(assert (= b_and!4999 (and (=> t!5193 result!2855) b_and!5003)))

(assert (=> b!82279 m!84123))

(declare-fun m!84961 () Bool)

(assert (=> b!82279 m!84961))

(assert (=> b!82279 m!84123))

(declare-fun m!84963 () Bool)

(assert (=> b!82279 m!84963))

(assert (=> b!82279 m!84963))

(declare-fun m!84965 () Bool)

(assert (=> b!82279 m!84965))

(declare-fun m!84967 () Bool)

(assert (=> b!82279 m!84967))

(assert (=> b!82279 m!84965))

(declare-fun m!84969 () Bool)

(assert (=> bm!7687 m!84969))

(assert (=> b!82282 m!84123))

(assert (=> b!82282 m!84123))

(assert (=> b!82282 m!84125))

(declare-fun m!84971 () Bool)

(assert (=> b!82274 m!84971))

(declare-fun m!84973 () Bool)

(assert (=> b!82274 m!84973))

(declare-fun m!84975 () Bool)

(assert (=> b!82274 m!84975))

(declare-fun m!84977 () Bool)

(assert (=> b!82274 m!84977))

(declare-fun m!84979 () Bool)

(assert (=> b!82274 m!84979))

(declare-fun m!84981 () Bool)

(assert (=> b!82274 m!84981))

(declare-fun m!84983 () Bool)

(assert (=> b!82274 m!84983))

(declare-fun m!84985 () Bool)

(assert (=> b!82274 m!84985))

(declare-fun m!84987 () Bool)

(assert (=> b!82274 m!84987))

(declare-fun m!84989 () Bool)

(assert (=> b!82274 m!84989))

(declare-fun m!84991 () Bool)

(assert (=> b!82274 m!84991))

(declare-fun m!84993 () Bool)

(assert (=> b!82274 m!84993))

(declare-fun m!84995 () Bool)

(assert (=> b!82274 m!84995))

(assert (=> b!82274 m!84977))

(assert (=> b!82274 m!84987))

(assert (=> b!82274 m!84123))

(declare-fun m!84997 () Bool)

(assert (=> b!82274 m!84997))

(assert (=> b!82274 m!84981))

(declare-fun m!84999 () Bool)

(assert (=> b!82274 m!84999))

(assert (=> b!82274 m!84993))

(declare-fun m!85001 () Bool)

(assert (=> b!82274 m!85001))

(assert (=> b!82286 m!84123))

(assert (=> b!82286 m!84123))

(declare-fun m!85003 () Bool)

(assert (=> b!82286 m!85003))

(declare-fun m!85005 () Bool)

(assert (=> b!82278 m!85005))

(declare-fun m!85007 () Bool)

(assert (=> bm!7686 m!85007))

(declare-fun m!85009 () Bool)

(assert (=> b!82281 m!85009))

(assert (=> bm!7691 m!84973))

(declare-fun m!85011 () Bool)

(assert (=> bm!7690 m!85011))

(declare-fun m!85013 () Bool)

(assert (=> b!82292 m!85013))

(assert (=> b!82273 m!84123))

(assert (=> b!82273 m!84123))

(assert (=> b!82273 m!84125))

(assert (=> d!20689 m!84709))

(assert (=> d!19761 d!20689))

(declare-fun d!20691 () Bool)

(declare-fun res!42695 () Bool)

(declare-fun e!53671 () Bool)

(assert (=> d!20691 (=> res!42695 e!53671)))

(assert (=> d!20691 (= res!42695 (or ((_ is Nil!1511) lt!37707) ((_ is Nil!1511) (t!5172 lt!37707))))))

(assert (=> d!20691 (= (isStrictlySorted!291 lt!37707) e!53671)))

(declare-fun b!82294 () Bool)

(declare-fun e!53672 () Bool)

(assert (=> b!82294 (= e!53671 e!53672)))

(declare-fun res!42696 () Bool)

(assert (=> b!82294 (=> (not res!42696) (not e!53672))))

(assert (=> b!82294 (= res!42696 (bvslt (_1!1102 (h!2099 lt!37707)) (_1!1102 (h!2099 (t!5172 lt!37707)))))))

(declare-fun b!82295 () Bool)

(assert (=> b!82295 (= e!53672 (isStrictlySorted!291 (t!5172 lt!37707)))))

(assert (= (and d!20691 (not res!42695)) b!82294))

(assert (= (and b!82294 res!42696) b!82295))

(declare-fun m!85015 () Bool)

(assert (=> b!82295 m!85015))

(assert (=> d!19759 d!20691))

(assert (=> d!19759 d!19891))

(assert (=> b!80703 d!20075))

(declare-fun d!20693 () Bool)

(declare-fun e!53673 () Bool)

(assert (=> d!20693 e!53673))

(declare-fun res!42698 () Bool)

(assert (=> d!20693 (=> (not res!42698) (not e!53673))))

(declare-fun lt!38449 () ListLongMap!1437)

(assert (=> d!20693 (= res!42698 (contains!742 lt!38449 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(declare-fun lt!38448 () List!1514)

(assert (=> d!20693 (= lt!38449 (ListLongMap!1438 lt!38448))))

(declare-fun lt!38447 () Unit!2327)

(declare-fun lt!38446 () Unit!2327)

(assert (=> d!20693 (= lt!38447 lt!38446)))

(assert (=> d!20693 (= (getValueByKey!136 lt!38448 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(assert (=> d!20693 (= lt!38446 (lemmaContainsTupThenGetReturnValue!56 lt!38448 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(assert (=> d!20693 (= lt!38448 (insertStrictlySorted!59 (toList!734 call!7521) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))))))

(assert (=> d!20693 (= (+!104 call!7521 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))) lt!38449)))

(declare-fun b!82296 () Bool)

(declare-fun res!42697 () Bool)

(assert (=> b!82296 (=> (not res!42697) (not e!53673))))

(assert (=> b!82296 (= res!42697 (= (getValueByKey!136 (toList!734 lt!38449) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16))))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))))))

(declare-fun b!82297 () Bool)

(assert (=> b!82297 (= e!53673 (contains!745 (toList!734 lt!38449) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12532 (ite c!12534 (minValue!2188 newMap!16) lt!37084) (minValue!2188 newMap!16)))))))

(assert (= (and d!20693 res!42698) b!82296))

(assert (= (and b!82296 res!42697) b!82297))

(declare-fun m!85017 () Bool)

(assert (=> d!20693 m!85017))

(declare-fun m!85019 () Bool)

(assert (=> d!20693 m!85019))

(declare-fun m!85021 () Bool)

(assert (=> d!20693 m!85021))

(declare-fun m!85023 () Bool)

(assert (=> d!20693 m!85023))

(declare-fun m!85025 () Bool)

(assert (=> b!82296 m!85025))

(declare-fun m!85027 () Bool)

(assert (=> b!82297 m!85027))

(assert (=> b!80770 d!20693))

(declare-fun d!20695 () Bool)

(declare-fun lt!38450 () Bool)

(assert (=> d!20695 (= lt!38450 (select (content!86 (toList!734 lt!37751)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun e!53674 () Bool)

(assert (=> d!20695 (= lt!38450 e!53674)))

(declare-fun res!42700 () Bool)

(assert (=> d!20695 (=> (not res!42700) (not e!53674))))

(assert (=> d!20695 (= res!42700 ((_ is Cons!1510) (toList!734 lt!37751)))))

(assert (=> d!20695 (= (contains!745 (toList!734 lt!37751) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!38450)))

(declare-fun b!82298 () Bool)

(declare-fun e!53675 () Bool)

(assert (=> b!82298 (= e!53674 e!53675)))

(declare-fun res!42699 () Bool)

(assert (=> b!82298 (=> res!42699 e!53675)))

(assert (=> b!82298 (= res!42699 (= (h!2099 (toList!734 lt!37751)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(declare-fun b!82299 () Bool)

(assert (=> b!82299 (= e!53675 (contains!745 (t!5172 (toList!734 lt!37751)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))

(assert (= (and d!20695 res!42700) b!82298))

(assert (= (and b!82298 (not res!42699)) b!82299))

(declare-fun m!85029 () Bool)

(assert (=> d!20695 m!85029))

(declare-fun m!85031 () Bool)

(assert (=> d!20695 m!85031))

(declare-fun m!85033 () Bool)

(assert (=> b!82299 m!85033))

(assert (=> b!80891 d!20695))

(declare-fun d!20697 () Bool)

(assert (=> d!20697 (= (get!1187 (getValueByKey!136 (toList!734 lt!37418) lt!37416)) (v!2606 (getValueByKey!136 (toList!734 lt!37418) lt!37416)))))

(assert (=> d!19651 d!20697))

(declare-fun b!82303 () Bool)

(declare-fun e!53677 () Option!142)

(assert (=> b!82303 (= e!53677 None!140)))

(declare-fun b!82300 () Bool)

(declare-fun e!53676 () Option!142)

(assert (=> b!82300 (= e!53676 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37418)))))))

(declare-fun b!82302 () Bool)

(assert (=> b!82302 (= e!53677 (getValueByKey!136 (t!5172 (toList!734 lt!37418)) lt!37416))))

(declare-fun d!20699 () Bool)

(declare-fun c!13089 () Bool)

(assert (=> d!20699 (= c!13089 (and ((_ is Cons!1510) (toList!734 lt!37418)) (= (_1!1102 (h!2099 (toList!734 lt!37418))) lt!37416)))))

(assert (=> d!20699 (= (getValueByKey!136 (toList!734 lt!37418) lt!37416) e!53676)))

(declare-fun b!82301 () Bool)

(assert (=> b!82301 (= e!53676 e!53677)))

(declare-fun c!13090 () Bool)

(assert (=> b!82301 (= c!13090 (and ((_ is Cons!1510) (toList!734 lt!37418)) (not (= (_1!1102 (h!2099 (toList!734 lt!37418))) lt!37416))))))

(assert (= (and d!20699 c!13089) b!82300))

(assert (= (and d!20699 (not c!13089)) b!82301))

(assert (= (and b!82301 c!13090) b!82302))

(assert (= (and b!82301 (not c!13090)) b!82303))

(declare-fun m!85035 () Bool)

(assert (=> b!82302 m!85035))

(assert (=> d!19651 d!20699))

(declare-fun d!20701 () Bool)

(assert (=> d!20701 (= (get!1187 (getValueByKey!136 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2606 (getValueByKey!136 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19685 d!20701))

(assert (=> d!19685 d!20087))

(declare-fun b!82307 () Bool)

(declare-fun e!53679 () Option!142)

(assert (=> b!82307 (= e!53679 None!140)))

(declare-fun b!82304 () Bool)

(declare-fun e!53678 () Option!142)

(assert (=> b!82304 (= e!53678 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37803)))))))

(declare-fun b!82306 () Bool)

(assert (=> b!82306 (= e!53679 (getValueByKey!136 (t!5172 (toList!734 lt!37803)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun c!13091 () Bool)

(declare-fun d!20703 () Bool)

(assert (=> d!20703 (= c!13091 (and ((_ is Cons!1510) (toList!734 lt!37803)) (= (_1!1102 (h!2099 (toList!734 lt!37803))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20703 (= (getValueByKey!136 (toList!734 lt!37803) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) e!53678)))

(declare-fun b!82305 () Bool)

(assert (=> b!82305 (= e!53678 e!53679)))

(declare-fun c!13092 () Bool)

(assert (=> b!82305 (= c!13092 (and ((_ is Cons!1510) (toList!734 lt!37803)) (not (= (_1!1102 (h!2099 (toList!734 lt!37803))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (= (and d!20703 c!13091) b!82304))

(assert (= (and d!20703 (not c!13091)) b!82305))

(assert (= (and b!82305 c!13092) b!82306))

(assert (= (and b!82305 (not c!13092)) b!82307))

(declare-fun m!85037 () Bool)

(assert (=> b!82306 m!85037))

(assert (=> b!80971 d!20703))

(declare-fun d!20705 () Bool)

(declare-fun e!53680 () Bool)

(assert (=> d!20705 e!53680))

(declare-fun res!42701 () Bool)

(assert (=> d!20705 (=> res!42701 e!53680)))

(declare-fun lt!38454 () Bool)

(assert (=> d!20705 (= res!42701 (not lt!38454))))

(declare-fun lt!38453 () Bool)

(assert (=> d!20705 (= lt!38454 lt!38453)))

(declare-fun lt!38452 () Unit!2327)

(declare-fun e!53681 () Unit!2327)

(assert (=> d!20705 (= lt!38452 e!53681)))

(declare-fun c!13093 () Bool)

(assert (=> d!20705 (= c!13093 lt!38453)))

(assert (=> d!20705 (= lt!38453 (containsKey!140 (toList!734 lt!37446) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!20705 (= (contains!742 lt!37446 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38454)))

(declare-fun b!82308 () Bool)

(declare-fun lt!38451 () Unit!2327)

(assert (=> b!82308 (= e!53681 lt!38451)))

(assert (=> b!82308 (= lt!38451 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37446) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> b!82308 (isDefined!90 (getValueByKey!136 (toList!734 lt!37446) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!82309 () Bool)

(declare-fun Unit!2411 () Unit!2327)

(assert (=> b!82309 (= e!53681 Unit!2411)))

(declare-fun b!82310 () Bool)

(assert (=> b!82310 (= e!53680 (isDefined!90 (getValueByKey!136 (toList!734 lt!37446) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20705 c!13093) b!82308))

(assert (= (and d!20705 (not c!13093)) b!82309))

(assert (= (and d!20705 (not res!42701)) b!82310))

(declare-fun m!85039 () Bool)

(assert (=> d!20705 m!85039))

(declare-fun m!85041 () Bool)

(assert (=> b!82308 m!85041))

(assert (=> b!82308 m!81811))

(assert (=> b!82308 m!81811))

(declare-fun m!85043 () Bool)

(assert (=> b!82308 m!85043))

(assert (=> b!82310 m!81811))

(assert (=> b!82310 m!81811))

(assert (=> b!82310 m!85043))

(assert (=> d!19633 d!20705))

(declare-fun b!82314 () Bool)

(declare-fun e!53683 () Option!142)

(assert (=> b!82314 (= e!53683 None!140)))

(declare-fun b!82311 () Bool)

(declare-fun e!53682 () Option!142)

(assert (=> b!82311 (= e!53682 (Some!141 (_2!1102 (h!2099 lt!37445))))))

(declare-fun b!82313 () Bool)

(assert (=> b!82313 (= e!53683 (getValueByKey!136 (t!5172 lt!37445) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun c!13094 () Bool)

(declare-fun d!20707 () Bool)

(assert (=> d!20707 (= c!13094 (and ((_ is Cons!1510) lt!37445) (= (_1!1102 (h!2099 lt!37445)) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20707 (= (getValueByKey!136 lt!37445 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53682)))

(declare-fun b!82312 () Bool)

(assert (=> b!82312 (= e!53682 e!53683)))

(declare-fun c!13095 () Bool)

(assert (=> b!82312 (= c!13095 (and ((_ is Cons!1510) lt!37445) (not (= (_1!1102 (h!2099 lt!37445)) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20707 c!13094) b!82311))

(assert (= (and d!20707 (not c!13094)) b!82312))

(assert (= (and b!82312 c!13095) b!82313))

(assert (= (and b!82312 (not c!13095)) b!82314))

(declare-fun m!85045 () Bool)

(assert (=> b!82313 m!85045))

(assert (=> d!19633 d!20707))

(declare-fun d!20709 () Bool)

(assert (=> d!20709 (= (getValueByKey!136 lt!37445 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!38455 () Unit!2327)

(assert (=> d!20709 (= lt!38455 (choose!477 lt!37445 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun e!53684 () Bool)

(assert (=> d!20709 e!53684))

(declare-fun res!42702 () Bool)

(assert (=> d!20709 (=> (not res!42702) (not e!53684))))

(assert (=> d!20709 (= res!42702 (isStrictlySorted!291 lt!37445))))

(assert (=> d!20709 (= (lemmaContainsTupThenGetReturnValue!56 lt!37445 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38455)))

(declare-fun b!82315 () Bool)

(declare-fun res!42703 () Bool)

(assert (=> b!82315 (=> (not res!42703) (not e!53684))))

(assert (=> b!82315 (= res!42703 (containsKey!140 lt!37445 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!82316 () Bool)

(assert (=> b!82316 (= e!53684 (contains!745 lt!37445 (tuple2!2183 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20709 res!42702) b!82315))

(assert (= (and b!82315 res!42703) b!82316))

(assert (=> d!20709 m!81805))

(declare-fun m!85047 () Bool)

(assert (=> d!20709 m!85047))

(declare-fun m!85049 () Bool)

(assert (=> d!20709 m!85049))

(declare-fun m!85051 () Bool)

(assert (=> b!82315 m!85051))

(declare-fun m!85053 () Bool)

(assert (=> b!82316 m!85053))

(assert (=> d!19633 d!20709))

(declare-fun b!82317 () Bool)

(declare-fun e!53688 () List!1514)

(declare-fun call!7697 () List!1514)

(assert (=> b!82317 (= e!53688 call!7697)))

(declare-fun call!7696 () List!1514)

(declare-fun c!13099 () Bool)

(declare-fun bm!7692 () Bool)

(declare-fun e!53685 () List!1514)

(assert (=> bm!7692 (= call!7696 ($colon$colon!69 e!53685 (ite c!13099 (h!2099 (toList!734 lt!37417)) (tuple2!2183 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun c!13097 () Bool)

(assert (=> bm!7692 (= c!13097 c!13099)))

(declare-fun b!82318 () Bool)

(declare-fun lt!38456 () List!1514)

(declare-fun e!53689 () Bool)

(assert (=> b!82318 (= e!53689 (contains!745 lt!38456 (tuple2!2183 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun bm!7693 () Bool)

(declare-fun call!7695 () List!1514)

(assert (=> bm!7693 (= call!7697 call!7695)))

(declare-fun d!20711 () Bool)

(assert (=> d!20711 e!53689))

(declare-fun res!42705 () Bool)

(assert (=> d!20711 (=> (not res!42705) (not e!53689))))

(assert (=> d!20711 (= res!42705 (isStrictlySorted!291 lt!38456))))

(declare-fun e!53687 () List!1514)

(assert (=> d!20711 (= lt!38456 e!53687)))

(assert (=> d!20711 (= c!13099 (and ((_ is Cons!1510) (toList!734 lt!37417)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37417))) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20711 (isStrictlySorted!291 (toList!734 lt!37417))))

(assert (=> d!20711 (= (insertStrictlySorted!59 (toList!734 lt!37417) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38456)))

(declare-fun c!13096 () Bool)

(declare-fun b!82319 () Bool)

(assert (=> b!82319 (= c!13096 (and ((_ is Cons!1510) (toList!734 lt!37417)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37417))) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun e!53686 () List!1514)

(assert (=> b!82319 (= e!53686 e!53688)))

(declare-fun b!82320 () Bool)

(assert (=> b!82320 (= e!53686 call!7695)))

(declare-fun b!82321 () Bool)

(assert (=> b!82321 (= e!53687 call!7696)))

(declare-fun bm!7694 () Bool)

(assert (=> bm!7694 (= call!7695 call!7696)))

(declare-fun b!82322 () Bool)

(declare-fun res!42704 () Bool)

(assert (=> b!82322 (=> (not res!42704) (not e!53689))))

(assert (=> b!82322 (= res!42704 (containsKey!140 lt!38456 (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!82323 () Bool)

(assert (=> b!82323 (= e!53688 call!7697)))

(declare-fun c!13098 () Bool)

(declare-fun b!82324 () Bool)

(assert (=> b!82324 (= e!53685 (ite c!13098 (t!5172 (toList!734 lt!37417)) (ite c!13096 (Cons!1510 (h!2099 (toList!734 lt!37417)) (t!5172 (toList!734 lt!37417))) Nil!1511)))))

(declare-fun b!82325 () Bool)

(assert (=> b!82325 (= e!53687 e!53686)))

(assert (=> b!82325 (= c!13098 (and ((_ is Cons!1510) (toList!734 lt!37417)) (= (_1!1102 (h!2099 (toList!734 lt!37417))) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!82326 () Bool)

(assert (=> b!82326 (= e!53685 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37417)) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (= (and d!20711 c!13099) b!82321))

(assert (= (and d!20711 (not c!13099)) b!82325))

(assert (= (and b!82325 c!13098) b!82320))

(assert (= (and b!82325 (not c!13098)) b!82319))

(assert (= (and b!82319 c!13096) b!82323))

(assert (= (and b!82319 (not c!13096)) b!82317))

(assert (= (or b!82323 b!82317) bm!7693))

(assert (= (or b!82320 bm!7693) bm!7694))

(assert (= (or b!82321 bm!7694) bm!7692))

(assert (= (and bm!7692 c!13097) b!82326))

(assert (= (and bm!7692 (not c!13097)) b!82324))

(assert (= (and d!20711 res!42705) b!82322))

(assert (= (and b!82322 res!42704) b!82318))

(declare-fun m!85055 () Bool)

(assert (=> d!20711 m!85055))

(declare-fun m!85057 () Bool)

(assert (=> d!20711 m!85057))

(declare-fun m!85059 () Bool)

(assert (=> b!82326 m!85059))

(declare-fun m!85061 () Bool)

(assert (=> bm!7692 m!85061))

(declare-fun m!85063 () Bool)

(assert (=> b!82322 m!85063))

(declare-fun m!85065 () Bool)

(assert (=> b!82318 m!85065))

(assert (=> d!19633 d!20711))

(declare-fun d!20713 () Bool)

(assert (=> d!20713 (isDefined!90 (getValueByKey!136 (toList!734 lt!37346) (_1!1102 lt!37075)))))

(declare-fun lt!38457 () Unit!2327)

(assert (=> d!20713 (= lt!38457 (choose!485 (toList!734 lt!37346) (_1!1102 lt!37075)))))

(declare-fun e!53690 () Bool)

(assert (=> d!20713 e!53690))

(declare-fun res!42706 () Bool)

(assert (=> d!20713 (=> (not res!42706) (not e!53690))))

(assert (=> d!20713 (= res!42706 (isStrictlySorted!291 (toList!734 lt!37346)))))

(assert (=> d!20713 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37346) (_1!1102 lt!37075)) lt!38457)))

(declare-fun b!82327 () Bool)

(assert (=> b!82327 (= e!53690 (containsKey!140 (toList!734 lt!37346) (_1!1102 lt!37075)))))

(assert (= (and d!20713 res!42706) b!82327))

(assert (=> d!20713 m!81671))

(assert (=> d!20713 m!81671))

(assert (=> d!20713 m!81911))

(declare-fun m!85067 () Bool)

(assert (=> d!20713 m!85067))

(declare-fun m!85069 () Bool)

(assert (=> d!20713 m!85069))

(assert (=> b!82327 m!81907))

(assert (=> b!80555 d!20713))

(assert (=> b!80555 d!20071))

(assert (=> b!80555 d!19699))

(declare-fun d!20715 () Bool)

(declare-fun res!42707 () Bool)

(declare-fun e!53691 () Bool)

(assert (=> d!20715 (=> res!42707 e!53691)))

(assert (=> d!20715 (= res!42707 (and ((_ is Cons!1510) lt!37483) (= (_1!1102 (h!2099 lt!37483)) (_1!1102 lt!37079))))))

(assert (=> d!20715 (= (containsKey!140 lt!37483 (_1!1102 lt!37079)) e!53691)))

(declare-fun b!82328 () Bool)

(declare-fun e!53692 () Bool)

(assert (=> b!82328 (= e!53691 e!53692)))

(declare-fun res!42708 () Bool)

(assert (=> b!82328 (=> (not res!42708) (not e!53692))))

(assert (=> b!82328 (= res!42708 (and (or (not ((_ is Cons!1510) lt!37483)) (bvsle (_1!1102 (h!2099 lt!37483)) (_1!1102 lt!37079))) ((_ is Cons!1510) lt!37483) (bvslt (_1!1102 (h!2099 lt!37483)) (_1!1102 lt!37079))))))

(declare-fun b!82329 () Bool)

(assert (=> b!82329 (= e!53692 (containsKey!140 (t!5172 lt!37483) (_1!1102 lt!37079)))))

(assert (= (and d!20715 (not res!42707)) b!82328))

(assert (= (and b!82328 res!42708) b!82329))

(declare-fun m!85071 () Bool)

(assert (=> b!82329 m!85071))

(assert (=> b!80588 d!20715))

(declare-fun d!20717 () Bool)

(declare-fun lt!38458 () Bool)

(assert (=> d!20717 (= lt!38458 (select (content!86 (toList!734 lt!37739)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(declare-fun e!53693 () Bool)

(assert (=> d!20717 (= lt!38458 e!53693)))

(declare-fun res!42710 () Bool)

(assert (=> d!20717 (=> (not res!42710) (not e!53693))))

(assert (=> d!20717 (= res!42710 ((_ is Cons!1510) (toList!734 lt!37739)))))

(assert (=> d!20717 (= (contains!745 (toList!734 lt!37739) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) lt!38458)))

(declare-fun b!82330 () Bool)

(declare-fun e!53694 () Bool)

(assert (=> b!82330 (= e!53693 e!53694)))

(declare-fun res!42709 () Bool)

(assert (=> b!82330 (=> res!42709 e!53694)))

(assert (=> b!82330 (= res!42709 (= (h!2099 (toList!734 lt!37739)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(declare-fun b!82331 () Bool)

(assert (=> b!82331 (= e!53694 (contains!745 (t!5172 (toList!734 lt!37739)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (= (and d!20717 res!42710) b!82330))

(assert (= (and b!82330 (not res!42709)) b!82331))

(declare-fun m!85073 () Bool)

(assert (=> d!20717 m!85073))

(declare-fun m!85075 () Bool)

(assert (=> d!20717 m!85075))

(declare-fun m!85077 () Bool)

(assert (=> b!82331 m!85077))

(assert (=> b!80885 d!20717))

(declare-fun d!20719 () Bool)

(declare-fun e!53695 () Bool)

(assert (=> d!20719 e!53695))

(declare-fun res!42711 () Bool)

(assert (=> d!20719 (=> res!42711 e!53695)))

(declare-fun lt!38462 () Bool)

(assert (=> d!20719 (= res!42711 (not lt!38462))))

(declare-fun lt!38461 () Bool)

(assert (=> d!20719 (= lt!38462 lt!38461)))

(declare-fun lt!38460 () Unit!2327)

(declare-fun e!53696 () Unit!2327)

(assert (=> d!20719 (= lt!38460 e!53696)))

(declare-fun c!13100 () Bool)

(assert (=> d!20719 (= c!13100 lt!38461)))

(assert (=> d!20719 (= lt!38461 (containsKey!140 (toList!734 lt!37418) lt!37416))))

(assert (=> d!20719 (= (contains!742 lt!37418 lt!37416) lt!38462)))

(declare-fun b!82332 () Bool)

(declare-fun lt!38459 () Unit!2327)

(assert (=> b!82332 (= e!53696 lt!38459)))

(assert (=> b!82332 (= lt!38459 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37418) lt!37416))))

(assert (=> b!82332 (isDefined!90 (getValueByKey!136 (toList!734 lt!37418) lt!37416))))

(declare-fun b!82333 () Bool)

(declare-fun Unit!2412 () Unit!2327)

(assert (=> b!82333 (= e!53696 Unit!2412)))

(declare-fun b!82334 () Bool)

(assert (=> b!82334 (= e!53695 (isDefined!90 (getValueByKey!136 (toList!734 lt!37418) lt!37416)))))

(assert (= (and d!20719 c!13100) b!82332))

(assert (= (and d!20719 (not c!13100)) b!82333))

(assert (= (and d!20719 (not res!42711)) b!82334))

(declare-fun m!85079 () Bool)

(assert (=> d!20719 m!85079))

(declare-fun m!85081 () Bool)

(assert (=> b!82332 m!85081))

(assert (=> b!82332 m!81867))

(assert (=> b!82332 m!81867))

(declare-fun m!85083 () Bool)

(assert (=> b!82332 m!85083))

(assert (=> b!82334 m!81867))

(assert (=> b!82334 m!81867))

(assert (=> b!82334 m!85083))

(assert (=> d!19645 d!20719))

(assert (=> d!19645 d!19635))

(assert (=> d!19645 d!19637))

(declare-fun d!20721 () Bool)

(assert (=> d!20721 (= (apply!80 (+!104 lt!37418 (tuple2!2183 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) lt!37416) (apply!80 lt!37418 lt!37416))))

(assert (=> d!20721 true))

(declare-fun _$34!828 () Unit!2327)

(assert (=> d!20721 (= (choose!479 lt!37418 lt!37419 (minValue!2188 (v!2600 (underlying!276 thiss!992))) lt!37416) _$34!828)))

(declare-fun bs!3488 () Bool)

(assert (= bs!3488 d!20721))

(assert (=> bs!3488 m!81737))

(assert (=> bs!3488 m!81737))

(assert (=> bs!3488 m!81745))

(assert (=> bs!3488 m!81717))

(assert (=> d!19645 d!20721))

(assert (=> d!19645 d!19651))

(declare-fun d!20723 () Bool)

(assert (=> d!20723 (isDefined!90 (getValueByKey!136 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38463 () Unit!2327)

(assert (=> d!20723 (= lt!38463 (choose!485 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53697 () Bool)

(assert (=> d!20723 e!53697))

(declare-fun res!42712 () Bool)

(assert (=> d!20723 (=> (not res!42712) (not e!53697))))

(assert (=> d!20723 (= res!42712 (isStrictlySorted!291 (toList!734 lt!37406)))))

(assert (=> d!20723 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000) lt!38463)))

(declare-fun b!82335 () Bool)

(assert (=> b!82335 (= e!53697 (containsKey!140 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20723 res!42712) b!82335))

(assert (=> d!20723 m!81979))

(assert (=> d!20723 m!81979))

(assert (=> d!20723 m!82475))

(declare-fun m!85085 () Bool)

(assert (=> d!20723 m!85085))

(assert (=> d!20723 m!84115))

(assert (=> b!82335 m!82471))

(assert (=> b!80879 d!20723))

(assert (=> b!80879 d!20085))

(assert (=> b!80879 d!20087))

(declare-fun d!20725 () Bool)

(declare-fun res!42713 () Bool)

(declare-fun e!53698 () Bool)

(assert (=> d!20725 (=> res!42713 e!53698)))

(assert (=> d!20725 (= res!42713 (and ((_ is Cons!1510) lt!37726) (= (_1!1102 (h!2099 lt!37726)) (_1!1102 lt!37079))))))

(assert (=> d!20725 (= (containsKey!140 lt!37726 (_1!1102 lt!37079)) e!53698)))

(declare-fun b!82336 () Bool)

(declare-fun e!53699 () Bool)

(assert (=> b!82336 (= e!53698 e!53699)))

(declare-fun res!42714 () Bool)

(assert (=> b!82336 (=> (not res!42714) (not e!53699))))

(assert (=> b!82336 (= res!42714 (and (or (not ((_ is Cons!1510) lt!37726)) (bvsle (_1!1102 (h!2099 lt!37726)) (_1!1102 lt!37079))) ((_ is Cons!1510) lt!37726) (bvslt (_1!1102 (h!2099 lt!37726)) (_1!1102 lt!37079))))))

(declare-fun b!82337 () Bool)

(assert (=> b!82337 (= e!53699 (containsKey!140 (t!5172 lt!37726) (_1!1102 lt!37079)))))

(assert (= (and d!20725 (not res!42713)) b!82336))

(assert (= (and b!82336 res!42714) b!82337))

(declare-fun m!85087 () Bool)

(assert (=> b!82337 m!85087))

(assert (=> b!80872 d!20725))

(declare-fun d!20727 () Bool)

(declare-fun res!42715 () Bool)

(declare-fun e!53700 () Bool)

(assert (=> d!20727 (=> res!42715 e!53700)))

(assert (=> d!20727 (= res!42715 (and ((_ is Cons!1510) lt!37834) (= (_1!1102 (h!2099 lt!37834)) (_1!1102 lt!37082))))))

(assert (=> d!20727 (= (containsKey!140 lt!37834 (_1!1102 lt!37082)) e!53700)))

(declare-fun b!82338 () Bool)

(declare-fun e!53701 () Bool)

(assert (=> b!82338 (= e!53700 e!53701)))

(declare-fun res!42716 () Bool)

(assert (=> b!82338 (=> (not res!42716) (not e!53701))))

(assert (=> b!82338 (= res!42716 (and (or (not ((_ is Cons!1510) lt!37834)) (bvsle (_1!1102 (h!2099 lt!37834)) (_1!1102 lt!37082))) ((_ is Cons!1510) lt!37834) (bvslt (_1!1102 (h!2099 lt!37834)) (_1!1102 lt!37082))))))

(declare-fun b!82339 () Bool)

(assert (=> b!82339 (= e!53701 (containsKey!140 (t!5172 lt!37834) (_1!1102 lt!37082)))))

(assert (= (and d!20727 (not res!42715)) b!82338))

(assert (= (and b!82338 res!42716) b!82339))

(declare-fun m!85089 () Bool)

(assert (=> b!82339 m!85089))

(assert (=> b!81039 d!20727))

(declare-fun lt!38464 () Bool)

(declare-fun d!20729 () Bool)

(assert (=> d!20729 (= lt!38464 (select (content!86 (toList!734 lt!37763)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(declare-fun e!53702 () Bool)

(assert (=> d!20729 (= lt!38464 e!53702)))

(declare-fun res!42718 () Bool)

(assert (=> d!20729 (=> (not res!42718) (not e!53702))))

(assert (=> d!20729 (= res!42718 ((_ is Cons!1510) (toList!734 lt!37763)))))

(assert (=> d!20729 (= (contains!745 (toList!734 lt!37763) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) lt!38464)))

(declare-fun b!82340 () Bool)

(declare-fun e!53703 () Bool)

(assert (=> b!82340 (= e!53702 e!53703)))

(declare-fun res!42717 () Bool)

(assert (=> b!82340 (=> res!42717 e!53703)))

(assert (=> b!82340 (= res!42717 (= (h!2099 (toList!734 lt!37763)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(declare-fun b!82341 () Bool)

(assert (=> b!82341 (= e!53703 (contains!745 (t!5172 (toList!734 lt!37763)) (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))

(assert (= (and d!20729 res!42718) b!82340))

(assert (= (and b!82340 (not res!42717)) b!82341))

(declare-fun m!85091 () Bool)

(assert (=> d!20729 m!85091))

(declare-fun m!85093 () Bool)

(assert (=> d!20729 m!85093))

(declare-fun m!85095 () Bool)

(assert (=> b!82341 m!85095))

(assert (=> b!80897 d!20729))

(declare-fun d!20731 () Bool)

(declare-fun e!53704 () Bool)

(assert (=> d!20731 e!53704))

(declare-fun res!42719 () Bool)

(assert (=> d!20731 (=> res!42719 e!53704)))

(declare-fun lt!38468 () Bool)

(assert (=> d!20731 (= res!42719 (not lt!38468))))

(declare-fun lt!38467 () Bool)

(assert (=> d!20731 (= lt!38468 lt!38467)))

(declare-fun lt!38466 () Unit!2327)

(declare-fun e!53705 () Unit!2327)

(assert (=> d!20731 (= lt!38466 e!53705)))

(declare-fun c!13101 () Bool)

(assert (=> d!20731 (= c!13101 lt!38467)))

(assert (=> d!20731 (= lt!38467 (containsKey!140 (toList!734 lt!37631) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20731 (= (contains!742 lt!37631 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38468)))

(declare-fun b!82342 () Bool)

(declare-fun lt!38465 () Unit!2327)

(assert (=> b!82342 (= e!53705 lt!38465)))

(assert (=> b!82342 (= lt!38465 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37631) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82342 (isDefined!90 (getValueByKey!136 (toList!734 lt!37631) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82343 () Bool)

(declare-fun Unit!2413 () Unit!2327)

(assert (=> b!82343 (= e!53705 Unit!2413)))

(declare-fun b!82344 () Bool)

(assert (=> b!82344 (= e!53704 (isDefined!90 (getValueByKey!136 (toList!734 lt!37631) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20731 c!13101) b!82342))

(assert (= (and d!20731 (not c!13101)) b!82343))

(assert (= (and d!20731 (not res!42719)) b!82344))

(declare-fun m!85097 () Bool)

(assert (=> d!20731 m!85097))

(declare-fun m!85099 () Bool)

(assert (=> b!82342 m!85099))

(declare-fun m!85101 () Bool)

(assert (=> b!82342 m!85101))

(assert (=> b!82342 m!85101))

(declare-fun m!85103 () Bool)

(assert (=> b!82342 m!85103))

(assert (=> b!82344 m!85101))

(assert (=> b!82344 m!85101))

(assert (=> b!82344 m!85103))

(assert (=> b!80730 d!20731))

(assert (=> bm!7540 d!20231))

(declare-fun d!20733 () Bool)

(assert (=> d!20733 (= (apply!80 lt!37611 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1187 (getValueByKey!136 (toList!734 lt!37611) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3489 () Bool)

(assert (= bs!3489 d!20733))

(assert (=> bs!3489 m!82131))

(declare-fun m!85105 () Bool)

(assert (=> bs!3489 m!85105))

(assert (=> bs!3489 m!85105))

(declare-fun m!85107 () Bool)

(assert (=> bs!3489 m!85107))

(assert (=> b!80709 d!20733))

(declare-fun c!13102 () Bool)

(declare-fun d!20735 () Bool)

(assert (=> d!20735 (= c!13102 ((_ is ValueCellFull!914) (select (arr!1889 (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!53706 () V!3001)

(assert (=> d!20735 (= (get!1183 (select (arr!1889 (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53706)))

(declare-fun b!82345 () Bool)

(assert (=> b!82345 (= e!53706 (get!1185 (select (arr!1889 (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82346 () Bool)

(assert (=> b!82346 (= e!53706 (get!1186 (select (arr!1889 (ite c!12529 (_values!2275 newMap!16) (array!3968 (store (arr!1889 (_values!2275 newMap!16)) (index!3112 lt!37277) (ValueCellFull!914 lt!37084)) (size!2132 (_values!2275 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!338 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20735 c!13102) b!82345))

(assert (= (and d!20735 (not c!13102)) b!82346))

(assert (=> b!82345 m!82135))

(assert (=> b!82345 m!82137))

(declare-fun m!85109 () Bool)

(assert (=> b!82345 m!85109))

(assert (=> b!82346 m!82135))

(assert (=> b!82346 m!82137))

(declare-fun m!85111 () Bool)

(assert (=> b!82346 m!85111))

(assert (=> b!80709 d!20735))

(declare-fun b!82350 () Bool)

(declare-fun e!53708 () Option!142)

(assert (=> b!82350 (= e!53708 None!140)))

(declare-fun b!82347 () Bool)

(declare-fun e!53707 () Option!142)

(assert (=> b!82347 (= e!53707 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37462)))))))

(declare-fun b!82349 () Bool)

(assert (=> b!82349 (= e!53708 (getValueByKey!136 (t!5172 (toList!734 lt!37462)) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun c!13103 () Bool)

(declare-fun d!20737 () Bool)

(assert (=> d!20737 (= c!13103 (and ((_ is Cons!1510) (toList!734 lt!37462)) (= (_1!1102 (h!2099 (toList!734 lt!37462))) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20737 (= (getValueByKey!136 (toList!734 lt!37462) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53707)))

(declare-fun b!82348 () Bool)

(assert (=> b!82348 (= e!53707 e!53708)))

(declare-fun c!13104 () Bool)

(assert (=> b!82348 (= c!13104 (and ((_ is Cons!1510) (toList!734 lt!37462)) (not (= (_1!1102 (h!2099 (toList!734 lt!37462))) (_1!1102 (tuple2!2183 lt!37404 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20737 c!13103) b!82347))

(assert (= (and d!20737 (not c!13103)) b!82348))

(assert (= (and b!82348 c!13104) b!82349))

(assert (= (and b!82348 (not c!13104)) b!82350))

(declare-fun m!85113 () Bool)

(assert (=> b!82349 m!85113))

(assert (=> b!80548 d!20737))

(declare-fun b!82351 () Bool)

(declare-fun e!53712 () Bool)

(assert (=> b!82351 (= e!53712 (contains!746 (ite c!12654 (Cons!1511 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) Nil!1512) Nil!1512) (select (arr!1888 (_keys!3955 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!20739 () Bool)

(declare-fun res!42720 () Bool)

(declare-fun e!53709 () Bool)

(assert (=> d!20739 (=> res!42720 e!53709)))

(assert (=> d!20739 (= res!42720 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2131 (_keys!3955 newMap!16))))))

(assert (=> d!20739 (= (arrayNoDuplicates!0 (_keys!3955 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12654 (Cons!1511 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) Nil!1512) Nil!1512)) e!53709)))

(declare-fun b!82352 () Bool)

(declare-fun e!53711 () Bool)

(declare-fun call!7698 () Bool)

(assert (=> b!82352 (= e!53711 call!7698)))

(declare-fun b!82353 () Bool)

(declare-fun e!53710 () Bool)

(assert (=> b!82353 (= e!53710 e!53711)))

(declare-fun c!13105 () Bool)

(assert (=> b!82353 (= c!13105 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!82354 () Bool)

(assert (=> b!82354 (= e!53709 e!53710)))

(declare-fun res!42722 () Bool)

(assert (=> b!82354 (=> (not res!42722) (not e!53710))))

(assert (=> b!82354 (= res!42722 (not e!53712))))

(declare-fun res!42721 () Bool)

(assert (=> b!82354 (=> (not res!42721) (not e!53712))))

(assert (=> b!82354 (= res!42721 (validKeyInArray!0 (select (arr!1888 (_keys!3955 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!7695 () Bool)

(assert (=> bm!7695 (= call!7698 (arrayNoDuplicates!0 (_keys!3955 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13105 (Cons!1511 (select (arr!1888 (_keys!3955 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!12654 (Cons!1511 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) Nil!1512) Nil!1512)) (ite c!12654 (Cons!1511 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000) Nil!1512) Nil!1512))))))

(declare-fun b!82355 () Bool)

(assert (=> b!82355 (= e!53711 call!7698)))

(assert (= (and d!20739 (not res!42720)) b!82354))

(assert (= (and b!82354 res!42721) b!82351))

(assert (= (and b!82354 res!42722) b!82353))

(assert (= (and b!82353 c!13105) b!82352))

(assert (= (and b!82353 (not c!13105)) b!82355))

(assert (= (or b!82352 b!82355) bm!7695))

(assert (=> b!82351 m!83195))

(assert (=> b!82351 m!83195))

(declare-fun m!85115 () Bool)

(assert (=> b!82351 m!85115))

(assert (=> b!82353 m!83195))

(assert (=> b!82353 m!83195))

(assert (=> b!82353 m!83197))

(assert (=> b!82354 m!83195))

(assert (=> b!82354 m!83195))

(assert (=> b!82354 m!83197))

(assert (=> bm!7695 m!83195))

(declare-fun m!85117 () Bool)

(assert (=> bm!7695 m!85117))

(assert (=> bm!7520 d!20739))

(declare-fun d!20741 () Bool)

(declare-fun lt!38469 () Bool)

(assert (=> d!20741 (= lt!38469 (select (content!86 (t!5172 (toList!734 lt!37342))) lt!37082))))

(declare-fun e!53713 () Bool)

(assert (=> d!20741 (= lt!38469 e!53713)))

(declare-fun res!42724 () Bool)

(assert (=> d!20741 (=> (not res!42724) (not e!53713))))

(assert (=> d!20741 (= res!42724 ((_ is Cons!1510) (t!5172 (toList!734 lt!37342))))))

(assert (=> d!20741 (= (contains!745 (t!5172 (toList!734 lt!37342)) lt!37082) lt!38469)))

(declare-fun b!82356 () Bool)

(declare-fun e!53714 () Bool)

(assert (=> b!82356 (= e!53713 e!53714)))

(declare-fun res!42723 () Bool)

(assert (=> b!82356 (=> res!42723 e!53714)))

(assert (=> b!82356 (= res!42723 (= (h!2099 (t!5172 (toList!734 lt!37342))) lt!37082))))

(declare-fun b!82357 () Bool)

(assert (=> b!82357 (= e!53714 (contains!745 (t!5172 (t!5172 (toList!734 lt!37342))) lt!37082))))

(assert (= (and d!20741 res!42724) b!82356))

(assert (= (and b!82356 (not res!42723)) b!82357))

(assert (=> d!20741 m!83771))

(declare-fun m!85119 () Bool)

(assert (=> d!20741 m!85119))

(declare-fun m!85121 () Bool)

(assert (=> b!82357 m!85121))

(assert (=> b!80878 d!20741))

(declare-fun d!20743 () Bool)

(declare-fun res!42725 () Bool)

(declare-fun e!53715 () Bool)

(assert (=> d!20743 (=> res!42725 e!53715)))

(assert (=> d!20743 (= res!42725 (and ((_ is Cons!1510) lt!37439) (= (_1!1102 (h!2099 lt!37439)) (_1!1102 lt!37082))))))

(assert (=> d!20743 (= (containsKey!140 lt!37439 (_1!1102 lt!37082)) e!53715)))

(declare-fun b!82358 () Bool)

(declare-fun e!53716 () Bool)

(assert (=> b!82358 (= e!53715 e!53716)))

(declare-fun res!42726 () Bool)

(assert (=> b!82358 (=> (not res!42726) (not e!53716))))

(assert (=> b!82358 (= res!42726 (and (or (not ((_ is Cons!1510) lt!37439)) (bvsle (_1!1102 (h!2099 lt!37439)) (_1!1102 lt!37082))) ((_ is Cons!1510) lt!37439) (bvslt (_1!1102 (h!2099 lt!37439)) (_1!1102 lt!37082))))))

(declare-fun b!82359 () Bool)

(assert (=> b!82359 (= e!53716 (containsKey!140 (t!5172 lt!37439) (_1!1102 lt!37082)))))

(assert (= (and d!20743 (not res!42725)) b!82358))

(assert (= (and b!82358 res!42726) b!82359))

(declare-fun m!85123 () Bool)

(assert (=> b!82359 m!85123))

(assert (=> b!80530 d!20743))

(declare-fun b!82363 () Bool)

(declare-fun e!53718 () Option!142)

(assert (=> b!82363 (= e!53718 None!140)))

(declare-fun b!82360 () Bool)

(declare-fun e!53717 () Option!142)

(assert (=> b!82360 (= e!53717 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37446)))))))

(declare-fun b!82362 () Bool)

(assert (=> b!82362 (= e!53718 (getValueByKey!136 (t!5172 (toList!734 lt!37446)) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20745 () Bool)

(declare-fun c!13106 () Bool)

(assert (=> d!20745 (= c!13106 (and ((_ is Cons!1510) (toList!734 lt!37446)) (= (_1!1102 (h!2099 (toList!734 lt!37446))) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20745 (= (getValueByKey!136 (toList!734 lt!37446) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53717)))

(declare-fun b!82361 () Bool)

(assert (=> b!82361 (= e!53717 e!53718)))

(declare-fun c!13107 () Bool)

(assert (=> b!82361 (= c!13107 (and ((_ is Cons!1510) (toList!734 lt!37446)) (not (= (_1!1102 (h!2099 (toList!734 lt!37446))) (_1!1102 (tuple2!2183 lt!37412 (zeroValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20745 c!13106) b!82360))

(assert (= (and d!20745 (not c!13106)) b!82361))

(assert (= (and b!82361 c!13107) b!82362))

(assert (= (and b!82361 (not c!13107)) b!82363))

(declare-fun m!85125 () Bool)

(assert (=> b!82362 m!85125))

(assert (=> b!80536 d!20745))

(declare-fun d!20747 () Bool)

(declare-fun e!53719 () Bool)

(assert (=> d!20747 e!53719))

(declare-fun res!42727 () Bool)

(assert (=> d!20747 (=> res!42727 e!53719)))

(declare-fun lt!38473 () Bool)

(assert (=> d!20747 (= res!42727 (not lt!38473))))

(declare-fun lt!38472 () Bool)

(assert (=> d!20747 (= lt!38473 lt!38472)))

(declare-fun lt!38471 () Unit!2327)

(declare-fun e!53720 () Unit!2327)

(assert (=> d!20747 (= lt!38471 e!53720)))

(declare-fun c!13108 () Bool)

(assert (=> d!20747 (= c!13108 lt!38472)))

(assert (=> d!20747 (= lt!38472 (containsKey!140 (toList!734 lt!37747) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!20747 (= (contains!742 lt!37747 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38473)))

(declare-fun b!82364 () Bool)

(declare-fun lt!38470 () Unit!2327)

(assert (=> b!82364 (= e!53720 lt!38470)))

(assert (=> b!82364 (= lt!38470 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37747) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> b!82364 (isDefined!90 (getValueByKey!136 (toList!734 lt!37747) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!82365 () Bool)

(declare-fun Unit!2414 () Unit!2327)

(assert (=> b!82365 (= e!53720 Unit!2414)))

(declare-fun b!82366 () Bool)

(assert (=> b!82366 (= e!53719 (isDefined!90 (getValueByKey!136 (toList!734 lt!37747) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20747 c!13108) b!82364))

(assert (= (and d!20747 (not c!13108)) b!82365))

(assert (= (and d!20747 (not res!42727)) b!82366))

(declare-fun m!85127 () Bool)

(assert (=> d!20747 m!85127))

(declare-fun m!85129 () Bool)

(assert (=> b!82364 m!85129))

(assert (=> b!82364 m!82521))

(assert (=> b!82364 m!82521))

(declare-fun m!85131 () Bool)

(assert (=> b!82364 m!85131))

(assert (=> b!82366 m!82521))

(assert (=> b!82366 m!82521))

(assert (=> b!82366 m!85131))

(assert (=> d!19789 d!20747))

(declare-fun b!82370 () Bool)

(declare-fun e!53722 () Option!142)

(assert (=> b!82370 (= e!53722 None!140)))

(declare-fun b!82367 () Bool)

(declare-fun e!53721 () Option!142)

(assert (=> b!82367 (= e!53721 (Some!141 (_2!1102 (h!2099 lt!37746))))))

(declare-fun b!82369 () Bool)

(assert (=> b!82369 (= e!53722 (getValueByKey!136 (t!5172 lt!37746) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20749 () Bool)

(declare-fun c!13109 () Bool)

(assert (=> d!20749 (= c!13109 (and ((_ is Cons!1510) lt!37746) (= (_1!1102 (h!2099 lt!37746)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20749 (= (getValueByKey!136 lt!37746 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53721)))

(declare-fun b!82368 () Bool)

(assert (=> b!82368 (= e!53721 e!53722)))

(declare-fun c!13110 () Bool)

(assert (=> b!82368 (= c!13110 (and ((_ is Cons!1510) lt!37746) (not (= (_1!1102 (h!2099 lt!37746)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20749 c!13109) b!82367))

(assert (= (and d!20749 (not c!13109)) b!82368))

(assert (= (and b!82368 c!13110) b!82369))

(assert (= (and b!82368 (not c!13110)) b!82370))

(declare-fun m!85133 () Bool)

(assert (=> b!82369 m!85133))

(assert (=> d!19789 d!20749))

(declare-fun d!20751 () Bool)

(assert (=> d!20751 (= (getValueByKey!136 lt!37746 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (Some!141 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun lt!38474 () Unit!2327)

(assert (=> d!20751 (= lt!38474 (choose!477 lt!37746 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun e!53723 () Bool)

(assert (=> d!20751 e!53723))

(declare-fun res!42728 () Bool)

(assert (=> d!20751 (=> (not res!42728) (not e!53723))))

(assert (=> d!20751 (= res!42728 (isStrictlySorted!291 lt!37746))))

(assert (=> d!20751 (= (lemmaContainsTupThenGetReturnValue!56 lt!37746 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38474)))

(declare-fun b!82371 () Bool)

(declare-fun res!42729 () Bool)

(assert (=> b!82371 (=> (not res!42729) (not e!53723))))

(assert (=> b!82371 (= res!42729 (containsKey!140 lt!37746 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!82372 () Bool)

(assert (=> b!82372 (= e!53723 (contains!745 lt!37746 (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (= (and d!20751 res!42728) b!82371))

(assert (= (and b!82371 res!42729) b!82372))

(assert (=> d!20751 m!82515))

(declare-fun m!85135 () Bool)

(assert (=> d!20751 m!85135))

(declare-fun m!85137 () Bool)

(assert (=> d!20751 m!85137))

(declare-fun m!85139 () Bool)

(assert (=> b!82371 m!85139))

(declare-fun m!85141 () Bool)

(assert (=> b!82372 m!85141))

(assert (=> d!19789 d!20751))

(declare-fun b!82373 () Bool)

(declare-fun e!53727 () List!1514)

(declare-fun call!7701 () List!1514)

(assert (=> b!82373 (= e!53727 call!7701)))

(declare-fun e!53724 () List!1514)

(declare-fun call!7700 () List!1514)

(declare-fun bm!7696 () Bool)

(declare-fun c!13114 () Bool)

(assert (=> bm!7696 (= call!7700 ($colon$colon!69 e!53724 (ite c!13114 (h!2099 (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(declare-fun c!13112 () Bool)

(assert (=> bm!7696 (= c!13112 c!13114)))

(declare-fun b!82374 () Bool)

(declare-fun e!53728 () Bool)

(declare-fun lt!38475 () List!1514)

(assert (=> b!82374 (= e!53728 (contains!745 lt!38475 (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun bm!7697 () Bool)

(declare-fun call!7699 () List!1514)

(assert (=> bm!7697 (= call!7701 call!7699)))

(declare-fun d!20753 () Bool)

(assert (=> d!20753 e!53728))

(declare-fun res!42731 () Bool)

(assert (=> d!20753 (=> (not res!42731) (not e!53728))))

(assert (=> d!20753 (= res!42731 (isStrictlySorted!291 lt!38475))))

(declare-fun e!53726 () List!1514)

(assert (=> d!20753 (= lt!38475 e!53726)))

(assert (=> d!20753 (= c!13114 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (bvslt (_1!1102 (h!2099 (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20753 (isStrictlySorted!291 (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!20753 (= (insertStrictlySorted!59 (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) lt!38475)))

(declare-fun c!13111 () Bool)

(declare-fun b!82375 () Bool)

(assert (=> b!82375 (= c!13111 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (bvsgt (_1!1102 (h!2099 (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun e!53725 () List!1514)

(assert (=> b!82375 (= e!53725 e!53727)))

(declare-fun b!82376 () Bool)

(assert (=> b!82376 (= e!53725 call!7699)))

(declare-fun b!82377 () Bool)

(assert (=> b!82377 (= e!53726 call!7700)))

(declare-fun bm!7698 () Bool)

(assert (=> bm!7698 (= call!7699 call!7700)))

(declare-fun b!82378 () Bool)

(declare-fun res!42730 () Bool)

(assert (=> b!82378 (=> (not res!42730) (not e!53728))))

(assert (=> b!82378 (= res!42730 (containsKey!140 lt!38475 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun b!82379 () Bool)

(assert (=> b!82379 (= e!53727 call!7701)))

(declare-fun c!13113 () Bool)

(declare-fun b!82380 () Bool)

(assert (=> b!82380 (= e!53724 (ite c!13113 (t!5172 (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (ite c!13111 (Cons!1510 (h!2099 (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (t!5172 (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))) Nil!1511)))))

(declare-fun b!82381 () Bool)

(assert (=> b!82381 (= e!53726 e!53725)))

(assert (=> b!82381 (= c!13113 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(declare-fun b!82382 () Bool)

(assert (=> b!82382 (= e!53724 (insertStrictlySorted!59 (t!5172 (toList!734 (+!104 lt!37073 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (= (and d!20753 c!13114) b!82377))

(assert (= (and d!20753 (not c!13114)) b!82381))

(assert (= (and b!82381 c!13113) b!82376))

(assert (= (and b!82381 (not c!13113)) b!82375))

(assert (= (and b!82375 c!13111) b!82379))

(assert (= (and b!82375 (not c!13111)) b!82373))

(assert (= (or b!82379 b!82373) bm!7697))

(assert (= (or b!82376 bm!7697) bm!7698))

(assert (= (or b!82377 bm!7698) bm!7696))

(assert (= (and bm!7696 c!13112) b!82382))

(assert (= (and bm!7696 (not c!13112)) b!82380))

(assert (= (and d!20753 res!42731) b!82378))

(assert (= (and b!82378 res!42730) b!82374))

(declare-fun m!85143 () Bool)

(assert (=> d!20753 m!85143))

(declare-fun m!85145 () Bool)

(assert (=> d!20753 m!85145))

(declare-fun m!85147 () Bool)

(assert (=> b!82382 m!85147))

(declare-fun m!85149 () Bool)

(assert (=> bm!7696 m!85149))

(declare-fun m!85151 () Bool)

(assert (=> b!82378 m!85151))

(declare-fun m!85153 () Bool)

(assert (=> b!82374 m!85153))

(assert (=> d!19789 d!20753))

(assert (=> b!80542 d!20515))

(assert (=> b!80542 d!20517))

(declare-fun d!20755 () Bool)

(declare-fun lt!38476 () Bool)

(assert (=> d!20755 (= lt!38476 (select (content!86 lt!37349) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(declare-fun e!53729 () Bool)

(assert (=> d!20755 (= lt!38476 e!53729)))

(declare-fun res!42733 () Bool)

(assert (=> d!20755 (=> (not res!42733) (not e!53729))))

(assert (=> d!20755 (= res!42733 ((_ is Cons!1510) lt!37349))))

(assert (=> d!20755 (= (contains!745 lt!37349 (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))) lt!38476)))

(declare-fun b!82383 () Bool)

(declare-fun e!53730 () Bool)

(assert (=> b!82383 (= e!53729 e!53730)))

(declare-fun res!42732 () Bool)

(assert (=> b!82383 (=> res!42732 e!53730)))

(assert (=> b!82383 (= res!42732 (= (h!2099 lt!37349) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(declare-fun b!82384 () Bool)

(assert (=> b!82384 (= e!53730 (contains!745 (t!5172 lt!37349) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(assert (= (and d!20755 res!42733) b!82383))

(assert (= (and b!82383 (not res!42732)) b!82384))

(declare-fun m!85155 () Bool)

(assert (=> d!20755 m!85155))

(declare-fun m!85157 () Bool)

(assert (=> d!20755 m!85157))

(declare-fun m!85159 () Bool)

(assert (=> b!82384 m!85159))

(assert (=> b!80582 d!20755))

(declare-fun d!20757 () Bool)

(declare-fun lt!38477 () Bool)

(assert (=> d!20757 (= lt!38477 (select (content!86 lt!37311) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(declare-fun e!53731 () Bool)

(assert (=> d!20757 (= lt!38477 e!53731)))

(declare-fun res!42735 () Bool)

(assert (=> d!20757 (=> (not res!42735) (not e!53731))))

(assert (=> d!20757 (= res!42735 ((_ is Cons!1510) lt!37311))))

(assert (=> d!20757 (= (contains!745 lt!37311 (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))) lt!38477)))

(declare-fun b!82385 () Bool)

(declare-fun e!53732 () Bool)

(assert (=> b!82385 (= e!53731 e!53732)))

(declare-fun res!42734 () Bool)

(assert (=> b!82385 (=> res!42734 e!53732)))

(assert (=> b!82385 (= res!42734 (= (h!2099 lt!37311) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(declare-fun b!82386 () Bool)

(assert (=> b!82386 (= e!53732 (contains!745 (t!5172 lt!37311) (tuple2!2183 (_1!1102 lt!37079) (_2!1102 lt!37079))))))

(assert (= (and d!20757 res!42735) b!82385))

(assert (= (and b!82385 (not res!42734)) b!82386))

(declare-fun m!85161 () Bool)

(assert (=> d!20757 m!85161))

(declare-fun m!85163 () Bool)

(assert (=> d!20757 m!85163))

(declare-fun m!85165 () Bool)

(assert (=> b!82386 m!85165))

(assert (=> b!80866 d!20757))

(assert (=> b!80765 d!20075))

(declare-fun d!20759 () Bool)

(declare-fun lt!38478 () Bool)

(assert (=> d!20759 (= lt!38478 (select (content!86 lt!37341) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun e!53733 () Bool)

(assert (=> d!20759 (= lt!38478 e!53733)))

(declare-fun res!42737 () Bool)

(assert (=> d!20759 (=> (not res!42737) (not e!53733))))

(assert (=> d!20759 (= res!42737 ((_ is Cons!1510) lt!37341))))

(assert (=> d!20759 (= (contains!745 lt!37341 (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))) lt!38478)))

(declare-fun b!82387 () Bool)

(declare-fun e!53734 () Bool)

(assert (=> b!82387 (= e!53733 e!53734)))

(declare-fun res!42736 () Bool)

(assert (=> b!82387 (=> res!42736 e!53734)))

(assert (=> b!82387 (= res!42736 (= (h!2099 lt!37341) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(declare-fun b!82388 () Bool)

(assert (=> b!82388 (= e!53734 (contains!745 (t!5172 lt!37341) (tuple2!2183 (_1!1102 lt!37082) (_2!1102 lt!37082))))))

(assert (= (and d!20759 res!42737) b!82387))

(assert (= (and b!82387 (not res!42736)) b!82388))

(declare-fun m!85167 () Bool)

(assert (=> d!20759 m!85167))

(declare-fun m!85169 () Bool)

(assert (=> d!20759 m!85169))

(declare-fun m!85171 () Bool)

(assert (=> b!82388 m!85171))

(assert (=> b!81033 d!20759))

(declare-fun d!20761 () Bool)

(declare-fun res!42738 () Bool)

(declare-fun e!53735 () Bool)

(assert (=> d!20761 (=> res!42738 e!53735)))

(assert (=> d!20761 (= res!42738 (and ((_ is Cons!1510) (toList!734 lt!37346)) (= (_1!1102 (h!2099 (toList!734 lt!37346))) (_1!1102 lt!37075))))))

(assert (=> d!20761 (= (containsKey!140 (toList!734 lt!37346) (_1!1102 lt!37075)) e!53735)))

(declare-fun b!82389 () Bool)

(declare-fun e!53736 () Bool)

(assert (=> b!82389 (= e!53735 e!53736)))

(declare-fun res!42739 () Bool)

(assert (=> b!82389 (=> (not res!42739) (not e!53736))))

(assert (=> b!82389 (= res!42739 (and (or (not ((_ is Cons!1510) (toList!734 lt!37346))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37346))) (_1!1102 lt!37075))) ((_ is Cons!1510) (toList!734 lt!37346)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37346))) (_1!1102 lt!37075))))))

(declare-fun b!82390 () Bool)

(assert (=> b!82390 (= e!53736 (containsKey!140 (t!5172 (toList!734 lt!37346)) (_1!1102 lt!37075)))))

(assert (= (and d!20761 (not res!42738)) b!82389))

(assert (= (and b!82389 res!42739) b!82390))

(declare-fun m!85173 () Bool)

(assert (=> b!82390 m!85173))

(assert (=> d!19663 d!20761))

(declare-fun b!82394 () Bool)

(declare-fun e!53738 () Option!142)

(assert (=> b!82394 (= e!53738 None!140)))

(declare-fun b!82391 () Bool)

(declare-fun e!53737 () Option!142)

(assert (=> b!82391 (= e!53737 (Some!141 (_2!1102 (h!2099 (t!5172 (toList!734 lt!37316))))))))

(declare-fun b!82393 () Bool)

(assert (=> b!82393 (= e!53738 (getValueByKey!136 (t!5172 (t!5172 (toList!734 lt!37316))) (_1!1102 lt!37082)))))

(declare-fun d!20763 () Bool)

(declare-fun c!13115 () Bool)

(assert (=> d!20763 (= c!13115 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37316))) (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37316)))) (_1!1102 lt!37082))))))

(assert (=> d!20763 (= (getValueByKey!136 (t!5172 (toList!734 lt!37316)) (_1!1102 lt!37082)) e!53737)))

(declare-fun b!82392 () Bool)

(assert (=> b!82392 (= e!53737 e!53738)))

(declare-fun c!13116 () Bool)

(assert (=> b!82392 (= c!13116 (and ((_ is Cons!1510) (t!5172 (toList!734 lt!37316))) (not (= (_1!1102 (h!2099 (t!5172 (toList!734 lt!37316)))) (_1!1102 lt!37082)))))))

(assert (= (and d!20763 c!13115) b!82391))

(assert (= (and d!20763 (not c!13115)) b!82392))

(assert (= (and b!82392 c!13116) b!82393))

(assert (= (and b!82392 (not c!13116)) b!82394))

(declare-fun m!85175 () Bool)

(assert (=> b!82393 m!85175))

(assert (=> b!81023 d!20763))

(assert (=> bm!7498 d!19767))

(assert (=> b!81013 d!20659))

(declare-fun d!20765 () Bool)

(declare-fun lt!38479 () Bool)

(assert (=> d!20765 (= lt!38479 (select (content!86 lt!37707) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(declare-fun e!53739 () Bool)

(assert (=> d!20765 (= lt!38479 e!53739)))

(declare-fun res!42741 () Bool)

(assert (=> d!20765 (=> (not res!42741) (not e!53739))))

(assert (=> d!20765 (= res!42741 ((_ is Cons!1510) lt!37707))))

(assert (=> d!20765 (= (contains!745 lt!37707 (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))) lt!38479)))

(declare-fun b!82395 () Bool)

(declare-fun e!53740 () Bool)

(assert (=> b!82395 (= e!53739 e!53740)))

(declare-fun res!42740 () Bool)

(assert (=> b!82395 (=> res!42740 e!53740)))

(assert (=> b!82395 (= res!42740 (= (h!2099 lt!37707) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(declare-fun b!82396 () Bool)

(assert (=> b!82396 (= e!53740 (contains!745 (t!5172 lt!37707) (tuple2!2183 (_1!1102 lt!37075) (_2!1102 lt!37075))))))

(assert (= (and d!20765 res!42741) b!82395))

(assert (= (and b!82395 (not res!42740)) b!82396))

(declare-fun m!85177 () Bool)

(assert (=> d!20765 m!85177))

(declare-fun m!85179 () Bool)

(assert (=> d!20765 m!85179))

(declare-fun m!85181 () Bool)

(assert (=> b!82396 m!85181))

(assert (=> b!80828 d!20765))

(declare-fun d!20767 () Bool)

(declare-fun e!53741 () Bool)

(assert (=> d!20767 e!53741))

(declare-fun res!42742 () Bool)

(assert (=> d!20767 (=> res!42742 e!53741)))

(declare-fun lt!38483 () Bool)

(assert (=> d!20767 (= res!42742 (not lt!38483))))

(declare-fun lt!38482 () Bool)

(assert (=> d!20767 (= lt!38483 lt!38482)))

(declare-fun lt!38481 () Unit!2327)

(declare-fun e!53742 () Unit!2327)

(assert (=> d!20767 (= lt!38481 e!53742)))

(declare-fun c!13117 () Bool)

(assert (=> d!20767 (= c!13117 lt!38482)))

(assert (=> d!20767 (= lt!38482 (containsKey!140 (toList!734 lt!37739) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!20767 (= (contains!742 lt!37739 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38483)))

(declare-fun b!82397 () Bool)

(declare-fun lt!38480 () Unit!2327)

(assert (=> b!82397 (= e!53742 lt!38480)))

(assert (=> b!82397 (= lt!38480 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37739) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> b!82397 (isDefined!90 (getValueByKey!136 (toList!734 lt!37739) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!82398 () Bool)

(declare-fun Unit!2415 () Unit!2327)

(assert (=> b!82398 (= e!53742 Unit!2415)))

(declare-fun b!82399 () Bool)

(assert (=> b!82399 (= e!53741 (isDefined!90 (getValueByKey!136 (toList!734 lt!37739) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (= (and d!20767 c!13117) b!82397))

(assert (= (and d!20767 (not c!13117)) b!82398))

(assert (= (and d!20767 (not res!42742)) b!82399))

(declare-fun m!85183 () Bool)

(assert (=> d!20767 m!85183))

(declare-fun m!85185 () Bool)

(assert (=> b!82397 m!85185))

(assert (=> b!82397 m!82497))

(assert (=> b!82397 m!82497))

(declare-fun m!85187 () Bool)

(assert (=> b!82397 m!85187))

(assert (=> b!82399 m!82497))

(assert (=> b!82399 m!82497))

(assert (=> b!82399 m!85187))

(assert (=> d!19783 d!20767))

(declare-fun b!82403 () Bool)

(declare-fun e!53744 () Option!142)

(assert (=> b!82403 (= e!53744 None!140)))

(declare-fun b!82400 () Bool)

(declare-fun e!53743 () Option!142)

(assert (=> b!82400 (= e!53743 (Some!141 (_2!1102 (h!2099 lt!37738))))))

(declare-fun b!82402 () Bool)

(assert (=> b!82402 (= e!53744 (getValueByKey!136 (t!5172 lt!37738) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun d!20769 () Bool)

(declare-fun c!13118 () Bool)

(assert (=> d!20769 (= c!13118 (and ((_ is Cons!1510) lt!37738) (= (_1!1102 (h!2099 lt!37738)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20769 (= (getValueByKey!136 lt!37738 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) e!53743)))

(declare-fun b!82401 () Bool)

(assert (=> b!82401 (= e!53743 e!53744)))

(declare-fun c!13119 () Bool)

(assert (=> b!82401 (= c!13119 (and ((_ is Cons!1510) lt!37738) (not (= (_1!1102 (h!2099 lt!37738)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (= (and d!20769 c!13118) b!82400))

(assert (= (and d!20769 (not c!13118)) b!82401))

(assert (= (and b!82401 c!13119) b!82402))

(assert (= (and b!82401 (not c!13119)) b!82403))

(declare-fun m!85189 () Bool)

(assert (=> b!82402 m!85189))

(assert (=> d!19783 d!20769))

(declare-fun d!20771 () Bool)

(assert (=> d!20771 (= (getValueByKey!136 lt!37738 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun lt!38484 () Unit!2327)

(assert (=> d!20771 (= lt!38484 (choose!477 lt!37738 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun e!53745 () Bool)

(assert (=> d!20771 e!53745))

(declare-fun res!42743 () Bool)

(assert (=> d!20771 (=> (not res!42743) (not e!53745))))

(assert (=> d!20771 (= res!42743 (isStrictlySorted!291 lt!37738))))

(assert (=> d!20771 (= (lemmaContainsTupThenGetReturnValue!56 lt!37738 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38484)))

(declare-fun b!82404 () Bool)

(declare-fun res!42744 () Bool)

(assert (=> b!82404 (=> (not res!42744) (not e!53745))))

(assert (=> b!82404 (= res!42744 (containsKey!140 lt!37738 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!82405 () Bool)

(assert (=> b!82405 (= e!53745 (contains!745 lt!37738 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (= (and d!20771 res!42743) b!82404))

(assert (= (and b!82404 res!42744) b!82405))

(assert (=> d!20771 m!82491))

(declare-fun m!85191 () Bool)

(assert (=> d!20771 m!85191))

(declare-fun m!85193 () Bool)

(assert (=> d!20771 m!85193))

(declare-fun m!85195 () Bool)

(assert (=> b!82404 m!85195))

(declare-fun m!85197 () Bool)

(assert (=> b!82405 m!85197))

(assert (=> d!19783 d!20771))

(declare-fun b!82406 () Bool)

(declare-fun e!53749 () List!1514)

(declare-fun call!7704 () List!1514)

(assert (=> b!82406 (= e!53749 call!7704)))

(declare-fun call!7703 () List!1514)

(declare-fun bm!7699 () Bool)

(declare-fun c!13123 () Bool)

(declare-fun e!53746 () List!1514)

(assert (=> bm!7699 (= call!7703 ($colon$colon!69 e!53746 (ite c!13123 (h!2099 (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(declare-fun c!13121 () Bool)

(assert (=> bm!7699 (= c!13121 c!13123)))

(declare-fun lt!38485 () List!1514)

(declare-fun b!82407 () Bool)

(declare-fun e!53750 () Bool)

(assert (=> b!82407 (= e!53750 (contains!745 lt!38485 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun bm!7700 () Bool)

(declare-fun call!7702 () List!1514)

(assert (=> bm!7700 (= call!7704 call!7702)))

(declare-fun d!20773 () Bool)

(assert (=> d!20773 e!53750))

(declare-fun res!42746 () Bool)

(assert (=> d!20773 (=> (not res!42746) (not e!53750))))

(assert (=> d!20773 (= res!42746 (isStrictlySorted!291 lt!38485))))

(declare-fun e!53748 () List!1514)

(assert (=> d!20773 (= lt!38485 e!53748)))

(assert (=> d!20773 (= c!13123 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (bvslt (_1!1102 (h!2099 (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20773 (isStrictlySorted!291 (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(assert (=> d!20773 (= (insertStrictlySorted!59 (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38485)))

(declare-fun c!13120 () Bool)

(declare-fun b!82408 () Bool)

(assert (=> b!82408 (= c!13120 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (bvsgt (_1!1102 (h!2099 (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun e!53747 () List!1514)

(assert (=> b!82408 (= e!53747 e!53749)))

(declare-fun b!82409 () Bool)

(assert (=> b!82409 (= e!53747 call!7702)))

(declare-fun b!82410 () Bool)

(assert (=> b!82410 (= e!53748 call!7703)))

(declare-fun bm!7701 () Bool)

(assert (=> bm!7701 (= call!7702 call!7703)))

(declare-fun b!82411 () Bool)

(declare-fun res!42745 () Bool)

(assert (=> b!82411 (=> (not res!42745) (not e!53750))))

(assert (=> b!82411 (= res!42745 (containsKey!140 lt!38485 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!82412 () Bool)

(assert (=> b!82412 (= e!53749 call!7704)))

(declare-fun b!82413 () Bool)

(declare-fun c!13122 () Bool)

(assert (=> b!82413 (= e!53746 (ite c!13122 (t!5172 (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (ite c!13120 (Cons!1510 (h!2099 (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (t!5172 (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))) Nil!1511)))))

(declare-fun b!82414 () Bool)

(assert (=> b!82414 (= e!53748 e!53747)))

(assert (=> b!82414 (= c!13122 (and ((_ is Cons!1510) (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (= (_1!1102 (h!2099 (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!82415 () Bool)

(assert (=> b!82415 (= e!53746 (insertStrictlySorted!59 (t!5172 (toList!734 (+!104 lt!37073 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (= (and d!20773 c!13123) b!82410))

(assert (= (and d!20773 (not c!13123)) b!82414))

(assert (= (and b!82414 c!13122) b!82409))

(assert (= (and b!82414 (not c!13122)) b!82408))

(assert (= (and b!82408 c!13120) b!82412))

(assert (= (and b!82408 (not c!13120)) b!82406))

(assert (= (or b!82412 b!82406) bm!7700))

(assert (= (or b!82409 bm!7700) bm!7701))

(assert (= (or b!82410 bm!7701) bm!7699))

(assert (= (and bm!7699 c!13121) b!82415))

(assert (= (and bm!7699 (not c!13121)) b!82413))

(assert (= (and d!20773 res!42746) b!82411))

(assert (= (and b!82411 res!42745) b!82407))

(declare-fun m!85199 () Bool)

(assert (=> d!20773 m!85199))

(declare-fun m!85201 () Bool)

(assert (=> d!20773 m!85201))

(declare-fun m!85203 () Bool)

(assert (=> b!82415 m!85203))

(declare-fun m!85205 () Bool)

(assert (=> bm!7699 m!85205))

(declare-fun m!85207 () Bool)

(assert (=> b!82411 m!85207))

(declare-fun m!85209 () Bool)

(assert (=> b!82407 m!85209))

(assert (=> d!19783 d!20773))

(declare-fun d!20775 () Bool)

(declare-fun e!53751 () Bool)

(assert (=> d!20775 e!53751))

(declare-fun res!42747 () Bool)

(assert (=> d!20775 (=> res!42747 e!53751)))

(declare-fun lt!38489 () Bool)

(assert (=> d!20775 (= res!42747 (not lt!38489))))

(declare-fun lt!38488 () Bool)

(assert (=> d!20775 (= lt!38489 lt!38488)))

(declare-fun lt!38487 () Unit!2327)

(declare-fun e!53752 () Unit!2327)

(assert (=> d!20775 (= lt!38487 e!53752)))

(declare-fun c!13124 () Bool)

(assert (=> d!20775 (= c!13124 lt!38488)))

(assert (=> d!20775 (= lt!38488 (containsKey!140 (toList!734 lt!37611) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!20775 (= (contains!742 lt!37611 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) lt!38489)))

(declare-fun b!82416 () Bool)

(declare-fun lt!38486 () Unit!2327)

(assert (=> b!82416 (= e!53752 lt!38486)))

(assert (=> b!82416 (= lt!38486 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37611) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82416 (isDefined!90 (getValueByKey!136 (toList!734 lt!37611) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82417 () Bool)

(declare-fun Unit!2416 () Unit!2327)

(assert (=> b!82417 (= e!53752 Unit!2416)))

(declare-fun b!82418 () Bool)

(assert (=> b!82418 (= e!53751 (isDefined!90 (getValueByKey!136 (toList!734 lt!37611) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!20775 c!13124) b!82416))

(assert (= (and d!20775 (not c!13124)) b!82417))

(assert (= (and d!20775 (not res!42747)) b!82418))

(assert (=> d!20775 m!82131))

(declare-fun m!85211 () Bool)

(assert (=> d!20775 m!85211))

(assert (=> b!82416 m!82131))

(declare-fun m!85213 () Bool)

(assert (=> b!82416 m!85213))

(assert (=> b!82416 m!82131))

(assert (=> b!82416 m!85105))

(assert (=> b!82416 m!85105))

(declare-fun m!85215 () Bool)

(assert (=> b!82416 m!85215))

(assert (=> b!82418 m!82131))

(assert (=> b!82418 m!85105))

(assert (=> b!82418 m!85105))

(assert (=> b!82418 m!85215))

(assert (=> b!80716 d!20775))

(declare-fun d!20777 () Bool)

(declare-fun res!42748 () Bool)

(declare-fun e!53753 () Bool)

(assert (=> d!20777 (=> res!42748 e!53753)))

(assert (=> d!20777 (= res!42748 (and ((_ is Cons!1510) (toList!734 lt!37406)) (= (_1!1102 (h!2099 (toList!734 lt!37406))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20777 (= (containsKey!140 (toList!734 lt!37406) #b0000000000000000000000000000000000000000000000000000000000000000) e!53753)))

(declare-fun b!82419 () Bool)

(declare-fun e!53754 () Bool)

(assert (=> b!82419 (= e!53753 e!53754)))

(declare-fun res!42749 () Bool)

(assert (=> b!82419 (=> (not res!42749) (not e!53754))))

(assert (=> b!82419 (= res!42749 (and (or (not ((_ is Cons!1510) (toList!734 lt!37406))) (bvsle (_1!1102 (h!2099 (toList!734 lt!37406))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1510) (toList!734 lt!37406)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37406))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82420 () Bool)

(assert (=> b!82420 (= e!53754 (containsKey!140 (t!5172 (toList!734 lt!37406)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20777 (not res!42748)) b!82419))

(assert (= (and b!82419 res!42749) b!82420))

(declare-fun m!85217 () Bool)

(assert (=> b!82420 m!85217))

(assert (=> d!19779 d!20777))

(declare-fun d!20779 () Bool)

(declare-fun e!53755 () Bool)

(assert (=> d!20779 e!53755))

(declare-fun res!42750 () Bool)

(assert (=> d!20779 (=> res!42750 e!53755)))

(declare-fun lt!38493 () Bool)

(assert (=> d!20779 (= res!42750 (not lt!38493))))

(declare-fun lt!38492 () Bool)

(assert (=> d!20779 (= lt!38493 lt!38492)))

(declare-fun lt!38491 () Unit!2327)

(declare-fun e!53756 () Unit!2327)

(assert (=> d!20779 (= lt!38491 e!53756)))

(declare-fun c!13125 () Bool)

(assert (=> d!20779 (= c!13125 lt!38492)))

(assert (=> d!20779 (= lt!38492 (containsKey!140 (toList!734 lt!37763) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> d!20779 (= (contains!742 lt!37763 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38493)))

(declare-fun b!82421 () Bool)

(declare-fun lt!38490 () Unit!2327)

(assert (=> b!82421 (= e!53756 lt!38490)))

(assert (=> b!82421 (= lt!38490 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37763) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (=> b!82421 (isDefined!90 (getValueByKey!136 (toList!734 lt!37763) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!82422 () Bool)

(declare-fun Unit!2417 () Unit!2327)

(assert (=> b!82422 (= e!53756 Unit!2417)))

(declare-fun b!82423 () Bool)

(assert (=> b!82423 (= e!53755 (isDefined!90 (getValueByKey!136 (toList!734 lt!37763) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (= (and d!20779 c!13125) b!82421))

(assert (= (and d!20779 (not c!13125)) b!82422))

(assert (= (and d!20779 (not res!42750)) b!82423))

(declare-fun m!85219 () Bool)

(assert (=> d!20779 m!85219))

(declare-fun m!85221 () Bool)

(assert (=> b!82421 m!85221))

(assert (=> b!82421 m!82569))

(assert (=> b!82421 m!82569))

(declare-fun m!85223 () Bool)

(assert (=> b!82421 m!85223))

(assert (=> b!82423 m!82569))

(assert (=> b!82423 m!82569))

(assert (=> b!82423 m!85223))

(assert (=> d!19797 d!20779))

(declare-fun b!82427 () Bool)

(declare-fun e!53758 () Option!142)

(assert (=> b!82427 (= e!53758 None!140)))

(declare-fun b!82424 () Bool)

(declare-fun e!53757 () Option!142)

(assert (=> b!82424 (= e!53757 (Some!141 (_2!1102 (h!2099 lt!37762))))))

(declare-fun b!82426 () Bool)

(assert (=> b!82426 (= e!53758 (getValueByKey!136 (t!5172 lt!37762) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun d!20781 () Bool)

(declare-fun c!13126 () Bool)

(assert (=> d!20781 (= c!13126 (and ((_ is Cons!1510) lt!37762) (= (_1!1102 (h!2099 lt!37762)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20781 (= (getValueByKey!136 lt!37762 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) e!53757)))

(declare-fun b!82425 () Bool)

(assert (=> b!82425 (= e!53757 e!53758)))

(declare-fun c!13127 () Bool)

(assert (=> b!82425 (= c!13127 (and ((_ is Cons!1510) lt!37762) (not (= (_1!1102 (h!2099 lt!37762)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(assert (= (and d!20781 c!13126) b!82424))

(assert (= (and d!20781 (not c!13126)) b!82425))

(assert (= (and b!82425 c!13127) b!82426))

(assert (= (and b!82425 (not c!13127)) b!82427))

(declare-fun m!85225 () Bool)

(assert (=> b!82426 m!85225))

(assert (=> d!19797 d!20781))

(declare-fun d!20783 () Bool)

(assert (=> d!20783 (= (getValueByKey!136 lt!37762 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) (Some!141 (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun lt!38494 () Unit!2327)

(assert (=> d!20783 (= lt!38494 (choose!477 lt!37762 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun e!53759 () Bool)

(assert (=> d!20783 e!53759))

(declare-fun res!42751 () Bool)

(assert (=> d!20783 (=> (not res!42751) (not e!53759))))

(assert (=> d!20783 (= res!42751 (isStrictlySorted!291 lt!37762))))

(assert (=> d!20783 (= (lemmaContainsTupThenGetReturnValue!56 lt!37762 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38494)))

(declare-fun b!82428 () Bool)

(declare-fun res!42752 () Bool)

(assert (=> b!82428 (=> (not res!42752) (not e!53759))))

(assert (=> b!82428 (= res!42752 (containsKey!140 lt!37762 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!82429 () Bool)

(assert (=> b!82429 (= e!53759 (contains!745 lt!37762 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (= (and d!20783 res!42751) b!82428))

(assert (= (and b!82428 res!42752) b!82429))

(assert (=> d!20783 m!82563))

(declare-fun m!85227 () Bool)

(assert (=> d!20783 m!85227))

(declare-fun m!85229 () Bool)

(assert (=> d!20783 m!85229))

(declare-fun m!85231 () Bool)

(assert (=> b!82428 m!85231))

(declare-fun m!85233 () Bool)

(assert (=> b!82429 m!85233))

(assert (=> d!19797 d!20783))

(declare-fun b!82430 () Bool)

(declare-fun e!53763 () List!1514)

(declare-fun call!7707 () List!1514)

(assert (=> b!82430 (= e!53763 call!7707)))

(declare-fun e!53760 () List!1514)

(declare-fun bm!7702 () Bool)

(declare-fun call!7706 () List!1514)

(declare-fun c!13131 () Bool)

(assert (=> bm!7702 (= call!7706 ($colon$colon!69 e!53760 (ite c!13131 (h!2099 (toList!734 lt!37071)) (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))))

(declare-fun c!13129 () Bool)

(assert (=> bm!7702 (= c!13129 c!13131)))

(declare-fun e!53764 () Bool)

(declare-fun lt!38495 () List!1514)

(declare-fun b!82431 () Bool)

(assert (=> b!82431 (= e!53764 (contains!745 lt!38495 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun bm!7703 () Bool)

(declare-fun call!7705 () List!1514)

(assert (=> bm!7703 (= call!7707 call!7705)))

(declare-fun d!20785 () Bool)

(assert (=> d!20785 e!53764))

(declare-fun res!42754 () Bool)

(assert (=> d!20785 (=> (not res!42754) (not e!53764))))

(assert (=> d!20785 (= res!42754 (isStrictlySorted!291 lt!38495))))

(declare-fun e!53762 () List!1514)

(assert (=> d!20785 (= lt!38495 e!53762)))

(assert (=> d!20785 (= c!13131 (and ((_ is Cons!1510) (toList!734 lt!37071)) (bvslt (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(assert (=> d!20785 (isStrictlySorted!291 (toList!734 lt!37071))))

(assert (=> d!20785 (= (insertStrictlySorted!59 (toList!734 lt!37071) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))) lt!38495)))

(declare-fun c!13128 () Bool)

(declare-fun b!82432 () Bool)

(assert (=> b!82432 (= c!13128 (and ((_ is Cons!1510) (toList!734 lt!37071)) (bvsgt (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun e!53761 () List!1514)

(assert (=> b!82432 (= e!53761 e!53763)))

(declare-fun b!82433 () Bool)

(assert (=> b!82433 (= e!53761 call!7705)))

(declare-fun b!82434 () Bool)

(assert (=> b!82434 (= e!53762 call!7706)))

(declare-fun bm!7704 () Bool)

(assert (=> bm!7704 (= call!7705 call!7706)))

(declare-fun b!82435 () Bool)

(declare-fun res!42753 () Bool)

(assert (=> b!82435 (=> (not res!42753) (not e!53764))))

(assert (=> b!82435 (= res!42753 (containsKey!140 lt!38495 (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(declare-fun b!82436 () Bool)

(assert (=> b!82436 (= e!53763 call!7707)))

(declare-fun b!82437 () Bool)

(declare-fun c!13130 () Bool)

(assert (=> b!82437 (= e!53760 (ite c!13130 (t!5172 (toList!734 lt!37071)) (ite c!13128 (Cons!1510 (h!2099 (toList!734 lt!37071)) (t!5172 (toList!734 lt!37071))) Nil!1511)))))

(declare-fun b!82438 () Bool)

(assert (=> b!82438 (= e!53762 e!53761)))

(assert (=> b!82438 (= c!13130 (and ((_ is Cons!1510) (toList!734 lt!37071)) (= (_1!1102 (h!2099 (toList!734 lt!37071))) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)))))))

(declare-fun b!82439 () Bool)

(assert (=> b!82439 (= e!53760 (insertStrictlySorted!59 (t!5172 (toList!734 lt!37071)) (_1!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084)) (_2!1102 (tuple2!2183 (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) from!355) lt!37084))))))

(assert (= (and d!20785 c!13131) b!82434))

(assert (= (and d!20785 (not c!13131)) b!82438))

(assert (= (and b!82438 c!13130) b!82433))

(assert (= (and b!82438 (not c!13130)) b!82432))

(assert (= (and b!82432 c!13128) b!82436))

(assert (= (and b!82432 (not c!13128)) b!82430))

(assert (= (or b!82436 b!82430) bm!7703))

(assert (= (or b!82433 bm!7703) bm!7704))

(assert (= (or b!82434 bm!7704) bm!7702))

(assert (= (and bm!7702 c!13129) b!82439))

(assert (= (and bm!7702 (not c!13129)) b!82437))

(assert (= (and d!20785 res!42754) b!82435))

(assert (= (and b!82435 res!42753) b!82431))

(declare-fun m!85235 () Bool)

(assert (=> d!20785 m!85235))

(assert (=> d!20785 m!82403))

(declare-fun m!85237 () Bool)

(assert (=> b!82439 m!85237))

(declare-fun m!85239 () Bool)

(assert (=> bm!7702 m!85239))

(declare-fun m!85241 () Bool)

(assert (=> b!82435 m!85241))

(declare-fun m!85243 () Bool)

(assert (=> b!82431 m!85243))

(assert (=> d!19797 d!20785))

(declare-fun d!20787 () Bool)

(assert (=> d!20787 (= (apply!80 lt!37682 (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000)) (get!1187 (getValueByKey!136 (toList!734 lt!37682) (select (arr!1888 (_keys!3955 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3490 () Bool)

(assert (= bs!3490 d!20787))

(assert (=> bs!3490 m!82131))

(assert (=> bs!3490 m!84703))

(assert (=> bs!3490 m!84703))

(declare-fun m!85245 () Bool)

(assert (=> bs!3490 m!85245))

(assert (=> b!80797 d!20787))

(assert (=> b!80797 d!20349))

(declare-fun d!20789 () Bool)

(assert (=> d!20789 (isDefined!90 (getValueByKey!136 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!38496 () Unit!2327)

(assert (=> d!20789 (= lt!38496 (choose!485 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!53765 () Bool)

(assert (=> d!20789 e!53765))

(declare-fun res!42755 () Bool)

(assert (=> d!20789 (=> (not res!42755) (not e!53765))))

(assert (=> d!20789 (= res!42755 (isStrictlySorted!291 (toList!734 lt!37331)))))

(assert (=> d!20789 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!38496)))

(declare-fun b!82440 () Bool)

(assert (=> b!82440 (= e!53765 (containsKey!140 (toList!734 lt!37331) (select (arr!1888 (_keys!3955 (v!2600 (underlying!276 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20789 res!42755) b!82440))

(assert (=> d!20789 m!81625))

(assert (=> d!20789 m!82269))

(assert (=> d!20789 m!82269))

(assert (=> d!20789 m!82743))

(assert (=> d!20789 m!81625))

(declare-fun m!85247 () Bool)

(assert (=> d!20789 m!85247))

(assert (=> d!20789 m!84211))

(assert (=> b!82440 m!81625))

(assert (=> b!82440 m!82739))

(assert (=> b!81018 d!20789))

(assert (=> b!81018 d!20183))

(assert (=> b!81018 d!20131))

(declare-fun b!82444 () Bool)

(declare-fun e!53767 () Option!142)

(assert (=> b!82444 (= e!53767 None!140)))

(declare-fun b!82441 () Bool)

(declare-fun e!53766 () Option!142)

(assert (=> b!82441 (= e!53766 (Some!141 (_2!1102 (h!2099 (toList!734 lt!37747)))))))

(declare-fun b!82443 () Bool)

(assert (=> b!82443 (= e!53767 (getValueByKey!136 (t!5172 (toList!734 lt!37747)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))

(declare-fun d!20791 () Bool)

(declare-fun c!13132 () Bool)

(assert (=> d!20791 (= c!13132 (and ((_ is Cons!1510) (toList!734 lt!37747)) (= (_1!1102 (h!2099 (toList!734 lt!37747))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992))))))))))

(assert (=> d!20791 (= (getValueByKey!136 (toList!734 lt!37747) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))) e!53766)))

(declare-fun b!82442 () Bool)

(assert (=> b!82442 (= e!53766 e!53767)))

(declare-fun c!13133 () Bool)

(assert (=> b!82442 (= c!13133 (and ((_ is Cons!1510) (toList!734 lt!37747)) (not (= (_1!1102 (h!2099 (toList!734 lt!37747))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2600 (underlying!276 thiss!992)))))))))))

(assert (= (and d!20791 c!13132) b!82441))

(assert (= (and d!20791 (not c!13132)) b!82442))

(assert (= (and b!82442 c!13133) b!82443))

(assert (= (and b!82442 (not c!13133)) b!82444))

(declare-fun m!85249 () Bool)

(assert (=> b!82443 m!85249))

(assert (=> b!80888 d!20791))

(declare-fun d!20793 () Bool)

(assert (=> d!20793 (= (apply!80 (+!104 lt!37623 (tuple2!2183 lt!37624 (minValue!2188 newMap!16))) lt!37621) (apply!80 lt!37623 lt!37621))))

(declare-fun lt!38497 () Unit!2327)

(assert (=> d!20793 (= lt!38497 (choose!479 lt!37623 lt!37624 (minValue!2188 newMap!16) lt!37621))))

(declare-fun e!53768 () Bool)

(assert (=> d!20793 e!53768))

(declare-fun res!42756 () Bool)

(assert (=> d!20793 (=> (not res!42756) (not e!53768))))

(assert (=> d!20793 (= res!42756 (contains!742 lt!37623 lt!37621))))

(assert (=> d!20793 (= (addApplyDifferent!56 lt!37623 lt!37624 (minValue!2188 newMap!16) lt!37621) lt!38497)))

(declare-fun b!82445 () Bool)

(assert (=> b!82445 (= e!53768 (not (= lt!37621 lt!37624)))))

(assert (= (and d!20793 res!42756) b!82445))

(declare-fun m!85251 () Bool)

(assert (=> d!20793 m!85251))

(declare-fun m!85253 () Bool)

(assert (=> d!20793 m!85253))

(assert (=> d!20793 m!82167))

(assert (=> d!20793 m!82145))

(assert (=> d!20793 m!82167))

(assert (=> d!20793 m!82175))

(assert (=> b!80704 d!20793))

(declare-fun d!20795 () Bool)

(declare-fun e!53769 () Bool)

(assert (=> d!20795 e!53769))

(declare-fun res!42758 () Bool)

(assert (=> d!20795 (=> (not res!42758) (not e!53769))))

(declare-fun lt!38501 () ListLongMap!1437)

(assert (=> d!20795 (= res!42758 (contains!742 lt!38501 (_1!1102 (tuple2!2183 lt!37624 (minValue!2188 newMap!16)))))))

(declare-fun lt!38500 () List!1514)

(assert (=> d!20795 (= lt!38501 (ListLongMap!1438 lt!38500))))

(declare-fun lt!38499 () Unit!2327)

(declare-fun lt!38498 () Unit!2327)

(assert (=> d!20795 (= lt!38499 lt!38498)))

(assert (=> d!20795 (= (getValueByKey!136 lt!38500 (_1!1102 (tuple2!2183 lt!37624 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37624 (minValue!2188 newMap!16)))))))

(assert (=> d!20795 (= lt!38498 (lemmaContainsTupThenGetReturnValue!56 lt!38500 (_1!1102 (tuple2!2183 lt!37624 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37624 (minValue!2188 newMap!16)))))))

(assert (=> d!20795 (= lt!38500 (insertStrictlySorted!59 (toList!734 lt!37623) (_1!1102 (tuple2!2183 lt!37624 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37624 (minValue!2188 newMap!16)))))))

(assert (=> d!20795 (= (+!104 lt!37623 (tuple2!2183 lt!37624 (minValue!2188 newMap!16))) lt!38501)))

(declare-fun b!82446 () Bool)

(declare-fun res!42757 () Bool)

(assert (=> b!82446 (=> (not res!42757) (not e!53769))))

(assert (=> b!82446 (= res!42757 (= (getValueByKey!136 (toList!734 lt!38501) (_1!1102 (tuple2!2183 lt!37624 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37624 (minValue!2188 newMap!16))))))))

(declare-fun b!82447 () Bool)

(assert (=> b!82447 (= e!53769 (contains!745 (toList!734 lt!38501) (tuple2!2183 lt!37624 (minValue!2188 newMap!16))))))

(assert (= (and d!20795 res!42758) b!82446))

(assert (= (and b!82446 res!42757) b!82447))

(declare-fun m!85255 () Bool)

(assert (=> d!20795 m!85255))

(declare-fun m!85257 () Bool)

(assert (=> d!20795 m!85257))

(declare-fun m!85259 () Bool)

(assert (=> d!20795 m!85259))

(declare-fun m!85261 () Bool)

(assert (=> d!20795 m!85261))

(declare-fun m!85263 () Bool)

(assert (=> b!82446 m!85263))

(declare-fun m!85265 () Bool)

(assert (=> b!82447 m!85265))

(assert (=> b!80704 d!20795))

(declare-fun d!20797 () Bool)

(declare-fun e!53770 () Bool)

(assert (=> d!20797 e!53770))

(declare-fun res!42759 () Bool)

(assert (=> d!20797 (=> res!42759 e!53770)))

(declare-fun lt!38505 () Bool)

(assert (=> d!20797 (= res!42759 (not lt!38505))))

(declare-fun lt!38504 () Bool)

(assert (=> d!20797 (= lt!38505 lt!38504)))

(declare-fun lt!38503 () Unit!2327)

(declare-fun e!53771 () Unit!2327)

(assert (=> d!20797 (= lt!38503 e!53771)))

(declare-fun c!13134 () Bool)

(assert (=> d!20797 (= c!13134 lt!38504)))

(assert (=> d!20797 (= lt!38504 (containsKey!140 (toList!734 (+!104 lt!37622 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16)))) lt!37610))))

(assert (=> d!20797 (= (contains!742 (+!104 lt!37622 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16))) lt!37610) lt!38505)))

(declare-fun b!82448 () Bool)

(declare-fun lt!38502 () Unit!2327)

(assert (=> b!82448 (= e!53771 lt!38502)))

(assert (=> b!82448 (= lt!38502 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 (+!104 lt!37622 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16)))) lt!37610))))

(assert (=> b!82448 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37622 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16)))) lt!37610))))

(declare-fun b!82449 () Bool)

(declare-fun Unit!2418 () Unit!2327)

(assert (=> b!82449 (= e!53771 Unit!2418)))

(declare-fun b!82450 () Bool)

(assert (=> b!82450 (= e!53770 (isDefined!90 (getValueByKey!136 (toList!734 (+!104 lt!37622 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16)))) lt!37610)))))

(assert (= (and d!20797 c!13134) b!82448))

(assert (= (and d!20797 (not c!13134)) b!82449))

(assert (= (and d!20797 (not res!42759)) b!82450))

(declare-fun m!85267 () Bool)

(assert (=> d!20797 m!85267))

(declare-fun m!85269 () Bool)

(assert (=> b!82448 m!85269))

(declare-fun m!85271 () Bool)

(assert (=> b!82448 m!85271))

(assert (=> b!82448 m!85271))

(declare-fun m!85273 () Bool)

(assert (=> b!82448 m!85273))

(assert (=> b!82450 m!85271))

(assert (=> b!82450 m!85271))

(assert (=> b!82450 m!85273))

(assert (=> b!80704 d!20797))

(declare-fun d!20799 () Bool)

(assert (=> d!20799 (= (apply!80 (+!104 lt!37618 (tuple2!2183 lt!37609 (minValue!2188 newMap!16))) lt!37630) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37618 (tuple2!2183 lt!37609 (minValue!2188 newMap!16)))) lt!37630)))))

(declare-fun bs!3491 () Bool)

(assert (= bs!3491 d!20799))

(declare-fun m!85275 () Bool)

(assert (=> bs!3491 m!85275))

(assert (=> bs!3491 m!85275))

(declare-fun m!85277 () Bool)

(assert (=> bs!3491 m!85277))

(assert (=> b!80704 d!20799))

(declare-fun d!20801 () Bool)

(assert (=> d!20801 (= (apply!80 (+!104 lt!37613 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16))) lt!37619) (apply!80 lt!37613 lt!37619))))

(declare-fun lt!38506 () Unit!2327)

(assert (=> d!20801 (= lt!38506 (choose!479 lt!37613 lt!37620 (zeroValue!2188 newMap!16) lt!37619))))

(declare-fun e!53772 () Bool)

(assert (=> d!20801 e!53772))

(declare-fun res!42760 () Bool)

(assert (=> d!20801 (=> (not res!42760) (not e!53772))))

(assert (=> d!20801 (= res!42760 (contains!742 lt!37613 lt!37619))))

(assert (=> d!20801 (= (addApplyDifferent!56 lt!37613 lt!37620 (zeroValue!2188 newMap!16) lt!37619) lt!38506)))

(declare-fun b!82451 () Bool)

(assert (=> b!82451 (= e!53772 (not (= lt!37619 lt!37620)))))

(assert (= (and d!20801 res!42760) b!82451))

(declare-fun m!85279 () Bool)

(assert (=> d!20801 m!85279))

(declare-fun m!85281 () Bool)

(assert (=> d!20801 m!85281))

(assert (=> d!20801 m!82151))

(assert (=> d!20801 m!82171))

(assert (=> d!20801 m!82151))

(assert (=> d!20801 m!82153))

(assert (=> b!80704 d!20801))

(assert (=> b!80704 d!20483))

(declare-fun d!20803 () Bool)

(declare-fun e!53773 () Bool)

(assert (=> d!20803 e!53773))

(declare-fun res!42762 () Bool)

(assert (=> d!20803 (=> (not res!42762) (not e!53773))))

(declare-fun lt!38510 () ListLongMap!1437)

(assert (=> d!20803 (= res!42762 (contains!742 lt!38510 (_1!1102 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16)))))))

(declare-fun lt!38509 () List!1514)

(assert (=> d!20803 (= lt!38510 (ListLongMap!1438 lt!38509))))

(declare-fun lt!38508 () Unit!2327)

(declare-fun lt!38507 () Unit!2327)

(assert (=> d!20803 (= lt!38508 lt!38507)))

(assert (=> d!20803 (= (getValueByKey!136 lt!38509 (_1!1102 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20803 (= lt!38507 (lemmaContainsTupThenGetReturnValue!56 lt!38509 (_1!1102 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20803 (= lt!38509 (insertStrictlySorted!59 (toList!734 lt!37622) (_1!1102 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20803 (= (+!104 lt!37622 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16))) lt!38510)))

(declare-fun b!82452 () Bool)

(declare-fun res!42761 () Bool)

(assert (=> b!82452 (=> (not res!42761) (not e!53773))))

(assert (=> b!82452 (= res!42761 (= (getValueByKey!136 (toList!734 lt!38510) (_1!1102 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16))))))))

(declare-fun b!82453 () Bool)

(assert (=> b!82453 (= e!53773 (contains!745 (toList!734 lt!38510) (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16))))))

(assert (= (and d!20803 res!42762) b!82452))

(assert (= (and b!82452 res!42761) b!82453))

(declare-fun m!85283 () Bool)

(assert (=> d!20803 m!85283))

(declare-fun m!85285 () Bool)

(assert (=> d!20803 m!85285))

(declare-fun m!85287 () Bool)

(assert (=> d!20803 m!85287))

(declare-fun m!85289 () Bool)

(assert (=> d!20803 m!85289))

(declare-fun m!85291 () Bool)

(assert (=> b!82452 m!85291))

(declare-fun m!85293 () Bool)

(assert (=> b!82453 m!85293))

(assert (=> b!80704 d!20803))

(declare-fun d!20805 () Bool)

(assert (=> d!20805 (= (apply!80 (+!104 lt!37623 (tuple2!2183 lt!37624 (minValue!2188 newMap!16))) lt!37621) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37623 (tuple2!2183 lt!37624 (minValue!2188 newMap!16)))) lt!37621)))))

(declare-fun bs!3492 () Bool)

(assert (= bs!3492 d!20805))

(declare-fun m!85295 () Bool)

(assert (=> bs!3492 m!85295))

(assert (=> bs!3492 m!85295))

(declare-fun m!85297 () Bool)

(assert (=> bs!3492 m!85297))

(assert (=> b!80704 d!20805))

(declare-fun d!20807 () Bool)

(assert (=> d!20807 (contains!742 (+!104 lt!37622 (tuple2!2183 lt!37617 (zeroValue!2188 newMap!16))) lt!37610)))

(declare-fun lt!38511 () Unit!2327)

(assert (=> d!20807 (= lt!38511 (choose!478 lt!37622 lt!37617 (zeroValue!2188 newMap!16) lt!37610))))

(assert (=> d!20807 (contains!742 lt!37622 lt!37610)))

(assert (=> d!20807 (= (addStillContains!56 lt!37622 lt!37617 (zeroValue!2188 newMap!16) lt!37610) lt!38511)))

(declare-fun bs!3493 () Bool)

(assert (= bs!3493 d!20807))

(assert (=> bs!3493 m!82161))

(assert (=> bs!3493 m!82161))

(assert (=> bs!3493 m!82163))

(declare-fun m!85299 () Bool)

(assert (=> bs!3493 m!85299))

(declare-fun m!85301 () Bool)

(assert (=> bs!3493 m!85301))

(assert (=> b!80704 d!20807))

(declare-fun d!20809 () Bool)

(declare-fun e!53774 () Bool)

(assert (=> d!20809 e!53774))

(declare-fun res!42764 () Bool)

(assert (=> d!20809 (=> (not res!42764) (not e!53774))))

(declare-fun lt!38515 () ListLongMap!1437)

(assert (=> d!20809 (= res!42764 (contains!742 lt!38515 (_1!1102 (tuple2!2183 lt!37609 (minValue!2188 newMap!16)))))))

(declare-fun lt!38514 () List!1514)

(assert (=> d!20809 (= lt!38515 (ListLongMap!1438 lt!38514))))

(declare-fun lt!38513 () Unit!2327)

(declare-fun lt!38512 () Unit!2327)

(assert (=> d!20809 (= lt!38513 lt!38512)))

(assert (=> d!20809 (= (getValueByKey!136 lt!38514 (_1!1102 (tuple2!2183 lt!37609 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37609 (minValue!2188 newMap!16)))))))

(assert (=> d!20809 (= lt!38512 (lemmaContainsTupThenGetReturnValue!56 lt!38514 (_1!1102 (tuple2!2183 lt!37609 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37609 (minValue!2188 newMap!16)))))))

(assert (=> d!20809 (= lt!38514 (insertStrictlySorted!59 (toList!734 lt!37618) (_1!1102 (tuple2!2183 lt!37609 (minValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37609 (minValue!2188 newMap!16)))))))

(assert (=> d!20809 (= (+!104 lt!37618 (tuple2!2183 lt!37609 (minValue!2188 newMap!16))) lt!38515)))

(declare-fun b!82454 () Bool)

(declare-fun res!42763 () Bool)

(assert (=> b!82454 (=> (not res!42763) (not e!53774))))

(assert (=> b!82454 (= res!42763 (= (getValueByKey!136 (toList!734 lt!38515) (_1!1102 (tuple2!2183 lt!37609 (minValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37609 (minValue!2188 newMap!16))))))))

(declare-fun b!82455 () Bool)

(assert (=> b!82455 (= e!53774 (contains!745 (toList!734 lt!38515) (tuple2!2183 lt!37609 (minValue!2188 newMap!16))))))

(assert (= (and d!20809 res!42764) b!82454))

(assert (= (and b!82454 res!42763) b!82455))

(declare-fun m!85303 () Bool)

(assert (=> d!20809 m!85303))

(declare-fun m!85305 () Bool)

(assert (=> d!20809 m!85305))

(declare-fun m!85307 () Bool)

(assert (=> d!20809 m!85307))

(declare-fun m!85309 () Bool)

(assert (=> d!20809 m!85309))

(declare-fun m!85311 () Bool)

(assert (=> b!82454 m!85311))

(declare-fun m!85313 () Bool)

(assert (=> b!82455 m!85313))

(assert (=> b!80704 d!20809))

(declare-fun d!20811 () Bool)

(assert (=> d!20811 (= (apply!80 lt!37613 lt!37619) (get!1187 (getValueByKey!136 (toList!734 lt!37613) lt!37619)))))

(declare-fun bs!3494 () Bool)

(assert (= bs!3494 d!20811))

(declare-fun m!85315 () Bool)

(assert (=> bs!3494 m!85315))

(assert (=> bs!3494 m!85315))

(declare-fun m!85317 () Bool)

(assert (=> bs!3494 m!85317))

(assert (=> b!80704 d!20811))

(declare-fun d!20813 () Bool)

(assert (=> d!20813 (= (apply!80 lt!37618 lt!37630) (get!1187 (getValueByKey!136 (toList!734 lt!37618) lt!37630)))))

(declare-fun bs!3495 () Bool)

(assert (= bs!3495 d!20813))

(declare-fun m!85319 () Bool)

(assert (=> bs!3495 m!85319))

(assert (=> bs!3495 m!85319))

(declare-fun m!85321 () Bool)

(assert (=> bs!3495 m!85321))

(assert (=> b!80704 d!20813))

(declare-fun d!20815 () Bool)

(assert (=> d!20815 (= (apply!80 (+!104 lt!37613 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16))) lt!37619) (get!1187 (getValueByKey!136 (toList!734 (+!104 lt!37613 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16)))) lt!37619)))))

(declare-fun bs!3496 () Bool)

(assert (= bs!3496 d!20815))

(declare-fun m!85323 () Bool)

(assert (=> bs!3496 m!85323))

(assert (=> bs!3496 m!85323))

(declare-fun m!85325 () Bool)

(assert (=> bs!3496 m!85325))

(assert (=> b!80704 d!20815))

(declare-fun d!20817 () Bool)

(assert (=> d!20817 (= (apply!80 (+!104 lt!37618 (tuple2!2183 lt!37609 (minValue!2188 newMap!16))) lt!37630) (apply!80 lt!37618 lt!37630))))

(declare-fun lt!38516 () Unit!2327)

(assert (=> d!20817 (= lt!38516 (choose!479 lt!37618 lt!37609 (minValue!2188 newMap!16) lt!37630))))

(declare-fun e!53775 () Bool)

(assert (=> d!20817 e!53775))

(declare-fun res!42765 () Bool)

(assert (=> d!20817 (=> (not res!42765) (not e!53775))))

(assert (=> d!20817 (= res!42765 (contains!742 lt!37618 lt!37630))))

(assert (=> d!20817 (= (addApplyDifferent!56 lt!37618 lt!37609 (minValue!2188 newMap!16) lt!37630) lt!38516)))

(declare-fun b!82456 () Bool)

(assert (=> b!82456 (= e!53775 (not (= lt!37630 lt!37609)))))

(assert (= (and d!20817 res!42765) b!82456))

(declare-fun m!85327 () Bool)

(assert (=> d!20817 m!85327))

(declare-fun m!85329 () Bool)

(assert (=> d!20817 m!85329))

(assert (=> d!20817 m!82155))

(assert (=> d!20817 m!82169))

(assert (=> d!20817 m!82155))

(assert (=> d!20817 m!82157))

(assert (=> b!80704 d!20817))

(declare-fun d!20819 () Bool)

(declare-fun e!53776 () Bool)

(assert (=> d!20819 e!53776))

(declare-fun res!42767 () Bool)

(assert (=> d!20819 (=> (not res!42767) (not e!53776))))

(declare-fun lt!38520 () ListLongMap!1437)

(assert (=> d!20819 (= res!42767 (contains!742 lt!38520 (_1!1102 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16)))))))

(declare-fun lt!38519 () List!1514)

(assert (=> d!20819 (= lt!38520 (ListLongMap!1438 lt!38519))))

(declare-fun lt!38518 () Unit!2327)

(declare-fun lt!38517 () Unit!2327)

(assert (=> d!20819 (= lt!38518 lt!38517)))

(assert (=> d!20819 (= (getValueByKey!136 lt!38519 (_1!1102 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20819 (= lt!38517 (lemmaContainsTupThenGetReturnValue!56 lt!38519 (_1!1102 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20819 (= lt!38519 (insertStrictlySorted!59 (toList!734 lt!37613) (_1!1102 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16))) (_2!1102 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20819 (= (+!104 lt!37613 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16))) lt!38520)))

(declare-fun b!82457 () Bool)

(declare-fun res!42766 () Bool)

(assert (=> b!82457 (=> (not res!42766) (not e!53776))))

(assert (=> b!82457 (= res!42766 (= (getValueByKey!136 (toList!734 lt!38520) (_1!1102 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16)))) (Some!141 (_2!1102 (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16))))))))

(declare-fun b!82458 () Bool)

(assert (=> b!82458 (= e!53776 (contains!745 (toList!734 lt!38520) (tuple2!2183 lt!37620 (zeroValue!2188 newMap!16))))))

(assert (= (and d!20819 res!42767) b!82457))

(assert (= (and b!82457 res!42766) b!82458))

(declare-fun m!85331 () Bool)

(assert (=> d!20819 m!85331))

(declare-fun m!85333 () Bool)

(assert (=> d!20819 m!85333))

(declare-fun m!85335 () Bool)

(assert (=> d!20819 m!85335))

(declare-fun m!85337 () Bool)

(assert (=> d!20819 m!85337))

(declare-fun m!85339 () Bool)

(assert (=> b!82457 m!85339))

(declare-fun m!85341 () Bool)

(assert (=> b!82458 m!85341))

(assert (=> b!80704 d!20819))

(declare-fun d!20821 () Bool)

(assert (=> d!20821 (= (apply!80 lt!37623 lt!37621) (get!1187 (getValueByKey!136 (toList!734 lt!37623) lt!37621)))))

(declare-fun bs!3497 () Bool)

(assert (= bs!3497 d!20821))

(declare-fun m!85343 () Bool)

(assert (=> bs!3497 m!85343))

(assert (=> bs!3497 m!85343))

(declare-fun m!85345 () Bool)

(assert (=> bs!3497 m!85345))

(assert (=> b!80704 d!20821))

(declare-fun d!20823 () Bool)

(assert (=> d!20823 (isDefined!90 (getValueByKey!136 (toList!734 lt!37301) (_1!1102 lt!37082)))))

(declare-fun lt!38521 () Unit!2327)

(assert (=> d!20823 (= lt!38521 (choose!485 (toList!734 lt!37301) (_1!1102 lt!37082)))))

(declare-fun e!53777 () Bool)

(assert (=> d!20823 e!53777))

(declare-fun res!42768 () Bool)

(assert (=> d!20823 (=> (not res!42768) (not e!53777))))

(assert (=> d!20823 (= res!42768 (isStrictlySorted!291 (toList!734 lt!37301)))))

(assert (=> d!20823 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37301) (_1!1102 lt!37082)) lt!38521)))

(declare-fun b!82459 () Bool)

(assert (=> b!82459 (= e!53777 (containsKey!140 (toList!734 lt!37301) (_1!1102 lt!37082)))))

(assert (= (and d!20823 res!42768) b!82459))

(assert (=> d!20823 m!81563))

(assert (=> d!20823 m!81563))

(assert (=> d!20823 m!81775))

(declare-fun m!85347 () Bool)

(assert (=> d!20823 m!85347))

(declare-fun m!85349 () Bool)

(assert (=> d!20823 m!85349))

(assert (=> b!82459 m!81771))

(assert (=> b!80484 d!20823))

(assert (=> b!80484 d!19897))

(assert (=> b!80484 d!19803))

(declare-fun d!20825 () Bool)

(assert (=> d!20825 (= (isEmpty!335 (toList!734 lt!37331)) ((_ is Nil!1511) (toList!734 lt!37331)))))

(assert (=> d!19869 d!20825))

(declare-fun d!20827 () Bool)

(declare-fun e!53778 () Bool)

(assert (=> d!20827 e!53778))

(declare-fun res!42769 () Bool)

(assert (=> d!20827 (=> res!42769 e!53778)))

(declare-fun lt!38525 () Bool)

(assert (=> d!20827 (= res!42769 (not lt!38525))))

(declare-fun lt!38524 () Bool)

(assert (=> d!20827 (= lt!38525 lt!38524)))

(declare-fun lt!38523 () Unit!2327)

(declare-fun e!53779 () Unit!2327)

(assert (=> d!20827 (= lt!38523 e!53779)))

(declare-fun c!13135 () Bool)

(assert (=> d!20827 (= c!13135 lt!38524)))

(assert (=> d!20827 (= lt!38524 (containsKey!140 (toList!734 lt!37660) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20827 (= (contains!742 lt!37660 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38525)))

(declare-fun b!82460 () Bool)

(declare-fun lt!38522 () Unit!2327)

(assert (=> b!82460 (= e!53779 lt!38522)))

(assert (=> b!82460 (= lt!38522 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!734 lt!37660) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82460 (isDefined!90 (getValueByKey!136 (toList!734 lt!37660) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82461 () Bool)

(declare-fun Unit!2419 () Unit!2327)

(assert (=> b!82461 (= e!53779 Unit!2419)))

(declare-fun b!82462 () Bool)

(assert (=> b!82462 (= e!53778 (isDefined!90 (getValueByKey!136 (toList!734 lt!37660) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20827 c!13135) b!82460))

(assert (= (and d!20827 (not c!13135)) b!82461))

(assert (= (and d!20827 (not res!42769)) b!82462))

(declare-fun m!85351 () Bool)

(assert (=> d!20827 m!85351))

(declare-fun m!85353 () Bool)

(assert (=> b!82460 m!85353))

(assert (=> b!82460 m!83401))

(assert (=> b!82460 m!83401))

(declare-fun m!85355 () Bool)

(assert (=> b!82460 m!85355))

(assert (=> b!82462 m!83401))

(assert (=> b!82462 m!83401))

(assert (=> b!82462 m!85355))

(assert (=> bm!7515 d!20827))

(assert (=> d!19627 d!19625))

(declare-fun d!20829 () Bool)

(assert (=> d!20829 (= (getValueByKey!136 lt!37300 (_1!1102 lt!37082)) (Some!141 (_2!1102 lt!37082)))))

(assert (=> d!20829 true))

(declare-fun _$22!406 () Unit!2327)

(assert (=> d!20829 (= (choose!477 lt!37300 (_1!1102 lt!37082) (_2!1102 lt!37082)) _$22!406)))

(declare-fun bs!3498 () Bool)

(assert (= bs!3498 d!20829))

(assert (=> bs!3498 m!81557))

(assert (=> d!19627 d!20829))

(declare-fun d!20831 () Bool)

(declare-fun res!42770 () Bool)

(declare-fun e!53780 () Bool)

(assert (=> d!20831 (=> res!42770 e!53780)))

(assert (=> d!20831 (= res!42770 (or ((_ is Nil!1511) lt!37300) ((_ is Nil!1511) (t!5172 lt!37300))))))

(assert (=> d!20831 (= (isStrictlySorted!291 lt!37300) e!53780)))

(declare-fun b!82463 () Bool)

(declare-fun e!53781 () Bool)

(assert (=> b!82463 (= e!53780 e!53781)))

(declare-fun res!42771 () Bool)

(assert (=> b!82463 (=> (not res!42771) (not e!53781))))

(assert (=> b!82463 (= res!42771 (bvslt (_1!1102 (h!2099 lt!37300)) (_1!1102 (h!2099 (t!5172 lt!37300)))))))

(declare-fun b!82464 () Bool)

(assert (=> b!82464 (= e!53781 (isStrictlySorted!291 (t!5172 lt!37300)))))

(assert (= (and d!20831 (not res!42770)) b!82463))

(assert (= (and b!82463 res!42771) b!82464))

(declare-fun m!85357 () Bool)

(assert (=> b!82464 m!85357))

(assert (=> d!19627 d!20831))

(declare-fun d!20833 () Bool)

(declare-fun lt!38526 () Bool)

(assert (=> d!20833 (= lt!38526 (select (content!86 (t!5172 (toList!734 lt!37301))) lt!37082))))

(declare-fun e!53782 () Bool)

(assert (=> d!20833 (= lt!38526 e!53782)))

(declare-fun res!42773 () Bool)

(assert (=> d!20833 (=> (not res!42773) (not e!53782))))

(assert (=> d!20833 (= res!42773 ((_ is Cons!1510) (t!5172 (toList!734 lt!37301))))))

(assert (=> d!20833 (= (contains!745 (t!5172 (toList!734 lt!37301)) lt!37082) lt!38526)))

(declare-fun b!82465 () Bool)

(declare-fun e!53783 () Bool)

(assert (=> b!82465 (= e!53782 e!53783)))

(declare-fun res!42772 () Bool)

(assert (=> b!82465 (=> res!42772 e!53783)))

(assert (=> b!82465 (= res!42772 (= (h!2099 (t!5172 (toList!734 lt!37301))) lt!37082))))

(declare-fun b!82466 () Bool)

(assert (=> b!82466 (= e!53783 (contains!745 (t!5172 (t!5172 (toList!734 lt!37301))) lt!37082))))

(assert (= (and d!20833 res!42773) b!82465))

(assert (= (and b!82465 (not res!42772)) b!82466))

(assert (=> d!20833 m!83397))

(declare-fun m!85359 () Bool)

(assert (=> d!20833 m!85359))

(declare-fun m!85361 () Bool)

(assert (=> b!82466 m!85361))

(assert (=> b!80645 d!20833))

(assert (=> b!80651 d!20557))

(assert (=> b!80651 d!20559))

(assert (=> b!81017 d!20565))

(assert (=> b!81017 d!20305))

(declare-fun condMapEmpty!3343 () Bool)

(declare-fun mapDefault!3343 () ValueCell!914)

(assert (=> mapNonEmpty!3341 (= condMapEmpty!3343 (= mapRest!3341 ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3343)))))

(declare-fun e!53785 () Bool)

(declare-fun mapRes!3343 () Bool)

(assert (=> mapNonEmpty!3341 (= tp!8831 (and e!53785 mapRes!3343))))

(declare-fun b!82468 () Bool)

(assert (=> b!82468 (= e!53785 tp_is_empty!2515)))

(declare-fun b!82467 () Bool)

(declare-fun e!53784 () Bool)

(assert (=> b!82467 (= e!53784 tp_is_empty!2515)))

(declare-fun mapNonEmpty!3343 () Bool)

(declare-fun tp!8833 () Bool)

(assert (=> mapNonEmpty!3343 (= mapRes!3343 (and tp!8833 e!53784))))

(declare-fun mapRest!3343 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapValue!3343 () ValueCell!914)

(declare-fun mapKey!3343 () (_ BitVec 32))

(assert (=> mapNonEmpty!3343 (= mapRest!3341 (store mapRest!3343 mapKey!3343 mapValue!3343))))

(declare-fun mapIsEmpty!3343 () Bool)

(assert (=> mapIsEmpty!3343 mapRes!3343))

(assert (= (and mapNonEmpty!3341 condMapEmpty!3343) mapIsEmpty!3343))

(assert (= (and mapNonEmpty!3341 (not condMapEmpty!3343)) mapNonEmpty!3343))

(assert (= (and mapNonEmpty!3343 ((_ is ValueCellFull!914) mapValue!3343)) b!82467))

(assert (= (and mapNonEmpty!3341 ((_ is ValueCellFull!914) mapDefault!3343)) b!82468))

(declare-fun m!85363 () Bool)

(assert (=> mapNonEmpty!3343 m!85363))

(declare-fun condMapEmpty!3344 () Bool)

(declare-fun mapDefault!3344 () ValueCell!914)

(assert (=> mapNonEmpty!3342 (= condMapEmpty!3344 (= mapRest!3342 ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3344)))))

(declare-fun e!53787 () Bool)

(declare-fun mapRes!3344 () Bool)

(assert (=> mapNonEmpty!3342 (= tp!8832 (and e!53787 mapRes!3344))))

(declare-fun b!82470 () Bool)

(assert (=> b!82470 (= e!53787 tp_is_empty!2515)))

(declare-fun b!82469 () Bool)

(declare-fun e!53786 () Bool)

(assert (=> b!82469 (= e!53786 tp_is_empty!2515)))

(declare-fun mapNonEmpty!3344 () Bool)

(declare-fun tp!8834 () Bool)

(assert (=> mapNonEmpty!3344 (= mapRes!3344 (and tp!8834 e!53786))))

(declare-fun mapRest!3344 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapKey!3344 () (_ BitVec 32))

(declare-fun mapValue!3344 () ValueCell!914)

(assert (=> mapNonEmpty!3344 (= mapRest!3342 (store mapRest!3344 mapKey!3344 mapValue!3344))))

(declare-fun mapIsEmpty!3344 () Bool)

(assert (=> mapIsEmpty!3344 mapRes!3344))

(assert (= (and mapNonEmpty!3342 condMapEmpty!3344) mapIsEmpty!3344))

(assert (= (and mapNonEmpty!3342 (not condMapEmpty!3344)) mapNonEmpty!3344))

(assert (= (and mapNonEmpty!3344 ((_ is ValueCellFull!914) mapValue!3344)) b!82469))

(assert (= (and mapNonEmpty!3342 ((_ is ValueCellFull!914) mapDefault!3344)) b!82470))

(declare-fun m!85365 () Bool)

(assert (=> mapNonEmpty!3344 m!85365))

(declare-fun b_lambda!3645 () Bool)

(assert (= b_lambda!3613 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3645)))

(declare-fun b_lambda!3647 () Bool)

(assert (= b_lambda!3625 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3647)))

(declare-fun b_lambda!3649 () Bool)

(assert (= b_lambda!3639 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3649)))

(declare-fun b_lambda!3651 () Bool)

(assert (= b_lambda!3641 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3651)))

(declare-fun b_lambda!3653 () Bool)

(assert (= b_lambda!3631 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3653)))

(declare-fun b_lambda!3655 () Bool)

(assert (= b_lambda!3635 (or (and b!80038 b_free!2197) (and b!80045 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))))) b_lambda!3655)))

(declare-fun b_lambda!3657 () Bool)

(assert (= b_lambda!3629 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3657)))

(declare-fun b_lambda!3659 () Bool)

(assert (= b_lambda!3611 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3659)))

(declare-fun b_lambda!3661 () Bool)

(assert (= b_lambda!3621 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3661)))

(declare-fun b_lambda!3663 () Bool)

(assert (= b_lambda!3633 (or (and b!80038 b_free!2197) (and b!80045 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))))) b_lambda!3663)))

(declare-fun b_lambda!3665 () Bool)

(assert (= b_lambda!3637 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3665)))

(declare-fun b_lambda!3667 () Bool)

(assert (= b_lambda!3623 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3667)))

(declare-fun b_lambda!3669 () Bool)

(assert (= b_lambda!3627 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3669)))

(declare-fun b_lambda!3671 () Bool)

(assert (= b_lambda!3617 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3671)))

(declare-fun b_lambda!3673 () Bool)

(assert (= b_lambda!3619 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3673)))

(declare-fun b_lambda!3675 () Bool)

(assert (= b_lambda!3615 (or (and b!80038 b_free!2197 (= (defaultEntry!2292 (v!2600 (underlying!276 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80045 b_free!2199) b_lambda!3675)))

(check-sat (not d!20543) (not b!82224) (not bm!7582) (not d!20145) (not b!81632) (not b!82272) (not b_lambda!3667) (not b!82453) (not b!81340) (not b!82191) (not d!20367) (not b!81745) (not b_lambda!3649) (not b!81906) (not d!20119) (not bm!7571) (not b!82176) (not b!81091) (not d!20215) (not b_lambda!3581) (not b!81616) (not b!81999) (not b!82346) (not b!82282) (not b!81955) (not d!20205) (not b!81376) (not b!82047) (not b!81911) (not d!19933) (not b!82101) (not b!81330) (not b!81882) (not b!81236) tp_is_empty!2515 (not d!20219) (not b!81182) (not b!81562) (not d!20077) (not b!82109) (not bm!7690) (not b!82118) (not b!82209) (not b!82466) (not b!81811) (not b!82393) (not b!81159) (not b!82095) (not d!20565) (not d!20765) (not b!82184) (not d!20599) (not d!20623) (not b!81183) (not d!20689) (not bm!7581) (not d!20211) (not d!19931) (not b!82397) (not d!20613) (not b!81774) (not b!81379) (not d!20011) (not d!20133) (not d!20181) (not b!81361) (not d!20209) (not bm!7644) (not d!20597) (not bm!7638) (not b!81478) (not d!20023) (not b!81324) (not b!81832) (not b!81407) (not d!20225) (not b!82159) (not b!82253) (not d!20451) (not b!82155) (not b!81475) (not b!81310) (not bm!7637) (not b!82342) (not b!82235) (not d!20117) (not b!82457) (not b!81556) (not d!20063) (not b!81550) (not d!20657) (not d!20665) (not d!19923) (not b!81638) (not b!81601) (not b!81268) (not b!82113) (not d!20755) (not d!20685) (not b!81818) (not d!20375) (not b_lambda!3665) (not b!81450) (not bm!7608) (not b!82372) (not d!20283) (not b!81177) (not b!81315) (not b!81735) (not d!20069) (not b!81552) (not d!20193) (not b!81151) (not b!81559) (not d!20625) (not b!81148) (not b!82384) (not b!81225) (not d!20113) (not b_next!2197) (not b!82250) (not b!81634) (not b_lambda!3603) (not bm!7675) (not b!82132) (not b!81096) (not d!20673) (not b!82057) (not b!82322) (not b!82405) (not b!81581) (not b!81847) (not b!81723) (not d!20575) (not b!81306) (not d!20025) (not d!20455) (not d!20227) (not d!20771) (not d!20159) (not b!82001) (not b!82281) (not b!82080) (not b!81419) (not d!20529) (not b_lambda!3655) (not b!81488) (not b_lambda!3671) (not b!81592) (not b!82066) (not b!82443) (not b!81670) (not b!81991) (not d!20301) (not b!81101) (not d!20631) (not b!81933) (not b_lambda!3673) (not d!20265) (not d!20007) (not d!20593) (not b!82060) (not b!81394) (not b!82196) (not b!81339) (not b!82146) (not b_lambda!3645) (not b!81973) (not bm!7627) (not b!81617) (not bm!7568) (not d!20775) (not bm!7591) (not d!20783) (not b!82364) (not d!20127) (not b!81557) (not d!20341) (not b!82107) (not b!82386) (not b_lambda!3647) (not b!81958) (not b!82177) (not b!82161) (not d!20015) (not b_lambda!3653) (not b!81781) (not b!81125) (not b!82197) (not d!20291) (not d!20799) (not d!20785) (not b!81067) (not d!20721) (not d!20217) (not b!82308) (not d!19995) (not b!81244) (not b!81730) (not b!81817) (not d!19897) (not b!81314) (not b_lambda!3585) (not b!81540) (not b!81568) (not b!81218) (not d!20107) (not b!82362) (not bm!7614) (not bm!7626) (not bm!7691) (not b!81898) (not b!81185) (not b!81114) (not d!20729) (not b!82279) (not b!81859) (not b!81118) (not d!20251) (not d!20153) (not b!81422) (not d!20111) (not bm!7686) (not d!20419) (not b!82073) (not d!20357) (not d!20137) (not d!19997) (not b!82222) (not bm!7679) (not b!82087) (not b!81926) (not b!81921) (not d!20527) (not b!81374) (not d!19883) (not b!82349) (not b!82187) (not d!19951) (not b!81927) (not b!82208) (not d!20239) (not b!82171) (not b!81155) (not d!20081) (not d!20611) (not d!19957) (not b!81414) (not b!82331) (not b!81975) (not d!20505) (not b!81130) (not mapNonEmpty!3343) (not d!20353) (not b!81094) (not b!81820) (not b!81546) (not b!81672) (not b!81757) (not d!19983) (not d!19929) (not b!81938) (not b!81245) (not d!20221) (not b!82256) (not b!82117) (not b!81515) (not b!82344) (not b!81512) (not b!81231) (not b!81487) b_and!5003 (not b!81620) (not b!81454) (not bm!7583) (not b!81453) (not b!81739) (not d!19893) (not d!20053) (not b!81967) (not b!81765) (not b!81603) (not b!81319) (not b!82104) (not d!20139) (not d!20033) (not b!81180) (not b!81149) (not b!81792) (not b!81866) (not b!82183) (not bm!7680) (not d!20245) (not d!20275) (not b!82354) (not d!20533) (not b!81280) (not d!20585) (not b!81842) (not bm!7624) (not b!81505) (not b!81897) (not b!81399) (not bm!7702) (not b!82339) (not b!81359) (not b!81706) (not b!81524) (not b!81683) (not b!82262) (not d!20619) (not b!82464) (not b_lambda!3643) (not b!81598) (not d!20475) (not b!81459) (not d!20311) (not b!81189) (not d!20467) (not b!82296) (not b!82039) (not b!81533) (not d!20085) (not b!81843) (not b!82439) (not d!20445) (not b!81065) (not d!19991) (not b!81325) (not b!82359) (not d!20797) (not b!81465) (not d!20409) (not b!82297) (not b!82292) (not b!81987) (not b!81241) (not d!20639) (not b!81384) (not b!82332) (not d!20287) (not b!81713) (not d!20545) (not bm!7623) (not b!82201) (not d!20237) (not bm!7586) (not b!82166) (not b!81874) (not d!20103) (not b!81519) (not mapNonEmpty!3344) (not b!81971) (not b!81627) (not b!81223) (not b!81355) (not d!19969) (not b!81188) (not d!20313) (not b!81596) (not d!20005) (not b!82074) (not d!20811) (not b_lambda!3651) (not b!81179) (not b!81614) (not bm!7636) (not bm!7653) (not d!20289) (not b!81680) (not d!20453) (not b!82036) (not b!81924) (not b!81122) (not d!19937) (not b!82278) (not d!20177) (not d!20173) (not b!81573) (not bm!7590) (not bm!7595) (not d!19947) (not b_lambda!3669) (not b!82274) (not b!81169) (not d!20767) (not b!81837) (not d!20115) (not b!81902) (not b_lambda!3607) (not b!81609) (not d!20257) (not b!81147) (not b!81852) (not d!19881) (not b!81715) (not d!20747) (not b!82390) (not bm!7592) (not b!81134) (not b!81396) (not d!20277) (not b!81334) (not d!20551) (not d!20381) (not b!82416) (not b!81092) (not d!20323) (not b!82369) (not b!82374) (not d!20635) (not b!82174) (not b!81480) (not bm!7646) (not b!82440) (not b!81071) (not b!81831) (not b!81526) (not b!81341) (not b_lambda!3609) (not b!82388) (not d!20233) (not d!19887) (not b!82341) (not d!20343) (not d!20121) (not bm!7618) (not d!19913) (not b!81536) (not d!20753) (not bm!7682) (not d!20821) (not b!81304) (not b_lambda!3675) (not b!81513) (not b!82088) (not bm!7662) (not d!20125) (not d!19965) (not b!82244) (not d!19939) (not b!82096) (not b!81819) (not b!81827) (not d!20643) (not b!81733) (not b!82044) (not b!81994) (not b!81490) (not b!81284) (not b!82249) (not d!20773) (not b!81142) (not b!81322) (not b!81930) (not d!20157) (not b!82407) (not b!82032) (not b!81726) (not d!20535) (not d!19967) (not b!82053) (not d!19973) (not b!81271) (not b!81619) (not bm!7671) (not b!81825) (not d!20571) (not d!20805) (not b!81316) (not b!82399) (not b!81343) (not b!82232) b_and!5001 (not bm!7681) (not b!81501) (not b!81909) (not b!81076) (not b!81769) (not b!81412) (not b!81278) (not b!81528) (not b!81070) (not d!20013) (not b!82462) (not b!81589) (not b!81433) (not d!20241) (not bm!7599) (not b!82050) (not d!20295) (not d!20175) (not b!81176) (not b!81291) (not b!81323) (not bm!7649) (not bm!7558) (not bm!7625) (not b!82334) (not b!81336) (not bm!7668) (not b!81287) (not b!82318) (not b!81625) (not b!81807) (not b!81416) (not b!82065) (not b!81602) (not bm!7561) (not bm!7692) (not b!81464) (not b!81333) (not b!81457) (not d!20573) (not b_lambda!3661) (not b!81900) (not d!20243) (not b!81802) (not b!82431) (not b!81768) (not b!82046) (not bm!7572) (not d!20019) (not d!20355) (not b!82329) (not b!81841) (not b!82125) (not d!20415) (not b!82192) (not d!20713) (not b!81431) (not b!82043) (not b!81069) (not b!81193) (not d!20695) (not b!82198) (not b!82327) (not b!82205) (not b!82142) (not b!82448) (not b!81242) (not d!20195) (not d!20095) (not d!19909) (not d!20587) (not b!82371) (not bm!7575) (not d!20279) (not d!20405) (not b!81112) (not b!82194) (not d!20009) (not b!81366) (not b!81207) (not b!82264) (not b!82295) (not d!20031) (not b!82261) (not b!82195) (not b!82164) (not b!82326) (not b!81621) (not d!20179) (not bm!7576) (not b!81721) (not bm!7562) (not b!81988) (not b!82337) (not d!19977) (not b!81498) (not bm!7676) (not d!20823) (not d!20071) (not b!81424) (not b!81075) (not d!20333) (not d!20591) (not b!82230) (not b!81876) (not bm!7557) (not b!82219) (not b!82428) (not b!81777) (not d!20255) (not b!82345) (not d!20155) (not d!20641) (not b!81214) (not b!81851) (not b!81805) (not b!81235) (not d!20413) (not b!81815) (not b!81983) (not d!20293) (not b!81686) (not b!82459) (not b!81402) (not b!82186) (not d!20385) (not b!82404) (not d!20001) (not d!20681) (not d!20827) (not bm!7699) (not b!81888) (not bm!7696) (not b!82450) (not b!82458) (not b!82313) (not b!81895) (not d!19877) (not d!20563) (not b!81844) (not b!81753) (not bm!7666) (not b!81485) (not d!20795) (not d!20711) (not d!20803) (not d!20759) (not b!81998) (not d!20393) (not b!81348) (not d!20421) (not b!81915) (not bm!7695) (not b!81622) (not b!82446) (not b!82121) (not d!20447) (not b!81194) (not d!20459) (not b!81761) (not b!81636) (not b!82071) (not b_next!2199) (not b!81772) (not b!82259) (not b!82098) (not b!81494) (not d!20817) (not b!81266) (not b!82135) (not b!81576) (not b!82366) (not b!81372) (not b!81667) (not b!81332) (not b!81150) (not b!81210) (not bm!7630) (not b!82206) (not d!20629) (not bm!7661) (not d!20609) (not d!20109) (not b!81535) (not b!81788) (not b!81527) (not b!81925) (not b!81869) (not d!20411) (not b!81328) (not b!82137) (not b!82402) (not b!81611) (not b!82169) (not bm!7573) (not b!81298) (not d!20365) (not b!81586) (not b!81678) (not bm!7641) (not b!82040) (not b!81855) (not b!81504) (not b!81445) (not d!19961) (not d!20003) (not d!20581) (not b!81823) (not d!20149) (not d!20017) (not b!81560) (not d!20787) (not d!20547) (not b!81078) (not d!20231) (not b!82151) (not b!81903) (not d!20515) (not b!81690) (not b!81349) (not b!82268) (not b!81892) (not d!20509) (not b!82181) (not b!81618) (not b!81158) (not b!81068) (not b!81630) (not b!81658) (not d!20021) (not b!81981) (not b!82411) (not b!81946) (not b!81796) (not d!19971) (not b_lambda!3601) (not b!81404) (not b!81990) (not d!20073) (not b!81913) (not b!81197) (not d!20627) (not d!20675) (not d!20235) (not bm!7585) (not d!19993) (not b!81960) (not d!20273) (not b!81201) (not b!81104) (not d!20801) (not b!81749) (not b!81985) (not d!20091) (not b!81879) (not b!81711) (not b!81388) (not b!81918) (not b!82173) (not d!20489) (not d!20829) (not bm!7687) (not b!81138) (not b!81936) (not b!82129) (not b!81597) (not b!81863) (not d!20347) (not b!81709) (not d!20523) (not b!81275) (not b!81949) (not b!81963) (not bm!7580) (not b!81482) (not b!81948) (not bm!7611) (not b!82068) (not d!20321) (not b!82460) (not b!81766) (not b!82213) (not b!82246) (not d!20813) (not d!20733) (not d!20039) (not b!81834) (not d!20833) (not b!82241) (not b!81410) (not b!81295) (not bm!7663) (not b!81296) (not b!82042) (not b!81429) (not d!20339) (not b!82418) (not d!20553) (not d!20325) (not b!81804) (not b!82004) (not b!81579) (not d!20417) (not bm!7567) (not b!81767) (not b!82063) (not d!20617) (not b!82452) (not b!81451) (not d!20815) (not b!81272) (not b!81265) (not d!19901) (not b!81337) (not b!81439) (not b!81953) (not b_lambda!3605) (not b!82447) (not b_lambda!3583) (not bm!7656) (not b_lambda!3573) (not b!82382) (not d!19987) (not d!20709) (not b!81449) (not b!82426) (not d!20079) (not b!81607) (not b!81363) (not b!81881) (not d!20369) (not b!81604) (not b!81718) (not b!82149) (not d!19941) (not b!82310) (not b!81196) (not b!82335) (not d!20465) (not d!20793) (not d!20317) (not b!81564) (not b!82179) (not b!81942) (not d!20661) (not d!19903) (not d!20719) (not bm!7622) (not d!20687) (not bm!7605) (not b!81743) (not d!20067) (not b!81234) (not d!20501) (not d!20483) (not d!20203) (not d!20595) (not bm!7602) (not d!20223) (not b!81303) (not b_lambda!3599) (not b!82454) (not d!20199) (not b!81083) (not b!81145) (not b!81127) (not b!81381) (not b!81872) (not d!20541) (not b!81584) (not b!81829) (not d!20751) (not b!82049) (not b!81467) (not b!81799) (not d!20457) (not b!82168) (not b!82061) (not b!81249) (not b!81822) (not d!20819) (not b!81382) (not b!81532) (not b!82084) (not d!20633) (not d!20757) (not b_lambda!3659) (not d!19955) (not bm!7598) (not b!81098) (not b!82421) (not d!20789) (not d!20351) (not b!81961) (not b!82420) (not b!81172) (not b!82286) (not b!81317) (not b!82106) (not b!81989) (not b!81156) (not d!19915) (not b!82378) (not b!82254) (not b!82076) (not b!81436) (not b!81187) (not d!20051) (not b!81163) (not b!81274) (not b!81351) (not b!81426) (not b!81594) (not b!81237) (not b!81438) (not b!81996) (not bm!7579) (not d!19935) (not d!20043) (not d!19985) (not d!20651) (not d!20461) (not d!20731) (not b!82351) (not d!20047) (not b!81255) (not bm!7619) (not b!81860) (not b!81952) (not d!20579) (not b!81507) (not b!81456) (not b!82435) (not b!81523) (not d!20807) (not d!20809) (not b!81899) (not d!20557) (not b!81571) (not b!82228) (not b!81565) (not d!20779) (not d!20637) (not d!20717) (not d!20183) (not b!82315) (not d!20427) (not b!81884) (not d!20027) (not b!81857) (not bm!7667) (not bm!7633) (not b!82226) (not b!82273) (not b!81776) (not b!82302) (not b!81369) (not b!81978) (not b!82357) (not b!81689) (not b!81674) (not bm!7563) (not d!20261) (not d!20213) (not b!81441) (not b!82396) (not b!81392) (not b!81335) (not d!20229) (not b!82299) (not b!82085) (not b!81285) (not d!20499) (not b!82316) (not b!82092) (not b!82353) (not b!81174) (not d!19945) (not b!81840) (not b!82247) (not b!82200) (not d!19975) (not b!82429) (not b!81628) (not d!20399) (not b!81079) (not b!81928) (not b!82188) (not d!20693) (not b!81462) (not b!81588) (not d!20741) (not d!20335) (not b!81213) (not d!20253) (not b!81951) (not b!81778) (not b!81301) (not b!81783) (not b!81089) (not d!20259) (not d!20723) (not b!81106) (not d!20615) (not b!82199) (not bm!7645) (not d!20555) (not b!81755) (not b!81849) (not b!81833) (not b!82059) (not bm!7650) (not b!82415) (not b!82127) (not d!20705) (not d!19927) (not b!82099) (not d!20397) (not d!19999) (not d!20065) (not b!81583) (not b!81346) (not b!82093) (not bm!7589) (not b!81558) (not b!81510) (not b_lambda!3663) (not b!81797) (not b!81676) (not b!81935) (not b!82455) (not b!82306) (not b!81612) (not b_lambda!3657) (not b!81405) (not b!81471) (not d!20513) (not b!82423) (not d!20621) (not b!81408))
(check-sat b_and!5001 b_and!5003 (not b_next!2197) (not b_next!2199))
