; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10350 () Bool)

(assert start!10350)

(declare-fun b!80208 () Bool)

(declare-fun b_free!2197 () Bool)

(declare-fun b_next!2197 () Bool)

(assert (=> b!80208 (= b_free!2197 (not b_next!2197))))

(declare-fun tp!8802 () Bool)

(declare-fun b_and!4901 () Bool)

(assert (=> b!80208 (= tp!8802 b_and!4901)))

(declare-fun b!80215 () Bool)

(declare-fun b_free!2199 () Bool)

(declare-fun b_next!2199 () Bool)

(assert (=> b!80215 (= b_free!2199 (not b_next!2199))))

(declare-fun tp!8800 () Bool)

(declare-fun b_and!4903 () Bool)

(assert (=> b!80215 (= tp!8800 b_and!4903)))

(declare-fun b!80196 () Bool)

(declare-fun res!41809 () Bool)

(declare-fun e!52376 () Bool)

(assert (=> b!80196 (=> (not res!41809) (not e!52376))))

(declare-datatypes ((V!3001 0))(
  ( (V!3002 (val!1302 Int)) )
))
(declare-datatypes ((array!3971 0))(
  ( (array!3972 (arr!1892 (Array (_ BitVec 32) (_ BitVec 64))) (size!2134 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!914 0))(
  ( (ValueCellFull!914 (v!2609 V!3001)) (EmptyCell!914) )
))
(declare-datatypes ((array!3973 0))(
  ( (array!3974 (arr!1893 (Array (_ BitVec 32) ValueCell!914)) (size!2135 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!736 0))(
  ( (LongMapFixedSize!737 (defaultEntry!2292 Int) (mask!6298 (_ BitVec 32)) (extraKeys!2139 (_ BitVec 32)) (zeroValue!2188 V!3001) (minValue!2188 V!3001) (_size!417 (_ BitVec 32)) (_keys!3956 array!3971) (_values!2275 array!3973) (_vacant!417 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!736)

(declare-fun valid!325 (LongMapFixedSize!736) Bool)

(assert (=> b!80196 (= res!41809 (valid!325 newMap!16))))

(declare-fun b!80197 () Bool)

(declare-fun e!52369 () Bool)

(declare-fun e!52379 () Bool)

(assert (=> b!80197 (= e!52369 e!52379)))

(declare-fun b!80198 () Bool)

(declare-fun e!52368 () Bool)

(declare-fun e!52380 () Bool)

(assert (=> b!80198 (= e!52368 e!52380)))

(declare-fun res!41811 () Bool)

(assert (=> b!80198 (=> (not res!41811) (not e!52380))))

(declare-datatypes ((tuple2!2166 0))(
  ( (tuple2!2167 (_1!1094 Bool) (_2!1094 LongMapFixedSize!736)) )
))
(declare-fun lt!37208 () tuple2!2166)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!80198 (= res!41811 (and (_1!1094 lt!37208) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!2322 0))(
  ( (Unit!2323) )
))
(declare-fun lt!37216 () Unit!2322)

(declare-fun e!52377 () Unit!2322)

(assert (=> b!80198 (= lt!37216 e!52377)))

(declare-datatypes ((Cell!544 0))(
  ( (Cell!545 (v!2610 LongMapFixedSize!736)) )
))
(declare-datatypes ((LongMap!544 0))(
  ( (LongMap!545 (underlying!283 Cell!544)) )
))
(declare-fun thiss!992 () LongMap!544)

(declare-fun c!12532 () Bool)

(declare-datatypes ((tuple2!2168 0))(
  ( (tuple2!2169 (_1!1095 (_ BitVec 64)) (_2!1095 V!3001)) )
))
(declare-datatypes ((List!1497 0))(
  ( (Nil!1494) (Cons!1493 (h!2082 tuple2!2168) (t!5156 List!1497)) )
))
(declare-datatypes ((ListLongMap!1429 0))(
  ( (ListLongMap!1430 (toList!730 List!1497)) )
))
(declare-fun lt!37217 () ListLongMap!1429)

(declare-fun contains!739 (ListLongMap!1429 (_ BitVec 64)) Bool)

(assert (=> b!80198 (= c!12532 (contains!739 lt!37217 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun lt!37223 () V!3001)

(declare-fun update!119 (LongMapFixedSize!736 (_ BitVec 64) V!3001) tuple2!2166)

(assert (=> b!80198 (= lt!37208 (update!119 newMap!16 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))

(declare-fun b!80199 () Bool)

(declare-fun e!52371 () Bool)

(assert (=> b!80199 (= e!52380 (not e!52371))))

(declare-fun res!41808 () Bool)

(assert (=> b!80199 (=> res!41808 e!52371)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!80199 (= res!41808 (not (validMask!0 (mask!6298 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun lt!37210 () tuple2!2168)

(declare-fun lt!37222 () ListLongMap!1429)

(declare-fun lt!37215 () ListLongMap!1429)

(declare-fun lt!37212 () tuple2!2168)

(declare-fun +!101 (ListLongMap!1429 tuple2!2168) ListLongMap!1429)

(assert (=> b!80199 (= (+!101 lt!37222 lt!37212) (+!101 (+!101 lt!37215 lt!37212) lt!37210))))

(assert (=> b!80199 (= lt!37212 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun lt!37213 () Unit!2322)

(declare-fun addCommutativeForDiffKeys!21 (ListLongMap!1429 (_ BitVec 64) V!3001 (_ BitVec 64) V!3001) Unit!2322)

(assert (=> b!80199 (= lt!37213 (addCommutativeForDiffKeys!21 lt!37215 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun lt!37221 () ListLongMap!1429)

(assert (=> b!80199 (= lt!37221 lt!37222)))

(assert (=> b!80199 (= lt!37222 (+!101 lt!37215 lt!37210))))

(declare-fun lt!37219 () ListLongMap!1429)

(declare-fun lt!37209 () tuple2!2168)

(assert (=> b!80199 (= lt!37221 (+!101 lt!37219 lt!37209))))

(declare-fun lt!37211 () ListLongMap!1429)

(assert (=> b!80199 (= lt!37215 (+!101 lt!37211 lt!37209))))

(assert (=> b!80199 (= lt!37209 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))

(assert (=> b!80199 (= lt!37219 (+!101 lt!37211 lt!37210))))

(assert (=> b!80199 (= lt!37210 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))

(declare-fun lt!37220 () Unit!2322)

(assert (=> b!80199 (= lt!37220 (addCommutativeForDiffKeys!21 lt!37211 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!66 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) Int) ListLongMap!1429)

(assert (=> b!80199 (= lt!37211 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun b!80200 () Bool)

(declare-fun e!52375 () Bool)

(declare-fun tp_is_empty!2515 () Bool)

(assert (=> b!80200 (= e!52375 tp_is_empty!2515)))

(declare-fun b!80201 () Bool)

(declare-fun e!52374 () Bool)

(assert (=> b!80201 (= e!52374 tp_is_empty!2515)))

(declare-fun mapIsEmpty!3323 () Bool)

(declare-fun mapRes!3323 () Bool)

(assert (=> mapIsEmpty!3323 mapRes!3323))

(declare-fun b!80202 () Bool)

(declare-fun res!41806 () Bool)

(assert (=> b!80202 (=> (not res!41806) (not e!52376))))

(assert (=> b!80202 (= res!41806 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!80203 () Bool)

(declare-fun e!52370 () Bool)

(assert (=> b!80203 (= e!52370 tp_is_empty!2515)))

(declare-fun mapNonEmpty!3323 () Bool)

(declare-fun mapRes!3324 () Bool)

(declare-fun tp!8799 () Bool)

(assert (=> mapNonEmpty!3323 (= mapRes!3324 (and tp!8799 e!52374))))

(declare-fun mapRest!3323 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapValue!3324 () ValueCell!914)

(declare-fun mapKey!3323 () (_ BitVec 32))

(assert (=> mapNonEmpty!3323 (= (arr!1893 (_values!2275 newMap!16)) (store mapRest!3323 mapKey!3323 mapValue!3324))))

(declare-fun b!80204 () Bool)

(declare-fun e!52381 () Bool)

(assert (=> b!80204 (= e!52381 tp_is_empty!2515)))

(declare-fun b!80205 () Bool)

(declare-fun e!52373 () Bool)

(assert (=> b!80205 (= e!52376 e!52373)))

(declare-fun res!41813 () Bool)

(assert (=> b!80205 (=> (not res!41813) (not e!52373))))

(declare-fun lt!37218 () ListLongMap!1429)

(assert (=> b!80205 (= res!41813 (= lt!37218 lt!37217))))

(declare-fun map!1186 (LongMapFixedSize!736) ListLongMap!1429)

(assert (=> b!80205 (= lt!37217 (map!1186 newMap!16))))

(declare-fun getCurrentListMap!426 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) Int) ListLongMap!1429)

(assert (=> b!80205 (= lt!37218 (getCurrentListMap!426 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun res!41807 () Bool)

(assert (=> start!10350 (=> (not res!41807) (not e!52376))))

(declare-fun valid!326 (LongMap!544) Bool)

(assert (=> start!10350 (= res!41807 (valid!326 thiss!992))))

(assert (=> start!10350 e!52376))

(assert (=> start!10350 e!52369))

(assert (=> start!10350 true))

(declare-fun e!52367 () Bool)

(assert (=> start!10350 e!52367))

(declare-fun b!80206 () Bool)

(declare-fun e!52383 () Bool)

(assert (=> b!80206 (= e!52383 (and e!52375 mapRes!3324))))

(declare-fun condMapEmpty!3323 () Bool)

(declare-fun mapDefault!3324 () ValueCell!914)

(assert (=> b!80206 (= condMapEmpty!3323 (= (arr!1893 (_values!2275 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3324)))))

(declare-fun b!80207 () Bool)

(declare-fun Unit!2324 () Unit!2322)

(assert (=> b!80207 (= e!52377 Unit!2324)))

(declare-fun mapNonEmpty!3324 () Bool)

(declare-fun tp!8801 () Bool)

(assert (=> mapNonEmpty!3324 (= mapRes!3323 (and tp!8801 e!52381))))

(declare-fun mapKey!3324 () (_ BitVec 32))

(declare-fun mapRest!3324 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapValue!3323 () ValueCell!914)

(assert (=> mapNonEmpty!3324 (= (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (store mapRest!3324 mapKey!3324 mapValue!3323))))

(declare-fun e!52372 () Bool)

(declare-fun e!52384 () Bool)

(declare-fun array_inv!1163 (array!3971) Bool)

(declare-fun array_inv!1164 (array!3973) Bool)

(assert (=> b!80208 (= e!52372 (and tp!8802 tp_is_empty!2515 (array_inv!1163 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (array_inv!1164 (_values!2275 (v!2610 (underlying!283 thiss!992)))) e!52384))))

(declare-fun b!80209 () Bool)

(assert (=> b!80209 (= e!52373 e!52368)))

(declare-fun res!41812 () Bool)

(assert (=> b!80209 (=> (not res!41812) (not e!52368))))

(assert (=> b!80209 (= res!41812 (and (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1189 (ValueCell!914 V!3001) V!3001)

(declare-fun dynLambda!341 (Int (_ BitVec 64)) V!3001)

(assert (=> b!80209 (= lt!37223 (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80210 () Bool)

(assert (=> b!80210 (= e!52384 (and e!52370 mapRes!3323))))

(declare-fun condMapEmpty!3324 () Bool)

(declare-fun mapDefault!3323 () ValueCell!914)

(assert (=> b!80210 (= condMapEmpty!3324 (= (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3323)))))

(declare-fun b!80211 () Bool)

(assert (=> b!80211 (= e!52379 e!52372)))

(declare-fun mapIsEmpty!3324 () Bool)

(assert (=> mapIsEmpty!3324 mapRes!3324))

(declare-fun b!80212 () Bool)

(declare-fun res!41810 () Bool)

(assert (=> b!80212 (=> (not res!41810) (not e!52376))))

(assert (=> b!80212 (= res!41810 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6298 newMap!16)) (_size!417 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun b!80213 () Bool)

(declare-fun Unit!2325 () Unit!2322)

(assert (=> b!80213 (= e!52377 Unit!2325)))

(declare-fun lt!37225 () Unit!2322)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!54 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) (_ BitVec 32) Int) Unit!2322)

(assert (=> b!80213 (= lt!37225 (lemmaListMapContainsThenArrayContainsFrom!54 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3971 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!80213 (arrayContainsKey!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!37224 () Unit!2322)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3971 (_ BitVec 32) (_ BitVec 32)) Unit!2322)

(assert (=> b!80213 (= lt!37224 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1498 0))(
  ( (Nil!1495) (Cons!1494 (h!2083 (_ BitVec 64)) (t!5157 List!1498)) )
))
(declare-fun arrayNoDuplicates!0 (array!3971 (_ BitVec 32) List!1498) Bool)

(assert (=> b!80213 (arrayNoDuplicates!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) from!355 Nil!1495)))

(declare-fun lt!37214 () Unit!2322)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3971 (_ BitVec 32) (_ BitVec 64) List!1498) Unit!2322)

(assert (=> b!80213 (= lt!37214 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495)))))

(assert (=> b!80213 false))

(declare-fun b!80214 () Bool)

(assert (=> b!80214 (= e!52371 (or (not (= (size!2135 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6298 (v!2610 (underlying!283 thiss!992)))))) (= (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (size!2135 (_values!2275 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> b!80215 (= e!52367 (and tp!8800 tp_is_empty!2515 (array_inv!1163 (_keys!3956 newMap!16)) (array_inv!1164 (_values!2275 newMap!16)) e!52383))))

(assert (= (and start!10350 res!41807) b!80202))

(assert (= (and b!80202 res!41806) b!80196))

(assert (= (and b!80196 res!41809) b!80212))

(assert (= (and b!80212 res!41810) b!80205))

(assert (= (and b!80205 res!41813) b!80209))

(assert (= (and b!80209 res!41812) b!80198))

(assert (= (and b!80198 c!12532) b!80213))

(assert (= (and b!80198 (not c!12532)) b!80207))

(assert (= (and b!80198 res!41811) b!80199))

(assert (= (and b!80199 (not res!41808)) b!80214))

(assert (= (and b!80210 condMapEmpty!3324) mapIsEmpty!3323))

(assert (= (and b!80210 (not condMapEmpty!3324)) mapNonEmpty!3324))

(get-info :version)

(assert (= (and mapNonEmpty!3324 ((_ is ValueCellFull!914) mapValue!3323)) b!80204))

(assert (= (and b!80210 ((_ is ValueCellFull!914) mapDefault!3323)) b!80203))

(assert (= b!80208 b!80210))

(assert (= b!80211 b!80208))

(assert (= b!80197 b!80211))

(assert (= start!10350 b!80197))

(assert (= (and b!80206 condMapEmpty!3323) mapIsEmpty!3324))

(assert (= (and b!80206 (not condMapEmpty!3323)) mapNonEmpty!3323))

(assert (= (and mapNonEmpty!3323 ((_ is ValueCellFull!914) mapValue!3324)) b!80201))

(assert (= (and b!80206 ((_ is ValueCellFull!914) mapDefault!3324)) b!80200))

(assert (= b!80215 b!80206))

(assert (= start!10350 b!80215))

(declare-fun b_lambda!3591 () Bool)

(assert (=> (not b_lambda!3591) (not b!80209)))

(declare-fun t!5153 () Bool)

(declare-fun tb!1629 () Bool)

(assert (=> (and b!80208 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))) t!5153) tb!1629))

(declare-fun result!2829 () Bool)

(assert (=> tb!1629 (= result!2829 tp_is_empty!2515)))

(assert (=> b!80209 t!5153))

(declare-fun b_and!4905 () Bool)

(assert (= b_and!4901 (and (=> t!5153 result!2829) b_and!4905)))

(declare-fun t!5155 () Bool)

(declare-fun tb!1631 () Bool)

(assert (=> (and b!80215 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))) t!5155) tb!1631))

(declare-fun result!2833 () Bool)

(assert (= result!2833 result!2829))

(assert (=> b!80209 t!5155))

(declare-fun b_and!4907 () Bool)

(assert (= b_and!4903 (and (=> t!5155 result!2833) b_and!4907)))

(declare-fun m!81731 () Bool)

(assert (=> b!80199 m!81731))

(declare-fun m!81733 () Bool)

(assert (=> b!80199 m!81733))

(declare-fun m!81735 () Bool)

(assert (=> b!80199 m!81735))

(declare-fun m!81737 () Bool)

(assert (=> b!80199 m!81737))

(declare-fun m!81739 () Bool)

(assert (=> b!80199 m!81739))

(assert (=> b!80199 m!81737))

(declare-fun m!81741 () Bool)

(assert (=> b!80199 m!81741))

(declare-fun m!81743 () Bool)

(assert (=> b!80199 m!81743))

(assert (=> b!80199 m!81737))

(declare-fun m!81745 () Bool)

(assert (=> b!80199 m!81745))

(declare-fun m!81747 () Bool)

(assert (=> b!80199 m!81747))

(assert (=> b!80199 m!81731))

(declare-fun m!81749 () Bool)

(assert (=> b!80199 m!81749))

(declare-fun m!81751 () Bool)

(assert (=> b!80199 m!81751))

(declare-fun m!81753 () Bool)

(assert (=> b!80199 m!81753))

(assert (=> b!80198 m!81737))

(assert (=> b!80198 m!81737))

(declare-fun m!81755 () Bool)

(assert (=> b!80198 m!81755))

(assert (=> b!80198 m!81737))

(declare-fun m!81757 () Bool)

(assert (=> b!80198 m!81757))

(declare-fun m!81759 () Bool)

(assert (=> mapNonEmpty!3324 m!81759))

(declare-fun m!81761 () Bool)

(assert (=> start!10350 m!81761))

(declare-fun m!81763 () Bool)

(assert (=> b!80213 m!81763))

(declare-fun m!81765 () Bool)

(assert (=> b!80213 m!81765))

(assert (=> b!80213 m!81737))

(declare-fun m!81767 () Bool)

(assert (=> b!80213 m!81767))

(assert (=> b!80213 m!81737))

(assert (=> b!80213 m!81737))

(declare-fun m!81769 () Bool)

(assert (=> b!80213 m!81769))

(assert (=> b!80213 m!81737))

(declare-fun m!81771 () Bool)

(assert (=> b!80213 m!81771))

(assert (=> b!80209 m!81737))

(declare-fun m!81773 () Bool)

(assert (=> b!80209 m!81773))

(declare-fun m!81775 () Bool)

(assert (=> b!80209 m!81775))

(assert (=> b!80209 m!81773))

(assert (=> b!80209 m!81775))

(declare-fun m!81777 () Bool)

(assert (=> b!80209 m!81777))

(declare-fun m!81779 () Bool)

(assert (=> mapNonEmpty!3323 m!81779))

(declare-fun m!81781 () Bool)

(assert (=> b!80196 m!81781))

(declare-fun m!81783 () Bool)

(assert (=> b!80205 m!81783))

(declare-fun m!81785 () Bool)

(assert (=> b!80205 m!81785))

(declare-fun m!81787 () Bool)

(assert (=> b!80208 m!81787))

(declare-fun m!81789 () Bool)

(assert (=> b!80208 m!81789))

(declare-fun m!81791 () Bool)

(assert (=> b!80215 m!81791))

(declare-fun m!81793 () Bool)

(assert (=> b!80215 m!81793))

(check-sat b_and!4907 (not b!80208) (not b!80198) b_and!4905 (not b!80209) (not b_lambda!3591) (not b_next!2199) (not b!80215) (not b!80199) (not mapNonEmpty!3323) (not b_next!2197) tp_is_empty!2515 (not b!80196) (not b!80213) (not mapNonEmpty!3324) (not start!10350) (not b!80205))
(check-sat b_and!4905 b_and!4907 (not b_next!2197) (not b_next!2199))
(get-model)

(declare-fun b_lambda!3597 () Bool)

(assert (= b_lambda!3591 (or (and b!80208 b_free!2197) (and b!80215 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))))) b_lambda!3597)))

(check-sat b_and!4907 (not b!80208) (not b!80198) b_and!4905 (not b!80209) (not b_next!2199) (not b!80215) (not b!80199) (not mapNonEmpty!3323) (not b_next!2197) tp_is_empty!2515 (not b!80196) (not b!80213) (not mapNonEmpty!3324) (not start!10350) (not b!80205) (not b_lambda!3597))
(check-sat b_and!4905 b_and!4907 (not b_next!2197) (not b_next!2199))
(get-model)

(declare-fun d!19677 () Bool)

(declare-fun e!52497 () Bool)

(assert (=> d!19677 e!52497))

(declare-fun res!41864 () Bool)

(assert (=> d!19677 (=> res!41864 e!52497)))

(declare-fun lt!37343 () Bool)

(assert (=> d!19677 (= res!41864 (not lt!37343))))

(declare-fun lt!37342 () Bool)

(assert (=> d!19677 (= lt!37343 lt!37342)))

(declare-fun lt!37344 () Unit!2322)

(declare-fun e!52498 () Unit!2322)

(assert (=> d!19677 (= lt!37344 e!52498)))

(declare-fun c!12541 () Bool)

(assert (=> d!19677 (= c!12541 lt!37342)))

(declare-fun containsKey!142 (List!1497 (_ BitVec 64)) Bool)

(assert (=> d!19677 (= lt!37342 (containsKey!142 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!19677 (= (contains!739 lt!37217 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) lt!37343)))

(declare-fun b!80348 () Bool)

(declare-fun lt!37345 () Unit!2322)

(assert (=> b!80348 (= e!52498 lt!37345)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!90 (List!1497 (_ BitVec 64)) Unit!2322)

(assert (=> b!80348 (= lt!37345 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-datatypes ((Option!145 0))(
  ( (Some!144 (v!2616 V!3001)) (None!143) )
))
(declare-fun isDefined!91 (Option!145) Bool)

(declare-fun getValueByKey!139 (List!1497 (_ BitVec 64)) Option!145)

(assert (=> b!80348 (isDefined!91 (getValueByKey!139 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!80349 () Bool)

(declare-fun Unit!2332 () Unit!2322)

(assert (=> b!80349 (= e!52498 Unit!2332)))

(declare-fun b!80350 () Bool)

(assert (=> b!80350 (= e!52497 (isDefined!91 (getValueByKey!139 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(assert (= (and d!19677 c!12541) b!80348))

(assert (= (and d!19677 (not c!12541)) b!80349))

(assert (= (and d!19677 (not res!41864)) b!80350))

(assert (=> d!19677 m!81737))

(declare-fun m!81923 () Bool)

(assert (=> d!19677 m!81923))

(assert (=> b!80348 m!81737))

(declare-fun m!81925 () Bool)

(assert (=> b!80348 m!81925))

(assert (=> b!80348 m!81737))

(declare-fun m!81927 () Bool)

(assert (=> b!80348 m!81927))

(assert (=> b!80348 m!81927))

(declare-fun m!81929 () Bool)

(assert (=> b!80348 m!81929))

(assert (=> b!80350 m!81737))

(assert (=> b!80350 m!81927))

(assert (=> b!80350 m!81927))

(assert (=> b!80350 m!81929))

(assert (=> b!80198 d!19677))

(declare-fun c!12577 () Bool)

(declare-fun lt!37404 () (_ BitVec 32))

(declare-fun call!7456 () ListLongMap!1429)

(declare-fun c!12568 () Bool)

(declare-fun lt!37403 () array!3973)

(declare-fun c!12578 () Bool)

(declare-fun bm!7433 () Bool)

(declare-fun lt!37407 () (_ BitVec 32))

(assert (=> bm!7433 (= call!7456 (getCurrentListMap!426 (_keys!3956 newMap!16) (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403) (mask!6298 newMap!16) (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun bm!7434 () Bool)

(declare-fun call!7447 () Bool)

(declare-fun call!7450 () Bool)

(assert (=> bm!7434 (= call!7447 call!7450)))

(declare-fun b!80431 () Bool)

(declare-fun e!52546 () Bool)

(declare-fun call!7444 () Bool)

(assert (=> b!80431 (= e!52546 (not call!7444))))

(declare-fun bm!7435 () Bool)

(declare-datatypes ((SeekEntryResult!235 0))(
  ( (MissingZero!235 (index!3075 (_ BitVec 32))) (Found!235 (index!3076 (_ BitVec 32))) (Intermediate!235 (undefined!1047 Bool) (index!3077 (_ BitVec 32)) (x!11686 (_ BitVec 32))) (Undefined!235) (MissingVacant!235 (index!3078 (_ BitVec 32))) )
))
(declare-fun call!7437 () SeekEntryResult!235)

(declare-fun call!7442 () SeekEntryResult!235)

(assert (=> bm!7435 (= call!7437 call!7442)))

(declare-fun b!80432 () Bool)

(declare-fun e!52551 () Bool)

(declare-fun e!52558 () Bool)

(assert (=> b!80432 (= e!52551 e!52558)))

(declare-fun res!41899 () Bool)

(declare-fun call!7449 () Bool)

(assert (=> b!80432 (= res!41899 call!7449)))

(assert (=> b!80432 (=> (not res!41899) (not e!52558))))

(declare-fun b!80433 () Bool)

(declare-fun lt!37410 () Unit!2322)

(declare-fun lt!37401 () Unit!2322)

(assert (=> b!80433 (= lt!37410 lt!37401)))

(declare-fun call!7445 () ListLongMap!1429)

(declare-fun call!7457 () ListLongMap!1429)

(assert (=> b!80433 (= call!7445 call!7457)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!29 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 V!3001 Int) Unit!2322)

(assert (=> b!80433 (= lt!37401 (lemmaChangeZeroKeyThenAddPairToListMap!29 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) lt!37404 (zeroValue!2188 newMap!16) lt!37223 (minValue!2188 newMap!16) (defaultEntry!2292 newMap!16)))))

(assert (=> b!80433 (= lt!37404 (bvor (extraKeys!2139 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!52543 () tuple2!2166)

(assert (=> b!80433 (= e!52543 (tuple2!2167 true (LongMapFixedSize!737 (defaultEntry!2292 newMap!16) (mask!6298 newMap!16) (bvor (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) lt!37223 (minValue!2188 newMap!16) (_size!417 newMap!16) (_keys!3956 newMap!16) (_values!2275 newMap!16) (_vacant!417 newMap!16))))))

(declare-fun e!52549 () Bool)

(declare-fun call!7438 () ListLongMap!1429)

(declare-fun b!80434 () Bool)

(declare-fun call!7459 () ListLongMap!1429)

(assert (=> b!80434 (= e!52549 (= call!7459 (+!101 call!7438 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun bm!7436 () Bool)

(declare-fun call!7455 () Bool)

(assert (=> bm!7436 (= call!7444 call!7455)))

(declare-fun b!80435 () Bool)

(declare-fun e!52560 () tuple2!2166)

(declare-fun lt!37417 () tuple2!2166)

(assert (=> b!80435 (= e!52560 (tuple2!2167 (_1!1094 lt!37417) (_2!1094 lt!37417)))))

(declare-fun call!7441 () tuple2!2166)

(assert (=> b!80435 (= lt!37417 call!7441)))

(declare-fun b!80436 () Bool)

(declare-fun lt!37409 () Unit!2322)

(declare-fun lt!37419 () Unit!2322)

(assert (=> b!80436 (= lt!37409 lt!37419)))

(declare-fun call!7453 () ListLongMap!1429)

(declare-fun lt!37405 () SeekEntryResult!235)

(assert (=> b!80436 (contains!739 call!7453 (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405)))))

(declare-fun lemmaValidKeyInArrayIsInListMap!89 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) Int) Unit!2322)

(assert (=> b!80436 (= lt!37419 (lemmaValidKeyInArrayIsInListMap!89 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3076 lt!37405) (defaultEntry!2292 newMap!16)))))

(assert (=> b!80436 (= lt!37403 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))))))

(declare-fun lt!37423 () Unit!2322)

(declare-fun lt!37421 () Unit!2322)

(assert (=> b!80436 (= lt!37423 lt!37421)))

(declare-fun call!7452 () ListLongMap!1429)

(assert (=> b!80436 (= call!7452 (getCurrentListMap!426 (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!29 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) (_ BitVec 64) V!3001 Int) Unit!2322)

(assert (=> b!80436 (= lt!37421 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!29 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3076 lt!37405) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37424 () Unit!2322)

(declare-fun e!52554 () Unit!2322)

(assert (=> b!80436 (= lt!37424 e!52554)))

(declare-fun c!12573 () Bool)

(declare-fun call!7439 () Bool)

(assert (=> b!80436 (= c!12573 call!7439)))

(declare-fun e!52547 () tuple2!2166)

(assert (=> b!80436 (= e!52547 (tuple2!2167 true (LongMapFixedSize!737 (defaultEntry!2292 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (_size!417 newMap!16) (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (_vacant!417 newMap!16))))))

(declare-fun b!80437 () Bool)

(declare-fun lt!37413 () SeekEntryResult!235)

(assert (=> b!80437 (= e!52551 ((_ is Undefined!235) lt!37413))))

(declare-fun b!80438 () Bool)

(declare-fun c!12579 () Bool)

(assert (=> b!80438 (= c!12579 ((_ is MissingVacant!235) lt!37405))))

(declare-fun e!52557 () tuple2!2166)

(assert (=> b!80438 (= e!52557 e!52560)))

(declare-fun b!80439 () Bool)

(declare-fun lt!37400 () SeekEntryResult!235)

(declare-fun e!52552 () Bool)

(assert (=> b!80439 (= e!52552 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37400)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun d!19679 () Bool)

(declare-fun e!52542 () Bool)

(assert (=> d!19679 e!52542))

(declare-fun res!41897 () Bool)

(assert (=> d!19679 (=> (not res!41897) (not e!52542))))

(declare-fun lt!37425 () tuple2!2166)

(assert (=> d!19679 (= res!41897 (valid!325 (_2!1094 lt!37425)))))

(declare-fun e!52548 () tuple2!2166)

(assert (=> d!19679 (= lt!37425 e!52548)))

(assert (=> d!19679 (= c!12568 (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvneg (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(assert (=> d!19679 (valid!325 newMap!16)))

(assert (=> d!19679 (= (update!119 newMap!16 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223) lt!37425)))

(declare-fun b!80440 () Bool)

(declare-fun lt!37411 () Unit!2322)

(assert (=> b!80440 (= e!52554 lt!37411)))

(declare-fun call!7440 () Unit!2322)

(assert (=> b!80440 (= lt!37411 call!7440)))

(declare-fun call!7443 () SeekEntryResult!235)

(assert (=> b!80440 (= lt!37400 call!7443)))

(declare-fun res!41903 () Bool)

(assert (=> b!80440 (= res!41903 ((_ is Found!235) lt!37400))))

(assert (=> b!80440 (=> (not res!41903) (not e!52552))))

(assert (=> b!80440 e!52552))

(declare-fun b!80441 () Bool)

(declare-fun res!41905 () Bool)

(declare-fun e!52545 () Bool)

(assert (=> b!80441 (=> (not res!41905) (not e!52545))))

(assert (=> b!80441 (= res!41905 call!7447)))

(declare-fun e!52555 () Bool)

(assert (=> b!80441 (= e!52555 e!52545)))

(declare-fun bm!7437 () Bool)

(declare-fun call!7436 () Bool)

(assert (=> bm!7437 (= call!7450 call!7436)))

(declare-fun lt!37426 () SeekEntryResult!235)

(declare-fun lt!37408 () SeekEntryResult!235)

(declare-fun c!12570 () Bool)

(declare-fun c!12571 () Bool)

(declare-fun bm!7438 () Bool)

(declare-fun c!12574 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!7438 (= call!7436 (inRange!0 (ite c!12578 (ite c!12574 (index!3076 lt!37426) (ite c!12570 (index!3075 lt!37408) (index!3078 lt!37408))) (ite c!12573 (index!3076 lt!37400) (ite c!12571 (index!3075 lt!37413) (index!3078 lt!37413)))) (mask!6298 newMap!16)))))

(declare-fun bm!7439 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3971 (_ BitVec 32)) SeekEntryResult!235)

(assert (=> bm!7439 (= call!7442 (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(declare-fun bm!7440 () Bool)

(declare-fun call!7458 () Bool)

(assert (=> bm!7440 (= call!7458 call!7455)))

(declare-fun bm!7441 () Bool)

(assert (=> bm!7441 (= call!7438 (map!1186 newMap!16))))

(declare-fun b!80442 () Bool)

(declare-fun res!41896 () Bool)

(declare-fun e!52541 () Bool)

(assert (=> b!80442 (=> (not res!41896) (not e!52541))))

(assert (=> b!80442 (= res!41896 call!7449)))

(declare-fun e!52553 () Bool)

(assert (=> b!80442 (= e!52553 e!52541)))

(declare-fun b!80443 () Bool)

(declare-fun e!52550 () Bool)

(assert (=> b!80443 (= e!52542 e!52550)))

(declare-fun c!12572 () Bool)

(assert (=> b!80443 (= c!12572 (_1!1094 lt!37425))))

(declare-fun bm!7442 () Bool)

(declare-fun call!7454 () ListLongMap!1429)

(declare-fun call!7448 () ListLongMap!1429)

(assert (=> bm!7442 (= call!7454 call!7448)))

(declare-fun bm!7443 () Bool)

(assert (=> bm!7443 (= call!7452 (+!101 (ite c!12568 call!7454 call!7448) (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!80444 () Bool)

(assert (=> b!80444 (= e!52558 (not call!7458))))

(declare-fun b!80445 () Bool)

(declare-fun lt!37420 () Unit!2322)

(declare-fun e!52559 () Unit!2322)

(assert (=> b!80445 (= lt!37420 e!52559)))

(assert (=> b!80445 (= c!12574 call!7439)))

(assert (=> b!80445 (= e!52557 (tuple2!2167 false newMap!16))))

(declare-fun e!52561 () Bool)

(declare-fun b!80446 () Bool)

(assert (=> b!80446 (= e!52561 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37426)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!80447 () Bool)

(declare-fun res!41902 () Bool)

(assert (=> b!80447 (=> (not res!41902) (not e!52541))))

(assert (=> b!80447 (= res!41902 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3075 lt!37413)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7444 () Bool)

(declare-fun updateHelperNewKey!29 (LongMapFixedSize!736 (_ BitVec 64) V!3001 (_ BitVec 32)) tuple2!2166)

(assert (=> bm!7444 (= call!7441 (updateHelperNewKey!29 newMap!16 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405))))))

(declare-fun b!80448 () Bool)

(declare-fun c!12575 () Bool)

(assert (=> b!80448 (= c!12575 ((_ is MissingVacant!235) lt!37408))))

(declare-fun e!52544 () Bool)

(assert (=> b!80448 (= e!52555 e!52544)))

(declare-fun bm!7445 () Bool)

(assert (=> bm!7445 (= call!7443 call!7442)))

(declare-fun b!80449 () Bool)

(assert (=> b!80449 (= e!52548 e!52557)))

(assert (=> b!80449 (= lt!37405 (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(assert (=> b!80449 (= c!12578 ((_ is Undefined!235) lt!37405))))

(declare-fun bm!7446 () Bool)

(declare-fun c!12580 () Bool)

(assert (=> bm!7446 (= c!12580 c!12578)))

(declare-fun e!52556 () ListLongMap!1429)

(assert (=> bm!7446 (= call!7439 (contains!739 e!52556 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!80450 () Bool)

(assert (=> b!80450 (= e!52545 (not call!7444))))

(declare-fun b!80451 () Bool)

(assert (=> b!80451 (= e!52544 e!52546)))

(declare-fun res!41904 () Bool)

(assert (=> b!80451 (= res!41904 call!7447)))

(assert (=> b!80451 (=> (not res!41904) (not e!52546))))

(declare-fun b!80452 () Bool)

(declare-fun Unit!2333 () Unit!2322)

(assert (=> b!80452 (= e!52559 Unit!2333)))

(declare-fun lt!37406 () Unit!2322)

(assert (=> b!80452 (= lt!37406 call!7440)))

(assert (=> b!80452 (= lt!37426 call!7437)))

(declare-fun res!41895 () Bool)

(assert (=> b!80452 (= res!41895 ((_ is Found!235) lt!37426))))

(assert (=> b!80452 (=> (not res!41895) (not e!52561))))

(assert (=> b!80452 e!52561))

(declare-fun lt!37415 () Unit!2322)

(assert (=> b!80452 (= lt!37415 lt!37406)))

(assert (=> b!80452 false))

(declare-fun b!80453 () Bool)

(assert (=> b!80453 (= e!52544 ((_ is Undefined!235) lt!37408))))

(declare-fun b!80454 () Bool)

(assert (=> b!80454 (= e!52550 (= call!7459 call!7438))))

(declare-fun b!80455 () Bool)

(declare-fun res!41906 () Bool)

(assert (=> b!80455 (=> (not res!41906) (not e!52545))))

(assert (=> b!80455 (= res!41906 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3075 lt!37408)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80456 () Bool)

(assert (=> b!80456 (= e!52541 (not call!7458))))

(declare-fun bm!7447 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) Int) Unit!2322)

(assert (=> bm!7447 (= call!7440 (lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)))))

(declare-fun b!80457 () Bool)

(declare-fun res!41894 () Bool)

(assert (=> b!80457 (= res!41894 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3078 lt!37413)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80457 (=> (not res!41894) (not e!52558))))

(declare-fun bm!7448 () Bool)

(assert (=> bm!7448 (= call!7448 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun bm!7449 () Bool)

(assert (=> bm!7449 (= call!7455 (arrayContainsKey!0 (_keys!3956 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!80458 () Bool)

(assert (=> b!80458 (= e!52548 e!52543)))

(assert (=> b!80458 (= c!12577 (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7450 () Bool)

(declare-fun call!7446 () Bool)

(assert (=> bm!7450 (= call!7449 call!7446)))

(declare-fun b!80459 () Bool)

(declare-fun res!41898 () Bool)

(assert (=> b!80459 (= res!41898 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3078 lt!37408)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80459 (=> (not res!41898) (not e!52546))))

(declare-fun b!80460 () Bool)

(assert (=> b!80460 (= e!52560 e!52547)))

(declare-fun c!12569 () Bool)

(assert (=> b!80460 (= c!12569 ((_ is MissingZero!235) lt!37405))))

(declare-fun bm!7451 () Bool)

(assert (=> bm!7451 (= call!7453 call!7456)))

(declare-fun b!80461 () Bool)

(declare-fun lt!37416 () Unit!2322)

(declare-fun lt!37412 () Unit!2322)

(assert (=> b!80461 (= lt!37416 lt!37412)))

(assert (=> b!80461 (= call!7445 call!7457)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!29 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 V!3001 Int) Unit!2322)

(assert (=> b!80461 (= lt!37412 (lemmaChangeLongMinValueKeyThenAddPairToListMap!29 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) lt!37407 (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) lt!37223 (defaultEntry!2292 newMap!16)))))

(assert (=> b!80461 (= lt!37407 (bvor (extraKeys!2139 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!80461 (= e!52543 (tuple2!2167 true (LongMapFixedSize!737 (defaultEntry!2292 newMap!16) (mask!6298 newMap!16) (bvor (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) (zeroValue!2188 newMap!16) lt!37223 (_size!417 newMap!16) (_keys!3956 newMap!16) (_values!2275 newMap!16) (_vacant!417 newMap!16))))))

(declare-fun bm!7452 () Bool)

(assert (=> bm!7452 (= call!7459 (map!1186 (_2!1094 lt!37425)))))

(declare-fun b!80462 () Bool)

(declare-fun lt!37402 () Unit!2322)

(assert (=> b!80462 (= e!52559 lt!37402)))

(declare-fun call!7451 () Unit!2322)

(assert (=> b!80462 (= lt!37402 call!7451)))

(assert (=> b!80462 (= lt!37408 call!7437)))

(assert (=> b!80462 (= c!12570 ((_ is MissingZero!235) lt!37408))))

(assert (=> b!80462 e!52555))

(declare-fun b!80463 () Bool)

(declare-fun res!41901 () Bool)

(assert (=> b!80463 (= res!41901 call!7446)))

(assert (=> b!80463 (=> (not res!41901) (not e!52552))))

(declare-fun b!80464 () Bool)

(declare-fun res!41893 () Bool)

(assert (=> b!80464 (= res!41893 call!7450)))

(assert (=> b!80464 (=> (not res!41893) (not e!52561))))

(declare-fun bm!7453 () Bool)

(assert (=> bm!7453 (= call!7445 call!7452)))

(declare-fun b!80465 () Bool)

(declare-fun c!12576 () Bool)

(assert (=> b!80465 (= c!12576 ((_ is MissingVacant!235) lt!37413))))

(assert (=> b!80465 (= e!52553 e!52551)))

(declare-fun b!80466 () Bool)

(assert (=> b!80466 (= e!52556 call!7448)))

(declare-fun bm!7454 () Bool)

(assert (=> bm!7454 (= call!7446 call!7436)))

(declare-fun bm!7455 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) Int) Unit!2322)

(assert (=> bm!7455 (= call!7451 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)))))

(declare-fun b!80467 () Bool)

(declare-fun lt!37422 () tuple2!2166)

(assert (=> b!80467 (= lt!37422 call!7441)))

(assert (=> b!80467 (= e!52547 (tuple2!2167 (_1!1094 lt!37422) (_2!1094 lt!37422)))))

(declare-fun b!80468 () Bool)

(declare-fun Unit!2334 () Unit!2322)

(assert (=> b!80468 (= e!52554 Unit!2334)))

(declare-fun lt!37418 () Unit!2322)

(assert (=> b!80468 (= lt!37418 call!7451)))

(assert (=> b!80468 (= lt!37413 call!7443)))

(assert (=> b!80468 (= c!12571 ((_ is MissingZero!235) lt!37413))))

(assert (=> b!80468 e!52553))

(declare-fun lt!37414 () Unit!2322)

(assert (=> b!80468 (= lt!37414 lt!37418)))

(assert (=> b!80468 false))

(declare-fun b!80469 () Bool)

(assert (=> b!80469 (= e!52556 call!7453)))

(declare-fun b!80470 () Bool)

(assert (=> b!80470 (= e!52550 e!52549)))

(declare-fun res!41900 () Bool)

(assert (=> b!80470 (= res!41900 (contains!739 call!7459 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> b!80470 (=> (not res!41900) (not e!52549))))

(declare-fun bm!7456 () Bool)

(assert (=> bm!7456 (= call!7457 call!7456)))

(assert (= (and d!19679 c!12568) b!80458))

(assert (= (and d!19679 (not c!12568)) b!80449))

(assert (= (and b!80458 c!12577) b!80433))

(assert (= (and b!80458 (not c!12577)) b!80461))

(assert (= (or b!80433 b!80461) bm!7456))

(assert (= (or b!80433 b!80461) bm!7442))

(assert (= (or b!80433 b!80461) bm!7453))

(assert (= (and b!80449 c!12578) b!80445))

(assert (= (and b!80449 (not c!12578)) b!80438))

(assert (= (and b!80445 c!12574) b!80452))

(assert (= (and b!80445 (not c!12574)) b!80462))

(assert (= (and b!80452 res!41895) b!80464))

(assert (= (and b!80464 res!41893) b!80446))

(assert (= (and b!80462 c!12570) b!80441))

(assert (= (and b!80462 (not c!12570)) b!80448))

(assert (= (and b!80441 res!41905) b!80455))

(assert (= (and b!80455 res!41906) b!80450))

(assert (= (and b!80448 c!12575) b!80451))

(assert (= (and b!80448 (not c!12575)) b!80453))

(assert (= (and b!80451 res!41904) b!80459))

(assert (= (and b!80459 res!41898) b!80431))

(assert (= (or b!80441 b!80451) bm!7434))

(assert (= (or b!80450 b!80431) bm!7436))

(assert (= (or b!80464 bm!7434) bm!7437))

(assert (= (or b!80452 b!80462) bm!7435))

(assert (= (and b!80438 c!12579) b!80435))

(assert (= (and b!80438 (not c!12579)) b!80460))

(assert (= (and b!80460 c!12569) b!80467))

(assert (= (and b!80460 (not c!12569)) b!80436))

(assert (= (and b!80436 c!12573) b!80440))

(assert (= (and b!80436 (not c!12573)) b!80468))

(assert (= (and b!80440 res!41903) b!80463))

(assert (= (and b!80463 res!41901) b!80439))

(assert (= (and b!80468 c!12571) b!80442))

(assert (= (and b!80468 (not c!12571)) b!80465))

(assert (= (and b!80442 res!41896) b!80447))

(assert (= (and b!80447 res!41902) b!80456))

(assert (= (and b!80465 c!12576) b!80432))

(assert (= (and b!80465 (not c!12576)) b!80437))

(assert (= (and b!80432 res!41899) b!80457))

(assert (= (and b!80457 res!41894) b!80444))

(assert (= (or b!80442 b!80432) bm!7450))

(assert (= (or b!80456 b!80444) bm!7440))

(assert (= (or b!80463 bm!7450) bm!7454))

(assert (= (or b!80440 b!80468) bm!7445))

(assert (= (or b!80435 b!80467) bm!7444))

(assert (= (or bm!7437 bm!7454) bm!7438))

(assert (= (or b!80445 b!80436) bm!7451))

(assert (= (or b!80452 b!80440) bm!7447))

(assert (= (or bm!7435 bm!7445) bm!7439))

(assert (= (or b!80462 b!80468) bm!7455))

(assert (= (or bm!7436 bm!7440) bm!7449))

(assert (= (or b!80445 b!80436) bm!7446))

(assert (= (and bm!7446 c!12580) b!80469))

(assert (= (and bm!7446 (not c!12580)) b!80466))

(assert (= (or bm!7442 b!80436 b!80466) bm!7448))

(assert (= (or bm!7456 bm!7451) bm!7433))

(assert (= (or bm!7453 b!80436) bm!7443))

(assert (= (and d!19679 res!41897) b!80443))

(assert (= (and b!80443 c!12572) b!80470))

(assert (= (and b!80443 (not c!12572)) b!80454))

(assert (= (and b!80470 res!41900) b!80434))

(assert (= (or b!80470 b!80434 b!80454) bm!7452))

(assert (= (or b!80434 b!80454) bm!7441))

(declare-fun m!81931 () Bool)

(assert (=> bm!7433 m!81931))

(declare-fun m!81933 () Bool)

(assert (=> d!19679 m!81933))

(assert (=> d!19679 m!81781))

(declare-fun m!81935 () Bool)

(assert (=> b!80439 m!81935))

(declare-fun m!81937 () Bool)

(assert (=> b!80457 m!81937))

(declare-fun m!81939 () Bool)

(assert (=> b!80459 m!81939))

(declare-fun m!81941 () Bool)

(assert (=> b!80433 m!81941))

(assert (=> bm!7455 m!81737))

(declare-fun m!81943 () Bool)

(assert (=> bm!7455 m!81943))

(declare-fun m!81945 () Bool)

(assert (=> b!80434 m!81945))

(assert (=> bm!7446 m!81737))

(declare-fun m!81947 () Bool)

(assert (=> bm!7446 m!81947))

(declare-fun m!81949 () Bool)

(assert (=> bm!7448 m!81949))

(assert (=> bm!7441 m!81783))

(declare-fun m!81951 () Bool)

(assert (=> bm!7443 m!81951))

(declare-fun m!81953 () Bool)

(assert (=> b!80446 m!81953))

(assert (=> bm!7444 m!81737))

(declare-fun m!81955 () Bool)

(assert (=> bm!7444 m!81955))

(declare-fun m!81957 () Bool)

(assert (=> b!80447 m!81957))

(assert (=> bm!7439 m!81737))

(declare-fun m!81959 () Bool)

(assert (=> bm!7439 m!81959))

(assert (=> bm!7449 m!81737))

(declare-fun m!81961 () Bool)

(assert (=> bm!7449 m!81961))

(declare-fun m!81963 () Bool)

(assert (=> bm!7438 m!81963))

(declare-fun m!81965 () Bool)

(assert (=> b!80436 m!81965))

(assert (=> b!80436 m!81737))

(declare-fun m!81967 () Bool)

(assert (=> b!80436 m!81967))

(declare-fun m!81969 () Bool)

(assert (=> b!80436 m!81969))

(declare-fun m!81971 () Bool)

(assert (=> b!80436 m!81971))

(declare-fun m!81973 () Bool)

(assert (=> b!80436 m!81973))

(assert (=> b!80436 m!81971))

(declare-fun m!81975 () Bool)

(assert (=> b!80436 m!81975))

(assert (=> b!80470 m!81737))

(declare-fun m!81977 () Bool)

(assert (=> b!80470 m!81977))

(declare-fun m!81979 () Bool)

(assert (=> bm!7452 m!81979))

(assert (=> b!80449 m!81737))

(assert (=> b!80449 m!81959))

(assert (=> bm!7447 m!81737))

(declare-fun m!81981 () Bool)

(assert (=> bm!7447 m!81981))

(declare-fun m!81983 () Bool)

(assert (=> b!80461 m!81983))

(declare-fun m!81985 () Bool)

(assert (=> b!80455 m!81985))

(assert (=> b!80198 d!19679))

(declare-fun d!19681 () Bool)

(assert (=> d!19681 (= (array_inv!1163 (_keys!3956 newMap!16)) (bvsge (size!2134 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80215 d!19681))

(declare-fun d!19683 () Bool)

(assert (=> d!19683 (= (array_inv!1164 (_values!2275 newMap!16)) (bvsge (size!2135 (_values!2275 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80215 d!19683))

(declare-fun d!19685 () Bool)

(assert (=> d!19685 (= (valid!326 thiss!992) (valid!325 (v!2610 (underlying!283 thiss!992))))))

(declare-fun bs!3413 () Bool)

(assert (= bs!3413 d!19685))

(declare-fun m!81987 () Bool)

(assert (=> bs!3413 m!81987))

(assert (=> start!10350 d!19685))

(declare-fun d!19687 () Bool)

(assert (=> d!19687 (= (map!1186 newMap!16) (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun bs!3414 () Bool)

(assert (= bs!3414 d!19687))

(assert (=> bs!3414 m!81949))

(assert (=> b!80205 d!19687))

(declare-fun bm!7471 () Bool)

(declare-fun call!7478 () Bool)

(declare-fun lt!37476 () ListLongMap!1429)

(assert (=> bm!7471 (= call!7478 (contains!739 lt!37476 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80513 () Bool)

(declare-fun e!52588 () Bool)

(declare-fun apply!80 (ListLongMap!1429 (_ BitVec 64)) V!3001)

(assert (=> b!80513 (= e!52588 (= (apply!80 lt!37476 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun b!80514 () Bool)

(declare-fun e!52598 () Bool)

(assert (=> b!80514 (= e!52598 (not call!7478))))

(declare-fun b!80515 () Bool)

(declare-fun c!12594 () Bool)

(assert (=> b!80515 (= c!12594 (and (not (= (bvand (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52591 () ListLongMap!1429)

(declare-fun e!52599 () ListLongMap!1429)

(assert (=> b!80515 (= e!52591 e!52599)))

(declare-fun b!80516 () Bool)

(declare-fun call!7476 () ListLongMap!1429)

(assert (=> b!80516 (= e!52599 call!7476)))

(declare-fun b!80517 () Bool)

(declare-fun e!52592 () ListLongMap!1429)

(assert (=> b!80517 (= e!52592 e!52591)))

(declare-fun c!12595 () Bool)

(assert (=> b!80517 (= c!12595 (and (not (= (bvand (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80518 () Bool)

(declare-fun e!52596 () Bool)

(declare-fun e!52597 () Bool)

(assert (=> b!80518 (= e!52596 e!52597)))

(declare-fun res!41926 () Bool)

(declare-fun call!7477 () Bool)

(assert (=> b!80518 (= res!41926 call!7477)))

(assert (=> b!80518 (=> (not res!41926) (not e!52597))))

(declare-fun b!80519 () Bool)

(declare-fun res!41928 () Bool)

(declare-fun e!52595 () Bool)

(assert (=> b!80519 (=> (not res!41928) (not e!52595))))

(assert (=> b!80519 (= res!41928 e!52598)))

(declare-fun c!12597 () Bool)

(assert (=> b!80519 (= c!12597 (not (= (bvand (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80520 () Bool)

(declare-fun e!52593 () Unit!2322)

(declare-fun lt!37482 () Unit!2322)

(assert (=> b!80520 (= e!52593 lt!37482)))

(declare-fun lt!37486 () ListLongMap!1429)

(assert (=> b!80520 (= lt!37486 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun lt!37473 () (_ BitVec 64))

(assert (=> b!80520 (= lt!37473 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37489 () (_ BitVec 64))

(assert (=> b!80520 (= lt!37489 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37492 () Unit!2322)

(declare-fun addStillContains!56 (ListLongMap!1429 (_ BitVec 64) V!3001 (_ BitVec 64)) Unit!2322)

(assert (=> b!80520 (= lt!37492 (addStillContains!56 lt!37486 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37489))))

(assert (=> b!80520 (contains!739 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37489)))

(declare-fun lt!37480 () Unit!2322)

(assert (=> b!80520 (= lt!37480 lt!37492)))

(declare-fun lt!37477 () ListLongMap!1429)

(assert (=> b!80520 (= lt!37477 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun lt!37491 () (_ BitVec 64))

(assert (=> b!80520 (= lt!37491 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37488 () (_ BitVec 64))

(assert (=> b!80520 (= lt!37488 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37479 () Unit!2322)

(declare-fun addApplyDifferent!56 (ListLongMap!1429 (_ BitVec 64) V!3001 (_ BitVec 64)) Unit!2322)

(assert (=> b!80520 (= lt!37479 (addApplyDifferent!56 lt!37477 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37488))))

(assert (=> b!80520 (= (apply!80 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37488) (apply!80 lt!37477 lt!37488))))

(declare-fun lt!37481 () Unit!2322)

(assert (=> b!80520 (= lt!37481 lt!37479)))

(declare-fun lt!37475 () ListLongMap!1429)

(assert (=> b!80520 (= lt!37475 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun lt!37490 () (_ BitVec 64))

(assert (=> b!80520 (= lt!37490 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37474 () (_ BitVec 64))

(assert (=> b!80520 (= lt!37474 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37484 () Unit!2322)

(assert (=> b!80520 (= lt!37484 (addApplyDifferent!56 lt!37475 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37474))))

(assert (=> b!80520 (= (apply!80 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37474) (apply!80 lt!37475 lt!37474))))

(declare-fun lt!37471 () Unit!2322)

(assert (=> b!80520 (= lt!37471 lt!37484)))

(declare-fun lt!37483 () ListLongMap!1429)

(assert (=> b!80520 (= lt!37483 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun lt!37472 () (_ BitVec 64))

(assert (=> b!80520 (= lt!37472 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37485 () (_ BitVec 64))

(assert (=> b!80520 (= lt!37485 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!80520 (= lt!37482 (addApplyDifferent!56 lt!37483 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37485))))

(assert (=> b!80520 (= (apply!80 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37485) (apply!80 lt!37483 lt!37485))))

(declare-fun b!80521 () Bool)

(assert (=> b!80521 (= e!52597 (= (apply!80 lt!37476 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun bm!7472 () Bool)

(declare-fun call!7480 () ListLongMap!1429)

(declare-fun call!7479 () ListLongMap!1429)

(assert (=> bm!7472 (= call!7480 call!7479)))

(declare-fun b!80522 () Bool)

(assert (=> b!80522 (= e!52598 e!52588)))

(declare-fun res!41929 () Bool)

(assert (=> b!80522 (= res!41929 call!7478)))

(assert (=> b!80522 (=> (not res!41929) (not e!52588))))

(declare-fun b!80523 () Bool)

(declare-fun e!52589 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!80523 (= e!52589 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!80524 () Bool)

(declare-fun res!41931 () Bool)

(assert (=> b!80524 (=> (not res!41931) (not e!52595))))

(declare-fun e!52594 () Bool)

(assert (=> b!80524 (= res!41931 e!52594)))

(declare-fun res!41933 () Bool)

(assert (=> b!80524 (=> res!41933 e!52594)))

(assert (=> b!80524 (= res!41933 (not e!52589))))

(declare-fun res!41927 () Bool)

(assert (=> b!80524 (=> (not res!41927) (not e!52589))))

(assert (=> b!80524 (= res!41927 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!80525 () Bool)

(declare-fun call!7475 () ListLongMap!1429)

(assert (=> b!80525 (= e!52599 call!7475)))

(declare-fun b!80526 () Bool)

(assert (=> b!80526 (= e!52596 (not call!7477))))

(declare-fun b!80527 () Bool)

(declare-fun e!52600 () Bool)

(assert (=> b!80527 (= e!52600 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!80528 () Bool)

(declare-fun call!7474 () ListLongMap!1429)

(assert (=> b!80528 (= e!52592 (+!101 call!7474 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun bm!7473 () Bool)

(declare-fun c!12598 () Bool)

(assert (=> bm!7473 (= call!7474 (+!101 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475)) (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun bm!7474 () Bool)

(assert (=> bm!7474 (= call!7479 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun b!80529 () Bool)

(declare-fun e!52590 () Bool)

(assert (=> b!80529 (= e!52590 (= (apply!80 lt!37476 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80529 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_values!2275 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> b!80529 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun bm!7475 () Bool)

(assert (=> bm!7475 (= call!7477 (contains!739 lt!37476 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80530 () Bool)

(assert (=> b!80530 (= e!52594 e!52590)))

(declare-fun res!41930 () Bool)

(assert (=> b!80530 (=> (not res!41930) (not e!52590))))

(assert (=> b!80530 (= res!41930 (contains!739 lt!37476 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80530 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!80531 () Bool)

(declare-fun Unit!2335 () Unit!2322)

(assert (=> b!80531 (= e!52593 Unit!2335)))

(declare-fun bm!7476 () Bool)

(assert (=> bm!7476 (= call!7476 call!7474)))

(declare-fun b!80532 () Bool)

(assert (=> b!80532 (= e!52595 e!52596)))

(declare-fun c!12596 () Bool)

(assert (=> b!80532 (= c!12596 (not (= (bvand (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!19689 () Bool)

(assert (=> d!19689 e!52595))

(declare-fun res!41925 () Bool)

(assert (=> d!19689 (=> (not res!41925) (not e!52595))))

(assert (=> d!19689 (= res!41925 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun lt!37478 () ListLongMap!1429)

(assert (=> d!19689 (= lt!37476 lt!37478)))

(declare-fun lt!37487 () Unit!2322)

(assert (=> d!19689 (= lt!37487 e!52593)))

(declare-fun c!12593 () Bool)

(assert (=> d!19689 (= c!12593 e!52600)))

(declare-fun res!41932 () Bool)

(assert (=> d!19689 (=> (not res!41932) (not e!52600))))

(assert (=> d!19689 (= res!41932 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> d!19689 (= lt!37478 e!52592)))

(assert (=> d!19689 (= c!12598 (and (not (= (bvand (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19689 (validMask!0 (mask!6298 (v!2610 (underlying!283 thiss!992))))))

(assert (=> d!19689 (= (getCurrentListMap!426 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))) lt!37476)))

(declare-fun bm!7477 () Bool)

(assert (=> bm!7477 (= call!7475 call!7480)))

(declare-fun b!80533 () Bool)

(assert (=> b!80533 (= e!52591 call!7476)))

(assert (= (and d!19689 c!12598) b!80528))

(assert (= (and d!19689 (not c!12598)) b!80517))

(assert (= (and b!80517 c!12595) b!80533))

(assert (= (and b!80517 (not c!12595)) b!80515))

(assert (= (and b!80515 c!12594) b!80516))

(assert (= (and b!80515 (not c!12594)) b!80525))

(assert (= (or b!80516 b!80525) bm!7477))

(assert (= (or b!80533 bm!7477) bm!7472))

(assert (= (or b!80533 b!80516) bm!7476))

(assert (= (or b!80528 bm!7472) bm!7474))

(assert (= (or b!80528 bm!7476) bm!7473))

(assert (= (and d!19689 res!41932) b!80527))

(assert (= (and d!19689 c!12593) b!80520))

(assert (= (and d!19689 (not c!12593)) b!80531))

(assert (= (and d!19689 res!41925) b!80524))

(assert (= (and b!80524 res!41927) b!80523))

(assert (= (and b!80524 (not res!41933)) b!80530))

(assert (= (and b!80530 res!41930) b!80529))

(assert (= (and b!80524 res!41931) b!80519))

(assert (= (and b!80519 c!12597) b!80522))

(assert (= (and b!80519 (not c!12597)) b!80514))

(assert (= (and b!80522 res!41929) b!80513))

(assert (= (or b!80522 b!80514) bm!7471))

(assert (= (and b!80519 res!41928) b!80532))

(assert (= (and b!80532 c!12596) b!80518))

(assert (= (and b!80532 (not c!12596)) b!80526))

(assert (= (and b!80518 res!41926) b!80521))

(assert (= (or b!80518 b!80526) bm!7475))

(declare-fun b_lambda!3599 () Bool)

(assert (=> (not b_lambda!3599) (not b!80529)))

(assert (=> b!80529 t!5153))

(declare-fun b_and!4925 () Bool)

(assert (= b_and!4905 (and (=> t!5153 result!2829) b_and!4925)))

(assert (=> b!80529 t!5155))

(declare-fun b_and!4927 () Bool)

(assert (= b_and!4907 (and (=> t!5155 result!2833) b_and!4927)))

(declare-fun m!81989 () Bool)

(assert (=> b!80520 m!81989))

(assert (=> b!80520 m!81989))

(declare-fun m!81991 () Bool)

(assert (=> b!80520 m!81991))

(declare-fun m!81993 () Bool)

(assert (=> b!80520 m!81993))

(declare-fun m!81995 () Bool)

(assert (=> b!80520 m!81995))

(declare-fun m!81997 () Bool)

(assert (=> b!80520 m!81997))

(declare-fun m!81999 () Bool)

(assert (=> b!80520 m!81999))

(declare-fun m!82001 () Bool)

(assert (=> b!80520 m!82001))

(declare-fun m!82003 () Bool)

(assert (=> b!80520 m!82003))

(declare-fun m!82005 () Bool)

(assert (=> b!80520 m!82005))

(assert (=> b!80520 m!82001))

(declare-fun m!82007 () Bool)

(assert (=> b!80520 m!82007))

(declare-fun m!82009 () Bool)

(assert (=> b!80520 m!82009))

(declare-fun m!82011 () Bool)

(assert (=> b!80520 m!82011))

(declare-fun m!82013 () Bool)

(assert (=> b!80520 m!82013))

(assert (=> b!80520 m!81999))

(declare-fun m!82015 () Bool)

(assert (=> b!80520 m!82015))

(assert (=> b!80520 m!81753))

(declare-fun m!82017 () Bool)

(assert (=> b!80520 m!82017))

(assert (=> b!80520 m!82003))

(declare-fun m!82019 () Bool)

(assert (=> b!80520 m!82019))

(assert (=> b!80523 m!81993))

(assert (=> b!80523 m!81993))

(declare-fun m!82021 () Bool)

(assert (=> b!80523 m!82021))

(declare-fun m!82023 () Bool)

(assert (=> b!80513 m!82023))

(declare-fun m!82025 () Bool)

(assert (=> bm!7475 m!82025))

(declare-fun m!82027 () Bool)

(assert (=> b!80528 m!82027))

(assert (=> b!80529 m!81993))

(assert (=> b!80529 m!81775))

(declare-fun m!82029 () Bool)

(assert (=> b!80529 m!82029))

(assert (=> b!80529 m!81775))

(declare-fun m!82031 () Bool)

(assert (=> b!80529 m!82031))

(assert (=> b!80529 m!82029))

(assert (=> b!80529 m!81993))

(declare-fun m!82033 () Bool)

(assert (=> b!80529 m!82033))

(declare-fun m!82035 () Bool)

(assert (=> b!80521 m!82035))

(assert (=> b!80527 m!81993))

(assert (=> b!80527 m!81993))

(assert (=> b!80527 m!82021))

(assert (=> b!80530 m!81993))

(assert (=> b!80530 m!81993))

(declare-fun m!82037 () Bool)

(assert (=> b!80530 m!82037))

(assert (=> bm!7474 m!81753))

(declare-fun m!82039 () Bool)

(assert (=> bm!7473 m!82039))

(assert (=> d!19689 m!81735))

(declare-fun m!82041 () Bool)

(assert (=> bm!7471 m!82041))

(assert (=> b!80205 d!19689))

(declare-fun d!19691 () Bool)

(assert (=> d!19691 (= (array_inv!1163 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvsge (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!80208 d!19691))

(declare-fun d!19693 () Bool)

(assert (=> d!19693 (= (array_inv!1164 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvsge (size!2135 (_values!2275 (v!2610 (underlying!283 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!80208 d!19693))

(declare-fun d!19695 () Bool)

(declare-fun res!41940 () Bool)

(declare-fun e!52603 () Bool)

(assert (=> d!19695 (=> (not res!41940) (not e!52603))))

(declare-fun simpleValid!56 (LongMapFixedSize!736) Bool)

(assert (=> d!19695 (= res!41940 (simpleValid!56 newMap!16))))

(assert (=> d!19695 (= (valid!325 newMap!16) e!52603)))

(declare-fun b!80540 () Bool)

(declare-fun res!41941 () Bool)

(assert (=> b!80540 (=> (not res!41941) (not e!52603))))

(declare-fun arrayCountValidKeys!0 (array!3971 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!80540 (= res!41941 (= (arrayCountValidKeys!0 (_keys!3956 newMap!16) #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) (_size!417 newMap!16)))))

(declare-fun b!80541 () Bool)

(declare-fun res!41942 () Bool)

(assert (=> b!80541 (=> (not res!41942) (not e!52603))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3971 (_ BitVec 32)) Bool)

(assert (=> b!80541 (= res!41942 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(declare-fun b!80542 () Bool)

(assert (=> b!80542 (= e!52603 (arrayNoDuplicates!0 (_keys!3956 newMap!16) #b00000000000000000000000000000000 Nil!1495))))

(assert (= (and d!19695 res!41940) b!80540))

(assert (= (and b!80540 res!41941) b!80541))

(assert (= (and b!80541 res!41942) b!80542))

(declare-fun m!82043 () Bool)

(assert (=> d!19695 m!82043))

(declare-fun m!82045 () Bool)

(assert (=> b!80540 m!82045))

(declare-fun m!82047 () Bool)

(assert (=> b!80541 m!82047))

(declare-fun m!82049 () Bool)

(assert (=> b!80542 m!82049))

(assert (=> b!80196 d!19695))

(declare-fun d!19697 () Bool)

(declare-fun c!12601 () Bool)

(assert (=> d!19697 (= c!12601 ((_ is ValueCellFull!914) (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun e!52606 () V!3001)

(assert (=> d!19697 (= (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52606)))

(declare-fun b!80547 () Bool)

(declare-fun get!1190 (ValueCell!914 V!3001) V!3001)

(assert (=> b!80547 (= e!52606 (get!1190 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80548 () Bool)

(declare-fun get!1191 (ValueCell!914 V!3001) V!3001)

(assert (=> b!80548 (= e!52606 (get!1191 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19697 c!12601) b!80547))

(assert (= (and d!19697 (not c!12601)) b!80548))

(assert (=> b!80547 m!81773))

(assert (=> b!80547 m!81775))

(declare-fun m!82051 () Bool)

(assert (=> b!80547 m!82051))

(assert (=> b!80548 m!81773))

(assert (=> b!80548 m!81775))

(declare-fun m!82053 () Bool)

(assert (=> b!80548 m!82053))

(assert (=> b!80209 d!19697))

(declare-fun d!19699 () Bool)

(assert (=> d!19699 (not (arrayContainsKey!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37495 () Unit!2322)

(declare-fun choose!68 (array!3971 (_ BitVec 32) (_ BitVec 64) List!1498) Unit!2322)

(assert (=> d!19699 (= lt!37495 (choose!68 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495)))))

(assert (=> d!19699 (bvslt (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!19699 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495)) lt!37495)))

(declare-fun bs!3415 () Bool)

(assert (= bs!3415 d!19699))

(assert (=> bs!3415 m!81737))

(assert (=> bs!3415 m!81769))

(assert (=> bs!3415 m!81737))

(declare-fun m!82055 () Bool)

(assert (=> bs!3415 m!82055))

(assert (=> b!80213 d!19699))

(declare-fun d!19701 () Bool)

(assert (=> d!19701 (arrayNoDuplicates!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) from!355 Nil!1495)))

(declare-fun lt!37498 () Unit!2322)

(declare-fun choose!39 (array!3971 (_ BitVec 32) (_ BitVec 32)) Unit!2322)

(assert (=> d!19701 (= lt!37498 (choose!39 (_keys!3956 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!19701 (bvslt (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!19701 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000000 from!355) lt!37498)))

(declare-fun bs!3416 () Bool)

(assert (= bs!3416 d!19701))

(assert (=> bs!3416 m!81765))

(declare-fun m!82057 () Bool)

(assert (=> bs!3416 m!82057))

(assert (=> b!80213 d!19701))

(declare-fun d!19703 () Bool)

(declare-fun res!41947 () Bool)

(declare-fun e!52611 () Bool)

(assert (=> d!19703 (=> res!41947 e!52611)))

(assert (=> d!19703 (= res!41947 (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!19703 (= (arrayContainsKey!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!52611)))

(declare-fun b!80553 () Bool)

(declare-fun e!52612 () Bool)

(assert (=> b!80553 (= e!52611 e!52612)))

(declare-fun res!41948 () Bool)

(assert (=> b!80553 (=> (not res!41948) (not e!52612))))

(assert (=> b!80553 (= res!41948 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!80554 () Bool)

(assert (=> b!80554 (= e!52612 (arrayContainsKey!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!19703 (not res!41947)) b!80553))

(assert (= (and b!80553 res!41948) b!80554))

(assert (=> d!19703 m!81993))

(assert (=> b!80554 m!81737))

(declare-fun m!82059 () Bool)

(assert (=> b!80554 m!82059))

(assert (=> b!80213 d!19703))

(declare-fun d!19705 () Bool)

(declare-fun e!52615 () Bool)

(assert (=> d!19705 e!52615))

(declare-fun c!12604 () Bool)

(assert (=> d!19705 (= c!12604 (and (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!37501 () Unit!2322)

(declare-fun choose!475 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) (_ BitVec 32) Int) Unit!2322)

(assert (=> d!19705 (= lt!37501 (choose!475 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))))))

(assert (=> d!19705 (validMask!0 (mask!6298 (v!2610 (underlying!283 thiss!992))))))

(assert (=> d!19705 (= (lemmaListMapContainsThenArrayContainsFrom!54 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))) lt!37501)))

(declare-fun b!80559 () Bool)

(assert (=> b!80559 (= e!52615 (arrayContainsKey!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!80560 () Bool)

(assert (=> b!80560 (= e!52615 (ite (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!19705 c!12604) b!80559))

(assert (= (and d!19705 (not c!12604)) b!80560))

(assert (=> d!19705 m!81737))

(declare-fun m!82061 () Bool)

(assert (=> d!19705 m!82061))

(assert (=> d!19705 m!81735))

(assert (=> b!80559 m!81737))

(assert (=> b!80559 m!81769))

(assert (=> b!80213 d!19705))

(declare-fun b!80571 () Bool)

(declare-fun e!52626 () Bool)

(declare-fun call!7483 () Bool)

(assert (=> b!80571 (= e!52626 call!7483)))

(declare-fun b!80572 () Bool)

(declare-fun e!52625 () Bool)

(assert (=> b!80572 (= e!52625 e!52626)))

(declare-fun c!12607 () Bool)

(assert (=> b!80572 (= c!12607 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun d!19707 () Bool)

(declare-fun res!41957 () Bool)

(declare-fun e!52627 () Bool)

(assert (=> d!19707 (=> res!41957 e!52627)))

(assert (=> d!19707 (= res!41957 (bvsge from!355 (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> d!19707 (= (arrayNoDuplicates!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) from!355 Nil!1495) e!52627)))

(declare-fun b!80573 () Bool)

(assert (=> b!80573 (= e!52627 e!52625)))

(declare-fun res!41956 () Bool)

(assert (=> b!80573 (=> (not res!41956) (not e!52625))))

(declare-fun e!52624 () Bool)

(assert (=> b!80573 (= res!41956 (not e!52624))))

(declare-fun res!41955 () Bool)

(assert (=> b!80573 (=> (not res!41955) (not e!52624))))

(assert (=> b!80573 (= res!41955 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!80574 () Bool)

(declare-fun contains!741 (List!1498 (_ BitVec 64)) Bool)

(assert (=> b!80574 (= e!52624 (contains!741 Nil!1495 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!80575 () Bool)

(assert (=> b!80575 (= e!52626 call!7483)))

(declare-fun bm!7480 () Bool)

(assert (=> bm!7480 (= call!7483 (arrayNoDuplicates!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)))))

(assert (= (and d!19707 (not res!41957)) b!80573))

(assert (= (and b!80573 res!41955) b!80574))

(assert (= (and b!80573 res!41956) b!80572))

(assert (= (and b!80572 c!12607) b!80575))

(assert (= (and b!80572 (not c!12607)) b!80571))

(assert (= (or b!80575 b!80571) bm!7480))

(assert (=> b!80572 m!81737))

(assert (=> b!80572 m!81737))

(declare-fun m!82063 () Bool)

(assert (=> b!80572 m!82063))

(assert (=> b!80573 m!81737))

(assert (=> b!80573 m!81737))

(assert (=> b!80573 m!82063))

(assert (=> b!80574 m!81737))

(assert (=> b!80574 m!81737))

(declare-fun m!82065 () Bool)

(assert (=> b!80574 m!82065))

(assert (=> bm!7480 m!81737))

(declare-fun m!82067 () Bool)

(assert (=> bm!7480 m!82067))

(assert (=> b!80213 d!19707))

(declare-fun d!19709 () Bool)

(declare-fun e!52630 () Bool)

(assert (=> d!19709 e!52630))

(declare-fun res!41963 () Bool)

(assert (=> d!19709 (=> (not res!41963) (not e!52630))))

(declare-fun lt!37513 () ListLongMap!1429)

(assert (=> d!19709 (= res!41963 (contains!739 lt!37513 (_1!1095 lt!37212)))))

(declare-fun lt!37511 () List!1497)

(assert (=> d!19709 (= lt!37513 (ListLongMap!1430 lt!37511))))

(declare-fun lt!37510 () Unit!2322)

(declare-fun lt!37512 () Unit!2322)

(assert (=> d!19709 (= lt!37510 lt!37512)))

(assert (=> d!19709 (= (getValueByKey!139 lt!37511 (_1!1095 lt!37212)) (Some!144 (_2!1095 lt!37212)))))

(declare-fun lemmaContainsTupThenGetReturnValue!56 (List!1497 (_ BitVec 64) V!3001) Unit!2322)

(assert (=> d!19709 (= lt!37512 (lemmaContainsTupThenGetReturnValue!56 lt!37511 (_1!1095 lt!37212) (_2!1095 lt!37212)))))

(declare-fun insertStrictlySorted!59 (List!1497 (_ BitVec 64) V!3001) List!1497)

(assert (=> d!19709 (= lt!37511 (insertStrictlySorted!59 (toList!730 lt!37222) (_1!1095 lt!37212) (_2!1095 lt!37212)))))

(assert (=> d!19709 (= (+!101 lt!37222 lt!37212) lt!37513)))

(declare-fun b!80580 () Bool)

(declare-fun res!41962 () Bool)

(assert (=> b!80580 (=> (not res!41962) (not e!52630))))

(assert (=> b!80580 (= res!41962 (= (getValueByKey!139 (toList!730 lt!37513) (_1!1095 lt!37212)) (Some!144 (_2!1095 lt!37212))))))

(declare-fun b!80581 () Bool)

(declare-fun contains!742 (List!1497 tuple2!2168) Bool)

(assert (=> b!80581 (= e!52630 (contains!742 (toList!730 lt!37513) lt!37212))))

(assert (= (and d!19709 res!41963) b!80580))

(assert (= (and b!80580 res!41962) b!80581))

(declare-fun m!82069 () Bool)

(assert (=> d!19709 m!82069))

(declare-fun m!82071 () Bool)

(assert (=> d!19709 m!82071))

(declare-fun m!82073 () Bool)

(assert (=> d!19709 m!82073))

(declare-fun m!82075 () Bool)

(assert (=> d!19709 m!82075))

(declare-fun m!82077 () Bool)

(assert (=> b!80580 m!82077))

(declare-fun m!82079 () Bool)

(assert (=> b!80581 m!82079))

(assert (=> b!80199 d!19709))

(declare-fun d!19711 () Bool)

(declare-fun e!52631 () Bool)

(assert (=> d!19711 e!52631))

(declare-fun res!41965 () Bool)

(assert (=> d!19711 (=> (not res!41965) (not e!52631))))

(declare-fun lt!37517 () ListLongMap!1429)

(assert (=> d!19711 (= res!41965 (contains!739 lt!37517 (_1!1095 lt!37209)))))

(declare-fun lt!37515 () List!1497)

(assert (=> d!19711 (= lt!37517 (ListLongMap!1430 lt!37515))))

(declare-fun lt!37514 () Unit!2322)

(declare-fun lt!37516 () Unit!2322)

(assert (=> d!19711 (= lt!37514 lt!37516)))

(assert (=> d!19711 (= (getValueByKey!139 lt!37515 (_1!1095 lt!37209)) (Some!144 (_2!1095 lt!37209)))))

(assert (=> d!19711 (= lt!37516 (lemmaContainsTupThenGetReturnValue!56 lt!37515 (_1!1095 lt!37209) (_2!1095 lt!37209)))))

(assert (=> d!19711 (= lt!37515 (insertStrictlySorted!59 (toList!730 lt!37219) (_1!1095 lt!37209) (_2!1095 lt!37209)))))

(assert (=> d!19711 (= (+!101 lt!37219 lt!37209) lt!37517)))

(declare-fun b!80582 () Bool)

(declare-fun res!41964 () Bool)

(assert (=> b!80582 (=> (not res!41964) (not e!52631))))

(assert (=> b!80582 (= res!41964 (= (getValueByKey!139 (toList!730 lt!37517) (_1!1095 lt!37209)) (Some!144 (_2!1095 lt!37209))))))

(declare-fun b!80583 () Bool)

(assert (=> b!80583 (= e!52631 (contains!742 (toList!730 lt!37517) lt!37209))))

(assert (= (and d!19711 res!41965) b!80582))

(assert (= (and b!80582 res!41964) b!80583))

(declare-fun m!82081 () Bool)

(assert (=> d!19711 m!82081))

(declare-fun m!82083 () Bool)

(assert (=> d!19711 m!82083))

(declare-fun m!82085 () Bool)

(assert (=> d!19711 m!82085))

(declare-fun m!82087 () Bool)

(assert (=> d!19711 m!82087))

(declare-fun m!82089 () Bool)

(assert (=> b!80582 m!82089))

(declare-fun m!82091 () Bool)

(assert (=> b!80583 m!82091))

(assert (=> b!80199 d!19711))

(declare-fun b!80608 () Bool)

(declare-fun e!52649 () Bool)

(declare-fun e!52650 () Bool)

(assert (=> b!80608 (= e!52649 e!52650)))

(assert (=> b!80608 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun res!41976 () Bool)

(declare-fun lt!37536 () ListLongMap!1429)

(assert (=> b!80608 (= res!41976 (contains!739 lt!37536 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80608 (=> (not res!41976) (not e!52650))))

(declare-fun b!80609 () Bool)

(declare-fun lt!37535 () Unit!2322)

(declare-fun lt!37532 () Unit!2322)

(assert (=> b!80609 (= lt!37535 lt!37532)))

(declare-fun lt!37534 () (_ BitVec 64))

(declare-fun lt!37538 () (_ BitVec 64))

(declare-fun lt!37533 () ListLongMap!1429)

(declare-fun lt!37537 () V!3001)

(assert (=> b!80609 (not (contains!739 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)) lt!37534))))

(declare-fun addStillNotContains!31 (ListLongMap!1429 (_ BitVec 64) V!3001 (_ BitVec 64)) Unit!2322)

(assert (=> b!80609 (= lt!37532 (addStillNotContains!31 lt!37533 lt!37538 lt!37537 lt!37534))))

(assert (=> b!80609 (= lt!37534 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!80609 (= lt!37537 (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!80609 (= lt!37538 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!7486 () ListLongMap!1429)

(assert (=> b!80609 (= lt!37533 call!7486)))

(declare-fun e!52647 () ListLongMap!1429)

(assert (=> b!80609 (= e!52647 (+!101 call!7486 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!80611 () Bool)

(assert (=> b!80611 (= e!52647 call!7486)))

(declare-fun e!52646 () Bool)

(declare-fun b!80612 () Bool)

(assert (=> b!80612 (= e!52646 (= lt!37536 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!80613 () Bool)

(declare-fun res!41977 () Bool)

(declare-fun e!52652 () Bool)

(assert (=> b!80613 (=> (not res!41977) (not e!52652))))

(assert (=> b!80613 (= res!41977 (not (contains!739 lt!37536 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80614 () Bool)

(assert (=> b!80614 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> b!80614 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_values!2275 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> b!80614 (= e!52650 (= (apply!80 lt!37536 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!80615 () Bool)

(assert (=> b!80615 (= e!52649 e!52646)))

(declare-fun c!12616 () Bool)

(assert (=> b!80615 (= c!12616 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!80616 () Bool)

(assert (=> b!80616 (= e!52652 e!52649)))

(declare-fun c!12618 () Bool)

(declare-fun e!52648 () Bool)

(assert (=> b!80616 (= c!12618 e!52648)))

(declare-fun res!41974 () Bool)

(assert (=> b!80616 (=> (not res!41974) (not e!52648))))

(assert (=> b!80616 (= res!41974 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!80617 () Bool)

(declare-fun e!52651 () ListLongMap!1429)

(assert (=> b!80617 (= e!52651 e!52647)))

(declare-fun c!12619 () Bool)

(assert (=> b!80617 (= c!12619 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!7483 () Bool)

(assert (=> bm!7483 (= call!7486 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun b!80610 () Bool)

(declare-fun isEmpty!335 (ListLongMap!1429) Bool)

(assert (=> b!80610 (= e!52646 (isEmpty!335 lt!37536))))

(declare-fun d!19713 () Bool)

(assert (=> d!19713 e!52652))

(declare-fun res!41975 () Bool)

(assert (=> d!19713 (=> (not res!41975) (not e!52652))))

(assert (=> d!19713 (= res!41975 (not (contains!739 lt!37536 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19713 (= lt!37536 e!52651)))

(declare-fun c!12617 () Bool)

(assert (=> d!19713 (= c!12617 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> d!19713 (validMask!0 (mask!6298 (v!2610 (underlying!283 thiss!992))))))

(assert (=> d!19713 (= (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))) lt!37536)))

(declare-fun b!80618 () Bool)

(assert (=> b!80618 (= e!52651 (ListLongMap!1430 Nil!1494))))

(declare-fun b!80619 () Bool)

(assert (=> b!80619 (= e!52648 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80619 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(assert (= (and d!19713 c!12617) b!80618))

(assert (= (and d!19713 (not c!12617)) b!80617))

(assert (= (and b!80617 c!12619) b!80609))

(assert (= (and b!80617 (not c!12619)) b!80611))

(assert (= (or b!80609 b!80611) bm!7483))

(assert (= (and d!19713 res!41975) b!80613))

(assert (= (and b!80613 res!41977) b!80616))

(assert (= (and b!80616 res!41974) b!80619))

(assert (= (and b!80616 c!12618) b!80608))

(assert (= (and b!80616 (not c!12618)) b!80615))

(assert (= (and b!80608 res!41976) b!80614))

(assert (= (and b!80615 c!12616) b!80612))

(assert (= (and b!80615 (not c!12616)) b!80610))

(declare-fun b_lambda!3601 () Bool)

(assert (=> (not b_lambda!3601) (not b!80609)))

(assert (=> b!80609 t!5153))

(declare-fun b_and!4929 () Bool)

(assert (= b_and!4925 (and (=> t!5153 result!2829) b_and!4929)))

(assert (=> b!80609 t!5155))

(declare-fun b_and!4931 () Bool)

(assert (= b_and!4927 (and (=> t!5155 result!2833) b_and!4931)))

(declare-fun b_lambda!3603 () Bool)

(assert (=> (not b_lambda!3603) (not b!80614)))

(assert (=> b!80614 t!5153))

(declare-fun b_and!4933 () Bool)

(assert (= b_and!4929 (and (=> t!5153 result!2829) b_and!4933)))

(assert (=> b!80614 t!5155))

(declare-fun b_and!4935 () Bool)

(assert (= b_and!4931 (and (=> t!5155 result!2833) b_and!4935)))

(assert (=> b!80608 m!81993))

(assert (=> b!80608 m!81993))

(declare-fun m!82093 () Bool)

(assert (=> b!80608 m!82093))

(assert (=> b!80614 m!81775))

(assert (=> b!80614 m!81993))

(assert (=> b!80614 m!81993))

(declare-fun m!82095 () Bool)

(assert (=> b!80614 m!82095))

(assert (=> b!80614 m!82029))

(assert (=> b!80614 m!81775))

(assert (=> b!80614 m!82031))

(assert (=> b!80614 m!82029))

(assert (=> b!80617 m!81993))

(assert (=> b!80617 m!81993))

(assert (=> b!80617 m!82021))

(declare-fun m!82097 () Bool)

(assert (=> b!80612 m!82097))

(assert (=> bm!7483 m!82097))

(assert (=> b!80609 m!81775))

(assert (=> b!80609 m!81993))

(declare-fun m!82099 () Bool)

(assert (=> b!80609 m!82099))

(assert (=> b!80609 m!82099))

(declare-fun m!82101 () Bool)

(assert (=> b!80609 m!82101))

(declare-fun m!82103 () Bool)

(assert (=> b!80609 m!82103))

(declare-fun m!82105 () Bool)

(assert (=> b!80609 m!82105))

(assert (=> b!80609 m!82029))

(assert (=> b!80609 m!81775))

(assert (=> b!80609 m!82031))

(assert (=> b!80609 m!82029))

(declare-fun m!82107 () Bool)

(assert (=> b!80610 m!82107))

(assert (=> b!80619 m!81993))

(assert (=> b!80619 m!81993))

(assert (=> b!80619 m!82021))

(declare-fun m!82109 () Bool)

(assert (=> b!80613 m!82109))

(declare-fun m!82111 () Bool)

(assert (=> d!19713 m!82111))

(assert (=> d!19713 m!81735))

(assert (=> b!80199 d!19713))

(declare-fun d!19715 () Bool)

(assert (=> d!19715 (= (+!101 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (+!101 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(declare-fun lt!37541 () Unit!2322)

(declare-fun choose!476 (ListLongMap!1429 (_ BitVec 64) V!3001 (_ BitVec 64) V!3001) Unit!2322)

(assert (=> d!19715 (= lt!37541 (choose!476 lt!37215 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))

(assert (=> d!19715 (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19715 (= (addCommutativeForDiffKeys!21 lt!37215 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))) lt!37541)))

(declare-fun bs!3417 () Bool)

(assert (= bs!3417 d!19715))

(assert (=> bs!3417 m!81737))

(declare-fun m!82113 () Bool)

(assert (=> bs!3417 m!82113))

(declare-fun m!82115 () Bool)

(assert (=> bs!3417 m!82115))

(declare-fun m!82117 () Bool)

(assert (=> bs!3417 m!82117))

(assert (=> bs!3417 m!82115))

(declare-fun m!82119 () Bool)

(assert (=> bs!3417 m!82119))

(declare-fun m!82121 () Bool)

(assert (=> bs!3417 m!82121))

(assert (=> bs!3417 m!82119))

(assert (=> b!80199 d!19715))

(declare-fun d!19717 () Bool)

(assert (=> d!19717 (= (+!101 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (+!101 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(declare-fun lt!37542 () Unit!2322)

(assert (=> d!19717 (= lt!37542 (choose!476 lt!37211 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))

(assert (=> d!19717 (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19717 (= (addCommutativeForDiffKeys!21 lt!37211 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) lt!37542)))

(declare-fun bs!3418 () Bool)

(assert (= bs!3418 d!19717))

(assert (=> bs!3418 m!81737))

(declare-fun m!82123 () Bool)

(assert (=> bs!3418 m!82123))

(declare-fun m!82125 () Bool)

(assert (=> bs!3418 m!82125))

(declare-fun m!82127 () Bool)

(assert (=> bs!3418 m!82127))

(assert (=> bs!3418 m!82125))

(declare-fun m!82129 () Bool)

(assert (=> bs!3418 m!82129))

(declare-fun m!82131 () Bool)

(assert (=> bs!3418 m!82131))

(assert (=> bs!3418 m!82129))

(assert (=> b!80199 d!19717))

(declare-fun d!19719 () Bool)

(declare-fun e!52653 () Bool)

(assert (=> d!19719 e!52653))

(declare-fun res!41979 () Bool)

(assert (=> d!19719 (=> (not res!41979) (not e!52653))))

(declare-fun lt!37546 () ListLongMap!1429)

(assert (=> d!19719 (= res!41979 (contains!739 lt!37546 (_1!1095 lt!37210)))))

(declare-fun lt!37544 () List!1497)

(assert (=> d!19719 (= lt!37546 (ListLongMap!1430 lt!37544))))

(declare-fun lt!37543 () Unit!2322)

(declare-fun lt!37545 () Unit!2322)

(assert (=> d!19719 (= lt!37543 lt!37545)))

(assert (=> d!19719 (= (getValueByKey!139 lt!37544 (_1!1095 lt!37210)) (Some!144 (_2!1095 lt!37210)))))

(assert (=> d!19719 (= lt!37545 (lemmaContainsTupThenGetReturnValue!56 lt!37544 (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(assert (=> d!19719 (= lt!37544 (insertStrictlySorted!59 (toList!730 (+!101 lt!37215 lt!37212)) (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(assert (=> d!19719 (= (+!101 (+!101 lt!37215 lt!37212) lt!37210) lt!37546)))

(declare-fun b!80620 () Bool)

(declare-fun res!41978 () Bool)

(assert (=> b!80620 (=> (not res!41978) (not e!52653))))

(assert (=> b!80620 (= res!41978 (= (getValueByKey!139 (toList!730 lt!37546) (_1!1095 lt!37210)) (Some!144 (_2!1095 lt!37210))))))

(declare-fun b!80621 () Bool)

(assert (=> b!80621 (= e!52653 (contains!742 (toList!730 lt!37546) lt!37210))))

(assert (= (and d!19719 res!41979) b!80620))

(assert (= (and b!80620 res!41978) b!80621))

(declare-fun m!82133 () Bool)

(assert (=> d!19719 m!82133))

(declare-fun m!82135 () Bool)

(assert (=> d!19719 m!82135))

(declare-fun m!82137 () Bool)

(assert (=> d!19719 m!82137))

(declare-fun m!82139 () Bool)

(assert (=> d!19719 m!82139))

(declare-fun m!82141 () Bool)

(assert (=> b!80620 m!82141))

(declare-fun m!82143 () Bool)

(assert (=> b!80621 m!82143))

(assert (=> b!80199 d!19719))

(declare-fun d!19721 () Bool)

(declare-fun e!52654 () Bool)

(assert (=> d!19721 e!52654))

(declare-fun res!41981 () Bool)

(assert (=> d!19721 (=> (not res!41981) (not e!52654))))

(declare-fun lt!37550 () ListLongMap!1429)

(assert (=> d!19721 (= res!41981 (contains!739 lt!37550 (_1!1095 lt!37209)))))

(declare-fun lt!37548 () List!1497)

(assert (=> d!19721 (= lt!37550 (ListLongMap!1430 lt!37548))))

(declare-fun lt!37547 () Unit!2322)

(declare-fun lt!37549 () Unit!2322)

(assert (=> d!19721 (= lt!37547 lt!37549)))

(assert (=> d!19721 (= (getValueByKey!139 lt!37548 (_1!1095 lt!37209)) (Some!144 (_2!1095 lt!37209)))))

(assert (=> d!19721 (= lt!37549 (lemmaContainsTupThenGetReturnValue!56 lt!37548 (_1!1095 lt!37209) (_2!1095 lt!37209)))))

(assert (=> d!19721 (= lt!37548 (insertStrictlySorted!59 (toList!730 lt!37211) (_1!1095 lt!37209) (_2!1095 lt!37209)))))

(assert (=> d!19721 (= (+!101 lt!37211 lt!37209) lt!37550)))

(declare-fun b!80622 () Bool)

(declare-fun res!41980 () Bool)

(assert (=> b!80622 (=> (not res!41980) (not e!52654))))

(assert (=> b!80622 (= res!41980 (= (getValueByKey!139 (toList!730 lt!37550) (_1!1095 lt!37209)) (Some!144 (_2!1095 lt!37209))))))

(declare-fun b!80623 () Bool)

(assert (=> b!80623 (= e!52654 (contains!742 (toList!730 lt!37550) lt!37209))))

(assert (= (and d!19721 res!41981) b!80622))

(assert (= (and b!80622 res!41980) b!80623))

(declare-fun m!82145 () Bool)

(assert (=> d!19721 m!82145))

(declare-fun m!82147 () Bool)

(assert (=> d!19721 m!82147))

(declare-fun m!82149 () Bool)

(assert (=> d!19721 m!82149))

(declare-fun m!82151 () Bool)

(assert (=> d!19721 m!82151))

(declare-fun m!82153 () Bool)

(assert (=> b!80622 m!82153))

(declare-fun m!82155 () Bool)

(assert (=> b!80623 m!82155))

(assert (=> b!80199 d!19721))

(declare-fun d!19723 () Bool)

(declare-fun e!52655 () Bool)

(assert (=> d!19723 e!52655))

(declare-fun res!41983 () Bool)

(assert (=> d!19723 (=> (not res!41983) (not e!52655))))

(declare-fun lt!37554 () ListLongMap!1429)

(assert (=> d!19723 (= res!41983 (contains!739 lt!37554 (_1!1095 lt!37210)))))

(declare-fun lt!37552 () List!1497)

(assert (=> d!19723 (= lt!37554 (ListLongMap!1430 lt!37552))))

(declare-fun lt!37551 () Unit!2322)

(declare-fun lt!37553 () Unit!2322)

(assert (=> d!19723 (= lt!37551 lt!37553)))

(assert (=> d!19723 (= (getValueByKey!139 lt!37552 (_1!1095 lt!37210)) (Some!144 (_2!1095 lt!37210)))))

(assert (=> d!19723 (= lt!37553 (lemmaContainsTupThenGetReturnValue!56 lt!37552 (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(assert (=> d!19723 (= lt!37552 (insertStrictlySorted!59 (toList!730 lt!37215) (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(assert (=> d!19723 (= (+!101 lt!37215 lt!37210) lt!37554)))

(declare-fun b!80624 () Bool)

(declare-fun res!41982 () Bool)

(assert (=> b!80624 (=> (not res!41982) (not e!52655))))

(assert (=> b!80624 (= res!41982 (= (getValueByKey!139 (toList!730 lt!37554) (_1!1095 lt!37210)) (Some!144 (_2!1095 lt!37210))))))

(declare-fun b!80625 () Bool)

(assert (=> b!80625 (= e!52655 (contains!742 (toList!730 lt!37554) lt!37210))))

(assert (= (and d!19723 res!41983) b!80624))

(assert (= (and b!80624 res!41982) b!80625))

(declare-fun m!82157 () Bool)

(assert (=> d!19723 m!82157))

(declare-fun m!82159 () Bool)

(assert (=> d!19723 m!82159))

(declare-fun m!82161 () Bool)

(assert (=> d!19723 m!82161))

(declare-fun m!82163 () Bool)

(assert (=> d!19723 m!82163))

(declare-fun m!82165 () Bool)

(assert (=> b!80624 m!82165))

(declare-fun m!82167 () Bool)

(assert (=> b!80625 m!82167))

(assert (=> b!80199 d!19723))

(declare-fun d!19725 () Bool)

(declare-fun e!52656 () Bool)

(assert (=> d!19725 e!52656))

(declare-fun res!41985 () Bool)

(assert (=> d!19725 (=> (not res!41985) (not e!52656))))

(declare-fun lt!37558 () ListLongMap!1429)

(assert (=> d!19725 (= res!41985 (contains!739 lt!37558 (_1!1095 lt!37210)))))

(declare-fun lt!37556 () List!1497)

(assert (=> d!19725 (= lt!37558 (ListLongMap!1430 lt!37556))))

(declare-fun lt!37555 () Unit!2322)

(declare-fun lt!37557 () Unit!2322)

(assert (=> d!19725 (= lt!37555 lt!37557)))

(assert (=> d!19725 (= (getValueByKey!139 lt!37556 (_1!1095 lt!37210)) (Some!144 (_2!1095 lt!37210)))))

(assert (=> d!19725 (= lt!37557 (lemmaContainsTupThenGetReturnValue!56 lt!37556 (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(assert (=> d!19725 (= lt!37556 (insertStrictlySorted!59 (toList!730 lt!37211) (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(assert (=> d!19725 (= (+!101 lt!37211 lt!37210) lt!37558)))

(declare-fun b!80626 () Bool)

(declare-fun res!41984 () Bool)

(assert (=> b!80626 (=> (not res!41984) (not e!52656))))

(assert (=> b!80626 (= res!41984 (= (getValueByKey!139 (toList!730 lt!37558) (_1!1095 lt!37210)) (Some!144 (_2!1095 lt!37210))))))

(declare-fun b!80627 () Bool)

(assert (=> b!80627 (= e!52656 (contains!742 (toList!730 lt!37558) lt!37210))))

(assert (= (and d!19725 res!41985) b!80626))

(assert (= (and b!80626 res!41984) b!80627))

(declare-fun m!82169 () Bool)

(assert (=> d!19725 m!82169))

(declare-fun m!82171 () Bool)

(assert (=> d!19725 m!82171))

(declare-fun m!82173 () Bool)

(assert (=> d!19725 m!82173))

(declare-fun m!82175 () Bool)

(assert (=> d!19725 m!82175))

(declare-fun m!82177 () Bool)

(assert (=> b!80626 m!82177))

(declare-fun m!82179 () Bool)

(assert (=> b!80627 m!82179))

(assert (=> b!80199 d!19725))

(declare-fun d!19727 () Bool)

(assert (=> d!19727 (= (validMask!0 (mask!6298 (v!2610 (underlying!283 thiss!992)))) (and (or (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000001111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000011111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000001111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000011111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000001111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000011111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000001111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000011111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000001111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000011111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000111111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000001111111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000011111111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000111111111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000001111111111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000011111111111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000111111111111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000001111111111111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000011111111111111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000111111111111111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00001111111111111111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00011111111111111111111111111111) (= (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!80199 d!19727))

(declare-fun d!19729 () Bool)

(declare-fun e!52657 () Bool)

(assert (=> d!19729 e!52657))

(declare-fun res!41987 () Bool)

(assert (=> d!19729 (=> (not res!41987) (not e!52657))))

(declare-fun lt!37562 () ListLongMap!1429)

(assert (=> d!19729 (= res!41987 (contains!739 lt!37562 (_1!1095 lt!37212)))))

(declare-fun lt!37560 () List!1497)

(assert (=> d!19729 (= lt!37562 (ListLongMap!1430 lt!37560))))

(declare-fun lt!37559 () Unit!2322)

(declare-fun lt!37561 () Unit!2322)

(assert (=> d!19729 (= lt!37559 lt!37561)))

(assert (=> d!19729 (= (getValueByKey!139 lt!37560 (_1!1095 lt!37212)) (Some!144 (_2!1095 lt!37212)))))

(assert (=> d!19729 (= lt!37561 (lemmaContainsTupThenGetReturnValue!56 lt!37560 (_1!1095 lt!37212) (_2!1095 lt!37212)))))

(assert (=> d!19729 (= lt!37560 (insertStrictlySorted!59 (toList!730 lt!37215) (_1!1095 lt!37212) (_2!1095 lt!37212)))))

(assert (=> d!19729 (= (+!101 lt!37215 lt!37212) lt!37562)))

(declare-fun b!80628 () Bool)

(declare-fun res!41986 () Bool)

(assert (=> b!80628 (=> (not res!41986) (not e!52657))))

(assert (=> b!80628 (= res!41986 (= (getValueByKey!139 (toList!730 lt!37562) (_1!1095 lt!37212)) (Some!144 (_2!1095 lt!37212))))))

(declare-fun b!80629 () Bool)

(assert (=> b!80629 (= e!52657 (contains!742 (toList!730 lt!37562) lt!37212))))

(assert (= (and d!19729 res!41987) b!80628))

(assert (= (and b!80628 res!41986) b!80629))

(declare-fun m!82181 () Bool)

(assert (=> d!19729 m!82181))

(declare-fun m!82183 () Bool)

(assert (=> d!19729 m!82183))

(declare-fun m!82185 () Bool)

(assert (=> d!19729 m!82185))

(declare-fun m!82187 () Bool)

(assert (=> d!19729 m!82187))

(declare-fun m!82189 () Bool)

(assert (=> b!80628 m!82189))

(declare-fun m!82191 () Bool)

(assert (=> b!80629 m!82191))

(assert (=> b!80199 d!19729))

(declare-fun mapIsEmpty!3339 () Bool)

(declare-fun mapRes!3339 () Bool)

(assert (=> mapIsEmpty!3339 mapRes!3339))

(declare-fun condMapEmpty!3339 () Bool)

(declare-fun mapDefault!3339 () ValueCell!914)

(assert (=> mapNonEmpty!3324 (= condMapEmpty!3339 (= mapRest!3324 ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3339)))))

(declare-fun e!52662 () Bool)

(assert (=> mapNonEmpty!3324 (= tp!8801 (and e!52662 mapRes!3339))))

(declare-fun mapNonEmpty!3339 () Bool)

(declare-fun tp!8829 () Bool)

(declare-fun e!52663 () Bool)

(assert (=> mapNonEmpty!3339 (= mapRes!3339 (and tp!8829 e!52663))))

(declare-fun mapKey!3339 () (_ BitVec 32))

(declare-fun mapRest!3339 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapValue!3339 () ValueCell!914)

(assert (=> mapNonEmpty!3339 (= mapRest!3324 (store mapRest!3339 mapKey!3339 mapValue!3339))))

(declare-fun b!80636 () Bool)

(assert (=> b!80636 (= e!52663 tp_is_empty!2515)))

(declare-fun b!80637 () Bool)

(assert (=> b!80637 (= e!52662 tp_is_empty!2515)))

(assert (= (and mapNonEmpty!3324 condMapEmpty!3339) mapIsEmpty!3339))

(assert (= (and mapNonEmpty!3324 (not condMapEmpty!3339)) mapNonEmpty!3339))

(assert (= (and mapNonEmpty!3339 ((_ is ValueCellFull!914) mapValue!3339)) b!80636))

(assert (= (and mapNonEmpty!3324 ((_ is ValueCellFull!914) mapDefault!3339)) b!80637))

(declare-fun m!82193 () Bool)

(assert (=> mapNonEmpty!3339 m!82193))

(declare-fun mapIsEmpty!3340 () Bool)

(declare-fun mapRes!3340 () Bool)

(assert (=> mapIsEmpty!3340 mapRes!3340))

(declare-fun condMapEmpty!3340 () Bool)

(declare-fun mapDefault!3340 () ValueCell!914)

(assert (=> mapNonEmpty!3323 (= condMapEmpty!3340 (= mapRest!3323 ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3340)))))

(declare-fun e!52664 () Bool)

(assert (=> mapNonEmpty!3323 (= tp!8799 (and e!52664 mapRes!3340))))

(declare-fun mapNonEmpty!3340 () Bool)

(declare-fun tp!8830 () Bool)

(declare-fun e!52665 () Bool)

(assert (=> mapNonEmpty!3340 (= mapRes!3340 (and tp!8830 e!52665))))

(declare-fun mapKey!3340 () (_ BitVec 32))

(declare-fun mapRest!3340 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapValue!3340 () ValueCell!914)

(assert (=> mapNonEmpty!3340 (= mapRest!3323 (store mapRest!3340 mapKey!3340 mapValue!3340))))

(declare-fun b!80638 () Bool)

(assert (=> b!80638 (= e!52665 tp_is_empty!2515)))

(declare-fun b!80639 () Bool)

(assert (=> b!80639 (= e!52664 tp_is_empty!2515)))

(assert (= (and mapNonEmpty!3323 condMapEmpty!3340) mapIsEmpty!3340))

(assert (= (and mapNonEmpty!3323 (not condMapEmpty!3340)) mapNonEmpty!3340))

(assert (= (and mapNonEmpty!3340 ((_ is ValueCellFull!914) mapValue!3340)) b!80638))

(assert (= (and mapNonEmpty!3323 ((_ is ValueCellFull!914) mapDefault!3340)) b!80639))

(declare-fun m!82195 () Bool)

(assert (=> mapNonEmpty!3340 m!82195))

(declare-fun b_lambda!3605 () Bool)

(assert (= b_lambda!3601 (or (and b!80208 b_free!2197) (and b!80215 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))))) b_lambda!3605)))

(declare-fun b_lambda!3607 () Bool)

(assert (= b_lambda!3603 (or (and b!80208 b_free!2197) (and b!80215 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))))) b_lambda!3607)))

(declare-fun b_lambda!3609 () Bool)

(assert (= b_lambda!3599 (or (and b!80208 b_free!2197) (and b!80215 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))))) b_lambda!3609)))

(check-sat (not b!80609) (not b!80530) (not bm!7441) (not bm!7439) (not b!80572) (not d!19685) (not b!80520) (not bm!7438) (not b!80574) (not b!80628) (not b!80559) (not b!80583) (not b!80625) (not b!80521) (not d!19717) (not d!19699) (not d!19729) (not b!80623) (not mapNonEmpty!3339) (not bm!7443) (not b!80629) (not bm!7480) (not d!19713) (not b!80542) (not b!80612) (not b!80436) (not b!80528) (not b!80622) (not bm!7433) (not mapNonEmpty!3340) (not b!80617) (not b!80627) (not d!19711) (not b!80619) b_and!4933 (not b!80541) (not d!19721) (not bm!7473) (not d!19701) (not b!80580) (not d!19695) (not b!80461) (not b!80614) b_and!4935 (not b!80548) (not d!19725) (not b!80573) (not bm!7448) (not b!80626) (not b_lambda!3609) (not b!80348) (not b!80547) (not b!80581) (not d!19723) (not bm!7449) (not b!80529) (not b!80434) (not b!80610) (not b!80554) (not b!80582) (not b!80613) (not b!80621) (not b!80449) (not b!80433) (not b_next!2197) (not b!80624) (not d!19719) (not b!80350) (not bm!7475) (not bm!7483) (not b!80608) (not bm!7455) (not d!19715) (not bm!7446) (not b_lambda!3605) tp_is_empty!2515 (not d!19677) (not b!80540) (not bm!7447) (not b!80470) (not d!19709) (not b!80527) (not bm!7474) (not d!19689) (not b!80523) (not b_lambda!3597) (not d!19705) (not d!19679) (not b!80620) (not b_lambda!3607) (not d!19687) (not bm!7471) (not b!80513) (not b_next!2199) (not bm!7444) (not bm!7452))
(check-sat b_and!4933 b_and!4935 (not b_next!2197) (not b_next!2199))
(get-model)

(declare-fun d!19731 () Bool)

(assert (=> d!19731 (= (get!1191 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80548 d!19731))

(declare-fun d!19733 () Bool)

(declare-fun lt!37565 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!86 (List!1497) (InoxSet tuple2!2168))

(assert (=> d!19733 (= lt!37565 (select (content!86 (toList!730 lt!37562)) lt!37212))))

(declare-fun e!52670 () Bool)

(assert (=> d!19733 (= lt!37565 e!52670)))

(declare-fun res!41993 () Bool)

(assert (=> d!19733 (=> (not res!41993) (not e!52670))))

(assert (=> d!19733 (= res!41993 ((_ is Cons!1493) (toList!730 lt!37562)))))

(assert (=> d!19733 (= (contains!742 (toList!730 lt!37562) lt!37212) lt!37565)))

(declare-fun b!80644 () Bool)

(declare-fun e!52671 () Bool)

(assert (=> b!80644 (= e!52670 e!52671)))

(declare-fun res!41992 () Bool)

(assert (=> b!80644 (=> res!41992 e!52671)))

(assert (=> b!80644 (= res!41992 (= (h!2082 (toList!730 lt!37562)) lt!37212))))

(declare-fun b!80645 () Bool)

(assert (=> b!80645 (= e!52671 (contains!742 (t!5156 (toList!730 lt!37562)) lt!37212))))

(assert (= (and d!19733 res!41993) b!80644))

(assert (= (and b!80644 (not res!41992)) b!80645))

(declare-fun m!82197 () Bool)

(assert (=> d!19733 m!82197))

(declare-fun m!82199 () Bool)

(assert (=> d!19733 m!82199))

(declare-fun m!82201 () Bool)

(assert (=> b!80645 m!82201))

(assert (=> b!80629 d!19733))

(declare-fun d!19735 () Bool)

(declare-fun e!52672 () Bool)

(assert (=> d!19735 e!52672))

(declare-fun res!41995 () Bool)

(assert (=> d!19735 (=> (not res!41995) (not e!52672))))

(declare-fun lt!37569 () ListLongMap!1429)

(assert (=> d!19735 (= res!41995 (contains!739 lt!37569 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!37567 () List!1497)

(assert (=> d!19735 (= lt!37569 (ListLongMap!1430 lt!37567))))

(declare-fun lt!37566 () Unit!2322)

(declare-fun lt!37568 () Unit!2322)

(assert (=> d!19735 (= lt!37566 lt!37568)))

(assert (=> d!19735 (= (getValueByKey!139 lt!37567 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19735 (= lt!37568 (lemmaContainsTupThenGetReturnValue!56 lt!37567 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19735 (= lt!37567 (insertStrictlySorted!59 (toList!730 call!7474) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19735 (= (+!101 call!7474 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37569)))

(declare-fun b!80646 () Bool)

(declare-fun res!41994 () Bool)

(assert (=> b!80646 (=> (not res!41994) (not e!52672))))

(assert (=> b!80646 (= res!41994 (= (getValueByKey!139 (toList!730 lt!37569) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!80647 () Bool)

(assert (=> b!80647 (= e!52672 (contains!742 (toList!730 lt!37569) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!19735 res!41995) b!80646))

(assert (= (and b!80646 res!41994) b!80647))

(declare-fun m!82203 () Bool)

(assert (=> d!19735 m!82203))

(declare-fun m!82205 () Bool)

(assert (=> d!19735 m!82205))

(declare-fun m!82207 () Bool)

(assert (=> d!19735 m!82207))

(declare-fun m!82209 () Bool)

(assert (=> d!19735 m!82209))

(declare-fun m!82211 () Bool)

(assert (=> b!80646 m!82211))

(declare-fun m!82213 () Bool)

(assert (=> b!80647 m!82213))

(assert (=> b!80528 d!19735))

(declare-fun d!19737 () Bool)

(assert (=> d!19737 (= (inRange!0 (ite c!12578 (ite c!12574 (index!3076 lt!37426) (ite c!12570 (index!3075 lt!37408) (index!3078 lt!37408))) (ite c!12573 (index!3076 lt!37400) (ite c!12571 (index!3075 lt!37413) (index!3078 lt!37413)))) (mask!6298 newMap!16)) (and (bvsge (ite c!12578 (ite c!12574 (index!3076 lt!37426) (ite c!12570 (index!3075 lt!37408) (index!3078 lt!37408))) (ite c!12573 (index!3076 lt!37400) (ite c!12571 (index!3075 lt!37413) (index!3078 lt!37413)))) #b00000000000000000000000000000000) (bvslt (ite c!12578 (ite c!12574 (index!3076 lt!37426) (ite c!12570 (index!3075 lt!37408) (index!3078 lt!37408))) (ite c!12573 (index!3076 lt!37400) (ite c!12571 (index!3075 lt!37413) (index!3078 lt!37413)))) (bvadd (mask!6298 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7438 d!19737))

(declare-fun b!80664 () Bool)

(declare-fun e!52683 () Bool)

(declare-fun lt!37575 () SeekEntryResult!235)

(assert (=> b!80664 (= e!52683 ((_ is Undefined!235) lt!37575))))

(declare-fun b!80665 () Bool)

(declare-fun e!52682 () Bool)

(assert (=> b!80665 (= e!52682 e!52683)))

(declare-fun c!12624 () Bool)

(assert (=> b!80665 (= c!12624 ((_ is MissingVacant!235) lt!37575))))

(declare-fun b!80666 () Bool)

(declare-fun e!52684 () Bool)

(assert (=> b!80666 (= e!52682 e!52684)))

(declare-fun res!42006 () Bool)

(declare-fun call!7492 () Bool)

(assert (=> b!80666 (= res!42006 call!7492)))

(assert (=> b!80666 (=> (not res!42006) (not e!52684))))

(declare-fun d!19739 () Bool)

(assert (=> d!19739 e!52682))

(declare-fun c!12625 () Bool)

(assert (=> d!19739 (= c!12625 ((_ is MissingZero!235) lt!37575))))

(assert (=> d!19739 (= lt!37575 (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(declare-fun lt!37574 () Unit!2322)

(declare-fun choose!477 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) Int) Unit!2322)

(assert (=> d!19739 (= lt!37574 (choose!477 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)))))

(assert (=> d!19739 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!19739 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)) lt!37574)))

(declare-fun b!80667 () Bool)

(declare-fun res!42004 () Bool)

(declare-fun e!52681 () Bool)

(assert (=> b!80667 (=> (not res!42004) (not e!52681))))

(assert (=> b!80667 (= res!42004 call!7492)))

(assert (=> b!80667 (= e!52683 e!52681)))

(declare-fun b!80668 () Bool)

(declare-fun call!7491 () Bool)

(assert (=> b!80668 (= e!52681 (not call!7491))))

(declare-fun b!80669 () Bool)

(assert (=> b!80669 (= e!52684 (not call!7491))))

(declare-fun bm!7488 () Bool)

(assert (=> bm!7488 (= call!7492 (inRange!0 (ite c!12625 (index!3075 lt!37575) (index!3078 lt!37575)) (mask!6298 newMap!16)))))

(declare-fun b!80670 () Bool)

(assert (=> b!80670 (and (bvsge (index!3075 lt!37575) #b00000000000000000000000000000000) (bvslt (index!3075 lt!37575) (size!2134 (_keys!3956 newMap!16))))))

(declare-fun res!42005 () Bool)

(assert (=> b!80670 (= res!42005 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3075 lt!37575)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80670 (=> (not res!42005) (not e!52684))))

(declare-fun bm!7489 () Bool)

(assert (=> bm!7489 (= call!7491 (arrayContainsKey!0 (_keys!3956 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!80671 () Bool)

(declare-fun res!42007 () Bool)

(assert (=> b!80671 (=> (not res!42007) (not e!52681))))

(assert (=> b!80671 (= res!42007 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3078 lt!37575)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80671 (and (bvsge (index!3078 lt!37575) #b00000000000000000000000000000000) (bvslt (index!3078 lt!37575) (size!2134 (_keys!3956 newMap!16))))))

(assert (= (and d!19739 c!12625) b!80666))

(assert (= (and d!19739 (not c!12625)) b!80665))

(assert (= (and b!80666 res!42006) b!80670))

(assert (= (and b!80670 res!42005) b!80669))

(assert (= (and b!80665 c!12624) b!80667))

(assert (= (and b!80665 (not c!12624)) b!80664))

(assert (= (and b!80667 res!42004) b!80671))

(assert (= (and b!80671 res!42007) b!80668))

(assert (= (or b!80666 b!80667) bm!7488))

(assert (= (or b!80669 b!80668) bm!7489))

(declare-fun m!82215 () Bool)

(assert (=> bm!7488 m!82215))

(declare-fun m!82217 () Bool)

(assert (=> b!80671 m!82217))

(assert (=> bm!7489 m!81737))

(assert (=> bm!7489 m!81961))

(declare-fun m!82219 () Bool)

(assert (=> b!80670 m!82219))

(assert (=> d!19739 m!81737))

(assert (=> d!19739 m!81959))

(assert (=> d!19739 m!81737))

(declare-fun m!82221 () Bool)

(assert (=> d!19739 m!82221))

(declare-fun m!82223 () Bool)

(assert (=> d!19739 m!82223))

(assert (=> bm!7455 d!19739))

(declare-fun d!19741 () Bool)

(declare-fun e!52685 () Bool)

(assert (=> d!19741 e!52685))

(declare-fun res!42008 () Bool)

(assert (=> d!19741 (=> res!42008 e!52685)))

(declare-fun lt!37577 () Bool)

(assert (=> d!19741 (= res!42008 (not lt!37577))))

(declare-fun lt!37576 () Bool)

(assert (=> d!19741 (= lt!37577 lt!37576)))

(declare-fun lt!37578 () Unit!2322)

(declare-fun e!52686 () Unit!2322)

(assert (=> d!19741 (= lt!37578 e!52686)))

(declare-fun c!12626 () Bool)

(assert (=> d!19741 (= c!12626 lt!37576)))

(assert (=> d!19741 (= lt!37576 (containsKey!142 (toList!730 lt!37517) (_1!1095 lt!37209)))))

(assert (=> d!19741 (= (contains!739 lt!37517 (_1!1095 lt!37209)) lt!37577)))

(declare-fun b!80672 () Bool)

(declare-fun lt!37579 () Unit!2322)

(assert (=> b!80672 (= e!52686 lt!37579)))

(assert (=> b!80672 (= lt!37579 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37517) (_1!1095 lt!37209)))))

(assert (=> b!80672 (isDefined!91 (getValueByKey!139 (toList!730 lt!37517) (_1!1095 lt!37209)))))

(declare-fun b!80673 () Bool)

(declare-fun Unit!2336 () Unit!2322)

(assert (=> b!80673 (= e!52686 Unit!2336)))

(declare-fun b!80674 () Bool)

(assert (=> b!80674 (= e!52685 (isDefined!91 (getValueByKey!139 (toList!730 lt!37517) (_1!1095 lt!37209))))))

(assert (= (and d!19741 c!12626) b!80672))

(assert (= (and d!19741 (not c!12626)) b!80673))

(assert (= (and d!19741 (not res!42008)) b!80674))

(declare-fun m!82225 () Bool)

(assert (=> d!19741 m!82225))

(declare-fun m!82227 () Bool)

(assert (=> b!80672 m!82227))

(assert (=> b!80672 m!82089))

(assert (=> b!80672 m!82089))

(declare-fun m!82229 () Bool)

(assert (=> b!80672 m!82229))

(assert (=> b!80674 m!82089))

(assert (=> b!80674 m!82089))

(assert (=> b!80674 m!82229))

(assert (=> d!19711 d!19741))

(declare-fun b!80686 () Bool)

(declare-fun e!52692 () Option!145)

(assert (=> b!80686 (= e!52692 None!143)))

(declare-fun b!80685 () Bool)

(assert (=> b!80685 (= e!52692 (getValueByKey!139 (t!5156 lt!37515) (_1!1095 lt!37209)))))

(declare-fun d!19743 () Bool)

(declare-fun c!12631 () Bool)

(assert (=> d!19743 (= c!12631 (and ((_ is Cons!1493) lt!37515) (= (_1!1095 (h!2082 lt!37515)) (_1!1095 lt!37209))))))

(declare-fun e!52691 () Option!145)

(assert (=> d!19743 (= (getValueByKey!139 lt!37515 (_1!1095 lt!37209)) e!52691)))

(declare-fun b!80683 () Bool)

(assert (=> b!80683 (= e!52691 (Some!144 (_2!1095 (h!2082 lt!37515))))))

(declare-fun b!80684 () Bool)

(assert (=> b!80684 (= e!52691 e!52692)))

(declare-fun c!12632 () Bool)

(assert (=> b!80684 (= c!12632 (and ((_ is Cons!1493) lt!37515) (not (= (_1!1095 (h!2082 lt!37515)) (_1!1095 lt!37209)))))))

(assert (= (and d!19743 c!12631) b!80683))

(assert (= (and d!19743 (not c!12631)) b!80684))

(assert (= (and b!80684 c!12632) b!80685))

(assert (= (and b!80684 (not c!12632)) b!80686))

(declare-fun m!82231 () Bool)

(assert (=> b!80685 m!82231))

(assert (=> d!19711 d!19743))

(declare-fun d!19745 () Bool)

(assert (=> d!19745 (= (getValueByKey!139 lt!37515 (_1!1095 lt!37209)) (Some!144 (_2!1095 lt!37209)))))

(declare-fun lt!37582 () Unit!2322)

(declare-fun choose!478 (List!1497 (_ BitVec 64) V!3001) Unit!2322)

(assert (=> d!19745 (= lt!37582 (choose!478 lt!37515 (_1!1095 lt!37209) (_2!1095 lt!37209)))))

(declare-fun e!52695 () Bool)

(assert (=> d!19745 e!52695))

(declare-fun res!42013 () Bool)

(assert (=> d!19745 (=> (not res!42013) (not e!52695))))

(declare-fun isStrictlySorted!283 (List!1497) Bool)

(assert (=> d!19745 (= res!42013 (isStrictlySorted!283 lt!37515))))

(assert (=> d!19745 (= (lemmaContainsTupThenGetReturnValue!56 lt!37515 (_1!1095 lt!37209) (_2!1095 lt!37209)) lt!37582)))

(declare-fun b!80691 () Bool)

(declare-fun res!42014 () Bool)

(assert (=> b!80691 (=> (not res!42014) (not e!52695))))

(assert (=> b!80691 (= res!42014 (containsKey!142 lt!37515 (_1!1095 lt!37209)))))

(declare-fun b!80692 () Bool)

(assert (=> b!80692 (= e!52695 (contains!742 lt!37515 (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(assert (= (and d!19745 res!42013) b!80691))

(assert (= (and b!80691 res!42014) b!80692))

(assert (=> d!19745 m!82083))

(declare-fun m!82233 () Bool)

(assert (=> d!19745 m!82233))

(declare-fun m!82235 () Bool)

(assert (=> d!19745 m!82235))

(declare-fun m!82237 () Bool)

(assert (=> b!80691 m!82237))

(declare-fun m!82239 () Bool)

(assert (=> b!80692 m!82239))

(assert (=> d!19711 d!19745))

(declare-fun bm!7496 () Bool)

(declare-fun call!7500 () List!1497)

(declare-fun call!7501 () List!1497)

(assert (=> bm!7496 (= call!7500 call!7501)))

(declare-fun b!80713 () Bool)

(declare-fun e!52706 () Bool)

(declare-fun lt!37585 () List!1497)

(assert (=> b!80713 (= e!52706 (contains!742 lt!37585 (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(declare-fun b!80714 () Bool)

(declare-fun e!52707 () List!1497)

(declare-fun e!52710 () List!1497)

(assert (=> b!80714 (= e!52707 e!52710)))

(declare-fun c!12644 () Bool)

(assert (=> b!80714 (= c!12644 (and ((_ is Cons!1493) (toList!730 lt!37219)) (= (_1!1095 (h!2082 (toList!730 lt!37219))) (_1!1095 lt!37209))))))

(declare-fun bm!7497 () Bool)

(declare-fun call!7499 () List!1497)

(assert (=> bm!7497 (= call!7499 call!7500)))

(declare-fun d!19747 () Bool)

(assert (=> d!19747 e!52706))

(declare-fun res!42019 () Bool)

(assert (=> d!19747 (=> (not res!42019) (not e!52706))))

(assert (=> d!19747 (= res!42019 (isStrictlySorted!283 lt!37585))))

(assert (=> d!19747 (= lt!37585 e!52707)))

(declare-fun c!12641 () Bool)

(assert (=> d!19747 (= c!12641 (and ((_ is Cons!1493) (toList!730 lt!37219)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37219))) (_1!1095 lt!37209))))))

(assert (=> d!19747 (isStrictlySorted!283 (toList!730 lt!37219))))

(assert (=> d!19747 (= (insertStrictlySorted!59 (toList!730 lt!37219) (_1!1095 lt!37209) (_2!1095 lt!37209)) lt!37585)))

(declare-fun bm!7498 () Bool)

(declare-fun e!52708 () List!1497)

(declare-fun $colon$colon!69 (List!1497 tuple2!2168) List!1497)

(assert (=> bm!7498 (= call!7501 ($colon$colon!69 e!52708 (ite c!12641 (h!2082 (toList!730 lt!37219)) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209)))))))

(declare-fun c!12643 () Bool)

(assert (=> bm!7498 (= c!12643 c!12641)))

(declare-fun b!80715 () Bool)

(declare-fun e!52709 () List!1497)

(assert (=> b!80715 (= e!52709 call!7499)))

(declare-fun b!80716 () Bool)

(declare-fun res!42020 () Bool)

(assert (=> b!80716 (=> (not res!42020) (not e!52706))))

(assert (=> b!80716 (= res!42020 (containsKey!142 lt!37585 (_1!1095 lt!37209)))))

(declare-fun b!80717 () Bool)

(declare-fun c!12642 () Bool)

(assert (=> b!80717 (= c!12642 (and ((_ is Cons!1493) (toList!730 lt!37219)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37219))) (_1!1095 lt!37209))))))

(assert (=> b!80717 (= e!52710 e!52709)))

(declare-fun b!80718 () Bool)

(assert (=> b!80718 (= e!52708 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37219)) (_1!1095 lt!37209) (_2!1095 lt!37209)))))

(declare-fun b!80719 () Bool)

(assert (=> b!80719 (= e!52710 call!7500)))

(declare-fun b!80720 () Bool)

(assert (=> b!80720 (= e!52709 call!7499)))

(declare-fun b!80721 () Bool)

(assert (=> b!80721 (= e!52708 (ite c!12644 (t!5156 (toList!730 lt!37219)) (ite c!12642 (Cons!1493 (h!2082 (toList!730 lt!37219)) (t!5156 (toList!730 lt!37219))) Nil!1494)))))

(declare-fun b!80722 () Bool)

(assert (=> b!80722 (= e!52707 call!7501)))

(assert (= (and d!19747 c!12641) b!80722))

(assert (= (and d!19747 (not c!12641)) b!80714))

(assert (= (and b!80714 c!12644) b!80719))

(assert (= (and b!80714 (not c!12644)) b!80717))

(assert (= (and b!80717 c!12642) b!80720))

(assert (= (and b!80717 (not c!12642)) b!80715))

(assert (= (or b!80720 b!80715) bm!7497))

(assert (= (or b!80719 bm!7497) bm!7496))

(assert (= (or b!80722 bm!7496) bm!7498))

(assert (= (and bm!7498 c!12643) b!80718))

(assert (= (and bm!7498 (not c!12643)) b!80721))

(assert (= (and d!19747 res!42019) b!80716))

(assert (= (and b!80716 res!42020) b!80713))

(declare-fun m!82241 () Bool)

(assert (=> b!80718 m!82241))

(declare-fun m!82243 () Bool)

(assert (=> bm!7498 m!82243))

(declare-fun m!82245 () Bool)

(assert (=> b!80713 m!82245))

(declare-fun m!82247 () Bool)

(assert (=> d!19747 m!82247))

(declare-fun m!82249 () Bool)

(assert (=> d!19747 m!82249))

(declare-fun m!82251 () Bool)

(assert (=> b!80716 m!82251))

(assert (=> d!19711 d!19747))

(declare-fun d!19749 () Bool)

(declare-fun e!52711 () Bool)

(assert (=> d!19749 e!52711))

(declare-fun res!42021 () Bool)

(assert (=> d!19749 (=> res!42021 e!52711)))

(declare-fun lt!37587 () Bool)

(assert (=> d!19749 (= res!42021 (not lt!37587))))

(declare-fun lt!37586 () Bool)

(assert (=> d!19749 (= lt!37587 lt!37586)))

(declare-fun lt!37588 () Unit!2322)

(declare-fun e!52712 () Unit!2322)

(assert (=> d!19749 (= lt!37588 e!52712)))

(declare-fun c!12645 () Bool)

(assert (=> d!19749 (= c!12645 lt!37586)))

(assert (=> d!19749 (= lt!37586 (containsKey!142 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!19749 (= (contains!739 lt!37536 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!37587)))

(declare-fun b!80723 () Bool)

(declare-fun lt!37589 () Unit!2322)

(assert (=> b!80723 (= e!52712 lt!37589)))

(assert (=> b!80723 (= lt!37589 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80723 (isDefined!91 (getValueByKey!139 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!80724 () Bool)

(declare-fun Unit!2337 () Unit!2322)

(assert (=> b!80724 (= e!52712 Unit!2337)))

(declare-fun b!80725 () Bool)

(assert (=> b!80725 (= e!52711 (isDefined!91 (getValueByKey!139 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!19749 c!12645) b!80723))

(assert (= (and d!19749 (not c!12645)) b!80724))

(assert (= (and d!19749 (not res!42021)) b!80725))

(assert (=> d!19749 m!81993))

(declare-fun m!82253 () Bool)

(assert (=> d!19749 m!82253))

(assert (=> b!80723 m!81993))

(declare-fun m!82255 () Bool)

(assert (=> b!80723 m!82255))

(assert (=> b!80723 m!81993))

(declare-fun m!82257 () Bool)

(assert (=> b!80723 m!82257))

(assert (=> b!80723 m!82257))

(declare-fun m!82259 () Bool)

(assert (=> b!80723 m!82259))

(assert (=> b!80725 m!81993))

(assert (=> b!80725 m!82257))

(assert (=> b!80725 m!82257))

(assert (=> b!80725 m!82259))

(assert (=> b!80608 d!19749))

(declare-fun d!19751 () Bool)

(declare-fun res!42022 () Bool)

(declare-fun e!52713 () Bool)

(assert (=> d!19751 (=> (not res!42022) (not e!52713))))

(assert (=> d!19751 (= res!42022 (simpleValid!56 (_2!1094 lt!37425)))))

(assert (=> d!19751 (= (valid!325 (_2!1094 lt!37425)) e!52713)))

(declare-fun b!80726 () Bool)

(declare-fun res!42023 () Bool)

(assert (=> b!80726 (=> (not res!42023) (not e!52713))))

(assert (=> b!80726 (= res!42023 (= (arrayCountValidKeys!0 (_keys!3956 (_2!1094 lt!37425)) #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37425)))) (_size!417 (_2!1094 lt!37425))))))

(declare-fun b!80727 () Bool)

(declare-fun res!42024 () Bool)

(assert (=> b!80727 (=> (not res!42024) (not e!52713))))

(assert (=> b!80727 (= res!42024 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3956 (_2!1094 lt!37425)) (mask!6298 (_2!1094 lt!37425))))))

(declare-fun b!80728 () Bool)

(assert (=> b!80728 (= e!52713 (arrayNoDuplicates!0 (_keys!3956 (_2!1094 lt!37425)) #b00000000000000000000000000000000 Nil!1495))))

(assert (= (and d!19751 res!42022) b!80726))

(assert (= (and b!80726 res!42023) b!80727))

(assert (= (and b!80727 res!42024) b!80728))

(declare-fun m!82261 () Bool)

(assert (=> d!19751 m!82261))

(declare-fun m!82263 () Bool)

(assert (=> b!80726 m!82263))

(declare-fun m!82265 () Bool)

(assert (=> b!80727 m!82265))

(declare-fun m!82267 () Bool)

(assert (=> b!80728 m!82267))

(assert (=> d!19679 d!19751))

(assert (=> d!19679 d!19695))

(declare-fun d!19753 () Bool)

(declare-fun e!52714 () Bool)

(assert (=> d!19753 e!52714))

(declare-fun res!42025 () Bool)

(assert (=> d!19753 (=> res!42025 e!52714)))

(declare-fun lt!37591 () Bool)

(assert (=> d!19753 (= res!42025 (not lt!37591))))

(declare-fun lt!37590 () Bool)

(assert (=> d!19753 (= lt!37591 lt!37590)))

(declare-fun lt!37592 () Unit!2322)

(declare-fun e!52715 () Unit!2322)

(assert (=> d!19753 (= lt!37592 e!52715)))

(declare-fun c!12646 () Bool)

(assert (=> d!19753 (= c!12646 lt!37590)))

(assert (=> d!19753 (= lt!37590 (containsKey!142 (toList!730 lt!37536) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19753 (= (contains!739 lt!37536 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37591)))

(declare-fun b!80729 () Bool)

(declare-fun lt!37593 () Unit!2322)

(assert (=> b!80729 (= e!52715 lt!37593)))

(assert (=> b!80729 (= lt!37593 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37536) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80729 (isDefined!91 (getValueByKey!139 (toList!730 lt!37536) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80730 () Bool)

(declare-fun Unit!2338 () Unit!2322)

(assert (=> b!80730 (= e!52715 Unit!2338)))

(declare-fun b!80731 () Bool)

(assert (=> b!80731 (= e!52714 (isDefined!91 (getValueByKey!139 (toList!730 lt!37536) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19753 c!12646) b!80729))

(assert (= (and d!19753 (not c!12646)) b!80730))

(assert (= (and d!19753 (not res!42025)) b!80731))

(declare-fun m!82269 () Bool)

(assert (=> d!19753 m!82269))

(declare-fun m!82271 () Bool)

(assert (=> b!80729 m!82271))

(declare-fun m!82273 () Bool)

(assert (=> b!80729 m!82273))

(assert (=> b!80729 m!82273))

(declare-fun m!82275 () Bool)

(assert (=> b!80729 m!82275))

(assert (=> b!80731 m!82273))

(assert (=> b!80731 m!82273))

(assert (=> b!80731 m!82275))

(assert (=> d!19713 d!19753))

(assert (=> d!19713 d!19727))

(assert (=> bm!7474 d!19713))

(assert (=> d!19699 d!19703))

(declare-fun d!19755 () Bool)

(assert (=> d!19755 (not (arrayContainsKey!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!19755 true))

(declare-fun _$68!67 () Unit!2322)

(assert (=> d!19755 (= (choose!68 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495)) _$68!67)))

(declare-fun bs!3419 () Bool)

(assert (= bs!3419 d!19755))

(assert (=> bs!3419 m!81737))

(assert (=> bs!3419 m!81769))

(assert (=> d!19699 d!19755))

(declare-fun d!19757 () Bool)

(declare-fun e!52716 () Bool)

(assert (=> d!19757 e!52716))

(declare-fun res!42026 () Bool)

(assert (=> d!19757 (=> res!42026 e!52716)))

(declare-fun lt!37595 () Bool)

(assert (=> d!19757 (= res!42026 (not lt!37595))))

(declare-fun lt!37594 () Bool)

(assert (=> d!19757 (= lt!37595 lt!37594)))

(declare-fun lt!37596 () Unit!2322)

(declare-fun e!52717 () Unit!2322)

(assert (=> d!19757 (= lt!37596 e!52717)))

(declare-fun c!12647 () Bool)

(assert (=> d!19757 (= c!12647 lt!37594)))

(assert (=> d!19757 (= lt!37594 (containsKey!142 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19757 (= (contains!739 lt!37476 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37595)))

(declare-fun b!80732 () Bool)

(declare-fun lt!37597 () Unit!2322)

(assert (=> b!80732 (= e!52717 lt!37597)))

(assert (=> b!80732 (= lt!37597 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80732 (isDefined!91 (getValueByKey!139 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80733 () Bool)

(declare-fun Unit!2339 () Unit!2322)

(assert (=> b!80733 (= e!52717 Unit!2339)))

(declare-fun b!80734 () Bool)

(assert (=> b!80734 (= e!52716 (isDefined!91 (getValueByKey!139 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19757 c!12647) b!80732))

(assert (= (and d!19757 (not c!12647)) b!80733))

(assert (= (and d!19757 (not res!42026)) b!80734))

(declare-fun m!82277 () Bool)

(assert (=> d!19757 m!82277))

(declare-fun m!82279 () Bool)

(assert (=> b!80732 m!82279))

(declare-fun m!82281 () Bool)

(assert (=> b!80732 m!82281))

(assert (=> b!80732 m!82281))

(declare-fun m!82283 () Bool)

(assert (=> b!80732 m!82283))

(assert (=> b!80734 m!82281))

(assert (=> b!80734 m!82281))

(assert (=> b!80734 m!82283))

(assert (=> bm!7475 d!19757))

(declare-fun d!19759 () Bool)

(declare-fun e!52718 () Bool)

(assert (=> d!19759 e!52718))

(declare-fun res!42027 () Bool)

(assert (=> d!19759 (=> res!42027 e!52718)))

(declare-fun lt!37599 () Bool)

(assert (=> d!19759 (= res!42027 (not lt!37599))))

(declare-fun lt!37598 () Bool)

(assert (=> d!19759 (= lt!37599 lt!37598)))

(declare-fun lt!37600 () Unit!2322)

(declare-fun e!52719 () Unit!2322)

(assert (=> d!19759 (= lt!37600 e!52719)))

(declare-fun c!12648 () Bool)

(assert (=> d!19759 (= c!12648 lt!37598)))

(assert (=> d!19759 (= lt!37598 (containsKey!142 (toList!730 call!7459) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!19759 (= (contains!739 call!7459 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) lt!37599)))

(declare-fun b!80735 () Bool)

(declare-fun lt!37601 () Unit!2322)

(assert (=> b!80735 (= e!52719 lt!37601)))

(assert (=> b!80735 (= lt!37601 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 call!7459) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> b!80735 (isDefined!91 (getValueByKey!139 (toList!730 call!7459) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!80736 () Bool)

(declare-fun Unit!2340 () Unit!2322)

(assert (=> b!80736 (= e!52719 Unit!2340)))

(declare-fun b!80737 () Bool)

(assert (=> b!80737 (= e!52718 (isDefined!91 (getValueByKey!139 (toList!730 call!7459) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(assert (= (and d!19759 c!12648) b!80735))

(assert (= (and d!19759 (not c!12648)) b!80736))

(assert (= (and d!19759 (not res!42027)) b!80737))

(assert (=> d!19759 m!81737))

(declare-fun m!82285 () Bool)

(assert (=> d!19759 m!82285))

(assert (=> b!80735 m!81737))

(declare-fun m!82287 () Bool)

(assert (=> b!80735 m!82287))

(assert (=> b!80735 m!81737))

(declare-fun m!82289 () Bool)

(assert (=> b!80735 m!82289))

(assert (=> b!80735 m!82289))

(declare-fun m!82291 () Bool)

(assert (=> b!80735 m!82291))

(assert (=> b!80737 m!81737))

(assert (=> b!80737 m!82289))

(assert (=> b!80737 m!82289))

(assert (=> b!80737 m!82291))

(assert (=> b!80470 d!19759))

(declare-fun d!19761 () Bool)

(declare-fun isEmpty!336 (List!1497) Bool)

(assert (=> d!19761 (= (isEmpty!335 lt!37536) (isEmpty!336 (toList!730 lt!37536)))))

(declare-fun bs!3420 () Bool)

(assert (= bs!3420 d!19761))

(declare-fun m!82293 () Bool)

(assert (=> bs!3420 m!82293))

(assert (=> b!80610 d!19761))

(declare-fun b!80738 () Bool)

(declare-fun e!52723 () Bool)

(declare-fun e!52724 () Bool)

(assert (=> b!80738 (= e!52723 e!52724)))

(assert (=> b!80738 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun res!42030 () Bool)

(declare-fun lt!37606 () ListLongMap!1429)

(assert (=> b!80738 (= res!42030 (contains!739 lt!37606 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!80738 (=> (not res!42030) (not e!52724))))

(declare-fun b!80739 () Bool)

(declare-fun lt!37605 () Unit!2322)

(declare-fun lt!37602 () Unit!2322)

(assert (=> b!80739 (= lt!37605 lt!37602)))

(declare-fun lt!37607 () V!3001)

(declare-fun lt!37603 () ListLongMap!1429)

(declare-fun lt!37604 () (_ BitVec 64))

(declare-fun lt!37608 () (_ BitVec 64))

(assert (=> b!80739 (not (contains!739 (+!101 lt!37603 (tuple2!2169 lt!37608 lt!37607)) lt!37604))))

(assert (=> b!80739 (= lt!37602 (addStillNotContains!31 lt!37603 lt!37608 lt!37607 lt!37604))))

(assert (=> b!80739 (= lt!37604 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!80739 (= lt!37607 (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!80739 (= lt!37608 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!7502 () ListLongMap!1429)

(assert (=> b!80739 (= lt!37603 call!7502)))

(declare-fun e!52721 () ListLongMap!1429)

(assert (=> b!80739 (= e!52721 (+!101 call!7502 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!80741 () Bool)

(assert (=> b!80741 (= e!52721 call!7502)))

(declare-fun b!80742 () Bool)

(declare-fun e!52720 () Bool)

(assert (=> b!80742 (= e!52720 (= lt!37606 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!80743 () Bool)

(declare-fun res!42031 () Bool)

(declare-fun e!52726 () Bool)

(assert (=> b!80743 (=> (not res!42031) (not e!52726))))

(assert (=> b!80743 (= res!42031 (not (contains!739 lt!37606 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80744 () Bool)

(assert (=> b!80744 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> b!80744 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2135 (_values!2275 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> b!80744 (= e!52724 (= (apply!80 lt!37606 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!80745 () Bool)

(assert (=> b!80745 (= e!52723 e!52720)))

(declare-fun c!12649 () Bool)

(assert (=> b!80745 (= c!12649 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!80746 () Bool)

(assert (=> b!80746 (= e!52726 e!52723)))

(declare-fun c!12651 () Bool)

(declare-fun e!52722 () Bool)

(assert (=> b!80746 (= c!12651 e!52722)))

(declare-fun res!42028 () Bool)

(assert (=> b!80746 (=> (not res!42028) (not e!52722))))

(assert (=> b!80746 (= res!42028 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!80747 () Bool)

(declare-fun e!52725 () ListLongMap!1429)

(assert (=> b!80747 (= e!52725 e!52721)))

(declare-fun c!12652 () Bool)

(assert (=> b!80747 (= c!12652 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!7499 () Bool)

(assert (=> bm!7499 (= call!7502 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun b!80740 () Bool)

(assert (=> b!80740 (= e!52720 (isEmpty!335 lt!37606))))

(declare-fun d!19763 () Bool)

(assert (=> d!19763 e!52726))

(declare-fun res!42029 () Bool)

(assert (=> d!19763 (=> (not res!42029) (not e!52726))))

(assert (=> d!19763 (= res!42029 (not (contains!739 lt!37606 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19763 (= lt!37606 e!52725)))

(declare-fun c!12650 () Bool)

(assert (=> d!19763 (= c!12650 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> d!19763 (validMask!0 (mask!6298 (v!2610 (underlying!283 thiss!992))))))

(assert (=> d!19763 (= (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))) lt!37606)))

(declare-fun b!80748 () Bool)

(assert (=> b!80748 (= e!52725 (ListLongMap!1430 Nil!1494))))

(declare-fun b!80749 () Bool)

(assert (=> b!80749 (= e!52722 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!80749 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (= (and d!19763 c!12650) b!80748))

(assert (= (and d!19763 (not c!12650)) b!80747))

(assert (= (and b!80747 c!12652) b!80739))

(assert (= (and b!80747 (not c!12652)) b!80741))

(assert (= (or b!80739 b!80741) bm!7499))

(assert (= (and d!19763 res!42029) b!80743))

(assert (= (and b!80743 res!42031) b!80746))

(assert (= (and b!80746 res!42028) b!80749))

(assert (= (and b!80746 c!12651) b!80738))

(assert (= (and b!80746 (not c!12651)) b!80745))

(assert (= (and b!80738 res!42030) b!80744))

(assert (= (and b!80745 c!12649) b!80742))

(assert (= (and b!80745 (not c!12649)) b!80740))

(declare-fun b_lambda!3611 () Bool)

(assert (=> (not b_lambda!3611) (not b!80739)))

(assert (=> b!80739 t!5153))

(declare-fun b_and!4937 () Bool)

(assert (= b_and!4933 (and (=> t!5153 result!2829) b_and!4937)))

(assert (=> b!80739 t!5155))

(declare-fun b_and!4939 () Bool)

(assert (= b_and!4935 (and (=> t!5155 result!2833) b_and!4939)))

(declare-fun b_lambda!3613 () Bool)

(assert (=> (not b_lambda!3613) (not b!80744)))

(assert (=> b!80744 t!5153))

(declare-fun b_and!4941 () Bool)

(assert (= b_and!4937 (and (=> t!5153 result!2829) b_and!4941)))

(assert (=> b!80744 t!5155))

(declare-fun b_and!4943 () Bool)

(assert (= b_and!4939 (and (=> t!5155 result!2833) b_and!4943)))

(declare-fun m!82295 () Bool)

(assert (=> b!80738 m!82295))

(assert (=> b!80738 m!82295))

(declare-fun m!82297 () Bool)

(assert (=> b!80738 m!82297))

(assert (=> b!80744 m!81775))

(assert (=> b!80744 m!82295))

(assert (=> b!80744 m!82295))

(declare-fun m!82299 () Bool)

(assert (=> b!80744 m!82299))

(declare-fun m!82301 () Bool)

(assert (=> b!80744 m!82301))

(assert (=> b!80744 m!81775))

(declare-fun m!82303 () Bool)

(assert (=> b!80744 m!82303))

(assert (=> b!80744 m!82301))

(assert (=> b!80747 m!82295))

(assert (=> b!80747 m!82295))

(declare-fun m!82305 () Bool)

(assert (=> b!80747 m!82305))

(declare-fun m!82307 () Bool)

(assert (=> b!80742 m!82307))

(assert (=> bm!7499 m!82307))

(assert (=> b!80739 m!81775))

(assert (=> b!80739 m!82295))

(declare-fun m!82309 () Bool)

(assert (=> b!80739 m!82309))

(assert (=> b!80739 m!82309))

(declare-fun m!82311 () Bool)

(assert (=> b!80739 m!82311))

(declare-fun m!82313 () Bool)

(assert (=> b!80739 m!82313))

(declare-fun m!82315 () Bool)

(assert (=> b!80739 m!82315))

(assert (=> b!80739 m!82301))

(assert (=> b!80739 m!81775))

(assert (=> b!80739 m!82303))

(assert (=> b!80739 m!82301))

(declare-fun m!82317 () Bool)

(assert (=> b!80740 m!82317))

(assert (=> b!80749 m!82295))

(assert (=> b!80749 m!82295))

(assert (=> b!80749 m!82305))

(declare-fun m!82319 () Bool)

(assert (=> b!80743 m!82319))

(declare-fun m!82321 () Bool)

(assert (=> d!19763 m!82321))

(assert (=> d!19763 m!81735))

(assert (=> b!80612 d!19763))

(declare-fun b!80753 () Bool)

(declare-fun e!52728 () Option!145)

(assert (=> b!80753 (= e!52728 None!143)))

(declare-fun b!80752 () Bool)

(assert (=> b!80752 (= e!52728 (getValueByKey!139 (t!5156 (toList!730 lt!37513)) (_1!1095 lt!37212)))))

(declare-fun d!19765 () Bool)

(declare-fun c!12653 () Bool)

(assert (=> d!19765 (= c!12653 (and ((_ is Cons!1493) (toList!730 lt!37513)) (= (_1!1095 (h!2082 (toList!730 lt!37513))) (_1!1095 lt!37212))))))

(declare-fun e!52727 () Option!145)

(assert (=> d!19765 (= (getValueByKey!139 (toList!730 lt!37513) (_1!1095 lt!37212)) e!52727)))

(declare-fun b!80750 () Bool)

(assert (=> b!80750 (= e!52727 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37513)))))))

(declare-fun b!80751 () Bool)

(assert (=> b!80751 (= e!52727 e!52728)))

(declare-fun c!12654 () Bool)

(assert (=> b!80751 (= c!12654 (and ((_ is Cons!1493) (toList!730 lt!37513)) (not (= (_1!1095 (h!2082 (toList!730 lt!37513))) (_1!1095 lt!37212)))))))

(assert (= (and d!19765 c!12653) b!80750))

(assert (= (and d!19765 (not c!12653)) b!80751))

(assert (= (and b!80751 c!12654) b!80752))

(assert (= (and b!80751 (not c!12654)) b!80753))

(declare-fun m!82323 () Bool)

(assert (=> b!80752 m!82323))

(assert (=> b!80580 d!19765))

(declare-fun d!19767 () Bool)

(assert (=> d!19767 (= (+!101 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (+!101 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (=> d!19767 true))

(declare-fun _$28!134 () Unit!2322)

(assert (=> d!19767 (= (choose!476 lt!37215 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))) _$28!134)))

(declare-fun bs!3421 () Bool)

(assert (= bs!3421 d!19767))

(assert (=> bs!3421 m!82115))

(assert (=> bs!3421 m!82115))

(assert (=> bs!3421 m!82117))

(assert (=> bs!3421 m!82119))

(assert (=> bs!3421 m!82119))

(assert (=> bs!3421 m!82121))

(assert (=> d!19715 d!19767))

(declare-fun d!19769 () Bool)

(declare-fun e!52729 () Bool)

(assert (=> d!19769 e!52729))

(declare-fun res!42033 () Bool)

(assert (=> d!19769 (=> (not res!42033) (not e!52729))))

(declare-fun lt!37612 () ListLongMap!1429)

(assert (=> d!19769 (= res!42033 (contains!739 lt!37612 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!37610 () List!1497)

(assert (=> d!19769 (= lt!37612 (ListLongMap!1430 lt!37610))))

(declare-fun lt!37609 () Unit!2322)

(declare-fun lt!37611 () Unit!2322)

(assert (=> d!19769 (= lt!37609 lt!37611)))

(assert (=> d!19769 (= (getValueByKey!139 lt!37610 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19769 (= lt!37611 (lemmaContainsTupThenGetReturnValue!56 lt!37610 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19769 (= lt!37610 (insertStrictlySorted!59 (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19769 (= (+!101 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37612)))

(declare-fun b!80754 () Bool)

(declare-fun res!42032 () Bool)

(assert (=> b!80754 (=> (not res!42032) (not e!52729))))

(assert (=> b!80754 (= res!42032 (= (getValueByKey!139 (toList!730 lt!37612) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!80755 () Bool)

(assert (=> b!80755 (= e!52729 (contains!742 (toList!730 lt!37612) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!19769 res!42033) b!80754))

(assert (= (and b!80754 res!42032) b!80755))

(declare-fun m!82325 () Bool)

(assert (=> d!19769 m!82325))

(declare-fun m!82327 () Bool)

(assert (=> d!19769 m!82327))

(declare-fun m!82329 () Bool)

(assert (=> d!19769 m!82329))

(declare-fun m!82331 () Bool)

(assert (=> d!19769 m!82331))

(declare-fun m!82333 () Bool)

(assert (=> b!80754 m!82333))

(declare-fun m!82335 () Bool)

(assert (=> b!80755 m!82335))

(assert (=> d!19715 d!19769))

(declare-fun d!19771 () Bool)

(declare-fun e!52730 () Bool)

(assert (=> d!19771 e!52730))

(declare-fun res!42035 () Bool)

(assert (=> d!19771 (=> (not res!42035) (not e!52730))))

(declare-fun lt!37616 () ListLongMap!1429)

(assert (=> d!19771 (= res!42035 (contains!739 lt!37616 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun lt!37614 () List!1497)

(assert (=> d!19771 (= lt!37616 (ListLongMap!1430 lt!37614))))

(declare-fun lt!37613 () Unit!2322)

(declare-fun lt!37615 () Unit!2322)

(assert (=> d!19771 (= lt!37613 lt!37615)))

(assert (=> d!19771 (= (getValueByKey!139 lt!37614 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19771 (= lt!37615 (lemmaContainsTupThenGetReturnValue!56 lt!37614 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19771 (= lt!37614 (insertStrictlySorted!59 (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19771 (= (+!101 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) lt!37616)))

(declare-fun b!80756 () Bool)

(declare-fun res!42034 () Bool)

(assert (=> b!80756 (=> (not res!42034) (not e!52730))))

(assert (=> b!80756 (= res!42034 (= (getValueByKey!139 (toList!730 lt!37616) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!80757 () Bool)

(assert (=> b!80757 (= e!52730 (contains!742 (toList!730 lt!37616) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (= (and d!19771 res!42035) b!80756))

(assert (= (and b!80756 res!42034) b!80757))

(declare-fun m!82337 () Bool)

(assert (=> d!19771 m!82337))

(declare-fun m!82339 () Bool)

(assert (=> d!19771 m!82339))

(declare-fun m!82341 () Bool)

(assert (=> d!19771 m!82341))

(declare-fun m!82343 () Bool)

(assert (=> d!19771 m!82343))

(declare-fun m!82345 () Bool)

(assert (=> b!80756 m!82345))

(declare-fun m!82347 () Bool)

(assert (=> b!80757 m!82347))

(assert (=> d!19715 d!19771))

(declare-fun d!19773 () Bool)

(declare-fun e!52731 () Bool)

(assert (=> d!19773 e!52731))

(declare-fun res!42037 () Bool)

(assert (=> d!19773 (=> (not res!42037) (not e!52731))))

(declare-fun lt!37620 () ListLongMap!1429)

(assert (=> d!19773 (= res!42037 (contains!739 lt!37620 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!37618 () List!1497)

(assert (=> d!19773 (= lt!37620 (ListLongMap!1430 lt!37618))))

(declare-fun lt!37617 () Unit!2322)

(declare-fun lt!37619 () Unit!2322)

(assert (=> d!19773 (= lt!37617 lt!37619)))

(assert (=> d!19773 (= (getValueByKey!139 lt!37618 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19773 (= lt!37619 (lemmaContainsTupThenGetReturnValue!56 lt!37618 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19773 (= lt!37618 (insertStrictlySorted!59 (toList!730 lt!37215) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19773 (= (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37620)))

(declare-fun b!80758 () Bool)

(declare-fun res!42036 () Bool)

(assert (=> b!80758 (=> (not res!42036) (not e!52731))))

(assert (=> b!80758 (= res!42036 (= (getValueByKey!139 (toList!730 lt!37620) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!80759 () Bool)

(assert (=> b!80759 (= e!52731 (contains!742 (toList!730 lt!37620) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!19773 res!42037) b!80758))

(assert (= (and b!80758 res!42036) b!80759))

(declare-fun m!82349 () Bool)

(assert (=> d!19773 m!82349))

(declare-fun m!82351 () Bool)

(assert (=> d!19773 m!82351))

(declare-fun m!82353 () Bool)

(assert (=> d!19773 m!82353))

(declare-fun m!82355 () Bool)

(assert (=> d!19773 m!82355))

(declare-fun m!82357 () Bool)

(assert (=> b!80758 m!82357))

(declare-fun m!82359 () Bool)

(assert (=> b!80759 m!82359))

(assert (=> d!19715 d!19773))

(declare-fun d!19775 () Bool)

(declare-fun e!52732 () Bool)

(assert (=> d!19775 e!52732))

(declare-fun res!42039 () Bool)

(assert (=> d!19775 (=> (not res!42039) (not e!52732))))

(declare-fun lt!37624 () ListLongMap!1429)

(assert (=> d!19775 (= res!42039 (contains!739 lt!37624 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun lt!37622 () List!1497)

(assert (=> d!19775 (= lt!37624 (ListLongMap!1430 lt!37622))))

(declare-fun lt!37621 () Unit!2322)

(declare-fun lt!37623 () Unit!2322)

(assert (=> d!19775 (= lt!37621 lt!37623)))

(assert (=> d!19775 (= (getValueByKey!139 lt!37622 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19775 (= lt!37623 (lemmaContainsTupThenGetReturnValue!56 lt!37622 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19775 (= lt!37622 (insertStrictlySorted!59 (toList!730 lt!37215) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19775 (= (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) lt!37624)))

(declare-fun b!80760 () Bool)

(declare-fun res!42038 () Bool)

(assert (=> b!80760 (=> (not res!42038) (not e!52732))))

(assert (=> b!80760 (= res!42038 (= (getValueByKey!139 (toList!730 lt!37624) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!80761 () Bool)

(assert (=> b!80761 (= e!52732 (contains!742 (toList!730 lt!37624) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (= (and d!19775 res!42039) b!80760))

(assert (= (and b!80760 res!42038) b!80761))

(declare-fun m!82361 () Bool)

(assert (=> d!19775 m!82361))

(declare-fun m!82363 () Bool)

(assert (=> d!19775 m!82363))

(declare-fun m!82365 () Bool)

(assert (=> d!19775 m!82365))

(declare-fun m!82367 () Bool)

(assert (=> d!19775 m!82367))

(declare-fun m!82369 () Bool)

(assert (=> b!80760 m!82369))

(declare-fun m!82371 () Bool)

(assert (=> b!80761 m!82371))

(assert (=> d!19715 d!19775))

(declare-fun d!19777 () Bool)

(declare-fun e!52733 () Bool)

(assert (=> d!19777 e!52733))

(declare-fun res!42040 () Bool)

(assert (=> d!19777 (=> res!42040 e!52733)))

(declare-fun lt!37626 () Bool)

(assert (=> d!19777 (= res!42040 (not lt!37626))))

(declare-fun lt!37625 () Bool)

(assert (=> d!19777 (= lt!37626 lt!37625)))

(declare-fun lt!37627 () Unit!2322)

(declare-fun e!52734 () Unit!2322)

(assert (=> d!19777 (= lt!37627 e!52734)))

(declare-fun c!12655 () Bool)

(assert (=> d!19777 (= c!12655 lt!37625)))

(assert (=> d!19777 (= lt!37625 (containsKey!142 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19777 (= (contains!739 lt!37476 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37626)))

(declare-fun b!80762 () Bool)

(declare-fun lt!37628 () Unit!2322)

(assert (=> b!80762 (= e!52734 lt!37628)))

(assert (=> b!80762 (= lt!37628 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80762 (isDefined!91 (getValueByKey!139 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80763 () Bool)

(declare-fun Unit!2341 () Unit!2322)

(assert (=> b!80763 (= e!52734 Unit!2341)))

(declare-fun b!80764 () Bool)

(assert (=> b!80764 (= e!52733 (isDefined!91 (getValueByKey!139 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19777 c!12655) b!80762))

(assert (= (and d!19777 (not c!12655)) b!80763))

(assert (= (and d!19777 (not res!42040)) b!80764))

(declare-fun m!82373 () Bool)

(assert (=> d!19777 m!82373))

(declare-fun m!82375 () Bool)

(assert (=> b!80762 m!82375))

(declare-fun m!82377 () Bool)

(assert (=> b!80762 m!82377))

(assert (=> b!80762 m!82377))

(declare-fun m!82379 () Bool)

(assert (=> b!80762 m!82379))

(assert (=> b!80764 m!82377))

(assert (=> b!80764 m!82377))

(assert (=> b!80764 m!82379))

(assert (=> bm!7471 d!19777))

(declare-fun d!19779 () Bool)

(declare-fun res!42041 () Bool)

(declare-fun e!52735 () Bool)

(assert (=> d!19779 (=> res!42041 e!52735)))

(assert (=> d!19779 (= res!42041 (= (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!19779 (= (arrayContainsKey!0 (_keys!3956 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b00000000000000000000000000000000) e!52735)))

(declare-fun b!80765 () Bool)

(declare-fun e!52736 () Bool)

(assert (=> b!80765 (= e!52735 e!52736)))

(declare-fun res!42042 () Bool)

(assert (=> b!80765 (=> (not res!42042) (not e!52736))))

(assert (=> b!80765 (= res!42042 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!80766 () Bool)

(assert (=> b!80766 (= e!52736 (arrayContainsKey!0 (_keys!3956 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!19779 (not res!42041)) b!80765))

(assert (= (and b!80765 res!42042) b!80766))

(declare-fun m!82381 () Bool)

(assert (=> d!19779 m!82381))

(assert (=> b!80766 m!81737))

(declare-fun m!82383 () Bool)

(assert (=> b!80766 m!82383))

(assert (=> bm!7449 d!19779))

(declare-fun d!19781 () Bool)

(declare-fun e!52737 () Bool)

(assert (=> d!19781 e!52737))

(declare-fun res!42044 () Bool)

(assert (=> d!19781 (=> (not res!42044) (not e!52737))))

(declare-fun lt!37632 () ListLongMap!1429)

(assert (=> d!19781 (= res!42044 (contains!739 lt!37632 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun lt!37630 () List!1497)

(assert (=> d!19781 (= lt!37632 (ListLongMap!1430 lt!37630))))

(declare-fun lt!37629 () Unit!2322)

(declare-fun lt!37631 () Unit!2322)

(assert (=> d!19781 (= lt!37629 lt!37631)))

(assert (=> d!19781 (= (getValueByKey!139 lt!37630 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19781 (= lt!37631 (lemmaContainsTupThenGetReturnValue!56 lt!37630 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19781 (= lt!37630 (insertStrictlySorted!59 (toList!730 lt!37211) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19781 (= (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) lt!37632)))

(declare-fun b!80767 () Bool)

(declare-fun res!42043 () Bool)

(assert (=> b!80767 (=> (not res!42043) (not e!52737))))

(assert (=> b!80767 (= res!42043 (= (getValueByKey!139 (toList!730 lt!37632) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!80768 () Bool)

(assert (=> b!80768 (= e!52737 (contains!742 (toList!730 lt!37632) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (= (and d!19781 res!42044) b!80767))

(assert (= (and b!80767 res!42043) b!80768))

(declare-fun m!82385 () Bool)

(assert (=> d!19781 m!82385))

(declare-fun m!82387 () Bool)

(assert (=> d!19781 m!82387))

(declare-fun m!82389 () Bool)

(assert (=> d!19781 m!82389))

(declare-fun m!82391 () Bool)

(assert (=> d!19781 m!82391))

(declare-fun m!82393 () Bool)

(assert (=> b!80767 m!82393))

(declare-fun m!82395 () Bool)

(assert (=> b!80768 m!82395))

(assert (=> d!19717 d!19781))

(declare-fun d!19783 () Bool)

(declare-fun e!52738 () Bool)

(assert (=> d!19783 e!52738))

(declare-fun res!42046 () Bool)

(assert (=> d!19783 (=> (not res!42046) (not e!52738))))

(declare-fun lt!37636 () ListLongMap!1429)

(assert (=> d!19783 (= res!42046 (contains!739 lt!37636 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun lt!37634 () List!1497)

(assert (=> d!19783 (= lt!37636 (ListLongMap!1430 lt!37634))))

(declare-fun lt!37633 () Unit!2322)

(declare-fun lt!37635 () Unit!2322)

(assert (=> d!19783 (= lt!37633 lt!37635)))

(assert (=> d!19783 (= (getValueByKey!139 lt!37634 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19783 (= lt!37635 (lemmaContainsTupThenGetReturnValue!56 lt!37634 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19783 (= lt!37634 (insertStrictlySorted!59 (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19783 (= (+!101 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) lt!37636)))

(declare-fun b!80769 () Bool)

(declare-fun res!42045 () Bool)

(assert (=> b!80769 (=> (not res!42045) (not e!52738))))

(assert (=> b!80769 (= res!42045 (= (getValueByKey!139 (toList!730 lt!37636) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!80770 () Bool)

(assert (=> b!80770 (= e!52738 (contains!742 (toList!730 lt!37636) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (= (and d!19783 res!42046) b!80769))

(assert (= (and b!80769 res!42045) b!80770))

(declare-fun m!82397 () Bool)

(assert (=> d!19783 m!82397))

(declare-fun m!82399 () Bool)

(assert (=> d!19783 m!82399))

(declare-fun m!82401 () Bool)

(assert (=> d!19783 m!82401))

(declare-fun m!82403 () Bool)

(assert (=> d!19783 m!82403))

(declare-fun m!82405 () Bool)

(assert (=> b!80769 m!82405))

(declare-fun m!82407 () Bool)

(assert (=> b!80770 m!82407))

(assert (=> d!19717 d!19783))

(declare-fun d!19785 () Bool)

(declare-fun e!52739 () Bool)

(assert (=> d!19785 e!52739))

(declare-fun res!42048 () Bool)

(assert (=> d!19785 (=> (not res!42048) (not e!52739))))

(declare-fun lt!37640 () ListLongMap!1429)

(assert (=> d!19785 (= res!42048 (contains!739 lt!37640 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!37638 () List!1497)

(assert (=> d!19785 (= lt!37640 (ListLongMap!1430 lt!37638))))

(declare-fun lt!37637 () Unit!2322)

(declare-fun lt!37639 () Unit!2322)

(assert (=> d!19785 (= lt!37637 lt!37639)))

(assert (=> d!19785 (= (getValueByKey!139 lt!37638 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19785 (= lt!37639 (lemmaContainsTupThenGetReturnValue!56 lt!37638 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19785 (= lt!37638 (insertStrictlySorted!59 (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19785 (= (+!101 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37640)))

(declare-fun b!80771 () Bool)

(declare-fun res!42047 () Bool)

(assert (=> b!80771 (=> (not res!42047) (not e!52739))))

(assert (=> b!80771 (= res!42047 (= (getValueByKey!139 (toList!730 lt!37640) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!80772 () Bool)

(assert (=> b!80772 (= e!52739 (contains!742 (toList!730 lt!37640) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!19785 res!42048) b!80771))

(assert (= (and b!80771 res!42047) b!80772))

(declare-fun m!82409 () Bool)

(assert (=> d!19785 m!82409))

(declare-fun m!82411 () Bool)

(assert (=> d!19785 m!82411))

(declare-fun m!82413 () Bool)

(assert (=> d!19785 m!82413))

(declare-fun m!82415 () Bool)

(assert (=> d!19785 m!82415))

(declare-fun m!82417 () Bool)

(assert (=> b!80771 m!82417))

(declare-fun m!82419 () Bool)

(assert (=> b!80772 m!82419))

(assert (=> d!19717 d!19785))

(declare-fun d!19787 () Bool)

(declare-fun e!52740 () Bool)

(assert (=> d!19787 e!52740))

(declare-fun res!42050 () Bool)

(assert (=> d!19787 (=> (not res!42050) (not e!52740))))

(declare-fun lt!37644 () ListLongMap!1429)

(assert (=> d!19787 (= res!42050 (contains!739 lt!37644 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!37642 () List!1497)

(assert (=> d!19787 (= lt!37644 (ListLongMap!1430 lt!37642))))

(declare-fun lt!37641 () Unit!2322)

(declare-fun lt!37643 () Unit!2322)

(assert (=> d!19787 (= lt!37641 lt!37643)))

(assert (=> d!19787 (= (getValueByKey!139 lt!37642 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19787 (= lt!37643 (lemmaContainsTupThenGetReturnValue!56 lt!37642 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19787 (= lt!37642 (insertStrictlySorted!59 (toList!730 lt!37211) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19787 (= (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37644)))

(declare-fun b!80773 () Bool)

(declare-fun res!42049 () Bool)

(assert (=> b!80773 (=> (not res!42049) (not e!52740))))

(assert (=> b!80773 (= res!42049 (= (getValueByKey!139 (toList!730 lt!37644) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!80774 () Bool)

(assert (=> b!80774 (= e!52740 (contains!742 (toList!730 lt!37644) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!19787 res!42050) b!80773))

(assert (= (and b!80773 res!42049) b!80774))

(declare-fun m!82421 () Bool)

(assert (=> d!19787 m!82421))

(declare-fun m!82423 () Bool)

(assert (=> d!19787 m!82423))

(declare-fun m!82425 () Bool)

(assert (=> d!19787 m!82425))

(declare-fun m!82427 () Bool)

(assert (=> d!19787 m!82427))

(declare-fun m!82429 () Bool)

(assert (=> b!80773 m!82429))

(declare-fun m!82431 () Bool)

(assert (=> b!80774 m!82431))

(assert (=> d!19717 d!19787))

(declare-fun d!19789 () Bool)

(assert (=> d!19789 (= (+!101 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (+!101 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (=> d!19789 true))

(declare-fun _$28!135 () Unit!2322)

(assert (=> d!19789 (= (choose!476 lt!37211 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) _$28!135)))

(declare-fun bs!3422 () Bool)

(assert (= bs!3422 d!19789))

(assert (=> bs!3422 m!82125))

(assert (=> bs!3422 m!82125))

(assert (=> bs!3422 m!82127))

(assert (=> bs!3422 m!82129))

(assert (=> bs!3422 m!82129))

(assert (=> bs!3422 m!82131))

(assert (=> d!19717 d!19789))

(declare-fun d!19791 () Bool)

(assert (=> d!19791 (= (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (and (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80572 d!19791))

(declare-fun d!19793 () Bool)

(declare-fun lt!37645 () Bool)

(assert (=> d!19793 (= lt!37645 (select (content!86 (toList!730 lt!37546)) lt!37210))))

(declare-fun e!52741 () Bool)

(assert (=> d!19793 (= lt!37645 e!52741)))

(declare-fun res!42052 () Bool)

(assert (=> d!19793 (=> (not res!42052) (not e!52741))))

(assert (=> d!19793 (= res!42052 ((_ is Cons!1493) (toList!730 lt!37546)))))

(assert (=> d!19793 (= (contains!742 (toList!730 lt!37546) lt!37210) lt!37645)))

(declare-fun b!80775 () Bool)

(declare-fun e!52742 () Bool)

(assert (=> b!80775 (= e!52741 e!52742)))

(declare-fun res!42051 () Bool)

(assert (=> b!80775 (=> res!42051 e!52742)))

(assert (=> b!80775 (= res!42051 (= (h!2082 (toList!730 lt!37546)) lt!37210))))

(declare-fun b!80776 () Bool)

(assert (=> b!80776 (= e!52742 (contains!742 (t!5156 (toList!730 lt!37546)) lt!37210))))

(assert (= (and d!19793 res!42052) b!80775))

(assert (= (and b!80775 (not res!42051)) b!80776))

(declare-fun m!82433 () Bool)

(assert (=> d!19793 m!82433))

(declare-fun m!82435 () Bool)

(assert (=> d!19793 m!82435))

(declare-fun m!82437 () Bool)

(assert (=> b!80776 m!82437))

(assert (=> b!80621 d!19793))

(declare-fun d!19795 () Bool)

(declare-fun lt!37648 () Bool)

(declare-fun content!87 (List!1498) (InoxSet (_ BitVec 64)))

(assert (=> d!19795 (= lt!37648 (select (content!87 Nil!1495) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun e!52747 () Bool)

(assert (=> d!19795 (= lt!37648 e!52747)))

(declare-fun res!42058 () Bool)

(assert (=> d!19795 (=> (not res!42058) (not e!52747))))

(assert (=> d!19795 (= res!42058 ((_ is Cons!1494) Nil!1495))))

(assert (=> d!19795 (= (contains!741 Nil!1495 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) lt!37648)))

(declare-fun b!80781 () Bool)

(declare-fun e!52748 () Bool)

(assert (=> b!80781 (= e!52747 e!52748)))

(declare-fun res!42057 () Bool)

(assert (=> b!80781 (=> res!42057 e!52748)))

(assert (=> b!80781 (= res!42057 (= (h!2083 Nil!1495) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!80782 () Bool)

(assert (=> b!80782 (= e!52748 (contains!741 (t!5157 Nil!1495) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (= (and d!19795 res!42058) b!80781))

(assert (= (and b!80781 (not res!42057)) b!80782))

(declare-fun m!82439 () Bool)

(assert (=> d!19795 m!82439))

(assert (=> d!19795 m!81737))

(declare-fun m!82441 () Bool)

(assert (=> d!19795 m!82441))

(assert (=> b!80782 m!81737))

(declare-fun m!82443 () Bool)

(assert (=> b!80782 m!82443))

(assert (=> b!80574 d!19795))

(declare-fun d!19797 () Bool)

(declare-fun get!1192 (Option!145) V!3001)

(assert (=> d!19797 (= (apply!80 lt!37536 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1192 (getValueByKey!139 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3423 () Bool)

(assert (= bs!3423 d!19797))

(assert (=> bs!3423 m!81993))

(assert (=> bs!3423 m!82257))

(assert (=> bs!3423 m!82257))

(declare-fun m!82445 () Bool)

(assert (=> bs!3423 m!82445))

(assert (=> b!80614 d!19797))

(declare-fun d!19799 () Bool)

(declare-fun c!12656 () Bool)

(assert (=> d!19799 (= c!12656 ((_ is ValueCellFull!914) (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!52749 () V!3001)

(assert (=> d!19799 (= (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52749)))

(declare-fun b!80783 () Bool)

(assert (=> b!80783 (= e!52749 (get!1190 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80784 () Bool)

(assert (=> b!80784 (= e!52749 (get!1191 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19799 c!12656) b!80783))

(assert (= (and d!19799 (not c!12656)) b!80784))

(assert (=> b!80783 m!82029))

(assert (=> b!80783 m!81775))

(declare-fun m!82447 () Bool)

(assert (=> b!80783 m!82447))

(assert (=> b!80784 m!82029))

(assert (=> b!80784 m!81775))

(declare-fun m!82449 () Bool)

(assert (=> b!80784 m!82449))

(assert (=> b!80614 d!19799))

(declare-fun b!80788 () Bool)

(declare-fun e!52751 () Option!145)

(assert (=> b!80788 (= e!52751 None!143)))

(declare-fun b!80787 () Bool)

(assert (=> b!80787 (= e!52751 (getValueByKey!139 (t!5156 (toList!730 lt!37517)) (_1!1095 lt!37209)))))

(declare-fun d!19801 () Bool)

(declare-fun c!12657 () Bool)

(assert (=> d!19801 (= c!12657 (and ((_ is Cons!1493) (toList!730 lt!37517)) (= (_1!1095 (h!2082 (toList!730 lt!37517))) (_1!1095 lt!37209))))))

(declare-fun e!52750 () Option!145)

(assert (=> d!19801 (= (getValueByKey!139 (toList!730 lt!37517) (_1!1095 lt!37209)) e!52750)))

(declare-fun b!80785 () Bool)

(assert (=> b!80785 (= e!52750 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37517)))))))

(declare-fun b!80786 () Bool)

(assert (=> b!80786 (= e!52750 e!52751)))

(declare-fun c!12658 () Bool)

(assert (=> b!80786 (= c!12658 (and ((_ is Cons!1493) (toList!730 lt!37517)) (not (= (_1!1095 (h!2082 (toList!730 lt!37517))) (_1!1095 lt!37209)))))))

(assert (= (and d!19801 c!12657) b!80785))

(assert (= (and d!19801 (not c!12657)) b!80786))

(assert (= (and b!80786 c!12658) b!80787))

(assert (= (and b!80786 (not c!12658)) b!80788))

(declare-fun m!82451 () Bool)

(assert (=> b!80787 m!82451))

(assert (=> b!80582 d!19801))

(declare-fun d!19803 () Bool)

(declare-fun lt!37649 () Bool)

(assert (=> d!19803 (= lt!37649 (select (content!86 (toList!730 lt!37550)) lt!37209))))

(declare-fun e!52752 () Bool)

(assert (=> d!19803 (= lt!37649 e!52752)))

(declare-fun res!42060 () Bool)

(assert (=> d!19803 (=> (not res!42060) (not e!52752))))

(assert (=> d!19803 (= res!42060 ((_ is Cons!1493) (toList!730 lt!37550)))))

(assert (=> d!19803 (= (contains!742 (toList!730 lt!37550) lt!37209) lt!37649)))

(declare-fun b!80789 () Bool)

(declare-fun e!52753 () Bool)

(assert (=> b!80789 (= e!52752 e!52753)))

(declare-fun res!42059 () Bool)

(assert (=> b!80789 (=> res!42059 e!52753)))

(assert (=> b!80789 (= res!42059 (= (h!2082 (toList!730 lt!37550)) lt!37209))))

(declare-fun b!80790 () Bool)

(assert (=> b!80790 (= e!52753 (contains!742 (t!5156 (toList!730 lt!37550)) lt!37209))))

(assert (= (and d!19803 res!42060) b!80789))

(assert (= (and b!80789 (not res!42059)) b!80790))

(declare-fun m!82453 () Bool)

(assert (=> d!19803 m!82453))

(declare-fun m!82455 () Bool)

(assert (=> d!19803 m!82455))

(declare-fun m!82457 () Bool)

(assert (=> b!80790 m!82457))

(assert (=> b!80623 d!19803))

(declare-fun d!19805 () Bool)

(declare-fun res!42061 () Bool)

(declare-fun e!52754 () Bool)

(assert (=> d!19805 (=> (not res!42061) (not e!52754))))

(assert (=> d!19805 (= res!42061 (simpleValid!56 (v!2610 (underlying!283 thiss!992))))))

(assert (=> d!19805 (= (valid!325 (v!2610 (underlying!283 thiss!992))) e!52754)))

(declare-fun b!80791 () Bool)

(declare-fun res!42062 () Bool)

(assert (=> b!80791 (=> (not res!42062) (not e!52754))))

(assert (=> b!80791 (= res!42062 (= (arrayCountValidKeys!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000000 (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))) (_size!417 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun b!80792 () Bool)

(declare-fun res!42063 () Bool)

(assert (=> b!80792 (=> (not res!42063) (not e!52754))))

(assert (=> b!80792 (= res!42063 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun b!80793 () Bool)

(assert (=> b!80793 (= e!52754 (arrayNoDuplicates!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000000 Nil!1495))))

(assert (= (and d!19805 res!42061) b!80791))

(assert (= (and b!80791 res!42062) b!80792))

(assert (= (and b!80792 res!42063) b!80793))

(declare-fun m!82459 () Bool)

(assert (=> d!19805 m!82459))

(declare-fun m!82461 () Bool)

(assert (=> b!80791 m!82461))

(declare-fun m!82463 () Bool)

(assert (=> b!80792 m!82463))

(declare-fun m!82465 () Bool)

(assert (=> b!80793 m!82465))

(assert (=> d!19685 d!19805))

(declare-fun d!19807 () Bool)

(declare-fun e!52755 () Bool)

(assert (=> d!19807 e!52755))

(declare-fun res!42064 () Bool)

(assert (=> d!19807 (=> res!42064 e!52755)))

(declare-fun lt!37651 () Bool)

(assert (=> d!19807 (= res!42064 (not lt!37651))))

(declare-fun lt!37650 () Bool)

(assert (=> d!19807 (= lt!37651 lt!37650)))

(declare-fun lt!37652 () Unit!2322)

(declare-fun e!52756 () Unit!2322)

(assert (=> d!19807 (= lt!37652 e!52756)))

(declare-fun c!12659 () Bool)

(assert (=> d!19807 (= c!12659 lt!37650)))

(assert (=> d!19807 (= lt!37650 (containsKey!142 (toList!730 lt!37562) (_1!1095 lt!37212)))))

(assert (=> d!19807 (= (contains!739 lt!37562 (_1!1095 lt!37212)) lt!37651)))

(declare-fun b!80794 () Bool)

(declare-fun lt!37653 () Unit!2322)

(assert (=> b!80794 (= e!52756 lt!37653)))

(assert (=> b!80794 (= lt!37653 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37562) (_1!1095 lt!37212)))))

(assert (=> b!80794 (isDefined!91 (getValueByKey!139 (toList!730 lt!37562) (_1!1095 lt!37212)))))

(declare-fun b!80795 () Bool)

(declare-fun Unit!2342 () Unit!2322)

(assert (=> b!80795 (= e!52756 Unit!2342)))

(declare-fun b!80796 () Bool)

(assert (=> b!80796 (= e!52755 (isDefined!91 (getValueByKey!139 (toList!730 lt!37562) (_1!1095 lt!37212))))))

(assert (= (and d!19807 c!12659) b!80794))

(assert (= (and d!19807 (not c!12659)) b!80795))

(assert (= (and d!19807 (not res!42064)) b!80796))

(declare-fun m!82467 () Bool)

(assert (=> d!19807 m!82467))

(declare-fun m!82469 () Bool)

(assert (=> b!80794 m!82469))

(assert (=> b!80794 m!82189))

(assert (=> b!80794 m!82189))

(declare-fun m!82471 () Bool)

(assert (=> b!80794 m!82471))

(assert (=> b!80796 m!82189))

(assert (=> b!80796 m!82189))

(assert (=> b!80796 m!82471))

(assert (=> d!19729 d!19807))

(declare-fun b!80800 () Bool)

(declare-fun e!52758 () Option!145)

(assert (=> b!80800 (= e!52758 None!143)))

(declare-fun b!80799 () Bool)

(assert (=> b!80799 (= e!52758 (getValueByKey!139 (t!5156 lt!37560) (_1!1095 lt!37212)))))

(declare-fun d!19809 () Bool)

(declare-fun c!12660 () Bool)

(assert (=> d!19809 (= c!12660 (and ((_ is Cons!1493) lt!37560) (= (_1!1095 (h!2082 lt!37560)) (_1!1095 lt!37212))))))

(declare-fun e!52757 () Option!145)

(assert (=> d!19809 (= (getValueByKey!139 lt!37560 (_1!1095 lt!37212)) e!52757)))

(declare-fun b!80797 () Bool)

(assert (=> b!80797 (= e!52757 (Some!144 (_2!1095 (h!2082 lt!37560))))))

(declare-fun b!80798 () Bool)

(assert (=> b!80798 (= e!52757 e!52758)))

(declare-fun c!12661 () Bool)

(assert (=> b!80798 (= c!12661 (and ((_ is Cons!1493) lt!37560) (not (= (_1!1095 (h!2082 lt!37560)) (_1!1095 lt!37212)))))))

(assert (= (and d!19809 c!12660) b!80797))

(assert (= (and d!19809 (not c!12660)) b!80798))

(assert (= (and b!80798 c!12661) b!80799))

(assert (= (and b!80798 (not c!12661)) b!80800))

(declare-fun m!82473 () Bool)

(assert (=> b!80799 m!82473))

(assert (=> d!19729 d!19809))

(declare-fun d!19811 () Bool)

(assert (=> d!19811 (= (getValueByKey!139 lt!37560 (_1!1095 lt!37212)) (Some!144 (_2!1095 lt!37212)))))

(declare-fun lt!37654 () Unit!2322)

(assert (=> d!19811 (= lt!37654 (choose!478 lt!37560 (_1!1095 lt!37212) (_2!1095 lt!37212)))))

(declare-fun e!52759 () Bool)

(assert (=> d!19811 e!52759))

(declare-fun res!42065 () Bool)

(assert (=> d!19811 (=> (not res!42065) (not e!52759))))

(assert (=> d!19811 (= res!42065 (isStrictlySorted!283 lt!37560))))

(assert (=> d!19811 (= (lemmaContainsTupThenGetReturnValue!56 lt!37560 (_1!1095 lt!37212) (_2!1095 lt!37212)) lt!37654)))

(declare-fun b!80801 () Bool)

(declare-fun res!42066 () Bool)

(assert (=> b!80801 (=> (not res!42066) (not e!52759))))

(assert (=> b!80801 (= res!42066 (containsKey!142 lt!37560 (_1!1095 lt!37212)))))

(declare-fun b!80802 () Bool)

(assert (=> b!80802 (= e!52759 (contains!742 lt!37560 (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(assert (= (and d!19811 res!42065) b!80801))

(assert (= (and b!80801 res!42066) b!80802))

(assert (=> d!19811 m!82183))

(declare-fun m!82475 () Bool)

(assert (=> d!19811 m!82475))

(declare-fun m!82477 () Bool)

(assert (=> d!19811 m!82477))

(declare-fun m!82479 () Bool)

(assert (=> b!80801 m!82479))

(declare-fun m!82481 () Bool)

(assert (=> b!80802 m!82481))

(assert (=> d!19729 d!19811))

(declare-fun bm!7500 () Bool)

(declare-fun call!7504 () List!1497)

(declare-fun call!7505 () List!1497)

(assert (=> bm!7500 (= call!7504 call!7505)))

(declare-fun b!80803 () Bool)

(declare-fun e!52760 () Bool)

(declare-fun lt!37655 () List!1497)

(assert (=> b!80803 (= e!52760 (contains!742 lt!37655 (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(declare-fun b!80804 () Bool)

(declare-fun e!52761 () List!1497)

(declare-fun e!52764 () List!1497)

(assert (=> b!80804 (= e!52761 e!52764)))

(declare-fun c!12665 () Bool)

(assert (=> b!80804 (= c!12665 (and ((_ is Cons!1493) (toList!730 lt!37215)) (= (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 lt!37212))))))

(declare-fun bm!7501 () Bool)

(declare-fun call!7503 () List!1497)

(assert (=> bm!7501 (= call!7503 call!7504)))

(declare-fun d!19813 () Bool)

(assert (=> d!19813 e!52760))

(declare-fun res!42067 () Bool)

(assert (=> d!19813 (=> (not res!42067) (not e!52760))))

(assert (=> d!19813 (= res!42067 (isStrictlySorted!283 lt!37655))))

(assert (=> d!19813 (= lt!37655 e!52761)))

(declare-fun c!12662 () Bool)

(assert (=> d!19813 (= c!12662 (and ((_ is Cons!1493) (toList!730 lt!37215)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 lt!37212))))))

(assert (=> d!19813 (isStrictlySorted!283 (toList!730 lt!37215))))

(assert (=> d!19813 (= (insertStrictlySorted!59 (toList!730 lt!37215) (_1!1095 lt!37212) (_2!1095 lt!37212)) lt!37655)))

(declare-fun e!52762 () List!1497)

(declare-fun bm!7502 () Bool)

(assert (=> bm!7502 (= call!7505 ($colon$colon!69 e!52762 (ite c!12662 (h!2082 (toList!730 lt!37215)) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212)))))))

(declare-fun c!12664 () Bool)

(assert (=> bm!7502 (= c!12664 c!12662)))

(declare-fun b!80805 () Bool)

(declare-fun e!52763 () List!1497)

(assert (=> b!80805 (= e!52763 call!7503)))

(declare-fun b!80806 () Bool)

(declare-fun res!42068 () Bool)

(assert (=> b!80806 (=> (not res!42068) (not e!52760))))

(assert (=> b!80806 (= res!42068 (containsKey!142 lt!37655 (_1!1095 lt!37212)))))

(declare-fun b!80807 () Bool)

(declare-fun c!12663 () Bool)

(assert (=> b!80807 (= c!12663 (and ((_ is Cons!1493) (toList!730 lt!37215)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 lt!37212))))))

(assert (=> b!80807 (= e!52764 e!52763)))

(declare-fun b!80808 () Bool)

(assert (=> b!80808 (= e!52762 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37215)) (_1!1095 lt!37212) (_2!1095 lt!37212)))))

(declare-fun b!80809 () Bool)

(assert (=> b!80809 (= e!52764 call!7504)))

(declare-fun b!80810 () Bool)

(assert (=> b!80810 (= e!52763 call!7503)))

(declare-fun b!80811 () Bool)

(assert (=> b!80811 (= e!52762 (ite c!12665 (t!5156 (toList!730 lt!37215)) (ite c!12663 (Cons!1493 (h!2082 (toList!730 lt!37215)) (t!5156 (toList!730 lt!37215))) Nil!1494)))))

(declare-fun b!80812 () Bool)

(assert (=> b!80812 (= e!52761 call!7505)))

(assert (= (and d!19813 c!12662) b!80812))

(assert (= (and d!19813 (not c!12662)) b!80804))

(assert (= (and b!80804 c!12665) b!80809))

(assert (= (and b!80804 (not c!12665)) b!80807))

(assert (= (and b!80807 c!12663) b!80810))

(assert (= (and b!80807 (not c!12663)) b!80805))

(assert (= (or b!80810 b!80805) bm!7501))

(assert (= (or b!80809 bm!7501) bm!7500))

(assert (= (or b!80812 bm!7500) bm!7502))

(assert (= (and bm!7502 c!12664) b!80808))

(assert (= (and bm!7502 (not c!12664)) b!80811))

(assert (= (and d!19813 res!42067) b!80806))

(assert (= (and b!80806 res!42068) b!80803))

(declare-fun m!82483 () Bool)

(assert (=> b!80808 m!82483))

(declare-fun m!82485 () Bool)

(assert (=> bm!7502 m!82485))

(declare-fun m!82487 () Bool)

(assert (=> b!80803 m!82487))

(declare-fun m!82489 () Bool)

(assert (=> d!19813 m!82489))

(declare-fun m!82491 () Bool)

(assert (=> d!19813 m!82491))

(declare-fun m!82493 () Bool)

(assert (=> b!80806 m!82493))

(assert (=> d!19729 d!19813))

(declare-fun d!19815 () Bool)

(assert (=> d!19815 (= (+!101 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37404 lt!37223 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37658 () Unit!2322)

(declare-fun choose!479 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 V!3001 Int) Unit!2322)

(assert (=> d!19815 (= lt!37658 (choose!479 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) lt!37404 (zeroValue!2188 newMap!16) lt!37223 (minValue!2188 newMap!16) (defaultEntry!2292 newMap!16)))))

(assert (=> d!19815 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!19815 (= (lemmaChangeZeroKeyThenAddPairToListMap!29 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) lt!37404 (zeroValue!2188 newMap!16) lt!37223 (minValue!2188 newMap!16) (defaultEntry!2292 newMap!16)) lt!37658)))

(declare-fun bs!3424 () Bool)

(assert (= bs!3424 d!19815))

(declare-fun m!82495 () Bool)

(assert (=> bs!3424 m!82495))

(assert (=> bs!3424 m!81949))

(assert (=> bs!3424 m!82223))

(assert (=> bs!3424 m!81949))

(declare-fun m!82497 () Bool)

(assert (=> bs!3424 m!82497))

(declare-fun m!82499 () Bool)

(assert (=> bs!3424 m!82499))

(assert (=> b!80433 d!19815))

(declare-fun b!80813 () Bool)

(declare-fun e!52767 () Bool)

(declare-fun call!7506 () Bool)

(assert (=> b!80813 (= e!52767 call!7506)))

(declare-fun b!80814 () Bool)

(declare-fun e!52766 () Bool)

(assert (=> b!80814 (= e!52766 e!52767)))

(declare-fun c!12666 () Bool)

(assert (=> b!80814 (= c!12666 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!19817 () Bool)

(declare-fun res!42071 () Bool)

(declare-fun e!52768 () Bool)

(assert (=> d!19817 (=> res!42071 e!52768)))

(assert (=> d!19817 (= res!42071 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> d!19817 (= (arrayNoDuplicates!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)) e!52768)))

(declare-fun b!80815 () Bool)

(assert (=> b!80815 (= e!52768 e!52766)))

(declare-fun res!42070 () Bool)

(assert (=> b!80815 (=> (not res!42070) (not e!52766))))

(declare-fun e!52765 () Bool)

(assert (=> b!80815 (= res!42070 (not e!52765))))

(declare-fun res!42069 () Bool)

(assert (=> b!80815 (=> (not res!42069) (not e!52765))))

(assert (=> b!80815 (= res!42069 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!80816 () Bool)

(assert (=> b!80816 (= e!52765 (contains!741 (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!80817 () Bool)

(assert (=> b!80817 (= e!52767 call!7506)))

(declare-fun bm!7503 () Bool)

(assert (=> bm!7503 (= call!7506 (arrayNoDuplicates!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12666 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495))))))

(assert (= (and d!19817 (not res!42071)) b!80815))

(assert (= (and b!80815 res!42069) b!80816))

(assert (= (and b!80815 res!42070) b!80814))

(assert (= (and b!80814 c!12666) b!80817))

(assert (= (and b!80814 (not c!12666)) b!80813))

(assert (= (or b!80817 b!80813) bm!7503))

(declare-fun m!82501 () Bool)

(assert (=> b!80814 m!82501))

(assert (=> b!80814 m!82501))

(declare-fun m!82503 () Bool)

(assert (=> b!80814 m!82503))

(assert (=> b!80815 m!82501))

(assert (=> b!80815 m!82501))

(assert (=> b!80815 m!82503))

(assert (=> b!80816 m!82501))

(assert (=> b!80816 m!82501))

(declare-fun m!82505 () Bool)

(assert (=> b!80816 m!82505))

(assert (=> bm!7503 m!82501))

(declare-fun m!82507 () Bool)

(assert (=> bm!7503 m!82507))

(assert (=> bm!7480 d!19817))

(declare-fun b!80852 () Bool)

(declare-fun e!52790 () Unit!2322)

(declare-fun Unit!2343 () Unit!2322)

(assert (=> b!80852 (= e!52790 Unit!2343)))

(declare-fun b!80853 () Bool)

(declare-fun res!42094 () Bool)

(declare-fun e!52787 () Bool)

(assert (=> b!80853 (=> (not res!42094) (not e!52787))))

(declare-fun lt!37745 () tuple2!2166)

(assert (=> b!80853 (= res!42094 (valid!325 (_2!1094 lt!37745)))))

(declare-fun bm!7512 () Bool)

(declare-fun call!7516 () Bool)

(assert (=> bm!7512 (= call!7516 (arrayContainsKey!0 (_keys!3956 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!80854 () Bool)

(assert (=> b!80854 (= e!52787 (= (map!1186 (_2!1094 lt!37745)) (+!101 (map!1186 newMap!16) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!80855 () Bool)

(declare-fun e!52786 () Unit!2322)

(declare-fun lt!37723 () Unit!2322)

(assert (=> b!80855 (= e!52786 lt!37723)))

(assert (=> b!80855 (= lt!37723 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37730 () SeekEntryResult!235)

(declare-fun call!7517 () SeekEntryResult!235)

(assert (=> b!80855 (= lt!37730 call!7517)))

(declare-fun c!12678 () Bool)

(assert (=> b!80855 (= c!12678 ((_ is MissingZero!235) lt!37730))))

(declare-fun e!52789 () Bool)

(assert (=> b!80855 e!52789))

(declare-fun b!80856 () Bool)

(declare-fun res!42095 () Bool)

(assert (=> b!80856 (= res!42095 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3078 lt!37730)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52792 () Bool)

(assert (=> b!80856 (=> (not res!42095) (not e!52792))))

(declare-fun bm!7513 () Bool)

(declare-fun call!7515 () Bool)

(declare-fun call!7518 () Bool)

(assert (=> bm!7513 (= call!7515 call!7518)))

(declare-fun bm!7514 () Bool)

(assert (=> bm!7514 (= call!7517 (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(declare-fun b!80857 () Bool)

(declare-fun res!42096 () Bool)

(assert (=> b!80857 (= res!42096 call!7518)))

(declare-fun e!52788 () Bool)

(assert (=> b!80857 (=> (not res!42096) (not e!52788))))

(declare-fun b!80859 () Bool)

(assert (=> b!80859 (= e!52792 (not call!7516))))

(declare-fun b!80860 () Bool)

(declare-fun res!42090 () Bool)

(declare-fun e!52791 () Bool)

(assert (=> b!80860 (=> (not res!42090) (not e!52791))))

(assert (=> b!80860 (= res!42090 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3075 lt!37730)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80861 () Bool)

(declare-fun e!52785 () Bool)

(assert (=> b!80861 (= e!52785 e!52792)))

(declare-fun res!42098 () Bool)

(assert (=> b!80861 (= res!42098 call!7515)))

(assert (=> b!80861 (=> (not res!42098) (not e!52792))))

(declare-fun b!80862 () Bool)

(declare-fun Unit!2344 () Unit!2322)

(assert (=> b!80862 (= e!52790 Unit!2344)))

(declare-fun lt!37726 () Unit!2322)

(declare-fun lemmaArrayContainsKeyThenInListMap!17 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) (_ BitVec 32) Int) Unit!2322)

(assert (=> b!80862 (= lt!37726 (lemmaArrayContainsKeyThenInListMap!17 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(assert (=> b!80862 (contains!739 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))

(declare-fun lt!37725 () Unit!2322)

(assert (=> b!80862 (= lt!37725 lt!37726)))

(assert (=> b!80862 false))

(declare-fun b!80863 () Bool)

(declare-fun res!42091 () Bool)

(assert (=> b!80863 (=> (not res!42091) (not e!52787))))

(assert (=> b!80863 (= res!42091 (contains!739 (map!1186 (_2!1094 lt!37745)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!80864 () Bool)

(assert (=> b!80864 (= e!52791 (not call!7516))))

(declare-fun d!19819 () Bool)

(assert (=> d!19819 e!52787))

(declare-fun res!42093 () Bool)

(assert (=> d!19819 (=> (not res!42093) (not e!52787))))

(assert (=> d!19819 (= res!42093 (_1!1094 lt!37745))))

(assert (=> d!19819 (= lt!37745 (tuple2!2167 true (LongMapFixedSize!737 (defaultEntry!2292 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (bvadd (_size!417 newMap!16) #b00000000000000000000000000000001) (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (_vacant!417 newMap!16))))))

(declare-fun lt!37731 () Unit!2322)

(declare-fun lt!37729 () Unit!2322)

(assert (=> d!19819 (= lt!37731 lt!37729)))

(declare-fun lt!37719 () array!3973)

(declare-fun lt!37724 () array!3971)

(assert (=> d!19819 (contains!739 (getCurrentListMap!426 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405))))))

(assert (=> d!19819 (= lt!37729 (lemmaValidKeyInArrayIsInListMap!89 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (defaultEntry!2292 newMap!16)))))

(assert (=> d!19819 (= lt!37719 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))))))

(assert (=> d!19819 (= lt!37724 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))))))

(declare-fun lt!37727 () Unit!2322)

(declare-fun lt!37728 () Unit!2322)

(assert (=> d!19819 (= lt!37727 lt!37728)))

(declare-fun lt!37733 () array!3971)

(assert (=> d!19819 (= (arrayCountValidKeys!0 lt!37733 (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (bvadd (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3971 (_ BitVec 32)) Unit!2322)

(assert (=> d!19819 (= lt!37728 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!37733 (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405))))))

(assert (=> d!19819 (= lt!37733 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))))))

(declare-fun lt!37721 () Unit!2322)

(declare-fun lt!37735 () Unit!2322)

(assert (=> d!19819 (= lt!37721 lt!37735)))

(declare-fun lt!37732 () array!3971)

(assert (=> d!19819 (arrayContainsKey!0 lt!37732 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3971 (_ BitVec 64) (_ BitVec 32)) Unit!2322)

(assert (=> d!19819 (= lt!37735 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!37732 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405))))))

(assert (=> d!19819 (= lt!37732 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))))))

(declare-fun lt!37748 () Unit!2322)

(declare-fun lt!37738 () Unit!2322)

(assert (=> d!19819 (= lt!37748 lt!37738)))

(assert (=> d!19819 (= (+!101 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (getCurrentListMap!426 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!17 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) (_ BitVec 64) V!3001 Int) Unit!2322)

(assert (=> d!19819 (= lt!37738 (lemmaAddValidKeyToArrayThenAddPairToListMap!17 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37720 () Unit!2322)

(declare-fun lt!37740 () Unit!2322)

(assert (=> d!19819 (= lt!37720 lt!37740)))

(assert (=> d!19819 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (mask!6298 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3971 (_ BitVec 32) (_ BitVec 32)) Unit!2322)

(assert (=> d!19819 (= lt!37740 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (mask!6298 newMap!16)))))

(declare-fun lt!37746 () Unit!2322)

(declare-fun lt!37736 () Unit!2322)

(assert (=> d!19819 (= lt!37746 lt!37736)))

(assert (=> d!19819 (= (arrayCountValidKeys!0 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3956 newMap!16) #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3971 (_ BitVec 32) (_ BitVec 64)) Unit!2322)

(assert (=> d!19819 (= lt!37736 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3956 newMap!16) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun lt!37747 () Unit!2322)

(declare-fun lt!37734 () Unit!2322)

(assert (=> d!19819 (= lt!37747 lt!37734)))

(declare-fun lt!37739 () (_ BitVec 32))

(declare-fun lt!37722 () List!1498)

(assert (=> d!19819 (arrayNoDuplicates!0 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) lt!37739 lt!37722)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3971 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1498) Unit!2322)

(assert (=> d!19819 (= lt!37734 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3956 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) lt!37739 lt!37722))))

(assert (=> d!19819 (= lt!37722 Nil!1495)))

(assert (=> d!19819 (= lt!37739 #b00000000000000000000000000000000)))

(declare-fun lt!37741 () Unit!2322)

(assert (=> d!19819 (= lt!37741 e!52790)))

(declare-fun c!12675 () Bool)

(assert (=> d!19819 (= c!12675 (arrayContainsKey!0 (_keys!3956 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!37737 () Unit!2322)

(assert (=> d!19819 (= lt!37737 e!52786)))

(declare-fun c!12677 () Bool)

(assert (=> d!19819 (= c!12677 (contains!739 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!19819 (valid!325 newMap!16)))

(assert (=> d!19819 (= (updateHelperNewKey!29 newMap!16 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405))) lt!37745)))

(declare-fun b!80858 () Bool)

(declare-fun c!12676 () Bool)

(assert (=> b!80858 (= c!12676 ((_ is MissingVacant!235) lt!37730))))

(assert (=> b!80858 (= e!52789 e!52785)))

(declare-fun b!80865 () Bool)

(declare-fun Unit!2345 () Unit!2322)

(assert (=> b!80865 (= e!52786 Unit!2345)))

(declare-fun lt!37743 () Unit!2322)

(assert (=> b!80865 (= lt!37743 (lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37742 () SeekEntryResult!235)

(assert (=> b!80865 (= lt!37742 call!7517)))

(declare-fun res!42092 () Bool)

(assert (=> b!80865 (= res!42092 ((_ is Found!235) lt!37742))))

(assert (=> b!80865 (=> (not res!42092) (not e!52788))))

(assert (=> b!80865 e!52788))

(declare-fun lt!37744 () Unit!2322)

(assert (=> b!80865 (= lt!37744 lt!37743)))

(assert (=> b!80865 false))

(declare-fun b!80866 () Bool)

(assert (=> b!80866 (= e!52785 ((_ is Undefined!235) lt!37730))))

(declare-fun b!80867 () Bool)

(declare-fun res!42097 () Bool)

(assert (=> b!80867 (=> (not res!42097) (not e!52791))))

(assert (=> b!80867 (= res!42097 call!7515)))

(assert (=> b!80867 (= e!52789 e!52791)))

(declare-fun b!80868 () Bool)

(assert (=> b!80868 (= e!52788 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37742)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun bm!7515 () Bool)

(assert (=> bm!7515 (= call!7518 (inRange!0 (ite c!12677 (index!3076 lt!37742) (ite c!12678 (index!3075 lt!37730) (index!3078 lt!37730))) (mask!6298 newMap!16)))))

(assert (= (and d!19819 c!12677) b!80865))

(assert (= (and d!19819 (not c!12677)) b!80855))

(assert (= (and b!80865 res!42092) b!80857))

(assert (= (and b!80857 res!42096) b!80868))

(assert (= (and b!80855 c!12678) b!80867))

(assert (= (and b!80855 (not c!12678)) b!80858))

(assert (= (and b!80867 res!42097) b!80860))

(assert (= (and b!80860 res!42090) b!80864))

(assert (= (and b!80858 c!12676) b!80861))

(assert (= (and b!80858 (not c!12676)) b!80866))

(assert (= (and b!80861 res!42098) b!80856))

(assert (= (and b!80856 res!42095) b!80859))

(assert (= (or b!80867 b!80861) bm!7513))

(assert (= (or b!80864 b!80859) bm!7512))

(assert (= (or b!80857 bm!7513) bm!7515))

(assert (= (or b!80865 b!80855) bm!7514))

(assert (= (and d!19819 c!12675) b!80862))

(assert (= (and d!19819 (not c!12675)) b!80852))

(assert (= (and d!19819 res!42093) b!80853))

(assert (= (and b!80853 res!42094) b!80863))

(assert (= (and b!80863 res!42091) b!80854))

(assert (=> bm!7512 m!81737))

(assert (=> bm!7512 m!81961))

(declare-fun m!82509 () Bool)

(assert (=> b!80856 m!82509))

(assert (=> b!80862 m!81737))

(declare-fun m!82511 () Bool)

(assert (=> b!80862 m!82511))

(assert (=> b!80862 m!81949))

(assert (=> b!80862 m!81949))

(assert (=> b!80862 m!81737))

(declare-fun m!82513 () Bool)

(assert (=> b!80862 m!82513))

(assert (=> bm!7514 m!81737))

(assert (=> bm!7514 m!81959))

(assert (=> b!80855 m!81737))

(assert (=> b!80855 m!81943))

(declare-fun m!82515 () Bool)

(assert (=> b!80860 m!82515))

(declare-fun m!82517 () Bool)

(assert (=> b!80854 m!82517))

(assert (=> b!80854 m!81783))

(assert (=> b!80854 m!81783))

(declare-fun m!82519 () Bool)

(assert (=> b!80854 m!82519))

(declare-fun m!82521 () Bool)

(assert (=> bm!7515 m!82521))

(assert (=> b!80865 m!81737))

(assert (=> b!80865 m!81981))

(assert (=> b!80863 m!82517))

(assert (=> b!80863 m!82517))

(assert (=> b!80863 m!81737))

(declare-fun m!82523 () Bool)

(assert (=> b!80863 m!82523))

(declare-fun m!82525 () Bool)

(assert (=> b!80853 m!82525))

(declare-fun m!82527 () Bool)

(assert (=> d!19819 m!82527))

(assert (=> d!19819 m!81949))

(assert (=> d!19819 m!81737))

(assert (=> d!19819 m!82513))

(assert (=> d!19819 m!81737))

(declare-fun m!82529 () Bool)

(assert (=> d!19819 m!82529))

(declare-fun m!82531 () Bool)

(assert (=> d!19819 m!82531))

(assert (=> d!19819 m!81949))

(declare-fun m!82533 () Bool)

(assert (=> d!19819 m!82533))

(assert (=> d!19819 m!81737))

(declare-fun m!82535 () Bool)

(assert (=> d!19819 m!82535))

(assert (=> d!19819 m!81781))

(assert (=> d!19819 m!81737))

(declare-fun m!82537 () Bool)

(assert (=> d!19819 m!82537))

(declare-fun m!82539 () Bool)

(assert (=> d!19819 m!82539))

(assert (=> d!19819 m!81737))

(declare-fun m!82541 () Bool)

(assert (=> d!19819 m!82541))

(declare-fun m!82543 () Bool)

(assert (=> d!19819 m!82543))

(assert (=> d!19819 m!81737))

(declare-fun m!82545 () Bool)

(assert (=> d!19819 m!82545))

(assert (=> d!19819 m!81737))

(declare-fun m!82547 () Bool)

(assert (=> d!19819 m!82547))

(declare-fun m!82549 () Bool)

(assert (=> d!19819 m!82549))

(declare-fun m!82551 () Bool)

(assert (=> d!19819 m!82551))

(declare-fun m!82553 () Bool)

(assert (=> d!19819 m!82553))

(assert (=> d!19819 m!81949))

(assert (=> d!19819 m!81737))

(assert (=> d!19819 m!81961))

(assert (=> d!19819 m!82045))

(declare-fun m!82555 () Bool)

(assert (=> d!19819 m!82555))

(declare-fun m!82557 () Bool)

(assert (=> d!19819 m!82557))

(assert (=> d!19819 m!82555))

(assert (=> d!19819 m!82531))

(declare-fun m!82559 () Bool)

(assert (=> d!19819 m!82559))

(declare-fun m!82561 () Bool)

(assert (=> d!19819 m!82561))

(declare-fun m!82563 () Bool)

(assert (=> d!19819 m!82563))

(declare-fun m!82565 () Bool)

(assert (=> b!80868 m!82565))

(assert (=> bm!7444 d!19819))

(declare-fun d!19821 () Bool)

(assert (=> d!19821 (= (+!101 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37407 (zeroValue!2188 newMap!16) lt!37223 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37751 () Unit!2322)

(declare-fun choose!480 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 V!3001 Int) Unit!2322)

(assert (=> d!19821 (= lt!37751 (choose!480 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) lt!37407 (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) lt!37223 (defaultEntry!2292 newMap!16)))))

(assert (=> d!19821 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!19821 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!29 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) lt!37407 (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) lt!37223 (defaultEntry!2292 newMap!16)) lt!37751)))

(declare-fun bs!3425 () Bool)

(assert (= bs!3425 d!19821))

(assert (=> bs!3425 m!82223))

(declare-fun m!82567 () Bool)

(assert (=> bs!3425 m!82567))

(assert (=> bs!3425 m!81949))

(assert (=> bs!3425 m!81949))

(declare-fun m!82569 () Bool)

(assert (=> bs!3425 m!82569))

(declare-fun m!82571 () Bool)

(assert (=> bs!3425 m!82571))

(assert (=> b!80461 d!19821))

(declare-fun d!19823 () Bool)

(declare-fun res!42099 () Bool)

(declare-fun e!52793 () Bool)

(assert (=> d!19823 (=> res!42099 e!52793)))

(assert (=> d!19823 (= res!42099 (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!19823 (= (arrayContainsKey!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!52793)))

(declare-fun b!80869 () Bool)

(declare-fun e!52794 () Bool)

(assert (=> b!80869 (= e!52793 e!52794)))

(declare-fun res!42100 () Bool)

(assert (=> b!80869 (=> (not res!42100) (not e!52794))))

(assert (=> b!80869 (= res!42100 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!80870 () Bool)

(assert (=> b!80870 (= e!52794 (arrayContainsKey!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!19823 (not res!42099)) b!80869))

(assert (= (and b!80869 res!42100) b!80870))

(assert (=> d!19823 m!82295))

(assert (=> b!80870 m!81737))

(declare-fun m!82573 () Bool)

(assert (=> b!80870 m!82573))

(assert (=> b!80554 d!19823))

(declare-fun d!19825 () Bool)

(declare-fun lt!37752 () Bool)

(assert (=> d!19825 (= lt!37752 (select (content!86 (toList!730 lt!37554)) lt!37210))))

(declare-fun e!52795 () Bool)

(assert (=> d!19825 (= lt!37752 e!52795)))

(declare-fun res!42102 () Bool)

(assert (=> d!19825 (=> (not res!42102) (not e!52795))))

(assert (=> d!19825 (= res!42102 ((_ is Cons!1493) (toList!730 lt!37554)))))

(assert (=> d!19825 (= (contains!742 (toList!730 lt!37554) lt!37210) lt!37752)))

(declare-fun b!80871 () Bool)

(declare-fun e!52796 () Bool)

(assert (=> b!80871 (= e!52795 e!52796)))

(declare-fun res!42101 () Bool)

(assert (=> b!80871 (=> res!42101 e!52796)))

(assert (=> b!80871 (= res!42101 (= (h!2082 (toList!730 lt!37554)) lt!37210))))

(declare-fun b!80872 () Bool)

(assert (=> b!80872 (= e!52796 (contains!742 (t!5156 (toList!730 lt!37554)) lt!37210))))

(assert (= (and d!19825 res!42102) b!80871))

(assert (= (and b!80871 (not res!42101)) b!80872))

(declare-fun m!82575 () Bool)

(assert (=> d!19825 m!82575))

(declare-fun m!82577 () Bool)

(assert (=> d!19825 m!82577))

(declare-fun m!82579 () Bool)

(assert (=> b!80872 m!82579))

(assert (=> b!80625 d!19825))

(assert (=> bm!7483 d!19763))

(declare-fun d!19827 () Bool)

(assert (=> d!19827 (= (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80619 d!19827))

(declare-fun b!80881 () Bool)

(declare-fun e!52801 () (_ BitVec 32))

(declare-fun call!7521 () (_ BitVec 32))

(assert (=> b!80881 (= e!52801 (bvadd #b00000000000000000000000000000001 call!7521))))

(declare-fun b!80882 () Bool)

(assert (=> b!80882 (= e!52801 call!7521)))

(declare-fun bm!7518 () Bool)

(assert (=> bm!7518 (= call!7521 (arrayCountValidKeys!0 (_keys!3956 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2134 (_keys!3956 newMap!16))))))

(declare-fun d!19829 () Bool)

(declare-fun lt!37755 () (_ BitVec 32))

(assert (=> d!19829 (and (bvsge lt!37755 #b00000000000000000000000000000000) (bvsle lt!37755 (bvsub (size!2134 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!52802 () (_ BitVec 32))

(assert (=> d!19829 (= lt!37755 e!52802)))

(declare-fun c!12683 () Bool)

(assert (=> d!19829 (= c!12683 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!19829 (and (bvsle #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2134 (_keys!3956 newMap!16)) (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!19829 (= (arrayCountValidKeys!0 (_keys!3956 newMap!16) #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) lt!37755)))

(declare-fun b!80883 () Bool)

(assert (=> b!80883 (= e!52802 #b00000000000000000000000000000000)))

(declare-fun b!80884 () Bool)

(assert (=> b!80884 (= e!52802 e!52801)))

(declare-fun c!12684 () Bool)

(assert (=> b!80884 (= c!12684 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!19829 c!12683) b!80883))

(assert (= (and d!19829 (not c!12683)) b!80884))

(assert (= (and b!80884 c!12684) b!80881))

(assert (= (and b!80884 (not c!12684)) b!80882))

(assert (= (or b!80881 b!80882) bm!7518))

(declare-fun m!82581 () Bool)

(assert (=> bm!7518 m!82581))

(assert (=> b!80884 m!82381))

(assert (=> b!80884 m!82381))

(declare-fun m!82583 () Bool)

(assert (=> b!80884 m!82583))

(assert (=> b!80540 d!19829))

(assert (=> b!80520 d!19713))

(declare-fun d!19831 () Bool)

(assert (=> d!19831 (= (apply!80 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37488) (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37488)))))

(declare-fun bs!3426 () Bool)

(assert (= bs!3426 d!19831))

(declare-fun m!82585 () Bool)

(assert (=> bs!3426 m!82585))

(assert (=> bs!3426 m!82585))

(declare-fun m!82587 () Bool)

(assert (=> bs!3426 m!82587))

(assert (=> b!80520 d!19831))

(declare-fun d!19833 () Bool)

(assert (=> d!19833 (= (apply!80 lt!37477 lt!37488) (get!1192 (getValueByKey!139 (toList!730 lt!37477) lt!37488)))))

(declare-fun bs!3427 () Bool)

(assert (= bs!3427 d!19833))

(declare-fun m!82589 () Bool)

(assert (=> bs!3427 m!82589))

(assert (=> bs!3427 m!82589))

(declare-fun m!82591 () Bool)

(assert (=> bs!3427 m!82591))

(assert (=> b!80520 d!19833))

(declare-fun d!19835 () Bool)

(assert (=> d!19835 (= (apply!80 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37488) (apply!80 lt!37477 lt!37488))))

(declare-fun lt!37758 () Unit!2322)

(declare-fun choose!481 (ListLongMap!1429 (_ BitVec 64) V!3001 (_ BitVec 64)) Unit!2322)

(assert (=> d!19835 (= lt!37758 (choose!481 lt!37477 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37488))))

(declare-fun e!52805 () Bool)

(assert (=> d!19835 e!52805))

(declare-fun res!42105 () Bool)

(assert (=> d!19835 (=> (not res!42105) (not e!52805))))

(assert (=> d!19835 (= res!42105 (contains!739 lt!37477 lt!37488))))

(assert (=> d!19835 (= (addApplyDifferent!56 lt!37477 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37488) lt!37758)))

(declare-fun b!80888 () Bool)

(assert (=> b!80888 (= e!52805 (not (= lt!37488 lt!37491)))))

(assert (= (and d!19835 res!42105) b!80888))

(assert (=> d!19835 m!82013))

(declare-fun m!82593 () Bool)

(assert (=> d!19835 m!82593))

(assert (=> d!19835 m!82001))

(declare-fun m!82595 () Bool)

(assert (=> d!19835 m!82595))

(assert (=> d!19835 m!82001))

(assert (=> d!19835 m!82007))

(assert (=> b!80520 d!19835))

(declare-fun d!19837 () Bool)

(assert (=> d!19837 (= (apply!80 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37485) (apply!80 lt!37483 lt!37485))))

(declare-fun lt!37759 () Unit!2322)

(assert (=> d!19837 (= lt!37759 (choose!481 lt!37483 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37485))))

(declare-fun e!52806 () Bool)

(assert (=> d!19837 e!52806))

(declare-fun res!42106 () Bool)

(assert (=> d!19837 (=> (not res!42106) (not e!52806))))

(assert (=> d!19837 (= res!42106 (contains!739 lt!37483 lt!37485))))

(assert (=> d!19837 (= (addApplyDifferent!56 lt!37483 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37485) lt!37759)))

(declare-fun b!80889 () Bool)

(assert (=> b!80889 (= e!52806 (not (= lt!37485 lt!37472)))))

(assert (= (and d!19837 res!42106) b!80889))

(assert (=> d!19837 m!81995))

(declare-fun m!82597 () Bool)

(assert (=> d!19837 m!82597))

(assert (=> d!19837 m!81989))

(declare-fun m!82599 () Bool)

(assert (=> d!19837 m!82599))

(assert (=> d!19837 m!81989))

(assert (=> d!19837 m!81991))

(assert (=> b!80520 d!19837))

(declare-fun d!19839 () Bool)

(declare-fun e!52807 () Bool)

(assert (=> d!19839 e!52807))

(declare-fun res!42108 () Bool)

(assert (=> d!19839 (=> (not res!42108) (not e!52807))))

(declare-fun lt!37763 () ListLongMap!1429)

(assert (=> d!19839 (= res!42108 (contains!739 lt!37763 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!37761 () List!1497)

(assert (=> d!19839 (= lt!37763 (ListLongMap!1430 lt!37761))))

(declare-fun lt!37760 () Unit!2322)

(declare-fun lt!37762 () Unit!2322)

(assert (=> d!19839 (= lt!37760 lt!37762)))

(assert (=> d!19839 (= (getValueByKey!139 lt!37761 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19839 (= lt!37762 (lemmaContainsTupThenGetReturnValue!56 lt!37761 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19839 (= lt!37761 (insertStrictlySorted!59 (toList!730 lt!37483) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19839 (= (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37763)))

(declare-fun b!80890 () Bool)

(declare-fun res!42107 () Bool)

(assert (=> b!80890 (=> (not res!42107) (not e!52807))))

(assert (=> b!80890 (= res!42107 (= (getValueByKey!139 (toList!730 lt!37763) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!80891 () Bool)

(assert (=> b!80891 (= e!52807 (contains!742 (toList!730 lt!37763) (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!19839 res!42108) b!80890))

(assert (= (and b!80890 res!42107) b!80891))

(declare-fun m!82601 () Bool)

(assert (=> d!19839 m!82601))

(declare-fun m!82603 () Bool)

(assert (=> d!19839 m!82603))

(declare-fun m!82605 () Bool)

(assert (=> d!19839 m!82605))

(declare-fun m!82607 () Bool)

(assert (=> d!19839 m!82607))

(declare-fun m!82609 () Bool)

(assert (=> b!80890 m!82609))

(declare-fun m!82611 () Bool)

(assert (=> b!80891 m!82611))

(assert (=> b!80520 d!19839))

(declare-fun d!19841 () Bool)

(declare-fun e!52808 () Bool)

(assert (=> d!19841 e!52808))

(declare-fun res!42110 () Bool)

(assert (=> d!19841 (=> (not res!42110) (not e!52808))))

(declare-fun lt!37767 () ListLongMap!1429)

(assert (=> d!19841 (= res!42110 (contains!739 lt!37767 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!37765 () List!1497)

(assert (=> d!19841 (= lt!37767 (ListLongMap!1430 lt!37765))))

(declare-fun lt!37764 () Unit!2322)

(declare-fun lt!37766 () Unit!2322)

(assert (=> d!19841 (= lt!37764 lt!37766)))

(assert (=> d!19841 (= (getValueByKey!139 lt!37765 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19841 (= lt!37766 (lemmaContainsTupThenGetReturnValue!56 lt!37765 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19841 (= lt!37765 (insertStrictlySorted!59 (toList!730 lt!37475) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19841 (= (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37767)))

(declare-fun b!80892 () Bool)

(declare-fun res!42109 () Bool)

(assert (=> b!80892 (=> (not res!42109) (not e!52808))))

(assert (=> b!80892 (= res!42109 (= (getValueByKey!139 (toList!730 lt!37767) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!80893 () Bool)

(assert (=> b!80893 (= e!52808 (contains!742 (toList!730 lt!37767) (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!19841 res!42110) b!80892))

(assert (= (and b!80892 res!42109) b!80893))

(declare-fun m!82613 () Bool)

(assert (=> d!19841 m!82613))

(declare-fun m!82615 () Bool)

(assert (=> d!19841 m!82615))

(declare-fun m!82617 () Bool)

(assert (=> d!19841 m!82617))

(declare-fun m!82619 () Bool)

(assert (=> d!19841 m!82619))

(declare-fun m!82621 () Bool)

(assert (=> b!80892 m!82621))

(declare-fun m!82623 () Bool)

(assert (=> b!80893 m!82623))

(assert (=> b!80520 d!19841))

(declare-fun d!19843 () Bool)

(assert (=> d!19843 (= (apply!80 lt!37483 lt!37485) (get!1192 (getValueByKey!139 (toList!730 lt!37483) lt!37485)))))

(declare-fun bs!3428 () Bool)

(assert (= bs!3428 d!19843))

(declare-fun m!82625 () Bool)

(assert (=> bs!3428 m!82625))

(assert (=> bs!3428 m!82625))

(declare-fun m!82627 () Bool)

(assert (=> bs!3428 m!82627))

(assert (=> b!80520 d!19843))

(declare-fun d!19845 () Bool)

(assert (=> d!19845 (= (apply!80 lt!37475 lt!37474) (get!1192 (getValueByKey!139 (toList!730 lt!37475) lt!37474)))))

(declare-fun bs!3429 () Bool)

(assert (= bs!3429 d!19845))

(declare-fun m!82629 () Bool)

(assert (=> bs!3429 m!82629))

(assert (=> bs!3429 m!82629))

(declare-fun m!82631 () Bool)

(assert (=> bs!3429 m!82631))

(assert (=> b!80520 d!19845))

(declare-fun d!19847 () Bool)

(declare-fun e!52809 () Bool)

(assert (=> d!19847 e!52809))

(declare-fun res!42112 () Bool)

(assert (=> d!19847 (=> (not res!42112) (not e!52809))))

(declare-fun lt!37771 () ListLongMap!1429)

(assert (=> d!19847 (= res!42112 (contains!739 lt!37771 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!37769 () List!1497)

(assert (=> d!19847 (= lt!37771 (ListLongMap!1430 lt!37769))))

(declare-fun lt!37768 () Unit!2322)

(declare-fun lt!37770 () Unit!2322)

(assert (=> d!19847 (= lt!37768 lt!37770)))

(assert (=> d!19847 (= (getValueByKey!139 lt!37769 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19847 (= lt!37770 (lemmaContainsTupThenGetReturnValue!56 lt!37769 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19847 (= lt!37769 (insertStrictlySorted!59 (toList!730 lt!37477) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19847 (= (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37771)))

(declare-fun b!80894 () Bool)

(declare-fun res!42111 () Bool)

(assert (=> b!80894 (=> (not res!42111) (not e!52809))))

(assert (=> b!80894 (= res!42111 (= (getValueByKey!139 (toList!730 lt!37771) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!80895 () Bool)

(assert (=> b!80895 (= e!52809 (contains!742 (toList!730 lt!37771) (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!19847 res!42112) b!80894))

(assert (= (and b!80894 res!42111) b!80895))

(declare-fun m!82633 () Bool)

(assert (=> d!19847 m!82633))

(declare-fun m!82635 () Bool)

(assert (=> d!19847 m!82635))

(declare-fun m!82637 () Bool)

(assert (=> d!19847 m!82637))

(declare-fun m!82639 () Bool)

(assert (=> d!19847 m!82639))

(declare-fun m!82641 () Bool)

(assert (=> b!80894 m!82641))

(declare-fun m!82643 () Bool)

(assert (=> b!80895 m!82643))

(assert (=> b!80520 d!19847))

(declare-fun d!19849 () Bool)

(assert (=> d!19849 (= (apply!80 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37474) (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37474)))))

(declare-fun bs!3430 () Bool)

(assert (= bs!3430 d!19849))

(declare-fun m!82645 () Bool)

(assert (=> bs!3430 m!82645))

(assert (=> bs!3430 m!82645))

(declare-fun m!82647 () Bool)

(assert (=> bs!3430 m!82647))

(assert (=> b!80520 d!19849))

(declare-fun d!19851 () Bool)

(assert (=> d!19851 (contains!739 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37489)))

(declare-fun lt!37774 () Unit!2322)

(declare-fun choose!482 (ListLongMap!1429 (_ BitVec 64) V!3001 (_ BitVec 64)) Unit!2322)

(assert (=> d!19851 (= lt!37774 (choose!482 lt!37486 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37489))))

(assert (=> d!19851 (contains!739 lt!37486 lt!37489)))

(assert (=> d!19851 (= (addStillContains!56 lt!37486 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37489) lt!37774)))

(declare-fun bs!3431 () Bool)

(assert (= bs!3431 d!19851))

(assert (=> bs!3431 m!82003))

(assert (=> bs!3431 m!82003))

(assert (=> bs!3431 m!82019))

(declare-fun m!82649 () Bool)

(assert (=> bs!3431 m!82649))

(declare-fun m!82651 () Bool)

(assert (=> bs!3431 m!82651))

(assert (=> b!80520 d!19851))

(declare-fun d!19853 () Bool)

(assert (=> d!19853 (= (apply!80 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37485) (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37485)))))

(declare-fun bs!3432 () Bool)

(assert (= bs!3432 d!19853))

(declare-fun m!82653 () Bool)

(assert (=> bs!3432 m!82653))

(assert (=> bs!3432 m!82653))

(declare-fun m!82655 () Bool)

(assert (=> bs!3432 m!82655))

(assert (=> b!80520 d!19853))

(declare-fun d!19855 () Bool)

(declare-fun e!52810 () Bool)

(assert (=> d!19855 e!52810))

(declare-fun res!42114 () Bool)

(assert (=> d!19855 (=> (not res!42114) (not e!52810))))

(declare-fun lt!37778 () ListLongMap!1429)

(assert (=> d!19855 (= res!42114 (contains!739 lt!37778 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!37776 () List!1497)

(assert (=> d!19855 (= lt!37778 (ListLongMap!1430 lt!37776))))

(declare-fun lt!37775 () Unit!2322)

(declare-fun lt!37777 () Unit!2322)

(assert (=> d!19855 (= lt!37775 lt!37777)))

(assert (=> d!19855 (= (getValueByKey!139 lt!37776 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19855 (= lt!37777 (lemmaContainsTupThenGetReturnValue!56 lt!37776 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19855 (= lt!37776 (insertStrictlySorted!59 (toList!730 lt!37486) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!19855 (= (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37778)))

(declare-fun b!80897 () Bool)

(declare-fun res!42113 () Bool)

(assert (=> b!80897 (=> (not res!42113) (not e!52810))))

(assert (=> b!80897 (= res!42113 (= (getValueByKey!139 (toList!730 lt!37778) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!80898 () Bool)

(assert (=> b!80898 (= e!52810 (contains!742 (toList!730 lt!37778) (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!19855 res!42114) b!80897))

(assert (= (and b!80897 res!42113) b!80898))

(declare-fun m!82657 () Bool)

(assert (=> d!19855 m!82657))

(declare-fun m!82659 () Bool)

(assert (=> d!19855 m!82659))

(declare-fun m!82661 () Bool)

(assert (=> d!19855 m!82661))

(declare-fun m!82663 () Bool)

(assert (=> d!19855 m!82663))

(declare-fun m!82665 () Bool)

(assert (=> b!80897 m!82665))

(declare-fun m!82667 () Bool)

(assert (=> b!80898 m!82667))

(assert (=> b!80520 d!19855))

(declare-fun d!19857 () Bool)

(assert (=> d!19857 (= (apply!80 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37474) (apply!80 lt!37475 lt!37474))))

(declare-fun lt!37779 () Unit!2322)

(assert (=> d!19857 (= lt!37779 (choose!481 lt!37475 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37474))))

(declare-fun e!52811 () Bool)

(assert (=> d!19857 e!52811))

(declare-fun res!42115 () Bool)

(assert (=> d!19857 (=> (not res!42115) (not e!52811))))

(assert (=> d!19857 (= res!42115 (contains!739 lt!37475 lt!37474))))

(assert (=> d!19857 (= (addApplyDifferent!56 lt!37475 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37474) lt!37779)))

(declare-fun b!80899 () Bool)

(assert (=> b!80899 (= e!52811 (not (= lt!37474 lt!37490)))))

(assert (= (and d!19857 res!42115) b!80899))

(assert (=> d!19857 m!81997))

(declare-fun m!82669 () Bool)

(assert (=> d!19857 m!82669))

(assert (=> d!19857 m!81999))

(declare-fun m!82671 () Bool)

(assert (=> d!19857 m!82671))

(assert (=> d!19857 m!81999))

(assert (=> d!19857 m!82015))

(assert (=> b!80520 d!19857))

(declare-fun d!19859 () Bool)

(declare-fun e!52812 () Bool)

(assert (=> d!19859 e!52812))

(declare-fun res!42116 () Bool)

(assert (=> d!19859 (=> res!42116 e!52812)))

(declare-fun lt!37781 () Bool)

(assert (=> d!19859 (= res!42116 (not lt!37781))))

(declare-fun lt!37780 () Bool)

(assert (=> d!19859 (= lt!37781 lt!37780)))

(declare-fun lt!37782 () Unit!2322)

(declare-fun e!52813 () Unit!2322)

(assert (=> d!19859 (= lt!37782 e!52813)))

(declare-fun c!12685 () Bool)

(assert (=> d!19859 (= c!12685 lt!37780)))

(assert (=> d!19859 (= lt!37780 (containsKey!142 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37489))))

(assert (=> d!19859 (= (contains!739 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37489) lt!37781)))

(declare-fun b!80900 () Bool)

(declare-fun lt!37783 () Unit!2322)

(assert (=> b!80900 (= e!52813 lt!37783)))

(assert (=> b!80900 (= lt!37783 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37489))))

(assert (=> b!80900 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37489))))

(declare-fun b!80901 () Bool)

(declare-fun Unit!2346 () Unit!2322)

(assert (=> b!80901 (= e!52813 Unit!2346)))

(declare-fun b!80902 () Bool)

(assert (=> b!80902 (= e!52812 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37489)))))

(assert (= (and d!19859 c!12685) b!80900))

(assert (= (and d!19859 (not c!12685)) b!80901))

(assert (= (and d!19859 (not res!42116)) b!80902))

(declare-fun m!82673 () Bool)

(assert (=> d!19859 m!82673))

(declare-fun m!82675 () Bool)

(assert (=> b!80900 m!82675))

(declare-fun m!82677 () Bool)

(assert (=> b!80900 m!82677))

(assert (=> b!80900 m!82677))

(declare-fun m!82679 () Bool)

(assert (=> b!80900 m!82679))

(assert (=> b!80902 m!82677))

(assert (=> b!80902 m!82677))

(assert (=> b!80902 m!82679))

(assert (=> b!80520 d!19859))

(declare-fun d!19861 () Bool)

(declare-fun lt!37784 () Bool)

(assert (=> d!19861 (= lt!37784 (select (content!86 (toList!730 lt!37558)) lt!37210))))

(declare-fun e!52814 () Bool)

(assert (=> d!19861 (= lt!37784 e!52814)))

(declare-fun res!42118 () Bool)

(assert (=> d!19861 (=> (not res!42118) (not e!52814))))

(assert (=> d!19861 (= res!42118 ((_ is Cons!1493) (toList!730 lt!37558)))))

(assert (=> d!19861 (= (contains!742 (toList!730 lt!37558) lt!37210) lt!37784)))

(declare-fun b!80903 () Bool)

(declare-fun e!52815 () Bool)

(assert (=> b!80903 (= e!52814 e!52815)))

(declare-fun res!42117 () Bool)

(assert (=> b!80903 (=> res!42117 e!52815)))

(assert (=> b!80903 (= res!42117 (= (h!2082 (toList!730 lt!37558)) lt!37210))))

(declare-fun b!80904 () Bool)

(assert (=> b!80904 (= e!52815 (contains!742 (t!5156 (toList!730 lt!37558)) lt!37210))))

(assert (= (and d!19861 res!42118) b!80903))

(assert (= (and b!80903 (not res!42117)) b!80904))

(declare-fun m!82681 () Bool)

(assert (=> d!19861 m!82681))

(declare-fun m!82683 () Bool)

(assert (=> d!19861 m!82683))

(declare-fun m!82685 () Bool)

(assert (=> b!80904 m!82685))

(assert (=> b!80627 d!19861))

(declare-fun b!80905 () Bool)

(declare-fun e!52818 () Bool)

(declare-fun call!7522 () Bool)

(assert (=> b!80905 (= e!52818 call!7522)))

(declare-fun b!80906 () Bool)

(declare-fun e!52817 () Bool)

(assert (=> b!80906 (= e!52817 e!52818)))

(declare-fun c!12686 () Bool)

(assert (=> b!80906 (= c!12686 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!19863 () Bool)

(declare-fun res!42121 () Bool)

(declare-fun e!52819 () Bool)

(assert (=> d!19863 (=> res!42121 e!52819)))

(assert (=> d!19863 (= res!42121 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!19863 (= (arrayNoDuplicates!0 (_keys!3956 newMap!16) #b00000000000000000000000000000000 Nil!1495) e!52819)))

(declare-fun b!80907 () Bool)

(assert (=> b!80907 (= e!52819 e!52817)))

(declare-fun res!42120 () Bool)

(assert (=> b!80907 (=> (not res!42120) (not e!52817))))

(declare-fun e!52816 () Bool)

(assert (=> b!80907 (= res!42120 (not e!52816))))

(declare-fun res!42119 () Bool)

(assert (=> b!80907 (=> (not res!42119) (not e!52816))))

(assert (=> b!80907 (= res!42119 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80908 () Bool)

(assert (=> b!80908 (= e!52816 (contains!741 Nil!1495 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80909 () Bool)

(assert (=> b!80909 (= e!52818 call!7522)))

(declare-fun bm!7519 () Bool)

(assert (=> bm!7519 (= call!7522 (arrayNoDuplicates!0 (_keys!3956 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12686 (Cons!1494 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) Nil!1495) Nil!1495)))))

(assert (= (and d!19863 (not res!42121)) b!80907))

(assert (= (and b!80907 res!42119) b!80908))

(assert (= (and b!80907 res!42120) b!80906))

(assert (= (and b!80906 c!12686) b!80909))

(assert (= (and b!80906 (not c!12686)) b!80905))

(assert (= (or b!80909 b!80905) bm!7519))

(assert (=> b!80906 m!82381))

(assert (=> b!80906 m!82381))

(assert (=> b!80906 m!82583))

(assert (=> b!80907 m!82381))

(assert (=> b!80907 m!82381))

(assert (=> b!80907 m!82583))

(assert (=> b!80908 m!82381))

(assert (=> b!80908 m!82381))

(declare-fun m!82687 () Bool)

(assert (=> b!80908 m!82687))

(assert (=> bm!7519 m!82381))

(declare-fun m!82689 () Bool)

(assert (=> bm!7519 m!82689))

(assert (=> b!80542 d!19863))

(declare-fun d!19865 () Bool)

(declare-fun e!52820 () Bool)

(assert (=> d!19865 e!52820))

(declare-fun res!42122 () Bool)

(assert (=> d!19865 (=> res!42122 e!52820)))

(declare-fun lt!37786 () Bool)

(assert (=> d!19865 (= res!42122 (not lt!37786))))

(declare-fun lt!37785 () Bool)

(assert (=> d!19865 (= lt!37786 lt!37785)))

(declare-fun lt!37787 () Unit!2322)

(declare-fun e!52821 () Unit!2322)

(assert (=> d!19865 (= lt!37787 e!52821)))

(declare-fun c!12687 () Bool)

(assert (=> d!19865 (= c!12687 lt!37785)))

(assert (=> d!19865 (= lt!37785 (containsKey!142 (toList!730 call!7453) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))

(assert (=> d!19865 (= (contains!739 call!7453 (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))) lt!37786)))

(declare-fun b!80910 () Bool)

(declare-fun lt!37788 () Unit!2322)

(assert (=> b!80910 (= e!52821 lt!37788)))

(assert (=> b!80910 (= lt!37788 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 call!7453) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))

(assert (=> b!80910 (isDefined!91 (getValueByKey!139 (toList!730 call!7453) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))

(declare-fun b!80911 () Bool)

(declare-fun Unit!2347 () Unit!2322)

(assert (=> b!80911 (= e!52821 Unit!2347)))

(declare-fun b!80912 () Bool)

(assert (=> b!80912 (= e!52820 (isDefined!91 (getValueByKey!139 (toList!730 call!7453) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405)))))))

(assert (= (and d!19865 c!12687) b!80910))

(assert (= (and d!19865 (not c!12687)) b!80911))

(assert (= (and d!19865 (not res!42122)) b!80912))

(assert (=> d!19865 m!81971))

(declare-fun m!82691 () Bool)

(assert (=> d!19865 m!82691))

(assert (=> b!80910 m!81971))

(declare-fun m!82693 () Bool)

(assert (=> b!80910 m!82693))

(assert (=> b!80910 m!81971))

(declare-fun m!82695 () Bool)

(assert (=> b!80910 m!82695))

(assert (=> b!80910 m!82695))

(declare-fun m!82697 () Bool)

(assert (=> b!80910 m!82697))

(assert (=> b!80912 m!81971))

(assert (=> b!80912 m!82695))

(assert (=> b!80912 m!82695))

(assert (=> b!80912 m!82697))

(assert (=> b!80436 d!19865))

(declare-fun d!19867 () Bool)

(declare-fun e!52824 () Bool)

(assert (=> d!19867 e!52824))

(declare-fun res!42125 () Bool)

(assert (=> d!19867 (=> (not res!42125) (not e!52824))))

(assert (=> d!19867 (= res!42125 (and (bvsge (index!3076 lt!37405) #b00000000000000000000000000000000) (bvslt (index!3076 lt!37405) (size!2134 (_keys!3956 newMap!16)))))))

(declare-fun lt!37791 () Unit!2322)

(declare-fun choose!483 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) Int) Unit!2322)

(assert (=> d!19867 (= lt!37791 (choose!483 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3076 lt!37405) (defaultEntry!2292 newMap!16)))))

(assert (=> d!19867 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!19867 (= (lemmaValidKeyInArrayIsInListMap!89 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3076 lt!37405) (defaultEntry!2292 newMap!16)) lt!37791)))

(declare-fun b!80915 () Bool)

(assert (=> b!80915 (= e!52824 (contains!739 (getCurrentListMap!426 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))

(assert (= (and d!19867 res!42125) b!80915))

(declare-fun m!82699 () Bool)

(assert (=> d!19867 m!82699))

(assert (=> d!19867 m!82223))

(declare-fun m!82701 () Bool)

(assert (=> b!80915 m!82701))

(assert (=> b!80915 m!81971))

(assert (=> b!80915 m!82701))

(assert (=> b!80915 m!81971))

(declare-fun m!82703 () Bool)

(assert (=> b!80915 m!82703))

(assert (=> b!80436 d!19867))

(declare-fun bm!7520 () Bool)

(declare-fun call!7527 () Bool)

(declare-fun lt!37797 () ListLongMap!1429)

(assert (=> bm!7520 (= call!7527 (contains!739 lt!37797 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80916 () Bool)

(declare-fun e!52825 () Bool)

(assert (=> b!80916 (= e!52825 (= (apply!80 lt!37797 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!80917 () Bool)

(declare-fun e!52835 () Bool)

(assert (=> b!80917 (= e!52835 (not call!7527))))

(declare-fun b!80918 () Bool)

(declare-fun c!12689 () Bool)

(assert (=> b!80918 (= c!12689 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52828 () ListLongMap!1429)

(declare-fun e!52836 () ListLongMap!1429)

(assert (=> b!80918 (= e!52828 e!52836)))

(declare-fun b!80919 () Bool)

(declare-fun call!7525 () ListLongMap!1429)

(assert (=> b!80919 (= e!52836 call!7525)))

(declare-fun b!80920 () Bool)

(declare-fun e!52829 () ListLongMap!1429)

(assert (=> b!80920 (= e!52829 e!52828)))

(declare-fun c!12690 () Bool)

(assert (=> b!80920 (= c!12690 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80921 () Bool)

(declare-fun e!52833 () Bool)

(declare-fun e!52834 () Bool)

(assert (=> b!80921 (= e!52833 e!52834)))

(declare-fun res!42127 () Bool)

(declare-fun call!7526 () Bool)

(assert (=> b!80921 (= res!42127 call!7526)))

(assert (=> b!80921 (=> (not res!42127) (not e!52834))))

(declare-fun b!80922 () Bool)

(declare-fun res!42129 () Bool)

(declare-fun e!52832 () Bool)

(assert (=> b!80922 (=> (not res!42129) (not e!52832))))

(assert (=> b!80922 (= res!42129 e!52835)))

(declare-fun c!12692 () Bool)

(assert (=> b!80922 (= c!12692 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80923 () Bool)

(declare-fun e!52830 () Unit!2322)

(declare-fun lt!37803 () Unit!2322)

(assert (=> b!80923 (= e!52830 lt!37803)))

(declare-fun lt!37807 () ListLongMap!1429)

(assert (=> b!80923 (= lt!37807 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37794 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37794 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37810 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37810 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37813 () Unit!2322)

(assert (=> b!80923 (= lt!37813 (addStillContains!56 lt!37807 lt!37794 (zeroValue!2188 newMap!16) lt!37810))))

(assert (=> b!80923 (contains!739 (+!101 lt!37807 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16))) lt!37810)))

(declare-fun lt!37801 () Unit!2322)

(assert (=> b!80923 (= lt!37801 lt!37813)))

(declare-fun lt!37798 () ListLongMap!1429)

(assert (=> b!80923 (= lt!37798 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37812 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37812 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37809 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37809 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37800 () Unit!2322)

(assert (=> b!80923 (= lt!37800 (addApplyDifferent!56 lt!37798 lt!37812 (minValue!2188 newMap!16) lt!37809))))

(assert (=> b!80923 (= (apply!80 (+!101 lt!37798 (tuple2!2169 lt!37812 (minValue!2188 newMap!16))) lt!37809) (apply!80 lt!37798 lt!37809))))

(declare-fun lt!37802 () Unit!2322)

(assert (=> b!80923 (= lt!37802 lt!37800)))

(declare-fun lt!37796 () ListLongMap!1429)

(assert (=> b!80923 (= lt!37796 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37811 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37811 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37795 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37795 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37805 () Unit!2322)

(assert (=> b!80923 (= lt!37805 (addApplyDifferent!56 lt!37796 lt!37811 (zeroValue!2188 newMap!16) lt!37795))))

(assert (=> b!80923 (= (apply!80 (+!101 lt!37796 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16))) lt!37795) (apply!80 lt!37796 lt!37795))))

(declare-fun lt!37792 () Unit!2322)

(assert (=> b!80923 (= lt!37792 lt!37805)))

(declare-fun lt!37804 () ListLongMap!1429)

(assert (=> b!80923 (= lt!37804 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37793 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37793 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37806 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37806 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80923 (= lt!37803 (addApplyDifferent!56 lt!37804 lt!37793 (minValue!2188 newMap!16) lt!37806))))

(assert (=> b!80923 (= (apply!80 (+!101 lt!37804 (tuple2!2169 lt!37793 (minValue!2188 newMap!16))) lt!37806) (apply!80 lt!37804 lt!37806))))

(declare-fun b!80924 () Bool)

(assert (=> b!80924 (= e!52834 (= (apply!80 lt!37797 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun bm!7521 () Bool)

(declare-fun call!7529 () ListLongMap!1429)

(declare-fun call!7528 () ListLongMap!1429)

(assert (=> bm!7521 (= call!7529 call!7528)))

(declare-fun b!80925 () Bool)

(assert (=> b!80925 (= e!52835 e!52825)))

(declare-fun res!42130 () Bool)

(assert (=> b!80925 (= res!42130 call!7527)))

(assert (=> b!80925 (=> (not res!42130) (not e!52825))))

(declare-fun b!80926 () Bool)

(declare-fun e!52826 () Bool)

(assert (=> b!80926 (= e!52826 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80927 () Bool)

(declare-fun res!42132 () Bool)

(assert (=> b!80927 (=> (not res!42132) (not e!52832))))

(declare-fun e!52831 () Bool)

(assert (=> b!80927 (= res!42132 e!52831)))

(declare-fun res!42134 () Bool)

(assert (=> b!80927 (=> res!42134 e!52831)))

(assert (=> b!80927 (= res!42134 (not e!52826))))

(declare-fun res!42128 () Bool)

(assert (=> b!80927 (=> (not res!42128) (not e!52826))))

(assert (=> b!80927 (= res!42128 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!80928 () Bool)

(declare-fun call!7524 () ListLongMap!1429)

(assert (=> b!80928 (= e!52836 call!7524)))

(declare-fun b!80929 () Bool)

(assert (=> b!80929 (= e!52833 (not call!7526))))

(declare-fun b!80930 () Bool)

(declare-fun e!52837 () Bool)

(assert (=> b!80930 (= e!52837 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80931 () Bool)

(declare-fun call!7523 () ListLongMap!1429)

(assert (=> b!80931 (= e!52829 (+!101 call!7523 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun bm!7522 () Bool)

(declare-fun c!12693 () Bool)

(assert (=> bm!7522 (= call!7523 (+!101 (ite c!12693 call!7528 (ite c!12690 call!7529 call!7524)) (ite (or c!12693 c!12690) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7523 () Bool)

(assert (=> bm!7523 (= call!7528 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!80932 () Bool)

(declare-fun e!52827 () Bool)

(assert (=> b!80932 (= e!52827 (= (apply!80 lt!37797 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1893 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80932 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))))))))

(assert (=> b!80932 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun bm!7524 () Bool)

(assert (=> bm!7524 (= call!7526 (contains!739 lt!37797 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80933 () Bool)

(assert (=> b!80933 (= e!52831 e!52827)))

(declare-fun res!42131 () Bool)

(assert (=> b!80933 (=> (not res!42131) (not e!52827))))

(assert (=> b!80933 (= res!42131 (contains!739 lt!37797 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80933 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!80934 () Bool)

(declare-fun Unit!2348 () Unit!2322)

(assert (=> b!80934 (= e!52830 Unit!2348)))

(declare-fun bm!7525 () Bool)

(assert (=> bm!7525 (= call!7525 call!7523)))

(declare-fun b!80935 () Bool)

(assert (=> b!80935 (= e!52832 e!52833)))

(declare-fun c!12691 () Bool)

(assert (=> b!80935 (= c!12691 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!19869 () Bool)

(assert (=> d!19869 e!52832))

(declare-fun res!42126 () Bool)

(assert (=> d!19869 (=> (not res!42126) (not e!52832))))

(assert (=> d!19869 (= res!42126 (or (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))))

(declare-fun lt!37799 () ListLongMap!1429)

(assert (=> d!19869 (= lt!37797 lt!37799)))

(declare-fun lt!37808 () Unit!2322)

(assert (=> d!19869 (= lt!37808 e!52830)))

(declare-fun c!12688 () Bool)

(assert (=> d!19869 (= c!12688 e!52837)))

(declare-fun res!42133 () Bool)

(assert (=> d!19869 (=> (not res!42133) (not e!52837))))

(assert (=> d!19869 (= res!42133 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!19869 (= lt!37799 e!52829)))

(assert (=> d!19869 (= c!12693 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19869 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!19869 (= (getCurrentListMap!426 (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!37797)))

(declare-fun bm!7526 () Bool)

(assert (=> bm!7526 (= call!7524 call!7529)))

(declare-fun b!80936 () Bool)

(assert (=> b!80936 (= e!52828 call!7525)))

(assert (= (and d!19869 c!12693) b!80931))

(assert (= (and d!19869 (not c!12693)) b!80920))

(assert (= (and b!80920 c!12690) b!80936))

(assert (= (and b!80920 (not c!12690)) b!80918))

(assert (= (and b!80918 c!12689) b!80919))

(assert (= (and b!80918 (not c!12689)) b!80928))

(assert (= (or b!80919 b!80928) bm!7526))

(assert (= (or b!80936 bm!7526) bm!7521))

(assert (= (or b!80936 b!80919) bm!7525))

(assert (= (or b!80931 bm!7521) bm!7523))

(assert (= (or b!80931 bm!7525) bm!7522))

(assert (= (and d!19869 res!42133) b!80930))

(assert (= (and d!19869 c!12688) b!80923))

(assert (= (and d!19869 (not c!12688)) b!80934))

(assert (= (and d!19869 res!42126) b!80927))

(assert (= (and b!80927 res!42128) b!80926))

(assert (= (and b!80927 (not res!42134)) b!80933))

(assert (= (and b!80933 res!42131) b!80932))

(assert (= (and b!80927 res!42132) b!80922))

(assert (= (and b!80922 c!12692) b!80925))

(assert (= (and b!80922 (not c!12692)) b!80917))

(assert (= (and b!80925 res!42130) b!80916))

(assert (= (or b!80925 b!80917) bm!7520))

(assert (= (and b!80922 res!42129) b!80935))

(assert (= (and b!80935 c!12691) b!80921))

(assert (= (and b!80935 (not c!12691)) b!80929))

(assert (= (and b!80921 res!42127) b!80924))

(assert (= (or b!80921 b!80929) bm!7524))

(declare-fun b_lambda!3615 () Bool)

(assert (=> (not b_lambda!3615) (not b!80932)))

(declare-fun t!5170 () Bool)

(declare-fun tb!1641 () Bool)

(assert (=> (and b!80208 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16)) t!5170) tb!1641))

(declare-fun result!2849 () Bool)

(assert (=> tb!1641 (= result!2849 tp_is_empty!2515)))

(assert (=> b!80932 t!5170))

(declare-fun b_and!4945 () Bool)

(assert (= b_and!4941 (and (=> t!5170 result!2849) b_and!4945)))

(declare-fun t!5172 () Bool)

(declare-fun tb!1643 () Bool)

(assert (=> (and b!80215 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 newMap!16)) t!5172) tb!1643))

(declare-fun result!2851 () Bool)

(assert (= result!2851 result!2849))

(assert (=> b!80932 t!5172))

(declare-fun b_and!4947 () Bool)

(assert (= b_and!4943 (and (=> t!5172 result!2851) b_and!4947)))

(declare-fun m!82705 () Bool)

(assert (=> b!80923 m!82705))

(assert (=> b!80923 m!82705))

(declare-fun m!82707 () Bool)

(assert (=> b!80923 m!82707))

(assert (=> b!80923 m!82381))

(declare-fun m!82709 () Bool)

(assert (=> b!80923 m!82709))

(declare-fun m!82711 () Bool)

(assert (=> b!80923 m!82711))

(declare-fun m!82713 () Bool)

(assert (=> b!80923 m!82713))

(declare-fun m!82715 () Bool)

(assert (=> b!80923 m!82715))

(declare-fun m!82717 () Bool)

(assert (=> b!80923 m!82717))

(declare-fun m!82719 () Bool)

(assert (=> b!80923 m!82719))

(assert (=> b!80923 m!82715))

(declare-fun m!82721 () Bool)

(assert (=> b!80923 m!82721))

(declare-fun m!82723 () Bool)

(assert (=> b!80923 m!82723))

(declare-fun m!82725 () Bool)

(assert (=> b!80923 m!82725))

(declare-fun m!82727 () Bool)

(assert (=> b!80923 m!82727))

(assert (=> b!80923 m!82713))

(declare-fun m!82729 () Bool)

(assert (=> b!80923 m!82729))

(declare-fun m!82731 () Bool)

(assert (=> b!80923 m!82731))

(declare-fun m!82733 () Bool)

(assert (=> b!80923 m!82733))

(assert (=> b!80923 m!82717))

(declare-fun m!82735 () Bool)

(assert (=> b!80923 m!82735))

(assert (=> b!80926 m!82381))

(assert (=> b!80926 m!82381))

(assert (=> b!80926 m!82583))

(declare-fun m!82737 () Bool)

(assert (=> b!80916 m!82737))

(declare-fun m!82739 () Bool)

(assert (=> bm!7524 m!82739))

(declare-fun m!82741 () Bool)

(assert (=> b!80931 m!82741))

(assert (=> b!80932 m!82381))

(declare-fun m!82743 () Bool)

(assert (=> b!80932 m!82743))

(declare-fun m!82745 () Bool)

(assert (=> b!80932 m!82745))

(assert (=> b!80932 m!82743))

(declare-fun m!82747 () Bool)

(assert (=> b!80932 m!82747))

(assert (=> b!80932 m!82745))

(assert (=> b!80932 m!82381))

(declare-fun m!82749 () Bool)

(assert (=> b!80932 m!82749))

(declare-fun m!82751 () Bool)

(assert (=> b!80924 m!82751))

(assert (=> b!80930 m!82381))

(assert (=> b!80930 m!82381))

(assert (=> b!80930 m!82583))

(assert (=> b!80933 m!82381))

(assert (=> b!80933 m!82381))

(declare-fun m!82753 () Bool)

(assert (=> b!80933 m!82753))

(assert (=> bm!7523 m!82731))

(declare-fun m!82755 () Bool)

(assert (=> bm!7522 m!82755))

(assert (=> d!19869 m!82223))

(declare-fun m!82757 () Bool)

(assert (=> bm!7520 m!82757))

(assert (=> b!80436 d!19869))

(declare-fun d!19871 () Bool)

(declare-fun e!52840 () Bool)

(assert (=> d!19871 e!52840))

(declare-fun res!42137 () Bool)

(assert (=> d!19871 (=> (not res!42137) (not e!52840))))

(assert (=> d!19871 (= res!42137 (and (bvsge (index!3076 lt!37405) #b00000000000000000000000000000000) (bvslt (index!3076 lt!37405) (size!2135 (_values!2275 newMap!16)))))))

(declare-fun lt!37816 () Unit!2322)

(declare-fun choose!484 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) (_ BitVec 64) V!3001 Int) Unit!2322)

(assert (=> d!19871 (= lt!37816 (choose!484 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3076 lt!37405) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 (defaultEntry!2292 newMap!16)))))

(assert (=> d!19871 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!19871 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!29 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3076 lt!37405) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 (defaultEntry!2292 newMap!16)) lt!37816)))

(declare-fun b!80939 () Bool)

(assert (=> b!80939 (= e!52840 (= (+!101 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (getCurrentListMap!426 (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))))))

(assert (= (and d!19871 res!42137) b!80939))

(assert (=> d!19871 m!81737))

(declare-fun m!82759 () Bool)

(assert (=> d!19871 m!82759))

(assert (=> d!19871 m!82223))

(assert (=> b!80939 m!81949))

(assert (=> b!80939 m!81949))

(assert (=> b!80939 m!82533))

(assert (=> b!80939 m!81975))

(assert (=> b!80939 m!81969))

(assert (=> b!80436 d!19871))

(declare-fun d!19873 () Bool)

(declare-fun e!52841 () Bool)

(assert (=> d!19873 e!52841))

(declare-fun res!42138 () Bool)

(assert (=> d!19873 (=> res!42138 e!52841)))

(declare-fun lt!37818 () Bool)

(assert (=> d!19873 (= res!42138 (not lt!37818))))

(declare-fun lt!37817 () Bool)

(assert (=> d!19873 (= lt!37818 lt!37817)))

(declare-fun lt!37819 () Unit!2322)

(declare-fun e!52842 () Unit!2322)

(assert (=> d!19873 (= lt!37819 e!52842)))

(declare-fun c!12694 () Bool)

(assert (=> d!19873 (= c!12694 lt!37817)))

(assert (=> d!19873 (= lt!37817 (containsKey!142 (toList!730 e!52556) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!19873 (= (contains!739 e!52556 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) lt!37818)))

(declare-fun b!80940 () Bool)

(declare-fun lt!37820 () Unit!2322)

(assert (=> b!80940 (= e!52842 lt!37820)))

(assert (=> b!80940 (= lt!37820 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 e!52556) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> b!80940 (isDefined!91 (getValueByKey!139 (toList!730 e!52556) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!80941 () Bool)

(declare-fun Unit!2349 () Unit!2322)

(assert (=> b!80941 (= e!52842 Unit!2349)))

(declare-fun b!80942 () Bool)

(assert (=> b!80942 (= e!52841 (isDefined!91 (getValueByKey!139 (toList!730 e!52556) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(assert (= (and d!19873 c!12694) b!80940))

(assert (= (and d!19873 (not c!12694)) b!80941))

(assert (= (and d!19873 (not res!42138)) b!80942))

(assert (=> d!19873 m!81737))

(declare-fun m!82761 () Bool)

(assert (=> d!19873 m!82761))

(assert (=> b!80940 m!81737))

(declare-fun m!82763 () Bool)

(assert (=> b!80940 m!82763))

(assert (=> b!80940 m!81737))

(declare-fun m!82765 () Bool)

(assert (=> b!80940 m!82765))

(assert (=> b!80940 m!82765))

(declare-fun m!82767 () Bool)

(assert (=> b!80940 m!82767))

(assert (=> b!80942 m!81737))

(assert (=> b!80942 m!82765))

(assert (=> b!80942 m!82765))

(assert (=> b!80942 m!82767))

(assert (=> bm!7446 d!19873))

(declare-fun d!19875 () Bool)

(declare-fun e!52845 () Bool)

(assert (=> d!19875 e!52845))

(declare-fun c!12697 () Bool)

(assert (=> d!19875 (= c!12697 (and (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!19875 true))

(declare-fun _$29!102 () Unit!2322)

(assert (=> d!19875 (= (choose!475 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))) _$29!102)))

(declare-fun b!80947 () Bool)

(assert (=> b!80947 (= e!52845 (arrayContainsKey!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!80948 () Bool)

(assert (=> b!80948 (= e!52845 (ite (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!19875 c!12697) b!80947))

(assert (= (and d!19875 (not c!12697)) b!80948))

(assert (=> b!80947 m!81737))

(assert (=> b!80947 m!81769))

(assert (=> d!19705 d!19875))

(assert (=> d!19705 d!19727))

(declare-fun d!19877 () Bool)

(declare-fun res!42143 () Bool)

(declare-fun e!52850 () Bool)

(assert (=> d!19877 (=> res!42143 e!52850)))

(assert (=> d!19877 (= res!42143 (and ((_ is Cons!1493) (toList!730 lt!37217)) (= (_1!1095 (h!2082 (toList!730 lt!37217))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(assert (=> d!19877 (= (containsKey!142 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) e!52850)))

(declare-fun b!80953 () Bool)

(declare-fun e!52851 () Bool)

(assert (=> b!80953 (= e!52850 e!52851)))

(declare-fun res!42144 () Bool)

(assert (=> b!80953 (=> (not res!42144) (not e!52851))))

(assert (=> b!80953 (= res!42144 (and (or (not ((_ is Cons!1493) (toList!730 lt!37217))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37217))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))) ((_ is Cons!1493) (toList!730 lt!37217)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37217))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(declare-fun b!80954 () Bool)

(assert (=> b!80954 (= e!52851 (containsKey!142 (t!5156 (toList!730 lt!37217)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (= (and d!19877 (not res!42143)) b!80953))

(assert (= (and b!80953 res!42144) b!80954))

(assert (=> b!80954 m!81737))

(declare-fun m!82769 () Bool)

(assert (=> b!80954 m!82769))

(assert (=> d!19677 d!19877))

(assert (=> b!80523 d!19827))

(declare-fun bm!7527 () Bool)

(declare-fun call!7534 () Bool)

(declare-fun lt!37826 () ListLongMap!1429)

(assert (=> bm!7527 (= call!7534 (contains!739 lt!37826 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80955 () Bool)

(declare-fun e!52852 () Bool)

(assert (=> b!80955 (= e!52852 (= (apply!80 lt!37826 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!80956 () Bool)

(declare-fun e!52862 () Bool)

(assert (=> b!80956 (= e!52862 (not call!7534))))

(declare-fun b!80957 () Bool)

(declare-fun c!12699 () Bool)

(assert (=> b!80957 (= c!12699 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52855 () ListLongMap!1429)

(declare-fun e!52863 () ListLongMap!1429)

(assert (=> b!80957 (= e!52855 e!52863)))

(declare-fun b!80958 () Bool)

(declare-fun call!7532 () ListLongMap!1429)

(assert (=> b!80958 (= e!52863 call!7532)))

(declare-fun b!80959 () Bool)

(declare-fun e!52856 () ListLongMap!1429)

(assert (=> b!80959 (= e!52856 e!52855)))

(declare-fun c!12700 () Bool)

(assert (=> b!80959 (= c!12700 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80960 () Bool)

(declare-fun e!52860 () Bool)

(declare-fun e!52861 () Bool)

(assert (=> b!80960 (= e!52860 e!52861)))

(declare-fun res!42146 () Bool)

(declare-fun call!7533 () Bool)

(assert (=> b!80960 (= res!42146 call!7533)))

(assert (=> b!80960 (=> (not res!42146) (not e!52861))))

(declare-fun b!80961 () Bool)

(declare-fun res!42148 () Bool)

(declare-fun e!52859 () Bool)

(assert (=> b!80961 (=> (not res!42148) (not e!52859))))

(assert (=> b!80961 (= res!42148 e!52862)))

(declare-fun c!12702 () Bool)

(assert (=> b!80961 (= c!12702 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80962 () Bool)

(declare-fun e!52857 () Unit!2322)

(declare-fun lt!37832 () Unit!2322)

(assert (=> b!80962 (= e!52857 lt!37832)))

(declare-fun lt!37836 () ListLongMap!1429)

(assert (=> b!80962 (= lt!37836 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37823 () (_ BitVec 64))

(assert (=> b!80962 (= lt!37823 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37839 () (_ BitVec 64))

(assert (=> b!80962 (= lt!37839 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37842 () Unit!2322)

(assert (=> b!80962 (= lt!37842 (addStillContains!56 lt!37836 lt!37823 (zeroValue!2188 newMap!16) lt!37839))))

(assert (=> b!80962 (contains!739 (+!101 lt!37836 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16))) lt!37839)))

(declare-fun lt!37830 () Unit!2322)

(assert (=> b!80962 (= lt!37830 lt!37842)))

(declare-fun lt!37827 () ListLongMap!1429)

(assert (=> b!80962 (= lt!37827 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37841 () (_ BitVec 64))

(assert (=> b!80962 (= lt!37841 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37838 () (_ BitVec 64))

(assert (=> b!80962 (= lt!37838 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37829 () Unit!2322)

(assert (=> b!80962 (= lt!37829 (addApplyDifferent!56 lt!37827 lt!37841 (minValue!2188 newMap!16) lt!37838))))

(assert (=> b!80962 (= (apply!80 (+!101 lt!37827 (tuple2!2169 lt!37841 (minValue!2188 newMap!16))) lt!37838) (apply!80 lt!37827 lt!37838))))

(declare-fun lt!37831 () Unit!2322)

(assert (=> b!80962 (= lt!37831 lt!37829)))

(declare-fun lt!37825 () ListLongMap!1429)

(assert (=> b!80962 (= lt!37825 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37840 () (_ BitVec 64))

(assert (=> b!80962 (= lt!37840 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37824 () (_ BitVec 64))

(assert (=> b!80962 (= lt!37824 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37834 () Unit!2322)

(assert (=> b!80962 (= lt!37834 (addApplyDifferent!56 lt!37825 lt!37840 (zeroValue!2188 newMap!16) lt!37824))))

(assert (=> b!80962 (= (apply!80 (+!101 lt!37825 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16))) lt!37824) (apply!80 lt!37825 lt!37824))))

(declare-fun lt!37821 () Unit!2322)

(assert (=> b!80962 (= lt!37821 lt!37834)))

(declare-fun lt!37833 () ListLongMap!1429)

(assert (=> b!80962 (= lt!37833 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37822 () (_ BitVec 64))

(assert (=> b!80962 (= lt!37822 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37835 () (_ BitVec 64))

(assert (=> b!80962 (= lt!37835 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80962 (= lt!37832 (addApplyDifferent!56 lt!37833 lt!37822 (minValue!2188 newMap!16) lt!37835))))

(assert (=> b!80962 (= (apply!80 (+!101 lt!37833 (tuple2!2169 lt!37822 (minValue!2188 newMap!16))) lt!37835) (apply!80 lt!37833 lt!37835))))

(declare-fun b!80963 () Bool)

(assert (=> b!80963 (= e!52861 (= (apply!80 lt!37826 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun bm!7528 () Bool)

(declare-fun call!7536 () ListLongMap!1429)

(declare-fun call!7535 () ListLongMap!1429)

(assert (=> bm!7528 (= call!7536 call!7535)))

(declare-fun b!80964 () Bool)

(assert (=> b!80964 (= e!52862 e!52852)))

(declare-fun res!42149 () Bool)

(assert (=> b!80964 (= res!42149 call!7534)))

(assert (=> b!80964 (=> (not res!42149) (not e!52852))))

(declare-fun b!80965 () Bool)

(declare-fun e!52853 () Bool)

(assert (=> b!80965 (= e!52853 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80966 () Bool)

(declare-fun res!42151 () Bool)

(assert (=> b!80966 (=> (not res!42151) (not e!52859))))

(declare-fun e!52858 () Bool)

(assert (=> b!80966 (= res!42151 e!52858)))

(declare-fun res!42153 () Bool)

(assert (=> b!80966 (=> res!42153 e!52858)))

(assert (=> b!80966 (= res!42153 (not e!52853))))

(declare-fun res!42147 () Bool)

(assert (=> b!80966 (=> (not res!42147) (not e!52853))))

(assert (=> b!80966 (= res!42147 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!80967 () Bool)

(declare-fun call!7531 () ListLongMap!1429)

(assert (=> b!80967 (= e!52863 call!7531)))

(declare-fun b!80968 () Bool)

(assert (=> b!80968 (= e!52860 (not call!7533))))

(declare-fun b!80969 () Bool)

(declare-fun e!52864 () Bool)

(assert (=> b!80969 (= e!52864 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80970 () Bool)

(declare-fun call!7530 () ListLongMap!1429)

(assert (=> b!80970 (= e!52856 (+!101 call!7530 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun c!12703 () Bool)

(declare-fun bm!7529 () Bool)

(assert (=> bm!7529 (= call!7530 (+!101 (ite c!12703 call!7535 (ite c!12700 call!7536 call!7531)) (ite (or c!12703 c!12700) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7530 () Bool)

(assert (=> bm!7530 (= call!7535 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!80971 () Bool)

(declare-fun e!52854 () Bool)

(assert (=> b!80971 (= e!52854 (= (apply!80 lt!37826 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1893 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80971 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_values!2275 newMap!16))))))

(assert (=> b!80971 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun bm!7531 () Bool)

(assert (=> bm!7531 (= call!7533 (contains!739 lt!37826 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80972 () Bool)

(assert (=> b!80972 (= e!52858 e!52854)))

(declare-fun res!42150 () Bool)

(assert (=> b!80972 (=> (not res!42150) (not e!52854))))

(assert (=> b!80972 (= res!42150 (contains!739 lt!37826 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80972 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!80973 () Bool)

(declare-fun Unit!2350 () Unit!2322)

(assert (=> b!80973 (= e!52857 Unit!2350)))

(declare-fun bm!7532 () Bool)

(assert (=> bm!7532 (= call!7532 call!7530)))

(declare-fun b!80974 () Bool)

(assert (=> b!80974 (= e!52859 e!52860)))

(declare-fun c!12701 () Bool)

(assert (=> b!80974 (= c!12701 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!19879 () Bool)

(assert (=> d!19879 e!52859))

(declare-fun res!42145 () Bool)

(assert (=> d!19879 (=> (not res!42145) (not e!52859))))

(assert (=> d!19879 (= res!42145 (or (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))))

(declare-fun lt!37828 () ListLongMap!1429)

(assert (=> d!19879 (= lt!37826 lt!37828)))

(declare-fun lt!37837 () Unit!2322)

(assert (=> d!19879 (= lt!37837 e!52857)))

(declare-fun c!12698 () Bool)

(assert (=> d!19879 (= c!12698 e!52864)))

(declare-fun res!42152 () Bool)

(assert (=> d!19879 (=> (not res!42152) (not e!52864))))

(assert (=> d!19879 (= res!42152 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!19879 (= lt!37828 e!52856)))

(assert (=> d!19879 (= c!12703 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19879 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!19879 (= (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!37826)))

(declare-fun bm!7533 () Bool)

(assert (=> bm!7533 (= call!7531 call!7536)))

(declare-fun b!80975 () Bool)

(assert (=> b!80975 (= e!52855 call!7532)))

(assert (= (and d!19879 c!12703) b!80970))

(assert (= (and d!19879 (not c!12703)) b!80959))

(assert (= (and b!80959 c!12700) b!80975))

(assert (= (and b!80959 (not c!12700)) b!80957))

(assert (= (and b!80957 c!12699) b!80958))

(assert (= (and b!80957 (not c!12699)) b!80967))

(assert (= (or b!80958 b!80967) bm!7533))

(assert (= (or b!80975 bm!7533) bm!7528))

(assert (= (or b!80975 b!80958) bm!7532))

(assert (= (or b!80970 bm!7528) bm!7530))

(assert (= (or b!80970 bm!7532) bm!7529))

(assert (= (and d!19879 res!42152) b!80969))

(assert (= (and d!19879 c!12698) b!80962))

(assert (= (and d!19879 (not c!12698)) b!80973))

(assert (= (and d!19879 res!42145) b!80966))

(assert (= (and b!80966 res!42147) b!80965))

(assert (= (and b!80966 (not res!42153)) b!80972))

(assert (= (and b!80972 res!42150) b!80971))

(assert (= (and b!80966 res!42151) b!80961))

(assert (= (and b!80961 c!12702) b!80964))

(assert (= (and b!80961 (not c!12702)) b!80956))

(assert (= (and b!80964 res!42149) b!80955))

(assert (= (or b!80964 b!80956) bm!7527))

(assert (= (and b!80961 res!42148) b!80974))

(assert (= (and b!80974 c!12701) b!80960))

(assert (= (and b!80974 (not c!12701)) b!80968))

(assert (= (and b!80960 res!42146) b!80963))

(assert (= (or b!80960 b!80968) bm!7531))

(declare-fun b_lambda!3617 () Bool)

(assert (=> (not b_lambda!3617) (not b!80971)))

(assert (=> b!80971 t!5170))

(declare-fun b_and!4949 () Bool)

(assert (= b_and!4945 (and (=> t!5170 result!2849) b_and!4949)))

(assert (=> b!80971 t!5172))

(declare-fun b_and!4951 () Bool)

(assert (= b_and!4947 (and (=> t!5172 result!2851) b_and!4951)))

(declare-fun m!82771 () Bool)

(assert (=> b!80962 m!82771))

(assert (=> b!80962 m!82771))

(declare-fun m!82773 () Bool)

(assert (=> b!80962 m!82773))

(assert (=> b!80962 m!82381))

(declare-fun m!82775 () Bool)

(assert (=> b!80962 m!82775))

(declare-fun m!82777 () Bool)

(assert (=> b!80962 m!82777))

(declare-fun m!82779 () Bool)

(assert (=> b!80962 m!82779))

(declare-fun m!82781 () Bool)

(assert (=> b!80962 m!82781))

(declare-fun m!82783 () Bool)

(assert (=> b!80962 m!82783))

(declare-fun m!82785 () Bool)

(assert (=> b!80962 m!82785))

(assert (=> b!80962 m!82781))

(declare-fun m!82787 () Bool)

(assert (=> b!80962 m!82787))

(declare-fun m!82789 () Bool)

(assert (=> b!80962 m!82789))

(declare-fun m!82791 () Bool)

(assert (=> b!80962 m!82791))

(declare-fun m!82793 () Bool)

(assert (=> b!80962 m!82793))

(assert (=> b!80962 m!82779))

(declare-fun m!82795 () Bool)

(assert (=> b!80962 m!82795))

(declare-fun m!82797 () Bool)

(assert (=> b!80962 m!82797))

(declare-fun m!82799 () Bool)

(assert (=> b!80962 m!82799))

(assert (=> b!80962 m!82783))

(declare-fun m!82801 () Bool)

(assert (=> b!80962 m!82801))

(assert (=> b!80965 m!82381))

(assert (=> b!80965 m!82381))

(assert (=> b!80965 m!82583))

(declare-fun m!82803 () Bool)

(assert (=> b!80955 m!82803))

(declare-fun m!82805 () Bool)

(assert (=> bm!7531 m!82805))

(declare-fun m!82807 () Bool)

(assert (=> b!80970 m!82807))

(assert (=> b!80971 m!82381))

(assert (=> b!80971 m!82743))

(declare-fun m!82809 () Bool)

(assert (=> b!80971 m!82809))

(assert (=> b!80971 m!82743))

(declare-fun m!82811 () Bool)

(assert (=> b!80971 m!82811))

(assert (=> b!80971 m!82809))

(assert (=> b!80971 m!82381))

(declare-fun m!82813 () Bool)

(assert (=> b!80971 m!82813))

(declare-fun m!82815 () Bool)

(assert (=> b!80963 m!82815))

(assert (=> b!80969 m!82381))

(assert (=> b!80969 m!82381))

(assert (=> b!80969 m!82583))

(assert (=> b!80972 m!82381))

(assert (=> b!80972 m!82381))

(declare-fun m!82817 () Bool)

(assert (=> b!80972 m!82817))

(assert (=> bm!7530 m!82797))

(declare-fun m!82819 () Bool)

(assert (=> bm!7529 m!82819))

(assert (=> d!19879 m!82223))

(declare-fun m!82821 () Bool)

(assert (=> bm!7527 m!82821))

(assert (=> d!19687 d!19879))

(declare-fun b!80979 () Bool)

(declare-fun e!52866 () Option!145)

(assert (=> b!80979 (= e!52866 None!143)))

(declare-fun b!80978 () Bool)

(assert (=> b!80978 (= e!52866 (getValueByKey!139 (t!5156 (toList!730 lt!37562)) (_1!1095 lt!37212)))))

(declare-fun d!19881 () Bool)

(declare-fun c!12704 () Bool)

(assert (=> d!19881 (= c!12704 (and ((_ is Cons!1493) (toList!730 lt!37562)) (= (_1!1095 (h!2082 (toList!730 lt!37562))) (_1!1095 lt!37212))))))

(declare-fun e!52865 () Option!145)

(assert (=> d!19881 (= (getValueByKey!139 (toList!730 lt!37562) (_1!1095 lt!37212)) e!52865)))

(declare-fun b!80976 () Bool)

(assert (=> b!80976 (= e!52865 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37562)))))))

(declare-fun b!80977 () Bool)

(assert (=> b!80977 (= e!52865 e!52866)))

(declare-fun c!12705 () Bool)

(assert (=> b!80977 (= c!12705 (and ((_ is Cons!1493) (toList!730 lt!37562)) (not (= (_1!1095 (h!2082 (toList!730 lt!37562))) (_1!1095 lt!37212)))))))

(assert (= (and d!19881 c!12704) b!80976))

(assert (= (and d!19881 (not c!12704)) b!80977))

(assert (= (and b!80977 c!12705) b!80978))

(assert (= (and b!80977 (not c!12705)) b!80979))

(declare-fun m!82823 () Bool)

(assert (=> b!80978 m!82823))

(assert (=> b!80628 d!19881))

(declare-fun d!19883 () Bool)

(assert (=> d!19883 (= (get!1190 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2609 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> b!80547 d!19883))

(assert (=> d!19701 d!19707))

(declare-fun d!19885 () Bool)

(assert (=> d!19885 (arrayNoDuplicates!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) from!355 Nil!1495)))

(assert (=> d!19885 true))

(declare-fun _$71!108 () Unit!2322)

(assert (=> d!19885 (= (choose!39 (_keys!3956 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!108)))

(declare-fun bs!3433 () Bool)

(assert (= bs!3433 d!19885))

(assert (=> bs!3433 m!81765))

(assert (=> d!19701 d!19885))

(declare-fun d!19887 () Bool)

(declare-fun e!52867 () Bool)

(assert (=> d!19887 e!52867))

(declare-fun res!42154 () Bool)

(assert (=> d!19887 (=> res!42154 e!52867)))

(declare-fun lt!37844 () Bool)

(assert (=> d!19887 (= res!42154 (not lt!37844))))

(declare-fun lt!37843 () Bool)

(assert (=> d!19887 (= lt!37844 lt!37843)))

(declare-fun lt!37845 () Unit!2322)

(declare-fun e!52868 () Unit!2322)

(assert (=> d!19887 (= lt!37845 e!52868)))

(declare-fun c!12706 () Bool)

(assert (=> d!19887 (= c!12706 lt!37843)))

(assert (=> d!19887 (= lt!37843 (containsKey!142 (toList!730 lt!37513) (_1!1095 lt!37212)))))

(assert (=> d!19887 (= (contains!739 lt!37513 (_1!1095 lt!37212)) lt!37844)))

(declare-fun b!80980 () Bool)

(declare-fun lt!37846 () Unit!2322)

(assert (=> b!80980 (= e!52868 lt!37846)))

(assert (=> b!80980 (= lt!37846 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37513) (_1!1095 lt!37212)))))

(assert (=> b!80980 (isDefined!91 (getValueByKey!139 (toList!730 lt!37513) (_1!1095 lt!37212)))))

(declare-fun b!80981 () Bool)

(declare-fun Unit!2351 () Unit!2322)

(assert (=> b!80981 (= e!52868 Unit!2351)))

(declare-fun b!80982 () Bool)

(assert (=> b!80982 (= e!52867 (isDefined!91 (getValueByKey!139 (toList!730 lt!37513) (_1!1095 lt!37212))))))

(assert (= (and d!19887 c!12706) b!80980))

(assert (= (and d!19887 (not c!12706)) b!80981))

(assert (= (and d!19887 (not res!42154)) b!80982))

(declare-fun m!82825 () Bool)

(assert (=> d!19887 m!82825))

(declare-fun m!82827 () Bool)

(assert (=> b!80980 m!82827))

(assert (=> b!80980 m!82077))

(assert (=> b!80980 m!82077))

(declare-fun m!82829 () Bool)

(assert (=> b!80980 m!82829))

(assert (=> b!80982 m!82077))

(assert (=> b!80982 m!82077))

(assert (=> b!80982 m!82829))

(assert (=> d!19709 d!19887))

(declare-fun b!80986 () Bool)

(declare-fun e!52870 () Option!145)

(assert (=> b!80986 (= e!52870 None!143)))

(declare-fun b!80985 () Bool)

(assert (=> b!80985 (= e!52870 (getValueByKey!139 (t!5156 lt!37511) (_1!1095 lt!37212)))))

(declare-fun d!19889 () Bool)

(declare-fun c!12707 () Bool)

(assert (=> d!19889 (= c!12707 (and ((_ is Cons!1493) lt!37511) (= (_1!1095 (h!2082 lt!37511)) (_1!1095 lt!37212))))))

(declare-fun e!52869 () Option!145)

(assert (=> d!19889 (= (getValueByKey!139 lt!37511 (_1!1095 lt!37212)) e!52869)))

(declare-fun b!80983 () Bool)

(assert (=> b!80983 (= e!52869 (Some!144 (_2!1095 (h!2082 lt!37511))))))

(declare-fun b!80984 () Bool)

(assert (=> b!80984 (= e!52869 e!52870)))

(declare-fun c!12708 () Bool)

(assert (=> b!80984 (= c!12708 (and ((_ is Cons!1493) lt!37511) (not (= (_1!1095 (h!2082 lt!37511)) (_1!1095 lt!37212)))))))

(assert (= (and d!19889 c!12707) b!80983))

(assert (= (and d!19889 (not c!12707)) b!80984))

(assert (= (and b!80984 c!12708) b!80985))

(assert (= (and b!80984 (not c!12708)) b!80986))

(declare-fun m!82831 () Bool)

(assert (=> b!80985 m!82831))

(assert (=> d!19709 d!19889))

(declare-fun d!19891 () Bool)

(assert (=> d!19891 (= (getValueByKey!139 lt!37511 (_1!1095 lt!37212)) (Some!144 (_2!1095 lt!37212)))))

(declare-fun lt!37847 () Unit!2322)

(assert (=> d!19891 (= lt!37847 (choose!478 lt!37511 (_1!1095 lt!37212) (_2!1095 lt!37212)))))

(declare-fun e!52871 () Bool)

(assert (=> d!19891 e!52871))

(declare-fun res!42155 () Bool)

(assert (=> d!19891 (=> (not res!42155) (not e!52871))))

(assert (=> d!19891 (= res!42155 (isStrictlySorted!283 lt!37511))))

(assert (=> d!19891 (= (lemmaContainsTupThenGetReturnValue!56 lt!37511 (_1!1095 lt!37212) (_2!1095 lt!37212)) lt!37847)))

(declare-fun b!80987 () Bool)

(declare-fun res!42156 () Bool)

(assert (=> b!80987 (=> (not res!42156) (not e!52871))))

(assert (=> b!80987 (= res!42156 (containsKey!142 lt!37511 (_1!1095 lt!37212)))))

(declare-fun b!80988 () Bool)

(assert (=> b!80988 (= e!52871 (contains!742 lt!37511 (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(assert (= (and d!19891 res!42155) b!80987))

(assert (= (and b!80987 res!42156) b!80988))

(assert (=> d!19891 m!82071))

(declare-fun m!82833 () Bool)

(assert (=> d!19891 m!82833))

(declare-fun m!82835 () Bool)

(assert (=> d!19891 m!82835))

(declare-fun m!82837 () Bool)

(assert (=> b!80987 m!82837))

(declare-fun m!82839 () Bool)

(assert (=> b!80988 m!82839))

(assert (=> d!19709 d!19891))

(declare-fun bm!7534 () Bool)

(declare-fun call!7538 () List!1497)

(declare-fun call!7539 () List!1497)

(assert (=> bm!7534 (= call!7538 call!7539)))

(declare-fun b!80989 () Bool)

(declare-fun e!52872 () Bool)

(declare-fun lt!37848 () List!1497)

(assert (=> b!80989 (= e!52872 (contains!742 lt!37848 (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(declare-fun b!80990 () Bool)

(declare-fun e!52873 () List!1497)

(declare-fun e!52876 () List!1497)

(assert (=> b!80990 (= e!52873 e!52876)))

(declare-fun c!12712 () Bool)

(assert (=> b!80990 (= c!12712 (and ((_ is Cons!1493) (toList!730 lt!37222)) (= (_1!1095 (h!2082 (toList!730 lt!37222))) (_1!1095 lt!37212))))))

(declare-fun bm!7535 () Bool)

(declare-fun call!7537 () List!1497)

(assert (=> bm!7535 (= call!7537 call!7538)))

(declare-fun d!19893 () Bool)

(assert (=> d!19893 e!52872))

(declare-fun res!42157 () Bool)

(assert (=> d!19893 (=> (not res!42157) (not e!52872))))

(assert (=> d!19893 (= res!42157 (isStrictlySorted!283 lt!37848))))

(assert (=> d!19893 (= lt!37848 e!52873)))

(declare-fun c!12709 () Bool)

(assert (=> d!19893 (= c!12709 (and ((_ is Cons!1493) (toList!730 lt!37222)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37222))) (_1!1095 lt!37212))))))

(assert (=> d!19893 (isStrictlySorted!283 (toList!730 lt!37222))))

(assert (=> d!19893 (= (insertStrictlySorted!59 (toList!730 lt!37222) (_1!1095 lt!37212) (_2!1095 lt!37212)) lt!37848)))

(declare-fun e!52874 () List!1497)

(declare-fun bm!7536 () Bool)

(assert (=> bm!7536 (= call!7539 ($colon$colon!69 e!52874 (ite c!12709 (h!2082 (toList!730 lt!37222)) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212)))))))

(declare-fun c!12711 () Bool)

(assert (=> bm!7536 (= c!12711 c!12709)))

(declare-fun b!80991 () Bool)

(declare-fun e!52875 () List!1497)

(assert (=> b!80991 (= e!52875 call!7537)))

(declare-fun b!80992 () Bool)

(declare-fun res!42158 () Bool)

(assert (=> b!80992 (=> (not res!42158) (not e!52872))))

(assert (=> b!80992 (= res!42158 (containsKey!142 lt!37848 (_1!1095 lt!37212)))))

(declare-fun b!80993 () Bool)

(declare-fun c!12710 () Bool)

(assert (=> b!80993 (= c!12710 (and ((_ is Cons!1493) (toList!730 lt!37222)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37222))) (_1!1095 lt!37212))))))

(assert (=> b!80993 (= e!52876 e!52875)))

(declare-fun b!80994 () Bool)

(assert (=> b!80994 (= e!52874 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37222)) (_1!1095 lt!37212) (_2!1095 lt!37212)))))

(declare-fun b!80995 () Bool)

(assert (=> b!80995 (= e!52876 call!7538)))

(declare-fun b!80996 () Bool)

(assert (=> b!80996 (= e!52875 call!7537)))

(declare-fun b!80997 () Bool)

(assert (=> b!80997 (= e!52874 (ite c!12712 (t!5156 (toList!730 lt!37222)) (ite c!12710 (Cons!1493 (h!2082 (toList!730 lt!37222)) (t!5156 (toList!730 lt!37222))) Nil!1494)))))

(declare-fun b!80998 () Bool)

(assert (=> b!80998 (= e!52873 call!7539)))

(assert (= (and d!19893 c!12709) b!80998))

(assert (= (and d!19893 (not c!12709)) b!80990))

(assert (= (and b!80990 c!12712) b!80995))

(assert (= (and b!80990 (not c!12712)) b!80993))

(assert (= (and b!80993 c!12710) b!80996))

(assert (= (and b!80993 (not c!12710)) b!80991))

(assert (= (or b!80996 b!80991) bm!7535))

(assert (= (or b!80995 bm!7535) bm!7534))

(assert (= (or b!80998 bm!7534) bm!7536))

(assert (= (and bm!7536 c!12711) b!80994))

(assert (= (and bm!7536 (not c!12711)) b!80997))

(assert (= (and d!19893 res!42157) b!80992))

(assert (= (and b!80992 res!42158) b!80989))

(declare-fun m!82841 () Bool)

(assert (=> b!80994 m!82841))

(declare-fun m!82843 () Bool)

(assert (=> bm!7536 m!82843))

(declare-fun m!82845 () Bool)

(assert (=> b!80989 m!82845))

(declare-fun m!82847 () Bool)

(assert (=> d!19893 m!82847))

(declare-fun m!82849 () Bool)

(assert (=> d!19893 m!82849))

(declare-fun m!82851 () Bool)

(assert (=> b!80992 m!82851))

(assert (=> d!19709 d!19893))

(declare-fun d!19895 () Bool)

(declare-fun e!52877 () Bool)

(assert (=> d!19895 e!52877))

(declare-fun res!42159 () Bool)

(assert (=> d!19895 (=> res!42159 e!52877)))

(declare-fun lt!37850 () Bool)

(assert (=> d!19895 (= res!42159 (not lt!37850))))

(declare-fun lt!37849 () Bool)

(assert (=> d!19895 (= lt!37850 lt!37849)))

(declare-fun lt!37851 () Unit!2322)

(declare-fun e!52878 () Unit!2322)

(assert (=> d!19895 (= lt!37851 e!52878)))

(declare-fun c!12713 () Bool)

(assert (=> d!19895 (= c!12713 lt!37849)))

(assert (=> d!19895 (= lt!37849 (containsKey!142 (toList!730 lt!37546) (_1!1095 lt!37210)))))

(assert (=> d!19895 (= (contains!739 lt!37546 (_1!1095 lt!37210)) lt!37850)))

(declare-fun b!80999 () Bool)

(declare-fun lt!37852 () Unit!2322)

(assert (=> b!80999 (= e!52878 lt!37852)))

(assert (=> b!80999 (= lt!37852 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37546) (_1!1095 lt!37210)))))

(assert (=> b!80999 (isDefined!91 (getValueByKey!139 (toList!730 lt!37546) (_1!1095 lt!37210)))))

(declare-fun b!81000 () Bool)

(declare-fun Unit!2352 () Unit!2322)

(assert (=> b!81000 (= e!52878 Unit!2352)))

(declare-fun b!81001 () Bool)

(assert (=> b!81001 (= e!52877 (isDefined!91 (getValueByKey!139 (toList!730 lt!37546) (_1!1095 lt!37210))))))

(assert (= (and d!19895 c!12713) b!80999))

(assert (= (and d!19895 (not c!12713)) b!81000))

(assert (= (and d!19895 (not res!42159)) b!81001))

(declare-fun m!82853 () Bool)

(assert (=> d!19895 m!82853))

(declare-fun m!82855 () Bool)

(assert (=> b!80999 m!82855))

(assert (=> b!80999 m!82141))

(assert (=> b!80999 m!82141))

(declare-fun m!82857 () Bool)

(assert (=> b!80999 m!82857))

(assert (=> b!81001 m!82141))

(assert (=> b!81001 m!82141))

(assert (=> b!81001 m!82857))

(assert (=> d!19719 d!19895))

(declare-fun b!81005 () Bool)

(declare-fun e!52880 () Option!145)

(assert (=> b!81005 (= e!52880 None!143)))

(declare-fun b!81004 () Bool)

(assert (=> b!81004 (= e!52880 (getValueByKey!139 (t!5156 lt!37544) (_1!1095 lt!37210)))))

(declare-fun d!19897 () Bool)

(declare-fun c!12714 () Bool)

(assert (=> d!19897 (= c!12714 (and ((_ is Cons!1493) lt!37544) (= (_1!1095 (h!2082 lt!37544)) (_1!1095 lt!37210))))))

(declare-fun e!52879 () Option!145)

(assert (=> d!19897 (= (getValueByKey!139 lt!37544 (_1!1095 lt!37210)) e!52879)))

(declare-fun b!81002 () Bool)

(assert (=> b!81002 (= e!52879 (Some!144 (_2!1095 (h!2082 lt!37544))))))

(declare-fun b!81003 () Bool)

(assert (=> b!81003 (= e!52879 e!52880)))

(declare-fun c!12715 () Bool)

(assert (=> b!81003 (= c!12715 (and ((_ is Cons!1493) lt!37544) (not (= (_1!1095 (h!2082 lt!37544)) (_1!1095 lt!37210)))))))

(assert (= (and d!19897 c!12714) b!81002))

(assert (= (and d!19897 (not c!12714)) b!81003))

(assert (= (and b!81003 c!12715) b!81004))

(assert (= (and b!81003 (not c!12715)) b!81005))

(declare-fun m!82859 () Bool)

(assert (=> b!81004 m!82859))

(assert (=> d!19719 d!19897))

(declare-fun d!19899 () Bool)

(assert (=> d!19899 (= (getValueByKey!139 lt!37544 (_1!1095 lt!37210)) (Some!144 (_2!1095 lt!37210)))))

(declare-fun lt!37853 () Unit!2322)

(assert (=> d!19899 (= lt!37853 (choose!478 lt!37544 (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(declare-fun e!52881 () Bool)

(assert (=> d!19899 e!52881))

(declare-fun res!42160 () Bool)

(assert (=> d!19899 (=> (not res!42160) (not e!52881))))

(assert (=> d!19899 (= res!42160 (isStrictlySorted!283 lt!37544))))

(assert (=> d!19899 (= (lemmaContainsTupThenGetReturnValue!56 lt!37544 (_1!1095 lt!37210) (_2!1095 lt!37210)) lt!37853)))

(declare-fun b!81006 () Bool)

(declare-fun res!42161 () Bool)

(assert (=> b!81006 (=> (not res!42161) (not e!52881))))

(assert (=> b!81006 (= res!42161 (containsKey!142 lt!37544 (_1!1095 lt!37210)))))

(declare-fun b!81007 () Bool)

(assert (=> b!81007 (= e!52881 (contains!742 lt!37544 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(assert (= (and d!19899 res!42160) b!81006))

(assert (= (and b!81006 res!42161) b!81007))

(assert (=> d!19899 m!82135))

(declare-fun m!82861 () Bool)

(assert (=> d!19899 m!82861))

(declare-fun m!82863 () Bool)

(assert (=> d!19899 m!82863))

(declare-fun m!82865 () Bool)

(assert (=> b!81006 m!82865))

(declare-fun m!82867 () Bool)

(assert (=> b!81007 m!82867))

(assert (=> d!19719 d!19899))

(declare-fun bm!7537 () Bool)

(declare-fun call!7541 () List!1497)

(declare-fun call!7542 () List!1497)

(assert (=> bm!7537 (= call!7541 call!7542)))

(declare-fun b!81008 () Bool)

(declare-fun e!52882 () Bool)

(declare-fun lt!37854 () List!1497)

(assert (=> b!81008 (= e!52882 (contains!742 lt!37854 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun b!81009 () Bool)

(declare-fun e!52883 () List!1497)

(declare-fun e!52886 () List!1497)

(assert (=> b!81009 (= e!52883 e!52886)))

(declare-fun c!12719 () Bool)

(assert (=> b!81009 (= c!12719 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37215 lt!37212))) (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37215 lt!37212)))) (_1!1095 lt!37210))))))

(declare-fun bm!7538 () Bool)

(declare-fun call!7540 () List!1497)

(assert (=> bm!7538 (= call!7540 call!7541)))

(declare-fun d!19901 () Bool)

(assert (=> d!19901 e!52882))

(declare-fun res!42162 () Bool)

(assert (=> d!19901 (=> (not res!42162) (not e!52882))))

(assert (=> d!19901 (= res!42162 (isStrictlySorted!283 lt!37854))))

(assert (=> d!19901 (= lt!37854 e!52883)))

(declare-fun c!12716 () Bool)

(assert (=> d!19901 (= c!12716 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37215 lt!37212))) (bvslt (_1!1095 (h!2082 (toList!730 (+!101 lt!37215 lt!37212)))) (_1!1095 lt!37210))))))

(assert (=> d!19901 (isStrictlySorted!283 (toList!730 (+!101 lt!37215 lt!37212)))))

(assert (=> d!19901 (= (insertStrictlySorted!59 (toList!730 (+!101 lt!37215 lt!37212)) (_1!1095 lt!37210) (_2!1095 lt!37210)) lt!37854)))

(declare-fun e!52884 () List!1497)

(declare-fun bm!7539 () Bool)

(assert (=> bm!7539 (= call!7542 ($colon$colon!69 e!52884 (ite c!12716 (h!2082 (toList!730 (+!101 lt!37215 lt!37212))) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210)))))))

(declare-fun c!12718 () Bool)

(assert (=> bm!7539 (= c!12718 c!12716)))

(declare-fun b!81010 () Bool)

(declare-fun e!52885 () List!1497)

(assert (=> b!81010 (= e!52885 call!7540)))

(declare-fun b!81011 () Bool)

(declare-fun res!42163 () Bool)

(assert (=> b!81011 (=> (not res!42163) (not e!52882))))

(assert (=> b!81011 (= res!42163 (containsKey!142 lt!37854 (_1!1095 lt!37210)))))

(declare-fun c!12717 () Bool)

(declare-fun b!81012 () Bool)

(assert (=> b!81012 (= c!12717 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37215 lt!37212))) (bvsgt (_1!1095 (h!2082 (toList!730 (+!101 lt!37215 lt!37212)))) (_1!1095 lt!37210))))))

(assert (=> b!81012 (= e!52886 e!52885)))

(declare-fun b!81013 () Bool)

(assert (=> b!81013 (= e!52884 (insertStrictlySorted!59 (t!5156 (toList!730 (+!101 lt!37215 lt!37212))) (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(declare-fun b!81014 () Bool)

(assert (=> b!81014 (= e!52886 call!7541)))

(declare-fun b!81015 () Bool)

(assert (=> b!81015 (= e!52885 call!7540)))

(declare-fun b!81016 () Bool)

(assert (=> b!81016 (= e!52884 (ite c!12719 (t!5156 (toList!730 (+!101 lt!37215 lt!37212))) (ite c!12717 (Cons!1493 (h!2082 (toList!730 (+!101 lt!37215 lt!37212))) (t!5156 (toList!730 (+!101 lt!37215 lt!37212)))) Nil!1494)))))

(declare-fun b!81017 () Bool)

(assert (=> b!81017 (= e!52883 call!7542)))

(assert (= (and d!19901 c!12716) b!81017))

(assert (= (and d!19901 (not c!12716)) b!81009))

(assert (= (and b!81009 c!12719) b!81014))

(assert (= (and b!81009 (not c!12719)) b!81012))

(assert (= (and b!81012 c!12717) b!81015))

(assert (= (and b!81012 (not c!12717)) b!81010))

(assert (= (or b!81015 b!81010) bm!7538))

(assert (= (or b!81014 bm!7538) bm!7537))

(assert (= (or b!81017 bm!7537) bm!7539))

(assert (= (and bm!7539 c!12718) b!81013))

(assert (= (and bm!7539 (not c!12718)) b!81016))

(assert (= (and d!19901 res!42162) b!81011))

(assert (= (and b!81011 res!42163) b!81008))

(declare-fun m!82869 () Bool)

(assert (=> b!81013 m!82869))

(declare-fun m!82871 () Bool)

(assert (=> bm!7539 m!82871))

(declare-fun m!82873 () Bool)

(assert (=> b!81008 m!82873))

(declare-fun m!82875 () Bool)

(assert (=> d!19901 m!82875))

(declare-fun m!82877 () Bool)

(assert (=> d!19901 m!82877))

(declare-fun m!82879 () Bool)

(assert (=> b!81011 m!82879))

(assert (=> d!19719 d!19901))

(assert (=> b!80559 d!19703))

(assert (=> b!80527 d!19827))

(declare-fun d!19903 () Bool)

(declare-fun e!52887 () Bool)

(assert (=> d!19903 e!52887))

(declare-fun res!42165 () Bool)

(assert (=> d!19903 (=> (not res!42165) (not e!52887))))

(declare-fun lt!37858 () ListLongMap!1429)

(assert (=> d!19903 (= res!42165 (contains!739 lt!37858 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun lt!37856 () List!1497)

(assert (=> d!19903 (= lt!37858 (ListLongMap!1430 lt!37856))))

(declare-fun lt!37855 () Unit!2322)

(declare-fun lt!37857 () Unit!2322)

(assert (=> d!19903 (= lt!37855 lt!37857)))

(assert (=> d!19903 (= (getValueByKey!139 lt!37856 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (Some!144 (_2!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!19903 (= lt!37857 (lemmaContainsTupThenGetReturnValue!56 lt!37856 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_2!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!19903 (= lt!37856 (insertStrictlySorted!59 (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475))) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_2!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!19903 (= (+!101 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475)) (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37858)))

(declare-fun b!81018 () Bool)

(declare-fun res!42164 () Bool)

(assert (=> b!81018 (=> (not res!42164) (not e!52887))))

(assert (=> b!81018 (= res!42164 (= (getValueByKey!139 (toList!730 lt!37858) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (Some!144 (_2!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun b!81019 () Bool)

(assert (=> b!81019 (= e!52887 (contains!742 (toList!730 lt!37858) (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (= (and d!19903 res!42165) b!81018))

(assert (= (and b!81018 res!42164) b!81019))

(declare-fun m!82881 () Bool)

(assert (=> d!19903 m!82881))

(declare-fun m!82883 () Bool)

(assert (=> d!19903 m!82883))

(declare-fun m!82885 () Bool)

(assert (=> d!19903 m!82885))

(declare-fun m!82887 () Bool)

(assert (=> d!19903 m!82887))

(declare-fun m!82889 () Bool)

(assert (=> b!81018 m!82889))

(declare-fun m!82891 () Bool)

(assert (=> b!81019 m!82891))

(assert (=> bm!7473 d!19903))

(assert (=> d!19689 d!19727))

(declare-fun b!81032 () Bool)

(declare-fun e!52896 () SeekEntryResult!235)

(assert (=> b!81032 (= e!52896 Undefined!235)))

(declare-fun b!81033 () Bool)

(declare-fun e!52894 () SeekEntryResult!235)

(assert (=> b!81033 (= e!52896 e!52894)))

(declare-fun lt!37867 () (_ BitVec 64))

(declare-fun lt!37866 () SeekEntryResult!235)

(assert (=> b!81033 (= lt!37867 (select (arr!1892 (_keys!3956 newMap!16)) (index!3077 lt!37866)))))

(declare-fun c!12727 () Bool)

(assert (=> b!81033 (= c!12727 (= lt!37867 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!81034 () Bool)

(assert (=> b!81034 (= e!52894 (Found!235 (index!3077 lt!37866)))))

(declare-fun b!81035 () Bool)

(declare-fun c!12726 () Bool)

(assert (=> b!81035 (= c!12726 (= lt!37867 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52895 () SeekEntryResult!235)

(assert (=> b!81035 (= e!52894 e!52895)))

(declare-fun d!19905 () Bool)

(declare-fun lt!37865 () SeekEntryResult!235)

(assert (=> d!19905 (and (or ((_ is Undefined!235) lt!37865) (not ((_ is Found!235) lt!37865)) (and (bvsge (index!3076 lt!37865) #b00000000000000000000000000000000) (bvslt (index!3076 lt!37865) (size!2134 (_keys!3956 newMap!16))))) (or ((_ is Undefined!235) lt!37865) ((_ is Found!235) lt!37865) (not ((_ is MissingZero!235) lt!37865)) (and (bvsge (index!3075 lt!37865) #b00000000000000000000000000000000) (bvslt (index!3075 lt!37865) (size!2134 (_keys!3956 newMap!16))))) (or ((_ is Undefined!235) lt!37865) ((_ is Found!235) lt!37865) ((_ is MissingZero!235) lt!37865) (not ((_ is MissingVacant!235) lt!37865)) (and (bvsge (index!3078 lt!37865) #b00000000000000000000000000000000) (bvslt (index!3078 lt!37865) (size!2134 (_keys!3956 newMap!16))))) (or ((_ is Undefined!235) lt!37865) (ite ((_ is Found!235) lt!37865) (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37865)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (ite ((_ is MissingZero!235) lt!37865) (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3075 lt!37865)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!235) lt!37865) (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3078 lt!37865)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19905 (= lt!37865 e!52896)))

(declare-fun c!12728 () Bool)

(assert (=> d!19905 (= c!12728 (and ((_ is Intermediate!235) lt!37866) (undefined!1047 lt!37866)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3971 (_ BitVec 32)) SeekEntryResult!235)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!19905 (= lt!37866 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (mask!6298 newMap!16)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(assert (=> d!19905 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!19905 (= (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)) lt!37865)))

(declare-fun b!81036 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3971 (_ BitVec 32)) SeekEntryResult!235)

(assert (=> b!81036 (= e!52895 (seekKeyOrZeroReturnVacant!0 (x!11686 lt!37866) (index!3077 lt!37866) (index!3077 lt!37866) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(declare-fun b!81037 () Bool)

(assert (=> b!81037 (= e!52895 (MissingZero!235 (index!3077 lt!37866)))))

(assert (= (and d!19905 c!12728) b!81032))

(assert (= (and d!19905 (not c!12728)) b!81033))

(assert (= (and b!81033 c!12727) b!81034))

(assert (= (and b!81033 (not c!12727)) b!81035))

(assert (= (and b!81035 c!12726) b!81037))

(assert (= (and b!81035 (not c!12726)) b!81036))

(declare-fun m!82893 () Bool)

(assert (=> b!81033 m!82893))

(declare-fun m!82895 () Bool)

(assert (=> d!19905 m!82895))

(declare-fun m!82897 () Bool)

(assert (=> d!19905 m!82897))

(declare-fun m!82899 () Bool)

(assert (=> d!19905 m!82899))

(assert (=> d!19905 m!81737))

(declare-fun m!82901 () Bool)

(assert (=> d!19905 m!82901))

(assert (=> d!19905 m!82223))

(declare-fun m!82903 () Bool)

(assert (=> d!19905 m!82903))

(assert (=> d!19905 m!81737))

(assert (=> d!19905 m!82899))

(assert (=> b!81036 m!81737))

(declare-fun m!82905 () Bool)

(assert (=> b!81036 m!82905))

(assert (=> bm!7439 d!19905))

(declare-fun d!19907 () Bool)

(declare-fun e!52897 () Bool)

(assert (=> d!19907 e!52897))

(declare-fun res!42166 () Bool)

(assert (=> d!19907 (=> res!42166 e!52897)))

(declare-fun lt!37869 () Bool)

(assert (=> d!19907 (= res!42166 (not lt!37869))))

(declare-fun lt!37868 () Bool)

(assert (=> d!19907 (= lt!37869 lt!37868)))

(declare-fun lt!37870 () Unit!2322)

(declare-fun e!52898 () Unit!2322)

(assert (=> d!19907 (= lt!37870 e!52898)))

(declare-fun c!12729 () Bool)

(assert (=> d!19907 (= c!12729 lt!37868)))

(assert (=> d!19907 (= lt!37868 (containsKey!142 (toList!730 lt!37550) (_1!1095 lt!37209)))))

(assert (=> d!19907 (= (contains!739 lt!37550 (_1!1095 lt!37209)) lt!37869)))

(declare-fun b!81038 () Bool)

(declare-fun lt!37871 () Unit!2322)

(assert (=> b!81038 (= e!52898 lt!37871)))

(assert (=> b!81038 (= lt!37871 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37550) (_1!1095 lt!37209)))))

(assert (=> b!81038 (isDefined!91 (getValueByKey!139 (toList!730 lt!37550) (_1!1095 lt!37209)))))

(declare-fun b!81039 () Bool)

(declare-fun Unit!2353 () Unit!2322)

(assert (=> b!81039 (= e!52898 Unit!2353)))

(declare-fun b!81040 () Bool)

(assert (=> b!81040 (= e!52897 (isDefined!91 (getValueByKey!139 (toList!730 lt!37550) (_1!1095 lt!37209))))))

(assert (= (and d!19907 c!12729) b!81038))

(assert (= (and d!19907 (not c!12729)) b!81039))

(assert (= (and d!19907 (not res!42166)) b!81040))

(declare-fun m!82907 () Bool)

(assert (=> d!19907 m!82907))

(declare-fun m!82909 () Bool)

(assert (=> b!81038 m!82909))

(assert (=> b!81038 m!82153))

(assert (=> b!81038 m!82153))

(declare-fun m!82911 () Bool)

(assert (=> b!81038 m!82911))

(assert (=> b!81040 m!82153))

(assert (=> b!81040 m!82153))

(assert (=> b!81040 m!82911))

(assert (=> d!19721 d!19907))

(declare-fun b!81044 () Bool)

(declare-fun e!52900 () Option!145)

(assert (=> b!81044 (= e!52900 None!143)))

(declare-fun b!81043 () Bool)

(assert (=> b!81043 (= e!52900 (getValueByKey!139 (t!5156 lt!37548) (_1!1095 lt!37209)))))

(declare-fun d!19909 () Bool)

(declare-fun c!12730 () Bool)

(assert (=> d!19909 (= c!12730 (and ((_ is Cons!1493) lt!37548) (= (_1!1095 (h!2082 lt!37548)) (_1!1095 lt!37209))))))

(declare-fun e!52899 () Option!145)

(assert (=> d!19909 (= (getValueByKey!139 lt!37548 (_1!1095 lt!37209)) e!52899)))

(declare-fun b!81041 () Bool)

(assert (=> b!81041 (= e!52899 (Some!144 (_2!1095 (h!2082 lt!37548))))))

(declare-fun b!81042 () Bool)

(assert (=> b!81042 (= e!52899 e!52900)))

(declare-fun c!12731 () Bool)

(assert (=> b!81042 (= c!12731 (and ((_ is Cons!1493) lt!37548) (not (= (_1!1095 (h!2082 lt!37548)) (_1!1095 lt!37209)))))))

(assert (= (and d!19909 c!12730) b!81041))

(assert (= (and d!19909 (not c!12730)) b!81042))

(assert (= (and b!81042 c!12731) b!81043))

(assert (= (and b!81042 (not c!12731)) b!81044))

(declare-fun m!82913 () Bool)

(assert (=> b!81043 m!82913))

(assert (=> d!19721 d!19909))

(declare-fun d!19911 () Bool)

(assert (=> d!19911 (= (getValueByKey!139 lt!37548 (_1!1095 lt!37209)) (Some!144 (_2!1095 lt!37209)))))

(declare-fun lt!37872 () Unit!2322)

(assert (=> d!19911 (= lt!37872 (choose!478 lt!37548 (_1!1095 lt!37209) (_2!1095 lt!37209)))))

(declare-fun e!52901 () Bool)

(assert (=> d!19911 e!52901))

(declare-fun res!42167 () Bool)

(assert (=> d!19911 (=> (not res!42167) (not e!52901))))

(assert (=> d!19911 (= res!42167 (isStrictlySorted!283 lt!37548))))

(assert (=> d!19911 (= (lemmaContainsTupThenGetReturnValue!56 lt!37548 (_1!1095 lt!37209) (_2!1095 lt!37209)) lt!37872)))

(declare-fun b!81045 () Bool)

(declare-fun res!42168 () Bool)

(assert (=> b!81045 (=> (not res!42168) (not e!52901))))

(assert (=> b!81045 (= res!42168 (containsKey!142 lt!37548 (_1!1095 lt!37209)))))

(declare-fun b!81046 () Bool)

(assert (=> b!81046 (= e!52901 (contains!742 lt!37548 (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(assert (= (and d!19911 res!42167) b!81045))

(assert (= (and b!81045 res!42168) b!81046))

(assert (=> d!19911 m!82147))

(declare-fun m!82915 () Bool)

(assert (=> d!19911 m!82915))

(declare-fun m!82917 () Bool)

(assert (=> d!19911 m!82917))

(declare-fun m!82919 () Bool)

(assert (=> b!81045 m!82919))

(declare-fun m!82921 () Bool)

(assert (=> b!81046 m!82921))

(assert (=> d!19721 d!19911))

(declare-fun bm!7540 () Bool)

(declare-fun call!7544 () List!1497)

(declare-fun call!7545 () List!1497)

(assert (=> bm!7540 (= call!7544 call!7545)))

(declare-fun b!81047 () Bool)

(declare-fun e!52902 () Bool)

(declare-fun lt!37873 () List!1497)

(assert (=> b!81047 (= e!52902 (contains!742 lt!37873 (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(declare-fun b!81048 () Bool)

(declare-fun e!52903 () List!1497)

(declare-fun e!52906 () List!1497)

(assert (=> b!81048 (= e!52903 e!52906)))

(declare-fun c!12735 () Bool)

(assert (=> b!81048 (= c!12735 (and ((_ is Cons!1493) (toList!730 lt!37211)) (= (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 lt!37209))))))

(declare-fun bm!7541 () Bool)

(declare-fun call!7543 () List!1497)

(assert (=> bm!7541 (= call!7543 call!7544)))

(declare-fun d!19913 () Bool)

(assert (=> d!19913 e!52902))

(declare-fun res!42169 () Bool)

(assert (=> d!19913 (=> (not res!42169) (not e!52902))))

(assert (=> d!19913 (= res!42169 (isStrictlySorted!283 lt!37873))))

(assert (=> d!19913 (= lt!37873 e!52903)))

(declare-fun c!12732 () Bool)

(assert (=> d!19913 (= c!12732 (and ((_ is Cons!1493) (toList!730 lt!37211)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 lt!37209))))))

(assert (=> d!19913 (isStrictlySorted!283 (toList!730 lt!37211))))

(assert (=> d!19913 (= (insertStrictlySorted!59 (toList!730 lt!37211) (_1!1095 lt!37209) (_2!1095 lt!37209)) lt!37873)))

(declare-fun e!52904 () List!1497)

(declare-fun bm!7542 () Bool)

(assert (=> bm!7542 (= call!7545 ($colon$colon!69 e!52904 (ite c!12732 (h!2082 (toList!730 lt!37211)) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209)))))))

(declare-fun c!12734 () Bool)

(assert (=> bm!7542 (= c!12734 c!12732)))

(declare-fun b!81049 () Bool)

(declare-fun e!52905 () List!1497)

(assert (=> b!81049 (= e!52905 call!7543)))

(declare-fun b!81050 () Bool)

(declare-fun res!42170 () Bool)

(assert (=> b!81050 (=> (not res!42170) (not e!52902))))

(assert (=> b!81050 (= res!42170 (containsKey!142 lt!37873 (_1!1095 lt!37209)))))

(declare-fun b!81051 () Bool)

(declare-fun c!12733 () Bool)

(assert (=> b!81051 (= c!12733 (and ((_ is Cons!1493) (toList!730 lt!37211)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 lt!37209))))))

(assert (=> b!81051 (= e!52906 e!52905)))

(declare-fun b!81052 () Bool)

(assert (=> b!81052 (= e!52904 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37211)) (_1!1095 lt!37209) (_2!1095 lt!37209)))))

(declare-fun b!81053 () Bool)

(assert (=> b!81053 (= e!52906 call!7544)))

(declare-fun b!81054 () Bool)

(assert (=> b!81054 (= e!52905 call!7543)))

(declare-fun b!81055 () Bool)

(assert (=> b!81055 (= e!52904 (ite c!12735 (t!5156 (toList!730 lt!37211)) (ite c!12733 (Cons!1493 (h!2082 (toList!730 lt!37211)) (t!5156 (toList!730 lt!37211))) Nil!1494)))))

(declare-fun b!81056 () Bool)

(assert (=> b!81056 (= e!52903 call!7545)))

(assert (= (and d!19913 c!12732) b!81056))

(assert (= (and d!19913 (not c!12732)) b!81048))

(assert (= (and b!81048 c!12735) b!81053))

(assert (= (and b!81048 (not c!12735)) b!81051))

(assert (= (and b!81051 c!12733) b!81054))

(assert (= (and b!81051 (not c!12733)) b!81049))

(assert (= (or b!81054 b!81049) bm!7541))

(assert (= (or b!81053 bm!7541) bm!7540))

(assert (= (or b!81056 bm!7540) bm!7542))

(assert (= (and bm!7542 c!12734) b!81052))

(assert (= (and bm!7542 (not c!12734)) b!81055))

(assert (= (and d!19913 res!42169) b!81050))

(assert (= (and b!81050 res!42170) b!81047))

(declare-fun m!82923 () Bool)

(assert (=> b!81052 m!82923))

(declare-fun m!82925 () Bool)

(assert (=> bm!7542 m!82925))

(declare-fun m!82927 () Bool)

(assert (=> b!81047 m!82927))

(declare-fun m!82929 () Bool)

(assert (=> d!19913 m!82929))

(declare-fun m!82931 () Bool)

(assert (=> d!19913 m!82931))

(declare-fun m!82933 () Bool)

(assert (=> b!81050 m!82933))

(assert (=> d!19721 d!19913))

(declare-fun d!19915 () Bool)

(declare-fun e!52909 () Bool)

(assert (=> d!19915 e!52909))

(declare-fun res!42175 () Bool)

(assert (=> d!19915 (=> (not res!42175) (not e!52909))))

(declare-fun lt!37879 () SeekEntryResult!235)

(assert (=> d!19915 (= res!42175 ((_ is Found!235) lt!37879))))

(assert (=> d!19915 (= lt!37879 (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(declare-fun lt!37878 () Unit!2322)

(declare-fun choose!485 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) Int) Unit!2322)

(assert (=> d!19915 (= lt!37878 (choose!485 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)))))

(assert (=> d!19915 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!19915 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)) lt!37878)))

(declare-fun b!81061 () Bool)

(declare-fun res!42176 () Bool)

(assert (=> b!81061 (=> (not res!42176) (not e!52909))))

(assert (=> b!81061 (= res!42176 (inRange!0 (index!3076 lt!37879) (mask!6298 newMap!16)))))

(declare-fun b!81062 () Bool)

(assert (=> b!81062 (= e!52909 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37879)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> b!81062 (and (bvsge (index!3076 lt!37879) #b00000000000000000000000000000000) (bvslt (index!3076 lt!37879) (size!2134 (_keys!3956 newMap!16))))))

(assert (= (and d!19915 res!42175) b!81061))

(assert (= (and b!81061 res!42176) b!81062))

(assert (=> d!19915 m!81737))

(assert (=> d!19915 m!81959))

(assert (=> d!19915 m!81737))

(declare-fun m!82935 () Bool)

(assert (=> d!19915 m!82935))

(assert (=> d!19915 m!82223))

(declare-fun m!82937 () Bool)

(assert (=> b!81061 m!82937))

(declare-fun m!82939 () Bool)

(assert (=> b!81062 m!82939))

(assert (=> bm!7447 d!19915))

(declare-fun d!19917 () Bool)

(declare-fun e!52910 () Bool)

(assert (=> d!19917 e!52910))

(declare-fun res!42177 () Bool)

(assert (=> d!19917 (=> res!42177 e!52910)))

(declare-fun lt!37881 () Bool)

(assert (=> d!19917 (= res!42177 (not lt!37881))))

(declare-fun lt!37880 () Bool)

(assert (=> d!19917 (= lt!37881 lt!37880)))

(declare-fun lt!37882 () Unit!2322)

(declare-fun e!52911 () Unit!2322)

(assert (=> d!19917 (= lt!37882 e!52911)))

(declare-fun c!12736 () Bool)

(assert (=> d!19917 (= c!12736 lt!37880)))

(assert (=> d!19917 (= lt!37880 (containsKey!142 (toList!730 lt!37554) (_1!1095 lt!37210)))))

(assert (=> d!19917 (= (contains!739 lt!37554 (_1!1095 lt!37210)) lt!37881)))

(declare-fun b!81063 () Bool)

(declare-fun lt!37883 () Unit!2322)

(assert (=> b!81063 (= e!52911 lt!37883)))

(assert (=> b!81063 (= lt!37883 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37554) (_1!1095 lt!37210)))))

(assert (=> b!81063 (isDefined!91 (getValueByKey!139 (toList!730 lt!37554) (_1!1095 lt!37210)))))

(declare-fun b!81064 () Bool)

(declare-fun Unit!2354 () Unit!2322)

(assert (=> b!81064 (= e!52911 Unit!2354)))

(declare-fun b!81065 () Bool)

(assert (=> b!81065 (= e!52910 (isDefined!91 (getValueByKey!139 (toList!730 lt!37554) (_1!1095 lt!37210))))))

(assert (= (and d!19917 c!12736) b!81063))

(assert (= (and d!19917 (not c!12736)) b!81064))

(assert (= (and d!19917 (not res!42177)) b!81065))

(declare-fun m!82941 () Bool)

(assert (=> d!19917 m!82941))

(declare-fun m!82943 () Bool)

(assert (=> b!81063 m!82943))

(assert (=> b!81063 m!82165))

(assert (=> b!81063 m!82165))

(declare-fun m!82945 () Bool)

(assert (=> b!81063 m!82945))

(assert (=> b!81065 m!82165))

(assert (=> b!81065 m!82165))

(assert (=> b!81065 m!82945))

(assert (=> d!19723 d!19917))

(declare-fun b!81069 () Bool)

(declare-fun e!52913 () Option!145)

(assert (=> b!81069 (= e!52913 None!143)))

(declare-fun b!81068 () Bool)

(assert (=> b!81068 (= e!52913 (getValueByKey!139 (t!5156 lt!37552) (_1!1095 lt!37210)))))

(declare-fun d!19919 () Bool)

(declare-fun c!12737 () Bool)

(assert (=> d!19919 (= c!12737 (and ((_ is Cons!1493) lt!37552) (= (_1!1095 (h!2082 lt!37552)) (_1!1095 lt!37210))))))

(declare-fun e!52912 () Option!145)

(assert (=> d!19919 (= (getValueByKey!139 lt!37552 (_1!1095 lt!37210)) e!52912)))

(declare-fun b!81066 () Bool)

(assert (=> b!81066 (= e!52912 (Some!144 (_2!1095 (h!2082 lt!37552))))))

(declare-fun b!81067 () Bool)

(assert (=> b!81067 (= e!52912 e!52913)))

(declare-fun c!12738 () Bool)

(assert (=> b!81067 (= c!12738 (and ((_ is Cons!1493) lt!37552) (not (= (_1!1095 (h!2082 lt!37552)) (_1!1095 lt!37210)))))))

(assert (= (and d!19919 c!12737) b!81066))

(assert (= (and d!19919 (not c!12737)) b!81067))

(assert (= (and b!81067 c!12738) b!81068))

(assert (= (and b!81067 (not c!12738)) b!81069))

(declare-fun m!82947 () Bool)

(assert (=> b!81068 m!82947))

(assert (=> d!19723 d!19919))

(declare-fun d!19921 () Bool)

(assert (=> d!19921 (= (getValueByKey!139 lt!37552 (_1!1095 lt!37210)) (Some!144 (_2!1095 lt!37210)))))

(declare-fun lt!37884 () Unit!2322)

(assert (=> d!19921 (= lt!37884 (choose!478 lt!37552 (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(declare-fun e!52914 () Bool)

(assert (=> d!19921 e!52914))

(declare-fun res!42178 () Bool)

(assert (=> d!19921 (=> (not res!42178) (not e!52914))))

(assert (=> d!19921 (= res!42178 (isStrictlySorted!283 lt!37552))))

(assert (=> d!19921 (= (lemmaContainsTupThenGetReturnValue!56 lt!37552 (_1!1095 lt!37210) (_2!1095 lt!37210)) lt!37884)))

(declare-fun b!81070 () Bool)

(declare-fun res!42179 () Bool)

(assert (=> b!81070 (=> (not res!42179) (not e!52914))))

(assert (=> b!81070 (= res!42179 (containsKey!142 lt!37552 (_1!1095 lt!37210)))))

(declare-fun b!81071 () Bool)

(assert (=> b!81071 (= e!52914 (contains!742 lt!37552 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(assert (= (and d!19921 res!42178) b!81070))

(assert (= (and b!81070 res!42179) b!81071))

(assert (=> d!19921 m!82159))

(declare-fun m!82949 () Bool)

(assert (=> d!19921 m!82949))

(declare-fun m!82951 () Bool)

(assert (=> d!19921 m!82951))

(declare-fun m!82953 () Bool)

(assert (=> b!81070 m!82953))

(declare-fun m!82955 () Bool)

(assert (=> b!81071 m!82955))

(assert (=> d!19723 d!19921))

(declare-fun bm!7543 () Bool)

(declare-fun call!7547 () List!1497)

(declare-fun call!7548 () List!1497)

(assert (=> bm!7543 (= call!7547 call!7548)))

(declare-fun b!81072 () Bool)

(declare-fun e!52915 () Bool)

(declare-fun lt!37885 () List!1497)

(assert (=> b!81072 (= e!52915 (contains!742 lt!37885 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun b!81073 () Bool)

(declare-fun e!52916 () List!1497)

(declare-fun e!52919 () List!1497)

(assert (=> b!81073 (= e!52916 e!52919)))

(declare-fun c!12742 () Bool)

(assert (=> b!81073 (= c!12742 (and ((_ is Cons!1493) (toList!730 lt!37215)) (= (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 lt!37210))))))

(declare-fun bm!7544 () Bool)

(declare-fun call!7546 () List!1497)

(assert (=> bm!7544 (= call!7546 call!7547)))

(declare-fun d!19923 () Bool)

(assert (=> d!19923 e!52915))

(declare-fun res!42180 () Bool)

(assert (=> d!19923 (=> (not res!42180) (not e!52915))))

(assert (=> d!19923 (= res!42180 (isStrictlySorted!283 lt!37885))))

(assert (=> d!19923 (= lt!37885 e!52916)))

(declare-fun c!12739 () Bool)

(assert (=> d!19923 (= c!12739 (and ((_ is Cons!1493) (toList!730 lt!37215)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 lt!37210))))))

(assert (=> d!19923 (isStrictlySorted!283 (toList!730 lt!37215))))

(assert (=> d!19923 (= (insertStrictlySorted!59 (toList!730 lt!37215) (_1!1095 lt!37210) (_2!1095 lt!37210)) lt!37885)))

(declare-fun e!52917 () List!1497)

(declare-fun bm!7545 () Bool)

(assert (=> bm!7545 (= call!7548 ($colon$colon!69 e!52917 (ite c!12739 (h!2082 (toList!730 lt!37215)) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210)))))))

(declare-fun c!12741 () Bool)

(assert (=> bm!7545 (= c!12741 c!12739)))

(declare-fun b!81074 () Bool)

(declare-fun e!52918 () List!1497)

(assert (=> b!81074 (= e!52918 call!7546)))

(declare-fun b!81075 () Bool)

(declare-fun res!42181 () Bool)

(assert (=> b!81075 (=> (not res!42181) (not e!52915))))

(assert (=> b!81075 (= res!42181 (containsKey!142 lt!37885 (_1!1095 lt!37210)))))

(declare-fun b!81076 () Bool)

(declare-fun c!12740 () Bool)

(assert (=> b!81076 (= c!12740 (and ((_ is Cons!1493) (toList!730 lt!37215)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 lt!37210))))))

(assert (=> b!81076 (= e!52919 e!52918)))

(declare-fun b!81077 () Bool)

(assert (=> b!81077 (= e!52917 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37215)) (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(declare-fun b!81078 () Bool)

(assert (=> b!81078 (= e!52919 call!7547)))

(declare-fun b!81079 () Bool)

(assert (=> b!81079 (= e!52918 call!7546)))

(declare-fun b!81080 () Bool)

(assert (=> b!81080 (= e!52917 (ite c!12742 (t!5156 (toList!730 lt!37215)) (ite c!12740 (Cons!1493 (h!2082 (toList!730 lt!37215)) (t!5156 (toList!730 lt!37215))) Nil!1494)))))

(declare-fun b!81081 () Bool)

(assert (=> b!81081 (= e!52916 call!7548)))

(assert (= (and d!19923 c!12739) b!81081))

(assert (= (and d!19923 (not c!12739)) b!81073))

(assert (= (and b!81073 c!12742) b!81078))

(assert (= (and b!81073 (not c!12742)) b!81076))

(assert (= (and b!81076 c!12740) b!81079))

(assert (= (and b!81076 (not c!12740)) b!81074))

(assert (= (or b!81079 b!81074) bm!7544))

(assert (= (or b!81078 bm!7544) bm!7543))

(assert (= (or b!81081 bm!7543) bm!7545))

(assert (= (and bm!7545 c!12741) b!81077))

(assert (= (and bm!7545 (not c!12741)) b!81080))

(assert (= (and d!19923 res!42180) b!81075))

(assert (= (and b!81075 res!42181) b!81072))

(declare-fun m!82957 () Bool)

(assert (=> b!81077 m!82957))

(declare-fun m!82959 () Bool)

(assert (=> bm!7545 m!82959))

(declare-fun m!82961 () Bool)

(assert (=> b!81072 m!82961))

(declare-fun m!82963 () Bool)

(assert (=> d!19923 m!82963))

(assert (=> d!19923 m!82491))

(declare-fun m!82965 () Bool)

(assert (=> b!81075 m!82965))

(assert (=> d!19723 d!19923))

(assert (=> b!80609 d!19799))

(declare-fun d!19925 () Bool)

(assert (=> d!19925 (not (contains!739 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)) lt!37534))))

(declare-fun lt!37888 () Unit!2322)

(declare-fun choose!486 (ListLongMap!1429 (_ BitVec 64) V!3001 (_ BitVec 64)) Unit!2322)

(assert (=> d!19925 (= lt!37888 (choose!486 lt!37533 lt!37538 lt!37537 lt!37534))))

(declare-fun e!52922 () Bool)

(assert (=> d!19925 e!52922))

(declare-fun res!42184 () Bool)

(assert (=> d!19925 (=> (not res!42184) (not e!52922))))

(assert (=> d!19925 (= res!42184 (not (contains!739 lt!37533 lt!37534)))))

(assert (=> d!19925 (= (addStillNotContains!31 lt!37533 lt!37538 lt!37537 lt!37534) lt!37888)))

(declare-fun b!81085 () Bool)

(assert (=> b!81085 (= e!52922 (not (= lt!37538 lt!37534)))))

(assert (= (and d!19925 res!42184) b!81085))

(assert (=> d!19925 m!82099))

(assert (=> d!19925 m!82099))

(assert (=> d!19925 m!82101))

(declare-fun m!82967 () Bool)

(assert (=> d!19925 m!82967))

(declare-fun m!82969 () Bool)

(assert (=> d!19925 m!82969))

(assert (=> b!80609 d!19925))

(declare-fun d!19927 () Bool)

(declare-fun e!52923 () Bool)

(assert (=> d!19927 e!52923))

(declare-fun res!42186 () Bool)

(assert (=> d!19927 (=> (not res!42186) (not e!52923))))

(declare-fun lt!37892 () ListLongMap!1429)

(assert (=> d!19927 (= res!42186 (contains!739 lt!37892 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!37890 () List!1497)

(assert (=> d!19927 (= lt!37892 (ListLongMap!1430 lt!37890))))

(declare-fun lt!37889 () Unit!2322)

(declare-fun lt!37891 () Unit!2322)

(assert (=> d!19927 (= lt!37889 lt!37891)))

(assert (=> d!19927 (= (getValueByKey!139 lt!37890 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19927 (= lt!37891 (lemmaContainsTupThenGetReturnValue!56 lt!37890 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19927 (= lt!37890 (insertStrictlySorted!59 (toList!730 call!7486) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19927 (= (+!101 call!7486 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!37892)))

(declare-fun b!81086 () Bool)

(declare-fun res!42185 () Bool)

(assert (=> b!81086 (=> (not res!42185) (not e!52923))))

(assert (=> b!81086 (= res!42185 (= (getValueByKey!139 (toList!730 lt!37892) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!81087 () Bool)

(assert (=> b!81087 (= e!52923 (contains!742 (toList!730 lt!37892) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!19927 res!42186) b!81086))

(assert (= (and b!81086 res!42185) b!81087))

(declare-fun m!82971 () Bool)

(assert (=> d!19927 m!82971))

(declare-fun m!82973 () Bool)

(assert (=> d!19927 m!82973))

(declare-fun m!82975 () Bool)

(assert (=> d!19927 m!82975))

(declare-fun m!82977 () Bool)

(assert (=> d!19927 m!82977))

(declare-fun m!82979 () Bool)

(assert (=> b!81086 m!82979))

(declare-fun m!82981 () Bool)

(assert (=> b!81087 m!82981))

(assert (=> b!80609 d!19927))

(declare-fun d!19929 () Bool)

(declare-fun e!52924 () Bool)

(assert (=> d!19929 e!52924))

(declare-fun res!42187 () Bool)

(assert (=> d!19929 (=> res!42187 e!52924)))

(declare-fun lt!37894 () Bool)

(assert (=> d!19929 (= res!42187 (not lt!37894))))

(declare-fun lt!37893 () Bool)

(assert (=> d!19929 (= lt!37894 lt!37893)))

(declare-fun lt!37895 () Unit!2322)

(declare-fun e!52925 () Unit!2322)

(assert (=> d!19929 (= lt!37895 e!52925)))

(declare-fun c!12743 () Bool)

(assert (=> d!19929 (= c!12743 lt!37893)))

(assert (=> d!19929 (= lt!37893 (containsKey!142 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))) lt!37534))))

(assert (=> d!19929 (= (contains!739 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)) lt!37534) lt!37894)))

(declare-fun b!81088 () Bool)

(declare-fun lt!37896 () Unit!2322)

(assert (=> b!81088 (= e!52925 lt!37896)))

(assert (=> b!81088 (= lt!37896 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))) lt!37534))))

(assert (=> b!81088 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))) lt!37534))))

(declare-fun b!81089 () Bool)

(declare-fun Unit!2355 () Unit!2322)

(assert (=> b!81089 (= e!52925 Unit!2355)))

(declare-fun b!81090 () Bool)

(assert (=> b!81090 (= e!52924 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))) lt!37534)))))

(assert (= (and d!19929 c!12743) b!81088))

(assert (= (and d!19929 (not c!12743)) b!81089))

(assert (= (and d!19929 (not res!42187)) b!81090))

(declare-fun m!82983 () Bool)

(assert (=> d!19929 m!82983))

(declare-fun m!82985 () Bool)

(assert (=> b!81088 m!82985))

(declare-fun m!82987 () Bool)

(assert (=> b!81088 m!82987))

(assert (=> b!81088 m!82987))

(declare-fun m!82989 () Bool)

(assert (=> b!81088 m!82989))

(assert (=> b!81090 m!82987))

(assert (=> b!81090 m!82987))

(assert (=> b!81090 m!82989))

(assert (=> b!80609 d!19929))

(declare-fun d!19931 () Bool)

(declare-fun e!52926 () Bool)

(assert (=> d!19931 e!52926))

(declare-fun res!42189 () Bool)

(assert (=> d!19931 (=> (not res!42189) (not e!52926))))

(declare-fun lt!37900 () ListLongMap!1429)

(assert (=> d!19931 (= res!42189 (contains!739 lt!37900 (_1!1095 (tuple2!2169 lt!37538 lt!37537))))))

(declare-fun lt!37898 () List!1497)

(assert (=> d!19931 (= lt!37900 (ListLongMap!1430 lt!37898))))

(declare-fun lt!37897 () Unit!2322)

(declare-fun lt!37899 () Unit!2322)

(assert (=> d!19931 (= lt!37897 lt!37899)))

(assert (=> d!19931 (= (getValueByKey!139 lt!37898 (_1!1095 (tuple2!2169 lt!37538 lt!37537))) (Some!144 (_2!1095 (tuple2!2169 lt!37538 lt!37537))))))

(assert (=> d!19931 (= lt!37899 (lemmaContainsTupThenGetReturnValue!56 lt!37898 (_1!1095 (tuple2!2169 lt!37538 lt!37537)) (_2!1095 (tuple2!2169 lt!37538 lt!37537))))))

(assert (=> d!19931 (= lt!37898 (insertStrictlySorted!59 (toList!730 lt!37533) (_1!1095 (tuple2!2169 lt!37538 lt!37537)) (_2!1095 (tuple2!2169 lt!37538 lt!37537))))))

(assert (=> d!19931 (= (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)) lt!37900)))

(declare-fun b!81091 () Bool)

(declare-fun res!42188 () Bool)

(assert (=> b!81091 (=> (not res!42188) (not e!52926))))

(assert (=> b!81091 (= res!42188 (= (getValueByKey!139 (toList!730 lt!37900) (_1!1095 (tuple2!2169 lt!37538 lt!37537))) (Some!144 (_2!1095 (tuple2!2169 lt!37538 lt!37537)))))))

(declare-fun b!81092 () Bool)

(assert (=> b!81092 (= e!52926 (contains!742 (toList!730 lt!37900) (tuple2!2169 lt!37538 lt!37537)))))

(assert (= (and d!19931 res!42189) b!81091))

(assert (= (and b!81091 res!42188) b!81092))

(declare-fun m!82991 () Bool)

(assert (=> d!19931 m!82991))

(declare-fun m!82993 () Bool)

(assert (=> d!19931 m!82993))

(declare-fun m!82995 () Bool)

(assert (=> d!19931 m!82995))

(declare-fun m!82997 () Bool)

(assert (=> d!19931 m!82997))

(declare-fun m!82999 () Bool)

(assert (=> b!81091 m!82999))

(declare-fun m!83001 () Bool)

(assert (=> b!81092 m!83001))

(assert (=> b!80609 d!19931))

(declare-fun d!19933 () Bool)

(declare-fun e!52927 () Bool)

(assert (=> d!19933 e!52927))

(declare-fun res!42190 () Bool)

(assert (=> d!19933 (=> res!42190 e!52927)))

(declare-fun lt!37902 () Bool)

(assert (=> d!19933 (= res!42190 (not lt!37902))))

(declare-fun lt!37901 () Bool)

(assert (=> d!19933 (= lt!37902 lt!37901)))

(declare-fun lt!37903 () Unit!2322)

(declare-fun e!52928 () Unit!2322)

(assert (=> d!19933 (= lt!37903 e!52928)))

(declare-fun c!12744 () Bool)

(assert (=> d!19933 (= c!12744 lt!37901)))

(assert (=> d!19933 (= lt!37901 (containsKey!142 (toList!730 lt!37558) (_1!1095 lt!37210)))))

(assert (=> d!19933 (= (contains!739 lt!37558 (_1!1095 lt!37210)) lt!37902)))

(declare-fun b!81093 () Bool)

(declare-fun lt!37904 () Unit!2322)

(assert (=> b!81093 (= e!52928 lt!37904)))

(assert (=> b!81093 (= lt!37904 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37558) (_1!1095 lt!37210)))))

(assert (=> b!81093 (isDefined!91 (getValueByKey!139 (toList!730 lt!37558) (_1!1095 lt!37210)))))

(declare-fun b!81094 () Bool)

(declare-fun Unit!2356 () Unit!2322)

(assert (=> b!81094 (= e!52928 Unit!2356)))

(declare-fun b!81095 () Bool)

(assert (=> b!81095 (= e!52927 (isDefined!91 (getValueByKey!139 (toList!730 lt!37558) (_1!1095 lt!37210))))))

(assert (= (and d!19933 c!12744) b!81093))

(assert (= (and d!19933 (not c!12744)) b!81094))

(assert (= (and d!19933 (not res!42190)) b!81095))

(declare-fun m!83003 () Bool)

(assert (=> d!19933 m!83003))

(declare-fun m!83005 () Bool)

(assert (=> b!81093 m!83005))

(assert (=> b!81093 m!82177))

(assert (=> b!81093 m!82177))

(declare-fun m!83007 () Bool)

(assert (=> b!81093 m!83007))

(assert (=> b!81095 m!82177))

(assert (=> b!81095 m!82177))

(assert (=> b!81095 m!83007))

(assert (=> d!19725 d!19933))

(declare-fun b!81099 () Bool)

(declare-fun e!52930 () Option!145)

(assert (=> b!81099 (= e!52930 None!143)))

(declare-fun b!81098 () Bool)

(assert (=> b!81098 (= e!52930 (getValueByKey!139 (t!5156 lt!37556) (_1!1095 lt!37210)))))

(declare-fun d!19935 () Bool)

(declare-fun c!12745 () Bool)

(assert (=> d!19935 (= c!12745 (and ((_ is Cons!1493) lt!37556) (= (_1!1095 (h!2082 lt!37556)) (_1!1095 lt!37210))))))

(declare-fun e!52929 () Option!145)

(assert (=> d!19935 (= (getValueByKey!139 lt!37556 (_1!1095 lt!37210)) e!52929)))

(declare-fun b!81096 () Bool)

(assert (=> b!81096 (= e!52929 (Some!144 (_2!1095 (h!2082 lt!37556))))))

(declare-fun b!81097 () Bool)

(assert (=> b!81097 (= e!52929 e!52930)))

(declare-fun c!12746 () Bool)

(assert (=> b!81097 (= c!12746 (and ((_ is Cons!1493) lt!37556) (not (= (_1!1095 (h!2082 lt!37556)) (_1!1095 lt!37210)))))))

(assert (= (and d!19935 c!12745) b!81096))

(assert (= (and d!19935 (not c!12745)) b!81097))

(assert (= (and b!81097 c!12746) b!81098))

(assert (= (and b!81097 (not c!12746)) b!81099))

(declare-fun m!83009 () Bool)

(assert (=> b!81098 m!83009))

(assert (=> d!19725 d!19935))

(declare-fun d!19937 () Bool)

(assert (=> d!19937 (= (getValueByKey!139 lt!37556 (_1!1095 lt!37210)) (Some!144 (_2!1095 lt!37210)))))

(declare-fun lt!37905 () Unit!2322)

(assert (=> d!19937 (= lt!37905 (choose!478 lt!37556 (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(declare-fun e!52931 () Bool)

(assert (=> d!19937 e!52931))

(declare-fun res!42191 () Bool)

(assert (=> d!19937 (=> (not res!42191) (not e!52931))))

(assert (=> d!19937 (= res!42191 (isStrictlySorted!283 lt!37556))))

(assert (=> d!19937 (= (lemmaContainsTupThenGetReturnValue!56 lt!37556 (_1!1095 lt!37210) (_2!1095 lt!37210)) lt!37905)))

(declare-fun b!81100 () Bool)

(declare-fun res!42192 () Bool)

(assert (=> b!81100 (=> (not res!42192) (not e!52931))))

(assert (=> b!81100 (= res!42192 (containsKey!142 lt!37556 (_1!1095 lt!37210)))))

(declare-fun b!81101 () Bool)

(assert (=> b!81101 (= e!52931 (contains!742 lt!37556 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(assert (= (and d!19937 res!42191) b!81100))

(assert (= (and b!81100 res!42192) b!81101))

(assert (=> d!19937 m!82171))

(declare-fun m!83011 () Bool)

(assert (=> d!19937 m!83011))

(declare-fun m!83013 () Bool)

(assert (=> d!19937 m!83013))

(declare-fun m!83015 () Bool)

(assert (=> b!81100 m!83015))

(declare-fun m!83017 () Bool)

(assert (=> b!81101 m!83017))

(assert (=> d!19725 d!19937))

(declare-fun bm!7546 () Bool)

(declare-fun call!7550 () List!1497)

(declare-fun call!7551 () List!1497)

(assert (=> bm!7546 (= call!7550 call!7551)))

(declare-fun b!81102 () Bool)

(declare-fun e!52932 () Bool)

(declare-fun lt!37906 () List!1497)

(assert (=> b!81102 (= e!52932 (contains!742 lt!37906 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun b!81103 () Bool)

(declare-fun e!52933 () List!1497)

(declare-fun e!52936 () List!1497)

(assert (=> b!81103 (= e!52933 e!52936)))

(declare-fun c!12750 () Bool)

(assert (=> b!81103 (= c!12750 (and ((_ is Cons!1493) (toList!730 lt!37211)) (= (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 lt!37210))))))

(declare-fun bm!7547 () Bool)

(declare-fun call!7549 () List!1497)

(assert (=> bm!7547 (= call!7549 call!7550)))

(declare-fun d!19939 () Bool)

(assert (=> d!19939 e!52932))

(declare-fun res!42193 () Bool)

(assert (=> d!19939 (=> (not res!42193) (not e!52932))))

(assert (=> d!19939 (= res!42193 (isStrictlySorted!283 lt!37906))))

(assert (=> d!19939 (= lt!37906 e!52933)))

(declare-fun c!12747 () Bool)

(assert (=> d!19939 (= c!12747 (and ((_ is Cons!1493) (toList!730 lt!37211)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 lt!37210))))))

(assert (=> d!19939 (isStrictlySorted!283 (toList!730 lt!37211))))

(assert (=> d!19939 (= (insertStrictlySorted!59 (toList!730 lt!37211) (_1!1095 lt!37210) (_2!1095 lt!37210)) lt!37906)))

(declare-fun e!52934 () List!1497)

(declare-fun bm!7548 () Bool)

(assert (=> bm!7548 (= call!7551 ($colon$colon!69 e!52934 (ite c!12747 (h!2082 (toList!730 lt!37211)) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210)))))))

(declare-fun c!12749 () Bool)

(assert (=> bm!7548 (= c!12749 c!12747)))

(declare-fun b!81104 () Bool)

(declare-fun e!52935 () List!1497)

(assert (=> b!81104 (= e!52935 call!7549)))

(declare-fun b!81105 () Bool)

(declare-fun res!42194 () Bool)

(assert (=> b!81105 (=> (not res!42194) (not e!52932))))

(assert (=> b!81105 (= res!42194 (containsKey!142 lt!37906 (_1!1095 lt!37210)))))

(declare-fun b!81106 () Bool)

(declare-fun c!12748 () Bool)

(assert (=> b!81106 (= c!12748 (and ((_ is Cons!1493) (toList!730 lt!37211)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 lt!37210))))))

(assert (=> b!81106 (= e!52936 e!52935)))

(declare-fun b!81107 () Bool)

(assert (=> b!81107 (= e!52934 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37211)) (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(declare-fun b!81108 () Bool)

(assert (=> b!81108 (= e!52936 call!7550)))

(declare-fun b!81109 () Bool)

(assert (=> b!81109 (= e!52935 call!7549)))

(declare-fun b!81110 () Bool)

(assert (=> b!81110 (= e!52934 (ite c!12750 (t!5156 (toList!730 lt!37211)) (ite c!12748 (Cons!1493 (h!2082 (toList!730 lt!37211)) (t!5156 (toList!730 lt!37211))) Nil!1494)))))

(declare-fun b!81111 () Bool)

(assert (=> b!81111 (= e!52933 call!7551)))

(assert (= (and d!19939 c!12747) b!81111))

(assert (= (and d!19939 (not c!12747)) b!81103))

(assert (= (and b!81103 c!12750) b!81108))

(assert (= (and b!81103 (not c!12750)) b!81106))

(assert (= (and b!81106 c!12748) b!81109))

(assert (= (and b!81106 (not c!12748)) b!81104))

(assert (= (or b!81109 b!81104) bm!7547))

(assert (= (or b!81108 bm!7547) bm!7546))

(assert (= (or b!81111 bm!7546) bm!7548))

(assert (= (and bm!7548 c!12749) b!81107))

(assert (= (and bm!7548 (not c!12749)) b!81110))

(assert (= (and d!19939 res!42193) b!81105))

(assert (= (and b!81105 res!42194) b!81102))

(declare-fun m!83019 () Bool)

(assert (=> b!81107 m!83019))

(declare-fun m!83021 () Bool)

(assert (=> bm!7548 m!83021))

(declare-fun m!83023 () Bool)

(assert (=> b!81102 m!83023))

(declare-fun m!83025 () Bool)

(assert (=> d!19939 m!83025))

(assert (=> d!19939 m!82931))

(declare-fun m!83027 () Bool)

(assert (=> b!81105 m!83027))

(assert (=> d!19725 d!19939))

(declare-fun d!19941 () Bool)

(assert (=> d!19941 (= (apply!80 lt!37476 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1192 (getValueByKey!139 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3434 () Bool)

(assert (= bs!3434 d!19941))

(assert (=> bs!3434 m!81993))

(declare-fun m!83029 () Bool)

(assert (=> bs!3434 m!83029))

(assert (=> bs!3434 m!83029))

(declare-fun m!83031 () Bool)

(assert (=> bs!3434 m!83031))

(assert (=> b!80529 d!19941))

(assert (=> b!80529 d!19799))

(assert (=> bm!7441 d!19687))

(declare-fun d!19943 () Bool)

(assert (=> d!19943 (= (apply!80 lt!37476 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!139 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3435 () Bool)

(assert (= bs!3435 d!19943))

(assert (=> bs!3435 m!82377))

(assert (=> bs!3435 m!82377))

(declare-fun m!83033 () Bool)

(assert (=> bs!3435 m!83033))

(assert (=> b!80513 d!19943))

(declare-fun bm!7549 () Bool)

(declare-fun call!7556 () Bool)

(declare-fun lt!37912 () ListLongMap!1429)

(assert (=> bm!7549 (= call!7556 (contains!739 lt!37912 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52937 () Bool)

(declare-fun b!81112 () Bool)

(assert (=> b!81112 (= e!52937 (= (apply!80 lt!37912 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))))

(declare-fun b!81113 () Bool)

(declare-fun e!52947 () Bool)

(assert (=> b!81113 (= e!52947 (not call!7556))))

(declare-fun c!12752 () Bool)

(declare-fun b!81114 () Bool)

(assert (=> b!81114 (= c!12752 (and (not (= (bvand (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52940 () ListLongMap!1429)

(declare-fun e!52948 () ListLongMap!1429)

(assert (=> b!81114 (= e!52940 e!52948)))

(declare-fun b!81115 () Bool)

(declare-fun call!7554 () ListLongMap!1429)

(assert (=> b!81115 (= e!52948 call!7554)))

(declare-fun b!81116 () Bool)

(declare-fun e!52941 () ListLongMap!1429)

(assert (=> b!81116 (= e!52941 e!52940)))

(declare-fun c!12753 () Bool)

(assert (=> b!81116 (= c!12753 (and (not (= (bvand (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81117 () Bool)

(declare-fun e!52945 () Bool)

(declare-fun e!52946 () Bool)

(assert (=> b!81117 (= e!52945 e!52946)))

(declare-fun res!42196 () Bool)

(declare-fun call!7555 () Bool)

(assert (=> b!81117 (= res!42196 call!7555)))

(assert (=> b!81117 (=> (not res!42196) (not e!52946))))

(declare-fun b!81118 () Bool)

(declare-fun res!42198 () Bool)

(declare-fun e!52944 () Bool)

(assert (=> b!81118 (=> (not res!42198) (not e!52944))))

(assert (=> b!81118 (= res!42198 e!52947)))

(declare-fun c!12755 () Bool)

(assert (=> b!81118 (= c!12755 (not (= (bvand (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81119 () Bool)

(declare-fun e!52942 () Unit!2322)

(declare-fun lt!37918 () Unit!2322)

(assert (=> b!81119 (= e!52942 lt!37918)))

(declare-fun lt!37922 () ListLongMap!1429)

(assert (=> b!81119 (= lt!37922 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403) (mask!6298 newMap!16) (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37909 () (_ BitVec 64))

(assert (=> b!81119 (= lt!37909 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37925 () (_ BitVec 64))

(assert (=> b!81119 (= lt!37925 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37928 () Unit!2322)

(assert (=> b!81119 (= lt!37928 (addStillContains!56 lt!37922 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) lt!37925))))

(assert (=> b!81119 (contains!739 (+!101 lt!37922 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))) lt!37925)))

(declare-fun lt!37916 () Unit!2322)

(assert (=> b!81119 (= lt!37916 lt!37928)))

(declare-fun lt!37913 () ListLongMap!1429)

(assert (=> b!81119 (= lt!37913 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403) (mask!6298 newMap!16) (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37927 () (_ BitVec 64))

(assert (=> b!81119 (= lt!37927 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37924 () (_ BitVec 64))

(assert (=> b!81119 (= lt!37924 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37915 () Unit!2322)

(assert (=> b!81119 (= lt!37915 (addApplyDifferent!56 lt!37913 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) lt!37924))))

(assert (=> b!81119 (= (apply!80 (+!101 lt!37913 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) lt!37924) (apply!80 lt!37913 lt!37924))))

(declare-fun lt!37917 () Unit!2322)

(assert (=> b!81119 (= lt!37917 lt!37915)))

(declare-fun lt!37911 () ListLongMap!1429)

(assert (=> b!81119 (= lt!37911 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403) (mask!6298 newMap!16) (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37926 () (_ BitVec 64))

(assert (=> b!81119 (= lt!37926 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37910 () (_ BitVec 64))

(assert (=> b!81119 (= lt!37910 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37920 () Unit!2322)

(assert (=> b!81119 (= lt!37920 (addApplyDifferent!56 lt!37911 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) lt!37910))))

(assert (=> b!81119 (= (apply!80 (+!101 lt!37911 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))) lt!37910) (apply!80 lt!37911 lt!37910))))

(declare-fun lt!37907 () Unit!2322)

(assert (=> b!81119 (= lt!37907 lt!37920)))

(declare-fun lt!37919 () ListLongMap!1429)

(assert (=> b!81119 (= lt!37919 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403) (mask!6298 newMap!16) (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!37908 () (_ BitVec 64))

(assert (=> b!81119 (= lt!37908 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37921 () (_ BitVec 64))

(assert (=> b!81119 (= lt!37921 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81119 (= lt!37918 (addApplyDifferent!56 lt!37919 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) lt!37921))))

(assert (=> b!81119 (= (apply!80 (+!101 lt!37919 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) lt!37921) (apply!80 lt!37919 lt!37921))))

(declare-fun b!81120 () Bool)

(assert (=> b!81120 (= e!52946 (= (apply!80 lt!37912 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))

(declare-fun bm!7550 () Bool)

(declare-fun call!7558 () ListLongMap!1429)

(declare-fun call!7557 () ListLongMap!1429)

(assert (=> bm!7550 (= call!7558 call!7557)))

(declare-fun b!81121 () Bool)

(assert (=> b!81121 (= e!52947 e!52937)))

(declare-fun res!42199 () Bool)

(assert (=> b!81121 (= res!42199 call!7556)))

(assert (=> b!81121 (=> (not res!42199) (not e!52937))))

(declare-fun b!81122 () Bool)

(declare-fun e!52938 () Bool)

(assert (=> b!81122 (= e!52938 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81123 () Bool)

(declare-fun res!42201 () Bool)

(assert (=> b!81123 (=> (not res!42201) (not e!52944))))

(declare-fun e!52943 () Bool)

(assert (=> b!81123 (= res!42201 e!52943)))

(declare-fun res!42203 () Bool)

(assert (=> b!81123 (=> res!42203 e!52943)))

(assert (=> b!81123 (= res!42203 (not e!52938))))

(declare-fun res!42197 () Bool)

(assert (=> b!81123 (=> (not res!42197) (not e!52938))))

(assert (=> b!81123 (= res!42197 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81124 () Bool)

(declare-fun call!7553 () ListLongMap!1429)

(assert (=> b!81124 (= e!52948 call!7553)))

(declare-fun b!81125 () Bool)

(assert (=> b!81125 (= e!52945 (not call!7555))))

(declare-fun b!81126 () Bool)

(declare-fun e!52949 () Bool)

(assert (=> b!81126 (= e!52949 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81127 () Bool)

(declare-fun call!7552 () ListLongMap!1429)

(assert (=> b!81127 (= e!52941 (+!101 call!7552 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))))

(declare-fun c!12756 () Bool)

(declare-fun bm!7551 () Bool)

(assert (=> bm!7551 (= call!7552 (+!101 (ite c!12756 call!7557 (ite c!12753 call!7558 call!7553)) (ite (or c!12756 c!12753) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(declare-fun bm!7552 () Bool)

(assert (=> bm!7552 (= call!7557 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403) (mask!6298 newMap!16) (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!81128 () Bool)

(declare-fun e!52939 () Bool)

(assert (=> b!81128 (= e!52939 (= (apply!80 lt!37912 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1893 (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81128 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403))))))

(assert (=> b!81128 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun bm!7553 () Bool)

(assert (=> bm!7553 (= call!7555 (contains!739 lt!37912 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81129 () Bool)

(assert (=> b!81129 (= e!52943 e!52939)))

(declare-fun res!42200 () Bool)

(assert (=> b!81129 (=> (not res!42200) (not e!52939))))

(assert (=> b!81129 (= res!42200 (contains!739 lt!37912 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81129 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81130 () Bool)

(declare-fun Unit!2357 () Unit!2322)

(assert (=> b!81130 (= e!52942 Unit!2357)))

(declare-fun bm!7554 () Bool)

(assert (=> bm!7554 (= call!7554 call!7552)))

(declare-fun b!81131 () Bool)

(assert (=> b!81131 (= e!52944 e!52945)))

(declare-fun c!12754 () Bool)

(assert (=> b!81131 (= c!12754 (not (= (bvand (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!19945 () Bool)

(assert (=> d!19945 e!52944))

(declare-fun res!42195 () Bool)

(assert (=> d!19945 (=> (not res!42195) (not e!52944))))

(assert (=> d!19945 (= res!42195 (or (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))))

(declare-fun lt!37914 () ListLongMap!1429)

(assert (=> d!19945 (= lt!37912 lt!37914)))

(declare-fun lt!37923 () Unit!2322)

(assert (=> d!19945 (= lt!37923 e!52942)))

(declare-fun c!12751 () Bool)

(assert (=> d!19945 (= c!12751 e!52949)))

(declare-fun res!42202 () Bool)

(assert (=> d!19945 (=> (not res!42202) (not e!52949))))

(assert (=> d!19945 (= res!42202 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!19945 (= lt!37914 e!52941)))

(assert (=> d!19945 (= c!12756 (and (not (= (bvand (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19945 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!19945 (= (getCurrentListMap!426 (_keys!3956 newMap!16) (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403) (mask!6298 newMap!16) (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!37912)))

(declare-fun bm!7555 () Bool)

(assert (=> bm!7555 (= call!7553 call!7558)))

(declare-fun b!81132 () Bool)

(assert (=> b!81132 (= e!52940 call!7554)))

(assert (= (and d!19945 c!12756) b!81127))

(assert (= (and d!19945 (not c!12756)) b!81116))

(assert (= (and b!81116 c!12753) b!81132))

(assert (= (and b!81116 (not c!12753)) b!81114))

(assert (= (and b!81114 c!12752) b!81115))

(assert (= (and b!81114 (not c!12752)) b!81124))

(assert (= (or b!81115 b!81124) bm!7555))

(assert (= (or b!81132 bm!7555) bm!7550))

(assert (= (or b!81132 b!81115) bm!7554))

(assert (= (or b!81127 bm!7550) bm!7552))

(assert (= (or b!81127 bm!7554) bm!7551))

(assert (= (and d!19945 res!42202) b!81126))

(assert (= (and d!19945 c!12751) b!81119))

(assert (= (and d!19945 (not c!12751)) b!81130))

(assert (= (and d!19945 res!42195) b!81123))

(assert (= (and b!81123 res!42197) b!81122))

(assert (= (and b!81123 (not res!42203)) b!81129))

(assert (= (and b!81129 res!42200) b!81128))

(assert (= (and b!81123 res!42201) b!81118))

(assert (= (and b!81118 c!12755) b!81121))

(assert (= (and b!81118 (not c!12755)) b!81113))

(assert (= (and b!81121 res!42199) b!81112))

(assert (= (or b!81121 b!81113) bm!7549))

(assert (= (and b!81118 res!42198) b!81131))

(assert (= (and b!81131 c!12754) b!81117))

(assert (= (and b!81131 (not c!12754)) b!81125))

(assert (= (and b!81117 res!42196) b!81120))

(assert (= (or b!81117 b!81125) bm!7553))

(declare-fun b_lambda!3619 () Bool)

(assert (=> (not b_lambda!3619) (not b!81128)))

(assert (=> b!81128 t!5170))

(declare-fun b_and!4953 () Bool)

(assert (= b_and!4949 (and (=> t!5170 result!2849) b_and!4953)))

(assert (=> b!81128 t!5172))

(declare-fun b_and!4955 () Bool)

(assert (= b_and!4951 (and (=> t!5172 result!2851) b_and!4955)))

(declare-fun m!83035 () Bool)

(assert (=> b!81119 m!83035))

(assert (=> b!81119 m!83035))

(declare-fun m!83037 () Bool)

(assert (=> b!81119 m!83037))

(assert (=> b!81119 m!82381))

(declare-fun m!83039 () Bool)

(assert (=> b!81119 m!83039))

(declare-fun m!83041 () Bool)

(assert (=> b!81119 m!83041))

(declare-fun m!83043 () Bool)

(assert (=> b!81119 m!83043))

(declare-fun m!83045 () Bool)

(assert (=> b!81119 m!83045))

(declare-fun m!83047 () Bool)

(assert (=> b!81119 m!83047))

(declare-fun m!83049 () Bool)

(assert (=> b!81119 m!83049))

(assert (=> b!81119 m!83045))

(declare-fun m!83051 () Bool)

(assert (=> b!81119 m!83051))

(declare-fun m!83053 () Bool)

(assert (=> b!81119 m!83053))

(declare-fun m!83055 () Bool)

(assert (=> b!81119 m!83055))

(declare-fun m!83057 () Bool)

(assert (=> b!81119 m!83057))

(assert (=> b!81119 m!83043))

(declare-fun m!83059 () Bool)

(assert (=> b!81119 m!83059))

(declare-fun m!83061 () Bool)

(assert (=> b!81119 m!83061))

(declare-fun m!83063 () Bool)

(assert (=> b!81119 m!83063))

(assert (=> b!81119 m!83047))

(declare-fun m!83065 () Bool)

(assert (=> b!81119 m!83065))

(assert (=> b!81122 m!82381))

(assert (=> b!81122 m!82381))

(assert (=> b!81122 m!82583))

(declare-fun m!83067 () Bool)

(assert (=> b!81112 m!83067))

(declare-fun m!83069 () Bool)

(assert (=> bm!7553 m!83069))

(declare-fun m!83071 () Bool)

(assert (=> b!81127 m!83071))

(assert (=> b!81128 m!82381))

(assert (=> b!81128 m!82743))

(declare-fun m!83073 () Bool)

(assert (=> b!81128 m!83073))

(assert (=> b!81128 m!82743))

(declare-fun m!83075 () Bool)

(assert (=> b!81128 m!83075))

(assert (=> b!81128 m!83073))

(assert (=> b!81128 m!82381))

(declare-fun m!83077 () Bool)

(assert (=> b!81128 m!83077))

(declare-fun m!83079 () Bool)

(assert (=> b!81120 m!83079))

(assert (=> b!81126 m!82381))

(assert (=> b!81126 m!82381))

(assert (=> b!81126 m!82583))

(assert (=> b!81129 m!82381))

(assert (=> b!81129 m!82381))

(declare-fun m!83081 () Bool)

(assert (=> b!81129 m!83081))

(assert (=> bm!7552 m!83061))

(declare-fun m!83083 () Bool)

(assert (=> bm!7551 m!83083))

(assert (=> d!19945 m!82223))

(declare-fun m!83085 () Bool)

(assert (=> bm!7549 m!83085))

(assert (=> bm!7433 d!19945))

(declare-fun d!19947 () Bool)

(declare-fun e!52950 () Bool)

(assert (=> d!19947 e!52950))

(declare-fun res!42204 () Bool)

(assert (=> d!19947 (=> res!42204 e!52950)))

(declare-fun lt!37930 () Bool)

(assert (=> d!19947 (= res!42204 (not lt!37930))))

(declare-fun lt!37929 () Bool)

(assert (=> d!19947 (= lt!37930 lt!37929)))

(declare-fun lt!37931 () Unit!2322)

(declare-fun e!52951 () Unit!2322)

(assert (=> d!19947 (= lt!37931 e!52951)))

(declare-fun c!12757 () Bool)

(assert (=> d!19947 (= c!12757 lt!37929)))

(assert (=> d!19947 (= lt!37929 (containsKey!142 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!19947 (= (contains!739 lt!37476 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!37930)))

(declare-fun b!81133 () Bool)

(declare-fun lt!37932 () Unit!2322)

(assert (=> b!81133 (= e!52951 lt!37932)))

(assert (=> b!81133 (= lt!37932 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!81133 (isDefined!91 (getValueByKey!139 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!81134 () Bool)

(declare-fun Unit!2358 () Unit!2322)

(assert (=> b!81134 (= e!52951 Unit!2358)))

(declare-fun b!81135 () Bool)

(assert (=> b!81135 (= e!52950 (isDefined!91 (getValueByKey!139 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!19947 c!12757) b!81133))

(assert (= (and d!19947 (not c!12757)) b!81134))

(assert (= (and d!19947 (not res!42204)) b!81135))

(assert (=> d!19947 m!81993))

(declare-fun m!83087 () Bool)

(assert (=> d!19947 m!83087))

(assert (=> b!81133 m!81993))

(declare-fun m!83089 () Bool)

(assert (=> b!81133 m!83089))

(assert (=> b!81133 m!81993))

(assert (=> b!81133 m!83029))

(assert (=> b!81133 m!83029))

(declare-fun m!83091 () Bool)

(assert (=> b!81133 m!83091))

(assert (=> b!81135 m!81993))

(assert (=> b!81135 m!83029))

(assert (=> b!81135 m!83029))

(assert (=> b!81135 m!83091))

(assert (=> b!80530 d!19947))

(assert (=> bm!7448 d!19879))

(declare-fun d!19949 () Bool)

(declare-fun lt!37933 () Bool)

(assert (=> d!19949 (= lt!37933 (select (content!86 (toList!730 lt!37513)) lt!37212))))

(declare-fun e!52952 () Bool)

(assert (=> d!19949 (= lt!37933 e!52952)))

(declare-fun res!42206 () Bool)

(assert (=> d!19949 (=> (not res!42206) (not e!52952))))

(assert (=> d!19949 (= res!42206 ((_ is Cons!1493) (toList!730 lt!37513)))))

(assert (=> d!19949 (= (contains!742 (toList!730 lt!37513) lt!37212) lt!37933)))

(declare-fun b!81136 () Bool)

(declare-fun e!52953 () Bool)

(assert (=> b!81136 (= e!52952 e!52953)))

(declare-fun res!42205 () Bool)

(assert (=> b!81136 (=> res!42205 e!52953)))

(assert (=> b!81136 (= res!42205 (= (h!2082 (toList!730 lt!37513)) lt!37212))))

(declare-fun b!81137 () Bool)

(assert (=> b!81137 (= e!52953 (contains!742 (t!5156 (toList!730 lt!37513)) lt!37212))))

(assert (= (and d!19949 res!42206) b!81136))

(assert (= (and b!81136 (not res!42205)) b!81137))

(declare-fun m!83093 () Bool)

(assert (=> d!19949 m!83093))

(declare-fun m!83095 () Bool)

(assert (=> d!19949 m!83095))

(declare-fun m!83097 () Bool)

(assert (=> b!81137 m!83097))

(assert (=> b!80581 d!19949))

(declare-fun b!81141 () Bool)

(declare-fun e!52955 () Option!145)

(assert (=> b!81141 (= e!52955 None!143)))

(declare-fun b!81140 () Bool)

(assert (=> b!81140 (= e!52955 (getValueByKey!139 (t!5156 (toList!730 lt!37546)) (_1!1095 lt!37210)))))

(declare-fun d!19951 () Bool)

(declare-fun c!12758 () Bool)

(assert (=> d!19951 (= c!12758 (and ((_ is Cons!1493) (toList!730 lt!37546)) (= (_1!1095 (h!2082 (toList!730 lt!37546))) (_1!1095 lt!37210))))))

(declare-fun e!52954 () Option!145)

(assert (=> d!19951 (= (getValueByKey!139 (toList!730 lt!37546) (_1!1095 lt!37210)) e!52954)))

(declare-fun b!81138 () Bool)

(assert (=> b!81138 (= e!52954 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37546)))))))

(declare-fun b!81139 () Bool)

(assert (=> b!81139 (= e!52954 e!52955)))

(declare-fun c!12759 () Bool)

(assert (=> b!81139 (= c!12759 (and ((_ is Cons!1493) (toList!730 lt!37546)) (not (= (_1!1095 (h!2082 (toList!730 lt!37546))) (_1!1095 lt!37210)))))))

(assert (= (and d!19951 c!12758) b!81138))

(assert (= (and d!19951 (not c!12758)) b!81139))

(assert (= (and b!81139 c!12759) b!81140))

(assert (= (and b!81139 (not c!12759)) b!81141))

(declare-fun m!83099 () Bool)

(assert (=> b!81140 m!83099))

(assert (=> b!80620 d!19951))

(declare-fun d!19953 () Bool)

(declare-fun e!52956 () Bool)

(assert (=> d!19953 e!52956))

(declare-fun res!42207 () Bool)

(assert (=> d!19953 (=> res!42207 e!52956)))

(declare-fun lt!37935 () Bool)

(assert (=> d!19953 (= res!42207 (not lt!37935))))

(declare-fun lt!37934 () Bool)

(assert (=> d!19953 (= lt!37935 lt!37934)))

(declare-fun lt!37936 () Unit!2322)

(declare-fun e!52957 () Unit!2322)

(assert (=> d!19953 (= lt!37936 e!52957)))

(declare-fun c!12760 () Bool)

(assert (=> d!19953 (= c!12760 lt!37934)))

(assert (=> d!19953 (= lt!37934 (containsKey!142 (toList!730 lt!37536) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19953 (= (contains!739 lt!37536 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37935)))

(declare-fun b!81142 () Bool)

(declare-fun lt!37937 () Unit!2322)

(assert (=> b!81142 (= e!52957 lt!37937)))

(assert (=> b!81142 (= lt!37937 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37536) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81142 (isDefined!91 (getValueByKey!139 (toList!730 lt!37536) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81143 () Bool)

(declare-fun Unit!2359 () Unit!2322)

(assert (=> b!81143 (= e!52957 Unit!2359)))

(declare-fun b!81144 () Bool)

(assert (=> b!81144 (= e!52956 (isDefined!91 (getValueByKey!139 (toList!730 lt!37536) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19953 c!12760) b!81142))

(assert (= (and d!19953 (not c!12760)) b!81143))

(assert (= (and d!19953 (not res!42207)) b!81144))

(declare-fun m!83101 () Bool)

(assert (=> d!19953 m!83101))

(declare-fun m!83103 () Bool)

(assert (=> b!81142 m!83103))

(declare-fun m!83105 () Bool)

(assert (=> b!81142 m!83105))

(assert (=> b!81142 m!83105))

(declare-fun m!83107 () Bool)

(assert (=> b!81142 m!83107))

(assert (=> b!81144 m!83105))

(assert (=> b!81144 m!83105))

(assert (=> b!81144 m!83107))

(assert (=> b!80613 d!19953))

(declare-fun d!19955 () Bool)

(declare-fun lt!37938 () Bool)

(assert (=> d!19955 (= lt!37938 (select (content!86 (toList!730 lt!37517)) lt!37209))))

(declare-fun e!52958 () Bool)

(assert (=> d!19955 (= lt!37938 e!52958)))

(declare-fun res!42209 () Bool)

(assert (=> d!19955 (=> (not res!42209) (not e!52958))))

(assert (=> d!19955 (= res!42209 ((_ is Cons!1493) (toList!730 lt!37517)))))

(assert (=> d!19955 (= (contains!742 (toList!730 lt!37517) lt!37209) lt!37938)))

(declare-fun b!81145 () Bool)

(declare-fun e!52959 () Bool)

(assert (=> b!81145 (= e!52958 e!52959)))

(declare-fun res!42208 () Bool)

(assert (=> b!81145 (=> res!42208 e!52959)))

(assert (=> b!81145 (= res!42208 (= (h!2082 (toList!730 lt!37517)) lt!37209))))

(declare-fun b!81146 () Bool)

(assert (=> b!81146 (= e!52959 (contains!742 (t!5156 (toList!730 lt!37517)) lt!37209))))

(assert (= (and d!19955 res!42209) b!81145))

(assert (= (and b!81145 (not res!42208)) b!81146))

(declare-fun m!83109 () Bool)

(assert (=> d!19955 m!83109))

(declare-fun m!83111 () Bool)

(assert (=> d!19955 m!83111))

(declare-fun m!83113 () Bool)

(assert (=> b!81146 m!83113))

(assert (=> b!80583 d!19955))

(assert (=> b!80573 d!19791))

(declare-fun d!19957 () Bool)

(declare-fun e!52960 () Bool)

(assert (=> d!19957 e!52960))

(declare-fun res!42211 () Bool)

(assert (=> d!19957 (=> (not res!42211) (not e!52960))))

(declare-fun lt!37942 () ListLongMap!1429)

(assert (=> d!19957 (= res!42211 (contains!739 lt!37942 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun lt!37940 () List!1497)

(assert (=> d!19957 (= lt!37942 (ListLongMap!1430 lt!37940))))

(declare-fun lt!37939 () Unit!2322)

(declare-fun lt!37941 () Unit!2322)

(assert (=> d!19957 (= lt!37939 lt!37941)))

(assert (=> d!19957 (= (getValueByKey!139 lt!37940 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (Some!144 (_2!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> d!19957 (= lt!37941 (lemmaContainsTupThenGetReturnValue!56 lt!37940 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_2!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> d!19957 (= lt!37940 (insertStrictlySorted!59 (toList!730 (ite c!12568 call!7454 call!7448)) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_2!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> d!19957 (= (+!101 (ite c!12568 call!7454 call!7448) (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!37942)))

(declare-fun b!81147 () Bool)

(declare-fun res!42210 () Bool)

(assert (=> b!81147 (=> (not res!42210) (not e!52960))))

(assert (=> b!81147 (= res!42210 (= (getValueByKey!139 (toList!730 lt!37942) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (Some!144 (_2!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(declare-fun b!81148 () Bool)

(assert (=> b!81148 (= e!52960 (contains!742 (toList!730 lt!37942) (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (= (and d!19957 res!42211) b!81147))

(assert (= (and b!81147 res!42210) b!81148))

(declare-fun m!83115 () Bool)

(assert (=> d!19957 m!83115))

(declare-fun m!83117 () Bool)

(assert (=> d!19957 m!83117))

(declare-fun m!83119 () Bool)

(assert (=> d!19957 m!83119))

(declare-fun m!83121 () Bool)

(assert (=> d!19957 m!83121))

(declare-fun m!83123 () Bool)

(assert (=> b!81147 m!83123))

(declare-fun m!83125 () Bool)

(assert (=> b!81148 m!83125))

(assert (=> bm!7443 d!19957))

(declare-fun b!81152 () Bool)

(declare-fun e!52962 () Option!145)

(assert (=> b!81152 (= e!52962 None!143)))

(declare-fun b!81151 () Bool)

(assert (=> b!81151 (= e!52962 (getValueByKey!139 (t!5156 (toList!730 lt!37550)) (_1!1095 lt!37209)))))

(declare-fun d!19959 () Bool)

(declare-fun c!12761 () Bool)

(assert (=> d!19959 (= c!12761 (and ((_ is Cons!1493) (toList!730 lt!37550)) (= (_1!1095 (h!2082 (toList!730 lt!37550))) (_1!1095 lt!37209))))))

(declare-fun e!52961 () Option!145)

(assert (=> d!19959 (= (getValueByKey!139 (toList!730 lt!37550) (_1!1095 lt!37209)) e!52961)))

(declare-fun b!81149 () Bool)

(assert (=> b!81149 (= e!52961 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37550)))))))

(declare-fun b!81150 () Bool)

(assert (=> b!81150 (= e!52961 e!52962)))

(declare-fun c!12762 () Bool)

(assert (=> b!81150 (= c!12762 (and ((_ is Cons!1493) (toList!730 lt!37550)) (not (= (_1!1095 (h!2082 (toList!730 lt!37550))) (_1!1095 lt!37209)))))))

(assert (= (and d!19959 c!12761) b!81149))

(assert (= (and d!19959 (not c!12761)) b!81150))

(assert (= (and b!81150 c!12762) b!81151))

(assert (= (and b!81150 (not c!12762)) b!81152))

(declare-fun m!83127 () Bool)

(assert (=> b!81151 m!83127))

(assert (=> b!80622 d!19959))

(declare-fun d!19961 () Bool)

(assert (=> d!19961 (isDefined!91 (getValueByKey!139 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun lt!37945 () Unit!2322)

(declare-fun choose!487 (List!1497 (_ BitVec 64)) Unit!2322)

(assert (=> d!19961 (= lt!37945 (choose!487 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun e!52965 () Bool)

(assert (=> d!19961 e!52965))

(declare-fun res!42214 () Bool)

(assert (=> d!19961 (=> (not res!42214) (not e!52965))))

(assert (=> d!19961 (= res!42214 (isStrictlySorted!283 (toList!730 lt!37217)))))

(assert (=> d!19961 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) lt!37945)))

(declare-fun b!81155 () Bool)

(assert (=> b!81155 (= e!52965 (containsKey!142 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (= (and d!19961 res!42214) b!81155))

(assert (=> d!19961 m!81737))

(assert (=> d!19961 m!81927))

(assert (=> d!19961 m!81927))

(assert (=> d!19961 m!81929))

(assert (=> d!19961 m!81737))

(declare-fun m!83129 () Bool)

(assert (=> d!19961 m!83129))

(declare-fun m!83131 () Bool)

(assert (=> d!19961 m!83131))

(assert (=> b!81155 m!81737))

(assert (=> b!81155 m!81923))

(assert (=> b!80348 d!19961))

(declare-fun d!19963 () Bool)

(declare-fun isEmpty!337 (Option!145) Bool)

(assert (=> d!19963 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))))

(declare-fun bs!3436 () Bool)

(assert (= bs!3436 d!19963))

(assert (=> bs!3436 m!81927))

(declare-fun m!83133 () Bool)

(assert (=> bs!3436 m!83133))

(assert (=> b!80348 d!19963))

(declare-fun b!81159 () Bool)

(declare-fun e!52967 () Option!145)

(assert (=> b!81159 (= e!52967 None!143)))

(declare-fun b!81158 () Bool)

(assert (=> b!81158 (= e!52967 (getValueByKey!139 (t!5156 (toList!730 lt!37217)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun d!19965 () Bool)

(declare-fun c!12763 () Bool)

(assert (=> d!19965 (= c!12763 (and ((_ is Cons!1493) (toList!730 lt!37217)) (= (_1!1095 (h!2082 (toList!730 lt!37217))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(declare-fun e!52966 () Option!145)

(assert (=> d!19965 (= (getValueByKey!139 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) e!52966)))

(declare-fun b!81156 () Bool)

(assert (=> b!81156 (= e!52966 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37217)))))))

(declare-fun b!81157 () Bool)

(assert (=> b!81157 (= e!52966 e!52967)))

(declare-fun c!12764 () Bool)

(assert (=> b!81157 (= c!12764 (and ((_ is Cons!1493) (toList!730 lt!37217)) (not (= (_1!1095 (h!2082 (toList!730 lt!37217))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))))

(assert (= (and d!19965 c!12763) b!81156))

(assert (= (and d!19965 (not c!12763)) b!81157))

(assert (= (and b!81157 c!12764) b!81158))

(assert (= (and b!81157 (not c!12764)) b!81159))

(assert (=> b!81158 m!81737))

(declare-fun m!83135 () Bool)

(assert (=> b!81158 m!83135))

(assert (=> b!80348 d!19965))

(declare-fun b!81163 () Bool)

(declare-fun e!52969 () Option!145)

(assert (=> b!81163 (= e!52969 None!143)))

(declare-fun b!81162 () Bool)

(assert (=> b!81162 (= e!52969 (getValueByKey!139 (t!5156 (toList!730 lt!37554)) (_1!1095 lt!37210)))))

(declare-fun d!19967 () Bool)

(declare-fun c!12765 () Bool)

(assert (=> d!19967 (= c!12765 (and ((_ is Cons!1493) (toList!730 lt!37554)) (= (_1!1095 (h!2082 (toList!730 lt!37554))) (_1!1095 lt!37210))))))

(declare-fun e!52968 () Option!145)

(assert (=> d!19967 (= (getValueByKey!139 (toList!730 lt!37554) (_1!1095 lt!37210)) e!52968)))

(declare-fun b!81160 () Bool)

(assert (=> b!81160 (= e!52968 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37554)))))))

(declare-fun b!81161 () Bool)

(assert (=> b!81161 (= e!52968 e!52969)))

(declare-fun c!12766 () Bool)

(assert (=> b!81161 (= c!12766 (and ((_ is Cons!1493) (toList!730 lt!37554)) (not (= (_1!1095 (h!2082 (toList!730 lt!37554))) (_1!1095 lt!37210)))))))

(assert (= (and d!19967 c!12765) b!81160))

(assert (= (and d!19967 (not c!12765)) b!81161))

(assert (= (and b!81161 c!12766) b!81162))

(assert (= (and b!81161 (not c!12766)) b!81163))

(declare-fun m!83137 () Bool)

(assert (=> b!81162 m!83137))

(assert (=> b!80624 d!19967))

(assert (=> b!80617 d!19827))

(declare-fun b!81172 () Bool)

(declare-fun res!42224 () Bool)

(declare-fun e!52972 () Bool)

(assert (=> b!81172 (=> (not res!42224) (not e!52972))))

(assert (=> b!81172 (= res!42224 (and (= (size!2135 (_values!2275 newMap!16)) (bvadd (mask!6298 newMap!16) #b00000000000000000000000000000001)) (= (size!2134 (_keys!3956 newMap!16)) (size!2135 (_values!2275 newMap!16))) (bvsge (_size!417 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!417 newMap!16) (bvadd (mask!6298 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!81175 () Bool)

(assert (=> b!81175 (= e!52972 (and (bvsge (extraKeys!2139 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2139 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!417 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!81173 () Bool)

(declare-fun res!42225 () Bool)

(assert (=> b!81173 (=> (not res!42225) (not e!52972))))

(declare-fun size!2140 (LongMapFixedSize!736) (_ BitVec 32))

(assert (=> b!81173 (= res!42225 (bvsge (size!2140 newMap!16) (_size!417 newMap!16)))))

(declare-fun b!81174 () Bool)

(declare-fun res!42223 () Bool)

(assert (=> b!81174 (=> (not res!42223) (not e!52972))))

(assert (=> b!81174 (= res!42223 (= (size!2140 newMap!16) (bvadd (_size!417 newMap!16) (bvsdiv (bvadd (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!19969 () Bool)

(declare-fun res!42226 () Bool)

(assert (=> d!19969 (=> (not res!42226) (not e!52972))))

(assert (=> d!19969 (= res!42226 (validMask!0 (mask!6298 newMap!16)))))

(assert (=> d!19969 (= (simpleValid!56 newMap!16) e!52972)))

(assert (= (and d!19969 res!42226) b!81172))

(assert (= (and b!81172 res!42224) b!81173))

(assert (= (and b!81173 res!42225) b!81174))

(assert (= (and b!81174 res!42223) b!81175))

(declare-fun m!83139 () Bool)

(assert (=> b!81173 m!83139))

(assert (=> b!81174 m!83139))

(assert (=> d!19969 m!82223))

(assert (=> d!19695 d!19969))

(declare-fun b!81179 () Bool)

(declare-fun e!52974 () Option!145)

(assert (=> b!81179 (= e!52974 None!143)))

(declare-fun b!81178 () Bool)

(assert (=> b!81178 (= e!52974 (getValueByKey!139 (t!5156 (toList!730 lt!37558)) (_1!1095 lt!37210)))))

(declare-fun d!19971 () Bool)

(declare-fun c!12767 () Bool)

(assert (=> d!19971 (= c!12767 (and ((_ is Cons!1493) (toList!730 lt!37558)) (= (_1!1095 (h!2082 (toList!730 lt!37558))) (_1!1095 lt!37210))))))

(declare-fun e!52973 () Option!145)

(assert (=> d!19971 (= (getValueByKey!139 (toList!730 lt!37558) (_1!1095 lt!37210)) e!52973)))

(declare-fun b!81176 () Bool)

(assert (=> b!81176 (= e!52973 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37558)))))))

(declare-fun b!81177 () Bool)

(assert (=> b!81177 (= e!52973 e!52974)))

(declare-fun c!12768 () Bool)

(assert (=> b!81177 (= c!12768 (and ((_ is Cons!1493) (toList!730 lt!37558)) (not (= (_1!1095 (h!2082 (toList!730 lt!37558))) (_1!1095 lt!37210)))))))

(assert (= (and d!19971 c!12767) b!81176))

(assert (= (and d!19971 (not c!12767)) b!81177))

(assert (= (and b!81177 c!12768) b!81178))

(assert (= (and b!81177 (not c!12768)) b!81179))

(declare-fun m!83141 () Bool)

(assert (=> b!81178 m!83141))

(assert (=> b!80626 d!19971))

(declare-fun d!19973 () Bool)

(declare-fun e!52975 () Bool)

(assert (=> d!19973 e!52975))

(declare-fun res!42228 () Bool)

(assert (=> d!19973 (=> (not res!42228) (not e!52975))))

(declare-fun lt!37949 () ListLongMap!1429)

(assert (=> d!19973 (= res!42228 (contains!739 lt!37949 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun lt!37947 () List!1497)

(assert (=> d!19973 (= lt!37949 (ListLongMap!1430 lt!37947))))

(declare-fun lt!37946 () Unit!2322)

(declare-fun lt!37948 () Unit!2322)

(assert (=> d!19973 (= lt!37946 lt!37948)))

(assert (=> d!19973 (= (getValueByKey!139 lt!37947 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19973 (= lt!37948 (lemmaContainsTupThenGetReturnValue!56 lt!37947 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19973 (= lt!37947 (insertStrictlySorted!59 (toList!730 call!7438) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!19973 (= (+!101 call!7438 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) lt!37949)))

(declare-fun b!81180 () Bool)

(declare-fun res!42227 () Bool)

(assert (=> b!81180 (=> (not res!42227) (not e!52975))))

(assert (=> b!81180 (= res!42227 (= (getValueByKey!139 (toList!730 lt!37949) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!81181 () Bool)

(assert (=> b!81181 (= e!52975 (contains!742 (toList!730 lt!37949) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (= (and d!19973 res!42228) b!81180))

(assert (= (and b!81180 res!42227) b!81181))

(declare-fun m!83143 () Bool)

(assert (=> d!19973 m!83143))

(declare-fun m!83145 () Bool)

(assert (=> d!19973 m!83145))

(declare-fun m!83147 () Bool)

(assert (=> d!19973 m!83147))

(declare-fun m!83149 () Bool)

(assert (=> d!19973 m!83149))

(declare-fun m!83151 () Bool)

(assert (=> b!81180 m!83151))

(declare-fun m!83153 () Bool)

(assert (=> b!81181 m!83153))

(assert (=> b!80434 d!19973))

(declare-fun d!19975 () Bool)

(assert (=> d!19975 (= (apply!80 lt!37476 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!139 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3437 () Bool)

(assert (= bs!3437 d!19975))

(assert (=> bs!3437 m!82281))

(assert (=> bs!3437 m!82281))

(declare-fun m!83155 () Bool)

(assert (=> bs!3437 m!83155))

(assert (=> b!80521 d!19975))

(declare-fun d!19977 () Bool)

(assert (=> d!19977 (= (map!1186 (_2!1094 lt!37425)) (getCurrentListMap!426 (_keys!3956 (_2!1094 lt!37425)) (_values!2275 (_2!1094 lt!37425)) (mask!6298 (_2!1094 lt!37425)) (extraKeys!2139 (_2!1094 lt!37425)) (zeroValue!2188 (_2!1094 lt!37425)) (minValue!2188 (_2!1094 lt!37425)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1094 lt!37425))))))

(declare-fun bs!3438 () Bool)

(assert (= bs!3438 d!19977))

(declare-fun m!83157 () Bool)

(assert (=> bs!3438 m!83157))

(assert (=> bm!7452 d!19977))

(assert (=> b!80350 d!19963))

(assert (=> b!80350 d!19965))

(declare-fun b!81190 () Bool)

(declare-fun e!52984 () Bool)

(declare-fun call!7561 () Bool)

(assert (=> b!81190 (= e!52984 call!7561)))

(declare-fun b!81191 () Bool)

(declare-fun e!52983 () Bool)

(assert (=> b!81191 (= e!52983 call!7561)))

(declare-fun b!81192 () Bool)

(assert (=> b!81192 (= e!52984 e!52983)))

(declare-fun lt!37958 () (_ BitVec 64))

(assert (=> b!81192 (= lt!37958 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37957 () Unit!2322)

(assert (=> b!81192 (= lt!37957 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3956 newMap!16) lt!37958 #b00000000000000000000000000000000))))

(assert (=> b!81192 (arrayContainsKey!0 (_keys!3956 newMap!16) lt!37958 #b00000000000000000000000000000000)))

(declare-fun lt!37956 () Unit!2322)

(assert (=> b!81192 (= lt!37956 lt!37957)))

(declare-fun res!42234 () Bool)

(assert (=> b!81192 (= res!42234 (= (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) (_keys!3956 newMap!16) (mask!6298 newMap!16)) (Found!235 #b00000000000000000000000000000000)))))

(assert (=> b!81192 (=> (not res!42234) (not e!52983))))

(declare-fun bm!7558 () Bool)

(assert (=> bm!7558 (= call!7561 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(declare-fun b!81193 () Bool)

(declare-fun e!52982 () Bool)

(assert (=> b!81193 (= e!52982 e!52984)))

(declare-fun c!12771 () Bool)

(assert (=> b!81193 (= c!12771 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!19979 () Bool)

(declare-fun res!42233 () Bool)

(assert (=> d!19979 (=> res!42233 e!52982)))

(assert (=> d!19979 (= res!42233 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!19979 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3956 newMap!16) (mask!6298 newMap!16)) e!52982)))

(assert (= (and d!19979 (not res!42233)) b!81193))

(assert (= (and b!81193 c!12771) b!81192))

(assert (= (and b!81193 (not c!12771)) b!81190))

(assert (= (and b!81192 res!42234) b!81191))

(assert (= (or b!81191 b!81190) bm!7558))

(assert (=> b!81192 m!82381))

(declare-fun m!83159 () Bool)

(assert (=> b!81192 m!83159))

(declare-fun m!83161 () Bool)

(assert (=> b!81192 m!83161))

(assert (=> b!81192 m!82381))

(declare-fun m!83163 () Bool)

(assert (=> b!81192 m!83163))

(declare-fun m!83165 () Bool)

(assert (=> bm!7558 m!83165))

(assert (=> b!81193 m!82381))

(assert (=> b!81193 m!82381))

(assert (=> b!81193 m!82583))

(assert (=> b!80541 d!19979))

(assert (=> b!80449 d!19905))

(declare-fun mapIsEmpty!3341 () Bool)

(declare-fun mapRes!3341 () Bool)

(assert (=> mapIsEmpty!3341 mapRes!3341))

(declare-fun condMapEmpty!3341 () Bool)

(declare-fun mapDefault!3341 () ValueCell!914)

(assert (=> mapNonEmpty!3340 (= condMapEmpty!3341 (= mapRest!3340 ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3341)))))

(declare-fun e!52985 () Bool)

(assert (=> mapNonEmpty!3340 (= tp!8830 (and e!52985 mapRes!3341))))

(declare-fun mapNonEmpty!3341 () Bool)

(declare-fun tp!8831 () Bool)

(declare-fun e!52986 () Bool)

(assert (=> mapNonEmpty!3341 (= mapRes!3341 (and tp!8831 e!52986))))

(declare-fun mapValue!3341 () ValueCell!914)

(declare-fun mapRest!3341 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapKey!3341 () (_ BitVec 32))

(assert (=> mapNonEmpty!3341 (= mapRest!3340 (store mapRest!3341 mapKey!3341 mapValue!3341))))

(declare-fun b!81194 () Bool)

(assert (=> b!81194 (= e!52986 tp_is_empty!2515)))

(declare-fun b!81195 () Bool)

(assert (=> b!81195 (= e!52985 tp_is_empty!2515)))

(assert (= (and mapNonEmpty!3340 condMapEmpty!3341) mapIsEmpty!3341))

(assert (= (and mapNonEmpty!3340 (not condMapEmpty!3341)) mapNonEmpty!3341))

(assert (= (and mapNonEmpty!3341 ((_ is ValueCellFull!914) mapValue!3341)) b!81194))

(assert (= (and mapNonEmpty!3340 ((_ is ValueCellFull!914) mapDefault!3341)) b!81195))

(declare-fun m!83167 () Bool)

(assert (=> mapNonEmpty!3341 m!83167))

(declare-fun mapIsEmpty!3342 () Bool)

(declare-fun mapRes!3342 () Bool)

(assert (=> mapIsEmpty!3342 mapRes!3342))

(declare-fun condMapEmpty!3342 () Bool)

(declare-fun mapDefault!3342 () ValueCell!914)

(assert (=> mapNonEmpty!3339 (= condMapEmpty!3342 (= mapRest!3339 ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3342)))))

(declare-fun e!52987 () Bool)

(assert (=> mapNonEmpty!3339 (= tp!8829 (and e!52987 mapRes!3342))))

(declare-fun mapNonEmpty!3342 () Bool)

(declare-fun tp!8832 () Bool)

(declare-fun e!52988 () Bool)

(assert (=> mapNonEmpty!3342 (= mapRes!3342 (and tp!8832 e!52988))))

(declare-fun mapRest!3342 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapValue!3342 () ValueCell!914)

(declare-fun mapKey!3342 () (_ BitVec 32))

(assert (=> mapNonEmpty!3342 (= mapRest!3339 (store mapRest!3342 mapKey!3342 mapValue!3342))))

(declare-fun b!81196 () Bool)

(assert (=> b!81196 (= e!52988 tp_is_empty!2515)))

(declare-fun b!81197 () Bool)

(assert (=> b!81197 (= e!52987 tp_is_empty!2515)))

(assert (= (and mapNonEmpty!3339 condMapEmpty!3342) mapIsEmpty!3342))

(assert (= (and mapNonEmpty!3339 (not condMapEmpty!3342)) mapNonEmpty!3342))

(assert (= (and mapNonEmpty!3342 ((_ is ValueCellFull!914) mapValue!3342)) b!81196))

(assert (= (and mapNonEmpty!3339 ((_ is ValueCellFull!914) mapDefault!3342)) b!81197))

(declare-fun m!83169 () Bool)

(assert (=> mapNonEmpty!3342 m!83169))

(declare-fun b_lambda!3621 () Bool)

(assert (= b_lambda!3619 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3621)))

(declare-fun b_lambda!3623 () Bool)

(assert (= b_lambda!3615 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3623)))

(declare-fun b_lambda!3625 () Bool)

(assert (= b_lambda!3613 (or (and b!80208 b_free!2197) (and b!80215 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))))) b_lambda!3625)))

(declare-fun b_lambda!3627 () Bool)

(assert (= b_lambda!3617 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3627)))

(declare-fun b_lambda!3629 () Bool)

(assert (= b_lambda!3611 (or (and b!80208 b_free!2197) (and b!80215 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))))) b_lambda!3629)))

(check-sat (not b!81019) (not b!81146) (not b_lambda!3627) (not b!80692) (not d!19915) (not d!19939) (not b!81070) (not bm!7503) (not b!80794) (not b!80862) (not d!19929) (not b!81148) (not b!80926) (not b!80980) (not b!80815) (not b!80865) (not b!81091) (not b!80915) (not d!19931) (not b_lambda!3625) (not b!80784) (not bm!7489) (not b_lambda!3621) (not b!81162) (not bm!7502) (not b_lambda!3623) (not d!19925) (not b!80893) (not b!81140) (not b!81087) (not d!19917) (not b!80770) (not b!80904) (not b!80764) (not b!81004) (not d!19905) (not d!19735) (not b!80978) (not b!80855) (not d!19853) (not bm!7531) (not mapNonEmpty!3342) (not b!80727) (not b!80987) (not b!80737) (not d!19899) (not d!19769) (not bm!7530) (not b!81129) (not d!19873) (not b!81122) (not d!19941) (not b!80767) (not d!19813) (not b!80771) (not bm!7512) (not b!81088) (not b!81007) (not b!80747) (not b_lambda!3629) (not b!80713) (not b!80916) (not b!80972) (not b!80758) (not d!19767) (not b!80999) (not b!81127) (not bm!7520) (not b!80738) (not bm!7549) (not b!80685) (not bm!7529) (not b!80731) (not d!19869) (not b!81142) (not d!19907) (not d!19749) (not b!80932) (not b!80962) (not b!80854) (not b!80912) (not b!81128) (not d!19911) (not b!80982) (not b!80749) (not d!19857) (not b!80954) (not b!80799) b_and!4953 (not d!19803) (not b!80892) (not bm!7522) (not bm!7527) (not b!80774) (not d!19893) (not b!81126) (not d!19739) (not b!81102) (not d!19843) (not b!80726) (not b!81052) (not b!80895) (not bm!7539) (not b!80743) (not b!81178) (not b!81093) (not b!81086) (not b!80718) (not b!80754) (not d!19745) (not bm!7548) (not b!80691) (not d!19753) (not d!19759) (not mapNonEmpty!3341) (not d!19973) (not d!19955) (not d!19787) (not d!19921) (not b!81068) (not b!80772) (not d!19841) (not d!19797) (not b!80752) (not d!19859) (not d!19949) (not b!80782) (not d!19923) (not b!81071) (not b!81077) (not b!80907) (not d!19961) (not d!19913) (not b!80808) (not b!81155) (not b!80766) (not b!80942) (not b!80716) (not b!80739) (not b!81193) (not d!19851) (not b!80768) (not d!19833) (not b!81006) (not b!80740) (not b!80732) (not d!19793) (not b!80769) (not d!19977) (not b!80802) (not b!81061) (not b!81173) (not b_lambda!3609) (not d!19811) (not b!80776) (not d!19835) (not bm!7514) (not d!19761) (not b!81120) (not b!80908) (not b!81001) (not d!19795) (not bm!7518) (not d!19819) (not bm!7552) (not d!19969) (not b!81151) (not b!81100) (not b!80992) (not d!19733) (not b!81072) (not b!80806) (not d!19887) (not d!19773) (not b!80790) (not d!19837) (not d!19871) (not b!80910) (not b!80762) (not bm!7553) (not b!81065) (not b!81119) (not b!81090) (not b!81040) (not b!80985) (not b!80787) (not b!81135) (not d!19815) (not b!80645) (not d!19741) (not b!81075) (not b!80894) (not d!19807) (not b!80872) (not b!80989) (not b!80853) (not b!80792) (not b!80906) (not d!19963) (not d!19751) (not d!19849) (not d!19755) (not b!80801) (not d!19855) (not b!80757) (not d!19867) (not b!80963) (not b!80931) (not b!81144) (not b!80924) (not b!80933) (not b!80728) (not d!19775) (not d!19943) (not d!19861) (not b!80791) (not b!80796) (not d!19771) (not b_next!2197) (not b!80930) (not b!80760) (not b!80814) (not b!80646) (not d!19757) (not b!80870) (not b!81105) (not d!19763) (not b!80971) (not b!80947) (not b!81107) (not d!19903) (not d!19975) (not b!80803) (not d!19789) (not bm!7519) (not d!19805) (not d!19891) (not bm!7523) (not b!80863) (not b!80902) (not bm!7558) (not d!19865) (not b!81036) (not d!19781) (not b!80970) (not d!19785) (not b!81133) (not b!81047) (not b!80884) (not b!80729) (not d!19783) (not b!80923) (not b!80890) (not b!81092) (not b_lambda!3605) (not b!80988) (not b!80674) (not d!19895) (not bm!7542) tp_is_empty!2515 (not b!80725) (not b!80755) (not b!81180) (not b!80969) (not b!80647) (not bm!7498) (not d!19839) (not d!19879) (not d!19831) (not b!81050) (not d!19957) b_and!4955 (not b!80783) (not d!19927) (not b!80816) (not b!81045) (not bm!7551) (not d!19845) (not bm!7488) (not d!19885) (not b_lambda!3597) (not b!81137) (not d!19945) (not b!81038) (not b!80742) (not bm!7499) (not b!80735) (not d!19747) (not d!19937) (not b!80939) (not b!80897) (not b!80759) (not b!80994) (not b!80793) (not b!80723) (not b!81063) (not b!81112) (not b!81011) (not b!81095) (not b!80965) (not b!81147) (not d!19947) (not b!80955) (not b!81192) (not b!81181) (not b!81008) (not b!80891) (not b!80773) (not b!81174) (not b!80756) (not b!80898) (not d!19847) (not b_lambda!3607) (not d!19825) (not b_next!2199) (not b!80672) (not b!81013) (not b!81101) (not b!81043) (not d!19821) (not bm!7515) (not d!19777) (not bm!7545) (not b!81098) (not b!81018) (not d!19901) (not b!80900) (not b!80761) (not bm!7536) (not b!80940) (not bm!7524) (not d!19953) (not b!81046) (not b!80744) (not b!80734) (not d!19933) (not b!81158))
(check-sat b_and!4953 b_and!4955 (not b_next!2197) (not b_next!2199))
(get-model)

(declare-fun d!19981 () Bool)

(assert (=> d!19981 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37558) (_1!1095 lt!37210))) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37558) (_1!1095 lt!37210)))))))

(declare-fun bs!3439 () Bool)

(assert (= bs!3439 d!19981))

(assert (=> bs!3439 m!82177))

(declare-fun m!83171 () Bool)

(assert (=> bs!3439 m!83171))

(assert (=> b!81095 d!19981))

(assert (=> b!81095 d!19971))

(declare-fun d!19983 () Bool)

(assert (=> d!19983 (= (apply!80 lt!37797 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!139 (toList!730 lt!37797) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3440 () Bool)

(assert (= bs!3440 d!19983))

(declare-fun m!83173 () Bool)

(assert (=> bs!3440 m!83173))

(assert (=> bs!3440 m!83173))

(declare-fun m!83175 () Bool)

(assert (=> bs!3440 m!83175))

(assert (=> b!80924 d!19983))

(declare-fun d!19985 () Bool)

(assert (=> d!19985 (= (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80747 d!19985))

(declare-fun d!19987 () Bool)

(assert (=> d!19987 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37546) (_1!1095 lt!37210))) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37546) (_1!1095 lt!37210)))))))

(declare-fun bs!3441 () Bool)

(assert (= bs!3441 d!19987))

(assert (=> bs!3441 m!82141))

(declare-fun m!83177 () Bool)

(assert (=> bs!3441 m!83177))

(assert (=> b!81001 d!19987))

(assert (=> b!81001 d!19951))

(declare-fun d!19989 () Bool)

(declare-fun lt!37959 () Bool)

(assert (=> d!19989 (= lt!37959 (select (content!87 Nil!1495) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!52989 () Bool)

(assert (=> d!19989 (= lt!37959 e!52989)))

(declare-fun res!42236 () Bool)

(assert (=> d!19989 (=> (not res!42236) (not e!52989))))

(assert (=> d!19989 (= res!42236 ((_ is Cons!1494) Nil!1495))))

(assert (=> d!19989 (= (contains!741 Nil!1495 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) lt!37959)))

(declare-fun b!81198 () Bool)

(declare-fun e!52990 () Bool)

(assert (=> b!81198 (= e!52989 e!52990)))

(declare-fun res!42235 () Bool)

(assert (=> b!81198 (=> res!42235 e!52990)))

(assert (=> b!81198 (= res!42235 (= (h!2083 Nil!1495) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81199 () Bool)

(assert (=> b!81199 (= e!52990 (contains!741 (t!5157 Nil!1495) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!19989 res!42236) b!81198))

(assert (= (and b!81198 (not res!42235)) b!81199))

(assert (=> d!19989 m!82439))

(assert (=> d!19989 m!82381))

(declare-fun m!83179 () Bool)

(assert (=> d!19989 m!83179))

(assert (=> b!81199 m!82381))

(declare-fun m!83181 () Bool)

(assert (=> b!81199 m!83181))

(assert (=> b!80908 d!19989))

(declare-fun d!19991 () Bool)

(declare-fun e!52991 () Bool)

(assert (=> d!19991 e!52991))

(declare-fun res!42237 () Bool)

(assert (=> d!19991 (=> res!42237 e!52991)))

(declare-fun lt!37961 () Bool)

(assert (=> d!19991 (= res!42237 (not lt!37961))))

(declare-fun lt!37960 () Bool)

(assert (=> d!19991 (= lt!37961 lt!37960)))

(declare-fun lt!37962 () Unit!2322)

(declare-fun e!52992 () Unit!2322)

(assert (=> d!19991 (= lt!37962 e!52992)))

(declare-fun c!12772 () Bool)

(assert (=> d!19991 (= c!12772 lt!37960)))

(assert (=> d!19991 (= lt!37960 (containsKey!142 (toList!730 lt!37912) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19991 (= (contains!739 lt!37912 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) lt!37961)))

(declare-fun b!81200 () Bool)

(declare-fun lt!37963 () Unit!2322)

(assert (=> b!81200 (= e!52992 lt!37963)))

(assert (=> b!81200 (= lt!37963 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37912) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81200 (isDefined!91 (getValueByKey!139 (toList!730 lt!37912) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81201 () Bool)

(declare-fun Unit!2360 () Unit!2322)

(assert (=> b!81201 (= e!52992 Unit!2360)))

(declare-fun b!81202 () Bool)

(assert (=> b!81202 (= e!52991 (isDefined!91 (getValueByKey!139 (toList!730 lt!37912) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!19991 c!12772) b!81200))

(assert (= (and d!19991 (not c!12772)) b!81201))

(assert (= (and d!19991 (not res!42237)) b!81202))

(assert (=> d!19991 m!82381))

(declare-fun m!83183 () Bool)

(assert (=> d!19991 m!83183))

(assert (=> b!81200 m!82381))

(declare-fun m!83185 () Bool)

(assert (=> b!81200 m!83185))

(assert (=> b!81200 m!82381))

(declare-fun m!83187 () Bool)

(assert (=> b!81200 m!83187))

(assert (=> b!81200 m!83187))

(declare-fun m!83189 () Bool)

(assert (=> b!81200 m!83189))

(assert (=> b!81202 m!82381))

(assert (=> b!81202 m!83187))

(assert (=> b!81202 m!83187))

(assert (=> b!81202 m!83189))

(assert (=> b!81129 d!19991))

(declare-fun b!81206 () Bool)

(declare-fun e!52994 () Option!145)

(assert (=> b!81206 (= e!52994 None!143)))

(declare-fun b!81205 () Bool)

(assert (=> b!81205 (= e!52994 (getValueByKey!139 (t!5156 (t!5156 (toList!730 lt!37558))) (_1!1095 lt!37210)))))

(declare-fun d!19993 () Bool)

(declare-fun c!12773 () Bool)

(assert (=> d!19993 (= c!12773 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37558))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37558)))) (_1!1095 lt!37210))))))

(declare-fun e!52993 () Option!145)

(assert (=> d!19993 (= (getValueByKey!139 (t!5156 (toList!730 lt!37558)) (_1!1095 lt!37210)) e!52993)))

(declare-fun b!81203 () Bool)

(assert (=> b!81203 (= e!52993 (Some!144 (_2!1095 (h!2082 (t!5156 (toList!730 lt!37558))))))))

(declare-fun b!81204 () Bool)

(assert (=> b!81204 (= e!52993 e!52994)))

(declare-fun c!12774 () Bool)

(assert (=> b!81204 (= c!12774 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37558))) (not (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37558)))) (_1!1095 lt!37210)))))))

(assert (= (and d!19993 c!12773) b!81203))

(assert (= (and d!19993 (not c!12773)) b!81204))

(assert (= (and b!81204 c!12774) b!81205))

(assert (= (and b!81204 (not c!12774)) b!81206))

(declare-fun m!83191 () Bool)

(assert (=> b!81205 m!83191))

(assert (=> b!81178 d!19993))

(declare-fun b!81207 () Bool)

(declare-fun e!52997 () Bool)

(declare-fun call!7562 () Bool)

(assert (=> b!81207 (= e!52997 call!7562)))

(declare-fun b!81208 () Bool)

(declare-fun e!52996 () Bool)

(assert (=> b!81208 (= e!52996 e!52997)))

(declare-fun c!12775 () Bool)

(assert (=> b!81208 (= c!12775 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000)))))

(declare-fun d!19995 () Bool)

(declare-fun res!42240 () Bool)

(declare-fun e!52998 () Bool)

(assert (=> d!19995 (=> res!42240 e!52998)))

(assert (=> d!19995 (= res!42240 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37425)))))))

(assert (=> d!19995 (= (arrayNoDuplicates!0 (_keys!3956 (_2!1094 lt!37425)) #b00000000000000000000000000000000 Nil!1495) e!52998)))

(declare-fun b!81209 () Bool)

(assert (=> b!81209 (= e!52998 e!52996)))

(declare-fun res!42239 () Bool)

(assert (=> b!81209 (=> (not res!42239) (not e!52996))))

(declare-fun e!52995 () Bool)

(assert (=> b!81209 (= res!42239 (not e!52995))))

(declare-fun res!42238 () Bool)

(assert (=> b!81209 (=> (not res!42238) (not e!52995))))

(assert (=> b!81209 (= res!42238 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000)))))

(declare-fun b!81210 () Bool)

(assert (=> b!81210 (= e!52995 (contains!741 Nil!1495 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000)))))

(declare-fun b!81211 () Bool)

(assert (=> b!81211 (= e!52997 call!7562)))

(declare-fun bm!7559 () Bool)

(assert (=> bm!7559 (= call!7562 (arrayNoDuplicates!0 (_keys!3956 (_2!1094 lt!37425)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12775 (Cons!1494 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000) Nil!1495) Nil!1495)))))

(assert (= (and d!19995 (not res!42240)) b!81209))

(assert (= (and b!81209 res!42238) b!81210))

(assert (= (and b!81209 res!42239) b!81208))

(assert (= (and b!81208 c!12775) b!81211))

(assert (= (and b!81208 (not c!12775)) b!81207))

(assert (= (or b!81211 b!81207) bm!7559))

(declare-fun m!83193 () Bool)

(assert (=> b!81208 m!83193))

(assert (=> b!81208 m!83193))

(declare-fun m!83195 () Bool)

(assert (=> b!81208 m!83195))

(assert (=> b!81209 m!83193))

(assert (=> b!81209 m!83193))

(assert (=> b!81209 m!83195))

(assert (=> b!81210 m!83193))

(assert (=> b!81210 m!83193))

(declare-fun m!83197 () Bool)

(assert (=> b!81210 m!83197))

(assert (=> bm!7559 m!83193))

(declare-fun m!83199 () Bool)

(assert (=> bm!7559 m!83199))

(assert (=> b!80728 d!19995))

(declare-fun d!19997 () Bool)

(declare-fun lt!37964 () Bool)

(assert (=> d!19997 (= lt!37964 (select (content!86 (toList!730 lt!37900)) (tuple2!2169 lt!37538 lt!37537)))))

(declare-fun e!52999 () Bool)

(assert (=> d!19997 (= lt!37964 e!52999)))

(declare-fun res!42242 () Bool)

(assert (=> d!19997 (=> (not res!42242) (not e!52999))))

(assert (=> d!19997 (= res!42242 ((_ is Cons!1493) (toList!730 lt!37900)))))

(assert (=> d!19997 (= (contains!742 (toList!730 lt!37900) (tuple2!2169 lt!37538 lt!37537)) lt!37964)))

(declare-fun b!81212 () Bool)

(declare-fun e!53000 () Bool)

(assert (=> b!81212 (= e!52999 e!53000)))

(declare-fun res!42241 () Bool)

(assert (=> b!81212 (=> res!42241 e!53000)))

(assert (=> b!81212 (= res!42241 (= (h!2082 (toList!730 lt!37900)) (tuple2!2169 lt!37538 lt!37537)))))

(declare-fun b!81213 () Bool)

(assert (=> b!81213 (= e!53000 (contains!742 (t!5156 (toList!730 lt!37900)) (tuple2!2169 lt!37538 lt!37537)))))

(assert (= (and d!19997 res!42242) b!81212))

(assert (= (and b!81212 (not res!42241)) b!81213))

(declare-fun m!83201 () Bool)

(assert (=> d!19997 m!83201))

(declare-fun m!83203 () Bool)

(assert (=> d!19997 m!83203))

(declare-fun m!83205 () Bool)

(assert (=> b!81213 m!83205))

(assert (=> b!81092 d!19997))

(declare-fun d!19999 () Bool)

(assert (=> d!19999 (= (get!1192 (getValueByKey!139 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2616 (getValueByKey!139 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19797 d!19999))

(declare-fun b!81217 () Bool)

(declare-fun e!53002 () Option!145)

(assert (=> b!81217 (= e!53002 None!143)))

(declare-fun b!81216 () Bool)

(assert (=> b!81216 (= e!53002 (getValueByKey!139 (t!5156 (toList!730 lt!37536)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!12776 () Bool)

(declare-fun d!20001 () Bool)

(assert (=> d!20001 (= c!12776 (and ((_ is Cons!1493) (toList!730 lt!37536)) (= (_1!1095 (h!2082 (toList!730 lt!37536))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!53001 () Option!145)

(assert (=> d!20001 (= (getValueByKey!139 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53001)))

(declare-fun b!81214 () Bool)

(assert (=> b!81214 (= e!53001 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37536)))))))

(declare-fun b!81215 () Bool)

(assert (=> b!81215 (= e!53001 e!53002)))

(declare-fun c!12777 () Bool)

(assert (=> b!81215 (= c!12777 (and ((_ is Cons!1493) (toList!730 lt!37536)) (not (= (_1!1095 (h!2082 (toList!730 lt!37536))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!20001 c!12776) b!81214))

(assert (= (and d!20001 (not c!12776)) b!81215))

(assert (= (and b!81215 c!12777) b!81216))

(assert (= (and b!81215 (not c!12777)) b!81217))

(assert (=> b!81216 m!81993))

(declare-fun m!83207 () Bool)

(assert (=> b!81216 m!83207))

(assert (=> d!19797 d!20001))

(declare-fun d!20003 () Bool)

(declare-fun c!12780 () Bool)

(assert (=> d!20003 (= c!12780 ((_ is Nil!1494) (toList!730 lt!37513)))))

(declare-fun e!53005 () (InoxSet tuple2!2168))

(assert (=> d!20003 (= (content!86 (toList!730 lt!37513)) e!53005)))

(declare-fun b!81222 () Bool)

(assert (=> b!81222 (= e!53005 ((as const (Array tuple2!2168 Bool)) false))))

(declare-fun b!81223 () Bool)

(assert (=> b!81223 (= e!53005 ((_ map or) (store ((as const (Array tuple2!2168 Bool)) false) (h!2082 (toList!730 lt!37513)) true) (content!86 (t!5156 (toList!730 lt!37513)))))))

(assert (= (and d!20003 c!12780) b!81222))

(assert (= (and d!20003 (not c!12780)) b!81223))

(declare-fun m!83209 () Bool)

(assert (=> b!81223 m!83209))

(declare-fun m!83211 () Bool)

(assert (=> b!81223 m!83211))

(assert (=> d!19949 d!20003))

(declare-fun lt!37965 () Bool)

(declare-fun d!20005 () Bool)

(assert (=> d!20005 (= lt!37965 (select (content!86 (toList!730 lt!37771)) (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun e!53006 () Bool)

(assert (=> d!20005 (= lt!37965 e!53006)))

(declare-fun res!42244 () Bool)

(assert (=> d!20005 (=> (not res!42244) (not e!53006))))

(assert (=> d!20005 (= res!42244 ((_ is Cons!1493) (toList!730 lt!37771)))))

(assert (=> d!20005 (= (contains!742 (toList!730 lt!37771) (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37965)))

(declare-fun b!81224 () Bool)

(declare-fun e!53007 () Bool)

(assert (=> b!81224 (= e!53006 e!53007)))

(declare-fun res!42243 () Bool)

(assert (=> b!81224 (=> res!42243 e!53007)))

(assert (=> b!81224 (= res!42243 (= (h!2082 (toList!730 lt!37771)) (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!81225 () Bool)

(assert (=> b!81225 (= e!53007 (contains!742 (t!5156 (toList!730 lt!37771)) (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!20005 res!42244) b!81224))

(assert (= (and b!81224 (not res!42243)) b!81225))

(declare-fun m!83213 () Bool)

(assert (=> d!20005 m!83213))

(declare-fun m!83215 () Bool)

(assert (=> d!20005 m!83215))

(declare-fun m!83217 () Bool)

(assert (=> b!81225 m!83217))

(assert (=> b!80895 d!20005))

(declare-fun d!20007 () Bool)

(declare-fun res!42245 () Bool)

(declare-fun e!53008 () Bool)

(assert (=> d!20007 (=> res!42245 e!53008)))

(assert (=> d!20007 (= res!42245 (and ((_ is Cons!1493) lt!37544) (= (_1!1095 (h!2082 lt!37544)) (_1!1095 lt!37210))))))

(assert (=> d!20007 (= (containsKey!142 lt!37544 (_1!1095 lt!37210)) e!53008)))

(declare-fun b!81226 () Bool)

(declare-fun e!53009 () Bool)

(assert (=> b!81226 (= e!53008 e!53009)))

(declare-fun res!42246 () Bool)

(assert (=> b!81226 (=> (not res!42246) (not e!53009))))

(assert (=> b!81226 (= res!42246 (and (or (not ((_ is Cons!1493) lt!37544)) (bvsle (_1!1095 (h!2082 lt!37544)) (_1!1095 lt!37210))) ((_ is Cons!1493) lt!37544) (bvslt (_1!1095 (h!2082 lt!37544)) (_1!1095 lt!37210))))))

(declare-fun b!81227 () Bool)

(assert (=> b!81227 (= e!53009 (containsKey!142 (t!5156 lt!37544) (_1!1095 lt!37210)))))

(assert (= (and d!20007 (not res!42245)) b!81226))

(assert (= (and b!81226 res!42246) b!81227))

(declare-fun m!83219 () Bool)

(assert (=> b!81227 m!83219))

(assert (=> b!81006 d!20007))

(declare-fun d!20009 () Bool)

(declare-fun e!53010 () Bool)

(assert (=> d!20009 e!53010))

(declare-fun res!42247 () Bool)

(assert (=> d!20009 (=> res!42247 e!53010)))

(declare-fun lt!37967 () Bool)

(assert (=> d!20009 (= res!42247 (not lt!37967))))

(declare-fun lt!37966 () Bool)

(assert (=> d!20009 (= lt!37967 lt!37966)))

(declare-fun lt!37968 () Unit!2322)

(declare-fun e!53011 () Unit!2322)

(assert (=> d!20009 (= lt!37968 e!53011)))

(declare-fun c!12781 () Bool)

(assert (=> d!20009 (= c!12781 lt!37966)))

(assert (=> d!20009 (= lt!37966 (containsKey!142 (toList!730 (map!1186 (_2!1094 lt!37745))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!20009 (= (contains!739 (map!1186 (_2!1094 lt!37745)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) lt!37967)))

(declare-fun b!81228 () Bool)

(declare-fun lt!37969 () Unit!2322)

(assert (=> b!81228 (= e!53011 lt!37969)))

(assert (=> b!81228 (= lt!37969 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 (map!1186 (_2!1094 lt!37745))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> b!81228 (isDefined!91 (getValueByKey!139 (toList!730 (map!1186 (_2!1094 lt!37745))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!81229 () Bool)

(declare-fun Unit!2361 () Unit!2322)

(assert (=> b!81229 (= e!53011 Unit!2361)))

(declare-fun b!81230 () Bool)

(assert (=> b!81230 (= e!53010 (isDefined!91 (getValueByKey!139 (toList!730 (map!1186 (_2!1094 lt!37745))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(assert (= (and d!20009 c!12781) b!81228))

(assert (= (and d!20009 (not c!12781)) b!81229))

(assert (= (and d!20009 (not res!42247)) b!81230))

(assert (=> d!20009 m!81737))

(declare-fun m!83221 () Bool)

(assert (=> d!20009 m!83221))

(assert (=> b!81228 m!81737))

(declare-fun m!83223 () Bool)

(assert (=> b!81228 m!83223))

(assert (=> b!81228 m!81737))

(declare-fun m!83225 () Bool)

(assert (=> b!81228 m!83225))

(assert (=> b!81228 m!83225))

(declare-fun m!83227 () Bool)

(assert (=> b!81228 m!83227))

(assert (=> b!81230 m!81737))

(assert (=> b!81230 m!83225))

(assert (=> b!81230 m!83225))

(assert (=> b!81230 m!83227))

(assert (=> b!80863 d!20009))

(declare-fun d!20011 () Bool)

(assert (=> d!20011 (= (map!1186 (_2!1094 lt!37745)) (getCurrentListMap!426 (_keys!3956 (_2!1094 lt!37745)) (_values!2275 (_2!1094 lt!37745)) (mask!6298 (_2!1094 lt!37745)) (extraKeys!2139 (_2!1094 lt!37745)) (zeroValue!2188 (_2!1094 lt!37745)) (minValue!2188 (_2!1094 lt!37745)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1094 lt!37745))))))

(declare-fun bs!3442 () Bool)

(assert (= bs!3442 d!20011))

(declare-fun m!83229 () Bool)

(assert (=> bs!3442 m!83229))

(assert (=> b!80863 d!20011))

(declare-fun d!20013 () Bool)

(declare-fun e!53012 () Bool)

(assert (=> d!20013 e!53012))

(declare-fun res!42248 () Bool)

(assert (=> d!20013 (=> res!42248 e!53012)))

(declare-fun lt!37971 () Bool)

(assert (=> d!20013 (= res!42248 (not lt!37971))))

(declare-fun lt!37970 () Bool)

(assert (=> d!20013 (= lt!37971 lt!37970)))

(declare-fun lt!37972 () Unit!2322)

(declare-fun e!53013 () Unit!2322)

(assert (=> d!20013 (= lt!37972 e!53013)))

(declare-fun c!12782 () Bool)

(assert (=> d!20013 (= c!12782 lt!37970)))

(assert (=> d!20013 (= lt!37970 (containsKey!142 (toList!730 lt!37636) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20013 (= (contains!739 lt!37636 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!37971)))

(declare-fun b!81231 () Bool)

(declare-fun lt!37973 () Unit!2322)

(assert (=> b!81231 (= e!53013 lt!37973)))

(assert (=> b!81231 (= lt!37973 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37636) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> b!81231 (isDefined!91 (getValueByKey!139 (toList!730 lt!37636) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!81232 () Bool)

(declare-fun Unit!2362 () Unit!2322)

(assert (=> b!81232 (= e!53013 Unit!2362)))

(declare-fun b!81233 () Bool)

(assert (=> b!81233 (= e!53012 (isDefined!91 (getValueByKey!139 (toList!730 lt!37636) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (= (and d!20013 c!12782) b!81231))

(assert (= (and d!20013 (not c!12782)) b!81232))

(assert (= (and d!20013 (not res!42248)) b!81233))

(declare-fun m!83231 () Bool)

(assert (=> d!20013 m!83231))

(declare-fun m!83233 () Bool)

(assert (=> b!81231 m!83233))

(assert (=> b!81231 m!82405))

(assert (=> b!81231 m!82405))

(declare-fun m!83235 () Bool)

(assert (=> b!81231 m!83235))

(assert (=> b!81233 m!82405))

(assert (=> b!81233 m!82405))

(assert (=> b!81233 m!83235))

(assert (=> d!19783 d!20013))

(declare-fun b!81237 () Bool)

(declare-fun e!53015 () Option!145)

(assert (=> b!81237 (= e!53015 None!143)))

(declare-fun b!81236 () Bool)

(assert (=> b!81236 (= e!53015 (getValueByKey!139 (t!5156 lt!37634) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun d!20015 () Bool)

(declare-fun c!12783 () Bool)

(assert (=> d!20015 (= c!12783 (and ((_ is Cons!1493) lt!37634) (= (_1!1095 (h!2082 lt!37634)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun e!53014 () Option!145)

(assert (=> d!20015 (= (getValueByKey!139 lt!37634 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) e!53014)))

(declare-fun b!81234 () Bool)

(assert (=> b!81234 (= e!53014 (Some!144 (_2!1095 (h!2082 lt!37634))))))

(declare-fun b!81235 () Bool)

(assert (=> b!81235 (= e!53014 e!53015)))

(declare-fun c!12784 () Bool)

(assert (=> b!81235 (= c!12784 (and ((_ is Cons!1493) lt!37634) (not (= (_1!1095 (h!2082 lt!37634)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (= (and d!20015 c!12783) b!81234))

(assert (= (and d!20015 (not c!12783)) b!81235))

(assert (= (and b!81235 c!12784) b!81236))

(assert (= (and b!81235 (not c!12784)) b!81237))

(declare-fun m!83237 () Bool)

(assert (=> b!81236 m!83237))

(assert (=> d!19783 d!20015))

(declare-fun d!20017 () Bool)

(assert (=> d!20017 (= (getValueByKey!139 lt!37634 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun lt!37974 () Unit!2322)

(assert (=> d!20017 (= lt!37974 (choose!478 lt!37634 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun e!53016 () Bool)

(assert (=> d!20017 e!53016))

(declare-fun res!42249 () Bool)

(assert (=> d!20017 (=> (not res!42249) (not e!53016))))

(assert (=> d!20017 (= res!42249 (isStrictlySorted!283 lt!37634))))

(assert (=> d!20017 (= (lemmaContainsTupThenGetReturnValue!56 lt!37634 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!37974)))

(declare-fun b!81238 () Bool)

(declare-fun res!42250 () Bool)

(assert (=> b!81238 (=> (not res!42250) (not e!53016))))

(assert (=> b!81238 (= res!42250 (containsKey!142 lt!37634 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!81239 () Bool)

(assert (=> b!81239 (= e!53016 (contains!742 lt!37634 (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (= (and d!20017 res!42249) b!81238))

(assert (= (and b!81238 res!42250) b!81239))

(assert (=> d!20017 m!82399))

(declare-fun m!83239 () Bool)

(assert (=> d!20017 m!83239))

(declare-fun m!83241 () Bool)

(assert (=> d!20017 m!83241))

(declare-fun m!83243 () Bool)

(assert (=> b!81238 m!83243))

(declare-fun m!83245 () Bool)

(assert (=> b!81239 m!83245))

(assert (=> d!19783 d!20017))

(declare-fun bm!7560 () Bool)

(declare-fun call!7564 () List!1497)

(declare-fun call!7565 () List!1497)

(assert (=> bm!7560 (= call!7564 call!7565)))

(declare-fun e!53017 () Bool)

(declare-fun lt!37975 () List!1497)

(declare-fun b!81240 () Bool)

(assert (=> b!81240 (= e!53017 (contains!742 lt!37975 (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!81241 () Bool)

(declare-fun e!53018 () List!1497)

(declare-fun e!53021 () List!1497)

(assert (=> b!81241 (= e!53018 e!53021)))

(declare-fun c!12788 () Bool)

(assert (=> b!81241 (= c!12788 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun bm!7561 () Bool)

(declare-fun call!7563 () List!1497)

(assert (=> bm!7561 (= call!7563 call!7564)))

(declare-fun d!20019 () Bool)

(assert (=> d!20019 e!53017))

(declare-fun res!42251 () Bool)

(assert (=> d!20019 (=> (not res!42251) (not e!53017))))

(assert (=> d!20019 (= res!42251 (isStrictlySorted!283 lt!37975))))

(assert (=> d!20019 (= lt!37975 e!53018)))

(declare-fun c!12785 () Bool)

(assert (=> d!20019 (= c!12785 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (bvslt (_1!1095 (h!2082 (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> d!20019 (isStrictlySorted!283 (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!20019 (= (insertStrictlySorted!59 (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!37975)))

(declare-fun bm!7562 () Bool)

(declare-fun e!53019 () List!1497)

(assert (=> bm!7562 (= call!7565 ($colon$colon!69 e!53019 (ite c!12785 (h!2082 (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(declare-fun c!12787 () Bool)

(assert (=> bm!7562 (= c!12787 c!12785)))

(declare-fun b!81242 () Bool)

(declare-fun e!53020 () List!1497)

(assert (=> b!81242 (= e!53020 call!7563)))

(declare-fun b!81243 () Bool)

(declare-fun res!42252 () Bool)

(assert (=> b!81243 (=> (not res!42252) (not e!53017))))

(assert (=> b!81243 (= res!42252 (containsKey!142 lt!37975 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!81244 () Bool)

(declare-fun c!12786 () Bool)

(assert (=> b!81244 (= c!12786 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (bvsgt (_1!1095 (h!2082 (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> b!81244 (= e!53021 e!53020)))

(declare-fun b!81245 () Bool)

(assert (=> b!81245 (= e!53019 (insertStrictlySorted!59 (t!5156 (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!81246 () Bool)

(assert (=> b!81246 (= e!53021 call!7564)))

(declare-fun b!81247 () Bool)

(assert (=> b!81247 (= e!53020 call!7563)))

(declare-fun b!81248 () Bool)

(assert (=> b!81248 (= e!53019 (ite c!12788 (t!5156 (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (ite c!12786 (Cons!1493 (h!2082 (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (t!5156 (toList!730 (+!101 lt!37211 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))) Nil!1494)))))

(declare-fun b!81249 () Bool)

(assert (=> b!81249 (= e!53018 call!7565)))

(assert (= (and d!20019 c!12785) b!81249))

(assert (= (and d!20019 (not c!12785)) b!81241))

(assert (= (and b!81241 c!12788) b!81246))

(assert (= (and b!81241 (not c!12788)) b!81244))

(assert (= (and b!81244 c!12786) b!81247))

(assert (= (and b!81244 (not c!12786)) b!81242))

(assert (= (or b!81247 b!81242) bm!7561))

(assert (= (or b!81246 bm!7561) bm!7560))

(assert (= (or b!81249 bm!7560) bm!7562))

(assert (= (and bm!7562 c!12787) b!81245))

(assert (= (and bm!7562 (not c!12787)) b!81248))

(assert (= (and d!20019 res!42251) b!81243))

(assert (= (and b!81243 res!42252) b!81240))

(declare-fun m!83247 () Bool)

(assert (=> b!81245 m!83247))

(declare-fun m!83249 () Bool)

(assert (=> bm!7562 m!83249))

(declare-fun m!83251 () Bool)

(assert (=> b!81240 m!83251))

(declare-fun m!83253 () Bool)

(assert (=> d!20019 m!83253))

(declare-fun m!83255 () Bool)

(assert (=> d!20019 m!83255))

(declare-fun m!83257 () Bool)

(assert (=> b!81243 m!83257))

(assert (=> d!19783 d!20019))

(declare-fun d!20021 () Bool)

(assert (=> d!20021 (= (+!101 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (getCurrentListMap!426 (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(assert (=> d!20021 true))

(declare-fun _$5!86 () Unit!2322)

(assert (=> d!20021 (= (choose!484 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3076 lt!37405) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 (defaultEntry!2292 newMap!16)) _$5!86)))

(declare-fun bs!3443 () Bool)

(assert (= bs!3443 d!20021))

(assert (=> bs!3443 m!81949))

(assert (=> bs!3443 m!81949))

(assert (=> bs!3443 m!82533))

(assert (=> bs!3443 m!81975))

(assert (=> bs!3443 m!81969))

(assert (=> d!19871 d!20021))

(declare-fun d!20023 () Bool)

(assert (=> d!20023 (= (validMask!0 (mask!6298 newMap!16)) (and (or (= (mask!6298 newMap!16) #b00000000000000000000000000000111) (= (mask!6298 newMap!16) #b00000000000000000000000000001111) (= (mask!6298 newMap!16) #b00000000000000000000000000011111) (= (mask!6298 newMap!16) #b00000000000000000000000000111111) (= (mask!6298 newMap!16) #b00000000000000000000000001111111) (= (mask!6298 newMap!16) #b00000000000000000000000011111111) (= (mask!6298 newMap!16) #b00000000000000000000000111111111) (= (mask!6298 newMap!16) #b00000000000000000000001111111111) (= (mask!6298 newMap!16) #b00000000000000000000011111111111) (= (mask!6298 newMap!16) #b00000000000000000000111111111111) (= (mask!6298 newMap!16) #b00000000000000000001111111111111) (= (mask!6298 newMap!16) #b00000000000000000011111111111111) (= (mask!6298 newMap!16) #b00000000000000000111111111111111) (= (mask!6298 newMap!16) #b00000000000000001111111111111111) (= (mask!6298 newMap!16) #b00000000000000011111111111111111) (= (mask!6298 newMap!16) #b00000000000000111111111111111111) (= (mask!6298 newMap!16) #b00000000000001111111111111111111) (= (mask!6298 newMap!16) #b00000000000011111111111111111111) (= (mask!6298 newMap!16) #b00000000000111111111111111111111) (= (mask!6298 newMap!16) #b00000000001111111111111111111111) (= (mask!6298 newMap!16) #b00000000011111111111111111111111) (= (mask!6298 newMap!16) #b00000000111111111111111111111111) (= (mask!6298 newMap!16) #b00000001111111111111111111111111) (= (mask!6298 newMap!16) #b00000011111111111111111111111111) (= (mask!6298 newMap!16) #b00000111111111111111111111111111) (= (mask!6298 newMap!16) #b00001111111111111111111111111111) (= (mask!6298 newMap!16) #b00011111111111111111111111111111) (= (mask!6298 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6298 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!19871 d!20023))

(assert (=> d!19857 d!19841))

(assert (=> d!19857 d!19845))

(declare-fun d!20025 () Bool)

(declare-fun e!53022 () Bool)

(assert (=> d!20025 e!53022))

(declare-fun res!42253 () Bool)

(assert (=> d!20025 (=> res!42253 e!53022)))

(declare-fun lt!37977 () Bool)

(assert (=> d!20025 (= res!42253 (not lt!37977))))

(declare-fun lt!37976 () Bool)

(assert (=> d!20025 (= lt!37977 lt!37976)))

(declare-fun lt!37978 () Unit!2322)

(declare-fun e!53023 () Unit!2322)

(assert (=> d!20025 (= lt!37978 e!53023)))

(declare-fun c!12789 () Bool)

(assert (=> d!20025 (= c!12789 lt!37976)))

(assert (=> d!20025 (= lt!37976 (containsKey!142 (toList!730 lt!37475) lt!37474))))

(assert (=> d!20025 (= (contains!739 lt!37475 lt!37474) lt!37977)))

(declare-fun b!81250 () Bool)

(declare-fun lt!37979 () Unit!2322)

(assert (=> b!81250 (= e!53023 lt!37979)))

(assert (=> b!81250 (= lt!37979 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37475) lt!37474))))

(assert (=> b!81250 (isDefined!91 (getValueByKey!139 (toList!730 lt!37475) lt!37474))))

(declare-fun b!81251 () Bool)

(declare-fun Unit!2363 () Unit!2322)

(assert (=> b!81251 (= e!53023 Unit!2363)))

(declare-fun b!81252 () Bool)

(assert (=> b!81252 (= e!53022 (isDefined!91 (getValueByKey!139 (toList!730 lt!37475) lt!37474)))))

(assert (= (and d!20025 c!12789) b!81250))

(assert (= (and d!20025 (not c!12789)) b!81251))

(assert (= (and d!20025 (not res!42253)) b!81252))

(declare-fun m!83259 () Bool)

(assert (=> d!20025 m!83259))

(declare-fun m!83261 () Bool)

(assert (=> b!81250 m!83261))

(assert (=> b!81250 m!82629))

(assert (=> b!81250 m!82629))

(declare-fun m!83263 () Bool)

(assert (=> b!81250 m!83263))

(assert (=> b!81252 m!82629))

(assert (=> b!81252 m!82629))

(assert (=> b!81252 m!83263))

(assert (=> d!19857 d!20025))

(assert (=> d!19857 d!19849))

(declare-fun d!20027 () Bool)

(assert (=> d!20027 (= (apply!80 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37474) (apply!80 lt!37475 lt!37474))))

(assert (=> d!20027 true))

(declare-fun _$34!823 () Unit!2322)

(assert (=> d!20027 (= (choose!481 lt!37475 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37474) _$34!823)))

(declare-fun bs!3444 () Bool)

(assert (= bs!3444 d!20027))

(assert (=> bs!3444 m!81999))

(assert (=> bs!3444 m!81999))

(assert (=> bs!3444 m!82015))

(assert (=> bs!3444 m!81997))

(assert (=> d!19857 d!20027))

(declare-fun d!20029 () Bool)

(assert (=> d!20029 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3445 () Bool)

(assert (= bs!3445 d!20029))

(assert (=> bs!3445 m!82257))

(declare-fun m!83265 () Bool)

(assert (=> bs!3445 m!83265))

(assert (=> b!80725 d!20029))

(assert (=> b!80725 d!20001))

(declare-fun d!20031 () Bool)

(declare-fun e!53024 () Bool)

(assert (=> d!20031 e!53024))

(declare-fun res!42255 () Bool)

(assert (=> d!20031 (=> (not res!42255) (not e!53024))))

(declare-fun lt!37983 () ListLongMap!1429)

(assert (=> d!20031 (= res!42255 (contains!739 lt!37983 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun lt!37981 () List!1497)

(assert (=> d!20031 (= lt!37983 (ListLongMap!1430 lt!37981))))

(declare-fun lt!37980 () Unit!2322)

(declare-fun lt!37982 () Unit!2322)

(assert (=> d!20031 (= lt!37980 lt!37982)))

(assert (=> d!20031 (= (getValueByKey!139 lt!37981 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!20031 (= lt!37982 (lemmaContainsTupThenGetReturnValue!56 lt!37981 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!20031 (= lt!37981 (insertStrictlySorted!59 (toList!730 call!7523) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!20031 (= (+!101 call!7523 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) lt!37983)))

(declare-fun b!81254 () Bool)

(declare-fun res!42254 () Bool)

(assert (=> b!81254 (=> (not res!42254) (not e!53024))))

(assert (=> b!81254 (= res!42254 (= (getValueByKey!139 (toList!730 lt!37983) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(declare-fun b!81255 () Bool)

(assert (=> b!81255 (= e!53024 (contains!742 (toList!730 lt!37983) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(assert (= (and d!20031 res!42255) b!81254))

(assert (= (and b!81254 res!42254) b!81255))

(declare-fun m!83267 () Bool)

(assert (=> d!20031 m!83267))

(declare-fun m!83269 () Bool)

(assert (=> d!20031 m!83269))

(declare-fun m!83271 () Bool)

(assert (=> d!20031 m!83271))

(declare-fun m!83273 () Bool)

(assert (=> d!20031 m!83273))

(declare-fun m!83275 () Bool)

(assert (=> b!81254 m!83275))

(declare-fun m!83277 () Bool)

(assert (=> b!81255 m!83277))

(assert (=> b!80931 d!20031))

(declare-fun d!20033 () Bool)

(assert (=> d!20033 (= (get!1192 (getValueByKey!139 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2616 (getValueByKey!139 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19941 d!20033))

(declare-fun b!81259 () Bool)

(declare-fun e!53026 () Option!145)

(assert (=> b!81259 (= e!53026 None!143)))

(declare-fun b!81258 () Bool)

(assert (=> b!81258 (= e!53026 (getValueByKey!139 (t!5156 (toList!730 lt!37476)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!20035 () Bool)

(declare-fun c!12790 () Bool)

(assert (=> d!20035 (= c!12790 (and ((_ is Cons!1493) (toList!730 lt!37476)) (= (_1!1095 (h!2082 (toList!730 lt!37476))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!53025 () Option!145)

(assert (=> d!20035 (= (getValueByKey!139 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53025)))

(declare-fun b!81256 () Bool)

(assert (=> b!81256 (= e!53025 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37476)))))))

(declare-fun b!81257 () Bool)

(assert (=> b!81257 (= e!53025 e!53026)))

(declare-fun c!12791 () Bool)

(assert (=> b!81257 (= c!12791 (and ((_ is Cons!1493) (toList!730 lt!37476)) (not (= (_1!1095 (h!2082 (toList!730 lt!37476))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!20035 c!12790) b!81256))

(assert (= (and d!20035 (not c!12790)) b!81257))

(assert (= (and b!81257 c!12791) b!81258))

(assert (= (and b!81257 (not c!12791)) b!81259))

(assert (=> b!81258 m!81993))

(declare-fun m!83279 () Bool)

(assert (=> b!81258 m!83279))

(assert (=> d!19941 d!20035))

(declare-fun bm!7563 () Bool)

(declare-fun call!7567 () List!1497)

(declare-fun call!7568 () List!1497)

(assert (=> bm!7563 (= call!7567 call!7568)))

(declare-fun b!81260 () Bool)

(declare-fun e!53027 () Bool)

(declare-fun lt!37984 () List!1497)

(assert (=> b!81260 (= e!53027 (contains!742 lt!37984 (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(declare-fun b!81261 () Bool)

(declare-fun e!53028 () List!1497)

(declare-fun e!53031 () List!1497)

(assert (=> b!81261 (= e!53028 e!53031)))

(declare-fun c!12795 () Bool)

(assert (=> b!81261 (= c!12795 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37215))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37215)))) (_1!1095 lt!37212))))))

(declare-fun bm!7564 () Bool)

(declare-fun call!7566 () List!1497)

(assert (=> bm!7564 (= call!7566 call!7567)))

(declare-fun d!20037 () Bool)

(assert (=> d!20037 e!53027))

(declare-fun res!42256 () Bool)

(assert (=> d!20037 (=> (not res!42256) (not e!53027))))

(assert (=> d!20037 (= res!42256 (isStrictlySorted!283 lt!37984))))

(assert (=> d!20037 (= lt!37984 e!53028)))

(declare-fun c!12792 () Bool)

(assert (=> d!20037 (= c!12792 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37215))) (bvslt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37215)))) (_1!1095 lt!37212))))))

(assert (=> d!20037 (isStrictlySorted!283 (t!5156 (toList!730 lt!37215)))))

(assert (=> d!20037 (= (insertStrictlySorted!59 (t!5156 (toList!730 lt!37215)) (_1!1095 lt!37212) (_2!1095 lt!37212)) lt!37984)))

(declare-fun e!53029 () List!1497)

(declare-fun bm!7565 () Bool)

(assert (=> bm!7565 (= call!7568 ($colon$colon!69 e!53029 (ite c!12792 (h!2082 (t!5156 (toList!730 lt!37215))) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212)))))))

(declare-fun c!12794 () Bool)

(assert (=> bm!7565 (= c!12794 c!12792)))

(declare-fun b!81262 () Bool)

(declare-fun e!53030 () List!1497)

(assert (=> b!81262 (= e!53030 call!7566)))

(declare-fun b!81263 () Bool)

(declare-fun res!42257 () Bool)

(assert (=> b!81263 (=> (not res!42257) (not e!53027))))

(assert (=> b!81263 (= res!42257 (containsKey!142 lt!37984 (_1!1095 lt!37212)))))

(declare-fun b!81264 () Bool)

(declare-fun c!12793 () Bool)

(assert (=> b!81264 (= c!12793 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37215))) (bvsgt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37215)))) (_1!1095 lt!37212))))))

(assert (=> b!81264 (= e!53031 e!53030)))

(declare-fun b!81265 () Bool)

(assert (=> b!81265 (= e!53029 (insertStrictlySorted!59 (t!5156 (t!5156 (toList!730 lt!37215))) (_1!1095 lt!37212) (_2!1095 lt!37212)))))

(declare-fun b!81266 () Bool)

(assert (=> b!81266 (= e!53031 call!7567)))

(declare-fun b!81267 () Bool)

(assert (=> b!81267 (= e!53030 call!7566)))

(declare-fun b!81268 () Bool)

(assert (=> b!81268 (= e!53029 (ite c!12795 (t!5156 (t!5156 (toList!730 lt!37215))) (ite c!12793 (Cons!1493 (h!2082 (t!5156 (toList!730 lt!37215))) (t!5156 (t!5156 (toList!730 lt!37215)))) Nil!1494)))))

(declare-fun b!81269 () Bool)

(assert (=> b!81269 (= e!53028 call!7568)))

(assert (= (and d!20037 c!12792) b!81269))

(assert (= (and d!20037 (not c!12792)) b!81261))

(assert (= (and b!81261 c!12795) b!81266))

(assert (= (and b!81261 (not c!12795)) b!81264))

(assert (= (and b!81264 c!12793) b!81267))

(assert (= (and b!81264 (not c!12793)) b!81262))

(assert (= (or b!81267 b!81262) bm!7564))

(assert (= (or b!81266 bm!7564) bm!7563))

(assert (= (or b!81269 bm!7563) bm!7565))

(assert (= (and bm!7565 c!12794) b!81265))

(assert (= (and bm!7565 (not c!12794)) b!81268))

(assert (= (and d!20037 res!42256) b!81263))

(assert (= (and b!81263 res!42257) b!81260))

(declare-fun m!83281 () Bool)

(assert (=> b!81265 m!83281))

(declare-fun m!83283 () Bool)

(assert (=> bm!7565 m!83283))

(declare-fun m!83285 () Bool)

(assert (=> b!81260 m!83285))

(declare-fun m!83287 () Bool)

(assert (=> d!20037 m!83287))

(declare-fun m!83289 () Bool)

(assert (=> d!20037 m!83289))

(declare-fun m!83291 () Bool)

(assert (=> b!81263 m!83291))

(assert (=> b!80808 d!20037))

(assert (=> d!19911 d!19909))

(declare-fun d!20039 () Bool)

(assert (=> d!20039 (= (getValueByKey!139 lt!37548 (_1!1095 lt!37209)) (Some!144 (_2!1095 lt!37209)))))

(assert (=> d!20039 true))

(declare-fun _$22!400 () Unit!2322)

(assert (=> d!20039 (= (choose!478 lt!37548 (_1!1095 lt!37209) (_2!1095 lt!37209)) _$22!400)))

(declare-fun bs!3446 () Bool)

(assert (= bs!3446 d!20039))

(assert (=> bs!3446 m!82147))

(assert (=> d!19911 d!20039))

(declare-fun d!20041 () Bool)

(declare-fun res!42262 () Bool)

(declare-fun e!53036 () Bool)

(assert (=> d!20041 (=> res!42262 e!53036)))

(assert (=> d!20041 (= res!42262 (or ((_ is Nil!1494) lt!37548) ((_ is Nil!1494) (t!5156 lt!37548))))))

(assert (=> d!20041 (= (isStrictlySorted!283 lt!37548) e!53036)))

(declare-fun b!81274 () Bool)

(declare-fun e!53037 () Bool)

(assert (=> b!81274 (= e!53036 e!53037)))

(declare-fun res!42263 () Bool)

(assert (=> b!81274 (=> (not res!42263) (not e!53037))))

(assert (=> b!81274 (= res!42263 (bvslt (_1!1095 (h!2082 lt!37548)) (_1!1095 (h!2082 (t!5156 lt!37548)))))))

(declare-fun b!81275 () Bool)

(assert (=> b!81275 (= e!53037 (isStrictlySorted!283 (t!5156 lt!37548)))))

(assert (= (and d!20041 (not res!42262)) b!81274))

(assert (= (and b!81274 res!42263) b!81275))

(declare-fun m!83293 () Bool)

(assert (=> b!81275 m!83293))

(assert (=> d!19911 d!20041))

(declare-fun d!20043 () Bool)

(declare-fun res!42264 () Bool)

(declare-fun e!53038 () Bool)

(assert (=> d!20043 (=> res!42264 e!53038)))

(assert (=> d!20043 (= res!42264 (and ((_ is Cons!1493) (toList!730 call!7453)) (= (_1!1095 (h!2082 (toList!730 call!7453))) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405)))))))

(assert (=> d!20043 (= (containsKey!142 (toList!730 call!7453) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))) e!53038)))

(declare-fun b!81276 () Bool)

(declare-fun e!53039 () Bool)

(assert (=> b!81276 (= e!53038 e!53039)))

(declare-fun res!42265 () Bool)

(assert (=> b!81276 (=> (not res!42265) (not e!53039))))

(assert (=> b!81276 (= res!42265 (and (or (not ((_ is Cons!1493) (toList!730 call!7453))) (bvsle (_1!1095 (h!2082 (toList!730 call!7453))) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405)))) ((_ is Cons!1493) (toList!730 call!7453)) (bvslt (_1!1095 (h!2082 (toList!730 call!7453))) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405)))))))

(declare-fun b!81277 () Bool)

(assert (=> b!81277 (= e!53039 (containsKey!142 (t!5156 (toList!730 call!7453)) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))

(assert (= (and d!20043 (not res!42264)) b!81276))

(assert (= (and b!81276 res!42265) b!81277))

(assert (=> b!81277 m!81971))

(declare-fun m!83295 () Bool)

(assert (=> b!81277 m!83295))

(assert (=> d!19865 d!20043))

(declare-fun d!20045 () Bool)

(declare-fun e!53040 () Bool)

(assert (=> d!20045 e!53040))

(declare-fun res!42267 () Bool)

(assert (=> d!20045 (=> (not res!42267) (not e!53040))))

(declare-fun lt!37988 () ListLongMap!1429)

(assert (=> d!20045 (= res!42267 (contains!739 lt!37988 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun lt!37986 () List!1497)

(assert (=> d!20045 (= lt!37988 (ListLongMap!1430 lt!37986))))

(declare-fun lt!37985 () Unit!2322)

(declare-fun lt!37987 () Unit!2322)

(assert (=> d!20045 (= lt!37985 lt!37987)))

(assert (=> d!20045 (= (getValueByKey!139 lt!37986 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20045 (= lt!37987 (lemmaContainsTupThenGetReturnValue!56 lt!37986 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20045 (= lt!37986 (insertStrictlySorted!59 (toList!730 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20045 (= (+!101 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) lt!37988)))

(declare-fun b!81278 () Bool)

(declare-fun res!42266 () Bool)

(assert (=> b!81278 (=> (not res!42266) (not e!53040))))

(assert (=> b!81278 (= res!42266 (= (getValueByKey!139 (toList!730 lt!37988) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!81279 () Bool)

(assert (=> b!81279 (= e!53040 (contains!742 (toList!730 lt!37988) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (= (and d!20045 res!42267) b!81278))

(assert (= (and b!81278 res!42266) b!81279))

(declare-fun m!83297 () Bool)

(assert (=> d!20045 m!83297))

(declare-fun m!83299 () Bool)

(assert (=> d!20045 m!83299))

(declare-fun m!83301 () Bool)

(assert (=> d!20045 m!83301))

(declare-fun m!83303 () Bool)

(assert (=> d!20045 m!83303))

(declare-fun m!83305 () Bool)

(assert (=> b!81278 m!83305))

(declare-fun m!83307 () Bool)

(assert (=> b!81279 m!83307))

(assert (=> b!80939 d!20045))

(assert (=> b!80939 d!19879))

(assert (=> b!80939 d!19869))

(declare-fun d!20047 () Bool)

(assert (=> d!20047 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3447 () Bool)

(assert (= bs!3447 d!20047))

(assert (=> bs!3447 m!83029))

(declare-fun m!83309 () Bool)

(assert (=> bs!3447 m!83309))

(assert (=> b!81135 d!20047))

(assert (=> b!81135 d!20035))

(declare-fun d!20049 () Bool)

(declare-fun e!53041 () Bool)

(assert (=> d!20049 e!53041))

(declare-fun res!42268 () Bool)

(assert (=> d!20049 (=> res!42268 e!53041)))

(declare-fun lt!37990 () Bool)

(assert (=> d!20049 (= res!42268 (not lt!37990))))

(declare-fun lt!37989 () Bool)

(assert (=> d!20049 (= lt!37990 lt!37989)))

(declare-fun lt!37991 () Unit!2322)

(declare-fun e!53042 () Unit!2322)

(assert (=> d!20049 (= lt!37991 e!53042)))

(declare-fun c!12796 () Bool)

(assert (=> d!20049 (= c!12796 lt!37989)))

(assert (=> d!20049 (= lt!37989 (containsKey!142 (toList!730 lt!37606) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!20049 (= (contains!739 lt!37606 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!37990)))

(declare-fun b!81280 () Bool)

(declare-fun lt!37992 () Unit!2322)

(assert (=> b!81280 (= e!53042 lt!37992)))

(assert (=> b!81280 (= lt!37992 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37606) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!81280 (isDefined!91 (getValueByKey!139 (toList!730 lt!37606) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!81281 () Bool)

(declare-fun Unit!2364 () Unit!2322)

(assert (=> b!81281 (= e!53042 Unit!2364)))

(declare-fun b!81282 () Bool)

(assert (=> b!81282 (= e!53041 (isDefined!91 (getValueByKey!139 (toList!730 lt!37606) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!20049 c!12796) b!81280))

(assert (= (and d!20049 (not c!12796)) b!81281))

(assert (= (and d!20049 (not res!42268)) b!81282))

(assert (=> d!20049 m!82295))

(declare-fun m!83311 () Bool)

(assert (=> d!20049 m!83311))

(assert (=> b!81280 m!82295))

(declare-fun m!83313 () Bool)

(assert (=> b!81280 m!83313))

(assert (=> b!81280 m!82295))

(declare-fun m!83315 () Bool)

(assert (=> b!81280 m!83315))

(assert (=> b!81280 m!83315))

(declare-fun m!83317 () Bool)

(assert (=> b!81280 m!83317))

(assert (=> b!81282 m!82295))

(assert (=> b!81282 m!83315))

(assert (=> b!81282 m!83315))

(assert (=> b!81282 m!83317))

(assert (=> b!80738 d!20049))

(declare-fun d!20051 () Bool)

(declare-fun e!53043 () Bool)

(assert (=> d!20051 e!53043))

(declare-fun res!42269 () Bool)

(assert (=> d!20051 (=> res!42269 e!53043)))

(declare-fun lt!37994 () Bool)

(assert (=> d!20051 (= res!42269 (not lt!37994))))

(declare-fun lt!37993 () Bool)

(assert (=> d!20051 (= lt!37994 lt!37993)))

(declare-fun lt!37995 () Unit!2322)

(declare-fun e!53044 () Unit!2322)

(assert (=> d!20051 (= lt!37995 e!53044)))

(declare-fun c!12797 () Bool)

(assert (=> d!20051 (= c!12797 lt!37993)))

(assert (=> d!20051 (= lt!37993 (containsKey!142 (toList!730 lt!37797) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20051 (= (contains!739 lt!37797 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37994)))

(declare-fun b!81283 () Bool)

(declare-fun lt!37996 () Unit!2322)

(assert (=> b!81283 (= e!53044 lt!37996)))

(assert (=> b!81283 (= lt!37996 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37797) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81283 (isDefined!91 (getValueByKey!139 (toList!730 lt!37797) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81284 () Bool)

(declare-fun Unit!2365 () Unit!2322)

(assert (=> b!81284 (= e!53044 Unit!2365)))

(declare-fun b!81285 () Bool)

(assert (=> b!81285 (= e!53043 (isDefined!91 (getValueByKey!139 (toList!730 lt!37797) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20051 c!12797) b!81283))

(assert (= (and d!20051 (not c!12797)) b!81284))

(assert (= (and d!20051 (not res!42269)) b!81285))

(declare-fun m!83319 () Bool)

(assert (=> d!20051 m!83319))

(declare-fun m!83321 () Bool)

(assert (=> b!81283 m!83321))

(declare-fun m!83323 () Bool)

(assert (=> b!81283 m!83323))

(assert (=> b!81283 m!83323))

(declare-fun m!83325 () Bool)

(assert (=> b!81283 m!83325))

(assert (=> b!81285 m!83323))

(assert (=> b!81285 m!83323))

(assert (=> b!81285 m!83325))

(assert (=> bm!7520 d!20051))

(declare-fun d!20053 () Bool)

(assert (=> d!20053 (= (isDefined!91 (getValueByKey!139 (toList!730 call!7459) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))) (not (isEmpty!337 (getValueByKey!139 (toList!730 call!7459) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))))

(declare-fun bs!3448 () Bool)

(assert (= bs!3448 d!20053))

(assert (=> bs!3448 m!82289))

(declare-fun m!83327 () Bool)

(assert (=> bs!3448 m!83327))

(assert (=> b!80737 d!20053))

(declare-fun b!81289 () Bool)

(declare-fun e!53046 () Option!145)

(assert (=> b!81289 (= e!53046 None!143)))

(declare-fun b!81288 () Bool)

(assert (=> b!81288 (= e!53046 (getValueByKey!139 (t!5156 (toList!730 call!7459)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun d!20055 () Bool)

(declare-fun c!12798 () Bool)

(assert (=> d!20055 (= c!12798 (and ((_ is Cons!1493) (toList!730 call!7459)) (= (_1!1095 (h!2082 (toList!730 call!7459))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(declare-fun e!53045 () Option!145)

(assert (=> d!20055 (= (getValueByKey!139 (toList!730 call!7459) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) e!53045)))

(declare-fun b!81286 () Bool)

(assert (=> b!81286 (= e!53045 (Some!144 (_2!1095 (h!2082 (toList!730 call!7459)))))))

(declare-fun b!81287 () Bool)

(assert (=> b!81287 (= e!53045 e!53046)))

(declare-fun c!12799 () Bool)

(assert (=> b!81287 (= c!12799 (and ((_ is Cons!1493) (toList!730 call!7459)) (not (= (_1!1095 (h!2082 (toList!730 call!7459))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))))

(assert (= (and d!20055 c!12798) b!81286))

(assert (= (and d!20055 (not c!12798)) b!81287))

(assert (= (and b!81287 c!12799) b!81288))

(assert (= (and b!81287 (not c!12799)) b!81289))

(assert (=> b!81288 m!81737))

(declare-fun m!83329 () Bool)

(assert (=> b!81288 m!83329))

(assert (=> b!80737 d!20055))

(declare-fun b!81293 () Bool)

(declare-fun e!53048 () Option!145)

(assert (=> b!81293 (= e!53048 None!143)))

(declare-fun b!81292 () Bool)

(assert (=> b!81292 (= e!53048 (getValueByKey!139 (t!5156 (toList!730 lt!37636)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun c!12800 () Bool)

(declare-fun d!20057 () Bool)

(assert (=> d!20057 (= c!12800 (and ((_ is Cons!1493) (toList!730 lt!37636)) (= (_1!1095 (h!2082 (toList!730 lt!37636))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun e!53047 () Option!145)

(assert (=> d!20057 (= (getValueByKey!139 (toList!730 lt!37636) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) e!53047)))

(declare-fun b!81290 () Bool)

(assert (=> b!81290 (= e!53047 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37636)))))))

(declare-fun b!81291 () Bool)

(assert (=> b!81291 (= e!53047 e!53048)))

(declare-fun c!12801 () Bool)

(assert (=> b!81291 (= c!12801 (and ((_ is Cons!1493) (toList!730 lt!37636)) (not (= (_1!1095 (h!2082 (toList!730 lt!37636))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (= (and d!20057 c!12800) b!81290))

(assert (= (and d!20057 (not c!12800)) b!81291))

(assert (= (and b!81291 c!12801) b!81292))

(assert (= (and b!81291 (not c!12801)) b!81293))

(declare-fun m!83331 () Bool)

(assert (=> b!81292 m!83331))

(assert (=> b!80769 d!20057))

(declare-fun d!20059 () Bool)

(declare-fun res!42270 () Bool)

(declare-fun e!53049 () Bool)

(assert (=> d!20059 (=> res!42270 e!53049)))

(assert (=> d!20059 (= res!42270 (or ((_ is Nil!1494) lt!37885) ((_ is Nil!1494) (t!5156 lt!37885))))))

(assert (=> d!20059 (= (isStrictlySorted!283 lt!37885) e!53049)))

(declare-fun b!81294 () Bool)

(declare-fun e!53050 () Bool)

(assert (=> b!81294 (= e!53049 e!53050)))

(declare-fun res!42271 () Bool)

(assert (=> b!81294 (=> (not res!42271) (not e!53050))))

(assert (=> b!81294 (= res!42271 (bvslt (_1!1095 (h!2082 lt!37885)) (_1!1095 (h!2082 (t!5156 lt!37885)))))))

(declare-fun b!81295 () Bool)

(assert (=> b!81295 (= e!53050 (isStrictlySorted!283 (t!5156 lt!37885)))))

(assert (= (and d!20059 (not res!42270)) b!81294))

(assert (= (and b!81294 res!42271) b!81295))

(declare-fun m!83333 () Bool)

(assert (=> b!81295 m!83333))

(assert (=> d!19923 d!20059))

(declare-fun d!20061 () Bool)

(declare-fun res!42272 () Bool)

(declare-fun e!53051 () Bool)

(assert (=> d!20061 (=> res!42272 e!53051)))

(assert (=> d!20061 (= res!42272 (or ((_ is Nil!1494) (toList!730 lt!37215)) ((_ is Nil!1494) (t!5156 (toList!730 lt!37215)))))))

(assert (=> d!20061 (= (isStrictlySorted!283 (toList!730 lt!37215)) e!53051)))

(declare-fun b!81296 () Bool)

(declare-fun e!53052 () Bool)

(assert (=> b!81296 (= e!53051 e!53052)))

(declare-fun res!42273 () Bool)

(assert (=> b!81296 (=> (not res!42273) (not e!53052))))

(assert (=> b!81296 (= res!42273 (bvslt (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 (h!2082 (t!5156 (toList!730 lt!37215))))))))

(declare-fun b!81297 () Bool)

(assert (=> b!81297 (= e!53052 (isStrictlySorted!283 (t!5156 (toList!730 lt!37215))))))

(assert (= (and d!20061 (not res!42272)) b!81296))

(assert (= (and b!81296 res!42273) b!81297))

(assert (=> b!81297 m!83289))

(assert (=> d!19923 d!20061))

(declare-fun d!20063 () Bool)

(declare-fun res!42274 () Bool)

(declare-fun e!53053 () Bool)

(assert (=> d!20063 (=> res!42274 e!53053)))

(assert (=> d!20063 (= res!42274 (and ((_ is Cons!1493) lt!37854) (= (_1!1095 (h!2082 lt!37854)) (_1!1095 lt!37210))))))

(assert (=> d!20063 (= (containsKey!142 lt!37854 (_1!1095 lt!37210)) e!53053)))

(declare-fun b!81298 () Bool)

(declare-fun e!53054 () Bool)

(assert (=> b!81298 (= e!53053 e!53054)))

(declare-fun res!42275 () Bool)

(assert (=> b!81298 (=> (not res!42275) (not e!53054))))

(assert (=> b!81298 (= res!42275 (and (or (not ((_ is Cons!1493) lt!37854)) (bvsle (_1!1095 (h!2082 lt!37854)) (_1!1095 lt!37210))) ((_ is Cons!1493) lt!37854) (bvslt (_1!1095 (h!2082 lt!37854)) (_1!1095 lt!37210))))))

(declare-fun b!81299 () Bool)

(assert (=> b!81299 (= e!53054 (containsKey!142 (t!5156 lt!37854) (_1!1095 lt!37210)))))

(assert (= (and d!20063 (not res!42274)) b!81298))

(assert (= (and b!81298 res!42275) b!81299))

(declare-fun m!83335 () Bool)

(assert (=> b!81299 m!83335))

(assert (=> b!81011 d!20063))

(declare-fun d!20065 () Bool)

(declare-fun lt!37997 () Bool)

(assert (=> d!20065 (= lt!37997 (select (content!86 lt!37556) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun e!53055 () Bool)

(assert (=> d!20065 (= lt!37997 e!53055)))

(declare-fun res!42277 () Bool)

(assert (=> d!20065 (=> (not res!42277) (not e!53055))))

(assert (=> d!20065 (= res!42277 ((_ is Cons!1493) lt!37556))))

(assert (=> d!20065 (= (contains!742 lt!37556 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))) lt!37997)))

(declare-fun b!81300 () Bool)

(declare-fun e!53056 () Bool)

(assert (=> b!81300 (= e!53055 e!53056)))

(declare-fun res!42276 () Bool)

(assert (=> b!81300 (=> res!42276 e!53056)))

(assert (=> b!81300 (= res!42276 (= (h!2082 lt!37556) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun b!81301 () Bool)

(assert (=> b!81301 (= e!53056 (contains!742 (t!5156 lt!37556) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(assert (= (and d!20065 res!42277) b!81300))

(assert (= (and b!81300 (not res!42276)) b!81301))

(declare-fun m!83337 () Bool)

(assert (=> d!20065 m!83337))

(declare-fun m!83339 () Bool)

(assert (=> d!20065 m!83339))

(declare-fun m!83341 () Bool)

(assert (=> b!81301 m!83341))

(assert (=> b!81101 d!20065))

(declare-fun d!20067 () Bool)

(declare-fun e!53057 () Bool)

(assert (=> d!20067 e!53057))

(declare-fun res!42278 () Bool)

(assert (=> d!20067 (=> res!42278 e!53057)))

(declare-fun lt!37999 () Bool)

(assert (=> d!20067 (= res!42278 (not lt!37999))))

(declare-fun lt!37998 () Bool)

(assert (=> d!20067 (= lt!37999 lt!37998)))

(declare-fun lt!38000 () Unit!2322)

(declare-fun e!53058 () Unit!2322)

(assert (=> d!20067 (= lt!38000 e!53058)))

(declare-fun c!12802 () Bool)

(assert (=> d!20067 (= c!12802 lt!37998)))

(assert (=> d!20067 (= lt!37998 (containsKey!142 (toList!730 lt!37771) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!20067 (= (contains!739 lt!37771 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37999)))

(declare-fun b!81302 () Bool)

(declare-fun lt!38001 () Unit!2322)

(assert (=> b!81302 (= e!53058 lt!38001)))

(assert (=> b!81302 (= lt!38001 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37771) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> b!81302 (isDefined!91 (getValueByKey!139 (toList!730 lt!37771) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81303 () Bool)

(declare-fun Unit!2366 () Unit!2322)

(assert (=> b!81303 (= e!53058 Unit!2366)))

(declare-fun b!81304 () Bool)

(assert (=> b!81304 (= e!53057 (isDefined!91 (getValueByKey!139 (toList!730 lt!37771) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20067 c!12802) b!81302))

(assert (= (and d!20067 (not c!12802)) b!81303))

(assert (= (and d!20067 (not res!42278)) b!81304))

(declare-fun m!83343 () Bool)

(assert (=> d!20067 m!83343))

(declare-fun m!83345 () Bool)

(assert (=> b!81302 m!83345))

(assert (=> b!81302 m!82641))

(assert (=> b!81302 m!82641))

(declare-fun m!83347 () Bool)

(assert (=> b!81302 m!83347))

(assert (=> b!81304 m!82641))

(assert (=> b!81304 m!82641))

(assert (=> b!81304 m!83347))

(assert (=> d!19847 d!20067))

(declare-fun b!81308 () Bool)

(declare-fun e!53060 () Option!145)

(assert (=> b!81308 (= e!53060 None!143)))

(declare-fun b!81307 () Bool)

(assert (=> b!81307 (= e!53060 (getValueByKey!139 (t!5156 lt!37769) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20069 () Bool)

(declare-fun c!12803 () Bool)

(assert (=> d!20069 (= c!12803 (and ((_ is Cons!1493) lt!37769) (= (_1!1095 (h!2082 lt!37769)) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53059 () Option!145)

(assert (=> d!20069 (= (getValueByKey!139 lt!37769 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53059)))

(declare-fun b!81305 () Bool)

(assert (=> b!81305 (= e!53059 (Some!144 (_2!1095 (h!2082 lt!37769))))))

(declare-fun b!81306 () Bool)

(assert (=> b!81306 (= e!53059 e!53060)))

(declare-fun c!12804 () Bool)

(assert (=> b!81306 (= c!12804 (and ((_ is Cons!1493) lt!37769) (not (= (_1!1095 (h!2082 lt!37769)) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20069 c!12803) b!81305))

(assert (= (and d!20069 (not c!12803)) b!81306))

(assert (= (and b!81306 c!12804) b!81307))

(assert (= (and b!81306 (not c!12804)) b!81308))

(declare-fun m!83349 () Bool)

(assert (=> b!81307 m!83349))

(assert (=> d!19847 d!20069))

(declare-fun d!20071 () Bool)

(assert (=> d!20071 (= (getValueByKey!139 lt!37769 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!38002 () Unit!2322)

(assert (=> d!20071 (= lt!38002 (choose!478 lt!37769 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun e!53061 () Bool)

(assert (=> d!20071 e!53061))

(declare-fun res!42279 () Bool)

(assert (=> d!20071 (=> (not res!42279) (not e!53061))))

(assert (=> d!20071 (= res!42279 (isStrictlySorted!283 lt!37769))))

(assert (=> d!20071 (= (lemmaContainsTupThenGetReturnValue!56 lt!37769 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38002)))

(declare-fun b!81309 () Bool)

(declare-fun res!42280 () Bool)

(assert (=> b!81309 (=> (not res!42280) (not e!53061))))

(assert (=> b!81309 (= res!42280 (containsKey!142 lt!37769 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81310 () Bool)

(assert (=> b!81310 (= e!53061 (contains!742 lt!37769 (tuple2!2169 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20071 res!42279) b!81309))

(assert (= (and b!81309 res!42280) b!81310))

(assert (=> d!20071 m!82635))

(declare-fun m!83351 () Bool)

(assert (=> d!20071 m!83351))

(declare-fun m!83353 () Bool)

(assert (=> d!20071 m!83353))

(declare-fun m!83355 () Bool)

(assert (=> b!81309 m!83355))

(declare-fun m!83357 () Bool)

(assert (=> b!81310 m!83357))

(assert (=> d!19847 d!20071))

(declare-fun bm!7566 () Bool)

(declare-fun call!7570 () List!1497)

(declare-fun call!7571 () List!1497)

(assert (=> bm!7566 (= call!7570 call!7571)))

(declare-fun lt!38003 () List!1497)

(declare-fun b!81311 () Bool)

(declare-fun e!53062 () Bool)

(assert (=> b!81311 (= e!53062 (contains!742 lt!38003 (tuple2!2169 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!81312 () Bool)

(declare-fun e!53063 () List!1497)

(declare-fun e!53066 () List!1497)

(assert (=> b!81312 (= e!53063 e!53066)))

(declare-fun c!12808 () Bool)

(assert (=> b!81312 (= c!12808 (and ((_ is Cons!1493) (toList!730 lt!37477)) (= (_1!1095 (h!2082 (toList!730 lt!37477))) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun bm!7567 () Bool)

(declare-fun call!7569 () List!1497)

(assert (=> bm!7567 (= call!7569 call!7570)))

(declare-fun d!20073 () Bool)

(assert (=> d!20073 e!53062))

(declare-fun res!42281 () Bool)

(assert (=> d!20073 (=> (not res!42281) (not e!53062))))

(assert (=> d!20073 (= res!42281 (isStrictlySorted!283 lt!38003))))

(assert (=> d!20073 (= lt!38003 e!53063)))

(declare-fun c!12805 () Bool)

(assert (=> d!20073 (= c!12805 (and ((_ is Cons!1493) (toList!730 lt!37477)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37477))) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!20073 (isStrictlySorted!283 (toList!730 lt!37477))))

(assert (=> d!20073 (= (insertStrictlySorted!59 (toList!730 lt!37477) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38003)))

(declare-fun e!53064 () List!1497)

(declare-fun bm!7568 () Bool)

(assert (=> bm!7568 (= call!7571 ($colon$colon!69 e!53064 (ite c!12805 (h!2082 (toList!730 lt!37477)) (tuple2!2169 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun c!12807 () Bool)

(assert (=> bm!7568 (= c!12807 c!12805)))

(declare-fun b!81313 () Bool)

(declare-fun e!53065 () List!1497)

(assert (=> b!81313 (= e!53065 call!7569)))

(declare-fun b!81314 () Bool)

(declare-fun res!42282 () Bool)

(assert (=> b!81314 (=> (not res!42282) (not e!53062))))

(assert (=> b!81314 (= res!42282 (containsKey!142 lt!38003 (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81315 () Bool)

(declare-fun c!12806 () Bool)

(assert (=> b!81315 (= c!12806 (and ((_ is Cons!1493) (toList!730 lt!37477)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37477))) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> b!81315 (= e!53066 e!53065)))

(declare-fun b!81316 () Bool)

(assert (=> b!81316 (= e!53064 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37477)) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81317 () Bool)

(assert (=> b!81317 (= e!53066 call!7570)))

(declare-fun b!81318 () Bool)

(assert (=> b!81318 (= e!53065 call!7569)))

(declare-fun b!81319 () Bool)

(assert (=> b!81319 (= e!53064 (ite c!12808 (t!5156 (toList!730 lt!37477)) (ite c!12806 (Cons!1493 (h!2082 (toList!730 lt!37477)) (t!5156 (toList!730 lt!37477))) Nil!1494)))))

(declare-fun b!81320 () Bool)

(assert (=> b!81320 (= e!53063 call!7571)))

(assert (= (and d!20073 c!12805) b!81320))

(assert (= (and d!20073 (not c!12805)) b!81312))

(assert (= (and b!81312 c!12808) b!81317))

(assert (= (and b!81312 (not c!12808)) b!81315))

(assert (= (and b!81315 c!12806) b!81318))

(assert (= (and b!81315 (not c!12806)) b!81313))

(assert (= (or b!81318 b!81313) bm!7567))

(assert (= (or b!81317 bm!7567) bm!7566))

(assert (= (or b!81320 bm!7566) bm!7568))

(assert (= (and bm!7568 c!12807) b!81316))

(assert (= (and bm!7568 (not c!12807)) b!81319))

(assert (= (and d!20073 res!42281) b!81314))

(assert (= (and b!81314 res!42282) b!81311))

(declare-fun m!83359 () Bool)

(assert (=> b!81316 m!83359))

(declare-fun m!83361 () Bool)

(assert (=> bm!7568 m!83361))

(declare-fun m!83363 () Bool)

(assert (=> b!81311 m!83363))

(declare-fun m!83365 () Bool)

(assert (=> d!20073 m!83365))

(declare-fun m!83367 () Bool)

(assert (=> d!20073 m!83367))

(declare-fun m!83369 () Bool)

(assert (=> b!81314 m!83369))

(assert (=> d!19847 d!20073))

(declare-fun b!81324 () Bool)

(declare-fun e!53068 () Option!145)

(assert (=> b!81324 (= e!53068 None!143)))

(declare-fun b!81323 () Bool)

(assert (=> b!81323 (= e!53068 (getValueByKey!139 (t!5156 (t!5156 (toList!730 lt!37550))) (_1!1095 lt!37209)))))

(declare-fun d!20075 () Bool)

(declare-fun c!12809 () Bool)

(assert (=> d!20075 (= c!12809 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37550))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37550)))) (_1!1095 lt!37209))))))

(declare-fun e!53067 () Option!145)

(assert (=> d!20075 (= (getValueByKey!139 (t!5156 (toList!730 lt!37550)) (_1!1095 lt!37209)) e!53067)))

(declare-fun b!81321 () Bool)

(assert (=> b!81321 (= e!53067 (Some!144 (_2!1095 (h!2082 (t!5156 (toList!730 lt!37550))))))))

(declare-fun b!81322 () Bool)

(assert (=> b!81322 (= e!53067 e!53068)))

(declare-fun c!12810 () Bool)

(assert (=> b!81322 (= c!12810 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37550))) (not (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37550)))) (_1!1095 lt!37209)))))))

(assert (= (and d!20075 c!12809) b!81321))

(assert (= (and d!20075 (not c!12809)) b!81322))

(assert (= (and b!81322 c!12810) b!81323))

(assert (= (and b!81322 (not c!12810)) b!81324))

(declare-fun m!83371 () Bool)

(assert (=> b!81323 m!83371))

(assert (=> b!81151 d!20075))

(assert (=> b!80947 d!19703))

(declare-fun b!81328 () Bool)

(declare-fun e!53070 () Option!145)

(assert (=> b!81328 (= e!53070 None!143)))

(declare-fun b!81327 () Bool)

(assert (=> b!81327 (= e!53070 (getValueByKey!139 (t!5156 (t!5156 (toList!730 lt!37217))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun d!20077 () Bool)

(declare-fun c!12811 () Bool)

(assert (=> d!20077 (= c!12811 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37217))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37217)))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(declare-fun e!53069 () Option!145)

(assert (=> d!20077 (= (getValueByKey!139 (t!5156 (toList!730 lt!37217)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) e!53069)))

(declare-fun b!81325 () Bool)

(assert (=> b!81325 (= e!53069 (Some!144 (_2!1095 (h!2082 (t!5156 (toList!730 lt!37217))))))))

(declare-fun b!81326 () Bool)

(assert (=> b!81326 (= e!53069 e!53070)))

(declare-fun c!12812 () Bool)

(assert (=> b!81326 (= c!12812 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37217))) (not (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37217)))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))))

(assert (= (and d!20077 c!12811) b!81325))

(assert (= (and d!20077 (not c!12811)) b!81326))

(assert (= (and b!81326 c!12812) b!81327))

(assert (= (and b!81326 (not c!12812)) b!81328))

(assert (=> b!81327 m!81737))

(declare-fun m!83373 () Bool)

(assert (=> b!81327 m!83373))

(assert (=> b!81158 d!20077))

(declare-fun d!20079 () Bool)

(declare-fun lt!38004 () Bool)

(assert (=> d!20079 (= lt!38004 (select (content!86 lt!37885) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun e!53071 () Bool)

(assert (=> d!20079 (= lt!38004 e!53071)))

(declare-fun res!42284 () Bool)

(assert (=> d!20079 (=> (not res!42284) (not e!53071))))

(assert (=> d!20079 (= res!42284 ((_ is Cons!1493) lt!37885))))

(assert (=> d!20079 (= (contains!742 lt!37885 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))) lt!38004)))

(declare-fun b!81329 () Bool)

(declare-fun e!53072 () Bool)

(assert (=> b!81329 (= e!53071 e!53072)))

(declare-fun res!42283 () Bool)

(assert (=> b!81329 (=> res!42283 e!53072)))

(assert (=> b!81329 (= res!42283 (= (h!2082 lt!37885) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun b!81330 () Bool)

(assert (=> b!81330 (= e!53072 (contains!742 (t!5156 lt!37885) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(assert (= (and d!20079 res!42284) b!81329))

(assert (= (and b!81329 (not res!42283)) b!81330))

(declare-fun m!83375 () Bool)

(assert (=> d!20079 m!83375))

(declare-fun m!83377 () Bool)

(assert (=> d!20079 m!83377))

(declare-fun m!83379 () Bool)

(assert (=> b!81330 m!83379))

(assert (=> b!81072 d!20079))

(declare-fun d!20081 () Bool)

(declare-fun lt!38005 () Bool)

(assert (=> d!20081 (= lt!38005 (select (content!86 lt!37560) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(declare-fun e!53073 () Bool)

(assert (=> d!20081 (= lt!38005 e!53073)))

(declare-fun res!42286 () Bool)

(assert (=> d!20081 (=> (not res!42286) (not e!53073))))

(assert (=> d!20081 (= res!42286 ((_ is Cons!1493) lt!37560))))

(assert (=> d!20081 (= (contains!742 lt!37560 (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))) lt!38005)))

(declare-fun b!81331 () Bool)

(declare-fun e!53074 () Bool)

(assert (=> b!81331 (= e!53073 e!53074)))

(declare-fun res!42285 () Bool)

(assert (=> b!81331 (=> res!42285 e!53074)))

(assert (=> b!81331 (= res!42285 (= (h!2082 lt!37560) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(declare-fun b!81332 () Bool)

(assert (=> b!81332 (= e!53074 (contains!742 (t!5156 lt!37560) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(assert (= (and d!20081 res!42286) b!81331))

(assert (= (and b!81331 (not res!42285)) b!81332))

(declare-fun m!83381 () Bool)

(assert (=> d!20081 m!83381))

(declare-fun m!83383 () Bool)

(assert (=> d!20081 m!83383))

(declare-fun m!83385 () Bool)

(assert (=> b!81332 m!83385))

(assert (=> b!80802 d!20081))

(declare-fun d!20083 () Bool)

(declare-fun lt!38006 () Bool)

(assert (=> d!20083 (= lt!38006 (select (content!86 (toList!730 lt!37620)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun e!53075 () Bool)

(assert (=> d!20083 (= lt!38006 e!53075)))

(declare-fun res!42288 () Bool)

(assert (=> d!20083 (=> (not res!42288) (not e!53075))))

(assert (=> d!20083 (= res!42288 ((_ is Cons!1493) (toList!730 lt!37620)))))

(assert (=> d!20083 (= (contains!742 (toList!730 lt!37620) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!38006)))

(declare-fun b!81333 () Bool)

(declare-fun e!53076 () Bool)

(assert (=> b!81333 (= e!53075 e!53076)))

(declare-fun res!42287 () Bool)

(assert (=> b!81333 (=> res!42287 e!53076)))

(assert (=> b!81333 (= res!42287 (= (h!2082 (toList!730 lt!37620)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!81334 () Bool)

(assert (=> b!81334 (= e!53076 (contains!742 (t!5156 (toList!730 lt!37620)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!20083 res!42288) b!81333))

(assert (= (and b!81333 (not res!42287)) b!81334))

(declare-fun m!83387 () Bool)

(assert (=> d!20083 m!83387))

(declare-fun m!83389 () Bool)

(assert (=> d!20083 m!83389))

(declare-fun m!83391 () Bool)

(assert (=> b!81334 m!83391))

(assert (=> b!80759 d!20083))

(declare-fun b!81335 () Bool)

(declare-fun e!53080 () Bool)

(declare-fun e!53081 () Bool)

(assert (=> b!81335 (= e!53080 e!53081)))

(assert (=> b!81335 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun lt!38011 () ListLongMap!1429)

(declare-fun res!42291 () Bool)

(assert (=> b!81335 (= res!42291 (contains!739 lt!38011 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!81335 (=> (not res!42291) (not e!53081))))

(declare-fun b!81336 () Bool)

(declare-fun lt!38010 () Unit!2322)

(declare-fun lt!38007 () Unit!2322)

(assert (=> b!81336 (= lt!38010 lt!38007)))

(declare-fun lt!38008 () ListLongMap!1429)

(declare-fun lt!38013 () (_ BitVec 64))

(declare-fun lt!38012 () V!3001)

(declare-fun lt!38009 () (_ BitVec 64))

(assert (=> b!81336 (not (contains!739 (+!101 lt!38008 (tuple2!2169 lt!38013 lt!38012)) lt!38009))))

(assert (=> b!81336 (= lt!38007 (addStillNotContains!31 lt!38008 lt!38013 lt!38012 lt!38009))))

(assert (=> b!81336 (= lt!38009 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81336 (= lt!38012 (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81336 (= lt!38013 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!7572 () ListLongMap!1429)

(assert (=> b!81336 (= lt!38008 call!7572)))

(declare-fun e!53078 () ListLongMap!1429)

(assert (=> b!81336 (= e!53078 (+!101 call!7572 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81338 () Bool)

(assert (=> b!81338 (= e!53078 call!7572)))

(declare-fun b!81339 () Bool)

(declare-fun e!53077 () Bool)

(assert (=> b!81339 (= e!53077 (= lt!38011 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!81340 () Bool)

(declare-fun res!42292 () Bool)

(declare-fun e!53083 () Bool)

(assert (=> b!81340 (=> (not res!42292) (not e!53083))))

(assert (=> b!81340 (= res!42292 (not (contains!739 lt!38011 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81341 () Bool)

(assert (=> b!81341 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> b!81341 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2135 (_values!2275 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> b!81341 (= e!53081 (= (apply!80 lt!38011 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81342 () Bool)

(assert (=> b!81342 (= e!53080 e!53077)))

(declare-fun c!12813 () Bool)

(assert (=> b!81342 (= c!12813 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!81343 () Bool)

(assert (=> b!81343 (= e!53083 e!53080)))

(declare-fun c!12815 () Bool)

(declare-fun e!53079 () Bool)

(assert (=> b!81343 (= c!12815 e!53079)))

(declare-fun res!42289 () Bool)

(assert (=> b!81343 (=> (not res!42289) (not e!53079))))

(assert (=> b!81343 (= res!42289 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!81344 () Bool)

(declare-fun e!53082 () ListLongMap!1429)

(assert (=> b!81344 (= e!53082 e!53078)))

(declare-fun c!12816 () Bool)

(assert (=> b!81344 (= c!12816 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!7569 () Bool)

(assert (=> bm!7569 (= call!7572 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun b!81337 () Bool)

(assert (=> b!81337 (= e!53077 (isEmpty!335 lt!38011))))

(declare-fun d!20085 () Bool)

(assert (=> d!20085 e!53083))

(declare-fun res!42290 () Bool)

(assert (=> d!20085 (=> (not res!42290) (not e!53083))))

(assert (=> d!20085 (= res!42290 (not (contains!739 lt!38011 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20085 (= lt!38011 e!53082)))

(declare-fun c!12814 () Bool)

(assert (=> d!20085 (= c!12814 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> d!20085 (validMask!0 (mask!6298 (v!2610 (underlying!283 thiss!992))))))

(assert (=> d!20085 (= (getCurrentListMapNoExtraKeys!66 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (_values!2275 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992))) (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) (minValue!2188 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992)))) lt!38011)))

(declare-fun b!81345 () Bool)

(assert (=> b!81345 (= e!53082 (ListLongMap!1430 Nil!1494))))

(declare-fun b!81346 () Bool)

(assert (=> b!81346 (= e!53079 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!81346 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (= (and d!20085 c!12814) b!81345))

(assert (= (and d!20085 (not c!12814)) b!81344))

(assert (= (and b!81344 c!12816) b!81336))

(assert (= (and b!81344 (not c!12816)) b!81338))

(assert (= (or b!81336 b!81338) bm!7569))

(assert (= (and d!20085 res!42290) b!81340))

(assert (= (and b!81340 res!42292) b!81343))

(assert (= (and b!81343 res!42289) b!81346))

(assert (= (and b!81343 c!12815) b!81335))

(assert (= (and b!81343 (not c!12815)) b!81342))

(assert (= (and b!81335 res!42291) b!81341))

(assert (= (and b!81342 c!12813) b!81339))

(assert (= (and b!81342 (not c!12813)) b!81337))

(declare-fun b_lambda!3631 () Bool)

(assert (=> (not b_lambda!3631) (not b!81336)))

(assert (=> b!81336 t!5153))

(declare-fun b_and!4957 () Bool)

(assert (= b_and!4953 (and (=> t!5153 result!2829) b_and!4957)))

(assert (=> b!81336 t!5155))

(declare-fun b_and!4959 () Bool)

(assert (= b_and!4955 (and (=> t!5155 result!2833) b_and!4959)))

(declare-fun b_lambda!3633 () Bool)

(assert (=> (not b_lambda!3633) (not b!81341)))

(assert (=> b!81341 t!5153))

(declare-fun b_and!4961 () Bool)

(assert (= b_and!4957 (and (=> t!5153 result!2829) b_and!4961)))

(assert (=> b!81341 t!5155))

(declare-fun b_and!4963 () Bool)

(assert (= b_and!4959 (and (=> t!5155 result!2833) b_and!4963)))

(declare-fun m!83393 () Bool)

(assert (=> b!81335 m!83393))

(assert (=> b!81335 m!83393))

(declare-fun m!83395 () Bool)

(assert (=> b!81335 m!83395))

(assert (=> b!81341 m!81775))

(assert (=> b!81341 m!83393))

(assert (=> b!81341 m!83393))

(declare-fun m!83397 () Bool)

(assert (=> b!81341 m!83397))

(declare-fun m!83399 () Bool)

(assert (=> b!81341 m!83399))

(assert (=> b!81341 m!81775))

(declare-fun m!83401 () Bool)

(assert (=> b!81341 m!83401))

(assert (=> b!81341 m!83399))

(assert (=> b!81344 m!83393))

(assert (=> b!81344 m!83393))

(declare-fun m!83403 () Bool)

(assert (=> b!81344 m!83403))

(declare-fun m!83405 () Bool)

(assert (=> b!81339 m!83405))

(assert (=> bm!7569 m!83405))

(assert (=> b!81336 m!81775))

(assert (=> b!81336 m!83393))

(declare-fun m!83407 () Bool)

(assert (=> b!81336 m!83407))

(assert (=> b!81336 m!83407))

(declare-fun m!83409 () Bool)

(assert (=> b!81336 m!83409))

(declare-fun m!83411 () Bool)

(assert (=> b!81336 m!83411))

(declare-fun m!83413 () Bool)

(assert (=> b!81336 m!83413))

(assert (=> b!81336 m!83399))

(assert (=> b!81336 m!81775))

(assert (=> b!81336 m!83401))

(assert (=> b!81336 m!83399))

(declare-fun m!83415 () Bool)

(assert (=> b!81337 m!83415))

(assert (=> b!81346 m!83393))

(assert (=> b!81346 m!83393))

(assert (=> b!81346 m!83403))

(declare-fun m!83417 () Bool)

(assert (=> b!81340 m!83417))

(declare-fun m!83419 () Bool)

(assert (=> d!20085 m!83419))

(assert (=> d!20085 m!81735))

(assert (=> bm!7499 d!20085))

(declare-fun d!20087 () Bool)

(declare-fun lt!38014 () Bool)

(assert (=> d!20087 (= lt!38014 (select (content!86 lt!37655) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(declare-fun e!53084 () Bool)

(assert (=> d!20087 (= lt!38014 e!53084)))

(declare-fun res!42294 () Bool)

(assert (=> d!20087 (=> (not res!42294) (not e!53084))))

(assert (=> d!20087 (= res!42294 ((_ is Cons!1493) lt!37655))))

(assert (=> d!20087 (= (contains!742 lt!37655 (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))) lt!38014)))

(declare-fun b!81347 () Bool)

(declare-fun e!53085 () Bool)

(assert (=> b!81347 (= e!53084 e!53085)))

(declare-fun res!42293 () Bool)

(assert (=> b!81347 (=> res!42293 e!53085)))

(assert (=> b!81347 (= res!42293 (= (h!2082 lt!37655) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(declare-fun b!81348 () Bool)

(assert (=> b!81348 (= e!53085 (contains!742 (t!5156 lt!37655) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(assert (= (and d!20087 res!42294) b!81347))

(assert (= (and b!81347 (not res!42293)) b!81348))

(declare-fun m!83421 () Bool)

(assert (=> d!20087 m!83421))

(declare-fun m!83423 () Bool)

(assert (=> d!20087 m!83423))

(declare-fun m!83425 () Bool)

(assert (=> b!81348 m!83425))

(assert (=> b!80803 d!20087))

(declare-fun d!20089 () Bool)

(assert (=> d!20089 (= (isEmpty!336 (toList!730 lt!37536)) ((_ is Nil!1494) (toList!730 lt!37536)))))

(assert (=> d!19761 d!20089))

(declare-fun d!20091 () Bool)

(assert (=> d!20091 (= (get!1192 (getValueByKey!139 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2616 (getValueByKey!139 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19943 d!20091))

(declare-fun b!81352 () Bool)

(declare-fun e!53087 () Option!145)

(assert (=> b!81352 (= e!53087 None!143)))

(declare-fun b!81351 () Bool)

(assert (=> b!81351 (= e!53087 (getValueByKey!139 (t!5156 (toList!730 lt!37476)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!20093 () Bool)

(declare-fun c!12817 () Bool)

(assert (=> d!20093 (= c!12817 (and ((_ is Cons!1493) (toList!730 lt!37476)) (= (_1!1095 (h!2082 (toList!730 lt!37476))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53086 () Option!145)

(assert (=> d!20093 (= (getValueByKey!139 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000) e!53086)))

(declare-fun b!81349 () Bool)

(assert (=> b!81349 (= e!53086 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37476)))))))

(declare-fun b!81350 () Bool)

(assert (=> b!81350 (= e!53086 e!53087)))

(declare-fun c!12818 () Bool)

(assert (=> b!81350 (= c!12818 (and ((_ is Cons!1493) (toList!730 lt!37476)) (not (= (_1!1095 (h!2082 (toList!730 lt!37476))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!20093 c!12817) b!81349))

(assert (= (and d!20093 (not c!12817)) b!81350))

(assert (= (and b!81350 c!12818) b!81351))

(assert (= (and b!81350 (not c!12818)) b!81352))

(declare-fun m!83427 () Bool)

(assert (=> b!81351 m!83427))

(assert (=> d!19943 d!20093))

(declare-fun d!20095 () Bool)

(declare-fun lt!38015 () Bool)

(assert (=> d!20095 (= lt!38015 (select (content!86 lt!37552) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun e!53088 () Bool)

(assert (=> d!20095 (= lt!38015 e!53088)))

(declare-fun res!42296 () Bool)

(assert (=> d!20095 (=> (not res!42296) (not e!53088))))

(assert (=> d!20095 (= res!42296 ((_ is Cons!1493) lt!37552))))

(assert (=> d!20095 (= (contains!742 lt!37552 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))) lt!38015)))

(declare-fun b!81353 () Bool)

(declare-fun e!53089 () Bool)

(assert (=> b!81353 (= e!53088 e!53089)))

(declare-fun res!42295 () Bool)

(assert (=> b!81353 (=> res!42295 e!53089)))

(assert (=> b!81353 (= res!42295 (= (h!2082 lt!37552) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun b!81354 () Bool)

(assert (=> b!81354 (= e!53089 (contains!742 (t!5156 lt!37552) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(assert (= (and d!20095 res!42296) b!81353))

(assert (= (and b!81353 (not res!42295)) b!81354))

(declare-fun m!83429 () Bool)

(assert (=> d!20095 m!83429))

(declare-fun m!83431 () Bool)

(assert (=> d!20095 m!83431))

(declare-fun m!83433 () Bool)

(assert (=> b!81354 m!83433))

(assert (=> b!81071 d!20095))

(declare-fun d!20097 () Bool)

(declare-fun e!53090 () Bool)

(assert (=> d!20097 e!53090))

(declare-fun res!42297 () Bool)

(assert (=> d!20097 (=> res!42297 e!53090)))

(declare-fun lt!38017 () Bool)

(assert (=> d!20097 (= res!42297 (not lt!38017))))

(declare-fun lt!38016 () Bool)

(assert (=> d!20097 (= lt!38017 lt!38016)))

(declare-fun lt!38018 () Unit!2322)

(declare-fun e!53091 () Unit!2322)

(assert (=> d!20097 (= lt!38018 e!53091)))

(declare-fun c!12819 () Bool)

(assert (=> d!20097 (= c!12819 lt!38016)))

(assert (=> d!20097 (= lt!38016 (containsKey!142 (toList!730 lt!37912) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20097 (= (contains!739 lt!37912 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38017)))

(declare-fun b!81355 () Bool)

(declare-fun lt!38019 () Unit!2322)

(assert (=> b!81355 (= e!53091 lt!38019)))

(assert (=> b!81355 (= lt!38019 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37912) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81355 (isDefined!91 (getValueByKey!139 (toList!730 lt!37912) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81356 () Bool)

(declare-fun Unit!2367 () Unit!2322)

(assert (=> b!81356 (= e!53091 Unit!2367)))

(declare-fun b!81357 () Bool)

(assert (=> b!81357 (= e!53090 (isDefined!91 (getValueByKey!139 (toList!730 lt!37912) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20097 c!12819) b!81355))

(assert (= (and d!20097 (not c!12819)) b!81356))

(assert (= (and d!20097 (not res!42297)) b!81357))

(declare-fun m!83435 () Bool)

(assert (=> d!20097 m!83435))

(declare-fun m!83437 () Bool)

(assert (=> b!81355 m!83437))

(declare-fun m!83439 () Bool)

(assert (=> b!81355 m!83439))

(assert (=> b!81355 m!83439))

(declare-fun m!83441 () Bool)

(assert (=> b!81355 m!83441))

(assert (=> b!81357 m!83439))

(assert (=> b!81357 m!83439))

(assert (=> b!81357 m!83441))

(assert (=> bm!7553 d!20097))

(declare-fun d!20099 () Bool)

(declare-fun res!42298 () Bool)

(declare-fun e!53092 () Bool)

(assert (=> d!20099 (=> res!42298 e!53092)))

(assert (=> d!20099 (= res!42298 (and ((_ is Cons!1493) (toList!730 lt!37476)) (= (_1!1095 (h!2082 (toList!730 lt!37476))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20099 (= (containsKey!142 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000) e!53092)))

(declare-fun b!81358 () Bool)

(declare-fun e!53093 () Bool)

(assert (=> b!81358 (= e!53092 e!53093)))

(declare-fun res!42299 () Bool)

(assert (=> b!81358 (=> (not res!42299) (not e!53093))))

(assert (=> b!81358 (= res!42299 (and (or (not ((_ is Cons!1493) (toList!730 lt!37476))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37476))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1493) (toList!730 lt!37476)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37476))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81359 () Bool)

(assert (=> b!81359 (= e!53093 (containsKey!142 (t!5156 (toList!730 lt!37476)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20099 (not res!42298)) b!81358))

(assert (= (and b!81358 res!42299) b!81359))

(declare-fun m!83443 () Bool)

(assert (=> b!81359 m!83443))

(assert (=> d!19757 d!20099))

(declare-fun b!81363 () Bool)

(declare-fun e!53095 () Option!145)

(assert (=> b!81363 (= e!53095 None!143)))

(declare-fun b!81362 () Bool)

(assert (=> b!81362 (= e!53095 (getValueByKey!139 (t!5156 (toList!730 lt!37900)) (_1!1095 (tuple2!2169 lt!37538 lt!37537))))))

(declare-fun d!20101 () Bool)

(declare-fun c!12820 () Bool)

(assert (=> d!20101 (= c!12820 (and ((_ is Cons!1493) (toList!730 lt!37900)) (= (_1!1095 (h!2082 (toList!730 lt!37900))) (_1!1095 (tuple2!2169 lt!37538 lt!37537)))))))

(declare-fun e!53094 () Option!145)

(assert (=> d!20101 (= (getValueByKey!139 (toList!730 lt!37900) (_1!1095 (tuple2!2169 lt!37538 lt!37537))) e!53094)))

(declare-fun b!81360 () Bool)

(assert (=> b!81360 (= e!53094 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37900)))))))

(declare-fun b!81361 () Bool)

(assert (=> b!81361 (= e!53094 e!53095)))

(declare-fun c!12821 () Bool)

(assert (=> b!81361 (= c!12821 (and ((_ is Cons!1493) (toList!730 lt!37900)) (not (= (_1!1095 (h!2082 (toList!730 lt!37900))) (_1!1095 (tuple2!2169 lt!37538 lt!37537))))))))

(assert (= (and d!20101 c!12820) b!81360))

(assert (= (and d!20101 (not c!12820)) b!81361))

(assert (= (and b!81361 c!12821) b!81362))

(assert (= (and b!81361 (not c!12821)) b!81363))

(declare-fun m!83445 () Bool)

(assert (=> b!81362 m!83445))

(assert (=> b!81091 d!20101))

(declare-fun d!20103 () Bool)

(declare-fun lt!38020 () Bool)

(assert (=> d!20103 (= lt!38020 (select (content!86 (t!5156 (toList!730 lt!37546))) lt!37210))))

(declare-fun e!53096 () Bool)

(assert (=> d!20103 (= lt!38020 e!53096)))

(declare-fun res!42301 () Bool)

(assert (=> d!20103 (=> (not res!42301) (not e!53096))))

(assert (=> d!20103 (= res!42301 ((_ is Cons!1493) (t!5156 (toList!730 lt!37546))))))

(assert (=> d!20103 (= (contains!742 (t!5156 (toList!730 lt!37546)) lt!37210) lt!38020)))

(declare-fun b!81364 () Bool)

(declare-fun e!53097 () Bool)

(assert (=> b!81364 (= e!53096 e!53097)))

(declare-fun res!42300 () Bool)

(assert (=> b!81364 (=> res!42300 e!53097)))

(assert (=> b!81364 (= res!42300 (= (h!2082 (t!5156 (toList!730 lt!37546))) lt!37210))))

(declare-fun b!81365 () Bool)

(assert (=> b!81365 (= e!53097 (contains!742 (t!5156 (t!5156 (toList!730 lt!37546))) lt!37210))))

(assert (= (and d!20103 res!42301) b!81364))

(assert (= (and b!81364 (not res!42300)) b!81365))

(declare-fun m!83447 () Bool)

(assert (=> d!20103 m!83447))

(declare-fun m!83449 () Bool)

(assert (=> d!20103 m!83449))

(declare-fun m!83451 () Bool)

(assert (=> b!81365 m!83451))

(assert (=> b!80776 d!20103))

(declare-fun d!20105 () Bool)

(declare-fun lt!38021 () Bool)

(assert (=> d!20105 (= lt!38021 (select (content!86 lt!37544) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun e!53098 () Bool)

(assert (=> d!20105 (= lt!38021 e!53098)))

(declare-fun res!42303 () Bool)

(assert (=> d!20105 (=> (not res!42303) (not e!53098))))

(assert (=> d!20105 (= res!42303 ((_ is Cons!1493) lt!37544))))

(assert (=> d!20105 (= (contains!742 lt!37544 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))) lt!38021)))

(declare-fun b!81366 () Bool)

(declare-fun e!53099 () Bool)

(assert (=> b!81366 (= e!53098 e!53099)))

(declare-fun res!42302 () Bool)

(assert (=> b!81366 (=> res!42302 e!53099)))

(assert (=> b!81366 (= res!42302 (= (h!2082 lt!37544) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun b!81367 () Bool)

(assert (=> b!81367 (= e!53099 (contains!742 (t!5156 lt!37544) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(assert (= (and d!20105 res!42303) b!81366))

(assert (= (and b!81366 (not res!42302)) b!81367))

(declare-fun m!83453 () Bool)

(assert (=> d!20105 m!83453))

(declare-fun m!83455 () Bool)

(assert (=> d!20105 m!83455))

(declare-fun m!83457 () Bool)

(assert (=> b!81367 m!83457))

(assert (=> b!81007 d!20105))

(declare-fun d!20107 () Bool)

(declare-fun res!42304 () Bool)

(declare-fun e!53100 () Bool)

(assert (=> d!20107 (=> res!42304 e!53100)))

(assert (=> d!20107 (= res!42304 (and ((_ is Cons!1493) lt!37906) (= (_1!1095 (h!2082 lt!37906)) (_1!1095 lt!37210))))))

(assert (=> d!20107 (= (containsKey!142 lt!37906 (_1!1095 lt!37210)) e!53100)))

(declare-fun b!81368 () Bool)

(declare-fun e!53101 () Bool)

(assert (=> b!81368 (= e!53100 e!53101)))

(declare-fun res!42305 () Bool)

(assert (=> b!81368 (=> (not res!42305) (not e!53101))))

(assert (=> b!81368 (= res!42305 (and (or (not ((_ is Cons!1493) lt!37906)) (bvsle (_1!1095 (h!2082 lt!37906)) (_1!1095 lt!37210))) ((_ is Cons!1493) lt!37906) (bvslt (_1!1095 (h!2082 lt!37906)) (_1!1095 lt!37210))))))

(declare-fun b!81369 () Bool)

(assert (=> b!81369 (= e!53101 (containsKey!142 (t!5156 lt!37906) (_1!1095 lt!37210)))))

(assert (= (and d!20107 (not res!42304)) b!81368))

(assert (= (and b!81368 res!42305) b!81369))

(declare-fun m!83459 () Bool)

(assert (=> b!81369 m!83459))

(assert (=> b!81105 d!20107))

(declare-fun bm!7570 () Bool)

(declare-fun call!7577 () Bool)

(declare-fun lt!38027 () ListLongMap!1429)

(assert (=> bm!7570 (= call!7577 (contains!739 lt!38027 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81370 () Bool)

(declare-fun e!53102 () Bool)

(assert (=> b!81370 (= e!53102 (= (apply!80 lt!38027 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37223))))

(declare-fun b!81371 () Bool)

(declare-fun e!53112 () Bool)

(assert (=> b!81371 (= e!53112 (not call!7577))))

(declare-fun b!81372 () Bool)

(declare-fun c!12823 () Bool)

(assert (=> b!81372 (= c!12823 (and (not (= (bvand lt!37404 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!37404 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53105 () ListLongMap!1429)

(declare-fun e!53113 () ListLongMap!1429)

(assert (=> b!81372 (= e!53105 e!53113)))

(declare-fun b!81373 () Bool)

(declare-fun call!7575 () ListLongMap!1429)

(assert (=> b!81373 (= e!53113 call!7575)))

(declare-fun b!81374 () Bool)

(declare-fun e!53106 () ListLongMap!1429)

(assert (=> b!81374 (= e!53106 e!53105)))

(declare-fun c!12824 () Bool)

(assert (=> b!81374 (= c!12824 (and (not (= (bvand lt!37404 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!37404 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81375 () Bool)

(declare-fun e!53110 () Bool)

(declare-fun e!53111 () Bool)

(assert (=> b!81375 (= e!53110 e!53111)))

(declare-fun res!42307 () Bool)

(declare-fun call!7576 () Bool)

(assert (=> b!81375 (= res!42307 call!7576)))

(assert (=> b!81375 (=> (not res!42307) (not e!53111))))

(declare-fun b!81376 () Bool)

(declare-fun res!42309 () Bool)

(declare-fun e!53109 () Bool)

(assert (=> b!81376 (=> (not res!42309) (not e!53109))))

(assert (=> b!81376 (= res!42309 e!53112)))

(declare-fun c!12826 () Bool)

(assert (=> b!81376 (= c!12826 (not (= (bvand lt!37404 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81377 () Bool)

(declare-fun e!53107 () Unit!2322)

(declare-fun lt!38033 () Unit!2322)

(assert (=> b!81377 (= e!53107 lt!38033)))

(declare-fun lt!38037 () ListLongMap!1429)

(assert (=> b!81377 (= lt!38037 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37404 lt!37223 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38024 () (_ BitVec 64))

(assert (=> b!81377 (= lt!38024 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38040 () (_ BitVec 64))

(assert (=> b!81377 (= lt!38040 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38043 () Unit!2322)

(assert (=> b!81377 (= lt!38043 (addStillContains!56 lt!38037 lt!38024 lt!37223 lt!38040))))

(assert (=> b!81377 (contains!739 (+!101 lt!38037 (tuple2!2169 lt!38024 lt!37223)) lt!38040)))

(declare-fun lt!38031 () Unit!2322)

(assert (=> b!81377 (= lt!38031 lt!38043)))

(declare-fun lt!38028 () ListLongMap!1429)

(assert (=> b!81377 (= lt!38028 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37404 lt!37223 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38042 () (_ BitVec 64))

(assert (=> b!81377 (= lt!38042 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38039 () (_ BitVec 64))

(assert (=> b!81377 (= lt!38039 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38030 () Unit!2322)

(assert (=> b!81377 (= lt!38030 (addApplyDifferent!56 lt!38028 lt!38042 (minValue!2188 newMap!16) lt!38039))))

(assert (=> b!81377 (= (apply!80 (+!101 lt!38028 (tuple2!2169 lt!38042 (minValue!2188 newMap!16))) lt!38039) (apply!80 lt!38028 lt!38039))))

(declare-fun lt!38032 () Unit!2322)

(assert (=> b!81377 (= lt!38032 lt!38030)))

(declare-fun lt!38026 () ListLongMap!1429)

(assert (=> b!81377 (= lt!38026 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37404 lt!37223 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38041 () (_ BitVec 64))

(assert (=> b!81377 (= lt!38041 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38025 () (_ BitVec 64))

(assert (=> b!81377 (= lt!38025 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38035 () Unit!2322)

(assert (=> b!81377 (= lt!38035 (addApplyDifferent!56 lt!38026 lt!38041 lt!37223 lt!38025))))

(assert (=> b!81377 (= (apply!80 (+!101 lt!38026 (tuple2!2169 lt!38041 lt!37223)) lt!38025) (apply!80 lt!38026 lt!38025))))

(declare-fun lt!38022 () Unit!2322)

(assert (=> b!81377 (= lt!38022 lt!38035)))

(declare-fun lt!38034 () ListLongMap!1429)

(assert (=> b!81377 (= lt!38034 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37404 lt!37223 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38023 () (_ BitVec 64))

(assert (=> b!81377 (= lt!38023 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38036 () (_ BitVec 64))

(assert (=> b!81377 (= lt!38036 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81377 (= lt!38033 (addApplyDifferent!56 lt!38034 lt!38023 (minValue!2188 newMap!16) lt!38036))))

(assert (=> b!81377 (= (apply!80 (+!101 lt!38034 (tuple2!2169 lt!38023 (minValue!2188 newMap!16))) lt!38036) (apply!80 lt!38034 lt!38036))))

(declare-fun b!81378 () Bool)

(assert (=> b!81378 (= e!53111 (= (apply!80 lt!38027 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun bm!7571 () Bool)

(declare-fun call!7579 () ListLongMap!1429)

(declare-fun call!7578 () ListLongMap!1429)

(assert (=> bm!7571 (= call!7579 call!7578)))

(declare-fun b!81379 () Bool)

(assert (=> b!81379 (= e!53112 e!53102)))

(declare-fun res!42310 () Bool)

(assert (=> b!81379 (= res!42310 call!7577)))

(assert (=> b!81379 (=> (not res!42310) (not e!53102))))

(declare-fun b!81380 () Bool)

(declare-fun e!53103 () Bool)

(assert (=> b!81380 (= e!53103 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81381 () Bool)

(declare-fun res!42312 () Bool)

(assert (=> b!81381 (=> (not res!42312) (not e!53109))))

(declare-fun e!53108 () Bool)

(assert (=> b!81381 (= res!42312 e!53108)))

(declare-fun res!42314 () Bool)

(assert (=> b!81381 (=> res!42314 e!53108)))

(assert (=> b!81381 (= res!42314 (not e!53103))))

(declare-fun res!42308 () Bool)

(assert (=> b!81381 (=> (not res!42308) (not e!53103))))

(assert (=> b!81381 (= res!42308 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81382 () Bool)

(declare-fun call!7574 () ListLongMap!1429)

(assert (=> b!81382 (= e!53113 call!7574)))

(declare-fun b!81383 () Bool)

(assert (=> b!81383 (= e!53110 (not call!7576))))

(declare-fun b!81384 () Bool)

(declare-fun e!53114 () Bool)

(assert (=> b!81384 (= e!53114 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81385 () Bool)

(declare-fun call!7573 () ListLongMap!1429)

(assert (=> b!81385 (= e!53106 (+!101 call!7573 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun bm!7572 () Bool)

(declare-fun c!12827 () Bool)

(assert (=> bm!7572 (= call!7573 (+!101 (ite c!12827 call!7578 (ite c!12824 call!7579 call!7574)) (ite (or c!12827 c!12824) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7573 () Bool)

(assert (=> bm!7573 (= call!7578 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37404 lt!37223 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!81386 () Bool)

(declare-fun e!53104 () Bool)

(assert (=> b!81386 (= e!53104 (= (apply!80 lt!38027 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1893 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81386 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_values!2275 newMap!16))))))

(assert (=> b!81386 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun bm!7574 () Bool)

(assert (=> bm!7574 (= call!7576 (contains!739 lt!38027 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81387 () Bool)

(assert (=> b!81387 (= e!53108 e!53104)))

(declare-fun res!42311 () Bool)

(assert (=> b!81387 (=> (not res!42311) (not e!53104))))

(assert (=> b!81387 (= res!42311 (contains!739 lt!38027 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81387 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81388 () Bool)

(declare-fun Unit!2368 () Unit!2322)

(assert (=> b!81388 (= e!53107 Unit!2368)))

(declare-fun bm!7575 () Bool)

(assert (=> bm!7575 (= call!7575 call!7573)))

(declare-fun b!81389 () Bool)

(assert (=> b!81389 (= e!53109 e!53110)))

(declare-fun c!12825 () Bool)

(assert (=> b!81389 (= c!12825 (not (= (bvand lt!37404 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!20109 () Bool)

(assert (=> d!20109 e!53109))

(declare-fun res!42306 () Bool)

(assert (=> d!20109 (=> (not res!42306) (not e!53109))))

(assert (=> d!20109 (= res!42306 (or (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))))

(declare-fun lt!38029 () ListLongMap!1429)

(assert (=> d!20109 (= lt!38027 lt!38029)))

(declare-fun lt!38038 () Unit!2322)

(assert (=> d!20109 (= lt!38038 e!53107)))

(declare-fun c!12822 () Bool)

(assert (=> d!20109 (= c!12822 e!53114)))

(declare-fun res!42313 () Bool)

(assert (=> d!20109 (=> (not res!42313) (not e!53114))))

(assert (=> d!20109 (= res!42313 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!20109 (= lt!38029 e!53106)))

(assert (=> d!20109 (= c!12827 (and (not (= (bvand lt!37404 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!37404 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20109 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20109 (= (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37404 lt!37223 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38027)))

(declare-fun bm!7576 () Bool)

(assert (=> bm!7576 (= call!7574 call!7579)))

(declare-fun b!81390 () Bool)

(assert (=> b!81390 (= e!53105 call!7575)))

(assert (= (and d!20109 c!12827) b!81385))

(assert (= (and d!20109 (not c!12827)) b!81374))

(assert (= (and b!81374 c!12824) b!81390))

(assert (= (and b!81374 (not c!12824)) b!81372))

(assert (= (and b!81372 c!12823) b!81373))

(assert (= (and b!81372 (not c!12823)) b!81382))

(assert (= (or b!81373 b!81382) bm!7576))

(assert (= (or b!81390 bm!7576) bm!7571))

(assert (= (or b!81390 b!81373) bm!7575))

(assert (= (or b!81385 bm!7571) bm!7573))

(assert (= (or b!81385 bm!7575) bm!7572))

(assert (= (and d!20109 res!42313) b!81384))

(assert (= (and d!20109 c!12822) b!81377))

(assert (= (and d!20109 (not c!12822)) b!81388))

(assert (= (and d!20109 res!42306) b!81381))

(assert (= (and b!81381 res!42308) b!81380))

(assert (= (and b!81381 (not res!42314)) b!81387))

(assert (= (and b!81387 res!42311) b!81386))

(assert (= (and b!81381 res!42312) b!81376))

(assert (= (and b!81376 c!12826) b!81379))

(assert (= (and b!81376 (not c!12826)) b!81371))

(assert (= (and b!81379 res!42310) b!81370))

(assert (= (or b!81379 b!81371) bm!7570))

(assert (= (and b!81376 res!42309) b!81389))

(assert (= (and b!81389 c!12825) b!81375))

(assert (= (and b!81389 (not c!12825)) b!81383))

(assert (= (and b!81375 res!42307) b!81378))

(assert (= (or b!81375 b!81383) bm!7574))

(declare-fun b_lambda!3635 () Bool)

(assert (=> (not b_lambda!3635) (not b!81386)))

(assert (=> b!81386 t!5170))

(declare-fun b_and!4965 () Bool)

(assert (= b_and!4961 (and (=> t!5170 result!2849) b_and!4965)))

(assert (=> b!81386 t!5172))

(declare-fun b_and!4967 () Bool)

(assert (= b_and!4963 (and (=> t!5172 result!2851) b_and!4967)))

(declare-fun m!83461 () Bool)

(assert (=> b!81377 m!83461))

(assert (=> b!81377 m!83461))

(declare-fun m!83463 () Bool)

(assert (=> b!81377 m!83463))

(assert (=> b!81377 m!82381))

(declare-fun m!83465 () Bool)

(assert (=> b!81377 m!83465))

(declare-fun m!83467 () Bool)

(assert (=> b!81377 m!83467))

(declare-fun m!83469 () Bool)

(assert (=> b!81377 m!83469))

(declare-fun m!83471 () Bool)

(assert (=> b!81377 m!83471))

(declare-fun m!83473 () Bool)

(assert (=> b!81377 m!83473))

(declare-fun m!83475 () Bool)

(assert (=> b!81377 m!83475))

(assert (=> b!81377 m!83471))

(declare-fun m!83477 () Bool)

(assert (=> b!81377 m!83477))

(declare-fun m!83479 () Bool)

(assert (=> b!81377 m!83479))

(declare-fun m!83481 () Bool)

(assert (=> b!81377 m!83481))

(declare-fun m!83483 () Bool)

(assert (=> b!81377 m!83483))

(assert (=> b!81377 m!83469))

(declare-fun m!83485 () Bool)

(assert (=> b!81377 m!83485))

(declare-fun m!83487 () Bool)

(assert (=> b!81377 m!83487))

(declare-fun m!83489 () Bool)

(assert (=> b!81377 m!83489))

(assert (=> b!81377 m!83473))

(declare-fun m!83491 () Bool)

(assert (=> b!81377 m!83491))

(assert (=> b!81380 m!82381))

(assert (=> b!81380 m!82381))

(assert (=> b!81380 m!82583))

(declare-fun m!83493 () Bool)

(assert (=> b!81370 m!83493))

(declare-fun m!83495 () Bool)

(assert (=> bm!7574 m!83495))

(declare-fun m!83497 () Bool)

(assert (=> b!81385 m!83497))

(assert (=> b!81386 m!82381))

(assert (=> b!81386 m!82743))

(assert (=> b!81386 m!82809))

(assert (=> b!81386 m!82743))

(assert (=> b!81386 m!82811))

(assert (=> b!81386 m!82809))

(assert (=> b!81386 m!82381))

(declare-fun m!83499 () Bool)

(assert (=> b!81386 m!83499))

(declare-fun m!83501 () Bool)

(assert (=> b!81378 m!83501))

(assert (=> b!81384 m!82381))

(assert (=> b!81384 m!82381))

(assert (=> b!81384 m!82583))

(assert (=> b!81387 m!82381))

(assert (=> b!81387 m!82381))

(declare-fun m!83503 () Bool)

(assert (=> b!81387 m!83503))

(assert (=> bm!7573 m!83487))

(declare-fun m!83505 () Bool)

(assert (=> bm!7572 m!83505))

(assert (=> d!20109 m!82223))

(declare-fun m!83507 () Bool)

(assert (=> bm!7570 m!83507))

(assert (=> d!19815 d!20109))

(declare-fun d!20111 () Bool)

(declare-fun e!53115 () Bool)

(assert (=> d!20111 e!53115))

(declare-fun res!42316 () Bool)

(assert (=> d!20111 (=> (not res!42316) (not e!53115))))

(declare-fun lt!38047 () ListLongMap!1429)

(assert (=> d!20111 (= res!42316 (contains!739 lt!38047 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223))))))

(declare-fun lt!38045 () List!1497)

(assert (=> d!20111 (= lt!38047 (ListLongMap!1430 lt!38045))))

(declare-fun lt!38044 () Unit!2322)

(declare-fun lt!38046 () Unit!2322)

(assert (=> d!20111 (= lt!38044 lt!38046)))

(assert (=> d!20111 (= (getValueByKey!139 lt!38045 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223))) (Some!144 (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223))))))

(assert (=> d!20111 (= lt!38046 (lemmaContainsTupThenGetReturnValue!56 lt!38045 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223))))))

(assert (=> d!20111 (= lt!38045 (insertStrictlySorted!59 (toList!730 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223))))))

(assert (=> d!20111 (= (+!101 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223)) lt!38047)))

(declare-fun b!81391 () Bool)

(declare-fun res!42315 () Bool)

(assert (=> b!81391 (=> (not res!42315) (not e!53115))))

(assert (=> b!81391 (= res!42315 (= (getValueByKey!139 (toList!730 lt!38047) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223))) (Some!144 (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223)))))))

(declare-fun b!81392 () Bool)

(assert (=> b!81392 (= e!53115 (contains!742 (toList!730 lt!38047) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223)))))

(assert (= (and d!20111 res!42316) b!81391))

(assert (= (and b!81391 res!42315) b!81392))

(declare-fun m!83509 () Bool)

(assert (=> d!20111 m!83509))

(declare-fun m!83511 () Bool)

(assert (=> d!20111 m!83511))

(declare-fun m!83513 () Bool)

(assert (=> d!20111 m!83513))

(declare-fun m!83515 () Bool)

(assert (=> d!20111 m!83515))

(declare-fun m!83517 () Bool)

(assert (=> b!81391 m!83517))

(declare-fun m!83519 () Bool)

(assert (=> b!81392 m!83519))

(assert (=> d!19815 d!20111))

(assert (=> d!19815 d!19879))

(declare-fun d!20113 () Bool)

(assert (=> d!20113 (= (+!101 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37404 lt!37223 (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(assert (=> d!20113 true))

(declare-fun _$7!68 () Unit!2322)

(assert (=> d!20113 (= (choose!479 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) lt!37404 (zeroValue!2188 newMap!16) lt!37223 (minValue!2188 newMap!16) (defaultEntry!2292 newMap!16)) _$7!68)))

(declare-fun bs!3449 () Bool)

(assert (= bs!3449 d!20113))

(assert (=> bs!3449 m!81949))

(assert (=> bs!3449 m!81949))

(assert (=> bs!3449 m!82497))

(assert (=> bs!3449 m!82495))

(assert (=> d!19815 d!20113))

(assert (=> d!19815 d!20023))

(declare-fun d!20115 () Bool)

(declare-fun res!42317 () Bool)

(declare-fun e!53116 () Bool)

(assert (=> d!20115 (=> res!42317 e!53116)))

(assert (=> d!20115 (= res!42317 (or ((_ is Nil!1494) lt!37655) ((_ is Nil!1494) (t!5156 lt!37655))))))

(assert (=> d!20115 (= (isStrictlySorted!283 lt!37655) e!53116)))

(declare-fun b!81393 () Bool)

(declare-fun e!53117 () Bool)

(assert (=> b!81393 (= e!53116 e!53117)))

(declare-fun res!42318 () Bool)

(assert (=> b!81393 (=> (not res!42318) (not e!53117))))

(assert (=> b!81393 (= res!42318 (bvslt (_1!1095 (h!2082 lt!37655)) (_1!1095 (h!2082 (t!5156 lt!37655)))))))

(declare-fun b!81394 () Bool)

(assert (=> b!81394 (= e!53117 (isStrictlySorted!283 (t!5156 lt!37655)))))

(assert (= (and d!20115 (not res!42317)) b!81393))

(assert (= (and b!81393 res!42318) b!81394))

(declare-fun m!83521 () Bool)

(assert (=> b!81394 m!83521))

(assert (=> d!19813 d!20115))

(assert (=> d!19813 d!20061))

(declare-fun b!81395 () Bool)

(declare-fun e!53118 () (_ BitVec 32))

(declare-fun call!7580 () (_ BitVec 32))

(assert (=> b!81395 (= e!53118 (bvadd #b00000000000000000000000000000001 call!7580))))

(declare-fun b!81396 () Bool)

(assert (=> b!81396 (= e!53118 call!7580)))

(declare-fun bm!7577 () Bool)

(assert (=> bm!7577 (= call!7580 (arrayCountValidKeys!0 (_keys!3956 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2134 (_keys!3956 newMap!16))))))

(declare-fun d!20117 () Bool)

(declare-fun lt!38048 () (_ BitVec 32))

(assert (=> d!20117 (and (bvsge lt!38048 #b00000000000000000000000000000000) (bvsle lt!38048 (bvsub (size!2134 (_keys!3956 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!53119 () (_ BitVec 32))

(assert (=> d!20117 (= lt!38048 e!53119)))

(declare-fun c!12828 () Bool)

(assert (=> d!20117 (= c!12828 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!20117 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2134 (_keys!3956 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2134 (_keys!3956 newMap!16)) (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!20117 (= (arrayCountValidKeys!0 (_keys!3956 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2134 (_keys!3956 newMap!16))) lt!38048)))

(declare-fun b!81397 () Bool)

(assert (=> b!81397 (= e!53119 #b00000000000000000000000000000000)))

(declare-fun b!81398 () Bool)

(assert (=> b!81398 (= e!53119 e!53118)))

(declare-fun c!12829 () Bool)

(assert (=> b!81398 (= c!12829 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!20117 c!12828) b!81397))

(assert (= (and d!20117 (not c!12828)) b!81398))

(assert (= (and b!81398 c!12829) b!81395))

(assert (= (and b!81398 (not c!12829)) b!81396))

(assert (= (or b!81395 b!81396) bm!7577))

(declare-fun m!83523 () Bool)

(assert (=> bm!7577 m!83523))

(declare-fun m!83525 () Bool)

(assert (=> b!81398 m!83525))

(assert (=> b!81398 m!83525))

(declare-fun m!83527 () Bool)

(assert (=> b!81398 m!83527))

(assert (=> bm!7518 d!20117))

(declare-fun d!20119 () Bool)

(declare-fun res!42319 () Bool)

(declare-fun e!53120 () Bool)

(assert (=> d!20119 (=> res!42319 e!53120)))

(assert (=> d!20119 (= res!42319 (and ((_ is Cons!1493) (toList!730 lt!37513)) (= (_1!1095 (h!2082 (toList!730 lt!37513))) (_1!1095 lt!37212))))))

(assert (=> d!20119 (= (containsKey!142 (toList!730 lt!37513) (_1!1095 lt!37212)) e!53120)))

(declare-fun b!81399 () Bool)

(declare-fun e!53121 () Bool)

(assert (=> b!81399 (= e!53120 e!53121)))

(declare-fun res!42320 () Bool)

(assert (=> b!81399 (=> (not res!42320) (not e!53121))))

(assert (=> b!81399 (= res!42320 (and (or (not ((_ is Cons!1493) (toList!730 lt!37513))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37513))) (_1!1095 lt!37212))) ((_ is Cons!1493) (toList!730 lt!37513)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37513))) (_1!1095 lt!37212))))))

(declare-fun b!81400 () Bool)

(assert (=> b!81400 (= e!53121 (containsKey!142 (t!5156 (toList!730 lt!37513)) (_1!1095 lt!37212)))))

(assert (= (and d!20119 (not res!42319)) b!81399))

(assert (= (and b!81399 res!42320) b!81400))

(declare-fun m!83529 () Bool)

(assert (=> b!81400 m!83529))

(assert (=> d!19887 d!20119))

(declare-fun d!20121 () Bool)

(declare-fun e!53122 () Bool)

(assert (=> d!20121 e!53122))

(declare-fun res!42321 () Bool)

(assert (=> d!20121 (=> res!42321 e!53122)))

(declare-fun lt!38050 () Bool)

(assert (=> d!20121 (= res!42321 (not lt!38050))))

(declare-fun lt!38049 () Bool)

(assert (=> d!20121 (= lt!38050 lt!38049)))

(declare-fun lt!38051 () Unit!2322)

(declare-fun e!53123 () Unit!2322)

(assert (=> d!20121 (= lt!38051 e!53123)))

(declare-fun c!12830 () Bool)

(assert (=> d!20121 (= c!12830 lt!38049)))

(assert (=> d!20121 (= lt!38049 (containsKey!142 (toList!730 lt!37616) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20121 (= (contains!739 lt!37616 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38050)))

(declare-fun b!81401 () Bool)

(declare-fun lt!38052 () Unit!2322)

(assert (=> b!81401 (= e!53123 lt!38052)))

(assert (=> b!81401 (= lt!38052 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37616) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> b!81401 (isDefined!91 (getValueByKey!139 (toList!730 lt!37616) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!81402 () Bool)

(declare-fun Unit!2369 () Unit!2322)

(assert (=> b!81402 (= e!53123 Unit!2369)))

(declare-fun b!81403 () Bool)

(assert (=> b!81403 (= e!53122 (isDefined!91 (getValueByKey!139 (toList!730 lt!37616) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (= (and d!20121 c!12830) b!81401))

(assert (= (and d!20121 (not c!12830)) b!81402))

(assert (= (and d!20121 (not res!42321)) b!81403))

(declare-fun m!83531 () Bool)

(assert (=> d!20121 m!83531))

(declare-fun m!83533 () Bool)

(assert (=> b!81401 m!83533))

(assert (=> b!81401 m!82345))

(assert (=> b!81401 m!82345))

(declare-fun m!83535 () Bool)

(assert (=> b!81401 m!83535))

(assert (=> b!81403 m!82345))

(assert (=> b!81403 m!82345))

(assert (=> b!81403 m!83535))

(assert (=> d!19771 d!20121))

(declare-fun b!81407 () Bool)

(declare-fun e!53125 () Option!145)

(assert (=> b!81407 (= e!53125 None!143)))

(declare-fun b!81406 () Bool)

(assert (=> b!81406 (= e!53125 (getValueByKey!139 (t!5156 lt!37614) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun d!20123 () Bool)

(declare-fun c!12831 () Bool)

(assert (=> d!20123 (= c!12831 (and ((_ is Cons!1493) lt!37614) (= (_1!1095 (h!2082 lt!37614)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun e!53124 () Option!145)

(assert (=> d!20123 (= (getValueByKey!139 lt!37614 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) e!53124)))

(declare-fun b!81404 () Bool)

(assert (=> b!81404 (= e!53124 (Some!144 (_2!1095 (h!2082 lt!37614))))))

(declare-fun b!81405 () Bool)

(assert (=> b!81405 (= e!53124 e!53125)))

(declare-fun c!12832 () Bool)

(assert (=> b!81405 (= c!12832 (and ((_ is Cons!1493) lt!37614) (not (= (_1!1095 (h!2082 lt!37614)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (= (and d!20123 c!12831) b!81404))

(assert (= (and d!20123 (not c!12831)) b!81405))

(assert (= (and b!81405 c!12832) b!81406))

(assert (= (and b!81405 (not c!12832)) b!81407))

(declare-fun m!83537 () Bool)

(assert (=> b!81406 m!83537))

(assert (=> d!19771 d!20123))

(declare-fun d!20125 () Bool)

(assert (=> d!20125 (= (getValueByKey!139 lt!37614 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun lt!38053 () Unit!2322)

(assert (=> d!20125 (= lt!38053 (choose!478 lt!37614 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun e!53126 () Bool)

(assert (=> d!20125 e!53126))

(declare-fun res!42322 () Bool)

(assert (=> d!20125 (=> (not res!42322) (not e!53126))))

(assert (=> d!20125 (= res!42322 (isStrictlySorted!283 lt!37614))))

(assert (=> d!20125 (= (lemmaContainsTupThenGetReturnValue!56 lt!37614 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38053)))

(declare-fun b!81408 () Bool)

(declare-fun res!42323 () Bool)

(assert (=> b!81408 (=> (not res!42323) (not e!53126))))

(assert (=> b!81408 (= res!42323 (containsKey!142 lt!37614 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!81409 () Bool)

(assert (=> b!81409 (= e!53126 (contains!742 lt!37614 (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (= (and d!20125 res!42322) b!81408))

(assert (= (and b!81408 res!42323) b!81409))

(assert (=> d!20125 m!82339))

(declare-fun m!83539 () Bool)

(assert (=> d!20125 m!83539))

(declare-fun m!83541 () Bool)

(assert (=> d!20125 m!83541))

(declare-fun m!83543 () Bool)

(assert (=> b!81408 m!83543))

(declare-fun m!83545 () Bool)

(assert (=> b!81409 m!83545))

(assert (=> d!19771 d!20125))

(declare-fun bm!7578 () Bool)

(declare-fun call!7582 () List!1497)

(declare-fun call!7583 () List!1497)

(assert (=> bm!7578 (= call!7582 call!7583)))

(declare-fun b!81410 () Bool)

(declare-fun e!53127 () Bool)

(declare-fun lt!38054 () List!1497)

(assert (=> b!81410 (= e!53127 (contains!742 lt!38054 (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!81411 () Bool)

(declare-fun e!53128 () List!1497)

(declare-fun e!53131 () List!1497)

(assert (=> b!81411 (= e!53128 e!53131)))

(declare-fun c!12836 () Bool)

(assert (=> b!81411 (= c!12836 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun bm!7579 () Bool)

(declare-fun call!7581 () List!1497)

(assert (=> bm!7579 (= call!7581 call!7582)))

(declare-fun d!20127 () Bool)

(assert (=> d!20127 e!53127))

(declare-fun res!42324 () Bool)

(assert (=> d!20127 (=> (not res!42324) (not e!53127))))

(assert (=> d!20127 (= res!42324 (isStrictlySorted!283 lt!38054))))

(assert (=> d!20127 (= lt!38054 e!53128)))

(declare-fun c!12833 () Bool)

(assert (=> d!20127 (= c!12833 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (bvslt (_1!1095 (h!2082 (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> d!20127 (isStrictlySorted!283 (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!20127 (= (insertStrictlySorted!59 (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38054)))

(declare-fun e!53129 () List!1497)

(declare-fun bm!7580 () Bool)

(assert (=> bm!7580 (= call!7583 ($colon$colon!69 e!53129 (ite c!12833 (h!2082 (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(declare-fun c!12835 () Bool)

(assert (=> bm!7580 (= c!12835 c!12833)))

(declare-fun b!81412 () Bool)

(declare-fun e!53130 () List!1497)

(assert (=> b!81412 (= e!53130 call!7581)))

(declare-fun b!81413 () Bool)

(declare-fun res!42325 () Bool)

(assert (=> b!81413 (=> (not res!42325) (not e!53127))))

(assert (=> b!81413 (= res!42325 (containsKey!142 lt!38054 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!81414 () Bool)

(declare-fun c!12834 () Bool)

(assert (=> b!81414 (= c!12834 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (bvsgt (_1!1095 (h!2082 (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> b!81414 (= e!53131 e!53130)))

(declare-fun b!81415 () Bool)

(assert (=> b!81415 (= e!53129 (insertStrictlySorted!59 (t!5156 (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!81416 () Bool)

(assert (=> b!81416 (= e!53131 call!7582)))

(declare-fun b!81417 () Bool)

(assert (=> b!81417 (= e!53130 call!7581)))

(declare-fun b!81418 () Bool)

(assert (=> b!81418 (= e!53129 (ite c!12836 (t!5156 (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (ite c!12834 (Cons!1493 (h!2082 (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (t!5156 (toList!730 (+!101 lt!37215 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))) Nil!1494)))))

(declare-fun b!81419 () Bool)

(assert (=> b!81419 (= e!53128 call!7583)))

(assert (= (and d!20127 c!12833) b!81419))

(assert (= (and d!20127 (not c!12833)) b!81411))

(assert (= (and b!81411 c!12836) b!81416))

(assert (= (and b!81411 (not c!12836)) b!81414))

(assert (= (and b!81414 c!12834) b!81417))

(assert (= (and b!81414 (not c!12834)) b!81412))

(assert (= (or b!81417 b!81412) bm!7579))

(assert (= (or b!81416 bm!7579) bm!7578))

(assert (= (or b!81419 bm!7578) bm!7580))

(assert (= (and bm!7580 c!12835) b!81415))

(assert (= (and bm!7580 (not c!12835)) b!81418))

(assert (= (and d!20127 res!42324) b!81413))

(assert (= (and b!81413 res!42325) b!81410))

(declare-fun m!83547 () Bool)

(assert (=> b!81415 m!83547))

(declare-fun m!83549 () Bool)

(assert (=> bm!7580 m!83549))

(declare-fun m!83551 () Bool)

(assert (=> b!81410 m!83551))

(declare-fun m!83553 () Bool)

(assert (=> d!20127 m!83553))

(declare-fun m!83555 () Bool)

(assert (=> d!20127 m!83555))

(declare-fun m!83557 () Bool)

(assert (=> b!81413 m!83557))

(assert (=> d!19771 d!20127))

(declare-fun b!81423 () Bool)

(declare-fun e!53133 () Option!145)

(assert (=> b!81423 (= e!53133 None!143)))

(declare-fun b!81422 () Bool)

(assert (=> b!81422 (= e!53133 (getValueByKey!139 (t!5156 (t!5156 (toList!730 lt!37517))) (_1!1095 lt!37209)))))

(declare-fun d!20129 () Bool)

(declare-fun c!12837 () Bool)

(assert (=> d!20129 (= c!12837 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37517))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37517)))) (_1!1095 lt!37209))))))

(declare-fun e!53132 () Option!145)

(assert (=> d!20129 (= (getValueByKey!139 (t!5156 (toList!730 lt!37517)) (_1!1095 lt!37209)) e!53132)))

(declare-fun b!81420 () Bool)

(assert (=> b!81420 (= e!53132 (Some!144 (_2!1095 (h!2082 (t!5156 (toList!730 lt!37517))))))))

(declare-fun b!81421 () Bool)

(assert (=> b!81421 (= e!53132 e!53133)))

(declare-fun c!12838 () Bool)

(assert (=> b!81421 (= c!12838 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37517))) (not (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37517)))) (_1!1095 lt!37209)))))))

(assert (= (and d!20129 c!12837) b!81420))

(assert (= (and d!20129 (not c!12837)) b!81421))

(assert (= (and b!81421 c!12838) b!81422))

(assert (= (and b!81421 (not c!12838)) b!81423))

(declare-fun m!83559 () Bool)

(assert (=> b!81422 m!83559))

(assert (=> b!80787 d!20129))

(declare-fun d!20131 () Bool)

(declare-fun res!42326 () Bool)

(declare-fun e!53134 () Bool)

(assert (=> d!20131 (=> res!42326 e!53134)))

(assert (=> d!20131 (= res!42326 (and ((_ is Cons!1493) lt!37515) (= (_1!1095 (h!2082 lt!37515)) (_1!1095 lt!37209))))))

(assert (=> d!20131 (= (containsKey!142 lt!37515 (_1!1095 lt!37209)) e!53134)))

(declare-fun b!81424 () Bool)

(declare-fun e!53135 () Bool)

(assert (=> b!81424 (= e!53134 e!53135)))

(declare-fun res!42327 () Bool)

(assert (=> b!81424 (=> (not res!42327) (not e!53135))))

(assert (=> b!81424 (= res!42327 (and (or (not ((_ is Cons!1493) lt!37515)) (bvsle (_1!1095 (h!2082 lt!37515)) (_1!1095 lt!37209))) ((_ is Cons!1493) lt!37515) (bvslt (_1!1095 (h!2082 lt!37515)) (_1!1095 lt!37209))))))

(declare-fun b!81425 () Bool)

(assert (=> b!81425 (= e!53135 (containsKey!142 (t!5156 lt!37515) (_1!1095 lt!37209)))))

(assert (= (and d!20131 (not res!42326)) b!81424))

(assert (= (and b!81424 res!42327) b!81425))

(declare-fun m!83561 () Bool)

(assert (=> b!81425 m!83561))

(assert (=> b!80691 d!20131))

(declare-fun d!20133 () Bool)

(declare-fun e!53136 () Bool)

(assert (=> d!20133 e!53136))

(declare-fun res!42329 () Bool)

(assert (=> d!20133 (=> (not res!42329) (not e!53136))))

(declare-fun lt!38058 () ListLongMap!1429)

(assert (=> d!20133 (= res!42329 (contains!739 lt!38058 (_1!1095 (ite (or c!12693 c!12690) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(declare-fun lt!38056 () List!1497)

(assert (=> d!20133 (= lt!38058 (ListLongMap!1430 lt!38056))))

(declare-fun lt!38055 () Unit!2322)

(declare-fun lt!38057 () Unit!2322)

(assert (=> d!20133 (= lt!38055 lt!38057)))

(assert (=> d!20133 (= (getValueByKey!139 lt!38056 (_1!1095 (ite (or c!12693 c!12690) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))) (Some!144 (_2!1095 (ite (or c!12693 c!12690) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20133 (= lt!38057 (lemmaContainsTupThenGetReturnValue!56 lt!38056 (_1!1095 (ite (or c!12693 c!12690) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (_2!1095 (ite (or c!12693 c!12690) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20133 (= lt!38056 (insertStrictlySorted!59 (toList!730 (ite c!12693 call!7528 (ite c!12690 call!7529 call!7524))) (_1!1095 (ite (or c!12693 c!12690) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (_2!1095 (ite (or c!12693 c!12690) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20133 (= (+!101 (ite c!12693 call!7528 (ite c!12690 call!7529 call!7524)) (ite (or c!12693 c!12690) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) lt!38058)))

(declare-fun b!81426 () Bool)

(declare-fun res!42328 () Bool)

(assert (=> b!81426 (=> (not res!42328) (not e!53136))))

(assert (=> b!81426 (= res!42328 (= (getValueByKey!139 (toList!730 lt!38058) (_1!1095 (ite (or c!12693 c!12690) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))) (Some!144 (_2!1095 (ite (or c!12693 c!12690) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))))

(declare-fun b!81427 () Bool)

(assert (=> b!81427 (= e!53136 (contains!742 (toList!730 lt!38058) (ite (or c!12693 c!12690) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (= (and d!20133 res!42329) b!81426))

(assert (= (and b!81426 res!42328) b!81427))

(declare-fun m!83563 () Bool)

(assert (=> d!20133 m!83563))

(declare-fun m!83565 () Bool)

(assert (=> d!20133 m!83565))

(declare-fun m!83567 () Bool)

(assert (=> d!20133 m!83567))

(declare-fun m!83569 () Bool)

(assert (=> d!20133 m!83569))

(declare-fun m!83571 () Bool)

(assert (=> b!81426 m!83571))

(declare-fun m!83573 () Bool)

(assert (=> b!81427 m!83573))

(assert (=> bm!7522 d!20133))

(declare-fun d!20135 () Bool)

(assert (=> d!20135 (= (get!1192 (getValueByKey!139 (toList!730 lt!37475) lt!37474)) (v!2616 (getValueByKey!139 (toList!730 lt!37475) lt!37474)))))

(assert (=> d!19845 d!20135))

(declare-fun b!81431 () Bool)

(declare-fun e!53138 () Option!145)

(assert (=> b!81431 (= e!53138 None!143)))

(declare-fun b!81430 () Bool)

(assert (=> b!81430 (= e!53138 (getValueByKey!139 (t!5156 (toList!730 lt!37475)) lt!37474))))

(declare-fun d!20137 () Bool)

(declare-fun c!12839 () Bool)

(assert (=> d!20137 (= c!12839 (and ((_ is Cons!1493) (toList!730 lt!37475)) (= (_1!1095 (h!2082 (toList!730 lt!37475))) lt!37474)))))

(declare-fun e!53137 () Option!145)

(assert (=> d!20137 (= (getValueByKey!139 (toList!730 lt!37475) lt!37474) e!53137)))

(declare-fun b!81428 () Bool)

(assert (=> b!81428 (= e!53137 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37475)))))))

(declare-fun b!81429 () Bool)

(assert (=> b!81429 (= e!53137 e!53138)))

(declare-fun c!12840 () Bool)

(assert (=> b!81429 (= c!12840 (and ((_ is Cons!1493) (toList!730 lt!37475)) (not (= (_1!1095 (h!2082 (toList!730 lt!37475))) lt!37474))))))

(assert (= (and d!20137 c!12839) b!81428))

(assert (= (and d!20137 (not c!12839)) b!81429))

(assert (= (and b!81429 c!12840) b!81430))

(assert (= (and b!81429 (not c!12840)) b!81431))

(declare-fun m!83575 () Bool)

(assert (=> b!81430 m!83575))

(assert (=> d!19845 d!20137))

(declare-fun d!20139 () Bool)

(declare-fun e!53139 () Bool)

(assert (=> d!20139 e!53139))

(declare-fun res!42330 () Bool)

(assert (=> d!20139 (=> res!42330 e!53139)))

(declare-fun lt!38060 () Bool)

(assert (=> d!20139 (= res!42330 (not lt!38060))))

(declare-fun lt!38059 () Bool)

(assert (=> d!20139 (= lt!38060 lt!38059)))

(declare-fun lt!38061 () Unit!2322)

(declare-fun e!53140 () Unit!2322)

(assert (=> d!20139 (= lt!38061 e!53140)))

(declare-fun c!12841 () Bool)

(assert (=> d!20139 (= c!12841 lt!38059)))

(assert (=> d!20139 (= lt!38059 (containsKey!142 (toList!730 lt!37606) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20139 (= (contains!739 lt!37606 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38060)))

(declare-fun b!81432 () Bool)

(declare-fun lt!38062 () Unit!2322)

(assert (=> b!81432 (= e!53140 lt!38062)))

(assert (=> b!81432 (= lt!38062 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37606) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81432 (isDefined!91 (getValueByKey!139 (toList!730 lt!37606) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81433 () Bool)

(declare-fun Unit!2370 () Unit!2322)

(assert (=> b!81433 (= e!53140 Unit!2370)))

(declare-fun b!81434 () Bool)

(assert (=> b!81434 (= e!53139 (isDefined!91 (getValueByKey!139 (toList!730 lt!37606) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20139 c!12841) b!81432))

(assert (= (and d!20139 (not c!12841)) b!81433))

(assert (= (and d!20139 (not res!42330)) b!81434))

(declare-fun m!83577 () Bool)

(assert (=> d!20139 m!83577))

(declare-fun m!83579 () Bool)

(assert (=> b!81432 m!83579))

(declare-fun m!83581 () Bool)

(assert (=> b!81432 m!83581))

(assert (=> b!81432 m!83581))

(declare-fun m!83583 () Bool)

(assert (=> b!81432 m!83583))

(assert (=> b!81434 m!83581))

(assert (=> b!81434 m!83581))

(assert (=> b!81434 m!83583))

(assert (=> d!19763 d!20139))

(assert (=> d!19763 d!19727))

(declare-fun d!20141 () Bool)

(assert (=> d!20141 (= ($colon$colon!69 e!52874 (ite c!12709 (h!2082 (toList!730 lt!37222)) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212)))) (Cons!1493 (ite c!12709 (h!2082 (toList!730 lt!37222)) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))) e!52874))))

(assert (=> bm!7536 d!20141))

(declare-fun d!20143 () Bool)

(declare-fun e!53141 () Bool)

(assert (=> d!20143 e!53141))

(declare-fun res!42331 () Bool)

(assert (=> d!20143 (=> res!42331 e!53141)))

(declare-fun lt!38064 () Bool)

(assert (=> d!20143 (= res!42331 (not lt!38064))))

(declare-fun lt!38063 () Bool)

(assert (=> d!20143 (= lt!38064 lt!38063)))

(declare-fun lt!38065 () Unit!2322)

(declare-fun e!53142 () Unit!2322)

(assert (=> d!20143 (= lt!38065 e!53142)))

(declare-fun c!12842 () Bool)

(assert (=> d!20143 (= c!12842 lt!38063)))

(assert (=> d!20143 (= lt!38063 (containsKey!142 (toList!730 (getCurrentListMap!426 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))

(assert (=> d!20143 (= (contains!739 (getCurrentListMap!426 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))) lt!38064)))

(declare-fun b!81435 () Bool)

(declare-fun lt!38066 () Unit!2322)

(assert (=> b!81435 (= e!53142 lt!38066)))

(assert (=> b!81435 (= lt!38066 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 (getCurrentListMap!426 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))

(assert (=> b!81435 (isDefined!91 (getValueByKey!139 (toList!730 (getCurrentListMap!426 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))

(declare-fun b!81436 () Bool)

(declare-fun Unit!2371 () Unit!2322)

(assert (=> b!81436 (= e!53142 Unit!2371)))

(declare-fun b!81437 () Bool)

(assert (=> b!81437 (= e!53141 (isDefined!91 (getValueByKey!139 (toList!730 (getCurrentListMap!426 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405)))))))

(assert (= (and d!20143 c!12842) b!81435))

(assert (= (and d!20143 (not c!12842)) b!81436))

(assert (= (and d!20143 (not res!42331)) b!81437))

(assert (=> d!20143 m!81971))

(declare-fun m!83585 () Bool)

(assert (=> d!20143 m!83585))

(assert (=> b!81435 m!81971))

(declare-fun m!83587 () Bool)

(assert (=> b!81435 m!83587))

(assert (=> b!81435 m!81971))

(declare-fun m!83589 () Bool)

(assert (=> b!81435 m!83589))

(assert (=> b!81435 m!83589))

(declare-fun m!83591 () Bool)

(assert (=> b!81435 m!83591))

(assert (=> b!81437 m!81971))

(assert (=> b!81437 m!83589))

(assert (=> b!81437 m!83589))

(assert (=> b!81437 m!83591))

(assert (=> b!80915 d!20143))

(declare-fun bm!7581 () Bool)

(declare-fun call!7588 () Bool)

(declare-fun lt!38072 () ListLongMap!1429)

(assert (=> bm!7581 (= call!7588 (contains!739 lt!38072 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81438 () Bool)

(declare-fun e!53143 () Bool)

(assert (=> b!81438 (= e!53143 (= (apply!80 lt!38072 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!81439 () Bool)

(declare-fun e!53153 () Bool)

(assert (=> b!81439 (= e!53153 (not call!7588))))

(declare-fun b!81440 () Bool)

(declare-fun c!12844 () Bool)

(assert (=> b!81440 (= c!12844 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53146 () ListLongMap!1429)

(declare-fun e!53154 () ListLongMap!1429)

(assert (=> b!81440 (= e!53146 e!53154)))

(declare-fun b!81441 () Bool)

(declare-fun call!7586 () ListLongMap!1429)

(assert (=> b!81441 (= e!53154 call!7586)))

(declare-fun b!81442 () Bool)

(declare-fun e!53147 () ListLongMap!1429)

(assert (=> b!81442 (= e!53147 e!53146)))

(declare-fun c!12845 () Bool)

(assert (=> b!81442 (= c!12845 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81443 () Bool)

(declare-fun e!53151 () Bool)

(declare-fun e!53152 () Bool)

(assert (=> b!81443 (= e!53151 e!53152)))

(declare-fun res!42333 () Bool)

(declare-fun call!7587 () Bool)

(assert (=> b!81443 (= res!42333 call!7587)))

(assert (=> b!81443 (=> (not res!42333) (not e!53152))))

(declare-fun b!81444 () Bool)

(declare-fun res!42335 () Bool)

(declare-fun e!53150 () Bool)

(assert (=> b!81444 (=> (not res!42335) (not e!53150))))

(assert (=> b!81444 (= res!42335 e!53153)))

(declare-fun c!12847 () Bool)

(assert (=> b!81444 (= c!12847 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81445 () Bool)

(declare-fun e!53148 () Unit!2322)

(declare-fun lt!38078 () Unit!2322)

(assert (=> b!81445 (= e!53148 lt!38078)))

(declare-fun lt!38082 () ListLongMap!1429)

(assert (=> b!81445 (= lt!38082 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38069 () (_ BitVec 64))

(assert (=> b!81445 (= lt!38069 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38085 () (_ BitVec 64))

(assert (=> b!81445 (= lt!38085 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38088 () Unit!2322)

(assert (=> b!81445 (= lt!38088 (addStillContains!56 lt!38082 lt!38069 (zeroValue!2188 newMap!16) lt!38085))))

(assert (=> b!81445 (contains!739 (+!101 lt!38082 (tuple2!2169 lt!38069 (zeroValue!2188 newMap!16))) lt!38085)))

(declare-fun lt!38076 () Unit!2322)

(assert (=> b!81445 (= lt!38076 lt!38088)))

(declare-fun lt!38073 () ListLongMap!1429)

(assert (=> b!81445 (= lt!38073 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38087 () (_ BitVec 64))

(assert (=> b!81445 (= lt!38087 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38084 () (_ BitVec 64))

(assert (=> b!81445 (= lt!38084 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38075 () Unit!2322)

(assert (=> b!81445 (= lt!38075 (addApplyDifferent!56 lt!38073 lt!38087 (minValue!2188 newMap!16) lt!38084))))

(assert (=> b!81445 (= (apply!80 (+!101 lt!38073 (tuple2!2169 lt!38087 (minValue!2188 newMap!16))) lt!38084) (apply!80 lt!38073 lt!38084))))

(declare-fun lt!38077 () Unit!2322)

(assert (=> b!81445 (= lt!38077 lt!38075)))

(declare-fun lt!38071 () ListLongMap!1429)

(assert (=> b!81445 (= lt!38071 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38086 () (_ BitVec 64))

(assert (=> b!81445 (= lt!38086 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38070 () (_ BitVec 64))

(assert (=> b!81445 (= lt!38070 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38080 () Unit!2322)

(assert (=> b!81445 (= lt!38080 (addApplyDifferent!56 lt!38071 lt!38086 (zeroValue!2188 newMap!16) lt!38070))))

(assert (=> b!81445 (= (apply!80 (+!101 lt!38071 (tuple2!2169 lt!38086 (zeroValue!2188 newMap!16))) lt!38070) (apply!80 lt!38071 lt!38070))))

(declare-fun lt!38067 () Unit!2322)

(assert (=> b!81445 (= lt!38067 lt!38080)))

(declare-fun lt!38079 () ListLongMap!1429)

(assert (=> b!81445 (= lt!38079 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38068 () (_ BitVec 64))

(assert (=> b!81445 (= lt!38068 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38081 () (_ BitVec 64))

(assert (=> b!81445 (= lt!38081 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81445 (= lt!38078 (addApplyDifferent!56 lt!38079 lt!38068 (minValue!2188 newMap!16) lt!38081))))

(assert (=> b!81445 (= (apply!80 (+!101 lt!38079 (tuple2!2169 lt!38068 (minValue!2188 newMap!16))) lt!38081) (apply!80 lt!38079 lt!38081))))

(declare-fun b!81446 () Bool)

(assert (=> b!81446 (= e!53152 (= (apply!80 lt!38072 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun bm!7582 () Bool)

(declare-fun call!7590 () ListLongMap!1429)

(declare-fun call!7589 () ListLongMap!1429)

(assert (=> bm!7582 (= call!7590 call!7589)))

(declare-fun b!81447 () Bool)

(assert (=> b!81447 (= e!53153 e!53143)))

(declare-fun res!42336 () Bool)

(assert (=> b!81447 (= res!42336 call!7588)))

(assert (=> b!81447 (=> (not res!42336) (not e!53143))))

(declare-fun b!81448 () Bool)

(declare-fun e!53144 () Bool)

(assert (=> b!81448 (= e!53144 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81449 () Bool)

(declare-fun res!42338 () Bool)

(assert (=> b!81449 (=> (not res!42338) (not e!53150))))

(declare-fun e!53149 () Bool)

(assert (=> b!81449 (= res!42338 e!53149)))

(declare-fun res!42340 () Bool)

(assert (=> b!81449 (=> res!42340 e!53149)))

(assert (=> b!81449 (= res!42340 (not e!53144))))

(declare-fun res!42334 () Bool)

(assert (=> b!81449 (=> (not res!42334) (not e!53144))))

(assert (=> b!81449 (= res!42334 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81450 () Bool)

(declare-fun call!7585 () ListLongMap!1429)

(assert (=> b!81450 (= e!53154 call!7585)))

(declare-fun b!81451 () Bool)

(assert (=> b!81451 (= e!53151 (not call!7587))))

(declare-fun b!81452 () Bool)

(declare-fun e!53155 () Bool)

(assert (=> b!81452 (= e!53155 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81453 () Bool)

(declare-fun call!7584 () ListLongMap!1429)

(assert (=> b!81453 (= e!53147 (+!101 call!7584 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun bm!7583 () Bool)

(declare-fun c!12848 () Bool)

(assert (=> bm!7583 (= call!7584 (+!101 (ite c!12848 call!7589 (ite c!12845 call!7590 call!7585)) (ite (or c!12848 c!12845) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7584 () Bool)

(assert (=> bm!7584 (= call!7589 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!81454 () Bool)

(declare-fun e!53145 () Bool)

(assert (=> b!81454 (= e!53145 (= (apply!80 lt!38072 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1893 lt!37403) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81454 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 lt!37403)))))

(assert (=> b!81454 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun bm!7585 () Bool)

(assert (=> bm!7585 (= call!7587 (contains!739 lt!38072 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81455 () Bool)

(assert (=> b!81455 (= e!53149 e!53145)))

(declare-fun res!42337 () Bool)

(assert (=> b!81455 (=> (not res!42337) (not e!53145))))

(assert (=> b!81455 (= res!42337 (contains!739 lt!38072 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81455 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81456 () Bool)

(declare-fun Unit!2372 () Unit!2322)

(assert (=> b!81456 (= e!53148 Unit!2372)))

(declare-fun bm!7586 () Bool)

(assert (=> bm!7586 (= call!7586 call!7584)))

(declare-fun b!81457 () Bool)

(assert (=> b!81457 (= e!53150 e!53151)))

(declare-fun c!12846 () Bool)

(assert (=> b!81457 (= c!12846 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!20145 () Bool)

(assert (=> d!20145 e!53150))

(declare-fun res!42332 () Bool)

(assert (=> d!20145 (=> (not res!42332) (not e!53150))))

(assert (=> d!20145 (= res!42332 (or (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))))

(declare-fun lt!38074 () ListLongMap!1429)

(assert (=> d!20145 (= lt!38072 lt!38074)))

(declare-fun lt!38083 () Unit!2322)

(assert (=> d!20145 (= lt!38083 e!53148)))

(declare-fun c!12843 () Bool)

(assert (=> d!20145 (= c!12843 e!53155)))

(declare-fun res!42339 () Bool)

(assert (=> d!20145 (=> (not res!42339) (not e!53155))))

(assert (=> d!20145 (= res!42339 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!20145 (= lt!38074 e!53147)))

(assert (=> d!20145 (= c!12848 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20145 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20145 (= (getCurrentListMap!426 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38072)))

(declare-fun bm!7587 () Bool)

(assert (=> bm!7587 (= call!7585 call!7590)))

(declare-fun b!81458 () Bool)

(assert (=> b!81458 (= e!53146 call!7586)))

(assert (= (and d!20145 c!12848) b!81453))

(assert (= (and d!20145 (not c!12848)) b!81442))

(assert (= (and b!81442 c!12845) b!81458))

(assert (= (and b!81442 (not c!12845)) b!81440))

(assert (= (and b!81440 c!12844) b!81441))

(assert (= (and b!81440 (not c!12844)) b!81450))

(assert (= (or b!81441 b!81450) bm!7587))

(assert (= (or b!81458 bm!7587) bm!7582))

(assert (= (or b!81458 b!81441) bm!7586))

(assert (= (or b!81453 bm!7582) bm!7584))

(assert (= (or b!81453 bm!7586) bm!7583))

(assert (= (and d!20145 res!42339) b!81452))

(assert (= (and d!20145 c!12843) b!81445))

(assert (= (and d!20145 (not c!12843)) b!81456))

(assert (= (and d!20145 res!42332) b!81449))

(assert (= (and b!81449 res!42334) b!81448))

(assert (= (and b!81449 (not res!42340)) b!81455))

(assert (= (and b!81455 res!42337) b!81454))

(assert (= (and b!81449 res!42338) b!81444))

(assert (= (and b!81444 c!12847) b!81447))

(assert (= (and b!81444 (not c!12847)) b!81439))

(assert (= (and b!81447 res!42336) b!81438))

(assert (= (or b!81447 b!81439) bm!7581))

(assert (= (and b!81444 res!42335) b!81457))

(assert (= (and b!81457 c!12846) b!81443))

(assert (= (and b!81457 (not c!12846)) b!81451))

(assert (= (and b!81443 res!42333) b!81446))

(assert (= (or b!81443 b!81451) bm!7585))

(declare-fun b_lambda!3637 () Bool)

(assert (=> (not b_lambda!3637) (not b!81454)))

(assert (=> b!81454 t!5170))

(declare-fun b_and!4969 () Bool)

(assert (= b_and!4965 (and (=> t!5170 result!2849) b_and!4969)))

(assert (=> b!81454 t!5172))

(declare-fun b_and!4971 () Bool)

(assert (= b_and!4967 (and (=> t!5172 result!2851) b_and!4971)))

(declare-fun m!83593 () Bool)

(assert (=> b!81445 m!83593))

(assert (=> b!81445 m!83593))

(declare-fun m!83595 () Bool)

(assert (=> b!81445 m!83595))

(assert (=> b!81445 m!82381))

(declare-fun m!83597 () Bool)

(assert (=> b!81445 m!83597))

(declare-fun m!83599 () Bool)

(assert (=> b!81445 m!83599))

(declare-fun m!83601 () Bool)

(assert (=> b!81445 m!83601))

(declare-fun m!83603 () Bool)

(assert (=> b!81445 m!83603))

(declare-fun m!83605 () Bool)

(assert (=> b!81445 m!83605))

(declare-fun m!83607 () Bool)

(assert (=> b!81445 m!83607))

(assert (=> b!81445 m!83603))

(declare-fun m!83609 () Bool)

(assert (=> b!81445 m!83609))

(declare-fun m!83611 () Bool)

(assert (=> b!81445 m!83611))

(declare-fun m!83613 () Bool)

(assert (=> b!81445 m!83613))

(declare-fun m!83615 () Bool)

(assert (=> b!81445 m!83615))

(assert (=> b!81445 m!83601))

(declare-fun m!83617 () Bool)

(assert (=> b!81445 m!83617))

(declare-fun m!83619 () Bool)

(assert (=> b!81445 m!83619))

(declare-fun m!83621 () Bool)

(assert (=> b!81445 m!83621))

(assert (=> b!81445 m!83605))

(declare-fun m!83623 () Bool)

(assert (=> b!81445 m!83623))

(assert (=> b!81448 m!82381))

(assert (=> b!81448 m!82381))

(assert (=> b!81448 m!82583))

(declare-fun m!83625 () Bool)

(assert (=> b!81438 m!83625))

(declare-fun m!83627 () Bool)

(assert (=> bm!7585 m!83627))

(declare-fun m!83629 () Bool)

(assert (=> b!81453 m!83629))

(assert (=> b!81454 m!82381))

(assert (=> b!81454 m!82743))

(declare-fun m!83631 () Bool)

(assert (=> b!81454 m!83631))

(assert (=> b!81454 m!82743))

(declare-fun m!83633 () Bool)

(assert (=> b!81454 m!83633))

(assert (=> b!81454 m!83631))

(assert (=> b!81454 m!82381))

(declare-fun m!83635 () Bool)

(assert (=> b!81454 m!83635))

(declare-fun m!83637 () Bool)

(assert (=> b!81446 m!83637))

(assert (=> b!81452 m!82381))

(assert (=> b!81452 m!82381))

(assert (=> b!81452 m!82583))

(assert (=> b!81455 m!82381))

(assert (=> b!81455 m!82381))

(declare-fun m!83639 () Bool)

(assert (=> b!81455 m!83639))

(assert (=> bm!7584 m!83619))

(declare-fun m!83641 () Bool)

(assert (=> bm!7583 m!83641))

(assert (=> d!20145 m!82223))

(declare-fun m!83643 () Bool)

(assert (=> bm!7581 m!83643))

(assert (=> b!80915 d!20145))

(declare-fun bm!7588 () Bool)

(declare-fun call!7592 () List!1497)

(declare-fun call!7593 () List!1497)

(assert (=> bm!7588 (= call!7592 call!7593)))

(declare-fun b!81459 () Bool)

(declare-fun e!53156 () Bool)

(declare-fun lt!38089 () List!1497)

(assert (=> b!81459 (= e!53156 (contains!742 lt!38089 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun b!81460 () Bool)

(declare-fun e!53157 () List!1497)

(declare-fun e!53160 () List!1497)

(assert (=> b!81460 (= e!53157 e!53160)))

(declare-fun c!12852 () Bool)

(assert (=> b!81460 (= c!12852 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37215))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37215)))) (_1!1095 lt!37210))))))

(declare-fun bm!7589 () Bool)

(declare-fun call!7591 () List!1497)

(assert (=> bm!7589 (= call!7591 call!7592)))

(declare-fun d!20147 () Bool)

(assert (=> d!20147 e!53156))

(declare-fun res!42341 () Bool)

(assert (=> d!20147 (=> (not res!42341) (not e!53156))))

(assert (=> d!20147 (= res!42341 (isStrictlySorted!283 lt!38089))))

(assert (=> d!20147 (= lt!38089 e!53157)))

(declare-fun c!12849 () Bool)

(assert (=> d!20147 (= c!12849 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37215))) (bvslt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37215)))) (_1!1095 lt!37210))))))

(assert (=> d!20147 (isStrictlySorted!283 (t!5156 (toList!730 lt!37215)))))

(assert (=> d!20147 (= (insertStrictlySorted!59 (t!5156 (toList!730 lt!37215)) (_1!1095 lt!37210) (_2!1095 lt!37210)) lt!38089)))

(declare-fun e!53158 () List!1497)

(declare-fun bm!7590 () Bool)

(assert (=> bm!7590 (= call!7593 ($colon$colon!69 e!53158 (ite c!12849 (h!2082 (t!5156 (toList!730 lt!37215))) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210)))))))

(declare-fun c!12851 () Bool)

(assert (=> bm!7590 (= c!12851 c!12849)))

(declare-fun b!81461 () Bool)

(declare-fun e!53159 () List!1497)

(assert (=> b!81461 (= e!53159 call!7591)))

(declare-fun b!81462 () Bool)

(declare-fun res!42342 () Bool)

(assert (=> b!81462 (=> (not res!42342) (not e!53156))))

(assert (=> b!81462 (= res!42342 (containsKey!142 lt!38089 (_1!1095 lt!37210)))))

(declare-fun b!81463 () Bool)

(declare-fun c!12850 () Bool)

(assert (=> b!81463 (= c!12850 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37215))) (bvsgt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37215)))) (_1!1095 lt!37210))))))

(assert (=> b!81463 (= e!53160 e!53159)))

(declare-fun b!81464 () Bool)

(assert (=> b!81464 (= e!53158 (insertStrictlySorted!59 (t!5156 (t!5156 (toList!730 lt!37215))) (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(declare-fun b!81465 () Bool)

(assert (=> b!81465 (= e!53160 call!7592)))

(declare-fun b!81466 () Bool)

(assert (=> b!81466 (= e!53159 call!7591)))

(declare-fun b!81467 () Bool)

(assert (=> b!81467 (= e!53158 (ite c!12852 (t!5156 (t!5156 (toList!730 lt!37215))) (ite c!12850 (Cons!1493 (h!2082 (t!5156 (toList!730 lt!37215))) (t!5156 (t!5156 (toList!730 lt!37215)))) Nil!1494)))))

(declare-fun b!81468 () Bool)

(assert (=> b!81468 (= e!53157 call!7593)))

(assert (= (and d!20147 c!12849) b!81468))

(assert (= (and d!20147 (not c!12849)) b!81460))

(assert (= (and b!81460 c!12852) b!81465))

(assert (= (and b!81460 (not c!12852)) b!81463))

(assert (= (and b!81463 c!12850) b!81466))

(assert (= (and b!81463 (not c!12850)) b!81461))

(assert (= (or b!81466 b!81461) bm!7589))

(assert (= (or b!81465 bm!7589) bm!7588))

(assert (= (or b!81468 bm!7588) bm!7590))

(assert (= (and bm!7590 c!12851) b!81464))

(assert (= (and bm!7590 (not c!12851)) b!81467))

(assert (= (and d!20147 res!42341) b!81462))

(assert (= (and b!81462 res!42342) b!81459))

(declare-fun m!83645 () Bool)

(assert (=> b!81464 m!83645))

(declare-fun m!83647 () Bool)

(assert (=> bm!7590 m!83647))

(declare-fun m!83649 () Bool)

(assert (=> b!81459 m!83649))

(declare-fun m!83651 () Bool)

(assert (=> d!20147 m!83651))

(assert (=> d!20147 m!83289))

(declare-fun m!83653 () Bool)

(assert (=> b!81462 m!83653))

(assert (=> b!81077 d!20147))

(declare-fun b!81469 () Bool)

(declare-fun e!53161 () (_ BitVec 32))

(declare-fun call!7594 () (_ BitVec 32))

(assert (=> b!81469 (= e!53161 (bvadd #b00000000000000000000000000000001 call!7594))))

(declare-fun b!81470 () Bool)

(assert (=> b!81470 (= e!53161 call!7594)))

(declare-fun bm!7591 () Bool)

(assert (=> bm!7591 (= call!7594 (arrayCountValidKeys!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun d!20149 () Bool)

(declare-fun lt!38090 () (_ BitVec 32))

(assert (=> d!20149 (and (bvsge lt!38090 #b00000000000000000000000000000000) (bvsle lt!38090 (bvsub (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!53162 () (_ BitVec 32))

(assert (=> d!20149 (= lt!38090 e!53162)))

(declare-fun c!12853 () Bool)

(assert (=> d!20149 (= c!12853 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> d!20149 (and (bvsle #b00000000000000000000000000000000 (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> d!20149 (= (arrayCountValidKeys!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000000 (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))) lt!38090)))

(declare-fun b!81471 () Bool)

(assert (=> b!81471 (= e!53162 #b00000000000000000000000000000000)))

(declare-fun b!81472 () Bool)

(assert (=> b!81472 (= e!53162 e!53161)))

(declare-fun c!12854 () Bool)

(assert (=> b!81472 (= c!12854 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!20149 c!12853) b!81471))

(assert (= (and d!20149 (not c!12853)) b!81472))

(assert (= (and b!81472 c!12854) b!81469))

(assert (= (and b!81472 (not c!12854)) b!81470))

(assert (= (or b!81469 b!81470) bm!7591))

(declare-fun m!83655 () Bool)

(assert (=> bm!7591 m!83655))

(declare-fun m!83657 () Bool)

(assert (=> b!81472 m!83657))

(assert (=> b!81472 m!83657))

(declare-fun m!83659 () Bool)

(assert (=> b!81472 m!83659))

(assert (=> b!80791 d!20149))

(declare-fun bm!7592 () Bool)

(declare-fun call!7599 () Bool)

(declare-fun lt!38096 () ListLongMap!1429)

(assert (=> bm!7592 (= call!7599 (contains!739 lt!38096 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81473 () Bool)

(declare-fun e!53163 () Bool)

(assert (=> b!81473 (= e!53163 (= (apply!80 lt!38096 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 (_2!1094 lt!37425))))))

(declare-fun b!81474 () Bool)

(declare-fun e!53173 () Bool)

(assert (=> b!81474 (= e!53173 (not call!7599))))

(declare-fun b!81475 () Bool)

(declare-fun c!12856 () Bool)

(assert (=> b!81475 (= c!12856 (and (not (= (bvand (extraKeys!2139 (_2!1094 lt!37425)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 (_2!1094 lt!37425)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53166 () ListLongMap!1429)

(declare-fun e!53174 () ListLongMap!1429)

(assert (=> b!81475 (= e!53166 e!53174)))

(declare-fun b!81476 () Bool)

(declare-fun call!7597 () ListLongMap!1429)

(assert (=> b!81476 (= e!53174 call!7597)))

(declare-fun b!81477 () Bool)

(declare-fun e!53167 () ListLongMap!1429)

(assert (=> b!81477 (= e!53167 e!53166)))

(declare-fun c!12857 () Bool)

(assert (=> b!81477 (= c!12857 (and (not (= (bvand (extraKeys!2139 (_2!1094 lt!37425)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 (_2!1094 lt!37425)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81478 () Bool)

(declare-fun e!53171 () Bool)

(declare-fun e!53172 () Bool)

(assert (=> b!81478 (= e!53171 e!53172)))

(declare-fun res!42344 () Bool)

(declare-fun call!7598 () Bool)

(assert (=> b!81478 (= res!42344 call!7598)))

(assert (=> b!81478 (=> (not res!42344) (not e!53172))))

(declare-fun b!81479 () Bool)

(declare-fun res!42346 () Bool)

(declare-fun e!53170 () Bool)

(assert (=> b!81479 (=> (not res!42346) (not e!53170))))

(assert (=> b!81479 (= res!42346 e!53173)))

(declare-fun c!12859 () Bool)

(assert (=> b!81479 (= c!12859 (not (= (bvand (extraKeys!2139 (_2!1094 lt!37425)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81480 () Bool)

(declare-fun e!53168 () Unit!2322)

(declare-fun lt!38102 () Unit!2322)

(assert (=> b!81480 (= e!53168 lt!38102)))

(declare-fun lt!38106 () ListLongMap!1429)

(assert (=> b!81480 (= lt!38106 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (_2!1094 lt!37425)) (_values!2275 (_2!1094 lt!37425)) (mask!6298 (_2!1094 lt!37425)) (extraKeys!2139 (_2!1094 lt!37425)) (zeroValue!2188 (_2!1094 lt!37425)) (minValue!2188 (_2!1094 lt!37425)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1094 lt!37425))))))

(declare-fun lt!38093 () (_ BitVec 64))

(assert (=> b!81480 (= lt!38093 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38109 () (_ BitVec 64))

(assert (=> b!81480 (= lt!38109 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000))))

(declare-fun lt!38112 () Unit!2322)

(assert (=> b!81480 (= lt!38112 (addStillContains!56 lt!38106 lt!38093 (zeroValue!2188 (_2!1094 lt!37425)) lt!38109))))

(assert (=> b!81480 (contains!739 (+!101 lt!38106 (tuple2!2169 lt!38093 (zeroValue!2188 (_2!1094 lt!37425)))) lt!38109)))

(declare-fun lt!38100 () Unit!2322)

(assert (=> b!81480 (= lt!38100 lt!38112)))

(declare-fun lt!38097 () ListLongMap!1429)

(assert (=> b!81480 (= lt!38097 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (_2!1094 lt!37425)) (_values!2275 (_2!1094 lt!37425)) (mask!6298 (_2!1094 lt!37425)) (extraKeys!2139 (_2!1094 lt!37425)) (zeroValue!2188 (_2!1094 lt!37425)) (minValue!2188 (_2!1094 lt!37425)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1094 lt!37425))))))

(declare-fun lt!38111 () (_ BitVec 64))

(assert (=> b!81480 (= lt!38111 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38108 () (_ BitVec 64))

(assert (=> b!81480 (= lt!38108 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000))))

(declare-fun lt!38099 () Unit!2322)

(assert (=> b!81480 (= lt!38099 (addApplyDifferent!56 lt!38097 lt!38111 (minValue!2188 (_2!1094 lt!37425)) lt!38108))))

(assert (=> b!81480 (= (apply!80 (+!101 lt!38097 (tuple2!2169 lt!38111 (minValue!2188 (_2!1094 lt!37425)))) lt!38108) (apply!80 lt!38097 lt!38108))))

(declare-fun lt!38101 () Unit!2322)

(assert (=> b!81480 (= lt!38101 lt!38099)))

(declare-fun lt!38095 () ListLongMap!1429)

(assert (=> b!81480 (= lt!38095 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (_2!1094 lt!37425)) (_values!2275 (_2!1094 lt!37425)) (mask!6298 (_2!1094 lt!37425)) (extraKeys!2139 (_2!1094 lt!37425)) (zeroValue!2188 (_2!1094 lt!37425)) (minValue!2188 (_2!1094 lt!37425)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1094 lt!37425))))))

(declare-fun lt!38110 () (_ BitVec 64))

(assert (=> b!81480 (= lt!38110 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38094 () (_ BitVec 64))

(assert (=> b!81480 (= lt!38094 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000))))

(declare-fun lt!38104 () Unit!2322)

(assert (=> b!81480 (= lt!38104 (addApplyDifferent!56 lt!38095 lt!38110 (zeroValue!2188 (_2!1094 lt!37425)) lt!38094))))

(assert (=> b!81480 (= (apply!80 (+!101 lt!38095 (tuple2!2169 lt!38110 (zeroValue!2188 (_2!1094 lt!37425)))) lt!38094) (apply!80 lt!38095 lt!38094))))

(declare-fun lt!38091 () Unit!2322)

(assert (=> b!81480 (= lt!38091 lt!38104)))

(declare-fun lt!38103 () ListLongMap!1429)

(assert (=> b!81480 (= lt!38103 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (_2!1094 lt!37425)) (_values!2275 (_2!1094 lt!37425)) (mask!6298 (_2!1094 lt!37425)) (extraKeys!2139 (_2!1094 lt!37425)) (zeroValue!2188 (_2!1094 lt!37425)) (minValue!2188 (_2!1094 lt!37425)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1094 lt!37425))))))

(declare-fun lt!38092 () (_ BitVec 64))

(assert (=> b!81480 (= lt!38092 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38105 () (_ BitVec 64))

(assert (=> b!81480 (= lt!38105 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000))))

(assert (=> b!81480 (= lt!38102 (addApplyDifferent!56 lt!38103 lt!38092 (minValue!2188 (_2!1094 lt!37425)) lt!38105))))

(assert (=> b!81480 (= (apply!80 (+!101 lt!38103 (tuple2!2169 lt!38092 (minValue!2188 (_2!1094 lt!37425)))) lt!38105) (apply!80 lt!38103 lt!38105))))

(declare-fun b!81481 () Bool)

(assert (=> b!81481 (= e!53172 (= (apply!80 lt!38096 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 (_2!1094 lt!37425))))))

(declare-fun bm!7593 () Bool)

(declare-fun call!7601 () ListLongMap!1429)

(declare-fun call!7600 () ListLongMap!1429)

(assert (=> bm!7593 (= call!7601 call!7600)))

(declare-fun b!81482 () Bool)

(assert (=> b!81482 (= e!53173 e!53163)))

(declare-fun res!42347 () Bool)

(assert (=> b!81482 (= res!42347 call!7599)))

(assert (=> b!81482 (=> (not res!42347) (not e!53163))))

(declare-fun b!81483 () Bool)

(declare-fun e!53164 () Bool)

(assert (=> b!81483 (= e!53164 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000)))))

(declare-fun b!81484 () Bool)

(declare-fun res!42349 () Bool)

(assert (=> b!81484 (=> (not res!42349) (not e!53170))))

(declare-fun e!53169 () Bool)

(assert (=> b!81484 (= res!42349 e!53169)))

(declare-fun res!42351 () Bool)

(assert (=> b!81484 (=> res!42351 e!53169)))

(assert (=> b!81484 (= res!42351 (not e!53164))))

(declare-fun res!42345 () Bool)

(assert (=> b!81484 (=> (not res!42345) (not e!53164))))

(assert (=> b!81484 (= res!42345 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37425)))))))

(declare-fun b!81485 () Bool)

(declare-fun call!7596 () ListLongMap!1429)

(assert (=> b!81485 (= e!53174 call!7596)))

(declare-fun b!81486 () Bool)

(assert (=> b!81486 (= e!53171 (not call!7598))))

(declare-fun b!81487 () Bool)

(declare-fun e!53175 () Bool)

(assert (=> b!81487 (= e!53175 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000)))))

(declare-fun b!81488 () Bool)

(declare-fun call!7595 () ListLongMap!1429)

(assert (=> b!81488 (= e!53167 (+!101 call!7595 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (_2!1094 lt!37425)))))))

(declare-fun c!12860 () Bool)

(declare-fun bm!7594 () Bool)

(assert (=> bm!7594 (= call!7595 (+!101 (ite c!12860 call!7600 (ite c!12857 call!7601 call!7596)) (ite (or c!12860 c!12857) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (_2!1094 lt!37425))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (_2!1094 lt!37425))))))))

(declare-fun bm!7595 () Bool)

(assert (=> bm!7595 (= call!7600 (getCurrentListMapNoExtraKeys!66 (_keys!3956 (_2!1094 lt!37425)) (_values!2275 (_2!1094 lt!37425)) (mask!6298 (_2!1094 lt!37425)) (extraKeys!2139 (_2!1094 lt!37425)) (zeroValue!2188 (_2!1094 lt!37425)) (minValue!2188 (_2!1094 lt!37425)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1094 lt!37425))))))

(declare-fun b!81489 () Bool)

(declare-fun e!53165 () Bool)

(assert (=> b!81489 (= e!53165 (= (apply!80 lt!38096 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000)) (get!1189 (select (arr!1893 (_values!2275 (_2!1094 lt!37425))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 (_2!1094 lt!37425)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_values!2275 (_2!1094 lt!37425)))))))

(assert (=> b!81489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37425)))))))

(declare-fun bm!7596 () Bool)

(assert (=> bm!7596 (= call!7598 (contains!739 lt!38096 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81490 () Bool)

(assert (=> b!81490 (= e!53169 e!53165)))

(declare-fun res!42348 () Bool)

(assert (=> b!81490 (=> (not res!42348) (not e!53165))))

(assert (=> b!81490 (= res!42348 (contains!739 lt!38096 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000)))))

(assert (=> b!81490 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37425)))))))

(declare-fun b!81491 () Bool)

(declare-fun Unit!2373 () Unit!2322)

(assert (=> b!81491 (= e!53168 Unit!2373)))

(declare-fun bm!7597 () Bool)

(assert (=> bm!7597 (= call!7597 call!7595)))

(declare-fun b!81492 () Bool)

(assert (=> b!81492 (= e!53170 e!53171)))

(declare-fun c!12858 () Bool)

(assert (=> b!81492 (= c!12858 (not (= (bvand (extraKeys!2139 (_2!1094 lt!37425)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!20151 () Bool)

(assert (=> d!20151 e!53170))

(declare-fun res!42343 () Bool)

(assert (=> d!20151 (=> (not res!42343) (not e!53170))))

(assert (=> d!20151 (= res!42343 (or (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37425)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37425)))))))))

(declare-fun lt!38098 () ListLongMap!1429)

(assert (=> d!20151 (= lt!38096 lt!38098)))

(declare-fun lt!38107 () Unit!2322)

(assert (=> d!20151 (= lt!38107 e!53168)))

(declare-fun c!12855 () Bool)

(assert (=> d!20151 (= c!12855 e!53175)))

(declare-fun res!42350 () Bool)

(assert (=> d!20151 (=> (not res!42350) (not e!53175))))

(assert (=> d!20151 (= res!42350 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37425)))))))

(assert (=> d!20151 (= lt!38098 e!53167)))

(assert (=> d!20151 (= c!12860 (and (not (= (bvand (extraKeys!2139 (_2!1094 lt!37425)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 (_2!1094 lt!37425)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20151 (validMask!0 (mask!6298 (_2!1094 lt!37425)))))

(assert (=> d!20151 (= (getCurrentListMap!426 (_keys!3956 (_2!1094 lt!37425)) (_values!2275 (_2!1094 lt!37425)) (mask!6298 (_2!1094 lt!37425)) (extraKeys!2139 (_2!1094 lt!37425)) (zeroValue!2188 (_2!1094 lt!37425)) (minValue!2188 (_2!1094 lt!37425)) #b00000000000000000000000000000000 (defaultEntry!2292 (_2!1094 lt!37425))) lt!38096)))

(declare-fun bm!7598 () Bool)

(assert (=> bm!7598 (= call!7596 call!7601)))

(declare-fun b!81493 () Bool)

(assert (=> b!81493 (= e!53166 call!7597)))

(assert (= (and d!20151 c!12860) b!81488))

(assert (= (and d!20151 (not c!12860)) b!81477))

(assert (= (and b!81477 c!12857) b!81493))

(assert (= (and b!81477 (not c!12857)) b!81475))

(assert (= (and b!81475 c!12856) b!81476))

(assert (= (and b!81475 (not c!12856)) b!81485))

(assert (= (or b!81476 b!81485) bm!7598))

(assert (= (or b!81493 bm!7598) bm!7593))

(assert (= (or b!81493 b!81476) bm!7597))

(assert (= (or b!81488 bm!7593) bm!7595))

(assert (= (or b!81488 bm!7597) bm!7594))

(assert (= (and d!20151 res!42350) b!81487))

(assert (= (and d!20151 c!12855) b!81480))

(assert (= (and d!20151 (not c!12855)) b!81491))

(assert (= (and d!20151 res!42343) b!81484))

(assert (= (and b!81484 res!42345) b!81483))

(assert (= (and b!81484 (not res!42351)) b!81490))

(assert (= (and b!81490 res!42348) b!81489))

(assert (= (and b!81484 res!42349) b!81479))

(assert (= (and b!81479 c!12859) b!81482))

(assert (= (and b!81479 (not c!12859)) b!81474))

(assert (= (and b!81482 res!42347) b!81473))

(assert (= (or b!81482 b!81474) bm!7592))

(assert (= (and b!81479 res!42346) b!81492))

(assert (= (and b!81492 c!12858) b!81478))

(assert (= (and b!81492 (not c!12858)) b!81486))

(assert (= (and b!81478 res!42344) b!81481))

(assert (= (or b!81478 b!81486) bm!7596))

(declare-fun b_lambda!3639 () Bool)

(assert (=> (not b_lambda!3639) (not b!81489)))

(declare-fun tb!1645 () Bool)

(declare-fun t!5175 () Bool)

(assert (=> (and b!80208 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 (_2!1094 lt!37425))) t!5175) tb!1645))

(declare-fun result!2853 () Bool)

(assert (=> tb!1645 (= result!2853 tp_is_empty!2515)))

(assert (=> b!81489 t!5175))

(declare-fun b_and!4973 () Bool)

(assert (= b_and!4969 (and (=> t!5175 result!2853) b_and!4973)))

(declare-fun t!5177 () Bool)

(declare-fun tb!1647 () Bool)

(assert (=> (and b!80215 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (_2!1094 lt!37425))) t!5177) tb!1647))

(declare-fun result!2855 () Bool)

(assert (= result!2855 result!2853))

(assert (=> b!81489 t!5177))

(declare-fun b_and!4975 () Bool)

(assert (= b_and!4971 (and (=> t!5177 result!2855) b_and!4975)))

(declare-fun m!83661 () Bool)

(assert (=> b!81480 m!83661))

(assert (=> b!81480 m!83661))

(declare-fun m!83663 () Bool)

(assert (=> b!81480 m!83663))

(assert (=> b!81480 m!83193))

(declare-fun m!83665 () Bool)

(assert (=> b!81480 m!83665))

(declare-fun m!83667 () Bool)

(assert (=> b!81480 m!83667))

(declare-fun m!83669 () Bool)

(assert (=> b!81480 m!83669))

(declare-fun m!83671 () Bool)

(assert (=> b!81480 m!83671))

(declare-fun m!83673 () Bool)

(assert (=> b!81480 m!83673))

(declare-fun m!83675 () Bool)

(assert (=> b!81480 m!83675))

(assert (=> b!81480 m!83671))

(declare-fun m!83677 () Bool)

(assert (=> b!81480 m!83677))

(declare-fun m!83679 () Bool)

(assert (=> b!81480 m!83679))

(declare-fun m!83681 () Bool)

(assert (=> b!81480 m!83681))

(declare-fun m!83683 () Bool)

(assert (=> b!81480 m!83683))

(assert (=> b!81480 m!83669))

(declare-fun m!83685 () Bool)

(assert (=> b!81480 m!83685))

(declare-fun m!83687 () Bool)

(assert (=> b!81480 m!83687))

(declare-fun m!83689 () Bool)

(assert (=> b!81480 m!83689))

(assert (=> b!81480 m!83673))

(declare-fun m!83691 () Bool)

(assert (=> b!81480 m!83691))

(assert (=> b!81483 m!83193))

(assert (=> b!81483 m!83193))

(assert (=> b!81483 m!83195))

(declare-fun m!83693 () Bool)

(assert (=> b!81473 m!83693))

(declare-fun m!83695 () Bool)

(assert (=> bm!7596 m!83695))

(declare-fun m!83697 () Bool)

(assert (=> b!81488 m!83697))

(assert (=> b!81489 m!83193))

(declare-fun m!83699 () Bool)

(assert (=> b!81489 m!83699))

(declare-fun m!83701 () Bool)

(assert (=> b!81489 m!83701))

(assert (=> b!81489 m!83699))

(declare-fun m!83703 () Bool)

(assert (=> b!81489 m!83703))

(assert (=> b!81489 m!83701))

(assert (=> b!81489 m!83193))

(declare-fun m!83705 () Bool)

(assert (=> b!81489 m!83705))

(declare-fun m!83707 () Bool)

(assert (=> b!81481 m!83707))

(assert (=> b!81487 m!83193))

(assert (=> b!81487 m!83193))

(assert (=> b!81487 m!83195))

(assert (=> b!81490 m!83193))

(assert (=> b!81490 m!83193))

(declare-fun m!83709 () Bool)

(assert (=> b!81490 m!83709))

(assert (=> bm!7595 m!83687))

(declare-fun m!83711 () Bool)

(assert (=> bm!7594 m!83711))

(declare-fun m!83713 () Bool)

(assert (=> d!20151 m!83713))

(declare-fun m!83715 () Bool)

(assert (=> bm!7592 m!83715))

(assert (=> d!19977 d!20151))

(declare-fun d!20153 () Bool)

(declare-fun e!53176 () Bool)

(assert (=> d!20153 e!53176))

(declare-fun res!42352 () Bool)

(assert (=> d!20153 (=> res!42352 e!53176)))

(declare-fun lt!38114 () Bool)

(assert (=> d!20153 (= res!42352 (not lt!38114))))

(declare-fun lt!38113 () Bool)

(assert (=> d!20153 (= lt!38114 lt!38113)))

(declare-fun lt!38115 () Unit!2322)

(declare-fun e!53177 () Unit!2322)

(assert (=> d!20153 (= lt!38115 e!53177)))

(declare-fun c!12861 () Bool)

(assert (=> d!20153 (= c!12861 lt!38113)))

(assert (=> d!20153 (= lt!38113 (containsKey!142 (toList!730 lt!37900) (_1!1095 (tuple2!2169 lt!37538 lt!37537))))))

(assert (=> d!20153 (= (contains!739 lt!37900 (_1!1095 (tuple2!2169 lt!37538 lt!37537))) lt!38114)))

(declare-fun b!81494 () Bool)

(declare-fun lt!38116 () Unit!2322)

(assert (=> b!81494 (= e!53177 lt!38116)))

(assert (=> b!81494 (= lt!38116 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37900) (_1!1095 (tuple2!2169 lt!37538 lt!37537))))))

(assert (=> b!81494 (isDefined!91 (getValueByKey!139 (toList!730 lt!37900) (_1!1095 (tuple2!2169 lt!37538 lt!37537))))))

(declare-fun b!81495 () Bool)

(declare-fun Unit!2374 () Unit!2322)

(assert (=> b!81495 (= e!53177 Unit!2374)))

(declare-fun b!81496 () Bool)

(assert (=> b!81496 (= e!53176 (isDefined!91 (getValueByKey!139 (toList!730 lt!37900) (_1!1095 (tuple2!2169 lt!37538 lt!37537)))))))

(assert (= (and d!20153 c!12861) b!81494))

(assert (= (and d!20153 (not c!12861)) b!81495))

(assert (= (and d!20153 (not res!42352)) b!81496))

(declare-fun m!83717 () Bool)

(assert (=> d!20153 m!83717))

(declare-fun m!83719 () Bool)

(assert (=> b!81494 m!83719))

(assert (=> b!81494 m!82999))

(assert (=> b!81494 m!82999))

(declare-fun m!83721 () Bool)

(assert (=> b!81494 m!83721))

(assert (=> b!81496 m!82999))

(assert (=> b!81496 m!82999))

(assert (=> b!81496 m!83721))

(assert (=> d!19931 d!20153))

(declare-fun b!81500 () Bool)

(declare-fun e!53179 () Option!145)

(assert (=> b!81500 (= e!53179 None!143)))

(declare-fun b!81499 () Bool)

(assert (=> b!81499 (= e!53179 (getValueByKey!139 (t!5156 lt!37898) (_1!1095 (tuple2!2169 lt!37538 lt!37537))))))

(declare-fun c!12862 () Bool)

(declare-fun d!20155 () Bool)

(assert (=> d!20155 (= c!12862 (and ((_ is Cons!1493) lt!37898) (= (_1!1095 (h!2082 lt!37898)) (_1!1095 (tuple2!2169 lt!37538 lt!37537)))))))

(declare-fun e!53178 () Option!145)

(assert (=> d!20155 (= (getValueByKey!139 lt!37898 (_1!1095 (tuple2!2169 lt!37538 lt!37537))) e!53178)))

(declare-fun b!81497 () Bool)

(assert (=> b!81497 (= e!53178 (Some!144 (_2!1095 (h!2082 lt!37898))))))

(declare-fun b!81498 () Bool)

(assert (=> b!81498 (= e!53178 e!53179)))

(declare-fun c!12863 () Bool)

(assert (=> b!81498 (= c!12863 (and ((_ is Cons!1493) lt!37898) (not (= (_1!1095 (h!2082 lt!37898)) (_1!1095 (tuple2!2169 lt!37538 lt!37537))))))))

(assert (= (and d!20155 c!12862) b!81497))

(assert (= (and d!20155 (not c!12862)) b!81498))

(assert (= (and b!81498 c!12863) b!81499))

(assert (= (and b!81498 (not c!12863)) b!81500))

(declare-fun m!83723 () Bool)

(assert (=> b!81499 m!83723))

(assert (=> d!19931 d!20155))

(declare-fun d!20157 () Bool)

(assert (=> d!20157 (= (getValueByKey!139 lt!37898 (_1!1095 (tuple2!2169 lt!37538 lt!37537))) (Some!144 (_2!1095 (tuple2!2169 lt!37538 lt!37537))))))

(declare-fun lt!38117 () Unit!2322)

(assert (=> d!20157 (= lt!38117 (choose!478 lt!37898 (_1!1095 (tuple2!2169 lt!37538 lt!37537)) (_2!1095 (tuple2!2169 lt!37538 lt!37537))))))

(declare-fun e!53180 () Bool)

(assert (=> d!20157 e!53180))

(declare-fun res!42353 () Bool)

(assert (=> d!20157 (=> (not res!42353) (not e!53180))))

(assert (=> d!20157 (= res!42353 (isStrictlySorted!283 lt!37898))))

(assert (=> d!20157 (= (lemmaContainsTupThenGetReturnValue!56 lt!37898 (_1!1095 (tuple2!2169 lt!37538 lt!37537)) (_2!1095 (tuple2!2169 lt!37538 lt!37537))) lt!38117)))

(declare-fun b!81501 () Bool)

(declare-fun res!42354 () Bool)

(assert (=> b!81501 (=> (not res!42354) (not e!53180))))

(assert (=> b!81501 (= res!42354 (containsKey!142 lt!37898 (_1!1095 (tuple2!2169 lt!37538 lt!37537))))))

(declare-fun b!81502 () Bool)

(assert (=> b!81502 (= e!53180 (contains!742 lt!37898 (tuple2!2169 (_1!1095 (tuple2!2169 lt!37538 lt!37537)) (_2!1095 (tuple2!2169 lt!37538 lt!37537)))))))

(assert (= (and d!20157 res!42353) b!81501))

(assert (= (and b!81501 res!42354) b!81502))

(assert (=> d!20157 m!82993))

(declare-fun m!83725 () Bool)

(assert (=> d!20157 m!83725))

(declare-fun m!83727 () Bool)

(assert (=> d!20157 m!83727))

(declare-fun m!83729 () Bool)

(assert (=> b!81501 m!83729))

(declare-fun m!83731 () Bool)

(assert (=> b!81502 m!83731))

(assert (=> d!19931 d!20157))

(declare-fun bm!7599 () Bool)

(declare-fun call!7603 () List!1497)

(declare-fun call!7604 () List!1497)

(assert (=> bm!7599 (= call!7603 call!7604)))

(declare-fun b!81503 () Bool)

(declare-fun lt!38118 () List!1497)

(declare-fun e!53181 () Bool)

(assert (=> b!81503 (= e!53181 (contains!742 lt!38118 (tuple2!2169 (_1!1095 (tuple2!2169 lt!37538 lt!37537)) (_2!1095 (tuple2!2169 lt!37538 lt!37537)))))))

(declare-fun b!81504 () Bool)

(declare-fun e!53182 () List!1497)

(declare-fun e!53185 () List!1497)

(assert (=> b!81504 (= e!53182 e!53185)))

(declare-fun c!12867 () Bool)

(assert (=> b!81504 (= c!12867 (and ((_ is Cons!1493) (toList!730 lt!37533)) (= (_1!1095 (h!2082 (toList!730 lt!37533))) (_1!1095 (tuple2!2169 lt!37538 lt!37537)))))))

(declare-fun bm!7600 () Bool)

(declare-fun call!7602 () List!1497)

(assert (=> bm!7600 (= call!7602 call!7603)))

(declare-fun d!20159 () Bool)

(assert (=> d!20159 e!53181))

(declare-fun res!42355 () Bool)

(assert (=> d!20159 (=> (not res!42355) (not e!53181))))

(assert (=> d!20159 (= res!42355 (isStrictlySorted!283 lt!38118))))

(assert (=> d!20159 (= lt!38118 e!53182)))

(declare-fun c!12864 () Bool)

(assert (=> d!20159 (= c!12864 (and ((_ is Cons!1493) (toList!730 lt!37533)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37533))) (_1!1095 (tuple2!2169 lt!37538 lt!37537)))))))

(assert (=> d!20159 (isStrictlySorted!283 (toList!730 lt!37533))))

(assert (=> d!20159 (= (insertStrictlySorted!59 (toList!730 lt!37533) (_1!1095 (tuple2!2169 lt!37538 lt!37537)) (_2!1095 (tuple2!2169 lt!37538 lt!37537))) lt!38118)))

(declare-fun e!53183 () List!1497)

(declare-fun bm!7601 () Bool)

(assert (=> bm!7601 (= call!7604 ($colon$colon!69 e!53183 (ite c!12864 (h!2082 (toList!730 lt!37533)) (tuple2!2169 (_1!1095 (tuple2!2169 lt!37538 lt!37537)) (_2!1095 (tuple2!2169 lt!37538 lt!37537))))))))

(declare-fun c!12866 () Bool)

(assert (=> bm!7601 (= c!12866 c!12864)))

(declare-fun b!81505 () Bool)

(declare-fun e!53184 () List!1497)

(assert (=> b!81505 (= e!53184 call!7602)))

(declare-fun b!81506 () Bool)

(declare-fun res!42356 () Bool)

(assert (=> b!81506 (=> (not res!42356) (not e!53181))))

(assert (=> b!81506 (= res!42356 (containsKey!142 lt!38118 (_1!1095 (tuple2!2169 lt!37538 lt!37537))))))

(declare-fun b!81507 () Bool)

(declare-fun c!12865 () Bool)

(assert (=> b!81507 (= c!12865 (and ((_ is Cons!1493) (toList!730 lt!37533)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37533))) (_1!1095 (tuple2!2169 lt!37538 lt!37537)))))))

(assert (=> b!81507 (= e!53185 e!53184)))

(declare-fun b!81508 () Bool)

(assert (=> b!81508 (= e!53183 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37533)) (_1!1095 (tuple2!2169 lt!37538 lt!37537)) (_2!1095 (tuple2!2169 lt!37538 lt!37537))))))

(declare-fun b!81509 () Bool)

(assert (=> b!81509 (= e!53185 call!7603)))

(declare-fun b!81510 () Bool)

(assert (=> b!81510 (= e!53184 call!7602)))

(declare-fun b!81511 () Bool)

(assert (=> b!81511 (= e!53183 (ite c!12867 (t!5156 (toList!730 lt!37533)) (ite c!12865 (Cons!1493 (h!2082 (toList!730 lt!37533)) (t!5156 (toList!730 lt!37533))) Nil!1494)))))

(declare-fun b!81512 () Bool)

(assert (=> b!81512 (= e!53182 call!7604)))

(assert (= (and d!20159 c!12864) b!81512))

(assert (= (and d!20159 (not c!12864)) b!81504))

(assert (= (and b!81504 c!12867) b!81509))

(assert (= (and b!81504 (not c!12867)) b!81507))

(assert (= (and b!81507 c!12865) b!81510))

(assert (= (and b!81507 (not c!12865)) b!81505))

(assert (= (or b!81510 b!81505) bm!7600))

(assert (= (or b!81509 bm!7600) bm!7599))

(assert (= (or b!81512 bm!7599) bm!7601))

(assert (= (and bm!7601 c!12866) b!81508))

(assert (= (and bm!7601 (not c!12866)) b!81511))

(assert (= (and d!20159 res!42355) b!81506))

(assert (= (and b!81506 res!42356) b!81503))

(declare-fun m!83733 () Bool)

(assert (=> b!81508 m!83733))

(declare-fun m!83735 () Bool)

(assert (=> bm!7601 m!83735))

(declare-fun m!83737 () Bool)

(assert (=> b!81503 m!83737))

(declare-fun m!83739 () Bool)

(assert (=> d!20159 m!83739))

(declare-fun m!83741 () Bool)

(assert (=> d!20159 m!83741))

(declare-fun m!83743 () Bool)

(assert (=> b!81506 m!83743))

(assert (=> d!19931 d!20159))

(declare-fun d!20161 () Bool)

(assert (=> d!20161 (= (content!87 Nil!1495) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!19795 d!20161))

(declare-fun d!20163 () Bool)

(assert (=> d!20163 (= (apply!80 lt!37797 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!139 (toList!730 lt!37797) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3450 () Bool)

(assert (= bs!3450 d!20163))

(assert (=> bs!3450 m!83323))

(assert (=> bs!3450 m!83323))

(declare-fun m!83745 () Bool)

(assert (=> bs!3450 m!83745))

(assert (=> b!80916 d!20163))

(declare-fun d!20165 () Bool)

(declare-fun lt!38119 () Bool)

(assert (=> d!20165 (= lt!38119 (select (content!86 (toList!730 lt!37636)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(declare-fun e!53186 () Bool)

(assert (=> d!20165 (= lt!38119 e!53186)))

(declare-fun res!42358 () Bool)

(assert (=> d!20165 (=> (not res!42358) (not e!53186))))

(assert (=> d!20165 (= res!42358 ((_ is Cons!1493) (toList!730 lt!37636)))))

(assert (=> d!20165 (= (contains!742 (toList!730 lt!37636) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) lt!38119)))

(declare-fun b!81513 () Bool)

(declare-fun e!53187 () Bool)

(assert (=> b!81513 (= e!53186 e!53187)))

(declare-fun res!42357 () Bool)

(assert (=> b!81513 (=> res!42357 e!53187)))

(assert (=> b!81513 (= res!42357 (= (h!2082 (toList!730 lt!37636)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(declare-fun b!81514 () Bool)

(assert (=> b!81514 (= e!53187 (contains!742 (t!5156 (toList!730 lt!37636)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (= (and d!20165 res!42358) b!81513))

(assert (= (and b!81513 (not res!42357)) b!81514))

(declare-fun m!83747 () Bool)

(assert (=> d!20165 m!83747))

(declare-fun m!83749 () Bool)

(assert (=> d!20165 m!83749))

(declare-fun m!83751 () Bool)

(assert (=> b!81514 m!83751))

(assert (=> b!80770 d!20165))

(declare-fun d!20167 () Bool)

(assert (=> d!20167 (not (contains!739 (+!101 lt!37603 (tuple2!2169 lt!37608 lt!37607)) lt!37604))))

(declare-fun lt!38120 () Unit!2322)

(assert (=> d!20167 (= lt!38120 (choose!486 lt!37603 lt!37608 lt!37607 lt!37604))))

(declare-fun e!53188 () Bool)

(assert (=> d!20167 e!53188))

(declare-fun res!42359 () Bool)

(assert (=> d!20167 (=> (not res!42359) (not e!53188))))

(assert (=> d!20167 (= res!42359 (not (contains!739 lt!37603 lt!37604)))))

(assert (=> d!20167 (= (addStillNotContains!31 lt!37603 lt!37608 lt!37607 lt!37604) lt!38120)))

(declare-fun b!81515 () Bool)

(assert (=> b!81515 (= e!53188 (not (= lt!37608 lt!37604)))))

(assert (= (and d!20167 res!42359) b!81515))

(assert (=> d!20167 m!82309))

(assert (=> d!20167 m!82309))

(assert (=> d!20167 m!82311))

(declare-fun m!83753 () Bool)

(assert (=> d!20167 m!83753))

(declare-fun m!83755 () Bool)

(assert (=> d!20167 m!83755))

(assert (=> b!80739 d!20167))

(declare-fun d!20169 () Bool)

(declare-fun c!12868 () Bool)

(assert (=> d!20169 (= c!12868 ((_ is ValueCellFull!914) (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!53189 () V!3001)

(assert (=> d!20169 (= (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53189)))

(declare-fun b!81516 () Bool)

(assert (=> b!81516 (= e!53189 (get!1190 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81517 () Bool)

(assert (=> b!81517 (= e!53189 (get!1191 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20169 c!12868) b!81516))

(assert (= (and d!20169 (not c!12868)) b!81517))

(assert (=> b!81516 m!82301))

(assert (=> b!81516 m!81775))

(declare-fun m!83757 () Bool)

(assert (=> b!81516 m!83757))

(assert (=> b!81517 m!82301))

(assert (=> b!81517 m!81775))

(declare-fun m!83759 () Bool)

(assert (=> b!81517 m!83759))

(assert (=> b!80739 d!20169))

(declare-fun d!20171 () Bool)

(declare-fun e!53190 () Bool)

(assert (=> d!20171 e!53190))

(declare-fun res!42360 () Bool)

(assert (=> d!20171 (=> res!42360 e!53190)))

(declare-fun lt!38122 () Bool)

(assert (=> d!20171 (= res!42360 (not lt!38122))))

(declare-fun lt!38121 () Bool)

(assert (=> d!20171 (= lt!38122 lt!38121)))

(declare-fun lt!38123 () Unit!2322)

(declare-fun e!53191 () Unit!2322)

(assert (=> d!20171 (= lt!38123 e!53191)))

(declare-fun c!12869 () Bool)

(assert (=> d!20171 (= c!12869 lt!38121)))

(assert (=> d!20171 (= lt!38121 (containsKey!142 (toList!730 (+!101 lt!37603 (tuple2!2169 lt!37608 lt!37607))) lt!37604))))

(assert (=> d!20171 (= (contains!739 (+!101 lt!37603 (tuple2!2169 lt!37608 lt!37607)) lt!37604) lt!38122)))

(declare-fun b!81518 () Bool)

(declare-fun lt!38124 () Unit!2322)

(assert (=> b!81518 (= e!53191 lt!38124)))

(assert (=> b!81518 (= lt!38124 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 (+!101 lt!37603 (tuple2!2169 lt!37608 lt!37607))) lt!37604))))

(assert (=> b!81518 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37603 (tuple2!2169 lt!37608 lt!37607))) lt!37604))))

(declare-fun b!81519 () Bool)

(declare-fun Unit!2375 () Unit!2322)

(assert (=> b!81519 (= e!53191 Unit!2375)))

(declare-fun b!81520 () Bool)

(assert (=> b!81520 (= e!53190 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37603 (tuple2!2169 lt!37608 lt!37607))) lt!37604)))))

(assert (= (and d!20171 c!12869) b!81518))

(assert (= (and d!20171 (not c!12869)) b!81519))

(assert (= (and d!20171 (not res!42360)) b!81520))

(declare-fun m!83761 () Bool)

(assert (=> d!20171 m!83761))

(declare-fun m!83763 () Bool)

(assert (=> b!81518 m!83763))

(declare-fun m!83765 () Bool)

(assert (=> b!81518 m!83765))

(assert (=> b!81518 m!83765))

(declare-fun m!83767 () Bool)

(assert (=> b!81518 m!83767))

(assert (=> b!81520 m!83765))

(assert (=> b!81520 m!83765))

(assert (=> b!81520 m!83767))

(assert (=> b!80739 d!20171))

(declare-fun d!20173 () Bool)

(declare-fun e!53192 () Bool)

(assert (=> d!20173 e!53192))

(declare-fun res!42362 () Bool)

(assert (=> d!20173 (=> (not res!42362) (not e!53192))))

(declare-fun lt!38128 () ListLongMap!1429)

(assert (=> d!20173 (= res!42362 (contains!739 lt!38128 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!38126 () List!1497)

(assert (=> d!20173 (= lt!38128 (ListLongMap!1430 lt!38126))))

(declare-fun lt!38125 () Unit!2322)

(declare-fun lt!38127 () Unit!2322)

(assert (=> d!20173 (= lt!38125 lt!38127)))

(assert (=> d!20173 (= (getValueByKey!139 lt!38126 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20173 (= lt!38127 (lemmaContainsTupThenGetReturnValue!56 lt!38126 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20173 (= lt!38126 (insertStrictlySorted!59 (toList!730 call!7502) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20173 (= (+!101 call!7502 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!38128)))

(declare-fun b!81521 () Bool)

(declare-fun res!42361 () Bool)

(assert (=> b!81521 (=> (not res!42361) (not e!53192))))

(assert (=> b!81521 (= res!42361 (= (getValueByKey!139 (toList!730 lt!38128) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!81522 () Bool)

(assert (=> b!81522 (= e!53192 (contains!742 (toList!730 lt!38128) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!20173 res!42362) b!81521))

(assert (= (and b!81521 res!42361) b!81522))

(declare-fun m!83769 () Bool)

(assert (=> d!20173 m!83769))

(declare-fun m!83771 () Bool)

(assert (=> d!20173 m!83771))

(declare-fun m!83773 () Bool)

(assert (=> d!20173 m!83773))

(declare-fun m!83775 () Bool)

(assert (=> d!20173 m!83775))

(declare-fun m!83777 () Bool)

(assert (=> b!81521 m!83777))

(declare-fun m!83779 () Bool)

(assert (=> b!81522 m!83779))

(assert (=> b!80739 d!20173))

(declare-fun d!20175 () Bool)

(declare-fun e!53193 () Bool)

(assert (=> d!20175 e!53193))

(declare-fun res!42364 () Bool)

(assert (=> d!20175 (=> (not res!42364) (not e!53193))))

(declare-fun lt!38132 () ListLongMap!1429)

(assert (=> d!20175 (= res!42364 (contains!739 lt!38132 (_1!1095 (tuple2!2169 lt!37608 lt!37607))))))

(declare-fun lt!38130 () List!1497)

(assert (=> d!20175 (= lt!38132 (ListLongMap!1430 lt!38130))))

(declare-fun lt!38129 () Unit!2322)

(declare-fun lt!38131 () Unit!2322)

(assert (=> d!20175 (= lt!38129 lt!38131)))

(assert (=> d!20175 (= (getValueByKey!139 lt!38130 (_1!1095 (tuple2!2169 lt!37608 lt!37607))) (Some!144 (_2!1095 (tuple2!2169 lt!37608 lt!37607))))))

(assert (=> d!20175 (= lt!38131 (lemmaContainsTupThenGetReturnValue!56 lt!38130 (_1!1095 (tuple2!2169 lt!37608 lt!37607)) (_2!1095 (tuple2!2169 lt!37608 lt!37607))))))

(assert (=> d!20175 (= lt!38130 (insertStrictlySorted!59 (toList!730 lt!37603) (_1!1095 (tuple2!2169 lt!37608 lt!37607)) (_2!1095 (tuple2!2169 lt!37608 lt!37607))))))

(assert (=> d!20175 (= (+!101 lt!37603 (tuple2!2169 lt!37608 lt!37607)) lt!38132)))

(declare-fun b!81523 () Bool)

(declare-fun res!42363 () Bool)

(assert (=> b!81523 (=> (not res!42363) (not e!53193))))

(assert (=> b!81523 (= res!42363 (= (getValueByKey!139 (toList!730 lt!38132) (_1!1095 (tuple2!2169 lt!37608 lt!37607))) (Some!144 (_2!1095 (tuple2!2169 lt!37608 lt!37607)))))))

(declare-fun b!81524 () Bool)

(assert (=> b!81524 (= e!53193 (contains!742 (toList!730 lt!38132) (tuple2!2169 lt!37608 lt!37607)))))

(assert (= (and d!20175 res!42364) b!81523))

(assert (= (and b!81523 res!42363) b!81524))

(declare-fun m!83781 () Bool)

(assert (=> d!20175 m!83781))

(declare-fun m!83783 () Bool)

(assert (=> d!20175 m!83783))

(declare-fun m!83785 () Bool)

(assert (=> d!20175 m!83785))

(declare-fun m!83787 () Bool)

(assert (=> d!20175 m!83787))

(declare-fun m!83789 () Bool)

(assert (=> b!81523 m!83789))

(declare-fun m!83791 () Bool)

(assert (=> b!81524 m!83791))

(assert (=> b!80739 d!20175))

(declare-fun d!20177 () Bool)

(assert (=> d!20177 (= (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37488)) (v!2616 (getValueByKey!139 (toList!730 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37488)))))

(assert (=> d!19831 d!20177))

(declare-fun b!81528 () Bool)

(declare-fun e!53195 () Option!145)

(assert (=> b!81528 (= e!53195 None!143)))

(declare-fun b!81527 () Bool)

(assert (=> b!81527 (= e!53195 (getValueByKey!139 (t!5156 (toList!730 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) lt!37488))))

(declare-fun d!20179 () Bool)

(declare-fun c!12870 () Bool)

(assert (=> d!20179 (= c!12870 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))) lt!37488)))))

(declare-fun e!53194 () Option!145)

(assert (=> d!20179 (= (getValueByKey!139 (toList!730 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37488) e!53194)))

(declare-fun b!81525 () Bool)

(assert (=> b!81525 (= e!53194 (Some!144 (_2!1095 (h!2082 (toList!730 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))))

(declare-fun b!81526 () Bool)

(assert (=> b!81526 (= e!53194 e!53195)))

(declare-fun c!12871 () Bool)

(assert (=> b!81526 (= c!12871 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (not (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))) lt!37488))))))

(assert (= (and d!20179 c!12870) b!81525))

(assert (= (and d!20179 (not c!12870)) b!81526))

(assert (= (and b!81526 c!12871) b!81527))

(assert (= (and b!81526 (not c!12871)) b!81528))

(declare-fun m!83793 () Bool)

(assert (=> b!81527 m!83793))

(assert (=> d!19831 d!20179))

(declare-fun d!20181 () Bool)

(assert (=> d!20181 (= ($colon$colon!69 e!52708 (ite c!12641 (h!2082 (toList!730 lt!37219)) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209)))) (Cons!1493 (ite c!12641 (h!2082 (toList!730 lt!37219)) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))) e!52708))))

(assert (=> bm!7498 d!20181))

(declare-fun b!81532 () Bool)

(declare-fun e!53197 () Option!145)

(assert (=> b!81532 (= e!53197 None!143)))

(declare-fun b!81531 () Bool)

(assert (=> b!81531 (= e!53197 (getValueByKey!139 (t!5156 (toList!730 lt!37616)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun c!12872 () Bool)

(declare-fun d!20183 () Bool)

(assert (=> d!20183 (= c!12872 (and ((_ is Cons!1493) (toList!730 lt!37616)) (= (_1!1095 (h!2082 (toList!730 lt!37616))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun e!53196 () Option!145)

(assert (=> d!20183 (= (getValueByKey!139 (toList!730 lt!37616) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) e!53196)))

(declare-fun b!81529 () Bool)

(assert (=> b!81529 (= e!53196 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37616)))))))

(declare-fun b!81530 () Bool)

(assert (=> b!81530 (= e!53196 e!53197)))

(declare-fun c!12873 () Bool)

(assert (=> b!81530 (= c!12873 (and ((_ is Cons!1493) (toList!730 lt!37616)) (not (= (_1!1095 (h!2082 (toList!730 lt!37616))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (= (and d!20183 c!12872) b!81529))

(assert (= (and d!20183 (not c!12872)) b!81530))

(assert (= (and b!81530 c!12873) b!81531))

(assert (= (and b!81530 (not c!12873)) b!81532))

(declare-fun m!83795 () Bool)

(assert (=> b!81531 m!83795))

(assert (=> b!80756 d!20183))

(declare-fun b!81551 () Bool)

(declare-fun e!53211 () SeekEntryResult!235)

(assert (=> b!81551 (= e!53211 (Intermediate!235 false (toIndex!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (mask!6298 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!81552 () Bool)

(declare-fun lt!38137 () SeekEntryResult!235)

(assert (=> b!81552 (and (bvsge (index!3077 lt!38137) #b00000000000000000000000000000000) (bvslt (index!3077 lt!38137) (size!2134 (_keys!3956 newMap!16))))))

(declare-fun res!42373 () Bool)

(assert (=> b!81552 (= res!42373 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3077 lt!38137)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun e!53208 () Bool)

(assert (=> b!81552 (=> res!42373 e!53208)))

(declare-fun e!53212 () Bool)

(assert (=> b!81552 (= e!53212 e!53208)))

(declare-fun d!20185 () Bool)

(declare-fun e!53209 () Bool)

(assert (=> d!20185 e!53209))

(declare-fun c!12881 () Bool)

(assert (=> d!20185 (= c!12881 (and ((_ is Intermediate!235) lt!38137) (undefined!1047 lt!38137)))))

(declare-fun e!53210 () SeekEntryResult!235)

(assert (=> d!20185 (= lt!38137 e!53210)))

(declare-fun c!12880 () Bool)

(assert (=> d!20185 (= c!12880 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!38138 () (_ BitVec 64))

(assert (=> d!20185 (= lt!38138 (select (arr!1892 (_keys!3956 newMap!16)) (toIndex!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (mask!6298 newMap!16))))))

(assert (=> d!20185 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20185 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (mask!6298 newMap!16)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)) lt!38137)))

(declare-fun b!81553 () Bool)

(assert (=> b!81553 (and (bvsge (index!3077 lt!38137) #b00000000000000000000000000000000) (bvslt (index!3077 lt!38137) (size!2134 (_keys!3956 newMap!16))))))

(assert (=> b!81553 (= e!53208 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3077 lt!38137)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81554 () Bool)

(assert (=> b!81554 (and (bvsge (index!3077 lt!38137) #b00000000000000000000000000000000) (bvslt (index!3077 lt!38137) (size!2134 (_keys!3956 newMap!16))))))

(declare-fun res!42371 () Bool)

(assert (=> b!81554 (= res!42371 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3077 lt!38137)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81554 (=> res!42371 e!53208)))

(declare-fun b!81555 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!81555 (= e!53211 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (mask!6298 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6298 newMap!16)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(declare-fun b!81556 () Bool)

(assert (=> b!81556 (= e!53209 e!53212)))

(declare-fun res!42372 () Bool)

(assert (=> b!81556 (= res!42372 (and ((_ is Intermediate!235) lt!38137) (not (undefined!1047 lt!38137)) (bvslt (x!11686 lt!38137) #b01111111111111111111111111111110) (bvsge (x!11686 lt!38137) #b00000000000000000000000000000000) (bvsge (x!11686 lt!38137) #b00000000000000000000000000000000)))))

(assert (=> b!81556 (=> (not res!42372) (not e!53212))))

(declare-fun b!81557 () Bool)

(assert (=> b!81557 (= e!53210 (Intermediate!235 true (toIndex!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (mask!6298 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!81558 () Bool)

(assert (=> b!81558 (= e!53210 e!53211)))

(declare-fun c!12882 () Bool)

(assert (=> b!81558 (= c!12882 (or (= lt!38138 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (= (bvadd lt!38138 lt!38138) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81559 () Bool)

(assert (=> b!81559 (= e!53209 (bvsge (x!11686 lt!38137) #b01111111111111111111111111111110))))

(assert (= (and d!20185 c!12880) b!81557))

(assert (= (and d!20185 (not c!12880)) b!81558))

(assert (= (and b!81558 c!12882) b!81551))

(assert (= (and b!81558 (not c!12882)) b!81555))

(assert (= (and d!20185 c!12881) b!81559))

(assert (= (and d!20185 (not c!12881)) b!81556))

(assert (= (and b!81556 res!42372) b!81552))

(assert (= (and b!81552 (not res!42373)) b!81554))

(assert (= (and b!81554 (not res!42371)) b!81553))

(declare-fun m!83797 () Bool)

(assert (=> b!81552 m!83797))

(assert (=> b!81553 m!83797))

(assert (=> d!20185 m!82899))

(declare-fun m!83799 () Bool)

(assert (=> d!20185 m!83799))

(assert (=> d!20185 m!82223))

(assert (=> b!81554 m!83797))

(assert (=> b!81555 m!82899))

(declare-fun m!83801 () Bool)

(assert (=> b!81555 m!83801))

(assert (=> b!81555 m!83801))

(assert (=> b!81555 m!81737))

(declare-fun m!83803 () Bool)

(assert (=> b!81555 m!83803))

(assert (=> d!19905 d!20185))

(declare-fun d!20187 () Bool)

(declare-fun lt!38144 () (_ BitVec 32))

(declare-fun lt!38143 () (_ BitVec 32))

(assert (=> d!20187 (= lt!38144 (bvmul (bvxor lt!38143 (bvlshr lt!38143 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!20187 (= lt!38143 ((_ extract 31 0) (bvand (bvxor (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvlshr (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!20187 (and (bvsge (mask!6298 newMap!16) #b00000000000000000000000000000000) (let ((res!42374 (let ((h!2087 ((_ extract 31 0) (bvand (bvxor (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvlshr (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11788 (bvmul (bvxor h!2087 (bvlshr h!2087 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11788 (bvlshr x!11788 #b00000000000000000000000000001101)) (mask!6298 newMap!16)))))) (and (bvslt res!42374 (bvadd (mask!6298 newMap!16) #b00000000000000000000000000000001)) (bvsge res!42374 #b00000000000000000000000000000000))))))

(assert (=> d!20187 (= (toIndex!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (mask!6298 newMap!16)) (bvand (bvxor lt!38144 (bvlshr lt!38144 #b00000000000000000000000000001101)) (mask!6298 newMap!16)))))

(assert (=> d!19905 d!20187))

(assert (=> d!19905 d!20023))

(declare-fun d!20189 () Bool)

(assert (not d!20189))

(assert (=> b!80782 d!20189))

(declare-fun d!20191 () Bool)

(declare-fun res!42375 () Bool)

(declare-fun e!53213 () Bool)

(assert (=> d!20191 (=> res!42375 e!53213)))

(assert (=> d!20191 (= res!42375 (and ((_ is Cons!1493) lt!37556) (= (_1!1095 (h!2082 lt!37556)) (_1!1095 lt!37210))))))

(assert (=> d!20191 (= (containsKey!142 lt!37556 (_1!1095 lt!37210)) e!53213)))

(declare-fun b!81560 () Bool)

(declare-fun e!53214 () Bool)

(assert (=> b!81560 (= e!53213 e!53214)))

(declare-fun res!42376 () Bool)

(assert (=> b!81560 (=> (not res!42376) (not e!53214))))

(assert (=> b!81560 (= res!42376 (and (or (not ((_ is Cons!1493) lt!37556)) (bvsle (_1!1095 (h!2082 lt!37556)) (_1!1095 lt!37210))) ((_ is Cons!1493) lt!37556) (bvslt (_1!1095 (h!2082 lt!37556)) (_1!1095 lt!37210))))))

(declare-fun b!81561 () Bool)

(assert (=> b!81561 (= e!53214 (containsKey!142 (t!5156 lt!37556) (_1!1095 lt!37210)))))

(assert (= (and d!20191 (not res!42375)) b!81560))

(assert (= (and b!81560 res!42376) b!81561))

(declare-fun m!83805 () Bool)

(assert (=> b!81561 m!83805))

(assert (=> b!81100 d!20191))

(assert (=> d!19869 d!20023))

(declare-fun d!20193 () Bool)

(assert (=> d!20193 (isDefined!91 (getValueByKey!139 (toList!730 call!7453) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))

(declare-fun lt!38145 () Unit!2322)

(assert (=> d!20193 (= lt!38145 (choose!487 (toList!730 call!7453) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))

(declare-fun e!53215 () Bool)

(assert (=> d!20193 e!53215))

(declare-fun res!42377 () Bool)

(assert (=> d!20193 (=> (not res!42377) (not e!53215))))

(assert (=> d!20193 (= res!42377 (isStrictlySorted!283 (toList!730 call!7453)))))

(assert (=> d!20193 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 call!7453) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))) lt!38145)))

(declare-fun b!81562 () Bool)

(assert (=> b!81562 (= e!53215 (containsKey!142 (toList!730 call!7453) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))

(assert (= (and d!20193 res!42377) b!81562))

(assert (=> d!20193 m!81971))

(assert (=> d!20193 m!82695))

(assert (=> d!20193 m!82695))

(assert (=> d!20193 m!82697))

(assert (=> d!20193 m!81971))

(declare-fun m!83807 () Bool)

(assert (=> d!20193 m!83807))

(declare-fun m!83809 () Bool)

(assert (=> d!20193 m!83809))

(assert (=> b!81562 m!81971))

(assert (=> b!81562 m!82691))

(assert (=> b!80910 d!20193))

(declare-fun d!20195 () Bool)

(assert (=> d!20195 (= (isDefined!91 (getValueByKey!139 (toList!730 call!7453) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405)))) (not (isEmpty!337 (getValueByKey!139 (toList!730 call!7453) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))))

(declare-fun bs!3451 () Bool)

(assert (= bs!3451 d!20195))

(assert (=> bs!3451 m!82695))

(declare-fun m!83811 () Bool)

(assert (=> bs!3451 m!83811))

(assert (=> b!80910 d!20195))

(declare-fun b!81566 () Bool)

(declare-fun e!53217 () Option!145)

(assert (=> b!81566 (= e!53217 None!143)))

(declare-fun b!81565 () Bool)

(assert (=> b!81565 (= e!53217 (getValueByKey!139 (t!5156 (toList!730 call!7453)) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))

(declare-fun c!12883 () Bool)

(declare-fun d!20197 () Bool)

(assert (=> d!20197 (= c!12883 (and ((_ is Cons!1493) (toList!730 call!7453)) (= (_1!1095 (h!2082 (toList!730 call!7453))) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405)))))))

(declare-fun e!53216 () Option!145)

(assert (=> d!20197 (= (getValueByKey!139 (toList!730 call!7453) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))) e!53216)))

(declare-fun b!81563 () Bool)

(assert (=> b!81563 (= e!53216 (Some!144 (_2!1095 (h!2082 (toList!730 call!7453)))))))

(declare-fun b!81564 () Bool)

(assert (=> b!81564 (= e!53216 e!53217)))

(declare-fun c!12884 () Bool)

(assert (=> b!81564 (= c!12884 (and ((_ is Cons!1493) (toList!730 call!7453)) (not (= (_1!1095 (h!2082 (toList!730 call!7453))) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405))))))))

(assert (= (and d!20197 c!12883) b!81563))

(assert (= (and d!20197 (not c!12883)) b!81564))

(assert (= (and b!81564 c!12884) b!81565))

(assert (= (and b!81564 (not c!12884)) b!81566))

(assert (=> b!81565 m!81971))

(declare-fun m!83813 () Bool)

(assert (=> b!81565 m!83813))

(assert (=> b!80910 d!20197))

(assert (=> b!80912 d!20195))

(assert (=> b!80912 d!20197))

(declare-fun d!20199 () Bool)

(declare-fun res!42378 () Bool)

(declare-fun e!53218 () Bool)

(assert (=> d!20199 (=> res!42378 e!53218)))

(assert (=> d!20199 (= res!42378 (and ((_ is Cons!1493) (toList!730 lt!37550)) (= (_1!1095 (h!2082 (toList!730 lt!37550))) (_1!1095 lt!37209))))))

(assert (=> d!20199 (= (containsKey!142 (toList!730 lt!37550) (_1!1095 lt!37209)) e!53218)))

(declare-fun b!81567 () Bool)

(declare-fun e!53219 () Bool)

(assert (=> b!81567 (= e!53218 e!53219)))

(declare-fun res!42379 () Bool)

(assert (=> b!81567 (=> (not res!42379) (not e!53219))))

(assert (=> b!81567 (= res!42379 (and (or (not ((_ is Cons!1493) (toList!730 lt!37550))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37550))) (_1!1095 lt!37209))) ((_ is Cons!1493) (toList!730 lt!37550)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37550))) (_1!1095 lt!37209))))))

(declare-fun b!81568 () Bool)

(assert (=> b!81568 (= e!53219 (containsKey!142 (t!5156 (toList!730 lt!37550)) (_1!1095 lt!37209)))))

(assert (= (and d!20199 (not res!42378)) b!81567))

(assert (= (and b!81567 res!42379) b!81568))

(declare-fun m!83815 () Bool)

(assert (=> b!81568 m!83815))

(assert (=> d!19907 d!20199))

(declare-fun d!20201 () Bool)

(assert (=> d!20201 (isDefined!91 (getValueByKey!139 (toList!730 lt!37536) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38146 () Unit!2322)

(assert (=> d!20201 (= lt!38146 (choose!487 (toList!730 lt!37536) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53220 () Bool)

(assert (=> d!20201 e!53220))

(declare-fun res!42380 () Bool)

(assert (=> d!20201 (=> (not res!42380) (not e!53220))))

(assert (=> d!20201 (= res!42380 (isStrictlySorted!283 (toList!730 lt!37536)))))

(assert (=> d!20201 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37536) #b0000000000000000000000000000000000000000000000000000000000000000) lt!38146)))

(declare-fun b!81569 () Bool)

(assert (=> b!81569 (= e!53220 (containsKey!142 (toList!730 lt!37536) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20201 res!42380) b!81569))

(assert (=> d!20201 m!82273))

(assert (=> d!20201 m!82273))

(assert (=> d!20201 m!82275))

(declare-fun m!83817 () Bool)

(assert (=> d!20201 m!83817))

(declare-fun m!83819 () Bool)

(assert (=> d!20201 m!83819))

(assert (=> b!81569 m!82269))

(assert (=> b!80729 d!20201))

(declare-fun d!20203 () Bool)

(assert (=> d!20203 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37536) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37536) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3452 () Bool)

(assert (= bs!3452 d!20203))

(assert (=> bs!3452 m!82273))

(declare-fun m!83821 () Bool)

(assert (=> bs!3452 m!83821))

(assert (=> b!80729 d!20203))

(declare-fun b!81573 () Bool)

(declare-fun e!53222 () Option!145)

(assert (=> b!81573 (= e!53222 None!143)))

(declare-fun b!81572 () Bool)

(assert (=> b!81572 (= e!53222 (getValueByKey!139 (t!5156 (toList!730 lt!37536)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!20205 () Bool)

(declare-fun c!12885 () Bool)

(assert (=> d!20205 (= c!12885 (and ((_ is Cons!1493) (toList!730 lt!37536)) (= (_1!1095 (h!2082 (toList!730 lt!37536))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53221 () Option!145)

(assert (=> d!20205 (= (getValueByKey!139 (toList!730 lt!37536) #b0000000000000000000000000000000000000000000000000000000000000000) e!53221)))

(declare-fun b!81570 () Bool)

(assert (=> b!81570 (= e!53221 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37536)))))))

(declare-fun b!81571 () Bool)

(assert (=> b!81571 (= e!53221 e!53222)))

(declare-fun c!12886 () Bool)

(assert (=> b!81571 (= c!12886 (and ((_ is Cons!1493) (toList!730 lt!37536)) (not (= (_1!1095 (h!2082 (toList!730 lt!37536))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!20205 c!12885) b!81570))

(assert (= (and d!20205 (not c!12885)) b!81571))

(assert (= (and b!81571 c!12886) b!81572))

(assert (= (and b!81571 (not c!12886)) b!81573))

(declare-fun m!83823 () Bool)

(assert (=> b!81572 m!83823))

(assert (=> b!80729 d!20205))

(declare-fun b!81577 () Bool)

(declare-fun e!53224 () Option!145)

(assert (=> b!81577 (= e!53224 None!143)))

(declare-fun b!81576 () Bool)

(assert (=> b!81576 (= e!53224 (getValueByKey!139 (t!5156 (toList!730 lt!37858)) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun d!20207 () Bool)

(declare-fun c!12887 () Bool)

(assert (=> d!20207 (= c!12887 (and ((_ is Cons!1493) (toList!730 lt!37858)) (= (_1!1095 (h!2082 (toList!730 lt!37858))) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun e!53223 () Option!145)

(assert (=> d!20207 (= (getValueByKey!139 (toList!730 lt!37858) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) e!53223)))

(declare-fun b!81574 () Bool)

(assert (=> b!81574 (= e!53223 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37858)))))))

(declare-fun b!81575 () Bool)

(assert (=> b!81575 (= e!53223 e!53224)))

(declare-fun c!12888 () Bool)

(assert (=> b!81575 (= c!12888 (and ((_ is Cons!1493) (toList!730 lt!37858)) (not (= (_1!1095 (h!2082 (toList!730 lt!37858))) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))))

(assert (= (and d!20207 c!12887) b!81574))

(assert (= (and d!20207 (not c!12887)) b!81575))

(assert (= (and b!81575 c!12888) b!81576))

(assert (= (and b!81575 (not c!12888)) b!81577))

(declare-fun m!83825 () Bool)

(assert (=> b!81576 m!83825))

(assert (=> b!81018 d!20207))

(declare-fun d!20209 () Bool)

(assert (=> d!20209 (arrayContainsKey!0 (_keys!3956 newMap!16) lt!37958 #b00000000000000000000000000000000)))

(declare-fun lt!38149 () Unit!2322)

(declare-fun choose!13 (array!3971 (_ BitVec 64) (_ BitVec 32)) Unit!2322)

(assert (=> d!20209 (= lt!38149 (choose!13 (_keys!3956 newMap!16) lt!37958 #b00000000000000000000000000000000))))

(assert (=> d!20209 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!20209 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3956 newMap!16) lt!37958 #b00000000000000000000000000000000) lt!38149)))

(declare-fun bs!3453 () Bool)

(assert (= bs!3453 d!20209))

(assert (=> bs!3453 m!83161))

(declare-fun m!83827 () Bool)

(assert (=> bs!3453 m!83827))

(assert (=> b!81192 d!20209))

(declare-fun d!20211 () Bool)

(declare-fun res!42381 () Bool)

(declare-fun e!53225 () Bool)

(assert (=> d!20211 (=> res!42381 e!53225)))

(assert (=> d!20211 (= res!42381 (= (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) lt!37958))))

(assert (=> d!20211 (= (arrayContainsKey!0 (_keys!3956 newMap!16) lt!37958 #b00000000000000000000000000000000) e!53225)))

(declare-fun b!81578 () Bool)

(declare-fun e!53226 () Bool)

(assert (=> b!81578 (= e!53225 e!53226)))

(declare-fun res!42382 () Bool)

(assert (=> b!81578 (=> (not res!42382) (not e!53226))))

(assert (=> b!81578 (= res!42382 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81579 () Bool)

(assert (=> b!81579 (= e!53226 (arrayContainsKey!0 (_keys!3956 newMap!16) lt!37958 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!20211 (not res!42381)) b!81578))

(assert (= (and b!81578 res!42382) b!81579))

(assert (=> d!20211 m!82381))

(declare-fun m!83829 () Bool)

(assert (=> b!81579 m!83829))

(assert (=> b!81192 d!20211))

(declare-fun b!81580 () Bool)

(declare-fun e!53229 () SeekEntryResult!235)

(assert (=> b!81580 (= e!53229 Undefined!235)))

(declare-fun b!81581 () Bool)

(declare-fun e!53227 () SeekEntryResult!235)

(assert (=> b!81581 (= e!53229 e!53227)))

(declare-fun lt!38152 () (_ BitVec 64))

(declare-fun lt!38151 () SeekEntryResult!235)

(assert (=> b!81581 (= lt!38152 (select (arr!1892 (_keys!3956 newMap!16)) (index!3077 lt!38151)))))

(declare-fun c!12890 () Bool)

(assert (=> b!81581 (= c!12890 (= lt!38152 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81582 () Bool)

(assert (=> b!81582 (= e!53227 (Found!235 (index!3077 lt!38151)))))

(declare-fun b!81583 () Bool)

(declare-fun c!12889 () Bool)

(assert (=> b!81583 (= c!12889 (= lt!38152 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53228 () SeekEntryResult!235)

(assert (=> b!81583 (= e!53227 e!53228)))

(declare-fun d!20213 () Bool)

(declare-fun lt!38150 () SeekEntryResult!235)

(assert (=> d!20213 (and (or ((_ is Undefined!235) lt!38150) (not ((_ is Found!235) lt!38150)) (and (bvsge (index!3076 lt!38150) #b00000000000000000000000000000000) (bvslt (index!3076 lt!38150) (size!2134 (_keys!3956 newMap!16))))) (or ((_ is Undefined!235) lt!38150) ((_ is Found!235) lt!38150) (not ((_ is MissingZero!235) lt!38150)) (and (bvsge (index!3075 lt!38150) #b00000000000000000000000000000000) (bvslt (index!3075 lt!38150) (size!2134 (_keys!3956 newMap!16))))) (or ((_ is Undefined!235) lt!38150) ((_ is Found!235) lt!38150) ((_ is MissingZero!235) lt!38150) (not ((_ is MissingVacant!235) lt!38150)) (and (bvsge (index!3078 lt!38150) #b00000000000000000000000000000000) (bvslt (index!3078 lt!38150) (size!2134 (_keys!3956 newMap!16))))) (or ((_ is Undefined!235) lt!38150) (ite ((_ is Found!235) lt!38150) (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!38150)) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!235) lt!38150) (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3075 lt!38150)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!235) lt!38150) (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3078 lt!38150)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20213 (= lt!38150 e!53229)))

(declare-fun c!12891 () Bool)

(assert (=> d!20213 (= c!12891 (and ((_ is Intermediate!235) lt!38151) (undefined!1047 lt!38151)))))

(assert (=> d!20213 (= lt!38151 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) (mask!6298 newMap!16)) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(assert (=> d!20213 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20213 (= (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) (_keys!3956 newMap!16) (mask!6298 newMap!16)) lt!38150)))

(declare-fun b!81584 () Bool)

(assert (=> b!81584 (= e!53228 (seekKeyOrZeroReturnVacant!0 (x!11686 lt!38151) (index!3077 lt!38151) (index!3077 lt!38151) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(declare-fun b!81585 () Bool)

(assert (=> b!81585 (= e!53228 (MissingZero!235 (index!3077 lt!38151)))))

(assert (= (and d!20213 c!12891) b!81580))

(assert (= (and d!20213 (not c!12891)) b!81581))

(assert (= (and b!81581 c!12890) b!81582))

(assert (= (and b!81581 (not c!12890)) b!81583))

(assert (= (and b!81583 c!12889) b!81585))

(assert (= (and b!81583 (not c!12889)) b!81584))

(declare-fun m!83831 () Bool)

(assert (=> b!81581 m!83831))

(declare-fun m!83833 () Bool)

(assert (=> d!20213 m!83833))

(declare-fun m!83835 () Bool)

(assert (=> d!20213 m!83835))

(declare-fun m!83837 () Bool)

(assert (=> d!20213 m!83837))

(assert (=> d!20213 m!82381))

(declare-fun m!83839 () Bool)

(assert (=> d!20213 m!83839))

(assert (=> d!20213 m!82223))

(declare-fun m!83841 () Bool)

(assert (=> d!20213 m!83841))

(assert (=> d!20213 m!82381))

(assert (=> d!20213 m!83837))

(assert (=> b!81584 m!82381))

(declare-fun m!83843 () Bool)

(assert (=> b!81584 m!83843))

(assert (=> b!81192 d!20213))

(declare-fun d!20215 () Bool)

(assert (=> d!20215 (= (get!1192 (getValueByKey!139 (toList!730 lt!37483) lt!37485)) (v!2616 (getValueByKey!139 (toList!730 lt!37483) lt!37485)))))

(assert (=> d!19843 d!20215))

(declare-fun b!81589 () Bool)

(declare-fun e!53231 () Option!145)

(assert (=> b!81589 (= e!53231 None!143)))

(declare-fun b!81588 () Bool)

(assert (=> b!81588 (= e!53231 (getValueByKey!139 (t!5156 (toList!730 lt!37483)) lt!37485))))

(declare-fun d!20217 () Bool)

(declare-fun c!12892 () Bool)

(assert (=> d!20217 (= c!12892 (and ((_ is Cons!1493) (toList!730 lt!37483)) (= (_1!1095 (h!2082 (toList!730 lt!37483))) lt!37485)))))

(declare-fun e!53230 () Option!145)

(assert (=> d!20217 (= (getValueByKey!139 (toList!730 lt!37483) lt!37485) e!53230)))

(declare-fun b!81586 () Bool)

(assert (=> b!81586 (= e!53230 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37483)))))))

(declare-fun b!81587 () Bool)

(assert (=> b!81587 (= e!53230 e!53231)))

(declare-fun c!12893 () Bool)

(assert (=> b!81587 (= c!12893 (and ((_ is Cons!1493) (toList!730 lt!37483)) (not (= (_1!1095 (h!2082 (toList!730 lt!37483))) lt!37485))))))

(assert (= (and d!20217 c!12892) b!81586))

(assert (= (and d!20217 (not c!12892)) b!81587))

(assert (= (and b!81587 c!12893) b!81588))

(assert (= (and b!81587 (not c!12893)) b!81589))

(declare-fun m!83845 () Bool)

(assert (=> b!81588 m!83845))

(assert (=> d!19843 d!20217))

(declare-fun d!20219 () Bool)

(declare-fun e!53232 () Bool)

(assert (=> d!20219 e!53232))

(declare-fun res!42383 () Bool)

(assert (=> d!20219 (=> res!42383 e!53232)))

(declare-fun lt!38154 () Bool)

(assert (=> d!20219 (= res!42383 (not lt!38154))))

(declare-fun lt!38153 () Bool)

(assert (=> d!20219 (= lt!38154 lt!38153)))

(declare-fun lt!38155 () Unit!2322)

(declare-fun e!53233 () Unit!2322)

(assert (=> d!20219 (= lt!38155 e!53233)))

(declare-fun c!12894 () Bool)

(assert (=> d!20219 (= c!12894 lt!38153)))

(assert (=> d!20219 (= lt!38153 (containsKey!142 (toList!730 lt!37632) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20219 (= (contains!739 lt!37632 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38154)))

(declare-fun b!81590 () Bool)

(declare-fun lt!38156 () Unit!2322)

(assert (=> b!81590 (= e!53233 lt!38156)))

(assert (=> b!81590 (= lt!38156 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37632) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> b!81590 (isDefined!91 (getValueByKey!139 (toList!730 lt!37632) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!81591 () Bool)

(declare-fun Unit!2376 () Unit!2322)

(assert (=> b!81591 (= e!53233 Unit!2376)))

(declare-fun b!81592 () Bool)

(assert (=> b!81592 (= e!53232 (isDefined!91 (getValueByKey!139 (toList!730 lt!37632) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (= (and d!20219 c!12894) b!81590))

(assert (= (and d!20219 (not c!12894)) b!81591))

(assert (= (and d!20219 (not res!42383)) b!81592))

(declare-fun m!83847 () Bool)

(assert (=> d!20219 m!83847))

(declare-fun m!83849 () Bool)

(assert (=> b!81590 m!83849))

(assert (=> b!81590 m!82393))

(assert (=> b!81590 m!82393))

(declare-fun m!83851 () Bool)

(assert (=> b!81590 m!83851))

(assert (=> b!81592 m!82393))

(assert (=> b!81592 m!82393))

(assert (=> b!81592 m!83851))

(assert (=> d!19781 d!20219))

(declare-fun b!81596 () Bool)

(declare-fun e!53235 () Option!145)

(assert (=> b!81596 (= e!53235 None!143)))

(declare-fun b!81595 () Bool)

(assert (=> b!81595 (= e!53235 (getValueByKey!139 (t!5156 lt!37630) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun c!12895 () Bool)

(declare-fun d!20221 () Bool)

(assert (=> d!20221 (= c!12895 (and ((_ is Cons!1493) lt!37630) (= (_1!1095 (h!2082 lt!37630)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun e!53234 () Option!145)

(assert (=> d!20221 (= (getValueByKey!139 lt!37630 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) e!53234)))

(declare-fun b!81593 () Bool)

(assert (=> b!81593 (= e!53234 (Some!144 (_2!1095 (h!2082 lt!37630))))))

(declare-fun b!81594 () Bool)

(assert (=> b!81594 (= e!53234 e!53235)))

(declare-fun c!12896 () Bool)

(assert (=> b!81594 (= c!12896 (and ((_ is Cons!1493) lt!37630) (not (= (_1!1095 (h!2082 lt!37630)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (= (and d!20221 c!12895) b!81593))

(assert (= (and d!20221 (not c!12895)) b!81594))

(assert (= (and b!81594 c!12896) b!81595))

(assert (= (and b!81594 (not c!12896)) b!81596))

(declare-fun m!83853 () Bool)

(assert (=> b!81595 m!83853))

(assert (=> d!19781 d!20221))

(declare-fun d!20223 () Bool)

(assert (=> d!20223 (= (getValueByKey!139 lt!37630 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun lt!38157 () Unit!2322)

(assert (=> d!20223 (= lt!38157 (choose!478 lt!37630 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun e!53236 () Bool)

(assert (=> d!20223 e!53236))

(declare-fun res!42384 () Bool)

(assert (=> d!20223 (=> (not res!42384) (not e!53236))))

(assert (=> d!20223 (= res!42384 (isStrictlySorted!283 lt!37630))))

(assert (=> d!20223 (= (lemmaContainsTupThenGetReturnValue!56 lt!37630 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38157)))

(declare-fun b!81597 () Bool)

(declare-fun res!42385 () Bool)

(assert (=> b!81597 (=> (not res!42385) (not e!53236))))

(assert (=> b!81597 (= res!42385 (containsKey!142 lt!37630 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!81598 () Bool)

(assert (=> b!81598 (= e!53236 (contains!742 lt!37630 (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (= (and d!20223 res!42384) b!81597))

(assert (= (and b!81597 res!42385) b!81598))

(assert (=> d!20223 m!82387))

(declare-fun m!83855 () Bool)

(assert (=> d!20223 m!83855))

(declare-fun m!83857 () Bool)

(assert (=> d!20223 m!83857))

(declare-fun m!83859 () Bool)

(assert (=> b!81597 m!83859))

(declare-fun m!83861 () Bool)

(assert (=> b!81598 m!83861))

(assert (=> d!19781 d!20223))

(declare-fun bm!7602 () Bool)

(declare-fun call!7606 () List!1497)

(declare-fun call!7607 () List!1497)

(assert (=> bm!7602 (= call!7606 call!7607)))

(declare-fun lt!38158 () List!1497)

(declare-fun b!81599 () Bool)

(declare-fun e!53237 () Bool)

(assert (=> b!81599 (= e!53237 (contains!742 lt!38158 (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!81600 () Bool)

(declare-fun e!53238 () List!1497)

(declare-fun e!53241 () List!1497)

(assert (=> b!81600 (= e!53238 e!53241)))

(declare-fun c!12900 () Bool)

(assert (=> b!81600 (= c!12900 (and ((_ is Cons!1493) (toList!730 lt!37211)) (= (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun bm!7603 () Bool)

(declare-fun call!7605 () List!1497)

(assert (=> bm!7603 (= call!7605 call!7606)))

(declare-fun d!20225 () Bool)

(assert (=> d!20225 e!53237))

(declare-fun res!42386 () Bool)

(assert (=> d!20225 (=> (not res!42386) (not e!53237))))

(assert (=> d!20225 (= res!42386 (isStrictlySorted!283 lt!38158))))

(assert (=> d!20225 (= lt!38158 e!53238)))

(declare-fun c!12897 () Bool)

(assert (=> d!20225 (= c!12897 (and ((_ is Cons!1493) (toList!730 lt!37211)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> d!20225 (isStrictlySorted!283 (toList!730 lt!37211))))

(assert (=> d!20225 (= (insertStrictlySorted!59 (toList!730 lt!37211) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38158)))

(declare-fun e!53239 () List!1497)

(declare-fun bm!7604 () Bool)

(assert (=> bm!7604 (= call!7607 ($colon$colon!69 e!53239 (ite c!12897 (h!2082 (toList!730 lt!37211)) (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(declare-fun c!12899 () Bool)

(assert (=> bm!7604 (= c!12899 c!12897)))

(declare-fun b!81601 () Bool)

(declare-fun e!53240 () List!1497)

(assert (=> b!81601 (= e!53240 call!7605)))

(declare-fun b!81602 () Bool)

(declare-fun res!42387 () Bool)

(assert (=> b!81602 (=> (not res!42387) (not e!53237))))

(assert (=> b!81602 (= res!42387 (containsKey!142 lt!38158 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun c!12898 () Bool)

(declare-fun b!81603 () Bool)

(assert (=> b!81603 (= c!12898 (and ((_ is Cons!1493) (toList!730 lt!37211)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> b!81603 (= e!53241 e!53240)))

(declare-fun b!81604 () Bool)

(assert (=> b!81604 (= e!53239 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37211)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!81605 () Bool)

(assert (=> b!81605 (= e!53241 call!7606)))

(declare-fun b!81606 () Bool)

(assert (=> b!81606 (= e!53240 call!7605)))

(declare-fun b!81607 () Bool)

(assert (=> b!81607 (= e!53239 (ite c!12900 (t!5156 (toList!730 lt!37211)) (ite c!12898 (Cons!1493 (h!2082 (toList!730 lt!37211)) (t!5156 (toList!730 lt!37211))) Nil!1494)))))

(declare-fun b!81608 () Bool)

(assert (=> b!81608 (= e!53238 call!7607)))

(assert (= (and d!20225 c!12897) b!81608))

(assert (= (and d!20225 (not c!12897)) b!81600))

(assert (= (and b!81600 c!12900) b!81605))

(assert (= (and b!81600 (not c!12900)) b!81603))

(assert (= (and b!81603 c!12898) b!81606))

(assert (= (and b!81603 (not c!12898)) b!81601))

(assert (= (or b!81606 b!81601) bm!7603))

(assert (= (or b!81605 bm!7603) bm!7602))

(assert (= (or b!81608 bm!7602) bm!7604))

(assert (= (and bm!7604 c!12899) b!81604))

(assert (= (and bm!7604 (not c!12899)) b!81607))

(assert (= (and d!20225 res!42386) b!81602))

(assert (= (and b!81602 res!42387) b!81599))

(declare-fun m!83863 () Bool)

(assert (=> b!81604 m!83863))

(declare-fun m!83865 () Bool)

(assert (=> bm!7604 m!83865))

(declare-fun m!83867 () Bool)

(assert (=> b!81599 m!83867))

(declare-fun m!83869 () Bool)

(assert (=> d!20225 m!83869))

(assert (=> d!20225 m!82931))

(declare-fun m!83871 () Bool)

(assert (=> b!81602 m!83871))

(assert (=> d!19781 d!20225))

(declare-fun d!20227 () Bool)

(assert (=> d!20227 (= ($colon$colon!69 e!52904 (ite c!12732 (h!2082 (toList!730 lt!37211)) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209)))) (Cons!1493 (ite c!12732 (h!2082 (toList!730 lt!37211)) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))) e!52904))))

(assert (=> bm!7542 d!20227))

(declare-fun b!81609 () Bool)

(declare-fun e!53244 () Bool)

(declare-fun call!7608 () Bool)

(assert (=> b!81609 (= e!53244 call!7608)))

(declare-fun b!81610 () Bool)

(declare-fun e!53243 () Bool)

(assert (=> b!81610 (= e!53243 e!53244)))

(declare-fun c!12901 () Bool)

(assert (=> b!81610 (= c!12901 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!20229 () Bool)

(declare-fun res!42390 () Bool)

(declare-fun e!53245 () Bool)

(assert (=> d!20229 (=> res!42390 e!53245)))

(assert (=> d!20229 (= res!42390 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!20229 (= (arrayNoDuplicates!0 (_keys!3956 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12686 (Cons!1494 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) Nil!1495) Nil!1495)) e!53245)))

(declare-fun b!81611 () Bool)

(assert (=> b!81611 (= e!53245 e!53243)))

(declare-fun res!42389 () Bool)

(assert (=> b!81611 (=> (not res!42389) (not e!53243))))

(declare-fun e!53242 () Bool)

(assert (=> b!81611 (= res!42389 (not e!53242))))

(declare-fun res!42388 () Bool)

(assert (=> b!81611 (=> (not res!42388) (not e!53242))))

(assert (=> b!81611 (= res!42388 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!81612 () Bool)

(assert (=> b!81612 (= e!53242 (contains!741 (ite c!12686 (Cons!1494 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) Nil!1495) Nil!1495) (select (arr!1892 (_keys!3956 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!81613 () Bool)

(assert (=> b!81613 (= e!53244 call!7608)))

(declare-fun bm!7605 () Bool)

(assert (=> bm!7605 (= call!7608 (arrayNoDuplicates!0 (_keys!3956 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12901 (Cons!1494 (select (arr!1892 (_keys!3956 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!12686 (Cons!1494 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) Nil!1495) Nil!1495)) (ite c!12686 (Cons!1494 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) Nil!1495) Nil!1495))))))

(assert (= (and d!20229 (not res!42390)) b!81611))

(assert (= (and b!81611 res!42388) b!81612))

(assert (= (and b!81611 res!42389) b!81610))

(assert (= (and b!81610 c!12901) b!81613))

(assert (= (and b!81610 (not c!12901)) b!81609))

(assert (= (or b!81613 b!81609) bm!7605))

(assert (=> b!81610 m!83525))

(assert (=> b!81610 m!83525))

(assert (=> b!81610 m!83527))

(assert (=> b!81611 m!83525))

(assert (=> b!81611 m!83525))

(assert (=> b!81611 m!83527))

(assert (=> b!81612 m!83525))

(assert (=> b!81612 m!83525))

(declare-fun m!83873 () Bool)

(assert (=> b!81612 m!83873))

(assert (=> bm!7605 m!83525))

(declare-fun m!83875 () Bool)

(assert (=> bm!7605 m!83875))

(assert (=> bm!7519 d!20229))

(declare-fun b!81626 () Bool)

(declare-fun e!53253 () SeekEntryResult!235)

(assert (=> b!81626 (= e!53253 Undefined!235)))

(declare-fun b!81627 () Bool)

(declare-fun e!53252 () SeekEntryResult!235)

(assert (=> b!81627 (= e!53252 (Found!235 (index!3077 lt!37866)))))

(declare-fun b!81628 () Bool)

(declare-fun c!12909 () Bool)

(declare-fun lt!38163 () (_ BitVec 64))

(assert (=> b!81628 (= c!12909 (= lt!38163 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53254 () SeekEntryResult!235)

(assert (=> b!81628 (= e!53252 e!53254)))

(declare-fun lt!38164 () SeekEntryResult!235)

(declare-fun d!20231 () Bool)

(assert (=> d!20231 (and (or ((_ is Undefined!235) lt!38164) (not ((_ is Found!235) lt!38164)) (and (bvsge (index!3076 lt!38164) #b00000000000000000000000000000000) (bvslt (index!3076 lt!38164) (size!2134 (_keys!3956 newMap!16))))) (or ((_ is Undefined!235) lt!38164) ((_ is Found!235) lt!38164) (not ((_ is MissingVacant!235) lt!38164)) (not (= (index!3078 lt!38164) (index!3077 lt!37866))) (and (bvsge (index!3078 lt!38164) #b00000000000000000000000000000000) (bvslt (index!3078 lt!38164) (size!2134 (_keys!3956 newMap!16))))) (or ((_ is Undefined!235) lt!38164) (ite ((_ is Found!235) lt!38164) (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!38164)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (and ((_ is MissingVacant!235) lt!38164) (= (index!3078 lt!38164) (index!3077 lt!37866)) (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3078 lt!38164)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!20231 (= lt!38164 e!53253)))

(declare-fun c!12910 () Bool)

(assert (=> d!20231 (= c!12910 (bvsge (x!11686 lt!37866) #b01111111111111111111111111111110))))

(assert (=> d!20231 (= lt!38163 (select (arr!1892 (_keys!3956 newMap!16)) (index!3077 lt!37866)))))

(assert (=> d!20231 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20231 (= (seekKeyOrZeroReturnVacant!0 (x!11686 lt!37866) (index!3077 lt!37866) (index!3077 lt!37866) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)) lt!38164)))

(declare-fun b!81629 () Bool)

(assert (=> b!81629 (= e!53254 (MissingVacant!235 (index!3077 lt!37866)))))

(declare-fun b!81630 () Bool)

(assert (=> b!81630 (= e!53254 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11686 lt!37866) #b00000000000000000000000000000001) (nextIndex!0 (index!3077 lt!37866) (bvadd (x!11686 lt!37866) #b00000000000000000000000000000001) (mask!6298 newMap!16)) (index!3077 lt!37866) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(declare-fun b!81631 () Bool)

(assert (=> b!81631 (= e!53253 e!53252)))

(declare-fun c!12908 () Bool)

(assert (=> b!81631 (= c!12908 (= lt!38163 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (= (and d!20231 c!12910) b!81626))

(assert (= (and d!20231 (not c!12910)) b!81631))

(assert (= (and b!81631 c!12908) b!81627))

(assert (= (and b!81631 (not c!12908)) b!81628))

(assert (= (and b!81628 c!12909) b!81629))

(assert (= (and b!81628 (not c!12909)) b!81630))

(declare-fun m!83877 () Bool)

(assert (=> d!20231 m!83877))

(declare-fun m!83879 () Bool)

(assert (=> d!20231 m!83879))

(assert (=> d!20231 m!82893))

(assert (=> d!20231 m!82223))

(declare-fun m!83881 () Bool)

(assert (=> b!81630 m!83881))

(assert (=> b!81630 m!83881))

(assert (=> b!81630 m!81737))

(declare-fun m!83883 () Bool)

(assert (=> b!81630 m!83883))

(assert (=> b!81036 d!20231))

(declare-fun d!20233 () Bool)

(assert (=> d!20233 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37489))))

(declare-fun lt!38165 () Unit!2322)

(assert (=> d!20233 (= lt!38165 (choose!487 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37489))))

(declare-fun e!53255 () Bool)

(assert (=> d!20233 e!53255))

(declare-fun res!42391 () Bool)

(assert (=> d!20233 (=> (not res!42391) (not e!53255))))

(assert (=> d!20233 (= res!42391 (isStrictlySorted!283 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!20233 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37489) lt!38165)))

(declare-fun b!81632 () Bool)

(assert (=> b!81632 (= e!53255 (containsKey!142 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37489))))

(assert (= (and d!20233 res!42391) b!81632))

(assert (=> d!20233 m!82677))

(assert (=> d!20233 m!82677))

(assert (=> d!20233 m!82679))

(declare-fun m!83885 () Bool)

(assert (=> d!20233 m!83885))

(declare-fun m!83887 () Bool)

(assert (=> d!20233 m!83887))

(assert (=> b!81632 m!82673))

(assert (=> b!80900 d!20233))

(declare-fun d!20235 () Bool)

(assert (=> d!20235 (= (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37489)) (not (isEmpty!337 (getValueByKey!139 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37489))))))

(declare-fun bs!3454 () Bool)

(assert (= bs!3454 d!20235))

(assert (=> bs!3454 m!82677))

(declare-fun m!83889 () Bool)

(assert (=> bs!3454 m!83889))

(assert (=> b!80900 d!20235))

(declare-fun b!81636 () Bool)

(declare-fun e!53257 () Option!145)

(assert (=> b!81636 (= e!53257 None!143)))

(declare-fun b!81635 () Bool)

(assert (=> b!81635 (= e!53257 (getValueByKey!139 (t!5156 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) lt!37489))))

(declare-fun d!20237 () Bool)

(declare-fun c!12911 () Bool)

(assert (=> d!20237 (= c!12911 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))) lt!37489)))))

(declare-fun e!53256 () Option!145)

(assert (=> d!20237 (= (getValueByKey!139 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37489) e!53256)))

(declare-fun b!81633 () Bool)

(assert (=> b!81633 (= e!53256 (Some!144 (_2!1095 (h!2082 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))))

(declare-fun b!81634 () Bool)

(assert (=> b!81634 (= e!53256 e!53257)))

(declare-fun c!12912 () Bool)

(assert (=> b!81634 (= c!12912 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (not (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))) lt!37489))))))

(assert (= (and d!20237 c!12911) b!81633))

(assert (= (and d!20237 (not c!12911)) b!81634))

(assert (= (and b!81634 c!12912) b!81635))

(assert (= (and b!81634 (not c!12912)) b!81636))

(declare-fun m!83891 () Bool)

(assert (=> b!81635 m!83891))

(assert (=> b!80900 d!20237))

(declare-fun d!20239 () Bool)

(declare-fun e!53258 () Bool)

(assert (=> d!20239 e!53258))

(declare-fun res!42392 () Bool)

(assert (=> d!20239 (=> res!42392 e!53258)))

(declare-fun lt!38167 () Bool)

(assert (=> d!20239 (= res!42392 (not lt!38167))))

(declare-fun lt!38166 () Bool)

(assert (=> d!20239 (= lt!38167 lt!38166)))

(declare-fun lt!38168 () Unit!2322)

(declare-fun e!53259 () Unit!2322)

(assert (=> d!20239 (= lt!38168 e!53259)))

(declare-fun c!12913 () Bool)

(assert (=> d!20239 (= c!12913 lt!38166)))

(assert (=> d!20239 (= lt!38166 (containsKey!142 (toList!730 lt!37778) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!20239 (= (contains!739 lt!37778 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38167)))

(declare-fun b!81637 () Bool)

(declare-fun lt!38169 () Unit!2322)

(assert (=> b!81637 (= e!53259 lt!38169)))

(assert (=> b!81637 (= lt!38169 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37778) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> b!81637 (isDefined!91 (getValueByKey!139 (toList!730 lt!37778) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81638 () Bool)

(declare-fun Unit!2377 () Unit!2322)

(assert (=> b!81638 (= e!53259 Unit!2377)))

(declare-fun b!81639 () Bool)

(assert (=> b!81639 (= e!53258 (isDefined!91 (getValueByKey!139 (toList!730 lt!37778) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20239 c!12913) b!81637))

(assert (= (and d!20239 (not c!12913)) b!81638))

(assert (= (and d!20239 (not res!42392)) b!81639))

(declare-fun m!83893 () Bool)

(assert (=> d!20239 m!83893))

(declare-fun m!83895 () Bool)

(assert (=> b!81637 m!83895))

(assert (=> b!81637 m!82665))

(assert (=> b!81637 m!82665))

(declare-fun m!83897 () Bool)

(assert (=> b!81637 m!83897))

(assert (=> b!81639 m!82665))

(assert (=> b!81639 m!82665))

(assert (=> b!81639 m!83897))

(assert (=> d!19855 d!20239))

(declare-fun b!81643 () Bool)

(declare-fun e!53261 () Option!145)

(assert (=> b!81643 (= e!53261 None!143)))

(declare-fun b!81642 () Bool)

(assert (=> b!81642 (= e!53261 (getValueByKey!139 (t!5156 lt!37776) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20241 () Bool)

(declare-fun c!12914 () Bool)

(assert (=> d!20241 (= c!12914 (and ((_ is Cons!1493) lt!37776) (= (_1!1095 (h!2082 lt!37776)) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53260 () Option!145)

(assert (=> d!20241 (= (getValueByKey!139 lt!37776 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53260)))

(declare-fun b!81640 () Bool)

(assert (=> b!81640 (= e!53260 (Some!144 (_2!1095 (h!2082 lt!37776))))))

(declare-fun b!81641 () Bool)

(assert (=> b!81641 (= e!53260 e!53261)))

(declare-fun c!12915 () Bool)

(assert (=> b!81641 (= c!12915 (and ((_ is Cons!1493) lt!37776) (not (= (_1!1095 (h!2082 lt!37776)) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20241 c!12914) b!81640))

(assert (= (and d!20241 (not c!12914)) b!81641))

(assert (= (and b!81641 c!12915) b!81642))

(assert (= (and b!81641 (not c!12915)) b!81643))

(declare-fun m!83899 () Bool)

(assert (=> b!81642 m!83899))

(assert (=> d!19855 d!20241))

(declare-fun d!20243 () Bool)

(assert (=> d!20243 (= (getValueByKey!139 lt!37776 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!38170 () Unit!2322)

(assert (=> d!20243 (= lt!38170 (choose!478 lt!37776 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun e!53262 () Bool)

(assert (=> d!20243 e!53262))

(declare-fun res!42393 () Bool)

(assert (=> d!20243 (=> (not res!42393) (not e!53262))))

(assert (=> d!20243 (= res!42393 (isStrictlySorted!283 lt!37776))))

(assert (=> d!20243 (= (lemmaContainsTupThenGetReturnValue!56 lt!37776 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38170)))

(declare-fun b!81644 () Bool)

(declare-fun res!42394 () Bool)

(assert (=> b!81644 (=> (not res!42394) (not e!53262))))

(assert (=> b!81644 (= res!42394 (containsKey!142 lt!37776 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81645 () Bool)

(assert (=> b!81645 (= e!53262 (contains!742 lt!37776 (tuple2!2169 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20243 res!42393) b!81644))

(assert (= (and b!81644 res!42394) b!81645))

(assert (=> d!20243 m!82659))

(declare-fun m!83901 () Bool)

(assert (=> d!20243 m!83901))

(declare-fun m!83903 () Bool)

(assert (=> d!20243 m!83903))

(declare-fun m!83905 () Bool)

(assert (=> b!81644 m!83905))

(declare-fun m!83907 () Bool)

(assert (=> b!81645 m!83907))

(assert (=> d!19855 d!20243))

(declare-fun bm!7606 () Bool)

(declare-fun call!7610 () List!1497)

(declare-fun call!7611 () List!1497)

(assert (=> bm!7606 (= call!7610 call!7611)))

(declare-fun e!53263 () Bool)

(declare-fun b!81646 () Bool)

(declare-fun lt!38171 () List!1497)

(assert (=> b!81646 (= e!53263 (contains!742 lt!38171 (tuple2!2169 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!81647 () Bool)

(declare-fun e!53264 () List!1497)

(declare-fun e!53267 () List!1497)

(assert (=> b!81647 (= e!53264 e!53267)))

(declare-fun c!12919 () Bool)

(assert (=> b!81647 (= c!12919 (and ((_ is Cons!1493) (toList!730 lt!37486)) (= (_1!1095 (h!2082 (toList!730 lt!37486))) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun bm!7607 () Bool)

(declare-fun call!7609 () List!1497)

(assert (=> bm!7607 (= call!7609 call!7610)))

(declare-fun d!20245 () Bool)

(assert (=> d!20245 e!53263))

(declare-fun res!42395 () Bool)

(assert (=> d!20245 (=> (not res!42395) (not e!53263))))

(assert (=> d!20245 (= res!42395 (isStrictlySorted!283 lt!38171))))

(assert (=> d!20245 (= lt!38171 e!53264)))

(declare-fun c!12916 () Bool)

(assert (=> d!20245 (= c!12916 (and ((_ is Cons!1493) (toList!730 lt!37486)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37486))) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!20245 (isStrictlySorted!283 (toList!730 lt!37486))))

(assert (=> d!20245 (= (insertStrictlySorted!59 (toList!730 lt!37486) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38171)))

(declare-fun e!53265 () List!1497)

(declare-fun bm!7608 () Bool)

(assert (=> bm!7608 (= call!7611 ($colon$colon!69 e!53265 (ite c!12916 (h!2082 (toList!730 lt!37486)) (tuple2!2169 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun c!12918 () Bool)

(assert (=> bm!7608 (= c!12918 c!12916)))

(declare-fun b!81648 () Bool)

(declare-fun e!53266 () List!1497)

(assert (=> b!81648 (= e!53266 call!7609)))

(declare-fun b!81649 () Bool)

(declare-fun res!42396 () Bool)

(assert (=> b!81649 (=> (not res!42396) (not e!53263))))

(assert (=> b!81649 (= res!42396 (containsKey!142 lt!38171 (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun c!12917 () Bool)

(declare-fun b!81650 () Bool)

(assert (=> b!81650 (= c!12917 (and ((_ is Cons!1493) (toList!730 lt!37486)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37486))) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> b!81650 (= e!53267 e!53266)))

(declare-fun b!81651 () Bool)

(assert (=> b!81651 (= e!53265 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37486)) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81652 () Bool)

(assert (=> b!81652 (= e!53267 call!7610)))

(declare-fun b!81653 () Bool)

(assert (=> b!81653 (= e!53266 call!7609)))

(declare-fun b!81654 () Bool)

(assert (=> b!81654 (= e!53265 (ite c!12919 (t!5156 (toList!730 lt!37486)) (ite c!12917 (Cons!1493 (h!2082 (toList!730 lt!37486)) (t!5156 (toList!730 lt!37486))) Nil!1494)))))

(declare-fun b!81655 () Bool)

(assert (=> b!81655 (= e!53264 call!7611)))

(assert (= (and d!20245 c!12916) b!81655))

(assert (= (and d!20245 (not c!12916)) b!81647))

(assert (= (and b!81647 c!12919) b!81652))

(assert (= (and b!81647 (not c!12919)) b!81650))

(assert (= (and b!81650 c!12917) b!81653))

(assert (= (and b!81650 (not c!12917)) b!81648))

(assert (= (or b!81653 b!81648) bm!7607))

(assert (= (or b!81652 bm!7607) bm!7606))

(assert (= (or b!81655 bm!7606) bm!7608))

(assert (= (and bm!7608 c!12918) b!81651))

(assert (= (and bm!7608 (not c!12918)) b!81654))

(assert (= (and d!20245 res!42395) b!81649))

(assert (= (and b!81649 res!42396) b!81646))

(declare-fun m!83909 () Bool)

(assert (=> b!81651 m!83909))

(declare-fun m!83911 () Bool)

(assert (=> bm!7608 m!83911))

(declare-fun m!83913 () Bool)

(assert (=> b!81646 m!83913))

(declare-fun m!83915 () Bool)

(assert (=> d!20245 m!83915))

(declare-fun m!83917 () Bool)

(assert (=> d!20245 m!83917))

(declare-fun m!83919 () Bool)

(assert (=> b!81649 m!83919))

(assert (=> d!19855 d!20245))

(declare-fun d!20247 () Bool)

(assert (=> d!20247 (= (apply!80 lt!37827 lt!37838) (get!1192 (getValueByKey!139 (toList!730 lt!37827) lt!37838)))))

(declare-fun bs!3455 () Bool)

(assert (= bs!3455 d!20247))

(declare-fun m!83921 () Bool)

(assert (=> bs!3455 m!83921))

(assert (=> bs!3455 m!83921))

(declare-fun m!83923 () Bool)

(assert (=> bs!3455 m!83923))

(assert (=> b!80962 d!20247))

(declare-fun d!20249 () Bool)

(declare-fun e!53268 () Bool)

(assert (=> d!20249 e!53268))

(declare-fun res!42398 () Bool)

(assert (=> d!20249 (=> (not res!42398) (not e!53268))))

(declare-fun lt!38175 () ListLongMap!1429)

(assert (=> d!20249 (= res!42398 (contains!739 lt!38175 (_1!1095 (tuple2!2169 lt!37841 (minValue!2188 newMap!16)))))))

(declare-fun lt!38173 () List!1497)

(assert (=> d!20249 (= lt!38175 (ListLongMap!1430 lt!38173))))

(declare-fun lt!38172 () Unit!2322)

(declare-fun lt!38174 () Unit!2322)

(assert (=> d!20249 (= lt!38172 lt!38174)))

(assert (=> d!20249 (= (getValueByKey!139 lt!38173 (_1!1095 (tuple2!2169 lt!37841 (minValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37841 (minValue!2188 newMap!16)))))))

(assert (=> d!20249 (= lt!38174 (lemmaContainsTupThenGetReturnValue!56 lt!38173 (_1!1095 (tuple2!2169 lt!37841 (minValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37841 (minValue!2188 newMap!16)))))))

(assert (=> d!20249 (= lt!38173 (insertStrictlySorted!59 (toList!730 lt!37827) (_1!1095 (tuple2!2169 lt!37841 (minValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37841 (minValue!2188 newMap!16)))))))

(assert (=> d!20249 (= (+!101 lt!37827 (tuple2!2169 lt!37841 (minValue!2188 newMap!16))) lt!38175)))

(declare-fun b!81656 () Bool)

(declare-fun res!42397 () Bool)

(assert (=> b!81656 (=> (not res!42397) (not e!53268))))

(assert (=> b!81656 (= res!42397 (= (getValueByKey!139 (toList!730 lt!38175) (_1!1095 (tuple2!2169 lt!37841 (minValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37841 (minValue!2188 newMap!16))))))))

(declare-fun b!81657 () Bool)

(assert (=> b!81657 (= e!53268 (contains!742 (toList!730 lt!38175) (tuple2!2169 lt!37841 (minValue!2188 newMap!16))))))

(assert (= (and d!20249 res!42398) b!81656))

(assert (= (and b!81656 res!42397) b!81657))

(declare-fun m!83925 () Bool)

(assert (=> d!20249 m!83925))

(declare-fun m!83927 () Bool)

(assert (=> d!20249 m!83927))

(declare-fun m!83929 () Bool)

(assert (=> d!20249 m!83929))

(declare-fun m!83931 () Bool)

(assert (=> d!20249 m!83931))

(declare-fun m!83933 () Bool)

(assert (=> b!81656 m!83933))

(declare-fun m!83935 () Bool)

(assert (=> b!81657 m!83935))

(assert (=> b!80962 d!20249))

(declare-fun d!20251 () Bool)

(declare-fun e!53269 () Bool)

(assert (=> d!20251 e!53269))

(declare-fun res!42400 () Bool)

(assert (=> d!20251 (=> (not res!42400) (not e!53269))))

(declare-fun lt!38179 () ListLongMap!1429)

(assert (=> d!20251 (= res!42400 (contains!739 lt!38179 (_1!1095 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16)))))))

(declare-fun lt!38177 () List!1497)

(assert (=> d!20251 (= lt!38179 (ListLongMap!1430 lt!38177))))

(declare-fun lt!38176 () Unit!2322)

(declare-fun lt!38178 () Unit!2322)

(assert (=> d!20251 (= lt!38176 lt!38178)))

(assert (=> d!20251 (= (getValueByKey!139 lt!38177 (_1!1095 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20251 (= lt!38178 (lemmaContainsTupThenGetReturnValue!56 lt!38177 (_1!1095 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20251 (= lt!38177 (insertStrictlySorted!59 (toList!730 lt!37836) (_1!1095 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20251 (= (+!101 lt!37836 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16))) lt!38179)))

(declare-fun b!81658 () Bool)

(declare-fun res!42399 () Bool)

(assert (=> b!81658 (=> (not res!42399) (not e!53269))))

(assert (=> b!81658 (= res!42399 (= (getValueByKey!139 (toList!730 lt!38179) (_1!1095 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16))))))))

(declare-fun b!81659 () Bool)

(assert (=> b!81659 (= e!53269 (contains!742 (toList!730 lt!38179) (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16))))))

(assert (= (and d!20251 res!42400) b!81658))

(assert (= (and b!81658 res!42399) b!81659))

(declare-fun m!83937 () Bool)

(assert (=> d!20251 m!83937))

(declare-fun m!83939 () Bool)

(assert (=> d!20251 m!83939))

(declare-fun m!83941 () Bool)

(assert (=> d!20251 m!83941))

(declare-fun m!83943 () Bool)

(assert (=> d!20251 m!83943))

(declare-fun m!83945 () Bool)

(assert (=> b!81658 m!83945))

(declare-fun m!83947 () Bool)

(assert (=> b!81659 m!83947))

(assert (=> b!80962 d!20251))

(declare-fun d!20253 () Bool)

(assert (=> d!20253 (= (apply!80 (+!101 lt!37827 (tuple2!2169 lt!37841 (minValue!2188 newMap!16))) lt!37838) (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37827 (tuple2!2169 lt!37841 (minValue!2188 newMap!16)))) lt!37838)))))

(declare-fun bs!3456 () Bool)

(assert (= bs!3456 d!20253))

(declare-fun m!83949 () Bool)

(assert (=> bs!3456 m!83949))

(assert (=> bs!3456 m!83949))

(declare-fun m!83951 () Bool)

(assert (=> bs!3456 m!83951))

(assert (=> b!80962 d!20253))

(declare-fun d!20255 () Bool)

(assert (=> d!20255 (= (apply!80 (+!101 lt!37827 (tuple2!2169 lt!37841 (minValue!2188 newMap!16))) lt!37838) (apply!80 lt!37827 lt!37838))))

(declare-fun lt!38180 () Unit!2322)

(assert (=> d!20255 (= lt!38180 (choose!481 lt!37827 lt!37841 (minValue!2188 newMap!16) lt!37838))))

(declare-fun e!53270 () Bool)

(assert (=> d!20255 e!53270))

(declare-fun res!42401 () Bool)

(assert (=> d!20255 (=> (not res!42401) (not e!53270))))

(assert (=> d!20255 (= res!42401 (contains!739 lt!37827 lt!37838))))

(assert (=> d!20255 (= (addApplyDifferent!56 lt!37827 lt!37841 (minValue!2188 newMap!16) lt!37838) lt!38180)))

(declare-fun b!81660 () Bool)

(assert (=> b!81660 (= e!53270 (not (= lt!37838 lt!37841)))))

(assert (= (and d!20255 res!42401) b!81660))

(assert (=> d!20255 m!82793))

(declare-fun m!83953 () Bool)

(assert (=> d!20255 m!83953))

(assert (=> d!20255 m!82781))

(declare-fun m!83955 () Bool)

(assert (=> d!20255 m!83955))

(assert (=> d!20255 m!82781))

(assert (=> d!20255 m!82787))

(assert (=> b!80962 d!20255))

(declare-fun d!20257 () Bool)

(declare-fun e!53271 () Bool)

(assert (=> d!20257 e!53271))

(declare-fun res!42402 () Bool)

(assert (=> d!20257 (=> res!42402 e!53271)))

(declare-fun lt!38182 () Bool)

(assert (=> d!20257 (= res!42402 (not lt!38182))))

(declare-fun lt!38181 () Bool)

(assert (=> d!20257 (= lt!38182 lt!38181)))

(declare-fun lt!38183 () Unit!2322)

(declare-fun e!53272 () Unit!2322)

(assert (=> d!20257 (= lt!38183 e!53272)))

(declare-fun c!12920 () Bool)

(assert (=> d!20257 (= c!12920 lt!38181)))

(assert (=> d!20257 (= lt!38181 (containsKey!142 (toList!730 (+!101 lt!37836 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16)))) lt!37839))))

(assert (=> d!20257 (= (contains!739 (+!101 lt!37836 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16))) lt!37839) lt!38182)))

(declare-fun b!81661 () Bool)

(declare-fun lt!38184 () Unit!2322)

(assert (=> b!81661 (= e!53272 lt!38184)))

(assert (=> b!81661 (= lt!38184 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 (+!101 lt!37836 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16)))) lt!37839))))

(assert (=> b!81661 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37836 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16)))) lt!37839))))

(declare-fun b!81662 () Bool)

(declare-fun Unit!2378 () Unit!2322)

(assert (=> b!81662 (= e!53272 Unit!2378)))

(declare-fun b!81663 () Bool)

(assert (=> b!81663 (= e!53271 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37836 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16)))) lt!37839)))))

(assert (= (and d!20257 c!12920) b!81661))

(assert (= (and d!20257 (not c!12920)) b!81662))

(assert (= (and d!20257 (not res!42402)) b!81663))

(declare-fun m!83957 () Bool)

(assert (=> d!20257 m!83957))

(declare-fun m!83959 () Bool)

(assert (=> b!81661 m!83959))

(declare-fun m!83961 () Bool)

(assert (=> b!81661 m!83961))

(assert (=> b!81661 m!83961))

(declare-fun m!83963 () Bool)

(assert (=> b!81661 m!83963))

(assert (=> b!81663 m!83961))

(assert (=> b!81663 m!83961))

(assert (=> b!81663 m!83963))

(assert (=> b!80962 d!20257))

(declare-fun d!20259 () Bool)

(assert (=> d!20259 (= (apply!80 (+!101 lt!37825 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16))) lt!37824) (apply!80 lt!37825 lt!37824))))

(declare-fun lt!38185 () Unit!2322)

(assert (=> d!20259 (= lt!38185 (choose!481 lt!37825 lt!37840 (zeroValue!2188 newMap!16) lt!37824))))

(declare-fun e!53273 () Bool)

(assert (=> d!20259 e!53273))

(declare-fun res!42403 () Bool)

(assert (=> d!20259 (=> (not res!42403) (not e!53273))))

(assert (=> d!20259 (= res!42403 (contains!739 lt!37825 lt!37824))))

(assert (=> d!20259 (= (addApplyDifferent!56 lt!37825 lt!37840 (zeroValue!2188 newMap!16) lt!37824) lt!38185)))

(declare-fun b!81664 () Bool)

(assert (=> b!81664 (= e!53273 (not (= lt!37824 lt!37840)))))

(assert (= (and d!20259 res!42403) b!81664))

(assert (=> d!20259 m!82777))

(declare-fun m!83965 () Bool)

(assert (=> d!20259 m!83965))

(assert (=> d!20259 m!82779))

(declare-fun m!83967 () Bool)

(assert (=> d!20259 m!83967))

(assert (=> d!20259 m!82779))

(assert (=> d!20259 m!82795))

(assert (=> b!80962 d!20259))

(declare-fun d!20261 () Bool)

(declare-fun e!53274 () Bool)

(assert (=> d!20261 e!53274))

(declare-fun res!42405 () Bool)

(assert (=> d!20261 (=> (not res!42405) (not e!53274))))

(declare-fun lt!38189 () ListLongMap!1429)

(assert (=> d!20261 (= res!42405 (contains!739 lt!38189 (_1!1095 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16)))))))

(declare-fun lt!38187 () List!1497)

(assert (=> d!20261 (= lt!38189 (ListLongMap!1430 lt!38187))))

(declare-fun lt!38186 () Unit!2322)

(declare-fun lt!38188 () Unit!2322)

(assert (=> d!20261 (= lt!38186 lt!38188)))

(assert (=> d!20261 (= (getValueByKey!139 lt!38187 (_1!1095 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20261 (= lt!38188 (lemmaContainsTupThenGetReturnValue!56 lt!38187 (_1!1095 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20261 (= lt!38187 (insertStrictlySorted!59 (toList!730 lt!37825) (_1!1095 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20261 (= (+!101 lt!37825 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16))) lt!38189)))

(declare-fun b!81665 () Bool)

(declare-fun res!42404 () Bool)

(assert (=> b!81665 (=> (not res!42404) (not e!53274))))

(assert (=> b!81665 (= res!42404 (= (getValueByKey!139 (toList!730 lt!38189) (_1!1095 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16))))))))

(declare-fun b!81666 () Bool)

(assert (=> b!81666 (= e!53274 (contains!742 (toList!730 lt!38189) (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16))))))

(assert (= (and d!20261 res!42405) b!81665))

(assert (= (and b!81665 res!42404) b!81666))

(declare-fun m!83969 () Bool)

(assert (=> d!20261 m!83969))

(declare-fun m!83971 () Bool)

(assert (=> d!20261 m!83971))

(declare-fun m!83973 () Bool)

(assert (=> d!20261 m!83973))

(declare-fun m!83975 () Bool)

(assert (=> d!20261 m!83975))

(declare-fun m!83977 () Bool)

(assert (=> b!81665 m!83977))

(declare-fun m!83979 () Bool)

(assert (=> b!81666 m!83979))

(assert (=> b!80962 d!20261))

(declare-fun b!81667 () Bool)

(declare-fun e!53278 () Bool)

(declare-fun e!53279 () Bool)

(assert (=> b!81667 (= e!53278 e!53279)))

(assert (=> b!81667 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun res!42408 () Bool)

(declare-fun lt!38194 () ListLongMap!1429)

(assert (=> b!81667 (= res!42408 (contains!739 lt!38194 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81667 (=> (not res!42408) (not e!53279))))

(declare-fun b!81668 () Bool)

(declare-fun lt!38193 () Unit!2322)

(declare-fun lt!38190 () Unit!2322)

(assert (=> b!81668 (= lt!38193 lt!38190)))

(declare-fun lt!38196 () (_ BitVec 64))

(declare-fun lt!38191 () ListLongMap!1429)

(declare-fun lt!38192 () (_ BitVec 64))

(declare-fun lt!38195 () V!3001)

(assert (=> b!81668 (not (contains!739 (+!101 lt!38191 (tuple2!2169 lt!38196 lt!38195)) lt!38192))))

(assert (=> b!81668 (= lt!38190 (addStillNotContains!31 lt!38191 lt!38196 lt!38195 lt!38192))))

(assert (=> b!81668 (= lt!38192 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81668 (= lt!38195 (get!1189 (select (arr!1893 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81668 (= lt!38196 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7612 () ListLongMap!1429)

(assert (=> b!81668 (= lt!38191 call!7612)))

(declare-fun e!53276 () ListLongMap!1429)

(assert (=> b!81668 (= e!53276 (+!101 call!7612 (tuple2!2169 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) (get!1189 (select (arr!1893 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81670 () Bool)

(assert (=> b!81670 (= e!53276 call!7612)))

(declare-fun b!81671 () Bool)

(declare-fun e!53275 () Bool)

(assert (=> b!81671 (= e!53275 (= lt!38194 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16))))))

(declare-fun b!81672 () Bool)

(declare-fun res!42409 () Bool)

(declare-fun e!53281 () Bool)

(assert (=> b!81672 (=> (not res!42409) (not e!53281))))

(assert (=> b!81672 (= res!42409 (not (contains!739 lt!38194 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81673 () Bool)

(assert (=> b!81673 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> b!81673 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_values!2275 newMap!16))))))

(assert (=> b!81673 (= e!53279 (= (apply!80 lt!38194 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1893 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81674 () Bool)

(assert (=> b!81674 (= e!53278 e!53275)))

(declare-fun c!12921 () Bool)

(assert (=> b!81674 (= c!12921 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81675 () Bool)

(assert (=> b!81675 (= e!53281 e!53278)))

(declare-fun c!12923 () Bool)

(declare-fun e!53277 () Bool)

(assert (=> b!81675 (= c!12923 e!53277)))

(declare-fun res!42406 () Bool)

(assert (=> b!81675 (=> (not res!42406) (not e!53277))))

(assert (=> b!81675 (= res!42406 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81676 () Bool)

(declare-fun e!53280 () ListLongMap!1429)

(assert (=> b!81676 (= e!53280 e!53276)))

(declare-fun c!12924 () Bool)

(assert (=> b!81676 (= c!12924 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7609 () Bool)

(assert (=> bm!7609 (= call!7612 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16)))))

(declare-fun b!81669 () Bool)

(assert (=> b!81669 (= e!53275 (isEmpty!335 lt!38194))))

(declare-fun d!20263 () Bool)

(assert (=> d!20263 e!53281))

(declare-fun res!42407 () Bool)

(assert (=> d!20263 (=> (not res!42407) (not e!53281))))

(assert (=> d!20263 (= res!42407 (not (contains!739 lt!38194 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20263 (= lt!38194 e!53280)))

(declare-fun c!12922 () Bool)

(assert (=> d!20263 (= c!12922 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!20263 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20263 (= (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38194)))

(declare-fun b!81677 () Bool)

(assert (=> b!81677 (= e!53280 (ListLongMap!1430 Nil!1494))))

(declare-fun b!81678 () Bool)

(assert (=> b!81678 (= e!53277 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81678 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!20263 c!12922) b!81677))

(assert (= (and d!20263 (not c!12922)) b!81676))

(assert (= (and b!81676 c!12924) b!81668))

(assert (= (and b!81676 (not c!12924)) b!81670))

(assert (= (or b!81668 b!81670) bm!7609))

(assert (= (and d!20263 res!42407) b!81672))

(assert (= (and b!81672 res!42409) b!81675))

(assert (= (and b!81675 res!42406) b!81678))

(assert (= (and b!81675 c!12923) b!81667))

(assert (= (and b!81675 (not c!12923)) b!81674))

(assert (= (and b!81667 res!42408) b!81673))

(assert (= (and b!81674 c!12921) b!81671))

(assert (= (and b!81674 (not c!12921)) b!81669))

(declare-fun b_lambda!3641 () Bool)

(assert (=> (not b_lambda!3641) (not b!81668)))

(assert (=> b!81668 t!5170))

(declare-fun b_and!4977 () Bool)

(assert (= b_and!4973 (and (=> t!5170 result!2849) b_and!4977)))

(assert (=> b!81668 t!5172))

(declare-fun b_and!4979 () Bool)

(assert (= b_and!4975 (and (=> t!5172 result!2851) b_and!4979)))

(declare-fun b_lambda!3643 () Bool)

(assert (=> (not b_lambda!3643) (not b!81673)))

(assert (=> b!81673 t!5170))

(declare-fun b_and!4981 () Bool)

(assert (= b_and!4977 (and (=> t!5170 result!2849) b_and!4981)))

(assert (=> b!81673 t!5172))

(declare-fun b_and!4983 () Bool)

(assert (= b_and!4979 (and (=> t!5172 result!2851) b_and!4983)))

(assert (=> b!81667 m!82381))

(assert (=> b!81667 m!82381))

(declare-fun m!83981 () Bool)

(assert (=> b!81667 m!83981))

(assert (=> b!81673 m!82743))

(assert (=> b!81673 m!82381))

(assert (=> b!81673 m!82381))

(declare-fun m!83983 () Bool)

(assert (=> b!81673 m!83983))

(assert (=> b!81673 m!82809))

(assert (=> b!81673 m!82743))

(assert (=> b!81673 m!82811))

(assert (=> b!81673 m!82809))

(assert (=> b!81676 m!82381))

(assert (=> b!81676 m!82381))

(assert (=> b!81676 m!82583))

(declare-fun m!83985 () Bool)

(assert (=> b!81671 m!83985))

(assert (=> bm!7609 m!83985))

(assert (=> b!81668 m!82743))

(assert (=> b!81668 m!82381))

(declare-fun m!83987 () Bool)

(assert (=> b!81668 m!83987))

(assert (=> b!81668 m!83987))

(declare-fun m!83989 () Bool)

(assert (=> b!81668 m!83989))

(declare-fun m!83991 () Bool)

(assert (=> b!81668 m!83991))

(declare-fun m!83993 () Bool)

(assert (=> b!81668 m!83993))

(assert (=> b!81668 m!82809))

(assert (=> b!81668 m!82743))

(assert (=> b!81668 m!82811))

(assert (=> b!81668 m!82809))

(declare-fun m!83995 () Bool)

(assert (=> b!81669 m!83995))

(assert (=> b!81678 m!82381))

(assert (=> b!81678 m!82381))

(assert (=> b!81678 m!82583))

(declare-fun m!83997 () Bool)

(assert (=> b!81672 m!83997))

(declare-fun m!83999 () Bool)

(assert (=> d!20263 m!83999))

(assert (=> d!20263 m!82223))

(assert (=> b!80962 d!20263))

(declare-fun d!20265 () Bool)

(assert (=> d!20265 (contains!739 (+!101 lt!37836 (tuple2!2169 lt!37823 (zeroValue!2188 newMap!16))) lt!37839)))

(declare-fun lt!38197 () Unit!2322)

(assert (=> d!20265 (= lt!38197 (choose!482 lt!37836 lt!37823 (zeroValue!2188 newMap!16) lt!37839))))

(assert (=> d!20265 (contains!739 lt!37836 lt!37839)))

(assert (=> d!20265 (= (addStillContains!56 lt!37836 lt!37823 (zeroValue!2188 newMap!16) lt!37839) lt!38197)))

(declare-fun bs!3457 () Bool)

(assert (= bs!3457 d!20265))

(assert (=> bs!3457 m!82783))

(assert (=> bs!3457 m!82783))

(assert (=> bs!3457 m!82801))

(declare-fun m!84001 () Bool)

(assert (=> bs!3457 m!84001))

(declare-fun m!84003 () Bool)

(assert (=> bs!3457 m!84003))

(assert (=> b!80962 d!20265))

(declare-fun d!20267 () Bool)

(assert (=> d!20267 (= (apply!80 lt!37833 lt!37835) (get!1192 (getValueByKey!139 (toList!730 lt!37833) lt!37835)))))

(declare-fun bs!3458 () Bool)

(assert (= bs!3458 d!20267))

(declare-fun m!84005 () Bool)

(assert (=> bs!3458 m!84005))

(assert (=> bs!3458 m!84005))

(declare-fun m!84007 () Bool)

(assert (=> bs!3458 m!84007))

(assert (=> b!80962 d!20267))

(declare-fun d!20269 () Bool)

(declare-fun e!53282 () Bool)

(assert (=> d!20269 e!53282))

(declare-fun res!42411 () Bool)

(assert (=> d!20269 (=> (not res!42411) (not e!53282))))

(declare-fun lt!38201 () ListLongMap!1429)

(assert (=> d!20269 (= res!42411 (contains!739 lt!38201 (_1!1095 (tuple2!2169 lt!37822 (minValue!2188 newMap!16)))))))

(declare-fun lt!38199 () List!1497)

(assert (=> d!20269 (= lt!38201 (ListLongMap!1430 lt!38199))))

(declare-fun lt!38198 () Unit!2322)

(declare-fun lt!38200 () Unit!2322)

(assert (=> d!20269 (= lt!38198 lt!38200)))

(assert (=> d!20269 (= (getValueByKey!139 lt!38199 (_1!1095 (tuple2!2169 lt!37822 (minValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37822 (minValue!2188 newMap!16)))))))

(assert (=> d!20269 (= lt!38200 (lemmaContainsTupThenGetReturnValue!56 lt!38199 (_1!1095 (tuple2!2169 lt!37822 (minValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37822 (minValue!2188 newMap!16)))))))

(assert (=> d!20269 (= lt!38199 (insertStrictlySorted!59 (toList!730 lt!37833) (_1!1095 (tuple2!2169 lt!37822 (minValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37822 (minValue!2188 newMap!16)))))))

(assert (=> d!20269 (= (+!101 lt!37833 (tuple2!2169 lt!37822 (minValue!2188 newMap!16))) lt!38201)))

(declare-fun b!81679 () Bool)

(declare-fun res!42410 () Bool)

(assert (=> b!81679 (=> (not res!42410) (not e!53282))))

(assert (=> b!81679 (= res!42410 (= (getValueByKey!139 (toList!730 lt!38201) (_1!1095 (tuple2!2169 lt!37822 (minValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37822 (minValue!2188 newMap!16))))))))

(declare-fun b!81680 () Bool)

(assert (=> b!81680 (= e!53282 (contains!742 (toList!730 lt!38201) (tuple2!2169 lt!37822 (minValue!2188 newMap!16))))))

(assert (= (and d!20269 res!42411) b!81679))

(assert (= (and b!81679 res!42410) b!81680))

(declare-fun m!84009 () Bool)

(assert (=> d!20269 m!84009))

(declare-fun m!84011 () Bool)

(assert (=> d!20269 m!84011))

(declare-fun m!84013 () Bool)

(assert (=> d!20269 m!84013))

(declare-fun m!84015 () Bool)

(assert (=> d!20269 m!84015))

(declare-fun m!84017 () Bool)

(assert (=> b!81679 m!84017))

(declare-fun m!84019 () Bool)

(assert (=> b!81680 m!84019))

(assert (=> b!80962 d!20269))

(declare-fun d!20271 () Bool)

(assert (=> d!20271 (= (apply!80 (+!101 lt!37833 (tuple2!2169 lt!37822 (minValue!2188 newMap!16))) lt!37835) (apply!80 lt!37833 lt!37835))))

(declare-fun lt!38202 () Unit!2322)

(assert (=> d!20271 (= lt!38202 (choose!481 lt!37833 lt!37822 (minValue!2188 newMap!16) lt!37835))))

(declare-fun e!53283 () Bool)

(assert (=> d!20271 e!53283))

(declare-fun res!42412 () Bool)

(assert (=> d!20271 (=> (not res!42412) (not e!53283))))

(assert (=> d!20271 (= res!42412 (contains!739 lt!37833 lt!37835))))

(assert (=> d!20271 (= (addApplyDifferent!56 lt!37833 lt!37822 (minValue!2188 newMap!16) lt!37835) lt!38202)))

(declare-fun b!81681 () Bool)

(assert (=> b!81681 (= e!53283 (not (= lt!37835 lt!37822)))))

(assert (= (and d!20271 res!42412) b!81681))

(assert (=> d!20271 m!82775))

(declare-fun m!84021 () Bool)

(assert (=> d!20271 m!84021))

(assert (=> d!20271 m!82771))

(declare-fun m!84023 () Bool)

(assert (=> d!20271 m!84023))

(assert (=> d!20271 m!82771))

(assert (=> d!20271 m!82773))

(assert (=> b!80962 d!20271))

(declare-fun d!20273 () Bool)

(assert (=> d!20273 (= (apply!80 lt!37825 lt!37824) (get!1192 (getValueByKey!139 (toList!730 lt!37825) lt!37824)))))

(declare-fun bs!3459 () Bool)

(assert (= bs!3459 d!20273))

(declare-fun m!84025 () Bool)

(assert (=> bs!3459 m!84025))

(assert (=> bs!3459 m!84025))

(declare-fun m!84027 () Bool)

(assert (=> bs!3459 m!84027))

(assert (=> b!80962 d!20273))

(declare-fun d!20275 () Bool)

(assert (=> d!20275 (= (apply!80 (+!101 lt!37825 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16))) lt!37824) (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37825 (tuple2!2169 lt!37840 (zeroValue!2188 newMap!16)))) lt!37824)))))

(declare-fun bs!3460 () Bool)

(assert (= bs!3460 d!20275))

(declare-fun m!84029 () Bool)

(assert (=> bs!3460 m!84029))

(assert (=> bs!3460 m!84029))

(declare-fun m!84031 () Bool)

(assert (=> bs!3460 m!84031))

(assert (=> b!80962 d!20275))

(declare-fun d!20277 () Bool)

(assert (=> d!20277 (= (apply!80 (+!101 lt!37833 (tuple2!2169 lt!37822 (minValue!2188 newMap!16))) lt!37835) (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37833 (tuple2!2169 lt!37822 (minValue!2188 newMap!16)))) lt!37835)))))

(declare-fun bs!3461 () Bool)

(assert (= bs!3461 d!20277))

(declare-fun m!84033 () Bool)

(assert (=> bs!3461 m!84033))

(assert (=> bs!3461 m!84033))

(declare-fun m!84035 () Bool)

(assert (=> bs!3461 m!84035))

(assert (=> b!80962 d!20277))

(declare-fun d!20279 () Bool)

(declare-fun res!42413 () Bool)

(declare-fun e!53284 () Bool)

(assert (=> d!20279 (=> res!42413 e!53284)))

(assert (=> d!20279 (= res!42413 (or ((_ is Nil!1494) lt!37906) ((_ is Nil!1494) (t!5156 lt!37906))))))

(assert (=> d!20279 (= (isStrictlySorted!283 lt!37906) e!53284)))

(declare-fun b!81682 () Bool)

(declare-fun e!53285 () Bool)

(assert (=> b!81682 (= e!53284 e!53285)))

(declare-fun res!42414 () Bool)

(assert (=> b!81682 (=> (not res!42414) (not e!53285))))

(assert (=> b!81682 (= res!42414 (bvslt (_1!1095 (h!2082 lt!37906)) (_1!1095 (h!2082 (t!5156 lt!37906)))))))

(declare-fun b!81683 () Bool)

(assert (=> b!81683 (= e!53285 (isStrictlySorted!283 (t!5156 lt!37906)))))

(assert (= (and d!20279 (not res!42413)) b!81682))

(assert (= (and b!81682 res!42414) b!81683))

(declare-fun m!84037 () Bool)

(assert (=> b!81683 m!84037))

(assert (=> d!19939 d!20279))

(declare-fun d!20281 () Bool)

(declare-fun res!42415 () Bool)

(declare-fun e!53286 () Bool)

(assert (=> d!20281 (=> res!42415 e!53286)))

(assert (=> d!20281 (= res!42415 (or ((_ is Nil!1494) (toList!730 lt!37211)) ((_ is Nil!1494) (t!5156 (toList!730 lt!37211)))))))

(assert (=> d!20281 (= (isStrictlySorted!283 (toList!730 lt!37211)) e!53286)))

(declare-fun b!81684 () Bool)

(declare-fun e!53287 () Bool)

(assert (=> b!81684 (= e!53286 e!53287)))

(declare-fun res!42416 () Bool)

(assert (=> b!81684 (=> (not res!42416) (not e!53287))))

(assert (=> b!81684 (= res!42416 (bvslt (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 (h!2082 (t!5156 (toList!730 lt!37211))))))))

(declare-fun b!81685 () Bool)

(assert (=> b!81685 (= e!53287 (isStrictlySorted!283 (t!5156 (toList!730 lt!37211))))))

(assert (= (and d!20281 (not res!42415)) b!81684))

(assert (= (and b!81684 res!42416) b!81685))

(declare-fun m!84039 () Bool)

(assert (=> b!81685 m!84039))

(assert (=> d!19939 d!20281))

(assert (=> b!80865 d!19915))

(declare-fun d!20283 () Bool)

(assert (=> d!20283 (= (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81126 d!20283))

(assert (=> d!19789 d!19785))

(assert (=> d!19789 d!19781))

(assert (=> d!19789 d!19783))

(assert (=> d!19789 d!19787))

(declare-fun b!81689 () Bool)

(declare-fun e!53289 () Option!145)

(assert (=> b!81689 (= e!53289 None!143)))

(declare-fun b!81688 () Bool)

(assert (=> b!81688 (= e!53289 (getValueByKey!139 (t!5156 (t!5156 (toList!730 lt!37513))) (_1!1095 lt!37212)))))

(declare-fun d!20285 () Bool)

(declare-fun c!12925 () Bool)

(assert (=> d!20285 (= c!12925 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37513))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37513)))) (_1!1095 lt!37212))))))

(declare-fun e!53288 () Option!145)

(assert (=> d!20285 (= (getValueByKey!139 (t!5156 (toList!730 lt!37513)) (_1!1095 lt!37212)) e!53288)))

(declare-fun b!81686 () Bool)

(assert (=> b!81686 (= e!53288 (Some!144 (_2!1095 (h!2082 (t!5156 (toList!730 lt!37513))))))))

(declare-fun b!81687 () Bool)

(assert (=> b!81687 (= e!53288 e!53289)))

(declare-fun c!12926 () Bool)

(assert (=> b!81687 (= c!12926 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37513))) (not (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37513)))) (_1!1095 lt!37212)))))))

(assert (= (and d!20285 c!12925) b!81686))

(assert (= (and d!20285 (not c!12925)) b!81687))

(assert (= (and b!81687 c!12926) b!81688))

(assert (= (and b!81687 (not c!12926)) b!81689))

(declare-fun m!84041 () Bool)

(assert (=> b!81688 m!84041))

(assert (=> b!80752 d!20285))

(declare-fun b!81690 () Bool)

(declare-fun e!53293 () Bool)

(declare-fun e!53294 () Bool)

(assert (=> b!81690 (= e!53293 e!53294)))

(assert (=> b!81690 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun res!42419 () Bool)

(declare-fun lt!38207 () ListLongMap!1429)

(assert (=> b!81690 (= res!42419 (contains!739 lt!38207 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81690 (=> (not res!42419) (not e!53294))))

(declare-fun b!81691 () Bool)

(declare-fun lt!38206 () Unit!2322)

(declare-fun lt!38203 () Unit!2322)

(assert (=> b!81691 (= lt!38206 lt!38203)))

(declare-fun lt!38208 () V!3001)

(declare-fun lt!38209 () (_ BitVec 64))

(declare-fun lt!38205 () (_ BitVec 64))

(declare-fun lt!38204 () ListLongMap!1429)

(assert (=> b!81691 (not (contains!739 (+!101 lt!38204 (tuple2!2169 lt!38209 lt!38208)) lt!38205))))

(assert (=> b!81691 (= lt!38203 (addStillNotContains!31 lt!38204 lt!38209 lt!38208 lt!38205))))

(assert (=> b!81691 (= lt!38205 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81691 (= lt!38208 (get!1189 (select (arr!1893 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81691 (= lt!38209 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7613 () ListLongMap!1429)

(assert (=> b!81691 (= lt!38204 call!7613)))

(declare-fun e!53291 () ListLongMap!1429)

(assert (=> b!81691 (= e!53291 (+!101 call!7613 (tuple2!2169 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) (get!1189 (select (arr!1893 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81693 () Bool)

(assert (=> b!81693 (= e!53291 call!7613)))

(declare-fun b!81694 () Bool)

(declare-fun e!53290 () Bool)

(assert (=> b!81694 (= e!53290 (= lt!38207 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16))))))

(declare-fun b!81695 () Bool)

(declare-fun res!42420 () Bool)

(declare-fun e!53296 () Bool)

(assert (=> b!81695 (=> (not res!42420) (not e!53296))))

(assert (=> b!81695 (= res!42420 (not (contains!739 lt!38207 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81696 () Bool)

(assert (=> b!81696 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> b!81696 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))))))))

(assert (=> b!81696 (= e!53294 (= (apply!80 lt!38207 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1893 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81697 () Bool)

(assert (=> b!81697 (= e!53293 e!53290)))

(declare-fun c!12927 () Bool)

(assert (=> b!81697 (= c!12927 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81698 () Bool)

(assert (=> b!81698 (= e!53296 e!53293)))

(declare-fun c!12929 () Bool)

(declare-fun e!53292 () Bool)

(assert (=> b!81698 (= c!12929 e!53292)))

(declare-fun res!42417 () Bool)

(assert (=> b!81698 (=> (not res!42417) (not e!53292))))

(assert (=> b!81698 (= res!42417 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81699 () Bool)

(declare-fun e!53295 () ListLongMap!1429)

(assert (=> b!81699 (= e!53295 e!53291)))

(declare-fun c!12930 () Bool)

(assert (=> b!81699 (= c!12930 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7610 () Bool)

(assert (=> bm!7610 (= call!7613 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16)))))

(declare-fun b!81692 () Bool)

(assert (=> b!81692 (= e!53290 (isEmpty!335 lt!38207))))

(declare-fun d!20287 () Bool)

(assert (=> d!20287 e!53296))

(declare-fun res!42418 () Bool)

(assert (=> d!20287 (=> (not res!42418) (not e!53296))))

(assert (=> d!20287 (= res!42418 (not (contains!739 lt!38207 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20287 (= lt!38207 e!53295)))

(declare-fun c!12928 () Bool)

(assert (=> d!20287 (= c!12928 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!20287 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20287 (= (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38207)))

(declare-fun b!81700 () Bool)

(assert (=> b!81700 (= e!53295 (ListLongMap!1430 Nil!1494))))

(declare-fun b!81701 () Bool)

(assert (=> b!81701 (= e!53292 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81701 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!20287 c!12928) b!81700))

(assert (= (and d!20287 (not c!12928)) b!81699))

(assert (= (and b!81699 c!12930) b!81691))

(assert (= (and b!81699 (not c!12930)) b!81693))

(assert (= (or b!81691 b!81693) bm!7610))

(assert (= (and d!20287 res!42418) b!81695))

(assert (= (and b!81695 res!42420) b!81698))

(assert (= (and b!81698 res!42417) b!81701))

(assert (= (and b!81698 c!12929) b!81690))

(assert (= (and b!81698 (not c!12929)) b!81697))

(assert (= (and b!81690 res!42419) b!81696))

(assert (= (and b!81697 c!12927) b!81694))

(assert (= (and b!81697 (not c!12927)) b!81692))

(declare-fun b_lambda!3645 () Bool)

(assert (=> (not b_lambda!3645) (not b!81691)))

(assert (=> b!81691 t!5170))

(declare-fun b_and!4985 () Bool)

(assert (= b_and!4981 (and (=> t!5170 result!2849) b_and!4985)))

(assert (=> b!81691 t!5172))

(declare-fun b_and!4987 () Bool)

(assert (= b_and!4983 (and (=> t!5172 result!2851) b_and!4987)))

(declare-fun b_lambda!3647 () Bool)

(assert (=> (not b_lambda!3647) (not b!81696)))

(assert (=> b!81696 t!5170))

(declare-fun b_and!4989 () Bool)

(assert (= b_and!4985 (and (=> t!5170 result!2849) b_and!4989)))

(assert (=> b!81696 t!5172))

(declare-fun b_and!4991 () Bool)

(assert (= b_and!4987 (and (=> t!5172 result!2851) b_and!4991)))

(assert (=> b!81690 m!82381))

(assert (=> b!81690 m!82381))

(declare-fun m!84043 () Bool)

(assert (=> b!81690 m!84043))

(assert (=> b!81696 m!82743))

(assert (=> b!81696 m!82381))

(assert (=> b!81696 m!82381))

(declare-fun m!84045 () Bool)

(assert (=> b!81696 m!84045))

(assert (=> b!81696 m!82745))

(assert (=> b!81696 m!82743))

(assert (=> b!81696 m!82747))

(assert (=> b!81696 m!82745))

(assert (=> b!81699 m!82381))

(assert (=> b!81699 m!82381))

(assert (=> b!81699 m!82583))

(declare-fun m!84047 () Bool)

(assert (=> b!81694 m!84047))

(assert (=> bm!7610 m!84047))

(assert (=> b!81691 m!82743))

(assert (=> b!81691 m!82381))

(declare-fun m!84049 () Bool)

(assert (=> b!81691 m!84049))

(assert (=> b!81691 m!84049))

(declare-fun m!84051 () Bool)

(assert (=> b!81691 m!84051))

(declare-fun m!84053 () Bool)

(assert (=> b!81691 m!84053))

(declare-fun m!84055 () Bool)

(assert (=> b!81691 m!84055))

(assert (=> b!81691 m!82745))

(assert (=> b!81691 m!82743))

(assert (=> b!81691 m!82747))

(assert (=> b!81691 m!82745))

(declare-fun m!84057 () Bool)

(assert (=> b!81692 m!84057))

(assert (=> b!81701 m!82381))

(assert (=> b!81701 m!82381))

(assert (=> b!81701 m!82583))

(declare-fun m!84059 () Bool)

(assert (=> b!81695 m!84059))

(declare-fun m!84061 () Bool)

(assert (=> d!20287 m!84061))

(assert (=> d!20287 m!82223))

(assert (=> bm!7523 d!20287))

(declare-fun d!20289 () Bool)

(assert (=> d!20289 (isDefined!91 (getValueByKey!139 (toList!730 lt!37536) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38210 () Unit!2322)

(assert (=> d!20289 (= lt!38210 (choose!487 (toList!730 lt!37536) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53297 () Bool)

(assert (=> d!20289 e!53297))

(declare-fun res!42421 () Bool)

(assert (=> d!20289 (=> (not res!42421) (not e!53297))))

(assert (=> d!20289 (= res!42421 (isStrictlySorted!283 (toList!730 lt!37536)))))

(assert (=> d!20289 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37536) #b1000000000000000000000000000000000000000000000000000000000000000) lt!38210)))

(declare-fun b!81702 () Bool)

(assert (=> b!81702 (= e!53297 (containsKey!142 (toList!730 lt!37536) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20289 res!42421) b!81702))

(assert (=> d!20289 m!83105))

(assert (=> d!20289 m!83105))

(assert (=> d!20289 m!83107))

(declare-fun m!84063 () Bool)

(assert (=> d!20289 m!84063))

(assert (=> d!20289 m!83819))

(assert (=> b!81702 m!83101))

(assert (=> b!81142 d!20289))

(declare-fun d!20291 () Bool)

(assert (=> d!20291 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37536) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37536) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3462 () Bool)

(assert (= bs!3462 d!20291))

(assert (=> bs!3462 m!83105))

(declare-fun m!84065 () Bool)

(assert (=> bs!3462 m!84065))

(assert (=> b!81142 d!20291))

(declare-fun b!81706 () Bool)

(declare-fun e!53299 () Option!145)

(assert (=> b!81706 (= e!53299 None!143)))

(declare-fun b!81705 () Bool)

(assert (=> b!81705 (= e!53299 (getValueByKey!139 (t!5156 (toList!730 lt!37536)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!20293 () Bool)

(declare-fun c!12931 () Bool)

(assert (=> d!20293 (= c!12931 (and ((_ is Cons!1493) (toList!730 lt!37536)) (= (_1!1095 (h!2082 (toList!730 lt!37536))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53298 () Option!145)

(assert (=> d!20293 (= (getValueByKey!139 (toList!730 lt!37536) #b1000000000000000000000000000000000000000000000000000000000000000) e!53298)))

(declare-fun b!81703 () Bool)

(assert (=> b!81703 (= e!53298 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37536)))))))

(declare-fun b!81704 () Bool)

(assert (=> b!81704 (= e!53298 e!53299)))

(declare-fun c!12932 () Bool)

(assert (=> b!81704 (= c!12932 (and ((_ is Cons!1493) (toList!730 lt!37536)) (not (= (_1!1095 (h!2082 (toList!730 lt!37536))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!20293 c!12931) b!81703))

(assert (= (and d!20293 (not c!12931)) b!81704))

(assert (= (and b!81704 c!12932) b!81705))

(assert (= (and b!81704 (not c!12932)) b!81706))

(declare-fun m!84067 () Bool)

(assert (=> b!81705 m!84067))

(assert (=> b!81142 d!20293))

(declare-fun d!20295 () Bool)

(declare-fun lt!38211 () Bool)

(assert (=> d!20295 (= lt!38211 (select (content!86 lt!37906) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun e!53300 () Bool)

(assert (=> d!20295 (= lt!38211 e!53300)))

(declare-fun res!42423 () Bool)

(assert (=> d!20295 (=> (not res!42423) (not e!53300))))

(assert (=> d!20295 (= res!42423 ((_ is Cons!1493) lt!37906))))

(assert (=> d!20295 (= (contains!742 lt!37906 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))) lt!38211)))

(declare-fun b!81707 () Bool)

(declare-fun e!53301 () Bool)

(assert (=> b!81707 (= e!53300 e!53301)))

(declare-fun res!42422 () Bool)

(assert (=> b!81707 (=> res!42422 e!53301)))

(assert (=> b!81707 (= res!42422 (= (h!2082 lt!37906) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun b!81708 () Bool)

(assert (=> b!81708 (= e!53301 (contains!742 (t!5156 lt!37906) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(assert (= (and d!20295 res!42423) b!81707))

(assert (= (and b!81707 (not res!42422)) b!81708))

(declare-fun m!84069 () Bool)

(assert (=> d!20295 m!84069))

(declare-fun m!84071 () Bool)

(assert (=> d!20295 m!84071))

(declare-fun m!84073 () Bool)

(assert (=> b!81708 m!84073))

(assert (=> b!81102 d!20295))

(declare-fun b!81712 () Bool)

(declare-fun e!53303 () Option!145)

(assert (=> b!81712 (= e!53303 None!143)))

(declare-fun b!81711 () Bool)

(assert (=> b!81711 (= e!53303 (getValueByKey!139 (t!5156 (toList!730 lt!37632)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun d!20297 () Bool)

(declare-fun c!12933 () Bool)

(assert (=> d!20297 (= c!12933 (and ((_ is Cons!1493) (toList!730 lt!37632)) (= (_1!1095 (h!2082 (toList!730 lt!37632))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun e!53302 () Option!145)

(assert (=> d!20297 (= (getValueByKey!139 (toList!730 lt!37632) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) e!53302)))

(declare-fun b!81709 () Bool)

(assert (=> b!81709 (= e!53302 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37632)))))))

(declare-fun b!81710 () Bool)

(assert (=> b!81710 (= e!53302 e!53303)))

(declare-fun c!12934 () Bool)

(assert (=> b!81710 (= c!12934 (and ((_ is Cons!1493) (toList!730 lt!37632)) (not (= (_1!1095 (h!2082 (toList!730 lt!37632))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (= (and d!20297 c!12933) b!81709))

(assert (= (and d!20297 (not c!12933)) b!81710))

(assert (= (and b!81710 c!12934) b!81711))

(assert (= (and b!81710 (not c!12934)) b!81712))

(declare-fun m!84075 () Bool)

(assert (=> b!81711 m!84075))

(assert (=> b!80767 d!20297))

(declare-fun d!20299 () Bool)

(declare-fun lt!38212 () Bool)

(assert (=> d!20299 (= lt!38212 (select (content!86 lt!37515) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(declare-fun e!53304 () Bool)

(assert (=> d!20299 (= lt!38212 e!53304)))

(declare-fun res!42425 () Bool)

(assert (=> d!20299 (=> (not res!42425) (not e!53304))))

(assert (=> d!20299 (= res!42425 ((_ is Cons!1493) lt!37515))))

(assert (=> d!20299 (= (contains!742 lt!37515 (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))) lt!38212)))

(declare-fun b!81713 () Bool)

(declare-fun e!53305 () Bool)

(assert (=> b!81713 (= e!53304 e!53305)))

(declare-fun res!42424 () Bool)

(assert (=> b!81713 (=> res!42424 e!53305)))

(assert (=> b!81713 (= res!42424 (= (h!2082 lt!37515) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(declare-fun b!81714 () Bool)

(assert (=> b!81714 (= e!53305 (contains!742 (t!5156 lt!37515) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(assert (= (and d!20299 res!42425) b!81713))

(assert (= (and b!81713 (not res!42424)) b!81714))

(declare-fun m!84077 () Bool)

(assert (=> d!20299 m!84077))

(declare-fun m!84079 () Bool)

(assert (=> d!20299 m!84079))

(declare-fun m!84081 () Bool)

(assert (=> b!81714 m!84081))

(assert (=> b!80692 d!20299))

(declare-fun d!20301 () Bool)

(assert (=> d!20301 (= (isEmpty!337 (getValueByKey!139 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))) (not ((_ is Some!144) (getValueByKey!139 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))))

(assert (=> d!19963 d!20301))

(declare-fun d!20303 () Bool)

(declare-fun res!42426 () Bool)

(declare-fun e!53306 () Bool)

(assert (=> d!20303 (=> res!42426 e!53306)))

(assert (=> d!20303 (= res!42426 (and ((_ is Cons!1493) (toList!730 lt!37536)) (= (_1!1095 (h!2082 (toList!730 lt!37536))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20303 (= (containsKey!142 (toList!730 lt!37536) #b0000000000000000000000000000000000000000000000000000000000000000) e!53306)))

(declare-fun b!81715 () Bool)

(declare-fun e!53307 () Bool)

(assert (=> b!81715 (= e!53306 e!53307)))

(declare-fun res!42427 () Bool)

(assert (=> b!81715 (=> (not res!42427) (not e!53307))))

(assert (=> b!81715 (= res!42427 (and (or (not ((_ is Cons!1493) (toList!730 lt!37536))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37536))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1493) (toList!730 lt!37536)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37536))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81716 () Bool)

(assert (=> b!81716 (= e!53307 (containsKey!142 (t!5156 (toList!730 lt!37536)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20303 (not res!42426)) b!81715))

(assert (= (and b!81715 res!42427) b!81716))

(declare-fun m!84083 () Bool)

(assert (=> b!81716 m!84083))

(assert (=> d!19753 d!20303))

(assert (=> d!19811 d!19809))

(declare-fun d!20305 () Bool)

(assert (=> d!20305 (= (getValueByKey!139 lt!37560 (_1!1095 lt!37212)) (Some!144 (_2!1095 lt!37212)))))

(assert (=> d!20305 true))

(declare-fun _$22!401 () Unit!2322)

(assert (=> d!20305 (= (choose!478 lt!37560 (_1!1095 lt!37212) (_2!1095 lt!37212)) _$22!401)))

(declare-fun bs!3463 () Bool)

(assert (= bs!3463 d!20305))

(assert (=> bs!3463 m!82183))

(assert (=> d!19811 d!20305))

(declare-fun d!20307 () Bool)

(declare-fun res!42428 () Bool)

(declare-fun e!53308 () Bool)

(assert (=> d!20307 (=> res!42428 e!53308)))

(assert (=> d!20307 (= res!42428 (or ((_ is Nil!1494) lt!37560) ((_ is Nil!1494) (t!5156 lt!37560))))))

(assert (=> d!20307 (= (isStrictlySorted!283 lt!37560) e!53308)))

(declare-fun b!81717 () Bool)

(declare-fun e!53309 () Bool)

(assert (=> b!81717 (= e!53308 e!53309)))

(declare-fun res!42429 () Bool)

(assert (=> b!81717 (=> (not res!42429) (not e!53309))))

(assert (=> b!81717 (= res!42429 (bvslt (_1!1095 (h!2082 lt!37560)) (_1!1095 (h!2082 (t!5156 lt!37560)))))))

(declare-fun b!81718 () Bool)

(assert (=> b!81718 (= e!53309 (isStrictlySorted!283 (t!5156 lt!37560)))))

(assert (= (and d!20307 (not res!42428)) b!81717))

(assert (= (and b!81717 res!42429) b!81718))

(declare-fun m!84085 () Bool)

(assert (=> b!81718 m!84085))

(assert (=> d!19811 d!20307))

(declare-fun b!81722 () Bool)

(declare-fun e!53311 () Option!145)

(assert (=> b!81722 (= e!53311 None!143)))

(declare-fun b!81721 () Bool)

(assert (=> b!81721 (= e!53311 (getValueByKey!139 (t!5156 (t!5156 lt!37511)) (_1!1095 lt!37212)))))

(declare-fun d!20309 () Bool)

(declare-fun c!12935 () Bool)

(assert (=> d!20309 (= c!12935 (and ((_ is Cons!1493) (t!5156 lt!37511)) (= (_1!1095 (h!2082 (t!5156 lt!37511))) (_1!1095 lt!37212))))))

(declare-fun e!53310 () Option!145)

(assert (=> d!20309 (= (getValueByKey!139 (t!5156 lt!37511) (_1!1095 lt!37212)) e!53310)))

(declare-fun b!81719 () Bool)

(assert (=> b!81719 (= e!53310 (Some!144 (_2!1095 (h!2082 (t!5156 lt!37511)))))))

(declare-fun b!81720 () Bool)

(assert (=> b!81720 (= e!53310 e!53311)))

(declare-fun c!12936 () Bool)

(assert (=> b!81720 (= c!12936 (and ((_ is Cons!1493) (t!5156 lt!37511)) (not (= (_1!1095 (h!2082 (t!5156 lt!37511))) (_1!1095 lt!37212)))))))

(assert (= (and d!20309 c!12935) b!81719))

(assert (= (and d!20309 (not c!12935)) b!81720))

(assert (= (and b!81720 c!12936) b!81721))

(assert (= (and b!81720 (not c!12936)) b!81722))

(declare-fun m!84087 () Bool)

(assert (=> b!81721 m!84087))

(assert (=> b!80985 d!20309))

(declare-fun d!20311 () Bool)

(assert (=> d!20311 (isDefined!91 (getValueByKey!139 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38213 () Unit!2322)

(assert (=> d!20311 (= lt!38213 (choose!487 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53312 () Bool)

(assert (=> d!20311 e!53312))

(declare-fun res!42430 () Bool)

(assert (=> d!20311 (=> (not res!42430) (not e!53312))))

(assert (=> d!20311 (= res!42430 (isStrictlySorted!283 (toList!730 lt!37476)))))

(assert (=> d!20311 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000) lt!38213)))

(declare-fun b!81723 () Bool)

(assert (=> b!81723 (= e!53312 (containsKey!142 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20311 res!42430) b!81723))

(assert (=> d!20311 m!82281))

(assert (=> d!20311 m!82281))

(assert (=> d!20311 m!82283))

(declare-fun m!84089 () Bool)

(assert (=> d!20311 m!84089))

(declare-fun m!84091 () Bool)

(assert (=> d!20311 m!84091))

(assert (=> b!81723 m!82277))

(assert (=> b!80732 d!20311))

(declare-fun d!20313 () Bool)

(assert (=> d!20313 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3464 () Bool)

(assert (= bs!3464 d!20313))

(assert (=> bs!3464 m!82281))

(declare-fun m!84093 () Bool)

(assert (=> bs!3464 m!84093))

(assert (=> b!80732 d!20313))

(declare-fun b!81727 () Bool)

(declare-fun e!53314 () Option!145)

(assert (=> b!81727 (= e!53314 None!143)))

(declare-fun b!81726 () Bool)

(assert (=> b!81726 (= e!53314 (getValueByKey!139 (t!5156 (toList!730 lt!37476)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!20315 () Bool)

(declare-fun c!12937 () Bool)

(assert (=> d!20315 (= c!12937 (and ((_ is Cons!1493) (toList!730 lt!37476)) (= (_1!1095 (h!2082 (toList!730 lt!37476))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!53313 () Option!145)

(assert (=> d!20315 (= (getValueByKey!139 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000) e!53313)))

(declare-fun b!81724 () Bool)

(assert (=> b!81724 (= e!53313 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37476)))))))

(declare-fun b!81725 () Bool)

(assert (=> b!81725 (= e!53313 e!53314)))

(declare-fun c!12938 () Bool)

(assert (=> b!81725 (= c!12938 (and ((_ is Cons!1493) (toList!730 lt!37476)) (not (= (_1!1095 (h!2082 (toList!730 lt!37476))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!20315 c!12937) b!81724))

(assert (= (and d!20315 (not c!12937)) b!81725))

(assert (= (and b!81725 c!12938) b!81726))

(assert (= (and b!81725 (not c!12938)) b!81727))

(declare-fun m!84095 () Bool)

(assert (=> b!81726 m!84095))

(assert (=> b!80732 d!20315))

(declare-fun b!81728 () Bool)

(declare-fun e!53317 () Bool)

(declare-fun call!7614 () Bool)

(assert (=> b!81728 (= e!53317 call!7614)))

(declare-fun b!81729 () Bool)

(declare-fun e!53316 () Bool)

(assert (=> b!81729 (= e!53316 call!7614)))

(declare-fun b!81730 () Bool)

(assert (=> b!81730 (= e!53317 e!53316)))

(declare-fun lt!38216 () (_ BitVec 64))

(assert (=> b!81730 (= lt!38216 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!38215 () Unit!2322)

(assert (=> b!81730 (= lt!38215 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) lt!38216 #b00000000000000000000000000000000))))

(assert (=> b!81730 (arrayContainsKey!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) lt!38216 #b00000000000000000000000000000000)))

(declare-fun lt!38214 () Unit!2322)

(assert (=> b!81730 (= lt!38214 lt!38215)))

(declare-fun res!42432 () Bool)

(assert (=> b!81730 (= res!42432 (= (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) #b00000000000000000000000000000000) (_keys!3956 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992)))) (Found!235 #b00000000000000000000000000000000)))))

(assert (=> b!81730 (=> (not res!42432) (not e!53316))))

(declare-fun bm!7611 () Bool)

(assert (=> bm!7611 (= call!7614 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3956 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun b!81731 () Bool)

(declare-fun e!53315 () Bool)

(assert (=> b!81731 (= e!53315 e!53317)))

(declare-fun c!12939 () Bool)

(assert (=> b!81731 (= c!12939 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!20317 () Bool)

(declare-fun res!42431 () Bool)

(assert (=> d!20317 (=> res!42431 e!53315)))

(assert (=> d!20317 (= res!42431 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> d!20317 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (mask!6298 (v!2610 (underlying!283 thiss!992)))) e!53315)))

(assert (= (and d!20317 (not res!42431)) b!81731))

(assert (= (and b!81731 c!12939) b!81730))

(assert (= (and b!81731 (not c!12939)) b!81728))

(assert (= (and b!81730 res!42432) b!81729))

(assert (= (or b!81729 b!81728) bm!7611))

(assert (=> b!81730 m!83657))

(declare-fun m!84097 () Bool)

(assert (=> b!81730 m!84097))

(declare-fun m!84099 () Bool)

(assert (=> b!81730 m!84099))

(assert (=> b!81730 m!83657))

(declare-fun m!84101 () Bool)

(assert (=> b!81730 m!84101))

(declare-fun m!84103 () Bool)

(assert (=> bm!7611 m!84103))

(assert (=> b!81731 m!83657))

(assert (=> b!81731 m!83657))

(assert (=> b!81731 m!83659))

(assert (=> b!80792 d!20317))

(declare-fun b!81735 () Bool)

(declare-fun e!53319 () Option!145)

(assert (=> b!81735 (= e!53319 None!143)))

(declare-fun b!81734 () Bool)

(assert (=> b!81734 (= e!53319 (getValueByKey!139 (t!5156 (toList!730 lt!37778)) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun c!12940 () Bool)

(declare-fun d!20319 () Bool)

(assert (=> d!20319 (= c!12940 (and ((_ is Cons!1493) (toList!730 lt!37778)) (= (_1!1095 (h!2082 (toList!730 lt!37778))) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53318 () Option!145)

(assert (=> d!20319 (= (getValueByKey!139 (toList!730 lt!37778) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53318)))

(declare-fun b!81732 () Bool)

(assert (=> b!81732 (= e!53318 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37778)))))))

(declare-fun b!81733 () Bool)

(assert (=> b!81733 (= e!53318 e!53319)))

(declare-fun c!12941 () Bool)

(assert (=> b!81733 (= c!12941 (and ((_ is Cons!1493) (toList!730 lt!37778)) (not (= (_1!1095 (h!2082 (toList!730 lt!37778))) (_1!1095 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20319 c!12940) b!81732))

(assert (= (and d!20319 (not c!12940)) b!81733))

(assert (= (and b!81733 c!12941) b!81734))

(assert (= (and b!81733 (not c!12941)) b!81735))

(declare-fun m!84105 () Bool)

(assert (=> b!81734 m!84105))

(assert (=> b!80897 d!20319))

(assert (=> d!19739 d!19905))

(declare-fun b!81752 () Bool)

(declare-fun res!42443 () Bool)

(declare-fun e!53328 () Bool)

(assert (=> b!81752 (=> (not res!42443) (not e!53328))))

(declare-fun call!7619 () Bool)

(assert (=> b!81752 (= res!42443 call!7619)))

(declare-fun e!53330 () Bool)

(assert (=> b!81752 (= e!53330 e!53328)))

(declare-fun d!20321 () Bool)

(declare-fun e!53331 () Bool)

(assert (=> d!20321 e!53331))

(declare-fun c!12947 () Bool)

(declare-fun lt!38219 () SeekEntryResult!235)

(assert (=> d!20321 (= c!12947 ((_ is MissingZero!235) lt!38219))))

(assert (=> d!20321 (= lt!38219 (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(assert (=> d!20321 true))

(declare-fun _$34!826 () Unit!2322)

(assert (=> d!20321 (= (choose!477 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)) _$34!826)))

(declare-fun bm!7616 () Bool)

(assert (=> bm!7616 (= call!7619 (inRange!0 (ite c!12947 (index!3075 lt!38219) (index!3078 lt!38219)) (mask!6298 newMap!16)))))

(declare-fun b!81753 () Bool)

(declare-fun res!42441 () Bool)

(assert (=> b!81753 (=> (not res!42441) (not e!53328))))

(assert (=> b!81753 (= res!42441 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3078 lt!38219)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81754 () Bool)

(assert (=> b!81754 (= e!53331 e!53330)))

(declare-fun c!12946 () Bool)

(assert (=> b!81754 (= c!12946 ((_ is MissingVacant!235) lt!38219))))

(declare-fun call!7620 () Bool)

(declare-fun bm!7617 () Bool)

(assert (=> bm!7617 (= call!7620 (arrayContainsKey!0 (_keys!3956 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!81755 () Bool)

(declare-fun e!53329 () Bool)

(assert (=> b!81755 (= e!53329 (not call!7620))))

(declare-fun b!81756 () Bool)

(declare-fun res!42442 () Bool)

(assert (=> b!81756 (= res!42442 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3075 lt!38219)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81756 (=> (not res!42442) (not e!53329))))

(declare-fun b!81757 () Bool)

(assert (=> b!81757 (= e!53331 e!53329)))

(declare-fun res!42444 () Bool)

(assert (=> b!81757 (= res!42444 call!7619)))

(assert (=> b!81757 (=> (not res!42444) (not e!53329))))

(declare-fun b!81758 () Bool)

(assert (=> b!81758 (= e!53330 ((_ is Undefined!235) lt!38219))))

(declare-fun b!81759 () Bool)

(assert (=> b!81759 (= e!53328 (not call!7620))))

(assert (= (and d!20321 c!12947) b!81757))

(assert (= (and d!20321 (not c!12947)) b!81754))

(assert (= (and b!81757 res!42444) b!81756))

(assert (= (and b!81756 res!42442) b!81755))

(assert (= (and b!81754 c!12946) b!81752))

(assert (= (and b!81754 (not c!12946)) b!81758))

(assert (= (and b!81752 res!42443) b!81753))

(assert (= (and b!81753 res!42441) b!81759))

(assert (= (or b!81757 b!81752) bm!7616))

(assert (= (or b!81755 b!81759) bm!7617))

(declare-fun m!84107 () Bool)

(assert (=> b!81753 m!84107))

(assert (=> d!20321 m!81737))

(assert (=> d!20321 m!81959))

(declare-fun m!84109 () Bool)

(assert (=> b!81756 m!84109))

(assert (=> bm!7617 m!81737))

(assert (=> bm!7617 m!81961))

(declare-fun m!84111 () Bool)

(assert (=> bm!7616 m!84111))

(assert (=> d!19739 d!20321))

(assert (=> d!19739 d!20023))

(assert (=> b!80969 d!20283))

(declare-fun d!20323 () Bool)

(assert (=> d!20323 (= (isEmpty!335 lt!37606) (isEmpty!336 (toList!730 lt!37606)))))

(declare-fun bs!3465 () Bool)

(assert (= bs!3465 d!20323))

(declare-fun m!84113 () Bool)

(assert (=> bs!3465 m!84113))

(assert (=> b!80740 d!20323))

(declare-fun b!81760 () Bool)

(declare-fun res!42446 () Bool)

(declare-fun e!53332 () Bool)

(assert (=> b!81760 (=> (not res!42446) (not e!53332))))

(assert (=> b!81760 (= res!42446 (and (= (size!2135 (_values!2275 (_2!1094 lt!37425))) (bvadd (mask!6298 (_2!1094 lt!37425)) #b00000000000000000000000000000001)) (= (size!2134 (_keys!3956 (_2!1094 lt!37425))) (size!2135 (_values!2275 (_2!1094 lt!37425)))) (bvsge (_size!417 (_2!1094 lt!37425)) #b00000000000000000000000000000000) (bvsle (_size!417 (_2!1094 lt!37425)) (bvadd (mask!6298 (_2!1094 lt!37425)) #b00000000000000000000000000000001))))))

(declare-fun b!81763 () Bool)

(assert (=> b!81763 (= e!53332 (and (bvsge (extraKeys!2139 (_2!1094 lt!37425)) #b00000000000000000000000000000000) (bvsle (extraKeys!2139 (_2!1094 lt!37425)) #b00000000000000000000000000000011) (bvsge (_vacant!417 (_2!1094 lt!37425)) #b00000000000000000000000000000000)))))

(declare-fun b!81761 () Bool)

(declare-fun res!42447 () Bool)

(assert (=> b!81761 (=> (not res!42447) (not e!53332))))

(assert (=> b!81761 (= res!42447 (bvsge (size!2140 (_2!1094 lt!37425)) (_size!417 (_2!1094 lt!37425))))))

(declare-fun b!81762 () Bool)

(declare-fun res!42445 () Bool)

(assert (=> b!81762 (=> (not res!42445) (not e!53332))))

(assert (=> b!81762 (= res!42445 (= (size!2140 (_2!1094 lt!37425)) (bvadd (_size!417 (_2!1094 lt!37425)) (bvsdiv (bvadd (extraKeys!2139 (_2!1094 lt!37425)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!20325 () Bool)

(declare-fun res!42448 () Bool)

(assert (=> d!20325 (=> (not res!42448) (not e!53332))))

(assert (=> d!20325 (= res!42448 (validMask!0 (mask!6298 (_2!1094 lt!37425))))))

(assert (=> d!20325 (= (simpleValid!56 (_2!1094 lt!37425)) e!53332)))

(assert (= (and d!20325 res!42448) b!81760))

(assert (= (and b!81760 res!42446) b!81761))

(assert (= (and b!81761 res!42447) b!81762))

(assert (= (and b!81762 res!42445) b!81763))

(declare-fun m!84115 () Bool)

(assert (=> b!81761 m!84115))

(assert (=> b!81762 m!84115))

(assert (=> d!20325 m!83713))

(assert (=> d!19751 d!20325))

(declare-fun d!20327 () Bool)

(assert (=> d!20327 (= (apply!80 lt!37919 lt!37921) (get!1192 (getValueByKey!139 (toList!730 lt!37919) lt!37921)))))

(declare-fun bs!3466 () Bool)

(assert (= bs!3466 d!20327))

(declare-fun m!84117 () Bool)

(assert (=> bs!3466 m!84117))

(assert (=> bs!3466 m!84117))

(declare-fun m!84119 () Bool)

(assert (=> bs!3466 m!84119))

(assert (=> b!81119 d!20327))

(declare-fun d!20329 () Bool)

(assert (=> d!20329 (= (apply!80 (+!101 lt!37913 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) lt!37924) (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37913 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))) lt!37924)))))

(declare-fun bs!3467 () Bool)

(assert (= bs!3467 d!20329))

(declare-fun m!84121 () Bool)

(assert (=> bs!3467 m!84121))

(assert (=> bs!3467 m!84121))

(declare-fun m!84123 () Bool)

(assert (=> bs!3467 m!84123))

(assert (=> b!81119 d!20329))

(declare-fun d!20331 () Bool)

(assert (=> d!20331 (= (apply!80 (+!101 lt!37919 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) lt!37921) (apply!80 lt!37919 lt!37921))))

(declare-fun lt!38220 () Unit!2322)

(assert (=> d!20331 (= lt!38220 (choose!481 lt!37919 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) lt!37921))))

(declare-fun e!53333 () Bool)

(assert (=> d!20331 e!53333))

(declare-fun res!42449 () Bool)

(assert (=> d!20331 (=> (not res!42449) (not e!53333))))

(assert (=> d!20331 (= res!42449 (contains!739 lt!37919 lt!37921))))

(assert (=> d!20331 (= (addApplyDifferent!56 lt!37919 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) lt!37921) lt!38220)))

(declare-fun b!81764 () Bool)

(assert (=> b!81764 (= e!53333 (not (= lt!37921 lt!37908)))))

(assert (= (and d!20331 res!42449) b!81764))

(assert (=> d!20331 m!83039))

(declare-fun m!84125 () Bool)

(assert (=> d!20331 m!84125))

(assert (=> d!20331 m!83035))

(declare-fun m!84127 () Bool)

(assert (=> d!20331 m!84127))

(assert (=> d!20331 m!83035))

(assert (=> d!20331 m!83037))

(assert (=> b!81119 d!20331))

(declare-fun d!20333 () Bool)

(declare-fun e!53334 () Bool)

(assert (=> d!20333 e!53334))

(declare-fun res!42451 () Bool)

(assert (=> d!20333 (=> (not res!42451) (not e!53334))))

(declare-fun lt!38224 () ListLongMap!1429)

(assert (=> d!20333 (= res!42451 (contains!739 lt!38224 (_1!1095 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(declare-fun lt!38222 () List!1497)

(assert (=> d!20333 (= lt!38224 (ListLongMap!1430 lt!38222))))

(declare-fun lt!38221 () Unit!2322)

(declare-fun lt!38223 () Unit!2322)

(assert (=> d!20333 (= lt!38221 lt!38223)))

(assert (=> d!20333 (= (getValueByKey!139 lt!38222 (_1!1095 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))) (Some!144 (_2!1095 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(assert (=> d!20333 (= lt!38223 (lemmaContainsTupThenGetReturnValue!56 lt!38222 (_1!1095 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) (_2!1095 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(assert (=> d!20333 (= lt!38222 (insertStrictlySorted!59 (toList!730 lt!37913) (_1!1095 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) (_2!1095 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(assert (=> d!20333 (= (+!101 lt!37913 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) lt!38224)))

(declare-fun b!81765 () Bool)

(declare-fun res!42450 () Bool)

(assert (=> b!81765 (=> (not res!42450) (not e!53334))))

(assert (=> b!81765 (= res!42450 (= (getValueByKey!139 (toList!730 lt!38224) (_1!1095 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))) (Some!144 (_2!1095 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))))))

(declare-fun b!81766 () Bool)

(assert (=> b!81766 (= e!53334 (contains!742 (toList!730 lt!38224) (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))))

(assert (= (and d!20333 res!42451) b!81765))

(assert (= (and b!81765 res!42450) b!81766))

(declare-fun m!84129 () Bool)

(assert (=> d!20333 m!84129))

(declare-fun m!84131 () Bool)

(assert (=> d!20333 m!84131))

(declare-fun m!84133 () Bool)

(assert (=> d!20333 m!84133))

(declare-fun m!84135 () Bool)

(assert (=> d!20333 m!84135))

(declare-fun m!84137 () Bool)

(assert (=> b!81765 m!84137))

(declare-fun m!84139 () Bool)

(assert (=> b!81766 m!84139))

(assert (=> b!81119 d!20333))

(declare-fun d!20335 () Bool)

(assert (=> d!20335 (contains!739 (+!101 lt!37922 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))) lt!37925)))

(declare-fun lt!38225 () Unit!2322)

(assert (=> d!20335 (= lt!38225 (choose!482 lt!37922 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) lt!37925))))

(assert (=> d!20335 (contains!739 lt!37922 lt!37925)))

(assert (=> d!20335 (= (addStillContains!56 lt!37922 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) lt!37925) lt!38225)))

(declare-fun bs!3468 () Bool)

(assert (= bs!3468 d!20335))

(assert (=> bs!3468 m!83047))

(assert (=> bs!3468 m!83047))

(assert (=> bs!3468 m!83065))

(declare-fun m!84141 () Bool)

(assert (=> bs!3468 m!84141))

(declare-fun m!84143 () Bool)

(assert (=> bs!3468 m!84143))

(assert (=> b!81119 d!20335))

(declare-fun d!20337 () Bool)

(declare-fun e!53335 () Bool)

(assert (=> d!20337 e!53335))

(declare-fun res!42452 () Bool)

(assert (=> d!20337 (=> res!42452 e!53335)))

(declare-fun lt!38227 () Bool)

(assert (=> d!20337 (= res!42452 (not lt!38227))))

(declare-fun lt!38226 () Bool)

(assert (=> d!20337 (= lt!38227 lt!38226)))

(declare-fun lt!38228 () Unit!2322)

(declare-fun e!53336 () Unit!2322)

(assert (=> d!20337 (= lt!38228 e!53336)))

(declare-fun c!12948 () Bool)

(assert (=> d!20337 (= c!12948 lt!38226)))

(assert (=> d!20337 (= lt!38226 (containsKey!142 (toList!730 (+!101 lt!37922 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))) lt!37925))))

(assert (=> d!20337 (= (contains!739 (+!101 lt!37922 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))) lt!37925) lt!38227)))

(declare-fun b!81767 () Bool)

(declare-fun lt!38229 () Unit!2322)

(assert (=> b!81767 (= e!53336 lt!38229)))

(assert (=> b!81767 (= lt!38229 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 (+!101 lt!37922 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))) lt!37925))))

(assert (=> b!81767 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37922 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))) lt!37925))))

(declare-fun b!81768 () Bool)

(declare-fun Unit!2379 () Unit!2322)

(assert (=> b!81768 (= e!53336 Unit!2379)))

(declare-fun b!81769 () Bool)

(assert (=> b!81769 (= e!53335 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37922 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))) lt!37925)))))

(assert (= (and d!20337 c!12948) b!81767))

(assert (= (and d!20337 (not c!12948)) b!81768))

(assert (= (and d!20337 (not res!42452)) b!81769))

(declare-fun m!84145 () Bool)

(assert (=> d!20337 m!84145))

(declare-fun m!84147 () Bool)

(assert (=> b!81767 m!84147))

(declare-fun m!84149 () Bool)

(assert (=> b!81767 m!84149))

(assert (=> b!81767 m!84149))

(declare-fun m!84151 () Bool)

(assert (=> b!81767 m!84151))

(assert (=> b!81769 m!84149))

(assert (=> b!81769 m!84149))

(assert (=> b!81769 m!84151))

(assert (=> b!81119 d!20337))

(declare-fun d!20339 () Bool)

(assert (=> d!20339 (= (apply!80 lt!37911 lt!37910) (get!1192 (getValueByKey!139 (toList!730 lt!37911) lt!37910)))))

(declare-fun bs!3469 () Bool)

(assert (= bs!3469 d!20339))

(declare-fun m!84153 () Bool)

(assert (=> bs!3469 m!84153))

(assert (=> bs!3469 m!84153))

(declare-fun m!84155 () Bool)

(assert (=> bs!3469 m!84155))

(assert (=> b!81119 d!20339))

(declare-fun d!20341 () Bool)

(assert (=> d!20341 (= (apply!80 (+!101 lt!37919 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) lt!37921) (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37919 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))) lt!37921)))))

(declare-fun bs!3470 () Bool)

(assert (= bs!3470 d!20341))

(declare-fun m!84157 () Bool)

(assert (=> bs!3470 m!84157))

(assert (=> bs!3470 m!84157))

(declare-fun m!84159 () Bool)

(assert (=> bs!3470 m!84159))

(assert (=> b!81119 d!20341))

(declare-fun d!20343 () Bool)

(assert (=> d!20343 (= (apply!80 (+!101 lt!37913 (tuple2!2169 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) lt!37924) (apply!80 lt!37913 lt!37924))))

(declare-fun lt!38230 () Unit!2322)

(assert (=> d!20343 (= lt!38230 (choose!481 lt!37913 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) lt!37924))))

(declare-fun e!53337 () Bool)

(assert (=> d!20343 e!53337))

(declare-fun res!42453 () Bool)

(assert (=> d!20343 (=> (not res!42453) (not e!53337))))

(assert (=> d!20343 (= res!42453 (contains!739 lt!37913 lt!37924))))

(assert (=> d!20343 (= (addApplyDifferent!56 lt!37913 lt!37927 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) lt!37924) lt!38230)))

(declare-fun b!81770 () Bool)

(assert (=> b!81770 (= e!53337 (not (= lt!37924 lt!37927)))))

(assert (= (and d!20343 res!42453) b!81770))

(assert (=> d!20343 m!83057))

(declare-fun m!84161 () Bool)

(assert (=> d!20343 m!84161))

(assert (=> d!20343 m!83045))

(declare-fun m!84163 () Bool)

(assert (=> d!20343 m!84163))

(assert (=> d!20343 m!83045))

(assert (=> d!20343 m!83051))

(assert (=> b!81119 d!20343))

(declare-fun b!81771 () Bool)

(declare-fun e!53341 () Bool)

(declare-fun e!53342 () Bool)

(assert (=> b!81771 (= e!53341 e!53342)))

(assert (=> b!81771 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun res!42456 () Bool)

(declare-fun lt!38235 () ListLongMap!1429)

(assert (=> b!81771 (= res!42456 (contains!739 lt!38235 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81771 (=> (not res!42456) (not e!53342))))

(declare-fun b!81772 () Bool)

(declare-fun lt!38234 () Unit!2322)

(declare-fun lt!38231 () Unit!2322)

(assert (=> b!81772 (= lt!38234 lt!38231)))

(declare-fun lt!38233 () (_ BitVec 64))

(declare-fun lt!38237 () (_ BitVec 64))

(declare-fun lt!38236 () V!3001)

(declare-fun lt!38232 () ListLongMap!1429)

(assert (=> b!81772 (not (contains!739 (+!101 lt!38232 (tuple2!2169 lt!38237 lt!38236)) lt!38233))))

(assert (=> b!81772 (= lt!38231 (addStillNotContains!31 lt!38232 lt!38237 lt!38236 lt!38233))))

(assert (=> b!81772 (= lt!38233 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81772 (= lt!38236 (get!1189 (select (arr!1893 (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81772 (= lt!38237 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7621 () ListLongMap!1429)

(assert (=> b!81772 (= lt!38232 call!7621)))

(declare-fun e!53339 () ListLongMap!1429)

(assert (=> b!81772 (= e!53339 (+!101 call!7621 (tuple2!2169 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000) (get!1189 (select (arr!1893 (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81774 () Bool)

(assert (=> b!81774 (= e!53339 call!7621)))

(declare-fun e!53338 () Bool)

(declare-fun b!81775 () Bool)

(assert (=> b!81775 (= e!53338 (= lt!38235 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403) (mask!6298 newMap!16) (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16))))))

(declare-fun b!81776 () Bool)

(declare-fun res!42457 () Bool)

(declare-fun e!53344 () Bool)

(assert (=> b!81776 (=> (not res!42457) (not e!53344))))

(assert (=> b!81776 (= res!42457 (not (contains!739 lt!38235 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81777 () Bool)

(assert (=> b!81777 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> b!81777 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403))))))

(assert (=> b!81777 (= e!53342 (= (apply!80 lt!38235 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1893 (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81778 () Bool)

(assert (=> b!81778 (= e!53341 e!53338)))

(declare-fun c!12949 () Bool)

(assert (=> b!81778 (= c!12949 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81779 () Bool)

(assert (=> b!81779 (= e!53344 e!53341)))

(declare-fun c!12951 () Bool)

(declare-fun e!53340 () Bool)

(assert (=> b!81779 (= c!12951 e!53340)))

(declare-fun res!42454 () Bool)

(assert (=> b!81779 (=> (not res!42454) (not e!53340))))

(assert (=> b!81779 (= res!42454 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!81780 () Bool)

(declare-fun e!53343 () ListLongMap!1429)

(assert (=> b!81780 (= e!53343 e!53339)))

(declare-fun c!12952 () Bool)

(assert (=> b!81780 (= c!12952 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7618 () Bool)

(assert (=> bm!7618 (= call!7621 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403) (mask!6298 newMap!16) (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2292 newMap!16)))))

(declare-fun b!81773 () Bool)

(assert (=> b!81773 (= e!53338 (isEmpty!335 lt!38235))))

(declare-fun d!20345 () Bool)

(assert (=> d!20345 e!53344))

(declare-fun res!42455 () Bool)

(assert (=> d!20345 (=> (not res!42455) (not e!53344))))

(assert (=> d!20345 (= res!42455 (not (contains!739 lt!38235 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20345 (= lt!38235 e!53343)))

(declare-fun c!12950 () Bool)

(assert (=> d!20345 (= c!12950 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!20345 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20345 (= (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403) (mask!6298 newMap!16) (ite c!12568 (ite c!12577 lt!37404 lt!37407) (extraKeys!2139 newMap!16)) (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38235)))

(declare-fun b!81781 () Bool)

(assert (=> b!81781 (= e!53343 (ListLongMap!1430 Nil!1494))))

(declare-fun b!81782 () Bool)

(assert (=> b!81782 (= e!53340 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81782 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!20345 c!12950) b!81781))

(assert (= (and d!20345 (not c!12950)) b!81780))

(assert (= (and b!81780 c!12952) b!81772))

(assert (= (and b!81780 (not c!12952)) b!81774))

(assert (= (or b!81772 b!81774) bm!7618))

(assert (= (and d!20345 res!42455) b!81776))

(assert (= (and b!81776 res!42457) b!81779))

(assert (= (and b!81779 res!42454) b!81782))

(assert (= (and b!81779 c!12951) b!81771))

(assert (= (and b!81779 (not c!12951)) b!81778))

(assert (= (and b!81771 res!42456) b!81777))

(assert (= (and b!81778 c!12949) b!81775))

(assert (= (and b!81778 (not c!12949)) b!81773))

(declare-fun b_lambda!3649 () Bool)

(assert (=> (not b_lambda!3649) (not b!81772)))

(assert (=> b!81772 t!5170))

(declare-fun b_and!4993 () Bool)

(assert (= b_and!4989 (and (=> t!5170 result!2849) b_and!4993)))

(assert (=> b!81772 t!5172))

(declare-fun b_and!4995 () Bool)

(assert (= b_and!4991 (and (=> t!5172 result!2851) b_and!4995)))

(declare-fun b_lambda!3651 () Bool)

(assert (=> (not b_lambda!3651) (not b!81777)))

(assert (=> b!81777 t!5170))

(declare-fun b_and!4997 () Bool)

(assert (= b_and!4993 (and (=> t!5170 result!2849) b_and!4997)))

(assert (=> b!81777 t!5172))

(declare-fun b_and!4999 () Bool)

(assert (= b_and!4995 (and (=> t!5172 result!2851) b_and!4999)))

(assert (=> b!81771 m!82381))

(assert (=> b!81771 m!82381))

(declare-fun m!84165 () Bool)

(assert (=> b!81771 m!84165))

(assert (=> b!81777 m!82743))

(assert (=> b!81777 m!82381))

(assert (=> b!81777 m!82381))

(declare-fun m!84167 () Bool)

(assert (=> b!81777 m!84167))

(assert (=> b!81777 m!83073))

(assert (=> b!81777 m!82743))

(assert (=> b!81777 m!83075))

(assert (=> b!81777 m!83073))

(assert (=> b!81780 m!82381))

(assert (=> b!81780 m!82381))

(assert (=> b!81780 m!82583))

(declare-fun m!84169 () Bool)

(assert (=> b!81775 m!84169))

(assert (=> bm!7618 m!84169))

(assert (=> b!81772 m!82743))

(assert (=> b!81772 m!82381))

(declare-fun m!84171 () Bool)

(assert (=> b!81772 m!84171))

(assert (=> b!81772 m!84171))

(declare-fun m!84173 () Bool)

(assert (=> b!81772 m!84173))

(declare-fun m!84175 () Bool)

(assert (=> b!81772 m!84175))

(declare-fun m!84177 () Bool)

(assert (=> b!81772 m!84177))

(assert (=> b!81772 m!83073))

(assert (=> b!81772 m!82743))

(assert (=> b!81772 m!83075))

(assert (=> b!81772 m!83073))

(declare-fun m!84179 () Bool)

(assert (=> b!81773 m!84179))

(assert (=> b!81782 m!82381))

(assert (=> b!81782 m!82381))

(assert (=> b!81782 m!82583))

(declare-fun m!84181 () Bool)

(assert (=> b!81776 m!84181))

(declare-fun m!84183 () Bool)

(assert (=> d!20345 m!84183))

(assert (=> d!20345 m!82223))

(assert (=> b!81119 d!20345))

(declare-fun d!20347 () Bool)

(declare-fun e!53345 () Bool)

(assert (=> d!20347 e!53345))

(declare-fun res!42459 () Bool)

(assert (=> d!20347 (=> (not res!42459) (not e!53345))))

(declare-fun lt!38241 () ListLongMap!1429)

(assert (=> d!20347 (= res!42459 (contains!739 lt!38241 (_1!1095 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))))))

(declare-fun lt!38239 () List!1497)

(assert (=> d!20347 (= lt!38241 (ListLongMap!1430 lt!38239))))

(declare-fun lt!38238 () Unit!2322)

(declare-fun lt!38240 () Unit!2322)

(assert (=> d!20347 (= lt!38238 lt!38240)))

(assert (=> d!20347 (= (getValueByKey!139 lt!38239 (_1!1095 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))) (Some!144 (_2!1095 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))))))

(assert (=> d!20347 (= lt!38240 (lemmaContainsTupThenGetReturnValue!56 lt!38239 (_1!1095 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))) (_2!1095 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))))))

(assert (=> d!20347 (= lt!38239 (insertStrictlySorted!59 (toList!730 lt!37911) (_1!1095 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))) (_2!1095 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))))))

(assert (=> d!20347 (= (+!101 lt!37911 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))) lt!38241)))

(declare-fun b!81783 () Bool)

(declare-fun res!42458 () Bool)

(assert (=> b!81783 (=> (not res!42458) (not e!53345))))

(assert (=> b!81783 (= res!42458 (= (getValueByKey!139 (toList!730 lt!38241) (_1!1095 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))) (Some!144 (_2!1095 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))))))))

(declare-fun b!81784 () Bool)

(assert (=> b!81784 (= e!53345 (contains!742 (toList!730 lt!38241) (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))))))

(assert (= (and d!20347 res!42459) b!81783))

(assert (= (and b!81783 res!42458) b!81784))

(declare-fun m!84185 () Bool)

(assert (=> d!20347 m!84185))

(declare-fun m!84187 () Bool)

(assert (=> d!20347 m!84187))

(declare-fun m!84189 () Bool)

(assert (=> d!20347 m!84189))

(declare-fun m!84191 () Bool)

(assert (=> d!20347 m!84191))

(declare-fun m!84193 () Bool)

(assert (=> b!81783 m!84193))

(declare-fun m!84195 () Bool)

(assert (=> b!81784 m!84195))

(assert (=> b!81119 d!20347))

(declare-fun d!20349 () Bool)

(declare-fun e!53346 () Bool)

(assert (=> d!20349 e!53346))

(declare-fun res!42461 () Bool)

(assert (=> d!20349 (=> (not res!42461) (not e!53346))))

(declare-fun lt!38245 () ListLongMap!1429)

(assert (=> d!20349 (= res!42461 (contains!739 lt!38245 (_1!1095 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))))))

(declare-fun lt!38243 () List!1497)

(assert (=> d!20349 (= lt!38245 (ListLongMap!1430 lt!38243))))

(declare-fun lt!38242 () Unit!2322)

(declare-fun lt!38244 () Unit!2322)

(assert (=> d!20349 (= lt!38242 lt!38244)))

(assert (=> d!20349 (= (getValueByKey!139 lt!38243 (_1!1095 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))) (Some!144 (_2!1095 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))))))

(assert (=> d!20349 (= lt!38244 (lemmaContainsTupThenGetReturnValue!56 lt!38243 (_1!1095 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))) (_2!1095 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))))))

(assert (=> d!20349 (= lt!38243 (insertStrictlySorted!59 (toList!730 lt!37922) (_1!1095 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))) (_2!1095 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))))))

(assert (=> d!20349 (= (+!101 lt!37922 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))) lt!38245)))

(declare-fun b!81785 () Bool)

(declare-fun res!42460 () Bool)

(assert (=> b!81785 (=> (not res!42460) (not e!53346))))

(assert (=> b!81785 (= res!42460 (= (getValueByKey!139 (toList!730 lt!38245) (_1!1095 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))) (Some!144 (_2!1095 (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))))))))

(declare-fun b!81786 () Bool)

(assert (=> b!81786 (= e!53346 (contains!742 (toList!730 lt!38245) (tuple2!2169 lt!37909 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))))))

(assert (= (and d!20349 res!42461) b!81785))

(assert (= (and b!81785 res!42460) b!81786))

(declare-fun m!84197 () Bool)

(assert (=> d!20349 m!84197))

(declare-fun m!84199 () Bool)

(assert (=> d!20349 m!84199))

(declare-fun m!84201 () Bool)

(assert (=> d!20349 m!84201))

(declare-fun m!84203 () Bool)

(assert (=> d!20349 m!84203))

(declare-fun m!84205 () Bool)

(assert (=> b!81785 m!84205))

(declare-fun m!84207 () Bool)

(assert (=> b!81786 m!84207))

(assert (=> b!81119 d!20349))

(declare-fun d!20351 () Bool)

(assert (=> d!20351 (= (apply!80 (+!101 lt!37911 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))) lt!37910) (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37911 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))))) lt!37910)))))

(declare-fun bs!3471 () Bool)

(assert (= bs!3471 d!20351))

(declare-fun m!84209 () Bool)

(assert (=> bs!3471 m!84209))

(assert (=> bs!3471 m!84209))

(declare-fun m!84211 () Bool)

(assert (=> bs!3471 m!84211))

(assert (=> b!81119 d!20351))

(declare-fun d!20353 () Bool)

(declare-fun e!53347 () Bool)

(assert (=> d!20353 e!53347))

(declare-fun res!42463 () Bool)

(assert (=> d!20353 (=> (not res!42463) (not e!53347))))

(declare-fun lt!38249 () ListLongMap!1429)

(assert (=> d!20353 (= res!42463 (contains!739 lt!38249 (_1!1095 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(declare-fun lt!38247 () List!1497)

(assert (=> d!20353 (= lt!38249 (ListLongMap!1430 lt!38247))))

(declare-fun lt!38246 () Unit!2322)

(declare-fun lt!38248 () Unit!2322)

(assert (=> d!20353 (= lt!38246 lt!38248)))

(assert (=> d!20353 (= (getValueByKey!139 lt!38247 (_1!1095 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))) (Some!144 (_2!1095 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(assert (=> d!20353 (= lt!38248 (lemmaContainsTupThenGetReturnValue!56 lt!38247 (_1!1095 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) (_2!1095 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(assert (=> d!20353 (= lt!38247 (insertStrictlySorted!59 (toList!730 lt!37919) (_1!1095 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) (_2!1095 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(assert (=> d!20353 (= (+!101 lt!37919 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) lt!38249)))

(declare-fun b!81787 () Bool)

(declare-fun res!42462 () Bool)

(assert (=> b!81787 (=> (not res!42462) (not e!53347))))

(assert (=> b!81787 (= res!42462 (= (getValueByKey!139 (toList!730 lt!38249) (_1!1095 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))) (Some!144 (_2!1095 (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))))))

(declare-fun b!81788 () Bool)

(assert (=> b!81788 (= e!53347 (contains!742 (toList!730 lt!38249) (tuple2!2169 lt!37908 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))))

(assert (= (and d!20353 res!42463) b!81787))

(assert (= (and b!81787 res!42462) b!81788))

(declare-fun m!84213 () Bool)

(assert (=> d!20353 m!84213))

(declare-fun m!84215 () Bool)

(assert (=> d!20353 m!84215))

(declare-fun m!84217 () Bool)

(assert (=> d!20353 m!84217))

(declare-fun m!84219 () Bool)

(assert (=> d!20353 m!84219))

(declare-fun m!84221 () Bool)

(assert (=> b!81787 m!84221))

(declare-fun m!84223 () Bool)

(assert (=> b!81788 m!84223))

(assert (=> b!81119 d!20353))

(declare-fun d!20355 () Bool)

(assert (=> d!20355 (= (apply!80 lt!37913 lt!37924) (get!1192 (getValueByKey!139 (toList!730 lt!37913) lt!37924)))))

(declare-fun bs!3472 () Bool)

(assert (= bs!3472 d!20355))

(declare-fun m!84225 () Bool)

(assert (=> bs!3472 m!84225))

(assert (=> bs!3472 m!84225))

(declare-fun m!84227 () Bool)

(assert (=> bs!3472 m!84227))

(assert (=> b!81119 d!20355))

(declare-fun d!20357 () Bool)

(assert (=> d!20357 (= (apply!80 (+!101 lt!37911 (tuple2!2169 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)))) lt!37910) (apply!80 lt!37911 lt!37910))))

(declare-fun lt!38250 () Unit!2322)

(assert (=> d!20357 (= lt!38250 (choose!481 lt!37911 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) lt!37910))))

(declare-fun e!53348 () Bool)

(assert (=> d!20357 e!53348))

(declare-fun res!42464 () Bool)

(assert (=> d!20357 (=> (not res!42464) (not e!53348))))

(assert (=> d!20357 (= res!42464 (contains!739 lt!37911 lt!37910))))

(assert (=> d!20357 (= (addApplyDifferent!56 lt!37911 lt!37926 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16)) lt!37910) lt!38250)))

(declare-fun b!81789 () Bool)

(assert (=> b!81789 (= e!53348 (not (= lt!37910 lt!37926)))))

(assert (= (and d!20357 res!42464) b!81789))

(assert (=> d!20357 m!83041))

(declare-fun m!84229 () Bool)

(assert (=> d!20357 m!84229))

(assert (=> d!20357 m!83043))

(declare-fun m!84231 () Bool)

(assert (=> d!20357 m!84231))

(assert (=> d!20357 m!83043))

(assert (=> d!20357 m!83059))

(assert (=> b!81119 d!20357))

(declare-fun d!20359 () Bool)

(assert (=> d!20359 (isDefined!91 (getValueByKey!139 (toList!730 lt!37513) (_1!1095 lt!37212)))))

(declare-fun lt!38251 () Unit!2322)

(assert (=> d!20359 (= lt!38251 (choose!487 (toList!730 lt!37513) (_1!1095 lt!37212)))))

(declare-fun e!53349 () Bool)

(assert (=> d!20359 e!53349))

(declare-fun res!42465 () Bool)

(assert (=> d!20359 (=> (not res!42465) (not e!53349))))

(assert (=> d!20359 (= res!42465 (isStrictlySorted!283 (toList!730 lt!37513)))))

(assert (=> d!20359 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37513) (_1!1095 lt!37212)) lt!38251)))

(declare-fun b!81790 () Bool)

(assert (=> b!81790 (= e!53349 (containsKey!142 (toList!730 lt!37513) (_1!1095 lt!37212)))))

(assert (= (and d!20359 res!42465) b!81790))

(assert (=> d!20359 m!82077))

(assert (=> d!20359 m!82077))

(assert (=> d!20359 m!82829))

(declare-fun m!84233 () Bool)

(assert (=> d!20359 m!84233))

(declare-fun m!84235 () Bool)

(assert (=> d!20359 m!84235))

(assert (=> b!81790 m!82825))

(assert (=> b!80980 d!20359))

(declare-fun d!20361 () Bool)

(assert (=> d!20361 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37513) (_1!1095 lt!37212))) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37513) (_1!1095 lt!37212)))))))

(declare-fun bs!3473 () Bool)

(assert (= bs!3473 d!20361))

(assert (=> bs!3473 m!82077))

(declare-fun m!84237 () Bool)

(assert (=> bs!3473 m!84237))

(assert (=> b!80980 d!20361))

(assert (=> b!80980 d!19765))

(declare-fun d!20363 () Bool)

(declare-fun res!42466 () Bool)

(declare-fun e!53350 () Bool)

(assert (=> d!20363 (=> res!42466 e!53350)))

(assert (=> d!20363 (= res!42466 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))) lt!37489)))))

(assert (=> d!20363 (= (containsKey!142 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37489) e!53350)))

(declare-fun b!81791 () Bool)

(declare-fun e!53351 () Bool)

(assert (=> b!81791 (= e!53350 e!53351)))

(declare-fun res!42467 () Bool)

(assert (=> b!81791 (=> (not res!42467) (not e!53351))))

(assert (=> b!81791 (= res!42467 (and (or (not ((_ is Cons!1493) (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))) (bvsle (_1!1095 (h!2082 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))) lt!37489)) ((_ is Cons!1493) (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (bvslt (_1!1095 (h!2082 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))) lt!37489)))))

(declare-fun b!81792 () Bool)

(assert (=> b!81792 (= e!53351 (containsKey!142 (t!5156 (toList!730 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) lt!37489))))

(assert (= (and d!20363 (not res!42466)) b!81791))

(assert (= (and b!81791 res!42467) b!81792))

(declare-fun m!84239 () Bool)

(assert (=> b!81792 m!84239))

(assert (=> d!19859 d!20363))

(declare-fun d!20365 () Bool)

(assert (=> d!20365 (= (get!1192 (getValueByKey!139 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2616 (getValueByKey!139 (toList!730 lt!37476) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19975 d!20365))

(assert (=> d!19975 d!20315))

(declare-fun lt!38252 () Bool)

(declare-fun d!20367 () Bool)

(assert (=> d!20367 (= lt!38252 (select (content!86 (toList!730 lt!37616)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(declare-fun e!53352 () Bool)

(assert (=> d!20367 (= lt!38252 e!53352)))

(declare-fun res!42469 () Bool)

(assert (=> d!20367 (=> (not res!42469) (not e!53352))))

(assert (=> d!20367 (= res!42469 ((_ is Cons!1493) (toList!730 lt!37616)))))

(assert (=> d!20367 (= (contains!742 (toList!730 lt!37616) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) lt!38252)))

(declare-fun b!81793 () Bool)

(declare-fun e!53353 () Bool)

(assert (=> b!81793 (= e!53352 e!53353)))

(declare-fun res!42468 () Bool)

(assert (=> b!81793 (=> res!42468 e!53353)))

(assert (=> b!81793 (= res!42468 (= (h!2082 (toList!730 lt!37616)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(declare-fun b!81794 () Bool)

(assert (=> b!81794 (= e!53353 (contains!742 (t!5156 (toList!730 lt!37616)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (= (and d!20367 res!42469) b!81793))

(assert (= (and b!81793 (not res!42468)) b!81794))

(declare-fun m!84241 () Bool)

(assert (=> d!20367 m!84241))

(declare-fun m!84243 () Bool)

(assert (=> d!20367 m!84243))

(declare-fun m!84245 () Bool)

(assert (=> b!81794 m!84245))

(assert (=> b!80757 d!20367))

(declare-fun bm!7619 () Bool)

(declare-fun call!7623 () List!1497)

(declare-fun call!7624 () List!1497)

(assert (=> bm!7619 (= call!7623 call!7624)))

(declare-fun b!81795 () Bool)

(declare-fun e!53354 () Bool)

(declare-fun lt!38253 () List!1497)

(assert (=> b!81795 (= e!53354 (contains!742 lt!38253 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun b!81796 () Bool)

(declare-fun e!53355 () List!1497)

(declare-fun e!53358 () List!1497)

(assert (=> b!81796 (= e!53355 e!53358)))

(declare-fun c!12956 () Bool)

(assert (=> b!81796 (= c!12956 (and ((_ is Cons!1493) (t!5156 (toList!730 (+!101 lt!37215 lt!37212)))) (= (_1!1095 (h!2082 (t!5156 (toList!730 (+!101 lt!37215 lt!37212))))) (_1!1095 lt!37210))))))

(declare-fun bm!7620 () Bool)

(declare-fun call!7622 () List!1497)

(assert (=> bm!7620 (= call!7622 call!7623)))

(declare-fun d!20369 () Bool)

(assert (=> d!20369 e!53354))

(declare-fun res!42470 () Bool)

(assert (=> d!20369 (=> (not res!42470) (not e!53354))))

(assert (=> d!20369 (= res!42470 (isStrictlySorted!283 lt!38253))))

(assert (=> d!20369 (= lt!38253 e!53355)))

(declare-fun c!12953 () Bool)

(assert (=> d!20369 (= c!12953 (and ((_ is Cons!1493) (t!5156 (toList!730 (+!101 lt!37215 lt!37212)))) (bvslt (_1!1095 (h!2082 (t!5156 (toList!730 (+!101 lt!37215 lt!37212))))) (_1!1095 lt!37210))))))

(assert (=> d!20369 (isStrictlySorted!283 (t!5156 (toList!730 (+!101 lt!37215 lt!37212))))))

(assert (=> d!20369 (= (insertStrictlySorted!59 (t!5156 (toList!730 (+!101 lt!37215 lt!37212))) (_1!1095 lt!37210) (_2!1095 lt!37210)) lt!38253)))

(declare-fun e!53356 () List!1497)

(declare-fun bm!7621 () Bool)

(assert (=> bm!7621 (= call!7624 ($colon$colon!69 e!53356 (ite c!12953 (h!2082 (t!5156 (toList!730 (+!101 lt!37215 lt!37212)))) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210)))))))

(declare-fun c!12955 () Bool)

(assert (=> bm!7621 (= c!12955 c!12953)))

(declare-fun b!81797 () Bool)

(declare-fun e!53357 () List!1497)

(assert (=> b!81797 (= e!53357 call!7622)))

(declare-fun b!81798 () Bool)

(declare-fun res!42471 () Bool)

(assert (=> b!81798 (=> (not res!42471) (not e!53354))))

(assert (=> b!81798 (= res!42471 (containsKey!142 lt!38253 (_1!1095 lt!37210)))))

(declare-fun c!12954 () Bool)

(declare-fun b!81799 () Bool)

(assert (=> b!81799 (= c!12954 (and ((_ is Cons!1493) (t!5156 (toList!730 (+!101 lt!37215 lt!37212)))) (bvsgt (_1!1095 (h!2082 (t!5156 (toList!730 (+!101 lt!37215 lt!37212))))) (_1!1095 lt!37210))))))

(assert (=> b!81799 (= e!53358 e!53357)))

(declare-fun b!81800 () Bool)

(assert (=> b!81800 (= e!53356 (insertStrictlySorted!59 (t!5156 (t!5156 (toList!730 (+!101 lt!37215 lt!37212)))) (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(declare-fun b!81801 () Bool)

(assert (=> b!81801 (= e!53358 call!7623)))

(declare-fun b!81802 () Bool)

(assert (=> b!81802 (= e!53357 call!7622)))

(declare-fun b!81803 () Bool)

(assert (=> b!81803 (= e!53356 (ite c!12956 (t!5156 (t!5156 (toList!730 (+!101 lt!37215 lt!37212)))) (ite c!12954 (Cons!1493 (h!2082 (t!5156 (toList!730 (+!101 lt!37215 lt!37212)))) (t!5156 (t!5156 (toList!730 (+!101 lt!37215 lt!37212))))) Nil!1494)))))

(declare-fun b!81804 () Bool)

(assert (=> b!81804 (= e!53355 call!7624)))

(assert (= (and d!20369 c!12953) b!81804))

(assert (= (and d!20369 (not c!12953)) b!81796))

(assert (= (and b!81796 c!12956) b!81801))

(assert (= (and b!81796 (not c!12956)) b!81799))

(assert (= (and b!81799 c!12954) b!81802))

(assert (= (and b!81799 (not c!12954)) b!81797))

(assert (= (or b!81802 b!81797) bm!7620))

(assert (= (or b!81801 bm!7620) bm!7619))

(assert (= (or b!81804 bm!7619) bm!7621))

(assert (= (and bm!7621 c!12955) b!81800))

(assert (= (and bm!7621 (not c!12955)) b!81803))

(assert (= (and d!20369 res!42470) b!81798))

(assert (= (and b!81798 res!42471) b!81795))

(declare-fun m!84247 () Bool)

(assert (=> b!81800 m!84247))

(declare-fun m!84249 () Bool)

(assert (=> bm!7621 m!84249))

(declare-fun m!84251 () Bool)

(assert (=> b!81795 m!84251))

(declare-fun m!84253 () Bool)

(assert (=> d!20369 m!84253))

(declare-fun m!84255 () Bool)

(assert (=> d!20369 m!84255))

(declare-fun m!84257 () Bool)

(assert (=> b!81798 m!84257))

(assert (=> b!81013 d!20369))

(assert (=> bm!7514 d!19905))

(declare-fun d!20371 () Bool)

(assert (=> d!20371 (= (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80814 d!20371))

(declare-fun d!20373 () Bool)

(assert (=> d!20373 (= (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37485)) (v!2616 (getValueByKey!139 (toList!730 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37485)))))

(assert (=> d!19853 d!20373))

(declare-fun b!81808 () Bool)

(declare-fun e!53360 () Option!145)

(assert (=> b!81808 (= e!53360 None!143)))

(declare-fun b!81807 () Bool)

(assert (=> b!81807 (= e!53360 (getValueByKey!139 (t!5156 (toList!730 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) lt!37485))))

(declare-fun d!20375 () Bool)

(declare-fun c!12957 () Bool)

(assert (=> d!20375 (= c!12957 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))) lt!37485)))))

(declare-fun e!53359 () Option!145)

(assert (=> d!20375 (= (getValueByKey!139 (toList!730 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37485) e!53359)))

(declare-fun b!81805 () Bool)

(assert (=> b!81805 (= e!53359 (Some!144 (_2!1095 (h!2082 (toList!730 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))))

(declare-fun b!81806 () Bool)

(assert (=> b!81806 (= e!53359 e!53360)))

(declare-fun c!12958 () Bool)

(assert (=> b!81806 (= c!12958 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (not (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))) lt!37485))))))

(assert (= (and d!20375 c!12957) b!81805))

(assert (= (and d!20375 (not c!12957)) b!81806))

(assert (= (and b!81806 c!12958) b!81807))

(assert (= (and b!81806 (not c!12958)) b!81808))

(declare-fun m!84259 () Bool)

(assert (=> b!81807 m!84259))

(assert (=> d!19853 d!20375))

(declare-fun d!20377 () Bool)

(declare-fun res!42472 () Bool)

(declare-fun e!53361 () Bool)

(assert (=> d!20377 (=> res!42472 e!53361)))

(assert (=> d!20377 (= res!42472 (or ((_ is Nil!1494) lt!37585) ((_ is Nil!1494) (t!5156 lt!37585))))))

(assert (=> d!20377 (= (isStrictlySorted!283 lt!37585) e!53361)))

(declare-fun b!81809 () Bool)

(declare-fun e!53362 () Bool)

(assert (=> b!81809 (= e!53361 e!53362)))

(declare-fun res!42473 () Bool)

(assert (=> b!81809 (=> (not res!42473) (not e!53362))))

(assert (=> b!81809 (= res!42473 (bvslt (_1!1095 (h!2082 lt!37585)) (_1!1095 (h!2082 (t!5156 lt!37585)))))))

(declare-fun b!81810 () Bool)

(assert (=> b!81810 (= e!53362 (isStrictlySorted!283 (t!5156 lt!37585)))))

(assert (= (and d!20377 (not res!42472)) b!81809))

(assert (= (and b!81809 res!42473) b!81810))

(declare-fun m!84261 () Bool)

(assert (=> b!81810 m!84261))

(assert (=> d!19747 d!20377))

(declare-fun d!20379 () Bool)

(declare-fun res!42474 () Bool)

(declare-fun e!53363 () Bool)

(assert (=> d!20379 (=> res!42474 e!53363)))

(assert (=> d!20379 (= res!42474 (or ((_ is Nil!1494) (toList!730 lt!37219)) ((_ is Nil!1494) (t!5156 (toList!730 lt!37219)))))))

(assert (=> d!20379 (= (isStrictlySorted!283 (toList!730 lt!37219)) e!53363)))

(declare-fun b!81811 () Bool)

(declare-fun e!53364 () Bool)

(assert (=> b!81811 (= e!53363 e!53364)))

(declare-fun res!42475 () Bool)

(assert (=> b!81811 (=> (not res!42475) (not e!53364))))

(assert (=> b!81811 (= res!42475 (bvslt (_1!1095 (h!2082 (toList!730 lt!37219))) (_1!1095 (h!2082 (t!5156 (toList!730 lt!37219))))))))

(declare-fun b!81812 () Bool)

(assert (=> b!81812 (= e!53364 (isStrictlySorted!283 (t!5156 (toList!730 lt!37219))))))

(assert (= (and d!20379 (not res!42474)) b!81811))

(assert (= (and b!81811 res!42475) b!81812))

(declare-fun m!84263 () Bool)

(assert (=> b!81812 m!84263))

(assert (=> d!19747 d!20379))

(declare-fun d!20381 () Bool)

(assert (=> d!20381 (= (apply!80 lt!37826 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!139 (toList!730 lt!37826) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3474 () Bool)

(assert (= bs!3474 d!20381))

(declare-fun m!84265 () Bool)

(assert (=> bs!3474 m!84265))

(assert (=> bs!3474 m!84265))

(declare-fun m!84267 () Bool)

(assert (=> bs!3474 m!84267))

(assert (=> b!80955 d!20381))

(declare-fun lt!38254 () Bool)

(declare-fun d!20383 () Bool)

(assert (=> d!20383 (= lt!38254 (select (content!87 (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!53365 () Bool)

(assert (=> d!20383 (= lt!38254 e!53365)))

(declare-fun res!42477 () Bool)

(assert (=> d!20383 (=> (not res!42477) (not e!53365))))

(assert (=> d!20383 (= res!42477 ((_ is Cons!1494) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)))))

(assert (=> d!20383 (= (contains!741 (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!38254)))

(declare-fun b!81813 () Bool)

(declare-fun e!53366 () Bool)

(assert (=> b!81813 (= e!53365 e!53366)))

(declare-fun res!42476 () Bool)

(assert (=> b!81813 (=> res!42476 e!53366)))

(assert (=> b!81813 (= res!42476 (= (h!2083 (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!81814 () Bool)

(assert (=> b!81814 (= e!53366 (contains!741 (t!5157 (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!20383 res!42477) b!81813))

(assert (= (and b!81813 (not res!42476)) b!81814))

(declare-fun m!84269 () Bool)

(assert (=> d!20383 m!84269))

(assert (=> d!20383 m!82501))

(declare-fun m!84271 () Bool)

(assert (=> d!20383 m!84271))

(assert (=> b!81814 m!82501))

(declare-fun m!84273 () Bool)

(assert (=> b!81814 m!84273))

(assert (=> b!80816 d!20383))

(assert (=> d!19899 d!19897))

(declare-fun d!20385 () Bool)

(assert (=> d!20385 (= (getValueByKey!139 lt!37544 (_1!1095 lt!37210)) (Some!144 (_2!1095 lt!37210)))))

(assert (=> d!20385 true))

(declare-fun _$22!402 () Unit!2322)

(assert (=> d!20385 (= (choose!478 lt!37544 (_1!1095 lt!37210) (_2!1095 lt!37210)) _$22!402)))

(declare-fun bs!3475 () Bool)

(assert (= bs!3475 d!20385))

(assert (=> bs!3475 m!82135))

(assert (=> d!19899 d!20385))

(declare-fun d!20387 () Bool)

(declare-fun res!42478 () Bool)

(declare-fun e!53367 () Bool)

(assert (=> d!20387 (=> res!42478 e!53367)))

(assert (=> d!20387 (= res!42478 (or ((_ is Nil!1494) lt!37544) ((_ is Nil!1494) (t!5156 lt!37544))))))

(assert (=> d!20387 (= (isStrictlySorted!283 lt!37544) e!53367)))

(declare-fun b!81815 () Bool)

(declare-fun e!53368 () Bool)

(assert (=> b!81815 (= e!53367 e!53368)))

(declare-fun res!42479 () Bool)

(assert (=> b!81815 (=> (not res!42479) (not e!53368))))

(assert (=> b!81815 (= res!42479 (bvslt (_1!1095 (h!2082 lt!37544)) (_1!1095 (h!2082 (t!5156 lt!37544)))))))

(declare-fun b!81816 () Bool)

(assert (=> b!81816 (= e!53368 (isStrictlySorted!283 (t!5156 lt!37544)))))

(assert (= (and d!20387 (not res!42478)) b!81815))

(assert (= (and b!81815 res!42479) b!81816))

(declare-fun m!84275 () Bool)

(assert (=> b!81816 m!84275))

(assert (=> d!19899 d!20387))

(declare-fun d!20389 () Bool)

(declare-fun res!42480 () Bool)

(declare-fun e!53369 () Bool)

(assert (=> d!20389 (=> res!42480 e!53369)))

(assert (=> d!20389 (= res!42480 (and ((_ is Cons!1493) (toList!730 lt!37517)) (= (_1!1095 (h!2082 (toList!730 lt!37517))) (_1!1095 lt!37209))))))

(assert (=> d!20389 (= (containsKey!142 (toList!730 lt!37517) (_1!1095 lt!37209)) e!53369)))

(declare-fun b!81817 () Bool)

(declare-fun e!53370 () Bool)

(assert (=> b!81817 (= e!53369 e!53370)))

(declare-fun res!42481 () Bool)

(assert (=> b!81817 (=> (not res!42481) (not e!53370))))

(assert (=> b!81817 (= res!42481 (and (or (not ((_ is Cons!1493) (toList!730 lt!37517))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37517))) (_1!1095 lt!37209))) ((_ is Cons!1493) (toList!730 lt!37517)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37517))) (_1!1095 lt!37209))))))

(declare-fun b!81818 () Bool)

(assert (=> b!81818 (= e!53370 (containsKey!142 (t!5156 (toList!730 lt!37517)) (_1!1095 lt!37209)))))

(assert (= (and d!20389 (not res!42480)) b!81817))

(assert (= (and b!81817 res!42481) b!81818))

(declare-fun m!84277 () Bool)

(assert (=> b!81818 m!84277))

(assert (=> d!19741 d!20389))

(declare-fun d!20391 () Bool)

(assert (=> d!20391 (isDefined!91 (getValueByKey!139 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38255 () Unit!2322)

(assert (=> d!20391 (= lt!38255 (choose!487 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53371 () Bool)

(assert (=> d!20391 e!53371))

(declare-fun res!42482 () Bool)

(assert (=> d!20391 (=> (not res!42482) (not e!53371))))

(assert (=> d!20391 (= res!42482 (isStrictlySorted!283 (toList!730 lt!37476)))))

(assert (=> d!20391 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000) lt!38255)))

(declare-fun b!81819 () Bool)

(assert (=> b!81819 (= e!53371 (containsKey!142 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20391 res!42482) b!81819))

(assert (=> d!20391 m!82377))

(assert (=> d!20391 m!82377))

(assert (=> d!20391 m!82379))

(declare-fun m!84279 () Bool)

(assert (=> d!20391 m!84279))

(assert (=> d!20391 m!84091))

(assert (=> b!81819 m!82373))

(assert (=> b!80762 d!20391))

(declare-fun d!20393 () Bool)

(assert (=> d!20393 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3476 () Bool)

(assert (= bs!3476 d!20393))

(assert (=> bs!3476 m!82377))

(declare-fun m!84281 () Bool)

(assert (=> bs!3476 m!84281))

(assert (=> b!80762 d!20393))

(assert (=> b!80762 d!20093))

(declare-fun d!20395 () Bool)

(declare-fun res!42483 () Bool)

(declare-fun e!53372 () Bool)

(assert (=> d!20395 (=> res!42483 e!53372)))

(assert (=> d!20395 (= res!42483 (and ((_ is Cons!1493) lt!37511) (= (_1!1095 (h!2082 lt!37511)) (_1!1095 lt!37212))))))

(assert (=> d!20395 (= (containsKey!142 lt!37511 (_1!1095 lt!37212)) e!53372)))

(declare-fun b!81820 () Bool)

(declare-fun e!53373 () Bool)

(assert (=> b!81820 (= e!53372 e!53373)))

(declare-fun res!42484 () Bool)

(assert (=> b!81820 (=> (not res!42484) (not e!53373))))

(assert (=> b!81820 (= res!42484 (and (or (not ((_ is Cons!1493) lt!37511)) (bvsle (_1!1095 (h!2082 lt!37511)) (_1!1095 lt!37212))) ((_ is Cons!1493) lt!37511) (bvslt (_1!1095 (h!2082 lt!37511)) (_1!1095 lt!37212))))))

(declare-fun b!81821 () Bool)

(assert (=> b!81821 (= e!53373 (containsKey!142 (t!5156 lt!37511) (_1!1095 lt!37212)))))

(assert (= (and d!20395 (not res!42483)) b!81820))

(assert (= (and b!81820 res!42484) b!81821))

(declare-fun m!84283 () Bool)

(assert (=> b!81821 m!84283))

(assert (=> b!80987 d!20395))

(assert (=> d!19969 d!20023))

(declare-fun lt!38256 () Bool)

(declare-fun d!20397 () Bool)

(assert (=> d!20397 (= lt!38256 (select (content!86 (toList!730 lt!37858)) (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun e!53374 () Bool)

(assert (=> d!20397 (= lt!38256 e!53374)))

(declare-fun res!42486 () Bool)

(assert (=> d!20397 (=> (not res!42486) (not e!53374))))

(assert (=> d!20397 (= res!42486 ((_ is Cons!1493) (toList!730 lt!37858)))))

(assert (=> d!20397 (= (contains!742 (toList!730 lt!37858) (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38256)))

(declare-fun b!81822 () Bool)

(declare-fun e!53375 () Bool)

(assert (=> b!81822 (= e!53374 e!53375)))

(declare-fun res!42485 () Bool)

(assert (=> b!81822 (=> res!42485 e!53375)))

(assert (=> b!81822 (= res!42485 (= (h!2082 (toList!730 lt!37858)) (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81823 () Bool)

(assert (=> b!81823 (= e!53375 (contains!742 (t!5156 (toList!730 lt!37858)) (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (= (and d!20397 res!42486) b!81822))

(assert (= (and b!81822 (not res!42485)) b!81823))

(declare-fun m!84285 () Bool)

(assert (=> d!20397 m!84285))

(declare-fun m!84287 () Bool)

(assert (=> d!20397 m!84287))

(declare-fun m!84289 () Bool)

(assert (=> b!81823 m!84289))

(assert (=> b!81019 d!20397))

(assert (=> b!80749 d!19985))

(assert (=> b!80926 d!20283))

(declare-fun bm!7622 () Bool)

(declare-fun call!7626 () List!1497)

(declare-fun call!7627 () List!1497)

(assert (=> bm!7622 (= call!7626 call!7627)))

(declare-fun b!81824 () Bool)

(declare-fun e!53376 () Bool)

(declare-fun lt!38257 () List!1497)

(assert (=> b!81824 (= e!53376 (contains!742 lt!38257 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun b!81825 () Bool)

(declare-fun e!53377 () List!1497)

(declare-fun e!53380 () List!1497)

(assert (=> b!81825 (= e!53377 e!53380)))

(declare-fun c!12962 () Bool)

(assert (=> b!81825 (= c!12962 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37211))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37211)))) (_1!1095 lt!37210))))))

(declare-fun bm!7623 () Bool)

(declare-fun call!7625 () List!1497)

(assert (=> bm!7623 (= call!7625 call!7626)))

(declare-fun d!20399 () Bool)

(assert (=> d!20399 e!53376))

(declare-fun res!42487 () Bool)

(assert (=> d!20399 (=> (not res!42487) (not e!53376))))

(assert (=> d!20399 (= res!42487 (isStrictlySorted!283 lt!38257))))

(assert (=> d!20399 (= lt!38257 e!53377)))

(declare-fun c!12959 () Bool)

(assert (=> d!20399 (= c!12959 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37211))) (bvslt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37211)))) (_1!1095 lt!37210))))))

(assert (=> d!20399 (isStrictlySorted!283 (t!5156 (toList!730 lt!37211)))))

(assert (=> d!20399 (= (insertStrictlySorted!59 (t!5156 (toList!730 lt!37211)) (_1!1095 lt!37210) (_2!1095 lt!37210)) lt!38257)))

(declare-fun e!53378 () List!1497)

(declare-fun bm!7624 () Bool)

(assert (=> bm!7624 (= call!7627 ($colon$colon!69 e!53378 (ite c!12959 (h!2082 (t!5156 (toList!730 lt!37211))) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210)))))))

(declare-fun c!12961 () Bool)

(assert (=> bm!7624 (= c!12961 c!12959)))

(declare-fun b!81826 () Bool)

(declare-fun e!53379 () List!1497)

(assert (=> b!81826 (= e!53379 call!7625)))

(declare-fun b!81827 () Bool)

(declare-fun res!42488 () Bool)

(assert (=> b!81827 (=> (not res!42488) (not e!53376))))

(assert (=> b!81827 (= res!42488 (containsKey!142 lt!38257 (_1!1095 lt!37210)))))

(declare-fun b!81828 () Bool)

(declare-fun c!12960 () Bool)

(assert (=> b!81828 (= c!12960 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37211))) (bvsgt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37211)))) (_1!1095 lt!37210))))))

(assert (=> b!81828 (= e!53380 e!53379)))

(declare-fun b!81829 () Bool)

(assert (=> b!81829 (= e!53378 (insertStrictlySorted!59 (t!5156 (t!5156 (toList!730 lt!37211))) (_1!1095 lt!37210) (_2!1095 lt!37210)))))

(declare-fun b!81830 () Bool)

(assert (=> b!81830 (= e!53380 call!7626)))

(declare-fun b!81831 () Bool)

(assert (=> b!81831 (= e!53379 call!7625)))

(declare-fun b!81832 () Bool)

(assert (=> b!81832 (= e!53378 (ite c!12962 (t!5156 (t!5156 (toList!730 lt!37211))) (ite c!12960 (Cons!1493 (h!2082 (t!5156 (toList!730 lt!37211))) (t!5156 (t!5156 (toList!730 lt!37211)))) Nil!1494)))))

(declare-fun b!81833 () Bool)

(assert (=> b!81833 (= e!53377 call!7627)))

(assert (= (and d!20399 c!12959) b!81833))

(assert (= (and d!20399 (not c!12959)) b!81825))

(assert (= (and b!81825 c!12962) b!81830))

(assert (= (and b!81825 (not c!12962)) b!81828))

(assert (= (and b!81828 c!12960) b!81831))

(assert (= (and b!81828 (not c!12960)) b!81826))

(assert (= (or b!81831 b!81826) bm!7623))

(assert (= (or b!81830 bm!7623) bm!7622))

(assert (= (or b!81833 bm!7622) bm!7624))

(assert (= (and bm!7624 c!12961) b!81829))

(assert (= (and bm!7624 (not c!12961)) b!81832))

(assert (= (and d!20399 res!42487) b!81827))

(assert (= (and b!81827 res!42488) b!81824))

(declare-fun m!84291 () Bool)

(assert (=> b!81829 m!84291))

(declare-fun m!84293 () Bool)

(assert (=> bm!7624 m!84293))

(declare-fun m!84295 () Bool)

(assert (=> b!81824 m!84295))

(declare-fun m!84297 () Bool)

(assert (=> d!20399 m!84297))

(assert (=> d!20399 m!84039))

(declare-fun m!84299 () Bool)

(assert (=> b!81827 m!84299))

(assert (=> b!81107 d!20399))

(assert (=> d!19879 d!20023))

(declare-fun b!81837 () Bool)

(declare-fun e!53382 () Option!145)

(assert (=> b!81837 (= e!53382 None!143)))

(declare-fun b!81836 () Bool)

(assert (=> b!81836 (= e!53382 (getValueByKey!139 (t!5156 (t!5156 lt!37548)) (_1!1095 lt!37209)))))

(declare-fun d!20401 () Bool)

(declare-fun c!12963 () Bool)

(assert (=> d!20401 (= c!12963 (and ((_ is Cons!1493) (t!5156 lt!37548)) (= (_1!1095 (h!2082 (t!5156 lt!37548))) (_1!1095 lt!37209))))))

(declare-fun e!53381 () Option!145)

(assert (=> d!20401 (= (getValueByKey!139 (t!5156 lt!37548) (_1!1095 lt!37209)) e!53381)))

(declare-fun b!81834 () Bool)

(assert (=> b!81834 (= e!53381 (Some!144 (_2!1095 (h!2082 (t!5156 lt!37548)))))))

(declare-fun b!81835 () Bool)

(assert (=> b!81835 (= e!53381 e!53382)))

(declare-fun c!12964 () Bool)

(assert (=> b!81835 (= c!12964 (and ((_ is Cons!1493) (t!5156 lt!37548)) (not (= (_1!1095 (h!2082 (t!5156 lt!37548))) (_1!1095 lt!37209)))))))

(assert (= (and d!20401 c!12963) b!81834))

(assert (= (and d!20401 (not c!12963)) b!81835))

(assert (= (and b!81835 c!12964) b!81836))

(assert (= (and b!81835 (not c!12964)) b!81837))

(declare-fun m!84301 () Bool)

(assert (=> b!81836 m!84301))

(assert (=> b!81043 d!20401))

(declare-fun d!20403 () Bool)

(declare-fun e!53383 () Bool)

(assert (=> d!20403 e!53383))

(declare-fun res!42489 () Bool)

(assert (=> d!20403 (=> res!42489 e!53383)))

(declare-fun lt!38259 () Bool)

(assert (=> d!20403 (= res!42489 (not lt!38259))))

(declare-fun lt!38258 () Bool)

(assert (=> d!20403 (= lt!38259 lt!38258)))

(declare-fun lt!38260 () Unit!2322)

(declare-fun e!53384 () Unit!2322)

(assert (=> d!20403 (= lt!38260 e!53384)))

(declare-fun c!12965 () Bool)

(assert (=> d!20403 (= c!12965 lt!38258)))

(assert (=> d!20403 (= lt!38258 (containsKey!142 (toList!730 lt!37612) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!20403 (= (contains!739 lt!37612 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38259)))

(declare-fun b!81838 () Bool)

(declare-fun lt!38261 () Unit!2322)

(assert (=> b!81838 (= e!53384 lt!38261)))

(assert (=> b!81838 (= lt!38261 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37612) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> b!81838 (isDefined!91 (getValueByKey!139 (toList!730 lt!37612) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81839 () Bool)

(declare-fun Unit!2380 () Unit!2322)

(assert (=> b!81839 (= e!53384 Unit!2380)))

(declare-fun b!81840 () Bool)

(assert (=> b!81840 (= e!53383 (isDefined!91 (getValueByKey!139 (toList!730 lt!37612) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20403 c!12965) b!81838))

(assert (= (and d!20403 (not c!12965)) b!81839))

(assert (= (and d!20403 (not res!42489)) b!81840))

(declare-fun m!84303 () Bool)

(assert (=> d!20403 m!84303))

(declare-fun m!84305 () Bool)

(assert (=> b!81838 m!84305))

(assert (=> b!81838 m!82333))

(assert (=> b!81838 m!82333))

(declare-fun m!84307 () Bool)

(assert (=> b!81838 m!84307))

(assert (=> b!81840 m!82333))

(assert (=> b!81840 m!82333))

(assert (=> b!81840 m!84307))

(assert (=> d!19769 d!20403))

(declare-fun b!81844 () Bool)

(declare-fun e!53386 () Option!145)

(assert (=> b!81844 (= e!53386 None!143)))

(declare-fun b!81843 () Bool)

(assert (=> b!81843 (= e!53386 (getValueByKey!139 (t!5156 lt!37610) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20405 () Bool)

(declare-fun c!12966 () Bool)

(assert (=> d!20405 (= c!12966 (and ((_ is Cons!1493) lt!37610) (= (_1!1095 (h!2082 lt!37610)) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53385 () Option!145)

(assert (=> d!20405 (= (getValueByKey!139 lt!37610 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53385)))

(declare-fun b!81841 () Bool)

(assert (=> b!81841 (= e!53385 (Some!144 (_2!1095 (h!2082 lt!37610))))))

(declare-fun b!81842 () Bool)

(assert (=> b!81842 (= e!53385 e!53386)))

(declare-fun c!12967 () Bool)

(assert (=> b!81842 (= c!12967 (and ((_ is Cons!1493) lt!37610) (not (= (_1!1095 (h!2082 lt!37610)) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20405 c!12966) b!81841))

(assert (= (and d!20405 (not c!12966)) b!81842))

(assert (= (and b!81842 c!12967) b!81843))

(assert (= (and b!81842 (not c!12967)) b!81844))

(declare-fun m!84309 () Bool)

(assert (=> b!81843 m!84309))

(assert (=> d!19769 d!20405))

(declare-fun d!20407 () Bool)

(assert (=> d!20407 (= (getValueByKey!139 lt!37610 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!38262 () Unit!2322)

(assert (=> d!20407 (= lt!38262 (choose!478 lt!37610 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun e!53387 () Bool)

(assert (=> d!20407 e!53387))

(declare-fun res!42490 () Bool)

(assert (=> d!20407 (=> (not res!42490) (not e!53387))))

(assert (=> d!20407 (= res!42490 (isStrictlySorted!283 lt!37610))))

(assert (=> d!20407 (= (lemmaContainsTupThenGetReturnValue!56 lt!37610 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38262)))

(declare-fun b!81845 () Bool)

(declare-fun res!42491 () Bool)

(assert (=> b!81845 (=> (not res!42491) (not e!53387))))

(assert (=> b!81845 (= res!42491 (containsKey!142 lt!37610 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81846 () Bool)

(assert (=> b!81846 (= e!53387 (contains!742 lt!37610 (tuple2!2169 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20407 res!42490) b!81845))

(assert (= (and b!81845 res!42491) b!81846))

(assert (=> d!20407 m!82327))

(declare-fun m!84311 () Bool)

(assert (=> d!20407 m!84311))

(declare-fun m!84313 () Bool)

(assert (=> d!20407 m!84313))

(declare-fun m!84315 () Bool)

(assert (=> b!81845 m!84315))

(declare-fun m!84317 () Bool)

(assert (=> b!81846 m!84317))

(assert (=> d!19769 d!20407))

(declare-fun bm!7625 () Bool)

(declare-fun call!7629 () List!1497)

(declare-fun call!7630 () List!1497)

(assert (=> bm!7625 (= call!7629 call!7630)))

(declare-fun b!81847 () Bool)

(declare-fun e!53388 () Bool)

(declare-fun lt!38263 () List!1497)

(assert (=> b!81847 (= e!53388 (contains!742 lt!38263 (tuple2!2169 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!81848 () Bool)

(declare-fun e!53389 () List!1497)

(declare-fun e!53392 () List!1497)

(assert (=> b!81848 (= e!53389 e!53392)))

(declare-fun c!12971 () Bool)

(assert (=> b!81848 (= c!12971 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun bm!7626 () Bool)

(declare-fun call!7628 () List!1497)

(assert (=> bm!7626 (= call!7628 call!7629)))

(declare-fun d!20409 () Bool)

(assert (=> d!20409 e!53388))

(declare-fun res!42492 () Bool)

(assert (=> d!20409 (=> (not res!42492) (not e!53388))))

(assert (=> d!20409 (= res!42492 (isStrictlySorted!283 lt!38263))))

(assert (=> d!20409 (= lt!38263 e!53389)))

(declare-fun c!12968 () Bool)

(assert (=> d!20409 (= c!12968 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (bvslt (_1!1095 (h!2082 (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!20409 (isStrictlySorted!283 (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20409 (= (insertStrictlySorted!59 (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38263)))

(declare-fun e!53390 () List!1497)

(declare-fun bm!7627 () Bool)

(assert (=> bm!7627 (= call!7630 ($colon$colon!69 e!53390 (ite c!12968 (h!2082 (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (tuple2!2169 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun c!12970 () Bool)

(assert (=> bm!7627 (= c!12970 c!12968)))

(declare-fun b!81849 () Bool)

(declare-fun e!53391 () List!1497)

(assert (=> b!81849 (= e!53391 call!7628)))

(declare-fun b!81850 () Bool)

(declare-fun res!42493 () Bool)

(assert (=> b!81850 (=> (not res!42493) (not e!53388))))

(assert (=> b!81850 (= res!42493 (containsKey!142 lt!38263 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun c!12969 () Bool)

(declare-fun b!81851 () Bool)

(assert (=> b!81851 (= c!12969 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (bvsgt (_1!1095 (h!2082 (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> b!81851 (= e!53392 e!53391)))

(declare-fun b!81852 () Bool)

(assert (=> b!81852 (= e!53390 (insertStrictlySorted!59 (t!5156 (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81853 () Bool)

(assert (=> b!81853 (= e!53392 call!7629)))

(declare-fun b!81854 () Bool)

(assert (=> b!81854 (= e!53391 call!7628)))

(declare-fun b!81855 () Bool)

(assert (=> b!81855 (= e!53390 (ite c!12971 (t!5156 (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (ite c!12969 (Cons!1493 (h!2082 (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (t!5156 (toList!730 (+!101 lt!37215 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))) Nil!1494)))))

(declare-fun b!81856 () Bool)

(assert (=> b!81856 (= e!53389 call!7630)))

(assert (= (and d!20409 c!12968) b!81856))

(assert (= (and d!20409 (not c!12968)) b!81848))

(assert (= (and b!81848 c!12971) b!81853))

(assert (= (and b!81848 (not c!12971)) b!81851))

(assert (= (and b!81851 c!12969) b!81854))

(assert (= (and b!81851 (not c!12969)) b!81849))

(assert (= (or b!81854 b!81849) bm!7626))

(assert (= (or b!81853 bm!7626) bm!7625))

(assert (= (or b!81856 bm!7625) bm!7627))

(assert (= (and bm!7627 c!12970) b!81852))

(assert (= (and bm!7627 (not c!12970)) b!81855))

(assert (= (and d!20409 res!42492) b!81850))

(assert (= (and b!81850 res!42493) b!81847))

(declare-fun m!84319 () Bool)

(assert (=> b!81852 m!84319))

(declare-fun m!84321 () Bool)

(assert (=> bm!7627 m!84321))

(declare-fun m!84323 () Bool)

(assert (=> b!81847 m!84323))

(declare-fun m!84325 () Bool)

(assert (=> d!20409 m!84325))

(declare-fun m!84327 () Bool)

(assert (=> d!20409 m!84327))

(declare-fun m!84329 () Bool)

(assert (=> b!81850 m!84329))

(assert (=> d!19769 d!20409))

(declare-fun d!20411 () Bool)

(assert (=> d!20411 (= (apply!80 lt!37826 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!139 (toList!730 lt!37826) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3477 () Bool)

(assert (= bs!3477 d!20411))

(declare-fun m!84331 () Bool)

(assert (=> bs!3477 m!84331))

(assert (=> bs!3477 m!84331))

(declare-fun m!84333 () Bool)

(assert (=> bs!3477 m!84333))

(assert (=> b!80963 d!20411))

(assert (=> d!19921 d!19919))

(declare-fun d!20413 () Bool)

(assert (=> d!20413 (= (getValueByKey!139 lt!37552 (_1!1095 lt!37210)) (Some!144 (_2!1095 lt!37210)))))

(assert (=> d!20413 true))

(declare-fun _$22!403 () Unit!2322)

(assert (=> d!20413 (= (choose!478 lt!37552 (_1!1095 lt!37210) (_2!1095 lt!37210)) _$22!403)))

(declare-fun bs!3478 () Bool)

(assert (= bs!3478 d!20413))

(assert (=> bs!3478 m!82159))

(assert (=> d!19921 d!20413))

(declare-fun d!20415 () Bool)

(declare-fun res!42494 () Bool)

(declare-fun e!53393 () Bool)

(assert (=> d!20415 (=> res!42494 e!53393)))

(assert (=> d!20415 (= res!42494 (or ((_ is Nil!1494) lt!37552) ((_ is Nil!1494) (t!5156 lt!37552))))))

(assert (=> d!20415 (= (isStrictlySorted!283 lt!37552) e!53393)))

(declare-fun b!81857 () Bool)

(declare-fun e!53394 () Bool)

(assert (=> b!81857 (= e!53393 e!53394)))

(declare-fun res!42495 () Bool)

(assert (=> b!81857 (=> (not res!42495) (not e!53394))))

(assert (=> b!81857 (= res!42495 (bvslt (_1!1095 (h!2082 lt!37552)) (_1!1095 (h!2082 (t!5156 lt!37552)))))))

(declare-fun b!81858 () Bool)

(assert (=> b!81858 (= e!53394 (isStrictlySorted!283 (t!5156 lt!37552)))))

(assert (= (and d!20415 (not res!42494)) b!81857))

(assert (= (and b!81857 res!42495) b!81858))

(declare-fun m!84335 () Bool)

(assert (=> b!81858 m!84335))

(assert (=> d!19921 d!20415))

(declare-fun d!20417 () Bool)

(assert (=> d!20417 (isDefined!91 (getValueByKey!139 (toList!730 lt!37550) (_1!1095 lt!37209)))))

(declare-fun lt!38264 () Unit!2322)

(assert (=> d!20417 (= lt!38264 (choose!487 (toList!730 lt!37550) (_1!1095 lt!37209)))))

(declare-fun e!53395 () Bool)

(assert (=> d!20417 e!53395))

(declare-fun res!42496 () Bool)

(assert (=> d!20417 (=> (not res!42496) (not e!53395))))

(assert (=> d!20417 (= res!42496 (isStrictlySorted!283 (toList!730 lt!37550)))))

(assert (=> d!20417 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37550) (_1!1095 lt!37209)) lt!38264)))

(declare-fun b!81859 () Bool)

(assert (=> b!81859 (= e!53395 (containsKey!142 (toList!730 lt!37550) (_1!1095 lt!37209)))))

(assert (= (and d!20417 res!42496) b!81859))

(assert (=> d!20417 m!82153))

(assert (=> d!20417 m!82153))

(assert (=> d!20417 m!82911))

(declare-fun m!84337 () Bool)

(assert (=> d!20417 m!84337))

(declare-fun m!84339 () Bool)

(assert (=> d!20417 m!84339))

(assert (=> b!81859 m!82907))

(assert (=> b!81038 d!20417))

(declare-fun d!20419 () Bool)

(assert (=> d!20419 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37550) (_1!1095 lt!37209))) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37550) (_1!1095 lt!37209)))))))

(declare-fun bs!3479 () Bool)

(assert (= bs!3479 d!20419))

(assert (=> bs!3479 m!82153))

(declare-fun m!84341 () Bool)

(assert (=> bs!3479 m!84341))

(assert (=> b!81038 d!20419))

(assert (=> b!81038 d!19959))

(assert (=> b!80884 d!20283))

(declare-fun d!20421 () Bool)

(declare-fun lt!38265 () Bool)

(assert (=> d!20421 (= lt!38265 (select (content!86 lt!37854) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun e!53396 () Bool)

(assert (=> d!20421 (= lt!38265 e!53396)))

(declare-fun res!42498 () Bool)

(assert (=> d!20421 (=> (not res!42498) (not e!53396))))

(assert (=> d!20421 (= res!42498 ((_ is Cons!1493) lt!37854))))

(assert (=> d!20421 (= (contains!742 lt!37854 (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))) lt!38265)))

(declare-fun b!81860 () Bool)

(declare-fun e!53397 () Bool)

(assert (=> b!81860 (= e!53396 e!53397)))

(declare-fun res!42497 () Bool)

(assert (=> b!81860 (=> res!42497 e!53397)))

(assert (=> b!81860 (= res!42497 (= (h!2082 lt!37854) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(declare-fun b!81861 () Bool)

(assert (=> b!81861 (= e!53397 (contains!742 (t!5156 lt!37854) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))))))

(assert (= (and d!20421 res!42498) b!81860))

(assert (= (and b!81860 (not res!42497)) b!81861))

(declare-fun m!84343 () Bool)

(assert (=> d!20421 m!84343))

(declare-fun m!84345 () Bool)

(assert (=> d!20421 m!84345))

(declare-fun m!84347 () Bool)

(assert (=> b!81861 m!84347))

(assert (=> b!81008 d!20421))

(declare-fun d!20423 () Bool)

(assert (=> d!20423 (= (apply!80 lt!37797 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (get!1192 (getValueByKey!139 (toList!730 lt!37797) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3480 () Bool)

(assert (= bs!3480 d!20423))

(assert (=> bs!3480 m!82381))

(declare-fun m!84349 () Bool)

(assert (=> bs!3480 m!84349))

(assert (=> bs!3480 m!84349))

(declare-fun m!84351 () Bool)

(assert (=> bs!3480 m!84351))

(assert (=> b!80932 d!20423))

(declare-fun d!20425 () Bool)

(declare-fun c!12972 () Bool)

(assert (=> d!20425 (= c!12972 ((_ is ValueCellFull!914) (select (arr!1893 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!53398 () V!3001)

(assert (=> d!20425 (= (get!1189 (select (arr!1893 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53398)))

(declare-fun b!81862 () Bool)

(assert (=> b!81862 (= e!53398 (get!1190 (select (arr!1893 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81863 () Bool)

(assert (=> b!81863 (= e!53398 (get!1191 (select (arr!1893 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (index!3076 lt!37405) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20425 c!12972) b!81862))

(assert (= (and d!20425 (not c!12972)) b!81863))

(assert (=> b!81862 m!82745))

(assert (=> b!81862 m!82743))

(declare-fun m!84353 () Bool)

(assert (=> b!81862 m!84353))

(assert (=> b!81863 m!82745))

(assert (=> b!81863 m!82743))

(declare-fun m!84355 () Bool)

(assert (=> b!81863 m!84355))

(assert (=> b!80932 d!20425))

(declare-fun d!20427 () Bool)

(declare-fun res!42499 () Bool)

(declare-fun e!53399 () Bool)

(assert (=> d!20427 (=> res!42499 e!53399)))

(assert (=> d!20427 (= res!42499 (and ((_ is Cons!1493) lt!37848) (= (_1!1095 (h!2082 lt!37848)) (_1!1095 lt!37212))))))

(assert (=> d!20427 (= (containsKey!142 lt!37848 (_1!1095 lt!37212)) e!53399)))

(declare-fun b!81864 () Bool)

(declare-fun e!53400 () Bool)

(assert (=> b!81864 (= e!53399 e!53400)))

(declare-fun res!42500 () Bool)

(assert (=> b!81864 (=> (not res!42500) (not e!53400))))

(assert (=> b!81864 (= res!42500 (and (or (not ((_ is Cons!1493) lt!37848)) (bvsle (_1!1095 (h!2082 lt!37848)) (_1!1095 lt!37212))) ((_ is Cons!1493) lt!37848) (bvslt (_1!1095 (h!2082 lt!37848)) (_1!1095 lt!37212))))))

(declare-fun b!81865 () Bool)

(assert (=> b!81865 (= e!53400 (containsKey!142 (t!5156 lt!37848) (_1!1095 lt!37212)))))

(assert (= (and d!20427 (not res!42499)) b!81864))

(assert (= (and b!81864 res!42500) b!81865))

(declare-fun m!84357 () Bool)

(assert (=> b!81865 m!84357))

(assert (=> b!80992 d!20427))

(declare-fun d!20429 () Bool)

(declare-fun lt!38266 () Bool)

(assert (=> d!20429 (= lt!38266 (select (content!86 (toList!730 lt!37632)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(declare-fun e!53401 () Bool)

(assert (=> d!20429 (= lt!38266 e!53401)))

(declare-fun res!42502 () Bool)

(assert (=> d!20429 (=> (not res!42502) (not e!53401))))

(assert (=> d!20429 (= res!42502 ((_ is Cons!1493) (toList!730 lt!37632)))))

(assert (=> d!20429 (= (contains!742 (toList!730 lt!37632) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) lt!38266)))

(declare-fun b!81866 () Bool)

(declare-fun e!53402 () Bool)

(assert (=> b!81866 (= e!53401 e!53402)))

(declare-fun res!42501 () Bool)

(assert (=> b!81866 (=> res!42501 e!53402)))

(assert (=> b!81866 (= res!42501 (= (h!2082 (toList!730 lt!37632)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(declare-fun b!81867 () Bool)

(assert (=> b!81867 (= e!53402 (contains!742 (t!5156 (toList!730 lt!37632)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (= (and d!20429 res!42502) b!81866))

(assert (= (and b!81866 (not res!42501)) b!81867))

(declare-fun m!84359 () Bool)

(assert (=> d!20429 m!84359))

(declare-fun m!84361 () Bool)

(assert (=> d!20429 m!84361))

(declare-fun m!84363 () Bool)

(assert (=> b!81867 m!84363))

(assert (=> b!80768 d!20429))

(declare-fun b!81868 () Bool)

(declare-fun e!53405 () Bool)

(declare-fun call!7631 () Bool)

(assert (=> b!81868 (= e!53405 call!7631)))

(declare-fun b!81869 () Bool)

(declare-fun e!53404 () Bool)

(assert (=> b!81869 (= e!53404 e!53405)))

(declare-fun c!12973 () Bool)

(assert (=> b!81869 (= c!12973 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!20431 () Bool)

(declare-fun res!42505 () Bool)

(declare-fun e!53406 () Bool)

(assert (=> d!20431 (=> res!42505 e!53406)))

(assert (=> d!20431 (= res!42505 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> d!20431 (= (arrayNoDuplicates!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000000 Nil!1495) e!53406)))

(declare-fun b!81870 () Bool)

(assert (=> b!81870 (= e!53406 e!53404)))

(declare-fun res!42504 () Bool)

(assert (=> b!81870 (=> (not res!42504) (not e!53404))))

(declare-fun e!53403 () Bool)

(assert (=> b!81870 (= res!42504 (not e!53403))))

(declare-fun res!42503 () Bool)

(assert (=> b!81870 (=> (not res!42503) (not e!53403))))

(assert (=> b!81870 (= res!42503 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!81871 () Bool)

(assert (=> b!81871 (= e!53403 (contains!741 Nil!1495 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!81872 () Bool)

(assert (=> b!81872 (= e!53405 call!7631)))

(declare-fun bm!7628 () Bool)

(assert (=> bm!7628 (= call!7631 (arrayNoDuplicates!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12973 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) #b00000000000000000000000000000000) Nil!1495) Nil!1495)))))

(assert (= (and d!20431 (not res!42505)) b!81870))

(assert (= (and b!81870 res!42503) b!81871))

(assert (= (and b!81870 res!42504) b!81869))

(assert (= (and b!81869 c!12973) b!81872))

(assert (= (and b!81869 (not c!12973)) b!81868))

(assert (= (or b!81872 b!81868) bm!7628))

(assert (=> b!81869 m!83657))

(assert (=> b!81869 m!83657))

(assert (=> b!81869 m!83659))

(assert (=> b!81870 m!83657))

(assert (=> b!81870 m!83657))

(assert (=> b!81870 m!83659))

(assert (=> b!81871 m!83657))

(assert (=> b!81871 m!83657))

(declare-fun m!84365 () Bool)

(assert (=> b!81871 m!84365))

(assert (=> bm!7628 m!83657))

(declare-fun m!84367 () Bool)

(assert (=> bm!7628 m!84367))

(assert (=> b!80793 d!20431))

(declare-fun d!20433 () Bool)

(declare-fun res!42506 () Bool)

(declare-fun e!53407 () Bool)

(assert (=> d!20433 (=> res!42506 e!53407)))

(assert (=> d!20433 (= res!42506 (and ((_ is Cons!1493) (toList!730 lt!37476)) (= (_1!1095 (h!2082 (toList!730 lt!37476))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20433 (= (containsKey!142 (toList!730 lt!37476) #b0000000000000000000000000000000000000000000000000000000000000000) e!53407)))

(declare-fun b!81873 () Bool)

(declare-fun e!53408 () Bool)

(assert (=> b!81873 (= e!53407 e!53408)))

(declare-fun res!42507 () Bool)

(assert (=> b!81873 (=> (not res!42507) (not e!53408))))

(assert (=> b!81873 (= res!42507 (and (or (not ((_ is Cons!1493) (toList!730 lt!37476))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37476))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1493) (toList!730 lt!37476)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37476))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81874 () Bool)

(assert (=> b!81874 (= e!53408 (containsKey!142 (t!5156 (toList!730 lt!37476)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20433 (not res!42506)) b!81873))

(assert (= (and b!81873 res!42507) b!81874))

(declare-fun m!84369 () Bool)

(assert (=> b!81874 m!84369))

(assert (=> d!19777 d!20433))

(declare-fun d!20435 () Bool)

(declare-fun res!42508 () Bool)

(declare-fun e!53409 () Bool)

(assert (=> d!20435 (=> res!42508 e!53409)))

(assert (=> d!20435 (= res!42508 (= (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!20435 (= (arrayContainsKey!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!53409)))

(declare-fun b!81875 () Bool)

(declare-fun e!53410 () Bool)

(assert (=> b!81875 (= e!53409 e!53410)))

(declare-fun res!42509 () Bool)

(assert (=> b!81875 (=> (not res!42509) (not e!53410))))

(assert (=> b!81875 (= res!42509 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!81876 () Bool)

(assert (=> b!81876 (= e!53410 (arrayContainsKey!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!20435 (not res!42508)) b!81875))

(assert (= (and b!81875 res!42509) b!81876))

(assert (=> d!20435 m!83393))

(assert (=> b!81876 m!81737))

(declare-fun m!84371 () Bool)

(assert (=> b!81876 m!84371))

(assert (=> b!80870 d!20435))

(declare-fun d!20437 () Bool)

(declare-fun lt!38267 () Bool)

(assert (=> d!20437 (= lt!38267 (select (content!86 (toList!730 lt!37778)) (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun e!53411 () Bool)

(assert (=> d!20437 (= lt!38267 e!53411)))

(declare-fun res!42511 () Bool)

(assert (=> d!20437 (=> (not res!42511) (not e!53411))))

(assert (=> d!20437 (= res!42511 ((_ is Cons!1493) (toList!730 lt!37778)))))

(assert (=> d!20437 (= (contains!742 (toList!730 lt!37778) (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!38267)))

(declare-fun b!81877 () Bool)

(declare-fun e!53412 () Bool)

(assert (=> b!81877 (= e!53411 e!53412)))

(declare-fun res!42510 () Bool)

(assert (=> b!81877 (=> res!42510 e!53412)))

(assert (=> b!81877 (= res!42510 (= (h!2082 (toList!730 lt!37778)) (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!81878 () Bool)

(assert (=> b!81878 (= e!53412 (contains!742 (t!5156 (toList!730 lt!37778)) (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!20437 res!42511) b!81877))

(assert (= (and b!81877 (not res!42510)) b!81878))

(declare-fun m!84373 () Bool)

(assert (=> d!20437 m!84373))

(declare-fun m!84375 () Bool)

(assert (=> d!20437 m!84375))

(declare-fun m!84377 () Bool)

(assert (=> b!81878 m!84377))

(assert (=> b!80898 d!20437))

(declare-fun b!81882 () Bool)

(declare-fun e!53414 () Option!145)

(assert (=> b!81882 (= e!53414 None!143)))

(declare-fun b!81881 () Bool)

(assert (=> b!81881 (= e!53414 (getValueByKey!139 (t!5156 (toList!730 lt!37612)) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20439 () Bool)

(declare-fun c!12974 () Bool)

(assert (=> d!20439 (= c!12974 (and ((_ is Cons!1493) (toList!730 lt!37612)) (= (_1!1095 (h!2082 (toList!730 lt!37612))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53413 () Option!145)

(assert (=> d!20439 (= (getValueByKey!139 (toList!730 lt!37612) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53413)))

(declare-fun b!81879 () Bool)

(assert (=> b!81879 (= e!53413 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37612)))))))

(declare-fun b!81880 () Bool)

(assert (=> b!81880 (= e!53413 e!53414)))

(declare-fun c!12975 () Bool)

(assert (=> b!81880 (= c!12975 (and ((_ is Cons!1493) (toList!730 lt!37612)) (not (= (_1!1095 (h!2082 (toList!730 lt!37612))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20439 c!12974) b!81879))

(assert (= (and d!20439 (not c!12974)) b!81880))

(assert (= (and b!81880 c!12975) b!81881))

(assert (= (and b!81880 (not c!12975)) b!81882))

(declare-fun m!84379 () Bool)

(assert (=> b!81881 m!84379))

(assert (=> b!80754 d!20439))

(declare-fun d!20441 () Bool)

(declare-fun e!53415 () Bool)

(assert (=> d!20441 e!53415))

(declare-fun res!42512 () Bool)

(assert (=> d!20441 (=> res!42512 e!53415)))

(declare-fun lt!38269 () Bool)

(assert (=> d!20441 (= res!42512 (not lt!38269))))

(declare-fun lt!38268 () Bool)

(assert (=> d!20441 (= lt!38269 lt!38268)))

(declare-fun lt!38270 () Unit!2322)

(declare-fun e!53416 () Unit!2322)

(assert (=> d!20441 (= lt!38270 e!53416)))

(declare-fun c!12976 () Bool)

(assert (=> d!20441 (= c!12976 lt!38268)))

(assert (=> d!20441 (= lt!38268 (containsKey!142 (toList!730 lt!37858) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!20441 (= (contains!739 lt!37858 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) lt!38269)))

(declare-fun b!81883 () Bool)

(declare-fun lt!38271 () Unit!2322)

(assert (=> b!81883 (= e!53416 lt!38271)))

(assert (=> b!81883 (= lt!38271 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37858) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> b!81883 (isDefined!91 (getValueByKey!139 (toList!730 lt!37858) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!81884 () Bool)

(declare-fun Unit!2381 () Unit!2322)

(assert (=> b!81884 (= e!53416 Unit!2381)))

(declare-fun b!81885 () Bool)

(assert (=> b!81885 (= e!53415 (isDefined!91 (getValueByKey!139 (toList!730 lt!37858) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20441 c!12976) b!81883))

(assert (= (and d!20441 (not c!12976)) b!81884))

(assert (= (and d!20441 (not res!42512)) b!81885))

(declare-fun m!84381 () Bool)

(assert (=> d!20441 m!84381))

(declare-fun m!84383 () Bool)

(assert (=> b!81883 m!84383))

(assert (=> b!81883 m!82889))

(assert (=> b!81883 m!82889))

(declare-fun m!84385 () Bool)

(assert (=> b!81883 m!84385))

(assert (=> b!81885 m!82889))

(assert (=> b!81885 m!82889))

(assert (=> b!81885 m!84385))

(assert (=> d!19903 d!20441))

(declare-fun b!81889 () Bool)

(declare-fun e!53418 () Option!145)

(assert (=> b!81889 (= e!53418 None!143)))

(declare-fun b!81888 () Bool)

(assert (=> b!81888 (= e!53418 (getValueByKey!139 (t!5156 lt!37856) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun d!20443 () Bool)

(declare-fun c!12977 () Bool)

(assert (=> d!20443 (= c!12977 (and ((_ is Cons!1493) lt!37856) (= (_1!1095 (h!2082 lt!37856)) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun e!53417 () Option!145)

(assert (=> d!20443 (= (getValueByKey!139 lt!37856 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) e!53417)))

(declare-fun b!81886 () Bool)

(assert (=> b!81886 (= e!53417 (Some!144 (_2!1095 (h!2082 lt!37856))))))

(declare-fun b!81887 () Bool)

(assert (=> b!81887 (= e!53417 e!53418)))

(declare-fun c!12978 () Bool)

(assert (=> b!81887 (= c!12978 (and ((_ is Cons!1493) lt!37856) (not (= (_1!1095 (h!2082 lt!37856)) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))))

(assert (= (and d!20443 c!12977) b!81886))

(assert (= (and d!20443 (not c!12977)) b!81887))

(assert (= (and b!81887 c!12978) b!81888))

(assert (= (and b!81887 (not c!12978)) b!81889))

(declare-fun m!84387 () Bool)

(assert (=> b!81888 m!84387))

(assert (=> d!19903 d!20443))

(declare-fun d!20445 () Bool)

(assert (=> d!20445 (= (getValueByKey!139 lt!37856 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) (Some!144 (_2!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun lt!38272 () Unit!2322)

(assert (=> d!20445 (= lt!38272 (choose!478 lt!37856 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_2!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53419 () Bool)

(assert (=> d!20445 e!53419))

(declare-fun res!42513 () Bool)

(assert (=> d!20445 (=> (not res!42513) (not e!53419))))

(assert (=> d!20445 (= res!42513 (isStrictlySorted!283 lt!37856))))

(assert (=> d!20445 (= (lemmaContainsTupThenGetReturnValue!56 lt!37856 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_2!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) lt!38272)))

(declare-fun b!81890 () Bool)

(declare-fun res!42514 () Bool)

(assert (=> b!81890 (=> (not res!42514) (not e!53419))))

(assert (=> b!81890 (= res!42514 (containsKey!142 lt!37856 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!81891 () Bool)

(assert (=> b!81891 (= e!53419 (contains!742 lt!37856 (tuple2!2169 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_2!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20445 res!42513) b!81890))

(assert (= (and b!81890 res!42514) b!81891))

(assert (=> d!20445 m!82883))

(declare-fun m!84389 () Bool)

(assert (=> d!20445 m!84389))

(declare-fun m!84391 () Bool)

(assert (=> d!20445 m!84391))

(declare-fun m!84393 () Bool)

(assert (=> b!81890 m!84393))

(declare-fun m!84395 () Bool)

(assert (=> b!81891 m!84395))

(assert (=> d!19903 d!20445))

(declare-fun bm!7629 () Bool)

(declare-fun call!7633 () List!1497)

(declare-fun call!7634 () List!1497)

(assert (=> bm!7629 (= call!7633 call!7634)))

(declare-fun e!53420 () Bool)

(declare-fun lt!38273 () List!1497)

(declare-fun b!81892 () Bool)

(assert (=> b!81892 (= e!53420 (contains!742 lt!38273 (tuple2!2169 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_2!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun b!81893 () Bool)

(declare-fun e!53421 () List!1497)

(declare-fun e!53424 () List!1497)

(assert (=> b!81893 (= e!53421 e!53424)))

(declare-fun c!12982 () Bool)

(assert (=> b!81893 (= c!12982 (and ((_ is Cons!1493) (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475)))) (= (_1!1095 (h!2082 (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475))))) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun bm!7630 () Bool)

(declare-fun call!7632 () List!1497)

(assert (=> bm!7630 (= call!7632 call!7633)))

(declare-fun d!20447 () Bool)

(assert (=> d!20447 e!53420))

(declare-fun res!42515 () Bool)

(assert (=> d!20447 (=> (not res!42515) (not e!53420))))

(assert (=> d!20447 (= res!42515 (isStrictlySorted!283 lt!38273))))

(assert (=> d!20447 (= lt!38273 e!53421)))

(declare-fun c!12979 () Bool)

(assert (=> d!20447 (= c!12979 (and ((_ is Cons!1493) (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475)))) (bvslt (_1!1095 (h!2082 (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475))))) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (=> d!20447 (isStrictlySorted!283 (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475))))))

(assert (=> d!20447 (= (insertStrictlySorted!59 (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475))) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_2!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))) lt!38273)))

(declare-fun bm!7631 () Bool)

(declare-fun e!53422 () List!1497)

(assert (=> bm!7631 (= call!7634 ($colon$colon!69 e!53422 (ite c!12979 (h!2082 (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475)))) (tuple2!2169 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_2!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))))

(declare-fun c!12981 () Bool)

(assert (=> bm!7631 (= c!12981 c!12979)))

(declare-fun b!81894 () Bool)

(declare-fun e!53423 () List!1497)

(assert (=> b!81894 (= e!53423 call!7632)))

(declare-fun b!81895 () Bool)

(declare-fun res!42516 () Bool)

(assert (=> b!81895 (=> (not res!42516) (not e!53420))))

(assert (=> b!81895 (= res!42516 (containsKey!142 lt!38273 (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!81896 () Bool)

(declare-fun c!12980 () Bool)

(assert (=> b!81896 (= c!12980 (and ((_ is Cons!1493) (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475)))) (bvsgt (_1!1095 (h!2082 (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475))))) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (=> b!81896 (= e!53424 e!53423)))

(declare-fun b!81897 () Bool)

(assert (=> b!81897 (= e!53422 (insertStrictlySorted!59 (t!5156 (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475)))) (_1!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (_2!1095 (ite (or c!12598 c!12595) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!81898 () Bool)

(assert (=> b!81898 (= e!53424 call!7633)))

(declare-fun b!81899 () Bool)

(assert (=> b!81899 (= e!53423 call!7632)))

(declare-fun b!81900 () Bool)

(assert (=> b!81900 (= e!53422 (ite c!12982 (t!5156 (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475)))) (ite c!12980 (Cons!1493 (h!2082 (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475)))) (t!5156 (toList!730 (ite c!12598 call!7479 (ite c!12595 call!7480 call!7475))))) Nil!1494)))))

(declare-fun b!81901 () Bool)

(assert (=> b!81901 (= e!53421 call!7634)))

(assert (= (and d!20447 c!12979) b!81901))

(assert (= (and d!20447 (not c!12979)) b!81893))

(assert (= (and b!81893 c!12982) b!81898))

(assert (= (and b!81893 (not c!12982)) b!81896))

(assert (= (and b!81896 c!12980) b!81899))

(assert (= (and b!81896 (not c!12980)) b!81894))

(assert (= (or b!81899 b!81894) bm!7630))

(assert (= (or b!81898 bm!7630) bm!7629))

(assert (= (or b!81901 bm!7629) bm!7631))

(assert (= (and bm!7631 c!12981) b!81897))

(assert (= (and bm!7631 (not c!12981)) b!81900))

(assert (= (and d!20447 res!42515) b!81895))

(assert (= (and b!81895 res!42516) b!81892))

(declare-fun m!84397 () Bool)

(assert (=> b!81897 m!84397))

(declare-fun m!84399 () Bool)

(assert (=> bm!7631 m!84399))

(declare-fun m!84401 () Bool)

(assert (=> b!81892 m!84401))

(declare-fun m!84403 () Bool)

(assert (=> d!20447 m!84403))

(declare-fun m!84405 () Bool)

(assert (=> d!20447 m!84405))

(declare-fun m!84407 () Bool)

(assert (=> b!81895 m!84407))

(assert (=> d!19903 d!20447))

(declare-fun d!20449 () Bool)

(declare-fun e!53425 () Bool)

(assert (=> d!20449 e!53425))

(declare-fun res!42518 () Bool)

(assert (=> d!20449 (=> (not res!42518) (not e!53425))))

(declare-fun lt!38277 () ListLongMap!1429)

(assert (=> d!20449 (= res!42518 (contains!739 lt!38277 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun lt!38275 () List!1497)

(assert (=> d!20449 (= lt!38277 (ListLongMap!1430 lt!38275))))

(declare-fun lt!38274 () Unit!2322)

(declare-fun lt!38276 () Unit!2322)

(assert (=> d!20449 (= lt!38274 lt!38276)))

(assert (=> d!20449 (= (getValueByKey!139 lt!38275 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!20449 (= lt!38276 (lemmaContainsTupThenGetReturnValue!56 lt!38275 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!20449 (= lt!38275 (insertStrictlySorted!59 (toList!730 call!7530) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (=> d!20449 (= (+!101 call!7530 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))) lt!38277)))

(declare-fun b!81902 () Bool)

(declare-fun res!42517 () Bool)

(assert (=> b!81902 (=> (not res!42517) (not e!53425))))

(assert (=> b!81902 (= res!42517 (= (getValueByKey!139 (toList!730 lt!38277) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(declare-fun b!81903 () Bool)

(assert (=> b!81903 (= e!53425 (contains!742 (toList!730 lt!38277) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(assert (= (and d!20449 res!42518) b!81902))

(assert (= (and b!81902 res!42517) b!81903))

(declare-fun m!84409 () Bool)

(assert (=> d!20449 m!84409))

(declare-fun m!84411 () Bool)

(assert (=> d!20449 m!84411))

(declare-fun m!84413 () Bool)

(assert (=> d!20449 m!84413))

(declare-fun m!84415 () Bool)

(assert (=> d!20449 m!84415))

(declare-fun m!84417 () Bool)

(assert (=> b!81902 m!84417))

(declare-fun m!84419 () Bool)

(assert (=> b!81903 m!84419))

(assert (=> b!80970 d!20449))

(declare-fun d!20451 () Bool)

(declare-fun res!42519 () Bool)

(declare-fun e!53426 () Bool)

(assert (=> d!20451 (=> res!42519 e!53426)))

(assert (=> d!20451 (= res!42519 (or ((_ is Nil!1494) lt!37854) ((_ is Nil!1494) (t!5156 lt!37854))))))

(assert (=> d!20451 (= (isStrictlySorted!283 lt!37854) e!53426)))

(declare-fun b!81904 () Bool)

(declare-fun e!53427 () Bool)

(assert (=> b!81904 (= e!53426 e!53427)))

(declare-fun res!42520 () Bool)

(assert (=> b!81904 (=> (not res!42520) (not e!53427))))

(assert (=> b!81904 (= res!42520 (bvslt (_1!1095 (h!2082 lt!37854)) (_1!1095 (h!2082 (t!5156 lt!37854)))))))

(declare-fun b!81905 () Bool)

(assert (=> b!81905 (= e!53427 (isStrictlySorted!283 (t!5156 lt!37854)))))

(assert (= (and d!20451 (not res!42519)) b!81904))

(assert (= (and b!81904 res!42520) b!81905))

(declare-fun m!84421 () Bool)

(assert (=> b!81905 m!84421))

(assert (=> d!19901 d!20451))

(declare-fun d!20453 () Bool)

(declare-fun res!42521 () Bool)

(declare-fun e!53428 () Bool)

(assert (=> d!20453 (=> res!42521 e!53428)))

(assert (=> d!20453 (= res!42521 (or ((_ is Nil!1494) (toList!730 (+!101 lt!37215 lt!37212))) ((_ is Nil!1494) (t!5156 (toList!730 (+!101 lt!37215 lt!37212))))))))

(assert (=> d!20453 (= (isStrictlySorted!283 (toList!730 (+!101 lt!37215 lt!37212))) e!53428)))

(declare-fun b!81906 () Bool)

(declare-fun e!53429 () Bool)

(assert (=> b!81906 (= e!53428 e!53429)))

(declare-fun res!42522 () Bool)

(assert (=> b!81906 (=> (not res!42522) (not e!53429))))

(assert (=> b!81906 (= res!42522 (bvslt (_1!1095 (h!2082 (toList!730 (+!101 lt!37215 lt!37212)))) (_1!1095 (h!2082 (t!5156 (toList!730 (+!101 lt!37215 lt!37212)))))))))

(declare-fun b!81907 () Bool)

(assert (=> b!81907 (= e!53429 (isStrictlySorted!283 (t!5156 (toList!730 (+!101 lt!37215 lt!37212)))))))

(assert (= (and d!20453 (not res!42521)) b!81906))

(assert (= (and b!81906 res!42522) b!81907))

(assert (=> b!81907 m!84255))

(assert (=> d!19901 d!20453))

(declare-fun d!20455 () Bool)

(declare-fun res!42523 () Bool)

(declare-fun e!53430 () Bool)

(assert (=> d!20455 (=> res!42523 e!53430)))

(assert (=> d!20455 (= res!42523 (and ((_ is Cons!1493) lt!37585) (= (_1!1095 (h!2082 lt!37585)) (_1!1095 lt!37209))))))

(assert (=> d!20455 (= (containsKey!142 lt!37585 (_1!1095 lt!37209)) e!53430)))

(declare-fun b!81908 () Bool)

(declare-fun e!53431 () Bool)

(assert (=> b!81908 (= e!53430 e!53431)))

(declare-fun res!42524 () Bool)

(assert (=> b!81908 (=> (not res!42524) (not e!53431))))

(assert (=> b!81908 (= res!42524 (and (or (not ((_ is Cons!1493) lt!37585)) (bvsle (_1!1095 (h!2082 lt!37585)) (_1!1095 lt!37209))) ((_ is Cons!1493) lt!37585) (bvslt (_1!1095 (h!2082 lt!37585)) (_1!1095 lt!37209))))))

(declare-fun b!81909 () Bool)

(assert (=> b!81909 (= e!53431 (containsKey!142 (t!5156 lt!37585) (_1!1095 lt!37209)))))

(assert (= (and d!20455 (not res!42523)) b!81908))

(assert (= (and b!81908 res!42524) b!81909))

(declare-fun m!84423 () Bool)

(assert (=> b!81909 m!84423))

(assert (=> b!80716 d!20455))

(assert (=> b!80815 d!20371))

(declare-fun d!20457 () Bool)

(declare-fun res!42525 () Bool)

(declare-fun e!53432 () Bool)

(assert (=> d!20457 (=> res!42525 e!53432)))

(assert (=> d!20457 (= res!42525 (and ((_ is Cons!1493) (toList!730 lt!37536)) (= (_1!1095 (h!2082 (toList!730 lt!37536))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20457 (= (containsKey!142 (toList!730 lt!37536) #b1000000000000000000000000000000000000000000000000000000000000000) e!53432)))

(declare-fun b!81910 () Bool)

(declare-fun e!53433 () Bool)

(assert (=> b!81910 (= e!53432 e!53433)))

(declare-fun res!42526 () Bool)

(assert (=> b!81910 (=> (not res!42526) (not e!53433))))

(assert (=> b!81910 (= res!42526 (and (or (not ((_ is Cons!1493) (toList!730 lt!37536))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37536))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1493) (toList!730 lt!37536)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37536))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81911 () Bool)

(assert (=> b!81911 (= e!53433 (containsKey!142 (t!5156 (toList!730 lt!37536)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20457 (not res!42525)) b!81910))

(assert (= (and b!81910 res!42526) b!81911))

(declare-fun m!84425 () Bool)

(assert (=> b!81911 m!84425))

(assert (=> d!19953 d!20457))

(declare-fun d!20459 () Bool)

(declare-fun c!12983 () Bool)

(assert (=> d!20459 (= c!12983 ((_ is Nil!1494) (toList!730 lt!37546)))))

(declare-fun e!53434 () (InoxSet tuple2!2168))

(assert (=> d!20459 (= (content!86 (toList!730 lt!37546)) e!53434)))

(declare-fun b!81912 () Bool)

(assert (=> b!81912 (= e!53434 ((as const (Array tuple2!2168 Bool)) false))))

(declare-fun b!81913 () Bool)

(assert (=> b!81913 (= e!53434 ((_ map or) (store ((as const (Array tuple2!2168 Bool)) false) (h!2082 (toList!730 lt!37546)) true) (content!86 (t!5156 (toList!730 lt!37546)))))))

(assert (= (and d!20459 c!12983) b!81912))

(assert (= (and d!20459 (not c!12983)) b!81913))

(declare-fun m!84427 () Bool)

(assert (=> b!81913 m!84427))

(assert (=> b!81913 m!83447))

(assert (=> d!19793 d!20459))

(declare-fun d!20461 () Bool)

(declare-fun e!53435 () Bool)

(assert (=> d!20461 e!53435))

(declare-fun res!42527 () Bool)

(assert (=> d!20461 (=> res!42527 e!53435)))

(declare-fun lt!38279 () Bool)

(assert (=> d!20461 (= res!42527 (not lt!38279))))

(declare-fun lt!38278 () Bool)

(assert (=> d!20461 (= lt!38279 lt!38278)))

(declare-fun lt!38280 () Unit!2322)

(declare-fun e!53436 () Unit!2322)

(assert (=> d!20461 (= lt!38280 e!53436)))

(declare-fun c!12984 () Bool)

(assert (=> d!20461 (= c!12984 lt!38278)))

(assert (=> d!20461 (= lt!38278 (containsKey!142 (toList!730 lt!37826) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20461 (= (contains!739 lt!37826 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38279)))

(declare-fun b!81914 () Bool)

(declare-fun lt!38281 () Unit!2322)

(assert (=> b!81914 (= e!53436 lt!38281)))

(assert (=> b!81914 (= lt!38281 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37826) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81914 (isDefined!91 (getValueByKey!139 (toList!730 lt!37826) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81915 () Bool)

(declare-fun Unit!2382 () Unit!2322)

(assert (=> b!81915 (= e!53436 Unit!2382)))

(declare-fun b!81916 () Bool)

(assert (=> b!81916 (= e!53435 (isDefined!91 (getValueByKey!139 (toList!730 lt!37826) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20461 c!12984) b!81914))

(assert (= (and d!20461 (not c!12984)) b!81915))

(assert (= (and d!20461 (not res!42527)) b!81916))

(declare-fun m!84429 () Bool)

(assert (=> d!20461 m!84429))

(declare-fun m!84431 () Bool)

(assert (=> b!81914 m!84431))

(assert (=> b!81914 m!84265))

(assert (=> b!81914 m!84265))

(declare-fun m!84433 () Bool)

(assert (=> b!81914 m!84433))

(assert (=> b!81916 m!84265))

(assert (=> b!81916 m!84265))

(assert (=> b!81916 m!84433))

(assert (=> bm!7527 d!20461))

(declare-fun bm!7632 () Bool)

(declare-fun call!7636 () List!1497)

(declare-fun call!7637 () List!1497)

(assert (=> bm!7632 (= call!7636 call!7637)))

(declare-fun b!81917 () Bool)

(declare-fun e!53437 () Bool)

(declare-fun lt!38282 () List!1497)

(assert (=> b!81917 (= e!53437 (contains!742 lt!38282 (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(declare-fun b!81918 () Bool)

(declare-fun e!53438 () List!1497)

(declare-fun e!53441 () List!1497)

(assert (=> b!81918 (= e!53438 e!53441)))

(declare-fun c!12988 () Bool)

(assert (=> b!81918 (= c!12988 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37219))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37219)))) (_1!1095 lt!37209))))))

(declare-fun bm!7633 () Bool)

(declare-fun call!7635 () List!1497)

(assert (=> bm!7633 (= call!7635 call!7636)))

(declare-fun d!20463 () Bool)

(assert (=> d!20463 e!53437))

(declare-fun res!42528 () Bool)

(assert (=> d!20463 (=> (not res!42528) (not e!53437))))

(assert (=> d!20463 (= res!42528 (isStrictlySorted!283 lt!38282))))

(assert (=> d!20463 (= lt!38282 e!53438)))

(declare-fun c!12985 () Bool)

(assert (=> d!20463 (= c!12985 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37219))) (bvslt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37219)))) (_1!1095 lt!37209))))))

(assert (=> d!20463 (isStrictlySorted!283 (t!5156 (toList!730 lt!37219)))))

(assert (=> d!20463 (= (insertStrictlySorted!59 (t!5156 (toList!730 lt!37219)) (_1!1095 lt!37209) (_2!1095 lt!37209)) lt!38282)))

(declare-fun bm!7634 () Bool)

(declare-fun e!53439 () List!1497)

(assert (=> bm!7634 (= call!7637 ($colon$colon!69 e!53439 (ite c!12985 (h!2082 (t!5156 (toList!730 lt!37219))) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209)))))))

(declare-fun c!12987 () Bool)

(assert (=> bm!7634 (= c!12987 c!12985)))

(declare-fun b!81919 () Bool)

(declare-fun e!53440 () List!1497)

(assert (=> b!81919 (= e!53440 call!7635)))

(declare-fun b!81920 () Bool)

(declare-fun res!42529 () Bool)

(assert (=> b!81920 (=> (not res!42529) (not e!53437))))

(assert (=> b!81920 (= res!42529 (containsKey!142 lt!38282 (_1!1095 lt!37209)))))

(declare-fun b!81921 () Bool)

(declare-fun c!12986 () Bool)

(assert (=> b!81921 (= c!12986 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37219))) (bvsgt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37219)))) (_1!1095 lt!37209))))))

(assert (=> b!81921 (= e!53441 e!53440)))

(declare-fun b!81922 () Bool)

(assert (=> b!81922 (= e!53439 (insertStrictlySorted!59 (t!5156 (t!5156 (toList!730 lt!37219))) (_1!1095 lt!37209) (_2!1095 lt!37209)))))

(declare-fun b!81923 () Bool)

(assert (=> b!81923 (= e!53441 call!7636)))

(declare-fun b!81924 () Bool)

(assert (=> b!81924 (= e!53440 call!7635)))

(declare-fun b!81925 () Bool)

(assert (=> b!81925 (= e!53439 (ite c!12988 (t!5156 (t!5156 (toList!730 lt!37219))) (ite c!12986 (Cons!1493 (h!2082 (t!5156 (toList!730 lt!37219))) (t!5156 (t!5156 (toList!730 lt!37219)))) Nil!1494)))))

(declare-fun b!81926 () Bool)

(assert (=> b!81926 (= e!53438 call!7637)))

(assert (= (and d!20463 c!12985) b!81926))

(assert (= (and d!20463 (not c!12985)) b!81918))

(assert (= (and b!81918 c!12988) b!81923))

(assert (= (and b!81918 (not c!12988)) b!81921))

(assert (= (and b!81921 c!12986) b!81924))

(assert (= (and b!81921 (not c!12986)) b!81919))

(assert (= (or b!81924 b!81919) bm!7633))

(assert (= (or b!81923 bm!7633) bm!7632))

(assert (= (or b!81926 bm!7632) bm!7634))

(assert (= (and bm!7634 c!12987) b!81922))

(assert (= (and bm!7634 (not c!12987)) b!81925))

(assert (= (and d!20463 res!42528) b!81920))

(assert (= (and b!81920 res!42529) b!81917))

(declare-fun m!84435 () Bool)

(assert (=> b!81922 m!84435))

(declare-fun m!84437 () Bool)

(assert (=> bm!7634 m!84437))

(declare-fun m!84439 () Bool)

(assert (=> b!81917 m!84439))

(declare-fun m!84441 () Bool)

(assert (=> d!20463 m!84441))

(assert (=> d!20463 m!84263))

(declare-fun m!84443 () Bool)

(assert (=> b!81920 m!84443))

(assert (=> b!80718 d!20463))

(declare-fun d!20465 () Bool)

(declare-fun lt!38283 () Bool)

(assert (=> d!20465 (= lt!38283 (select (content!86 (t!5156 (toList!730 lt!37550))) lt!37209))))

(declare-fun e!53442 () Bool)

(assert (=> d!20465 (= lt!38283 e!53442)))

(declare-fun res!42531 () Bool)

(assert (=> d!20465 (=> (not res!42531) (not e!53442))))

(assert (=> d!20465 (= res!42531 ((_ is Cons!1493) (t!5156 (toList!730 lt!37550))))))

(assert (=> d!20465 (= (contains!742 (t!5156 (toList!730 lt!37550)) lt!37209) lt!38283)))

(declare-fun b!81927 () Bool)

(declare-fun e!53443 () Bool)

(assert (=> b!81927 (= e!53442 e!53443)))

(declare-fun res!42530 () Bool)

(assert (=> b!81927 (=> res!42530 e!53443)))

(assert (=> b!81927 (= res!42530 (= (h!2082 (t!5156 (toList!730 lt!37550))) lt!37209))))

(declare-fun b!81928 () Bool)

(assert (=> b!81928 (= e!53443 (contains!742 (t!5156 (t!5156 (toList!730 lt!37550))) lt!37209))))

(assert (= (and d!20465 res!42531) b!81927))

(assert (= (and b!81927 (not res!42530)) b!81928))

(declare-fun m!84445 () Bool)

(assert (=> d!20465 m!84445))

(declare-fun m!84447 () Bool)

(assert (=> d!20465 m!84447))

(declare-fun m!84449 () Bool)

(assert (=> b!81928 m!84449))

(assert (=> b!80790 d!20465))

(assert (=> b!81193 d!20283))

(declare-fun d!20467 () Bool)

(declare-fun res!42532 () Bool)

(declare-fun e!53444 () Bool)

(assert (=> d!20467 (=> res!42532 e!53444)))

(assert (=> d!20467 (= res!42532 (and ((_ is Cons!1493) (toList!730 lt!37554)) (= (_1!1095 (h!2082 (toList!730 lt!37554))) (_1!1095 lt!37210))))))

(assert (=> d!20467 (= (containsKey!142 (toList!730 lt!37554) (_1!1095 lt!37210)) e!53444)))

(declare-fun b!81929 () Bool)

(declare-fun e!53445 () Bool)

(assert (=> b!81929 (= e!53444 e!53445)))

(declare-fun res!42533 () Bool)

(assert (=> b!81929 (=> (not res!42533) (not e!53445))))

(assert (=> b!81929 (= res!42533 (and (or (not ((_ is Cons!1493) (toList!730 lt!37554))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37554))) (_1!1095 lt!37210))) ((_ is Cons!1493) (toList!730 lt!37554)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37554))) (_1!1095 lt!37210))))))

(declare-fun b!81930 () Bool)

(assert (=> b!81930 (= e!53445 (containsKey!142 (t!5156 (toList!730 lt!37554)) (_1!1095 lt!37210)))))

(assert (= (and d!20467 (not res!42532)) b!81929))

(assert (= (and b!81929 res!42533) b!81930))

(declare-fun m!84451 () Bool)

(assert (=> b!81930 m!84451))

(assert (=> d!19917 d!20467))

(declare-fun d!20469 () Bool)

(declare-fun e!53446 () Bool)

(assert (=> d!20469 e!53446))

(declare-fun res!42534 () Bool)

(assert (=> d!20469 (=> res!42534 e!53446)))

(declare-fun lt!38285 () Bool)

(assert (=> d!20469 (= res!42534 (not lt!38285))))

(declare-fun lt!38284 () Bool)

(assert (=> d!20469 (= lt!38285 lt!38284)))

(declare-fun lt!38286 () Unit!2322)

(declare-fun e!53447 () Unit!2322)

(assert (=> d!20469 (= lt!38286 e!53447)))

(declare-fun c!12989 () Bool)

(assert (=> d!20469 (= c!12989 lt!38284)))

(assert (=> d!20469 (= lt!38284 (containsKey!142 (toList!730 lt!37767) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!20469 (= (contains!739 lt!37767 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38285)))

(declare-fun b!81931 () Bool)

(declare-fun lt!38287 () Unit!2322)

(assert (=> b!81931 (= e!53447 lt!38287)))

(assert (=> b!81931 (= lt!38287 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37767) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> b!81931 (isDefined!91 (getValueByKey!139 (toList!730 lt!37767) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81932 () Bool)

(declare-fun Unit!2383 () Unit!2322)

(assert (=> b!81932 (= e!53447 Unit!2383)))

(declare-fun b!81933 () Bool)

(assert (=> b!81933 (= e!53446 (isDefined!91 (getValueByKey!139 (toList!730 lt!37767) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20469 c!12989) b!81931))

(assert (= (and d!20469 (not c!12989)) b!81932))

(assert (= (and d!20469 (not res!42534)) b!81933))

(declare-fun m!84453 () Bool)

(assert (=> d!20469 m!84453))

(declare-fun m!84455 () Bool)

(assert (=> b!81931 m!84455))

(assert (=> b!81931 m!82621))

(assert (=> b!81931 m!82621))

(declare-fun m!84457 () Bool)

(assert (=> b!81931 m!84457))

(assert (=> b!81933 m!82621))

(assert (=> b!81933 m!82621))

(assert (=> b!81933 m!84457))

(assert (=> d!19841 d!20469))

(declare-fun b!81937 () Bool)

(declare-fun e!53449 () Option!145)

(assert (=> b!81937 (= e!53449 None!143)))

(declare-fun b!81936 () Bool)

(assert (=> b!81936 (= e!53449 (getValueByKey!139 (t!5156 lt!37765) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20471 () Bool)

(declare-fun c!12990 () Bool)

(assert (=> d!20471 (= c!12990 (and ((_ is Cons!1493) lt!37765) (= (_1!1095 (h!2082 lt!37765)) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53448 () Option!145)

(assert (=> d!20471 (= (getValueByKey!139 lt!37765 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53448)))

(declare-fun b!81934 () Bool)

(assert (=> b!81934 (= e!53448 (Some!144 (_2!1095 (h!2082 lt!37765))))))

(declare-fun b!81935 () Bool)

(assert (=> b!81935 (= e!53448 e!53449)))

(declare-fun c!12991 () Bool)

(assert (=> b!81935 (= c!12991 (and ((_ is Cons!1493) lt!37765) (not (= (_1!1095 (h!2082 lt!37765)) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20471 c!12990) b!81934))

(assert (= (and d!20471 (not c!12990)) b!81935))

(assert (= (and b!81935 c!12991) b!81936))

(assert (= (and b!81935 (not c!12991)) b!81937))

(declare-fun m!84459 () Bool)

(assert (=> b!81936 m!84459))

(assert (=> d!19841 d!20471))

(declare-fun d!20473 () Bool)

(assert (=> d!20473 (= (getValueByKey!139 lt!37765 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!38288 () Unit!2322)

(assert (=> d!20473 (= lt!38288 (choose!478 lt!37765 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun e!53450 () Bool)

(assert (=> d!20473 e!53450))

(declare-fun res!42535 () Bool)

(assert (=> d!20473 (=> (not res!42535) (not e!53450))))

(assert (=> d!20473 (= res!42535 (isStrictlySorted!283 lt!37765))))

(assert (=> d!20473 (= (lemmaContainsTupThenGetReturnValue!56 lt!37765 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38288)))

(declare-fun b!81938 () Bool)

(declare-fun res!42536 () Bool)

(assert (=> b!81938 (=> (not res!42536) (not e!53450))))

(assert (=> b!81938 (= res!42536 (containsKey!142 lt!37765 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81939 () Bool)

(assert (=> b!81939 (= e!53450 (contains!742 lt!37765 (tuple2!2169 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20473 res!42535) b!81938))

(assert (= (and b!81938 res!42536) b!81939))

(assert (=> d!20473 m!82615))

(declare-fun m!84461 () Bool)

(assert (=> d!20473 m!84461))

(declare-fun m!84463 () Bool)

(assert (=> d!20473 m!84463))

(declare-fun m!84465 () Bool)

(assert (=> b!81938 m!84465))

(declare-fun m!84467 () Bool)

(assert (=> b!81939 m!84467))

(assert (=> d!19841 d!20473))

(declare-fun bm!7635 () Bool)

(declare-fun call!7639 () List!1497)

(declare-fun call!7640 () List!1497)

(assert (=> bm!7635 (= call!7639 call!7640)))

(declare-fun b!81940 () Bool)

(declare-fun e!53451 () Bool)

(declare-fun lt!38289 () List!1497)

(assert (=> b!81940 (= e!53451 (contains!742 lt!38289 (tuple2!2169 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!81941 () Bool)

(declare-fun e!53452 () List!1497)

(declare-fun e!53455 () List!1497)

(assert (=> b!81941 (= e!53452 e!53455)))

(declare-fun c!12995 () Bool)

(assert (=> b!81941 (= c!12995 (and ((_ is Cons!1493) (toList!730 lt!37475)) (= (_1!1095 (h!2082 (toList!730 lt!37475))) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun bm!7636 () Bool)

(declare-fun call!7638 () List!1497)

(assert (=> bm!7636 (= call!7638 call!7639)))

(declare-fun d!20475 () Bool)

(assert (=> d!20475 e!53451))

(declare-fun res!42537 () Bool)

(assert (=> d!20475 (=> (not res!42537) (not e!53451))))

(assert (=> d!20475 (= res!42537 (isStrictlySorted!283 lt!38289))))

(assert (=> d!20475 (= lt!38289 e!53452)))

(declare-fun c!12992 () Bool)

(assert (=> d!20475 (= c!12992 (and ((_ is Cons!1493) (toList!730 lt!37475)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37475))) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!20475 (isStrictlySorted!283 (toList!730 lt!37475))))

(assert (=> d!20475 (= (insertStrictlySorted!59 (toList!730 lt!37475) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38289)))

(declare-fun e!53453 () List!1497)

(declare-fun bm!7637 () Bool)

(assert (=> bm!7637 (= call!7640 ($colon$colon!69 e!53453 (ite c!12992 (h!2082 (toList!730 lt!37475)) (tuple2!2169 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun c!12994 () Bool)

(assert (=> bm!7637 (= c!12994 c!12992)))

(declare-fun b!81942 () Bool)

(declare-fun e!53454 () List!1497)

(assert (=> b!81942 (= e!53454 call!7638)))

(declare-fun b!81943 () Bool)

(declare-fun res!42538 () Bool)

(assert (=> b!81943 (=> (not res!42538) (not e!53451))))

(assert (=> b!81943 (= res!42538 (containsKey!142 lt!38289 (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun c!12993 () Bool)

(declare-fun b!81944 () Bool)

(assert (=> b!81944 (= c!12993 (and ((_ is Cons!1493) (toList!730 lt!37475)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37475))) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> b!81944 (= e!53455 e!53454)))

(declare-fun b!81945 () Bool)

(assert (=> b!81945 (= e!53453 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37475)) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!81946 () Bool)

(assert (=> b!81946 (= e!53455 call!7639)))

(declare-fun b!81947 () Bool)

(assert (=> b!81947 (= e!53454 call!7638)))

(declare-fun b!81948 () Bool)

(assert (=> b!81948 (= e!53453 (ite c!12995 (t!5156 (toList!730 lt!37475)) (ite c!12993 (Cons!1493 (h!2082 (toList!730 lt!37475)) (t!5156 (toList!730 lt!37475))) Nil!1494)))))

(declare-fun b!81949 () Bool)

(assert (=> b!81949 (= e!53452 call!7640)))

(assert (= (and d!20475 c!12992) b!81949))

(assert (= (and d!20475 (not c!12992)) b!81941))

(assert (= (and b!81941 c!12995) b!81946))

(assert (= (and b!81941 (not c!12995)) b!81944))

(assert (= (and b!81944 c!12993) b!81947))

(assert (= (and b!81944 (not c!12993)) b!81942))

(assert (= (or b!81947 b!81942) bm!7636))

(assert (= (or b!81946 bm!7636) bm!7635))

(assert (= (or b!81949 bm!7635) bm!7637))

(assert (= (and bm!7637 c!12994) b!81945))

(assert (= (and bm!7637 (not c!12994)) b!81948))

(assert (= (and d!20475 res!42537) b!81943))

(assert (= (and b!81943 res!42538) b!81940))

(declare-fun m!84469 () Bool)

(assert (=> b!81945 m!84469))

(declare-fun m!84471 () Bool)

(assert (=> bm!7637 m!84471))

(declare-fun m!84473 () Bool)

(assert (=> b!81940 m!84473))

(declare-fun m!84475 () Bool)

(assert (=> d!20475 m!84475))

(declare-fun m!84477 () Bool)

(assert (=> d!20475 m!84477))

(declare-fun m!84479 () Bool)

(assert (=> b!81943 m!84479))

(assert (=> d!19841 d!20475))

(assert (=> b!80731 d!20203))

(assert (=> b!80731 d!20205))

(declare-fun d!20477 () Bool)

(declare-fun res!42539 () Bool)

(declare-fun e!53456 () Bool)

(assert (=> d!20477 (=> res!42539 e!53456)))

(assert (=> d!20477 (= res!42539 (and ((_ is Cons!1493) (toList!730 lt!37562)) (= (_1!1095 (h!2082 (toList!730 lt!37562))) (_1!1095 lt!37212))))))

(assert (=> d!20477 (= (containsKey!142 (toList!730 lt!37562) (_1!1095 lt!37212)) e!53456)))

(declare-fun b!81950 () Bool)

(declare-fun e!53457 () Bool)

(assert (=> b!81950 (= e!53456 e!53457)))

(declare-fun res!42540 () Bool)

(assert (=> b!81950 (=> (not res!42540) (not e!53457))))

(assert (=> b!81950 (= res!42540 (and (or (not ((_ is Cons!1493) (toList!730 lt!37562))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37562))) (_1!1095 lt!37212))) ((_ is Cons!1493) (toList!730 lt!37562)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37562))) (_1!1095 lt!37212))))))

(declare-fun b!81951 () Bool)

(assert (=> b!81951 (= e!53457 (containsKey!142 (t!5156 (toList!730 lt!37562)) (_1!1095 lt!37212)))))

(assert (= (and d!20477 (not res!42539)) b!81950))

(assert (= (and b!81950 res!42540) b!81951))

(declare-fun m!84481 () Bool)

(assert (=> b!81951 m!84481))

(assert (=> d!19807 d!20477))

(declare-fun d!20479 () Bool)

(declare-fun lt!38290 () Bool)

(assert (=> d!20479 (= lt!38290 (select (content!86 lt!37511) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(declare-fun e!53458 () Bool)

(assert (=> d!20479 (= lt!38290 e!53458)))

(declare-fun res!42542 () Bool)

(assert (=> d!20479 (=> (not res!42542) (not e!53458))))

(assert (=> d!20479 (= res!42542 ((_ is Cons!1493) lt!37511))))

(assert (=> d!20479 (= (contains!742 lt!37511 (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))) lt!38290)))

(declare-fun b!81952 () Bool)

(declare-fun e!53459 () Bool)

(assert (=> b!81952 (= e!53458 e!53459)))

(declare-fun res!42541 () Bool)

(assert (=> b!81952 (=> res!42541 e!53459)))

(assert (=> b!81952 (= res!42541 (= (h!2082 lt!37511) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(declare-fun b!81953 () Bool)

(assert (=> b!81953 (= e!53459 (contains!742 (t!5156 lt!37511) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(assert (= (and d!20479 res!42542) b!81952))

(assert (= (and b!81952 (not res!42541)) b!81953))

(declare-fun m!84483 () Bool)

(assert (=> d!20479 m!84483))

(declare-fun m!84485 () Bool)

(assert (=> d!20479 m!84485))

(declare-fun m!84487 () Bool)

(assert (=> b!81953 m!84487))

(assert (=> b!80988 d!20479))

(declare-fun d!20481 () Bool)

(assert (=> d!20481 (= (apply!80 lt!37912 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!139 (toList!730 lt!37912) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3481 () Bool)

(assert (= bs!3481 d!20481))

(declare-fun m!84489 () Bool)

(assert (=> bs!3481 m!84489))

(assert (=> bs!3481 m!84489))

(declare-fun m!84491 () Bool)

(assert (=> bs!3481 m!84491))

(assert (=> b!81112 d!20481))

(declare-fun d!20483 () Bool)

(assert (=> d!20483 (isDefined!91 (getValueByKey!139 (toList!730 e!52556) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun lt!38291 () Unit!2322)

(assert (=> d!20483 (= lt!38291 (choose!487 (toList!730 e!52556) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun e!53460 () Bool)

(assert (=> d!20483 e!53460))

(declare-fun res!42543 () Bool)

(assert (=> d!20483 (=> (not res!42543) (not e!53460))))

(assert (=> d!20483 (= res!42543 (isStrictlySorted!283 (toList!730 e!52556)))))

(assert (=> d!20483 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 e!52556) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) lt!38291)))

(declare-fun b!81954 () Bool)

(assert (=> b!81954 (= e!53460 (containsKey!142 (toList!730 e!52556) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (= (and d!20483 res!42543) b!81954))

(assert (=> d!20483 m!81737))

(assert (=> d!20483 m!82765))

(assert (=> d!20483 m!82765))

(assert (=> d!20483 m!82767))

(assert (=> d!20483 m!81737))

(declare-fun m!84493 () Bool)

(assert (=> d!20483 m!84493))

(declare-fun m!84495 () Bool)

(assert (=> d!20483 m!84495))

(assert (=> b!81954 m!81737))

(assert (=> b!81954 m!82761))

(assert (=> b!80940 d!20483))

(declare-fun d!20485 () Bool)

(assert (=> d!20485 (= (isDefined!91 (getValueByKey!139 (toList!730 e!52556) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))) (not (isEmpty!337 (getValueByKey!139 (toList!730 e!52556) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))))

(declare-fun bs!3482 () Bool)

(assert (= bs!3482 d!20485))

(assert (=> bs!3482 m!82765))

(declare-fun m!84497 () Bool)

(assert (=> bs!3482 m!84497))

(assert (=> b!80940 d!20485))

(declare-fun b!81958 () Bool)

(declare-fun e!53462 () Option!145)

(assert (=> b!81958 (= e!53462 None!143)))

(declare-fun b!81957 () Bool)

(assert (=> b!81957 (= e!53462 (getValueByKey!139 (t!5156 (toList!730 e!52556)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun c!12996 () Bool)

(declare-fun d!20487 () Bool)

(assert (=> d!20487 (= c!12996 (and ((_ is Cons!1493) (toList!730 e!52556)) (= (_1!1095 (h!2082 (toList!730 e!52556))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(declare-fun e!53461 () Option!145)

(assert (=> d!20487 (= (getValueByKey!139 (toList!730 e!52556) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) e!53461)))

(declare-fun b!81955 () Bool)

(assert (=> b!81955 (= e!53461 (Some!144 (_2!1095 (h!2082 (toList!730 e!52556)))))))

(declare-fun b!81956 () Bool)

(assert (=> b!81956 (= e!53461 e!53462)))

(declare-fun c!12997 () Bool)

(assert (=> b!81956 (= c!12997 (and ((_ is Cons!1493) (toList!730 e!52556)) (not (= (_1!1095 (h!2082 (toList!730 e!52556))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))))

(assert (= (and d!20487 c!12996) b!81955))

(assert (= (and d!20487 (not c!12996)) b!81956))

(assert (= (and b!81956 c!12997) b!81957))

(assert (= (and b!81956 (not c!12997)) b!81958))

(assert (=> b!81957 m!81737))

(declare-fun m!84499 () Bool)

(assert (=> b!81957 m!84499))

(assert (=> b!80940 d!20487))

(declare-fun d!20489 () Bool)

(declare-fun lt!38292 () Bool)

(assert (=> d!20489 (= lt!38292 (select (content!86 (t!5156 (toList!730 lt!37558))) lt!37210))))

(declare-fun e!53463 () Bool)

(assert (=> d!20489 (= lt!38292 e!53463)))

(declare-fun res!42545 () Bool)

(assert (=> d!20489 (=> (not res!42545) (not e!53463))))

(assert (=> d!20489 (= res!42545 ((_ is Cons!1493) (t!5156 (toList!730 lt!37558))))))

(assert (=> d!20489 (= (contains!742 (t!5156 (toList!730 lt!37558)) lt!37210) lt!38292)))

(declare-fun b!81959 () Bool)

(declare-fun e!53464 () Bool)

(assert (=> b!81959 (= e!53463 e!53464)))

(declare-fun res!42544 () Bool)

(assert (=> b!81959 (=> res!42544 e!53464)))

(assert (=> b!81959 (= res!42544 (= (h!2082 (t!5156 (toList!730 lt!37558))) lt!37210))))

(declare-fun b!81960 () Bool)

(assert (=> b!81960 (= e!53464 (contains!742 (t!5156 (t!5156 (toList!730 lt!37558))) lt!37210))))

(assert (= (and d!20489 res!42545) b!81959))

(assert (= (and b!81959 (not res!42544)) b!81960))

(declare-fun m!84501 () Bool)

(assert (=> d!20489 m!84501))

(declare-fun m!84503 () Bool)

(assert (=> d!20489 m!84503))

(declare-fun m!84505 () Bool)

(assert (=> b!81960 m!84505))

(assert (=> b!80904 d!20489))

(declare-fun d!20491 () Bool)

(assert (=> d!20491 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))) lt!37534))))

(declare-fun lt!38293 () Unit!2322)

(assert (=> d!20491 (= lt!38293 (choose!487 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))) lt!37534))))

(declare-fun e!53465 () Bool)

(assert (=> d!20491 e!53465))

(declare-fun res!42546 () Bool)

(assert (=> d!20491 (=> (not res!42546) (not e!53465))))

(assert (=> d!20491 (= res!42546 (isStrictlySorted!283 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)))))))

(assert (=> d!20491 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))) lt!37534) lt!38293)))

(declare-fun b!81961 () Bool)

(assert (=> b!81961 (= e!53465 (containsKey!142 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))) lt!37534))))

(assert (= (and d!20491 res!42546) b!81961))

(assert (=> d!20491 m!82987))

(assert (=> d!20491 m!82987))

(assert (=> d!20491 m!82989))

(declare-fun m!84507 () Bool)

(assert (=> d!20491 m!84507))

(declare-fun m!84509 () Bool)

(assert (=> d!20491 m!84509))

(assert (=> b!81961 m!82983))

(assert (=> b!81088 d!20491))

(declare-fun d!20493 () Bool)

(assert (=> d!20493 (= (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))) lt!37534)) (not (isEmpty!337 (getValueByKey!139 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))) lt!37534))))))

(declare-fun bs!3483 () Bool)

(assert (= bs!3483 d!20493))

(assert (=> bs!3483 m!82987))

(declare-fun m!84511 () Bool)

(assert (=> bs!3483 m!84511))

(assert (=> b!81088 d!20493))

(declare-fun b!81965 () Bool)

(declare-fun e!53467 () Option!145)

(assert (=> b!81965 (= e!53467 None!143)))

(declare-fun b!81964 () Bool)

(assert (=> b!81964 (= e!53467 (getValueByKey!139 (t!5156 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)))) lt!37534))))

(declare-fun c!12998 () Bool)

(declare-fun d!20495 () Bool)

(assert (=> d!20495 (= c!12998 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)))) (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))))) lt!37534)))))

(declare-fun e!53466 () Option!145)

(assert (=> d!20495 (= (getValueByKey!139 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))) lt!37534) e!53466)))

(declare-fun b!81962 () Bool)

(assert (=> b!81962 (= e!53466 (Some!144 (_2!1095 (h!2082 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)))))))))

(declare-fun b!81963 () Bool)

(assert (=> b!81963 (= e!53466 e!53467)))

(declare-fun c!12999 () Bool)

(assert (=> b!81963 (= c!12999 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)))) (not (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))))) lt!37534))))))

(assert (= (and d!20495 c!12998) b!81962))

(assert (= (and d!20495 (not c!12998)) b!81963))

(assert (= (and b!81963 c!12999) b!81964))

(assert (= (and b!81963 (not c!12999)) b!81965))

(declare-fun m!84513 () Bool)

(assert (=> b!81964 m!84513))

(assert (=> b!81088 d!20495))

(assert (=> d!19851 d!19859))

(assert (=> d!19851 d!19855))

(declare-fun d!20497 () Bool)

(assert (=> d!20497 (contains!739 (+!101 lt!37486 (tuple2!2169 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37489)))

(assert (=> d!20497 true))

(declare-fun _$35!324 () Unit!2322)

(assert (=> d!20497 (= (choose!482 lt!37486 lt!37473 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37489) _$35!324)))

(declare-fun bs!3484 () Bool)

(assert (= bs!3484 d!20497))

(assert (=> bs!3484 m!82003))

(assert (=> bs!3484 m!82003))

(assert (=> bs!3484 m!82019))

(assert (=> d!19851 d!20497))

(declare-fun d!20499 () Bool)

(declare-fun e!53468 () Bool)

(assert (=> d!20499 e!53468))

(declare-fun res!42547 () Bool)

(assert (=> d!20499 (=> res!42547 e!53468)))

(declare-fun lt!38295 () Bool)

(assert (=> d!20499 (= res!42547 (not lt!38295))))

(declare-fun lt!38294 () Bool)

(assert (=> d!20499 (= lt!38295 lt!38294)))

(declare-fun lt!38296 () Unit!2322)

(declare-fun e!53469 () Unit!2322)

(assert (=> d!20499 (= lt!38296 e!53469)))

(declare-fun c!13000 () Bool)

(assert (=> d!20499 (= c!13000 lt!38294)))

(assert (=> d!20499 (= lt!38294 (containsKey!142 (toList!730 lt!37486) lt!37489))))

(assert (=> d!20499 (= (contains!739 lt!37486 lt!37489) lt!38295)))

(declare-fun b!81967 () Bool)

(declare-fun lt!38297 () Unit!2322)

(assert (=> b!81967 (= e!53469 lt!38297)))

(assert (=> b!81967 (= lt!38297 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37486) lt!37489))))

(assert (=> b!81967 (isDefined!91 (getValueByKey!139 (toList!730 lt!37486) lt!37489))))

(declare-fun b!81968 () Bool)

(declare-fun Unit!2384 () Unit!2322)

(assert (=> b!81968 (= e!53469 Unit!2384)))

(declare-fun b!81969 () Bool)

(assert (=> b!81969 (= e!53468 (isDefined!91 (getValueByKey!139 (toList!730 lt!37486) lt!37489)))))

(assert (= (and d!20499 c!13000) b!81967))

(assert (= (and d!20499 (not c!13000)) b!81968))

(assert (= (and d!20499 (not res!42547)) b!81969))

(declare-fun m!84515 () Bool)

(assert (=> d!20499 m!84515))

(declare-fun m!84517 () Bool)

(assert (=> b!81967 m!84517))

(declare-fun m!84519 () Bool)

(assert (=> b!81967 m!84519))

(assert (=> b!81967 m!84519))

(declare-fun m!84521 () Bool)

(assert (=> b!81967 m!84521))

(assert (=> b!81969 m!84519))

(assert (=> b!81969 m!84519))

(assert (=> b!81969 m!84521))

(assert (=> d!19851 d!20499))

(declare-fun d!20501 () Bool)

(declare-fun e!53470 () Bool)

(assert (=> d!20501 e!53470))

(declare-fun res!42548 () Bool)

(assert (=> d!20501 (=> res!42548 e!53470)))

(declare-fun lt!38299 () Bool)

(assert (=> d!20501 (= res!42548 (not lt!38299))))

(declare-fun lt!38298 () Bool)

(assert (=> d!20501 (= lt!38299 lt!38298)))

(declare-fun lt!38300 () Unit!2322)

(declare-fun e!53471 () Unit!2322)

(assert (=> d!20501 (= lt!38300 e!53471)))

(declare-fun c!13001 () Bool)

(assert (=> d!20501 (= c!13001 lt!38298)))

(assert (=> d!20501 (= lt!38298 (containsKey!142 (toList!730 lt!37942) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> d!20501 (= (contains!739 lt!37942 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) lt!38299)))

(declare-fun b!81970 () Bool)

(declare-fun lt!38301 () Unit!2322)

(assert (=> b!81970 (= e!53471 lt!38301)))

(assert (=> b!81970 (= lt!38301 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37942) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> b!81970 (isDefined!91 (getValueByKey!139 (toList!730 lt!37942) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!81971 () Bool)

(declare-fun Unit!2385 () Unit!2322)

(assert (=> b!81971 (= e!53471 Unit!2385)))

(declare-fun b!81972 () Bool)

(assert (=> b!81972 (= e!53470 (isDefined!91 (getValueByKey!139 (toList!730 lt!37942) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (= (and d!20501 c!13001) b!81970))

(assert (= (and d!20501 (not c!13001)) b!81971))

(assert (= (and d!20501 (not res!42548)) b!81972))

(declare-fun m!84523 () Bool)

(assert (=> d!20501 m!84523))

(declare-fun m!84525 () Bool)

(assert (=> b!81970 m!84525))

(assert (=> b!81970 m!83123))

(assert (=> b!81970 m!83123))

(declare-fun m!84527 () Bool)

(assert (=> b!81970 m!84527))

(assert (=> b!81972 m!83123))

(assert (=> b!81972 m!83123))

(assert (=> b!81972 m!84527))

(assert (=> d!19957 d!20501))

(declare-fun b!81976 () Bool)

(declare-fun e!53473 () Option!145)

(assert (=> b!81976 (= e!53473 None!143)))

(declare-fun b!81975 () Bool)

(assert (=> b!81975 (= e!53473 (getValueByKey!139 (t!5156 lt!37940) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun d!20503 () Bool)

(declare-fun c!13002 () Bool)

(assert (=> d!20503 (= c!13002 (and ((_ is Cons!1493) lt!37940) (= (_1!1095 (h!2082 lt!37940)) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(declare-fun e!53472 () Option!145)

(assert (=> d!20503 (= (getValueByKey!139 lt!37940 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) e!53472)))

(declare-fun b!81973 () Bool)

(assert (=> b!81973 (= e!53472 (Some!144 (_2!1095 (h!2082 lt!37940))))))

(declare-fun b!81974 () Bool)

(assert (=> b!81974 (= e!53472 e!53473)))

(declare-fun c!13003 () Bool)

(assert (=> b!81974 (= c!13003 (and ((_ is Cons!1493) lt!37940) (not (= (_1!1095 (h!2082 lt!37940)) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))))

(assert (= (and d!20503 c!13002) b!81973))

(assert (= (and d!20503 (not c!13002)) b!81974))

(assert (= (and b!81974 c!13003) b!81975))

(assert (= (and b!81974 (not c!13003)) b!81976))

(declare-fun m!84529 () Bool)

(assert (=> b!81975 m!84529))

(assert (=> d!19957 d!20503))

(declare-fun d!20505 () Bool)

(assert (=> d!20505 (= (getValueByKey!139 lt!37940 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (Some!144 (_2!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun lt!38302 () Unit!2322)

(assert (=> d!20505 (= lt!38302 (choose!478 lt!37940 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_2!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun e!53474 () Bool)

(assert (=> d!20505 e!53474))

(declare-fun res!42549 () Bool)

(assert (=> d!20505 (=> (not res!42549) (not e!53474))))

(assert (=> d!20505 (= res!42549 (isStrictlySorted!283 lt!37940))))

(assert (=> d!20505 (= (lemmaContainsTupThenGetReturnValue!56 lt!37940 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_2!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) lt!38302)))

(declare-fun b!81977 () Bool)

(declare-fun res!42550 () Bool)

(assert (=> b!81977 (=> (not res!42550) (not e!53474))))

(assert (=> b!81977 (= res!42550 (containsKey!142 lt!37940 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!81978 () Bool)

(assert (=> b!81978 (= e!53474 (contains!742 lt!37940 (tuple2!2169 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_2!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (= (and d!20505 res!42549) b!81977))

(assert (= (and b!81977 res!42550) b!81978))

(assert (=> d!20505 m!83117))

(declare-fun m!84531 () Bool)

(assert (=> d!20505 m!84531))

(declare-fun m!84533 () Bool)

(assert (=> d!20505 m!84533))

(declare-fun m!84535 () Bool)

(assert (=> b!81977 m!84535))

(declare-fun m!84537 () Bool)

(assert (=> b!81978 m!84537))

(assert (=> d!19957 d!20505))

(declare-fun bm!7638 () Bool)

(declare-fun call!7642 () List!1497)

(declare-fun call!7643 () List!1497)

(assert (=> bm!7638 (= call!7642 call!7643)))

(declare-fun b!81979 () Bool)

(declare-fun lt!38303 () List!1497)

(declare-fun e!53475 () Bool)

(assert (=> b!81979 (= e!53475 (contains!742 lt!38303 (tuple2!2169 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_2!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(declare-fun b!81980 () Bool)

(declare-fun e!53476 () List!1497)

(declare-fun e!53479 () List!1497)

(assert (=> b!81980 (= e!53476 e!53479)))

(declare-fun c!13007 () Bool)

(assert (=> b!81980 (= c!13007 (and ((_ is Cons!1493) (toList!730 (ite c!12568 call!7454 call!7448))) (= (_1!1095 (h!2082 (toList!730 (ite c!12568 call!7454 call!7448)))) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(declare-fun bm!7639 () Bool)

(declare-fun call!7641 () List!1497)

(assert (=> bm!7639 (= call!7641 call!7642)))

(declare-fun d!20507 () Bool)

(assert (=> d!20507 e!53475))

(declare-fun res!42551 () Bool)

(assert (=> d!20507 (=> (not res!42551) (not e!53475))))

(assert (=> d!20507 (= res!42551 (isStrictlySorted!283 lt!38303))))

(assert (=> d!20507 (= lt!38303 e!53476)))

(declare-fun c!13004 () Bool)

(assert (=> d!20507 (= c!13004 (and ((_ is Cons!1493) (toList!730 (ite c!12568 call!7454 call!7448))) (bvslt (_1!1095 (h!2082 (toList!730 (ite c!12568 call!7454 call!7448)))) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (=> d!20507 (isStrictlySorted!283 (toList!730 (ite c!12568 call!7454 call!7448)))))

(assert (=> d!20507 (= (insertStrictlySorted!59 (toList!730 (ite c!12568 call!7454 call!7448)) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_2!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) lt!38303)))

(declare-fun e!53477 () List!1497)

(declare-fun bm!7640 () Bool)

(assert (=> bm!7640 (= call!7643 ($colon$colon!69 e!53477 (ite c!13004 (h!2082 (toList!730 (ite c!12568 call!7454 call!7448))) (tuple2!2169 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_2!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))))

(declare-fun c!13006 () Bool)

(assert (=> bm!7640 (= c!13006 c!13004)))

(declare-fun b!81981 () Bool)

(declare-fun e!53478 () List!1497)

(assert (=> b!81981 (= e!53478 call!7641)))

(declare-fun b!81982 () Bool)

(declare-fun res!42552 () Bool)

(assert (=> b!81982 (=> (not res!42552) (not e!53475))))

(assert (=> b!81982 (= res!42552 (containsKey!142 lt!38303 (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun c!13005 () Bool)

(declare-fun b!81983 () Bool)

(assert (=> b!81983 (= c!13005 (and ((_ is Cons!1493) (toList!730 (ite c!12568 call!7454 call!7448))) (bvsgt (_1!1095 (h!2082 (toList!730 (ite c!12568 call!7454 call!7448)))) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (=> b!81983 (= e!53479 e!53478)))

(declare-fun b!81984 () Bool)

(assert (=> b!81984 (= e!53477 (insertStrictlySorted!59 (t!5156 (toList!730 (ite c!12568 call!7454 call!7448))) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_2!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!81985 () Bool)

(assert (=> b!81985 (= e!53479 call!7642)))

(declare-fun b!81986 () Bool)

(assert (=> b!81986 (= e!53478 call!7641)))

(declare-fun b!81987 () Bool)

(assert (=> b!81987 (= e!53477 (ite c!13007 (t!5156 (toList!730 (ite c!12568 call!7454 call!7448))) (ite c!13005 (Cons!1493 (h!2082 (toList!730 (ite c!12568 call!7454 call!7448))) (t!5156 (toList!730 (ite c!12568 call!7454 call!7448)))) Nil!1494)))))

(declare-fun b!81988 () Bool)

(assert (=> b!81988 (= e!53476 call!7643)))

(assert (= (and d!20507 c!13004) b!81988))

(assert (= (and d!20507 (not c!13004)) b!81980))

(assert (= (and b!81980 c!13007) b!81985))

(assert (= (and b!81980 (not c!13007)) b!81983))

(assert (= (and b!81983 c!13005) b!81986))

(assert (= (and b!81983 (not c!13005)) b!81981))

(assert (= (or b!81986 b!81981) bm!7639))

(assert (= (or b!81985 bm!7639) bm!7638))

(assert (= (or b!81988 bm!7638) bm!7640))

(assert (= (and bm!7640 c!13006) b!81984))

(assert (= (and bm!7640 (not c!13006)) b!81987))

(assert (= (and d!20507 res!42551) b!81982))

(assert (= (and b!81982 res!42552) b!81979))

(declare-fun m!84539 () Bool)

(assert (=> b!81984 m!84539))

(declare-fun m!84541 () Bool)

(assert (=> bm!7640 m!84541))

(declare-fun m!84543 () Bool)

(assert (=> b!81979 m!84543))

(declare-fun m!84545 () Bool)

(assert (=> d!20507 m!84545))

(declare-fun m!84547 () Bool)

(assert (=> d!20507 m!84547))

(declare-fun m!84549 () Bool)

(assert (=> b!81982 m!84549))

(assert (=> d!19957 d!20507))

(declare-fun d!20509 () Bool)

(declare-fun res!42553 () Bool)

(declare-fun e!53480 () Bool)

(assert (=> d!20509 (=> res!42553 e!53480)))

(assert (=> d!20509 (= res!42553 (and ((_ is Cons!1493) lt!37873) (= (_1!1095 (h!2082 lt!37873)) (_1!1095 lt!37209))))))

(assert (=> d!20509 (= (containsKey!142 lt!37873 (_1!1095 lt!37209)) e!53480)))

(declare-fun b!81989 () Bool)

(declare-fun e!53481 () Bool)

(assert (=> b!81989 (= e!53480 e!53481)))

(declare-fun res!42554 () Bool)

(assert (=> b!81989 (=> (not res!42554) (not e!53481))))

(assert (=> b!81989 (= res!42554 (and (or (not ((_ is Cons!1493) lt!37873)) (bvsle (_1!1095 (h!2082 lt!37873)) (_1!1095 lt!37209))) ((_ is Cons!1493) lt!37873) (bvslt (_1!1095 (h!2082 lt!37873)) (_1!1095 lt!37209))))))

(declare-fun b!81990 () Bool)

(assert (=> b!81990 (= e!53481 (containsKey!142 (t!5156 lt!37873) (_1!1095 lt!37209)))))

(assert (= (and d!20509 (not res!42553)) b!81989))

(assert (= (and b!81989 res!42554) b!81990))

(declare-fun m!84551 () Bool)

(assert (=> b!81990 m!84551))

(assert (=> b!81050 d!20509))

(declare-fun d!20511 () Bool)

(assert (=> d!20511 (= ($colon$colon!69 e!52762 (ite c!12662 (h!2082 (toList!730 lt!37215)) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212)))) (Cons!1493 (ite c!12662 (h!2082 (toList!730 lt!37215)) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))) e!52762))))

(assert (=> bm!7502 d!20511))

(declare-fun b!81994 () Bool)

(declare-fun e!53483 () Option!145)

(assert (=> b!81994 (= e!53483 None!143)))

(declare-fun b!81993 () Bool)

(assert (=> b!81993 (= e!53483 (getValueByKey!139 (t!5156 (t!5156 (toList!730 lt!37554))) (_1!1095 lt!37210)))))

(declare-fun d!20513 () Bool)

(declare-fun c!13008 () Bool)

(assert (=> d!20513 (= c!13008 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37554))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37554)))) (_1!1095 lt!37210))))))

(declare-fun e!53482 () Option!145)

(assert (=> d!20513 (= (getValueByKey!139 (t!5156 (toList!730 lt!37554)) (_1!1095 lt!37210)) e!53482)))

(declare-fun b!81991 () Bool)

(assert (=> b!81991 (= e!53482 (Some!144 (_2!1095 (h!2082 (t!5156 (toList!730 lt!37554))))))))

(declare-fun b!81992 () Bool)

(assert (=> b!81992 (= e!53482 e!53483)))

(declare-fun c!13009 () Bool)

(assert (=> b!81992 (= c!13009 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37554))) (not (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37554)))) (_1!1095 lt!37210)))))))

(assert (= (and d!20513 c!13008) b!81991))

(assert (= (and d!20513 (not c!13008)) b!81992))

(assert (= (and b!81992 c!13009) b!81993))

(assert (= (and b!81992 (not c!13009)) b!81994))

(declare-fun m!84553 () Bool)

(assert (=> b!81993 m!84553))

(assert (=> b!81162 d!20513))

(declare-fun d!20515 () Bool)

(declare-fun e!53484 () Bool)

(assert (=> d!20515 e!53484))

(declare-fun res!42556 () Bool)

(assert (=> d!20515 (=> (not res!42556) (not e!53484))))

(declare-fun lt!38307 () ListLongMap!1429)

(assert (=> d!20515 (= res!42556 (contains!739 lt!38307 (_1!1095 (ite (or c!12756 c!12753) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))))))

(declare-fun lt!38305 () List!1497)

(assert (=> d!20515 (= lt!38307 (ListLongMap!1430 lt!38305))))

(declare-fun lt!38304 () Unit!2322)

(declare-fun lt!38306 () Unit!2322)

(assert (=> d!20515 (= lt!38304 lt!38306)))

(assert (=> d!20515 (= (getValueByKey!139 lt!38305 (_1!1095 (ite (or c!12756 c!12753) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))) (Some!144 (_2!1095 (ite (or c!12756 c!12753) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))))))

(assert (=> d!20515 (= lt!38306 (lemmaContainsTupThenGetReturnValue!56 lt!38305 (_1!1095 (ite (or c!12756 c!12753) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))) (_2!1095 (ite (or c!12756 c!12753) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))))))

(assert (=> d!20515 (= lt!38305 (insertStrictlySorted!59 (toList!730 (ite c!12756 call!7557 (ite c!12753 call!7558 call!7553))) (_1!1095 (ite (or c!12756 c!12753) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))) (_2!1095 (ite (or c!12756 c!12753) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))))))

(assert (=> d!20515 (= (+!101 (ite c!12756 call!7557 (ite c!12753 call!7558 call!7553)) (ite (or c!12756 c!12753) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))) lt!38307)))

(declare-fun b!81995 () Bool)

(declare-fun res!42555 () Bool)

(assert (=> b!81995 (=> (not res!42555) (not e!53484))))

(assert (=> b!81995 (= res!42555 (= (getValueByKey!139 (toList!730 lt!38307) (_1!1095 (ite (or c!12756 c!12753) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))) (Some!144 (_2!1095 (ite (or c!12756 c!12753) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))))

(declare-fun b!81996 () Bool)

(assert (=> b!81996 (= e!53484 (contains!742 (toList!730 lt!38307) (ite (or c!12756 c!12753) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12568 c!12577) lt!37223 (zeroValue!2188 newMap!16))) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(assert (= (and d!20515 res!42556) b!81995))

(assert (= (and b!81995 res!42555) b!81996))

(declare-fun m!84555 () Bool)

(assert (=> d!20515 m!84555))

(declare-fun m!84557 () Bool)

(assert (=> d!20515 m!84557))

(declare-fun m!84559 () Bool)

(assert (=> d!20515 m!84559))

(declare-fun m!84561 () Bool)

(assert (=> d!20515 m!84561))

(declare-fun m!84563 () Bool)

(assert (=> b!81995 m!84563))

(declare-fun m!84565 () Bool)

(assert (=> b!81996 m!84565))

(assert (=> bm!7551 d!20515))

(declare-fun b!81997 () Bool)

(declare-fun res!42558 () Bool)

(declare-fun e!53485 () Bool)

(assert (=> b!81997 (=> (not res!42558) (not e!53485))))

(assert (=> b!81997 (= res!42558 (and (= (size!2135 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000001)) (= (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (size!2135 (_values!2275 (v!2610 (underlying!283 thiss!992))))) (bvsge (_size!417 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!417 (v!2610 (underlying!283 thiss!992))) (bvadd (mask!6298 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!82000 () Bool)

(assert (=> b!82000 (= e!53485 (and (bvsge (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!417 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!81998 () Bool)

(declare-fun res!42559 () Bool)

(assert (=> b!81998 (=> (not res!42559) (not e!53485))))

(assert (=> b!81998 (= res!42559 (bvsge (size!2140 (v!2610 (underlying!283 thiss!992))) (_size!417 (v!2610 (underlying!283 thiss!992)))))))

(declare-fun b!81999 () Bool)

(declare-fun res!42557 () Bool)

(assert (=> b!81999 (=> (not res!42557) (not e!53485))))

(assert (=> b!81999 (= res!42557 (= (size!2140 (v!2610 (underlying!283 thiss!992))) (bvadd (_size!417 (v!2610 (underlying!283 thiss!992))) (bvsdiv (bvadd (extraKeys!2139 (v!2610 (underlying!283 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!20517 () Bool)

(declare-fun res!42560 () Bool)

(assert (=> d!20517 (=> (not res!42560) (not e!53485))))

(assert (=> d!20517 (= res!42560 (validMask!0 (mask!6298 (v!2610 (underlying!283 thiss!992)))))))

(assert (=> d!20517 (= (simpleValid!56 (v!2610 (underlying!283 thiss!992))) e!53485)))

(assert (= (and d!20517 res!42560) b!81997))

(assert (= (and b!81997 res!42558) b!81998))

(assert (= (and b!81998 res!42559) b!81999))

(assert (= (and b!81999 res!42557) b!82000))

(declare-fun m!84567 () Bool)

(assert (=> b!81998 m!84567))

(assert (=> b!81999 m!84567))

(assert (=> d!20517 m!81735))

(assert (=> d!19805 d!20517))

(declare-fun b!82004 () Bool)

(declare-fun e!53487 () Option!145)

(assert (=> b!82004 (= e!53487 None!143)))

(declare-fun b!82003 () Bool)

(assert (=> b!82003 (= e!53487 (getValueByKey!139 (t!5156 (t!5156 (toList!730 lt!37562))) (_1!1095 lt!37212)))))

(declare-fun d!20519 () Bool)

(declare-fun c!13010 () Bool)

(assert (=> d!20519 (= c!13010 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37562))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37562)))) (_1!1095 lt!37212))))))

(declare-fun e!53486 () Option!145)

(assert (=> d!20519 (= (getValueByKey!139 (t!5156 (toList!730 lt!37562)) (_1!1095 lt!37212)) e!53486)))

(declare-fun b!82001 () Bool)

(assert (=> b!82001 (= e!53486 (Some!144 (_2!1095 (h!2082 (t!5156 (toList!730 lt!37562))))))))

(declare-fun b!82002 () Bool)

(assert (=> b!82002 (= e!53486 e!53487)))

(declare-fun c!13011 () Bool)

(assert (=> b!82002 (= c!13011 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37562))) (not (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37562)))) (_1!1095 lt!37212)))))))

(assert (= (and d!20519 c!13010) b!82001))

(assert (= (and d!20519 (not c!13010)) b!82002))

(assert (= (and b!82002 c!13011) b!82003))

(assert (= (and b!82002 (not c!13011)) b!82004))

(declare-fun m!84569 () Bool)

(assert (=> b!82003 m!84569))

(assert (=> b!80978 d!20519))

(assert (=> b!80902 d!20235))

(assert (=> b!80902 d!20237))

(assert (=> b!81144 d!20291))

(assert (=> b!81144 d!20293))

(declare-fun b!82008 () Bool)

(declare-fun e!53489 () Option!145)

(assert (=> b!82008 (= e!53489 None!143)))

(declare-fun b!82007 () Bool)

(assert (=> b!82007 (= e!53489 (getValueByKey!139 (t!5156 (toList!730 lt!37767)) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20521 () Bool)

(declare-fun c!13012 () Bool)

(assert (=> d!20521 (= c!13012 (and ((_ is Cons!1493) (toList!730 lt!37767)) (= (_1!1095 (h!2082 (toList!730 lt!37767))) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53488 () Option!145)

(assert (=> d!20521 (= (getValueByKey!139 (toList!730 lt!37767) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53488)))

(declare-fun b!82005 () Bool)

(assert (=> b!82005 (= e!53488 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37767)))))))

(declare-fun b!82006 () Bool)

(assert (=> b!82006 (= e!53488 e!53489)))

(declare-fun c!13013 () Bool)

(assert (=> b!82006 (= c!13013 (and ((_ is Cons!1493) (toList!730 lt!37767)) (not (= (_1!1095 (h!2082 (toList!730 lt!37767))) (_1!1095 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20521 c!13012) b!82005))

(assert (= (and d!20521 (not c!13012)) b!82006))

(assert (= (and b!82006 c!13013) b!82007))

(assert (= (and b!82006 (not c!13013)) b!82008))

(declare-fun m!84571 () Bool)

(assert (=> b!82007 m!84571))

(assert (=> b!80892 d!20521))

(declare-fun d!20523 () Bool)

(declare-fun e!53490 () Bool)

(assert (=> d!20523 e!53490))

(declare-fun res!42561 () Bool)

(assert (=> d!20523 (=> res!42561 e!53490)))

(declare-fun lt!38309 () Bool)

(assert (=> d!20523 (= res!42561 (not lt!38309))))

(declare-fun lt!38308 () Bool)

(assert (=> d!20523 (= lt!38309 lt!38308)))

(declare-fun lt!38310 () Unit!2322)

(declare-fun e!53491 () Unit!2322)

(assert (=> d!20523 (= lt!38310 e!53491)))

(declare-fun c!13014 () Bool)

(assert (=> d!20523 (= c!13014 lt!38308)))

(assert (=> d!20523 (= lt!38308 (containsKey!142 (toList!730 lt!37644) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!20523 (= (contains!739 lt!37644 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38309)))

(declare-fun b!82009 () Bool)

(declare-fun lt!38311 () Unit!2322)

(assert (=> b!82009 (= e!53491 lt!38311)))

(assert (=> b!82009 (= lt!38311 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37644) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> b!82009 (isDefined!91 (getValueByKey!139 (toList!730 lt!37644) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82010 () Bool)

(declare-fun Unit!2386 () Unit!2322)

(assert (=> b!82010 (= e!53491 Unit!2386)))

(declare-fun b!82011 () Bool)

(assert (=> b!82011 (= e!53490 (isDefined!91 (getValueByKey!139 (toList!730 lt!37644) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20523 c!13014) b!82009))

(assert (= (and d!20523 (not c!13014)) b!82010))

(assert (= (and d!20523 (not res!42561)) b!82011))

(declare-fun m!84573 () Bool)

(assert (=> d!20523 m!84573))

(declare-fun m!84575 () Bool)

(assert (=> b!82009 m!84575))

(assert (=> b!82009 m!82429))

(assert (=> b!82009 m!82429))

(declare-fun m!84577 () Bool)

(assert (=> b!82009 m!84577))

(assert (=> b!82011 m!82429))

(assert (=> b!82011 m!82429))

(assert (=> b!82011 m!84577))

(assert (=> d!19787 d!20523))

(declare-fun b!82015 () Bool)

(declare-fun e!53493 () Option!145)

(assert (=> b!82015 (= e!53493 None!143)))

(declare-fun b!82014 () Bool)

(assert (=> b!82014 (= e!53493 (getValueByKey!139 (t!5156 lt!37642) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20525 () Bool)

(declare-fun c!13015 () Bool)

(assert (=> d!20525 (= c!13015 (and ((_ is Cons!1493) lt!37642) (= (_1!1095 (h!2082 lt!37642)) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53492 () Option!145)

(assert (=> d!20525 (= (getValueByKey!139 lt!37642 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53492)))

(declare-fun b!82012 () Bool)

(assert (=> b!82012 (= e!53492 (Some!144 (_2!1095 (h!2082 lt!37642))))))

(declare-fun b!82013 () Bool)

(assert (=> b!82013 (= e!53492 e!53493)))

(declare-fun c!13016 () Bool)

(assert (=> b!82013 (= c!13016 (and ((_ is Cons!1493) lt!37642) (not (= (_1!1095 (h!2082 lt!37642)) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20525 c!13015) b!82012))

(assert (= (and d!20525 (not c!13015)) b!82013))

(assert (= (and b!82013 c!13016) b!82014))

(assert (= (and b!82013 (not c!13016)) b!82015))

(declare-fun m!84579 () Bool)

(assert (=> b!82014 m!84579))

(assert (=> d!19787 d!20525))

(declare-fun d!20527 () Bool)

(assert (=> d!20527 (= (getValueByKey!139 lt!37642 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!38312 () Unit!2322)

(assert (=> d!20527 (= lt!38312 (choose!478 lt!37642 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun e!53494 () Bool)

(assert (=> d!20527 e!53494))

(declare-fun res!42562 () Bool)

(assert (=> d!20527 (=> (not res!42562) (not e!53494))))

(assert (=> d!20527 (= res!42562 (isStrictlySorted!283 lt!37642))))

(assert (=> d!20527 (= (lemmaContainsTupThenGetReturnValue!56 lt!37642 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38312)))

(declare-fun b!82016 () Bool)

(declare-fun res!42563 () Bool)

(assert (=> b!82016 (=> (not res!42563) (not e!53494))))

(assert (=> b!82016 (= res!42563 (containsKey!142 lt!37642 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82017 () Bool)

(assert (=> b!82017 (= e!53494 (contains!742 lt!37642 (tuple2!2169 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20527 res!42562) b!82016))

(assert (= (and b!82016 res!42563) b!82017))

(assert (=> d!20527 m!82423))

(declare-fun m!84581 () Bool)

(assert (=> d!20527 m!84581))

(declare-fun m!84583 () Bool)

(assert (=> d!20527 m!84583))

(declare-fun m!84585 () Bool)

(assert (=> b!82016 m!84585))

(declare-fun m!84587 () Bool)

(assert (=> b!82017 m!84587))

(assert (=> d!19787 d!20527))

(declare-fun bm!7641 () Bool)

(declare-fun call!7645 () List!1497)

(declare-fun call!7646 () List!1497)

(assert (=> bm!7641 (= call!7645 call!7646)))

(declare-fun b!82018 () Bool)

(declare-fun e!53495 () Bool)

(declare-fun lt!38313 () List!1497)

(assert (=> b!82018 (= e!53495 (contains!742 lt!38313 (tuple2!2169 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!82019 () Bool)

(declare-fun e!53496 () List!1497)

(declare-fun e!53499 () List!1497)

(assert (=> b!82019 (= e!53496 e!53499)))

(declare-fun c!13020 () Bool)

(assert (=> b!82019 (= c!13020 (and ((_ is Cons!1493) (toList!730 lt!37211)) (= (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun bm!7642 () Bool)

(declare-fun call!7644 () List!1497)

(assert (=> bm!7642 (= call!7644 call!7645)))

(declare-fun d!20529 () Bool)

(assert (=> d!20529 e!53495))

(declare-fun res!42564 () Bool)

(assert (=> d!20529 (=> (not res!42564) (not e!53495))))

(assert (=> d!20529 (= res!42564 (isStrictlySorted!283 lt!38313))))

(assert (=> d!20529 (= lt!38313 e!53496)))

(declare-fun c!13017 () Bool)

(assert (=> d!20529 (= c!13017 (and ((_ is Cons!1493) (toList!730 lt!37211)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!20529 (isStrictlySorted!283 (toList!730 lt!37211))))

(assert (=> d!20529 (= (insertStrictlySorted!59 (toList!730 lt!37211) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38313)))

(declare-fun bm!7643 () Bool)

(declare-fun e!53497 () List!1497)

(assert (=> bm!7643 (= call!7646 ($colon$colon!69 e!53497 (ite c!13017 (h!2082 (toList!730 lt!37211)) (tuple2!2169 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun c!13019 () Bool)

(assert (=> bm!7643 (= c!13019 c!13017)))

(declare-fun b!82020 () Bool)

(declare-fun e!53498 () List!1497)

(assert (=> b!82020 (= e!53498 call!7644)))

(declare-fun b!82021 () Bool)

(declare-fun res!42565 () Bool)

(assert (=> b!82021 (=> (not res!42565) (not e!53495))))

(assert (=> b!82021 (= res!42565 (containsKey!142 lt!38313 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82022 () Bool)

(declare-fun c!13018 () Bool)

(assert (=> b!82022 (= c!13018 (and ((_ is Cons!1493) (toList!730 lt!37211)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37211))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> b!82022 (= e!53499 e!53498)))

(declare-fun b!82023 () Bool)

(assert (=> b!82023 (= e!53497 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37211)) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82024 () Bool)

(assert (=> b!82024 (= e!53499 call!7645)))

(declare-fun b!82025 () Bool)

(assert (=> b!82025 (= e!53498 call!7644)))

(declare-fun b!82026 () Bool)

(assert (=> b!82026 (= e!53497 (ite c!13020 (t!5156 (toList!730 lt!37211)) (ite c!13018 (Cons!1493 (h!2082 (toList!730 lt!37211)) (t!5156 (toList!730 lt!37211))) Nil!1494)))))

(declare-fun b!82027 () Bool)

(assert (=> b!82027 (= e!53496 call!7646)))

(assert (= (and d!20529 c!13017) b!82027))

(assert (= (and d!20529 (not c!13017)) b!82019))

(assert (= (and b!82019 c!13020) b!82024))

(assert (= (and b!82019 (not c!13020)) b!82022))

(assert (= (and b!82022 c!13018) b!82025))

(assert (= (and b!82022 (not c!13018)) b!82020))

(assert (= (or b!82025 b!82020) bm!7642))

(assert (= (or b!82024 bm!7642) bm!7641))

(assert (= (or b!82027 bm!7641) bm!7643))

(assert (= (and bm!7643 c!13019) b!82023))

(assert (= (and bm!7643 (not c!13019)) b!82026))

(assert (= (and d!20529 res!42564) b!82021))

(assert (= (and b!82021 res!42565) b!82018))

(declare-fun m!84589 () Bool)

(assert (=> b!82023 m!84589))

(declare-fun m!84591 () Bool)

(assert (=> bm!7643 m!84591))

(declare-fun m!84593 () Bool)

(assert (=> b!82018 m!84593))

(declare-fun m!84595 () Bool)

(assert (=> d!20529 m!84595))

(assert (=> d!20529 m!82931))

(declare-fun m!84597 () Bool)

(assert (=> b!82021 m!84597))

(assert (=> d!19787 d!20529))

(declare-fun d!20531 () Bool)

(assert (=> d!20531 (isDefined!91 (getValueByKey!139 (toList!730 lt!37517) (_1!1095 lt!37209)))))

(declare-fun lt!38314 () Unit!2322)

(assert (=> d!20531 (= lt!38314 (choose!487 (toList!730 lt!37517) (_1!1095 lt!37209)))))

(declare-fun e!53500 () Bool)

(assert (=> d!20531 e!53500))

(declare-fun res!42566 () Bool)

(assert (=> d!20531 (=> (not res!42566) (not e!53500))))

(assert (=> d!20531 (= res!42566 (isStrictlySorted!283 (toList!730 lt!37517)))))

(assert (=> d!20531 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37517) (_1!1095 lt!37209)) lt!38314)))

(declare-fun b!82028 () Bool)

(assert (=> b!82028 (= e!53500 (containsKey!142 (toList!730 lt!37517) (_1!1095 lt!37209)))))

(assert (= (and d!20531 res!42566) b!82028))

(assert (=> d!20531 m!82089))

(assert (=> d!20531 m!82089))

(assert (=> d!20531 m!82229))

(declare-fun m!84599 () Bool)

(assert (=> d!20531 m!84599))

(declare-fun m!84601 () Bool)

(assert (=> d!20531 m!84601))

(assert (=> b!82028 m!82225))

(assert (=> b!80672 d!20531))

(declare-fun d!20533 () Bool)

(assert (=> d!20533 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37517) (_1!1095 lt!37209))) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37517) (_1!1095 lt!37209)))))))

(declare-fun bs!3485 () Bool)

(assert (= bs!3485 d!20533))

(assert (=> bs!3485 m!82089))

(declare-fun m!84603 () Bool)

(assert (=> bs!3485 m!84603))

(assert (=> b!80672 d!20533))

(assert (=> b!80672 d!19801))

(assert (=> d!19745 d!19743))

(declare-fun d!20535 () Bool)

(assert (=> d!20535 (= (getValueByKey!139 lt!37515 (_1!1095 lt!37209)) (Some!144 (_2!1095 lt!37209)))))

(assert (=> d!20535 true))

(declare-fun _$22!404 () Unit!2322)

(assert (=> d!20535 (= (choose!478 lt!37515 (_1!1095 lt!37209) (_2!1095 lt!37209)) _$22!404)))

(declare-fun bs!3486 () Bool)

(assert (= bs!3486 d!20535))

(assert (=> bs!3486 m!82083))

(assert (=> d!19745 d!20535))

(declare-fun d!20537 () Bool)

(declare-fun res!42567 () Bool)

(declare-fun e!53501 () Bool)

(assert (=> d!20537 (=> res!42567 e!53501)))

(assert (=> d!20537 (= res!42567 (or ((_ is Nil!1494) lt!37515) ((_ is Nil!1494) (t!5156 lt!37515))))))

(assert (=> d!20537 (= (isStrictlySorted!283 lt!37515) e!53501)))

(declare-fun b!82029 () Bool)

(declare-fun e!53502 () Bool)

(assert (=> b!82029 (= e!53501 e!53502)))

(declare-fun res!42568 () Bool)

(assert (=> b!82029 (=> (not res!42568) (not e!53502))))

(assert (=> b!82029 (= res!42568 (bvslt (_1!1095 (h!2082 lt!37515)) (_1!1095 (h!2082 (t!5156 lt!37515)))))))

(declare-fun b!82030 () Bool)

(assert (=> b!82030 (= e!53502 (isStrictlySorted!283 (t!5156 lt!37515)))))

(assert (= (and d!20537 (not res!42567)) b!82029))

(assert (= (and b!82029 res!42568) b!82030))

(declare-fun m!84605 () Bool)

(assert (=> b!82030 m!84605))

(assert (=> d!19745 d!20537))

(declare-fun d!20539 () Bool)

(assert (=> d!20539 (contains!739 (getCurrentListMap!426 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!37405)))))

(assert (=> d!20539 true))

(declare-fun _$16!102 () Unit!2322)

(assert (=> d!20539 (= (choose!483 (_keys!3956 newMap!16) lt!37403 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (index!3076 lt!37405) (defaultEntry!2292 newMap!16)) _$16!102)))

(declare-fun bs!3487 () Bool)

(assert (= bs!3487 d!20539))

(assert (=> bs!3487 m!82701))

(assert (=> bs!3487 m!81971))

(assert (=> bs!3487 m!82701))

(assert (=> bs!3487 m!81971))

(assert (=> bs!3487 m!82703))

(assert (=> d!19867 d!20539))

(assert (=> d!19867 d!20023))

(declare-fun b!82034 () Bool)

(declare-fun e!53504 () Option!145)

(assert (=> b!82034 (= e!53504 None!143)))

(declare-fun b!82033 () Bool)

(assert (=> b!82033 (= e!53504 (getValueByKey!139 (t!5156 (toList!730 lt!37949)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun c!13021 () Bool)

(declare-fun d!20541 () Bool)

(assert (=> d!20541 (= c!13021 (and ((_ is Cons!1493) (toList!730 lt!37949)) (= (_1!1095 (h!2082 (toList!730 lt!37949))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun e!53503 () Option!145)

(assert (=> d!20541 (= (getValueByKey!139 (toList!730 lt!37949) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) e!53503)))

(declare-fun b!82031 () Bool)

(assert (=> b!82031 (= e!53503 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37949)))))))

(declare-fun b!82032 () Bool)

(assert (=> b!82032 (= e!53503 e!53504)))

(declare-fun c!13022 () Bool)

(assert (=> b!82032 (= c!13022 (and ((_ is Cons!1493) (toList!730 lt!37949)) (not (= (_1!1095 (h!2082 (toList!730 lt!37949))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (= (and d!20541 c!13021) b!82031))

(assert (= (and d!20541 (not c!13021)) b!82032))

(assert (= (and b!82032 c!13022) b!82033))

(assert (= (and b!82032 (not c!13022)) b!82034))

(declare-fun m!84607 () Bool)

(assert (=> b!82033 m!84607))

(assert (=> b!81180 d!20541))

(declare-fun d!20543 () Bool)

(declare-fun e!53505 () Bool)

(assert (=> d!20543 e!53505))

(declare-fun res!42569 () Bool)

(assert (=> d!20543 (=> res!42569 e!53505)))

(declare-fun lt!38316 () Bool)

(assert (=> d!20543 (= res!42569 (not lt!38316))))

(declare-fun lt!38315 () Bool)

(assert (=> d!20543 (= lt!38316 lt!38315)))

(declare-fun lt!38317 () Unit!2322)

(declare-fun e!53506 () Unit!2322)

(assert (=> d!20543 (= lt!38317 e!53506)))

(declare-fun c!13023 () Bool)

(assert (=> d!20543 (= c!13023 lt!38315)))

(assert (=> d!20543 (= lt!38315 (containsKey!142 (toList!730 lt!37797) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20543 (= (contains!739 lt!37797 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38316)))

(declare-fun b!82035 () Bool)

(declare-fun lt!38318 () Unit!2322)

(assert (=> b!82035 (= e!53506 lt!38318)))

(assert (=> b!82035 (= lt!38318 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37797) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82035 (isDefined!91 (getValueByKey!139 (toList!730 lt!37797) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82036 () Bool)

(declare-fun Unit!2387 () Unit!2322)

(assert (=> b!82036 (= e!53506 Unit!2387)))

(declare-fun b!82037 () Bool)

(assert (=> b!82037 (= e!53505 (isDefined!91 (getValueByKey!139 (toList!730 lt!37797) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20543 c!13023) b!82035))

(assert (= (and d!20543 (not c!13023)) b!82036))

(assert (= (and d!20543 (not res!42569)) b!82037))

(declare-fun m!84609 () Bool)

(assert (=> d!20543 m!84609))

(declare-fun m!84611 () Bool)

(assert (=> b!82035 m!84611))

(assert (=> b!82035 m!83173))

(assert (=> b!82035 m!83173))

(declare-fun m!84613 () Bool)

(assert (=> b!82035 m!84613))

(assert (=> b!82037 m!83173))

(assert (=> b!82037 m!83173))

(assert (=> b!82037 m!84613))

(assert (=> bm!7524 d!20543))

(declare-fun d!20545 () Bool)

(declare-fun res!42570 () Bool)

(declare-fun e!53507 () Bool)

(assert (=> d!20545 (=> (not res!42570) (not e!53507))))

(assert (=> d!20545 (= res!42570 (simpleValid!56 (_2!1094 lt!37745)))))

(assert (=> d!20545 (= (valid!325 (_2!1094 lt!37745)) e!53507)))

(declare-fun b!82038 () Bool)

(declare-fun res!42571 () Bool)

(assert (=> b!82038 (=> (not res!42571) (not e!53507))))

(assert (=> b!82038 (= res!42571 (= (arrayCountValidKeys!0 (_keys!3956 (_2!1094 lt!37745)) #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37745)))) (_size!417 (_2!1094 lt!37745))))))

(declare-fun b!82039 () Bool)

(declare-fun res!42572 () Bool)

(assert (=> b!82039 (=> (not res!42572) (not e!53507))))

(assert (=> b!82039 (= res!42572 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3956 (_2!1094 lt!37745)) (mask!6298 (_2!1094 lt!37745))))))

(declare-fun b!82040 () Bool)

(assert (=> b!82040 (= e!53507 (arrayNoDuplicates!0 (_keys!3956 (_2!1094 lt!37745)) #b00000000000000000000000000000000 Nil!1495))))

(assert (= (and d!20545 res!42570) b!82038))

(assert (= (and b!82038 res!42571) b!82039))

(assert (= (and b!82039 res!42572) b!82040))

(declare-fun m!84615 () Bool)

(assert (=> d!20545 m!84615))

(declare-fun m!84617 () Bool)

(assert (=> b!82038 m!84617))

(declare-fun m!84619 () Bool)

(assert (=> b!82039 m!84619))

(declare-fun m!84621 () Bool)

(assert (=> b!82040 m!84621))

(assert (=> b!80853 d!20545))

(declare-fun d!20547 () Bool)

(assert (=> d!20547 (= (inRange!0 (index!3076 lt!37879) (mask!6298 newMap!16)) (and (bvsge (index!3076 lt!37879) #b00000000000000000000000000000000) (bvslt (index!3076 lt!37879) (bvadd (mask!6298 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!81061 d!20547))

(declare-fun d!20549 () Bool)

(declare-fun lt!38319 () Bool)

(assert (=> d!20549 (= lt!38319 (select (content!86 (t!5156 (toList!730 lt!37517))) lt!37209))))

(declare-fun e!53508 () Bool)

(assert (=> d!20549 (= lt!38319 e!53508)))

(declare-fun res!42574 () Bool)

(assert (=> d!20549 (=> (not res!42574) (not e!53508))))

(assert (=> d!20549 (= res!42574 ((_ is Cons!1493) (t!5156 (toList!730 lt!37517))))))

(assert (=> d!20549 (= (contains!742 (t!5156 (toList!730 lt!37517)) lt!37209) lt!38319)))

(declare-fun b!82041 () Bool)

(declare-fun e!53509 () Bool)

(assert (=> b!82041 (= e!53508 e!53509)))

(declare-fun res!42573 () Bool)

(assert (=> b!82041 (=> res!42573 e!53509)))

(assert (=> b!82041 (= res!42573 (= (h!2082 (t!5156 (toList!730 lt!37517))) lt!37209))))

(declare-fun b!82042 () Bool)

(assert (=> b!82042 (= e!53509 (contains!742 (t!5156 (t!5156 (toList!730 lt!37517))) lt!37209))))

(assert (= (and d!20549 res!42574) b!82041))

(assert (= (and b!82041 (not res!42573)) b!82042))

(declare-fun m!84623 () Bool)

(assert (=> d!20549 m!84623))

(declare-fun m!84625 () Bool)

(assert (=> d!20549 m!84625))

(declare-fun m!84627 () Bool)

(assert (=> b!82042 m!84627))

(assert (=> b!81146 d!20549))

(assert (=> b!80734 d!20313))

(assert (=> b!80734 d!20315))

(declare-fun b!82046 () Bool)

(declare-fun e!53511 () Option!145)

(assert (=> b!82046 (= e!53511 None!143)))

(declare-fun b!82045 () Bool)

(assert (=> b!82045 (= e!53511 (getValueByKey!139 (t!5156 (t!5156 lt!37552)) (_1!1095 lt!37210)))))

(declare-fun d!20551 () Bool)

(declare-fun c!13024 () Bool)

(assert (=> d!20551 (= c!13024 (and ((_ is Cons!1493) (t!5156 lt!37552)) (= (_1!1095 (h!2082 (t!5156 lt!37552))) (_1!1095 lt!37210))))))

(declare-fun e!53510 () Option!145)

(assert (=> d!20551 (= (getValueByKey!139 (t!5156 lt!37552) (_1!1095 lt!37210)) e!53510)))

(declare-fun b!82043 () Bool)

(assert (=> b!82043 (= e!53510 (Some!144 (_2!1095 (h!2082 (t!5156 lt!37552)))))))

(declare-fun b!82044 () Bool)

(assert (=> b!82044 (= e!53510 e!53511)))

(declare-fun c!13025 () Bool)

(assert (=> b!82044 (= c!13025 (and ((_ is Cons!1493) (t!5156 lt!37552)) (not (= (_1!1095 (h!2082 (t!5156 lt!37552))) (_1!1095 lt!37210)))))))

(assert (= (and d!20551 c!13024) b!82043))

(assert (= (and d!20551 (not c!13024)) b!82044))

(assert (= (and b!82044 c!13025) b!82045))

(assert (= (and b!82044 (not c!13025)) b!82046))

(declare-fun m!84629 () Bool)

(assert (=> b!82045 m!84629))

(assert (=> b!81068 d!20551))

(declare-fun d!20553 () Bool)

(declare-fun res!42575 () Bool)

(declare-fun e!53512 () Bool)

(assert (=> d!20553 (=> res!42575 e!53512)))

(assert (=> d!20553 (= res!42575 (and ((_ is Cons!1493) (toList!730 e!52556)) (= (_1!1095 (h!2082 (toList!730 e!52556))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(assert (=> d!20553 (= (containsKey!142 (toList!730 e!52556) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) e!53512)))

(declare-fun b!82047 () Bool)

(declare-fun e!53513 () Bool)

(assert (=> b!82047 (= e!53512 e!53513)))

(declare-fun res!42576 () Bool)

(assert (=> b!82047 (=> (not res!42576) (not e!53513))))

(assert (=> b!82047 (= res!42576 (and (or (not ((_ is Cons!1493) (toList!730 e!52556))) (bvsle (_1!1095 (h!2082 (toList!730 e!52556))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))) ((_ is Cons!1493) (toList!730 e!52556)) (bvslt (_1!1095 (h!2082 (toList!730 e!52556))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(declare-fun b!82048 () Bool)

(assert (=> b!82048 (= e!53513 (containsKey!142 (t!5156 (toList!730 e!52556)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (= (and d!20553 (not res!42575)) b!82047))

(assert (= (and b!82047 res!42576) b!82048))

(assert (=> b!82048 m!81737))

(declare-fun m!84631 () Bool)

(assert (=> b!82048 m!84631))

(assert (=> d!19873 d!20553))

(declare-fun d!20555 () Bool)

(assert (=> d!20555 (= (size!2140 newMap!16) (bvadd (_size!417 newMap!16) (bvsdiv (bvadd (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!81174 d!20555))

(declare-fun d!20557 () Bool)

(declare-fun lt!38320 () Bool)

(assert (=> d!20557 (= lt!38320 (select (content!86 (toList!730 lt!37612)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun e!53514 () Bool)

(assert (=> d!20557 (= lt!38320 e!53514)))

(declare-fun res!42578 () Bool)

(assert (=> d!20557 (=> (not res!42578) (not e!53514))))

(assert (=> d!20557 (= res!42578 ((_ is Cons!1493) (toList!730 lt!37612)))))

(assert (=> d!20557 (= (contains!742 (toList!730 lt!37612) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!38320)))

(declare-fun b!82049 () Bool)

(declare-fun e!53515 () Bool)

(assert (=> b!82049 (= e!53514 e!53515)))

(declare-fun res!42577 () Bool)

(assert (=> b!82049 (=> res!42577 e!53515)))

(assert (=> b!82049 (= res!42577 (= (h!2082 (toList!730 lt!37612)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!82050 () Bool)

(assert (=> b!82050 (= e!53515 (contains!742 (t!5156 (toList!730 lt!37612)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!20557 res!42578) b!82049))

(assert (= (and b!82049 (not res!42577)) b!82050))

(declare-fun m!84633 () Bool)

(assert (=> d!20557 m!84633))

(declare-fun m!84635 () Bool)

(assert (=> d!20557 m!84635))

(declare-fun m!84637 () Bool)

(assert (=> b!82050 m!84637))

(assert (=> b!80755 d!20557))

(declare-fun d!20559 () Bool)

(assert (=> d!20559 (= (get!1190 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2609 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80783 d!20559))

(declare-fun d!20561 () Bool)

(declare-fun e!53516 () Bool)

(assert (=> d!20561 e!53516))

(declare-fun res!42580 () Bool)

(assert (=> d!20561 (=> (not res!42580) (not e!53516))))

(declare-fun lt!38324 () ListLongMap!1429)

(assert (=> d!20561 (= res!42580 (contains!739 lt!38324 (_1!1095 (ite (or c!12703 c!12700) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(declare-fun lt!38322 () List!1497)

(assert (=> d!20561 (= lt!38324 (ListLongMap!1430 lt!38322))))

(declare-fun lt!38321 () Unit!2322)

(declare-fun lt!38323 () Unit!2322)

(assert (=> d!20561 (= lt!38321 lt!38323)))

(assert (=> d!20561 (= (getValueByKey!139 lt!38322 (_1!1095 (ite (or c!12703 c!12700) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))) (Some!144 (_2!1095 (ite (or c!12703 c!12700) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20561 (= lt!38323 (lemmaContainsTupThenGetReturnValue!56 lt!38322 (_1!1095 (ite (or c!12703 c!12700) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (_2!1095 (ite (or c!12703 c!12700) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20561 (= lt!38322 (insertStrictlySorted!59 (toList!730 (ite c!12703 call!7535 (ite c!12700 call!7536 call!7531))) (_1!1095 (ite (or c!12703 c!12700) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) (_2!1095 (ite (or c!12703 c!12700) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))))

(assert (=> d!20561 (= (+!101 (ite c!12703 call!7535 (ite c!12700 call!7536 call!7531)) (ite (or c!12703 c!12700) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))) lt!38324)))

(declare-fun b!82051 () Bool)

(declare-fun res!42579 () Bool)

(assert (=> b!82051 (=> (not res!42579) (not e!53516))))

(assert (=> b!82051 (= res!42579 (= (getValueByKey!139 (toList!730 lt!38324) (_1!1095 (ite (or c!12703 c!12700) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))) (Some!144 (_2!1095 (ite (or c!12703 c!12700) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))))

(declare-fun b!82052 () Bool)

(assert (=> b!82052 (= e!53516 (contains!742 (toList!730 lt!38324) (ite (or c!12703 c!12700) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(assert (= (and d!20561 res!42580) b!82051))

(assert (= (and b!82051 res!42579) b!82052))

(declare-fun m!84639 () Bool)

(assert (=> d!20561 m!84639))

(declare-fun m!84641 () Bool)

(assert (=> d!20561 m!84641))

(declare-fun m!84643 () Bool)

(assert (=> d!20561 m!84643))

(declare-fun m!84645 () Bool)

(assert (=> d!20561 m!84645))

(declare-fun m!84647 () Bool)

(assert (=> b!82051 m!84647))

(declare-fun m!84649 () Bool)

(assert (=> b!82052 m!84649))

(assert (=> bm!7529 d!20561))

(assert (=> b!80742 d!20085))

(declare-fun b!82056 () Bool)

(declare-fun e!53518 () Option!145)

(assert (=> b!82056 (= e!53518 None!143)))

(declare-fun b!82055 () Bool)

(assert (=> b!82055 (= e!53518 (getValueByKey!139 (t!5156 (toList!730 lt!37644)) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20563 () Bool)

(declare-fun c!13026 () Bool)

(assert (=> d!20563 (= c!13026 (and ((_ is Cons!1493) (toList!730 lt!37644)) (= (_1!1095 (h!2082 (toList!730 lt!37644))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53517 () Option!145)

(assert (=> d!20563 (= (getValueByKey!139 (toList!730 lt!37644) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53517)))

(declare-fun b!82053 () Bool)

(assert (=> b!82053 (= e!53517 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37644)))))))

(declare-fun b!82054 () Bool)

(assert (=> b!82054 (= e!53517 e!53518)))

(declare-fun c!13027 () Bool)

(assert (=> b!82054 (= c!13027 (and ((_ is Cons!1493) (toList!730 lt!37644)) (not (= (_1!1095 (h!2082 (toList!730 lt!37644))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20563 c!13026) b!82053))

(assert (= (and d!20563 (not c!13026)) b!82054))

(assert (= (and b!82054 c!13027) b!82055))

(assert (= (and b!82054 (not c!13027)) b!82056))

(declare-fun m!84651 () Bool)

(assert (=> b!82055 m!84651))

(assert (=> b!80773 d!20563))

(declare-fun lt!38325 () Bool)

(declare-fun d!20565 () Bool)

(assert (=> d!20565 (= lt!38325 (select (content!86 (toList!730 lt!37942)) (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun e!53519 () Bool)

(assert (=> d!20565 (= lt!38325 e!53519)))

(declare-fun res!42582 () Bool)

(assert (=> d!20565 (=> (not res!42582) (not e!53519))))

(assert (=> d!20565 (= res!42582 ((_ is Cons!1493) (toList!730 lt!37942)))))

(assert (=> d!20565 (= (contains!742 (toList!730 lt!37942) (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38325)))

(declare-fun b!82057 () Bool)

(declare-fun e!53520 () Bool)

(assert (=> b!82057 (= e!53519 e!53520)))

(declare-fun res!42581 () Bool)

(assert (=> b!82057 (=> res!42581 e!53520)))

(assert (=> b!82057 (= res!42581 (= (h!2082 (toList!730 lt!37942)) (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!82058 () Bool)

(assert (=> b!82058 (= e!53520 (contains!742 (t!5156 (toList!730 lt!37942)) (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (= (and d!20565 res!42582) b!82057))

(assert (= (and b!82057 (not res!42581)) b!82058))

(declare-fun m!84653 () Bool)

(assert (=> d!20565 m!84653))

(declare-fun m!84655 () Bool)

(assert (=> d!20565 m!84655))

(declare-fun m!84657 () Bool)

(assert (=> b!82058 m!84657))

(assert (=> b!81148 d!20565))

(assert (=> b!81155 d!19877))

(assert (=> b!80982 d!20361))

(assert (=> b!80982 d!19765))

(declare-fun d!20567 () Bool)

(declare-fun e!53521 () Bool)

(assert (=> d!20567 e!53521))

(declare-fun res!42583 () Bool)

(assert (=> d!20567 (=> res!42583 e!53521)))

(declare-fun lt!38327 () Bool)

(assert (=> d!20567 (= res!42583 (not lt!38327))))

(declare-fun lt!38326 () Bool)

(assert (=> d!20567 (= lt!38327 lt!38326)))

(declare-fun lt!38328 () Unit!2322)

(declare-fun e!53522 () Unit!2322)

(assert (=> d!20567 (= lt!38328 e!53522)))

(declare-fun c!13028 () Bool)

(assert (=> d!20567 (= c!13028 lt!38326)))

(assert (=> d!20567 (= lt!38326 (containsKey!142 (toList!730 lt!37949) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20567 (= (contains!739 lt!37949 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38327)))

(declare-fun b!82059 () Bool)

(declare-fun lt!38329 () Unit!2322)

(assert (=> b!82059 (= e!53522 lt!38329)))

(assert (=> b!82059 (= lt!38329 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37949) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> b!82059 (isDefined!91 (getValueByKey!139 (toList!730 lt!37949) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!82060 () Bool)

(declare-fun Unit!2388 () Unit!2322)

(assert (=> b!82060 (= e!53522 Unit!2388)))

(declare-fun b!82061 () Bool)

(assert (=> b!82061 (= e!53521 (isDefined!91 (getValueByKey!139 (toList!730 lt!37949) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (= (and d!20567 c!13028) b!82059))

(assert (= (and d!20567 (not c!13028)) b!82060))

(assert (= (and d!20567 (not res!42583)) b!82061))

(declare-fun m!84659 () Bool)

(assert (=> d!20567 m!84659))

(declare-fun m!84661 () Bool)

(assert (=> b!82059 m!84661))

(assert (=> b!82059 m!83151))

(assert (=> b!82059 m!83151))

(declare-fun m!84663 () Bool)

(assert (=> b!82059 m!84663))

(assert (=> b!82061 m!83151))

(assert (=> b!82061 m!83151))

(assert (=> b!82061 m!84663))

(assert (=> d!19973 d!20567))

(declare-fun b!82065 () Bool)

(declare-fun e!53524 () Option!145)

(assert (=> b!82065 (= e!53524 None!143)))

(declare-fun b!82064 () Bool)

(assert (=> b!82064 (= e!53524 (getValueByKey!139 (t!5156 lt!37947) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun c!13029 () Bool)

(declare-fun d!20569 () Bool)

(assert (=> d!20569 (= c!13029 (and ((_ is Cons!1493) lt!37947) (= (_1!1095 (h!2082 lt!37947)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun e!53523 () Option!145)

(assert (=> d!20569 (= (getValueByKey!139 lt!37947 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) e!53523)))

(declare-fun b!82062 () Bool)

(assert (=> b!82062 (= e!53523 (Some!144 (_2!1095 (h!2082 lt!37947))))))

(declare-fun b!82063 () Bool)

(assert (=> b!82063 (= e!53523 e!53524)))

(declare-fun c!13030 () Bool)

(assert (=> b!82063 (= c!13030 (and ((_ is Cons!1493) lt!37947) (not (= (_1!1095 (h!2082 lt!37947)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (= (and d!20569 c!13029) b!82062))

(assert (= (and d!20569 (not c!13029)) b!82063))

(assert (= (and b!82063 c!13030) b!82064))

(assert (= (and b!82063 (not c!13030)) b!82065))

(declare-fun m!84665 () Bool)

(assert (=> b!82064 m!84665))

(assert (=> d!19973 d!20569))

(declare-fun d!20571 () Bool)

(assert (=> d!20571 (= (getValueByKey!139 lt!37947 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun lt!38330 () Unit!2322)

(assert (=> d!20571 (= lt!38330 (choose!478 lt!37947 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun e!53525 () Bool)

(assert (=> d!20571 e!53525))

(declare-fun res!42584 () Bool)

(assert (=> d!20571 (=> (not res!42584) (not e!53525))))

(assert (=> d!20571 (= res!42584 (isStrictlySorted!283 lt!37947))))

(assert (=> d!20571 (= (lemmaContainsTupThenGetReturnValue!56 lt!37947 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38330)))

(declare-fun b!82066 () Bool)

(declare-fun res!42585 () Bool)

(assert (=> b!82066 (=> (not res!42585) (not e!53525))))

(assert (=> b!82066 (= res!42585 (containsKey!142 lt!37947 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!82067 () Bool)

(assert (=> b!82067 (= e!53525 (contains!742 lt!37947 (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (= (and d!20571 res!42584) b!82066))

(assert (= (and b!82066 res!42585) b!82067))

(assert (=> d!20571 m!83145))

(declare-fun m!84667 () Bool)

(assert (=> d!20571 m!84667))

(declare-fun m!84669 () Bool)

(assert (=> d!20571 m!84669))

(declare-fun m!84671 () Bool)

(assert (=> b!82066 m!84671))

(declare-fun m!84673 () Bool)

(assert (=> b!82067 m!84673))

(assert (=> d!19973 d!20571))

(declare-fun bm!7644 () Bool)

(declare-fun call!7648 () List!1497)

(declare-fun call!7649 () List!1497)

(assert (=> bm!7644 (= call!7648 call!7649)))

(declare-fun b!82068 () Bool)

(declare-fun e!53526 () Bool)

(declare-fun lt!38331 () List!1497)

(assert (=> b!82068 (= e!53526 (contains!742 lt!38331 (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!82069 () Bool)

(declare-fun e!53527 () List!1497)

(declare-fun e!53530 () List!1497)

(assert (=> b!82069 (= e!53527 e!53530)))

(declare-fun c!13034 () Bool)

(assert (=> b!82069 (= c!13034 (and ((_ is Cons!1493) (toList!730 call!7438)) (= (_1!1095 (h!2082 (toList!730 call!7438))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun bm!7645 () Bool)

(declare-fun call!7647 () List!1497)

(assert (=> bm!7645 (= call!7647 call!7648)))

(declare-fun d!20573 () Bool)

(assert (=> d!20573 e!53526))

(declare-fun res!42586 () Bool)

(assert (=> d!20573 (=> (not res!42586) (not e!53526))))

(assert (=> d!20573 (= res!42586 (isStrictlySorted!283 lt!38331))))

(assert (=> d!20573 (= lt!38331 e!53527)))

(declare-fun c!13031 () Bool)

(assert (=> d!20573 (= c!13031 (and ((_ is Cons!1493) (toList!730 call!7438)) (bvslt (_1!1095 (h!2082 (toList!730 call!7438))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> d!20573 (isStrictlySorted!283 (toList!730 call!7438))))

(assert (=> d!20573 (= (insertStrictlySorted!59 (toList!730 call!7438) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38331)))

(declare-fun bm!7646 () Bool)

(declare-fun e!53528 () List!1497)

(assert (=> bm!7646 (= call!7649 ($colon$colon!69 e!53528 (ite c!13031 (h!2082 (toList!730 call!7438)) (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(declare-fun c!13033 () Bool)

(assert (=> bm!7646 (= c!13033 c!13031)))

(declare-fun b!82070 () Bool)

(declare-fun e!53529 () List!1497)

(assert (=> b!82070 (= e!53529 call!7647)))

(declare-fun b!82071 () Bool)

(declare-fun res!42587 () Bool)

(assert (=> b!82071 (=> (not res!42587) (not e!53526))))

(assert (=> b!82071 (= res!42587 (containsKey!142 lt!38331 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun c!13032 () Bool)

(declare-fun b!82072 () Bool)

(assert (=> b!82072 (= c!13032 (and ((_ is Cons!1493) (toList!730 call!7438)) (bvsgt (_1!1095 (h!2082 (toList!730 call!7438))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> b!82072 (= e!53530 e!53529)))

(declare-fun b!82073 () Bool)

(assert (=> b!82073 (= e!53528 (insertStrictlySorted!59 (t!5156 (toList!730 call!7438)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!82074 () Bool)

(assert (=> b!82074 (= e!53530 call!7648)))

(declare-fun b!82075 () Bool)

(assert (=> b!82075 (= e!53529 call!7647)))

(declare-fun b!82076 () Bool)

(assert (=> b!82076 (= e!53528 (ite c!13034 (t!5156 (toList!730 call!7438)) (ite c!13032 (Cons!1493 (h!2082 (toList!730 call!7438)) (t!5156 (toList!730 call!7438))) Nil!1494)))))

(declare-fun b!82077 () Bool)

(assert (=> b!82077 (= e!53527 call!7649)))

(assert (= (and d!20573 c!13031) b!82077))

(assert (= (and d!20573 (not c!13031)) b!82069))

(assert (= (and b!82069 c!13034) b!82074))

(assert (= (and b!82069 (not c!13034)) b!82072))

(assert (= (and b!82072 c!13032) b!82075))

(assert (= (and b!82072 (not c!13032)) b!82070))

(assert (= (or b!82075 b!82070) bm!7645))

(assert (= (or b!82074 bm!7645) bm!7644))

(assert (= (or b!82077 bm!7644) bm!7646))

(assert (= (and bm!7646 c!13033) b!82073))

(assert (= (and bm!7646 (not c!13033)) b!82076))

(assert (= (and d!20573 res!42586) b!82071))

(assert (= (and b!82071 res!42587) b!82068))

(declare-fun m!84675 () Bool)

(assert (=> b!82073 m!84675))

(declare-fun m!84677 () Bool)

(assert (=> bm!7646 m!84677))

(declare-fun m!84679 () Bool)

(assert (=> b!82068 m!84679))

(declare-fun m!84681 () Bool)

(assert (=> d!20573 m!84681))

(declare-fun m!84683 () Bool)

(assert (=> d!20573 m!84683))

(declare-fun m!84685 () Bool)

(assert (=> b!82071 m!84685))

(assert (=> d!19973 d!20573))

(declare-fun lt!38332 () Bool)

(declare-fun d!20575 () Bool)

(assert (=> d!20575 (= lt!38332 (select (content!86 (toList!730 lt!37624)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(declare-fun e!53531 () Bool)

(assert (=> d!20575 (= lt!38332 e!53531)))

(declare-fun res!42589 () Bool)

(assert (=> d!20575 (=> (not res!42589) (not e!53531))))

(assert (=> d!20575 (= res!42589 ((_ is Cons!1493) (toList!730 lt!37624)))))

(assert (=> d!20575 (= (contains!742 (toList!730 lt!37624) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) lt!38332)))

(declare-fun b!82078 () Bool)

(declare-fun e!53532 () Bool)

(assert (=> b!82078 (= e!53531 e!53532)))

(declare-fun res!42588 () Bool)

(assert (=> b!82078 (=> res!42588 e!53532)))

(assert (=> b!82078 (= res!42588 (= (h!2082 (toList!730 lt!37624)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(declare-fun b!82079 () Bool)

(assert (=> b!82079 (= e!53532 (contains!742 (t!5156 (toList!730 lt!37624)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (= (and d!20575 res!42589) b!82078))

(assert (= (and b!82078 (not res!42588)) b!82079))

(declare-fun m!84687 () Bool)

(assert (=> d!20575 m!84687))

(declare-fun m!84689 () Bool)

(assert (=> d!20575 m!84689))

(declare-fun m!84691 () Bool)

(assert (=> b!82079 m!84691))

(assert (=> b!80761 d!20575))

(declare-fun b!82080 () Bool)

(declare-fun e!53535 () Bool)

(declare-fun call!7650 () Bool)

(assert (=> b!82080 (= e!53535 call!7650)))

(declare-fun b!82081 () Bool)

(declare-fun e!53534 () Bool)

(assert (=> b!82081 (= e!53534 call!7650)))

(declare-fun b!82082 () Bool)

(assert (=> b!82082 (= e!53535 e!53534)))

(declare-fun lt!38335 () (_ BitVec 64))

(assert (=> b!82082 (= lt!38335 (select (arr!1892 (_keys!3956 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!38334 () Unit!2322)

(assert (=> b!82082 (= lt!38334 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3956 newMap!16) lt!38335 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!82082 (arrayContainsKey!0 (_keys!3956 newMap!16) lt!38335 #b00000000000000000000000000000000)))

(declare-fun lt!38333 () Unit!2322)

(assert (=> b!82082 (= lt!38333 lt!38334)))

(declare-fun res!42591 () Bool)

(assert (=> b!82082 (= res!42591 (= (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3956 newMap!16) (mask!6298 newMap!16)) (Found!235 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!82082 (=> (not res!42591) (not e!53534))))

(declare-fun bm!7647 () Bool)

(assert (=> bm!7647 (= call!7650 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(declare-fun b!82083 () Bool)

(declare-fun e!53533 () Bool)

(assert (=> b!82083 (= e!53533 e!53535)))

(declare-fun c!13035 () Bool)

(assert (=> b!82083 (= c!13035 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!20577 () Bool)

(declare-fun res!42590 () Bool)

(assert (=> d!20577 (=> res!42590 e!53533)))

(assert (=> d!20577 (= res!42590 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!20577 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3956 newMap!16) (mask!6298 newMap!16)) e!53533)))

(assert (= (and d!20577 (not res!42590)) b!82083))

(assert (= (and b!82083 c!13035) b!82082))

(assert (= (and b!82083 (not c!13035)) b!82080))

(assert (= (and b!82082 res!42591) b!82081))

(assert (= (or b!82081 b!82080) bm!7647))

(assert (=> b!82082 m!83525))

(declare-fun m!84693 () Bool)

(assert (=> b!82082 m!84693))

(declare-fun m!84695 () Bool)

(assert (=> b!82082 m!84695))

(assert (=> b!82082 m!83525))

(declare-fun m!84697 () Bool)

(assert (=> b!82082 m!84697))

(declare-fun m!84699 () Bool)

(assert (=> bm!7647 m!84699))

(assert (=> b!82083 m!83525))

(assert (=> b!82083 m!83525))

(assert (=> b!82083 m!83527))

(assert (=> bm!7558 d!20577))

(assert (=> d!19937 d!19935))

(declare-fun d!20579 () Bool)

(assert (=> d!20579 (= (getValueByKey!139 lt!37556 (_1!1095 lt!37210)) (Some!144 (_2!1095 lt!37210)))))

(assert (=> d!20579 true))

(declare-fun _$22!405 () Unit!2322)

(assert (=> d!20579 (= (choose!478 lt!37556 (_1!1095 lt!37210) (_2!1095 lt!37210)) _$22!405)))

(declare-fun bs!3488 () Bool)

(assert (= bs!3488 d!20579))

(assert (=> bs!3488 m!82171))

(assert (=> d!19937 d!20579))

(declare-fun d!20581 () Bool)

(declare-fun res!42592 () Bool)

(declare-fun e!53536 () Bool)

(assert (=> d!20581 (=> res!42592 e!53536)))

(assert (=> d!20581 (= res!42592 (or ((_ is Nil!1494) lt!37556) ((_ is Nil!1494) (t!5156 lt!37556))))))

(assert (=> d!20581 (= (isStrictlySorted!283 lt!37556) e!53536)))

(declare-fun b!82084 () Bool)

(declare-fun e!53537 () Bool)

(assert (=> b!82084 (= e!53536 e!53537)))

(declare-fun res!42593 () Bool)

(assert (=> b!82084 (=> (not res!42593) (not e!53537))))

(assert (=> b!82084 (= res!42593 (bvslt (_1!1095 (h!2082 lt!37556)) (_1!1095 (h!2082 (t!5156 lt!37556)))))))

(declare-fun b!82085 () Bool)

(assert (=> b!82085 (= e!53537 (isStrictlySorted!283 (t!5156 lt!37556)))))

(assert (= (and d!20581 (not res!42592)) b!82084))

(assert (= (and b!82084 res!42593) b!82085))

(declare-fun m!84701 () Bool)

(assert (=> b!82085 m!84701))

(assert (=> d!19937 d!20581))

(declare-fun b!82086 () Bool)

(declare-fun e!53540 () Bool)

(declare-fun call!7651 () Bool)

(assert (=> b!82086 (= e!53540 call!7651)))

(declare-fun b!82087 () Bool)

(declare-fun e!53539 () Bool)

(assert (=> b!82087 (= e!53539 e!53540)))

(declare-fun c!13036 () Bool)

(assert (=> b!82087 (= c!13036 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!20583 () Bool)

(declare-fun res!42596 () Bool)

(declare-fun e!53541 () Bool)

(assert (=> d!20583 (=> res!42596 e!53541)))

(assert (=> d!20583 (= res!42596 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (v!2610 (underlying!283 thiss!992))))))))

(assert (=> d!20583 (= (arrayNoDuplicates!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12666 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495))) e!53541)))

(declare-fun b!82088 () Bool)

(assert (=> b!82088 (= e!53541 e!53539)))

(declare-fun res!42595 () Bool)

(assert (=> b!82088 (=> (not res!42595) (not e!53539))))

(declare-fun e!53538 () Bool)

(assert (=> b!82088 (= res!42595 (not e!53538))))

(declare-fun res!42594 () Bool)

(assert (=> b!82088 (=> (not res!42594) (not e!53538))))

(assert (=> b!82088 (= res!42594 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!82089 () Bool)

(assert (=> b!82089 (= e!53538 (contains!741 (ite c!12666 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!82090 () Bool)

(assert (=> b!82090 (= e!53540 call!7651)))

(declare-fun bm!7648 () Bool)

(assert (=> bm!7648 (= call!7651 (arrayNoDuplicates!0 (_keys!3956 (v!2610 (underlying!283 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13036 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!12666 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495))) (ite c!12666 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)) (ite c!12607 (Cons!1494 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) Nil!1495) Nil!1495)))))))

(assert (= (and d!20583 (not res!42596)) b!82088))

(assert (= (and b!82088 res!42594) b!82089))

(assert (= (and b!82088 res!42595) b!82087))

(assert (= (and b!82087 c!13036) b!82090))

(assert (= (and b!82087 (not c!13036)) b!82086))

(assert (= (or b!82090 b!82086) bm!7648))

(declare-fun m!84703 () Bool)

(assert (=> b!82087 m!84703))

(assert (=> b!82087 m!84703))

(declare-fun m!84705 () Bool)

(assert (=> b!82087 m!84705))

(assert (=> b!82088 m!84703))

(assert (=> b!82088 m!84703))

(assert (=> b!82088 m!84705))

(assert (=> b!82089 m!84703))

(assert (=> b!82089 m!84703))

(declare-fun m!84707 () Bool)

(assert (=> b!82089 m!84707))

(assert (=> bm!7648 m!84703))

(declare-fun m!84709 () Bool)

(assert (=> bm!7648 m!84709))

(assert (=> bm!7503 d!20583))

(assert (=> b!80764 d!20393))

(assert (=> b!80764 d!20093))

(declare-fun d!20585 () Bool)

(declare-fun e!53542 () Bool)

(assert (=> d!20585 e!53542))

(declare-fun res!42597 () Bool)

(assert (=> d!20585 (=> res!42597 e!53542)))

(declare-fun lt!38337 () Bool)

(assert (=> d!20585 (= res!42597 (not lt!38337))))

(declare-fun lt!38336 () Bool)

(assert (=> d!20585 (= lt!38337 lt!38336)))

(declare-fun lt!38338 () Unit!2322)

(declare-fun e!53543 () Unit!2322)

(assert (=> d!20585 (= lt!38338 e!53543)))

(declare-fun c!13037 () Bool)

(assert (=> d!20585 (= c!13037 lt!38336)))

(assert (=> d!20585 (= lt!38336 (containsKey!142 (toList!730 lt!37912) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20585 (= (contains!739 lt!37912 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38337)))

(declare-fun b!82091 () Bool)

(declare-fun lt!38339 () Unit!2322)

(assert (=> b!82091 (= e!53543 lt!38339)))

(assert (=> b!82091 (= lt!38339 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37912) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82091 (isDefined!91 (getValueByKey!139 (toList!730 lt!37912) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82092 () Bool)

(declare-fun Unit!2389 () Unit!2322)

(assert (=> b!82092 (= e!53543 Unit!2389)))

(declare-fun b!82093 () Bool)

(assert (=> b!82093 (= e!53542 (isDefined!91 (getValueByKey!139 (toList!730 lt!37912) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20585 c!13037) b!82091))

(assert (= (and d!20585 (not c!13037)) b!82092))

(assert (= (and d!20585 (not res!42597)) b!82093))

(declare-fun m!84711 () Bool)

(assert (=> d!20585 m!84711))

(declare-fun m!84713 () Bool)

(assert (=> b!82091 m!84713))

(assert (=> b!82091 m!84489))

(assert (=> b!82091 m!84489))

(declare-fun m!84715 () Bool)

(assert (=> b!82091 m!84715))

(assert (=> b!82093 m!84489))

(assert (=> b!82093 m!84489))

(assert (=> b!82093 m!84715))

(assert (=> bm!7549 d!20585))

(declare-fun d!20587 () Bool)

(declare-fun res!42598 () Bool)

(declare-fun e!53544 () Bool)

(assert (=> d!20587 (=> res!42598 e!53544)))

(assert (=> d!20587 (= res!42598 (and ((_ is Cons!1493) (toList!730 call!7459)) (= (_1!1095 (h!2082 (toList!730 call!7459))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(assert (=> d!20587 (= (containsKey!142 (toList!730 call!7459) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) e!53544)))

(declare-fun b!82094 () Bool)

(declare-fun e!53545 () Bool)

(assert (=> b!82094 (= e!53544 e!53545)))

(declare-fun res!42599 () Bool)

(assert (=> b!82094 (=> (not res!42599) (not e!53545))))

(assert (=> b!82094 (= res!42599 (and (or (not ((_ is Cons!1493) (toList!730 call!7459))) (bvsle (_1!1095 (h!2082 (toList!730 call!7459))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))) ((_ is Cons!1493) (toList!730 call!7459)) (bvslt (_1!1095 (h!2082 (toList!730 call!7459))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(declare-fun b!82095 () Bool)

(assert (=> b!82095 (= e!53545 (containsKey!142 (t!5156 (toList!730 call!7459)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (= (and d!20587 (not res!42598)) b!82094))

(assert (= (and b!82094 res!42599) b!82095))

(assert (=> b!82095 m!81737))

(declare-fun m!84717 () Bool)

(assert (=> b!82095 m!84717))

(assert (=> d!19759 d!20587))

(declare-fun d!20589 () Bool)

(declare-fun lt!38340 () Bool)

(assert (=> d!20589 (= lt!38340 (select (content!86 (t!5156 (toList!730 lt!37554))) lt!37210))))

(declare-fun e!53546 () Bool)

(assert (=> d!20589 (= lt!38340 e!53546)))

(declare-fun res!42601 () Bool)

(assert (=> d!20589 (=> (not res!42601) (not e!53546))))

(assert (=> d!20589 (= res!42601 ((_ is Cons!1493) (t!5156 (toList!730 lt!37554))))))

(assert (=> d!20589 (= (contains!742 (t!5156 (toList!730 lt!37554)) lt!37210) lt!38340)))

(declare-fun b!82096 () Bool)

(declare-fun e!53547 () Bool)

(assert (=> b!82096 (= e!53546 e!53547)))

(declare-fun res!42600 () Bool)

(assert (=> b!82096 (=> res!42600 e!53547)))

(assert (=> b!82096 (= res!42600 (= (h!2082 (t!5156 (toList!730 lt!37554))) lt!37210))))

(declare-fun b!82097 () Bool)

(assert (=> b!82097 (= e!53547 (contains!742 (t!5156 (t!5156 (toList!730 lt!37554))) lt!37210))))

(assert (= (and d!20589 res!42601) b!82096))

(assert (= (and b!82096 (not res!42600)) b!82097))

(declare-fun m!84719 () Bool)

(assert (=> d!20589 m!84719))

(declare-fun m!84721 () Bool)

(assert (=> d!20589 m!84721))

(declare-fun m!84723 () Bool)

(assert (=> b!82097 m!84723))

(assert (=> b!80872 d!20589))

(declare-fun d!20591 () Bool)

(assert (=> d!20591 (= (inRange!0 (ite c!12625 (index!3075 lt!37575) (index!3078 lt!37575)) (mask!6298 newMap!16)) (and (bvsge (ite c!12625 (index!3075 lt!37575) (index!3078 lt!37575)) #b00000000000000000000000000000000) (bvslt (ite c!12625 (index!3075 lt!37575) (index!3078 lt!37575)) (bvadd (mask!6298 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7488 d!20591))

(declare-fun b!82101 () Bool)

(declare-fun e!53549 () Option!145)

(assert (=> b!82101 (= e!53549 None!143)))

(declare-fun b!82100 () Bool)

(assert (=> b!82100 (= e!53549 (getValueByKey!139 (t!5156 (t!5156 lt!37560)) (_1!1095 lt!37212)))))

(declare-fun d!20593 () Bool)

(declare-fun c!13038 () Bool)

(assert (=> d!20593 (= c!13038 (and ((_ is Cons!1493) (t!5156 lt!37560)) (= (_1!1095 (h!2082 (t!5156 lt!37560))) (_1!1095 lt!37212))))))

(declare-fun e!53548 () Option!145)

(assert (=> d!20593 (= (getValueByKey!139 (t!5156 lt!37560) (_1!1095 lt!37212)) e!53548)))

(declare-fun b!82098 () Bool)

(assert (=> b!82098 (= e!53548 (Some!144 (_2!1095 (h!2082 (t!5156 lt!37560)))))))

(declare-fun b!82099 () Bool)

(assert (=> b!82099 (= e!53548 e!53549)))

(declare-fun c!13039 () Bool)

(assert (=> b!82099 (= c!13039 (and ((_ is Cons!1493) (t!5156 lt!37560)) (not (= (_1!1095 (h!2082 (t!5156 lt!37560))) (_1!1095 lt!37212)))))))

(assert (= (and d!20593 c!13038) b!82098))

(assert (= (and d!20593 (not c!13038)) b!82099))

(assert (= (and b!82099 c!13039) b!82100))

(assert (= (and b!82099 (not c!13039)) b!82101))

(declare-fun m!84725 () Bool)

(assert (=> b!82100 m!84725))

(assert (=> b!80799 d!20593))

(declare-fun d!20595 () Bool)

(declare-fun e!53550 () Bool)

(assert (=> d!20595 e!53550))

(declare-fun res!42603 () Bool)

(assert (=> d!20595 (=> (not res!42603) (not e!53550))))

(declare-fun lt!38344 () ListLongMap!1429)

(assert (=> d!20595 (= res!42603 (contains!739 lt!38344 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(declare-fun lt!38342 () List!1497)

(assert (=> d!20595 (= lt!38344 (ListLongMap!1430 lt!38342))))

(declare-fun lt!38341 () Unit!2322)

(declare-fun lt!38343 () Unit!2322)

(assert (=> d!20595 (= lt!38341 lt!38343)))

(assert (=> d!20595 (= (getValueByKey!139 lt!38342 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(assert (=> d!20595 (= lt!38343 (lemmaContainsTupThenGetReturnValue!56 lt!38342 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(assert (=> d!20595 (= lt!38342 (insertStrictlySorted!59 (toList!730 call!7552) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))))))

(assert (=> d!20595 (= (+!101 call!7552 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))) lt!38344)))

(declare-fun b!82102 () Bool)

(declare-fun res!42602 () Bool)

(assert (=> b!82102 (=> (not res!42602) (not e!53550))))

(assert (=> b!82102 (= res!42602 (= (getValueByKey!139 (toList!730 lt!38344) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16))))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))))))

(declare-fun b!82103 () Bool)

(assert (=> b!82103 (= e!53550 (contains!742 (toList!730 lt!38344) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12568 (ite c!12577 (minValue!2188 newMap!16) lt!37223) (minValue!2188 newMap!16)))))))

(assert (= (and d!20595 res!42603) b!82102))

(assert (= (and b!82102 res!42602) b!82103))

(declare-fun m!84727 () Bool)

(assert (=> d!20595 m!84727))

(declare-fun m!84729 () Bool)

(assert (=> d!20595 m!84729))

(declare-fun m!84731 () Bool)

(assert (=> d!20595 m!84731))

(declare-fun m!84733 () Bool)

(assert (=> d!20595 m!84733))

(declare-fun m!84735 () Bool)

(assert (=> b!82102 m!84735))

(declare-fun m!84737 () Bool)

(assert (=> b!82103 m!84737))

(assert (=> b!81127 d!20595))

(declare-fun d!20597 () Bool)

(assert (=> d!20597 (isDefined!91 (getValueByKey!139 (toList!730 lt!37554) (_1!1095 lt!37210)))))

(declare-fun lt!38345 () Unit!2322)

(assert (=> d!20597 (= lt!38345 (choose!487 (toList!730 lt!37554) (_1!1095 lt!37210)))))

(declare-fun e!53551 () Bool)

(assert (=> d!20597 e!53551))

(declare-fun res!42604 () Bool)

(assert (=> d!20597 (=> (not res!42604) (not e!53551))))

(assert (=> d!20597 (= res!42604 (isStrictlySorted!283 (toList!730 lt!37554)))))

(assert (=> d!20597 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37554) (_1!1095 lt!37210)) lt!38345)))

(declare-fun b!82104 () Bool)

(assert (=> b!82104 (= e!53551 (containsKey!142 (toList!730 lt!37554) (_1!1095 lt!37210)))))

(assert (= (and d!20597 res!42604) b!82104))

(assert (=> d!20597 m!82165))

(assert (=> d!20597 m!82165))

(assert (=> d!20597 m!82945))

(declare-fun m!84739 () Bool)

(assert (=> d!20597 m!84739))

(declare-fun m!84741 () Bool)

(assert (=> d!20597 m!84741))

(assert (=> b!82104 m!82941))

(assert (=> b!81063 d!20597))

(declare-fun d!20599 () Bool)

(assert (=> d!20599 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37554) (_1!1095 lt!37210))) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37554) (_1!1095 lt!37210)))))))

(declare-fun bs!3489 () Bool)

(assert (= bs!3489 d!20599))

(assert (=> bs!3489 m!82165))

(declare-fun m!84743 () Bool)

(assert (=> bs!3489 m!84743))

(assert (=> b!81063 d!20599))

(assert (=> b!81063 d!19967))

(declare-fun d!20601 () Bool)

(declare-fun lt!38346 () Bool)

(assert (=> d!20601 (= lt!38346 (select (content!86 (toList!730 lt!37767)) (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun e!53552 () Bool)

(assert (=> d!20601 (= lt!38346 e!53552)))

(declare-fun res!42606 () Bool)

(assert (=> d!20601 (=> (not res!42606) (not e!53552))))

(assert (=> d!20601 (= res!42606 ((_ is Cons!1493) (toList!730 lt!37767)))))

(assert (=> d!20601 (= (contains!742 (toList!730 lt!37767) (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!38346)))

(declare-fun b!82105 () Bool)

(declare-fun e!53553 () Bool)

(assert (=> b!82105 (= e!53552 e!53553)))

(declare-fun res!42605 () Bool)

(assert (=> b!82105 (=> res!42605 e!53553)))

(assert (=> b!82105 (= res!42605 (= (h!2082 (toList!730 lt!37767)) (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!82106 () Bool)

(assert (=> b!82106 (= e!53553 (contains!742 (t!5156 (toList!730 lt!37767)) (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!20601 res!42606) b!82105))

(assert (= (and b!82105 (not res!42605)) b!82106))

(declare-fun m!84745 () Bool)

(assert (=> d!20601 m!84745))

(declare-fun m!84747 () Bool)

(assert (=> d!20601 m!84747))

(declare-fun m!84749 () Bool)

(assert (=> b!82106 m!84749))

(assert (=> b!80893 d!20601))

(assert (=> d!19837 d!19839))

(assert (=> d!19837 d!19843))

(assert (=> d!19837 d!19853))

(declare-fun d!20603 () Bool)

(declare-fun e!53554 () Bool)

(assert (=> d!20603 e!53554))

(declare-fun res!42607 () Bool)

(assert (=> d!20603 (=> res!42607 e!53554)))

(declare-fun lt!38348 () Bool)

(assert (=> d!20603 (= res!42607 (not lt!38348))))

(declare-fun lt!38347 () Bool)

(assert (=> d!20603 (= lt!38348 lt!38347)))

(declare-fun lt!38349 () Unit!2322)

(declare-fun e!53555 () Unit!2322)

(assert (=> d!20603 (= lt!38349 e!53555)))

(declare-fun c!13040 () Bool)

(assert (=> d!20603 (= c!13040 lt!38347)))

(assert (=> d!20603 (= lt!38347 (containsKey!142 (toList!730 lt!37483) lt!37485))))

(assert (=> d!20603 (= (contains!739 lt!37483 lt!37485) lt!38348)))

(declare-fun b!82107 () Bool)

(declare-fun lt!38350 () Unit!2322)

(assert (=> b!82107 (= e!53555 lt!38350)))

(assert (=> b!82107 (= lt!38350 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37483) lt!37485))))

(assert (=> b!82107 (isDefined!91 (getValueByKey!139 (toList!730 lt!37483) lt!37485))))

(declare-fun b!82108 () Bool)

(declare-fun Unit!2390 () Unit!2322)

(assert (=> b!82108 (= e!53555 Unit!2390)))

(declare-fun b!82109 () Bool)

(assert (=> b!82109 (= e!53554 (isDefined!91 (getValueByKey!139 (toList!730 lt!37483) lt!37485)))))

(assert (= (and d!20603 c!13040) b!82107))

(assert (= (and d!20603 (not c!13040)) b!82108))

(assert (= (and d!20603 (not res!42607)) b!82109))

(declare-fun m!84751 () Bool)

(assert (=> d!20603 m!84751))

(declare-fun m!84753 () Bool)

(assert (=> b!82107 m!84753))

(assert (=> b!82107 m!82625))

(assert (=> b!82107 m!82625))

(declare-fun m!84755 () Bool)

(assert (=> b!82107 m!84755))

(assert (=> b!82109 m!82625))

(assert (=> b!82109 m!82625))

(assert (=> b!82109 m!84755))

(assert (=> d!19837 d!20603))

(declare-fun d!20605 () Bool)

(assert (=> d!20605 (= (apply!80 (+!101 lt!37483 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37485) (apply!80 lt!37483 lt!37485))))

(assert (=> d!20605 true))

(declare-fun _$34!827 () Unit!2322)

(assert (=> d!20605 (= (choose!481 lt!37483 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37485) _$34!827)))

(declare-fun bs!3490 () Bool)

(assert (= bs!3490 d!20605))

(assert (=> bs!3490 m!81989))

(assert (=> bs!3490 m!81989))

(assert (=> bs!3490 m!81991))

(assert (=> bs!3490 m!81995))

(assert (=> d!19837 d!20605))

(declare-fun d!20607 () Bool)

(declare-fun e!53556 () Bool)

(assert (=> d!20607 e!53556))

(declare-fun res!42608 () Bool)

(assert (=> d!20607 (=> res!42608 e!53556)))

(declare-fun lt!38352 () Bool)

(assert (=> d!20607 (= res!42608 (not lt!38352))))

(declare-fun lt!38351 () Bool)

(assert (=> d!20607 (= lt!38352 lt!38351)))

(declare-fun lt!38353 () Unit!2322)

(declare-fun e!53557 () Unit!2322)

(assert (=> d!20607 (= lt!38353 e!53557)))

(declare-fun c!13041 () Bool)

(assert (=> d!20607 (= c!13041 lt!38351)))

(assert (=> d!20607 (= lt!38351 (containsKey!142 (toList!730 lt!37624) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20607 (= (contains!739 lt!37624 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38352)))

(declare-fun b!82110 () Bool)

(declare-fun lt!38354 () Unit!2322)

(assert (=> b!82110 (= e!53557 lt!38354)))

(assert (=> b!82110 (= lt!38354 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37624) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> b!82110 (isDefined!91 (getValueByKey!139 (toList!730 lt!37624) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!82111 () Bool)

(declare-fun Unit!2391 () Unit!2322)

(assert (=> b!82111 (= e!53557 Unit!2391)))

(declare-fun b!82112 () Bool)

(assert (=> b!82112 (= e!53556 (isDefined!91 (getValueByKey!139 (toList!730 lt!37624) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (= (and d!20607 c!13041) b!82110))

(assert (= (and d!20607 (not c!13041)) b!82111))

(assert (= (and d!20607 (not res!42608)) b!82112))

(declare-fun m!84757 () Bool)

(assert (=> d!20607 m!84757))

(declare-fun m!84759 () Bool)

(assert (=> b!82110 m!84759))

(assert (=> b!82110 m!82369))

(assert (=> b!82110 m!82369))

(declare-fun m!84761 () Bool)

(assert (=> b!82110 m!84761))

(assert (=> b!82112 m!82369))

(assert (=> b!82112 m!82369))

(assert (=> b!82112 m!84761))

(assert (=> d!19775 d!20607))

(declare-fun b!82116 () Bool)

(declare-fun e!53559 () Option!145)

(assert (=> b!82116 (= e!53559 None!143)))

(declare-fun b!82115 () Bool)

(assert (=> b!82115 (= e!53559 (getValueByKey!139 (t!5156 lt!37622) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun c!13042 () Bool)

(declare-fun d!20609 () Bool)

(assert (=> d!20609 (= c!13042 (and ((_ is Cons!1493) lt!37622) (= (_1!1095 (h!2082 lt!37622)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun e!53558 () Option!145)

(assert (=> d!20609 (= (getValueByKey!139 lt!37622 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) e!53558)))

(declare-fun b!82113 () Bool)

(assert (=> b!82113 (= e!53558 (Some!144 (_2!1095 (h!2082 lt!37622))))))

(declare-fun b!82114 () Bool)

(assert (=> b!82114 (= e!53558 e!53559)))

(declare-fun c!13043 () Bool)

(assert (=> b!82114 (= c!13043 (and ((_ is Cons!1493) lt!37622) (not (= (_1!1095 (h!2082 lt!37622)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (= (and d!20609 c!13042) b!82113))

(assert (= (and d!20609 (not c!13042)) b!82114))

(assert (= (and b!82114 c!13043) b!82115))

(assert (= (and b!82114 (not c!13043)) b!82116))

(declare-fun m!84763 () Bool)

(assert (=> b!82115 m!84763))

(assert (=> d!19775 d!20609))

(declare-fun d!20611 () Bool)

(assert (=> d!20611 (= (getValueByKey!139 lt!37622 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun lt!38355 () Unit!2322)

(assert (=> d!20611 (= lt!38355 (choose!478 lt!37622 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun e!53560 () Bool)

(assert (=> d!20611 e!53560))

(declare-fun res!42609 () Bool)

(assert (=> d!20611 (=> (not res!42609) (not e!53560))))

(assert (=> d!20611 (= res!42609 (isStrictlySorted!283 lt!37622))))

(assert (=> d!20611 (= (lemmaContainsTupThenGetReturnValue!56 lt!37622 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38355)))

(declare-fun b!82117 () Bool)

(declare-fun res!42610 () Bool)

(assert (=> b!82117 (=> (not res!42610) (not e!53560))))

(assert (=> b!82117 (= res!42610 (containsKey!142 lt!37622 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!82118 () Bool)

(assert (=> b!82118 (= e!53560 (contains!742 lt!37622 (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (= (and d!20611 res!42609) b!82117))

(assert (= (and b!82117 res!42610) b!82118))

(assert (=> d!20611 m!82363))

(declare-fun m!84765 () Bool)

(assert (=> d!20611 m!84765))

(declare-fun m!84767 () Bool)

(assert (=> d!20611 m!84767))

(declare-fun m!84769 () Bool)

(assert (=> b!82117 m!84769))

(declare-fun m!84771 () Bool)

(assert (=> b!82118 m!84771))

(assert (=> d!19775 d!20611))

(declare-fun bm!7649 () Bool)

(declare-fun call!7653 () List!1497)

(declare-fun call!7654 () List!1497)

(assert (=> bm!7649 (= call!7653 call!7654)))

(declare-fun b!82119 () Bool)

(declare-fun e!53561 () Bool)

(declare-fun lt!38356 () List!1497)

(assert (=> b!82119 (= e!53561 (contains!742 lt!38356 (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!82120 () Bool)

(declare-fun e!53562 () List!1497)

(declare-fun e!53565 () List!1497)

(assert (=> b!82120 (= e!53562 e!53565)))

(declare-fun c!13047 () Bool)

(assert (=> b!82120 (= c!13047 (and ((_ is Cons!1493) (toList!730 lt!37215)) (= (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun bm!7650 () Bool)

(declare-fun call!7652 () List!1497)

(assert (=> bm!7650 (= call!7652 call!7653)))

(declare-fun d!20613 () Bool)

(assert (=> d!20613 e!53561))

(declare-fun res!42611 () Bool)

(assert (=> d!20613 (=> (not res!42611) (not e!53561))))

(assert (=> d!20613 (= res!42611 (isStrictlySorted!283 lt!38356))))

(assert (=> d!20613 (= lt!38356 e!53562)))

(declare-fun c!13044 () Bool)

(assert (=> d!20613 (= c!13044 (and ((_ is Cons!1493) (toList!730 lt!37215)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> d!20613 (isStrictlySorted!283 (toList!730 lt!37215))))

(assert (=> d!20613 (= (insertStrictlySorted!59 (toList!730 lt!37215) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) lt!38356)))

(declare-fun bm!7651 () Bool)

(declare-fun e!53563 () List!1497)

(assert (=> bm!7651 (= call!7654 ($colon$colon!69 e!53563 (ite c!13044 (h!2082 (toList!730 lt!37215)) (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(declare-fun c!13046 () Bool)

(assert (=> bm!7651 (= c!13046 c!13044)))

(declare-fun b!82121 () Bool)

(declare-fun e!53564 () List!1497)

(assert (=> b!82121 (= e!53564 call!7652)))

(declare-fun b!82122 () Bool)

(declare-fun res!42612 () Bool)

(assert (=> b!82122 (=> (not res!42612) (not e!53561))))

(assert (=> b!82122 (= res!42612 (containsKey!142 lt!38356 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!82123 () Bool)

(declare-fun c!13045 () Bool)

(assert (=> b!82123 (= c!13045 (and ((_ is Cons!1493) (toList!730 lt!37215)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(assert (=> b!82123 (= e!53565 e!53564)))

(declare-fun b!82124 () Bool)

(assert (=> b!82124 (= e!53563 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37215)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun b!82125 () Bool)

(assert (=> b!82125 (= e!53565 call!7653)))

(declare-fun b!82126 () Bool)

(assert (=> b!82126 (= e!53564 call!7652)))

(declare-fun b!82127 () Bool)

(assert (=> b!82127 (= e!53563 (ite c!13047 (t!5156 (toList!730 lt!37215)) (ite c!13045 (Cons!1493 (h!2082 (toList!730 lt!37215)) (t!5156 (toList!730 lt!37215))) Nil!1494)))))

(declare-fun b!82128 () Bool)

(assert (=> b!82128 (= e!53562 call!7654)))

(assert (= (and d!20613 c!13044) b!82128))

(assert (= (and d!20613 (not c!13044)) b!82120))

(assert (= (and b!82120 c!13047) b!82125))

(assert (= (and b!82120 (not c!13047)) b!82123))

(assert (= (and b!82123 c!13045) b!82126))

(assert (= (and b!82123 (not c!13045)) b!82121))

(assert (= (or b!82126 b!82121) bm!7650))

(assert (= (or b!82125 bm!7650) bm!7649))

(assert (= (or b!82128 bm!7649) bm!7651))

(assert (= (and bm!7651 c!13046) b!82124))

(assert (= (and bm!7651 (not c!13046)) b!82127))

(assert (= (and d!20613 res!42611) b!82122))

(assert (= (and b!82122 res!42612) b!82119))

(declare-fun m!84773 () Bool)

(assert (=> b!82124 m!84773))

(declare-fun m!84775 () Bool)

(assert (=> bm!7651 m!84775))

(declare-fun m!84777 () Bool)

(assert (=> b!82119 m!84777))

(declare-fun m!84779 () Bool)

(assert (=> d!20613 m!84779))

(assert (=> d!20613 m!82491))

(declare-fun m!84781 () Bool)

(assert (=> b!82122 m!84781))

(assert (=> d!19775 d!20613))

(assert (=> b!81040 d!20419))

(assert (=> b!81040 d!19959))

(declare-fun d!20615 () Bool)

(assert (=> d!20615 (isDefined!91 (getValueByKey!139 (toList!730 lt!37562) (_1!1095 lt!37212)))))

(declare-fun lt!38357 () Unit!2322)

(assert (=> d!20615 (= lt!38357 (choose!487 (toList!730 lt!37562) (_1!1095 lt!37212)))))

(declare-fun e!53566 () Bool)

(assert (=> d!20615 e!53566))

(declare-fun res!42613 () Bool)

(assert (=> d!20615 (=> (not res!42613) (not e!53566))))

(assert (=> d!20615 (= res!42613 (isStrictlySorted!283 (toList!730 lt!37562)))))

(assert (=> d!20615 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37562) (_1!1095 lt!37212)) lt!38357)))

(declare-fun b!82129 () Bool)

(assert (=> b!82129 (= e!53566 (containsKey!142 (toList!730 lt!37562) (_1!1095 lt!37212)))))

(assert (= (and d!20615 res!42613) b!82129))

(assert (=> d!20615 m!82189))

(assert (=> d!20615 m!82189))

(assert (=> d!20615 m!82471))

(declare-fun m!84783 () Bool)

(assert (=> d!20615 m!84783))

(declare-fun m!84785 () Bool)

(assert (=> d!20615 m!84785))

(assert (=> b!82129 m!82467))

(assert (=> b!80794 d!20615))

(declare-fun d!20617 () Bool)

(assert (=> d!20617 (= (isDefined!91 (getValueByKey!139 (toList!730 lt!37562) (_1!1095 lt!37212))) (not (isEmpty!337 (getValueByKey!139 (toList!730 lt!37562) (_1!1095 lt!37212)))))))

(declare-fun bs!3491 () Bool)

(assert (= bs!3491 d!20617))

(assert (=> bs!3491 m!82189))

(declare-fun m!84787 () Bool)

(assert (=> bs!3491 m!84787))

(assert (=> b!80794 d!20617))

(assert (=> b!80794 d!19881))

(declare-fun d!20619 () Bool)

(declare-fun res!42614 () Bool)

(declare-fun e!53567 () Bool)

(assert (=> d!20619 (=> res!42614 e!53567)))

(assert (=> d!20619 (= res!42614 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)))) (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))))) lt!37534)))))

(assert (=> d!20619 (= (containsKey!142 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))) lt!37534) e!53567)))

(declare-fun b!82130 () Bool)

(declare-fun e!53568 () Bool)

(assert (=> b!82130 (= e!53567 e!53568)))

(declare-fun res!42615 () Bool)

(assert (=> b!82130 (=> (not res!42615) (not e!53568))))

(assert (=> b!82130 (= res!42615 (and (or (not ((_ is Cons!1493) (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))))) (bvsle (_1!1095 (h!2082 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))))) lt!37534)) ((_ is Cons!1493) (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)))) (bvslt (_1!1095 (h!2082 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537))))) lt!37534)))))

(declare-fun b!82131 () Bool)

(assert (=> b!82131 (= e!53568 (containsKey!142 (t!5156 (toList!730 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)))) lt!37534))))

(assert (= (and d!20619 (not res!42614)) b!82130))

(assert (= (and b!82130 res!42615) b!82131))

(declare-fun m!84789 () Bool)

(assert (=> b!82131 m!84789))

(assert (=> d!19929 d!20619))

(declare-fun d!20621 () Bool)

(declare-fun e!53569 () Bool)

(assert (=> d!20621 e!53569))

(declare-fun res!42616 () Bool)

(assert (=> d!20621 (=> res!42616 e!53569)))

(declare-fun lt!38359 () Bool)

(assert (=> d!20621 (= res!42616 (not lt!38359))))

(declare-fun lt!38358 () Bool)

(assert (=> d!20621 (= lt!38359 lt!38358)))

(declare-fun lt!38360 () Unit!2322)

(declare-fun e!53570 () Unit!2322)

(assert (=> d!20621 (= lt!38360 e!53570)))

(declare-fun c!13048 () Bool)

(assert (=> d!20621 (= c!13048 lt!38358)))

(assert (=> d!20621 (= lt!38358 (containsKey!142 (toList!730 lt!37797) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!20621 (= (contains!739 lt!37797 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) lt!38359)))

(declare-fun b!82132 () Bool)

(declare-fun lt!38361 () Unit!2322)

(assert (=> b!82132 (= e!53570 lt!38361)))

(assert (=> b!82132 (= lt!38361 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37797) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82132 (isDefined!91 (getValueByKey!139 (toList!730 lt!37797) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82133 () Bool)

(declare-fun Unit!2392 () Unit!2322)

(assert (=> b!82133 (= e!53570 Unit!2392)))

(declare-fun b!82134 () Bool)

(assert (=> b!82134 (= e!53569 (isDefined!91 (getValueByKey!139 (toList!730 lt!37797) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!20621 c!13048) b!82132))

(assert (= (and d!20621 (not c!13048)) b!82133))

(assert (= (and d!20621 (not res!42616)) b!82134))

(assert (=> d!20621 m!82381))

(declare-fun m!84791 () Bool)

(assert (=> d!20621 m!84791))

(assert (=> b!82132 m!82381))

(declare-fun m!84793 () Bool)

(assert (=> b!82132 m!84793))

(assert (=> b!82132 m!82381))

(assert (=> b!82132 m!84349))

(assert (=> b!82132 m!84349))

(declare-fun m!84795 () Bool)

(assert (=> b!82132 m!84795))

(assert (=> b!82134 m!82381))

(assert (=> b!82134 m!84349))

(assert (=> b!82134 m!84349))

(assert (=> b!82134 m!84795))

(assert (=> b!80933 d!20621))

(assert (=> bm!7512 d!19779))

(declare-fun bm!7652 () Bool)

(declare-fun call!7656 () List!1497)

(declare-fun call!7657 () List!1497)

(assert (=> bm!7652 (= call!7656 call!7657)))

(declare-fun b!82135 () Bool)

(declare-fun e!53571 () Bool)

(declare-fun lt!38362 () List!1497)

(assert (=> b!82135 (= e!53571 (contains!742 lt!38362 (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(declare-fun b!82136 () Bool)

(declare-fun e!53572 () List!1497)

(declare-fun e!53575 () List!1497)

(assert (=> b!82136 (= e!53572 e!53575)))

(declare-fun c!13052 () Bool)

(assert (=> b!82136 (= c!13052 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37222))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37222)))) (_1!1095 lt!37212))))))

(declare-fun bm!7653 () Bool)

(declare-fun call!7655 () List!1497)

(assert (=> bm!7653 (= call!7655 call!7656)))

(declare-fun d!20623 () Bool)

(assert (=> d!20623 e!53571))

(declare-fun res!42617 () Bool)

(assert (=> d!20623 (=> (not res!42617) (not e!53571))))

(assert (=> d!20623 (= res!42617 (isStrictlySorted!283 lt!38362))))

(assert (=> d!20623 (= lt!38362 e!53572)))

(declare-fun c!13049 () Bool)

(assert (=> d!20623 (= c!13049 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37222))) (bvslt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37222)))) (_1!1095 lt!37212))))))

(assert (=> d!20623 (isStrictlySorted!283 (t!5156 (toList!730 lt!37222)))))

(assert (=> d!20623 (= (insertStrictlySorted!59 (t!5156 (toList!730 lt!37222)) (_1!1095 lt!37212) (_2!1095 lt!37212)) lt!38362)))

(declare-fun bm!7654 () Bool)

(declare-fun e!53573 () List!1497)

(assert (=> bm!7654 (= call!7657 ($colon$colon!69 e!53573 (ite c!13049 (h!2082 (t!5156 (toList!730 lt!37222))) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212)))))))

(declare-fun c!13051 () Bool)

(assert (=> bm!7654 (= c!13051 c!13049)))

(declare-fun b!82137 () Bool)

(declare-fun e!53574 () List!1497)

(assert (=> b!82137 (= e!53574 call!7655)))

(declare-fun b!82138 () Bool)

(declare-fun res!42618 () Bool)

(assert (=> b!82138 (=> (not res!42618) (not e!53571))))

(assert (=> b!82138 (= res!42618 (containsKey!142 lt!38362 (_1!1095 lt!37212)))))

(declare-fun b!82139 () Bool)

(declare-fun c!13050 () Bool)

(assert (=> b!82139 (= c!13050 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37222))) (bvsgt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37222)))) (_1!1095 lt!37212))))))

(assert (=> b!82139 (= e!53575 e!53574)))

(declare-fun b!82140 () Bool)

(assert (=> b!82140 (= e!53573 (insertStrictlySorted!59 (t!5156 (t!5156 (toList!730 lt!37222))) (_1!1095 lt!37212) (_2!1095 lt!37212)))))

(declare-fun b!82141 () Bool)

(assert (=> b!82141 (= e!53575 call!7656)))

(declare-fun b!82142 () Bool)

(assert (=> b!82142 (= e!53574 call!7655)))

(declare-fun b!82143 () Bool)

(assert (=> b!82143 (= e!53573 (ite c!13052 (t!5156 (t!5156 (toList!730 lt!37222))) (ite c!13050 (Cons!1493 (h!2082 (t!5156 (toList!730 lt!37222))) (t!5156 (t!5156 (toList!730 lt!37222)))) Nil!1494)))))

(declare-fun b!82144 () Bool)

(assert (=> b!82144 (= e!53572 call!7657)))

(assert (= (and d!20623 c!13049) b!82144))

(assert (= (and d!20623 (not c!13049)) b!82136))

(assert (= (and b!82136 c!13052) b!82141))

(assert (= (and b!82136 (not c!13052)) b!82139))

(assert (= (and b!82139 c!13050) b!82142))

(assert (= (and b!82139 (not c!13050)) b!82137))

(assert (= (or b!82142 b!82137) bm!7653))

(assert (= (or b!82141 bm!7653) bm!7652))

(assert (= (or b!82144 bm!7652) bm!7654))

(assert (= (and bm!7654 c!13051) b!82140))

(assert (= (and bm!7654 (not c!13051)) b!82143))

(assert (= (and d!20623 res!42617) b!82138))

(assert (= (and b!82138 res!42618) b!82135))

(declare-fun m!84797 () Bool)

(assert (=> b!82140 m!84797))

(declare-fun m!84799 () Bool)

(assert (=> bm!7654 m!84799))

(declare-fun m!84801 () Bool)

(assert (=> b!82135 m!84801))

(declare-fun m!84803 () Bool)

(assert (=> d!20623 m!84803))

(declare-fun m!84805 () Bool)

(assert (=> d!20623 m!84805))

(declare-fun m!84807 () Bool)

(assert (=> b!82138 m!84807))

(assert (=> b!80994 d!20623))

(declare-fun d!20625 () Bool)

(declare-fun res!42619 () Bool)

(declare-fun e!53576 () Bool)

(assert (=> d!20625 (=> res!42619 e!53576)))

(assert (=> d!20625 (= res!42619 (and ((_ is Cons!1493) lt!37548) (= (_1!1095 (h!2082 lt!37548)) (_1!1095 lt!37209))))))

(assert (=> d!20625 (= (containsKey!142 lt!37548 (_1!1095 lt!37209)) e!53576)))

(declare-fun b!82145 () Bool)

(declare-fun e!53577 () Bool)

(assert (=> b!82145 (= e!53576 e!53577)))

(declare-fun res!42620 () Bool)

(assert (=> b!82145 (=> (not res!42620) (not e!53577))))

(assert (=> b!82145 (= res!42620 (and (or (not ((_ is Cons!1493) lt!37548)) (bvsle (_1!1095 (h!2082 lt!37548)) (_1!1095 lt!37209))) ((_ is Cons!1493) lt!37548) (bvslt (_1!1095 (h!2082 lt!37548)) (_1!1095 lt!37209))))))

(declare-fun b!82146 () Bool)

(assert (=> b!82146 (= e!53577 (containsKey!142 (t!5156 lt!37548) (_1!1095 lt!37209)))))

(assert (= (and d!20625 (not res!42619)) b!82145))

(assert (= (and b!82145 res!42620) b!82146))

(declare-fun m!84809 () Bool)

(assert (=> b!82146 m!84809))

(assert (=> b!81045 d!20625))

(declare-fun d!20627 () Bool)

(assert (=> d!20627 (= ($colon$colon!69 e!52917 (ite c!12739 (h!2082 (toList!730 lt!37215)) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210)))) (Cons!1493 (ite c!12739 (h!2082 (toList!730 lt!37215)) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))) e!52917))))

(assert (=> bm!7545 d!20627))

(declare-fun d!20629 () Bool)

(assert (=> d!20629 (= (apply!80 lt!37912 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!139 (toList!730 lt!37912) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3492 () Bool)

(assert (= bs!3492 d!20629))

(assert (=> bs!3492 m!83439))

(assert (=> bs!3492 m!83439))

(declare-fun m!84811 () Bool)

(assert (=> bs!3492 m!84811))

(assert (=> b!81120 d!20629))

(assert (=> b!81173 d!20555))

(declare-fun d!20631 () Bool)

(assert (=> d!20631 (= (get!1191 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80784 d!20631))

(declare-fun d!20633 () Bool)

(declare-fun lt!38363 () Bool)

(assert (=> d!20633 (= lt!38363 (select (content!86 (toList!730 lt!37644)) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun e!53578 () Bool)

(assert (=> d!20633 (= lt!38363 e!53578)))

(declare-fun res!42622 () Bool)

(assert (=> d!20633 (=> (not res!42622) (not e!53578))))

(assert (=> d!20633 (= res!42622 ((_ is Cons!1493) (toList!730 lt!37644)))))

(assert (=> d!20633 (= (contains!742 (toList!730 lt!37644) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!38363)))

(declare-fun b!82147 () Bool)

(declare-fun e!53579 () Bool)

(assert (=> b!82147 (= e!53578 e!53579)))

(declare-fun res!42621 () Bool)

(assert (=> b!82147 (=> res!42621 e!53579)))

(assert (=> b!82147 (= res!42621 (= (h!2082 (toList!730 lt!37644)) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!82148 () Bool)

(assert (=> b!82148 (= e!53579 (contains!742 (t!5156 (toList!730 lt!37644)) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!20633 res!42622) b!82147))

(assert (= (and b!82147 (not res!42621)) b!82148))

(declare-fun m!84813 () Bool)

(assert (=> d!20633 m!84813))

(declare-fun m!84815 () Bool)

(assert (=> d!20633 m!84815))

(declare-fun m!84817 () Bool)

(assert (=> b!82148 m!84817))

(assert (=> b!80774 d!20633))

(assert (=> bm!7530 d!20263))

(declare-fun b!82152 () Bool)

(declare-fun e!53581 () Option!145)

(assert (=> b!82152 (= e!53581 None!143)))

(declare-fun b!82151 () Bool)

(assert (=> b!82151 (= e!53581 (getValueByKey!139 (t!5156 (toList!730 lt!37942)) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun c!13053 () Bool)

(declare-fun d!20635 () Bool)

(assert (=> d!20635 (= c!13053 (and ((_ is Cons!1493) (toList!730 lt!37942)) (= (_1!1095 (h!2082 (toList!730 lt!37942))) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(declare-fun e!53580 () Option!145)

(assert (=> d!20635 (= (getValueByKey!139 (toList!730 lt!37942) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) e!53580)))

(declare-fun b!82149 () Bool)

(assert (=> b!82149 (= e!53580 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37942)))))))

(declare-fun b!82150 () Bool)

(assert (=> b!82150 (= e!53580 e!53581)))

(declare-fun c!13054 () Bool)

(assert (=> b!82150 (= c!13054 (and ((_ is Cons!1493) (toList!730 lt!37942)) (not (= (_1!1095 (h!2082 (toList!730 lt!37942))) (_1!1095 (ite c!12568 (ite c!12577 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37223) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))))

(assert (= (and d!20635 c!13053) b!82149))

(assert (= (and d!20635 (not c!13053)) b!82150))

(assert (= (and b!82150 c!13054) b!82151))

(assert (= (and b!82150 (not c!13054)) b!82152))

(declare-fun m!84819 () Bool)

(assert (=> b!82151 m!84819))

(assert (=> b!81147 d!20635))

(declare-fun d!20637 () Bool)

(declare-fun e!53582 () Bool)

(assert (=> d!20637 e!53582))

(declare-fun res!42623 () Bool)

(assert (=> d!20637 (=> res!42623 e!53582)))

(declare-fun lt!38365 () Bool)

(assert (=> d!20637 (= res!42623 (not lt!38365))))

(declare-fun lt!38364 () Bool)

(assert (=> d!20637 (= lt!38365 lt!38364)))

(declare-fun lt!38366 () Unit!2322)

(declare-fun e!53583 () Unit!2322)

(assert (=> d!20637 (= lt!38366 e!53583)))

(declare-fun c!13055 () Bool)

(assert (=> d!20637 (= c!13055 lt!38364)))

(assert (=> d!20637 (= lt!38364 (containsKey!142 (toList!730 lt!37606) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20637 (= (contains!739 lt!37606 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38365)))

(declare-fun b!82153 () Bool)

(declare-fun lt!38367 () Unit!2322)

(assert (=> b!82153 (= e!53583 lt!38367)))

(assert (=> b!82153 (= lt!38367 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37606) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82153 (isDefined!91 (getValueByKey!139 (toList!730 lt!37606) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82154 () Bool)

(declare-fun Unit!2393 () Unit!2322)

(assert (=> b!82154 (= e!53583 Unit!2393)))

(declare-fun b!82155 () Bool)

(assert (=> b!82155 (= e!53582 (isDefined!91 (getValueByKey!139 (toList!730 lt!37606) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20637 c!13055) b!82153))

(assert (= (and d!20637 (not c!13055)) b!82154))

(assert (= (and d!20637 (not res!42623)) b!82155))

(declare-fun m!84821 () Bool)

(assert (=> d!20637 m!84821))

(declare-fun m!84823 () Bool)

(assert (=> b!82153 m!84823))

(declare-fun m!84825 () Bool)

(assert (=> b!82153 m!84825))

(assert (=> b!82153 m!84825))

(declare-fun m!84827 () Bool)

(assert (=> b!82153 m!84827))

(assert (=> b!82155 m!84825))

(assert (=> b!82155 m!84825))

(assert (=> b!82155 m!84827))

(assert (=> b!80743 d!20637))

(assert (=> d!19945 d!20023))

(declare-fun d!20639 () Bool)

(declare-fun res!42624 () Bool)

(declare-fun e!53584 () Bool)

(assert (=> d!20639 (=> res!42624 e!53584)))

(assert (=> d!20639 (= res!42624 (= (select (arr!1892 (_keys!3956 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!20639 (= (arrayContainsKey!0 (_keys!3956 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!53584)))

(declare-fun b!82156 () Bool)

(declare-fun e!53585 () Bool)

(assert (=> b!82156 (= e!53584 e!53585)))

(declare-fun res!42625 () Bool)

(assert (=> b!82156 (=> (not res!42625) (not e!53585))))

(assert (=> b!82156 (= res!42625 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!82157 () Bool)

(assert (=> b!82157 (= e!53585 (arrayContainsKey!0 (_keys!3956 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!20639 (not res!42624)) b!82156))

(assert (= (and b!82156 res!42625) b!82157))

(assert (=> d!20639 m!83525))

(assert (=> b!82157 m!81737))

(declare-fun m!84829 () Bool)

(assert (=> b!82157 m!84829))

(assert (=> b!80766 d!20639))

(declare-fun b!82161 () Bool)

(declare-fun e!53587 () Option!145)

(assert (=> b!82161 (= e!53587 None!143)))

(declare-fun b!82160 () Bool)

(assert (=> b!82160 (= e!53587 (getValueByKey!139 (t!5156 (toList!730 lt!37624)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun d!20641 () Bool)

(declare-fun c!13056 () Bool)

(assert (=> d!20641 (= c!13056 (and ((_ is Cons!1493) (toList!730 lt!37624)) (= (_1!1095 (h!2082 (toList!730 lt!37624))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun e!53586 () Option!145)

(assert (=> d!20641 (= (getValueByKey!139 (toList!730 lt!37624) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) e!53586)))

(declare-fun b!82158 () Bool)

(assert (=> b!82158 (= e!53586 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37624)))))))

(declare-fun b!82159 () Bool)

(assert (=> b!82159 (= e!53586 e!53587)))

(declare-fun c!13057 () Bool)

(assert (=> b!82159 (= c!13057 (and ((_ is Cons!1493) (toList!730 lt!37624)) (not (= (_1!1095 (h!2082 (toList!730 lt!37624))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))))

(assert (= (and d!20641 c!13056) b!82158))

(assert (= (and d!20641 (not c!13056)) b!82159))

(assert (= (and b!82159 c!13057) b!82160))

(assert (= (and b!82159 (not c!13057)) b!82161))

(declare-fun m!84831 () Bool)

(assert (=> b!82160 m!84831))

(assert (=> b!80760 d!20641))

(declare-fun d!20643 () Bool)

(assert (=> d!20643 (isDefined!91 (getValueByKey!139 (toList!730 lt!37546) (_1!1095 lt!37210)))))

(declare-fun lt!38368 () Unit!2322)

(assert (=> d!20643 (= lt!38368 (choose!487 (toList!730 lt!37546) (_1!1095 lt!37210)))))

(declare-fun e!53588 () Bool)

(assert (=> d!20643 e!53588))

(declare-fun res!42626 () Bool)

(assert (=> d!20643 (=> (not res!42626) (not e!53588))))

(assert (=> d!20643 (= res!42626 (isStrictlySorted!283 (toList!730 lt!37546)))))

(assert (=> d!20643 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37546) (_1!1095 lt!37210)) lt!38368)))

(declare-fun b!82162 () Bool)

(assert (=> b!82162 (= e!53588 (containsKey!142 (toList!730 lt!37546) (_1!1095 lt!37210)))))

(assert (= (and d!20643 res!42626) b!82162))

(assert (=> d!20643 m!82141))

(assert (=> d!20643 m!82141))

(assert (=> d!20643 m!82857))

(declare-fun m!84833 () Bool)

(assert (=> d!20643 m!84833))

(declare-fun m!84835 () Bool)

(assert (=> d!20643 m!84835))

(assert (=> b!82162 m!82853))

(assert (=> b!80999 d!20643))

(assert (=> b!80999 d!19987))

(assert (=> b!80999 d!19951))

(declare-fun d!20645 () Bool)

(declare-fun e!53589 () Bool)

(assert (=> d!20645 e!53589))

(declare-fun res!42627 () Bool)

(assert (=> d!20645 (=> res!42627 e!53589)))

(declare-fun lt!38370 () Bool)

(assert (=> d!20645 (= res!42627 (not lt!38370))))

(declare-fun lt!38369 () Bool)

(assert (=> d!20645 (= lt!38370 lt!38369)))

(declare-fun lt!38371 () Unit!2322)

(declare-fun e!53590 () Unit!2322)

(assert (=> d!20645 (= lt!38371 e!53590)))

(declare-fun c!13058 () Bool)

(assert (=> d!20645 (= c!13058 lt!38369)))

(assert (=> d!20645 (= lt!38369 (containsKey!142 (toList!730 lt!37763) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!20645 (= (contains!739 lt!37763 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38370)))

(declare-fun b!82163 () Bool)

(declare-fun lt!38372 () Unit!2322)

(assert (=> b!82163 (= e!53590 lt!38372)))

(assert (=> b!82163 (= lt!38372 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37763) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> b!82163 (isDefined!91 (getValueByKey!139 (toList!730 lt!37763) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82164 () Bool)

(declare-fun Unit!2394 () Unit!2322)

(assert (=> b!82164 (= e!53590 Unit!2394)))

(declare-fun b!82165 () Bool)

(assert (=> b!82165 (= e!53589 (isDefined!91 (getValueByKey!139 (toList!730 lt!37763) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20645 c!13058) b!82163))

(assert (= (and d!20645 (not c!13058)) b!82164))

(assert (= (and d!20645 (not res!42627)) b!82165))

(declare-fun m!84837 () Bool)

(assert (=> d!20645 m!84837))

(declare-fun m!84839 () Bool)

(assert (=> b!82163 m!84839))

(assert (=> b!82163 m!82609))

(assert (=> b!82163 m!82609))

(declare-fun m!84841 () Bool)

(assert (=> b!82163 m!84841))

(assert (=> b!82165 m!82609))

(assert (=> b!82165 m!82609))

(assert (=> b!82165 m!84841))

(assert (=> d!19839 d!20645))

(declare-fun b!82169 () Bool)

(declare-fun e!53592 () Option!145)

(assert (=> b!82169 (= e!53592 None!143)))

(declare-fun b!82168 () Bool)

(assert (=> b!82168 (= e!53592 (getValueByKey!139 (t!5156 lt!37761) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20647 () Bool)

(declare-fun c!13059 () Bool)

(assert (=> d!20647 (= c!13059 (and ((_ is Cons!1493) lt!37761) (= (_1!1095 (h!2082 lt!37761)) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53591 () Option!145)

(assert (=> d!20647 (= (getValueByKey!139 lt!37761 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53591)))

(declare-fun b!82166 () Bool)

(assert (=> b!82166 (= e!53591 (Some!144 (_2!1095 (h!2082 lt!37761))))))

(declare-fun b!82167 () Bool)

(assert (=> b!82167 (= e!53591 e!53592)))

(declare-fun c!13060 () Bool)

(assert (=> b!82167 (= c!13060 (and ((_ is Cons!1493) lt!37761) (not (= (_1!1095 (h!2082 lt!37761)) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20647 c!13059) b!82166))

(assert (= (and d!20647 (not c!13059)) b!82167))

(assert (= (and b!82167 c!13060) b!82168))

(assert (= (and b!82167 (not c!13060)) b!82169))

(declare-fun m!84843 () Bool)

(assert (=> b!82168 m!84843))

(assert (=> d!19839 d!20647))

(declare-fun d!20649 () Bool)

(assert (=> d!20649 (= (getValueByKey!139 lt!37761 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!38373 () Unit!2322)

(assert (=> d!20649 (= lt!38373 (choose!478 lt!37761 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun e!53593 () Bool)

(assert (=> d!20649 e!53593))

(declare-fun res!42628 () Bool)

(assert (=> d!20649 (=> (not res!42628) (not e!53593))))

(assert (=> d!20649 (= res!42628 (isStrictlySorted!283 lt!37761))))

(assert (=> d!20649 (= (lemmaContainsTupThenGetReturnValue!56 lt!37761 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38373)))

(declare-fun b!82170 () Bool)

(declare-fun res!42629 () Bool)

(assert (=> b!82170 (=> (not res!42629) (not e!53593))))

(assert (=> b!82170 (= res!42629 (containsKey!142 lt!37761 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82171 () Bool)

(assert (=> b!82171 (= e!53593 (contains!742 lt!37761 (tuple2!2169 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20649 res!42628) b!82170))

(assert (= (and b!82170 res!42629) b!82171))

(assert (=> d!20649 m!82603))

(declare-fun m!84845 () Bool)

(assert (=> d!20649 m!84845))

(declare-fun m!84847 () Bool)

(assert (=> d!20649 m!84847))

(declare-fun m!84849 () Bool)

(assert (=> b!82170 m!84849))

(declare-fun m!84851 () Bool)

(assert (=> b!82171 m!84851))

(assert (=> d!19839 d!20649))

(declare-fun bm!7655 () Bool)

(declare-fun call!7659 () List!1497)

(declare-fun call!7660 () List!1497)

(assert (=> bm!7655 (= call!7659 call!7660)))

(declare-fun b!82172 () Bool)

(declare-fun e!53594 () Bool)

(declare-fun lt!38374 () List!1497)

(assert (=> b!82172 (= e!53594 (contains!742 lt!38374 (tuple2!2169 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!82173 () Bool)

(declare-fun e!53595 () List!1497)

(declare-fun e!53598 () List!1497)

(assert (=> b!82173 (= e!53595 e!53598)))

(declare-fun c!13064 () Bool)

(assert (=> b!82173 (= c!13064 (and ((_ is Cons!1493) (toList!730 lt!37483)) (= (_1!1095 (h!2082 (toList!730 lt!37483))) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun bm!7656 () Bool)

(declare-fun call!7658 () List!1497)

(assert (=> bm!7656 (= call!7658 call!7659)))

(declare-fun d!20651 () Bool)

(assert (=> d!20651 e!53594))

(declare-fun res!42630 () Bool)

(assert (=> d!20651 (=> (not res!42630) (not e!53594))))

(assert (=> d!20651 (= res!42630 (isStrictlySorted!283 lt!38374))))

(assert (=> d!20651 (= lt!38374 e!53595)))

(declare-fun c!13061 () Bool)

(assert (=> d!20651 (= c!13061 (and ((_ is Cons!1493) (toList!730 lt!37483)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37483))) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!20651 (isStrictlySorted!283 (toList!730 lt!37483))))

(assert (=> d!20651 (= (insertStrictlySorted!59 (toList!730 lt!37483) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38374)))

(declare-fun bm!7657 () Bool)

(declare-fun e!53596 () List!1497)

(assert (=> bm!7657 (= call!7660 ($colon$colon!69 e!53596 (ite c!13061 (h!2082 (toList!730 lt!37483)) (tuple2!2169 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun c!13063 () Bool)

(assert (=> bm!7657 (= c!13063 c!13061)))

(declare-fun b!82174 () Bool)

(declare-fun e!53597 () List!1497)

(assert (=> b!82174 (= e!53597 call!7658)))

(declare-fun b!82175 () Bool)

(declare-fun res!42631 () Bool)

(assert (=> b!82175 (=> (not res!42631) (not e!53594))))

(assert (=> b!82175 (= res!42631 (containsKey!142 lt!38374 (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun c!13062 () Bool)

(declare-fun b!82176 () Bool)

(assert (=> b!82176 (= c!13062 (and ((_ is Cons!1493) (toList!730 lt!37483)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37483))) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> b!82176 (= e!53598 e!53597)))

(declare-fun b!82177 () Bool)

(assert (=> b!82177 (= e!53596 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37483)) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82178 () Bool)

(assert (=> b!82178 (= e!53598 call!7659)))

(declare-fun b!82179 () Bool)

(assert (=> b!82179 (= e!53597 call!7658)))

(declare-fun b!82180 () Bool)

(assert (=> b!82180 (= e!53596 (ite c!13064 (t!5156 (toList!730 lt!37483)) (ite c!13062 (Cons!1493 (h!2082 (toList!730 lt!37483)) (t!5156 (toList!730 lt!37483))) Nil!1494)))))

(declare-fun b!82181 () Bool)

(assert (=> b!82181 (= e!53595 call!7660)))

(assert (= (and d!20651 c!13061) b!82181))

(assert (= (and d!20651 (not c!13061)) b!82173))

(assert (= (and b!82173 c!13064) b!82178))

(assert (= (and b!82173 (not c!13064)) b!82176))

(assert (= (and b!82176 c!13062) b!82179))

(assert (= (and b!82176 (not c!13062)) b!82174))

(assert (= (or b!82179 b!82174) bm!7656))

(assert (= (or b!82178 bm!7656) bm!7655))

(assert (= (or b!82181 bm!7655) bm!7657))

(assert (= (and bm!7657 c!13063) b!82177))

(assert (= (and bm!7657 (not c!13063)) b!82180))

(assert (= (and d!20651 res!42630) b!82175))

(assert (= (and b!82175 res!42631) b!82172))

(declare-fun m!84853 () Bool)

(assert (=> b!82177 m!84853))

(declare-fun m!84855 () Bool)

(assert (=> bm!7657 m!84855))

(declare-fun m!84857 () Bool)

(assert (=> b!82172 m!84857))

(declare-fun m!84859 () Bool)

(assert (=> d!20651 m!84859))

(declare-fun m!84861 () Bool)

(assert (=> d!20651 m!84861))

(declare-fun m!84863 () Bool)

(assert (=> b!82175 m!84863))

(assert (=> d!19839 d!20651))

(declare-fun b!82182 () Bool)

(declare-fun e!53599 () (_ BitVec 32))

(declare-fun call!7661 () (_ BitVec 32))

(assert (=> b!82182 (= e!53599 (bvadd #b00000000000000000000000000000001 call!7661))))

(declare-fun b!82183 () Bool)

(assert (=> b!82183 (= e!53599 call!7661)))

(declare-fun bm!7658 () Bool)

(assert (=> bm!7658 (= call!7661 (arrayCountValidKeys!0 (_keys!3956 (_2!1094 lt!37425)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2134 (_keys!3956 (_2!1094 lt!37425)))))))

(declare-fun d!20653 () Bool)

(declare-fun lt!38375 () (_ BitVec 32))

(assert (=> d!20653 (and (bvsge lt!38375 #b00000000000000000000000000000000) (bvsle lt!38375 (bvsub (size!2134 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000)))))

(declare-fun e!53600 () (_ BitVec 32))

(assert (=> d!20653 (= lt!38375 e!53600)))

(declare-fun c!13065 () Bool)

(assert (=> d!20653 (= c!13065 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37425)))))))

(assert (=> d!20653 (and (bvsle #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37425)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2134 (_keys!3956 (_2!1094 lt!37425))) (size!2134 (_keys!3956 (_2!1094 lt!37425)))))))

(assert (=> d!20653 (= (arrayCountValidKeys!0 (_keys!3956 (_2!1094 lt!37425)) #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37425)))) lt!38375)))

(declare-fun b!82184 () Bool)

(assert (=> b!82184 (= e!53600 #b00000000000000000000000000000000)))

(declare-fun b!82185 () Bool)

(assert (=> b!82185 (= e!53600 e!53599)))

(declare-fun c!13066 () Bool)

(assert (=> b!82185 (= c!13066 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000)))))

(assert (= (and d!20653 c!13065) b!82184))

(assert (= (and d!20653 (not c!13065)) b!82185))

(assert (= (and b!82185 c!13066) b!82182))

(assert (= (and b!82185 (not c!13066)) b!82183))

(assert (= (or b!82182 b!82183) bm!7658))

(declare-fun m!84865 () Bool)

(assert (=> bm!7658 m!84865))

(assert (=> b!82185 m!83193))

(assert (=> b!82185 m!83193))

(assert (=> b!82185 m!83195))

(assert (=> b!80726 d!20653))

(assert (=> b!80906 d!20283))

(assert (=> b!81090 d!20493))

(assert (=> b!81090 d!20495))

(declare-fun d!20655 () Bool)

(declare-fun res!42632 () Bool)

(declare-fun e!53601 () Bool)

(assert (=> d!20655 (=> res!42632 e!53601)))

(assert (=> d!20655 (= res!42632 (and ((_ is Cons!1493) (toList!730 lt!37476)) (= (_1!1095 (h!2082 (toList!730 lt!37476))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!20655 (= (containsKey!142 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53601)))

(declare-fun b!82186 () Bool)

(declare-fun e!53602 () Bool)

(assert (=> b!82186 (= e!53601 e!53602)))

(declare-fun res!42633 () Bool)

(assert (=> b!82186 (=> (not res!42633) (not e!53602))))

(assert (=> b!82186 (= res!42633 (and (or (not ((_ is Cons!1493) (toList!730 lt!37476))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37476))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1493) (toList!730 lt!37476)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37476))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!82187 () Bool)

(assert (=> b!82187 (= e!53602 (containsKey!142 (t!5156 (toList!730 lt!37476)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20655 (not res!42632)) b!82186))

(assert (= (and b!82186 res!42633) b!82187))

(assert (=> b!82187 m!81993))

(declare-fun m!84867 () Bool)

(assert (=> b!82187 m!84867))

(assert (=> d!19947 d!20655))

(declare-fun d!20657 () Bool)

(assert (=> d!20657 (isDefined!91 (getValueByKey!139 (toList!730 lt!37558) (_1!1095 lt!37210)))))

(declare-fun lt!38376 () Unit!2322)

(assert (=> d!20657 (= lt!38376 (choose!487 (toList!730 lt!37558) (_1!1095 lt!37210)))))

(declare-fun e!53603 () Bool)

(assert (=> d!20657 e!53603))

(declare-fun res!42634 () Bool)

(assert (=> d!20657 (=> (not res!42634) (not e!53603))))

(assert (=> d!20657 (= res!42634 (isStrictlySorted!283 (toList!730 lt!37558)))))

(assert (=> d!20657 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37558) (_1!1095 lt!37210)) lt!38376)))

(declare-fun b!82188 () Bool)

(assert (=> b!82188 (= e!53603 (containsKey!142 (toList!730 lt!37558) (_1!1095 lt!37210)))))

(assert (= (and d!20657 res!42634) b!82188))

(assert (=> d!20657 m!82177))

(assert (=> d!20657 m!82177))

(assert (=> d!20657 m!83007))

(declare-fun m!84869 () Bool)

(assert (=> d!20657 m!84869))

(declare-fun m!84871 () Bool)

(assert (=> d!20657 m!84871))

(assert (=> b!82188 m!83003))

(assert (=> b!81093 d!20657))

(assert (=> b!81093 d!19981))

(assert (=> b!81093 d!19971))

(declare-fun d!20659 () Bool)

(declare-fun res!42635 () Bool)

(declare-fun e!53604 () Bool)

(assert (=> d!20659 (=> res!42635 e!53604)))

(assert (=> d!20659 (= res!42635 (and ((_ is Cons!1493) lt!37552) (= (_1!1095 (h!2082 lt!37552)) (_1!1095 lt!37210))))))

(assert (=> d!20659 (= (containsKey!142 lt!37552 (_1!1095 lt!37210)) e!53604)))

(declare-fun b!82189 () Bool)

(declare-fun e!53605 () Bool)

(assert (=> b!82189 (= e!53604 e!53605)))

(declare-fun res!42636 () Bool)

(assert (=> b!82189 (=> (not res!42636) (not e!53605))))

(assert (=> b!82189 (= res!42636 (and (or (not ((_ is Cons!1493) lt!37552)) (bvsle (_1!1095 (h!2082 lt!37552)) (_1!1095 lt!37210))) ((_ is Cons!1493) lt!37552) (bvslt (_1!1095 (h!2082 lt!37552)) (_1!1095 lt!37210))))))

(declare-fun b!82190 () Bool)

(assert (=> b!82190 (= e!53605 (containsKey!142 (t!5156 lt!37552) (_1!1095 lt!37210)))))

(assert (= (and d!20659 (not res!42635)) b!82189))

(assert (= (and b!82189 res!42636) b!82190))

(declare-fun m!84873 () Bool)

(assert (=> b!82190 m!84873))

(assert (=> b!81070 d!20659))

(declare-fun d!20661 () Bool)

(assert (=> d!20661 (isDefined!91 (getValueByKey!139 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!38377 () Unit!2322)

(assert (=> d!20661 (= lt!38377 (choose!487 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!53606 () Bool)

(assert (=> d!20661 e!53606))

(declare-fun res!42637 () Bool)

(assert (=> d!20661 (=> (not res!42637) (not e!53606))))

(assert (=> d!20661 (= res!42637 (isStrictlySorted!283 (toList!730 lt!37536)))))

(assert (=> d!20661 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!38377)))

(declare-fun b!82191 () Bool)

(assert (=> b!82191 (= e!53606 (containsKey!142 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20661 res!42637) b!82191))

(assert (=> d!20661 m!81993))

(assert (=> d!20661 m!82257))

(assert (=> d!20661 m!82257))

(assert (=> d!20661 m!82259))

(assert (=> d!20661 m!81993))

(declare-fun m!84875 () Bool)

(assert (=> d!20661 m!84875))

(assert (=> d!20661 m!83819))

(assert (=> b!82191 m!81993))

(assert (=> b!82191 m!82253))

(assert (=> b!80723 d!20661))

(assert (=> b!80723 d!20029))

(assert (=> b!80723 d!20001))

(assert (=> b!80942 d!20485))

(assert (=> b!80942 d!20487))

(declare-fun d!20663 () Bool)

(assert (=> d!20663 (= (apply!80 lt!37912 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (get!1192 (getValueByKey!139 (toList!730 lt!37912) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3493 () Bool)

(assert (= bs!3493 d!20663))

(assert (=> bs!3493 m!82381))

(assert (=> bs!3493 m!83187))

(assert (=> bs!3493 m!83187))

(declare-fun m!84877 () Bool)

(assert (=> bs!3493 m!84877))

(assert (=> b!81128 d!20663))

(declare-fun d!20665 () Bool)

(declare-fun c!13067 () Bool)

(assert (=> d!20665 (= c!13067 ((_ is ValueCellFull!914) (select (arr!1893 (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403)) #b00000000000000000000000000000000)))))

(declare-fun e!53607 () V!3001)

(assert (=> d!20665 (= (get!1189 (select (arr!1893 (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53607)))

(declare-fun b!82192 () Bool)

(assert (=> b!82192 (= e!53607 (get!1190 (select (arr!1893 (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82193 () Bool)

(assert (=> b!82193 (= e!53607 (get!1191 (select (arr!1893 (ite (or c!12568 c!12578) (_values!2275 newMap!16) lt!37403)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20665 c!13067) b!82192))

(assert (= (and d!20665 (not c!13067)) b!82193))

(assert (=> b!82192 m!83073))

(assert (=> b!82192 m!82743))

(declare-fun m!84879 () Bool)

(assert (=> b!82192 m!84879))

(assert (=> b!82193 m!83073))

(assert (=> b!82193 m!82743))

(declare-fun m!84881 () Bool)

(assert (=> b!82193 m!84881))

(assert (=> b!81128 d!20665))

(declare-fun lt!38378 () Bool)

(declare-fun d!20667 () Bool)

(assert (=> d!20667 (= lt!38378 (select (content!86 (toList!730 lt!37892)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!53608 () Bool)

(assert (=> d!20667 (= lt!38378 e!53608)))

(declare-fun res!42639 () Bool)

(assert (=> d!20667 (=> (not res!42639) (not e!53608))))

(assert (=> d!20667 (= res!42639 ((_ is Cons!1493) (toList!730 lt!37892)))))

(assert (=> d!20667 (= (contains!742 (toList!730 lt!37892) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!38378)))

(declare-fun b!82194 () Bool)

(declare-fun e!53609 () Bool)

(assert (=> b!82194 (= e!53608 e!53609)))

(declare-fun res!42638 () Bool)

(assert (=> b!82194 (=> res!42638 e!53609)))

(assert (=> b!82194 (= res!42638 (= (h!2082 (toList!730 lt!37892)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!82195 () Bool)

(assert (=> b!82195 (= e!53609 (contains!742 (t!5156 (toList!730 lt!37892)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!20667 res!42639) b!82194))

(assert (= (and b!82194 (not res!42638)) b!82195))

(declare-fun m!84883 () Bool)

(assert (=> d!20667 m!84883))

(declare-fun m!84885 () Bool)

(assert (=> d!20667 m!84885))

(declare-fun m!84887 () Bool)

(assert (=> b!82195 m!84887))

(assert (=> b!81087 d!20667))

(declare-fun d!20669 () Bool)

(declare-fun e!53610 () Bool)

(assert (=> d!20669 e!53610))

(declare-fun res!42640 () Bool)

(assert (=> d!20669 (=> res!42640 e!53610)))

(declare-fun lt!38380 () Bool)

(assert (=> d!20669 (= res!42640 (not lt!38380))))

(declare-fun lt!38379 () Bool)

(assert (=> d!20669 (= lt!38380 lt!38379)))

(declare-fun lt!38381 () Unit!2322)

(declare-fun e!53611 () Unit!2322)

(assert (=> d!20669 (= lt!38381 e!53611)))

(declare-fun c!13068 () Bool)

(assert (=> d!20669 (= c!13068 lt!38379)))

(assert (=> d!20669 (= lt!38379 (containsKey!142 (toList!730 lt!37569) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!20669 (= (contains!739 lt!37569 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38380)))

(declare-fun b!82196 () Bool)

(declare-fun lt!38382 () Unit!2322)

(assert (=> b!82196 (= e!53611 lt!38382)))

(assert (=> b!82196 (= lt!38382 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37569) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> b!82196 (isDefined!91 (getValueByKey!139 (toList!730 lt!37569) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82197 () Bool)

(declare-fun Unit!2395 () Unit!2322)

(assert (=> b!82197 (= e!53611 Unit!2395)))

(declare-fun b!82198 () Bool)

(assert (=> b!82198 (= e!53610 (isDefined!91 (getValueByKey!139 (toList!730 lt!37569) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20669 c!13068) b!82196))

(assert (= (and d!20669 (not c!13068)) b!82197))

(assert (= (and d!20669 (not res!42640)) b!82198))

(declare-fun m!84889 () Bool)

(assert (=> d!20669 m!84889))

(declare-fun m!84891 () Bool)

(assert (=> b!82196 m!84891))

(assert (=> b!82196 m!82211))

(assert (=> b!82196 m!82211))

(declare-fun m!84893 () Bool)

(assert (=> b!82196 m!84893))

(assert (=> b!82198 m!82211))

(assert (=> b!82198 m!82211))

(assert (=> b!82198 m!84893))

(assert (=> d!19735 d!20669))

(declare-fun b!82202 () Bool)

(declare-fun e!53613 () Option!145)

(assert (=> b!82202 (= e!53613 None!143)))

(declare-fun b!82201 () Bool)

(assert (=> b!82201 (= e!53613 (getValueByKey!139 (t!5156 lt!37567) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20671 () Bool)

(declare-fun c!13069 () Bool)

(assert (=> d!20671 (= c!13069 (and ((_ is Cons!1493) lt!37567) (= (_1!1095 (h!2082 lt!37567)) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53612 () Option!145)

(assert (=> d!20671 (= (getValueByKey!139 lt!37567 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53612)))

(declare-fun b!82199 () Bool)

(assert (=> b!82199 (= e!53612 (Some!144 (_2!1095 (h!2082 lt!37567))))))

(declare-fun b!82200 () Bool)

(assert (=> b!82200 (= e!53612 e!53613)))

(declare-fun c!13070 () Bool)

(assert (=> b!82200 (= c!13070 (and ((_ is Cons!1493) lt!37567) (not (= (_1!1095 (h!2082 lt!37567)) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20671 c!13069) b!82199))

(assert (= (and d!20671 (not c!13069)) b!82200))

(assert (= (and b!82200 c!13070) b!82201))

(assert (= (and b!82200 (not c!13070)) b!82202))

(declare-fun m!84895 () Bool)

(assert (=> b!82201 m!84895))

(assert (=> d!19735 d!20671))

(declare-fun d!20673 () Bool)

(assert (=> d!20673 (= (getValueByKey!139 lt!37567 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!38383 () Unit!2322)

(assert (=> d!20673 (= lt!38383 (choose!478 lt!37567 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun e!53614 () Bool)

(assert (=> d!20673 e!53614))

(declare-fun res!42641 () Bool)

(assert (=> d!20673 (=> (not res!42641) (not e!53614))))

(assert (=> d!20673 (= res!42641 (isStrictlySorted!283 lt!37567))))

(assert (=> d!20673 (= (lemmaContainsTupThenGetReturnValue!56 lt!37567 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38383)))

(declare-fun b!82203 () Bool)

(declare-fun res!42642 () Bool)

(assert (=> b!82203 (=> (not res!42642) (not e!53614))))

(assert (=> b!82203 (= res!42642 (containsKey!142 lt!37567 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82204 () Bool)

(assert (=> b!82204 (= e!53614 (contains!742 lt!37567 (tuple2!2169 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20673 res!42641) b!82203))

(assert (= (and b!82203 res!42642) b!82204))

(assert (=> d!20673 m!82205))

(declare-fun m!84897 () Bool)

(assert (=> d!20673 m!84897))

(declare-fun m!84899 () Bool)

(assert (=> d!20673 m!84899))

(declare-fun m!84901 () Bool)

(assert (=> b!82203 m!84901))

(declare-fun m!84903 () Bool)

(assert (=> b!82204 m!84903))

(assert (=> d!19735 d!20673))

(declare-fun bm!7659 () Bool)

(declare-fun call!7663 () List!1497)

(declare-fun call!7664 () List!1497)

(assert (=> bm!7659 (= call!7663 call!7664)))

(declare-fun b!82205 () Bool)

(declare-fun e!53615 () Bool)

(declare-fun lt!38384 () List!1497)

(assert (=> b!82205 (= e!53615 (contains!742 lt!38384 (tuple2!2169 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!82206 () Bool)

(declare-fun e!53616 () List!1497)

(declare-fun e!53619 () List!1497)

(assert (=> b!82206 (= e!53616 e!53619)))

(declare-fun c!13074 () Bool)

(assert (=> b!82206 (= c!13074 (and ((_ is Cons!1493) (toList!730 call!7474)) (= (_1!1095 (h!2082 (toList!730 call!7474))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun bm!7660 () Bool)

(declare-fun call!7662 () List!1497)

(assert (=> bm!7660 (= call!7662 call!7663)))

(declare-fun d!20675 () Bool)

(assert (=> d!20675 e!53615))

(declare-fun res!42643 () Bool)

(assert (=> d!20675 (=> (not res!42643) (not e!53615))))

(assert (=> d!20675 (= res!42643 (isStrictlySorted!283 lt!38384))))

(assert (=> d!20675 (= lt!38384 e!53616)))

(declare-fun c!13071 () Bool)

(assert (=> d!20675 (= c!13071 (and ((_ is Cons!1493) (toList!730 call!7474)) (bvslt (_1!1095 (h!2082 (toList!730 call!7474))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!20675 (isStrictlySorted!283 (toList!730 call!7474))))

(assert (=> d!20675 (= (insertStrictlySorted!59 (toList!730 call!7474) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38384)))

(declare-fun e!53617 () List!1497)

(declare-fun bm!7661 () Bool)

(assert (=> bm!7661 (= call!7664 ($colon$colon!69 e!53617 (ite c!13071 (h!2082 (toList!730 call!7474)) (tuple2!2169 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun c!13073 () Bool)

(assert (=> bm!7661 (= c!13073 c!13071)))

(declare-fun b!82207 () Bool)

(declare-fun e!53618 () List!1497)

(assert (=> b!82207 (= e!53618 call!7662)))

(declare-fun b!82208 () Bool)

(declare-fun res!42644 () Bool)

(assert (=> b!82208 (=> (not res!42644) (not e!53615))))

(assert (=> b!82208 (= res!42644 (containsKey!142 lt!38384 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82209 () Bool)

(declare-fun c!13072 () Bool)

(assert (=> b!82209 (= c!13072 (and ((_ is Cons!1493) (toList!730 call!7474)) (bvsgt (_1!1095 (h!2082 (toList!730 call!7474))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> b!82209 (= e!53619 e!53618)))

(declare-fun b!82210 () Bool)

(assert (=> b!82210 (= e!53617 (insertStrictlySorted!59 (t!5156 (toList!730 call!7474)) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82211 () Bool)

(assert (=> b!82211 (= e!53619 call!7663)))

(declare-fun b!82212 () Bool)

(assert (=> b!82212 (= e!53618 call!7662)))

(declare-fun b!82213 () Bool)

(assert (=> b!82213 (= e!53617 (ite c!13074 (t!5156 (toList!730 call!7474)) (ite c!13072 (Cons!1493 (h!2082 (toList!730 call!7474)) (t!5156 (toList!730 call!7474))) Nil!1494)))))

(declare-fun b!82214 () Bool)

(assert (=> b!82214 (= e!53616 call!7664)))

(assert (= (and d!20675 c!13071) b!82214))

(assert (= (and d!20675 (not c!13071)) b!82206))

(assert (= (and b!82206 c!13074) b!82211))

(assert (= (and b!82206 (not c!13074)) b!82209))

(assert (= (and b!82209 c!13072) b!82212))

(assert (= (and b!82209 (not c!13072)) b!82207))

(assert (= (or b!82212 b!82207) bm!7660))

(assert (= (or b!82211 bm!7660) bm!7659))

(assert (= (or b!82214 bm!7659) bm!7661))

(assert (= (and bm!7661 c!13073) b!82210))

(assert (= (and bm!7661 (not c!13073)) b!82213))

(assert (= (and d!20675 res!42643) b!82208))

(assert (= (and b!82208 res!42644) b!82205))

(declare-fun m!84905 () Bool)

(assert (=> b!82210 m!84905))

(declare-fun m!84907 () Bool)

(assert (=> bm!7661 m!84907))

(declare-fun m!84909 () Bool)

(assert (=> b!82205 m!84909))

(declare-fun m!84911 () Bool)

(assert (=> d!20675 m!84911))

(declare-fun m!84913 () Bool)

(assert (=> d!20675 m!84913))

(declare-fun m!84915 () Bool)

(assert (=> b!82208 m!84915))

(assert (=> d!19735 d!20675))

(declare-fun b!82218 () Bool)

(declare-fun e!53621 () Option!145)

(assert (=> b!82218 (= e!53621 None!143)))

(declare-fun b!82217 () Bool)

(assert (=> b!82217 (= e!53621 (getValueByKey!139 (t!5156 (t!5156 lt!37556)) (_1!1095 lt!37210)))))

(declare-fun d!20677 () Bool)

(declare-fun c!13075 () Bool)

(assert (=> d!20677 (= c!13075 (and ((_ is Cons!1493) (t!5156 lt!37556)) (= (_1!1095 (h!2082 (t!5156 lt!37556))) (_1!1095 lt!37210))))))

(declare-fun e!53620 () Option!145)

(assert (=> d!20677 (= (getValueByKey!139 (t!5156 lt!37556) (_1!1095 lt!37210)) e!53620)))

(declare-fun b!82215 () Bool)

(assert (=> b!82215 (= e!53620 (Some!144 (_2!1095 (h!2082 (t!5156 lt!37556)))))))

(declare-fun b!82216 () Bool)

(assert (=> b!82216 (= e!53620 e!53621)))

(declare-fun c!13076 () Bool)

(assert (=> b!82216 (= c!13076 (and ((_ is Cons!1493) (t!5156 lt!37556)) (not (= (_1!1095 (h!2082 (t!5156 lt!37556))) (_1!1095 lt!37210)))))))

(assert (= (and d!20677 c!13075) b!82215))

(assert (= (and d!20677 (not c!13075)) b!82216))

(assert (= (and b!82216 c!13076) b!82217))

(assert (= (and b!82216 (not c!13076)) b!82218))

(declare-fun m!84917 () Bool)

(assert (=> b!82217 m!84917))

(assert (=> b!81098 d!20677))

(declare-fun d!20679 () Bool)

(declare-fun e!53622 () Bool)

(assert (=> d!20679 e!53622))

(declare-fun res!42645 () Bool)

(assert (=> d!20679 (=> res!42645 e!53622)))

(declare-fun lt!38386 () Bool)

(assert (=> d!20679 (= res!42645 (not lt!38386))))

(declare-fun lt!38385 () Bool)

(assert (=> d!20679 (= lt!38386 lt!38385)))

(declare-fun lt!38387 () Unit!2322)

(declare-fun e!53623 () Unit!2322)

(assert (=> d!20679 (= lt!38387 e!53623)))

(declare-fun c!13077 () Bool)

(assert (=> d!20679 (= c!13077 lt!38385)))

(assert (=> d!20679 (= lt!38385 (containsKey!142 (toList!730 lt!37640) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!20679 (= (contains!739 lt!37640 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38386)))

(declare-fun b!82219 () Bool)

(declare-fun lt!38388 () Unit!2322)

(assert (=> b!82219 (= e!53623 lt!38388)))

(assert (=> b!82219 (= lt!38388 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37640) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> b!82219 (isDefined!91 (getValueByKey!139 (toList!730 lt!37640) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82220 () Bool)

(declare-fun Unit!2396 () Unit!2322)

(assert (=> b!82220 (= e!53623 Unit!2396)))

(declare-fun b!82221 () Bool)

(assert (=> b!82221 (= e!53622 (isDefined!91 (getValueByKey!139 (toList!730 lt!37640) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20679 c!13077) b!82219))

(assert (= (and d!20679 (not c!13077)) b!82220))

(assert (= (and d!20679 (not res!42645)) b!82221))

(declare-fun m!84919 () Bool)

(assert (=> d!20679 m!84919))

(declare-fun m!84921 () Bool)

(assert (=> b!82219 m!84921))

(assert (=> b!82219 m!82417))

(assert (=> b!82219 m!82417))

(declare-fun m!84923 () Bool)

(assert (=> b!82219 m!84923))

(assert (=> b!82221 m!82417))

(assert (=> b!82221 m!82417))

(assert (=> b!82221 m!84923))

(assert (=> d!19785 d!20679))

(declare-fun b!82225 () Bool)

(declare-fun e!53625 () Option!145)

(assert (=> b!82225 (= e!53625 None!143)))

(declare-fun b!82224 () Bool)

(assert (=> b!82224 (= e!53625 (getValueByKey!139 (t!5156 lt!37638) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20681 () Bool)

(declare-fun c!13078 () Bool)

(assert (=> d!20681 (= c!13078 (and ((_ is Cons!1493) lt!37638) (= (_1!1095 (h!2082 lt!37638)) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53624 () Option!145)

(assert (=> d!20681 (= (getValueByKey!139 lt!37638 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53624)))

(declare-fun b!82222 () Bool)

(assert (=> b!82222 (= e!53624 (Some!144 (_2!1095 (h!2082 lt!37638))))))

(declare-fun b!82223 () Bool)

(assert (=> b!82223 (= e!53624 e!53625)))

(declare-fun c!13079 () Bool)

(assert (=> b!82223 (= c!13079 (and ((_ is Cons!1493) lt!37638) (not (= (_1!1095 (h!2082 lt!37638)) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20681 c!13078) b!82222))

(assert (= (and d!20681 (not c!13078)) b!82223))

(assert (= (and b!82223 c!13079) b!82224))

(assert (= (and b!82223 (not c!13079)) b!82225))

(declare-fun m!84925 () Bool)

(assert (=> b!82224 m!84925))

(assert (=> d!19785 d!20681))

(declare-fun d!20683 () Bool)

(assert (=> d!20683 (= (getValueByKey!139 lt!37638 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!38389 () Unit!2322)

(assert (=> d!20683 (= lt!38389 (choose!478 lt!37638 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun e!53626 () Bool)

(assert (=> d!20683 e!53626))

(declare-fun res!42646 () Bool)

(assert (=> d!20683 (=> (not res!42646) (not e!53626))))

(assert (=> d!20683 (= res!42646 (isStrictlySorted!283 lt!37638))))

(assert (=> d!20683 (= (lemmaContainsTupThenGetReturnValue!56 lt!37638 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38389)))

(declare-fun b!82226 () Bool)

(declare-fun res!42647 () Bool)

(assert (=> b!82226 (=> (not res!42647) (not e!53626))))

(assert (=> b!82226 (= res!42647 (containsKey!142 lt!37638 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82227 () Bool)

(assert (=> b!82227 (= e!53626 (contains!742 lt!37638 (tuple2!2169 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20683 res!42646) b!82226))

(assert (= (and b!82226 res!42647) b!82227))

(assert (=> d!20683 m!82411))

(declare-fun m!84927 () Bool)

(assert (=> d!20683 m!84927))

(declare-fun m!84929 () Bool)

(assert (=> d!20683 m!84929))

(declare-fun m!84931 () Bool)

(assert (=> b!82226 m!84931))

(declare-fun m!84933 () Bool)

(assert (=> b!82227 m!84933))

(assert (=> d!19785 d!20683))

(declare-fun bm!7662 () Bool)

(declare-fun call!7666 () List!1497)

(declare-fun call!7667 () List!1497)

(assert (=> bm!7662 (= call!7666 call!7667)))

(declare-fun b!82228 () Bool)

(declare-fun e!53627 () Bool)

(declare-fun lt!38390 () List!1497)

(assert (=> b!82228 (= e!53627 (contains!742 lt!38390 (tuple2!2169 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!82229 () Bool)

(declare-fun e!53628 () List!1497)

(declare-fun e!53631 () List!1497)

(assert (=> b!82229 (= e!53628 e!53631)))

(declare-fun c!13083 () Bool)

(assert (=> b!82229 (= c!13083 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun bm!7663 () Bool)

(declare-fun call!7665 () List!1497)

(assert (=> bm!7663 (= call!7665 call!7666)))

(declare-fun d!20685 () Bool)

(assert (=> d!20685 e!53627))

(declare-fun res!42648 () Bool)

(assert (=> d!20685 (=> (not res!42648) (not e!53627))))

(assert (=> d!20685 (= res!42648 (isStrictlySorted!283 lt!38390))))

(assert (=> d!20685 (= lt!38390 e!53628)))

(declare-fun c!13080 () Bool)

(assert (=> d!20685 (= c!13080 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (bvslt (_1!1095 (h!2082 (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!20685 (isStrictlySorted!283 (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20685 (= (insertStrictlySorted!59 (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38390)))

(declare-fun bm!7664 () Bool)

(declare-fun e!53629 () List!1497)

(assert (=> bm!7664 (= call!7667 ($colon$colon!69 e!53629 (ite c!13080 (h!2082 (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (tuple2!2169 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun c!13082 () Bool)

(assert (=> bm!7664 (= c!13082 c!13080)))

(declare-fun b!82230 () Bool)

(declare-fun e!53630 () List!1497)

(assert (=> b!82230 (= e!53630 call!7665)))

(declare-fun b!82231 () Bool)

(declare-fun res!42649 () Bool)

(assert (=> b!82231 (=> (not res!42649) (not e!53627))))

(assert (=> b!82231 (= res!42649 (containsKey!142 lt!38390 (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82232 () Bool)

(declare-fun c!13081 () Bool)

(assert (=> b!82232 (= c!13081 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (bvsgt (_1!1095 (h!2082 (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> b!82232 (= e!53631 e!53630)))

(declare-fun b!82233 () Bool)

(assert (=> b!82233 (= e!53629 (insertStrictlySorted!59 (t!5156 (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82234 () Bool)

(assert (=> b!82234 (= e!53631 call!7666)))

(declare-fun b!82235 () Bool)

(assert (=> b!82235 (= e!53630 call!7665)))

(declare-fun b!82236 () Bool)

(assert (=> b!82236 (= e!53629 (ite c!13083 (t!5156 (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (ite c!13081 (Cons!1493 (h!2082 (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))) (t!5156 (toList!730 (+!101 lt!37211 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))) Nil!1494)))))

(declare-fun b!82237 () Bool)

(assert (=> b!82237 (= e!53628 call!7667)))

(assert (= (and d!20685 c!13080) b!82237))

(assert (= (and d!20685 (not c!13080)) b!82229))

(assert (= (and b!82229 c!13083) b!82234))

(assert (= (and b!82229 (not c!13083)) b!82232))

(assert (= (and b!82232 c!13081) b!82235))

(assert (= (and b!82232 (not c!13081)) b!82230))

(assert (= (or b!82235 b!82230) bm!7663))

(assert (= (or b!82234 bm!7663) bm!7662))

(assert (= (or b!82237 bm!7662) bm!7664))

(assert (= (and bm!7664 c!13082) b!82233))

(assert (= (and bm!7664 (not c!13082)) b!82236))

(assert (= (and d!20685 res!42648) b!82231))

(assert (= (and b!82231 res!42649) b!82228))

(declare-fun m!84935 () Bool)

(assert (=> b!82233 m!84935))

(declare-fun m!84937 () Bool)

(assert (=> bm!7664 m!84937))

(declare-fun m!84939 () Bool)

(assert (=> b!82228 m!84939))

(declare-fun m!84941 () Bool)

(assert (=> d!20685 m!84941))

(declare-fun m!84943 () Bool)

(assert (=> d!20685 m!84943))

(declare-fun m!84945 () Bool)

(assert (=> b!82231 m!84945))

(assert (=> d!19785 d!20685))

(declare-fun bm!7665 () Bool)

(declare-fun call!7669 () List!1497)

(declare-fun call!7670 () List!1497)

(assert (=> bm!7665 (= call!7669 call!7670)))

(declare-fun b!82238 () Bool)

(declare-fun e!53632 () Bool)

(declare-fun lt!38391 () List!1497)

(assert (=> b!82238 (= e!53632 (contains!742 lt!38391 (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(declare-fun b!82239 () Bool)

(declare-fun e!53633 () List!1497)

(declare-fun e!53636 () List!1497)

(assert (=> b!82239 (= e!53633 e!53636)))

(declare-fun c!13087 () Bool)

(assert (=> b!82239 (= c!13087 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37211))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37211)))) (_1!1095 lt!37209))))))

(declare-fun bm!7666 () Bool)

(declare-fun call!7668 () List!1497)

(assert (=> bm!7666 (= call!7668 call!7669)))

(declare-fun d!20687 () Bool)

(assert (=> d!20687 e!53632))

(declare-fun res!42650 () Bool)

(assert (=> d!20687 (=> (not res!42650) (not e!53632))))

(assert (=> d!20687 (= res!42650 (isStrictlySorted!283 lt!38391))))

(assert (=> d!20687 (= lt!38391 e!53633)))

(declare-fun c!13084 () Bool)

(assert (=> d!20687 (= c!13084 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37211))) (bvslt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37211)))) (_1!1095 lt!37209))))))

(assert (=> d!20687 (isStrictlySorted!283 (t!5156 (toList!730 lt!37211)))))

(assert (=> d!20687 (= (insertStrictlySorted!59 (t!5156 (toList!730 lt!37211)) (_1!1095 lt!37209) (_2!1095 lt!37209)) lt!38391)))

(declare-fun e!53634 () List!1497)

(declare-fun bm!7667 () Bool)

(assert (=> bm!7667 (= call!7670 ($colon$colon!69 e!53634 (ite c!13084 (h!2082 (t!5156 (toList!730 lt!37211))) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209)))))))

(declare-fun c!13086 () Bool)

(assert (=> bm!7667 (= c!13086 c!13084)))

(declare-fun b!82240 () Bool)

(declare-fun e!53635 () List!1497)

(assert (=> b!82240 (= e!53635 call!7668)))

(declare-fun b!82241 () Bool)

(declare-fun res!42651 () Bool)

(assert (=> b!82241 (=> (not res!42651) (not e!53632))))

(assert (=> b!82241 (= res!42651 (containsKey!142 lt!38391 (_1!1095 lt!37209)))))

(declare-fun b!82242 () Bool)

(declare-fun c!13085 () Bool)

(assert (=> b!82242 (= c!13085 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37211))) (bvsgt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37211)))) (_1!1095 lt!37209))))))

(assert (=> b!82242 (= e!53636 e!53635)))

(declare-fun b!82243 () Bool)

(assert (=> b!82243 (= e!53634 (insertStrictlySorted!59 (t!5156 (t!5156 (toList!730 lt!37211))) (_1!1095 lt!37209) (_2!1095 lt!37209)))))

(declare-fun b!82244 () Bool)

(assert (=> b!82244 (= e!53636 call!7669)))

(declare-fun b!82245 () Bool)

(assert (=> b!82245 (= e!53635 call!7668)))

(declare-fun b!82246 () Bool)

(assert (=> b!82246 (= e!53634 (ite c!13087 (t!5156 (t!5156 (toList!730 lt!37211))) (ite c!13085 (Cons!1493 (h!2082 (t!5156 (toList!730 lt!37211))) (t!5156 (t!5156 (toList!730 lt!37211)))) Nil!1494)))))

(declare-fun b!82247 () Bool)

(assert (=> b!82247 (= e!53633 call!7670)))

(assert (= (and d!20687 c!13084) b!82247))

(assert (= (and d!20687 (not c!13084)) b!82239))

(assert (= (and b!82239 c!13087) b!82244))

(assert (= (and b!82239 (not c!13087)) b!82242))

(assert (= (and b!82242 c!13085) b!82245))

(assert (= (and b!82242 (not c!13085)) b!82240))

(assert (= (or b!82245 b!82240) bm!7666))

(assert (= (or b!82244 bm!7666) bm!7665))

(assert (= (or b!82247 bm!7665) bm!7667))

(assert (= (and bm!7667 c!13086) b!82243))

(assert (= (and bm!7667 (not c!13086)) b!82246))

(assert (= (and d!20687 res!42650) b!82241))

(assert (= (and b!82241 res!42651) b!82238))

(declare-fun m!84947 () Bool)

(assert (=> b!82243 m!84947))

(declare-fun m!84949 () Bool)

(assert (=> bm!7667 m!84949))

(declare-fun m!84951 () Bool)

(assert (=> b!82238 m!84951))

(declare-fun m!84953 () Bool)

(assert (=> d!20687 m!84953))

(assert (=> d!20687 m!84039))

(declare-fun m!84955 () Bool)

(assert (=> b!82241 m!84955))

(assert (=> b!81052 d!20687))

(declare-fun b!82251 () Bool)

(declare-fun e!53638 () Option!145)

(assert (=> b!82251 (= e!53638 None!143)))

(declare-fun b!82250 () Bool)

(assert (=> b!82250 (= e!53638 (getValueByKey!139 (t!5156 (toList!730 lt!37763)) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun c!13088 () Bool)

(declare-fun d!20689 () Bool)

(assert (=> d!20689 (= c!13088 (and ((_ is Cons!1493) (toList!730 lt!37763)) (= (_1!1095 (h!2082 (toList!730 lt!37763))) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53637 () Option!145)

(assert (=> d!20689 (= (getValueByKey!139 (toList!730 lt!37763) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53637)))

(declare-fun b!82248 () Bool)

(assert (=> b!82248 (= e!53637 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37763)))))))

(declare-fun b!82249 () Bool)

(assert (=> b!82249 (= e!53637 e!53638)))

(declare-fun c!13089 () Bool)

(assert (=> b!82249 (= c!13089 (and ((_ is Cons!1493) (toList!730 lt!37763)) (not (= (_1!1095 (h!2082 (toList!730 lt!37763))) (_1!1095 (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20689 c!13088) b!82248))

(assert (= (and d!20689 (not c!13088)) b!82249))

(assert (= (and b!82249 c!13089) b!82250))

(assert (= (and b!82249 (not c!13089)) b!82251))

(declare-fun m!84957 () Bool)

(assert (=> b!82250 m!84957))

(assert (=> b!80890 d!20689))

(declare-fun d!20691 () Bool)

(declare-fun res!42652 () Bool)

(declare-fun e!53639 () Bool)

(assert (=> d!20691 (=> res!42652 e!53639)))

(assert (=> d!20691 (= res!42652 (and ((_ is Cons!1493) lt!37655) (= (_1!1095 (h!2082 lt!37655)) (_1!1095 lt!37212))))))

(assert (=> d!20691 (= (containsKey!142 lt!37655 (_1!1095 lt!37212)) e!53639)))

(declare-fun b!82252 () Bool)

(declare-fun e!53640 () Bool)

(assert (=> b!82252 (= e!53639 e!53640)))

(declare-fun res!42653 () Bool)

(assert (=> b!82252 (=> (not res!42653) (not e!53640))))

(assert (=> b!82252 (= res!42653 (and (or (not ((_ is Cons!1493) lt!37655)) (bvsle (_1!1095 (h!2082 lt!37655)) (_1!1095 lt!37212))) ((_ is Cons!1493) lt!37655) (bvslt (_1!1095 (h!2082 lt!37655)) (_1!1095 lt!37212))))))

(declare-fun b!82253 () Bool)

(assert (=> b!82253 (= e!53640 (containsKey!142 (t!5156 lt!37655) (_1!1095 lt!37212)))))

(assert (= (and d!20691 (not res!42652)) b!82252))

(assert (= (and b!82252 res!42653) b!82253))

(declare-fun m!84959 () Bool)

(assert (=> b!82253 m!84959))

(assert (=> b!80806 d!20691))

(declare-fun d!20693 () Bool)

(declare-fun lt!38392 () Bool)

(assert (=> d!20693 (= lt!38392 (select (content!86 lt!37848) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(declare-fun e!53641 () Bool)

(assert (=> d!20693 (= lt!38392 e!53641)))

(declare-fun res!42655 () Bool)

(assert (=> d!20693 (=> (not res!42655) (not e!53641))))

(assert (=> d!20693 (= res!42655 ((_ is Cons!1493) lt!37848))))

(assert (=> d!20693 (= (contains!742 lt!37848 (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))) lt!38392)))

(declare-fun b!82254 () Bool)

(declare-fun e!53642 () Bool)

(assert (=> b!82254 (= e!53641 e!53642)))

(declare-fun res!42654 () Bool)

(assert (=> b!82254 (=> res!42654 e!53642)))

(assert (=> b!82254 (= res!42654 (= (h!2082 lt!37848) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(declare-fun b!82255 () Bool)

(assert (=> b!82255 (= e!53642 (contains!742 (t!5156 lt!37848) (tuple2!2169 (_1!1095 lt!37212) (_2!1095 lt!37212))))))

(assert (= (and d!20693 res!42655) b!82254))

(assert (= (and b!82254 (not res!42654)) b!82255))

(declare-fun m!84961 () Bool)

(assert (=> d!20693 m!84961))

(declare-fun m!84963 () Bool)

(assert (=> d!20693 m!84963))

(declare-fun m!84965 () Bool)

(assert (=> b!82255 m!84965))

(assert (=> b!80989 d!20693))

(assert (=> d!19835 d!19847))

(assert (=> d!19835 d!19831))

(assert (=> d!19835 d!19833))

(declare-fun d!20695 () Bool)

(assert (=> d!20695 (= (apply!80 (+!101 lt!37477 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!37488) (apply!80 lt!37477 lt!37488))))

(assert (=> d!20695 true))

(declare-fun _$34!828 () Unit!2322)

(assert (=> d!20695 (= (choose!481 lt!37477 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))) lt!37488) _$34!828)))

(declare-fun bs!3494 () Bool)

(assert (= bs!3494 d!20695))

(assert (=> bs!3494 m!82001))

(assert (=> bs!3494 m!82001))

(assert (=> bs!3494 m!82007))

(assert (=> bs!3494 m!82013))

(assert (=> d!19835 d!20695))

(declare-fun d!20697 () Bool)

(declare-fun e!53643 () Bool)

(assert (=> d!20697 e!53643))

(declare-fun res!42656 () Bool)

(assert (=> d!20697 (=> res!42656 e!53643)))

(declare-fun lt!38394 () Bool)

(assert (=> d!20697 (= res!42656 (not lt!38394))))

(declare-fun lt!38393 () Bool)

(assert (=> d!20697 (= lt!38394 lt!38393)))

(declare-fun lt!38395 () Unit!2322)

(declare-fun e!53644 () Unit!2322)

(assert (=> d!20697 (= lt!38395 e!53644)))

(declare-fun c!13090 () Bool)

(assert (=> d!20697 (= c!13090 lt!38393)))

(assert (=> d!20697 (= lt!38393 (containsKey!142 (toList!730 lt!37477) lt!37488))))

(assert (=> d!20697 (= (contains!739 lt!37477 lt!37488) lt!38394)))

(declare-fun b!82256 () Bool)

(declare-fun lt!38396 () Unit!2322)

(assert (=> b!82256 (= e!53644 lt!38396)))

(assert (=> b!82256 (= lt!38396 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37477) lt!37488))))

(assert (=> b!82256 (isDefined!91 (getValueByKey!139 (toList!730 lt!37477) lt!37488))))

(declare-fun b!82257 () Bool)

(declare-fun Unit!2397 () Unit!2322)

(assert (=> b!82257 (= e!53644 Unit!2397)))

(declare-fun b!82258 () Bool)

(assert (=> b!82258 (= e!53643 (isDefined!91 (getValueByKey!139 (toList!730 lt!37477) lt!37488)))))

(assert (= (and d!20697 c!13090) b!82256))

(assert (= (and d!20697 (not c!13090)) b!82257))

(assert (= (and d!20697 (not res!42656)) b!82258))

(declare-fun m!84967 () Bool)

(assert (=> d!20697 m!84967))

(declare-fun m!84969 () Bool)

(assert (=> b!82256 m!84969))

(assert (=> b!82256 m!82589))

(assert (=> b!82256 m!82589))

(declare-fun m!84971 () Bool)

(assert (=> b!82256 m!84971))

(assert (=> b!82258 m!82589))

(assert (=> b!82258 m!82589))

(assert (=> b!82258 m!84971))

(assert (=> d!19835 d!20697))

(assert (=> b!80965 d!20283))

(declare-fun d!20699 () Bool)

(assert (=> d!20699 (= (inRange!0 (ite c!12677 (index!3076 lt!37742) (ite c!12678 (index!3075 lt!37730) (index!3078 lt!37730))) (mask!6298 newMap!16)) (and (bvsge (ite c!12677 (index!3076 lt!37742) (ite c!12678 (index!3075 lt!37730) (index!3078 lt!37730))) #b00000000000000000000000000000000) (bvslt (ite c!12677 (index!3076 lt!37742) (ite c!12678 (index!3075 lt!37730) (index!3078 lt!37730))) (bvadd (mask!6298 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7515 d!20699))

(declare-fun d!20701 () Bool)

(assert (=> d!20701 (isDefined!91 (getValueByKey!139 (toList!730 call!7459) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun lt!38397 () Unit!2322)

(assert (=> d!20701 (= lt!38397 (choose!487 (toList!730 call!7459) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun e!53645 () Bool)

(assert (=> d!20701 e!53645))

(declare-fun res!42657 () Bool)

(assert (=> d!20701 (=> (not res!42657) (not e!53645))))

(assert (=> d!20701 (= res!42657 (isStrictlySorted!283 (toList!730 call!7459)))))

(assert (=> d!20701 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 call!7459) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) lt!38397)))

(declare-fun b!82259 () Bool)

(assert (=> b!82259 (= e!53645 (containsKey!142 (toList!730 call!7459) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (= (and d!20701 res!42657) b!82259))

(assert (=> d!20701 m!81737))

(assert (=> d!20701 m!82289))

(assert (=> d!20701 m!82289))

(assert (=> d!20701 m!82291))

(assert (=> d!20701 m!81737))

(declare-fun m!84973 () Bool)

(assert (=> d!20701 m!84973))

(declare-fun m!84975 () Bool)

(assert (=> d!20701 m!84975))

(assert (=> b!82259 m!81737))

(assert (=> b!82259 m!82285))

(assert (=> b!80735 d!20701))

(assert (=> b!80735 d!20053))

(assert (=> b!80735 d!20055))

(declare-fun d!20703 () Bool)

(declare-fun res!42658 () Bool)

(declare-fun e!53646 () Bool)

(assert (=> d!20703 (=> res!42658 e!53646)))

(assert (=> d!20703 (= res!42658 (and ((_ is Cons!1493) (toList!730 lt!37546)) (= (_1!1095 (h!2082 (toList!730 lt!37546))) (_1!1095 lt!37210))))))

(assert (=> d!20703 (= (containsKey!142 (toList!730 lt!37546) (_1!1095 lt!37210)) e!53646)))

(declare-fun b!82260 () Bool)

(declare-fun e!53647 () Bool)

(assert (=> b!82260 (= e!53646 e!53647)))

(declare-fun res!42659 () Bool)

(assert (=> b!82260 (=> (not res!42659) (not e!53647))))

(assert (=> b!82260 (= res!42659 (and (or (not ((_ is Cons!1493) (toList!730 lt!37546))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37546))) (_1!1095 lt!37210))) ((_ is Cons!1493) (toList!730 lt!37546)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37546))) (_1!1095 lt!37210))))))

(declare-fun b!82261 () Bool)

(assert (=> b!82261 (= e!53647 (containsKey!142 (t!5156 (toList!730 lt!37546)) (_1!1095 lt!37210)))))

(assert (= (and d!20703 (not res!42658)) b!82260))

(assert (= (and b!82260 res!42659) b!82261))

(declare-fun m!84977 () Bool)

(assert (=> b!82261 m!84977))

(assert (=> d!19895 d!20703))

(declare-fun d!20705 () Bool)

(declare-fun res!42660 () Bool)

(declare-fun e!53648 () Bool)

(assert (=> d!20705 (=> res!42660 e!53648)))

(assert (=> d!20705 (= res!42660 (or ((_ is Nil!1494) lt!37848) ((_ is Nil!1494) (t!5156 lt!37848))))))

(assert (=> d!20705 (= (isStrictlySorted!283 lt!37848) e!53648)))

(declare-fun b!82262 () Bool)

(declare-fun e!53649 () Bool)

(assert (=> b!82262 (= e!53648 e!53649)))

(declare-fun res!42661 () Bool)

(assert (=> b!82262 (=> (not res!42661) (not e!53649))))

(assert (=> b!82262 (= res!42661 (bvslt (_1!1095 (h!2082 lt!37848)) (_1!1095 (h!2082 (t!5156 lt!37848)))))))

(declare-fun b!82263 () Bool)

(assert (=> b!82263 (= e!53649 (isStrictlySorted!283 (t!5156 lt!37848)))))

(assert (= (and d!20705 (not res!42660)) b!82262))

(assert (= (and b!82262 res!42661) b!82263))

(declare-fun m!84979 () Bool)

(assert (=> b!82263 m!84979))

(assert (=> d!19893 d!20705))

(declare-fun d!20707 () Bool)

(declare-fun res!42662 () Bool)

(declare-fun e!53650 () Bool)

(assert (=> d!20707 (=> res!42662 e!53650)))

(assert (=> d!20707 (= res!42662 (or ((_ is Nil!1494) (toList!730 lt!37222)) ((_ is Nil!1494) (t!5156 (toList!730 lt!37222)))))))

(assert (=> d!20707 (= (isStrictlySorted!283 (toList!730 lt!37222)) e!53650)))

(declare-fun b!82264 () Bool)

(declare-fun e!53651 () Bool)

(assert (=> b!82264 (= e!53650 e!53651)))

(declare-fun res!42663 () Bool)

(assert (=> b!82264 (=> (not res!42663) (not e!53651))))

(assert (=> b!82264 (= res!42663 (bvslt (_1!1095 (h!2082 (toList!730 lt!37222))) (_1!1095 (h!2082 (t!5156 (toList!730 lt!37222))))))))

(declare-fun b!82265 () Bool)

(assert (=> b!82265 (= e!53651 (isStrictlySorted!283 (t!5156 (toList!730 lt!37222))))))

(assert (= (and d!20707 (not res!42662)) b!82264))

(assert (= (and b!82264 res!42663) b!82265))

(assert (=> b!82265 m!84805))

(assert (=> d!19893 d!20707))

(assert (=> b!81122 d!20283))

(assert (=> b!80674 d!20533))

(assert (=> b!80674 d!19801))

(declare-fun d!20709 () Bool)

(declare-fun c!13091 () Bool)

(assert (=> d!20709 (= c!13091 ((_ is Nil!1494) (toList!730 lt!37550)))))

(declare-fun e!53652 () (InoxSet tuple2!2168))

(assert (=> d!20709 (= (content!86 (toList!730 lt!37550)) e!53652)))

(declare-fun b!82266 () Bool)

(assert (=> b!82266 (= e!53652 ((as const (Array tuple2!2168 Bool)) false))))

(declare-fun b!82267 () Bool)

(assert (=> b!82267 (= e!53652 ((_ map or) (store ((as const (Array tuple2!2168 Bool)) false) (h!2082 (toList!730 lt!37550)) true) (content!86 (t!5156 (toList!730 lt!37550)))))))

(assert (= (and d!20709 c!13091) b!82266))

(assert (= (and d!20709 (not c!13091)) b!82267))

(declare-fun m!84981 () Bool)

(assert (=> b!82267 m!84981))

(assert (=> b!82267 m!84445))

(assert (=> d!19803 d!20709))

(assert (=> d!19755 d!19703))

(declare-fun b!82271 () Bool)

(declare-fun e!53654 () Option!145)

(assert (=> b!82271 (= e!53654 None!143)))

(declare-fun b!82270 () Bool)

(assert (=> b!82270 (= e!53654 (getValueByKey!139 (t!5156 (toList!730 lt!37569)) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20711 () Bool)

(declare-fun c!13092 () Bool)

(assert (=> d!20711 (= c!13092 (and ((_ is Cons!1493) (toList!730 lt!37569)) (= (_1!1095 (h!2082 (toList!730 lt!37569))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53653 () Option!145)

(assert (=> d!20711 (= (getValueByKey!139 (toList!730 lt!37569) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53653)))

(declare-fun b!82268 () Bool)

(assert (=> b!82268 (= e!53653 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37569)))))))

(declare-fun b!82269 () Bool)

(assert (=> b!82269 (= e!53653 e!53654)))

(declare-fun c!13093 () Bool)

(assert (=> b!82269 (= c!13093 (and ((_ is Cons!1493) (toList!730 lt!37569)) (not (= (_1!1095 (h!2082 (toList!730 lt!37569))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20711 c!13092) b!82268))

(assert (= (and d!20711 (not c!13092)) b!82269))

(assert (= (and b!82269 c!13093) b!82270))

(assert (= (and b!82269 (not c!13093)) b!82271))

(declare-fun m!84983 () Bool)

(assert (=> b!82270 m!84983))

(assert (=> b!80646 d!20711))

(declare-fun d!20713 () Bool)

(assert (=> d!20713 (isDefined!91 (getValueByKey!139 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!38398 () Unit!2322)

(assert (=> d!20713 (= lt!38398 (choose!487 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!53655 () Bool)

(assert (=> d!20713 e!53655))

(declare-fun res!42664 () Bool)

(assert (=> d!20713 (=> (not res!42664) (not e!53655))))

(assert (=> d!20713 (= res!42664 (isStrictlySorted!283 (toList!730 lt!37476)))))

(assert (=> d!20713 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!38398)))

(declare-fun b!82272 () Bool)

(assert (=> b!82272 (= e!53655 (containsKey!142 (toList!730 lt!37476) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20713 res!42664) b!82272))

(assert (=> d!20713 m!81993))

(assert (=> d!20713 m!83029))

(assert (=> d!20713 m!83029))

(assert (=> d!20713 m!83091))

(assert (=> d!20713 m!81993))

(declare-fun m!84985 () Bool)

(assert (=> d!20713 m!84985))

(assert (=> d!20713 m!84091))

(assert (=> b!82272 m!81993))

(assert (=> b!82272 m!83087))

(assert (=> b!81133 d!20713))

(assert (=> b!81133 d!20047))

(assert (=> b!81133 d!20035))

(declare-fun d!20715 () Bool)

(declare-fun lt!38399 () Bool)

(assert (=> d!20715 (= lt!38399 (select (content!86 lt!37585) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(declare-fun e!53656 () Bool)

(assert (=> d!20715 (= lt!38399 e!53656)))

(declare-fun res!42666 () Bool)

(assert (=> d!20715 (=> (not res!42666) (not e!53656))))

(assert (=> d!20715 (= res!42666 ((_ is Cons!1493) lt!37585))))

(assert (=> d!20715 (= (contains!742 lt!37585 (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))) lt!38399)))

(declare-fun b!82273 () Bool)

(declare-fun e!53657 () Bool)

(assert (=> b!82273 (= e!53656 e!53657)))

(declare-fun res!42665 () Bool)

(assert (=> b!82273 (=> res!42665 e!53657)))

(assert (=> b!82273 (= res!42665 (= (h!2082 lt!37585) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(declare-fun b!82274 () Bool)

(assert (=> b!82274 (= e!53657 (contains!742 (t!5156 lt!37585) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(assert (= (and d!20715 res!42666) b!82273))

(assert (= (and b!82273 (not res!42665)) b!82274))

(declare-fun m!84987 () Bool)

(assert (=> d!20715 m!84987))

(declare-fun m!84989 () Bool)

(assert (=> d!20715 m!84989))

(declare-fun m!84991 () Bool)

(assert (=> b!82274 m!84991))

(assert (=> b!80713 d!20715))

(declare-fun d!20717 () Bool)

(assert (=> d!20717 (= ($colon$colon!69 e!52884 (ite c!12716 (h!2082 (toList!730 (+!101 lt!37215 lt!37212))) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210)))) (Cons!1493 (ite c!12716 (h!2082 (toList!730 (+!101 lt!37215 lt!37212))) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))) e!52884))))

(assert (=> bm!7539 d!20717))

(assert (=> b!80854 d!20011))

(declare-fun d!20719 () Bool)

(declare-fun e!53658 () Bool)

(assert (=> d!20719 e!53658))

(declare-fun res!42668 () Bool)

(assert (=> d!20719 (=> (not res!42668) (not e!53658))))

(declare-fun lt!38403 () ListLongMap!1429)

(assert (=> d!20719 (= res!42668 (contains!739 lt!38403 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(declare-fun lt!38401 () List!1497)

(assert (=> d!20719 (= lt!38403 (ListLongMap!1430 lt!38401))))

(declare-fun lt!38400 () Unit!2322)

(declare-fun lt!38402 () Unit!2322)

(assert (=> d!20719 (= lt!38400 lt!38402)))

(assert (=> d!20719 (= (getValueByKey!139 lt!38401 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20719 (= lt!38402 (lemmaContainsTupThenGetReturnValue!56 lt!38401 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20719 (= lt!38401 (insertStrictlySorted!59 (toList!730 (map!1186 newMap!16)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))))))

(assert (=> d!20719 (= (+!101 (map!1186 newMap!16) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) lt!38403)))

(declare-fun b!82275 () Bool)

(declare-fun res!42667 () Bool)

(assert (=> b!82275 (=> (not res!42667) (not e!53658))))

(assert (=> b!82275 (= res!42667 (= (getValueByKey!139 (toList!730 lt!38403) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))))

(declare-fun b!82276 () Bool)

(assert (=> b!82276 (= e!53658 (contains!742 (toList!730 lt!38403) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (= (and d!20719 res!42668) b!82275))

(assert (= (and b!82275 res!42667) b!82276))

(declare-fun m!84993 () Bool)

(assert (=> d!20719 m!84993))

(declare-fun m!84995 () Bool)

(assert (=> d!20719 m!84995))

(declare-fun m!84997 () Bool)

(assert (=> d!20719 m!84997))

(declare-fun m!84999 () Bool)

(assert (=> d!20719 m!84999))

(declare-fun m!85001 () Bool)

(assert (=> b!82275 m!85001))

(declare-fun m!85003 () Bool)

(assert (=> b!82276 m!85003))

(assert (=> b!80854 d!20719))

(assert (=> b!80854 d!19687))

(declare-fun b!82280 () Bool)

(declare-fun e!53660 () Option!145)

(assert (=> b!82280 (= e!53660 None!143)))

(declare-fun b!82279 () Bool)

(assert (=> b!82279 (= e!53660 (getValueByKey!139 (t!5156 (toList!730 lt!37640)) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20721 () Bool)

(declare-fun c!13094 () Bool)

(assert (=> d!20721 (= c!13094 (and ((_ is Cons!1493) (toList!730 lt!37640)) (= (_1!1095 (h!2082 (toList!730 lt!37640))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53659 () Option!145)

(assert (=> d!20721 (= (getValueByKey!139 (toList!730 lt!37640) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53659)))

(declare-fun b!82277 () Bool)

(assert (=> b!82277 (= e!53659 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37640)))))))

(declare-fun b!82278 () Bool)

(assert (=> b!82278 (= e!53659 e!53660)))

(declare-fun c!13095 () Bool)

(assert (=> b!82278 (= c!13095 (and ((_ is Cons!1493) (toList!730 lt!37640)) (not (= (_1!1095 (h!2082 (toList!730 lt!37640))) (_1!1095 (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20721 c!13094) b!82277))

(assert (= (and d!20721 (not c!13094)) b!82278))

(assert (= (and b!82278 c!13095) b!82279))

(assert (= (and b!82278 (not c!13095)) b!82280))

(declare-fun m!85005 () Bool)

(assert (=> b!82279 m!85005))

(assert (=> b!80771 d!20721))

(declare-fun d!20723 () Bool)

(declare-fun lt!38404 () Bool)

(assert (=> d!20723 (= lt!38404 (select (content!86 lt!37548) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(declare-fun e!53661 () Bool)

(assert (=> d!20723 (= lt!38404 e!53661)))

(declare-fun res!42670 () Bool)

(assert (=> d!20723 (=> (not res!42670) (not e!53661))))

(assert (=> d!20723 (= res!42670 ((_ is Cons!1493) lt!37548))))

(assert (=> d!20723 (= (contains!742 lt!37548 (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))) lt!38404)))

(declare-fun b!82281 () Bool)

(declare-fun e!53662 () Bool)

(assert (=> b!82281 (= e!53661 e!53662)))

(declare-fun res!42669 () Bool)

(assert (=> b!82281 (=> res!42669 e!53662)))

(assert (=> b!82281 (= res!42669 (= (h!2082 lt!37548) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(declare-fun b!82282 () Bool)

(assert (=> b!82282 (= e!53662 (contains!742 (t!5156 lt!37548) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(assert (= (and d!20723 res!42670) b!82281))

(assert (= (and b!82281 (not res!42669)) b!82282))

(declare-fun m!85007 () Bool)

(assert (=> d!20723 m!85007))

(declare-fun m!85009 () Bool)

(assert (=> d!20723 m!85009))

(declare-fun m!85011 () Bool)

(assert (=> b!82282 m!85011))

(assert (=> b!81046 d!20723))

(assert (=> d!19925 d!19929))

(assert (=> d!19925 d!19931))

(declare-fun d!20725 () Bool)

(assert (=> d!20725 (not (contains!739 (+!101 lt!37533 (tuple2!2169 lt!37538 lt!37537)) lt!37534))))

(assert (=> d!20725 true))

(declare-fun _$36!307 () Unit!2322)

(assert (=> d!20725 (= (choose!486 lt!37533 lt!37538 lt!37537 lt!37534) _$36!307)))

(declare-fun bs!3495 () Bool)

(assert (= bs!3495 d!20725))

(assert (=> bs!3495 m!82099))

(assert (=> bs!3495 m!82099))

(assert (=> bs!3495 m!82101))

(assert (=> d!19925 d!20725))

(declare-fun d!20727 () Bool)

(declare-fun e!53663 () Bool)

(assert (=> d!20727 e!53663))

(declare-fun res!42671 () Bool)

(assert (=> d!20727 (=> res!42671 e!53663)))

(declare-fun lt!38406 () Bool)

(assert (=> d!20727 (= res!42671 (not lt!38406))))

(declare-fun lt!38405 () Bool)

(assert (=> d!20727 (= lt!38406 lt!38405)))

(declare-fun lt!38407 () Unit!2322)

(declare-fun e!53664 () Unit!2322)

(assert (=> d!20727 (= lt!38407 e!53664)))

(declare-fun c!13096 () Bool)

(assert (=> d!20727 (= c!13096 lt!38405)))

(assert (=> d!20727 (= lt!38405 (containsKey!142 (toList!730 lt!37533) lt!37534))))

(assert (=> d!20727 (= (contains!739 lt!37533 lt!37534) lt!38406)))

(declare-fun b!82284 () Bool)

(declare-fun lt!38408 () Unit!2322)

(assert (=> b!82284 (= e!53664 lt!38408)))

(assert (=> b!82284 (= lt!38408 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37533) lt!37534))))

(assert (=> b!82284 (isDefined!91 (getValueByKey!139 (toList!730 lt!37533) lt!37534))))

(declare-fun b!82285 () Bool)

(declare-fun Unit!2398 () Unit!2322)

(assert (=> b!82285 (= e!53664 Unit!2398)))

(declare-fun b!82286 () Bool)

(assert (=> b!82286 (= e!53663 (isDefined!91 (getValueByKey!139 (toList!730 lt!37533) lt!37534)))))

(assert (= (and d!20727 c!13096) b!82284))

(assert (= (and d!20727 (not c!13096)) b!82285))

(assert (= (and d!20727 (not res!42671)) b!82286))

(declare-fun m!85013 () Bool)

(assert (=> d!20727 m!85013))

(declare-fun m!85015 () Bool)

(assert (=> b!82284 m!85015))

(declare-fun m!85017 () Bool)

(assert (=> b!82284 m!85017))

(assert (=> b!82284 m!85017))

(declare-fun m!85019 () Bool)

(assert (=> b!82284 m!85019))

(assert (=> b!82286 m!85017))

(assert (=> b!82286 m!85017))

(assert (=> b!82286 m!85019))

(assert (=> d!19925 d!20727))

(declare-fun d!20729 () Bool)

(declare-fun c!13097 () Bool)

(assert (=> d!20729 (= c!13097 ((_ is Nil!1494) (toList!730 lt!37558)))))

(declare-fun e!53665 () (InoxSet tuple2!2168))

(assert (=> d!20729 (= (content!86 (toList!730 lt!37558)) e!53665)))

(declare-fun b!82287 () Bool)

(assert (=> b!82287 (= e!53665 ((as const (Array tuple2!2168 Bool)) false))))

(declare-fun b!82288 () Bool)

(assert (=> b!82288 (= e!53665 ((_ map or) (store ((as const (Array tuple2!2168 Bool)) false) (h!2082 (toList!730 lt!37558)) true) (content!86 (t!5156 (toList!730 lt!37558)))))))

(assert (= (and d!20729 c!13097) b!82287))

(assert (= (and d!20729 (not c!13097)) b!82288))

(declare-fun m!85021 () Bool)

(assert (=> b!82288 m!85021))

(assert (=> b!82288 m!84501))

(assert (=> d!19861 d!20729))

(declare-fun d!20731 () Bool)

(declare-fun res!42672 () Bool)

(declare-fun e!53666 () Bool)

(assert (=> d!20731 (=> res!42672 e!53666)))

(assert (=> d!20731 (= res!42672 (and ((_ is Cons!1493) (toList!730 lt!37536)) (= (_1!1095 (h!2082 (toList!730 lt!37536))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!20731 (= (containsKey!142 (toList!730 lt!37536) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53666)))

(declare-fun b!82289 () Bool)

(declare-fun e!53667 () Bool)

(assert (=> b!82289 (= e!53666 e!53667)))

(declare-fun res!42673 () Bool)

(assert (=> b!82289 (=> (not res!42673) (not e!53667))))

(assert (=> b!82289 (= res!42673 (and (or (not ((_ is Cons!1493) (toList!730 lt!37536))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37536))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1493) (toList!730 lt!37536)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37536))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!82290 () Bool)

(assert (=> b!82290 (= e!53667 (containsKey!142 (t!5156 (toList!730 lt!37536)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20731 (not res!42672)) b!82289))

(assert (= (and b!82289 res!42673) b!82290))

(assert (=> b!82290 m!81993))

(declare-fun m!85023 () Bool)

(assert (=> b!82290 m!85023))

(assert (=> d!19749 d!20731))

(declare-fun d!20733 () Bool)

(declare-fun lt!38409 () Bool)

(assert (=> d!20733 (= lt!38409 (select (content!86 (t!5156 (toList!730 lt!37513))) lt!37212))))

(declare-fun e!53668 () Bool)

(assert (=> d!20733 (= lt!38409 e!53668)))

(declare-fun res!42675 () Bool)

(assert (=> d!20733 (=> (not res!42675) (not e!53668))))

(assert (=> d!20733 (= res!42675 ((_ is Cons!1493) (t!5156 (toList!730 lt!37513))))))

(assert (=> d!20733 (= (contains!742 (t!5156 (toList!730 lt!37513)) lt!37212) lt!38409)))

(declare-fun b!82291 () Bool)

(declare-fun e!53669 () Bool)

(assert (=> b!82291 (= e!53668 e!53669)))

(declare-fun res!42674 () Bool)

(assert (=> b!82291 (=> res!42674 e!53669)))

(assert (=> b!82291 (= res!42674 (= (h!2082 (t!5156 (toList!730 lt!37513))) lt!37212))))

(declare-fun b!82292 () Bool)

(assert (=> b!82292 (= e!53669 (contains!742 (t!5156 (t!5156 (toList!730 lt!37513))) lt!37212))))

(assert (= (and d!20733 res!42675) b!82291))

(assert (= (and b!82291 (not res!42674)) b!82292))

(assert (=> d!20733 m!83211))

(declare-fun m!85025 () Bool)

(assert (=> d!20733 m!85025))

(declare-fun m!85027 () Bool)

(assert (=> b!82292 m!85027))

(assert (=> b!81137 d!20733))

(declare-fun d!20735 () Bool)

(assert (=> d!20735 (= (apply!80 lt!37826 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (get!1192 (getValueByKey!139 (toList!730 lt!37826) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3496 () Bool)

(assert (= bs!3496 d!20735))

(assert (=> bs!3496 m!82381))

(declare-fun m!85029 () Bool)

(assert (=> bs!3496 m!85029))

(assert (=> bs!3496 m!85029))

(declare-fun m!85031 () Bool)

(assert (=> bs!3496 m!85031))

(assert (=> b!80971 d!20735))

(declare-fun d!20737 () Bool)

(declare-fun c!13098 () Bool)

(assert (=> d!20737 (= c!13098 ((_ is ValueCellFull!914) (select (arr!1893 (_values!2275 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!53670 () V!3001)

(assert (=> d!20737 (= (get!1189 (select (arr!1893 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53670)))

(declare-fun b!82293 () Bool)

(assert (=> b!82293 (= e!53670 (get!1190 (select (arr!1893 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82294 () Bool)

(assert (=> b!82294 (= e!53670 (get!1191 (select (arr!1893 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20737 c!13098) b!82293))

(assert (= (and d!20737 (not c!13098)) b!82294))

(assert (=> b!82293 m!82809))

(assert (=> b!82293 m!82743))

(declare-fun m!85033 () Bool)

(assert (=> b!82293 m!85033))

(assert (=> b!82294 m!82809))

(assert (=> b!82294 m!82743))

(declare-fun m!85035 () Bool)

(assert (=> b!82294 m!85035))

(assert (=> b!80971 d!20737))

(declare-fun d!20739 () Bool)

(assert (=> d!20739 (= (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37474)) (v!2616 (getValueByKey!139 (toList!730 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37474)))))

(assert (=> d!19849 d!20739))

(declare-fun b!82298 () Bool)

(declare-fun e!53672 () Option!145)

(assert (=> b!82298 (= e!53672 None!143)))

(declare-fun b!82297 () Bool)

(assert (=> b!82297 (= e!53672 (getValueByKey!139 (t!5156 (toList!730 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) lt!37474))))

(declare-fun d!20741 () Bool)

(declare-fun c!13099 () Bool)

(assert (=> d!20741 (= c!13099 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))) lt!37474)))))

(declare-fun e!53671 () Option!145)

(assert (=> d!20741 (= (getValueByKey!139 (toList!730 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!37474) e!53671)))

(declare-fun b!82295 () Bool)

(assert (=> b!82295 (= e!53671 (Some!144 (_2!1095 (h!2082 (toList!730 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))))))

(declare-fun b!82296 () Bool)

(assert (=> b!82296 (= e!53671 e!53672)))

(declare-fun c!13100 () Bool)

(assert (=> b!82296 (= c!13100 (and ((_ is Cons!1493) (toList!730 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))) (not (= (_1!1095 (h!2082 (toList!730 (+!101 lt!37475 (tuple2!2169 lt!37490 (zeroValue!2188 (v!2610 (underlying!283 thiss!992)))))))) lt!37474))))))

(assert (= (and d!20741 c!13099) b!82295))

(assert (= (and d!20741 (not c!13099)) b!82296))

(assert (= (and b!82296 c!13100) b!82297))

(assert (= (and b!82296 (not c!13100)) b!82298))

(declare-fun m!85037 () Bool)

(assert (=> b!82297 m!85037))

(assert (=> d!19849 d!20741))

(declare-fun d!20743 () Bool)

(assert (=> d!20743 (= (apply!80 lt!37606 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1192 (getValueByKey!139 (toList!730 lt!37606) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3497 () Bool)

(assert (= bs!3497 d!20743))

(assert (=> bs!3497 m!82295))

(assert (=> bs!3497 m!83315))

(assert (=> bs!3497 m!83315))

(declare-fun m!85039 () Bool)

(assert (=> bs!3497 m!85039))

(assert (=> b!80744 d!20743))

(assert (=> b!80744 d!20169))

(declare-fun d!20745 () Bool)

(declare-fun e!53673 () Bool)

(assert (=> d!20745 e!53673))

(declare-fun res!42676 () Bool)

(assert (=> d!20745 (=> res!42676 e!53673)))

(declare-fun lt!38411 () Bool)

(assert (=> d!20745 (= res!42676 (not lt!38411))))

(declare-fun lt!38410 () Bool)

(assert (=> d!20745 (= lt!38411 lt!38410)))

(declare-fun lt!38412 () Unit!2322)

(declare-fun e!53674 () Unit!2322)

(assert (=> d!20745 (= lt!38412 e!53674)))

(declare-fun c!13101 () Bool)

(assert (=> d!20745 (= c!13101 lt!38410)))

(assert (=> d!20745 (= lt!38410 (containsKey!142 (toList!730 lt!37826) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!20745 (= (contains!739 lt!37826 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) lt!38411)))

(declare-fun b!82299 () Bool)

(declare-fun lt!38413 () Unit!2322)

(assert (=> b!82299 (= e!53674 lt!38413)))

(assert (=> b!82299 (= lt!38413 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37826) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82299 (isDefined!91 (getValueByKey!139 (toList!730 lt!37826) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82300 () Bool)

(declare-fun Unit!2399 () Unit!2322)

(assert (=> b!82300 (= e!53674 Unit!2399)))

(declare-fun b!82301 () Bool)

(assert (=> b!82301 (= e!53673 (isDefined!91 (getValueByKey!139 (toList!730 lt!37826) (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!20745 c!13101) b!82299))

(assert (= (and d!20745 (not c!13101)) b!82300))

(assert (= (and d!20745 (not res!42676)) b!82301))

(assert (=> d!20745 m!82381))

(declare-fun m!85041 () Bool)

(assert (=> d!20745 m!85041))

(assert (=> b!82299 m!82381))

(declare-fun m!85043 () Bool)

(assert (=> b!82299 m!85043))

(assert (=> b!82299 m!82381))

(assert (=> b!82299 m!85029))

(assert (=> b!82299 m!85029))

(declare-fun m!85045 () Bool)

(assert (=> b!82299 m!85045))

(assert (=> b!82301 m!82381))

(assert (=> b!82301 m!85029))

(assert (=> b!82301 m!85029))

(assert (=> b!82301 m!85045))

(assert (=> b!80972 d!20745))

(declare-fun d!20747 () Bool)

(assert (=> d!20747 (= (apply!80 (+!101 lt!37798 (tuple2!2169 lt!37812 (minValue!2188 newMap!16))) lt!37809) (apply!80 lt!37798 lt!37809))))

(declare-fun lt!38414 () Unit!2322)

(assert (=> d!20747 (= lt!38414 (choose!481 lt!37798 lt!37812 (minValue!2188 newMap!16) lt!37809))))

(declare-fun e!53675 () Bool)

(assert (=> d!20747 e!53675))

(declare-fun res!42677 () Bool)

(assert (=> d!20747 (=> (not res!42677) (not e!53675))))

(assert (=> d!20747 (= res!42677 (contains!739 lt!37798 lt!37809))))

(assert (=> d!20747 (= (addApplyDifferent!56 lt!37798 lt!37812 (minValue!2188 newMap!16) lt!37809) lt!38414)))

(declare-fun b!82302 () Bool)

(assert (=> b!82302 (= e!53675 (not (= lt!37809 lt!37812)))))

(assert (= (and d!20747 res!42677) b!82302))

(assert (=> d!20747 m!82727))

(declare-fun m!85047 () Bool)

(assert (=> d!20747 m!85047))

(assert (=> d!20747 m!82715))

(declare-fun m!85049 () Bool)

(assert (=> d!20747 m!85049))

(assert (=> d!20747 m!82715))

(assert (=> d!20747 m!82721))

(assert (=> b!80923 d!20747))

(declare-fun d!20749 () Bool)

(assert (=> d!20749 (contains!739 (+!101 lt!37807 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16))) lt!37810)))

(declare-fun lt!38415 () Unit!2322)

(assert (=> d!20749 (= lt!38415 (choose!482 lt!37807 lt!37794 (zeroValue!2188 newMap!16) lt!37810))))

(assert (=> d!20749 (contains!739 lt!37807 lt!37810)))

(assert (=> d!20749 (= (addStillContains!56 lt!37807 lt!37794 (zeroValue!2188 newMap!16) lt!37810) lt!38415)))

(declare-fun bs!3498 () Bool)

(assert (= bs!3498 d!20749))

(assert (=> bs!3498 m!82717))

(assert (=> bs!3498 m!82717))

(assert (=> bs!3498 m!82735))

(declare-fun m!85051 () Bool)

(assert (=> bs!3498 m!85051))

(declare-fun m!85053 () Bool)

(assert (=> bs!3498 m!85053))

(assert (=> b!80923 d!20749))

(declare-fun d!20751 () Bool)

(assert (=> d!20751 (= (apply!80 lt!37798 lt!37809) (get!1192 (getValueByKey!139 (toList!730 lt!37798) lt!37809)))))

(declare-fun bs!3499 () Bool)

(assert (= bs!3499 d!20751))

(declare-fun m!85055 () Bool)

(assert (=> bs!3499 m!85055))

(assert (=> bs!3499 m!85055))

(declare-fun m!85057 () Bool)

(assert (=> bs!3499 m!85057))

(assert (=> b!80923 d!20751))

(declare-fun d!20753 () Bool)

(assert (=> d!20753 (= (apply!80 (+!101 lt!37796 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16))) lt!37795) (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37796 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16)))) lt!37795)))))

(declare-fun bs!3500 () Bool)

(assert (= bs!3500 d!20753))

(declare-fun m!85059 () Bool)

(assert (=> bs!3500 m!85059))

(assert (=> bs!3500 m!85059))

(declare-fun m!85061 () Bool)

(assert (=> bs!3500 m!85061))

(assert (=> b!80923 d!20753))

(declare-fun d!20755 () Bool)

(assert (=> d!20755 (= (apply!80 (+!101 lt!37804 (tuple2!2169 lt!37793 (minValue!2188 newMap!16))) lt!37806) (apply!80 lt!37804 lt!37806))))

(declare-fun lt!38416 () Unit!2322)

(assert (=> d!20755 (= lt!38416 (choose!481 lt!37804 lt!37793 (minValue!2188 newMap!16) lt!37806))))

(declare-fun e!53676 () Bool)

(assert (=> d!20755 e!53676))

(declare-fun res!42678 () Bool)

(assert (=> d!20755 (=> (not res!42678) (not e!53676))))

(assert (=> d!20755 (= res!42678 (contains!739 lt!37804 lt!37806))))

(assert (=> d!20755 (= (addApplyDifferent!56 lt!37804 lt!37793 (minValue!2188 newMap!16) lt!37806) lt!38416)))

(declare-fun b!82303 () Bool)

(assert (=> b!82303 (= e!53676 (not (= lt!37806 lt!37793)))))

(assert (= (and d!20755 res!42678) b!82303))

(assert (=> d!20755 m!82709))

(declare-fun m!85063 () Bool)

(assert (=> d!20755 m!85063))

(assert (=> d!20755 m!82705))

(declare-fun m!85065 () Bool)

(assert (=> d!20755 m!85065))

(assert (=> d!20755 m!82705))

(assert (=> d!20755 m!82707))

(assert (=> b!80923 d!20755))

(declare-fun d!20757 () Bool)

(assert (=> d!20757 (= (apply!80 lt!37804 lt!37806) (get!1192 (getValueByKey!139 (toList!730 lt!37804) lt!37806)))))

(declare-fun bs!3501 () Bool)

(assert (= bs!3501 d!20757))

(declare-fun m!85067 () Bool)

(assert (=> bs!3501 m!85067))

(assert (=> bs!3501 m!85067))

(declare-fun m!85069 () Bool)

(assert (=> bs!3501 m!85069))

(assert (=> b!80923 d!20757))

(declare-fun d!20759 () Bool)

(assert (=> d!20759 (= (apply!80 (+!101 lt!37798 (tuple2!2169 lt!37812 (minValue!2188 newMap!16))) lt!37809) (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37798 (tuple2!2169 lt!37812 (minValue!2188 newMap!16)))) lt!37809)))))

(declare-fun bs!3502 () Bool)

(assert (= bs!3502 d!20759))

(declare-fun m!85071 () Bool)

(assert (=> bs!3502 m!85071))

(assert (=> bs!3502 m!85071))

(declare-fun m!85073 () Bool)

(assert (=> bs!3502 m!85073))

(assert (=> b!80923 d!20759))

(declare-fun d!20761 () Bool)

(declare-fun e!53677 () Bool)

(assert (=> d!20761 e!53677))

(declare-fun res!42680 () Bool)

(assert (=> d!20761 (=> (not res!42680) (not e!53677))))

(declare-fun lt!38420 () ListLongMap!1429)

(assert (=> d!20761 (= res!42680 (contains!739 lt!38420 (_1!1095 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16)))))))

(declare-fun lt!38418 () List!1497)

(assert (=> d!20761 (= lt!38420 (ListLongMap!1430 lt!38418))))

(declare-fun lt!38417 () Unit!2322)

(declare-fun lt!38419 () Unit!2322)

(assert (=> d!20761 (= lt!38417 lt!38419)))

(assert (=> d!20761 (= (getValueByKey!139 lt!38418 (_1!1095 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20761 (= lt!38419 (lemmaContainsTupThenGetReturnValue!56 lt!38418 (_1!1095 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20761 (= lt!38418 (insertStrictlySorted!59 (toList!730 lt!37796) (_1!1095 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20761 (= (+!101 lt!37796 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16))) lt!38420)))

(declare-fun b!82304 () Bool)

(declare-fun res!42679 () Bool)

(assert (=> b!82304 (=> (not res!42679) (not e!53677))))

(assert (=> b!82304 (= res!42679 (= (getValueByKey!139 (toList!730 lt!38420) (_1!1095 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16))))))))

(declare-fun b!82305 () Bool)

(assert (=> b!82305 (= e!53677 (contains!742 (toList!730 lt!38420) (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16))))))

(assert (= (and d!20761 res!42680) b!82304))

(assert (= (and b!82304 res!42679) b!82305))

(declare-fun m!85075 () Bool)

(assert (=> d!20761 m!85075))

(declare-fun m!85077 () Bool)

(assert (=> d!20761 m!85077))

(declare-fun m!85079 () Bool)

(assert (=> d!20761 m!85079))

(declare-fun m!85081 () Bool)

(assert (=> d!20761 m!85081))

(declare-fun m!85083 () Bool)

(assert (=> b!82304 m!85083))

(declare-fun m!85085 () Bool)

(assert (=> b!82305 m!85085))

(assert (=> b!80923 d!20761))

(assert (=> b!80923 d!20287))

(declare-fun d!20763 () Bool)

(declare-fun e!53678 () Bool)

(assert (=> d!20763 e!53678))

(declare-fun res!42682 () Bool)

(assert (=> d!20763 (=> (not res!42682) (not e!53678))))

(declare-fun lt!38424 () ListLongMap!1429)

(assert (=> d!20763 (= res!42682 (contains!739 lt!38424 (_1!1095 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16)))))))

(declare-fun lt!38422 () List!1497)

(assert (=> d!20763 (= lt!38424 (ListLongMap!1430 lt!38422))))

(declare-fun lt!38421 () Unit!2322)

(declare-fun lt!38423 () Unit!2322)

(assert (=> d!20763 (= lt!38421 lt!38423)))

(assert (=> d!20763 (= (getValueByKey!139 lt!38422 (_1!1095 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20763 (= lt!38423 (lemmaContainsTupThenGetReturnValue!56 lt!38422 (_1!1095 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20763 (= lt!38422 (insertStrictlySorted!59 (toList!730 lt!37807) (_1!1095 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16)))))))

(assert (=> d!20763 (= (+!101 lt!37807 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16))) lt!38424)))

(declare-fun b!82306 () Bool)

(declare-fun res!42681 () Bool)

(assert (=> b!82306 (=> (not res!42681) (not e!53678))))

(assert (=> b!82306 (= res!42681 (= (getValueByKey!139 (toList!730 lt!38424) (_1!1095 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16))))))))

(declare-fun b!82307 () Bool)

(assert (=> b!82307 (= e!53678 (contains!742 (toList!730 lt!38424) (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16))))))

(assert (= (and d!20763 res!42682) b!82306))

(assert (= (and b!82306 res!42681) b!82307))

(declare-fun m!85087 () Bool)

(assert (=> d!20763 m!85087))

(declare-fun m!85089 () Bool)

(assert (=> d!20763 m!85089))

(declare-fun m!85091 () Bool)

(assert (=> d!20763 m!85091))

(declare-fun m!85093 () Bool)

(assert (=> d!20763 m!85093))

(declare-fun m!85095 () Bool)

(assert (=> b!82306 m!85095))

(declare-fun m!85097 () Bool)

(assert (=> b!82307 m!85097))

(assert (=> b!80923 d!20763))

(declare-fun d!20765 () Bool)

(declare-fun e!53679 () Bool)

(assert (=> d!20765 e!53679))

(declare-fun res!42683 () Bool)

(assert (=> d!20765 (=> res!42683 e!53679)))

(declare-fun lt!38426 () Bool)

(assert (=> d!20765 (= res!42683 (not lt!38426))))

(declare-fun lt!38425 () Bool)

(assert (=> d!20765 (= lt!38426 lt!38425)))

(declare-fun lt!38427 () Unit!2322)

(declare-fun e!53680 () Unit!2322)

(assert (=> d!20765 (= lt!38427 e!53680)))

(declare-fun c!13102 () Bool)

(assert (=> d!20765 (= c!13102 lt!38425)))

(assert (=> d!20765 (= lt!38425 (containsKey!142 (toList!730 (+!101 lt!37807 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16)))) lt!37810))))

(assert (=> d!20765 (= (contains!739 (+!101 lt!37807 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16))) lt!37810) lt!38426)))

(declare-fun b!82308 () Bool)

(declare-fun lt!38428 () Unit!2322)

(assert (=> b!82308 (= e!53680 lt!38428)))

(assert (=> b!82308 (= lt!38428 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 (+!101 lt!37807 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16)))) lt!37810))))

(assert (=> b!82308 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37807 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16)))) lt!37810))))

(declare-fun b!82309 () Bool)

(declare-fun Unit!2400 () Unit!2322)

(assert (=> b!82309 (= e!53680 Unit!2400)))

(declare-fun b!82310 () Bool)

(assert (=> b!82310 (= e!53679 (isDefined!91 (getValueByKey!139 (toList!730 (+!101 lt!37807 (tuple2!2169 lt!37794 (zeroValue!2188 newMap!16)))) lt!37810)))))

(assert (= (and d!20765 c!13102) b!82308))

(assert (= (and d!20765 (not c!13102)) b!82309))

(assert (= (and d!20765 (not res!42683)) b!82310))

(declare-fun m!85099 () Bool)

(assert (=> d!20765 m!85099))

(declare-fun m!85101 () Bool)

(assert (=> b!82308 m!85101))

(declare-fun m!85103 () Bool)

(assert (=> b!82308 m!85103))

(assert (=> b!82308 m!85103))

(declare-fun m!85105 () Bool)

(assert (=> b!82308 m!85105))

(assert (=> b!82310 m!85103))

(assert (=> b!82310 m!85103))

(assert (=> b!82310 m!85105))

(assert (=> b!80923 d!20765))

(declare-fun d!20767 () Bool)

(declare-fun e!53681 () Bool)

(assert (=> d!20767 e!53681))

(declare-fun res!42685 () Bool)

(assert (=> d!20767 (=> (not res!42685) (not e!53681))))

(declare-fun lt!38432 () ListLongMap!1429)

(assert (=> d!20767 (= res!42685 (contains!739 lt!38432 (_1!1095 (tuple2!2169 lt!37812 (minValue!2188 newMap!16)))))))

(declare-fun lt!38430 () List!1497)

(assert (=> d!20767 (= lt!38432 (ListLongMap!1430 lt!38430))))

(declare-fun lt!38429 () Unit!2322)

(declare-fun lt!38431 () Unit!2322)

(assert (=> d!20767 (= lt!38429 lt!38431)))

(assert (=> d!20767 (= (getValueByKey!139 lt!38430 (_1!1095 (tuple2!2169 lt!37812 (minValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37812 (minValue!2188 newMap!16)))))))

(assert (=> d!20767 (= lt!38431 (lemmaContainsTupThenGetReturnValue!56 lt!38430 (_1!1095 (tuple2!2169 lt!37812 (minValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37812 (minValue!2188 newMap!16)))))))

(assert (=> d!20767 (= lt!38430 (insertStrictlySorted!59 (toList!730 lt!37798) (_1!1095 (tuple2!2169 lt!37812 (minValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37812 (minValue!2188 newMap!16)))))))

(assert (=> d!20767 (= (+!101 lt!37798 (tuple2!2169 lt!37812 (minValue!2188 newMap!16))) lt!38432)))

(declare-fun b!82311 () Bool)

(declare-fun res!42684 () Bool)

(assert (=> b!82311 (=> (not res!42684) (not e!53681))))

(assert (=> b!82311 (= res!42684 (= (getValueByKey!139 (toList!730 lt!38432) (_1!1095 (tuple2!2169 lt!37812 (minValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37812 (minValue!2188 newMap!16))))))))

(declare-fun b!82312 () Bool)

(assert (=> b!82312 (= e!53681 (contains!742 (toList!730 lt!38432) (tuple2!2169 lt!37812 (minValue!2188 newMap!16))))))

(assert (= (and d!20767 res!42685) b!82311))

(assert (= (and b!82311 res!42684) b!82312))

(declare-fun m!85107 () Bool)

(assert (=> d!20767 m!85107))

(declare-fun m!85109 () Bool)

(assert (=> d!20767 m!85109))

(declare-fun m!85111 () Bool)

(assert (=> d!20767 m!85111))

(declare-fun m!85113 () Bool)

(assert (=> d!20767 m!85113))

(declare-fun m!85115 () Bool)

(assert (=> b!82311 m!85115))

(declare-fun m!85117 () Bool)

(assert (=> b!82312 m!85117))

(assert (=> b!80923 d!20767))

(declare-fun d!20769 () Bool)

(assert (=> d!20769 (= (apply!80 (+!101 lt!37796 (tuple2!2169 lt!37811 (zeroValue!2188 newMap!16))) lt!37795) (apply!80 lt!37796 lt!37795))))

(declare-fun lt!38433 () Unit!2322)

(assert (=> d!20769 (= lt!38433 (choose!481 lt!37796 lt!37811 (zeroValue!2188 newMap!16) lt!37795))))

(declare-fun e!53682 () Bool)

(assert (=> d!20769 e!53682))

(declare-fun res!42686 () Bool)

(assert (=> d!20769 (=> (not res!42686) (not e!53682))))

(assert (=> d!20769 (= res!42686 (contains!739 lt!37796 lt!37795))))

(assert (=> d!20769 (= (addApplyDifferent!56 lt!37796 lt!37811 (zeroValue!2188 newMap!16) lt!37795) lt!38433)))

(declare-fun b!82313 () Bool)

(assert (=> b!82313 (= e!53682 (not (= lt!37795 lt!37811)))))

(assert (= (and d!20769 res!42686) b!82313))

(assert (=> d!20769 m!82711))

(declare-fun m!85119 () Bool)

(assert (=> d!20769 m!85119))

(assert (=> d!20769 m!82713))

(declare-fun m!85121 () Bool)

(assert (=> d!20769 m!85121))

(assert (=> d!20769 m!82713))

(assert (=> d!20769 m!82729))

(assert (=> b!80923 d!20769))

(declare-fun d!20771 () Bool)

(assert (=> d!20771 (= (apply!80 (+!101 lt!37804 (tuple2!2169 lt!37793 (minValue!2188 newMap!16))) lt!37806) (get!1192 (getValueByKey!139 (toList!730 (+!101 lt!37804 (tuple2!2169 lt!37793 (minValue!2188 newMap!16)))) lt!37806)))))

(declare-fun bs!3503 () Bool)

(assert (= bs!3503 d!20771))

(declare-fun m!85123 () Bool)

(assert (=> bs!3503 m!85123))

(assert (=> bs!3503 m!85123))

(declare-fun m!85125 () Bool)

(assert (=> bs!3503 m!85125))

(assert (=> b!80923 d!20771))

(declare-fun d!20773 () Bool)

(assert (=> d!20773 (= (apply!80 lt!37796 lt!37795) (get!1192 (getValueByKey!139 (toList!730 lt!37796) lt!37795)))))

(declare-fun bs!3504 () Bool)

(assert (= bs!3504 d!20773))

(declare-fun m!85127 () Bool)

(assert (=> bs!3504 m!85127))

(assert (=> bs!3504 m!85127))

(declare-fun m!85129 () Bool)

(assert (=> bs!3504 m!85129))

(assert (=> b!80923 d!20773))

(declare-fun d!20775 () Bool)

(declare-fun e!53683 () Bool)

(assert (=> d!20775 e!53683))

(declare-fun res!42688 () Bool)

(assert (=> d!20775 (=> (not res!42688) (not e!53683))))

(declare-fun lt!38437 () ListLongMap!1429)

(assert (=> d!20775 (= res!42688 (contains!739 lt!38437 (_1!1095 (tuple2!2169 lt!37793 (minValue!2188 newMap!16)))))))

(declare-fun lt!38435 () List!1497)

(assert (=> d!20775 (= lt!38437 (ListLongMap!1430 lt!38435))))

(declare-fun lt!38434 () Unit!2322)

(declare-fun lt!38436 () Unit!2322)

(assert (=> d!20775 (= lt!38434 lt!38436)))

(assert (=> d!20775 (= (getValueByKey!139 lt!38435 (_1!1095 (tuple2!2169 lt!37793 (minValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37793 (minValue!2188 newMap!16)))))))

(assert (=> d!20775 (= lt!38436 (lemmaContainsTupThenGetReturnValue!56 lt!38435 (_1!1095 (tuple2!2169 lt!37793 (minValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37793 (minValue!2188 newMap!16)))))))

(assert (=> d!20775 (= lt!38435 (insertStrictlySorted!59 (toList!730 lt!37804) (_1!1095 (tuple2!2169 lt!37793 (minValue!2188 newMap!16))) (_2!1095 (tuple2!2169 lt!37793 (minValue!2188 newMap!16)))))))

(assert (=> d!20775 (= (+!101 lt!37804 (tuple2!2169 lt!37793 (minValue!2188 newMap!16))) lt!38437)))

(declare-fun b!82314 () Bool)

(declare-fun res!42687 () Bool)

(assert (=> b!82314 (=> (not res!42687) (not e!53683))))

(assert (=> b!82314 (= res!42687 (= (getValueByKey!139 (toList!730 lt!38437) (_1!1095 (tuple2!2169 lt!37793 (minValue!2188 newMap!16)))) (Some!144 (_2!1095 (tuple2!2169 lt!37793 (minValue!2188 newMap!16))))))))

(declare-fun b!82315 () Bool)

(assert (=> b!82315 (= e!53683 (contains!742 (toList!730 lt!38437) (tuple2!2169 lt!37793 (minValue!2188 newMap!16))))))

(assert (= (and d!20775 res!42688) b!82314))

(assert (= (and b!82314 res!42687) b!82315))

(declare-fun m!85131 () Bool)

(assert (=> d!20775 m!85131))

(declare-fun m!85133 () Bool)

(assert (=> d!20775 m!85133))

(declare-fun m!85135 () Bool)

(assert (=> d!20775 m!85135))

(declare-fun m!85137 () Bool)

(assert (=> d!20775 m!85137))

(declare-fun m!85139 () Bool)

(assert (=> b!82314 m!85139))

(declare-fun m!85141 () Bool)

(assert (=> b!82315 m!85141))

(assert (=> b!80923 d!20775))

(declare-fun d!20777 () Bool)

(declare-fun lt!38438 () Bool)

(assert (=> d!20777 (= lt!38438 (select (content!86 lt!37873) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(declare-fun e!53684 () Bool)

(assert (=> d!20777 (= lt!38438 e!53684)))

(declare-fun res!42690 () Bool)

(assert (=> d!20777 (=> (not res!42690) (not e!53684))))

(assert (=> d!20777 (= res!42690 ((_ is Cons!1493) lt!37873))))

(assert (=> d!20777 (= (contains!742 lt!37873 (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))) lt!38438)))

(declare-fun b!82316 () Bool)

(declare-fun e!53685 () Bool)

(assert (=> b!82316 (= e!53684 e!53685)))

(declare-fun res!42689 () Bool)

(assert (=> b!82316 (=> res!42689 e!53685)))

(assert (=> b!82316 (= res!42689 (= (h!2082 lt!37873) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(declare-fun b!82317 () Bool)

(assert (=> b!82317 (= e!53685 (contains!742 (t!5156 lt!37873) (tuple2!2169 (_1!1095 lt!37209) (_2!1095 lt!37209))))))

(assert (= (and d!20777 res!42690) b!82316))

(assert (= (and b!82316 (not res!42689)) b!82317))

(declare-fun m!85143 () Bool)

(assert (=> d!20777 m!85143))

(declare-fun m!85145 () Bool)

(assert (=> d!20777 m!85145))

(declare-fun m!85147 () Bool)

(assert (=> b!82317 m!85147))

(assert (=> b!81047 d!20777))

(declare-fun d!20779 () Bool)

(declare-fun res!42691 () Bool)

(declare-fun e!53686 () Bool)

(assert (=> d!20779 (=> res!42691 e!53686)))

(assert (=> d!20779 (= res!42691 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37217))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37217)))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(assert (=> d!20779 (= (containsKey!142 (t!5156 (toList!730 lt!37217)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) e!53686)))

(declare-fun b!82318 () Bool)

(declare-fun e!53687 () Bool)

(assert (=> b!82318 (= e!53686 e!53687)))

(declare-fun res!42692 () Bool)

(assert (=> b!82318 (=> (not res!42692) (not e!53687))))

(assert (=> b!82318 (= res!42692 (and (or (not ((_ is Cons!1493) (t!5156 (toList!730 lt!37217)))) (bvsle (_1!1095 (h!2082 (t!5156 (toList!730 lt!37217)))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))) ((_ is Cons!1493) (t!5156 (toList!730 lt!37217))) (bvslt (_1!1095 (h!2082 (t!5156 (toList!730 lt!37217)))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(declare-fun b!82319 () Bool)

(assert (=> b!82319 (= e!53687 (containsKey!142 (t!5156 (t!5156 (toList!730 lt!37217))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (= (and d!20779 (not res!42691)) b!82318))

(assert (= (and b!82318 res!42692) b!82319))

(assert (=> b!82319 m!81737))

(declare-fun m!85149 () Bool)

(assert (=> b!82319 m!85149))

(assert (=> b!80954 d!20779))

(declare-fun d!20781 () Bool)

(assert (=> d!20781 (= (get!1192 (getValueByKey!139 (toList!730 lt!37477) lt!37488)) (v!2616 (getValueByKey!139 (toList!730 lt!37477) lt!37488)))))

(assert (=> d!19833 d!20781))

(declare-fun b!82323 () Bool)

(declare-fun e!53689 () Option!145)

(assert (=> b!82323 (= e!53689 None!143)))

(declare-fun b!82322 () Bool)

(assert (=> b!82322 (= e!53689 (getValueByKey!139 (t!5156 (toList!730 lt!37477)) lt!37488))))

(declare-fun d!20783 () Bool)

(declare-fun c!13103 () Bool)

(assert (=> d!20783 (= c!13103 (and ((_ is Cons!1493) (toList!730 lt!37477)) (= (_1!1095 (h!2082 (toList!730 lt!37477))) lt!37488)))))

(declare-fun e!53688 () Option!145)

(assert (=> d!20783 (= (getValueByKey!139 (toList!730 lt!37477) lt!37488) e!53688)))

(declare-fun b!82320 () Bool)

(assert (=> b!82320 (= e!53688 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37477)))))))

(declare-fun b!82321 () Bool)

(assert (=> b!82321 (= e!53688 e!53689)))

(declare-fun c!13104 () Bool)

(assert (=> b!82321 (= c!13104 (and ((_ is Cons!1493) (toList!730 lt!37477)) (not (= (_1!1095 (h!2082 (toList!730 lt!37477))) lt!37488))))))

(assert (= (and d!20783 c!13103) b!82320))

(assert (= (and d!20783 (not c!13103)) b!82321))

(assert (= (and b!82321 c!13104) b!82322))

(assert (= (and b!82321 (not c!13104)) b!82323))

(declare-fun m!85151 () Bool)

(assert (=> b!82322 m!85151))

(assert (=> d!19833 d!20783))

(assert (=> b!80907 d!20283))

(declare-fun b!82324 () Bool)

(declare-fun e!53692 () Bool)

(declare-fun call!7671 () Bool)

(assert (=> b!82324 (= e!53692 call!7671)))

(declare-fun b!82325 () Bool)

(declare-fun e!53691 () Bool)

(assert (=> b!82325 (= e!53691 call!7671)))

(declare-fun b!82326 () Bool)

(assert (=> b!82326 (= e!53692 e!53691)))

(declare-fun lt!38441 () (_ BitVec 64))

(assert (=> b!82326 (= lt!38441 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000))))

(declare-fun lt!38440 () Unit!2322)

(assert (=> b!82326 (= lt!38440 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3956 (_2!1094 lt!37425)) lt!38441 #b00000000000000000000000000000000))))

(assert (=> b!82326 (arrayContainsKey!0 (_keys!3956 (_2!1094 lt!37425)) lt!38441 #b00000000000000000000000000000000)))

(declare-fun lt!38439 () Unit!2322)

(assert (=> b!82326 (= lt!38439 lt!38440)))

(declare-fun res!42694 () Bool)

(assert (=> b!82326 (= res!42694 (= (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000) (_keys!3956 (_2!1094 lt!37425)) (mask!6298 (_2!1094 lt!37425))) (Found!235 #b00000000000000000000000000000000)))))

(assert (=> b!82326 (=> (not res!42694) (not e!53691))))

(declare-fun bm!7668 () Bool)

(assert (=> bm!7668 (= call!7671 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3956 (_2!1094 lt!37425)) (mask!6298 (_2!1094 lt!37425))))))

(declare-fun b!82327 () Bool)

(declare-fun e!53690 () Bool)

(assert (=> b!82327 (= e!53690 e!53692)))

(declare-fun c!13105 () Bool)

(assert (=> b!82327 (= c!13105 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (_2!1094 lt!37425))) #b00000000000000000000000000000000)))))

(declare-fun d!20785 () Bool)

(declare-fun res!42693 () Bool)

(assert (=> d!20785 (=> res!42693 e!53690)))

(assert (=> d!20785 (= res!42693 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 (_2!1094 lt!37425)))))))

(assert (=> d!20785 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3956 (_2!1094 lt!37425)) (mask!6298 (_2!1094 lt!37425))) e!53690)))

(assert (= (and d!20785 (not res!42693)) b!82327))

(assert (= (and b!82327 c!13105) b!82326))

(assert (= (and b!82327 (not c!13105)) b!82324))

(assert (= (and b!82326 res!42694) b!82325))

(assert (= (or b!82325 b!82324) bm!7668))

(assert (=> b!82326 m!83193))

(declare-fun m!85153 () Bool)

(assert (=> b!82326 m!85153))

(declare-fun m!85155 () Bool)

(assert (=> b!82326 m!85155))

(assert (=> b!82326 m!83193))

(declare-fun m!85157 () Bool)

(assert (=> b!82326 m!85157))

(declare-fun m!85159 () Bool)

(assert (=> bm!7668 m!85159))

(assert (=> b!82327 m!83193))

(assert (=> b!82327 m!83193))

(assert (=> b!82327 m!83195))

(assert (=> b!80727 d!20785))

(declare-fun b!82331 () Bool)

(declare-fun e!53694 () Option!145)

(assert (=> b!82331 (= e!53694 None!143)))

(declare-fun b!82330 () Bool)

(assert (=> b!82330 (= e!53694 (getValueByKey!139 (t!5156 (t!5156 (toList!730 lt!37546))) (_1!1095 lt!37210)))))

(declare-fun d!20787 () Bool)

(declare-fun c!13106 () Bool)

(assert (=> d!20787 (= c!13106 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37546))) (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37546)))) (_1!1095 lt!37210))))))

(declare-fun e!53693 () Option!145)

(assert (=> d!20787 (= (getValueByKey!139 (t!5156 (toList!730 lt!37546)) (_1!1095 lt!37210)) e!53693)))

(declare-fun b!82328 () Bool)

(assert (=> b!82328 (= e!53693 (Some!144 (_2!1095 (h!2082 (t!5156 (toList!730 lt!37546))))))))

(declare-fun b!82329 () Bool)

(assert (=> b!82329 (= e!53693 e!53694)))

(declare-fun c!13107 () Bool)

(assert (=> b!82329 (= c!13107 (and ((_ is Cons!1493) (t!5156 (toList!730 lt!37546))) (not (= (_1!1095 (h!2082 (t!5156 (toList!730 lt!37546)))) (_1!1095 lt!37210)))))))

(assert (= (and d!20787 c!13106) b!82328))

(assert (= (and d!20787 (not c!13106)) b!82329))

(assert (= (and b!82329 c!13107) b!82330))

(assert (= (and b!82329 (not c!13107)) b!82331))

(declare-fun m!85161 () Bool)

(assert (=> b!82330 m!85161))

(assert (=> b!81140 d!20787))

(declare-fun d!20789 () Bool)

(assert (=> d!20789 (contains!739 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))

(declare-fun lt!38444 () Unit!2322)

(declare-fun choose!488 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 64) (_ BitVec 32) Int) Unit!2322)

(assert (=> d!20789 (= lt!38444 (choose!488 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(assert (=> d!20789 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20789 (= (lemmaArrayContainsKeyThenInListMap!17 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38444)))

(declare-fun bs!3505 () Bool)

(assert (= bs!3505 d!20789))

(assert (=> bs!3505 m!81949))

(assert (=> bs!3505 m!81949))

(assert (=> bs!3505 m!81737))

(assert (=> bs!3505 m!82513))

(assert (=> bs!3505 m!81737))

(declare-fun m!85163 () Bool)

(assert (=> bs!3505 m!85163))

(assert (=> bs!3505 m!82223))

(assert (=> b!80862 d!20789))

(declare-fun d!20791 () Bool)

(declare-fun e!53695 () Bool)

(assert (=> d!20791 e!53695))

(declare-fun res!42695 () Bool)

(assert (=> d!20791 (=> res!42695 e!53695)))

(declare-fun lt!38446 () Bool)

(assert (=> d!20791 (= res!42695 (not lt!38446))))

(declare-fun lt!38445 () Bool)

(assert (=> d!20791 (= lt!38446 lt!38445)))

(declare-fun lt!38447 () Unit!2322)

(declare-fun e!53696 () Unit!2322)

(assert (=> d!20791 (= lt!38447 e!53696)))

(declare-fun c!13108 () Bool)

(assert (=> d!20791 (= c!13108 lt!38445)))

(assert (=> d!20791 (= lt!38445 (containsKey!142 (toList!730 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!20791 (= (contains!739 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) lt!38446)))

(declare-fun b!82332 () Bool)

(declare-fun lt!38448 () Unit!2322)

(assert (=> b!82332 (= e!53696 lt!38448)))

(assert (=> b!82332 (= lt!38448 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> b!82332 (isDefined!91 (getValueByKey!139 (toList!730 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!82333 () Bool)

(declare-fun Unit!2401 () Unit!2322)

(assert (=> b!82333 (= e!53696 Unit!2401)))

(declare-fun b!82334 () Bool)

(assert (=> b!82334 (= e!53695 (isDefined!91 (getValueByKey!139 (toList!730 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355))))))

(assert (= (and d!20791 c!13108) b!82332))

(assert (= (and d!20791 (not c!13108)) b!82333))

(assert (= (and d!20791 (not res!42695)) b!82334))

(assert (=> d!20791 m!81737))

(declare-fun m!85165 () Bool)

(assert (=> d!20791 m!85165))

(assert (=> b!82332 m!81737))

(declare-fun m!85167 () Bool)

(assert (=> b!82332 m!85167))

(assert (=> b!82332 m!81737))

(declare-fun m!85169 () Bool)

(assert (=> b!82332 m!85169))

(assert (=> b!82332 m!85169))

(declare-fun m!85171 () Bool)

(assert (=> b!82332 m!85171))

(assert (=> b!82334 m!81737))

(assert (=> b!82334 m!85169))

(assert (=> b!82334 m!85169))

(assert (=> b!82334 m!85171))

(assert (=> b!80862 d!20791))

(assert (=> b!80862 d!19879))

(declare-fun b!82338 () Bool)

(declare-fun e!53698 () Option!145)

(assert (=> b!82338 (= e!53698 None!143)))

(declare-fun b!82337 () Bool)

(assert (=> b!82337 (= e!53698 (getValueByKey!139 (t!5156 (toList!730 lt!37771)) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun c!13109 () Bool)

(declare-fun d!20793 () Bool)

(assert (=> d!20793 (= c!13109 (and ((_ is Cons!1493) (toList!730 lt!37771)) (= (_1!1095 (h!2082 (toList!730 lt!37771))) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53697 () Option!145)

(assert (=> d!20793 (= (getValueByKey!139 (toList!730 lt!37771) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53697)))

(declare-fun b!82335 () Bool)

(assert (=> b!82335 (= e!53697 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37771)))))))

(declare-fun b!82336 () Bool)

(assert (=> b!82336 (= e!53697 e!53698)))

(declare-fun c!13110 () Bool)

(assert (=> b!82336 (= c!13110 (and ((_ is Cons!1493) (toList!730 lt!37771)) (not (= (_1!1095 (h!2082 (toList!730 lt!37771))) (_1!1095 (tuple2!2169 lt!37491 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20793 c!13109) b!82335))

(assert (= (and d!20793 (not c!13109)) b!82336))

(assert (= (and b!82336 c!13110) b!82337))

(assert (= (and b!82336 (not c!13110)) b!82338))

(declare-fun m!85173 () Bool)

(assert (=> b!82337 m!85173))

(assert (=> b!80894 d!20793))

(assert (=> d!19915 d!19905))

(declare-fun d!20795 () Bool)

(declare-fun e!53701 () Bool)

(assert (=> d!20795 e!53701))

(declare-fun res!42700 () Bool)

(assert (=> d!20795 (=> (not res!42700) (not e!53701))))

(declare-fun lt!38451 () SeekEntryResult!235)

(assert (=> d!20795 (= res!42700 ((_ is Found!235) lt!38451))))

(assert (=> d!20795 (= lt!38451 (seekEntryOrOpen!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (mask!6298 newMap!16)))))

(assert (=> d!20795 true))

(declare-fun _$33!66 () Unit!2322)

(assert (=> d!20795 (= (choose!485 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (defaultEntry!2292 newMap!16)) _$33!66)))

(declare-fun b!82343 () Bool)

(declare-fun res!42701 () Bool)

(assert (=> b!82343 (=> (not res!42701) (not e!53701))))

(assert (=> b!82343 (= res!42701 (inRange!0 (index!3076 lt!38451) (mask!6298 newMap!16)))))

(declare-fun b!82344 () Bool)

(assert (=> b!82344 (= e!53701 (= (select (arr!1892 (_keys!3956 newMap!16)) (index!3076 lt!38451)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (= (and d!20795 res!42700) b!82343))

(assert (= (and b!82343 res!42701) b!82344))

(assert (=> d!20795 m!81737))

(assert (=> d!20795 m!81959))

(declare-fun m!85175 () Bool)

(assert (=> b!82343 m!85175))

(declare-fun m!85177 () Bool)

(assert (=> b!82344 m!85177))

(assert (=> d!19915 d!20795))

(assert (=> d!19915 d!20023))

(declare-fun d!20797 () Bool)

(declare-fun res!42702 () Bool)

(declare-fun e!53702 () Bool)

(assert (=> d!20797 (=> res!42702 e!53702)))

(assert (=> d!20797 (= res!42702 (or ((_ is Nil!1494) lt!37873) ((_ is Nil!1494) (t!5156 lt!37873))))))

(assert (=> d!20797 (= (isStrictlySorted!283 lt!37873) e!53702)))

(declare-fun b!82345 () Bool)

(declare-fun e!53703 () Bool)

(assert (=> b!82345 (= e!53702 e!53703)))

(declare-fun res!42703 () Bool)

(assert (=> b!82345 (=> (not res!42703) (not e!53703))))

(assert (=> b!82345 (= res!42703 (bvslt (_1!1095 (h!2082 lt!37873)) (_1!1095 (h!2082 (t!5156 lt!37873)))))))

(declare-fun b!82346 () Bool)

(assert (=> b!82346 (= e!53703 (isStrictlySorted!283 (t!5156 lt!37873)))))

(assert (= (and d!20797 (not res!42702)) b!82345))

(assert (= (and b!82345 res!42703) b!82346))

(declare-fun m!85179 () Bool)

(assert (=> b!82346 m!85179))

(assert (=> d!19913 d!20797))

(assert (=> d!19913 d!20281))

(declare-fun b!82350 () Bool)

(declare-fun e!53705 () Option!145)

(assert (=> b!82350 (= e!53705 None!143)))

(declare-fun b!82349 () Bool)

(assert (=> b!82349 (= e!53705 (getValueByKey!139 (t!5156 (t!5156 lt!37515)) (_1!1095 lt!37209)))))

(declare-fun d!20799 () Bool)

(declare-fun c!13111 () Bool)

(assert (=> d!20799 (= c!13111 (and ((_ is Cons!1493) (t!5156 lt!37515)) (= (_1!1095 (h!2082 (t!5156 lt!37515))) (_1!1095 lt!37209))))))

(declare-fun e!53704 () Option!145)

(assert (=> d!20799 (= (getValueByKey!139 (t!5156 lt!37515) (_1!1095 lt!37209)) e!53704)))

(declare-fun b!82347 () Bool)

(assert (=> b!82347 (= e!53704 (Some!144 (_2!1095 (h!2082 (t!5156 lt!37515)))))))

(declare-fun b!82348 () Bool)

(assert (=> b!82348 (= e!53704 e!53705)))

(declare-fun c!13112 () Bool)

(assert (=> b!82348 (= c!13112 (and ((_ is Cons!1493) (t!5156 lt!37515)) (not (= (_1!1095 (h!2082 (t!5156 lt!37515))) (_1!1095 lt!37209)))))))

(assert (= (and d!20799 c!13111) b!82347))

(assert (= (and d!20799 (not c!13111)) b!82348))

(assert (= (and b!82348 c!13112) b!82349))

(assert (= (and b!82348 (not c!13112)) b!82350))

(declare-fun m!85181 () Bool)

(assert (=> b!82349 m!85181))

(assert (=> b!80685 d!20799))

(assert (=> bm!7552 d!20345))

(declare-fun b!82354 () Bool)

(declare-fun e!53707 () Option!145)

(assert (=> b!82354 (= e!53707 None!143)))

(declare-fun b!82353 () Bool)

(assert (=> b!82353 (= e!53707 (getValueByKey!139 (t!5156 (toList!730 lt!37892)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!20801 () Bool)

(declare-fun c!13113 () Bool)

(assert (=> d!20801 (= c!13113 (and ((_ is Cons!1493) (toList!730 lt!37892)) (= (_1!1095 (h!2082 (toList!730 lt!37892))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!53706 () Option!145)

(assert (=> d!20801 (= (getValueByKey!139 (toList!730 lt!37892) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!53706)))

(declare-fun b!82351 () Bool)

(assert (=> b!82351 (= e!53706 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37892)))))))

(declare-fun b!82352 () Bool)

(assert (=> b!82352 (= e!53706 e!53707)))

(declare-fun c!13114 () Bool)

(assert (=> b!82352 (= c!13114 (and ((_ is Cons!1493) (toList!730 lt!37892)) (not (= (_1!1095 (h!2082 (toList!730 lt!37892))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!20801 c!13113) b!82351))

(assert (= (and d!20801 (not c!13113)) b!82352))

(assert (= (and b!82352 c!13114) b!82353))

(assert (= (and b!82352 (not c!13114)) b!82354))

(declare-fun m!85183 () Bool)

(assert (=> b!82353 m!85183))

(assert (=> b!81086 d!20801))

(declare-fun bm!7669 () Bool)

(declare-fun call!7676 () Bool)

(declare-fun lt!38457 () ListLongMap!1429)

(assert (=> bm!7669 (= call!7676 (contains!739 lt!38457 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82355 () Bool)

(declare-fun e!53708 () Bool)

(assert (=> b!82355 (= e!53708 (= (apply!80 lt!38457 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!82356 () Bool)

(declare-fun e!53718 () Bool)

(assert (=> b!82356 (= e!53718 (not call!7676))))

(declare-fun b!82357 () Bool)

(declare-fun c!13116 () Bool)

(assert (=> b!82357 (= c!13116 (and (not (= (bvand lt!37407 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!37407 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53711 () ListLongMap!1429)

(declare-fun e!53719 () ListLongMap!1429)

(assert (=> b!82357 (= e!53711 e!53719)))

(declare-fun b!82358 () Bool)

(declare-fun call!7674 () ListLongMap!1429)

(assert (=> b!82358 (= e!53719 call!7674)))

(declare-fun b!82359 () Bool)

(declare-fun e!53712 () ListLongMap!1429)

(assert (=> b!82359 (= e!53712 e!53711)))

(declare-fun c!13117 () Bool)

(assert (=> b!82359 (= c!13117 (and (not (= (bvand lt!37407 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!37407 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!82360 () Bool)

(declare-fun e!53716 () Bool)

(declare-fun e!53717 () Bool)

(assert (=> b!82360 (= e!53716 e!53717)))

(declare-fun res!42705 () Bool)

(declare-fun call!7675 () Bool)

(assert (=> b!82360 (= res!42705 call!7675)))

(assert (=> b!82360 (=> (not res!42705) (not e!53717))))

(declare-fun b!82361 () Bool)

(declare-fun res!42707 () Bool)

(declare-fun e!53715 () Bool)

(assert (=> b!82361 (=> (not res!42707) (not e!53715))))

(assert (=> b!82361 (= res!42707 e!53718)))

(declare-fun c!13119 () Bool)

(assert (=> b!82361 (= c!13119 (not (= (bvand lt!37407 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!82362 () Bool)

(declare-fun e!53713 () Unit!2322)

(declare-fun lt!38463 () Unit!2322)

(assert (=> b!82362 (= e!53713 lt!38463)))

(declare-fun lt!38467 () ListLongMap!1429)

(assert (=> b!82362 (= lt!38467 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37407 (zeroValue!2188 newMap!16) lt!37223 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38454 () (_ BitVec 64))

(assert (=> b!82362 (= lt!38454 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38470 () (_ BitVec 64))

(assert (=> b!82362 (= lt!38470 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38473 () Unit!2322)

(assert (=> b!82362 (= lt!38473 (addStillContains!56 lt!38467 lt!38454 (zeroValue!2188 newMap!16) lt!38470))))

(assert (=> b!82362 (contains!739 (+!101 lt!38467 (tuple2!2169 lt!38454 (zeroValue!2188 newMap!16))) lt!38470)))

(declare-fun lt!38461 () Unit!2322)

(assert (=> b!82362 (= lt!38461 lt!38473)))

(declare-fun lt!38458 () ListLongMap!1429)

(assert (=> b!82362 (= lt!38458 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37407 (zeroValue!2188 newMap!16) lt!37223 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38472 () (_ BitVec 64))

(assert (=> b!82362 (= lt!38472 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38469 () (_ BitVec 64))

(assert (=> b!82362 (= lt!38469 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38460 () Unit!2322)

(assert (=> b!82362 (= lt!38460 (addApplyDifferent!56 lt!38458 lt!38472 lt!37223 lt!38469))))

(assert (=> b!82362 (= (apply!80 (+!101 lt!38458 (tuple2!2169 lt!38472 lt!37223)) lt!38469) (apply!80 lt!38458 lt!38469))))

(declare-fun lt!38462 () Unit!2322)

(assert (=> b!82362 (= lt!38462 lt!38460)))

(declare-fun lt!38456 () ListLongMap!1429)

(assert (=> b!82362 (= lt!38456 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37407 (zeroValue!2188 newMap!16) lt!37223 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38471 () (_ BitVec 64))

(assert (=> b!82362 (= lt!38471 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38455 () (_ BitVec 64))

(assert (=> b!82362 (= lt!38455 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38465 () Unit!2322)

(assert (=> b!82362 (= lt!38465 (addApplyDifferent!56 lt!38456 lt!38471 (zeroValue!2188 newMap!16) lt!38455))))

(assert (=> b!82362 (= (apply!80 (+!101 lt!38456 (tuple2!2169 lt!38471 (zeroValue!2188 newMap!16))) lt!38455) (apply!80 lt!38456 lt!38455))))

(declare-fun lt!38452 () Unit!2322)

(assert (=> b!82362 (= lt!38452 lt!38465)))

(declare-fun lt!38464 () ListLongMap!1429)

(assert (=> b!82362 (= lt!38464 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37407 (zeroValue!2188 newMap!16) lt!37223 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38453 () (_ BitVec 64))

(assert (=> b!82362 (= lt!38453 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38466 () (_ BitVec 64))

(assert (=> b!82362 (= lt!38466 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!82362 (= lt!38463 (addApplyDifferent!56 lt!38464 lt!38453 lt!37223 lt!38466))))

(assert (=> b!82362 (= (apply!80 (+!101 lt!38464 (tuple2!2169 lt!38453 lt!37223)) lt!38466) (apply!80 lt!38464 lt!38466))))

(declare-fun b!82363 () Bool)

(assert (=> b!82363 (= e!53717 (= (apply!80 lt!38457 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37223))))

(declare-fun bm!7670 () Bool)

(declare-fun call!7678 () ListLongMap!1429)

(declare-fun call!7677 () ListLongMap!1429)

(assert (=> bm!7670 (= call!7678 call!7677)))

(declare-fun b!82364 () Bool)

(assert (=> b!82364 (= e!53718 e!53708)))

(declare-fun res!42708 () Bool)

(assert (=> b!82364 (= res!42708 call!7676)))

(assert (=> b!82364 (=> (not res!42708) (not e!53708))))

(declare-fun b!82365 () Bool)

(declare-fun e!53709 () Bool)

(assert (=> b!82365 (= e!53709 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82366 () Bool)

(declare-fun res!42710 () Bool)

(assert (=> b!82366 (=> (not res!42710) (not e!53715))))

(declare-fun e!53714 () Bool)

(assert (=> b!82366 (= res!42710 e!53714)))

(declare-fun res!42712 () Bool)

(assert (=> b!82366 (=> res!42712 e!53714)))

(assert (=> b!82366 (= res!42712 (not e!53709))))

(declare-fun res!42706 () Bool)

(assert (=> b!82366 (=> (not res!42706) (not e!53709))))

(assert (=> b!82366 (= res!42706 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!82367 () Bool)

(declare-fun call!7673 () ListLongMap!1429)

(assert (=> b!82367 (= e!53719 call!7673)))

(declare-fun b!82368 () Bool)

(assert (=> b!82368 (= e!53716 (not call!7675))))

(declare-fun b!82369 () Bool)

(declare-fun e!53720 () Bool)

(assert (=> b!82369 (= e!53720 (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82370 () Bool)

(declare-fun call!7672 () ListLongMap!1429)

(assert (=> b!82370 (= e!53712 (+!101 call!7672 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)))))

(declare-fun c!13120 () Bool)

(declare-fun bm!7671 () Bool)

(assert (=> bm!7671 (= call!7672 (+!101 (ite c!13120 call!7677 (ite c!13117 call!7678 call!7673)) (ite (or c!13120 c!13117) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223))))))

(declare-fun bm!7672 () Bool)

(assert (=> bm!7672 (= call!7677 (getCurrentListMapNoExtraKeys!66 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37407 (zeroValue!2188 newMap!16) lt!37223 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!82371 () Bool)

(declare-fun e!53710 () Bool)

(assert (=> b!82371 (= e!53710 (= (apply!80 lt!38457 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1893 (_values!2275 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82371 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_values!2275 newMap!16))))))

(assert (=> b!82371 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun bm!7673 () Bool)

(assert (=> bm!7673 (= call!7675 (contains!739 lt!38457 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82372 () Bool)

(assert (=> b!82372 (= e!53714 e!53710)))

(declare-fun res!42709 () Bool)

(assert (=> b!82372 (=> (not res!42709) (not e!53710))))

(assert (=> b!82372 (= res!42709 (contains!739 lt!38457 (select (arr!1892 (_keys!3956 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82372 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(declare-fun b!82373 () Bool)

(declare-fun Unit!2402 () Unit!2322)

(assert (=> b!82373 (= e!53713 Unit!2402)))

(declare-fun bm!7674 () Bool)

(assert (=> bm!7674 (= call!7674 call!7672)))

(declare-fun b!82374 () Bool)

(assert (=> b!82374 (= e!53715 e!53716)))

(declare-fun c!13118 () Bool)

(assert (=> b!82374 (= c!13118 (not (= (bvand lt!37407 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!20803 () Bool)

(assert (=> d!20803 e!53715))

(declare-fun res!42704 () Bool)

(assert (=> d!20803 (=> (not res!42704) (not e!53715))))

(assert (=> d!20803 (= res!42704 (or (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))))

(declare-fun lt!38459 () ListLongMap!1429)

(assert (=> d!20803 (= lt!38457 lt!38459)))

(declare-fun lt!38468 () Unit!2322)

(assert (=> d!20803 (= lt!38468 e!53713)))

(declare-fun c!13115 () Bool)

(assert (=> d!20803 (= c!13115 e!53720)))

(declare-fun res!42711 () Bool)

(assert (=> d!20803 (=> (not res!42711) (not e!53720))))

(assert (=> d!20803 (= res!42711 (bvslt #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!20803 (= lt!38459 e!53712)))

(assert (=> d!20803 (= c!13120 (and (not (= (bvand lt!37407 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!37407 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20803 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20803 (= (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37407 (zeroValue!2188 newMap!16) lt!37223 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38457)))

(declare-fun bm!7675 () Bool)

(assert (=> bm!7675 (= call!7673 call!7678)))

(declare-fun b!82375 () Bool)

(assert (=> b!82375 (= e!53711 call!7674)))

(assert (= (and d!20803 c!13120) b!82370))

(assert (= (and d!20803 (not c!13120)) b!82359))

(assert (= (and b!82359 c!13117) b!82375))

(assert (= (and b!82359 (not c!13117)) b!82357))

(assert (= (and b!82357 c!13116) b!82358))

(assert (= (and b!82357 (not c!13116)) b!82367))

(assert (= (or b!82358 b!82367) bm!7675))

(assert (= (or b!82375 bm!7675) bm!7670))

(assert (= (or b!82375 b!82358) bm!7674))

(assert (= (or b!82370 bm!7670) bm!7672))

(assert (= (or b!82370 bm!7674) bm!7671))

(assert (= (and d!20803 res!42711) b!82369))

(assert (= (and d!20803 c!13115) b!82362))

(assert (= (and d!20803 (not c!13115)) b!82373))

(assert (= (and d!20803 res!42704) b!82366))

(assert (= (and b!82366 res!42706) b!82365))

(assert (= (and b!82366 (not res!42712)) b!82372))

(assert (= (and b!82372 res!42709) b!82371))

(assert (= (and b!82366 res!42710) b!82361))

(assert (= (and b!82361 c!13119) b!82364))

(assert (= (and b!82361 (not c!13119)) b!82356))

(assert (= (and b!82364 res!42708) b!82355))

(assert (= (or b!82364 b!82356) bm!7669))

(assert (= (and b!82361 res!42707) b!82374))

(assert (= (and b!82374 c!13118) b!82360))

(assert (= (and b!82374 (not c!13118)) b!82368))

(assert (= (and b!82360 res!42705) b!82363))

(assert (= (or b!82360 b!82368) bm!7673))

(declare-fun b_lambda!3653 () Bool)

(assert (=> (not b_lambda!3653) (not b!82371)))

(assert (=> b!82371 t!5170))

(declare-fun b_and!5001 () Bool)

(assert (= b_and!4997 (and (=> t!5170 result!2849) b_and!5001)))

(assert (=> b!82371 t!5172))

(declare-fun b_and!5003 () Bool)

(assert (= b_and!4999 (and (=> t!5172 result!2851) b_and!5003)))

(declare-fun m!85185 () Bool)

(assert (=> b!82362 m!85185))

(assert (=> b!82362 m!85185))

(declare-fun m!85187 () Bool)

(assert (=> b!82362 m!85187))

(assert (=> b!82362 m!82381))

(declare-fun m!85189 () Bool)

(assert (=> b!82362 m!85189))

(declare-fun m!85191 () Bool)

(assert (=> b!82362 m!85191))

(declare-fun m!85193 () Bool)

(assert (=> b!82362 m!85193))

(declare-fun m!85195 () Bool)

(assert (=> b!82362 m!85195))

(declare-fun m!85197 () Bool)

(assert (=> b!82362 m!85197))

(declare-fun m!85199 () Bool)

(assert (=> b!82362 m!85199))

(assert (=> b!82362 m!85195))

(declare-fun m!85201 () Bool)

(assert (=> b!82362 m!85201))

(declare-fun m!85203 () Bool)

(assert (=> b!82362 m!85203))

(declare-fun m!85205 () Bool)

(assert (=> b!82362 m!85205))

(declare-fun m!85207 () Bool)

(assert (=> b!82362 m!85207))

(assert (=> b!82362 m!85193))

(declare-fun m!85209 () Bool)

(assert (=> b!82362 m!85209))

(declare-fun m!85211 () Bool)

(assert (=> b!82362 m!85211))

(declare-fun m!85213 () Bool)

(assert (=> b!82362 m!85213))

(assert (=> b!82362 m!85197))

(declare-fun m!85215 () Bool)

(assert (=> b!82362 m!85215))

(assert (=> b!82365 m!82381))

(assert (=> b!82365 m!82381))

(assert (=> b!82365 m!82583))

(declare-fun m!85217 () Bool)

(assert (=> b!82355 m!85217))

(declare-fun m!85219 () Bool)

(assert (=> bm!7673 m!85219))

(declare-fun m!85221 () Bool)

(assert (=> b!82370 m!85221))

(assert (=> b!82371 m!82381))

(assert (=> b!82371 m!82743))

(assert (=> b!82371 m!82809))

(assert (=> b!82371 m!82743))

(assert (=> b!82371 m!82811))

(assert (=> b!82371 m!82809))

(assert (=> b!82371 m!82381))

(declare-fun m!85223 () Bool)

(assert (=> b!82371 m!85223))

(declare-fun m!85225 () Bool)

(assert (=> b!82363 m!85225))

(assert (=> b!82369 m!82381))

(assert (=> b!82369 m!82381))

(assert (=> b!82369 m!82583))

(assert (=> b!82372 m!82381))

(assert (=> b!82372 m!82381))

(declare-fun m!85227 () Bool)

(assert (=> b!82372 m!85227))

(assert (=> bm!7672 m!85211))

(declare-fun m!85229 () Bool)

(assert (=> bm!7671 m!85229))

(assert (=> d!20803 m!82223))

(declare-fun m!85231 () Bool)

(assert (=> bm!7669 m!85231))

(assert (=> d!19821 d!20803))

(assert (=> d!19821 d!19879))

(assert (=> d!19821 d!20023))

(declare-fun d!20805 () Bool)

(declare-fun e!53721 () Bool)

(assert (=> d!20805 e!53721))

(declare-fun res!42714 () Bool)

(assert (=> d!20805 (=> (not res!42714) (not e!53721))))

(declare-fun lt!38477 () ListLongMap!1429)

(assert (=> d!20805 (= res!42714 (contains!739 lt!38477 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223))))))

(declare-fun lt!38475 () List!1497)

(assert (=> d!20805 (= lt!38477 (ListLongMap!1430 lt!38475))))

(declare-fun lt!38474 () Unit!2322)

(declare-fun lt!38476 () Unit!2322)

(assert (=> d!20805 (= lt!38474 lt!38476)))

(assert (=> d!20805 (= (getValueByKey!139 lt!38475 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223))))))

(assert (=> d!20805 (= lt!38476 (lemmaContainsTupThenGetReturnValue!56 lt!38475 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223))))))

(assert (=> d!20805 (= lt!38475 (insertStrictlySorted!59 (toList!730 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223))))))

(assert (=> d!20805 (= (+!101 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) lt!38477)))

(declare-fun b!82376 () Bool)

(declare-fun res!42713 () Bool)

(assert (=> b!82376 (=> (not res!42713) (not e!53721))))

(assert (=> b!82376 (= res!42713 (= (getValueByKey!139 (toList!730 lt!38477) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)))))))

(declare-fun b!82377 () Bool)

(assert (=> b!82377 (= e!53721 (contains!742 (toList!730 lt!38477) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)))))

(assert (= (and d!20805 res!42714) b!82376))

(assert (= (and b!82376 res!42713) b!82377))

(declare-fun m!85233 () Bool)

(assert (=> d!20805 m!85233))

(declare-fun m!85235 () Bool)

(assert (=> d!20805 m!85235))

(declare-fun m!85237 () Bool)

(assert (=> d!20805 m!85237))

(declare-fun m!85239 () Bool)

(assert (=> d!20805 m!85239))

(declare-fun m!85241 () Bool)

(assert (=> b!82376 m!85241))

(declare-fun m!85243 () Bool)

(assert (=> b!82377 m!85243))

(assert (=> d!19821 d!20805))

(declare-fun d!20807 () Bool)

(assert (=> d!20807 (= (+!101 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37223)) (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) lt!37407 (zeroValue!2188 newMap!16) lt!37223 #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(assert (=> d!20807 true))

(declare-fun _$8!70 () Unit!2322)

(assert (=> d!20807 (= (choose!480 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) lt!37407 (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) lt!37223 (defaultEntry!2292 newMap!16)) _$8!70)))

(declare-fun bs!3506 () Bool)

(assert (= bs!3506 d!20807))

(assert (=> bs!3506 m!81949))

(assert (=> bs!3506 m!81949))

(assert (=> bs!3506 m!82569))

(assert (=> bs!3506 m!82571))

(assert (=> d!19821 d!20807))

(assert (=> b!80930 d!20283))

(declare-fun d!20809 () Bool)

(assert (=> d!20809 (= ($colon$colon!69 e!52934 (ite c!12747 (h!2082 (toList!730 lt!37211)) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210)))) (Cons!1493 (ite c!12747 (h!2082 (toList!730 lt!37211)) (tuple2!2169 (_1!1095 lt!37210) (_2!1095 lt!37210))) e!52934))))

(assert (=> bm!7548 d!20809))

(declare-fun lt!38478 () Bool)

(declare-fun d!20811 () Bool)

(assert (=> d!20811 (= lt!38478 (select (content!86 (toList!730 lt!37763)) (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun e!53722 () Bool)

(assert (=> d!20811 (= lt!38478 e!53722)))

(declare-fun res!42716 () Bool)

(assert (=> d!20811 (=> (not res!42716) (not e!53722))))

(assert (=> d!20811 (= res!42716 ((_ is Cons!1493) (toList!730 lt!37763)))))

(assert (=> d!20811 (= (contains!742 (toList!730 lt!37763) (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!38478)))

(declare-fun b!82378 () Bool)

(declare-fun e!53723 () Bool)

(assert (=> b!82378 (= e!53722 e!53723)))

(declare-fun res!42715 () Bool)

(assert (=> b!82378 (=> res!42715 e!53723)))

(assert (=> b!82378 (= res!42715 (= (h!2082 (toList!730 lt!37763)) (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!82379 () Bool)

(assert (=> b!82379 (= e!53723 (contains!742 (t!5156 (toList!730 lt!37763)) (tuple2!2169 lt!37472 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!20811 res!42716) b!82378))

(assert (= (and b!82378 (not res!42715)) b!82379))

(declare-fun m!85245 () Bool)

(assert (=> d!20811 m!85245))

(declare-fun m!85247 () Bool)

(assert (=> d!20811 m!85247))

(declare-fun m!85249 () Bool)

(assert (=> b!82379 m!85249))

(assert (=> b!80891 d!20811))

(assert (=> bm!7489 d!19779))

(declare-fun d!20813 () Bool)

(declare-fun lt!38479 () Bool)

(assert (=> d!20813 (= lt!38479 (select (content!86 (toList!730 lt!37949)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(declare-fun e!53724 () Bool)

(assert (=> d!20813 (= lt!38479 e!53724)))

(declare-fun res!42718 () Bool)

(assert (=> d!20813 (=> (not res!42718) (not e!53724))))

(assert (=> d!20813 (= res!42718 ((_ is Cons!1493) (toList!730 lt!37949)))))

(assert (=> d!20813 (= (contains!742 (toList!730 lt!37949) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) lt!38479)))

(declare-fun b!82380 () Bool)

(declare-fun e!53725 () Bool)

(assert (=> b!82380 (= e!53724 e!53725)))

(declare-fun res!42717 () Bool)

(assert (=> b!82380 (=> res!42717 e!53725)))

(assert (=> b!82380 (= res!42717 (= (h!2082 (toList!730 lt!37949)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(declare-fun b!82381 () Bool)

(assert (=> b!82381 (= e!53725 (contains!742 (t!5156 (toList!730 lt!37949)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)))))

(assert (= (and d!20813 res!42718) b!82380))

(assert (= (and b!82380 (not res!42717)) b!82381))

(declare-fun m!85251 () Bool)

(assert (=> d!20813 m!85251))

(declare-fun m!85253 () Bool)

(assert (=> d!20813 m!85253))

(declare-fun m!85255 () Bool)

(assert (=> b!82381 m!85255))

(assert (=> b!81181 d!20813))

(declare-fun d!20815 () Bool)

(declare-fun e!53726 () Bool)

(assert (=> d!20815 e!53726))

(declare-fun res!42719 () Bool)

(assert (=> d!20815 (=> res!42719 e!53726)))

(declare-fun lt!38481 () Bool)

(assert (=> d!20815 (= res!42719 (not lt!38481))))

(declare-fun lt!38480 () Bool)

(assert (=> d!20815 (= lt!38481 lt!38480)))

(declare-fun lt!38482 () Unit!2322)

(declare-fun e!53727 () Unit!2322)

(assert (=> d!20815 (= lt!38482 e!53727)))

(declare-fun c!13121 () Bool)

(assert (=> d!20815 (= c!13121 lt!38480)))

(assert (=> d!20815 (= lt!38480 (containsKey!142 (toList!730 lt!37620) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> d!20815 (= (contains!739 lt!37620 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38481)))

(declare-fun b!82382 () Bool)

(declare-fun lt!38483 () Unit!2322)

(assert (=> b!82382 (= e!53727 lt!38483)))

(assert (=> b!82382 (= lt!38483 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37620) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(assert (=> b!82382 (isDefined!91 (getValueByKey!139 (toList!730 lt!37620) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82383 () Bool)

(declare-fun Unit!2403 () Unit!2322)

(assert (=> b!82383 (= e!53727 Unit!2403)))

(declare-fun b!82384 () Bool)

(assert (=> b!82384 (= e!53726 (isDefined!91 (getValueByKey!139 (toList!730 lt!37620) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20815 c!13121) b!82382))

(assert (= (and d!20815 (not c!13121)) b!82383))

(assert (= (and d!20815 (not res!42719)) b!82384))

(declare-fun m!85257 () Bool)

(assert (=> d!20815 m!85257))

(declare-fun m!85259 () Bool)

(assert (=> b!82382 m!85259))

(assert (=> b!82382 m!82357))

(assert (=> b!82382 m!82357))

(declare-fun m!85261 () Bool)

(assert (=> b!82382 m!85261))

(assert (=> b!82384 m!82357))

(assert (=> b!82384 m!82357))

(assert (=> b!82384 m!85261))

(assert (=> d!19773 d!20815))

(declare-fun b!82388 () Bool)

(declare-fun e!53729 () Option!145)

(assert (=> b!82388 (= e!53729 None!143)))

(declare-fun b!82387 () Bool)

(assert (=> b!82387 (= e!53729 (getValueByKey!139 (t!5156 lt!37618) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20817 () Bool)

(declare-fun c!13122 () Bool)

(assert (=> d!20817 (= c!13122 (and ((_ is Cons!1493) lt!37618) (= (_1!1095 (h!2082 lt!37618)) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53728 () Option!145)

(assert (=> d!20817 (= (getValueByKey!139 lt!37618 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53728)))

(declare-fun b!82385 () Bool)

(assert (=> b!82385 (= e!53728 (Some!144 (_2!1095 (h!2082 lt!37618))))))

(declare-fun b!82386 () Bool)

(assert (=> b!82386 (= e!53728 e!53729)))

(declare-fun c!13123 () Bool)

(assert (=> b!82386 (= c!13123 (and ((_ is Cons!1493) lt!37618) (not (= (_1!1095 (h!2082 lt!37618)) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20817 c!13122) b!82385))

(assert (= (and d!20817 (not c!13122)) b!82386))

(assert (= (and b!82386 c!13123) b!82387))

(assert (= (and b!82386 (not c!13123)) b!82388))

(declare-fun m!85263 () Bool)

(assert (=> b!82387 m!85263))

(assert (=> d!19773 d!20817))

(declare-fun d!20819 () Bool)

(assert (=> d!20819 (= (getValueByKey!139 lt!37618 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) (Some!144 (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun lt!38484 () Unit!2322)

(assert (=> d!20819 (= lt!38484 (choose!478 lt!37618 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun e!53730 () Bool)

(assert (=> d!20819 e!53730))

(declare-fun res!42720 () Bool)

(assert (=> d!20819 (=> (not res!42720) (not e!53730))))

(assert (=> d!20819 (= res!42720 (isStrictlySorted!283 lt!37618))))

(assert (=> d!20819 (= (lemmaContainsTupThenGetReturnValue!56 lt!37618 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38484)))

(declare-fun b!82389 () Bool)

(declare-fun res!42721 () Bool)

(assert (=> b!82389 (=> (not res!42721) (not e!53730))))

(assert (=> b!82389 (= res!42721 (containsKey!142 lt!37618 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82390 () Bool)

(assert (=> b!82390 (= e!53730 (contains!742 lt!37618 (tuple2!2169 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (= (and d!20819 res!42720) b!82389))

(assert (= (and b!82389 res!42721) b!82390))

(assert (=> d!20819 m!82351))

(declare-fun m!85265 () Bool)

(assert (=> d!20819 m!85265))

(declare-fun m!85267 () Bool)

(assert (=> d!20819 m!85267))

(declare-fun m!85269 () Bool)

(assert (=> b!82389 m!85269))

(declare-fun m!85271 () Bool)

(assert (=> b!82390 m!85271))

(assert (=> d!19773 d!20819))

(declare-fun bm!7676 () Bool)

(declare-fun call!7680 () List!1497)

(declare-fun call!7681 () List!1497)

(assert (=> bm!7676 (= call!7680 call!7681)))

(declare-fun b!82391 () Bool)

(declare-fun e!53731 () Bool)

(declare-fun lt!38485 () List!1497)

(assert (=> b!82391 (= e!53731 (contains!742 lt!38485 (tuple2!2169 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun b!82392 () Bool)

(declare-fun e!53732 () List!1497)

(declare-fun e!53735 () List!1497)

(assert (=> b!82392 (= e!53732 e!53735)))

(declare-fun c!13127 () Bool)

(assert (=> b!82392 (= c!13127 (and ((_ is Cons!1493) (toList!730 lt!37215)) (= (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun bm!7677 () Bool)

(declare-fun call!7679 () List!1497)

(assert (=> bm!7677 (= call!7679 call!7680)))

(declare-fun d!20821 () Bool)

(assert (=> d!20821 e!53731))

(declare-fun res!42722 () Bool)

(assert (=> d!20821 (=> (not res!42722) (not e!53731))))

(assert (=> d!20821 (= res!42722 (isStrictlySorted!283 lt!38485))))

(assert (=> d!20821 (= lt!38485 e!53732)))

(declare-fun c!13124 () Bool)

(assert (=> d!20821 (= c!13124 (and ((_ is Cons!1493) (toList!730 lt!37215)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> d!20821 (isStrictlySorted!283 (toList!730 lt!37215))))

(assert (=> d!20821 (= (insertStrictlySorted!59 (toList!730 lt!37215) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) lt!38485)))

(declare-fun bm!7678 () Bool)

(declare-fun e!53733 () List!1497)

(assert (=> bm!7678 (= call!7681 ($colon$colon!69 e!53733 (ite c!13124 (h!2082 (toList!730 lt!37215)) (tuple2!2169 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(declare-fun c!13126 () Bool)

(assert (=> bm!7678 (= c!13126 c!13124)))

(declare-fun b!82393 () Bool)

(declare-fun e!53734 () List!1497)

(assert (=> b!82393 (= e!53734 call!7679)))

(declare-fun b!82394 () Bool)

(declare-fun res!42723 () Bool)

(assert (=> b!82394 (=> (not res!42723) (not e!53731))))

(assert (=> b!82394 (= res!42723 (containsKey!142 lt!38485 (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82395 () Bool)

(declare-fun c!13125 () Bool)

(assert (=> b!82395 (= c!13125 (and ((_ is Cons!1493) (toList!730 lt!37215)) (bvsgt (_1!1095 (h!2082 (toList!730 lt!37215))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(assert (=> b!82395 (= e!53735 e!53734)))

(declare-fun b!82396 () Bool)

(assert (=> b!82396 (= e!53733 (insertStrictlySorted!59 (t!5156 (toList!730 lt!37215)) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) (_2!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun b!82397 () Bool)

(assert (=> b!82397 (= e!53735 call!7680)))

(declare-fun b!82398 () Bool)

(assert (=> b!82398 (= e!53734 call!7679)))

(declare-fun b!82399 () Bool)

(assert (=> b!82399 (= e!53733 (ite c!13127 (t!5156 (toList!730 lt!37215)) (ite c!13125 (Cons!1493 (h!2082 (toList!730 lt!37215)) (t!5156 (toList!730 lt!37215))) Nil!1494)))))

(declare-fun b!82400 () Bool)

(assert (=> b!82400 (= e!53732 call!7681)))

(assert (= (and d!20821 c!13124) b!82400))

(assert (= (and d!20821 (not c!13124)) b!82392))

(assert (= (and b!82392 c!13127) b!82397))

(assert (= (and b!82392 (not c!13127)) b!82395))

(assert (= (and b!82395 c!13125) b!82398))

(assert (= (and b!82395 (not c!13125)) b!82393))

(assert (= (or b!82398 b!82393) bm!7677))

(assert (= (or b!82397 bm!7677) bm!7676))

(assert (= (or b!82400 bm!7676) bm!7678))

(assert (= (and bm!7678 c!13126) b!82396))

(assert (= (and bm!7678 (not c!13126)) b!82399))

(assert (= (and d!20821 res!42722) b!82394))

(assert (= (and b!82394 res!42723) b!82391))

(declare-fun m!85273 () Bool)

(assert (=> b!82396 m!85273))

(declare-fun m!85275 () Bool)

(assert (=> bm!7678 m!85275))

(declare-fun m!85277 () Bool)

(assert (=> b!82391 m!85277))

(declare-fun m!85279 () Bool)

(assert (=> d!20821 m!85279))

(assert (=> d!20821 m!82491))

(declare-fun m!85281 () Bool)

(assert (=> b!82394 m!85281))

(assert (=> d!19773 d!20821))

(declare-fun d!20823 () Bool)

(declare-fun res!42724 () Bool)

(declare-fun e!53736 () Bool)

(assert (=> d!20823 (=> res!42724 e!53736)))

(assert (=> d!20823 (= res!42724 (and ((_ is Cons!1493) (toList!730 lt!37558)) (= (_1!1095 (h!2082 (toList!730 lt!37558))) (_1!1095 lt!37210))))))

(assert (=> d!20823 (= (containsKey!142 (toList!730 lt!37558) (_1!1095 lt!37210)) e!53736)))

(declare-fun b!82401 () Bool)

(declare-fun e!53737 () Bool)

(assert (=> b!82401 (= e!53736 e!53737)))

(declare-fun res!42725 () Bool)

(assert (=> b!82401 (=> (not res!42725) (not e!53737))))

(assert (=> b!82401 (= res!42725 (and (or (not ((_ is Cons!1493) (toList!730 lt!37558))) (bvsle (_1!1095 (h!2082 (toList!730 lt!37558))) (_1!1095 lt!37210))) ((_ is Cons!1493) (toList!730 lt!37558)) (bvslt (_1!1095 (h!2082 (toList!730 lt!37558))) (_1!1095 lt!37210))))))

(declare-fun b!82402 () Bool)

(assert (=> b!82402 (= e!53737 (containsKey!142 (t!5156 (toList!730 lt!37558)) (_1!1095 lt!37210)))))

(assert (= (and d!20823 (not res!42724)) b!82401))

(assert (= (and b!82401 res!42725) b!82402))

(declare-fun m!85283 () Bool)

(assert (=> b!82402 m!85283))

(assert (=> d!19933 d!20823))

(assert (=> b!81065 d!20599))

(assert (=> b!81065 d!19967))

(declare-fun d!20825 () Bool)

(assert (=> d!20825 (arrayContainsKey!0 lt!37732 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!38486 () Unit!2322)

(assert (=> d!20825 (= lt!38486 (choose!13 lt!37732 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405))))))

(assert (=> d!20825 (bvsge (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000000)))

(assert (=> d!20825 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!37732 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405))) lt!38486)))

(declare-fun bs!3507 () Bool)

(assert (= bs!3507 d!20825))

(assert (=> bs!3507 m!81737))

(assert (=> bs!3507 m!82535))

(assert (=> bs!3507 m!81737))

(declare-fun m!85285 () Bool)

(assert (=> bs!3507 m!85285))

(assert (=> d!19819 d!20825))

(assert (=> d!19819 d!20045))

(assert (=> d!19819 d!19695))

(assert (=> d!19819 d!19779))

(assert (=> d!19819 d!19829))

(declare-fun b!82403 () Bool)

(declare-fun e!53738 () (_ BitVec 32))

(declare-fun call!7682 () (_ BitVec 32))

(assert (=> b!82403 (= e!53738 (bvadd #b00000000000000000000000000000001 call!7682))))

(declare-fun b!82404 () Bool)

(assert (=> b!82404 (= e!53738 call!7682)))

(declare-fun bm!7679 () Bool)

(assert (=> bm!7679 (= call!7682 (arrayCountValidKeys!0 lt!37733 (bvadd (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000001) (bvadd (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000001)))))

(declare-fun d!20827 () Bool)

(declare-fun lt!38487 () (_ BitVec 32))

(assert (=> d!20827 (and (bvsge lt!38487 #b00000000000000000000000000000000) (bvsle lt!38487 (bvsub (size!2134 lt!37733) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)))))))

(declare-fun e!53739 () (_ BitVec 32))

(assert (=> d!20827 (= lt!38487 e!53739)))

(declare-fun c!13128 () Bool)

(assert (=> d!20827 (= c!13128 (bvsge (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (bvadd (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000001)))))

(assert (=> d!20827 (and (bvsle (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (bvadd (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000001)) (bvsge (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000001) (size!2134 lt!37733)))))

(assert (=> d!20827 (= (arrayCountValidKeys!0 lt!37733 (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (bvadd (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000001)) lt!38487)))

(declare-fun b!82405 () Bool)

(assert (=> b!82405 (= e!53739 #b00000000000000000000000000000000)))

(declare-fun b!82406 () Bool)

(assert (=> b!82406 (= e!53739 e!53738)))

(declare-fun c!13129 () Bool)

(assert (=> b!82406 (= c!13129 (validKeyInArray!0 (select (arr!1892 lt!37733) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)))))))

(assert (= (and d!20827 c!13128) b!82405))

(assert (= (and d!20827 (not c!13128)) b!82406))

(assert (= (and b!82406 c!13129) b!82403))

(assert (= (and b!82406 (not c!13129)) b!82404))

(assert (= (or b!82403 b!82404) bm!7679))

(declare-fun m!85287 () Bool)

(assert (=> bm!7679 m!85287))

(declare-fun m!85289 () Bool)

(assert (=> b!82406 m!85289))

(assert (=> b!82406 m!85289))

(declare-fun m!85291 () Bool)

(assert (=> b!82406 m!85291))

(assert (=> d!19819 d!20827))

(declare-fun d!20829 () Bool)

(declare-fun e!53740 () Bool)

(assert (=> d!20829 e!53740))

(declare-fun res!42726 () Bool)

(assert (=> d!20829 (=> res!42726 e!53740)))

(declare-fun lt!38489 () Bool)

(assert (=> d!20829 (= res!42726 (not lt!38489))))

(declare-fun lt!38488 () Bool)

(assert (=> d!20829 (= lt!38489 lt!38488)))

(declare-fun lt!38490 () Unit!2322)

(declare-fun e!53741 () Unit!2322)

(assert (=> d!20829 (= lt!38490 e!53741)))

(declare-fun c!13130 () Bool)

(assert (=> d!20829 (= c!13130 lt!38488)))

(assert (=> d!20829 (= lt!38488 (containsKey!142 (toList!730 (getCurrentListMap!426 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)))))))

(assert (=> d!20829 (= (contains!739 (getCurrentListMap!426 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)))) lt!38489)))

(declare-fun b!82407 () Bool)

(declare-fun lt!38491 () Unit!2322)

(assert (=> b!82407 (= e!53741 lt!38491)))

(assert (=> b!82407 (= lt!38491 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 (getCurrentListMap!426 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)))))))

(assert (=> b!82407 (isDefined!91 (getValueByKey!139 (toList!730 (getCurrentListMap!426 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)))))))

(declare-fun b!82408 () Bool)

(declare-fun Unit!2404 () Unit!2322)

(assert (=> b!82408 (= e!53741 Unit!2404)))

(declare-fun b!82409 () Bool)

(assert (=> b!82409 (= e!53740 (isDefined!91 (getValueByKey!139 (toList!730 (getCurrentListMap!426 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))) (select (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405))))))))

(assert (= (and d!20829 c!13130) b!82407))

(assert (= (and d!20829 (not c!13130)) b!82408))

(assert (= (and d!20829 (not res!42726)) b!82409))

(assert (=> d!20829 m!82531))

(declare-fun m!85293 () Bool)

(assert (=> d!20829 m!85293))

(assert (=> b!82407 m!82531))

(declare-fun m!85295 () Bool)

(assert (=> b!82407 m!85295))

(assert (=> b!82407 m!82531))

(declare-fun m!85297 () Bool)

(assert (=> b!82407 m!85297))

(assert (=> b!82407 m!85297))

(declare-fun m!85299 () Bool)

(assert (=> b!82407 m!85299))

(assert (=> b!82409 m!82531))

(assert (=> b!82409 m!85297))

(assert (=> b!82409 m!85297))

(assert (=> b!82409 m!85299))

(assert (=> d!19819 d!20829))

(declare-fun d!20831 () Bool)

(declare-fun e!53742 () Bool)

(assert (=> d!20831 e!53742))

(declare-fun res!42727 () Bool)

(assert (=> d!20831 (=> (not res!42727) (not e!53742))))

(assert (=> d!20831 (= res!42727 (and (bvsge (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000000) (bvslt (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (size!2134 lt!37724))))))

(declare-fun lt!38492 () Unit!2322)

(assert (=> d!20831 (= lt!38492 (choose!483 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (defaultEntry!2292 newMap!16)))))

(assert (=> d!20831 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20831 (= (lemmaValidKeyInArrayIsInListMap!89 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (defaultEntry!2292 newMap!16)) lt!38492)))

(declare-fun b!82410 () Bool)

(assert (=> b!82410 (= e!53742 (contains!739 (getCurrentListMap!426 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (select (arr!1892 lt!37724) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)))))))

(assert (= (and d!20831 res!42727) b!82410))

(declare-fun m!85301 () Bool)

(assert (=> d!20831 m!85301))

(assert (=> d!20831 m!82223))

(assert (=> b!82410 m!82555))

(declare-fun m!85303 () Bool)

(assert (=> b!82410 m!85303))

(assert (=> b!82410 m!82555))

(assert (=> b!82410 m!85303))

(declare-fun m!85305 () Bool)

(assert (=> b!82410 m!85305))

(assert (=> d!19819 d!20831))

(declare-fun b!82421 () Bool)

(declare-fun e!53748 () Bool)

(assert (=> b!82421 (= e!53748 (bvslt (size!2134 (_keys!3956 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!20833 () Bool)

(declare-fun e!53747 () Bool)

(assert (=> d!20833 e!53747))

(declare-fun res!42738 () Bool)

(assert (=> d!20833 (=> (not res!42738) (not e!53747))))

(assert (=> d!20833 (= res!42738 (and (bvsge (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000000) (bvslt (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (size!2134 (_keys!3956 newMap!16)))))))

(declare-fun lt!38495 () Unit!2322)

(declare-fun choose!1 (array!3971 (_ BitVec 32) (_ BitVec 64)) Unit!2322)

(assert (=> d!20833 (= lt!38495 (choose!1 (_keys!3956 newMap!16) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!20833 e!53748))

(declare-fun res!42739 () Bool)

(assert (=> d!20833 (=> (not res!42739) (not e!53748))))

(assert (=> d!20833 (= res!42739 (and (bvsge (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000000) (bvslt (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (size!2134 (_keys!3956 newMap!16)))))))

(assert (=> d!20833 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3956 newMap!16) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) lt!38495)))

(declare-fun b!82420 () Bool)

(declare-fun res!42737 () Bool)

(assert (=> b!82420 (=> (not res!42737) (not e!53748))))

(assert (=> b!82420 (= res!42737 (validKeyInArray!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(declare-fun b!82419 () Bool)

(declare-fun res!42736 () Bool)

(assert (=> b!82419 (=> (not res!42736) (not e!53748))))

(assert (=> b!82419 (= res!42736 (not (validKeyInArray!0 (select (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405))))))))

(declare-fun b!82422 () Bool)

(assert (=> b!82422 (= e!53747 (= (arrayCountValidKeys!0 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3956 newMap!16) #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!20833 res!42739) b!82419))

(assert (= (and b!82419 res!42736) b!82420))

(assert (= (and b!82420 res!42737) b!82421))

(assert (= (and d!20833 res!42738) b!82422))

(assert (=> d!20833 m!81737))

(declare-fun m!85307 () Bool)

(assert (=> d!20833 m!85307))

(assert (=> b!82420 m!81737))

(assert (=> b!82420 m!82063))

(declare-fun m!85309 () Bool)

(assert (=> b!82419 m!85309))

(assert (=> b!82419 m!85309))

(declare-fun m!85311 () Bool)

(assert (=> b!82419 m!85311))

(assert (=> b!82422 m!82527))

(assert (=> b!82422 m!82543))

(assert (=> b!82422 m!82045))

(assert (=> d!19819 d!20833))

(declare-fun d!20835 () Bool)

(declare-fun res!42740 () Bool)

(declare-fun e!53749 () Bool)

(assert (=> d!20835 (=> res!42740 e!53749)))

(assert (=> d!20835 (= res!42740 (= (select (arr!1892 lt!37732) #b00000000000000000000000000000000) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!20835 (= (arrayContainsKey!0 lt!37732 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) #b00000000000000000000000000000000) e!53749)))

(declare-fun b!82423 () Bool)

(declare-fun e!53750 () Bool)

(assert (=> b!82423 (= e!53749 e!53750)))

(declare-fun res!42741 () Bool)

(assert (=> b!82423 (=> (not res!42741) (not e!53750))))

(assert (=> b!82423 (= res!42741 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2134 lt!37732)))))

(declare-fun b!82424 () Bool)

(assert (=> b!82424 (= e!53750 (arrayContainsKey!0 lt!37732 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!20835 (not res!42740)) b!82423))

(assert (= (and b!82423 res!42741) b!82424))

(declare-fun m!85313 () Bool)

(assert (=> d!20835 m!85313))

(assert (=> b!82424 m!81737))

(declare-fun m!85315 () Bool)

(assert (=> b!82424 m!85315))

(assert (=> d!19819 d!20835))

(declare-fun b!82425 () Bool)

(declare-fun e!53753 () Bool)

(declare-fun call!7683 () Bool)

(assert (=> b!82425 (= e!53753 call!7683)))

(declare-fun b!82426 () Bool)

(declare-fun e!53752 () Bool)

(assert (=> b!82426 (= e!53752 call!7683)))

(declare-fun b!82427 () Bool)

(assert (=> b!82427 (= e!53753 e!53752)))

(declare-fun lt!38498 () (_ BitVec 64))

(assert (=> b!82427 (= lt!38498 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!38497 () Unit!2322)

(assert (=> b!82427 (= lt!38497 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) lt!38498 #b00000000000000000000000000000000))))

(assert (=> b!82427 (arrayContainsKey!0 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) lt!38498 #b00000000000000000000000000000000)))

(declare-fun lt!38496 () Unit!2322)

(assert (=> b!82427 (= lt!38496 lt!38497)))

(declare-fun res!42743 () Bool)

(assert (=> b!82427 (= res!42743 (= (seekEntryOrOpen!0 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000) (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (mask!6298 newMap!16)) (Found!235 #b00000000000000000000000000000000)))))

(assert (=> b!82427 (=> (not res!42743) (not e!53752))))

(declare-fun bm!7680 () Bool)

(assert (=> bm!7680 (= call!7683 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (mask!6298 newMap!16)))))

(declare-fun b!82428 () Bool)

(declare-fun e!53751 () Bool)

(assert (=> b!82428 (= e!53751 e!53753)))

(declare-fun c!13131 () Bool)

(assert (=> b!82428 (= c!13131 (validKeyInArray!0 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!20837 () Bool)

(declare-fun res!42742 () Bool)

(assert (=> d!20837 (=> res!42742 e!53751)))

(assert (=> d!20837 (= res!42742 (bvsge #b00000000000000000000000000000000 (size!2134 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))))))))

(assert (=> d!20837 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (mask!6298 newMap!16)) e!53751)))

(assert (= (and d!20837 (not res!42742)) b!82428))

(assert (= (and b!82428 c!13131) b!82427))

(assert (= (and b!82428 (not c!13131)) b!82425))

(assert (= (and b!82427 res!42743) b!82426))

(assert (= (or b!82426 b!82425) bm!7680))

(declare-fun m!85317 () Bool)

(assert (=> b!82427 m!85317))

(declare-fun m!85319 () Bool)

(assert (=> b!82427 m!85319))

(declare-fun m!85321 () Bool)

(assert (=> b!82427 m!85321))

(assert (=> b!82427 m!85317))

(declare-fun m!85323 () Bool)

(assert (=> b!82427 m!85323))

(declare-fun m!85325 () Bool)

(assert (=> bm!7680 m!85325))

(assert (=> b!82428 m!85317))

(assert (=> b!82428 m!85317))

(declare-fun m!85327 () Bool)

(assert (=> b!82428 m!85327))

(assert (=> d!19819 d!20837))

(declare-fun d!20839 () Bool)

(declare-fun e!53756 () Bool)

(assert (=> d!20839 e!53756))

(declare-fun res!42746 () Bool)

(assert (=> d!20839 (=> (not res!42746) (not e!53756))))

(assert (=> d!20839 (= res!42746 (and (bvsge (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000000) (bvslt (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (size!2134 (_keys!3956 newMap!16))) (bvslt (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (size!2135 (_values!2275 newMap!16)))))))

(declare-fun lt!38501 () Unit!2322)

(declare-fun choose!489 (array!3971 array!3973 (_ BitVec 32) (_ BitVec 32) V!3001 V!3001 (_ BitVec 32) (_ BitVec 64) V!3001 Int) Unit!2322)

(assert (=> d!20839 (= lt!38501 (choose!489 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 (defaultEntry!2292 newMap!16)))))

(assert (=> d!20839 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20839 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!17 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223 (defaultEntry!2292 newMap!16)) lt!38501)))

(declare-fun b!82431 () Bool)

(assert (=> b!82431 (= e!53756 (= (+!101 (getCurrentListMap!426 (_keys!3956 newMap!16) (_values!2275 newMap!16) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) lt!37223)) (getCurrentListMap!426 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16))))))

(assert (= (and d!20839 res!42746) b!82431))

(assert (=> d!20839 m!81737))

(declare-fun m!85329 () Bool)

(assert (=> d!20839 m!85329))

(assert (=> d!20839 m!82223))

(assert (=> b!82431 m!81949))

(assert (=> b!82431 m!82561))

(assert (=> b!82431 m!82557))

(assert (=> b!82431 m!81949))

(assert (=> b!82431 m!82533))

(assert (=> b!82431 m!82527))

(assert (=> d!19819 d!20839))

(declare-fun bm!7681 () Bool)

(declare-fun call!7688 () Bool)

(declare-fun lt!38507 () ListLongMap!1429)

(assert (=> bm!7681 (= call!7688 (contains!739 lt!38507 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82432 () Bool)

(declare-fun e!53757 () Bool)

(assert (=> b!82432 (= e!53757 (= (apply!80 lt!38507 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!82433 () Bool)

(declare-fun e!53767 () Bool)

(assert (=> b!82433 (= e!53767 (not call!7688))))

(declare-fun b!82434 () Bool)

(declare-fun c!13133 () Bool)

(assert (=> b!82434 (= c!13133 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53760 () ListLongMap!1429)

(declare-fun e!53768 () ListLongMap!1429)

(assert (=> b!82434 (= e!53760 e!53768)))

(declare-fun b!82435 () Bool)

(declare-fun call!7686 () ListLongMap!1429)

(assert (=> b!82435 (= e!53768 call!7686)))

(declare-fun b!82436 () Bool)

(declare-fun e!53761 () ListLongMap!1429)

(assert (=> b!82436 (= e!53761 e!53760)))

(declare-fun c!13134 () Bool)

(assert (=> b!82436 (= c!13134 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!82437 () Bool)

(declare-fun e!53765 () Bool)

(declare-fun e!53766 () Bool)

(assert (=> b!82437 (= e!53765 e!53766)))

(declare-fun res!42748 () Bool)

(declare-fun call!7687 () Bool)

(assert (=> b!82437 (= res!42748 call!7687)))

(assert (=> b!82437 (=> (not res!42748) (not e!53766))))

(declare-fun b!82438 () Bool)

(declare-fun res!42750 () Bool)

(declare-fun e!53764 () Bool)

(assert (=> b!82438 (=> (not res!42750) (not e!53764))))

(assert (=> b!82438 (= res!42750 e!53767)))

(declare-fun c!13136 () Bool)

(assert (=> b!82438 (= c!13136 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!82439 () Bool)

(declare-fun e!53762 () Unit!2322)

(declare-fun lt!38513 () Unit!2322)

(assert (=> b!82439 (= e!53762 lt!38513)))

(declare-fun lt!38517 () ListLongMap!1429)

(assert (=> b!82439 (= lt!38517 (getCurrentListMapNoExtraKeys!66 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38504 () (_ BitVec 64))

(assert (=> b!82439 (= lt!38504 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38520 () (_ BitVec 64))

(assert (=> b!82439 (= lt!38520 (select (arr!1892 lt!37724) #b00000000000000000000000000000000))))

(declare-fun lt!38523 () Unit!2322)

(assert (=> b!82439 (= lt!38523 (addStillContains!56 lt!38517 lt!38504 (zeroValue!2188 newMap!16) lt!38520))))

(assert (=> b!82439 (contains!739 (+!101 lt!38517 (tuple2!2169 lt!38504 (zeroValue!2188 newMap!16))) lt!38520)))

(declare-fun lt!38511 () Unit!2322)

(assert (=> b!82439 (= lt!38511 lt!38523)))

(declare-fun lt!38508 () ListLongMap!1429)

(assert (=> b!82439 (= lt!38508 (getCurrentListMapNoExtraKeys!66 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38522 () (_ BitVec 64))

(assert (=> b!82439 (= lt!38522 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38519 () (_ BitVec 64))

(assert (=> b!82439 (= lt!38519 (select (arr!1892 lt!37724) #b00000000000000000000000000000000))))

(declare-fun lt!38510 () Unit!2322)

(assert (=> b!82439 (= lt!38510 (addApplyDifferent!56 lt!38508 lt!38522 (minValue!2188 newMap!16) lt!38519))))

(assert (=> b!82439 (= (apply!80 (+!101 lt!38508 (tuple2!2169 lt!38522 (minValue!2188 newMap!16))) lt!38519) (apply!80 lt!38508 lt!38519))))

(declare-fun lt!38512 () Unit!2322)

(assert (=> b!82439 (= lt!38512 lt!38510)))

(declare-fun lt!38506 () ListLongMap!1429)

(assert (=> b!82439 (= lt!38506 (getCurrentListMapNoExtraKeys!66 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38521 () (_ BitVec 64))

(assert (=> b!82439 (= lt!38521 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38505 () (_ BitVec 64))

(assert (=> b!82439 (= lt!38505 (select (arr!1892 lt!37724) #b00000000000000000000000000000000))))

(declare-fun lt!38515 () Unit!2322)

(assert (=> b!82439 (= lt!38515 (addApplyDifferent!56 lt!38506 lt!38521 (zeroValue!2188 newMap!16) lt!38505))))

(assert (=> b!82439 (= (apply!80 (+!101 lt!38506 (tuple2!2169 lt!38521 (zeroValue!2188 newMap!16))) lt!38505) (apply!80 lt!38506 lt!38505))))

(declare-fun lt!38502 () Unit!2322)

(assert (=> b!82439 (= lt!38502 lt!38515)))

(declare-fun lt!38514 () ListLongMap!1429)

(assert (=> b!82439 (= lt!38514 (getCurrentListMapNoExtraKeys!66 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38503 () (_ BitVec 64))

(assert (=> b!82439 (= lt!38503 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38516 () (_ BitVec 64))

(assert (=> b!82439 (= lt!38516 (select (arr!1892 lt!37724) #b00000000000000000000000000000000))))

(assert (=> b!82439 (= lt!38513 (addApplyDifferent!56 lt!38514 lt!38503 (minValue!2188 newMap!16) lt!38516))))

(assert (=> b!82439 (= (apply!80 (+!101 lt!38514 (tuple2!2169 lt!38503 (minValue!2188 newMap!16))) lt!38516) (apply!80 lt!38514 lt!38516))))

(declare-fun b!82440 () Bool)

(assert (=> b!82440 (= e!53766 (= (apply!80 lt!38507 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun bm!7682 () Bool)

(declare-fun call!7690 () ListLongMap!1429)

(declare-fun call!7689 () ListLongMap!1429)

(assert (=> bm!7682 (= call!7690 call!7689)))

(declare-fun b!82441 () Bool)

(assert (=> b!82441 (= e!53767 e!53757)))

(declare-fun res!42751 () Bool)

(assert (=> b!82441 (= res!42751 call!7688)))

(assert (=> b!82441 (=> (not res!42751) (not e!53757))))

(declare-fun b!82442 () Bool)

(declare-fun e!53758 () Bool)

(assert (=> b!82442 (= e!53758 (validKeyInArray!0 (select (arr!1892 lt!37724) #b00000000000000000000000000000000)))))

(declare-fun b!82443 () Bool)

(declare-fun res!42753 () Bool)

(assert (=> b!82443 (=> (not res!42753) (not e!53764))))

(declare-fun e!53763 () Bool)

(assert (=> b!82443 (= res!42753 e!53763)))

(declare-fun res!42755 () Bool)

(assert (=> b!82443 (=> res!42755 e!53763)))

(assert (=> b!82443 (= res!42755 (not e!53758))))

(declare-fun res!42749 () Bool)

(assert (=> b!82443 (=> (not res!42749) (not e!53758))))

(assert (=> b!82443 (= res!42749 (bvslt #b00000000000000000000000000000000 (size!2134 lt!37724)))))

(declare-fun b!82444 () Bool)

(declare-fun call!7685 () ListLongMap!1429)

(assert (=> b!82444 (= e!53768 call!7685)))

(declare-fun b!82445 () Bool)

(assert (=> b!82445 (= e!53765 (not call!7687))))

(declare-fun b!82446 () Bool)

(declare-fun e!53769 () Bool)

(assert (=> b!82446 (= e!53769 (validKeyInArray!0 (select (arr!1892 lt!37724) #b00000000000000000000000000000000)))))

(declare-fun b!82447 () Bool)

(declare-fun call!7684 () ListLongMap!1429)

(assert (=> b!82447 (= e!53761 (+!101 call!7684 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun c!13137 () Bool)

(declare-fun bm!7683 () Bool)

(assert (=> bm!7683 (= call!7684 (+!101 (ite c!13137 call!7689 (ite c!13134 call!7690 call!7685)) (ite (or c!13137 c!13134) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7684 () Bool)

(assert (=> bm!7684 (= call!7689 (getCurrentListMapNoExtraKeys!66 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun b!82448 () Bool)

(declare-fun e!53759 () Bool)

(assert (=> b!82448 (= e!53759 (= (apply!80 lt!38507 (select (arr!1892 lt!37724) #b00000000000000000000000000000000)) (get!1189 (select (arr!1893 lt!37719) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82448 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 lt!37719)))))

(assert (=> b!82448 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 lt!37724)))))

(declare-fun bm!7685 () Bool)

(assert (=> bm!7685 (= call!7687 (contains!739 lt!38507 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82449 () Bool)

(assert (=> b!82449 (= e!53763 e!53759)))

(declare-fun res!42752 () Bool)

(assert (=> b!82449 (=> (not res!42752) (not e!53759))))

(assert (=> b!82449 (= res!42752 (contains!739 lt!38507 (select (arr!1892 lt!37724) #b00000000000000000000000000000000)))))

(assert (=> b!82449 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 lt!37724)))))

(declare-fun b!82450 () Bool)

(declare-fun Unit!2405 () Unit!2322)

(assert (=> b!82450 (= e!53762 Unit!2405)))

(declare-fun bm!7686 () Bool)

(assert (=> bm!7686 (= call!7686 call!7684)))

(declare-fun b!82451 () Bool)

(assert (=> b!82451 (= e!53764 e!53765)))

(declare-fun c!13135 () Bool)

(assert (=> b!82451 (= c!13135 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!20841 () Bool)

(assert (=> d!20841 e!53764))

(declare-fun res!42747 () Bool)

(assert (=> d!20841 (=> (not res!42747) (not e!53764))))

(assert (=> d!20841 (= res!42747 (or (bvsge #b00000000000000000000000000000000 (size!2134 lt!37724)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 lt!37724)))))))

(declare-fun lt!38509 () ListLongMap!1429)

(assert (=> d!20841 (= lt!38507 lt!38509)))

(declare-fun lt!38518 () Unit!2322)

(assert (=> d!20841 (= lt!38518 e!53762)))

(declare-fun c!13132 () Bool)

(assert (=> d!20841 (= c!13132 e!53769)))

(declare-fun res!42754 () Bool)

(assert (=> d!20841 (=> (not res!42754) (not e!53769))))

(assert (=> d!20841 (= res!42754 (bvslt #b00000000000000000000000000000000 (size!2134 lt!37724)))))

(assert (=> d!20841 (= lt!38509 e!53761)))

(assert (=> d!20841 (= c!13137 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20841 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20841 (= (getCurrentListMap!426 lt!37724 lt!37719 (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38507)))

(declare-fun bm!7687 () Bool)

(assert (=> bm!7687 (= call!7685 call!7690)))

(declare-fun b!82452 () Bool)

(assert (=> b!82452 (= e!53760 call!7686)))

(assert (= (and d!20841 c!13137) b!82447))

(assert (= (and d!20841 (not c!13137)) b!82436))

(assert (= (and b!82436 c!13134) b!82452))

(assert (= (and b!82436 (not c!13134)) b!82434))

(assert (= (and b!82434 c!13133) b!82435))

(assert (= (and b!82434 (not c!13133)) b!82444))

(assert (= (or b!82435 b!82444) bm!7687))

(assert (= (or b!82452 bm!7687) bm!7682))

(assert (= (or b!82452 b!82435) bm!7686))

(assert (= (or b!82447 bm!7682) bm!7684))

(assert (= (or b!82447 bm!7686) bm!7683))

(assert (= (and d!20841 res!42754) b!82446))

(assert (= (and d!20841 c!13132) b!82439))

(assert (= (and d!20841 (not c!13132)) b!82450))

(assert (= (and d!20841 res!42747) b!82443))

(assert (= (and b!82443 res!42749) b!82442))

(assert (= (and b!82443 (not res!42755)) b!82449))

(assert (= (and b!82449 res!42752) b!82448))

(assert (= (and b!82443 res!42753) b!82438))

(assert (= (and b!82438 c!13136) b!82441))

(assert (= (and b!82438 (not c!13136)) b!82433))

(assert (= (and b!82441 res!42751) b!82432))

(assert (= (or b!82441 b!82433) bm!7681))

(assert (= (and b!82438 res!42750) b!82451))

(assert (= (and b!82451 c!13135) b!82437))

(assert (= (and b!82451 (not c!13135)) b!82445))

(assert (= (and b!82437 res!42748) b!82440))

(assert (= (or b!82437 b!82445) bm!7685))

(declare-fun b_lambda!3655 () Bool)

(assert (=> (not b_lambda!3655) (not b!82448)))

(assert (=> b!82448 t!5170))

(declare-fun b_and!5005 () Bool)

(assert (= b_and!5001 (and (=> t!5170 result!2849) b_and!5005)))

(assert (=> b!82448 t!5172))

(declare-fun b_and!5007 () Bool)

(assert (= b_and!5003 (and (=> t!5172 result!2851) b_and!5007)))

(declare-fun m!85331 () Bool)

(assert (=> b!82439 m!85331))

(assert (=> b!82439 m!85331))

(declare-fun m!85333 () Bool)

(assert (=> b!82439 m!85333))

(declare-fun m!85335 () Bool)

(assert (=> b!82439 m!85335))

(declare-fun m!85337 () Bool)

(assert (=> b!82439 m!85337))

(declare-fun m!85339 () Bool)

(assert (=> b!82439 m!85339))

(declare-fun m!85341 () Bool)

(assert (=> b!82439 m!85341))

(declare-fun m!85343 () Bool)

(assert (=> b!82439 m!85343))

(declare-fun m!85345 () Bool)

(assert (=> b!82439 m!85345))

(declare-fun m!85347 () Bool)

(assert (=> b!82439 m!85347))

(assert (=> b!82439 m!85343))

(declare-fun m!85349 () Bool)

(assert (=> b!82439 m!85349))

(declare-fun m!85351 () Bool)

(assert (=> b!82439 m!85351))

(declare-fun m!85353 () Bool)

(assert (=> b!82439 m!85353))

(declare-fun m!85355 () Bool)

(assert (=> b!82439 m!85355))

(assert (=> b!82439 m!85341))

(declare-fun m!85357 () Bool)

(assert (=> b!82439 m!85357))

(declare-fun m!85359 () Bool)

(assert (=> b!82439 m!85359))

(declare-fun m!85361 () Bool)

(assert (=> b!82439 m!85361))

(assert (=> b!82439 m!85345))

(declare-fun m!85363 () Bool)

(assert (=> b!82439 m!85363))

(assert (=> b!82442 m!85335))

(assert (=> b!82442 m!85335))

(declare-fun m!85365 () Bool)

(assert (=> b!82442 m!85365))

(declare-fun m!85367 () Bool)

(assert (=> b!82432 m!85367))

(declare-fun m!85369 () Bool)

(assert (=> bm!7685 m!85369))

(declare-fun m!85371 () Bool)

(assert (=> b!82447 m!85371))

(assert (=> b!82448 m!85335))

(assert (=> b!82448 m!82743))

(declare-fun m!85373 () Bool)

(assert (=> b!82448 m!85373))

(assert (=> b!82448 m!82743))

(declare-fun m!85375 () Bool)

(assert (=> b!82448 m!85375))

(assert (=> b!82448 m!85373))

(assert (=> b!82448 m!85335))

(declare-fun m!85377 () Bool)

(assert (=> b!82448 m!85377))

(declare-fun m!85379 () Bool)

(assert (=> b!82440 m!85379))

(assert (=> b!82446 m!85335))

(assert (=> b!82446 m!85335))

(assert (=> b!82446 m!85365))

(assert (=> b!82449 m!85335))

(assert (=> b!82449 m!85335))

(declare-fun m!85381 () Bool)

(assert (=> b!82449 m!85381))

(assert (=> bm!7684 m!85359))

(declare-fun m!85383 () Bool)

(assert (=> bm!7683 m!85383))

(assert (=> d!20841 m!82223))

(declare-fun m!85385 () Bool)

(assert (=> bm!7681 m!85385))

(assert (=> d!19819 d!20841))

(declare-fun b!82453 () Bool)

(declare-fun e!53772 () Bool)

(declare-fun call!7691 () Bool)

(assert (=> b!82453 (= e!53772 call!7691)))

(declare-fun b!82454 () Bool)

(declare-fun e!53771 () Bool)

(assert (=> b!82454 (= e!53771 e!53772)))

(declare-fun c!13138 () Bool)

(assert (=> b!82454 (= c!13138 (validKeyInArray!0 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) lt!37739)))))

(declare-fun d!20843 () Bool)

(declare-fun res!42758 () Bool)

(declare-fun e!53773 () Bool)

(assert (=> d!20843 (=> res!42758 e!53773)))

(assert (=> d!20843 (= res!42758 (bvsge lt!37739 (size!2134 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))))))))

(assert (=> d!20843 (= (arrayNoDuplicates!0 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) lt!37739 lt!37722) e!53773)))

(declare-fun b!82455 () Bool)

(assert (=> b!82455 (= e!53773 e!53771)))

(declare-fun res!42757 () Bool)

(assert (=> b!82455 (=> (not res!42757) (not e!53771))))

(declare-fun e!53770 () Bool)

(assert (=> b!82455 (= res!42757 (not e!53770))))

(declare-fun res!42756 () Bool)

(assert (=> b!82455 (=> (not res!42756) (not e!53770))))

(assert (=> b!82455 (= res!42756 (validKeyInArray!0 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) lt!37739)))))

(declare-fun b!82456 () Bool)

(assert (=> b!82456 (= e!53770 (contains!741 lt!37722 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) lt!37739)))))

(declare-fun b!82457 () Bool)

(assert (=> b!82457 (= e!53772 call!7691)))

(declare-fun bm!7688 () Bool)

(assert (=> bm!7688 (= call!7691 (arrayNoDuplicates!0 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (bvadd lt!37739 #b00000000000000000000000000000001) (ite c!13138 (Cons!1494 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) lt!37739) lt!37722) lt!37722)))))

(assert (= (and d!20843 (not res!42758)) b!82455))

(assert (= (and b!82455 res!42756) b!82456))

(assert (= (and b!82455 res!42757) b!82454))

(assert (= (and b!82454 c!13138) b!82457))

(assert (= (and b!82454 (not c!13138)) b!82453))

(assert (= (or b!82457 b!82453) bm!7688))

(declare-fun m!85387 () Bool)

(assert (=> b!82454 m!85387))

(assert (=> b!82454 m!85387))

(declare-fun m!85389 () Bool)

(assert (=> b!82454 m!85389))

(assert (=> b!82455 m!85387))

(assert (=> b!82455 m!85387))

(assert (=> b!82455 m!85389))

(assert (=> b!82456 m!85387))

(assert (=> b!82456 m!85387))

(declare-fun m!85391 () Bool)

(assert (=> b!82456 m!85391))

(assert (=> bm!7688 m!85387))

(declare-fun m!85393 () Bool)

(assert (=> bm!7688 m!85393))

(assert (=> d!19819 d!20843))

(declare-fun d!20845 () Bool)

(assert (=> d!20845 (= (arrayCountValidKeys!0 lt!37733 (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (bvadd (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!38526 () Unit!2322)

(declare-fun choose!2 (array!3971 (_ BitVec 32)) Unit!2322)

(assert (=> d!20845 (= lt!38526 (choose!2 lt!37733 (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405))))))

(declare-fun e!53776 () Bool)

(assert (=> d!20845 e!53776))

(declare-fun res!42763 () Bool)

(assert (=> d!20845 (=> (not res!42763) (not e!53776))))

(assert (=> d!20845 (= res!42763 (and (bvsge (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000000) (bvslt (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (size!2134 lt!37733))))))

(assert (=> d!20845 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!37733 (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405))) lt!38526)))

(declare-fun b!82462 () Bool)

(declare-fun res!42764 () Bool)

(assert (=> b!82462 (=> (not res!42764) (not e!53776))))

(assert (=> b!82462 (= res!42764 (validKeyInArray!0 (select (arr!1892 lt!37733) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)))))))

(declare-fun b!82463 () Bool)

(assert (=> b!82463 (= e!53776 (bvslt (size!2134 lt!37733) #b01111111111111111111111111111111))))

(assert (= (and d!20845 res!42763) b!82462))

(assert (= (and b!82462 res!42764) b!82463))

(assert (=> d!20845 m!82553))

(declare-fun m!85395 () Bool)

(assert (=> d!20845 m!85395))

(assert (=> b!82462 m!85289))

(assert (=> b!82462 m!85289))

(assert (=> b!82462 m!85291))

(assert (=> d!19819 d!20845))

(declare-fun d!20847 () Bool)

(declare-fun e!53779 () Bool)

(assert (=> d!20847 e!53779))

(declare-fun res!42767 () Bool)

(assert (=> d!20847 (=> (not res!42767) (not e!53779))))

(assert (=> d!20847 (= res!42767 (and (bvsge (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000000) (bvslt (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (size!2134 (_keys!3956 newMap!16)))))))

(declare-fun lt!38529 () Unit!2322)

(declare-fun choose!41 (array!3971 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1498) Unit!2322)

(assert (=> d!20847 (= lt!38529 (choose!41 (_keys!3956 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) lt!37739 lt!37722))))

(assert (=> d!20847 (bvslt (size!2134 (_keys!3956 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!20847 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3956 newMap!16) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) lt!37739 lt!37722) lt!38529)))

(declare-fun b!82466 () Bool)

(assert (=> b!82466 (= e!53779 (arrayNoDuplicates!0 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) lt!37739 lt!37722))))

(assert (= (and d!20847 res!42767) b!82466))

(assert (=> d!20847 m!81737))

(declare-fun m!85397 () Bool)

(assert (=> d!20847 m!85397))

(assert (=> b!82466 m!82527))

(assert (=> b!82466 m!82551))

(assert (=> d!19819 d!20847))

(assert (=> d!19819 d!20791))

(assert (=> d!19819 d!19879))

(declare-fun d!20849 () Bool)

(declare-fun e!53782 () Bool)

(assert (=> d!20849 e!53782))

(declare-fun res!42770 () Bool)

(assert (=> d!20849 (=> (not res!42770) (not e!53782))))

(assert (=> d!20849 (= res!42770 (and (bvsge (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) #b00000000000000000000000000000000) (bvslt (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (size!2134 (_keys!3956 newMap!16)))))))

(declare-fun lt!38532 () Unit!2322)

(declare-fun choose!102 ((_ BitVec 64) array!3971 (_ BitVec 32) (_ BitVec 32)) Unit!2322)

(assert (=> d!20849 (= lt!38532 (choose!102 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (mask!6298 newMap!16)))))

(assert (=> d!20849 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20849 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355) (_keys!3956 newMap!16) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (mask!6298 newMap!16)) lt!38532)))

(declare-fun b!82469 () Bool)

(assert (=> b!82469 (= e!53782 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (mask!6298 newMap!16)))))

(assert (= (and d!20849 res!42770) b!82469))

(assert (=> d!20849 m!81737))

(declare-fun m!85399 () Bool)

(assert (=> d!20849 m!85399))

(assert (=> d!20849 m!82223))

(assert (=> b!82469 m!82527))

(assert (=> b!82469 m!82549))

(assert (=> d!19819 d!20849))

(declare-fun bm!7689 () Bool)

(declare-fun call!7696 () Bool)

(declare-fun lt!38538 () ListLongMap!1429)

(assert (=> bm!7689 (= call!7696 (contains!739 lt!38538 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82470 () Bool)

(declare-fun e!53783 () Bool)

(assert (=> b!82470 (= e!53783 (= (apply!80 lt!38538 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2188 newMap!16)))))

(declare-fun b!82471 () Bool)

(declare-fun e!53793 () Bool)

(assert (=> b!82471 (= e!53793 (not call!7696))))

(declare-fun b!82472 () Bool)

(declare-fun c!13140 () Bool)

(assert (=> b!82472 (= c!13140 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53786 () ListLongMap!1429)

(declare-fun e!53794 () ListLongMap!1429)

(assert (=> b!82472 (= e!53786 e!53794)))

(declare-fun b!82473 () Bool)

(declare-fun call!7694 () ListLongMap!1429)

(assert (=> b!82473 (= e!53794 call!7694)))

(declare-fun b!82474 () Bool)

(declare-fun e!53787 () ListLongMap!1429)

(assert (=> b!82474 (= e!53787 e!53786)))

(declare-fun c!13141 () Bool)

(assert (=> b!82474 (= c!13141 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!82475 () Bool)

(declare-fun e!53791 () Bool)

(declare-fun e!53792 () Bool)

(assert (=> b!82475 (= e!53791 e!53792)))

(declare-fun res!42772 () Bool)

(declare-fun call!7695 () Bool)

(assert (=> b!82475 (= res!42772 call!7695)))

(assert (=> b!82475 (=> (not res!42772) (not e!53792))))

(declare-fun b!82476 () Bool)

(declare-fun res!42774 () Bool)

(declare-fun e!53790 () Bool)

(assert (=> b!82476 (=> (not res!42774) (not e!53790))))

(assert (=> b!82476 (= res!42774 e!53793)))

(declare-fun c!13143 () Bool)

(assert (=> b!82476 (= c!13143 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!82477 () Bool)

(declare-fun e!53788 () Unit!2322)

(declare-fun lt!38544 () Unit!2322)

(assert (=> b!82477 (= e!53788 lt!38544)))

(declare-fun lt!38548 () ListLongMap!1429)

(assert (=> b!82477 (= lt!38548 (getCurrentListMapNoExtraKeys!66 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38535 () (_ BitVec 64))

(assert (=> b!82477 (= lt!38535 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38551 () (_ BitVec 64))

(assert (=> b!82477 (= lt!38551 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!38554 () Unit!2322)

(assert (=> b!82477 (= lt!38554 (addStillContains!56 lt!38548 lt!38535 (zeroValue!2188 newMap!16) lt!38551))))

(assert (=> b!82477 (contains!739 (+!101 lt!38548 (tuple2!2169 lt!38535 (zeroValue!2188 newMap!16))) lt!38551)))

(declare-fun lt!38542 () Unit!2322)

(assert (=> b!82477 (= lt!38542 lt!38554)))

(declare-fun lt!38539 () ListLongMap!1429)

(assert (=> b!82477 (= lt!38539 (getCurrentListMapNoExtraKeys!66 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38553 () (_ BitVec 64))

(assert (=> b!82477 (= lt!38553 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38550 () (_ BitVec 64))

(assert (=> b!82477 (= lt!38550 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!38541 () Unit!2322)

(assert (=> b!82477 (= lt!38541 (addApplyDifferent!56 lt!38539 lt!38553 (minValue!2188 newMap!16) lt!38550))))

(assert (=> b!82477 (= (apply!80 (+!101 lt!38539 (tuple2!2169 lt!38553 (minValue!2188 newMap!16))) lt!38550) (apply!80 lt!38539 lt!38550))))

(declare-fun lt!38543 () Unit!2322)

(assert (=> b!82477 (= lt!38543 lt!38541)))

(declare-fun lt!38537 () ListLongMap!1429)

(assert (=> b!82477 (= lt!38537 (getCurrentListMapNoExtraKeys!66 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38552 () (_ BitVec 64))

(assert (=> b!82477 (= lt!38552 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38536 () (_ BitVec 64))

(assert (=> b!82477 (= lt!38536 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!38546 () Unit!2322)

(assert (=> b!82477 (= lt!38546 (addApplyDifferent!56 lt!38537 lt!38552 (zeroValue!2188 newMap!16) lt!38536))))

(assert (=> b!82477 (= (apply!80 (+!101 lt!38537 (tuple2!2169 lt!38552 (zeroValue!2188 newMap!16))) lt!38536) (apply!80 lt!38537 lt!38536))))

(declare-fun lt!38533 () Unit!2322)

(assert (=> b!82477 (= lt!38533 lt!38546)))

(declare-fun lt!38545 () ListLongMap!1429)

(assert (=> b!82477 (= lt!38545 (getCurrentListMapNoExtraKeys!66 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun lt!38534 () (_ BitVec 64))

(assert (=> b!82477 (= lt!38534 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38547 () (_ BitVec 64))

(assert (=> b!82477 (= lt!38547 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!82477 (= lt!38544 (addApplyDifferent!56 lt!38545 lt!38534 (minValue!2188 newMap!16) lt!38547))))

(assert (=> b!82477 (= (apply!80 (+!101 lt!38545 (tuple2!2169 lt!38534 (minValue!2188 newMap!16))) lt!38547) (apply!80 lt!38545 lt!38547))))

(declare-fun b!82478 () Bool)

(assert (=> b!82478 (= e!53792 (= (apply!80 lt!38538 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2188 newMap!16)))))

(declare-fun bm!7690 () Bool)

(declare-fun call!7698 () ListLongMap!1429)

(declare-fun call!7697 () ListLongMap!1429)

(assert (=> bm!7690 (= call!7698 call!7697)))

(declare-fun b!82479 () Bool)

(assert (=> b!82479 (= e!53793 e!53783)))

(declare-fun res!42775 () Bool)

(assert (=> b!82479 (= res!42775 call!7696)))

(assert (=> b!82479 (=> (not res!42775) (not e!53783))))

(declare-fun e!53784 () Bool)

(declare-fun b!82480 () Bool)

(assert (=> b!82480 (= e!53784 (validKeyInArray!0 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!82481 () Bool)

(declare-fun res!42777 () Bool)

(assert (=> b!82481 (=> (not res!42777) (not e!53790))))

(declare-fun e!53789 () Bool)

(assert (=> b!82481 (= res!42777 e!53789)))

(declare-fun res!42779 () Bool)

(assert (=> b!82481 (=> res!42779 e!53789)))

(assert (=> b!82481 (= res!42779 (not e!53784))))

(declare-fun res!42773 () Bool)

(assert (=> b!82481 (=> (not res!42773) (not e!53784))))

(assert (=> b!82481 (= res!42773 (bvslt #b00000000000000000000000000000000 (size!2134 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))))))))

(declare-fun b!82482 () Bool)

(declare-fun call!7693 () ListLongMap!1429)

(assert (=> b!82482 (= e!53794 call!7693)))

(declare-fun b!82483 () Bool)

(assert (=> b!82483 (= e!53791 (not call!7695))))

(declare-fun b!82484 () Bool)

(declare-fun e!53795 () Bool)

(assert (=> b!82484 (= e!53795 (validKeyInArray!0 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!82485 () Bool)

(declare-fun call!7692 () ListLongMap!1429)

(assert (=> b!82485 (= e!53787 (+!101 call!7692 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16))))))

(declare-fun c!13144 () Bool)

(declare-fun bm!7691 () Bool)

(assert (=> bm!7691 (= call!7692 (+!101 (ite c!13144 call!7697 (ite c!13141 call!7698 call!7693)) (ite (or c!13144 c!13141) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 newMap!16)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 newMap!16)))))))

(declare-fun bm!7692 () Bool)

(assert (=> bm!7692 (= call!7697 (getCurrentListMapNoExtraKeys!66 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)))))

(declare-fun e!53785 () Bool)

(declare-fun b!82486 () Bool)

(assert (=> b!82486 (= e!53785 (= (apply!80 lt!38538 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000)) (get!1189 (select (arr!1893 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2292 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82486 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))))))))

(assert (=> b!82486 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))))))))

(declare-fun bm!7693 () Bool)

(assert (=> bm!7693 (= call!7695 (contains!739 lt!38538 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82487 () Bool)

(assert (=> b!82487 (= e!53789 e!53785)))

(declare-fun res!42776 () Bool)

(assert (=> b!82487 (=> (not res!42776) (not e!53785))))

(assert (=> b!82487 (= res!42776 (contains!739 lt!38538 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!82487 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))))))))

(declare-fun b!82488 () Bool)

(declare-fun Unit!2406 () Unit!2322)

(assert (=> b!82488 (= e!53788 Unit!2406)))

(declare-fun bm!7694 () Bool)

(assert (=> bm!7694 (= call!7694 call!7692)))

(declare-fun b!82489 () Bool)

(assert (=> b!82489 (= e!53790 e!53791)))

(declare-fun c!13142 () Bool)

(assert (=> b!82489 (= c!13142 (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!20851 () Bool)

(assert (=> d!20851 e!53790))

(declare-fun res!42771 () Bool)

(assert (=> d!20851 (=> (not res!42771) (not e!53790))))

(assert (=> d!20851 (= res!42771 (or (bvsge #b00000000000000000000000000000000 (size!2134 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2134 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))))))))))

(declare-fun lt!38540 () ListLongMap!1429)

(assert (=> d!20851 (= lt!38538 lt!38540)))

(declare-fun lt!38549 () Unit!2322)

(assert (=> d!20851 (= lt!38549 e!53788)))

(declare-fun c!13139 () Bool)

(assert (=> d!20851 (= c!13139 e!53795)))

(declare-fun res!42778 () Bool)

(assert (=> d!20851 (=> (not res!42778) (not e!53795))))

(assert (=> d!20851 (= res!42778 (bvslt #b00000000000000000000000000000000 (size!2134 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))))))))

(assert (=> d!20851 (= lt!38540 e!53787)))

(assert (=> d!20851 (= c!13144 (and (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2139 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20851 (validMask!0 (mask!6298 newMap!16))))

(assert (=> d!20851 (= (getCurrentListMap!426 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (array!3974 (store (arr!1893 (_values!2275 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (ValueCellFull!914 lt!37223)) (size!2135 (_values!2275 newMap!16))) (mask!6298 newMap!16) (extraKeys!2139 newMap!16) (zeroValue!2188 newMap!16) (minValue!2188 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2292 newMap!16)) lt!38538)))

(declare-fun bm!7695 () Bool)

(assert (=> bm!7695 (= call!7693 call!7698)))

(declare-fun b!82490 () Bool)

(assert (=> b!82490 (= e!53786 call!7694)))

(assert (= (and d!20851 c!13144) b!82485))

(assert (= (and d!20851 (not c!13144)) b!82474))

(assert (= (and b!82474 c!13141) b!82490))

(assert (= (and b!82474 (not c!13141)) b!82472))

(assert (= (and b!82472 c!13140) b!82473))

(assert (= (and b!82472 (not c!13140)) b!82482))

(assert (= (or b!82473 b!82482) bm!7695))

(assert (= (or b!82490 bm!7695) bm!7690))

(assert (= (or b!82490 b!82473) bm!7694))

(assert (= (or b!82485 bm!7690) bm!7692))

(assert (= (or b!82485 bm!7694) bm!7691))

(assert (= (and d!20851 res!42778) b!82484))

(assert (= (and d!20851 c!13139) b!82477))

(assert (= (and d!20851 (not c!13139)) b!82488))

(assert (= (and d!20851 res!42771) b!82481))

(assert (= (and b!82481 res!42773) b!82480))

(assert (= (and b!82481 (not res!42779)) b!82487))

(assert (= (and b!82487 res!42776) b!82486))

(assert (= (and b!82481 res!42777) b!82476))

(assert (= (and b!82476 c!13143) b!82479))

(assert (= (and b!82476 (not c!13143)) b!82471))

(assert (= (and b!82479 res!42775) b!82470))

(assert (= (or b!82479 b!82471) bm!7689))

(assert (= (and b!82476 res!42774) b!82489))

(assert (= (and b!82489 c!13142) b!82475))

(assert (= (and b!82489 (not c!13142)) b!82483))

(assert (= (and b!82475 res!42772) b!82478))

(assert (= (or b!82475 b!82483) bm!7693))

(declare-fun b_lambda!3657 () Bool)

(assert (=> (not b_lambda!3657) (not b!82486)))

(assert (=> b!82486 t!5170))

(declare-fun b_and!5009 () Bool)

(assert (= b_and!5005 (and (=> t!5170 result!2849) b_and!5009)))

(assert (=> b!82486 t!5172))

(declare-fun b_and!5011 () Bool)

(assert (= b_and!5007 (and (=> t!5172 result!2851) b_and!5011)))

(declare-fun m!85401 () Bool)

(assert (=> b!82477 m!85401))

(assert (=> b!82477 m!85401))

(declare-fun m!85403 () Bool)

(assert (=> b!82477 m!85403))

(assert (=> b!82477 m!85317))

(declare-fun m!85405 () Bool)

(assert (=> b!82477 m!85405))

(declare-fun m!85407 () Bool)

(assert (=> b!82477 m!85407))

(declare-fun m!85409 () Bool)

(assert (=> b!82477 m!85409))

(declare-fun m!85411 () Bool)

(assert (=> b!82477 m!85411))

(declare-fun m!85413 () Bool)

(assert (=> b!82477 m!85413))

(declare-fun m!85415 () Bool)

(assert (=> b!82477 m!85415))

(assert (=> b!82477 m!85411))

(declare-fun m!85417 () Bool)

(assert (=> b!82477 m!85417))

(declare-fun m!85419 () Bool)

(assert (=> b!82477 m!85419))

(declare-fun m!85421 () Bool)

(assert (=> b!82477 m!85421))

(declare-fun m!85423 () Bool)

(assert (=> b!82477 m!85423))

(assert (=> b!82477 m!85409))

(declare-fun m!85425 () Bool)

(assert (=> b!82477 m!85425))

(declare-fun m!85427 () Bool)

(assert (=> b!82477 m!85427))

(declare-fun m!85429 () Bool)

(assert (=> b!82477 m!85429))

(assert (=> b!82477 m!85413))

(declare-fun m!85431 () Bool)

(assert (=> b!82477 m!85431))

(assert (=> b!82480 m!85317))

(assert (=> b!82480 m!85317))

(assert (=> b!82480 m!85327))

(declare-fun m!85433 () Bool)

(assert (=> b!82470 m!85433))

(declare-fun m!85435 () Bool)

(assert (=> bm!7693 m!85435))

(declare-fun m!85437 () Bool)

(assert (=> b!82485 m!85437))

(assert (=> b!82486 m!85317))

(assert (=> b!82486 m!82743))

(declare-fun m!85439 () Bool)

(assert (=> b!82486 m!85439))

(assert (=> b!82486 m!82743))

(declare-fun m!85441 () Bool)

(assert (=> b!82486 m!85441))

(assert (=> b!82486 m!85439))

(assert (=> b!82486 m!85317))

(declare-fun m!85443 () Bool)

(assert (=> b!82486 m!85443))

(declare-fun m!85445 () Bool)

(assert (=> b!82478 m!85445))

(assert (=> b!82484 m!85317))

(assert (=> b!82484 m!85317))

(assert (=> b!82484 m!85327))

(assert (=> b!82487 m!85317))

(assert (=> b!82487 m!85317))

(declare-fun m!85447 () Bool)

(assert (=> b!82487 m!85447))

(assert (=> bm!7692 m!85427))

(declare-fun m!85449 () Bool)

(assert (=> bm!7691 m!85449))

(assert (=> d!20851 m!82223))

(declare-fun m!85451 () Bool)

(assert (=> bm!7689 m!85451))

(assert (=> d!19819 d!20851))

(declare-fun b!82491 () Bool)

(declare-fun e!53796 () (_ BitVec 32))

(declare-fun call!7699 () (_ BitVec 32))

(assert (=> b!82491 (= e!53796 (bvadd #b00000000000000000000000000000001 call!7699))))

(declare-fun b!82492 () Bool)

(assert (=> b!82492 (= e!53796 call!7699)))

(declare-fun bm!7696 () Bool)

(assert (=> bm!7696 (= call!7699 (arrayCountValidKeys!0 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2134 (_keys!3956 newMap!16))))))

(declare-fun lt!38555 () (_ BitVec 32))

(declare-fun d!20853 () Bool)

(assert (=> d!20853 (and (bvsge lt!38555 #b00000000000000000000000000000000) (bvsle lt!38555 (bvsub (size!2134 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!53797 () (_ BitVec 32))

(assert (=> d!20853 (= lt!38555 e!53797)))

(declare-fun c!13145 () Bool)

(assert (=> d!20853 (= c!13145 (bvsge #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))))))

(assert (=> d!20853 (and (bvsle #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2134 (_keys!3956 newMap!16)) (size!2134 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))))))))

(assert (=> d!20853 (= (arrayCountValidKeys!0 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16))) #b00000000000000000000000000000000 (size!2134 (_keys!3956 newMap!16))) lt!38555)))

(declare-fun b!82493 () Bool)

(assert (=> b!82493 (= e!53797 #b00000000000000000000000000000000)))

(declare-fun b!82494 () Bool)

(assert (=> b!82494 (= e!53797 e!53796)))

(declare-fun c!13146 () Bool)

(assert (=> b!82494 (= c!13146 (validKeyInArray!0 (select (arr!1892 (array!3972 (store (arr!1892 (_keys!3956 newMap!16)) (ite c!12579 (index!3078 lt!37405) (index!3075 lt!37405)) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) (size!2134 (_keys!3956 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!20853 c!13145) b!82493))

(assert (= (and d!20853 (not c!13145)) b!82494))

(assert (= (and b!82494 c!13146) b!82491))

(assert (= (and b!82494 (not c!13146)) b!82492))

(assert (= (or b!82491 b!82492) bm!7696))

(declare-fun m!85453 () Bool)

(assert (=> bm!7696 m!85453))

(assert (=> b!82494 m!85317))

(assert (=> b!82494 m!85317))

(assert (=> b!82494 m!85327))

(assert (=> d!19819 d!20853))

(assert (=> d!19961 d!19963))

(assert (=> d!19961 d!19965))

(declare-fun d!20855 () Bool)

(assert (=> d!20855 (isDefined!91 (getValueByKey!139 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)))))

(assert (=> d!20855 true))

(declare-fun _$12!329 () Unit!2322)

(assert (=> d!20855 (= (choose!487 (toList!730 lt!37217) (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) from!355)) _$12!329)))

(declare-fun bs!3508 () Bool)

(assert (= bs!3508 d!20855))

(assert (=> bs!3508 m!81737))

(assert (=> bs!3508 m!81927))

(assert (=> bs!3508 m!81927))

(assert (=> bs!3508 m!81929))

(assert (=> d!19961 d!20855))

(declare-fun d!20857 () Bool)

(declare-fun res!42780 () Bool)

(declare-fun e!53798 () Bool)

(assert (=> d!20857 (=> res!42780 e!53798)))

(assert (=> d!20857 (= res!42780 (or ((_ is Nil!1494) (toList!730 lt!37217)) ((_ is Nil!1494) (t!5156 (toList!730 lt!37217)))))))

(assert (=> d!20857 (= (isStrictlySorted!283 (toList!730 lt!37217)) e!53798)))

(declare-fun b!82495 () Bool)

(declare-fun e!53799 () Bool)

(assert (=> b!82495 (= e!53798 e!53799)))

(declare-fun res!42781 () Bool)

(assert (=> b!82495 (=> (not res!42781) (not e!53799))))

(assert (=> b!82495 (= res!42781 (bvslt (_1!1095 (h!2082 (toList!730 lt!37217))) (_1!1095 (h!2082 (t!5156 (toList!730 lt!37217))))))))

(declare-fun b!82496 () Bool)

(assert (=> b!82496 (= e!53799 (isStrictlySorted!283 (t!5156 (toList!730 lt!37217))))))

(assert (= (and d!20857 (not res!42780)) b!82495))

(assert (= (and b!82495 res!42781) b!82496))

(declare-fun m!85455 () Bool)

(assert (=> b!82496 m!85455))

(assert (=> d!19961 d!20857))

(declare-fun d!20859 () Bool)

(declare-fun res!42782 () Bool)

(declare-fun e!53800 () Bool)

(assert (=> d!20859 (=> res!42782 e!53800)))

(assert (=> d!20859 (= res!42782 (and ((_ is Cons!1493) lt!37885) (= (_1!1095 (h!2082 lt!37885)) (_1!1095 lt!37210))))))

(assert (=> d!20859 (= (containsKey!142 lt!37885 (_1!1095 lt!37210)) e!53800)))

(declare-fun b!82497 () Bool)

(declare-fun e!53801 () Bool)

(assert (=> b!82497 (= e!53800 e!53801)))

(declare-fun res!42783 () Bool)

(assert (=> b!82497 (=> (not res!42783) (not e!53801))))

(assert (=> b!82497 (= res!42783 (and (or (not ((_ is Cons!1493) lt!37885)) (bvsle (_1!1095 (h!2082 lt!37885)) (_1!1095 lt!37210))) ((_ is Cons!1493) lt!37885) (bvslt (_1!1095 (h!2082 lt!37885)) (_1!1095 lt!37210))))))

(declare-fun b!82498 () Bool)

(assert (=> b!82498 (= e!53801 (containsKey!142 (t!5156 lt!37885) (_1!1095 lt!37210)))))

(assert (= (and d!20859 (not res!42782)) b!82497))

(assert (= (and b!82497 res!42783) b!82498))

(declare-fun m!85457 () Bool)

(assert (=> b!82498 m!85457))

(assert (=> b!81075 d!20859))

(assert (=> b!80796 d!20617))

(assert (=> b!80796 d!19881))

(declare-fun d!20861 () Bool)

(declare-fun e!53802 () Bool)

(assert (=> d!20861 e!53802))

(declare-fun res!42784 () Bool)

(assert (=> d!20861 (=> res!42784 e!53802)))

(declare-fun lt!38557 () Bool)

(assert (=> d!20861 (= res!42784 (not lt!38557))))

(declare-fun lt!38556 () Bool)

(assert (=> d!20861 (= lt!38557 lt!38556)))

(declare-fun lt!38558 () Unit!2322)

(declare-fun e!53803 () Unit!2322)

(assert (=> d!20861 (= lt!38558 e!53803)))

(declare-fun c!13147 () Bool)

(assert (=> d!20861 (= c!13147 lt!38556)))

(assert (=> d!20861 (= lt!38556 (containsKey!142 (toList!730 lt!37892) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20861 (= (contains!739 lt!37892 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!38557)))

(declare-fun b!82499 () Bool)

(declare-fun lt!38559 () Unit!2322)

(assert (=> b!82499 (= e!53803 lt!38559)))

(assert (=> b!82499 (= lt!38559 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37892) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!82499 (isDefined!91 (getValueByKey!139 (toList!730 lt!37892) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!82500 () Bool)

(declare-fun Unit!2407 () Unit!2322)

(assert (=> b!82500 (= e!53803 Unit!2407)))

(declare-fun b!82501 () Bool)

(assert (=> b!82501 (= e!53802 (isDefined!91 (getValueByKey!139 (toList!730 lt!37892) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!20861 c!13147) b!82499))

(assert (= (and d!20861 (not c!13147)) b!82500))

(assert (= (and d!20861 (not res!42784)) b!82501))

(declare-fun m!85459 () Bool)

(assert (=> d!20861 m!85459))

(declare-fun m!85461 () Bool)

(assert (=> b!82499 m!85461))

(assert (=> b!82499 m!82979))

(assert (=> b!82499 m!82979))

(declare-fun m!85463 () Bool)

(assert (=> b!82499 m!85463))

(assert (=> b!82501 m!82979))

(assert (=> b!82501 m!82979))

(assert (=> b!82501 m!85463))

(assert (=> d!19927 d!20861))

(declare-fun b!82505 () Bool)

(declare-fun e!53805 () Option!145)

(assert (=> b!82505 (= e!53805 None!143)))

(declare-fun b!82504 () Bool)

(assert (=> b!82504 (= e!53805 (getValueByKey!139 (t!5156 lt!37890) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!13148 () Bool)

(declare-fun d!20863 () Bool)

(assert (=> d!20863 (= c!13148 (and ((_ is Cons!1493) lt!37890) (= (_1!1095 (h!2082 lt!37890)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!53804 () Option!145)

(assert (=> d!20863 (= (getValueByKey!139 lt!37890 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!53804)))

(declare-fun b!82502 () Bool)

(assert (=> b!82502 (= e!53804 (Some!144 (_2!1095 (h!2082 lt!37890))))))

(declare-fun b!82503 () Bool)

(assert (=> b!82503 (= e!53804 e!53805)))

(declare-fun c!13149 () Bool)

(assert (=> b!82503 (= c!13149 (and ((_ is Cons!1493) lt!37890) (not (= (_1!1095 (h!2082 lt!37890)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!20863 c!13148) b!82502))

(assert (= (and d!20863 (not c!13148)) b!82503))

(assert (= (and b!82503 c!13149) b!82504))

(assert (= (and b!82503 (not c!13149)) b!82505))

(declare-fun m!85465 () Bool)

(assert (=> b!82504 m!85465))

(assert (=> d!19927 d!20863))

(declare-fun d!20865 () Bool)

(assert (=> d!20865 (= (getValueByKey!139 lt!37890 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!144 (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!38560 () Unit!2322)

(assert (=> d!20865 (= lt!38560 (choose!478 lt!37890 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!53806 () Bool)

(assert (=> d!20865 e!53806))

(declare-fun res!42785 () Bool)

(assert (=> d!20865 (=> (not res!42785) (not e!53806))))

(assert (=> d!20865 (= res!42785 (isStrictlySorted!283 lt!37890))))

(assert (=> d!20865 (= (lemmaContainsTupThenGetReturnValue!56 lt!37890 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!38560)))

(declare-fun b!82506 () Bool)

(declare-fun res!42786 () Bool)

(assert (=> b!82506 (=> (not res!42786) (not e!53806))))

(assert (=> b!82506 (= res!42786 (containsKey!142 lt!37890 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!82507 () Bool)

(assert (=> b!82507 (= e!53806 (contains!742 lt!37890 (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!20865 res!42785) b!82506))

(assert (= (and b!82506 res!42786) b!82507))

(assert (=> d!20865 m!82973))

(declare-fun m!85467 () Bool)

(assert (=> d!20865 m!85467))

(declare-fun m!85469 () Bool)

(assert (=> d!20865 m!85469))

(declare-fun m!85471 () Bool)

(assert (=> b!82506 m!85471))

(declare-fun m!85473 () Bool)

(assert (=> b!82507 m!85473))

(assert (=> d!19927 d!20865))

(declare-fun bm!7697 () Bool)

(declare-fun call!7701 () List!1497)

(declare-fun call!7702 () List!1497)

(assert (=> bm!7697 (= call!7701 call!7702)))

(declare-fun b!82508 () Bool)

(declare-fun e!53807 () Bool)

(declare-fun lt!38561 () List!1497)

(assert (=> b!82508 (= e!53807 (contains!742 lt!38561 (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!82509 () Bool)

(declare-fun e!53808 () List!1497)

(declare-fun e!53811 () List!1497)

(assert (=> b!82509 (= e!53808 e!53811)))

(declare-fun c!13153 () Bool)

(assert (=> b!82509 (= c!13153 (and ((_ is Cons!1493) (toList!730 call!7486)) (= (_1!1095 (h!2082 (toList!730 call!7486))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!7698 () Bool)

(declare-fun call!7700 () List!1497)

(assert (=> bm!7698 (= call!7700 call!7701)))

(declare-fun d!20867 () Bool)

(assert (=> d!20867 e!53807))

(declare-fun res!42787 () Bool)

(assert (=> d!20867 (=> (not res!42787) (not e!53807))))

(assert (=> d!20867 (= res!42787 (isStrictlySorted!283 lt!38561))))

(assert (=> d!20867 (= lt!38561 e!53808)))

(declare-fun c!13150 () Bool)

(assert (=> d!20867 (= c!13150 (and ((_ is Cons!1493) (toList!730 call!7486)) (bvslt (_1!1095 (h!2082 (toList!730 call!7486))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!20867 (isStrictlySorted!283 (toList!730 call!7486))))

(assert (=> d!20867 (= (insertStrictlySorted!59 (toList!730 call!7486) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!38561)))

(declare-fun e!53809 () List!1497)

(declare-fun bm!7699 () Bool)

(assert (=> bm!7699 (= call!7702 ($colon$colon!69 e!53809 (ite c!13150 (h!2082 (toList!730 call!7486)) (tuple2!2169 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!13152 () Bool)

(assert (=> bm!7699 (= c!13152 c!13150)))

(declare-fun b!82510 () Bool)

(declare-fun e!53810 () List!1497)

(assert (=> b!82510 (= e!53810 call!7700)))

(declare-fun b!82511 () Bool)

(declare-fun res!42788 () Bool)

(assert (=> b!82511 (=> (not res!42788) (not e!53807))))

(assert (=> b!82511 (= res!42788 (containsKey!142 lt!38561 (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!13151 () Bool)

(declare-fun b!82512 () Bool)

(assert (=> b!82512 (= c!13151 (and ((_ is Cons!1493) (toList!730 call!7486)) (bvsgt (_1!1095 (h!2082 (toList!730 call!7486))) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!82512 (= e!53811 e!53810)))

(declare-fun b!82513 () Bool)

(assert (=> b!82513 (= e!53809 (insertStrictlySorted!59 (t!5156 (toList!730 call!7486)) (_1!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1095 (tuple2!2169 (select (arr!1892 (_keys!3956 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1893 (_values!2275 (v!2610 (underlying!283 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!82514 () Bool)

(assert (=> b!82514 (= e!53811 call!7701)))

(declare-fun b!82515 () Bool)

(assert (=> b!82515 (= e!53810 call!7700)))

(declare-fun b!82516 () Bool)

(assert (=> b!82516 (= e!53809 (ite c!13153 (t!5156 (toList!730 call!7486)) (ite c!13151 (Cons!1493 (h!2082 (toList!730 call!7486)) (t!5156 (toList!730 call!7486))) Nil!1494)))))

(declare-fun b!82517 () Bool)

(assert (=> b!82517 (= e!53808 call!7702)))

(assert (= (and d!20867 c!13150) b!82517))

(assert (= (and d!20867 (not c!13150)) b!82509))

(assert (= (and b!82509 c!13153) b!82514))

(assert (= (and b!82509 (not c!13153)) b!82512))

(assert (= (and b!82512 c!13151) b!82515))

(assert (= (and b!82512 (not c!13151)) b!82510))

(assert (= (or b!82515 b!82510) bm!7698))

(assert (= (or b!82514 bm!7698) bm!7697))

(assert (= (or b!82517 bm!7697) bm!7699))

(assert (= (and bm!7699 c!13152) b!82513))

(assert (= (and bm!7699 (not c!13152)) b!82516))

(assert (= (and d!20867 res!42787) b!82511))

(assert (= (and b!82511 res!42788) b!82508))

(declare-fun m!85475 () Bool)

(assert (=> b!82513 m!85475))

(declare-fun m!85477 () Bool)

(assert (=> bm!7699 m!85477))

(declare-fun m!85479 () Bool)

(assert (=> b!82508 m!85479))

(declare-fun m!85481 () Bool)

(assert (=> d!20867 m!85481))

(declare-fun m!85483 () Bool)

(assert (=> d!20867 m!85483))

(declare-fun m!85485 () Bool)

(assert (=> b!82511 m!85485))

(assert (=> d!19927 d!20867))

(assert (=> d!19767 d!19769))

(assert (=> d!19767 d!19775))

(assert (=> d!19767 d!19771))

(assert (=> d!19767 d!19773))

(declare-fun d!20869 () Bool)

(declare-fun c!13154 () Bool)

(assert (=> d!20869 (= c!13154 ((_ is Nil!1494) (toList!730 lt!37562)))))

(declare-fun e!53812 () (InoxSet tuple2!2168))

(assert (=> d!20869 (= (content!86 (toList!730 lt!37562)) e!53812)))

(declare-fun b!82518 () Bool)

(assert (=> b!82518 (= e!53812 ((as const (Array tuple2!2168 Bool)) false))))

(declare-fun b!82519 () Bool)

(assert (=> b!82519 (= e!53812 ((_ map or) (store ((as const (Array tuple2!2168 Bool)) false) (h!2082 (toList!730 lt!37562)) true) (content!86 (t!5156 (toList!730 lt!37562)))))))

(assert (= (and d!20869 c!13154) b!82518))

(assert (= (and d!20869 (not c!13154)) b!82519))

(declare-fun m!85487 () Bool)

(assert (=> b!82519 m!85487))

(declare-fun m!85489 () Bool)

(assert (=> b!82519 m!85489))

(assert (=> d!19733 d!20869))

(declare-fun d!20871 () Bool)

(declare-fun lt!38562 () Bool)

(assert (=> d!20871 (= lt!38562 (select (content!86 (toList!730 lt!37569)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun e!53813 () Bool)

(assert (=> d!20871 (= lt!38562 e!53813)))

(declare-fun res!42790 () Bool)

(assert (=> d!20871 (=> (not res!42790) (not e!53813))))

(assert (=> d!20871 (= res!42790 ((_ is Cons!1493) (toList!730 lt!37569)))))

(assert (=> d!20871 (= (contains!742 (toList!730 lt!37569) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!38562)))

(declare-fun b!82520 () Bool)

(declare-fun e!53814 () Bool)

(assert (=> b!82520 (= e!53813 e!53814)))

(declare-fun res!42789 () Bool)

(assert (=> b!82520 (=> res!42789 e!53814)))

(assert (=> b!82520 (= res!42789 (= (h!2082 (toList!730 lt!37569)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!82521 () Bool)

(assert (=> b!82521 (= e!53814 (contains!742 (t!5156 (toList!730 lt!37569)) (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!20871 res!42790) b!82520))

(assert (= (and b!82520 (not res!42789)) b!82521))

(declare-fun m!85491 () Bool)

(assert (=> d!20871 m!85491))

(declare-fun m!85493 () Bool)

(assert (=> d!20871 m!85493))

(declare-fun m!85495 () Bool)

(assert (=> b!82521 m!85495))

(assert (=> b!80647 d!20871))

(declare-fun b!82525 () Bool)

(declare-fun e!53816 () Option!145)

(assert (=> b!82525 (= e!53816 None!143)))

(declare-fun b!82524 () Bool)

(assert (=> b!82524 (= e!53816 (getValueByKey!139 (t!5156 (t!5156 lt!37544)) (_1!1095 lt!37210)))))

(declare-fun d!20873 () Bool)

(declare-fun c!13155 () Bool)

(assert (=> d!20873 (= c!13155 (and ((_ is Cons!1493) (t!5156 lt!37544)) (= (_1!1095 (h!2082 (t!5156 lt!37544))) (_1!1095 lt!37210))))))

(declare-fun e!53815 () Option!145)

(assert (=> d!20873 (= (getValueByKey!139 (t!5156 lt!37544) (_1!1095 lt!37210)) e!53815)))

(declare-fun b!82522 () Bool)

(assert (=> b!82522 (= e!53815 (Some!144 (_2!1095 (h!2082 (t!5156 lt!37544)))))))

(declare-fun b!82523 () Bool)

(assert (=> b!82523 (= e!53815 e!53816)))

(declare-fun c!13156 () Bool)

(assert (=> b!82523 (= c!13156 (and ((_ is Cons!1493) (t!5156 lt!37544)) (not (= (_1!1095 (h!2082 (t!5156 lt!37544))) (_1!1095 lt!37210)))))))

(assert (= (and d!20873 c!13155) b!82522))

(assert (= (and d!20873 (not c!13155)) b!82523))

(assert (= (and b!82523 c!13156) b!82524))

(assert (= (and b!82523 (not c!13156)) b!82525))

(declare-fun m!85497 () Bool)

(assert (=> b!82524 m!85497))

(assert (=> b!81004 d!20873))

(assert (=> b!80855 d!19739))

(declare-fun d!20875 () Bool)

(declare-fun lt!38563 () Bool)

(assert (=> d!20875 (= lt!38563 (select (content!86 (toList!730 lt!37640)) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun e!53817 () Bool)

(assert (=> d!20875 (= lt!38563 e!53817)))

(declare-fun res!42792 () Bool)

(assert (=> d!20875 (=> (not res!42792) (not e!53817))))

(assert (=> d!20875 (= res!42792 ((_ is Cons!1493) (toList!730 lt!37640)))))

(assert (=> d!20875 (= (contains!742 (toList!730 lt!37640) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))) lt!38563)))

(declare-fun b!82526 () Bool)

(declare-fun e!53818 () Bool)

(assert (=> b!82526 (= e!53817 e!53818)))

(declare-fun res!42791 () Bool)

(assert (=> b!82526 (=> res!42791 e!53818)))

(assert (=> b!82526 (= res!42791 (= (h!2082 (toList!730 lt!37640)) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(declare-fun b!82527 () Bool)

(assert (=> b!82527 (= e!53818 (contains!742 (t!5156 (toList!730 lt!37640)) (tuple2!2169 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2188 (v!2610 (underlying!283 thiss!992))))))))

(assert (= (and d!20875 res!42792) b!82526))

(assert (= (and b!82526 (not res!42791)) b!82527))

(declare-fun m!85499 () Bool)

(assert (=> d!20875 m!85499))

(declare-fun m!85501 () Bool)

(assert (=> d!20875 m!85501))

(declare-fun m!85503 () Bool)

(assert (=> b!82527 m!85503))

(assert (=> b!80772 d!20875))

(declare-fun d!20877 () Bool)

(declare-fun res!42793 () Bool)

(declare-fun e!53819 () Bool)

(assert (=> d!20877 (=> res!42793 e!53819)))

(assert (=> d!20877 (= res!42793 (and ((_ is Cons!1493) lt!37560) (= (_1!1095 (h!2082 lt!37560)) (_1!1095 lt!37212))))))

(assert (=> d!20877 (= (containsKey!142 lt!37560 (_1!1095 lt!37212)) e!53819)))

(declare-fun b!82528 () Bool)

(declare-fun e!53820 () Bool)

(assert (=> b!82528 (= e!53819 e!53820)))

(declare-fun res!42794 () Bool)

(assert (=> b!82528 (=> (not res!42794) (not e!53820))))

(assert (=> b!82528 (= res!42794 (and (or (not ((_ is Cons!1493) lt!37560)) (bvsle (_1!1095 (h!2082 lt!37560)) (_1!1095 lt!37212))) ((_ is Cons!1493) lt!37560) (bvslt (_1!1095 (h!2082 lt!37560)) (_1!1095 lt!37212))))))

(declare-fun b!82529 () Bool)

(assert (=> b!82529 (= e!53820 (containsKey!142 (t!5156 lt!37560) (_1!1095 lt!37212)))))

(assert (= (and d!20877 (not res!42793)) b!82528))

(assert (= (and b!82528 res!42794) b!82529))

(declare-fun m!85505 () Bool)

(assert (=> b!82529 m!85505))

(assert (=> b!80801 d!20877))

(assert (=> d!19891 d!19889))

(declare-fun d!20879 () Bool)

(assert (=> d!20879 (= (getValueByKey!139 lt!37511 (_1!1095 lt!37212)) (Some!144 (_2!1095 lt!37212)))))

(assert (=> d!20879 true))

(declare-fun _$22!406 () Unit!2322)

(assert (=> d!20879 (= (choose!478 lt!37511 (_1!1095 lt!37212) (_2!1095 lt!37212)) _$22!406)))

(declare-fun bs!3509 () Bool)

(assert (= bs!3509 d!20879))

(assert (=> bs!3509 m!82071))

(assert (=> d!19891 d!20879))

(declare-fun d!20881 () Bool)

(declare-fun res!42795 () Bool)

(declare-fun e!53821 () Bool)

(assert (=> d!20881 (=> res!42795 e!53821)))

(assert (=> d!20881 (= res!42795 (or ((_ is Nil!1494) lt!37511) ((_ is Nil!1494) (t!5156 lt!37511))))))

(assert (=> d!20881 (= (isStrictlySorted!283 lt!37511) e!53821)))

(declare-fun b!82530 () Bool)

(declare-fun e!53822 () Bool)

(assert (=> b!82530 (= e!53821 e!53822)))

(declare-fun res!42796 () Bool)

(assert (=> b!82530 (=> (not res!42796) (not e!53822))))

(assert (=> b!82530 (= res!42796 (bvslt (_1!1095 (h!2082 lt!37511)) (_1!1095 (h!2082 (t!5156 lt!37511)))))))

(declare-fun b!82531 () Bool)

(assert (=> b!82531 (= e!53822 (isStrictlySorted!283 (t!5156 lt!37511)))))

(assert (= (and d!20881 (not res!42795)) b!82530))

(assert (= (and b!82530 res!42796) b!82531))

(declare-fun m!85507 () Bool)

(assert (=> b!82531 m!85507))

(assert (=> d!19891 d!20881))

(declare-fun d!20883 () Bool)

(declare-fun c!13157 () Bool)

(assert (=> d!20883 (= c!13157 ((_ is Nil!1494) (toList!730 lt!37554)))))

(declare-fun e!53823 () (InoxSet tuple2!2168))

(assert (=> d!20883 (= (content!86 (toList!730 lt!37554)) e!53823)))

(declare-fun b!82532 () Bool)

(assert (=> b!82532 (= e!53823 ((as const (Array tuple2!2168 Bool)) false))))

(declare-fun b!82533 () Bool)

(assert (=> b!82533 (= e!53823 ((_ map or) (store ((as const (Array tuple2!2168 Bool)) false) (h!2082 (toList!730 lt!37554)) true) (content!86 (t!5156 (toList!730 lt!37554)))))))

(assert (= (and d!20883 c!13157) b!82532))

(assert (= (and d!20883 (not c!13157)) b!82533))

(declare-fun m!85509 () Bool)

(assert (=> b!82533 m!85509))

(assert (=> b!82533 m!84719))

(assert (=> d!19825 d!20883))

(assert (=> d!19885 d!19707))

(declare-fun b!82537 () Bool)

(declare-fun e!53825 () Option!145)

(assert (=> b!82537 (= e!53825 None!143)))

(declare-fun b!82536 () Bool)

(assert (=> b!82536 (= e!53825 (getValueByKey!139 (t!5156 (toList!730 lt!37620)) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))

(declare-fun d!20885 () Bool)

(declare-fun c!13158 () Bool)

(assert (=> d!20885 (= c!13158 (and ((_ is Cons!1493) (toList!730 lt!37620)) (= (_1!1095 (h!2082 (toList!730 lt!37620))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992))))))))))

(declare-fun e!53824 () Option!145)

(assert (=> d!20885 (= (getValueByKey!139 (toList!730 lt!37620) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))) e!53824)))

(declare-fun b!82534 () Bool)

(assert (=> b!82534 (= e!53824 (Some!144 (_2!1095 (h!2082 (toList!730 lt!37620)))))))

(declare-fun b!82535 () Bool)

(assert (=> b!82535 (= e!53824 e!53825)))

(declare-fun c!13159 () Bool)

(assert (=> b!82535 (= c!13159 (and ((_ is Cons!1493) (toList!730 lt!37620)) (not (= (_1!1095 (h!2082 (toList!730 lt!37620))) (_1!1095 (tuple2!2169 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2188 (v!2610 (underlying!283 thiss!992)))))))))))

(assert (= (and d!20885 c!13158) b!82534))

(assert (= (and d!20885 (not c!13158)) b!82535))

(assert (= (and b!82535 c!13159) b!82536))

(assert (= (and b!82535 (not c!13159)) b!82537))

(declare-fun m!85511 () Bool)

(assert (=> b!82536 m!85511))

(assert (=> b!80758 d!20885))

(declare-fun d!20887 () Bool)

(declare-fun lt!38564 () Bool)

(assert (=> d!20887 (= lt!38564 (select (content!86 (t!5156 (toList!730 lt!37562))) lt!37212))))

(declare-fun e!53826 () Bool)

(assert (=> d!20887 (= lt!38564 e!53826)))

(declare-fun res!42798 () Bool)

(assert (=> d!20887 (=> (not res!42798) (not e!53826))))

(assert (=> d!20887 (= res!42798 ((_ is Cons!1493) (t!5156 (toList!730 lt!37562))))))

(assert (=> d!20887 (= (contains!742 (t!5156 (toList!730 lt!37562)) lt!37212) lt!38564)))

(declare-fun b!82538 () Bool)

(declare-fun e!53827 () Bool)

(assert (=> b!82538 (= e!53826 e!53827)))

(declare-fun res!42797 () Bool)

(assert (=> b!82538 (=> res!42797 e!53827)))

(assert (=> b!82538 (= res!42797 (= (h!2082 (t!5156 (toList!730 lt!37562))) lt!37212))))

(declare-fun b!82539 () Bool)

(assert (=> b!82539 (= e!53827 (contains!742 (t!5156 (t!5156 (toList!730 lt!37562))) lt!37212))))

(assert (= (and d!20887 res!42798) b!82538))

(assert (= (and b!82538 (not res!42797)) b!82539))

(assert (=> d!20887 m!85489))

(declare-fun m!85513 () Bool)

(assert (=> d!20887 m!85513))

(declare-fun m!85515 () Bool)

(assert (=> b!82539 m!85515))

(assert (=> b!80645 d!20887))

(declare-fun d!20889 () Bool)

(declare-fun e!53828 () Bool)

(assert (=> d!20889 e!53828))

(declare-fun res!42799 () Bool)

(assert (=> d!20889 (=> res!42799 e!53828)))

(declare-fun lt!38566 () Bool)

(assert (=> d!20889 (= res!42799 (not lt!38566))))

(declare-fun lt!38565 () Bool)

(assert (=> d!20889 (= lt!38566 lt!38565)))

(declare-fun lt!38567 () Unit!2322)

(declare-fun e!53829 () Unit!2322)

(assert (=> d!20889 (= lt!38567 e!53829)))

(declare-fun c!13160 () Bool)

(assert (=> d!20889 (= c!13160 lt!38565)))

(assert (=> d!20889 (= lt!38565 (containsKey!142 (toList!730 lt!37826) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20889 (= (contains!739 lt!37826 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38566)))

(declare-fun b!82540 () Bool)

(declare-fun lt!38568 () Unit!2322)

(assert (=> b!82540 (= e!53829 lt!38568)))

(assert (=> b!82540 (= lt!38568 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!730 lt!37826) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82540 (isDefined!91 (getValueByKey!139 (toList!730 lt!37826) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82541 () Bool)

(declare-fun Unit!2408 () Unit!2322)

(assert (=> b!82541 (= e!53829 Unit!2408)))

(declare-fun b!82542 () Bool)

(assert (=> b!82542 (= e!53828 (isDefined!91 (getValueByKey!139 (toList!730 lt!37826) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20889 c!13160) b!82540))

(assert (= (and d!20889 (not c!13160)) b!82541))

(assert (= (and d!20889 (not res!42799)) b!82542))

(declare-fun m!85517 () Bool)

(assert (=> d!20889 m!85517))

(declare-fun m!85519 () Bool)

(assert (=> b!82540 m!85519))

(assert (=> b!82540 m!84331))

(assert (=> b!82540 m!84331))

(declare-fun m!85521 () Bool)

(assert (=> b!82540 m!85521))

(assert (=> b!82542 m!84331))

(assert (=> b!82542 m!84331))

(assert (=> b!82542 m!85521))

(assert (=> bm!7531 d!20889))

(declare-fun d!20891 () Bool)

(declare-fun c!13161 () Bool)

(assert (=> d!20891 (= c!13161 ((_ is Nil!1494) (toList!730 lt!37517)))))

(declare-fun e!53830 () (InoxSet tuple2!2168))

(assert (=> d!20891 (= (content!86 (toList!730 lt!37517)) e!53830)))

(declare-fun b!82543 () Bool)

(assert (=> b!82543 (= e!53830 ((as const (Array tuple2!2168 Bool)) false))))

(declare-fun b!82544 () Bool)

(assert (=> b!82544 (= e!53830 ((_ map or) (store ((as const (Array tuple2!2168 Bool)) false) (h!2082 (toList!730 lt!37517)) true) (content!86 (t!5156 (toList!730 lt!37517)))))))

(assert (= (and d!20891 c!13161) b!82543))

(assert (= (and d!20891 (not c!13161)) b!82544))

(declare-fun m!85523 () Bool)

(assert (=> b!82544 m!85523))

(assert (=> b!82544 m!84623))

(assert (=> d!19955 d!20891))

(declare-fun mapIsEmpty!3343 () Bool)

(declare-fun mapRes!3343 () Bool)

(assert (=> mapIsEmpty!3343 mapRes!3343))

(declare-fun condMapEmpty!3343 () Bool)

(declare-fun mapDefault!3343 () ValueCell!914)

(assert (=> mapNonEmpty!3341 (= condMapEmpty!3343 (= mapRest!3341 ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3343)))))

(declare-fun e!53831 () Bool)

(assert (=> mapNonEmpty!3341 (= tp!8831 (and e!53831 mapRes!3343))))

(declare-fun mapNonEmpty!3343 () Bool)

(declare-fun tp!8833 () Bool)

(declare-fun e!53832 () Bool)

(assert (=> mapNonEmpty!3343 (= mapRes!3343 (and tp!8833 e!53832))))

(declare-fun mapKey!3343 () (_ BitVec 32))

(declare-fun mapValue!3343 () ValueCell!914)

(declare-fun mapRest!3343 () (Array (_ BitVec 32) ValueCell!914))

(assert (=> mapNonEmpty!3343 (= mapRest!3341 (store mapRest!3343 mapKey!3343 mapValue!3343))))

(declare-fun b!82545 () Bool)

(assert (=> b!82545 (= e!53832 tp_is_empty!2515)))

(declare-fun b!82546 () Bool)

(assert (=> b!82546 (= e!53831 tp_is_empty!2515)))

(assert (= (and mapNonEmpty!3341 condMapEmpty!3343) mapIsEmpty!3343))

(assert (= (and mapNonEmpty!3341 (not condMapEmpty!3343)) mapNonEmpty!3343))

(assert (= (and mapNonEmpty!3343 ((_ is ValueCellFull!914) mapValue!3343)) b!82545))

(assert (= (and mapNonEmpty!3341 ((_ is ValueCellFull!914) mapDefault!3343)) b!82546))

(declare-fun m!85525 () Bool)

(assert (=> mapNonEmpty!3343 m!85525))

(declare-fun mapIsEmpty!3344 () Bool)

(declare-fun mapRes!3344 () Bool)

(assert (=> mapIsEmpty!3344 mapRes!3344))

(declare-fun condMapEmpty!3344 () Bool)

(declare-fun mapDefault!3344 () ValueCell!914)

(assert (=> mapNonEmpty!3342 (= condMapEmpty!3344 (= mapRest!3342 ((as const (Array (_ BitVec 32) ValueCell!914)) mapDefault!3344)))))

(declare-fun e!53833 () Bool)

(assert (=> mapNonEmpty!3342 (= tp!8832 (and e!53833 mapRes!3344))))

(declare-fun mapNonEmpty!3344 () Bool)

(declare-fun tp!8834 () Bool)

(declare-fun e!53834 () Bool)

(assert (=> mapNonEmpty!3344 (= mapRes!3344 (and tp!8834 e!53834))))

(declare-fun mapValue!3344 () ValueCell!914)

(declare-fun mapRest!3344 () (Array (_ BitVec 32) ValueCell!914))

(declare-fun mapKey!3344 () (_ BitVec 32))

(assert (=> mapNonEmpty!3344 (= mapRest!3342 (store mapRest!3344 mapKey!3344 mapValue!3344))))

(declare-fun b!82547 () Bool)

(assert (=> b!82547 (= e!53834 tp_is_empty!2515)))

(declare-fun b!82548 () Bool)

(assert (=> b!82548 (= e!53833 tp_is_empty!2515)))

(assert (= (and mapNonEmpty!3342 condMapEmpty!3344) mapIsEmpty!3344))

(assert (= (and mapNonEmpty!3342 (not condMapEmpty!3344)) mapNonEmpty!3344))

(assert (= (and mapNonEmpty!3344 ((_ is ValueCellFull!914) mapValue!3344)) b!82547))

(assert (= (and mapNonEmpty!3342 ((_ is ValueCellFull!914) mapDefault!3344)) b!82548))

(declare-fun m!85527 () Bool)

(assert (=> mapNonEmpty!3344 m!85527))

(declare-fun b_lambda!3659 () Bool)

(assert (= b_lambda!3633 (or (and b!80208 b_free!2197) (and b!80215 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))))) b_lambda!3659)))

(declare-fun b_lambda!3661 () Bool)

(assert (= b_lambda!3645 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3661)))

(declare-fun b_lambda!3663 () Bool)

(assert (= b_lambda!3637 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3663)))

(declare-fun b_lambda!3665 () Bool)

(assert (= b_lambda!3643 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3665)))

(declare-fun b_lambda!3667 () Bool)

(assert (= b_lambda!3647 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3667)))

(declare-fun b_lambda!3669 () Bool)

(assert (= b_lambda!3635 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3669)))

(declare-fun b_lambda!3671 () Bool)

(assert (= b_lambda!3653 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3671)))

(declare-fun b_lambda!3673 () Bool)

(assert (= b_lambda!3649 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3673)))

(declare-fun b_lambda!3675 () Bool)

(assert (= b_lambda!3631 (or (and b!80208 b_free!2197) (and b!80215 b_free!2199 (= (defaultEntry!2292 newMap!16) (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))))) b_lambda!3675)))

(declare-fun b_lambda!3677 () Bool)

(assert (= b_lambda!3655 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3677)))

(declare-fun b_lambda!3679 () Bool)

(assert (= b_lambda!3651 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3679)))

(declare-fun b_lambda!3681 () Bool)

(assert (= b_lambda!3657 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3681)))

(declare-fun b_lambda!3683 () Bool)

(assert (= b_lambda!3641 (or (and b!80208 b_free!2197 (= (defaultEntry!2292 (v!2610 (underlying!283 thiss!992))) (defaultEntry!2292 newMap!16))) (and b!80215 b_free!2199) b_lambda!3683)))

(check-sat (not b!81637) (not d!20887) (not b!81772) (not d!20597) (not d!20025) (not b!82427) (not b!81314) (not b!82122) (not bm!7693) (not b!82003) (not d!20261) (not d!20617) (not b!82103) (not b!81843) (not b!81659) (not b!82274) (not d!20329) (not d!20325) (not b!82079) (not b!81464) (not b!81850) (not d!20821) (not b_lambda!3627) (not b!82191) (not b!82051) (not d!20103) (not b_lambda!3667) (not d!20335) (not b!81430) (not d!20313) (not b!81776) (not d!20243) (not b!81891) (not d!20065) (not b!81252) (not b_lambda!3625) (not b!81295) (not b!81415) (not d!20263) (not b!81499) (not b!81769) (not b!81978) (not b!81967) (not d!20585) (not b!81337) (not d!20081) (not b_lambda!3623) (not b!82409) (not b!81680) (not d!20867) (not d!20393) (not b!81990) (not b!81599) (not b!81409) (not b!81666) (not d!20235) (not b!81481) (not b!81435) (not b_lambda!3621) (not b!81645) (not d!20589) (not d!20299) (not bm!7570) (not b!81782) (not b!82014) (not b!81355) (not d!20019) (not b!82507) (not d!20321) (not b!81667) (not d!20111) (not b!81846) (not b!82162) (not b!82250) (not b!82196) (not b!82153) (not d!20219) (not b!82439) (not bm!7592) (not b!81340) (not d!20159) (not d!20629) (not b!82420) (not d!20643) (not b!81579) (not b!81335) (not b!82088) (not d!20339) (not b!82187) (not b!81702) (not d!20795) (not b!82188) (not d!20693) (not b!82343) (not b!82052) (not d!20067) (not b!82042) (not d!20773) (not b!81483) (not b!81236) (not b!81683) (not d!20151) (not b!81885) (not bm!7608) (not d!20133) (not b!81777) (not b!82275) (not d!20539) (not d!20369) (not b!81531) (not b!81694) (not d!20267) (not b!81432) (not b!81403) (not d!20733) (not d!20687) (not b!82106) (not b!81996) (not b!81970) (not bm!7689) (not d!20095) (not d!20367) (not d!20879) (not d!20755) (not b!82422) (not b!81254) (not b!82104) (not d!20127) (not b!81391) (not b!82466) (not d!20855) (not d!20847) (not bm!7634) (not b_lambda!3629) (not d!20445) (not b!82190) (not b!82406) (not b!81984) (not d!20429) (not b!82132) (not b!81721) (not b!82290) (not b!81351) (not b!81279) (not b!82531) (not b!82263) (not b!82071) (not b!81998) (not d!20333) (not b!82431) (not d!20105) (not b!82151) (not d!20573) (not b!82506) (not b!81258) (not bm!7671) (not b!81993) (not b!81651) (not d!20475) (not b!82384) (not d!20259) (not b!82487) (not b!82276) (not d!20195) (not d!20483) (not d!20567) (not d!20385) (not d!20341) (not bm!7681) (not d!20493) (not d!20683) (not b!82498) (not b!81863) (not b!81562) (not bm!7617) (not d!20277) (not b!82307) (not b!82067) (not b!81734) (not d!20337) (not bm!7573) (not b!82370) (not b!81555) (not d!20441) (not b_lambda!3675) (not b!81671) (not b!81933) (not d!20615) (not d!20667) (not d!20047) (not d!20031) (not d!20125) (not b!82449) (not d!20679) (not d!20775) (not d!20287) (not d!20745) (not bm!7648) (not b!81245) (not b!82170) (not b!81521) (not b_lambda!3639) (not d!20021) (not bm!7601) (not b!82330) (not b!82253) (not b!82499) (not b!81865) (not b!81679) (not b!81807) (not d!20223) (not bm!7591) (not b!81602) (not d!20331) (not b!81453) (not b!81960) (not b!81859) (not d!20157) (not b!82311) (not b!82238) (not b!81426) (not b!82138) (not b!82390) (not b!82201) (not b!82175) (not b!82112) (not b!82110) (not b!81200) (not d!20531) (not b!82087) (not b!81938) (not b!81459) (not b!81829) (not d!20271) (not bm!7609) (not b!81233) (not d!20185) (not b!82168) (not d!20595) (not b!82381) (not b!81661) (not b!82519) (not b!81301) (not b!81878) (not b!81406) (not b!81999) (not d!20347) (not b!82267) (not b!81871) (not d!19997) (not b!81327) (not d!20621) (not b!82485) (not d!20523) (not b!81784) (not b!81858) (not b_lambda!3661) (not b!82524) (not b!82282) (not b!82410) (not b!81982) (not d!20203) (not b!82396) (not b!81672) (not b!82021) (not b!82037) (not b!81524) (not d!20789) (not d!20005) (not b!81678) (not b!82322) (not d!20109) (not b!81422) (not b!82542) (not d!20753) (not d!20579) (not bm!7640) (not b!81895) (not b!81448) (not d!20481) (not b!81975) (not d!20165) (not bm!7661) (not bm!7584) (not bm!7658) (not bm!7685) (not b!82440) (not b!82033) (not b!82100) (not b!81359) (not d!20575) (not b!81696) (not b!81685) (not b!82446) (not bm!7680) (not d!20411) (not b!81819) (not b!82372) (not d!20461) (not b!81861) (not bm!7565) (not b!81297) (not b!82402) (not d!20489) (not b!82419) (not bm!7664) (not d!20735) (not b!82496) (not d!20695) (not b!81916) (not b!81283) (not b!81911) (not b!81516) (not bm!7568) (not d!20669) (not d!20163) (not d!20769) (not b!81920) (not b!81527) (not b!82478) (not b!81240) (not b!82219) (not b!81518) (not b!82171) (not b!81888) (not b_lambda!3679) (not bm!7581) (not b!81238) (not d!20447) (not d!20013) (not d!20861) (not d!20349) (not d!20603) (not d!20257) (not b!81836) (not b!82208) (not d!20327) (not b!81394) (not d!20771) (not b!81939) (not d!20251) (not d!20225) (not d!20811) (not b!82462) (not d!20761) (not b!82093) (not b!82059) (not bm!7668) (not d!20657) (not d!20011) (not b!82095) (not d!20097) (not b!81635) (not d!20039) (not b!82227) (not b!81332) (not b!81213) (not b!82055) (not b!82068) (not d!20463) (not b!82195) (not d!20833) (not b!81964) (not b!82326) (not b!81656) (not b!82297) (not b!82040) (not b!81642) (not d!20361) (not d!20805) (not b!82131) (not b!81773) (not d!20359) (not bm!7610) (not b!81275) (not bm!7643) (not b!81810) (not b!81914) (not b!81612) (not b!81723) (not b!81945) (not b!81597) (not b!82117) (not bm!7562) (not b!82017) (not b!82185) (not d!20397) (not d!20029) (not b!81876) (not b!81413) (not b!82304) (not b!81867) (not b!81668) (not b!81323) (not b!82083) (not b!82540) (not b!81408) (not d!20051) (not d!20561) (not d!19981) (not d!20601) (not b!82205) (not b!81665) (not b!81437) (not b!81632) (not b!82119) (not b!81561) (not d!20661) (not d!20079) (not b!82536) (not bm!7646) (not b!81584) (not d!20027) (not b!82484) (not bm!7647) (not d!20479) (not d!20829) (not b!82011) (not d!20725) (not d!20845) (not d!20113) (not b!82470) (not b!81336) (not b!82210) (not b!82371) (not b_lambda!3609) (not bm!7595) (not d!19989) (not b!82256) (not b!81824) (not d!20651) (not d!20399) (not d!20685) (not b!81953) (not d!20759) (not b!81199) (not b!82198) (not d!20173) (not b!81210) (not b!82061) (not b!81787) (not b!82504) (not b!82511) (not b!82255) (not b!82355) (not b!81354) (not bm!7572) (not b!81302) (not b!81304) (not b!82294) (not d!20413) (not d!20233) (not d!20819) (not b!82064) (not b!82448) (not b!81699) (not b_lambda!3669) (not b!81691) (not b!82279) (not b!82363) (not b!81202) (not b!81282) (not d!20565) (not d!20697) (not bm!7637) (not b!82319) (not b!81228) (not d!20437) (not d!20391) (not b!81840) (not d!20417) (not d!20071) (not b!81930) (not b!82140) (not b!82288) (not b!82391) (not b!82424) (not bm!7684) (not d!20351) (not d!20017) (not d!20353) (not b!81339) (not b!81400) (not b!82349) (not bm!7651) (not b!81434) (not d!20209) (not b!82513) (not d!20491) (not b!81490) (not b!81902) (not b!81771) (not b!81205) (not b!82058) (not b!81369) (not b!81794) (not b!82039) (not b!81588) (not d!20269) (not b!81780) (not d!20713) (not d!20825) (not b!81307) (not b!81961) (not b!81384) (not b!82118) (not d!20557) (not b!81692) (not b!81503) (not b_lambda!3665) (not b!81569) (not b!82486) (not b!82305) (not d!20037) (not d!20083) (not b!81762) (not b!81455) (not bm!7618) (not b!82389) (not d!20545) (not b!82228) (not b!82085) (not b!82241) (not b!81972) (not d!20449) (not d!20533) (not b!82163) (not b!81427) (not bm!7583) (not b!81598) (not d!20663) (not b!82007) (not b!81377) (not b!82226) (not b!81673) (not b!82224) (not b!82102) (not b!81931) (not b!81514) (not d!20423) (not d!20193) (not d!20289) (not b!81227) (not d!20763) (not d!20305) (not b!81520) (not b_lambda!3677) (not b!81309) (not b!82369) (not d!20497) (not d!20701) (not b!81576) (not b!82146) (not b!82477) (not b!82243) (not b!82346) (not b!82028) (not d!20649) (not b!82157) (not b!81767) (not b!81425) (not b!81472) (not b!82217) (not d!20529) (not bm!7679) (not b!81792) (not b!81522) (not b!81348) (not b!82134) (not d!20607) (not b!82308) (not d!20675) (not bm!7627) (not b!81334) (not d!20747) (not b_next!2197) (not b!81506) (not bm!7590) (not b!82527) (not d!20743) (not b!82533) (not b!82387) (not b!81788) (not b!82332) (not b!81386) (not d!20865) (not b!81216) (not b!82155) (not d!20723) (not mapNonEmpty!3344) (not b!81592) (not b!81385) (not b!81502) (not b!81818) (not bm!7574) (not b_lambda!3681) (not b!81922) (not b!81979) (not d!20085) (not b!81604) (not d!20645) (not b!82009) (not b!81951) (not b_lambda!3659) (not b!82038) (not b!82030) (not b!81708) (not b!82258) (not b!81225) (not b!81907) (not b!81775) (not b!81954) (not b!81869) (not d!20465) (not b!82048) (not b!82233) (not b!81657) (not b!81209) (not b!81610) (not b!81905) (not b!82521) (not bm!7616) (not d!20421) (not d!20501) (not bm!7594) (not bm!7657) (not d!20613) (not b!81943) (not b!82221) (not b!81705) (not d!20053) b_and!5011 (not bm!7692) (not d!20201) (not d!20355) (not b!81285) (not b!81230) (not d!20403) (not b!82165) (not b!81995) (not d!20611) (not b!82107) (not b!82394) (not b!82082) (not b!82337) (not b!81278) (not d!20765) (not d!20839) (not b!81977) (not b!81255) (not b!81870) (not bm!7585) (not b!81890) (not d!20505) (not b!82494) (not b!82469) (not b!81695) (not d!20175) (not d!20623) (not b!81387) (not bm!7669) (not d!20889) (not d!20171) (not b!82270) (not b!82016) (not b_lambda!3605) (not b!82035) (not b!81909) (not b!81940) (not d!20841) (not b!82353) (not d!20073) (not d!20295) (not b!81357) (not d!20121) (not d!20757) (not b!81823) (not b!81494) (not b!81669) (not b!82314) (not d!20813) (not b!81766) (not b!82203) tp_is_empty!2515 (not b!81445) (not d!20045) (not b!81874) (not b!82066) (not d!20499) (not b!81881) (not b!82160) (not d!20715) (not b!81786) (not b!81438) (not b!81501) (not d!20751) (not d!20139) (not b!81936) (not b!81243) (not b!81523) (not b!81292) (not b!81208) (not b!81260) (not b!81517) (not d!20875) (not b!82456) (not b!81731) (not b!81496) (not d!20807) (not b!81595) (not b!81398) (not b!81311) (not d!20245) (not b!82293) (not b!82292) (not b!81239) (not b!82265) (not b!82317) (not b!82362) (not b!81380) (not b!82193) (not b!81800) (not b!81862) (not b!82259) (not b!81928) (not d!20381) (not b!82115) (not b_lambda!3673) (not b!82286) (not b!82172) (not b!82306) (not b!82382) (not b!81310) (not b!81488) (not bm!7699) (not bm!7688) (not b!82204) (not b!82315) (not b!82432) (not b!81341) (not b!81367) (not b!81508) (not b!81718) (not d!20147) (not b!81814) (not b!81790) (not b!81658) (not bm!7621) (not b!82455) (not b!81726) (not b!82073) (not b!81827) (not b!81795) (not b!82135) (not mapNonEmpty!3343) (not b!81265) (not d!20633) (not bm!7672) (not b!82447) (not b!81838) (not d!19987) (not b!82428) (not d!20419) (not d!20255) (not b!82299) (not d!20311) (not b_lambda!3597) (not b!82544) (not d!20599) (not b!81897) (not b!81611) (not b!81812) (not b!81280) (not b!81410) (not b!81957) (not b!81231) (not bm!7678) (not b!82327) (not d!20549) (not b!82379) (not b!81590) (not b!81250) (not b!81365) (not b!81845) (not d!20247) (not d!20871) (not b!82050) (not bm!7577) (not b!82539) (not b!81223) (not b!81446) (not d!20407) (not d!20357) (not d!20291) (not bm!7667) (not b!82376) (not b!81663) (not b!81649) (not d!20409) (not bm!7624) (not b!81378) (not b!81730) (not d!20777) (not b_lambda!3671) (not bm!7683) (not d!20049) (not b!81487) (not b!82501) (not bm!7691) (not d!20323) (not b_lambda!3663) (not d!20343) b_and!5009 (not b!82334) (not b!82089) (not b!82192) (not b!82301) (not b!82231) (not b!81711) (not b!81568) (not b!81316) (not b!82045) (not b!81392) (not b!82272) (not b!82407) (not b!81644) (not d!20087) (not b!81330) (not d!20153) (not d!20143) (not b!81646) (not d!20345) (not b!81761) (not b!81401) (not d!20265) (not b!82129) (not d!20231) (not b!81716) (not b!81288) (not d!20167) (not bm!7631) (not b!82091) (not b!81346) (not d!20637) (not d!20605) (not b!82310) (not d!20527) (not b!81299) (not b!81917) (not d!20517) (not d!20727) (not bm!7580) (not d!20535) (not d!20473) (not b!82377) (not d!20719) (not b!81263) (not b_lambda!3607) (not b_next!2199) (not b!81701) (not b!82097) (not d!19983) (not b!81783) (not b!81688) (not d!20767) (not b!82023) (not b!82148) (not b!81852) (not bm!7628) (not d!20273) (not d!20673) (not b!81714) (not b!82508) (not b!81821) (not b!81630) (not b!81565) (not d!20791) (not bm!7696) (not d!20383) (not b!82312) (not b!82261) (not b!82124) (not bm!7605) (not b!81639) (not b!82442) (not b!81572) (not b!81892) (not bm!7611) (not d!20849) (not b!81690) (not b!81816) (not d!20851) (not d!20749) (not d!20275) (not b!81676) (not bm!7604) (not bm!7596) (not b!81883) (not bm!7569) (not b!82529) (not b!82284) (not d!20239) (not b!81462) (not b!81370) (not b!82480) (not b!82018) (not bm!7673) (not d!20803) (not b_lambda!3683) (not d!19991) (not b!82109) (not b!81454) (not b!82177) (not d!20815) (not b!81903) (not b!81473) (not bm!7559) (not b!82454) (not b!81344) (not b!81489) (not b!81798) (not b!82365) (not d!20009) (not d!20213) (not b!81362) (not b!81913) (not d!20515) (not b!81277) (not bm!7654) (not d!20249) (not d!20469) (not d!20485) (not b!81969) (not d!20253) (not b!81847) (not b!81785) (not b!81765) (not d!20571) (not d!20831) (not d!20507) (not b!81480) (not d!20145) (not d!20543) (not b!81452))
(check-sat b_and!5009 b_and!5011 (not b_next!2197) (not b_next!2199))
