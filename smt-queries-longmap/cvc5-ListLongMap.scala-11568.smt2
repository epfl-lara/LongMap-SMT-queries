; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!134786 () Bool)

(assert start!134786)

(declare-fun res!1073831 () Bool)

(declare-fun e!876359 () Bool)

(assert (=> start!134786 (=> (not res!1073831) (not e!876359))))

(declare-fun mask!889 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!134786 (= res!1073831 (validMask!0 mask!889))))

(assert (=> start!134786 e!876359))

(assert (=> start!134786 true))

(declare-datatypes ((array!104904 0))(
  ( (array!104905 (arr!50623 (Array (_ BitVec 32) (_ BitVec 64))) (size!51173 (_ BitVec 32))) )
))
(declare-fun _keys!600 () array!104904)

(declare-fun array_inv!39350 (array!104904) Bool)

(assert (=> start!134786 (array_inv!39350 _keys!600)))

(declare-fun b!1571716 () Bool)

(declare-fun res!1073832 () Bool)

(assert (=> b!1571716 (=> (not res!1073832) (not e!876359))))

(assert (=> b!1571716 (= res!1073832 (= (size!51173 _keys!600) (bvadd #b00000000000000000000000000000001 mask!889)))))

(declare-fun b!1571717 () Bool)

(declare-fun res!1073830 () Bool)

(assert (=> b!1571717 (=> (not res!1073830) (not e!876359))))

(declare-fun k!754 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1571717 (= res!1073830 (validKeyInArray!0 k!754))))

(declare-fun b!1571718 () Bool)

(declare-fun lt!673699 () (_ BitVec 32))

(assert (=> b!1571718 (= e!876359 (and (bvsge mask!889 #b00000000000000000000000000000000) (or (bvslt lt!673699 #b00000000000000000000000000000000) (bvsge lt!673699 (bvadd #b00000000000000000000000000000001 mask!889)))))))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1571718 (= lt!673699 (toIndex!0 k!754 mask!889))))

(assert (= (and start!134786 res!1073831) b!1571716))

(assert (= (and b!1571716 res!1073832) b!1571717))

(assert (= (and b!1571717 res!1073830) b!1571718))

(declare-fun m!1445599 () Bool)

(assert (=> start!134786 m!1445599))

(declare-fun m!1445601 () Bool)

(assert (=> start!134786 m!1445601))

(declare-fun m!1445603 () Bool)

(assert (=> b!1571717 m!1445603))

(declare-fun m!1445605 () Bool)

(assert (=> b!1571718 m!1445605))

(push 1)

(assert (not start!134786))

(assert (not b!1571717))

(assert (not b!1571718))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!164639 () Bool)

(assert (=> d!164639 (= (validMask!0 mask!889) (and (or (= mask!889 #b00000000000000000000000000000111) (= mask!889 #b00000000000000000000000000001111) (= mask!889 #b00000000000000000000000000011111) (= mask!889 #b00000000000000000000000000111111) (= mask!889 #b00000000000000000000000001111111) (= mask!889 #b00000000000000000000000011111111) (= mask!889 #b00000000000000000000000111111111) (= mask!889 #b00000000000000000000001111111111) (= mask!889 #b00000000000000000000011111111111) (= mask!889 #b00000000000000000000111111111111) (= mask!889 #b00000000000000000001111111111111) (= mask!889 #b00000000000000000011111111111111) (= mask!889 #b00000000000000000111111111111111) (= mask!889 #b00000000000000001111111111111111) (= mask!889 #b00000000000000011111111111111111) (= mask!889 #b00000000000000111111111111111111) (= mask!889 #b00000000000001111111111111111111) (= mask!889 #b00000000000011111111111111111111) (= mask!889 #b00000000000111111111111111111111) (= mask!889 #b00000000001111111111111111111111) (= mask!889 #b00000000011111111111111111111111) (= mask!889 #b00000000111111111111111111111111) (= mask!889 #b00000001111111111111111111111111) (= mask!889 #b00000011111111111111111111111111) (= mask!889 #b00000111111111111111111111111111) (= mask!889 #b00001111111111111111111111111111) (= mask!889 #b00011111111111111111111111111111) (= mask!889 #b00111111111111111111111111111111)) (bvsle mask!889 #b00111111111111111111111111111111)))))

(assert (=> start!134786 d!164639))

(declare-fun d!164645 () Bool)

(assert (=> d!164645 (= (array_inv!39350 _keys!600) (bvsge (size!51173 _keys!600) #b00000000000000000000000000000000))))

(assert (=> start!134786 d!164645))

(declare-fun d!164647 () Bool)

(assert (=> d!164647 (= (validKeyInArray!0 k!754) (and (not (= k!754 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k!754 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1571717 d!164647))

(declare-fun d!164649 () Bool)

(declare-fun lt!673717 () (_ BitVec 32))

(declare-fun lt!673716 () (_ BitVec 32))

(assert (=> d!164649 (= lt!673717 (bvmul (bvxor lt!673716 (bvlshr lt!673716 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!164649 (= lt!673716 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!164649 (and (bvsge mask!889 #b00000000000000000000000000000000) (let ((res!1073852 (let ((h!38208 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141323 (bvmul (bvxor h!38208 (bvlshr h!38208 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141323 (bvlshr x!141323 #b00000000000000000000000000001101)) mask!889))))) (and (bvslt res!1073852 (bvadd mask!889 #b00000000000000000000000000000001)) (bvsge res!1073852 #b00000000000000000000000000000000))))))

(assert (=> d!164649 (= (toIndex!0 k!754 mask!889) (bvand (bvxor lt!673717 (bvlshr lt!673717 #b00000000000000000000000000001101)) mask!889))))

(assert (=> b!1571718 d!164649))

(push 1)

(check-sat)

