; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9264 () Bool)

(assert start!9264)

(declare-fun b!66103 () Bool)

(declare-fun b_free!2065 () Bool)

(declare-fun b_next!2065 () Bool)

(assert (=> b!66103 (= b_free!2065 (not b_next!2065))))

(declare-fun tp!8347 () Bool)

(declare-fun b_and!4069 () Bool)

(assert (=> b!66103 (= tp!8347 b_and!4069)))

(declare-fun b!66112 () Bool)

(declare-fun b_free!2067 () Bool)

(declare-fun b_next!2067 () Bool)

(assert (=> b!66112 (= b_free!2067 (not b_next!2067))))

(declare-fun tp!8350 () Bool)

(declare-fun b_and!4071 () Bool)

(assert (=> b!66112 (= tp!8350 b_and!4071)))

(declare-fun b!66096 () Bool)

(declare-datatypes ((Unit!1818 0))(
  ( (Unit!1819) )
))
(declare-fun e!43369 () Unit!1818)

(declare-fun Unit!1820 () Unit!1818)

(assert (=> b!66096 (= e!43369 Unit!1820)))

(declare-fun b!66097 () Bool)

(declare-fun res!35831 () Bool)

(declare-fun e!43371 () Bool)

(assert (=> b!66097 (=> (not res!35831) (not e!43371))))

(declare-datatypes ((V!2913 0))(
  ( (V!2914 (val!1269 Int)) )
))
(declare-datatypes ((array!3817 0))(
  ( (array!3818 (arr!1822 (Array (_ BitVec 32) (_ BitVec 64))) (size!2058 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!881 0))(
  ( (ValueCellFull!881 (v!2468 V!2913)) (EmptyCell!881) )
))
(declare-datatypes ((array!3819 0))(
  ( (array!3820 (arr!1823 (Array (_ BitVec 32) ValueCell!881)) (size!2059 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!670 0))(
  ( (LongMapFixedSize!671 (defaultEntry!2146 Int) (mask!6080 (_ BitVec 32)) (extraKeys!2017 (_ BitVec 32)) (zeroValue!2054 V!2913) (minValue!2054 V!2913) (_size!384 (_ BitVec 32)) (_keys!3785 array!3817) (_values!2129 array!3819) (_vacant!384 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!670)

(declare-fun valid!287 (LongMapFixedSize!670) Bool)

(assert (=> b!66097 (= res!35831 (valid!287 newMap!16))))

(declare-fun b!66098 () Bool)

(declare-fun e!43374 () Bool)

(declare-fun tp_is_empty!2449 () Bool)

(assert (=> b!66098 (= e!43374 tp_is_empty!2449)))

(declare-fun b!66099 () Bool)

(declare-fun e!43364 () Bool)

(declare-fun e!43368 () Bool)

(assert (=> b!66099 (= e!43364 e!43368)))

(declare-fun res!35828 () Bool)

(assert (=> b!66099 (=> (not res!35828) (not e!43368))))

(declare-datatypes ((Cell!466 0))(
  ( (Cell!467 (v!2469 LongMapFixedSize!670)) )
))
(declare-datatypes ((LongMap!466 0))(
  ( (LongMap!467 (underlying!244 Cell!466)) )
))
(declare-fun thiss!992 () LongMap!466)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!66099 (= res!35828 (and (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!28400 () V!2913)

(declare-fun get!1119 (ValueCell!881 V!2913) V!2913)

(declare-fun dynLambda!319 (Int (_ BitVec 64)) V!2913)

(assert (=> b!66099 (= lt!28400 (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66100 () Bool)

(declare-fun e!43360 () Bool)

(declare-fun e!43361 () Bool)

(assert (=> b!66100 (= e!43360 e!43361)))

(declare-fun mapNonEmpty!3069 () Bool)

(declare-fun mapRes!3069 () Bool)

(declare-fun tp!8349 () Bool)

(declare-fun e!43363 () Bool)

(assert (=> mapNonEmpty!3069 (= mapRes!3069 (and tp!8349 e!43363))))

(declare-fun mapRest!3069 () (Array (_ BitVec 32) ValueCell!881))

(declare-fun mapValue!3069 () ValueCell!881)

(declare-fun mapKey!3069 () (_ BitVec 32))

(assert (=> mapNonEmpty!3069 (= (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (store mapRest!3069 mapKey!3069 mapValue!3069))))

(declare-fun mapNonEmpty!3070 () Bool)

(declare-fun mapRes!3070 () Bool)

(declare-fun tp!8348 () Bool)

(declare-fun e!43372 () Bool)

(assert (=> mapNonEmpty!3070 (= mapRes!3070 (and tp!8348 e!43372))))

(declare-fun mapRest!3070 () (Array (_ BitVec 32) ValueCell!881))

(declare-fun mapKey!3070 () (_ BitVec 32))

(declare-fun mapValue!3070 () ValueCell!881)

(assert (=> mapNonEmpty!3070 (= (arr!1823 (_values!2129 newMap!16)) (store mapRest!3070 mapKey!3070 mapValue!3070))))

(declare-fun mapIsEmpty!3069 () Bool)

(assert (=> mapIsEmpty!3069 mapRes!3069))

(declare-fun mapIsEmpty!3070 () Bool)

(assert (=> mapIsEmpty!3070 mapRes!3070))

(declare-fun b!66101 () Bool)

(declare-fun e!43365 () Bool)

(assert (=> b!66101 (= e!43365 tp_is_empty!2449)))

(declare-fun b!66102 () Bool)

(declare-fun res!35834 () Bool)

(assert (=> b!66102 (=> (not res!35834) (not e!43371))))

(assert (=> b!66102 (= res!35834 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6080 newMap!16)) (_size!384 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun e!43366 () Bool)

(declare-fun array_inv!1137 (array!3817) Bool)

(declare-fun array_inv!1138 (array!3819) Bool)

(assert (=> b!66103 (= e!43361 (and tp!8347 tp_is_empty!2449 (array_inv!1137 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (array_inv!1138 (_values!2129 (v!2469 (underlying!244 thiss!992)))) e!43366))))

(declare-fun b!66095 () Bool)

(declare-fun e!43359 () Bool)

(assert (=> b!66095 (= e!43368 e!43359)))

(declare-fun res!35829 () Bool)

(assert (=> b!66095 (=> (not res!35829) (not e!43359))))

(declare-datatypes ((tuple2!2080 0))(
  ( (tuple2!2081 (_1!1051 Bool) (_2!1051 LongMapFixedSize!670)) )
))
(declare-fun lt!28409 () tuple2!2080)

(assert (=> b!66095 (= res!35829 (and (_1!1051 lt!28409) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!28407 () Unit!1818)

(assert (=> b!66095 (= lt!28407 e!43369)))

(declare-datatypes ((tuple2!2082 0))(
  ( (tuple2!2083 (_1!1052 (_ BitVec 64)) (_2!1052 V!2913)) )
))
(declare-datatypes ((List!1466 0))(
  ( (Nil!1463) (Cons!1462 (h!2046 tuple2!2082) (t!4939 List!1466)) )
))
(declare-datatypes ((ListLongMap!1379 0))(
  ( (ListLongMap!1380 (toList!705 List!1466)) )
))
(declare-fun lt!28404 () ListLongMap!1379)

(declare-fun c!9078 () Bool)

(declare-fun contains!705 (ListLongMap!1379 (_ BitVec 64)) Bool)

(assert (=> b!66095 (= c!9078 (contains!705 lt!28404 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun update!95 (LongMapFixedSize!670 (_ BitVec 64) V!2913) tuple2!2080)

(assert (=> b!66095 (= lt!28409 (update!95 newMap!16 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))

(declare-fun res!35835 () Bool)

(assert (=> start!9264 (=> (not res!35835) (not e!43371))))

(declare-fun valid!288 (LongMap!466) Bool)

(assert (=> start!9264 (= res!35835 (valid!288 thiss!992))))

(assert (=> start!9264 e!43371))

(declare-fun e!43367 () Bool)

(assert (=> start!9264 e!43367))

(assert (=> start!9264 true))

(declare-fun e!43362 () Bool)

(assert (=> start!9264 e!43362))

(declare-fun b!66104 () Bool)

(assert (=> b!66104 (= e!43372 tp_is_empty!2449)))

(declare-fun b!66105 () Bool)

(assert (=> b!66105 (= e!43366 (and e!43374 mapRes!3069))))

(declare-fun condMapEmpty!3070 () Bool)

(declare-fun mapDefault!3070 () ValueCell!881)

(assert (=> b!66105 (= condMapEmpty!3070 (= (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3070)))))

(declare-fun b!66106 () Bool)

(declare-fun Unit!1821 () Unit!1818)

(assert (=> b!66106 (= e!43369 Unit!1821)))

(declare-fun lt!28406 () Unit!1818)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!43 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) (_ BitVec 32) Int) Unit!1818)

(assert (=> b!66106 (= lt!28406 (lemmaListMapContainsThenArrayContainsFrom!43 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3817 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!66106 (arrayContainsKey!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!28405 () Unit!1818)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3817 (_ BitVec 32) (_ BitVec 32)) Unit!1818)

(assert (=> b!66106 (= lt!28405 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1467 0))(
  ( (Nil!1464) (Cons!1463 (h!2047 (_ BitVec 64)) (t!4940 List!1467)) )
))
(declare-fun arrayNoDuplicates!0 (array!3817 (_ BitVec 32) List!1467) Bool)

(assert (=> b!66106 (arrayNoDuplicates!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) from!355 Nil!1464)))

(declare-fun lt!28410 () Unit!1818)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3817 (_ BitVec 32) (_ BitVec 64) List!1467) Unit!1818)

(assert (=> b!66106 (= lt!28410 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464)))))

(assert (=> b!66106 false))

(declare-fun b!66107 () Bool)

(declare-fun res!35833 () Bool)

(assert (=> b!66107 (=> (not res!35833) (not e!43371))))

(assert (=> b!66107 (= res!35833 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!66108 () Bool)

(declare-fun e!43373 () Bool)

(assert (=> b!66108 (= e!43373 (= (size!2059 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6080 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!66109 () Bool)

(assert (=> b!66109 (= e!43367 e!43360)))

(declare-fun b!66110 () Bool)

(declare-fun e!43358 () Bool)

(assert (=> b!66110 (= e!43358 (and e!43365 mapRes!3070))))

(declare-fun condMapEmpty!3069 () Bool)

(declare-fun mapDefault!3069 () ValueCell!881)

(assert (=> b!66110 (= condMapEmpty!3069 (= (arr!1823 (_values!2129 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3069)))))

(declare-fun b!66111 () Bool)

(assert (=> b!66111 (= e!43371 e!43364)))

(declare-fun res!35830 () Bool)

(assert (=> b!66111 (=> (not res!35830) (not e!43364))))

(declare-fun lt!28401 () ListLongMap!1379)

(assert (=> b!66111 (= res!35830 (= lt!28401 lt!28404))))

(declare-fun map!1133 (LongMapFixedSize!670) ListLongMap!1379)

(assert (=> b!66111 (= lt!28404 (map!1133 newMap!16))))

(declare-fun getCurrentListMap!401 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) Int) ListLongMap!1379)

(assert (=> b!66111 (= lt!28401 (getCurrentListMap!401 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))))))

(assert (=> b!66112 (= e!43362 (and tp!8350 tp_is_empty!2449 (array_inv!1137 (_keys!3785 newMap!16)) (array_inv!1138 (_values!2129 newMap!16)) e!43358))))

(declare-fun b!66113 () Bool)

(assert (=> b!66113 (= e!43359 (not e!43373))))

(declare-fun res!35832 () Bool)

(assert (=> b!66113 (=> res!35832 e!43373)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!66113 (= res!35832 (not (validMask!0 (mask!6080 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun lt!28402 () ListLongMap!1379)

(declare-fun lt!28403 () tuple2!2082)

(declare-fun lt!28408 () tuple2!2082)

(declare-fun +!87 (ListLongMap!1379 tuple2!2082) ListLongMap!1379)

(assert (=> b!66113 (= (+!87 (+!87 lt!28402 lt!28403) lt!28408) (+!87 (+!87 lt!28402 lt!28408) lt!28403))))

(assert (=> b!66113 (= lt!28408 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))

(assert (=> b!66113 (= lt!28403 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))

(declare-fun lt!28399 () Unit!1818)

(declare-fun addCommutativeForDiffKeys!6 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64) V!2913) Unit!1818)

(assert (=> b!66113 (= lt!28399 (addCommutativeForDiffKeys!6 lt!28402 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!51 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) Int) ListLongMap!1379)

(assert (=> b!66113 (= lt!28402 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun b!66114 () Bool)

(assert (=> b!66114 (= e!43363 tp_is_empty!2449)))

(assert (= (and start!9264 res!35835) b!66107))

(assert (= (and b!66107 res!35833) b!66097))

(assert (= (and b!66097 res!35831) b!66102))

(assert (= (and b!66102 res!35834) b!66111))

(assert (= (and b!66111 res!35830) b!66099))

(assert (= (and b!66099 res!35828) b!66095))

(assert (= (and b!66095 c!9078) b!66106))

(assert (= (and b!66095 (not c!9078)) b!66096))

(assert (= (and b!66095 res!35829) b!66113))

(assert (= (and b!66113 (not res!35832)) b!66108))

(assert (= (and b!66105 condMapEmpty!3070) mapIsEmpty!3069))

(assert (= (and b!66105 (not condMapEmpty!3070)) mapNonEmpty!3069))

(get-info :version)

(assert (= (and mapNonEmpty!3069 ((_ is ValueCellFull!881) mapValue!3069)) b!66114))

(assert (= (and b!66105 ((_ is ValueCellFull!881) mapDefault!3070)) b!66098))

(assert (= b!66103 b!66105))

(assert (= b!66100 b!66103))

(assert (= b!66109 b!66100))

(assert (= start!9264 b!66109))

(assert (= (and b!66110 condMapEmpty!3069) mapIsEmpty!3070))

(assert (= (and b!66110 (not condMapEmpty!3069)) mapNonEmpty!3070))

(assert (= (and mapNonEmpty!3070 ((_ is ValueCellFull!881) mapValue!3070)) b!66104))

(assert (= (and b!66110 ((_ is ValueCellFull!881) mapDefault!3069)) b!66101))

(assert (= b!66112 b!66110))

(assert (= start!9264 b!66112))

(declare-fun b_lambda!2951 () Bool)

(assert (=> (not b_lambda!2951) (not b!66099)))

(declare-fun t!4936 () Bool)

(declare-fun tb!1449 () Bool)

(assert (=> (and b!66103 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))) t!4936) tb!1449))

(declare-fun result!2567 () Bool)

(assert (=> tb!1449 (= result!2567 tp_is_empty!2449)))

(assert (=> b!66099 t!4936))

(declare-fun b_and!4073 () Bool)

(assert (= b_and!4069 (and (=> t!4936 result!2567) b_and!4073)))

(declare-fun t!4938 () Bool)

(declare-fun tb!1451 () Bool)

(assert (=> (and b!66112 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))) t!4938) tb!1451))

(declare-fun result!2571 () Bool)

(assert (= result!2571 result!2567))

(assert (=> b!66099 t!4938))

(declare-fun b_and!4075 () Bool)

(assert (= b_and!4071 (and (=> t!4938 result!2571) b_and!4075)))

(declare-fun m!60433 () Bool)

(assert (=> start!9264 m!60433))

(declare-fun m!60435 () Bool)

(assert (=> b!66111 m!60435))

(declare-fun m!60437 () Bool)

(assert (=> b!66111 m!60437))

(declare-fun m!60439 () Bool)

(assert (=> mapNonEmpty!3070 m!60439))

(declare-fun m!60441 () Bool)

(assert (=> b!66097 m!60441))

(declare-fun m!60443 () Bool)

(assert (=> b!66113 m!60443))

(declare-fun m!60445 () Bool)

(assert (=> b!66113 m!60445))

(declare-fun m!60447 () Bool)

(assert (=> b!66113 m!60447))

(declare-fun m!60449 () Bool)

(assert (=> b!66113 m!60449))

(declare-fun m!60451 () Bool)

(assert (=> b!66113 m!60451))

(assert (=> b!66113 m!60449))

(declare-fun m!60453 () Bool)

(assert (=> b!66113 m!60453))

(declare-fun m!60455 () Bool)

(assert (=> b!66113 m!60455))

(assert (=> b!66113 m!60453))

(declare-fun m!60457 () Bool)

(assert (=> b!66113 m!60457))

(assert (=> b!66113 m!60443))

(declare-fun m!60459 () Bool)

(assert (=> b!66103 m!60459))

(declare-fun m!60461 () Bool)

(assert (=> b!66103 m!60461))

(assert (=> b!66099 m!60449))

(declare-fun m!60463 () Bool)

(assert (=> b!66099 m!60463))

(declare-fun m!60465 () Bool)

(assert (=> b!66099 m!60465))

(assert (=> b!66099 m!60463))

(assert (=> b!66099 m!60465))

(declare-fun m!60467 () Bool)

(assert (=> b!66099 m!60467))

(assert (=> b!66095 m!60449))

(assert (=> b!66095 m!60449))

(declare-fun m!60469 () Bool)

(assert (=> b!66095 m!60469))

(assert (=> b!66095 m!60449))

(declare-fun m!60471 () Bool)

(assert (=> b!66095 m!60471))

(declare-fun m!60473 () Bool)

(assert (=> b!66106 m!60473))

(declare-fun m!60475 () Bool)

(assert (=> b!66106 m!60475))

(assert (=> b!66106 m!60449))

(declare-fun m!60477 () Bool)

(assert (=> b!66106 m!60477))

(assert (=> b!66106 m!60449))

(assert (=> b!66106 m!60449))

(declare-fun m!60479 () Bool)

(assert (=> b!66106 m!60479))

(assert (=> b!66106 m!60449))

(declare-fun m!60481 () Bool)

(assert (=> b!66106 m!60481))

(declare-fun m!60483 () Bool)

(assert (=> mapNonEmpty!3069 m!60483))

(declare-fun m!60485 () Bool)

(assert (=> b!66112 m!60485))

(declare-fun m!60487 () Bool)

(assert (=> b!66112 m!60487))

(check-sat (not b!66112) tp_is_empty!2449 (not b!66111) b_and!4075 (not b_next!2065) (not b!66106) (not b!66113) (not mapNonEmpty!3069) (not b!66103) (not b!66095) (not b!66099) (not start!9264) (not b_next!2067) (not b!66097) (not mapNonEmpty!3070) b_and!4073 (not b_lambda!2951))
(check-sat b_and!4073 b_and!4075 (not b_next!2065) (not b_next!2067))
(get-model)

(declare-fun b_lambda!2957 () Bool)

(assert (= b_lambda!2951 (or (and b!66103 b_free!2065) (and b!66112 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))))) b_lambda!2957)))

(check-sat (not b!66112) tp_is_empty!2449 (not b!66111) b_and!4075 (not b_lambda!2957) (not b_next!2065) (not b!66106) (not b!66113) (not mapNonEmpty!3069) (not b!66103) (not b!66095) (not b!66099) (not start!9264) (not b_next!2067) (not b!66097) (not mapNonEmpty!3070) b_and!4073)
(check-sat b_and!4073 b_and!4075 (not b_next!2065) (not b_next!2067))
(get-model)

(declare-fun d!13633 () Bool)

(declare-fun e!43486 () Bool)

(assert (=> d!13633 e!43486))

(declare-fun res!35888 () Bool)

(assert (=> d!13633 (=> (not res!35888) (not e!43486))))

(declare-fun lt!28492 () ListLongMap!1379)

(assert (=> d!13633 (= res!35888 (contains!705 lt!28492 (_1!1052 lt!28408)))))

(declare-fun lt!28494 () List!1466)

(assert (=> d!13633 (= lt!28492 (ListLongMap!1380 lt!28494))))

(declare-fun lt!28491 () Unit!1818)

(declare-fun lt!28493 () Unit!1818)

(assert (=> d!13633 (= lt!28491 lt!28493)))

(declare-datatypes ((Option!134 0))(
  ( (Some!133 (v!2475 V!2913)) (None!132) )
))
(declare-fun getValueByKey!128 (List!1466 (_ BitVec 64)) Option!134)

(assert (=> d!13633 (= (getValueByKey!128 lt!28494 (_1!1052 lt!28408)) (Some!133 (_2!1052 lt!28408)))))

(declare-fun lemmaContainsTupThenGetReturnValue!48 (List!1466 (_ BitVec 64) V!2913) Unit!1818)

(assert (=> d!13633 (= lt!28493 (lemmaContainsTupThenGetReturnValue!48 lt!28494 (_1!1052 lt!28408) (_2!1052 lt!28408)))))

(declare-fun insertStrictlySorted!51 (List!1466 (_ BitVec 64) V!2913) List!1466)

(assert (=> d!13633 (= lt!28494 (insertStrictlySorted!51 (toList!705 lt!28402) (_1!1052 lt!28408) (_2!1052 lt!28408)))))

(assert (=> d!13633 (= (+!87 lt!28402 lt!28408) lt!28492)))

(declare-fun b!66245 () Bool)

(declare-fun res!35889 () Bool)

(assert (=> b!66245 (=> (not res!35889) (not e!43486))))

(assert (=> b!66245 (= res!35889 (= (getValueByKey!128 (toList!705 lt!28492) (_1!1052 lt!28408)) (Some!133 (_2!1052 lt!28408))))))

(declare-fun b!66246 () Bool)

(declare-fun contains!707 (List!1466 tuple2!2082) Bool)

(assert (=> b!66246 (= e!43486 (contains!707 (toList!705 lt!28492) lt!28408))))

(assert (= (and d!13633 res!35888) b!66245))

(assert (= (and b!66245 res!35889) b!66246))

(declare-fun m!60601 () Bool)

(assert (=> d!13633 m!60601))

(declare-fun m!60603 () Bool)

(assert (=> d!13633 m!60603))

(declare-fun m!60605 () Bool)

(assert (=> d!13633 m!60605))

(declare-fun m!60607 () Bool)

(assert (=> d!13633 m!60607))

(declare-fun m!60609 () Bool)

(assert (=> b!66245 m!60609))

(declare-fun m!60611 () Bool)

(assert (=> b!66246 m!60611))

(assert (=> b!66113 d!13633))

(declare-fun d!13635 () Bool)

(declare-fun e!43487 () Bool)

(assert (=> d!13635 e!43487))

(declare-fun res!35890 () Bool)

(assert (=> d!13635 (=> (not res!35890) (not e!43487))))

(declare-fun lt!28496 () ListLongMap!1379)

(assert (=> d!13635 (= res!35890 (contains!705 lt!28496 (_1!1052 lt!28408)))))

(declare-fun lt!28498 () List!1466)

(assert (=> d!13635 (= lt!28496 (ListLongMap!1380 lt!28498))))

(declare-fun lt!28495 () Unit!1818)

(declare-fun lt!28497 () Unit!1818)

(assert (=> d!13635 (= lt!28495 lt!28497)))

(assert (=> d!13635 (= (getValueByKey!128 lt!28498 (_1!1052 lt!28408)) (Some!133 (_2!1052 lt!28408)))))

(assert (=> d!13635 (= lt!28497 (lemmaContainsTupThenGetReturnValue!48 lt!28498 (_1!1052 lt!28408) (_2!1052 lt!28408)))))

(assert (=> d!13635 (= lt!28498 (insertStrictlySorted!51 (toList!705 (+!87 lt!28402 lt!28403)) (_1!1052 lt!28408) (_2!1052 lt!28408)))))

(assert (=> d!13635 (= (+!87 (+!87 lt!28402 lt!28403) lt!28408) lt!28496)))

(declare-fun b!66247 () Bool)

(declare-fun res!35891 () Bool)

(assert (=> b!66247 (=> (not res!35891) (not e!43487))))

(assert (=> b!66247 (= res!35891 (= (getValueByKey!128 (toList!705 lt!28496) (_1!1052 lt!28408)) (Some!133 (_2!1052 lt!28408))))))

(declare-fun b!66248 () Bool)

(assert (=> b!66248 (= e!43487 (contains!707 (toList!705 lt!28496) lt!28408))))

(assert (= (and d!13635 res!35890) b!66247))

(assert (= (and b!66247 res!35891) b!66248))

(declare-fun m!60613 () Bool)

(assert (=> d!13635 m!60613))

(declare-fun m!60615 () Bool)

(assert (=> d!13635 m!60615))

(declare-fun m!60617 () Bool)

(assert (=> d!13635 m!60617))

(declare-fun m!60619 () Bool)

(assert (=> d!13635 m!60619))

(declare-fun m!60621 () Bool)

(assert (=> b!66247 m!60621))

(declare-fun m!60623 () Bool)

(assert (=> b!66248 m!60623))

(assert (=> b!66113 d!13635))

(declare-fun e!43506 () Bool)

(declare-fun b!66273 () Bool)

(declare-fun lt!28513 () ListLongMap!1379)

(assert (=> b!66273 (= e!43506 (= lt!28513 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun bm!5451 () Bool)

(declare-fun call!5454 () ListLongMap!1379)

(assert (=> bm!5451 (= call!5454 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun b!66274 () Bool)

(declare-fun e!43505 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!66274 (= e!43505 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66274 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!66275 () Bool)

(declare-fun lt!28518 () Unit!1818)

(declare-fun lt!28514 () Unit!1818)

(assert (=> b!66275 (= lt!28518 lt!28514)))

(declare-fun lt!28519 () (_ BitVec 64))

(declare-fun lt!28516 () V!2913)

(declare-fun lt!28515 () ListLongMap!1379)

(declare-fun lt!28517 () (_ BitVec 64))

(assert (=> b!66275 (not (contains!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)) lt!28519))))

(declare-fun addStillNotContains!22 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64)) Unit!1818)

(assert (=> b!66275 (= lt!28514 (addStillNotContains!22 lt!28515 lt!28517 lt!28516 lt!28519))))

(assert (=> b!66275 (= lt!28519 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!66275 (= lt!28516 (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!66275 (= lt!28517 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!66275 (= lt!28515 call!5454)))

(declare-fun e!43508 () ListLongMap!1379)

(assert (=> b!66275 (= e!43508 (+!87 call!5454 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!66276 () Bool)

(declare-fun e!43502 () ListLongMap!1379)

(assert (=> b!66276 (= e!43502 e!43508)))

(declare-fun c!9093 () Bool)

(assert (=> b!66276 (= c!9093 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66277 () Bool)

(assert (=> b!66277 (= e!43502 (ListLongMap!1380 Nil!1463))))

(declare-fun b!66278 () Bool)

(assert (=> b!66278 (= e!43508 call!5454)))

(declare-fun b!66279 () Bool)

(declare-fun isEmpty!311 (ListLongMap!1379) Bool)

(assert (=> b!66279 (= e!43506 (isEmpty!311 lt!28513))))

(declare-fun b!66280 () Bool)

(declare-fun res!35903 () Bool)

(declare-fun e!43507 () Bool)

(assert (=> b!66280 (=> (not res!35903) (not e!43507))))

(assert (=> b!66280 (= res!35903 (not (contains!705 lt!28513 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66282 () Bool)

(declare-fun e!43504 () Bool)

(assert (=> b!66282 (= e!43504 e!43506)))

(declare-fun c!9095 () Bool)

(assert (=> b!66282 (= c!9095 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!66283 () Bool)

(declare-fun e!43503 () Bool)

(assert (=> b!66283 (= e!43504 e!43503)))

(assert (=> b!66283 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun res!35902 () Bool)

(assert (=> b!66283 (= res!35902 (contains!705 lt!28513 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66283 (=> (not res!35902) (not e!43503))))

(declare-fun b!66284 () Bool)

(assert (=> b!66284 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> b!66284 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2059 (_values!2129 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun apply!72 (ListLongMap!1379 (_ BitVec 64)) V!2913)

(assert (=> b!66284 (= e!43503 (= (apply!72 lt!28513 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!13637 () Bool)

(assert (=> d!13637 e!43507))

(declare-fun res!35901 () Bool)

(assert (=> d!13637 (=> (not res!35901) (not e!43507))))

(assert (=> d!13637 (= res!35901 (not (contains!705 lt!28513 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13637 (= lt!28513 e!43502)))

(declare-fun c!9094 () Bool)

(assert (=> d!13637 (= c!9094 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> d!13637 (validMask!0 (mask!6080 (v!2469 (underlying!244 thiss!992))))))

(assert (=> d!13637 (= (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))) lt!28513)))

(declare-fun b!66281 () Bool)

(assert (=> b!66281 (= e!43507 e!43504)))

(declare-fun c!9096 () Bool)

(assert (=> b!66281 (= c!9096 e!43505)))

(declare-fun res!35900 () Bool)

(assert (=> b!66281 (=> (not res!35900) (not e!43505))))

(assert (=> b!66281 (= res!35900 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!13637 c!9094) b!66277))

(assert (= (and d!13637 (not c!9094)) b!66276))

(assert (= (and b!66276 c!9093) b!66275))

(assert (= (and b!66276 (not c!9093)) b!66278))

(assert (= (or b!66275 b!66278) bm!5451))

(assert (= (and d!13637 res!35901) b!66280))

(assert (= (and b!66280 res!35903) b!66281))

(assert (= (and b!66281 res!35900) b!66274))

(assert (= (and b!66281 c!9096) b!66283))

(assert (= (and b!66281 (not c!9096)) b!66282))

(assert (= (and b!66283 res!35902) b!66284))

(assert (= (and b!66282 c!9095) b!66273))

(assert (= (and b!66282 (not c!9095)) b!66279))

(declare-fun b_lambda!2959 () Bool)

(assert (=> (not b_lambda!2959) (not b!66275)))

(assert (=> b!66275 t!4936))

(declare-fun b_and!4093 () Bool)

(assert (= b_and!4073 (and (=> t!4936 result!2567) b_and!4093)))

(assert (=> b!66275 t!4938))

(declare-fun b_and!4095 () Bool)

(assert (= b_and!4075 (and (=> t!4938 result!2571) b_and!4095)))

(declare-fun b_lambda!2961 () Bool)

(assert (=> (not b_lambda!2961) (not b!66284)))

(assert (=> b!66284 t!4936))

(declare-fun b_and!4097 () Bool)

(assert (= b_and!4093 (and (=> t!4936 result!2567) b_and!4097)))

(assert (=> b!66284 t!4938))

(declare-fun b_and!4099 () Bool)

(assert (= b_and!4095 (and (=> t!4938 result!2571) b_and!4099)))

(declare-fun m!60625 () Bool)

(assert (=> d!13637 m!60625))

(assert (=> d!13637 m!60447))

(declare-fun m!60627 () Bool)

(assert (=> b!66276 m!60627))

(assert (=> b!66276 m!60627))

(declare-fun m!60629 () Bool)

(assert (=> b!66276 m!60629))

(declare-fun m!60631 () Bool)

(assert (=> b!66279 m!60631))

(assert (=> b!66274 m!60627))

(assert (=> b!66274 m!60627))

(assert (=> b!66274 m!60629))

(declare-fun m!60633 () Bool)

(assert (=> b!66273 m!60633))

(declare-fun m!60635 () Bool)

(assert (=> b!66275 m!60635))

(declare-fun m!60637 () Bool)

(assert (=> b!66275 m!60637))

(declare-fun m!60639 () Bool)

(assert (=> b!66275 m!60639))

(assert (=> b!66275 m!60465))

(declare-fun m!60641 () Bool)

(assert (=> b!66275 m!60641))

(declare-fun m!60643 () Bool)

(assert (=> b!66275 m!60643))

(assert (=> b!66275 m!60635))

(assert (=> b!66275 m!60639))

(assert (=> b!66275 m!60465))

(declare-fun m!60645 () Bool)

(assert (=> b!66275 m!60645))

(assert (=> b!66275 m!60627))

(declare-fun m!60647 () Bool)

(assert (=> b!66280 m!60647))

(assert (=> bm!5451 m!60633))

(assert (=> b!66283 m!60627))

(assert (=> b!66283 m!60627))

(declare-fun m!60649 () Bool)

(assert (=> b!66283 m!60649))

(assert (=> b!66284 m!60639))

(assert (=> b!66284 m!60465))

(assert (=> b!66284 m!60641))

(assert (=> b!66284 m!60639))

(assert (=> b!66284 m!60627))

(declare-fun m!60651 () Bool)

(assert (=> b!66284 m!60651))

(assert (=> b!66284 m!60465))

(assert (=> b!66284 m!60627))

(assert (=> b!66113 d!13637))

(declare-fun d!13639 () Bool)

(declare-fun e!43509 () Bool)

(assert (=> d!13639 e!43509))

(declare-fun res!35904 () Bool)

(assert (=> d!13639 (=> (not res!35904) (not e!43509))))

(declare-fun lt!28521 () ListLongMap!1379)

(assert (=> d!13639 (= res!35904 (contains!705 lt!28521 (_1!1052 lt!28403)))))

(declare-fun lt!28523 () List!1466)

(assert (=> d!13639 (= lt!28521 (ListLongMap!1380 lt!28523))))

(declare-fun lt!28520 () Unit!1818)

(declare-fun lt!28522 () Unit!1818)

(assert (=> d!13639 (= lt!28520 lt!28522)))

(assert (=> d!13639 (= (getValueByKey!128 lt!28523 (_1!1052 lt!28403)) (Some!133 (_2!1052 lt!28403)))))

(assert (=> d!13639 (= lt!28522 (lemmaContainsTupThenGetReturnValue!48 lt!28523 (_1!1052 lt!28403) (_2!1052 lt!28403)))))

(assert (=> d!13639 (= lt!28523 (insertStrictlySorted!51 (toList!705 lt!28402) (_1!1052 lt!28403) (_2!1052 lt!28403)))))

(assert (=> d!13639 (= (+!87 lt!28402 lt!28403) lt!28521)))

(declare-fun b!66285 () Bool)

(declare-fun res!35905 () Bool)

(assert (=> b!66285 (=> (not res!35905) (not e!43509))))

(assert (=> b!66285 (= res!35905 (= (getValueByKey!128 (toList!705 lt!28521) (_1!1052 lt!28403)) (Some!133 (_2!1052 lt!28403))))))

(declare-fun b!66286 () Bool)

(assert (=> b!66286 (= e!43509 (contains!707 (toList!705 lt!28521) lt!28403))))

(assert (= (and d!13639 res!35904) b!66285))

(assert (= (and b!66285 res!35905) b!66286))

(declare-fun m!60653 () Bool)

(assert (=> d!13639 m!60653))

(declare-fun m!60655 () Bool)

(assert (=> d!13639 m!60655))

(declare-fun m!60657 () Bool)

(assert (=> d!13639 m!60657))

(declare-fun m!60659 () Bool)

(assert (=> d!13639 m!60659))

(declare-fun m!60661 () Bool)

(assert (=> b!66285 m!60661))

(declare-fun m!60663 () Bool)

(assert (=> b!66286 m!60663))

(assert (=> b!66113 d!13639))

(declare-fun d!13641 () Bool)

(declare-fun e!43510 () Bool)

(assert (=> d!13641 e!43510))

(declare-fun res!35906 () Bool)

(assert (=> d!13641 (=> (not res!35906) (not e!43510))))

(declare-fun lt!28525 () ListLongMap!1379)

(assert (=> d!13641 (= res!35906 (contains!705 lt!28525 (_1!1052 lt!28403)))))

(declare-fun lt!28527 () List!1466)

(assert (=> d!13641 (= lt!28525 (ListLongMap!1380 lt!28527))))

(declare-fun lt!28524 () Unit!1818)

(declare-fun lt!28526 () Unit!1818)

(assert (=> d!13641 (= lt!28524 lt!28526)))

(assert (=> d!13641 (= (getValueByKey!128 lt!28527 (_1!1052 lt!28403)) (Some!133 (_2!1052 lt!28403)))))

(assert (=> d!13641 (= lt!28526 (lemmaContainsTupThenGetReturnValue!48 lt!28527 (_1!1052 lt!28403) (_2!1052 lt!28403)))))

(assert (=> d!13641 (= lt!28527 (insertStrictlySorted!51 (toList!705 (+!87 lt!28402 lt!28408)) (_1!1052 lt!28403) (_2!1052 lt!28403)))))

(assert (=> d!13641 (= (+!87 (+!87 lt!28402 lt!28408) lt!28403) lt!28525)))

(declare-fun b!66287 () Bool)

(declare-fun res!35907 () Bool)

(assert (=> b!66287 (=> (not res!35907) (not e!43510))))

(assert (=> b!66287 (= res!35907 (= (getValueByKey!128 (toList!705 lt!28525) (_1!1052 lt!28403)) (Some!133 (_2!1052 lt!28403))))))

(declare-fun b!66288 () Bool)

(assert (=> b!66288 (= e!43510 (contains!707 (toList!705 lt!28525) lt!28403))))

(assert (= (and d!13641 res!35906) b!66287))

(assert (= (and b!66287 res!35907) b!66288))

(declare-fun m!60665 () Bool)

(assert (=> d!13641 m!60665))

(declare-fun m!60667 () Bool)

(assert (=> d!13641 m!60667))

(declare-fun m!60669 () Bool)

(assert (=> d!13641 m!60669))

(declare-fun m!60671 () Bool)

(assert (=> d!13641 m!60671))

(declare-fun m!60673 () Bool)

(assert (=> b!66287 m!60673))

(declare-fun m!60675 () Bool)

(assert (=> b!66288 m!60675))

(assert (=> b!66113 d!13641))

(declare-fun d!13643 () Bool)

(assert (=> d!13643 (= (+!87 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (+!87 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(declare-fun lt!28530 () Unit!1818)

(declare-fun choose!372 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64) V!2913) Unit!1818)

(assert (=> d!13643 (= lt!28530 (choose!372 lt!28402 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))

(assert (=> d!13643 (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13643 (= (addCommutativeForDiffKeys!6 lt!28402 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) lt!28530)))

(declare-fun bs!2840 () Bool)

(assert (= bs!2840 d!13643))

(declare-fun m!60677 () Bool)

(assert (=> bs!2840 m!60677))

(declare-fun m!60679 () Bool)

(assert (=> bs!2840 m!60679))

(assert (=> bs!2840 m!60679))

(declare-fun m!60681 () Bool)

(assert (=> bs!2840 m!60681))

(assert (=> bs!2840 m!60449))

(declare-fun m!60683 () Bool)

(assert (=> bs!2840 m!60683))

(assert (=> bs!2840 m!60677))

(declare-fun m!60685 () Bool)

(assert (=> bs!2840 m!60685))

(assert (=> b!66113 d!13643))

(declare-fun d!13645 () Bool)

(assert (=> d!13645 (= (validMask!0 (mask!6080 (v!2469 (underlying!244 thiss!992)))) (and (or (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000001111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000011111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000001111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000011111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000001111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000011111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000001111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000011111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000001111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000011111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000111111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000001111111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000011111111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000111111111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000001111111111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000011111111111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000111111111111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000001111111111111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000011111111111111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000111111111111111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00001111111111111111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00011111111111111111111111111111) (= (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!66113 d!13645))

(declare-fun d!13647 () Bool)

(declare-fun e!43515 () Bool)

(assert (=> d!13647 e!43515))

(declare-fun res!35910 () Bool)

(assert (=> d!13647 (=> res!35910 e!43515)))

(declare-fun lt!28542 () Bool)

(assert (=> d!13647 (= res!35910 (not lt!28542))))

(declare-fun lt!28541 () Bool)

(assert (=> d!13647 (= lt!28542 lt!28541)))

(declare-fun lt!28539 () Unit!1818)

(declare-fun e!43516 () Unit!1818)

(assert (=> d!13647 (= lt!28539 e!43516)))

(declare-fun c!9099 () Bool)

(assert (=> d!13647 (= c!9099 lt!28541)))

(declare-fun containsKey!132 (List!1466 (_ BitVec 64)) Bool)

(assert (=> d!13647 (= lt!28541 (containsKey!132 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!13647 (= (contains!705 lt!28404 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) lt!28542)))

(declare-fun b!66295 () Bool)

(declare-fun lt!28540 () Unit!1818)

(assert (=> b!66295 (= e!43516 lt!28540)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!81 (List!1466 (_ BitVec 64)) Unit!1818)

(assert (=> b!66295 (= lt!28540 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun isDefined!82 (Option!134) Bool)

(assert (=> b!66295 (isDefined!82 (getValueByKey!128 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!66296 () Bool)

(declare-fun Unit!1827 () Unit!1818)

(assert (=> b!66296 (= e!43516 Unit!1827)))

(declare-fun b!66297 () Bool)

(assert (=> b!66297 (= e!43515 (isDefined!82 (getValueByKey!128 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (= (and d!13647 c!9099) b!66295))

(assert (= (and d!13647 (not c!9099)) b!66296))

(assert (= (and d!13647 (not res!35910)) b!66297))

(assert (=> d!13647 m!60449))

(declare-fun m!60687 () Bool)

(assert (=> d!13647 m!60687))

(assert (=> b!66295 m!60449))

(declare-fun m!60689 () Bool)

(assert (=> b!66295 m!60689))

(assert (=> b!66295 m!60449))

(declare-fun m!60691 () Bool)

(assert (=> b!66295 m!60691))

(assert (=> b!66295 m!60691))

(declare-fun m!60693 () Bool)

(assert (=> b!66295 m!60693))

(assert (=> b!66297 m!60449))

(assert (=> b!66297 m!60691))

(assert (=> b!66297 m!60691))

(assert (=> b!66297 m!60693))

(assert (=> b!66095 d!13647))

(declare-fun b!66382 () Bool)

(declare-fun e!43572 () Bool)

(declare-fun e!43564 () Bool)

(assert (=> b!66382 (= e!43572 e!43564)))

(declare-fun res!35940 () Bool)

(declare-fun call!5520 () ListLongMap!1379)

(assert (=> b!66382 (= res!35940 (contains!705 call!5520 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> b!66382 (=> (not res!35940) (not e!43564))))

(declare-datatypes ((SeekEntryResult!236 0))(
  ( (MissingZero!236 (index!3072 (_ BitVec 32))) (Found!236 (index!3073 (_ BitVec 32))) (Intermediate!236 (undefined!1048 Bool) (index!3074 (_ BitVec 32)) (x!10705 (_ BitVec 32))) (Undefined!236) (MissingVacant!236 (index!3075 (_ BitVec 32))) )
))
(declare-fun lt!28604 () SeekEntryResult!236)

(declare-fun e!43576 () Bool)

(declare-fun b!66383 () Bool)

(assert (=> b!66383 (= e!43576 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28604)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!66384 () Bool)

(declare-fun lt!28597 () Unit!1818)

(declare-fun e!43580 () Unit!1818)

(assert (=> b!66384 (= lt!28597 e!43580)))

(declare-fun c!9139 () Bool)

(declare-fun call!5524 () Bool)

(assert (=> b!66384 (= c!9139 call!5524)))

(declare-fun e!43582 () tuple2!2080)

(assert (=> b!66384 (= e!43582 (tuple2!2081 false newMap!16))))

(declare-fun b!66385 () Bool)

(declare-fun res!35945 () Bool)

(declare-fun e!43565 () Bool)

(assert (=> b!66385 (=> (not res!35945) (not e!43565))))

(declare-fun call!5519 () Bool)

(assert (=> b!66385 (= res!35945 call!5519)))

(declare-fun e!43571 () Bool)

(assert (=> b!66385 (= e!43571 e!43565)))

(declare-fun b!66386 () Bool)

(declare-fun e!43581 () Bool)

(declare-fun lt!28608 () SeekEntryResult!236)

(assert (=> b!66386 (= e!43581 ((_ is Undefined!236) lt!28608))))

(declare-fun c!9128 () Bool)

(declare-fun lt!28607 () array!3819)

(declare-fun lt!28603 () (_ BitVec 32))

(declare-fun call!5518 () ListLongMap!1379)

(declare-fun lt!28614 () (_ BitVec 32))

(declare-fun c!9137 () Bool)

(declare-fun bm!5500 () Bool)

(assert (=> bm!5500 (= call!5518 (getCurrentListMap!401 (_keys!3785 newMap!16) (ite c!9137 (_values!2129 newMap!16) lt!28607) (mask!6080 newMap!16) (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5501 () Bool)

(declare-fun call!5506 () tuple2!2080)

(declare-fun c!9140 () Bool)

(declare-fun lt!28615 () SeekEntryResult!236)

(declare-fun updateHelperNewKey!21 (LongMapFixedSize!670 (_ BitVec 64) V!2913 (_ BitVec 32)) tuple2!2080)

(assert (=> bm!5501 (= call!5506 (updateHelperNewKey!21 newMap!16 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615))))))

(declare-fun bm!5502 () Bool)

(declare-fun call!5516 () ListLongMap!1379)

(declare-fun call!5517 () ListLongMap!1379)

(assert (=> bm!5502 (= call!5516 call!5517)))

(declare-fun bm!5503 () Bool)

(declare-fun call!5510 () ListLongMap!1379)

(assert (=> bm!5503 (= call!5510 call!5517)))

(declare-fun bm!5504 () Bool)

(declare-fun call!5521 () ListLongMap!1379)

(assert (=> bm!5504 (= call!5521 (map!1133 newMap!16))))

(declare-fun b!66387 () Bool)

(declare-fun res!35952 () Bool)

(declare-fun e!43573 () Bool)

(assert (=> b!66387 (=> (not res!35952) (not e!43573))))

(declare-fun lt!28601 () SeekEntryResult!236)

(assert (=> b!66387 (= res!35952 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3072 lt!28601)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66388 () Bool)

(declare-fun e!43578 () Unit!1818)

(declare-fun lt!28623 () Unit!1818)

(assert (=> b!66388 (= e!43578 lt!28623)))

(declare-fun call!5513 () Unit!1818)

(assert (=> b!66388 (= lt!28623 call!5513)))

(declare-fun call!5525 () SeekEntryResult!236)

(assert (=> b!66388 (= lt!28604 call!5525)))

(declare-fun res!35951 () Bool)

(assert (=> b!66388 (= res!35951 ((_ is Found!236) lt!28604))))

(assert (=> b!66388 (=> (not res!35951) (not e!43576))))

(assert (=> b!66388 e!43576))

(declare-fun bm!5505 () Bool)

(declare-fun call!5509 () Bool)

(declare-fun call!5512 () Bool)

(assert (=> bm!5505 (= call!5509 call!5512)))

(declare-fun bm!5506 () Bool)

(declare-fun call!5507 () Bool)

(assert (=> bm!5506 (= call!5512 call!5507)))

(declare-fun bm!5507 () Bool)

(declare-fun call!5508 () Bool)

(assert (=> bm!5507 (= call!5519 call!5508)))

(declare-fun b!66389 () Bool)

(declare-fun e!43568 () Bool)

(declare-fun call!5515 () Bool)

(assert (=> b!66389 (= e!43568 (not call!5515))))

(declare-fun bm!5508 () Bool)

(assert (=> bm!5508 (= call!5508 call!5507)))

(declare-fun b!66390 () Bool)

(declare-fun c!9131 () Bool)

(assert (=> b!66390 (= c!9131 ((_ is MissingVacant!236) lt!28601))))

(declare-fun e!43569 () Bool)

(declare-fun e!43579 () Bool)

(assert (=> b!66390 (= e!43569 e!43579)))

(declare-fun b!66391 () Bool)

(declare-fun e!43563 () tuple2!2080)

(declare-fun lt!28619 () tuple2!2080)

(assert (=> b!66391 (= e!43563 (tuple2!2081 (_1!1051 lt!28619) (_2!1051 lt!28619)))))

(assert (=> b!66391 (= lt!28619 call!5506)))

(declare-fun d!13649 () Bool)

(declare-fun e!43574 () Bool)

(assert (=> d!13649 e!43574))

(declare-fun res!35941 () Bool)

(assert (=> d!13649 (=> (not res!35941) (not e!43574))))

(declare-fun lt!28606 () tuple2!2080)

(assert (=> d!13649 (= res!35941 (valid!287 (_2!1051 lt!28606)))))

(declare-fun e!43577 () tuple2!2080)

(assert (=> d!13649 (= lt!28606 e!43577)))

(assert (=> d!13649 (= c!9137 (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvneg (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (=> d!13649 (valid!287 newMap!16)))

(assert (=> d!13649 (= (update!95 newMap!16 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400) lt!28606)))

(declare-fun b!66392 () Bool)

(declare-fun res!35949 () Bool)

(assert (=> b!66392 (= res!35949 call!5508)))

(assert (=> b!66392 (=> (not res!35949) (not e!43576))))

(declare-fun b!66393 () Bool)

(declare-fun e!43566 () ListLongMap!1379)

(assert (=> b!66393 (= e!43566 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5509 () Bool)

(declare-fun call!5511 () ListLongMap!1379)

(assert (=> bm!5509 (= call!5511 call!5518)))

(declare-fun b!66394 () Bool)

(assert (=> b!66394 (= e!43572 (= call!5520 call!5521))))

(declare-fun bm!5510 () Bool)

(declare-fun call!5505 () Bool)

(declare-fun call!5526 () Bool)

(assert (=> bm!5510 (= call!5505 call!5526)))

(declare-fun b!66395 () Bool)

(assert (=> b!66395 (= c!9140 ((_ is MissingVacant!236) lt!28615))))

(assert (=> b!66395 (= e!43582 e!43563)))

(declare-fun call!5504 () SeekEntryResult!236)

(declare-fun bm!5511 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3817 (_ BitVec 32)) SeekEntryResult!236)

(assert (=> bm!5511 (= call!5504 (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(declare-fun b!66396 () Bool)

(declare-fun e!43567 () Bool)

(assert (=> b!66396 (= e!43567 (not call!5505))))

(declare-fun bm!5512 () Bool)

(assert (=> bm!5512 (= call!5520 (map!1133 (_2!1051 lt!28606)))))

(declare-fun b!66397 () Bool)

(declare-fun e!43575 () ListLongMap!1379)

(assert (=> b!66397 (= e!43575 call!5516)))

(declare-fun b!66398 () Bool)

(declare-fun Unit!1828 () Unit!1818)

(assert (=> b!66398 (= e!43580 Unit!1828)))

(declare-fun lt!28618 () Unit!1818)

(assert (=> b!66398 (= lt!28618 call!5513)))

(declare-fun lt!28602 () SeekEntryResult!236)

(declare-fun call!5523 () SeekEntryResult!236)

(assert (=> b!66398 (= lt!28602 call!5523)))

(declare-fun res!35944 () Bool)

(assert (=> b!66398 (= res!35944 ((_ is Found!236) lt!28602))))

(declare-fun e!43562 () Bool)

(assert (=> b!66398 (=> (not res!35944) (not e!43562))))

(assert (=> b!66398 e!43562))

(declare-fun lt!28612 () Unit!1818)

(assert (=> b!66398 (= lt!28612 lt!28618)))

(assert (=> b!66398 false))

(declare-fun b!66399 () Bool)

(declare-fun res!35942 () Bool)

(assert (=> b!66399 (=> (not res!35942) (not e!43565))))

(assert (=> b!66399 (= res!35942 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3072 lt!28608)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5513 () Bool)

(assert (=> bm!5513 (= call!5515 call!5526)))

(declare-fun b!66400 () Bool)

(declare-fun lt!28620 () Unit!1818)

(assert (=> b!66400 (= e!43580 lt!28620)))

(declare-fun call!5522 () Unit!1818)

(assert (=> b!66400 (= lt!28620 call!5522)))

(assert (=> b!66400 (= lt!28601 call!5523)))

(declare-fun c!9132 () Bool)

(assert (=> b!66400 (= c!9132 ((_ is MissingZero!236) lt!28601))))

(assert (=> b!66400 e!43569))

(declare-fun b!66401 () Bool)

(declare-fun res!35948 () Bool)

(assert (=> b!66401 (=> (not res!35948) (not e!43573))))

(assert (=> b!66401 (= res!35948 call!5509)))

(assert (=> b!66401 (= e!43569 e!43573)))

(declare-fun b!66402 () Bool)

(declare-fun c!9134 () Bool)

(assert (=> b!66402 (= c!9134 ((_ is MissingVacant!236) lt!28608))))

(assert (=> b!66402 (= e!43571 e!43581)))

(declare-fun bm!5514 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) Int) Unit!1818)

(assert (=> bm!5514 (= call!5522 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)))))

(declare-fun b!66403 () Bool)

(assert (=> b!66403 (= e!43579 e!43568)))

(declare-fun res!35950 () Bool)

(assert (=> b!66403 (= res!35950 call!5509)))

(assert (=> b!66403 (=> (not res!35950) (not e!43568))))

(declare-fun b!66404 () Bool)

(assert (=> b!66404 (= e!43581 e!43567)))

(declare-fun res!35947 () Bool)

(assert (=> b!66404 (= res!35947 call!5519)))

(assert (=> b!66404 (=> (not res!35947) (not e!43567))))

(declare-fun b!66405 () Bool)

(declare-fun Unit!1829 () Unit!1818)

(assert (=> b!66405 (= e!43578 Unit!1829)))

(declare-fun lt!28616 () Unit!1818)

(assert (=> b!66405 (= lt!28616 call!5522)))

(assert (=> b!66405 (= lt!28608 call!5525)))

(declare-fun c!9138 () Bool)

(assert (=> b!66405 (= c!9138 ((_ is MissingZero!236) lt!28608))))

(assert (=> b!66405 e!43571))

(declare-fun lt!28600 () Unit!1818)

(assert (=> b!66405 (= lt!28600 lt!28616)))

(assert (=> b!66405 false))

(declare-fun bm!5515 () Bool)

(assert (=> bm!5515 (= call!5526 (arrayContainsKey!0 (_keys!3785 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!66406 () Bool)

(assert (=> b!66406 (= e!43574 e!43572)))

(declare-fun c!9129 () Bool)

(assert (=> b!66406 (= c!9129 (_1!1051 lt!28606))))

(declare-fun b!66407 () Bool)

(declare-fun res!35946 () Bool)

(assert (=> b!66407 (= res!35946 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3075 lt!28608)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66407 (=> (not res!35946) (not e!43567))))

(declare-fun b!66408 () Bool)

(declare-fun lt!28609 () Unit!1818)

(declare-fun lt!28611 () Unit!1818)

(assert (=> b!66408 (= lt!28609 lt!28611)))

(declare-fun call!5503 () ListLongMap!1379)

(assert (=> b!66408 (= call!5503 call!5511)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!21 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 V!2913 Int) Unit!1818)

(assert (=> b!66408 (= lt!28611 (lemmaChangeLongMinValueKeyThenAddPairToListMap!21 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) lt!28614 (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) lt!28400 (defaultEntry!2146 newMap!16)))))

(assert (=> b!66408 (= lt!28614 (bvor (extraKeys!2017 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!43570 () tuple2!2080)

(assert (=> b!66408 (= e!43570 (tuple2!2081 true (LongMapFixedSize!671 (defaultEntry!2146 newMap!16) (mask!6080 newMap!16) (bvor (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) (zeroValue!2054 newMap!16) lt!28400 (_size!384 newMap!16) (_keys!3785 newMap!16) (_values!2129 newMap!16) (_vacant!384 newMap!16))))))

(declare-fun b!66409 () Bool)

(declare-fun res!35943 () Bool)

(assert (=> b!66409 (= res!35943 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3075 lt!28601)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66409 (=> (not res!35943) (not e!43568))))

(declare-fun b!66410 () Bool)

(assert (=> b!66410 (= e!43565 (not call!5505))))

(declare-fun b!66411 () Bool)

(assert (=> b!66411 (= e!43562 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28602)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!66412 () Bool)

(assert (=> b!66412 (= e!43577 e!43582)))

(assert (=> b!66412 (= lt!28615 (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(declare-fun c!9135 () Bool)

(assert (=> b!66412 (= c!9135 ((_ is Undefined!236) lt!28615))))

(declare-fun b!66413 () Bool)

(declare-fun lt!28605 () Unit!1818)

(declare-fun lt!28610 () Unit!1818)

(assert (=> b!66413 (= lt!28605 lt!28610)))

(assert (=> b!66413 (contains!705 call!5518 (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615)))))

(declare-fun lemmaValidKeyInArrayIsInListMap!80 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) Int) Unit!1818)

(assert (=> b!66413 (= lt!28610 (lemmaValidKeyInArrayIsInListMap!80 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3073 lt!28615) (defaultEntry!2146 newMap!16)))))

(assert (=> b!66413 (= lt!28607 (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))))))

(declare-fun lt!28617 () Unit!1818)

(declare-fun lt!28621 () Unit!1818)

(assert (=> b!66413 (= lt!28617 lt!28621)))

(declare-fun call!5514 () ListLongMap!1379)

(assert (=> b!66413 (= call!5514 call!5510)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!21 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) (_ BitVec 64) V!2913 Int) Unit!1818)

(assert (=> b!66413 (= lt!28621 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!21 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3073 lt!28615) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28598 () Unit!1818)

(assert (=> b!66413 (= lt!28598 e!43578)))

(declare-fun c!9141 () Bool)

(assert (=> b!66413 (= c!9141 call!5524)))

(declare-fun e!43561 () tuple2!2080)

(assert (=> b!66413 (= e!43561 (tuple2!2081 true (LongMapFixedSize!671 (defaultEntry!2146 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (_size!384 newMap!16) (_keys!3785 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (_vacant!384 newMap!16))))))

(declare-fun b!66414 () Bool)

(assert (=> b!66414 (= e!43564 (= call!5520 (+!87 call!5521 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun bm!5516 () Bool)

(assert (=> bm!5516 (= call!5523 call!5504)))

(declare-fun b!66415 () Bool)

(declare-fun lt!28599 () tuple2!2080)

(assert (=> b!66415 (= lt!28599 call!5506)))

(assert (=> b!66415 (= e!43561 (tuple2!2081 (_1!1051 lt!28599) (_2!1051 lt!28599)))))

(declare-fun b!66416 () Bool)

(assert (=> b!66416 (= e!43579 ((_ is Undefined!236) lt!28601))))

(declare-fun b!66417 () Bool)

(assert (=> b!66417 (= e!43563 e!43561)))

(declare-fun c!9133 () Bool)

(assert (=> b!66417 (= c!9133 ((_ is MissingZero!236) lt!28615))))

(declare-fun b!66418 () Bool)

(assert (=> b!66418 (= e!43573 (not call!5515))))

(declare-fun b!66419 () Bool)

(assert (=> b!66419 (= e!43566 call!5510)))

(declare-fun bm!5517 () Bool)

(declare-fun c!9130 () Bool)

(assert (=> bm!5517 (= c!9130 c!9135)))

(assert (=> bm!5517 (= call!5524 (contains!705 e!43566 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!66420 () Bool)

(assert (=> b!66420 (= e!43575 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5518 () Bool)

(assert (=> bm!5518 (= call!5525 call!5504)))

(declare-fun bm!5519 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!5519 (= call!5507 (inRange!0 (ite c!9135 (ite c!9139 (index!3073 lt!28602) (ite c!9132 (index!3072 lt!28601) (index!3075 lt!28601))) (ite c!9141 (index!3073 lt!28604) (ite c!9138 (index!3072 lt!28608) (index!3075 lt!28608)))) (mask!6080 newMap!16)))))

(declare-fun bm!5520 () Bool)

(assert (=> bm!5520 (= call!5517 (getCurrentListMap!401 (_keys!3785 newMap!16) (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!66421 () Bool)

(assert (=> b!66421 (= e!43577 e!43570)))

(assert (=> b!66421 (= c!9128 (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5521 () Bool)

(assert (=> bm!5521 (= call!5503 call!5514)))

(declare-fun b!66422 () Bool)

(declare-fun res!35939 () Bool)

(assert (=> b!66422 (= res!35939 call!5512)))

(assert (=> b!66422 (=> (not res!35939) (not e!43562))))

(declare-fun bm!5522 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) Int) Unit!1818)

(assert (=> bm!5522 (= call!5513 (lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5523 () Bool)

(assert (=> bm!5523 (= call!5514 (+!87 e!43575 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun c!9136 () Bool)

(assert (=> bm!5523 (= c!9136 c!9137)))

(declare-fun b!66423 () Bool)

(declare-fun lt!28613 () Unit!1818)

(declare-fun lt!28622 () Unit!1818)

(assert (=> b!66423 (= lt!28613 lt!28622)))

(assert (=> b!66423 (= call!5503 call!5511)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!21 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 V!2913 Int) Unit!1818)

(assert (=> b!66423 (= lt!28622 (lemmaChangeZeroKeyThenAddPairToListMap!21 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) lt!28603 (zeroValue!2054 newMap!16) lt!28400 (minValue!2054 newMap!16) (defaultEntry!2146 newMap!16)))))

(assert (=> b!66423 (= lt!28603 (bvor (extraKeys!2017 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!66423 (= e!43570 (tuple2!2081 true (LongMapFixedSize!671 (defaultEntry!2146 newMap!16) (mask!6080 newMap!16) (bvor (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) lt!28400 (minValue!2054 newMap!16) (_size!384 newMap!16) (_keys!3785 newMap!16) (_values!2129 newMap!16) (_vacant!384 newMap!16))))))

(assert (= (and d!13649 c!9137) b!66421))

(assert (= (and d!13649 (not c!9137)) b!66412))

(assert (= (and b!66421 c!9128) b!66423))

(assert (= (and b!66421 (not c!9128)) b!66408))

(assert (= (or b!66423 b!66408) bm!5509))

(assert (= (or b!66423 b!66408) bm!5502))

(assert (= (or b!66423 b!66408) bm!5521))

(assert (= (and b!66412 c!9135) b!66384))

(assert (= (and b!66412 (not c!9135)) b!66395))

(assert (= (and b!66384 c!9139) b!66398))

(assert (= (and b!66384 (not c!9139)) b!66400))

(assert (= (and b!66398 res!35944) b!66422))

(assert (= (and b!66422 res!35939) b!66411))

(assert (= (and b!66400 c!9132) b!66401))

(assert (= (and b!66400 (not c!9132)) b!66390))

(assert (= (and b!66401 res!35948) b!66387))

(assert (= (and b!66387 res!35952) b!66418))

(assert (= (and b!66390 c!9131) b!66403))

(assert (= (and b!66390 (not c!9131)) b!66416))

(assert (= (and b!66403 res!35950) b!66409))

(assert (= (and b!66409 res!35943) b!66389))

(assert (= (or b!66401 b!66403) bm!5505))

(assert (= (or b!66418 b!66389) bm!5513))

(assert (= (or b!66422 bm!5505) bm!5506))

(assert (= (or b!66398 b!66400) bm!5516))

(assert (= (and b!66395 c!9140) b!66391))

(assert (= (and b!66395 (not c!9140)) b!66417))

(assert (= (and b!66417 c!9133) b!66415))

(assert (= (and b!66417 (not c!9133)) b!66413))

(assert (= (and b!66413 c!9141) b!66388))

(assert (= (and b!66413 (not c!9141)) b!66405))

(assert (= (and b!66388 res!35951) b!66392))

(assert (= (and b!66392 res!35949) b!66383))

(assert (= (and b!66405 c!9138) b!66385))

(assert (= (and b!66405 (not c!9138)) b!66402))

(assert (= (and b!66385 res!35945) b!66399))

(assert (= (and b!66399 res!35942) b!66410))

(assert (= (and b!66402 c!9134) b!66404))

(assert (= (and b!66402 (not c!9134)) b!66386))

(assert (= (and b!66404 res!35947) b!66407))

(assert (= (and b!66407 res!35946) b!66396))

(assert (= (or b!66385 b!66404) bm!5507))

(assert (= (or b!66410 b!66396) bm!5510))

(assert (= (or b!66392 bm!5507) bm!5508))

(assert (= (or b!66388 b!66405) bm!5518))

(assert (= (or b!66391 b!66415) bm!5501))

(assert (= (or bm!5516 bm!5518) bm!5511))

(assert (= (or b!66400 b!66405) bm!5514))

(assert (= (or bm!5506 bm!5508) bm!5519))

(assert (= (or b!66384 b!66413) bm!5503))

(assert (= (or b!66398 b!66388) bm!5522))

(assert (= (or bm!5513 bm!5510) bm!5515))

(assert (= (or b!66384 b!66413) bm!5517))

(assert (= (and bm!5517 c!9130) b!66419))

(assert (= (and bm!5517 (not c!9130)) b!66393))

(assert (= (or bm!5509 b!66413) bm!5500))

(assert (= (or bm!5502 bm!5503) bm!5520))

(assert (= (or bm!5521 b!66413) bm!5523))

(assert (= (and bm!5523 c!9136) b!66397))

(assert (= (and bm!5523 (not c!9136)) b!66420))

(assert (= (and d!13649 res!35941) b!66406))

(assert (= (and b!66406 c!9129) b!66382))

(assert (= (and b!66406 (not c!9129)) b!66394))

(assert (= (and b!66382 res!35940) b!66414))

(assert (= (or b!66414 b!66394) bm!5504))

(assert (= (or b!66382 b!66414 b!66394) bm!5512))

(assert (=> bm!5514 m!60449))

(declare-fun m!60695 () Bool)

(assert (=> bm!5514 m!60695))

(declare-fun m!60697 () Bool)

(assert (=> b!66393 m!60697))

(declare-fun m!60699 () Bool)

(assert (=> b!66399 m!60699))

(assert (=> bm!5511 m!60449))

(declare-fun m!60701 () Bool)

(assert (=> bm!5511 m!60701))

(declare-fun m!60703 () Bool)

(assert (=> bm!5519 m!60703))

(declare-fun m!60705 () Bool)

(assert (=> b!66407 m!60705))

(assert (=> b!66382 m!60449))

(declare-fun m!60707 () Bool)

(assert (=> b!66382 m!60707))

(declare-fun m!60709 () Bool)

(assert (=> b!66414 m!60709))

(declare-fun m!60711 () Bool)

(assert (=> b!66408 m!60711))

(assert (=> bm!5501 m!60449))

(declare-fun m!60713 () Bool)

(assert (=> bm!5501 m!60713))

(declare-fun m!60715 () Bool)

(assert (=> b!66383 m!60715))

(declare-fun m!60717 () Bool)

(assert (=> bm!5523 m!60717))

(declare-fun m!60719 () Bool)

(assert (=> d!13649 m!60719))

(assert (=> d!13649 m!60441))

(assert (=> bm!5522 m!60449))

(declare-fun m!60721 () Bool)

(assert (=> bm!5522 m!60721))

(declare-fun m!60723 () Bool)

(assert (=> bm!5512 m!60723))

(declare-fun m!60725 () Bool)

(assert (=> bm!5500 m!60725))

(assert (=> b!66420 m!60697))

(declare-fun m!60727 () Bool)

(assert (=> b!66423 m!60727))

(assert (=> bm!5515 m!60449))

(declare-fun m!60729 () Bool)

(assert (=> bm!5515 m!60729))

(declare-fun m!60731 () Bool)

(assert (=> bm!5520 m!60731))

(declare-fun m!60733 () Bool)

(assert (=> bm!5520 m!60733))

(assert (=> bm!5517 m!60449))

(declare-fun m!60735 () Bool)

(assert (=> bm!5517 m!60735))

(declare-fun m!60737 () Bool)

(assert (=> b!66411 m!60737))

(declare-fun m!60739 () Bool)

(assert (=> b!66409 m!60739))

(assert (=> b!66412 m!60449))

(assert (=> b!66412 m!60701))

(assert (=> bm!5504 m!60435))

(assert (=> b!66413 m!60731))

(declare-fun m!60741 () Bool)

(assert (=> b!66413 m!60741))

(assert (=> b!66413 m!60741))

(declare-fun m!60743 () Bool)

(assert (=> b!66413 m!60743))

(assert (=> b!66413 m!60449))

(declare-fun m!60745 () Bool)

(assert (=> b!66413 m!60745))

(declare-fun m!60747 () Bool)

(assert (=> b!66413 m!60747))

(declare-fun m!60749 () Bool)

(assert (=> b!66387 m!60749))

(assert (=> b!66095 d!13649))

(declare-fun d!13651 () Bool)

(assert (=> d!13651 (= (array_inv!1137 (_keys!3785 newMap!16)) (bvsge (size!2058 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66112 d!13651))

(declare-fun d!13653 () Bool)

(assert (=> d!13653 (= (array_inv!1138 (_values!2129 newMap!16)) (bvsge (size!2059 (_values!2129 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66112 d!13653))

(declare-fun d!13655 () Bool)

(declare-fun c!9144 () Bool)

(assert (=> d!13655 (= c!9144 ((_ is ValueCellFull!881) (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun e!43585 () V!2913)

(assert (=> d!13655 (= (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!43585)))

(declare-fun b!66428 () Bool)

(declare-fun get!1121 (ValueCell!881 V!2913) V!2913)

(assert (=> b!66428 (= e!43585 (get!1121 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66429 () Bool)

(declare-fun get!1122 (ValueCell!881 V!2913) V!2913)

(assert (=> b!66429 (= e!43585 (get!1122 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13655 c!9144) b!66428))

(assert (= (and d!13655 (not c!9144)) b!66429))

(assert (=> b!66428 m!60463))

(assert (=> b!66428 m!60465))

(declare-fun m!60751 () Bool)

(assert (=> b!66428 m!60751))

(assert (=> b!66429 m!60463))

(assert (=> b!66429 m!60465))

(declare-fun m!60753 () Bool)

(assert (=> b!66429 m!60753))

(assert (=> b!66099 d!13655))

(declare-fun d!13657 () Bool)

(assert (=> d!13657 (= (map!1133 newMap!16) (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bs!2841 () Bool)

(assert (= bs!2841 d!13657))

(assert (=> bs!2841 m!60697))

(assert (=> b!66111 d!13657))

(declare-fun b!66472 () Bool)

(declare-fun e!43623 () Bool)

(declare-fun call!5541 () Bool)

(assert (=> b!66472 (= e!43623 (not call!5541))))

(declare-fun b!66473 () Bool)

(declare-fun c!9158 () Bool)

(assert (=> b!66473 (= c!9158 (and (not (= (bvand (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!43618 () ListLongMap!1379)

(declare-fun e!43612 () ListLongMap!1379)

(assert (=> b!66473 (= e!43618 e!43612)))

(declare-fun b!66474 () Bool)

(declare-fun res!35973 () Bool)

(declare-fun e!43619 () Bool)

(assert (=> b!66474 (=> (not res!35973) (not e!43619))))

(declare-fun e!43622 () Bool)

(assert (=> b!66474 (= res!35973 e!43622)))

(declare-fun res!35971 () Bool)

(assert (=> b!66474 (=> res!35971 e!43622)))

(declare-fun e!43617 () Bool)

(assert (=> b!66474 (= res!35971 (not e!43617))))

(declare-fun res!35976 () Bool)

(assert (=> b!66474 (=> (not res!35976) (not e!43617))))

(assert (=> b!66474 (= res!35976 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!66475 () Bool)

(declare-fun e!43615 () ListLongMap!1379)

(assert (=> b!66475 (= e!43615 e!43618)))

(declare-fun c!9160 () Bool)

(assert (=> b!66475 (= c!9160 (and (not (= (bvand (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66476 () Bool)

(declare-fun e!43624 () Unit!1818)

(declare-fun Unit!1830 () Unit!1818)

(assert (=> b!66476 (= e!43624 Unit!1830)))

(declare-fun b!66477 () Bool)

(declare-fun res!35977 () Bool)

(assert (=> b!66477 (=> (not res!35977) (not e!43619))))

(declare-fun e!43620 () Bool)

(assert (=> b!66477 (= res!35977 e!43620)))

(declare-fun c!9159 () Bool)

(assert (=> b!66477 (= c!9159 (not (= (bvand (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5538 () Bool)

(declare-fun call!5547 () Bool)

(declare-fun lt!28687 () ListLongMap!1379)

(assert (=> bm!5538 (= call!5547 (contains!705 lt!28687 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66478 () Bool)

(declare-fun lt!28683 () Unit!1818)

(assert (=> b!66478 (= e!43624 lt!28683)))

(declare-fun lt!28673 () ListLongMap!1379)

(assert (=> b!66478 (= lt!28673 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun lt!28686 () (_ BitVec 64))

(assert (=> b!66478 (= lt!28686 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28685 () (_ BitVec 64))

(assert (=> b!66478 (= lt!28685 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28671 () Unit!1818)

(declare-fun addStillContains!48 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64)) Unit!1818)

(assert (=> b!66478 (= lt!28671 (addStillContains!48 lt!28673 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28685))))

(assert (=> b!66478 (contains!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28685)))

(declare-fun lt!28678 () Unit!1818)

(assert (=> b!66478 (= lt!28678 lt!28671)))

(declare-fun lt!28670 () ListLongMap!1379)

(assert (=> b!66478 (= lt!28670 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun lt!28674 () (_ BitVec 64))

(assert (=> b!66478 (= lt!28674 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28668 () (_ BitVec 64))

(assert (=> b!66478 (= lt!28668 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28689 () Unit!1818)

(declare-fun addApplyDifferent!48 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64)) Unit!1818)

(assert (=> b!66478 (= lt!28689 (addApplyDifferent!48 lt!28670 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28668))))

(assert (=> b!66478 (= (apply!72 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28668) (apply!72 lt!28670 lt!28668))))

(declare-fun lt!28672 () Unit!1818)

(assert (=> b!66478 (= lt!28672 lt!28689)))

(declare-fun lt!28679 () ListLongMap!1379)

(assert (=> b!66478 (= lt!28679 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun lt!28682 () (_ BitVec 64))

(assert (=> b!66478 (= lt!28682 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28684 () (_ BitVec 64))

(assert (=> b!66478 (= lt!28684 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28676 () Unit!1818)

(assert (=> b!66478 (= lt!28676 (addApplyDifferent!48 lt!28679 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28684))))

(assert (=> b!66478 (= (apply!72 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28684) (apply!72 lt!28679 lt!28684))))

(declare-fun lt!28688 () Unit!1818)

(assert (=> b!66478 (= lt!28688 lt!28676)))

(declare-fun lt!28677 () ListLongMap!1379)

(assert (=> b!66478 (= lt!28677 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun lt!28680 () (_ BitVec 64))

(assert (=> b!66478 (= lt!28680 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28681 () (_ BitVec 64))

(assert (=> b!66478 (= lt!28681 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!66478 (= lt!28683 (addApplyDifferent!48 lt!28677 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28681))))

(assert (=> b!66478 (= (apply!72 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28681) (apply!72 lt!28677 lt!28681))))

(declare-fun d!13659 () Bool)

(assert (=> d!13659 e!43619))

(declare-fun res!35979 () Bool)

(assert (=> d!13659 (=> (not res!35979) (not e!43619))))

(assert (=> d!13659 (= res!35979 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun lt!28669 () ListLongMap!1379)

(assert (=> d!13659 (= lt!28687 lt!28669)))

(declare-fun lt!28675 () Unit!1818)

(assert (=> d!13659 (= lt!28675 e!43624)))

(declare-fun c!9162 () Bool)

(declare-fun e!43616 () Bool)

(assert (=> d!13659 (= c!9162 e!43616)))

(declare-fun res!35978 () Bool)

(assert (=> d!13659 (=> (not res!35978) (not e!43616))))

(assert (=> d!13659 (= res!35978 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> d!13659 (= lt!28669 e!43615)))

(declare-fun c!9161 () Bool)

(assert (=> d!13659 (= c!9161 (and (not (= (bvand (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13659 (validMask!0 (mask!6080 (v!2469 (underlying!244 thiss!992))))))

(assert (=> d!13659 (= (getCurrentListMap!401 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))) lt!28687)))

(declare-fun bm!5539 () Bool)

(declare-fun call!5545 () ListLongMap!1379)

(declare-fun call!5542 () ListLongMap!1379)

(assert (=> bm!5539 (= call!5545 call!5542)))

(declare-fun b!66479 () Bool)

(assert (=> b!66479 (= e!43620 (not call!5547))))

(declare-fun b!66480 () Bool)

(assert (=> b!66480 (= e!43618 call!5545)))

(declare-fun b!66481 () Bool)

(declare-fun e!43614 () Bool)

(assert (=> b!66481 (= e!43614 (= (apply!72 lt!28687 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun b!66482 () Bool)

(assert (=> b!66482 (= e!43619 e!43623)))

(declare-fun c!9157 () Bool)

(assert (=> b!66482 (= c!9157 (not (= (bvand (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66483 () Bool)

(declare-fun e!43621 () Bool)

(assert (=> b!66483 (= e!43621 (= (apply!72 lt!28687 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66483 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2059 (_values!2129 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> b!66483 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!66484 () Bool)

(assert (=> b!66484 (= e!43615 (+!87 call!5542 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun bm!5540 () Bool)

(declare-fun call!5543 () ListLongMap!1379)

(declare-fun call!5546 () ListLongMap!1379)

(assert (=> bm!5540 (= call!5543 call!5546)))

(declare-fun bm!5541 () Bool)

(declare-fun call!5544 () ListLongMap!1379)

(assert (=> bm!5541 (= call!5544 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun b!66485 () Bool)

(assert (=> b!66485 (= e!43612 call!5543)))

(declare-fun b!66486 () Bool)

(declare-fun e!43613 () Bool)

(assert (=> b!66486 (= e!43613 (= (apply!72 lt!28687 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun bm!5542 () Bool)

(assert (=> bm!5542 (= call!5546 call!5544)))

(declare-fun b!66487 () Bool)

(assert (=> b!66487 (= e!43617 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66488 () Bool)

(assert (=> b!66488 (= e!43622 e!43621)))

(declare-fun res!35974 () Bool)

(assert (=> b!66488 (=> (not res!35974) (not e!43621))))

(assert (=> b!66488 (= res!35974 (contains!705 lt!28687 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66488 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!66489 () Bool)

(assert (=> b!66489 (= e!43623 e!43613)))

(declare-fun res!35972 () Bool)

(assert (=> b!66489 (= res!35972 call!5541)))

(assert (=> b!66489 (=> (not res!35972) (not e!43613))))

(declare-fun bm!5543 () Bool)

(assert (=> bm!5543 (= call!5542 (+!87 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543)) (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!66490 () Bool)

(assert (=> b!66490 (= e!43620 e!43614)))

(declare-fun res!35975 () Bool)

(assert (=> b!66490 (= res!35975 call!5547)))

(assert (=> b!66490 (=> (not res!35975) (not e!43614))))

(declare-fun b!66491 () Bool)

(assert (=> b!66491 (= e!43612 call!5545)))

(declare-fun b!66492 () Bool)

(assert (=> b!66492 (= e!43616 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!5544 () Bool)

(assert (=> bm!5544 (= call!5541 (contains!705 lt!28687 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!13659 c!9161) b!66484))

(assert (= (and d!13659 (not c!9161)) b!66475))

(assert (= (and b!66475 c!9160) b!66480))

(assert (= (and b!66475 (not c!9160)) b!66473))

(assert (= (and b!66473 c!9158) b!66491))

(assert (= (and b!66473 (not c!9158)) b!66485))

(assert (= (or b!66491 b!66485) bm!5540))

(assert (= (or b!66480 bm!5540) bm!5542))

(assert (= (or b!66480 b!66491) bm!5539))

(assert (= (or b!66484 bm!5542) bm!5541))

(assert (= (or b!66484 bm!5539) bm!5543))

(assert (= (and d!13659 res!35978) b!66492))

(assert (= (and d!13659 c!9162) b!66478))

(assert (= (and d!13659 (not c!9162)) b!66476))

(assert (= (and d!13659 res!35979) b!66474))

(assert (= (and b!66474 res!35976) b!66487))

(assert (= (and b!66474 (not res!35971)) b!66488))

(assert (= (and b!66488 res!35974) b!66483))

(assert (= (and b!66474 res!35973) b!66477))

(assert (= (and b!66477 c!9159) b!66490))

(assert (= (and b!66477 (not c!9159)) b!66479))

(assert (= (and b!66490 res!35975) b!66481))

(assert (= (or b!66490 b!66479) bm!5538))

(assert (= (and b!66477 res!35977) b!66482))

(assert (= (and b!66482 c!9157) b!66489))

(assert (= (and b!66482 (not c!9157)) b!66472))

(assert (= (and b!66489 res!35972) b!66486))

(assert (= (or b!66489 b!66472) bm!5544))

(declare-fun b_lambda!2963 () Bool)

(assert (=> (not b_lambda!2963) (not b!66483)))

(assert (=> b!66483 t!4936))

(declare-fun b_and!4101 () Bool)

(assert (= b_and!4097 (and (=> t!4936 result!2567) b_and!4101)))

(assert (=> b!66483 t!4938))

(declare-fun b_and!4103 () Bool)

(assert (= b_and!4099 (and (=> t!4938 result!2571) b_and!4103)))

(declare-fun m!60755 () Bool)

(assert (=> b!66484 m!60755))

(assert (=> d!13659 m!60447))

(assert (=> bm!5541 m!60457))

(declare-fun m!60757 () Bool)

(assert (=> b!66486 m!60757))

(assert (=> b!66487 m!60627))

(assert (=> b!66487 m!60627))

(assert (=> b!66487 m!60629))

(declare-fun m!60759 () Bool)

(assert (=> b!66478 m!60759))

(declare-fun m!60761 () Bool)

(assert (=> b!66478 m!60761))

(declare-fun m!60763 () Bool)

(assert (=> b!66478 m!60763))

(declare-fun m!60765 () Bool)

(assert (=> b!66478 m!60765))

(assert (=> b!66478 m!60759))

(declare-fun m!60767 () Bool)

(assert (=> b!66478 m!60767))

(declare-fun m!60769 () Bool)

(assert (=> b!66478 m!60769))

(assert (=> b!66478 m!60763))

(declare-fun m!60771 () Bool)

(assert (=> b!66478 m!60771))

(declare-fun m!60773 () Bool)

(assert (=> b!66478 m!60773))

(declare-fun m!60775 () Bool)

(assert (=> b!66478 m!60775))

(declare-fun m!60777 () Bool)

(assert (=> b!66478 m!60777))

(declare-fun m!60779 () Bool)

(assert (=> b!66478 m!60779))

(assert (=> b!66478 m!60457))

(declare-fun m!60781 () Bool)

(assert (=> b!66478 m!60781))

(assert (=> b!66478 m!60777))

(declare-fun m!60783 () Bool)

(assert (=> b!66478 m!60783))

(assert (=> b!66478 m!60627))

(declare-fun m!60785 () Bool)

(assert (=> b!66478 m!60785))

(assert (=> b!66478 m!60767))

(declare-fun m!60787 () Bool)

(assert (=> b!66478 m!60787))

(declare-fun m!60789 () Bool)

(assert (=> bm!5543 m!60789))

(declare-fun m!60791 () Bool)

(assert (=> bm!5544 m!60791))

(assert (=> b!66483 m!60465))

(assert (=> b!66483 m!60627))

(assert (=> b!66483 m!60627))

(declare-fun m!60793 () Bool)

(assert (=> b!66483 m!60793))

(assert (=> b!66483 m!60639))

(assert (=> b!66483 m!60465))

(assert (=> b!66483 m!60641))

(assert (=> b!66483 m!60639))

(declare-fun m!60795 () Bool)

(assert (=> bm!5538 m!60795))

(assert (=> b!66488 m!60627))

(assert (=> b!66488 m!60627))

(declare-fun m!60797 () Bool)

(assert (=> b!66488 m!60797))

(declare-fun m!60799 () Bool)

(assert (=> b!66481 m!60799))

(assert (=> b!66492 m!60627))

(assert (=> b!66492 m!60627))

(assert (=> b!66492 m!60629))

(assert (=> b!66111 d!13659))

(declare-fun d!13661 () Bool)

(assert (=> d!13661 (not (arrayContainsKey!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28692 () Unit!1818)

(declare-fun choose!68 (array!3817 (_ BitVec 32) (_ BitVec 64) List!1467) Unit!1818)

(assert (=> d!13661 (= lt!28692 (choose!68 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464)))))

(assert (=> d!13661 (bvslt (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!13661 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464)) lt!28692)))

(declare-fun bs!2842 () Bool)

(assert (= bs!2842 d!13661))

(assert (=> bs!2842 m!60449))

(assert (=> bs!2842 m!60479))

(assert (=> bs!2842 m!60449))

(declare-fun m!60801 () Bool)

(assert (=> bs!2842 m!60801))

(assert (=> b!66106 d!13661))

(declare-fun d!13663 () Bool)

(assert (=> d!13663 (arrayNoDuplicates!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) from!355 Nil!1464)))

(declare-fun lt!28695 () Unit!1818)

(declare-fun choose!39 (array!3817 (_ BitVec 32) (_ BitVec 32)) Unit!1818)

(assert (=> d!13663 (= lt!28695 (choose!39 (_keys!3785 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!13663 (bvslt (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!13663 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000000 from!355) lt!28695)))

(declare-fun bs!2843 () Bool)

(assert (= bs!2843 d!13663))

(assert (=> bs!2843 m!60475))

(declare-fun m!60803 () Bool)

(assert (=> bs!2843 m!60803))

(assert (=> b!66106 d!13663))

(declare-fun d!13665 () Bool)

(declare-fun res!35984 () Bool)

(declare-fun e!43629 () Bool)

(assert (=> d!13665 (=> res!35984 e!43629)))

(assert (=> d!13665 (= res!35984 (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!13665 (= (arrayContainsKey!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!43629)))

(declare-fun b!66497 () Bool)

(declare-fun e!43630 () Bool)

(assert (=> b!66497 (= e!43629 e!43630)))

(declare-fun res!35985 () Bool)

(assert (=> b!66497 (=> (not res!35985) (not e!43630))))

(assert (=> b!66497 (= res!35985 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!66498 () Bool)

(assert (=> b!66498 (= e!43630 (arrayContainsKey!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!13665 (not res!35984)) b!66497))

(assert (= (and b!66497 res!35985) b!66498))

(assert (=> d!13665 m!60627))

(assert (=> b!66498 m!60449))

(declare-fun m!60805 () Bool)

(assert (=> b!66498 m!60805))

(assert (=> b!66106 d!13665))

(declare-fun d!13667 () Bool)

(declare-fun e!43633 () Bool)

(assert (=> d!13667 e!43633))

(declare-fun c!9165 () Bool)

(assert (=> d!13667 (= c!9165 (and (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!28698 () Unit!1818)

(declare-fun choose!373 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) (_ BitVec 32) Int) Unit!1818)

(assert (=> d!13667 (= lt!28698 (choose!373 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))))))

(assert (=> d!13667 (validMask!0 (mask!6080 (v!2469 (underlying!244 thiss!992))))))

(assert (=> d!13667 (= (lemmaListMapContainsThenArrayContainsFrom!43 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))) lt!28698)))

(declare-fun b!66503 () Bool)

(assert (=> b!66503 (= e!43633 (arrayContainsKey!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!66504 () Bool)

(assert (=> b!66504 (= e!43633 (ite (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!13667 c!9165) b!66503))

(assert (= (and d!13667 (not c!9165)) b!66504))

(assert (=> d!13667 m!60449))

(declare-fun m!60807 () Bool)

(assert (=> d!13667 m!60807))

(assert (=> d!13667 m!60447))

(assert (=> b!66503 m!60449))

(assert (=> b!66503 m!60479))

(assert (=> b!66106 d!13667))

(declare-fun b!66515 () Bool)

(declare-fun e!43643 () Bool)

(declare-fun e!43645 () Bool)

(assert (=> b!66515 (= e!43643 e!43645)))

(declare-fun c!9168 () Bool)

(assert (=> b!66515 (= c!9168 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!66516 () Bool)

(declare-fun call!5550 () Bool)

(assert (=> b!66516 (= e!43645 call!5550)))

(declare-fun b!66517 () Bool)

(declare-fun e!43642 () Bool)

(declare-fun contains!708 (List!1467 (_ BitVec 64)) Bool)

(assert (=> b!66517 (= e!43642 (contains!708 Nil!1464 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun bm!5547 () Bool)

(assert (=> bm!5547 (= call!5550 (arrayNoDuplicates!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)))))

(declare-fun b!66518 () Bool)

(declare-fun e!43644 () Bool)

(assert (=> b!66518 (= e!43644 e!43643)))

(declare-fun res!35992 () Bool)

(assert (=> b!66518 (=> (not res!35992) (not e!43643))))

(assert (=> b!66518 (= res!35992 (not e!43642))))

(declare-fun res!35993 () Bool)

(assert (=> b!66518 (=> (not res!35993) (not e!43642))))

(assert (=> b!66518 (= res!35993 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun d!13669 () Bool)

(declare-fun res!35994 () Bool)

(assert (=> d!13669 (=> res!35994 e!43644)))

(assert (=> d!13669 (= res!35994 (bvsge from!355 (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> d!13669 (= (arrayNoDuplicates!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) from!355 Nil!1464) e!43644)))

(declare-fun b!66519 () Bool)

(assert (=> b!66519 (= e!43645 call!5550)))

(assert (= (and d!13669 (not res!35994)) b!66518))

(assert (= (and b!66518 res!35993) b!66517))

(assert (= (and b!66518 res!35992) b!66515))

(assert (= (and b!66515 c!9168) b!66519))

(assert (= (and b!66515 (not c!9168)) b!66516))

(assert (= (or b!66519 b!66516) bm!5547))

(assert (=> b!66515 m!60449))

(assert (=> b!66515 m!60449))

(declare-fun m!60809 () Bool)

(assert (=> b!66515 m!60809))

(assert (=> b!66517 m!60449))

(assert (=> b!66517 m!60449))

(declare-fun m!60811 () Bool)

(assert (=> b!66517 m!60811))

(assert (=> bm!5547 m!60449))

(declare-fun m!60813 () Bool)

(assert (=> bm!5547 m!60813))

(assert (=> b!66518 m!60449))

(assert (=> b!66518 m!60449))

(assert (=> b!66518 m!60809))

(assert (=> b!66106 d!13669))

(declare-fun d!13671 () Bool)

(assert (=> d!13671 (= (valid!288 thiss!992) (valid!287 (v!2469 (underlying!244 thiss!992))))))

(declare-fun bs!2844 () Bool)

(assert (= bs!2844 d!13671))

(declare-fun m!60815 () Bool)

(assert (=> bs!2844 m!60815))

(assert (=> start!9264 d!13671))

(declare-fun d!13673 () Bool)

(declare-fun res!36001 () Bool)

(declare-fun e!43648 () Bool)

(assert (=> d!13673 (=> (not res!36001) (not e!43648))))

(declare-fun simpleValid!48 (LongMapFixedSize!670) Bool)

(assert (=> d!13673 (= res!36001 (simpleValid!48 newMap!16))))

(assert (=> d!13673 (= (valid!287 newMap!16) e!43648)))

(declare-fun b!66526 () Bool)

(declare-fun res!36002 () Bool)

(assert (=> b!66526 (=> (not res!36002) (not e!43648))))

(declare-fun arrayCountValidKeys!0 (array!3817 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!66526 (= res!36002 (= (arrayCountValidKeys!0 (_keys!3785 newMap!16) #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) (_size!384 newMap!16)))))

(declare-fun b!66527 () Bool)

(declare-fun res!36003 () Bool)

(assert (=> b!66527 (=> (not res!36003) (not e!43648))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3817 (_ BitVec 32)) Bool)

(assert (=> b!66527 (= res!36003 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(declare-fun b!66528 () Bool)

(assert (=> b!66528 (= e!43648 (arrayNoDuplicates!0 (_keys!3785 newMap!16) #b00000000000000000000000000000000 Nil!1464))))

(assert (= (and d!13673 res!36001) b!66526))

(assert (= (and b!66526 res!36002) b!66527))

(assert (= (and b!66527 res!36003) b!66528))

(declare-fun m!60817 () Bool)

(assert (=> d!13673 m!60817))

(declare-fun m!60819 () Bool)

(assert (=> b!66526 m!60819))

(declare-fun m!60821 () Bool)

(assert (=> b!66527 m!60821))

(declare-fun m!60823 () Bool)

(assert (=> b!66528 m!60823))

(assert (=> b!66097 d!13673))

(declare-fun d!13675 () Bool)

(assert (=> d!13675 (= (array_inv!1137 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvsge (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!66103 d!13675))

(declare-fun d!13677 () Bool)

(assert (=> d!13677 (= (array_inv!1138 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvsge (size!2059 (_values!2129 (v!2469 (underlying!244 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!66103 d!13677))

(declare-fun mapNonEmpty!3085 () Bool)

(declare-fun mapRes!3085 () Bool)

(declare-fun tp!8377 () Bool)

(declare-fun e!43654 () Bool)

(assert (=> mapNonEmpty!3085 (= mapRes!3085 (and tp!8377 e!43654))))

(declare-fun mapValue!3085 () ValueCell!881)

(declare-fun mapKey!3085 () (_ BitVec 32))

(declare-fun mapRest!3085 () (Array (_ BitVec 32) ValueCell!881))

(assert (=> mapNonEmpty!3085 (= mapRest!3069 (store mapRest!3085 mapKey!3085 mapValue!3085))))

(declare-fun condMapEmpty!3085 () Bool)

(declare-fun mapDefault!3085 () ValueCell!881)

(assert (=> mapNonEmpty!3069 (= condMapEmpty!3085 (= mapRest!3069 ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3085)))))

(declare-fun e!43653 () Bool)

(assert (=> mapNonEmpty!3069 (= tp!8349 (and e!43653 mapRes!3085))))

(declare-fun mapIsEmpty!3085 () Bool)

(assert (=> mapIsEmpty!3085 mapRes!3085))

(declare-fun b!66535 () Bool)

(assert (=> b!66535 (= e!43654 tp_is_empty!2449)))

(declare-fun b!66536 () Bool)

(assert (=> b!66536 (= e!43653 tp_is_empty!2449)))

(assert (= (and mapNonEmpty!3069 condMapEmpty!3085) mapIsEmpty!3085))

(assert (= (and mapNonEmpty!3069 (not condMapEmpty!3085)) mapNonEmpty!3085))

(assert (= (and mapNonEmpty!3085 ((_ is ValueCellFull!881) mapValue!3085)) b!66535))

(assert (= (and mapNonEmpty!3069 ((_ is ValueCellFull!881) mapDefault!3085)) b!66536))

(declare-fun m!60825 () Bool)

(assert (=> mapNonEmpty!3085 m!60825))

(declare-fun mapNonEmpty!3086 () Bool)

(declare-fun mapRes!3086 () Bool)

(declare-fun tp!8378 () Bool)

(declare-fun e!43656 () Bool)

(assert (=> mapNonEmpty!3086 (= mapRes!3086 (and tp!8378 e!43656))))

(declare-fun mapValue!3086 () ValueCell!881)

(declare-fun mapKey!3086 () (_ BitVec 32))

(declare-fun mapRest!3086 () (Array (_ BitVec 32) ValueCell!881))

(assert (=> mapNonEmpty!3086 (= mapRest!3070 (store mapRest!3086 mapKey!3086 mapValue!3086))))

(declare-fun condMapEmpty!3086 () Bool)

(declare-fun mapDefault!3086 () ValueCell!881)

(assert (=> mapNonEmpty!3070 (= condMapEmpty!3086 (= mapRest!3070 ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3086)))))

(declare-fun e!43655 () Bool)

(assert (=> mapNonEmpty!3070 (= tp!8348 (and e!43655 mapRes!3086))))

(declare-fun mapIsEmpty!3086 () Bool)

(assert (=> mapIsEmpty!3086 mapRes!3086))

(declare-fun b!66537 () Bool)

(assert (=> b!66537 (= e!43656 tp_is_empty!2449)))

(declare-fun b!66538 () Bool)

(assert (=> b!66538 (= e!43655 tp_is_empty!2449)))

(assert (= (and mapNonEmpty!3070 condMapEmpty!3086) mapIsEmpty!3086))

(assert (= (and mapNonEmpty!3070 (not condMapEmpty!3086)) mapNonEmpty!3086))

(assert (= (and mapNonEmpty!3086 ((_ is ValueCellFull!881) mapValue!3086)) b!66537))

(assert (= (and mapNonEmpty!3070 ((_ is ValueCellFull!881) mapDefault!3086)) b!66538))

(declare-fun m!60827 () Bool)

(assert (=> mapNonEmpty!3086 m!60827))

(declare-fun b_lambda!2965 () Bool)

(assert (= b_lambda!2961 (or (and b!66103 b_free!2065) (and b!66112 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))))) b_lambda!2965)))

(declare-fun b_lambda!2967 () Bool)

(assert (= b_lambda!2959 (or (and b!66103 b_free!2065) (and b!66112 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))))) b_lambda!2967)))

(declare-fun b_lambda!2969 () Bool)

(assert (= b_lambda!2963 (or (and b!66103 b_free!2065) (and b!66112 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))))) b_lambda!2969)))

(check-sat (not b!66287) (not b!66276) (not b!66283) (not b_lambda!2967) (not b!66414) (not d!13641) (not b!66487) (not b!66273) (not bm!5519) (not bm!5544) (not b!66420) (not b!66247) (not bm!5517) (not bm!5522) (not b!66295) (not b!66286) (not b!66528) (not bm!5500) (not b_lambda!2969) (not d!13643) (not b!66526) (not b!66428) (not b!66297) (not b!66527) (not b!66483) (not mapNonEmpty!3085) (not bm!5512) (not b!66288) (not b!66274) (not b!66284) (not b!66515) (not b!66429) b_and!4103 (not b!66517) (not b!66484) tp_is_empty!2449 (not d!13663) (not d!13667) (not bm!5547) (not b_lambda!2965) (not bm!5504) (not b!66413) (not b!66478) (not bm!5515) (not d!13659) (not d!13633) (not b!66246) (not b!66382) (not b!66393) (not b!66279) (not d!13671) (not d!13673) (not bm!5538) (not d!13649) (not b_lambda!2957) (not d!13639) (not bm!5523) (not b!66518) (not b_next!2065) (not bm!5541) b_and!4101 (not d!13657) (not b!66481) (not b!66280) (not bm!5511) (not b!66488) (not b!66285) (not d!13635) (not bm!5451) (not b!66245) (not b!66408) (not b!66503) (not b!66498) (not b!66412) (not b_next!2067) (not bm!5543) (not d!13637) (not d!13647) (not b!66486) (not b!66423) (not bm!5520) (not b!66275) (not b!66492) (not bm!5514) (not mapNonEmpty!3086) (not bm!5501) (not d!13661) (not b!66248))
(check-sat b_and!4101 b_and!4103 (not b_next!2065) (not b_next!2067))
(get-model)

(assert (=> bm!5541 d!13637))

(declare-fun d!13679 () Bool)

(declare-fun isEmpty!312 (List!1466) Bool)

(assert (=> d!13679 (= (isEmpty!311 lt!28513) (isEmpty!312 (toList!705 lt!28513)))))

(declare-fun bs!2845 () Bool)

(assert (= bs!2845 d!13679))

(declare-fun m!60829 () Bool)

(assert (=> bs!2845 m!60829))

(assert (=> b!66279 d!13679))

(declare-fun d!13681 () Bool)

(declare-fun lt!28701 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!71 (List!1466) (InoxSet tuple2!2082))

(assert (=> d!13681 (= lt!28701 (select (content!71 (toList!705 lt!28496)) lt!28408))))

(declare-fun e!43661 () Bool)

(assert (=> d!13681 (= lt!28701 e!43661)))

(declare-fun res!36009 () Bool)

(assert (=> d!13681 (=> (not res!36009) (not e!43661))))

(assert (=> d!13681 (= res!36009 ((_ is Cons!1462) (toList!705 lt!28496)))))

(assert (=> d!13681 (= (contains!707 (toList!705 lt!28496) lt!28408) lt!28701)))

(declare-fun b!66543 () Bool)

(declare-fun e!43662 () Bool)

(assert (=> b!66543 (= e!43661 e!43662)))

(declare-fun res!36008 () Bool)

(assert (=> b!66543 (=> res!36008 e!43662)))

(assert (=> b!66543 (= res!36008 (= (h!2046 (toList!705 lt!28496)) lt!28408))))

(declare-fun b!66544 () Bool)

(assert (=> b!66544 (= e!43662 (contains!707 (t!4939 (toList!705 lt!28496)) lt!28408))))

(assert (= (and d!13681 res!36009) b!66543))

(assert (= (and b!66543 (not res!36008)) b!66544))

(declare-fun m!60831 () Bool)

(assert (=> d!13681 m!60831))

(declare-fun m!60833 () Bool)

(assert (=> d!13681 m!60833))

(declare-fun m!60835 () Bool)

(assert (=> b!66544 m!60835))

(assert (=> b!66248 d!13681))

(assert (=> d!13661 d!13665))

(declare-fun d!13683 () Bool)

(assert (=> d!13683 (not (arrayContainsKey!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!13683 true))

(declare-fun _$68!46 () Unit!1818)

(assert (=> d!13683 (= (choose!68 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464)) _$68!46)))

(declare-fun bs!2846 () Bool)

(assert (= bs!2846 d!13683))

(assert (=> bs!2846 m!60449))

(assert (=> bs!2846 m!60479))

(assert (=> d!13661 d!13683))

(declare-fun b!66553 () Bool)

(declare-fun e!43668 () (_ BitVec 32))

(declare-fun call!5553 () (_ BitVec 32))

(assert (=> b!66553 (= e!43668 (bvadd #b00000000000000000000000000000001 call!5553))))

(declare-fun bm!5550 () Bool)

(assert (=> bm!5550 (= call!5553 (arrayCountValidKeys!0 (_keys!3785 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun d!13685 () Bool)

(declare-fun lt!28704 () (_ BitVec 32))

(assert (=> d!13685 (and (bvsge lt!28704 #b00000000000000000000000000000000) (bvsle lt!28704 (bvsub (size!2058 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!43667 () (_ BitVec 32))

(assert (=> d!13685 (= lt!28704 e!43667)))

(declare-fun c!9173 () Bool)

(assert (=> d!13685 (= c!9173 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!13685 (and (bvsle #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2058 (_keys!3785 newMap!16)) (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!13685 (= (arrayCountValidKeys!0 (_keys!3785 newMap!16) #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) lt!28704)))

(declare-fun b!66554 () Bool)

(assert (=> b!66554 (= e!43668 call!5553)))

(declare-fun b!66555 () Bool)

(assert (=> b!66555 (= e!43667 e!43668)))

(declare-fun c!9174 () Bool)

(assert (=> b!66555 (= c!9174 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66556 () Bool)

(assert (=> b!66556 (= e!43667 #b00000000000000000000000000000000)))

(assert (= (and d!13685 c!9173) b!66556))

(assert (= (and d!13685 (not c!9173)) b!66555))

(assert (= (and b!66555 c!9174) b!66553))

(assert (= (and b!66555 (not c!9174)) b!66554))

(assert (= (or b!66553 b!66554) bm!5550))

(declare-fun m!60837 () Bool)

(assert (=> bm!5550 m!60837))

(declare-fun m!60839 () Bool)

(assert (=> b!66555 m!60839))

(assert (=> b!66555 m!60839))

(declare-fun m!60841 () Bool)

(assert (=> b!66555 m!60841))

(assert (=> b!66526 d!13685))

(declare-fun b!66557 () Bool)

(declare-fun e!43680 () Bool)

(declare-fun call!5554 () Bool)

(assert (=> b!66557 (= e!43680 (not call!5554))))

(declare-fun b!66558 () Bool)

(declare-fun c!9176 () Bool)

(assert (=> b!66558 (= c!9176 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!43675 () ListLongMap!1379)

(declare-fun e!43669 () ListLongMap!1379)

(assert (=> b!66558 (= e!43675 e!43669)))

(declare-fun b!66559 () Bool)

(declare-fun res!36012 () Bool)

(declare-fun e!43676 () Bool)

(assert (=> b!66559 (=> (not res!36012) (not e!43676))))

(declare-fun e!43679 () Bool)

(assert (=> b!66559 (= res!36012 e!43679)))

(declare-fun res!36010 () Bool)

(assert (=> b!66559 (=> res!36010 e!43679)))

(declare-fun e!43674 () Bool)

(assert (=> b!66559 (= res!36010 (not e!43674))))

(declare-fun res!36015 () Bool)

(assert (=> b!66559 (=> (not res!36015) (not e!43674))))

(assert (=> b!66559 (= res!36015 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!66560 () Bool)

(declare-fun e!43672 () ListLongMap!1379)

(assert (=> b!66560 (= e!43672 e!43675)))

(declare-fun c!9178 () Bool)

(assert (=> b!66560 (= c!9178 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66561 () Bool)

(declare-fun e!43681 () Unit!1818)

(declare-fun Unit!1831 () Unit!1818)

(assert (=> b!66561 (= e!43681 Unit!1831)))

(declare-fun b!66562 () Bool)

(declare-fun res!36016 () Bool)

(assert (=> b!66562 (=> (not res!36016) (not e!43676))))

(declare-fun e!43677 () Bool)

(assert (=> b!66562 (= res!36016 e!43677)))

(declare-fun c!9177 () Bool)

(assert (=> b!66562 (= c!9177 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5551 () Bool)

(declare-fun call!5560 () Bool)

(declare-fun lt!28724 () ListLongMap!1379)

(assert (=> bm!5551 (= call!5560 (contains!705 lt!28724 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66563 () Bool)

(declare-fun lt!28720 () Unit!1818)

(assert (=> b!66563 (= e!43681 lt!28720)))

(declare-fun lt!28710 () ListLongMap!1379)

(assert (=> b!66563 (= lt!28710 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28723 () (_ BitVec 64))

(assert (=> b!66563 (= lt!28723 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28722 () (_ BitVec 64))

(assert (=> b!66563 (= lt!28722 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28708 () Unit!1818)

(assert (=> b!66563 (= lt!28708 (addStillContains!48 lt!28710 lt!28723 (zeroValue!2054 newMap!16) lt!28722))))

(assert (=> b!66563 (contains!705 (+!87 lt!28710 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16))) lt!28722)))

(declare-fun lt!28715 () Unit!1818)

(assert (=> b!66563 (= lt!28715 lt!28708)))

(declare-fun lt!28707 () ListLongMap!1379)

(assert (=> b!66563 (= lt!28707 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28711 () (_ BitVec 64))

(assert (=> b!66563 (= lt!28711 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28705 () (_ BitVec 64))

(assert (=> b!66563 (= lt!28705 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28726 () Unit!1818)

(assert (=> b!66563 (= lt!28726 (addApplyDifferent!48 lt!28707 lt!28711 (minValue!2054 newMap!16) lt!28705))))

(assert (=> b!66563 (= (apply!72 (+!87 lt!28707 (tuple2!2083 lt!28711 (minValue!2054 newMap!16))) lt!28705) (apply!72 lt!28707 lt!28705))))

(declare-fun lt!28709 () Unit!1818)

(assert (=> b!66563 (= lt!28709 lt!28726)))

(declare-fun lt!28716 () ListLongMap!1379)

(assert (=> b!66563 (= lt!28716 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28719 () (_ BitVec 64))

(assert (=> b!66563 (= lt!28719 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28721 () (_ BitVec 64))

(assert (=> b!66563 (= lt!28721 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28713 () Unit!1818)

(assert (=> b!66563 (= lt!28713 (addApplyDifferent!48 lt!28716 lt!28719 (zeroValue!2054 newMap!16) lt!28721))))

(assert (=> b!66563 (= (apply!72 (+!87 lt!28716 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16))) lt!28721) (apply!72 lt!28716 lt!28721))))

(declare-fun lt!28725 () Unit!1818)

(assert (=> b!66563 (= lt!28725 lt!28713)))

(declare-fun lt!28714 () ListLongMap!1379)

(assert (=> b!66563 (= lt!28714 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28717 () (_ BitVec 64))

(assert (=> b!66563 (= lt!28717 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28718 () (_ BitVec 64))

(assert (=> b!66563 (= lt!28718 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66563 (= lt!28720 (addApplyDifferent!48 lt!28714 lt!28717 (minValue!2054 newMap!16) lt!28718))))

(assert (=> b!66563 (= (apply!72 (+!87 lt!28714 (tuple2!2083 lt!28717 (minValue!2054 newMap!16))) lt!28718) (apply!72 lt!28714 lt!28718))))

(declare-fun d!13687 () Bool)

(assert (=> d!13687 e!43676))

(declare-fun res!36018 () Bool)

(assert (=> d!13687 (=> (not res!36018) (not e!43676))))

(assert (=> d!13687 (= res!36018 (or (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))))

(declare-fun lt!28706 () ListLongMap!1379)

(assert (=> d!13687 (= lt!28724 lt!28706)))

(declare-fun lt!28712 () Unit!1818)

(assert (=> d!13687 (= lt!28712 e!43681)))

(declare-fun c!9180 () Bool)

(declare-fun e!43673 () Bool)

(assert (=> d!13687 (= c!9180 e!43673)))

(declare-fun res!36017 () Bool)

(assert (=> d!13687 (=> (not res!36017) (not e!43673))))

(assert (=> d!13687 (= res!36017 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!13687 (= lt!28706 e!43672)))

(declare-fun c!9179 () Bool)

(assert (=> d!13687 (= c!9179 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13687 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13687 (= (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!28724)))

(declare-fun bm!5552 () Bool)

(declare-fun call!5558 () ListLongMap!1379)

(declare-fun call!5555 () ListLongMap!1379)

(assert (=> bm!5552 (= call!5558 call!5555)))

(declare-fun b!66564 () Bool)

(assert (=> b!66564 (= e!43677 (not call!5560))))

(declare-fun b!66565 () Bool)

(assert (=> b!66565 (= e!43675 call!5558)))

(declare-fun b!66566 () Bool)

(declare-fun e!43671 () Bool)

(assert (=> b!66566 (= e!43671 (= (apply!72 lt!28724 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun b!66567 () Bool)

(assert (=> b!66567 (= e!43676 e!43680)))

(declare-fun c!9175 () Bool)

(assert (=> b!66567 (= c!9175 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66568 () Bool)

(declare-fun e!43678 () Bool)

(assert (=> b!66568 (= e!43678 (= (apply!72 lt!28724 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66568 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 (_values!2129 newMap!16))))))

(assert (=> b!66568 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!66569 () Bool)

(assert (=> b!66569 (= e!43672 (+!87 call!5555 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun bm!5553 () Bool)

(declare-fun call!5556 () ListLongMap!1379)

(declare-fun call!5559 () ListLongMap!1379)

(assert (=> bm!5553 (= call!5556 call!5559)))

(declare-fun bm!5554 () Bool)

(declare-fun call!5557 () ListLongMap!1379)

(assert (=> bm!5554 (= call!5557 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!66570 () Bool)

(assert (=> b!66570 (= e!43669 call!5556)))

(declare-fun b!66571 () Bool)

(declare-fun e!43670 () Bool)

(assert (=> b!66571 (= e!43670 (= (apply!72 lt!28724 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun bm!5555 () Bool)

(assert (=> bm!5555 (= call!5559 call!5557)))

(declare-fun b!66572 () Bool)

(assert (=> b!66572 (= e!43674 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66573 () Bool)

(assert (=> b!66573 (= e!43679 e!43678)))

(declare-fun res!36013 () Bool)

(assert (=> b!66573 (=> (not res!36013) (not e!43678))))

(assert (=> b!66573 (= res!36013 (contains!705 lt!28724 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!66573 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!66574 () Bool)

(assert (=> b!66574 (= e!43680 e!43670)))

(declare-fun res!36011 () Bool)

(assert (=> b!66574 (= res!36011 call!5554)))

(assert (=> b!66574 (=> (not res!36011) (not e!43670))))

(declare-fun bm!5556 () Bool)

(assert (=> bm!5556 (= call!5555 (+!87 (ite c!9179 call!5557 (ite c!9178 call!5559 call!5556)) (ite (or c!9179 c!9178) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!66575 () Bool)

(assert (=> b!66575 (= e!43677 e!43671)))

(declare-fun res!36014 () Bool)

(assert (=> b!66575 (= res!36014 call!5560)))

(assert (=> b!66575 (=> (not res!36014) (not e!43671))))

(declare-fun b!66576 () Bool)

(assert (=> b!66576 (= e!43669 call!5558)))

(declare-fun b!66577 () Bool)

(assert (=> b!66577 (= e!43673 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5557 () Bool)

(assert (=> bm!5557 (= call!5554 (contains!705 lt!28724 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!13687 c!9179) b!66569))

(assert (= (and d!13687 (not c!9179)) b!66560))

(assert (= (and b!66560 c!9178) b!66565))

(assert (= (and b!66560 (not c!9178)) b!66558))

(assert (= (and b!66558 c!9176) b!66576))

(assert (= (and b!66558 (not c!9176)) b!66570))

(assert (= (or b!66576 b!66570) bm!5553))

(assert (= (or b!66565 bm!5553) bm!5555))

(assert (= (or b!66565 b!66576) bm!5552))

(assert (= (or b!66569 bm!5555) bm!5554))

(assert (= (or b!66569 bm!5552) bm!5556))

(assert (= (and d!13687 res!36017) b!66577))

(assert (= (and d!13687 c!9180) b!66563))

(assert (= (and d!13687 (not c!9180)) b!66561))

(assert (= (and d!13687 res!36018) b!66559))

(assert (= (and b!66559 res!36015) b!66572))

(assert (= (and b!66559 (not res!36010)) b!66573))

(assert (= (and b!66573 res!36013) b!66568))

(assert (= (and b!66559 res!36012) b!66562))

(assert (= (and b!66562 c!9177) b!66575))

(assert (= (and b!66562 (not c!9177)) b!66564))

(assert (= (and b!66575 res!36014) b!66566))

(assert (= (or b!66575 b!66564) bm!5551))

(assert (= (and b!66562 res!36016) b!66567))

(assert (= (and b!66567 c!9175) b!66574))

(assert (= (and b!66567 (not c!9175)) b!66557))

(assert (= (and b!66574 res!36011) b!66571))

(assert (= (or b!66574 b!66557) bm!5557))

(declare-fun b_lambda!2971 () Bool)

(assert (=> (not b_lambda!2971) (not b!66568)))

(declare-fun tb!1461 () Bool)

(declare-fun t!4952 () Bool)

(assert (=> (and b!66103 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16)) t!4952) tb!1461))

(declare-fun result!2587 () Bool)

(assert (=> tb!1461 (= result!2587 tp_is_empty!2449)))

(assert (=> b!66568 t!4952))

(declare-fun b_and!4105 () Bool)

(assert (= b_and!4101 (and (=> t!4952 result!2587) b_and!4105)))

(declare-fun t!4954 () Bool)

(declare-fun tb!1463 () Bool)

(assert (=> (and b!66112 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 newMap!16)) t!4954) tb!1463))

(declare-fun result!2589 () Bool)

(assert (= result!2589 result!2587))

(assert (=> b!66568 t!4954))

(declare-fun b_and!4107 () Bool)

(assert (= b_and!4103 (and (=> t!4954 result!2589) b_and!4107)))

(declare-fun m!60843 () Bool)

(assert (=> b!66569 m!60843))

(declare-fun m!60845 () Bool)

(assert (=> d!13687 m!60845))

(declare-fun m!60847 () Bool)

(assert (=> bm!5554 m!60847))

(declare-fun m!60849 () Bool)

(assert (=> b!66571 m!60849))

(assert (=> b!66572 m!60839))

(assert (=> b!66572 m!60839))

(assert (=> b!66572 m!60841))

(declare-fun m!60851 () Bool)

(assert (=> b!66563 m!60851))

(declare-fun m!60853 () Bool)

(assert (=> b!66563 m!60853))

(declare-fun m!60855 () Bool)

(assert (=> b!66563 m!60855))

(declare-fun m!60857 () Bool)

(assert (=> b!66563 m!60857))

(assert (=> b!66563 m!60851))

(declare-fun m!60859 () Bool)

(assert (=> b!66563 m!60859))

(declare-fun m!60861 () Bool)

(assert (=> b!66563 m!60861))

(assert (=> b!66563 m!60855))

(declare-fun m!60863 () Bool)

(assert (=> b!66563 m!60863))

(declare-fun m!60865 () Bool)

(assert (=> b!66563 m!60865))

(declare-fun m!60867 () Bool)

(assert (=> b!66563 m!60867))

(declare-fun m!60869 () Bool)

(assert (=> b!66563 m!60869))

(declare-fun m!60871 () Bool)

(assert (=> b!66563 m!60871))

(assert (=> b!66563 m!60847))

(declare-fun m!60873 () Bool)

(assert (=> b!66563 m!60873))

(assert (=> b!66563 m!60869))

(declare-fun m!60875 () Bool)

(assert (=> b!66563 m!60875))

(assert (=> b!66563 m!60839))

(declare-fun m!60877 () Bool)

(assert (=> b!66563 m!60877))

(assert (=> b!66563 m!60859))

(declare-fun m!60879 () Bool)

(assert (=> b!66563 m!60879))

(declare-fun m!60881 () Bool)

(assert (=> bm!5556 m!60881))

(declare-fun m!60883 () Bool)

(assert (=> bm!5557 m!60883))

(declare-fun m!60885 () Bool)

(assert (=> b!66568 m!60885))

(assert (=> b!66568 m!60839))

(assert (=> b!66568 m!60839))

(declare-fun m!60887 () Bool)

(assert (=> b!66568 m!60887))

(declare-fun m!60889 () Bool)

(assert (=> b!66568 m!60889))

(assert (=> b!66568 m!60885))

(declare-fun m!60891 () Bool)

(assert (=> b!66568 m!60891))

(assert (=> b!66568 m!60889))

(declare-fun m!60893 () Bool)

(assert (=> bm!5551 m!60893))

(assert (=> b!66573 m!60839))

(assert (=> b!66573 m!60839))

(declare-fun m!60895 () Bool)

(assert (=> b!66573 m!60895))

(declare-fun m!60897 () Bool)

(assert (=> b!66566 m!60897))

(assert (=> b!66577 m!60839))

(assert (=> b!66577 m!60839))

(assert (=> b!66577 m!60841))

(assert (=> b!66420 d!13687))

(declare-fun d!13689 () Bool)

(declare-fun get!1123 (Option!134) V!2913)

(assert (=> d!13689 (= (apply!72 lt!28687 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1123 (getValueByKey!128 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2847 () Bool)

(assert (= bs!2847 d!13689))

(declare-fun m!60899 () Bool)

(assert (=> bs!2847 m!60899))

(assert (=> bs!2847 m!60899))

(declare-fun m!60901 () Bool)

(assert (=> bs!2847 m!60901))

(assert (=> b!66486 d!13689))

(assert (=> d!13659 d!13645))

(declare-fun d!13691 () Bool)

(declare-fun e!43682 () Bool)

(assert (=> d!13691 e!43682))

(declare-fun res!36019 () Bool)

(assert (=> d!13691 (=> (not res!36019) (not e!43682))))

(declare-fun lt!28728 () ListLongMap!1379)

(assert (=> d!13691 (= res!36019 (contains!705 lt!28728 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun lt!28730 () List!1466)

(assert (=> d!13691 (= lt!28728 (ListLongMap!1380 lt!28730))))

(declare-fun lt!28727 () Unit!1818)

(declare-fun lt!28729 () Unit!1818)

(assert (=> d!13691 (= lt!28727 lt!28729)))

(assert (=> d!13691 (= (getValueByKey!128 lt!28730 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13691 (= lt!28729 (lemmaContainsTupThenGetReturnValue!48 lt!28730 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13691 (= lt!28730 (insertStrictlySorted!51 (toList!705 call!5521) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13691 (= (+!87 call!5521 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) lt!28728)))

(declare-fun b!66578 () Bool)

(declare-fun res!36020 () Bool)

(assert (=> b!66578 (=> (not res!36020) (not e!43682))))

(assert (=> b!66578 (= res!36020 (= (getValueByKey!128 (toList!705 lt!28728) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!66579 () Bool)

(assert (=> b!66579 (= e!43682 (contains!707 (toList!705 lt!28728) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(assert (= (and d!13691 res!36019) b!66578))

(assert (= (and b!66578 res!36020) b!66579))

(declare-fun m!60903 () Bool)

(assert (=> d!13691 m!60903))

(declare-fun m!60905 () Bool)

(assert (=> d!13691 m!60905))

(declare-fun m!60907 () Bool)

(assert (=> d!13691 m!60907))

(declare-fun m!60909 () Bool)

(assert (=> d!13691 m!60909))

(declare-fun m!60911 () Bool)

(assert (=> b!66578 m!60911))

(declare-fun m!60913 () Bool)

(assert (=> b!66579 m!60913))

(assert (=> b!66414 d!13691))

(declare-fun b!66592 () Bool)

(declare-fun e!43690 () SeekEntryResult!236)

(declare-fun lt!28738 () SeekEntryResult!236)

(assert (=> b!66592 (= e!43690 (Found!236 (index!3074 lt!28738)))))

(declare-fun d!13693 () Bool)

(declare-fun lt!28737 () SeekEntryResult!236)

(assert (=> d!13693 (and (or ((_ is Undefined!236) lt!28737) (not ((_ is Found!236) lt!28737)) (and (bvsge (index!3073 lt!28737) #b00000000000000000000000000000000) (bvslt (index!3073 lt!28737) (size!2058 (_keys!3785 newMap!16))))) (or ((_ is Undefined!236) lt!28737) ((_ is Found!236) lt!28737) (not ((_ is MissingZero!236) lt!28737)) (and (bvsge (index!3072 lt!28737) #b00000000000000000000000000000000) (bvslt (index!3072 lt!28737) (size!2058 (_keys!3785 newMap!16))))) (or ((_ is Undefined!236) lt!28737) ((_ is Found!236) lt!28737) ((_ is MissingZero!236) lt!28737) (not ((_ is MissingVacant!236) lt!28737)) (and (bvsge (index!3075 lt!28737) #b00000000000000000000000000000000) (bvslt (index!3075 lt!28737) (size!2058 (_keys!3785 newMap!16))))) (or ((_ is Undefined!236) lt!28737) (ite ((_ is Found!236) lt!28737) (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28737)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (ite ((_ is MissingZero!236) lt!28737) (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3072 lt!28737)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!236) lt!28737) (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3075 lt!28737)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!43689 () SeekEntryResult!236)

(assert (=> d!13693 (= lt!28737 e!43689)))

(declare-fun c!9189 () Bool)

(assert (=> d!13693 (= c!9189 (and ((_ is Intermediate!236) lt!28738) (undefined!1048 lt!28738)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3817 (_ BitVec 32)) SeekEntryResult!236)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!13693 (= lt!28738 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (mask!6080 newMap!16)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(assert (=> d!13693 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13693 (= (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)) lt!28737)))

(declare-fun b!66593 () Bool)

(declare-fun c!9188 () Bool)

(declare-fun lt!28739 () (_ BitVec 64))

(assert (=> b!66593 (= c!9188 (= lt!28739 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!43691 () SeekEntryResult!236)

(assert (=> b!66593 (= e!43690 e!43691)))

(declare-fun b!66594 () Bool)

(assert (=> b!66594 (= e!43689 Undefined!236)))

(declare-fun b!66595 () Bool)

(assert (=> b!66595 (= e!43691 (MissingZero!236 (index!3074 lt!28738)))))

(declare-fun b!66596 () Bool)

(assert (=> b!66596 (= e!43689 e!43690)))

(assert (=> b!66596 (= lt!28739 (select (arr!1822 (_keys!3785 newMap!16)) (index!3074 lt!28738)))))

(declare-fun c!9187 () Bool)

(assert (=> b!66596 (= c!9187 (= lt!28739 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!66597 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3817 (_ BitVec 32)) SeekEntryResult!236)

(assert (=> b!66597 (= e!43691 (seekKeyOrZeroReturnVacant!0 (x!10705 lt!28738) (index!3074 lt!28738) (index!3074 lt!28738) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(assert (= (and d!13693 c!9189) b!66594))

(assert (= (and d!13693 (not c!9189)) b!66596))

(assert (= (and b!66596 c!9187) b!66592))

(assert (= (and b!66596 (not c!9187)) b!66593))

(assert (= (and b!66593 c!9188) b!66595))

(assert (= (and b!66593 (not c!9188)) b!66597))

(declare-fun m!60915 () Bool)

(assert (=> d!13693 m!60915))

(declare-fun m!60917 () Bool)

(assert (=> d!13693 m!60917))

(assert (=> d!13693 m!60845))

(declare-fun m!60919 () Bool)

(assert (=> d!13693 m!60919))

(assert (=> d!13693 m!60449))

(declare-fun m!60921 () Bool)

(assert (=> d!13693 m!60921))

(assert (=> d!13693 m!60921))

(assert (=> d!13693 m!60449))

(declare-fun m!60923 () Bool)

(assert (=> d!13693 m!60923))

(declare-fun m!60925 () Bool)

(assert (=> b!66596 m!60925))

(assert (=> b!66597 m!60449))

(declare-fun m!60927 () Bool)

(assert (=> b!66597 m!60927))

(assert (=> b!66412 d!13693))

(assert (=> bm!5511 d!13693))

(declare-fun lt!28740 () ListLongMap!1379)

(declare-fun e!43696 () Bool)

(declare-fun b!66598 () Bool)

(assert (=> b!66598 (= e!43696 (= lt!28740 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun bm!5558 () Bool)

(declare-fun call!5561 () ListLongMap!1379)

(assert (=> bm!5558 (= call!5561 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun b!66599 () Bool)

(declare-fun e!43695 () Bool)

(assert (=> b!66599 (= e!43695 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!66599 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!66600 () Bool)

(declare-fun lt!28745 () Unit!1818)

(declare-fun lt!28741 () Unit!1818)

(assert (=> b!66600 (= lt!28745 lt!28741)))

(declare-fun lt!28742 () ListLongMap!1379)

(declare-fun lt!28744 () (_ BitVec 64))

(declare-fun lt!28746 () (_ BitVec 64))

(declare-fun lt!28743 () V!2913)

(assert (=> b!66600 (not (contains!705 (+!87 lt!28742 (tuple2!2083 lt!28744 lt!28743)) lt!28746))))

(assert (=> b!66600 (= lt!28741 (addStillNotContains!22 lt!28742 lt!28744 lt!28743 lt!28746))))

(assert (=> b!66600 (= lt!28746 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!66600 (= lt!28743 (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!66600 (= lt!28744 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!66600 (= lt!28742 call!5561)))

(declare-fun e!43698 () ListLongMap!1379)

(assert (=> b!66600 (= e!43698 (+!87 call!5561 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!66601 () Bool)

(declare-fun e!43692 () ListLongMap!1379)

(assert (=> b!66601 (= e!43692 e!43698)))

(declare-fun c!9190 () Bool)

(assert (=> b!66601 (= c!9190 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!66602 () Bool)

(assert (=> b!66602 (= e!43692 (ListLongMap!1380 Nil!1463))))

(declare-fun b!66603 () Bool)

(assert (=> b!66603 (= e!43698 call!5561)))

(declare-fun b!66604 () Bool)

(assert (=> b!66604 (= e!43696 (isEmpty!311 lt!28740))))

(declare-fun b!66605 () Bool)

(declare-fun res!36024 () Bool)

(declare-fun e!43697 () Bool)

(assert (=> b!66605 (=> (not res!36024) (not e!43697))))

(assert (=> b!66605 (= res!36024 (not (contains!705 lt!28740 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66607 () Bool)

(declare-fun e!43694 () Bool)

(assert (=> b!66607 (= e!43694 e!43696)))

(declare-fun c!9192 () Bool)

(assert (=> b!66607 (= c!9192 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!66608 () Bool)

(declare-fun e!43693 () Bool)

(assert (=> b!66608 (= e!43694 e!43693)))

(assert (=> b!66608 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun res!36023 () Bool)

(assert (=> b!66608 (= res!36023 (contains!705 lt!28740 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!66608 (=> (not res!36023) (not e!43693))))

(declare-fun b!66609 () Bool)

(assert (=> b!66609 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> b!66609 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2059 (_values!2129 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> b!66609 (= e!43693 (= (apply!72 lt!28740 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!13695 () Bool)

(assert (=> d!13695 e!43697))

(declare-fun res!36022 () Bool)

(assert (=> d!13695 (=> (not res!36022) (not e!43697))))

(assert (=> d!13695 (= res!36022 (not (contains!705 lt!28740 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13695 (= lt!28740 e!43692)))

(declare-fun c!9191 () Bool)

(assert (=> d!13695 (= c!9191 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> d!13695 (validMask!0 (mask!6080 (v!2469 (underlying!244 thiss!992))))))

(assert (=> d!13695 (= (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))) lt!28740)))

(declare-fun b!66606 () Bool)

(assert (=> b!66606 (= e!43697 e!43694)))

(declare-fun c!9193 () Bool)

(assert (=> b!66606 (= c!9193 e!43695)))

(declare-fun res!36021 () Bool)

(assert (=> b!66606 (=> (not res!36021) (not e!43695))))

(assert (=> b!66606 (= res!36021 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!13695 c!9191) b!66602))

(assert (= (and d!13695 (not c!9191)) b!66601))

(assert (= (and b!66601 c!9190) b!66600))

(assert (= (and b!66601 (not c!9190)) b!66603))

(assert (= (or b!66600 b!66603) bm!5558))

(assert (= (and d!13695 res!36022) b!66605))

(assert (= (and b!66605 res!36024) b!66606))

(assert (= (and b!66606 res!36021) b!66599))

(assert (= (and b!66606 c!9193) b!66608))

(assert (= (and b!66606 (not c!9193)) b!66607))

(assert (= (and b!66608 res!36023) b!66609))

(assert (= (and b!66607 c!9192) b!66598))

(assert (= (and b!66607 (not c!9192)) b!66604))

(declare-fun b_lambda!2973 () Bool)

(assert (=> (not b_lambda!2973) (not b!66600)))

(assert (=> b!66600 t!4936))

(declare-fun b_and!4109 () Bool)

(assert (= b_and!4105 (and (=> t!4936 result!2567) b_and!4109)))

(assert (=> b!66600 t!4938))

(declare-fun b_and!4111 () Bool)

(assert (= b_and!4107 (and (=> t!4938 result!2571) b_and!4111)))

(declare-fun b_lambda!2975 () Bool)

(assert (=> (not b_lambda!2975) (not b!66609)))

(assert (=> b!66609 t!4936))

(declare-fun b_and!4113 () Bool)

(assert (= b_and!4109 (and (=> t!4936 result!2567) b_and!4113)))

(assert (=> b!66609 t!4938))

(declare-fun b_and!4115 () Bool)

(assert (= b_and!4111 (and (=> t!4938 result!2571) b_and!4115)))

(declare-fun m!60929 () Bool)

(assert (=> d!13695 m!60929))

(assert (=> d!13695 m!60447))

(declare-fun m!60931 () Bool)

(assert (=> b!66601 m!60931))

(assert (=> b!66601 m!60931))

(declare-fun m!60933 () Bool)

(assert (=> b!66601 m!60933))

(declare-fun m!60935 () Bool)

(assert (=> b!66604 m!60935))

(assert (=> b!66599 m!60931))

(assert (=> b!66599 m!60931))

(assert (=> b!66599 m!60933))

(declare-fun m!60937 () Bool)

(assert (=> b!66598 m!60937))

(declare-fun m!60939 () Bool)

(assert (=> b!66600 m!60939))

(declare-fun m!60941 () Bool)

(assert (=> b!66600 m!60941))

(declare-fun m!60943 () Bool)

(assert (=> b!66600 m!60943))

(assert (=> b!66600 m!60465))

(declare-fun m!60945 () Bool)

(assert (=> b!66600 m!60945))

(declare-fun m!60947 () Bool)

(assert (=> b!66600 m!60947))

(assert (=> b!66600 m!60939))

(assert (=> b!66600 m!60943))

(assert (=> b!66600 m!60465))

(declare-fun m!60949 () Bool)

(assert (=> b!66600 m!60949))

(assert (=> b!66600 m!60931))

(declare-fun m!60951 () Bool)

(assert (=> b!66605 m!60951))

(assert (=> bm!5558 m!60937))

(assert (=> b!66608 m!60931))

(assert (=> b!66608 m!60931))

(declare-fun m!60953 () Bool)

(assert (=> b!66608 m!60953))

(assert (=> b!66609 m!60943))

(assert (=> b!66609 m!60465))

(assert (=> b!66609 m!60945))

(assert (=> b!66609 m!60943))

(assert (=> b!66609 m!60931))

(declare-fun m!60955 () Bool)

(assert (=> b!66609 m!60955))

(assert (=> b!66609 m!60465))

(assert (=> b!66609 m!60931))

(assert (=> bm!5451 d!13695))

(declare-fun d!13697 () Bool)

(declare-fun res!36025 () Bool)

(declare-fun e!43699 () Bool)

(assert (=> d!13697 (=> (not res!36025) (not e!43699))))

(assert (=> d!13697 (= res!36025 (simpleValid!48 (_2!1051 lt!28606)))))

(assert (=> d!13697 (= (valid!287 (_2!1051 lt!28606)) e!43699)))

(declare-fun b!66610 () Bool)

(declare-fun res!36026 () Bool)

(assert (=> b!66610 (=> (not res!36026) (not e!43699))))

(assert (=> b!66610 (= res!36026 (= (arrayCountValidKeys!0 (_keys!3785 (_2!1051 lt!28606)) #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28606)))) (_size!384 (_2!1051 lt!28606))))))

(declare-fun b!66611 () Bool)

(declare-fun res!36027 () Bool)

(assert (=> b!66611 (=> (not res!36027) (not e!43699))))

(assert (=> b!66611 (= res!36027 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3785 (_2!1051 lt!28606)) (mask!6080 (_2!1051 lt!28606))))))

(declare-fun b!66612 () Bool)

(assert (=> b!66612 (= e!43699 (arrayNoDuplicates!0 (_keys!3785 (_2!1051 lt!28606)) #b00000000000000000000000000000000 Nil!1464))))

(assert (= (and d!13697 res!36025) b!66610))

(assert (= (and b!66610 res!36026) b!66611))

(assert (= (and b!66611 res!36027) b!66612))

(declare-fun m!60957 () Bool)

(assert (=> d!13697 m!60957))

(declare-fun m!60959 () Bool)

(assert (=> b!66610 m!60959))

(declare-fun m!60961 () Bool)

(assert (=> b!66611 m!60961))

(declare-fun m!60963 () Bool)

(assert (=> b!66612 m!60963))

(assert (=> d!13649 d!13697))

(assert (=> d!13649 d!13673))

(declare-fun d!13699 () Bool)

(declare-fun lt!28747 () Bool)

(assert (=> d!13699 (= lt!28747 (select (content!71 (toList!705 lt!28492)) lt!28408))))

(declare-fun e!43700 () Bool)

(assert (=> d!13699 (= lt!28747 e!43700)))

(declare-fun res!36029 () Bool)

(assert (=> d!13699 (=> (not res!36029) (not e!43700))))

(assert (=> d!13699 (= res!36029 ((_ is Cons!1462) (toList!705 lt!28492)))))

(assert (=> d!13699 (= (contains!707 (toList!705 lt!28492) lt!28408) lt!28747)))

(declare-fun b!66613 () Bool)

(declare-fun e!43701 () Bool)

(assert (=> b!66613 (= e!43700 e!43701)))

(declare-fun res!36028 () Bool)

(assert (=> b!66613 (=> res!36028 e!43701)))

(assert (=> b!66613 (= res!36028 (= (h!2046 (toList!705 lt!28492)) lt!28408))))

(declare-fun b!66614 () Bool)

(assert (=> b!66614 (= e!43701 (contains!707 (t!4939 (toList!705 lt!28492)) lt!28408))))

(assert (= (and d!13699 res!36029) b!66613))

(assert (= (and b!66613 (not res!36028)) b!66614))

(declare-fun m!60965 () Bool)

(assert (=> d!13699 m!60965))

(declare-fun m!60967 () Bool)

(assert (=> d!13699 m!60967))

(declare-fun m!60969 () Bool)

(assert (=> b!66614 m!60969))

(assert (=> b!66246 d!13699))

(declare-fun d!13701 () Bool)

(declare-fun e!43702 () Bool)

(assert (=> d!13701 e!43702))

(declare-fun res!36030 () Bool)

(assert (=> d!13701 (=> (not res!36030) (not e!43702))))

(declare-fun lt!28749 () ListLongMap!1379)

(assert (=> d!13701 (= res!36030 (contains!705 lt!28749 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!28751 () List!1466)

(assert (=> d!13701 (= lt!28749 (ListLongMap!1380 lt!28751))))

(declare-fun lt!28748 () Unit!1818)

(declare-fun lt!28750 () Unit!1818)

(assert (=> d!13701 (= lt!28748 lt!28750)))

(assert (=> d!13701 (= (getValueByKey!128 lt!28751 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13701 (= lt!28750 (lemmaContainsTupThenGetReturnValue!48 lt!28751 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13701 (= lt!28751 (insertStrictlySorted!51 (toList!705 call!5542) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13701 (= (+!87 call!5542 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28749)))

(declare-fun b!66615 () Bool)

(declare-fun res!36031 () Bool)

(assert (=> b!66615 (=> (not res!36031) (not e!43702))))

(assert (=> b!66615 (= res!36031 (= (getValueByKey!128 (toList!705 lt!28749) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!66616 () Bool)

(assert (=> b!66616 (= e!43702 (contains!707 (toList!705 lt!28749) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!13701 res!36030) b!66615))

(assert (= (and b!66615 res!36031) b!66616))

(declare-fun m!60971 () Bool)

(assert (=> d!13701 m!60971))

(declare-fun m!60973 () Bool)

(assert (=> d!13701 m!60973))

(declare-fun m!60975 () Bool)

(assert (=> d!13701 m!60975))

(declare-fun m!60977 () Bool)

(assert (=> d!13701 m!60977))

(declare-fun m!60979 () Bool)

(assert (=> b!66615 m!60979))

(declare-fun m!60981 () Bool)

(assert (=> b!66616 m!60981))

(assert (=> b!66484 d!13701))

(declare-fun d!13703 () Bool)

(assert (=> d!13703 (= (map!1133 (_2!1051 lt!28606)) (getCurrentListMap!401 (_keys!3785 (_2!1051 lt!28606)) (_values!2129 (_2!1051 lt!28606)) (mask!6080 (_2!1051 lt!28606)) (extraKeys!2017 (_2!1051 lt!28606)) (zeroValue!2054 (_2!1051 lt!28606)) (minValue!2054 (_2!1051 lt!28606)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28606))))))

(declare-fun bs!2848 () Bool)

(assert (= bs!2848 d!13703))

(declare-fun m!60983 () Bool)

(assert (=> bs!2848 m!60983))

(assert (=> bm!5512 d!13703))

(assert (=> d!13657 d!13687))

(declare-fun d!13705 () Bool)

(declare-fun c!9194 () Bool)

(assert (=> d!13705 (= c!9194 ((_ is ValueCellFull!881) (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!43703 () V!2913)

(assert (=> d!13705 (= (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!43703)))

(declare-fun b!66617 () Bool)

(assert (=> b!66617 (= e!43703 (get!1121 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66618 () Bool)

(assert (=> b!66618 (= e!43703 (get!1122 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13705 c!9194) b!66617))

(assert (= (and d!13705 (not c!9194)) b!66618))

(assert (=> b!66617 m!60639))

(assert (=> b!66617 m!60465))

(declare-fun m!60985 () Bool)

(assert (=> b!66617 m!60985))

(assert (=> b!66618 m!60639))

(assert (=> b!66618 m!60465))

(declare-fun m!60987 () Bool)

(assert (=> b!66618 m!60987))

(assert (=> b!66275 d!13705))

(declare-fun d!13707 () Bool)

(declare-fun e!43704 () Bool)

(assert (=> d!13707 e!43704))

(declare-fun res!36032 () Bool)

(assert (=> d!13707 (=> res!36032 e!43704)))

(declare-fun lt!28755 () Bool)

(assert (=> d!13707 (= res!36032 (not lt!28755))))

(declare-fun lt!28754 () Bool)

(assert (=> d!13707 (= lt!28755 lt!28754)))

(declare-fun lt!28752 () Unit!1818)

(declare-fun e!43705 () Unit!1818)

(assert (=> d!13707 (= lt!28752 e!43705)))

(declare-fun c!9195 () Bool)

(assert (=> d!13707 (= c!9195 lt!28754)))

(assert (=> d!13707 (= lt!28754 (containsKey!132 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))) lt!28519))))

(assert (=> d!13707 (= (contains!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)) lt!28519) lt!28755)))

(declare-fun b!66619 () Bool)

(declare-fun lt!28753 () Unit!1818)

(assert (=> b!66619 (= e!43705 lt!28753)))

(assert (=> b!66619 (= lt!28753 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))) lt!28519))))

(assert (=> b!66619 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))) lt!28519))))

(declare-fun b!66620 () Bool)

(declare-fun Unit!1832 () Unit!1818)

(assert (=> b!66620 (= e!43705 Unit!1832)))

(declare-fun b!66621 () Bool)

(assert (=> b!66621 (= e!43704 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))) lt!28519)))))

(assert (= (and d!13707 c!9195) b!66619))

(assert (= (and d!13707 (not c!9195)) b!66620))

(assert (= (and d!13707 (not res!36032)) b!66621))

(declare-fun m!60989 () Bool)

(assert (=> d!13707 m!60989))

(declare-fun m!60991 () Bool)

(assert (=> b!66619 m!60991))

(declare-fun m!60993 () Bool)

(assert (=> b!66619 m!60993))

(assert (=> b!66619 m!60993))

(declare-fun m!60995 () Bool)

(assert (=> b!66619 m!60995))

(assert (=> b!66621 m!60993))

(assert (=> b!66621 m!60993))

(assert (=> b!66621 m!60995))

(assert (=> b!66275 d!13707))

(declare-fun d!13709 () Bool)

(assert (=> d!13709 (not (contains!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)) lt!28519))))

(declare-fun lt!28758 () Unit!1818)

(declare-fun choose!374 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64)) Unit!1818)

(assert (=> d!13709 (= lt!28758 (choose!374 lt!28515 lt!28517 lt!28516 lt!28519))))

(declare-fun e!43708 () Bool)

(assert (=> d!13709 e!43708))

(declare-fun res!36035 () Bool)

(assert (=> d!13709 (=> (not res!36035) (not e!43708))))

(assert (=> d!13709 (= res!36035 (not (contains!705 lt!28515 lt!28519)))))

(assert (=> d!13709 (= (addStillNotContains!22 lt!28515 lt!28517 lt!28516 lt!28519) lt!28758)))

(declare-fun b!66625 () Bool)

(assert (=> b!66625 (= e!43708 (not (= lt!28517 lt!28519)))))

(assert (= (and d!13709 res!36035) b!66625))

(assert (=> d!13709 m!60635))

(assert (=> d!13709 m!60635))

(assert (=> d!13709 m!60637))

(declare-fun m!60997 () Bool)

(assert (=> d!13709 m!60997))

(declare-fun m!60999 () Bool)

(assert (=> d!13709 m!60999))

(assert (=> b!66275 d!13709))

(declare-fun d!13711 () Bool)

(declare-fun e!43709 () Bool)

(assert (=> d!13711 e!43709))

(declare-fun res!36036 () Bool)

(assert (=> d!13711 (=> (not res!36036) (not e!43709))))

(declare-fun lt!28760 () ListLongMap!1379)

(assert (=> d!13711 (= res!36036 (contains!705 lt!28760 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!28762 () List!1466)

(assert (=> d!13711 (= lt!28760 (ListLongMap!1380 lt!28762))))

(declare-fun lt!28759 () Unit!1818)

(declare-fun lt!28761 () Unit!1818)

(assert (=> d!13711 (= lt!28759 lt!28761)))

(assert (=> d!13711 (= (getValueByKey!128 lt!28762 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13711 (= lt!28761 (lemmaContainsTupThenGetReturnValue!48 lt!28762 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13711 (= lt!28762 (insertStrictlySorted!51 (toList!705 call!5454) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13711 (= (+!87 call!5454 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!28760)))

(declare-fun b!66626 () Bool)

(declare-fun res!36037 () Bool)

(assert (=> b!66626 (=> (not res!36037) (not e!43709))))

(assert (=> b!66626 (= res!36037 (= (getValueByKey!128 (toList!705 lt!28760) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!66627 () Bool)

(assert (=> b!66627 (= e!43709 (contains!707 (toList!705 lt!28760) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!13711 res!36036) b!66626))

(assert (= (and b!66626 res!36037) b!66627))

(declare-fun m!61001 () Bool)

(assert (=> d!13711 m!61001))

(declare-fun m!61003 () Bool)

(assert (=> d!13711 m!61003))

(declare-fun m!61005 () Bool)

(assert (=> d!13711 m!61005))

(declare-fun m!61007 () Bool)

(assert (=> d!13711 m!61007))

(declare-fun m!61009 () Bool)

(assert (=> b!66626 m!61009))

(declare-fun m!61011 () Bool)

(assert (=> b!66627 m!61011))

(assert (=> b!66275 d!13711))

(declare-fun d!13713 () Bool)

(declare-fun e!43710 () Bool)

(assert (=> d!13713 e!43710))

(declare-fun res!36038 () Bool)

(assert (=> d!13713 (=> (not res!36038) (not e!43710))))

(declare-fun lt!28764 () ListLongMap!1379)

(assert (=> d!13713 (= res!36038 (contains!705 lt!28764 (_1!1052 (tuple2!2083 lt!28517 lt!28516))))))

(declare-fun lt!28766 () List!1466)

(assert (=> d!13713 (= lt!28764 (ListLongMap!1380 lt!28766))))

(declare-fun lt!28763 () Unit!1818)

(declare-fun lt!28765 () Unit!1818)

(assert (=> d!13713 (= lt!28763 lt!28765)))

(assert (=> d!13713 (= (getValueByKey!128 lt!28766 (_1!1052 (tuple2!2083 lt!28517 lt!28516))) (Some!133 (_2!1052 (tuple2!2083 lt!28517 lt!28516))))))

(assert (=> d!13713 (= lt!28765 (lemmaContainsTupThenGetReturnValue!48 lt!28766 (_1!1052 (tuple2!2083 lt!28517 lt!28516)) (_2!1052 (tuple2!2083 lt!28517 lt!28516))))))

(assert (=> d!13713 (= lt!28766 (insertStrictlySorted!51 (toList!705 lt!28515) (_1!1052 (tuple2!2083 lt!28517 lt!28516)) (_2!1052 (tuple2!2083 lt!28517 lt!28516))))))

(assert (=> d!13713 (= (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)) lt!28764)))

(declare-fun b!66628 () Bool)

(declare-fun res!36039 () Bool)

(assert (=> b!66628 (=> (not res!36039) (not e!43710))))

(assert (=> b!66628 (= res!36039 (= (getValueByKey!128 (toList!705 lt!28764) (_1!1052 (tuple2!2083 lt!28517 lt!28516))) (Some!133 (_2!1052 (tuple2!2083 lt!28517 lt!28516)))))))

(declare-fun b!66629 () Bool)

(assert (=> b!66629 (= e!43710 (contains!707 (toList!705 lt!28764) (tuple2!2083 lt!28517 lt!28516)))))

(assert (= (and d!13713 res!36038) b!66628))

(assert (= (and b!66628 res!36039) b!66629))

(declare-fun m!61013 () Bool)

(assert (=> d!13713 m!61013))

(declare-fun m!61015 () Bool)

(assert (=> d!13713 m!61015))

(declare-fun m!61017 () Bool)

(assert (=> d!13713 m!61017))

(declare-fun m!61019 () Bool)

(assert (=> d!13713 m!61019))

(declare-fun m!61021 () Bool)

(assert (=> b!66628 m!61021))

(declare-fun m!61023 () Bool)

(assert (=> b!66629 m!61023))

(assert (=> b!66275 d!13713))

(declare-fun b!66664 () Bool)

(declare-fun res!36061 () Bool)

(declare-fun e!43727 () Bool)

(assert (=> b!66664 (=> (not res!36061) (not e!43727))))

(declare-fun lt!28849 () SeekEntryResult!236)

(assert (=> b!66664 (= res!36061 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3072 lt!28849)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66665 () Bool)

(declare-fun res!36059 () Bool)

(declare-fun e!43732 () Bool)

(assert (=> b!66665 (=> (not res!36059) (not e!43732))))

(declare-fun lt!28833 () tuple2!2080)

(assert (=> b!66665 (= res!36059 (contains!705 (map!1133 (_2!1051 lt!28833)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!66666 () Bool)

(declare-fun e!43734 () Bool)

(assert (=> b!66666 (= e!43734 ((_ is Undefined!236) lt!28849))))

(declare-fun lt!28846 () SeekEntryResult!236)

(declare-fun b!66667 () Bool)

(declare-fun e!43730 () Bool)

(assert (=> b!66667 (= e!43730 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28846)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun call!5573 () Bool)

(declare-fun bm!5567 () Bool)

(assert (=> bm!5567 (= call!5573 (arrayContainsKey!0 (_keys!3785 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!66668 () Bool)

(assert (=> b!66668 (= e!43732 (= (map!1133 (_2!1051 lt!28833)) (+!87 (map!1133 newMap!16) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun d!13715 () Bool)

(assert (=> d!13715 e!43732))

(declare-fun res!36064 () Bool)

(assert (=> d!13715 (=> (not res!36064) (not e!43732))))

(assert (=> d!13715 (= res!36064 (_1!1051 lt!28833))))

(assert (=> d!13715 (= lt!28833 (tuple2!2081 true (LongMapFixedSize!671 (defaultEntry!2146 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (bvadd (_size!384 newMap!16) #b00000000000000000000000000000001) (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (_vacant!384 newMap!16))))))

(declare-fun lt!28832 () Unit!1818)

(declare-fun lt!28842 () Unit!1818)

(assert (=> d!13715 (= lt!28832 lt!28842)))

(declare-fun lt!28845 () array!3819)

(declare-fun lt!28852 () array!3817)

(assert (=> d!13715 (contains!705 (getCurrentListMap!401 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615))))))

(assert (=> d!13715 (= lt!28842 (lemmaValidKeyInArrayIsInListMap!80 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (defaultEntry!2146 newMap!16)))))

(assert (=> d!13715 (= lt!28845 (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))))))

(assert (=> d!13715 (= lt!28852 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun lt!28834 () Unit!1818)

(declare-fun lt!28851 () Unit!1818)

(assert (=> d!13715 (= lt!28834 lt!28851)))

(declare-fun lt!28827 () array!3817)

(assert (=> d!13715 (= (arrayCountValidKeys!0 lt!28827 (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (bvadd (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3817 (_ BitVec 32)) Unit!1818)

(assert (=> d!13715 (= lt!28851 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!28827 (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615))))))

(assert (=> d!13715 (= lt!28827 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun lt!28844 () Unit!1818)

(declare-fun lt!28843 () Unit!1818)

(assert (=> d!13715 (= lt!28844 lt!28843)))

(declare-fun lt!28837 () array!3817)

(assert (=> d!13715 (arrayContainsKey!0 lt!28837 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3817 (_ BitVec 64) (_ BitVec 32)) Unit!1818)

(assert (=> d!13715 (= lt!28843 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!28837 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615))))))

(assert (=> d!13715 (= lt!28837 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun lt!28856 () Unit!1818)

(declare-fun lt!28853 () Unit!1818)

(assert (=> d!13715 (= lt!28856 lt!28853)))

(assert (=> d!13715 (= (+!87 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (getCurrentListMap!401 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!10 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) (_ BitVec 64) V!2913 Int) Unit!1818)

(assert (=> d!13715 (= lt!28853 (lemmaAddValidKeyToArrayThenAddPairToListMap!10 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28855 () Unit!1818)

(declare-fun lt!28831 () Unit!1818)

(assert (=> d!13715 (= lt!28855 lt!28831)))

(assert (=> d!13715 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (mask!6080 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3817 (_ BitVec 32) (_ BitVec 32)) Unit!1818)

(assert (=> d!13715 (= lt!28831 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (mask!6080 newMap!16)))))

(declare-fun lt!28830 () Unit!1818)

(declare-fun lt!28850 () Unit!1818)

(assert (=> d!13715 (= lt!28830 lt!28850)))

(assert (=> d!13715 (= (arrayCountValidKeys!0 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3785 newMap!16) #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3817 (_ BitVec 32) (_ BitVec 64)) Unit!1818)

(assert (=> d!13715 (= lt!28850 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3785 newMap!16) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun lt!28839 () Unit!1818)

(declare-fun lt!28854 () Unit!1818)

(assert (=> d!13715 (= lt!28839 lt!28854)))

(declare-fun lt!28847 () List!1467)

(declare-fun lt!28848 () (_ BitVec 32))

(assert (=> d!13715 (arrayNoDuplicates!0 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) lt!28848 lt!28847)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3817 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1467) Unit!1818)

(assert (=> d!13715 (= lt!28854 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3785 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) lt!28848 lt!28847))))

(assert (=> d!13715 (= lt!28847 Nil!1464)))

(assert (=> d!13715 (= lt!28848 #b00000000000000000000000000000000)))

(declare-fun lt!28840 () Unit!1818)

(declare-fun e!43729 () Unit!1818)

(assert (=> d!13715 (= lt!28840 e!43729)))

(declare-fun c!9207 () Bool)

(assert (=> d!13715 (= c!9207 (arrayContainsKey!0 (_keys!3785 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!28835 () Unit!1818)

(declare-fun e!43731 () Unit!1818)

(assert (=> d!13715 (= lt!28835 e!43731)))

(declare-fun c!9205 () Bool)

(assert (=> d!13715 (= c!9205 (contains!705 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!13715 (valid!287 newMap!16)))

(assert (=> d!13715 (= (updateHelperNewKey!21 newMap!16 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615))) lt!28833)))

(declare-fun b!66669 () Bool)

(declare-fun res!36063 () Bool)

(declare-fun call!5572 () Bool)

(assert (=> b!66669 (= res!36063 call!5572)))

(assert (=> b!66669 (=> (not res!36063) (not e!43730))))

(declare-fun b!66670 () Bool)

(declare-fun res!36062 () Bool)

(assert (=> b!66670 (=> (not res!36062) (not e!43732))))

(assert (=> b!66670 (= res!36062 (valid!287 (_2!1051 lt!28833)))))

(declare-fun bm!5568 () Bool)

(declare-fun c!9204 () Bool)

(assert (=> bm!5568 (= call!5572 (inRange!0 (ite c!9205 (index!3073 lt!28846) (ite c!9204 (index!3072 lt!28849) (index!3075 lt!28849))) (mask!6080 newMap!16)))))

(declare-fun b!66671 () Bool)

(declare-fun res!36060 () Bool)

(assert (=> b!66671 (=> (not res!36060) (not e!43727))))

(declare-fun call!5571 () Bool)

(assert (=> b!66671 (= res!36060 call!5571)))

(declare-fun e!43733 () Bool)

(assert (=> b!66671 (= e!43733 e!43727)))

(declare-fun b!66672 () Bool)

(declare-fun e!43728 () Bool)

(assert (=> b!66672 (= e!43734 e!43728)))

(declare-fun res!36058 () Bool)

(assert (=> b!66672 (= res!36058 call!5571)))

(assert (=> b!66672 (=> (not res!36058) (not e!43728))))

(declare-fun b!66673 () Bool)

(declare-fun lt!28828 () Unit!1818)

(assert (=> b!66673 (= e!43731 lt!28828)))

(assert (=> b!66673 (= lt!28828 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)))))

(declare-fun call!5570 () SeekEntryResult!236)

(assert (=> b!66673 (= lt!28849 call!5570)))

(assert (=> b!66673 (= c!9204 ((_ is MissingZero!236) lt!28849))))

(assert (=> b!66673 e!43733))

(declare-fun bm!5569 () Bool)

(assert (=> bm!5569 (= call!5570 (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(declare-fun bm!5570 () Bool)

(assert (=> bm!5570 (= call!5571 call!5572)))

(declare-fun b!66674 () Bool)

(assert (=> b!66674 (= e!43728 (not call!5573))))

(declare-fun b!66675 () Bool)

(declare-fun Unit!1833 () Unit!1818)

(assert (=> b!66675 (= e!43729 Unit!1833)))

(declare-fun lt!28829 () Unit!1818)

(declare-fun lemmaArrayContainsKeyThenInListMap!10 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) (_ BitVec 32) Int) Unit!1818)

(assert (=> b!66675 (= lt!28829 (lemmaArrayContainsKeyThenInListMap!10 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(assert (=> b!66675 (contains!705 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))

(declare-fun lt!28838 () Unit!1818)

(assert (=> b!66675 (= lt!28838 lt!28829)))

(assert (=> b!66675 false))

(declare-fun b!66676 () Bool)

(declare-fun res!36065 () Bool)

(assert (=> b!66676 (= res!36065 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3075 lt!28849)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66676 (=> (not res!36065) (not e!43728))))

(declare-fun b!66677 () Bool)

(declare-fun Unit!1834 () Unit!1818)

(assert (=> b!66677 (= e!43731 Unit!1834)))

(declare-fun lt!28841 () Unit!1818)

(assert (=> b!66677 (= lt!28841 (lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)))))

(assert (=> b!66677 (= lt!28846 call!5570)))

(declare-fun res!36066 () Bool)

(assert (=> b!66677 (= res!36066 ((_ is Found!236) lt!28846))))

(assert (=> b!66677 (=> (not res!36066) (not e!43730))))

(assert (=> b!66677 e!43730))

(declare-fun lt!28836 () Unit!1818)

(assert (=> b!66677 (= lt!28836 lt!28841)))

(assert (=> b!66677 false))

(declare-fun b!66678 () Bool)

(declare-fun Unit!1835 () Unit!1818)

(assert (=> b!66678 (= e!43729 Unit!1835)))

(declare-fun b!66679 () Bool)

(assert (=> b!66679 (= e!43727 (not call!5573))))

(declare-fun b!66680 () Bool)

(declare-fun c!9206 () Bool)

(assert (=> b!66680 (= c!9206 ((_ is MissingVacant!236) lt!28849))))

(assert (=> b!66680 (= e!43733 e!43734)))

(assert (= (and d!13715 c!9205) b!66677))

(assert (= (and d!13715 (not c!9205)) b!66673))

(assert (= (and b!66677 res!36066) b!66669))

(assert (= (and b!66669 res!36063) b!66667))

(assert (= (and b!66673 c!9204) b!66671))

(assert (= (and b!66673 (not c!9204)) b!66680))

(assert (= (and b!66671 res!36060) b!66664))

(assert (= (and b!66664 res!36061) b!66679))

(assert (= (and b!66680 c!9206) b!66672))

(assert (= (and b!66680 (not c!9206)) b!66666))

(assert (= (and b!66672 res!36058) b!66676))

(assert (= (and b!66676 res!36065) b!66674))

(assert (= (or b!66671 b!66672) bm!5570))

(assert (= (or b!66679 b!66674) bm!5567))

(assert (= (or b!66669 bm!5570) bm!5568))

(assert (= (or b!66677 b!66673) bm!5569))

(assert (= (and d!13715 c!9207) b!66675))

(assert (= (and d!13715 (not c!9207)) b!66678))

(assert (= (and d!13715 res!36064) b!66670))

(assert (= (and b!66670 res!36062) b!66665))

(assert (= (and b!66665 res!36059) b!66668))

(assert (=> b!66673 m!60449))

(assert (=> b!66673 m!60695))

(declare-fun m!61025 () Bool)

(assert (=> bm!5568 m!61025))

(declare-fun m!61027 () Bool)

(assert (=> b!66667 m!61027))

(declare-fun m!61029 () Bool)

(assert (=> b!66664 m!61029))

(assert (=> bm!5569 m!60449))

(assert (=> bm!5569 m!60701))

(declare-fun m!61031 () Bool)

(assert (=> b!66668 m!61031))

(assert (=> b!66668 m!60435))

(assert (=> b!66668 m!60435))

(declare-fun m!61033 () Bool)

(assert (=> b!66668 m!61033))

(declare-fun m!61035 () Bool)

(assert (=> b!66670 m!61035))

(assert (=> b!66677 m!60449))

(assert (=> b!66677 m!60721))

(assert (=> b!66665 m!61031))

(assert (=> b!66665 m!61031))

(assert (=> b!66665 m!60449))

(declare-fun m!61037 () Bool)

(assert (=> b!66665 m!61037))

(declare-fun m!61039 () Bool)

(assert (=> b!66676 m!61039))

(assert (=> bm!5567 m!60449))

(assert (=> bm!5567 m!60729))

(assert (=> d!13715 m!60449))

(declare-fun m!61041 () Bool)

(assert (=> d!13715 m!61041))

(assert (=> d!13715 m!60441))

(declare-fun m!61043 () Bool)

(assert (=> d!13715 m!61043))

(assert (=> d!13715 m!60697))

(assert (=> d!13715 m!60449))

(declare-fun m!61045 () Bool)

(assert (=> d!13715 m!61045))

(assert (=> d!13715 m!60449))

(declare-fun m!61047 () Bool)

(assert (=> d!13715 m!61047))

(assert (=> d!13715 m!60449))

(declare-fun m!61049 () Bool)

(assert (=> d!13715 m!61049))

(assert (=> d!13715 m!60449))

(declare-fun m!61051 () Bool)

(assert (=> d!13715 m!61051))

(assert (=> d!13715 m!60819))

(declare-fun m!61053 () Bool)

(assert (=> d!13715 m!61053))

(declare-fun m!61055 () Bool)

(assert (=> d!13715 m!61055))

(declare-fun m!61057 () Bool)

(assert (=> d!13715 m!61057))

(declare-fun m!61059 () Bool)

(assert (=> d!13715 m!61059))

(declare-fun m!61061 () Bool)

(assert (=> d!13715 m!61061))

(assert (=> d!13715 m!60449))

(declare-fun m!61063 () Bool)

(assert (=> d!13715 m!61063))

(assert (=> d!13715 m!60697))

(declare-fun m!61065 () Bool)

(assert (=> d!13715 m!61065))

(declare-fun m!61067 () Bool)

(assert (=> d!13715 m!61067))

(declare-fun m!61069 () Bool)

(assert (=> d!13715 m!61069))

(declare-fun m!61071 () Bool)

(assert (=> d!13715 m!61071))

(assert (=> d!13715 m!60449))

(assert (=> d!13715 m!60729))

(declare-fun m!61073 () Bool)

(assert (=> d!13715 m!61073))

(declare-fun m!61075 () Bool)

(assert (=> d!13715 m!61075))

(assert (=> d!13715 m!61059))

(assert (=> d!13715 m!61057))

(assert (=> d!13715 m!60449))

(declare-fun m!61077 () Bool)

(assert (=> d!13715 m!61077))

(assert (=> d!13715 m!60697))

(declare-fun m!61079 () Bool)

(assert (=> d!13715 m!61079))

(assert (=> b!66675 m!60449))

(declare-fun m!61081 () Bool)

(assert (=> b!66675 m!61081))

(assert (=> b!66675 m!60697))

(assert (=> b!66675 m!60697))

(assert (=> b!66675 m!60449))

(assert (=> b!66675 m!61045))

(assert (=> bm!5501 d!13715))

(declare-fun d!13717 () Bool)

(assert (=> d!13717 (= (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66492 d!13717))

(declare-fun d!13719 () Bool)

(declare-fun e!43735 () Bool)

(assert (=> d!13719 e!43735))

(declare-fun res!36067 () Bool)

(assert (=> d!13719 (=> (not res!36067) (not e!43735))))

(declare-fun lt!28858 () ListLongMap!1379)

(assert (=> d!13719 (= res!36067 (contains!705 lt!28858 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun lt!28860 () List!1466)

(assert (=> d!13719 (= lt!28858 (ListLongMap!1380 lt!28860))))

(declare-fun lt!28857 () Unit!1818)

(declare-fun lt!28859 () Unit!1818)

(assert (=> d!13719 (= lt!28857 lt!28859)))

(assert (=> d!13719 (= (getValueByKey!128 lt!28860 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) (Some!133 (_2!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!13719 (= lt!28859 (lemmaContainsTupThenGetReturnValue!48 lt!28860 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (_2!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!13719 (= lt!28860 (insertStrictlySorted!51 (toList!705 e!43575) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (_2!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!13719 (= (+!87 e!43575 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) lt!28858)))

(declare-fun b!66681 () Bool)

(declare-fun res!36068 () Bool)

(assert (=> b!66681 (=> (not res!36068) (not e!43735))))

(assert (=> b!66681 (= res!36068 (= (getValueByKey!128 (toList!705 lt!28858) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) (Some!133 (_2!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(declare-fun b!66682 () Bool)

(assert (=> b!66682 (= e!43735 (contains!707 (toList!705 lt!28858) (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (= (and d!13719 res!36067) b!66681))

(assert (= (and b!66681 res!36068) b!66682))

(declare-fun m!61083 () Bool)

(assert (=> d!13719 m!61083))

(declare-fun m!61085 () Bool)

(assert (=> d!13719 m!61085))

(declare-fun m!61087 () Bool)

(assert (=> d!13719 m!61087))

(declare-fun m!61089 () Bool)

(assert (=> d!13719 m!61089))

(declare-fun m!61091 () Bool)

(assert (=> b!66681 m!61091))

(declare-fun m!61093 () Bool)

(assert (=> b!66682 m!61093))

(assert (=> bm!5523 d!13719))

(declare-fun d!13721 () Bool)

(assert (=> d!13721 (= (get!1121 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2468 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> b!66428 d!13721))

(assert (=> b!66393 d!13687))

(declare-fun d!13723 () Bool)

(declare-fun lt!28861 () Bool)

(assert (=> d!13723 (= lt!28861 (select (content!71 (toList!705 lt!28521)) lt!28403))))

(declare-fun e!43736 () Bool)

(assert (=> d!13723 (= lt!28861 e!43736)))

(declare-fun res!36070 () Bool)

(assert (=> d!13723 (=> (not res!36070) (not e!43736))))

(assert (=> d!13723 (= res!36070 ((_ is Cons!1462) (toList!705 lt!28521)))))

(assert (=> d!13723 (= (contains!707 (toList!705 lt!28521) lt!28403) lt!28861)))

(declare-fun b!66683 () Bool)

(declare-fun e!43737 () Bool)

(assert (=> b!66683 (= e!43736 e!43737)))

(declare-fun res!36069 () Bool)

(assert (=> b!66683 (=> res!36069 e!43737)))

(assert (=> b!66683 (= res!36069 (= (h!2046 (toList!705 lt!28521)) lt!28403))))

(declare-fun b!66684 () Bool)

(assert (=> b!66684 (= e!43737 (contains!707 (t!4939 (toList!705 lt!28521)) lt!28403))))

(assert (= (and d!13723 res!36070) b!66683))

(assert (= (and b!66683 (not res!36069)) b!66684))

(declare-fun m!61095 () Bool)

(assert (=> d!13723 m!61095))

(declare-fun m!61097 () Bool)

(assert (=> d!13723 m!61097))

(declare-fun m!61099 () Bool)

(assert (=> b!66684 m!61099))

(assert (=> b!66286 d!13723))

(declare-fun d!13725 () Bool)

(declare-fun e!43740 () Bool)

(assert (=> d!13725 e!43740))

(declare-fun c!9210 () Bool)

(assert (=> d!13725 (= c!9210 (and (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!13725 true))

(declare-fun _$29!81 () Unit!1818)

(assert (=> d!13725 (= (choose!373 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))) _$29!81)))

(declare-fun b!66689 () Bool)

(assert (=> b!66689 (= e!43740 (arrayContainsKey!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!66690 () Bool)

(assert (=> b!66690 (= e!43740 (ite (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!13725 c!9210) b!66689))

(assert (= (and d!13725 (not c!9210)) b!66690))

(assert (=> b!66689 m!60449))

(assert (=> b!66689 m!60479))

(assert (=> d!13667 d!13725))

(assert (=> d!13667 d!13645))

(declare-fun d!13727 () Bool)

(declare-fun e!43741 () Bool)

(assert (=> d!13727 e!43741))

(declare-fun res!36071 () Bool)

(assert (=> d!13727 (=> res!36071 e!43741)))

(declare-fun lt!28865 () Bool)

(assert (=> d!13727 (= res!36071 (not lt!28865))))

(declare-fun lt!28864 () Bool)

(assert (=> d!13727 (= lt!28865 lt!28864)))

(declare-fun lt!28862 () Unit!1818)

(declare-fun e!43742 () Unit!1818)

(assert (=> d!13727 (= lt!28862 e!43742)))

(declare-fun c!9211 () Bool)

(assert (=> d!13727 (= c!9211 lt!28864)))

(assert (=> d!13727 (= lt!28864 (containsKey!132 (toList!705 lt!28513) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13727 (= (contains!705 lt!28513 #b0000000000000000000000000000000000000000000000000000000000000000) lt!28865)))

(declare-fun b!66691 () Bool)

(declare-fun lt!28863 () Unit!1818)

(assert (=> b!66691 (= e!43742 lt!28863)))

(assert (=> b!66691 (= lt!28863 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28513) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66691 (isDefined!82 (getValueByKey!128 (toList!705 lt!28513) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66692 () Bool)

(declare-fun Unit!1836 () Unit!1818)

(assert (=> b!66692 (= e!43742 Unit!1836)))

(declare-fun b!66693 () Bool)

(assert (=> b!66693 (= e!43741 (isDefined!82 (getValueByKey!128 (toList!705 lt!28513) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13727 c!9211) b!66691))

(assert (= (and d!13727 (not c!9211)) b!66692))

(assert (= (and d!13727 (not res!36071)) b!66693))

(declare-fun m!61101 () Bool)

(assert (=> d!13727 m!61101))

(declare-fun m!61103 () Bool)

(assert (=> b!66691 m!61103))

(declare-fun m!61105 () Bool)

(assert (=> b!66691 m!61105))

(assert (=> b!66691 m!61105))

(declare-fun m!61107 () Bool)

(assert (=> b!66691 m!61107))

(assert (=> b!66693 m!61105))

(assert (=> b!66693 m!61105))

(assert (=> b!66693 m!61107))

(assert (=> d!13637 d!13727))

(assert (=> d!13637 d!13645))

(declare-fun d!13729 () Bool)

(declare-fun res!36076 () Bool)

(declare-fun e!43747 () Bool)

(assert (=> d!13729 (=> res!36076 e!43747)))

(assert (=> d!13729 (= res!36076 (and ((_ is Cons!1462) (toList!705 lt!28404)) (= (_1!1052 (h!2046 (toList!705 lt!28404))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (=> d!13729 (= (containsKey!132 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) e!43747)))

(declare-fun b!66698 () Bool)

(declare-fun e!43748 () Bool)

(assert (=> b!66698 (= e!43747 e!43748)))

(declare-fun res!36077 () Bool)

(assert (=> b!66698 (=> (not res!36077) (not e!43748))))

(assert (=> b!66698 (= res!36077 (and (or (not ((_ is Cons!1462) (toList!705 lt!28404))) (bvsle (_1!1052 (h!2046 (toList!705 lt!28404))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))) ((_ is Cons!1462) (toList!705 lt!28404)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28404))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(declare-fun b!66699 () Bool)

(assert (=> b!66699 (= e!43748 (containsKey!132 (t!4939 (toList!705 lt!28404)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (= (and d!13729 (not res!36076)) b!66698))

(assert (= (and b!66698 res!36077) b!66699))

(assert (=> b!66699 m!60449))

(declare-fun m!61109 () Bool)

(assert (=> b!66699 m!61109))

(assert (=> d!13647 d!13729))

(assert (=> b!66273 d!13695))

(declare-fun d!13731 () Bool)

(declare-fun e!43749 () Bool)

(assert (=> d!13731 e!43749))

(declare-fun res!36078 () Bool)

(assert (=> d!13731 (=> res!36078 e!43749)))

(declare-fun lt!28869 () Bool)

(assert (=> d!13731 (= res!36078 (not lt!28869))))

(declare-fun lt!28868 () Bool)

(assert (=> d!13731 (= lt!28869 lt!28868)))

(declare-fun lt!28866 () Unit!1818)

(declare-fun e!43750 () Unit!1818)

(assert (=> d!13731 (= lt!28866 e!43750)))

(declare-fun c!9212 () Bool)

(assert (=> d!13731 (= c!9212 lt!28868)))

(assert (=> d!13731 (= lt!28868 (containsKey!132 (toList!705 lt!28496) (_1!1052 lt!28408)))))

(assert (=> d!13731 (= (contains!705 lt!28496 (_1!1052 lt!28408)) lt!28869)))

(declare-fun b!66700 () Bool)

(declare-fun lt!28867 () Unit!1818)

(assert (=> b!66700 (= e!43750 lt!28867)))

(assert (=> b!66700 (= lt!28867 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28496) (_1!1052 lt!28408)))))

(assert (=> b!66700 (isDefined!82 (getValueByKey!128 (toList!705 lt!28496) (_1!1052 lt!28408)))))

(declare-fun b!66701 () Bool)

(declare-fun Unit!1837 () Unit!1818)

(assert (=> b!66701 (= e!43750 Unit!1837)))

(declare-fun b!66702 () Bool)

(assert (=> b!66702 (= e!43749 (isDefined!82 (getValueByKey!128 (toList!705 lt!28496) (_1!1052 lt!28408))))))

(assert (= (and d!13731 c!9212) b!66700))

(assert (= (and d!13731 (not c!9212)) b!66701))

(assert (= (and d!13731 (not res!36078)) b!66702))

(declare-fun m!61111 () Bool)

(assert (=> d!13731 m!61111))

(declare-fun m!61113 () Bool)

(assert (=> b!66700 m!61113))

(assert (=> b!66700 m!60621))

(assert (=> b!66700 m!60621))

(declare-fun m!61115 () Bool)

(assert (=> b!66700 m!61115))

(assert (=> b!66702 m!60621))

(assert (=> b!66702 m!60621))

(assert (=> b!66702 m!61115))

(assert (=> d!13635 d!13731))

(declare-fun b!66714 () Bool)

(declare-fun e!43756 () Option!134)

(assert (=> b!66714 (= e!43756 None!132)))

(declare-fun b!66713 () Bool)

(assert (=> b!66713 (= e!43756 (getValueByKey!128 (t!4939 lt!28498) (_1!1052 lt!28408)))))

(declare-fun b!66711 () Bool)

(declare-fun e!43755 () Option!134)

(assert (=> b!66711 (= e!43755 (Some!133 (_2!1052 (h!2046 lt!28498))))))

(declare-fun d!13733 () Bool)

(declare-fun c!9217 () Bool)

(assert (=> d!13733 (= c!9217 (and ((_ is Cons!1462) lt!28498) (= (_1!1052 (h!2046 lt!28498)) (_1!1052 lt!28408))))))

(assert (=> d!13733 (= (getValueByKey!128 lt!28498 (_1!1052 lt!28408)) e!43755)))

(declare-fun b!66712 () Bool)

(assert (=> b!66712 (= e!43755 e!43756)))

(declare-fun c!9218 () Bool)

(assert (=> b!66712 (= c!9218 (and ((_ is Cons!1462) lt!28498) (not (= (_1!1052 (h!2046 lt!28498)) (_1!1052 lt!28408)))))))

(assert (= (and d!13733 c!9217) b!66711))

(assert (= (and d!13733 (not c!9217)) b!66712))

(assert (= (and b!66712 c!9218) b!66713))

(assert (= (and b!66712 (not c!9218)) b!66714))

(declare-fun m!61117 () Bool)

(assert (=> b!66713 m!61117))

(assert (=> d!13635 d!13733))

(declare-fun d!13735 () Bool)

(assert (=> d!13735 (= (getValueByKey!128 lt!28498 (_1!1052 lt!28408)) (Some!133 (_2!1052 lt!28408)))))

(declare-fun lt!28872 () Unit!1818)

(declare-fun choose!375 (List!1466 (_ BitVec 64) V!2913) Unit!1818)

(assert (=> d!13735 (= lt!28872 (choose!375 lt!28498 (_1!1052 lt!28408) (_2!1052 lt!28408)))))

(declare-fun e!43759 () Bool)

(assert (=> d!13735 e!43759))

(declare-fun res!36083 () Bool)

(assert (=> d!13735 (=> (not res!36083) (not e!43759))))

(declare-fun isStrictlySorted!284 (List!1466) Bool)

(assert (=> d!13735 (= res!36083 (isStrictlySorted!284 lt!28498))))

(assert (=> d!13735 (= (lemmaContainsTupThenGetReturnValue!48 lt!28498 (_1!1052 lt!28408) (_2!1052 lt!28408)) lt!28872)))

(declare-fun b!66719 () Bool)

(declare-fun res!36084 () Bool)

(assert (=> b!66719 (=> (not res!36084) (not e!43759))))

(assert (=> b!66719 (= res!36084 (containsKey!132 lt!28498 (_1!1052 lt!28408)))))

(declare-fun b!66720 () Bool)

(assert (=> b!66720 (= e!43759 (contains!707 lt!28498 (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(assert (= (and d!13735 res!36083) b!66719))

(assert (= (and b!66719 res!36084) b!66720))

(assert (=> d!13735 m!60615))

(declare-fun m!61119 () Bool)

(assert (=> d!13735 m!61119))

(declare-fun m!61121 () Bool)

(assert (=> d!13735 m!61121))

(declare-fun m!61123 () Bool)

(assert (=> b!66719 m!61123))

(declare-fun m!61125 () Bool)

(assert (=> b!66720 m!61125))

(assert (=> d!13635 d!13735))

(declare-fun bm!5577 () Bool)

(declare-fun call!5581 () List!1466)

(declare-fun call!5582 () List!1466)

(assert (=> bm!5577 (= call!5581 call!5582)))

(declare-fun d!13737 () Bool)

(declare-fun e!43771 () Bool)

(assert (=> d!13737 e!43771))

(declare-fun res!36090 () Bool)

(assert (=> d!13737 (=> (not res!36090) (not e!43771))))

(declare-fun lt!28875 () List!1466)

(assert (=> d!13737 (= res!36090 (isStrictlySorted!284 lt!28875))))

(declare-fun e!43772 () List!1466)

(assert (=> d!13737 (= lt!28875 e!43772)))

(declare-fun c!9228 () Bool)

(assert (=> d!13737 (= c!9228 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28402 lt!28403))) (bvslt (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 lt!28403)))) (_1!1052 lt!28408))))))

(assert (=> d!13737 (isStrictlySorted!284 (toList!705 (+!87 lt!28402 lt!28403)))))

(assert (=> d!13737 (= (insertStrictlySorted!51 (toList!705 (+!87 lt!28402 lt!28403)) (_1!1052 lt!28408) (_2!1052 lt!28408)) lt!28875)))

(declare-fun c!9227 () Bool)

(declare-fun b!66741 () Bool)

(assert (=> b!66741 (= c!9227 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28402 lt!28403))) (bvsgt (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 lt!28403)))) (_1!1052 lt!28408))))))

(declare-fun e!43773 () List!1466)

(declare-fun e!43770 () List!1466)

(assert (=> b!66741 (= e!43773 e!43770)))

(declare-fun b!66742 () Bool)

(declare-fun c!9230 () Bool)

(declare-fun e!43774 () List!1466)

(assert (=> b!66742 (= e!43774 (ite c!9230 (t!4939 (toList!705 (+!87 lt!28402 lt!28403))) (ite c!9227 (Cons!1462 (h!2046 (toList!705 (+!87 lt!28402 lt!28403))) (t!4939 (toList!705 (+!87 lt!28402 lt!28403)))) Nil!1463)))))

(declare-fun b!66743 () Bool)

(assert (=> b!66743 (= e!43772 e!43773)))

(assert (=> b!66743 (= c!9230 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28402 lt!28403))) (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 lt!28403)))) (_1!1052 lt!28408))))))

(declare-fun bm!5578 () Bool)

(declare-fun call!5580 () List!1466)

(assert (=> bm!5578 (= call!5582 call!5580)))

(declare-fun b!66744 () Bool)

(assert (=> b!66744 (= e!43774 (insertStrictlySorted!51 (t!4939 (toList!705 (+!87 lt!28402 lt!28403))) (_1!1052 lt!28408) (_2!1052 lt!28408)))))

(declare-fun b!66745 () Bool)

(assert (=> b!66745 (= e!43771 (contains!707 lt!28875 (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(declare-fun b!66746 () Bool)

(assert (=> b!66746 (= e!43773 call!5582)))

(declare-fun b!66747 () Bool)

(assert (=> b!66747 (= e!43772 call!5580)))

(declare-fun b!66748 () Bool)

(declare-fun res!36089 () Bool)

(assert (=> b!66748 (=> (not res!36089) (not e!43771))))

(assert (=> b!66748 (= res!36089 (containsKey!132 lt!28875 (_1!1052 lt!28408)))))

(declare-fun b!66749 () Bool)

(assert (=> b!66749 (= e!43770 call!5581)))

(declare-fun b!66750 () Bool)

(assert (=> b!66750 (= e!43770 call!5581)))

(declare-fun bm!5579 () Bool)

(declare-fun $colon$colon!62 (List!1466 tuple2!2082) List!1466)

(assert (=> bm!5579 (= call!5580 ($colon$colon!62 e!43774 (ite c!9228 (h!2046 (toList!705 (+!87 lt!28402 lt!28403))) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408)))))))

(declare-fun c!9229 () Bool)

(assert (=> bm!5579 (= c!9229 c!9228)))

(assert (= (and d!13737 c!9228) b!66747))

(assert (= (and d!13737 (not c!9228)) b!66743))

(assert (= (and b!66743 c!9230) b!66746))

(assert (= (and b!66743 (not c!9230)) b!66741))

(assert (= (and b!66741 c!9227) b!66750))

(assert (= (and b!66741 (not c!9227)) b!66749))

(assert (= (or b!66750 b!66749) bm!5577))

(assert (= (or b!66746 bm!5577) bm!5578))

(assert (= (or b!66747 bm!5578) bm!5579))

(assert (= (and bm!5579 c!9229) b!66744))

(assert (= (and bm!5579 (not c!9229)) b!66742))

(assert (= (and d!13737 res!36090) b!66748))

(assert (= (and b!66748 res!36089) b!66745))

(declare-fun m!61127 () Bool)

(assert (=> d!13737 m!61127))

(declare-fun m!61129 () Bool)

(assert (=> d!13737 m!61129))

(declare-fun m!61131 () Bool)

(assert (=> b!66748 m!61131))

(declare-fun m!61133 () Bool)

(assert (=> b!66745 m!61133))

(declare-fun m!61135 () Bool)

(assert (=> bm!5579 m!61135))

(declare-fun m!61137 () Bool)

(assert (=> b!66744 m!61137))

(assert (=> d!13635 d!13737))

(declare-fun d!13739 () Bool)

(declare-fun e!43775 () Bool)

(assert (=> d!13739 e!43775))

(declare-fun res!36091 () Bool)

(assert (=> d!13739 (=> (not res!36091) (not e!43775))))

(declare-fun lt!28877 () ListLongMap!1379)

(assert (=> d!13739 (= res!36091 (contains!705 lt!28877 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!28879 () List!1466)

(assert (=> d!13739 (= lt!28877 (ListLongMap!1380 lt!28879))))

(declare-fun lt!28876 () Unit!1818)

(declare-fun lt!28878 () Unit!1818)

(assert (=> d!13739 (= lt!28876 lt!28878)))

(assert (=> d!13739 (= (getValueByKey!128 lt!28879 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13739 (= lt!28878 (lemmaContainsTupThenGetReturnValue!48 lt!28879 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13739 (= lt!28879 (insertStrictlySorted!51 (toList!705 lt!28673) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13739 (= (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28877)))

(declare-fun b!66751 () Bool)

(declare-fun res!36092 () Bool)

(assert (=> b!66751 (=> (not res!36092) (not e!43775))))

(assert (=> b!66751 (= res!36092 (= (getValueByKey!128 (toList!705 lt!28877) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!66752 () Bool)

(assert (=> b!66752 (= e!43775 (contains!707 (toList!705 lt!28877) (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!13739 res!36091) b!66751))

(assert (= (and b!66751 res!36092) b!66752))

(declare-fun m!61139 () Bool)

(assert (=> d!13739 m!61139))

(declare-fun m!61141 () Bool)

(assert (=> d!13739 m!61141))

(declare-fun m!61143 () Bool)

(assert (=> d!13739 m!61143))

(declare-fun m!61145 () Bool)

(assert (=> d!13739 m!61145))

(declare-fun m!61147 () Bool)

(assert (=> b!66751 m!61147))

(declare-fun m!61149 () Bool)

(assert (=> b!66752 m!61149))

(assert (=> b!66478 d!13739))

(declare-fun d!13741 () Bool)

(declare-fun e!43776 () Bool)

(assert (=> d!13741 e!43776))

(declare-fun res!36093 () Bool)

(assert (=> d!13741 (=> (not res!36093) (not e!43776))))

(declare-fun lt!28881 () ListLongMap!1379)

(assert (=> d!13741 (= res!36093 (contains!705 lt!28881 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!28883 () List!1466)

(assert (=> d!13741 (= lt!28881 (ListLongMap!1380 lt!28883))))

(declare-fun lt!28880 () Unit!1818)

(declare-fun lt!28882 () Unit!1818)

(assert (=> d!13741 (= lt!28880 lt!28882)))

(assert (=> d!13741 (= (getValueByKey!128 lt!28883 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13741 (= lt!28882 (lemmaContainsTupThenGetReturnValue!48 lt!28883 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13741 (= lt!28883 (insertStrictlySorted!51 (toList!705 lt!28670) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13741 (= (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28881)))

(declare-fun b!66753 () Bool)

(declare-fun res!36094 () Bool)

(assert (=> b!66753 (=> (not res!36094) (not e!43776))))

(assert (=> b!66753 (= res!36094 (= (getValueByKey!128 (toList!705 lt!28881) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!66754 () Bool)

(assert (=> b!66754 (= e!43776 (contains!707 (toList!705 lt!28881) (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!13741 res!36093) b!66753))

(assert (= (and b!66753 res!36094) b!66754))

(declare-fun m!61151 () Bool)

(assert (=> d!13741 m!61151))

(declare-fun m!61153 () Bool)

(assert (=> d!13741 m!61153))

(declare-fun m!61155 () Bool)

(assert (=> d!13741 m!61155))

(declare-fun m!61157 () Bool)

(assert (=> d!13741 m!61157))

(declare-fun m!61159 () Bool)

(assert (=> b!66753 m!61159))

(declare-fun m!61161 () Bool)

(assert (=> b!66754 m!61161))

(assert (=> b!66478 d!13741))

(declare-fun d!13743 () Bool)

(assert (=> d!13743 (contains!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28685)))

(declare-fun lt!28886 () Unit!1818)

(declare-fun choose!376 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64)) Unit!1818)

(assert (=> d!13743 (= lt!28886 (choose!376 lt!28673 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28685))))

(assert (=> d!13743 (contains!705 lt!28673 lt!28685)))

(assert (=> d!13743 (= (addStillContains!48 lt!28673 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28685) lt!28886)))

(declare-fun bs!2849 () Bool)

(assert (= bs!2849 d!13743))

(assert (=> bs!2849 m!60759))

(assert (=> bs!2849 m!60759))

(assert (=> bs!2849 m!60761))

(declare-fun m!61163 () Bool)

(assert (=> bs!2849 m!61163))

(declare-fun m!61165 () Bool)

(assert (=> bs!2849 m!61165))

(assert (=> b!66478 d!13743))

(declare-fun d!13745 () Bool)

(assert (=> d!13745 (= (apply!72 lt!28670 lt!28668) (get!1123 (getValueByKey!128 (toList!705 lt!28670) lt!28668)))))

(declare-fun bs!2850 () Bool)

(assert (= bs!2850 d!13745))

(declare-fun m!61167 () Bool)

(assert (=> bs!2850 m!61167))

(assert (=> bs!2850 m!61167))

(declare-fun m!61169 () Bool)

(assert (=> bs!2850 m!61169))

(assert (=> b!66478 d!13745))

(declare-fun d!13747 () Bool)

(assert (=> d!13747 (= (apply!72 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28681) (apply!72 lt!28677 lt!28681))))

(declare-fun lt!28889 () Unit!1818)

(declare-fun choose!377 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64)) Unit!1818)

(assert (=> d!13747 (= lt!28889 (choose!377 lt!28677 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28681))))

(declare-fun e!43779 () Bool)

(assert (=> d!13747 e!43779))

(declare-fun res!36097 () Bool)

(assert (=> d!13747 (=> (not res!36097) (not e!43779))))

(assert (=> d!13747 (= res!36097 (contains!705 lt!28677 lt!28681))))

(assert (=> d!13747 (= (addApplyDifferent!48 lt!28677 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28681) lt!28889)))

(declare-fun b!66759 () Bool)

(assert (=> b!66759 (= e!43779 (not (= lt!28681 lt!28680)))))

(assert (= (and d!13747 res!36097) b!66759))

(assert (=> d!13747 m!60767))

(assert (=> d!13747 m!60771))

(declare-fun m!61171 () Bool)

(assert (=> d!13747 m!61171))

(assert (=> d!13747 m!60767))

(assert (=> d!13747 m!60769))

(declare-fun m!61173 () Bool)

(assert (=> d!13747 m!61173))

(assert (=> b!66478 d!13747))

(declare-fun d!13749 () Bool)

(declare-fun e!43780 () Bool)

(assert (=> d!13749 e!43780))

(declare-fun res!36098 () Bool)

(assert (=> d!13749 (=> (not res!36098) (not e!43780))))

(declare-fun lt!28891 () ListLongMap!1379)

(assert (=> d!13749 (= res!36098 (contains!705 lt!28891 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!28893 () List!1466)

(assert (=> d!13749 (= lt!28891 (ListLongMap!1380 lt!28893))))

(declare-fun lt!28890 () Unit!1818)

(declare-fun lt!28892 () Unit!1818)

(assert (=> d!13749 (= lt!28890 lt!28892)))

(assert (=> d!13749 (= (getValueByKey!128 lt!28893 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13749 (= lt!28892 (lemmaContainsTupThenGetReturnValue!48 lt!28893 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13749 (= lt!28893 (insertStrictlySorted!51 (toList!705 lt!28679) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13749 (= (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28891)))

(declare-fun b!66760 () Bool)

(declare-fun res!36099 () Bool)

(assert (=> b!66760 (=> (not res!36099) (not e!43780))))

(assert (=> b!66760 (= res!36099 (= (getValueByKey!128 (toList!705 lt!28891) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!66761 () Bool)

(assert (=> b!66761 (= e!43780 (contains!707 (toList!705 lt!28891) (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!13749 res!36098) b!66760))

(assert (= (and b!66760 res!36099) b!66761))

(declare-fun m!61175 () Bool)

(assert (=> d!13749 m!61175))

(declare-fun m!61177 () Bool)

(assert (=> d!13749 m!61177))

(declare-fun m!61179 () Bool)

(assert (=> d!13749 m!61179))

(declare-fun m!61181 () Bool)

(assert (=> d!13749 m!61181))

(declare-fun m!61183 () Bool)

(assert (=> b!66760 m!61183))

(declare-fun m!61185 () Bool)

(assert (=> b!66761 m!61185))

(assert (=> b!66478 d!13749))

(declare-fun d!13751 () Bool)

(assert (=> d!13751 (= (apply!72 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28668) (apply!72 lt!28670 lt!28668))))

(declare-fun lt!28894 () Unit!1818)

(assert (=> d!13751 (= lt!28894 (choose!377 lt!28670 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28668))))

(declare-fun e!43781 () Bool)

(assert (=> d!13751 e!43781))

(declare-fun res!36100 () Bool)

(assert (=> d!13751 (=> (not res!36100) (not e!43781))))

(assert (=> d!13751 (= res!36100 (contains!705 lt!28670 lt!28668))))

(assert (=> d!13751 (= (addApplyDifferent!48 lt!28670 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28668) lt!28894)))

(declare-fun b!66762 () Bool)

(assert (=> b!66762 (= e!43781 (not (= lt!28668 lt!28674)))))

(assert (= (and d!13751 res!36100) b!66762))

(assert (=> d!13751 m!60777))

(assert (=> d!13751 m!60779))

(declare-fun m!61187 () Bool)

(assert (=> d!13751 m!61187))

(assert (=> d!13751 m!60777))

(assert (=> d!13751 m!60783))

(declare-fun m!61189 () Bool)

(assert (=> d!13751 m!61189))

(assert (=> b!66478 d!13751))

(declare-fun d!13753 () Bool)

(assert (=> d!13753 (= (apply!72 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28684) (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28684)))))

(declare-fun bs!2851 () Bool)

(assert (= bs!2851 d!13753))

(declare-fun m!61191 () Bool)

(assert (=> bs!2851 m!61191))

(assert (=> bs!2851 m!61191))

(declare-fun m!61193 () Bool)

(assert (=> bs!2851 m!61193))

(assert (=> b!66478 d!13753))

(declare-fun d!13755 () Bool)

(assert (=> d!13755 (= (apply!72 lt!28677 lt!28681) (get!1123 (getValueByKey!128 (toList!705 lt!28677) lt!28681)))))

(declare-fun bs!2852 () Bool)

(assert (= bs!2852 d!13755))

(declare-fun m!61195 () Bool)

(assert (=> bs!2852 m!61195))

(assert (=> bs!2852 m!61195))

(declare-fun m!61197 () Bool)

(assert (=> bs!2852 m!61197))

(assert (=> b!66478 d!13755))

(declare-fun d!13757 () Bool)

(declare-fun e!43782 () Bool)

(assert (=> d!13757 e!43782))

(declare-fun res!36101 () Bool)

(assert (=> d!13757 (=> res!36101 e!43782)))

(declare-fun lt!28898 () Bool)

(assert (=> d!13757 (= res!36101 (not lt!28898))))

(declare-fun lt!28897 () Bool)

(assert (=> d!13757 (= lt!28898 lt!28897)))

(declare-fun lt!28895 () Unit!1818)

(declare-fun e!43783 () Unit!1818)

(assert (=> d!13757 (= lt!28895 e!43783)))

(declare-fun c!9231 () Bool)

(assert (=> d!13757 (= c!9231 lt!28897)))

(assert (=> d!13757 (= lt!28897 (containsKey!132 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28685))))

(assert (=> d!13757 (= (contains!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28685) lt!28898)))

(declare-fun b!66763 () Bool)

(declare-fun lt!28896 () Unit!1818)

(assert (=> b!66763 (= e!43783 lt!28896)))

(assert (=> b!66763 (= lt!28896 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28685))))

(assert (=> b!66763 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28685))))

(declare-fun b!66764 () Bool)

(declare-fun Unit!1838 () Unit!1818)

(assert (=> b!66764 (= e!43783 Unit!1838)))

(declare-fun b!66765 () Bool)

(assert (=> b!66765 (= e!43782 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28685)))))

(assert (= (and d!13757 c!9231) b!66763))

(assert (= (and d!13757 (not c!9231)) b!66764))

(assert (= (and d!13757 (not res!36101)) b!66765))

(declare-fun m!61199 () Bool)

(assert (=> d!13757 m!61199))

(declare-fun m!61201 () Bool)

(assert (=> b!66763 m!61201))

(declare-fun m!61203 () Bool)

(assert (=> b!66763 m!61203))

(assert (=> b!66763 m!61203))

(declare-fun m!61205 () Bool)

(assert (=> b!66763 m!61205))

(assert (=> b!66765 m!61203))

(assert (=> b!66765 m!61203))

(assert (=> b!66765 m!61205))

(assert (=> b!66478 d!13757))

(declare-fun d!13759 () Bool)

(assert (=> d!13759 (= (apply!72 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28668) (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28668)))))

(declare-fun bs!2853 () Bool)

(assert (= bs!2853 d!13759))

(declare-fun m!61207 () Bool)

(assert (=> bs!2853 m!61207))

(assert (=> bs!2853 m!61207))

(declare-fun m!61209 () Bool)

(assert (=> bs!2853 m!61209))

(assert (=> b!66478 d!13759))

(declare-fun d!13761 () Bool)

(declare-fun e!43784 () Bool)

(assert (=> d!13761 e!43784))

(declare-fun res!36102 () Bool)

(assert (=> d!13761 (=> (not res!36102) (not e!43784))))

(declare-fun lt!28900 () ListLongMap!1379)

(assert (=> d!13761 (= res!36102 (contains!705 lt!28900 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!28902 () List!1466)

(assert (=> d!13761 (= lt!28900 (ListLongMap!1380 lt!28902))))

(declare-fun lt!28899 () Unit!1818)

(declare-fun lt!28901 () Unit!1818)

(assert (=> d!13761 (= lt!28899 lt!28901)))

(assert (=> d!13761 (= (getValueByKey!128 lt!28902 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13761 (= lt!28901 (lemmaContainsTupThenGetReturnValue!48 lt!28902 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13761 (= lt!28902 (insertStrictlySorted!51 (toList!705 lt!28677) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13761 (= (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28900)))

(declare-fun b!66766 () Bool)

(declare-fun res!36103 () Bool)

(assert (=> b!66766 (=> (not res!36103) (not e!43784))))

(assert (=> b!66766 (= res!36103 (= (getValueByKey!128 (toList!705 lt!28900) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!66767 () Bool)

(assert (=> b!66767 (= e!43784 (contains!707 (toList!705 lt!28900) (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!13761 res!36102) b!66766))

(assert (= (and b!66766 res!36103) b!66767))

(declare-fun m!61211 () Bool)

(assert (=> d!13761 m!61211))

(declare-fun m!61213 () Bool)

(assert (=> d!13761 m!61213))

(declare-fun m!61215 () Bool)

(assert (=> d!13761 m!61215))

(declare-fun m!61217 () Bool)

(assert (=> d!13761 m!61217))

(declare-fun m!61219 () Bool)

(assert (=> b!66766 m!61219))

(declare-fun m!61221 () Bool)

(assert (=> b!66767 m!61221))

(assert (=> b!66478 d!13761))

(assert (=> b!66478 d!13637))

(declare-fun d!13763 () Bool)

(assert (=> d!13763 (= (apply!72 lt!28679 lt!28684) (get!1123 (getValueByKey!128 (toList!705 lt!28679) lt!28684)))))

(declare-fun bs!2854 () Bool)

(assert (= bs!2854 d!13763))

(declare-fun m!61223 () Bool)

(assert (=> bs!2854 m!61223))

(assert (=> bs!2854 m!61223))

(declare-fun m!61225 () Bool)

(assert (=> bs!2854 m!61225))

(assert (=> b!66478 d!13763))

(declare-fun d!13765 () Bool)

(assert (=> d!13765 (= (apply!72 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28684) (apply!72 lt!28679 lt!28684))))

(declare-fun lt!28903 () Unit!1818)

(assert (=> d!13765 (= lt!28903 (choose!377 lt!28679 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28684))))

(declare-fun e!43785 () Bool)

(assert (=> d!13765 e!43785))

(declare-fun res!36104 () Bool)

(assert (=> d!13765 (=> (not res!36104) (not e!43785))))

(assert (=> d!13765 (= res!36104 (contains!705 lt!28679 lt!28684))))

(assert (=> d!13765 (= (addApplyDifferent!48 lt!28679 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28684) lt!28903)))

(declare-fun b!66768 () Bool)

(assert (=> b!66768 (= e!43785 (not (= lt!28684 lt!28682)))))

(assert (= (and d!13765 res!36104) b!66768))

(assert (=> d!13765 m!60763))

(assert (=> d!13765 m!60781))

(declare-fun m!61227 () Bool)

(assert (=> d!13765 m!61227))

(assert (=> d!13765 m!60763))

(assert (=> d!13765 m!60765))

(declare-fun m!61229 () Bool)

(assert (=> d!13765 m!61229))

(assert (=> b!66478 d!13765))

(declare-fun d!13767 () Bool)

(assert (=> d!13767 (= (apply!72 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28681) (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28681)))))

(declare-fun bs!2855 () Bool)

(assert (= bs!2855 d!13767))

(declare-fun m!61231 () Bool)

(assert (=> bs!2855 m!61231))

(assert (=> bs!2855 m!61231))

(declare-fun m!61233 () Bool)

(assert (=> bs!2855 m!61233))

(assert (=> b!66478 d!13767))

(declare-fun b!66769 () Bool)

(declare-fun e!43787 () Bool)

(declare-fun e!43789 () Bool)

(assert (=> b!66769 (= e!43787 e!43789)))

(declare-fun c!9232 () Bool)

(assert (=> b!66769 (= c!9232 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!66770 () Bool)

(declare-fun call!5583 () Bool)

(assert (=> b!66770 (= e!43789 call!5583)))

(declare-fun e!43786 () Bool)

(declare-fun b!66771 () Bool)

(assert (=> b!66771 (= e!43786 (contains!708 (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!5580 () Bool)

(assert (=> bm!5580 (= call!5583 (arrayNoDuplicates!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9232 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464))))))

(declare-fun b!66772 () Bool)

(declare-fun e!43788 () Bool)

(assert (=> b!66772 (= e!43788 e!43787)))

(declare-fun res!36105 () Bool)

(assert (=> b!66772 (=> (not res!36105) (not e!43787))))

(assert (=> b!66772 (= res!36105 (not e!43786))))

(declare-fun res!36106 () Bool)

(assert (=> b!66772 (=> (not res!36106) (not e!43786))))

(assert (=> b!66772 (= res!36106 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!13769 () Bool)

(declare-fun res!36107 () Bool)

(assert (=> d!13769 (=> res!36107 e!43788)))

(assert (=> d!13769 (= res!36107 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> d!13769 (= (arrayNoDuplicates!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)) e!43788)))

(declare-fun b!66773 () Bool)

(assert (=> b!66773 (= e!43789 call!5583)))

(assert (= (and d!13769 (not res!36107)) b!66772))

(assert (= (and b!66772 res!36106) b!66771))

(assert (= (and b!66772 res!36105) b!66769))

(assert (= (and b!66769 c!9232) b!66773))

(assert (= (and b!66769 (not c!9232)) b!66770))

(assert (= (or b!66773 b!66770) bm!5580))

(declare-fun m!61235 () Bool)

(assert (=> b!66769 m!61235))

(assert (=> b!66769 m!61235))

(declare-fun m!61237 () Bool)

(assert (=> b!66769 m!61237))

(assert (=> b!66771 m!61235))

(assert (=> b!66771 m!61235))

(declare-fun m!61239 () Bool)

(assert (=> b!66771 m!61239))

(assert (=> bm!5580 m!61235))

(declare-fun m!61241 () Bool)

(assert (=> bm!5580 m!61241))

(assert (=> b!66772 m!61235))

(assert (=> b!66772 m!61235))

(assert (=> b!66772 m!61237))

(assert (=> bm!5547 d!13769))

(declare-fun d!13771 () Bool)

(assert (=> d!13771 (= (inRange!0 (ite c!9135 (ite c!9139 (index!3073 lt!28602) (ite c!9132 (index!3072 lt!28601) (index!3075 lt!28601))) (ite c!9141 (index!3073 lt!28604) (ite c!9138 (index!3072 lt!28608) (index!3075 lt!28608)))) (mask!6080 newMap!16)) (and (bvsge (ite c!9135 (ite c!9139 (index!3073 lt!28602) (ite c!9132 (index!3072 lt!28601) (index!3075 lt!28601))) (ite c!9141 (index!3073 lt!28604) (ite c!9138 (index!3072 lt!28608) (index!3075 lt!28608)))) #b00000000000000000000000000000000) (bvslt (ite c!9135 (ite c!9139 (index!3073 lt!28602) (ite c!9132 (index!3072 lt!28601) (index!3075 lt!28601))) (ite c!9141 (index!3073 lt!28604) (ite c!9138 (index!3072 lt!28608) (index!3075 lt!28608)))) (bvadd (mask!6080 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5519 d!13771))

(declare-fun b!66774 () Bool)

(declare-fun e!43791 () Bool)

(declare-fun e!43793 () Bool)

(assert (=> b!66774 (= e!43791 e!43793)))

(declare-fun c!9233 () Bool)

(assert (=> b!66774 (= c!9233 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66775 () Bool)

(declare-fun call!5584 () Bool)

(assert (=> b!66775 (= e!43793 call!5584)))

(declare-fun b!66776 () Bool)

(declare-fun e!43790 () Bool)

(assert (=> b!66776 (= e!43790 (contains!708 Nil!1464 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5581 () Bool)

(assert (=> bm!5581 (= call!5584 (arrayNoDuplicates!0 (_keys!3785 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9233 (Cons!1463 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) Nil!1464) Nil!1464)))))

(declare-fun b!66777 () Bool)

(declare-fun e!43792 () Bool)

(assert (=> b!66777 (= e!43792 e!43791)))

(declare-fun res!36108 () Bool)

(assert (=> b!66777 (=> (not res!36108) (not e!43791))))

(assert (=> b!66777 (= res!36108 (not e!43790))))

(declare-fun res!36109 () Bool)

(assert (=> b!66777 (=> (not res!36109) (not e!43790))))

(assert (=> b!66777 (= res!36109 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!13773 () Bool)

(declare-fun res!36110 () Bool)

(assert (=> d!13773 (=> res!36110 e!43792)))

(assert (=> d!13773 (= res!36110 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!13773 (= (arrayNoDuplicates!0 (_keys!3785 newMap!16) #b00000000000000000000000000000000 Nil!1464) e!43792)))

(declare-fun b!66778 () Bool)

(assert (=> b!66778 (= e!43793 call!5584)))

(assert (= (and d!13773 (not res!36110)) b!66777))

(assert (= (and b!66777 res!36109) b!66776))

(assert (= (and b!66777 res!36108) b!66774))

(assert (= (and b!66774 c!9233) b!66778))

(assert (= (and b!66774 (not c!9233)) b!66775))

(assert (= (or b!66778 b!66775) bm!5581))

(assert (=> b!66774 m!60839))

(assert (=> b!66774 m!60839))

(assert (=> b!66774 m!60841))

(assert (=> b!66776 m!60839))

(assert (=> b!66776 m!60839))

(declare-fun m!61243 () Bool)

(assert (=> b!66776 m!61243))

(assert (=> bm!5581 m!60839))

(declare-fun m!61245 () Bool)

(assert (=> bm!5581 m!61245))

(assert (=> b!66777 m!60839))

(assert (=> b!66777 m!60839))

(assert (=> b!66777 m!60841))

(assert (=> b!66528 d!13773))

(assert (=> b!66487 d!13717))

(declare-fun b!66795 () Bool)

(declare-fun res!36120 () Bool)

(declare-fun e!43802 () Bool)

(assert (=> b!66795 (=> (not res!36120) (not e!43802))))

(declare-fun call!5589 () Bool)

(assert (=> b!66795 (= res!36120 call!5589)))

(declare-fun e!43804 () Bool)

(assert (=> b!66795 (= e!43804 e!43802)))

(declare-fun b!66796 () Bool)

(declare-fun e!43805 () Bool)

(declare-fun call!5590 () Bool)

(assert (=> b!66796 (= e!43805 (not call!5590))))

(declare-fun b!66797 () Bool)

(declare-fun e!43803 () Bool)

(assert (=> b!66797 (= e!43803 e!43805)))

(declare-fun res!36119 () Bool)

(assert (=> b!66797 (= res!36119 call!5589)))

(assert (=> b!66797 (=> (not res!36119) (not e!43805))))

(declare-fun b!66798 () Bool)

(assert (=> b!66798 (= e!43803 e!43804)))

(declare-fun c!9238 () Bool)

(declare-fun lt!28909 () SeekEntryResult!236)

(assert (=> b!66798 (= c!9238 ((_ is MissingVacant!236) lt!28909))))

(declare-fun b!66799 () Bool)

(assert (=> b!66799 (and (bvsge (index!3072 lt!28909) #b00000000000000000000000000000000) (bvslt (index!3072 lt!28909) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun res!36121 () Bool)

(assert (=> b!66799 (= res!36121 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3072 lt!28909)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66799 (=> (not res!36121) (not e!43805))))

(declare-fun b!66800 () Bool)

(assert (=> b!66800 (= e!43802 (not call!5590))))

(declare-fun b!66801 () Bool)

(assert (=> b!66801 (= e!43804 ((_ is Undefined!236) lt!28909))))

(declare-fun bm!5586 () Bool)

(declare-fun c!9239 () Bool)

(assert (=> bm!5586 (= call!5589 (inRange!0 (ite c!9239 (index!3072 lt!28909) (index!3075 lt!28909)) (mask!6080 newMap!16)))))

(declare-fun b!66802 () Bool)

(declare-fun res!36122 () Bool)

(assert (=> b!66802 (=> (not res!36122) (not e!43802))))

(assert (=> b!66802 (= res!36122 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3075 lt!28909)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66802 (and (bvsge (index!3075 lt!28909) #b00000000000000000000000000000000) (bvslt (index!3075 lt!28909) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun d!13775 () Bool)

(assert (=> d!13775 e!43803))

(assert (=> d!13775 (= c!9239 ((_ is MissingZero!236) lt!28909))))

(assert (=> d!13775 (= lt!28909 (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(declare-fun lt!28908 () Unit!1818)

(declare-fun choose!378 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) Int) Unit!1818)

(assert (=> d!13775 (= lt!28908 (choose!378 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)))))

(assert (=> d!13775 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13775 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)) lt!28908)))

(declare-fun bm!5587 () Bool)

(assert (=> bm!5587 (= call!5590 (arrayContainsKey!0 (_keys!3785 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!13775 c!9239) b!66797))

(assert (= (and d!13775 (not c!9239)) b!66798))

(assert (= (and b!66797 res!36119) b!66799))

(assert (= (and b!66799 res!36121) b!66796))

(assert (= (and b!66798 c!9238) b!66795))

(assert (= (and b!66798 (not c!9238)) b!66801))

(assert (= (and b!66795 res!36120) b!66802))

(assert (= (and b!66802 res!36122) b!66800))

(assert (= (or b!66797 b!66795) bm!5586))

(assert (= (or b!66796 b!66800) bm!5587))

(assert (=> d!13775 m!60449))

(assert (=> d!13775 m!60701))

(assert (=> d!13775 m!60449))

(declare-fun m!61247 () Bool)

(assert (=> d!13775 m!61247))

(assert (=> d!13775 m!60845))

(assert (=> bm!5587 m!60449))

(assert (=> bm!5587 m!60729))

(declare-fun m!61249 () Bool)

(assert (=> b!66802 m!61249))

(declare-fun m!61251 () Bool)

(assert (=> b!66799 m!61251))

(declare-fun m!61253 () Bool)

(assert (=> bm!5586 m!61253))

(assert (=> bm!5514 d!13775))

(declare-fun d!13777 () Bool)

(declare-fun e!43806 () Bool)

(assert (=> d!13777 e!43806))

(declare-fun res!36123 () Bool)

(assert (=> d!13777 (=> res!36123 e!43806)))

(declare-fun lt!28913 () Bool)

(assert (=> d!13777 (= res!36123 (not lt!28913))))

(declare-fun lt!28912 () Bool)

(assert (=> d!13777 (= lt!28913 lt!28912)))

(declare-fun lt!28910 () Unit!1818)

(declare-fun e!43807 () Unit!1818)

(assert (=> d!13777 (= lt!28910 e!43807)))

(declare-fun c!9240 () Bool)

(assert (=> d!13777 (= c!9240 lt!28912)))

(assert (=> d!13777 (= lt!28912 (containsKey!132 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!13777 (= (contains!705 lt!28513 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!28913)))

(declare-fun b!66803 () Bool)

(declare-fun lt!28911 () Unit!1818)

(assert (=> b!66803 (= e!43807 lt!28911)))

(assert (=> b!66803 (= lt!28911 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66803 (isDefined!82 (getValueByKey!128 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66804 () Bool)

(declare-fun Unit!1839 () Unit!1818)

(assert (=> b!66804 (= e!43807 Unit!1839)))

(declare-fun b!66805 () Bool)

(assert (=> b!66805 (= e!43806 (isDefined!82 (getValueByKey!128 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!13777 c!9240) b!66803))

(assert (= (and d!13777 (not c!9240)) b!66804))

(assert (= (and d!13777 (not res!36123)) b!66805))

(assert (=> d!13777 m!60627))

(declare-fun m!61255 () Bool)

(assert (=> d!13777 m!61255))

(assert (=> b!66803 m!60627))

(declare-fun m!61257 () Bool)

(assert (=> b!66803 m!61257))

(assert (=> b!66803 m!60627))

(declare-fun m!61259 () Bool)

(assert (=> b!66803 m!61259))

(assert (=> b!66803 m!61259))

(declare-fun m!61261 () Bool)

(assert (=> b!66803 m!61261))

(assert (=> b!66805 m!60627))

(assert (=> b!66805 m!61259))

(assert (=> b!66805 m!61259))

(assert (=> b!66805 m!61261))

(assert (=> b!66283 d!13777))

(declare-fun d!13779 () Bool)

(declare-fun res!36124 () Bool)

(declare-fun e!43808 () Bool)

(assert (=> d!13779 (=> res!36124 e!43808)))

(assert (=> d!13779 (= res!36124 (= (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!13779 (= (arrayContainsKey!0 (_keys!3785 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b00000000000000000000000000000000) e!43808)))

(declare-fun b!66806 () Bool)

(declare-fun e!43809 () Bool)

(assert (=> b!66806 (= e!43808 e!43809)))

(declare-fun res!36125 () Bool)

(assert (=> b!66806 (=> (not res!36125) (not e!43809))))

(assert (=> b!66806 (= res!36125 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!66807 () Bool)

(assert (=> b!66807 (= e!43809 (arrayContainsKey!0 (_keys!3785 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!13779 (not res!36124)) b!66806))

(assert (= (and b!66806 res!36125) b!66807))

(assert (=> d!13779 m!60839))

(assert (=> b!66807 m!60449))

(declare-fun m!61263 () Bool)

(assert (=> b!66807 m!61263))

(assert (=> bm!5515 d!13779))

(declare-fun d!13781 () Bool)

(declare-fun res!36126 () Bool)

(declare-fun e!43810 () Bool)

(assert (=> d!13781 (=> res!36126 e!43810)))

(assert (=> d!13781 (= res!36126 (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!13781 (= (arrayContainsKey!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!43810)))

(declare-fun b!66808 () Bool)

(declare-fun e!43811 () Bool)

(assert (=> b!66808 (= e!43810 e!43811)))

(declare-fun res!36127 () Bool)

(assert (=> b!66808 (=> (not res!36127) (not e!43811))))

(assert (=> b!66808 (= res!36127 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!66809 () Bool)

(assert (=> b!66809 (= e!43811 (arrayContainsKey!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!13781 (not res!36126)) b!66808))

(assert (= (and b!66808 res!36127) b!66809))

(assert (=> d!13781 m!60931))

(assert (=> b!66809 m!60449))

(declare-fun m!61265 () Bool)

(assert (=> b!66809 m!61265))

(assert (=> b!66498 d!13781))

(declare-fun d!13783 () Bool)

(declare-fun e!43812 () Bool)

(assert (=> d!13783 e!43812))

(declare-fun res!36128 () Bool)

(assert (=> d!13783 (=> res!36128 e!43812)))

(declare-fun lt!28917 () Bool)

(assert (=> d!13783 (= res!36128 (not lt!28917))))

(declare-fun lt!28916 () Bool)

(assert (=> d!13783 (= lt!28917 lt!28916)))

(declare-fun lt!28914 () Unit!1818)

(declare-fun e!43813 () Unit!1818)

(assert (=> d!13783 (= lt!28914 e!43813)))

(declare-fun c!9241 () Bool)

(assert (=> d!13783 (= c!9241 lt!28916)))

(assert (=> d!13783 (= lt!28916 (containsKey!132 (toList!705 lt!28513) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13783 (= (contains!705 lt!28513 #b1000000000000000000000000000000000000000000000000000000000000000) lt!28917)))

(declare-fun b!66810 () Bool)

(declare-fun lt!28915 () Unit!1818)

(assert (=> b!66810 (= e!43813 lt!28915)))

(assert (=> b!66810 (= lt!28915 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28513) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66810 (isDefined!82 (getValueByKey!128 (toList!705 lt!28513) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66811 () Bool)

(declare-fun Unit!1840 () Unit!1818)

(assert (=> b!66811 (= e!43813 Unit!1840)))

(declare-fun b!66812 () Bool)

(assert (=> b!66812 (= e!43812 (isDefined!82 (getValueByKey!128 (toList!705 lt!28513) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13783 c!9241) b!66810))

(assert (= (and d!13783 (not c!9241)) b!66811))

(assert (= (and d!13783 (not res!36128)) b!66812))

(declare-fun m!61267 () Bool)

(assert (=> d!13783 m!61267))

(declare-fun m!61269 () Bool)

(assert (=> b!66810 m!61269))

(declare-fun m!61271 () Bool)

(assert (=> b!66810 m!61271))

(assert (=> b!66810 m!61271))

(declare-fun m!61273 () Bool)

(assert (=> b!66810 m!61273))

(assert (=> b!66812 m!61271))

(assert (=> b!66812 m!61271))

(assert (=> b!66812 m!61273))

(assert (=> b!66280 d!13783))

(declare-fun b!66816 () Bool)

(declare-fun e!43815 () Option!134)

(assert (=> b!66816 (= e!43815 None!132)))

(declare-fun b!66815 () Bool)

(assert (=> b!66815 (= e!43815 (getValueByKey!128 (t!4939 (toList!705 lt!28496)) (_1!1052 lt!28408)))))

(declare-fun b!66813 () Bool)

(declare-fun e!43814 () Option!134)

(assert (=> b!66813 (= e!43814 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28496)))))))

(declare-fun d!13785 () Bool)

(declare-fun c!9242 () Bool)

(assert (=> d!13785 (= c!9242 (and ((_ is Cons!1462) (toList!705 lt!28496)) (= (_1!1052 (h!2046 (toList!705 lt!28496))) (_1!1052 lt!28408))))))

(assert (=> d!13785 (= (getValueByKey!128 (toList!705 lt!28496) (_1!1052 lt!28408)) e!43814)))

(declare-fun b!66814 () Bool)

(assert (=> b!66814 (= e!43814 e!43815)))

(declare-fun c!9243 () Bool)

(assert (=> b!66814 (= c!9243 (and ((_ is Cons!1462) (toList!705 lt!28496)) (not (= (_1!1052 (h!2046 (toList!705 lt!28496))) (_1!1052 lt!28408)))))))

(assert (= (and d!13785 c!9242) b!66813))

(assert (= (and d!13785 (not c!9242)) b!66814))

(assert (= (and b!66814 c!9243) b!66815))

(assert (= (and b!66814 (not c!9243)) b!66816))

(declare-fun m!61275 () Bool)

(assert (=> b!66815 m!61275))

(assert (=> b!66247 d!13785))

(assert (=> bm!5504 d!13657))

(declare-fun d!13787 () Bool)

(declare-fun e!43816 () Bool)

(assert (=> d!13787 e!43816))

(declare-fun res!36129 () Bool)

(assert (=> d!13787 (=> res!36129 e!43816)))

(declare-fun lt!28921 () Bool)

(assert (=> d!13787 (= res!36129 (not lt!28921))))

(declare-fun lt!28920 () Bool)

(assert (=> d!13787 (= lt!28921 lt!28920)))

(declare-fun lt!28918 () Unit!1818)

(declare-fun e!43817 () Unit!1818)

(assert (=> d!13787 (= lt!28918 e!43817)))

(declare-fun c!9244 () Bool)

(assert (=> d!13787 (= c!9244 lt!28920)))

(assert (=> d!13787 (= lt!28920 (containsKey!132 (toList!705 e!43566) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!13787 (= (contains!705 e!43566 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) lt!28921)))

(declare-fun b!66817 () Bool)

(declare-fun lt!28919 () Unit!1818)

(assert (=> b!66817 (= e!43817 lt!28919)))

(assert (=> b!66817 (= lt!28919 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 e!43566) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> b!66817 (isDefined!82 (getValueByKey!128 (toList!705 e!43566) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!66818 () Bool)

(declare-fun Unit!1841 () Unit!1818)

(assert (=> b!66818 (= e!43817 Unit!1841)))

(declare-fun b!66819 () Bool)

(assert (=> b!66819 (= e!43816 (isDefined!82 (getValueByKey!128 (toList!705 e!43566) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (= (and d!13787 c!9244) b!66817))

(assert (= (and d!13787 (not c!9244)) b!66818))

(assert (= (and d!13787 (not res!36129)) b!66819))

(assert (=> d!13787 m!60449))

(declare-fun m!61277 () Bool)

(assert (=> d!13787 m!61277))

(assert (=> b!66817 m!60449))

(declare-fun m!61279 () Bool)

(assert (=> b!66817 m!61279))

(assert (=> b!66817 m!60449))

(declare-fun m!61281 () Bool)

(assert (=> b!66817 m!61281))

(assert (=> b!66817 m!61281))

(declare-fun m!61283 () Bool)

(assert (=> b!66817 m!61283))

(assert (=> b!66819 m!60449))

(assert (=> b!66819 m!61281))

(assert (=> b!66819 m!61281))

(assert (=> b!66819 m!61283))

(assert (=> bm!5517 d!13787))

(declare-fun d!13789 () Bool)

(assert (=> d!13789 (= (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (and (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66515 d!13789))

(declare-fun b!66831 () Bool)

(declare-fun e!43820 () Bool)

(assert (=> b!66831 (= e!43820 (and (bvsge (extraKeys!2017 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2017 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!384 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!13791 () Bool)

(declare-fun res!36140 () Bool)

(assert (=> d!13791 (=> (not res!36140) (not e!43820))))

(assert (=> d!13791 (= res!36140 (validMask!0 (mask!6080 newMap!16)))))

(assert (=> d!13791 (= (simpleValid!48 newMap!16) e!43820)))

(declare-fun b!66828 () Bool)

(declare-fun res!36138 () Bool)

(assert (=> b!66828 (=> (not res!36138) (not e!43820))))

(assert (=> b!66828 (= res!36138 (and (= (size!2059 (_values!2129 newMap!16)) (bvadd (mask!6080 newMap!16) #b00000000000000000000000000000001)) (= (size!2058 (_keys!3785 newMap!16)) (size!2059 (_values!2129 newMap!16))) (bvsge (_size!384 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!384 newMap!16) (bvadd (mask!6080 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!66830 () Bool)

(declare-fun res!36141 () Bool)

(assert (=> b!66830 (=> (not res!36141) (not e!43820))))

(declare-fun size!2064 (LongMapFixedSize!670) (_ BitVec 32))

(assert (=> b!66830 (= res!36141 (= (size!2064 newMap!16) (bvadd (_size!384 newMap!16) (bvsdiv (bvadd (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!66829 () Bool)

(declare-fun res!36139 () Bool)

(assert (=> b!66829 (=> (not res!36139) (not e!43820))))

(assert (=> b!66829 (= res!36139 (bvsge (size!2064 newMap!16) (_size!384 newMap!16)))))

(assert (= (and d!13791 res!36140) b!66828))

(assert (= (and b!66828 res!36138) b!66829))

(assert (= (and b!66829 res!36139) b!66830))

(assert (= (and b!66830 res!36141) b!66831))

(assert (=> d!13791 m!60845))

(declare-fun m!61285 () Bool)

(assert (=> b!66830 m!61285))

(assert (=> b!66829 m!61285))

(assert (=> d!13673 d!13791))

(declare-fun d!13793 () Bool)

(declare-fun res!36146 () Bool)

(declare-fun e!43828 () Bool)

(assert (=> d!13793 (=> res!36146 e!43828)))

(assert (=> d!13793 (= res!36146 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!13793 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3785 newMap!16) (mask!6080 newMap!16)) e!43828)))

(declare-fun b!66840 () Bool)

(declare-fun e!43829 () Bool)

(declare-fun call!5593 () Bool)

(assert (=> b!66840 (= e!43829 call!5593)))

(declare-fun bm!5590 () Bool)

(assert (=> bm!5590 (= call!5593 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(declare-fun b!66841 () Bool)

(declare-fun e!43827 () Bool)

(assert (=> b!66841 (= e!43827 e!43829)))

(declare-fun lt!28929 () (_ BitVec 64))

(assert (=> b!66841 (= lt!28929 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28928 () Unit!1818)

(assert (=> b!66841 (= lt!28928 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3785 newMap!16) lt!28929 #b00000000000000000000000000000000))))

(assert (=> b!66841 (arrayContainsKey!0 (_keys!3785 newMap!16) lt!28929 #b00000000000000000000000000000000)))

(declare-fun lt!28930 () Unit!1818)

(assert (=> b!66841 (= lt!28930 lt!28928)))

(declare-fun res!36147 () Bool)

(assert (=> b!66841 (= res!36147 (= (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) (_keys!3785 newMap!16) (mask!6080 newMap!16)) (Found!236 #b00000000000000000000000000000000)))))

(assert (=> b!66841 (=> (not res!36147) (not e!43829))))

(declare-fun b!66842 () Bool)

(assert (=> b!66842 (= e!43827 call!5593)))

(declare-fun b!66843 () Bool)

(assert (=> b!66843 (= e!43828 e!43827)))

(declare-fun c!9247 () Bool)

(assert (=> b!66843 (= c!9247 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!13793 (not res!36146)) b!66843))

(assert (= (and b!66843 c!9247) b!66841))

(assert (= (and b!66843 (not c!9247)) b!66842))

(assert (= (and b!66841 res!36147) b!66840))

(assert (= (or b!66840 b!66842) bm!5590))

(declare-fun m!61287 () Bool)

(assert (=> bm!5590 m!61287))

(assert (=> b!66841 m!60839))

(declare-fun m!61289 () Bool)

(assert (=> b!66841 m!61289))

(declare-fun m!61291 () Bool)

(assert (=> b!66841 m!61291))

(assert (=> b!66841 m!60839))

(declare-fun m!61293 () Bool)

(assert (=> b!66841 m!61293))

(assert (=> b!66843 m!60839))

(assert (=> b!66843 m!60839))

(assert (=> b!66843 m!60841))

(assert (=> b!66527 d!13793))

(declare-fun d!13795 () Bool)

(declare-fun e!43830 () Bool)

(assert (=> d!13795 e!43830))

(declare-fun res!36148 () Bool)

(assert (=> d!13795 (=> res!36148 e!43830)))

(declare-fun lt!28934 () Bool)

(assert (=> d!13795 (= res!36148 (not lt!28934))))

(declare-fun lt!28933 () Bool)

(assert (=> d!13795 (= lt!28934 lt!28933)))

(declare-fun lt!28931 () Unit!1818)

(declare-fun e!43831 () Unit!1818)

(assert (=> d!13795 (= lt!28931 e!43831)))

(declare-fun c!9248 () Bool)

(assert (=> d!13795 (= c!9248 lt!28933)))

(assert (=> d!13795 (= lt!28933 (containsKey!132 (toList!705 call!5518) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))

(assert (=> d!13795 (= (contains!705 call!5518 (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))) lt!28934)))

(declare-fun b!66844 () Bool)

(declare-fun lt!28932 () Unit!1818)

(assert (=> b!66844 (= e!43831 lt!28932)))

(assert (=> b!66844 (= lt!28932 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 call!5518) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))

(assert (=> b!66844 (isDefined!82 (getValueByKey!128 (toList!705 call!5518) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))

(declare-fun b!66845 () Bool)

(declare-fun Unit!1842 () Unit!1818)

(assert (=> b!66845 (= e!43831 Unit!1842)))

(declare-fun b!66846 () Bool)

(assert (=> b!66846 (= e!43830 (isDefined!82 (getValueByKey!128 (toList!705 call!5518) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615)))))))

(assert (= (and d!13795 c!9248) b!66844))

(assert (= (and d!13795 (not c!9248)) b!66845))

(assert (= (and d!13795 (not res!36148)) b!66846))

(assert (=> d!13795 m!60741))

(declare-fun m!61295 () Bool)

(assert (=> d!13795 m!61295))

(assert (=> b!66844 m!60741))

(declare-fun m!61297 () Bool)

(assert (=> b!66844 m!61297))

(assert (=> b!66844 m!60741))

(declare-fun m!61299 () Bool)

(assert (=> b!66844 m!61299))

(assert (=> b!66844 m!61299))

(declare-fun m!61301 () Bool)

(assert (=> b!66844 m!61301))

(assert (=> b!66846 m!60741))

(assert (=> b!66846 m!61299))

(assert (=> b!66846 m!61299))

(assert (=> b!66846 m!61301))

(assert (=> b!66413 d!13795))

(declare-fun d!13797 () Bool)

(declare-fun e!43834 () Bool)

(assert (=> d!13797 e!43834))

(declare-fun res!36151 () Bool)

(assert (=> d!13797 (=> (not res!36151) (not e!43834))))

(assert (=> d!13797 (= res!36151 (and (bvsge (index!3073 lt!28615) #b00000000000000000000000000000000) (bvslt (index!3073 lt!28615) (size!2058 (_keys!3785 newMap!16)))))))

(declare-fun lt!28937 () Unit!1818)

(declare-fun choose!379 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) Int) Unit!1818)

(assert (=> d!13797 (= lt!28937 (choose!379 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3073 lt!28615) (defaultEntry!2146 newMap!16)))))

(assert (=> d!13797 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13797 (= (lemmaValidKeyInArrayIsInListMap!80 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3073 lt!28615) (defaultEntry!2146 newMap!16)) lt!28937)))

(declare-fun b!66849 () Bool)

(assert (=> b!66849 (= e!43834 (contains!705 (getCurrentListMap!401 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))

(assert (= (and d!13797 res!36151) b!66849))

(declare-fun m!61303 () Bool)

(assert (=> d!13797 m!61303))

(assert (=> d!13797 m!60845))

(declare-fun m!61305 () Bool)

(assert (=> b!66849 m!61305))

(assert (=> b!66849 m!60741))

(assert (=> b!66849 m!61305))

(assert (=> b!66849 m!60741))

(declare-fun m!61307 () Bool)

(assert (=> b!66849 m!61307))

(assert (=> b!66413 d!13797))

(declare-fun d!13799 () Bool)

(declare-fun e!43837 () Bool)

(assert (=> d!13799 e!43837))

(declare-fun res!36154 () Bool)

(assert (=> d!13799 (=> (not res!36154) (not e!43837))))

(assert (=> d!13799 (= res!36154 (and (bvsge (index!3073 lt!28615) #b00000000000000000000000000000000) (bvslt (index!3073 lt!28615) (size!2059 (_values!2129 newMap!16)))))))

(declare-fun lt!28940 () Unit!1818)

(declare-fun choose!380 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) (_ BitVec 64) V!2913 Int) Unit!1818)

(assert (=> d!13799 (= lt!28940 (choose!380 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3073 lt!28615) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 (defaultEntry!2146 newMap!16)))))

(assert (=> d!13799 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13799 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!21 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3073 lt!28615) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 (defaultEntry!2146 newMap!16)) lt!28940)))

(declare-fun b!66852 () Bool)

(assert (=> b!66852 (= e!43837 (= (+!87 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (getCurrentListMap!401 (_keys!3785 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))))))

(assert (= (and d!13799 res!36154) b!66852))

(assert (=> d!13799 m!60449))

(declare-fun m!61309 () Bool)

(assert (=> d!13799 m!61309))

(assert (=> d!13799 m!60845))

(assert (=> b!66852 m!60697))

(assert (=> b!66852 m!60697))

(assert (=> b!66852 m!61065))

(assert (=> b!66852 m!60731))

(declare-fun m!61311 () Bool)

(assert (=> b!66852 m!61311))

(assert (=> b!66413 d!13799))

(declare-fun d!13801 () Bool)

(assert (=> d!13801 (= (apply!72 lt!28687 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1123 (getValueByKey!128 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2856 () Bool)

(assert (= bs!2856 d!13801))

(declare-fun m!61313 () Bool)

(assert (=> bs!2856 m!61313))

(assert (=> bs!2856 m!61313))

(declare-fun m!61315 () Bool)

(assert (=> bs!2856 m!61315))

(assert (=> b!66481 d!13801))

(assert (=> b!66274 d!13717))

(declare-fun b!66853 () Bool)

(declare-fun e!43849 () Bool)

(declare-fun call!5594 () Bool)

(assert (=> b!66853 (= e!43849 (not call!5594))))

(declare-fun b!66854 () Bool)

(declare-fun c!9250 () Bool)

(assert (=> b!66854 (= c!9250 (and (not (= (bvand (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!43844 () ListLongMap!1379)

(declare-fun e!43838 () ListLongMap!1379)

(assert (=> b!66854 (= e!43844 e!43838)))

(declare-fun b!66855 () Bool)

(declare-fun res!36157 () Bool)

(declare-fun e!43845 () Bool)

(assert (=> b!66855 (=> (not res!36157) (not e!43845))))

(declare-fun e!43848 () Bool)

(assert (=> b!66855 (= res!36157 e!43848)))

(declare-fun res!36155 () Bool)

(assert (=> b!66855 (=> res!36155 e!43848)))

(declare-fun e!43843 () Bool)

(assert (=> b!66855 (= res!36155 (not e!43843))))

(declare-fun res!36160 () Bool)

(assert (=> b!66855 (=> (not res!36160) (not e!43843))))

(assert (=> b!66855 (= res!36160 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!66856 () Bool)

(declare-fun e!43841 () ListLongMap!1379)

(assert (=> b!66856 (= e!43841 e!43844)))

(declare-fun c!9252 () Bool)

(assert (=> b!66856 (= c!9252 (and (not (= (bvand (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66857 () Bool)

(declare-fun e!43850 () Unit!1818)

(declare-fun Unit!1843 () Unit!1818)

(assert (=> b!66857 (= e!43850 Unit!1843)))

(declare-fun b!66858 () Bool)

(declare-fun res!36161 () Bool)

(assert (=> b!66858 (=> (not res!36161) (not e!43845))))

(declare-fun e!43846 () Bool)

(assert (=> b!66858 (= res!36161 e!43846)))

(declare-fun c!9251 () Bool)

(assert (=> b!66858 (= c!9251 (not (= (bvand (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5591 () Bool)

(declare-fun call!5600 () Bool)

(declare-fun lt!28960 () ListLongMap!1379)

(assert (=> bm!5591 (= call!5600 (contains!705 lt!28960 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66859 () Bool)

(declare-fun lt!28956 () Unit!1818)

(assert (=> b!66859 (= e!43850 lt!28956)))

(declare-fun lt!28946 () ListLongMap!1379)

(assert (=> b!66859 (= lt!28946 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite c!9137 (_values!2129 newMap!16) lt!28607) (mask!6080 newMap!16) (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28959 () (_ BitVec 64))

(assert (=> b!66859 (= lt!28959 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28958 () (_ BitVec 64))

(assert (=> b!66859 (= lt!28958 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28944 () Unit!1818)

(assert (=> b!66859 (= lt!28944 (addStillContains!48 lt!28946 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) lt!28958))))

(assert (=> b!66859 (contains!705 (+!87 lt!28946 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))) lt!28958)))

(declare-fun lt!28951 () Unit!1818)

(assert (=> b!66859 (= lt!28951 lt!28944)))

(declare-fun lt!28943 () ListLongMap!1379)

(assert (=> b!66859 (= lt!28943 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite c!9137 (_values!2129 newMap!16) lt!28607) (mask!6080 newMap!16) (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28947 () (_ BitVec 64))

(assert (=> b!66859 (= lt!28947 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28941 () (_ BitVec 64))

(assert (=> b!66859 (= lt!28941 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28962 () Unit!1818)

(assert (=> b!66859 (= lt!28962 (addApplyDifferent!48 lt!28943 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) lt!28941))))

(assert (=> b!66859 (= (apply!72 (+!87 lt!28943 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) lt!28941) (apply!72 lt!28943 lt!28941))))

(declare-fun lt!28945 () Unit!1818)

(assert (=> b!66859 (= lt!28945 lt!28962)))

(declare-fun lt!28952 () ListLongMap!1379)

(assert (=> b!66859 (= lt!28952 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite c!9137 (_values!2129 newMap!16) lt!28607) (mask!6080 newMap!16) (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28955 () (_ BitVec 64))

(assert (=> b!66859 (= lt!28955 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28957 () (_ BitVec 64))

(assert (=> b!66859 (= lt!28957 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28949 () Unit!1818)

(assert (=> b!66859 (= lt!28949 (addApplyDifferent!48 lt!28952 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) lt!28957))))

(assert (=> b!66859 (= (apply!72 (+!87 lt!28952 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))) lt!28957) (apply!72 lt!28952 lt!28957))))

(declare-fun lt!28961 () Unit!1818)

(assert (=> b!66859 (= lt!28961 lt!28949)))

(declare-fun lt!28950 () ListLongMap!1379)

(assert (=> b!66859 (= lt!28950 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite c!9137 (_values!2129 newMap!16) lt!28607) (mask!6080 newMap!16) (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28953 () (_ BitVec 64))

(assert (=> b!66859 (= lt!28953 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28954 () (_ BitVec 64))

(assert (=> b!66859 (= lt!28954 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66859 (= lt!28956 (addApplyDifferent!48 lt!28950 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) lt!28954))))

(assert (=> b!66859 (= (apply!72 (+!87 lt!28950 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) lt!28954) (apply!72 lt!28950 lt!28954))))

(declare-fun d!13803 () Bool)

(assert (=> d!13803 e!43845))

(declare-fun res!36163 () Bool)

(assert (=> d!13803 (=> (not res!36163) (not e!43845))))

(assert (=> d!13803 (= res!36163 (or (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))))

(declare-fun lt!28942 () ListLongMap!1379)

(assert (=> d!13803 (= lt!28960 lt!28942)))

(declare-fun lt!28948 () Unit!1818)

(assert (=> d!13803 (= lt!28948 e!43850)))

(declare-fun c!9254 () Bool)

(declare-fun e!43842 () Bool)

(assert (=> d!13803 (= c!9254 e!43842)))

(declare-fun res!36162 () Bool)

(assert (=> d!13803 (=> (not res!36162) (not e!43842))))

(assert (=> d!13803 (= res!36162 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!13803 (= lt!28942 e!43841)))

(declare-fun c!9253 () Bool)

(assert (=> d!13803 (= c!9253 (and (not (= (bvand (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13803 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13803 (= (getCurrentListMap!401 (_keys!3785 newMap!16) (ite c!9137 (_values!2129 newMap!16) lt!28607) (mask!6080 newMap!16) (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!28960)))

(declare-fun bm!5592 () Bool)

(declare-fun call!5598 () ListLongMap!1379)

(declare-fun call!5595 () ListLongMap!1379)

(assert (=> bm!5592 (= call!5598 call!5595)))

(declare-fun b!66860 () Bool)

(assert (=> b!66860 (= e!43846 (not call!5600))))

(declare-fun b!66861 () Bool)

(assert (=> b!66861 (= e!43844 call!5598)))

(declare-fun b!66862 () Bool)

(declare-fun e!43840 () Bool)

(assert (=> b!66862 (= e!43840 (= (apply!72 lt!28960 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))))

(declare-fun b!66863 () Bool)

(assert (=> b!66863 (= e!43845 e!43849)))

(declare-fun c!9249 () Bool)

(assert (=> b!66863 (= c!9249 (not (= (bvand (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!43847 () Bool)

(declare-fun b!66864 () Bool)

(assert (=> b!66864 (= e!43847 (= (apply!72 lt!28960 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 (ite c!9137 (_values!2129 newMap!16) lt!28607)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66864 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 (ite c!9137 (_values!2129 newMap!16) lt!28607))))))

(assert (=> b!66864 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!66865 () Bool)

(assert (=> b!66865 (= e!43841 (+!87 call!5595 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))))

(declare-fun bm!5593 () Bool)

(declare-fun call!5596 () ListLongMap!1379)

(declare-fun call!5599 () ListLongMap!1379)

(assert (=> bm!5593 (= call!5596 call!5599)))

(declare-fun bm!5594 () Bool)

(declare-fun call!5597 () ListLongMap!1379)

(assert (=> bm!5594 (= call!5597 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite c!9137 (_values!2129 newMap!16) lt!28607) (mask!6080 newMap!16) (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!66866 () Bool)

(assert (=> b!66866 (= e!43838 call!5596)))

(declare-fun e!43839 () Bool)

(declare-fun b!66867 () Bool)

(assert (=> b!66867 (= e!43839 (= (apply!72 lt!28960 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))

(declare-fun bm!5595 () Bool)

(assert (=> bm!5595 (= call!5599 call!5597)))

(declare-fun b!66868 () Bool)

(assert (=> b!66868 (= e!43843 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66869 () Bool)

(assert (=> b!66869 (= e!43848 e!43847)))

(declare-fun res!36158 () Bool)

(assert (=> b!66869 (=> (not res!36158) (not e!43847))))

(assert (=> b!66869 (= res!36158 (contains!705 lt!28960 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!66869 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!66870 () Bool)

(assert (=> b!66870 (= e!43849 e!43839)))

(declare-fun res!36156 () Bool)

(assert (=> b!66870 (= res!36156 call!5594)))

(assert (=> b!66870 (=> (not res!36156) (not e!43839))))

(declare-fun bm!5596 () Bool)

(assert (=> bm!5596 (= call!5595 (+!87 (ite c!9253 call!5597 (ite c!9252 call!5599 call!5596)) (ite (or c!9253 c!9252) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(declare-fun b!66871 () Bool)

(assert (=> b!66871 (= e!43846 e!43840)))

(declare-fun res!36159 () Bool)

(assert (=> b!66871 (= res!36159 call!5600)))

(assert (=> b!66871 (=> (not res!36159) (not e!43840))))

(declare-fun b!66872 () Bool)

(assert (=> b!66872 (= e!43838 call!5598)))

(declare-fun b!66873 () Bool)

(assert (=> b!66873 (= e!43842 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5597 () Bool)

(assert (=> bm!5597 (= call!5594 (contains!705 lt!28960 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!13803 c!9253) b!66865))

(assert (= (and d!13803 (not c!9253)) b!66856))

(assert (= (and b!66856 c!9252) b!66861))

(assert (= (and b!66856 (not c!9252)) b!66854))

(assert (= (and b!66854 c!9250) b!66872))

(assert (= (and b!66854 (not c!9250)) b!66866))

(assert (= (or b!66872 b!66866) bm!5593))

(assert (= (or b!66861 bm!5593) bm!5595))

(assert (= (or b!66861 b!66872) bm!5592))

(assert (= (or b!66865 bm!5595) bm!5594))

(assert (= (or b!66865 bm!5592) bm!5596))

(assert (= (and d!13803 res!36162) b!66873))

(assert (= (and d!13803 c!9254) b!66859))

(assert (= (and d!13803 (not c!9254)) b!66857))

(assert (= (and d!13803 res!36163) b!66855))

(assert (= (and b!66855 res!36160) b!66868))

(assert (= (and b!66855 (not res!36155)) b!66869))

(assert (= (and b!66869 res!36158) b!66864))

(assert (= (and b!66855 res!36157) b!66858))

(assert (= (and b!66858 c!9251) b!66871))

(assert (= (and b!66858 (not c!9251)) b!66860))

(assert (= (and b!66871 res!36159) b!66862))

(assert (= (or b!66871 b!66860) bm!5591))

(assert (= (and b!66858 res!36161) b!66863))

(assert (= (and b!66863 c!9249) b!66870))

(assert (= (and b!66863 (not c!9249)) b!66853))

(assert (= (and b!66870 res!36156) b!66867))

(assert (= (or b!66870 b!66853) bm!5597))

(declare-fun b_lambda!2977 () Bool)

(assert (=> (not b_lambda!2977) (not b!66864)))

(assert (=> b!66864 t!4952))

(declare-fun b_and!4117 () Bool)

(assert (= b_and!4113 (and (=> t!4952 result!2587) b_and!4117)))

(assert (=> b!66864 t!4954))

(declare-fun b_and!4119 () Bool)

(assert (= b_and!4115 (and (=> t!4954 result!2589) b_and!4119)))

(declare-fun m!61317 () Bool)

(assert (=> b!66865 m!61317))

(assert (=> d!13803 m!60845))

(declare-fun m!61319 () Bool)

(assert (=> bm!5594 m!61319))

(declare-fun m!61321 () Bool)

(assert (=> b!66867 m!61321))

(assert (=> b!66868 m!60839))

(assert (=> b!66868 m!60839))

(assert (=> b!66868 m!60841))

(declare-fun m!61323 () Bool)

(assert (=> b!66859 m!61323))

(declare-fun m!61325 () Bool)

(assert (=> b!66859 m!61325))

(declare-fun m!61327 () Bool)

(assert (=> b!66859 m!61327))

(declare-fun m!61329 () Bool)

(assert (=> b!66859 m!61329))

(assert (=> b!66859 m!61323))

(declare-fun m!61331 () Bool)

(assert (=> b!66859 m!61331))

(declare-fun m!61333 () Bool)

(assert (=> b!66859 m!61333))

(assert (=> b!66859 m!61327))

(declare-fun m!61335 () Bool)

(assert (=> b!66859 m!61335))

(declare-fun m!61337 () Bool)

(assert (=> b!66859 m!61337))

(declare-fun m!61339 () Bool)

(assert (=> b!66859 m!61339))

(declare-fun m!61341 () Bool)

(assert (=> b!66859 m!61341))

(declare-fun m!61343 () Bool)

(assert (=> b!66859 m!61343))

(assert (=> b!66859 m!61319))

(declare-fun m!61345 () Bool)

(assert (=> b!66859 m!61345))

(assert (=> b!66859 m!61341))

(declare-fun m!61347 () Bool)

(assert (=> b!66859 m!61347))

(assert (=> b!66859 m!60839))

(declare-fun m!61349 () Bool)

(assert (=> b!66859 m!61349))

(assert (=> b!66859 m!61331))

(declare-fun m!61351 () Bool)

(assert (=> b!66859 m!61351))

(declare-fun m!61353 () Bool)

(assert (=> bm!5596 m!61353))

(declare-fun m!61355 () Bool)

(assert (=> bm!5597 m!61355))

(assert (=> b!66864 m!60885))

(assert (=> b!66864 m!60839))

(assert (=> b!66864 m!60839))

(declare-fun m!61357 () Bool)

(assert (=> b!66864 m!61357))

(declare-fun m!61359 () Bool)

(assert (=> b!66864 m!61359))

(assert (=> b!66864 m!60885))

(declare-fun m!61361 () Bool)

(assert (=> b!66864 m!61361))

(assert (=> b!66864 m!61359))

(declare-fun m!61363 () Bool)

(assert (=> bm!5591 m!61363))

(assert (=> b!66869 m!60839))

(assert (=> b!66869 m!60839))

(declare-fun m!61365 () Bool)

(assert (=> b!66869 m!61365))

(declare-fun m!61367 () Bool)

(assert (=> b!66862 m!61367))

(assert (=> b!66873 m!60839))

(assert (=> b!66873 m!60839))

(assert (=> b!66873 m!60841))

(assert (=> bm!5500 d!13803))

(declare-fun d!13805 () Bool)

(declare-fun res!36164 () Bool)

(declare-fun e!43851 () Bool)

(assert (=> d!13805 (=> (not res!36164) (not e!43851))))

(assert (=> d!13805 (= res!36164 (simpleValid!48 (v!2469 (underlying!244 thiss!992))))))

(assert (=> d!13805 (= (valid!287 (v!2469 (underlying!244 thiss!992))) e!43851)))

(declare-fun b!66874 () Bool)

(declare-fun res!36165 () Bool)

(assert (=> b!66874 (=> (not res!36165) (not e!43851))))

(assert (=> b!66874 (= res!36165 (= (arrayCountValidKeys!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000000 (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))) (_size!384 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun b!66875 () Bool)

(declare-fun res!36166 () Bool)

(assert (=> b!66875 (=> (not res!36166) (not e!43851))))

(assert (=> b!66875 (= res!36166 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun b!66876 () Bool)

(assert (=> b!66876 (= e!43851 (arrayNoDuplicates!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000000 Nil!1464))))

(assert (= (and d!13805 res!36164) b!66874))

(assert (= (and b!66874 res!36165) b!66875))

(assert (= (and b!66875 res!36166) b!66876))

(declare-fun m!61369 () Bool)

(assert (=> d!13805 m!61369))

(declare-fun m!61371 () Bool)

(assert (=> b!66874 m!61371))

(declare-fun m!61373 () Bool)

(assert (=> b!66875 m!61373))

(declare-fun m!61375 () Bool)

(assert (=> b!66876 m!61375))

(assert (=> d!13671 d!13805))

(assert (=> d!13663 d!13669))

(declare-fun d!13807 () Bool)

(assert (=> d!13807 (arrayNoDuplicates!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) from!355 Nil!1464)))

(assert (=> d!13807 true))

(declare-fun _$71!87 () Unit!1818)

(assert (=> d!13807 (= (choose!39 (_keys!3785 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!87)))

(declare-fun bs!2857 () Bool)

(assert (= bs!2857 d!13807))

(assert (=> bs!2857 m!60475))

(assert (=> d!13663 d!13807))

(declare-fun d!13809 () Bool)

(declare-fun lt!28963 () Bool)

(assert (=> d!13809 (= lt!28963 (select (content!71 (toList!705 lt!28525)) lt!28403))))

(declare-fun e!43852 () Bool)

(assert (=> d!13809 (= lt!28963 e!43852)))

(declare-fun res!36168 () Bool)

(assert (=> d!13809 (=> (not res!36168) (not e!43852))))

(assert (=> d!13809 (= res!36168 ((_ is Cons!1462) (toList!705 lt!28525)))))

(assert (=> d!13809 (= (contains!707 (toList!705 lt!28525) lt!28403) lt!28963)))

(declare-fun b!66877 () Bool)

(declare-fun e!43853 () Bool)

(assert (=> b!66877 (= e!43852 e!43853)))

(declare-fun res!36167 () Bool)

(assert (=> b!66877 (=> res!36167 e!43853)))

(assert (=> b!66877 (= res!36167 (= (h!2046 (toList!705 lt!28525)) lt!28403))))

(declare-fun b!66878 () Bool)

(assert (=> b!66878 (= e!43853 (contains!707 (t!4939 (toList!705 lt!28525)) lt!28403))))

(assert (= (and d!13809 res!36168) b!66877))

(assert (= (and b!66877 (not res!36167)) b!66878))

(declare-fun m!61377 () Bool)

(assert (=> d!13809 m!61377))

(declare-fun m!61379 () Bool)

(assert (=> d!13809 m!61379))

(declare-fun m!61381 () Bool)

(assert (=> b!66878 m!61381))

(assert (=> b!66288 d!13809))

(assert (=> b!66503 d!13665))

(declare-fun b!66882 () Bool)

(declare-fun e!43855 () Option!134)

(assert (=> b!66882 (= e!43855 None!132)))

(declare-fun b!66881 () Bool)

(assert (=> b!66881 (= e!43855 (getValueByKey!128 (t!4939 (toList!705 lt!28492)) (_1!1052 lt!28408)))))

(declare-fun b!66879 () Bool)

(declare-fun e!43854 () Option!134)

(assert (=> b!66879 (= e!43854 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28492)))))))

(declare-fun d!13811 () Bool)

(declare-fun c!9255 () Bool)

(assert (=> d!13811 (= c!9255 (and ((_ is Cons!1462) (toList!705 lt!28492)) (= (_1!1052 (h!2046 (toList!705 lt!28492))) (_1!1052 lt!28408))))))

(assert (=> d!13811 (= (getValueByKey!128 (toList!705 lt!28492) (_1!1052 lt!28408)) e!43854)))

(declare-fun b!66880 () Bool)

(assert (=> b!66880 (= e!43854 e!43855)))

(declare-fun c!9256 () Bool)

(assert (=> b!66880 (= c!9256 (and ((_ is Cons!1462) (toList!705 lt!28492)) (not (= (_1!1052 (h!2046 (toList!705 lt!28492))) (_1!1052 lt!28408)))))))

(assert (= (and d!13811 c!9255) b!66879))

(assert (= (and d!13811 (not c!9255)) b!66880))

(assert (= (and b!66880 c!9256) b!66881))

(assert (= (and b!66880 (not c!9256)) b!66882))

(declare-fun m!61383 () Bool)

(assert (=> b!66881 m!61383))

(assert (=> b!66245 d!13811))

(declare-fun d!13813 () Bool)

(assert (=> d!13813 (= (apply!72 lt!28687 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1123 (getValueByKey!128 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2858 () Bool)

(assert (= bs!2858 d!13813))

(assert (=> bs!2858 m!60627))

(declare-fun m!61385 () Bool)

(assert (=> bs!2858 m!61385))

(assert (=> bs!2858 m!61385))

(declare-fun m!61387 () Bool)

(assert (=> bs!2858 m!61387))

(assert (=> b!66483 d!13813))

(assert (=> b!66483 d!13705))

(assert (=> b!66276 d!13717))

(declare-fun d!13815 () Bool)

(declare-fun e!43858 () Bool)

(assert (=> d!13815 e!43858))

(declare-fun res!36173 () Bool)

(assert (=> d!13815 (=> (not res!36173) (not e!43858))))

(declare-fun lt!28968 () SeekEntryResult!236)

(assert (=> d!13815 (= res!36173 ((_ is Found!236) lt!28968))))

(assert (=> d!13815 (= lt!28968 (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(declare-fun lt!28969 () Unit!1818)

(declare-fun choose!381 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) Int) Unit!1818)

(assert (=> d!13815 (= lt!28969 (choose!381 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)))))

(assert (=> d!13815 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13815 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)) lt!28969)))

(declare-fun b!66887 () Bool)

(declare-fun res!36174 () Bool)

(assert (=> b!66887 (=> (not res!36174) (not e!43858))))

(assert (=> b!66887 (= res!36174 (inRange!0 (index!3073 lt!28968) (mask!6080 newMap!16)))))

(declare-fun b!66888 () Bool)

(assert (=> b!66888 (= e!43858 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28968)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> b!66888 (and (bvsge (index!3073 lt!28968) #b00000000000000000000000000000000) (bvslt (index!3073 lt!28968) (size!2058 (_keys!3785 newMap!16))))))

(assert (= (and d!13815 res!36173) b!66887))

(assert (= (and b!66887 res!36174) b!66888))

(assert (=> d!13815 m!60449))

(assert (=> d!13815 m!60701))

(assert (=> d!13815 m!60449))

(declare-fun m!61389 () Bool)

(assert (=> d!13815 m!61389))

(assert (=> d!13815 m!60845))

(declare-fun m!61391 () Bool)

(assert (=> b!66887 m!61391))

(declare-fun m!61393 () Bool)

(assert (=> b!66888 m!61393))

(assert (=> bm!5522 d!13815))

(declare-fun d!13817 () Bool)

(assert (=> d!13817 (= (+!87 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28614 (zeroValue!2054 newMap!16) lt!28400 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28972 () Unit!1818)

(declare-fun choose!382 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 V!2913 Int) Unit!1818)

(assert (=> d!13817 (= lt!28972 (choose!382 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) lt!28614 (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) lt!28400 (defaultEntry!2146 newMap!16)))))

(assert (=> d!13817 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13817 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!21 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) lt!28614 (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) lt!28400 (defaultEntry!2146 newMap!16)) lt!28972)))

(declare-fun bs!2859 () Bool)

(assert (= bs!2859 d!13817))

(assert (=> bs!2859 m!60845))

(assert (=> bs!2859 m!60697))

(declare-fun m!61395 () Bool)

(assert (=> bs!2859 m!61395))

(assert (=> bs!2859 m!60697))

(declare-fun m!61397 () Bool)

(assert (=> bs!2859 m!61397))

(declare-fun m!61399 () Bool)

(assert (=> bs!2859 m!61399))

(assert (=> b!66408 d!13817))

(declare-fun d!13819 () Bool)

(declare-fun e!43859 () Bool)

(assert (=> d!13819 e!43859))

(declare-fun res!36175 () Bool)

(assert (=> d!13819 (=> res!36175 e!43859)))

(declare-fun lt!28976 () Bool)

(assert (=> d!13819 (= res!36175 (not lt!28976))))

(declare-fun lt!28975 () Bool)

(assert (=> d!13819 (= lt!28976 lt!28975)))

(declare-fun lt!28973 () Unit!1818)

(declare-fun e!43860 () Unit!1818)

(assert (=> d!13819 (= lt!28973 e!43860)))

(declare-fun c!9257 () Bool)

(assert (=> d!13819 (= c!9257 lt!28975)))

(assert (=> d!13819 (= lt!28975 (containsKey!132 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13819 (= (contains!705 lt!28687 #b0000000000000000000000000000000000000000000000000000000000000000) lt!28976)))

(declare-fun b!66889 () Bool)

(declare-fun lt!28974 () Unit!1818)

(assert (=> b!66889 (= e!43860 lt!28974)))

(assert (=> b!66889 (= lt!28974 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66889 (isDefined!82 (getValueByKey!128 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66890 () Bool)

(declare-fun Unit!1844 () Unit!1818)

(assert (=> b!66890 (= e!43860 Unit!1844)))

(declare-fun b!66891 () Bool)

(assert (=> b!66891 (= e!43859 (isDefined!82 (getValueByKey!128 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13819 c!9257) b!66889))

(assert (= (and d!13819 (not c!9257)) b!66890))

(assert (= (and d!13819 (not res!36175)) b!66891))

(declare-fun m!61401 () Bool)

(assert (=> d!13819 m!61401))

(declare-fun m!61403 () Bool)

(assert (=> b!66889 m!61403))

(assert (=> b!66889 m!61313))

(assert (=> b!66889 m!61313))

(declare-fun m!61405 () Bool)

(assert (=> b!66889 m!61405))

(assert (=> b!66891 m!61313))

(assert (=> b!66891 m!61313))

(assert (=> b!66891 m!61405))

(assert (=> bm!5538 d!13819))

(declare-fun d!13821 () Bool)

(assert (=> d!13821 (= (get!1122 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66429 d!13821))

(declare-fun d!13823 () Bool)

(declare-fun e!43861 () Bool)

(assert (=> d!13823 e!43861))

(declare-fun res!36176 () Bool)

(assert (=> d!13823 (=> res!36176 e!43861)))

(declare-fun lt!28980 () Bool)

(assert (=> d!13823 (= res!36176 (not lt!28980))))

(declare-fun lt!28979 () Bool)

(assert (=> d!13823 (= lt!28980 lt!28979)))

(declare-fun lt!28977 () Unit!1818)

(declare-fun e!43862 () Unit!1818)

(assert (=> d!13823 (= lt!28977 e!43862)))

(declare-fun c!9258 () Bool)

(assert (=> d!13823 (= c!9258 lt!28979)))

(assert (=> d!13823 (= lt!28979 (containsKey!132 (toList!705 call!5520) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!13823 (= (contains!705 call!5520 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) lt!28980)))

(declare-fun b!66892 () Bool)

(declare-fun lt!28978 () Unit!1818)

(assert (=> b!66892 (= e!43862 lt!28978)))

(assert (=> b!66892 (= lt!28978 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 call!5520) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> b!66892 (isDefined!82 (getValueByKey!128 (toList!705 call!5520) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!66893 () Bool)

(declare-fun Unit!1845 () Unit!1818)

(assert (=> b!66893 (= e!43862 Unit!1845)))

(declare-fun b!66894 () Bool)

(assert (=> b!66894 (= e!43861 (isDefined!82 (getValueByKey!128 (toList!705 call!5520) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (= (and d!13823 c!9258) b!66892))

(assert (= (and d!13823 (not c!9258)) b!66893))

(assert (= (and d!13823 (not res!36176)) b!66894))

(assert (=> d!13823 m!60449))

(declare-fun m!61407 () Bool)

(assert (=> d!13823 m!61407))

(assert (=> b!66892 m!60449))

(declare-fun m!61409 () Bool)

(assert (=> b!66892 m!61409))

(assert (=> b!66892 m!60449))

(declare-fun m!61411 () Bool)

(assert (=> b!66892 m!61411))

(assert (=> b!66892 m!61411))

(declare-fun m!61413 () Bool)

(assert (=> b!66892 m!61413))

(assert (=> b!66894 m!60449))

(assert (=> b!66894 m!61411))

(assert (=> b!66894 m!61411))

(assert (=> b!66894 m!61413))

(assert (=> b!66382 d!13823))

(declare-fun d!13825 () Bool)

(declare-fun e!43863 () Bool)

(assert (=> d!13825 e!43863))

(declare-fun res!36177 () Bool)

(assert (=> d!13825 (=> res!36177 e!43863)))

(declare-fun lt!28984 () Bool)

(assert (=> d!13825 (= res!36177 (not lt!28984))))

(declare-fun lt!28983 () Bool)

(assert (=> d!13825 (= lt!28984 lt!28983)))

(declare-fun lt!28981 () Unit!1818)

(declare-fun e!43864 () Unit!1818)

(assert (=> d!13825 (= lt!28981 e!43864)))

(declare-fun c!9259 () Bool)

(assert (=> d!13825 (= c!9259 lt!28983)))

(assert (=> d!13825 (= lt!28983 (containsKey!132 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13825 (= (contains!705 lt!28687 #b1000000000000000000000000000000000000000000000000000000000000000) lt!28984)))

(declare-fun b!66895 () Bool)

(declare-fun lt!28982 () Unit!1818)

(assert (=> b!66895 (= e!43864 lt!28982)))

(assert (=> b!66895 (= lt!28982 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66895 (isDefined!82 (getValueByKey!128 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66896 () Bool)

(declare-fun Unit!1846 () Unit!1818)

(assert (=> b!66896 (= e!43864 Unit!1846)))

(declare-fun b!66897 () Bool)

(assert (=> b!66897 (= e!43863 (isDefined!82 (getValueByKey!128 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13825 c!9259) b!66895))

(assert (= (and d!13825 (not c!9259)) b!66896))

(assert (= (and d!13825 (not res!36177)) b!66897))

(declare-fun m!61415 () Bool)

(assert (=> d!13825 m!61415))

(declare-fun m!61417 () Bool)

(assert (=> b!66895 m!61417))

(assert (=> b!66895 m!60899))

(assert (=> b!66895 m!60899))

(declare-fun m!61419 () Bool)

(assert (=> b!66895 m!61419))

(assert (=> b!66897 m!60899))

(assert (=> b!66897 m!60899))

(assert (=> b!66897 m!61419))

(assert (=> bm!5544 d!13825))

(declare-fun d!13827 () Bool)

(declare-fun e!43865 () Bool)

(assert (=> d!13827 e!43865))

(declare-fun res!36178 () Bool)

(assert (=> d!13827 (=> res!36178 e!43865)))

(declare-fun lt!28988 () Bool)

(assert (=> d!13827 (= res!36178 (not lt!28988))))

(declare-fun lt!28987 () Bool)

(assert (=> d!13827 (= lt!28988 lt!28987)))

(declare-fun lt!28985 () Unit!1818)

(declare-fun e!43866 () Unit!1818)

(assert (=> d!13827 (= lt!28985 e!43866)))

(declare-fun c!9260 () Bool)

(assert (=> d!13827 (= c!9260 lt!28987)))

(assert (=> d!13827 (= lt!28987 (containsKey!132 (toList!705 lt!28492) (_1!1052 lt!28408)))))

(assert (=> d!13827 (= (contains!705 lt!28492 (_1!1052 lt!28408)) lt!28988)))

(declare-fun b!66898 () Bool)

(declare-fun lt!28986 () Unit!1818)

(assert (=> b!66898 (= e!43866 lt!28986)))

(assert (=> b!66898 (= lt!28986 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28492) (_1!1052 lt!28408)))))

(assert (=> b!66898 (isDefined!82 (getValueByKey!128 (toList!705 lt!28492) (_1!1052 lt!28408)))))

(declare-fun b!66899 () Bool)

(declare-fun Unit!1847 () Unit!1818)

(assert (=> b!66899 (= e!43866 Unit!1847)))

(declare-fun b!66900 () Bool)

(assert (=> b!66900 (= e!43865 (isDefined!82 (getValueByKey!128 (toList!705 lt!28492) (_1!1052 lt!28408))))))

(assert (= (and d!13827 c!9260) b!66898))

(assert (= (and d!13827 (not c!9260)) b!66899))

(assert (= (and d!13827 (not res!36178)) b!66900))

(declare-fun m!61421 () Bool)

(assert (=> d!13827 m!61421))

(declare-fun m!61423 () Bool)

(assert (=> b!66898 m!61423))

(assert (=> b!66898 m!60609))

(assert (=> b!66898 m!60609))

(declare-fun m!61425 () Bool)

(assert (=> b!66898 m!61425))

(assert (=> b!66900 m!60609))

(assert (=> b!66900 m!60609))

(assert (=> b!66900 m!61425))

(assert (=> d!13633 d!13827))

(declare-fun b!66904 () Bool)

(declare-fun e!43868 () Option!134)

(assert (=> b!66904 (= e!43868 None!132)))

(declare-fun b!66903 () Bool)

(assert (=> b!66903 (= e!43868 (getValueByKey!128 (t!4939 lt!28494) (_1!1052 lt!28408)))))

(declare-fun b!66901 () Bool)

(declare-fun e!43867 () Option!134)

(assert (=> b!66901 (= e!43867 (Some!133 (_2!1052 (h!2046 lt!28494))))))

(declare-fun d!13829 () Bool)

(declare-fun c!9261 () Bool)

(assert (=> d!13829 (= c!9261 (and ((_ is Cons!1462) lt!28494) (= (_1!1052 (h!2046 lt!28494)) (_1!1052 lt!28408))))))

(assert (=> d!13829 (= (getValueByKey!128 lt!28494 (_1!1052 lt!28408)) e!43867)))

(declare-fun b!66902 () Bool)

(assert (=> b!66902 (= e!43867 e!43868)))

(declare-fun c!9262 () Bool)

(assert (=> b!66902 (= c!9262 (and ((_ is Cons!1462) lt!28494) (not (= (_1!1052 (h!2046 lt!28494)) (_1!1052 lt!28408)))))))

(assert (= (and d!13829 c!9261) b!66901))

(assert (= (and d!13829 (not c!9261)) b!66902))

(assert (= (and b!66902 c!9262) b!66903))

(assert (= (and b!66902 (not c!9262)) b!66904))

(declare-fun m!61427 () Bool)

(assert (=> b!66903 m!61427))

(assert (=> d!13633 d!13829))

(declare-fun d!13831 () Bool)

(assert (=> d!13831 (= (getValueByKey!128 lt!28494 (_1!1052 lt!28408)) (Some!133 (_2!1052 lt!28408)))))

(declare-fun lt!28989 () Unit!1818)

(assert (=> d!13831 (= lt!28989 (choose!375 lt!28494 (_1!1052 lt!28408) (_2!1052 lt!28408)))))

(declare-fun e!43869 () Bool)

(assert (=> d!13831 e!43869))

(declare-fun res!36179 () Bool)

(assert (=> d!13831 (=> (not res!36179) (not e!43869))))

(assert (=> d!13831 (= res!36179 (isStrictlySorted!284 lt!28494))))

(assert (=> d!13831 (= (lemmaContainsTupThenGetReturnValue!48 lt!28494 (_1!1052 lt!28408) (_2!1052 lt!28408)) lt!28989)))

(declare-fun b!66905 () Bool)

(declare-fun res!36180 () Bool)

(assert (=> b!66905 (=> (not res!36180) (not e!43869))))

(assert (=> b!66905 (= res!36180 (containsKey!132 lt!28494 (_1!1052 lt!28408)))))

(declare-fun b!66906 () Bool)

(assert (=> b!66906 (= e!43869 (contains!707 lt!28494 (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(assert (= (and d!13831 res!36179) b!66905))

(assert (= (and b!66905 res!36180) b!66906))

(assert (=> d!13831 m!60603))

(declare-fun m!61429 () Bool)

(assert (=> d!13831 m!61429))

(declare-fun m!61431 () Bool)

(assert (=> d!13831 m!61431))

(declare-fun m!61433 () Bool)

(assert (=> b!66905 m!61433))

(declare-fun m!61435 () Bool)

(assert (=> b!66906 m!61435))

(assert (=> d!13633 d!13831))

(declare-fun bm!5598 () Bool)

(declare-fun call!5602 () List!1466)

(declare-fun call!5603 () List!1466)

(assert (=> bm!5598 (= call!5602 call!5603)))

(declare-fun d!13833 () Bool)

(declare-fun e!43871 () Bool)

(assert (=> d!13833 e!43871))

(declare-fun res!36182 () Bool)

(assert (=> d!13833 (=> (not res!36182) (not e!43871))))

(declare-fun lt!28990 () List!1466)

(assert (=> d!13833 (= res!36182 (isStrictlySorted!284 lt!28990))))

(declare-fun e!43872 () List!1466)

(assert (=> d!13833 (= lt!28990 e!43872)))

(declare-fun c!9264 () Bool)

(assert (=> d!13833 (= c!9264 (and ((_ is Cons!1462) (toList!705 lt!28402)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 lt!28408))))))

(assert (=> d!13833 (isStrictlySorted!284 (toList!705 lt!28402))))

(assert (=> d!13833 (= (insertStrictlySorted!51 (toList!705 lt!28402) (_1!1052 lt!28408) (_2!1052 lt!28408)) lt!28990)))

(declare-fun b!66907 () Bool)

(declare-fun c!9263 () Bool)

(assert (=> b!66907 (= c!9263 (and ((_ is Cons!1462) (toList!705 lt!28402)) (bvsgt (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 lt!28408))))))

(declare-fun e!43873 () List!1466)

(declare-fun e!43870 () List!1466)

(assert (=> b!66907 (= e!43873 e!43870)))

(declare-fun e!43874 () List!1466)

(declare-fun c!9266 () Bool)

(declare-fun b!66908 () Bool)

(assert (=> b!66908 (= e!43874 (ite c!9266 (t!4939 (toList!705 lt!28402)) (ite c!9263 (Cons!1462 (h!2046 (toList!705 lt!28402)) (t!4939 (toList!705 lt!28402))) Nil!1463)))))

(declare-fun b!66909 () Bool)

(assert (=> b!66909 (= e!43872 e!43873)))

(assert (=> b!66909 (= c!9266 (and ((_ is Cons!1462) (toList!705 lt!28402)) (= (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 lt!28408))))))

(declare-fun bm!5599 () Bool)

(declare-fun call!5601 () List!1466)

(assert (=> bm!5599 (= call!5603 call!5601)))

(declare-fun b!66910 () Bool)

(assert (=> b!66910 (= e!43874 (insertStrictlySorted!51 (t!4939 (toList!705 lt!28402)) (_1!1052 lt!28408) (_2!1052 lt!28408)))))

(declare-fun b!66911 () Bool)

(assert (=> b!66911 (= e!43871 (contains!707 lt!28990 (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(declare-fun b!66912 () Bool)

(assert (=> b!66912 (= e!43873 call!5603)))

(declare-fun b!66913 () Bool)

(assert (=> b!66913 (= e!43872 call!5601)))

(declare-fun b!66914 () Bool)

(declare-fun res!36181 () Bool)

(assert (=> b!66914 (=> (not res!36181) (not e!43871))))

(assert (=> b!66914 (= res!36181 (containsKey!132 lt!28990 (_1!1052 lt!28408)))))

(declare-fun b!66915 () Bool)

(assert (=> b!66915 (= e!43870 call!5602)))

(declare-fun b!66916 () Bool)

(assert (=> b!66916 (= e!43870 call!5602)))

(declare-fun bm!5600 () Bool)

(assert (=> bm!5600 (= call!5601 ($colon$colon!62 e!43874 (ite c!9264 (h!2046 (toList!705 lt!28402)) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408)))))))

(declare-fun c!9265 () Bool)

(assert (=> bm!5600 (= c!9265 c!9264)))

(assert (= (and d!13833 c!9264) b!66913))

(assert (= (and d!13833 (not c!9264)) b!66909))

(assert (= (and b!66909 c!9266) b!66912))

(assert (= (and b!66909 (not c!9266)) b!66907))

(assert (= (and b!66907 c!9263) b!66916))

(assert (= (and b!66907 (not c!9263)) b!66915))

(assert (= (or b!66916 b!66915) bm!5598))

(assert (= (or b!66912 bm!5598) bm!5599))

(assert (= (or b!66913 bm!5599) bm!5600))

(assert (= (and bm!5600 c!9265) b!66910))

(assert (= (and bm!5600 (not c!9265)) b!66908))

(assert (= (and d!13833 res!36182) b!66914))

(assert (= (and b!66914 res!36181) b!66911))

(declare-fun m!61437 () Bool)

(assert (=> d!13833 m!61437))

(declare-fun m!61439 () Bool)

(assert (=> d!13833 m!61439))

(declare-fun m!61441 () Bool)

(assert (=> b!66914 m!61441))

(declare-fun m!61443 () Bool)

(assert (=> b!66911 m!61443))

(declare-fun m!61445 () Bool)

(assert (=> bm!5600 m!61445))

(declare-fun m!61447 () Bool)

(assert (=> b!66910 m!61447))

(assert (=> d!13633 d!13833))

(declare-fun b!66920 () Bool)

(declare-fun e!43876 () Option!134)

(assert (=> b!66920 (= e!43876 None!132)))

(declare-fun b!66919 () Bool)

(assert (=> b!66919 (= e!43876 (getValueByKey!128 (t!4939 (toList!705 lt!28525)) (_1!1052 lt!28403)))))

(declare-fun b!66917 () Bool)

(declare-fun e!43875 () Option!134)

(assert (=> b!66917 (= e!43875 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28525)))))))

(declare-fun d!13835 () Bool)

(declare-fun c!9267 () Bool)

(assert (=> d!13835 (= c!9267 (and ((_ is Cons!1462) (toList!705 lt!28525)) (= (_1!1052 (h!2046 (toList!705 lt!28525))) (_1!1052 lt!28403))))))

(assert (=> d!13835 (= (getValueByKey!128 (toList!705 lt!28525) (_1!1052 lt!28403)) e!43875)))

(declare-fun b!66918 () Bool)

(assert (=> b!66918 (= e!43875 e!43876)))

(declare-fun c!9268 () Bool)

(assert (=> b!66918 (= c!9268 (and ((_ is Cons!1462) (toList!705 lt!28525)) (not (= (_1!1052 (h!2046 (toList!705 lt!28525))) (_1!1052 lt!28403)))))))

(assert (= (and d!13835 c!9267) b!66917))

(assert (= (and d!13835 (not c!9267)) b!66918))

(assert (= (and b!66918 c!9268) b!66919))

(assert (= (and b!66918 (not c!9268)) b!66920))

(declare-fun m!61449 () Bool)

(assert (=> b!66919 m!61449))

(assert (=> b!66287 d!13835))

(declare-fun b!66924 () Bool)

(declare-fun e!43878 () Option!134)

(assert (=> b!66924 (= e!43878 None!132)))

(declare-fun b!66923 () Bool)

(assert (=> b!66923 (= e!43878 (getValueByKey!128 (t!4939 (toList!705 lt!28521)) (_1!1052 lt!28403)))))

(declare-fun b!66921 () Bool)

(declare-fun e!43877 () Option!134)

(assert (=> b!66921 (= e!43877 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28521)))))))

(declare-fun d!13837 () Bool)

(declare-fun c!9269 () Bool)

(assert (=> d!13837 (= c!9269 (and ((_ is Cons!1462) (toList!705 lt!28521)) (= (_1!1052 (h!2046 (toList!705 lt!28521))) (_1!1052 lt!28403))))))

(assert (=> d!13837 (= (getValueByKey!128 (toList!705 lt!28521) (_1!1052 lt!28403)) e!43877)))

(declare-fun b!66922 () Bool)

(assert (=> b!66922 (= e!43877 e!43878)))

(declare-fun c!9270 () Bool)

(assert (=> b!66922 (= c!9270 (and ((_ is Cons!1462) (toList!705 lt!28521)) (not (= (_1!1052 (h!2046 (toList!705 lt!28521))) (_1!1052 lt!28403)))))))

(assert (= (and d!13837 c!9269) b!66921))

(assert (= (and d!13837 (not c!9269)) b!66922))

(assert (= (and b!66922 c!9270) b!66923))

(assert (= (and b!66922 (not c!9270)) b!66924))

(declare-fun m!61451 () Bool)

(assert (=> b!66923 m!61451))

(assert (=> b!66285 d!13837))

(declare-fun d!13839 () Bool)

(assert (=> d!13839 (= (+!87 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28603 lt!28400 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28993 () Unit!1818)

(declare-fun choose!383 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 V!2913 Int) Unit!1818)

(assert (=> d!13839 (= lt!28993 (choose!383 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) lt!28603 (zeroValue!2054 newMap!16) lt!28400 (minValue!2054 newMap!16) (defaultEntry!2146 newMap!16)))))

(assert (=> d!13839 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13839 (= (lemmaChangeZeroKeyThenAddPairToListMap!21 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) lt!28603 (zeroValue!2054 newMap!16) lt!28400 (minValue!2054 newMap!16) (defaultEntry!2146 newMap!16)) lt!28993)))

(declare-fun bs!2860 () Bool)

(assert (= bs!2860 d!13839))

(assert (=> bs!2860 m!60845))

(assert (=> bs!2860 m!60697))

(declare-fun m!61453 () Bool)

(assert (=> bs!2860 m!61453))

(declare-fun m!61455 () Bool)

(assert (=> bs!2860 m!61455))

(assert (=> bs!2860 m!60697))

(declare-fun m!61457 () Bool)

(assert (=> bs!2860 m!61457))

(assert (=> b!66423 d!13839))

(declare-fun d!13841 () Bool)

(declare-fun e!43879 () Bool)

(assert (=> d!13841 e!43879))

(declare-fun res!36183 () Bool)

(assert (=> d!13841 (=> res!36183 e!43879)))

(declare-fun lt!28997 () Bool)

(assert (=> d!13841 (= res!36183 (not lt!28997))))

(declare-fun lt!28996 () Bool)

(assert (=> d!13841 (= lt!28997 lt!28996)))

(declare-fun lt!28994 () Unit!1818)

(declare-fun e!43880 () Unit!1818)

(assert (=> d!13841 (= lt!28994 e!43880)))

(declare-fun c!9271 () Bool)

(assert (=> d!13841 (= c!9271 lt!28996)))

(assert (=> d!13841 (= lt!28996 (containsKey!132 (toList!705 lt!28525) (_1!1052 lt!28403)))))

(assert (=> d!13841 (= (contains!705 lt!28525 (_1!1052 lt!28403)) lt!28997)))

(declare-fun b!66925 () Bool)

(declare-fun lt!28995 () Unit!1818)

(assert (=> b!66925 (= e!43880 lt!28995)))

(assert (=> b!66925 (= lt!28995 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28525) (_1!1052 lt!28403)))))

(assert (=> b!66925 (isDefined!82 (getValueByKey!128 (toList!705 lt!28525) (_1!1052 lt!28403)))))

(declare-fun b!66926 () Bool)

(declare-fun Unit!1848 () Unit!1818)

(assert (=> b!66926 (= e!43880 Unit!1848)))

(declare-fun b!66927 () Bool)

(assert (=> b!66927 (= e!43879 (isDefined!82 (getValueByKey!128 (toList!705 lt!28525) (_1!1052 lt!28403))))))

(assert (= (and d!13841 c!9271) b!66925))

(assert (= (and d!13841 (not c!9271)) b!66926))

(assert (= (and d!13841 (not res!36183)) b!66927))

(declare-fun m!61459 () Bool)

(assert (=> d!13841 m!61459))

(declare-fun m!61461 () Bool)

(assert (=> b!66925 m!61461))

(assert (=> b!66925 m!60673))

(assert (=> b!66925 m!60673))

(declare-fun m!61463 () Bool)

(assert (=> b!66925 m!61463))

(assert (=> b!66927 m!60673))

(assert (=> b!66927 m!60673))

(assert (=> b!66927 m!61463))

(assert (=> d!13641 d!13841))

(declare-fun b!66931 () Bool)

(declare-fun e!43882 () Option!134)

(assert (=> b!66931 (= e!43882 None!132)))

(declare-fun b!66930 () Bool)

(assert (=> b!66930 (= e!43882 (getValueByKey!128 (t!4939 lt!28527) (_1!1052 lt!28403)))))

(declare-fun b!66928 () Bool)

(declare-fun e!43881 () Option!134)

(assert (=> b!66928 (= e!43881 (Some!133 (_2!1052 (h!2046 lt!28527))))))

(declare-fun d!13843 () Bool)

(declare-fun c!9272 () Bool)

(assert (=> d!13843 (= c!9272 (and ((_ is Cons!1462) lt!28527) (= (_1!1052 (h!2046 lt!28527)) (_1!1052 lt!28403))))))

(assert (=> d!13843 (= (getValueByKey!128 lt!28527 (_1!1052 lt!28403)) e!43881)))

(declare-fun b!66929 () Bool)

(assert (=> b!66929 (= e!43881 e!43882)))

(declare-fun c!9273 () Bool)

(assert (=> b!66929 (= c!9273 (and ((_ is Cons!1462) lt!28527) (not (= (_1!1052 (h!2046 lt!28527)) (_1!1052 lt!28403)))))))

(assert (= (and d!13843 c!9272) b!66928))

(assert (= (and d!13843 (not c!9272)) b!66929))

(assert (= (and b!66929 c!9273) b!66930))

(assert (= (and b!66929 (not c!9273)) b!66931))

(declare-fun m!61465 () Bool)

(assert (=> b!66930 m!61465))

(assert (=> d!13641 d!13843))

(declare-fun d!13845 () Bool)

(assert (=> d!13845 (= (getValueByKey!128 lt!28527 (_1!1052 lt!28403)) (Some!133 (_2!1052 lt!28403)))))

(declare-fun lt!28998 () Unit!1818)

(assert (=> d!13845 (= lt!28998 (choose!375 lt!28527 (_1!1052 lt!28403) (_2!1052 lt!28403)))))

(declare-fun e!43883 () Bool)

(assert (=> d!13845 e!43883))

(declare-fun res!36184 () Bool)

(assert (=> d!13845 (=> (not res!36184) (not e!43883))))

(assert (=> d!13845 (= res!36184 (isStrictlySorted!284 lt!28527))))

(assert (=> d!13845 (= (lemmaContainsTupThenGetReturnValue!48 lt!28527 (_1!1052 lt!28403) (_2!1052 lt!28403)) lt!28998)))

(declare-fun b!66932 () Bool)

(declare-fun res!36185 () Bool)

(assert (=> b!66932 (=> (not res!36185) (not e!43883))))

(assert (=> b!66932 (= res!36185 (containsKey!132 lt!28527 (_1!1052 lt!28403)))))

(declare-fun b!66933 () Bool)

(assert (=> b!66933 (= e!43883 (contains!707 lt!28527 (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(assert (= (and d!13845 res!36184) b!66932))

(assert (= (and b!66932 res!36185) b!66933))

(assert (=> d!13845 m!60667))

(declare-fun m!61467 () Bool)

(assert (=> d!13845 m!61467))

(declare-fun m!61469 () Bool)

(assert (=> d!13845 m!61469))

(declare-fun m!61471 () Bool)

(assert (=> b!66932 m!61471))

(declare-fun m!61473 () Bool)

(assert (=> b!66933 m!61473))

(assert (=> d!13641 d!13845))

(declare-fun bm!5601 () Bool)

(declare-fun call!5605 () List!1466)

(declare-fun call!5606 () List!1466)

(assert (=> bm!5601 (= call!5605 call!5606)))

(declare-fun d!13847 () Bool)

(declare-fun e!43885 () Bool)

(assert (=> d!13847 e!43885))

(declare-fun res!36187 () Bool)

(assert (=> d!13847 (=> (not res!36187) (not e!43885))))

(declare-fun lt!28999 () List!1466)

(assert (=> d!13847 (= res!36187 (isStrictlySorted!284 lt!28999))))

(declare-fun e!43886 () List!1466)

(assert (=> d!13847 (= lt!28999 e!43886)))

(declare-fun c!9275 () Bool)

(assert (=> d!13847 (= c!9275 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28402 lt!28408))) (bvslt (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 lt!28408)))) (_1!1052 lt!28403))))))

(assert (=> d!13847 (isStrictlySorted!284 (toList!705 (+!87 lt!28402 lt!28408)))))

(assert (=> d!13847 (= (insertStrictlySorted!51 (toList!705 (+!87 lt!28402 lt!28408)) (_1!1052 lt!28403) (_2!1052 lt!28403)) lt!28999)))

(declare-fun b!66934 () Bool)

(declare-fun c!9274 () Bool)

(assert (=> b!66934 (= c!9274 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28402 lt!28408))) (bvsgt (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 lt!28408)))) (_1!1052 lt!28403))))))

(declare-fun e!43887 () List!1466)

(declare-fun e!43884 () List!1466)

(assert (=> b!66934 (= e!43887 e!43884)))

(declare-fun c!9277 () Bool)

(declare-fun e!43888 () List!1466)

(declare-fun b!66935 () Bool)

(assert (=> b!66935 (= e!43888 (ite c!9277 (t!4939 (toList!705 (+!87 lt!28402 lt!28408))) (ite c!9274 (Cons!1462 (h!2046 (toList!705 (+!87 lt!28402 lt!28408))) (t!4939 (toList!705 (+!87 lt!28402 lt!28408)))) Nil!1463)))))

(declare-fun b!66936 () Bool)

(assert (=> b!66936 (= e!43886 e!43887)))

(assert (=> b!66936 (= c!9277 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28402 lt!28408))) (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 lt!28408)))) (_1!1052 lt!28403))))))

(declare-fun bm!5602 () Bool)

(declare-fun call!5604 () List!1466)

(assert (=> bm!5602 (= call!5606 call!5604)))

(declare-fun b!66937 () Bool)

(assert (=> b!66937 (= e!43888 (insertStrictlySorted!51 (t!4939 (toList!705 (+!87 lt!28402 lt!28408))) (_1!1052 lt!28403) (_2!1052 lt!28403)))))

(declare-fun b!66938 () Bool)

(assert (=> b!66938 (= e!43885 (contains!707 lt!28999 (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(declare-fun b!66939 () Bool)

(assert (=> b!66939 (= e!43887 call!5606)))

(declare-fun b!66940 () Bool)

(assert (=> b!66940 (= e!43886 call!5604)))

(declare-fun b!66941 () Bool)

(declare-fun res!36186 () Bool)

(assert (=> b!66941 (=> (not res!36186) (not e!43885))))

(assert (=> b!66941 (= res!36186 (containsKey!132 lt!28999 (_1!1052 lt!28403)))))

(declare-fun b!66942 () Bool)

(assert (=> b!66942 (= e!43884 call!5605)))

(declare-fun b!66943 () Bool)

(assert (=> b!66943 (= e!43884 call!5605)))

(declare-fun bm!5603 () Bool)

(assert (=> bm!5603 (= call!5604 ($colon$colon!62 e!43888 (ite c!9275 (h!2046 (toList!705 (+!87 lt!28402 lt!28408))) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403)))))))

(declare-fun c!9276 () Bool)

(assert (=> bm!5603 (= c!9276 c!9275)))

(assert (= (and d!13847 c!9275) b!66940))

(assert (= (and d!13847 (not c!9275)) b!66936))

(assert (= (and b!66936 c!9277) b!66939))

(assert (= (and b!66936 (not c!9277)) b!66934))

(assert (= (and b!66934 c!9274) b!66943))

(assert (= (and b!66934 (not c!9274)) b!66942))

(assert (= (or b!66943 b!66942) bm!5601))

(assert (= (or b!66939 bm!5601) bm!5602))

(assert (= (or b!66940 bm!5602) bm!5603))

(assert (= (and bm!5603 c!9276) b!66937))

(assert (= (and bm!5603 (not c!9276)) b!66935))

(assert (= (and d!13847 res!36187) b!66941))

(assert (= (and b!66941 res!36186) b!66938))

(declare-fun m!61475 () Bool)

(assert (=> d!13847 m!61475))

(declare-fun m!61477 () Bool)

(assert (=> d!13847 m!61477))

(declare-fun m!61479 () Bool)

(assert (=> b!66941 m!61479))

(declare-fun m!61481 () Bool)

(assert (=> b!66938 m!61481))

(declare-fun m!61483 () Bool)

(assert (=> bm!5603 m!61483))

(declare-fun m!61485 () Bool)

(assert (=> b!66937 m!61485))

(assert (=> d!13641 d!13847))

(declare-fun d!13849 () Bool)

(declare-fun lt!29002 () Bool)

(declare-fun content!72 (List!1467) (InoxSet (_ BitVec 64)))

(assert (=> d!13849 (= lt!29002 (select (content!72 Nil!1464) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun e!43894 () Bool)

(assert (=> d!13849 (= lt!29002 e!43894)))

(declare-fun res!36192 () Bool)

(assert (=> d!13849 (=> (not res!36192) (not e!43894))))

(assert (=> d!13849 (= res!36192 ((_ is Cons!1463) Nil!1464))))

(assert (=> d!13849 (= (contains!708 Nil!1464 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) lt!29002)))

(declare-fun b!66948 () Bool)

(declare-fun e!43893 () Bool)

(assert (=> b!66948 (= e!43894 e!43893)))

(declare-fun res!36193 () Bool)

(assert (=> b!66948 (=> res!36193 e!43893)))

(assert (=> b!66948 (= res!36193 (= (h!2047 Nil!1464) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!66949 () Bool)

(assert (=> b!66949 (= e!43893 (contains!708 (t!4940 Nil!1464) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (= (and d!13849 res!36192) b!66948))

(assert (= (and b!66948 (not res!36193)) b!66949))

(declare-fun m!61487 () Bool)

(assert (=> d!13849 m!61487))

(assert (=> d!13849 m!60449))

(declare-fun m!61489 () Bool)

(assert (=> d!13849 m!61489))

(assert (=> b!66949 m!60449))

(declare-fun m!61491 () Bool)

(assert (=> b!66949 m!61491))

(assert (=> b!66517 d!13849))

(declare-fun d!13851 () Bool)

(declare-fun e!43895 () Bool)

(assert (=> d!13851 e!43895))

(declare-fun res!36194 () Bool)

(assert (=> d!13851 (=> res!36194 e!43895)))

(declare-fun lt!29006 () Bool)

(assert (=> d!13851 (= res!36194 (not lt!29006))))

(declare-fun lt!29005 () Bool)

(assert (=> d!13851 (= lt!29006 lt!29005)))

(declare-fun lt!29003 () Unit!1818)

(declare-fun e!43896 () Unit!1818)

(assert (=> d!13851 (= lt!29003 e!43896)))

(declare-fun c!9278 () Bool)

(assert (=> d!13851 (= c!9278 lt!29005)))

(assert (=> d!13851 (= lt!29005 (containsKey!132 (toList!705 lt!28521) (_1!1052 lt!28403)))))

(assert (=> d!13851 (= (contains!705 lt!28521 (_1!1052 lt!28403)) lt!29006)))

(declare-fun b!66950 () Bool)

(declare-fun lt!29004 () Unit!1818)

(assert (=> b!66950 (= e!43896 lt!29004)))

(assert (=> b!66950 (= lt!29004 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28521) (_1!1052 lt!28403)))))

(assert (=> b!66950 (isDefined!82 (getValueByKey!128 (toList!705 lt!28521) (_1!1052 lt!28403)))))

(declare-fun b!66951 () Bool)

(declare-fun Unit!1849 () Unit!1818)

(assert (=> b!66951 (= e!43896 Unit!1849)))

(declare-fun b!66952 () Bool)

(assert (=> b!66952 (= e!43895 (isDefined!82 (getValueByKey!128 (toList!705 lt!28521) (_1!1052 lt!28403))))))

(assert (= (and d!13851 c!9278) b!66950))

(assert (= (and d!13851 (not c!9278)) b!66951))

(assert (= (and d!13851 (not res!36194)) b!66952))

(declare-fun m!61493 () Bool)

(assert (=> d!13851 m!61493))

(declare-fun m!61495 () Bool)

(assert (=> b!66950 m!61495))

(assert (=> b!66950 m!60661))

(assert (=> b!66950 m!60661))

(declare-fun m!61497 () Bool)

(assert (=> b!66950 m!61497))

(assert (=> b!66952 m!60661))

(assert (=> b!66952 m!60661))

(assert (=> b!66952 m!61497))

(assert (=> d!13639 d!13851))

(declare-fun b!66956 () Bool)

(declare-fun e!43898 () Option!134)

(assert (=> b!66956 (= e!43898 None!132)))

(declare-fun b!66955 () Bool)

(assert (=> b!66955 (= e!43898 (getValueByKey!128 (t!4939 lt!28523) (_1!1052 lt!28403)))))

(declare-fun b!66953 () Bool)

(declare-fun e!43897 () Option!134)

(assert (=> b!66953 (= e!43897 (Some!133 (_2!1052 (h!2046 lt!28523))))))

(declare-fun d!13853 () Bool)

(declare-fun c!9279 () Bool)

(assert (=> d!13853 (= c!9279 (and ((_ is Cons!1462) lt!28523) (= (_1!1052 (h!2046 lt!28523)) (_1!1052 lt!28403))))))

(assert (=> d!13853 (= (getValueByKey!128 lt!28523 (_1!1052 lt!28403)) e!43897)))

(declare-fun b!66954 () Bool)

(assert (=> b!66954 (= e!43897 e!43898)))

(declare-fun c!9280 () Bool)

(assert (=> b!66954 (= c!9280 (and ((_ is Cons!1462) lt!28523) (not (= (_1!1052 (h!2046 lt!28523)) (_1!1052 lt!28403)))))))

(assert (= (and d!13853 c!9279) b!66953))

(assert (= (and d!13853 (not c!9279)) b!66954))

(assert (= (and b!66954 c!9280) b!66955))

(assert (= (and b!66954 (not c!9280)) b!66956))

(declare-fun m!61499 () Bool)

(assert (=> b!66955 m!61499))

(assert (=> d!13639 d!13853))

(declare-fun d!13855 () Bool)

(assert (=> d!13855 (= (getValueByKey!128 lt!28523 (_1!1052 lt!28403)) (Some!133 (_2!1052 lt!28403)))))

(declare-fun lt!29007 () Unit!1818)

(assert (=> d!13855 (= lt!29007 (choose!375 lt!28523 (_1!1052 lt!28403) (_2!1052 lt!28403)))))

(declare-fun e!43899 () Bool)

(assert (=> d!13855 e!43899))

(declare-fun res!36195 () Bool)

(assert (=> d!13855 (=> (not res!36195) (not e!43899))))

(assert (=> d!13855 (= res!36195 (isStrictlySorted!284 lt!28523))))

(assert (=> d!13855 (= (lemmaContainsTupThenGetReturnValue!48 lt!28523 (_1!1052 lt!28403) (_2!1052 lt!28403)) lt!29007)))

(declare-fun b!66957 () Bool)

(declare-fun res!36196 () Bool)

(assert (=> b!66957 (=> (not res!36196) (not e!43899))))

(assert (=> b!66957 (= res!36196 (containsKey!132 lt!28523 (_1!1052 lt!28403)))))

(declare-fun b!66958 () Bool)

(assert (=> b!66958 (= e!43899 (contains!707 lt!28523 (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(assert (= (and d!13855 res!36195) b!66957))

(assert (= (and b!66957 res!36196) b!66958))

(assert (=> d!13855 m!60655))

(declare-fun m!61501 () Bool)

(assert (=> d!13855 m!61501))

(declare-fun m!61503 () Bool)

(assert (=> d!13855 m!61503))

(declare-fun m!61505 () Bool)

(assert (=> b!66957 m!61505))

(declare-fun m!61507 () Bool)

(assert (=> b!66958 m!61507))

(assert (=> d!13639 d!13855))

(declare-fun bm!5604 () Bool)

(declare-fun call!5608 () List!1466)

(declare-fun call!5609 () List!1466)

(assert (=> bm!5604 (= call!5608 call!5609)))

(declare-fun d!13857 () Bool)

(declare-fun e!43901 () Bool)

(assert (=> d!13857 e!43901))

(declare-fun res!36198 () Bool)

(assert (=> d!13857 (=> (not res!36198) (not e!43901))))

(declare-fun lt!29008 () List!1466)

(assert (=> d!13857 (= res!36198 (isStrictlySorted!284 lt!29008))))

(declare-fun e!43902 () List!1466)

(assert (=> d!13857 (= lt!29008 e!43902)))

(declare-fun c!9282 () Bool)

(assert (=> d!13857 (= c!9282 (and ((_ is Cons!1462) (toList!705 lt!28402)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 lt!28403))))))

(assert (=> d!13857 (isStrictlySorted!284 (toList!705 lt!28402))))

(assert (=> d!13857 (= (insertStrictlySorted!51 (toList!705 lt!28402) (_1!1052 lt!28403) (_2!1052 lt!28403)) lt!29008)))

(declare-fun b!66959 () Bool)

(declare-fun c!9281 () Bool)

(assert (=> b!66959 (= c!9281 (and ((_ is Cons!1462) (toList!705 lt!28402)) (bvsgt (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 lt!28403))))))

(declare-fun e!43903 () List!1466)

(declare-fun e!43900 () List!1466)

(assert (=> b!66959 (= e!43903 e!43900)))

(declare-fun c!9284 () Bool)

(declare-fun e!43904 () List!1466)

(declare-fun b!66960 () Bool)

(assert (=> b!66960 (= e!43904 (ite c!9284 (t!4939 (toList!705 lt!28402)) (ite c!9281 (Cons!1462 (h!2046 (toList!705 lt!28402)) (t!4939 (toList!705 lt!28402))) Nil!1463)))))

(declare-fun b!66961 () Bool)

(assert (=> b!66961 (= e!43902 e!43903)))

(assert (=> b!66961 (= c!9284 (and ((_ is Cons!1462) (toList!705 lt!28402)) (= (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 lt!28403))))))

(declare-fun bm!5605 () Bool)

(declare-fun call!5607 () List!1466)

(assert (=> bm!5605 (= call!5609 call!5607)))

(declare-fun b!66962 () Bool)

(assert (=> b!66962 (= e!43904 (insertStrictlySorted!51 (t!4939 (toList!705 lt!28402)) (_1!1052 lt!28403) (_2!1052 lt!28403)))))

(declare-fun b!66963 () Bool)

(assert (=> b!66963 (= e!43901 (contains!707 lt!29008 (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(declare-fun b!66964 () Bool)

(assert (=> b!66964 (= e!43903 call!5609)))

(declare-fun b!66965 () Bool)

(assert (=> b!66965 (= e!43902 call!5607)))

(declare-fun b!66966 () Bool)

(declare-fun res!36197 () Bool)

(assert (=> b!66966 (=> (not res!36197) (not e!43901))))

(assert (=> b!66966 (= res!36197 (containsKey!132 lt!29008 (_1!1052 lt!28403)))))

(declare-fun b!66967 () Bool)

(assert (=> b!66967 (= e!43900 call!5608)))

(declare-fun b!66968 () Bool)

(assert (=> b!66968 (= e!43900 call!5608)))

(declare-fun bm!5606 () Bool)

(assert (=> bm!5606 (= call!5607 ($colon$colon!62 e!43904 (ite c!9282 (h!2046 (toList!705 lt!28402)) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403)))))))

(declare-fun c!9283 () Bool)

(assert (=> bm!5606 (= c!9283 c!9282)))

(assert (= (and d!13857 c!9282) b!66965))

(assert (= (and d!13857 (not c!9282)) b!66961))

(assert (= (and b!66961 c!9284) b!66964))

(assert (= (and b!66961 (not c!9284)) b!66959))

(assert (= (and b!66959 c!9281) b!66968))

(assert (= (and b!66959 (not c!9281)) b!66967))

(assert (= (or b!66968 b!66967) bm!5604))

(assert (= (or b!66964 bm!5604) bm!5605))

(assert (= (or b!66965 bm!5605) bm!5606))

(assert (= (and bm!5606 c!9283) b!66962))

(assert (= (and bm!5606 (not c!9283)) b!66960))

(assert (= (and d!13857 res!36198) b!66966))

(assert (= (and b!66966 res!36197) b!66963))

(declare-fun m!61509 () Bool)

(assert (=> d!13857 m!61509))

(assert (=> d!13857 m!61439))

(declare-fun m!61511 () Bool)

(assert (=> b!66966 m!61511))

(declare-fun m!61513 () Bool)

(assert (=> b!66963 m!61513))

(declare-fun m!61515 () Bool)

(assert (=> bm!5606 m!61515))

(declare-fun m!61517 () Bool)

(assert (=> b!66962 m!61517))

(assert (=> d!13639 d!13857))

(assert (=> b!66518 d!13789))

(declare-fun d!13859 () Bool)

(declare-fun e!43905 () Bool)

(assert (=> d!13859 e!43905))

(declare-fun res!36199 () Bool)

(assert (=> d!13859 (=> res!36199 e!43905)))

(declare-fun lt!29012 () Bool)

(assert (=> d!13859 (= res!36199 (not lt!29012))))

(declare-fun lt!29011 () Bool)

(assert (=> d!13859 (= lt!29012 lt!29011)))

(declare-fun lt!29009 () Unit!1818)

(declare-fun e!43906 () Unit!1818)

(assert (=> d!13859 (= lt!29009 e!43906)))

(declare-fun c!9285 () Bool)

(assert (=> d!13859 (= c!9285 lt!29011)))

(assert (=> d!13859 (= lt!29011 (containsKey!132 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!13859 (= (contains!705 lt!28687 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29012)))

(declare-fun b!66969 () Bool)

(declare-fun lt!29010 () Unit!1818)

(assert (=> b!66969 (= e!43906 lt!29010)))

(assert (=> b!66969 (= lt!29010 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66969 (isDefined!82 (getValueByKey!128 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66970 () Bool)

(declare-fun Unit!1850 () Unit!1818)

(assert (=> b!66970 (= e!43906 Unit!1850)))

(declare-fun b!66971 () Bool)

(assert (=> b!66971 (= e!43905 (isDefined!82 (getValueByKey!128 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!13859 c!9285) b!66969))

(assert (= (and d!13859 (not c!9285)) b!66970))

(assert (= (and d!13859 (not res!36199)) b!66971))

(assert (=> d!13859 m!60627))

(declare-fun m!61519 () Bool)

(assert (=> d!13859 m!61519))

(assert (=> b!66969 m!60627))

(declare-fun m!61521 () Bool)

(assert (=> b!66969 m!61521))

(assert (=> b!66969 m!60627))

(assert (=> b!66969 m!61385))

(assert (=> b!66969 m!61385))

(declare-fun m!61523 () Bool)

(assert (=> b!66969 m!61523))

(assert (=> b!66971 m!60627))

(assert (=> b!66971 m!61385))

(assert (=> b!66971 m!61385))

(assert (=> b!66971 m!61523))

(assert (=> b!66488 d!13859))

(declare-fun d!13861 () Bool)

(assert (=> d!13861 (= (apply!72 lt!28513 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1123 (getValueByKey!128 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2861 () Bool)

(assert (= bs!2861 d!13861))

(assert (=> bs!2861 m!60627))

(assert (=> bs!2861 m!61259))

(assert (=> bs!2861 m!61259))

(declare-fun m!61525 () Bool)

(assert (=> bs!2861 m!61525))

(assert (=> b!66284 d!13861))

(assert (=> b!66284 d!13705))

(declare-fun d!13863 () Bool)

(declare-fun isEmpty!313 (Option!134) Bool)

(assert (=> d!13863 (= (isDefined!82 (getValueByKey!128 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))) (not (isEmpty!313 (getValueByKey!128 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))))

(declare-fun bs!2862 () Bool)

(assert (= bs!2862 d!13863))

(assert (=> bs!2862 m!60691))

(declare-fun m!61527 () Bool)

(assert (=> bs!2862 m!61527))

(assert (=> b!66297 d!13863))

(declare-fun b!66975 () Bool)

(declare-fun e!43908 () Option!134)

(assert (=> b!66975 (= e!43908 None!132)))

(declare-fun b!66974 () Bool)

(assert (=> b!66974 (= e!43908 (getValueByKey!128 (t!4939 (toList!705 lt!28404)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!66972 () Bool)

(declare-fun e!43907 () Option!134)

(assert (=> b!66972 (= e!43907 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28404)))))))

(declare-fun c!9286 () Bool)

(declare-fun d!13865 () Bool)

(assert (=> d!13865 (= c!9286 (and ((_ is Cons!1462) (toList!705 lt!28404)) (= (_1!1052 (h!2046 (toList!705 lt!28404))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (=> d!13865 (= (getValueByKey!128 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) e!43907)))

(declare-fun b!66973 () Bool)

(assert (=> b!66973 (= e!43907 e!43908)))

(declare-fun c!9287 () Bool)

(assert (=> b!66973 (= c!9287 (and ((_ is Cons!1462) (toList!705 lt!28404)) (not (= (_1!1052 (h!2046 (toList!705 lt!28404))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))))

(assert (= (and d!13865 c!9286) b!66972))

(assert (= (and d!13865 (not c!9286)) b!66973))

(assert (= (and b!66973 c!9287) b!66974))

(assert (= (and b!66973 (not c!9287)) b!66975))

(assert (=> b!66974 m!60449))

(declare-fun m!61529 () Bool)

(assert (=> b!66974 m!61529))

(assert (=> b!66297 d!13865))

(declare-fun b!66976 () Bool)

(declare-fun e!43920 () Bool)

(declare-fun call!5610 () Bool)

(assert (=> b!66976 (= e!43920 (not call!5610))))

(declare-fun b!66977 () Bool)

(declare-fun c!9289 () Bool)

(assert (=> b!66977 (= c!9289 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!43915 () ListLongMap!1379)

(declare-fun e!43909 () ListLongMap!1379)

(assert (=> b!66977 (= e!43915 e!43909)))

(declare-fun b!66978 () Bool)

(declare-fun res!36202 () Bool)

(declare-fun e!43916 () Bool)

(assert (=> b!66978 (=> (not res!36202) (not e!43916))))

(declare-fun e!43919 () Bool)

(assert (=> b!66978 (= res!36202 e!43919)))

(declare-fun res!36200 () Bool)

(assert (=> b!66978 (=> res!36200 e!43919)))

(declare-fun e!43914 () Bool)

(assert (=> b!66978 (= res!36200 (not e!43914))))

(declare-fun res!36205 () Bool)

(assert (=> b!66978 (=> (not res!36205) (not e!43914))))

(assert (=> b!66978 (= res!36205 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!66979 () Bool)

(declare-fun e!43912 () ListLongMap!1379)

(assert (=> b!66979 (= e!43912 e!43915)))

(declare-fun c!9291 () Bool)

(assert (=> b!66979 (= c!9291 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66980 () Bool)

(declare-fun e!43921 () Unit!1818)

(declare-fun Unit!1851 () Unit!1818)

(assert (=> b!66980 (= e!43921 Unit!1851)))

(declare-fun b!66981 () Bool)

(declare-fun res!36206 () Bool)

(assert (=> b!66981 (=> (not res!36206) (not e!43916))))

(declare-fun e!43917 () Bool)

(assert (=> b!66981 (= res!36206 e!43917)))

(declare-fun c!9290 () Bool)

(assert (=> b!66981 (= c!9290 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5607 () Bool)

(declare-fun call!5616 () Bool)

(declare-fun lt!29032 () ListLongMap!1379)

(assert (=> bm!5607 (= call!5616 (contains!705 lt!29032 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66982 () Bool)

(declare-fun lt!29028 () Unit!1818)

(assert (=> b!66982 (= e!43921 lt!29028)))

(declare-fun lt!29018 () ListLongMap!1379)

(assert (=> b!66982 (= lt!29018 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29031 () (_ BitVec 64))

(assert (=> b!66982 (= lt!29031 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29030 () (_ BitVec 64))

(assert (=> b!66982 (= lt!29030 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29016 () Unit!1818)

(assert (=> b!66982 (= lt!29016 (addStillContains!48 lt!29018 lt!29031 (zeroValue!2054 newMap!16) lt!29030))))

(assert (=> b!66982 (contains!705 (+!87 lt!29018 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16))) lt!29030)))

(declare-fun lt!29023 () Unit!1818)

(assert (=> b!66982 (= lt!29023 lt!29016)))

(declare-fun lt!29015 () ListLongMap!1379)

(assert (=> b!66982 (= lt!29015 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29019 () (_ BitVec 64))

(assert (=> b!66982 (= lt!29019 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29013 () (_ BitVec 64))

(assert (=> b!66982 (= lt!29013 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29034 () Unit!1818)

(assert (=> b!66982 (= lt!29034 (addApplyDifferent!48 lt!29015 lt!29019 (minValue!2054 newMap!16) lt!29013))))

(assert (=> b!66982 (= (apply!72 (+!87 lt!29015 (tuple2!2083 lt!29019 (minValue!2054 newMap!16))) lt!29013) (apply!72 lt!29015 lt!29013))))

(declare-fun lt!29017 () Unit!1818)

(assert (=> b!66982 (= lt!29017 lt!29034)))

(declare-fun lt!29024 () ListLongMap!1379)

(assert (=> b!66982 (= lt!29024 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29027 () (_ BitVec 64))

(assert (=> b!66982 (= lt!29027 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29029 () (_ BitVec 64))

(assert (=> b!66982 (= lt!29029 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29021 () Unit!1818)

(assert (=> b!66982 (= lt!29021 (addApplyDifferent!48 lt!29024 lt!29027 (zeroValue!2054 newMap!16) lt!29029))))

(assert (=> b!66982 (= (apply!72 (+!87 lt!29024 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16))) lt!29029) (apply!72 lt!29024 lt!29029))))

(declare-fun lt!29033 () Unit!1818)

(assert (=> b!66982 (= lt!29033 lt!29021)))

(declare-fun lt!29022 () ListLongMap!1379)

(assert (=> b!66982 (= lt!29022 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29025 () (_ BitVec 64))

(assert (=> b!66982 (= lt!29025 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29026 () (_ BitVec 64))

(assert (=> b!66982 (= lt!29026 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66982 (= lt!29028 (addApplyDifferent!48 lt!29022 lt!29025 (minValue!2054 newMap!16) lt!29026))))

(assert (=> b!66982 (= (apply!72 (+!87 lt!29022 (tuple2!2083 lt!29025 (minValue!2054 newMap!16))) lt!29026) (apply!72 lt!29022 lt!29026))))

(declare-fun d!13867 () Bool)

(assert (=> d!13867 e!43916))

(declare-fun res!36208 () Bool)

(assert (=> d!13867 (=> (not res!36208) (not e!43916))))

(assert (=> d!13867 (= res!36208 (or (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))))

(declare-fun lt!29014 () ListLongMap!1379)

(assert (=> d!13867 (= lt!29032 lt!29014)))

(declare-fun lt!29020 () Unit!1818)

(assert (=> d!13867 (= lt!29020 e!43921)))

(declare-fun c!9293 () Bool)

(declare-fun e!43913 () Bool)

(assert (=> d!13867 (= c!9293 e!43913)))

(declare-fun res!36207 () Bool)

(assert (=> d!13867 (=> (not res!36207) (not e!43913))))

(assert (=> d!13867 (= res!36207 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!13867 (= lt!29014 e!43912)))

(declare-fun c!9292 () Bool)

(assert (=> d!13867 (= c!9292 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13867 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13867 (= (getCurrentListMap!401 (_keys!3785 newMap!16) (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29032)))

(declare-fun bm!5608 () Bool)

(declare-fun call!5614 () ListLongMap!1379)

(declare-fun call!5611 () ListLongMap!1379)

(assert (=> bm!5608 (= call!5614 call!5611)))

(declare-fun b!66983 () Bool)

(assert (=> b!66983 (= e!43917 (not call!5616))))

(declare-fun b!66984 () Bool)

(assert (=> b!66984 (= e!43915 call!5614)))

(declare-fun b!66985 () Bool)

(declare-fun e!43911 () Bool)

(assert (=> b!66985 (= e!43911 (= (apply!72 lt!29032 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun b!66986 () Bool)

(assert (=> b!66986 (= e!43916 e!43920)))

(declare-fun c!9288 () Bool)

(assert (=> b!66986 (= c!9288 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66987 () Bool)

(declare-fun e!43918 () Bool)

(assert (=> b!66987 (= e!43918 (= (apply!72 lt!29032 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66987 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))))))))

(assert (=> b!66987 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!66988 () Bool)

(assert (=> b!66988 (= e!43912 (+!87 call!5611 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun bm!5609 () Bool)

(declare-fun call!5612 () ListLongMap!1379)

(declare-fun call!5615 () ListLongMap!1379)

(assert (=> bm!5609 (= call!5612 call!5615)))

(declare-fun bm!5610 () Bool)

(declare-fun call!5613 () ListLongMap!1379)

(assert (=> bm!5610 (= call!5613 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!66989 () Bool)

(assert (=> b!66989 (= e!43909 call!5612)))

(declare-fun b!66990 () Bool)

(declare-fun e!43910 () Bool)

(assert (=> b!66990 (= e!43910 (= (apply!72 lt!29032 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun bm!5611 () Bool)

(assert (=> bm!5611 (= call!5615 call!5613)))

(declare-fun b!66991 () Bool)

(assert (=> b!66991 (= e!43914 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66992 () Bool)

(assert (=> b!66992 (= e!43919 e!43918)))

(declare-fun res!36203 () Bool)

(assert (=> b!66992 (=> (not res!36203) (not e!43918))))

(assert (=> b!66992 (= res!36203 (contains!705 lt!29032 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!66992 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!66993 () Bool)

(assert (=> b!66993 (= e!43920 e!43910)))

(declare-fun res!36201 () Bool)

(assert (=> b!66993 (= res!36201 call!5610)))

(assert (=> b!66993 (=> (not res!36201) (not e!43910))))

(declare-fun bm!5612 () Bool)

(assert (=> bm!5612 (= call!5611 (+!87 (ite c!9292 call!5613 (ite c!9291 call!5615 call!5612)) (ite (or c!9292 c!9291) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!66994 () Bool)

(assert (=> b!66994 (= e!43917 e!43911)))

(declare-fun res!36204 () Bool)

(assert (=> b!66994 (= res!36204 call!5616)))

(assert (=> b!66994 (=> (not res!36204) (not e!43911))))

(declare-fun b!66995 () Bool)

(assert (=> b!66995 (= e!43909 call!5614)))

(declare-fun b!66996 () Bool)

(assert (=> b!66996 (= e!43913 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5613 () Bool)

(assert (=> bm!5613 (= call!5610 (contains!705 lt!29032 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!13867 c!9292) b!66988))

(assert (= (and d!13867 (not c!9292)) b!66979))

(assert (= (and b!66979 c!9291) b!66984))

(assert (= (and b!66979 (not c!9291)) b!66977))

(assert (= (and b!66977 c!9289) b!66995))

(assert (= (and b!66977 (not c!9289)) b!66989))

(assert (= (or b!66995 b!66989) bm!5609))

(assert (= (or b!66984 bm!5609) bm!5611))

(assert (= (or b!66984 b!66995) bm!5608))

(assert (= (or b!66988 bm!5611) bm!5610))

(assert (= (or b!66988 bm!5608) bm!5612))

(assert (= (and d!13867 res!36207) b!66996))

(assert (= (and d!13867 c!9293) b!66982))

(assert (= (and d!13867 (not c!9293)) b!66980))

(assert (= (and d!13867 res!36208) b!66978))

(assert (= (and b!66978 res!36205) b!66991))

(assert (= (and b!66978 (not res!36200)) b!66992))

(assert (= (and b!66992 res!36203) b!66987))

(assert (= (and b!66978 res!36202) b!66981))

(assert (= (and b!66981 c!9290) b!66994))

(assert (= (and b!66981 (not c!9290)) b!66983))

(assert (= (and b!66994 res!36204) b!66985))

(assert (= (or b!66994 b!66983) bm!5607))

(assert (= (and b!66981 res!36206) b!66986))

(assert (= (and b!66986 c!9288) b!66993))

(assert (= (and b!66986 (not c!9288)) b!66976))

(assert (= (and b!66993 res!36201) b!66990))

(assert (= (or b!66993 b!66976) bm!5613))

(declare-fun b_lambda!2979 () Bool)

(assert (=> (not b_lambda!2979) (not b!66987)))

(assert (=> b!66987 t!4952))

(declare-fun b_and!4121 () Bool)

(assert (= b_and!4117 (and (=> t!4952 result!2587) b_and!4121)))

(assert (=> b!66987 t!4954))

(declare-fun b_and!4123 () Bool)

(assert (= b_and!4119 (and (=> t!4954 result!2589) b_and!4123)))

(declare-fun m!61531 () Bool)

(assert (=> b!66988 m!61531))

(assert (=> d!13867 m!60845))

(declare-fun m!61533 () Bool)

(assert (=> bm!5610 m!61533))

(declare-fun m!61535 () Bool)

(assert (=> b!66990 m!61535))

(assert (=> b!66991 m!60839))

(assert (=> b!66991 m!60839))

(assert (=> b!66991 m!60841))

(declare-fun m!61537 () Bool)

(assert (=> b!66982 m!61537))

(declare-fun m!61539 () Bool)

(assert (=> b!66982 m!61539))

(declare-fun m!61541 () Bool)

(assert (=> b!66982 m!61541))

(declare-fun m!61543 () Bool)

(assert (=> b!66982 m!61543))

(assert (=> b!66982 m!61537))

(declare-fun m!61545 () Bool)

(assert (=> b!66982 m!61545))

(declare-fun m!61547 () Bool)

(assert (=> b!66982 m!61547))

(assert (=> b!66982 m!61541))

(declare-fun m!61549 () Bool)

(assert (=> b!66982 m!61549))

(declare-fun m!61551 () Bool)

(assert (=> b!66982 m!61551))

(declare-fun m!61553 () Bool)

(assert (=> b!66982 m!61553))

(declare-fun m!61555 () Bool)

(assert (=> b!66982 m!61555))

(declare-fun m!61557 () Bool)

(assert (=> b!66982 m!61557))

(assert (=> b!66982 m!61533))

(declare-fun m!61559 () Bool)

(assert (=> b!66982 m!61559))

(assert (=> b!66982 m!61555))

(declare-fun m!61561 () Bool)

(assert (=> b!66982 m!61561))

(assert (=> b!66982 m!60839))

(declare-fun m!61563 () Bool)

(assert (=> b!66982 m!61563))

(assert (=> b!66982 m!61545))

(declare-fun m!61565 () Bool)

(assert (=> b!66982 m!61565))

(declare-fun m!61567 () Bool)

(assert (=> bm!5612 m!61567))

(declare-fun m!61569 () Bool)

(assert (=> bm!5613 m!61569))

(assert (=> b!66987 m!60885))

(assert (=> b!66987 m!60839))

(assert (=> b!66987 m!60839))

(declare-fun m!61571 () Bool)

(assert (=> b!66987 m!61571))

(declare-fun m!61573 () Bool)

(assert (=> b!66987 m!61573))

(assert (=> b!66987 m!60885))

(declare-fun m!61575 () Bool)

(assert (=> b!66987 m!61575))

(assert (=> b!66987 m!61573))

(declare-fun m!61577 () Bool)

(assert (=> bm!5607 m!61577))

(assert (=> b!66992 m!60839))

(assert (=> b!66992 m!60839))

(declare-fun m!61579 () Bool)

(assert (=> b!66992 m!61579))

(declare-fun m!61581 () Bool)

(assert (=> b!66985 m!61581))

(assert (=> b!66996 m!60839))

(assert (=> b!66996 m!60839))

(assert (=> b!66996 m!60841))

(assert (=> bm!5520 d!13867))

(declare-fun d!13869 () Bool)

(assert (=> d!13869 (isDefined!82 (getValueByKey!128 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun lt!29037 () Unit!1818)

(declare-fun choose!384 (List!1466 (_ BitVec 64)) Unit!1818)

(assert (=> d!13869 (= lt!29037 (choose!384 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun e!43924 () Bool)

(assert (=> d!13869 e!43924))

(declare-fun res!36211 () Bool)

(assert (=> d!13869 (=> (not res!36211) (not e!43924))))

(assert (=> d!13869 (= res!36211 (isStrictlySorted!284 (toList!705 lt!28404)))))

(assert (=> d!13869 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) lt!29037)))

(declare-fun b!66999 () Bool)

(assert (=> b!66999 (= e!43924 (containsKey!132 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (= (and d!13869 res!36211) b!66999))

(assert (=> d!13869 m!60449))

(assert (=> d!13869 m!60691))

(assert (=> d!13869 m!60691))

(assert (=> d!13869 m!60693))

(assert (=> d!13869 m!60449))

(declare-fun m!61583 () Bool)

(assert (=> d!13869 m!61583))

(declare-fun m!61585 () Bool)

(assert (=> d!13869 m!61585))

(assert (=> b!66999 m!60449))

(assert (=> b!66999 m!60687))

(assert (=> b!66295 d!13869))

(assert (=> b!66295 d!13863))

(assert (=> b!66295 d!13865))

(declare-fun d!13871 () Bool)

(declare-fun e!43925 () Bool)

(assert (=> d!13871 e!43925))

(declare-fun res!36212 () Bool)

(assert (=> d!13871 (=> (not res!36212) (not e!43925))))

(declare-fun lt!29039 () ListLongMap!1379)

(assert (=> d!13871 (= res!36212 (contains!705 lt!29039 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun lt!29041 () List!1466)

(assert (=> d!13871 (= lt!29039 (ListLongMap!1380 lt!29041))))

(declare-fun lt!29038 () Unit!1818)

(declare-fun lt!29040 () Unit!1818)

(assert (=> d!13871 (= lt!29038 lt!29040)))

(assert (=> d!13871 (= (getValueByKey!128 lt!29041 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) (Some!133 (_2!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!13871 (= lt!29040 (lemmaContainsTupThenGetReturnValue!48 lt!29041 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (_2!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!13871 (= lt!29041 (insertStrictlySorted!51 (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543))) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (_2!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!13871 (= (+!87 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543)) (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29039)))

(declare-fun b!67000 () Bool)

(declare-fun res!36213 () Bool)

(assert (=> b!67000 (=> (not res!36213) (not e!43925))))

(assert (=> b!67000 (= res!36213 (= (getValueByKey!128 (toList!705 lt!29039) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) (Some!133 (_2!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(declare-fun b!67001 () Bool)

(assert (=> b!67001 (= e!43925 (contains!707 (toList!705 lt!29039) (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (= (and d!13871 res!36212) b!67000))

(assert (= (and b!67000 res!36213) b!67001))

(declare-fun m!61587 () Bool)

(assert (=> d!13871 m!61587))

(declare-fun m!61589 () Bool)

(assert (=> d!13871 m!61589))

(declare-fun m!61591 () Bool)

(assert (=> d!13871 m!61591))

(declare-fun m!61593 () Bool)

(assert (=> d!13871 m!61593))

(declare-fun m!61595 () Bool)

(assert (=> b!67000 m!61595))

(declare-fun m!61597 () Bool)

(assert (=> b!67001 m!61597))

(assert (=> bm!5543 d!13871))

(declare-fun d!13873 () Bool)

(declare-fun e!43926 () Bool)

(assert (=> d!13873 e!43926))

(declare-fun res!36214 () Bool)

(assert (=> d!13873 (=> (not res!36214) (not e!43926))))

(declare-fun lt!29043 () ListLongMap!1379)

(assert (=> d!13873 (= res!36214 (contains!705 lt!29043 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun lt!29045 () List!1466)

(assert (=> d!13873 (= lt!29043 (ListLongMap!1380 lt!29045))))

(declare-fun lt!29042 () Unit!1818)

(declare-fun lt!29044 () Unit!1818)

(assert (=> d!13873 (= lt!29042 lt!29044)))

(assert (=> d!13873 (= (getValueByKey!128 lt!29045 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13873 (= lt!29044 (lemmaContainsTupThenGetReturnValue!48 lt!29045 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13873 (= lt!29045 (insertStrictlySorted!51 (toList!705 lt!28402) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13873 (= (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) lt!29043)))

(declare-fun b!67002 () Bool)

(declare-fun res!36215 () Bool)

(assert (=> b!67002 (=> (not res!36215) (not e!43926))))

(assert (=> b!67002 (= res!36215 (= (getValueByKey!128 (toList!705 lt!29043) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!67003 () Bool)

(assert (=> b!67003 (= e!43926 (contains!707 (toList!705 lt!29043) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(assert (= (and d!13873 res!36214) b!67002))

(assert (= (and b!67002 res!36215) b!67003))

(declare-fun m!61599 () Bool)

(assert (=> d!13873 m!61599))

(declare-fun m!61601 () Bool)

(assert (=> d!13873 m!61601))

(declare-fun m!61603 () Bool)

(assert (=> d!13873 m!61603))

(declare-fun m!61605 () Bool)

(assert (=> d!13873 m!61605))

(declare-fun m!61607 () Bool)

(assert (=> b!67002 m!61607))

(declare-fun m!61609 () Bool)

(assert (=> b!67003 m!61609))

(assert (=> d!13643 d!13873))

(declare-fun d!13875 () Bool)

(declare-fun e!43927 () Bool)

(assert (=> d!13875 e!43927))

(declare-fun res!36216 () Bool)

(assert (=> d!13875 (=> (not res!36216) (not e!43927))))

(declare-fun lt!29047 () ListLongMap!1379)

(assert (=> d!13875 (= res!36216 (contains!705 lt!29047 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!29049 () List!1466)

(assert (=> d!13875 (= lt!29047 (ListLongMap!1380 lt!29049))))

(declare-fun lt!29046 () Unit!1818)

(declare-fun lt!29048 () Unit!1818)

(assert (=> d!13875 (= lt!29046 lt!29048)))

(assert (=> d!13875 (= (getValueByKey!128 lt!29049 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13875 (= lt!29048 (lemmaContainsTupThenGetReturnValue!48 lt!29049 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13875 (= lt!29049 (insertStrictlySorted!51 (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13875 (= (+!87 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!29047)))

(declare-fun b!67004 () Bool)

(declare-fun res!36217 () Bool)

(assert (=> b!67004 (=> (not res!36217) (not e!43927))))

(assert (=> b!67004 (= res!36217 (= (getValueByKey!128 (toList!705 lt!29047) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!67005 () Bool)

(assert (=> b!67005 (= e!43927 (contains!707 (toList!705 lt!29047) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!13875 res!36216) b!67004))

(assert (= (and b!67004 res!36217) b!67005))

(declare-fun m!61611 () Bool)

(assert (=> d!13875 m!61611))

(declare-fun m!61613 () Bool)

(assert (=> d!13875 m!61613))

(declare-fun m!61615 () Bool)

(assert (=> d!13875 m!61615))

(declare-fun m!61617 () Bool)

(assert (=> d!13875 m!61617))

(declare-fun m!61619 () Bool)

(assert (=> b!67004 m!61619))

(declare-fun m!61621 () Bool)

(assert (=> b!67005 m!61621))

(assert (=> d!13643 d!13875))

(declare-fun d!13877 () Bool)

(declare-fun e!43928 () Bool)

(assert (=> d!13877 e!43928))

(declare-fun res!36218 () Bool)

(assert (=> d!13877 (=> (not res!36218) (not e!43928))))

(declare-fun lt!29051 () ListLongMap!1379)

(assert (=> d!13877 (= res!36218 (contains!705 lt!29051 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun lt!29053 () List!1466)

(assert (=> d!13877 (= lt!29051 (ListLongMap!1380 lt!29053))))

(declare-fun lt!29050 () Unit!1818)

(declare-fun lt!29052 () Unit!1818)

(assert (=> d!13877 (= lt!29050 lt!29052)))

(assert (=> d!13877 (= (getValueByKey!128 lt!29053 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13877 (= lt!29052 (lemmaContainsTupThenGetReturnValue!48 lt!29053 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13877 (= lt!29053 (insertStrictlySorted!51 (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13877 (= (+!87 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) lt!29051)))

(declare-fun b!67006 () Bool)

(declare-fun res!36219 () Bool)

(assert (=> b!67006 (=> (not res!36219) (not e!43928))))

(assert (=> b!67006 (= res!36219 (= (getValueByKey!128 (toList!705 lt!29051) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!67007 () Bool)

(assert (=> b!67007 (= e!43928 (contains!707 (toList!705 lt!29051) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(assert (= (and d!13877 res!36218) b!67006))

(assert (= (and b!67006 res!36219) b!67007))

(declare-fun m!61623 () Bool)

(assert (=> d!13877 m!61623))

(declare-fun m!61625 () Bool)

(assert (=> d!13877 m!61625))

(declare-fun m!61627 () Bool)

(assert (=> d!13877 m!61627))

(declare-fun m!61629 () Bool)

(assert (=> d!13877 m!61629))

(declare-fun m!61631 () Bool)

(assert (=> b!67006 m!61631))

(declare-fun m!61633 () Bool)

(assert (=> b!67007 m!61633))

(assert (=> d!13643 d!13877))

(declare-fun d!13879 () Bool)

(assert (=> d!13879 (= (+!87 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (+!87 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(assert (=> d!13879 true))

(declare-fun _$28!112 () Unit!1818)

(assert (=> d!13879 (= (choose!372 lt!28402 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) _$28!112)))

(declare-fun bs!2863 () Bool)

(assert (= bs!2863 d!13879))

(assert (=> bs!2863 m!60677))

(assert (=> bs!2863 m!60677))

(assert (=> bs!2863 m!60685))

(assert (=> bs!2863 m!60679))

(assert (=> bs!2863 m!60679))

(assert (=> bs!2863 m!60681))

(assert (=> d!13643 d!13879))

(declare-fun d!13881 () Bool)

(declare-fun e!43929 () Bool)

(assert (=> d!13881 e!43929))

(declare-fun res!36220 () Bool)

(assert (=> d!13881 (=> (not res!36220) (not e!43929))))

(declare-fun lt!29055 () ListLongMap!1379)

(assert (=> d!13881 (= res!36220 (contains!705 lt!29055 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!29057 () List!1466)

(assert (=> d!13881 (= lt!29055 (ListLongMap!1380 lt!29057))))

(declare-fun lt!29054 () Unit!1818)

(declare-fun lt!29056 () Unit!1818)

(assert (=> d!13881 (= lt!29054 lt!29056)))

(assert (=> d!13881 (= (getValueByKey!128 lt!29057 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13881 (= lt!29056 (lemmaContainsTupThenGetReturnValue!48 lt!29057 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13881 (= lt!29057 (insertStrictlySorted!51 (toList!705 lt!28402) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!13881 (= (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!29055)))

(declare-fun b!67008 () Bool)

(declare-fun res!36221 () Bool)

(assert (=> b!67008 (=> (not res!36221) (not e!43929))))

(assert (=> b!67008 (= res!36221 (= (getValueByKey!128 (toList!705 lt!29055) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!67009 () Bool)

(assert (=> b!67009 (= e!43929 (contains!707 (toList!705 lt!29055) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!13881 res!36220) b!67008))

(assert (= (and b!67008 res!36221) b!67009))

(declare-fun m!61635 () Bool)

(assert (=> d!13881 m!61635))

(declare-fun m!61637 () Bool)

(assert (=> d!13881 m!61637))

(declare-fun m!61639 () Bool)

(assert (=> d!13881 m!61639))

(declare-fun m!61641 () Bool)

(assert (=> d!13881 m!61641))

(declare-fun m!61643 () Bool)

(assert (=> b!67008 m!61643))

(declare-fun m!61645 () Bool)

(assert (=> b!67009 m!61645))

(assert (=> d!13643 d!13881))

(declare-fun mapNonEmpty!3087 () Bool)

(declare-fun mapRes!3087 () Bool)

(declare-fun tp!8379 () Bool)

(declare-fun e!43931 () Bool)

(assert (=> mapNonEmpty!3087 (= mapRes!3087 (and tp!8379 e!43931))))

(declare-fun mapKey!3087 () (_ BitVec 32))

(declare-fun mapValue!3087 () ValueCell!881)

(declare-fun mapRest!3087 () (Array (_ BitVec 32) ValueCell!881))

(assert (=> mapNonEmpty!3087 (= mapRest!3086 (store mapRest!3087 mapKey!3087 mapValue!3087))))

(declare-fun condMapEmpty!3087 () Bool)

(declare-fun mapDefault!3087 () ValueCell!881)

(assert (=> mapNonEmpty!3086 (= condMapEmpty!3087 (= mapRest!3086 ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3087)))))

(declare-fun e!43930 () Bool)

(assert (=> mapNonEmpty!3086 (= tp!8378 (and e!43930 mapRes!3087))))

(declare-fun mapIsEmpty!3087 () Bool)

(assert (=> mapIsEmpty!3087 mapRes!3087))

(declare-fun b!67010 () Bool)

(assert (=> b!67010 (= e!43931 tp_is_empty!2449)))

(declare-fun b!67011 () Bool)

(assert (=> b!67011 (= e!43930 tp_is_empty!2449)))

(assert (= (and mapNonEmpty!3086 condMapEmpty!3087) mapIsEmpty!3087))

(assert (= (and mapNonEmpty!3086 (not condMapEmpty!3087)) mapNonEmpty!3087))

(assert (= (and mapNonEmpty!3087 ((_ is ValueCellFull!881) mapValue!3087)) b!67010))

(assert (= (and mapNonEmpty!3086 ((_ is ValueCellFull!881) mapDefault!3087)) b!67011))

(declare-fun m!61647 () Bool)

(assert (=> mapNonEmpty!3087 m!61647))

(declare-fun mapNonEmpty!3088 () Bool)

(declare-fun mapRes!3088 () Bool)

(declare-fun tp!8380 () Bool)

(declare-fun e!43933 () Bool)

(assert (=> mapNonEmpty!3088 (= mapRes!3088 (and tp!8380 e!43933))))

(declare-fun mapKey!3088 () (_ BitVec 32))

(declare-fun mapRest!3088 () (Array (_ BitVec 32) ValueCell!881))

(declare-fun mapValue!3088 () ValueCell!881)

(assert (=> mapNonEmpty!3088 (= mapRest!3085 (store mapRest!3088 mapKey!3088 mapValue!3088))))

(declare-fun condMapEmpty!3088 () Bool)

(declare-fun mapDefault!3088 () ValueCell!881)

(assert (=> mapNonEmpty!3085 (= condMapEmpty!3088 (= mapRest!3085 ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3088)))))

(declare-fun e!43932 () Bool)

(assert (=> mapNonEmpty!3085 (= tp!8377 (and e!43932 mapRes!3088))))

(declare-fun mapIsEmpty!3088 () Bool)

(assert (=> mapIsEmpty!3088 mapRes!3088))

(declare-fun b!67012 () Bool)

(assert (=> b!67012 (= e!43933 tp_is_empty!2449)))

(declare-fun b!67013 () Bool)

(assert (=> b!67013 (= e!43932 tp_is_empty!2449)))

(assert (= (and mapNonEmpty!3085 condMapEmpty!3088) mapIsEmpty!3088))

(assert (= (and mapNonEmpty!3085 (not condMapEmpty!3088)) mapNonEmpty!3088))

(assert (= (and mapNonEmpty!3088 ((_ is ValueCellFull!881) mapValue!3088)) b!67012))

(assert (= (and mapNonEmpty!3085 ((_ is ValueCellFull!881) mapDefault!3088)) b!67013))

(declare-fun m!61649 () Bool)

(assert (=> mapNonEmpty!3088 m!61649))

(declare-fun b_lambda!2981 () Bool)

(assert (= b_lambda!2973 (or (and b!66103 b_free!2065) (and b!66112 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))))) b_lambda!2981)))

(declare-fun b_lambda!2983 () Bool)

(assert (= b_lambda!2977 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!2983)))

(declare-fun b_lambda!2985 () Bool)

(assert (= b_lambda!2975 (or (and b!66103 b_free!2065) (and b!66112 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))))) b_lambda!2985)))

(declare-fun b_lambda!2987 () Bool)

(assert (= b_lambda!2979 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!2987)))

(declare-fun b_lambda!2989 () Bool)

(assert (= b_lambda!2971 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!2989)))

(check-sat (not b!66665) (not d!13731) (not b!66966) (not b!66719) (not d!13869) (not b!66950) (not bm!5579) (not b!66988) (not d!13777) (not d!13839) (not b!66629) (not d!13855) (not b!66803) (not d!13759) (not d!13711) (not b!66605) (not b!66752) (not b!66952) (not b!66930) (not d!13775) (not d!13817) (not b!66626) (not d!13753) (not b!67008) (not b!66938) (not b!66891) (not d!13787) (not d!13765) (not d!13739) (not d!13703) (not b!66992) (not d!13879) (not mapNonEmpty!3088) (not b!66675) (not b_lambda!2969) (not d!13735) (not b!66846) (not b!66852) (not b!66748) (not b!66982) (not b!66991) (not b!66572) (not d!13857) (not d!13807) (not d!13709) (not bm!5550) (not b!66615) (not b!66969) (not b!66668) (not b!66873) (not d!13767) (not b!66579) (not b!66774) (not b!66776) (not d!13693) (not d!13825) (not d!13763) (not b!66987) (not b!66682) (not bm!5581) (not d!13849) (not b!66829) (not bm!5568) (not b!66568) (not d!13697) (not b!66614) (not b!66566) (not d!13803) (not b!66875) (not b!66962) (not b!66578) (not mapNonEmpty!3087) (not b!66611) (not d!13727) (not b!66895) (not b!67009) (not bm!5558) (not bm!5603) (not b!66720) (not b!66906) (not d!13687) (not bm!5569) (not b!66903) (not b!66849) (not b!66597) (not d!13863) (not b!66699) (not b!66859) (not d!13867) tp_is_empty!2449 (not d!13689) (not bm!5600) (not d!13791) (not b!66900) (not b!66914) (not bm!5613) (not b!66713) (not d!13871) (not b!66555) (not b!66628) (not b!66894) (not b!66617) (not b_lambda!2989) b_and!4123 (not b!66892) (not d!13783) (not d!13823) (not b!66627) (not b!66621) (not d!13707) (not b!67007) (not d!13877) (not d!13691) (not bm!5586) (not d!13751) (not d!13819) (not b_lambda!2983) (not d!13761) (not b!66887) (not b!66985) (not d!13755) (not b_lambda!2965) (not b!66881) (not b!66958) (not b!66601) (not b!66941) (not b!66577) (not b!66805) (not bm!5567) (not b!66744) (not b!66673) (not b!66927) (not d!13851) (not b!66807) (not d!13701) (not b!66841) (not d!13799) (not b!66865) (not b!66898) (not d!13797) (not d!13861) (not b!66971) (not b!66761) (not b!66769) (not bm!5590) (not d!13749) (not b!66868) (not b!66919) (not b!66830) (not bm!5557) (not d!13881) (not bm!5612) (not b!66772) (not d!13757) (not d!13695) (not b!66544) (not b!66911) (not d!13795) (not b!66815) (not b!66569) (not b!67002) (not d!13815) (not d!13681) (not b!66763) (not b!66600) (not b!66689) (not d!13847) (not b!66616) (not d!13745) (not d!13699) (not b!66754) (not b!67001) (not b!66702) (not d!13841) (not b!67000) (not b!66957) (not b_lambda!2957) (not b!66598) (not b!66609) (not bm!5591) (not b!66876) (not bm!5594) (not b!66745) (not b_next!2065) (not b!67003) (not b!66691) (not b!66765) (not b!66619) (not b!66932) (not bm!5551) (not d!13859) (not b!66766) (not b!66753) (not bm!5597) (not b!66864) (not b!66810) (not b!66677) (not d!13743) (not d!13875) (not d!13831) (not b_lambda!2981) (not b!66819) (not b!66889) (not b!66867) (not b!66869) (not b!66573) (not b!66767) (not b!66608) (not b!66843) (not b!66599) (not b!66990) (not b!66897) (not b_lambda!2967) (not d!13737) (not b!66571) (not d!13679) (not b!66809) (not b!66777) b_and!4121 (not bm!5596) (not b!66618) (not d!13715) (not d!13805) (not b!66878) (not b!66862) (not b!66681) (not b!66925) (not b!66610) (not d!13809) (not d!13833) (not b!66937) (not bm!5580) (not d!13713) (not bm!5606) (not b_lambda!2987) (not b!66700) (not d!13719) (not d!13873) (not b_next!2067) (not d!13801) (not b!66910) (not b!66923) (not b!67006) (not b!66751) (not b!66604) (not b_lambda!2985) (not b!66955) (not b!67004) (not bm!5610) (not b!66612) (not b!66760) (not b!66905) (not bm!5587) (not b!66817) (not b!66996) (not d!13827) (not b!66693) (not b!66844) (not b!66933) (not b!67005) (not d!13813) (not b!66771) (not b!66963) (not d!13741) (not b!66563) (not d!13683) (not b!66812) (not b!66949) (not b!66874) (not d!13723) (not bm!5556) (not b!66999) (not b!66974) (not bm!5554) (not bm!5607) (not b!66684) (not b!66670) (not d!13845) (not d!13747))
(check-sat b_and!4121 b_and!4123 (not b_next!2065) (not b_next!2067))
(get-model)

(declare-fun d!13883 () Bool)

(assert (=> d!13883 (= (isDefined!82 (getValueByKey!128 (toList!705 e!43566) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))) (not (isEmpty!313 (getValueByKey!128 (toList!705 e!43566) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))))

(declare-fun bs!2864 () Bool)

(assert (= bs!2864 d!13883))

(assert (=> bs!2864 m!61281))

(declare-fun m!61651 () Bool)

(assert (=> bs!2864 m!61651))

(assert (=> b!66819 d!13883))

(declare-fun b!67017 () Bool)

(declare-fun e!43935 () Option!134)

(assert (=> b!67017 (= e!43935 None!132)))

(declare-fun b!67016 () Bool)

(assert (=> b!67016 (= e!43935 (getValueByKey!128 (t!4939 (toList!705 e!43566)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!67014 () Bool)

(declare-fun e!43934 () Option!134)

(assert (=> b!67014 (= e!43934 (Some!133 (_2!1052 (h!2046 (toList!705 e!43566)))))))

(declare-fun d!13885 () Bool)

(declare-fun c!9294 () Bool)

(assert (=> d!13885 (= c!9294 (and ((_ is Cons!1462) (toList!705 e!43566)) (= (_1!1052 (h!2046 (toList!705 e!43566))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (=> d!13885 (= (getValueByKey!128 (toList!705 e!43566) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) e!43934)))

(declare-fun b!67015 () Bool)

(assert (=> b!67015 (= e!43934 e!43935)))

(declare-fun c!9295 () Bool)

(assert (=> b!67015 (= c!9295 (and ((_ is Cons!1462) (toList!705 e!43566)) (not (= (_1!1052 (h!2046 (toList!705 e!43566))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))))

(assert (= (and d!13885 c!9294) b!67014))

(assert (= (and d!13885 (not c!9294)) b!67015))

(assert (= (and b!67015 c!9295) b!67016))

(assert (= (and b!67015 (not c!9295)) b!67017))

(assert (=> b!67016 m!60449))

(declare-fun m!61653 () Bool)

(assert (=> b!67016 m!61653))

(assert (=> b!66819 d!13885))

(declare-fun d!13887 () Bool)

(declare-fun e!43936 () Bool)

(assert (=> d!13887 e!43936))

(declare-fun res!36222 () Bool)

(assert (=> d!13887 (=> res!36222 e!43936)))

(declare-fun lt!29061 () Bool)

(assert (=> d!13887 (= res!36222 (not lt!29061))))

(declare-fun lt!29060 () Bool)

(assert (=> d!13887 (= lt!29061 lt!29060)))

(declare-fun lt!29058 () Unit!1818)

(declare-fun e!43937 () Unit!1818)

(assert (=> d!13887 (= lt!29058 e!43937)))

(declare-fun c!9296 () Bool)

(assert (=> d!13887 (= c!9296 lt!29060)))

(assert (=> d!13887 (= lt!29060 (containsKey!132 (toList!705 lt!29032) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13887 (= (contains!705 lt!29032 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29061)))

(declare-fun b!67018 () Bool)

(declare-fun lt!29059 () Unit!1818)

(assert (=> b!67018 (= e!43937 lt!29059)))

(assert (=> b!67018 (= lt!29059 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!29032) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67018 (isDefined!82 (getValueByKey!128 (toList!705 lt!29032) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67019 () Bool)

(declare-fun Unit!1852 () Unit!1818)

(assert (=> b!67019 (= e!43937 Unit!1852)))

(declare-fun b!67020 () Bool)

(assert (=> b!67020 (= e!43936 (isDefined!82 (getValueByKey!128 (toList!705 lt!29032) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13887 c!9296) b!67018))

(assert (= (and d!13887 (not c!9296)) b!67019))

(assert (= (and d!13887 (not res!36222)) b!67020))

(declare-fun m!61655 () Bool)

(assert (=> d!13887 m!61655))

(declare-fun m!61657 () Bool)

(assert (=> b!67018 m!61657))

(declare-fun m!61659 () Bool)

(assert (=> b!67018 m!61659))

(assert (=> b!67018 m!61659))

(declare-fun m!61661 () Bool)

(assert (=> b!67018 m!61661))

(assert (=> b!67020 m!61659))

(assert (=> b!67020 m!61659))

(assert (=> b!67020 m!61661))

(assert (=> bm!5607 d!13887))

(assert (=> bm!5567 d!13779))

(declare-fun d!13889 () Bool)

(assert (=> d!13889 (= (isEmpty!313 (getValueByKey!128 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))) (not ((_ is Some!133) (getValueByKey!128 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))))

(assert (=> d!13863 d!13889))

(declare-fun d!13891 () Bool)

(declare-fun lt!29062 () Bool)

(assert (=> d!13891 (= lt!29062 (select (content!71 lt!29008) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(declare-fun e!43938 () Bool)

(assert (=> d!13891 (= lt!29062 e!43938)))

(declare-fun res!36224 () Bool)

(assert (=> d!13891 (=> (not res!36224) (not e!43938))))

(assert (=> d!13891 (= res!36224 ((_ is Cons!1462) lt!29008))))

(assert (=> d!13891 (= (contains!707 lt!29008 (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))) lt!29062)))

(declare-fun b!67021 () Bool)

(declare-fun e!43939 () Bool)

(assert (=> b!67021 (= e!43938 e!43939)))

(declare-fun res!36223 () Bool)

(assert (=> b!67021 (=> res!36223 e!43939)))

(assert (=> b!67021 (= res!36223 (= (h!2046 lt!29008) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(declare-fun b!67022 () Bool)

(assert (=> b!67022 (= e!43939 (contains!707 (t!4939 lt!29008) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(assert (= (and d!13891 res!36224) b!67021))

(assert (= (and b!67021 (not res!36223)) b!67022))

(declare-fun m!61663 () Bool)

(assert (=> d!13891 m!61663))

(declare-fun m!61665 () Bool)

(assert (=> d!13891 m!61665))

(declare-fun m!61667 () Bool)

(assert (=> b!67022 m!61667))

(assert (=> b!66963 d!13891))

(declare-fun d!13893 () Bool)

(declare-fun e!43940 () Bool)

(assert (=> d!13893 e!43940))

(declare-fun res!36225 () Bool)

(assert (=> d!13893 (=> (not res!36225) (not e!43940))))

(declare-fun lt!29064 () ListLongMap!1379)

(assert (=> d!13893 (= res!36225 (contains!705 lt!29064 (_1!1052 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(declare-fun lt!29066 () List!1466)

(assert (=> d!13893 (= lt!29064 (ListLongMap!1380 lt!29066))))

(declare-fun lt!29063 () Unit!1818)

(declare-fun lt!29065 () Unit!1818)

(assert (=> d!13893 (= lt!29063 lt!29065)))

(assert (=> d!13893 (= (getValueByKey!128 lt!29066 (_1!1052 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))) (Some!133 (_2!1052 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(assert (=> d!13893 (= lt!29065 (lemmaContainsTupThenGetReturnValue!48 lt!29066 (_1!1052 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(assert (=> d!13893 (= lt!29066 (insertStrictlySorted!51 (toList!705 lt!28943) (_1!1052 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(assert (=> d!13893 (= (+!87 lt!28943 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) lt!29064)))

(declare-fun b!67023 () Bool)

(declare-fun res!36226 () Bool)

(assert (=> b!67023 (=> (not res!36226) (not e!43940))))

(assert (=> b!67023 (= res!36226 (= (getValueByKey!128 (toList!705 lt!29064) (_1!1052 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))) (Some!133 (_2!1052 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))))))

(declare-fun b!67024 () Bool)

(assert (=> b!67024 (= e!43940 (contains!707 (toList!705 lt!29064) (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))))

(assert (= (and d!13893 res!36225) b!67023))

(assert (= (and b!67023 res!36226) b!67024))

(declare-fun m!61669 () Bool)

(assert (=> d!13893 m!61669))

(declare-fun m!61671 () Bool)

(assert (=> d!13893 m!61671))

(declare-fun m!61673 () Bool)

(assert (=> d!13893 m!61673))

(declare-fun m!61675 () Bool)

(assert (=> d!13893 m!61675))

(declare-fun m!61677 () Bool)

(assert (=> b!67023 m!61677))

(declare-fun m!61679 () Bool)

(assert (=> b!67024 m!61679))

(assert (=> b!66859 d!13893))

(declare-fun d!13895 () Bool)

(declare-fun e!43941 () Bool)

(assert (=> d!13895 e!43941))

(declare-fun res!36227 () Bool)

(assert (=> d!13895 (=> (not res!36227) (not e!43941))))

(declare-fun lt!29068 () ListLongMap!1379)

(assert (=> d!13895 (= res!36227 (contains!705 lt!29068 (_1!1052 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))))))

(declare-fun lt!29070 () List!1466)

(assert (=> d!13895 (= lt!29068 (ListLongMap!1380 lt!29070))))

(declare-fun lt!29067 () Unit!1818)

(declare-fun lt!29069 () Unit!1818)

(assert (=> d!13895 (= lt!29067 lt!29069)))

(assert (=> d!13895 (= (getValueByKey!128 lt!29070 (_1!1052 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))) (Some!133 (_2!1052 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))))))

(assert (=> d!13895 (= lt!29069 (lemmaContainsTupThenGetReturnValue!48 lt!29070 (_1!1052 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))))))

(assert (=> d!13895 (= lt!29070 (insertStrictlySorted!51 (toList!705 lt!28946) (_1!1052 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))))))

(assert (=> d!13895 (= (+!87 lt!28946 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))) lt!29068)))

(declare-fun b!67025 () Bool)

(declare-fun res!36228 () Bool)

(assert (=> b!67025 (=> (not res!36228) (not e!43941))))

(assert (=> b!67025 (= res!36228 (= (getValueByKey!128 (toList!705 lt!29068) (_1!1052 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))) (Some!133 (_2!1052 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))))))))

(declare-fun b!67026 () Bool)

(assert (=> b!67026 (= e!43941 (contains!707 (toList!705 lt!29068) (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))))))

(assert (= (and d!13895 res!36227) b!67025))

(assert (= (and b!67025 res!36228) b!67026))

(declare-fun m!61681 () Bool)

(assert (=> d!13895 m!61681))

(declare-fun m!61683 () Bool)

(assert (=> d!13895 m!61683))

(declare-fun m!61685 () Bool)

(assert (=> d!13895 m!61685))

(declare-fun m!61687 () Bool)

(assert (=> d!13895 m!61687))

(declare-fun m!61689 () Bool)

(assert (=> b!67025 m!61689))

(declare-fun m!61691 () Bool)

(assert (=> b!67026 m!61691))

(assert (=> b!66859 d!13895))

(declare-fun d!13897 () Bool)

(assert (=> d!13897 (= (apply!72 (+!87 lt!28943 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) lt!28941) (apply!72 lt!28943 lt!28941))))

(declare-fun lt!29071 () Unit!1818)

(assert (=> d!13897 (= lt!29071 (choose!377 lt!28943 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) lt!28941))))

(declare-fun e!43942 () Bool)

(assert (=> d!13897 e!43942))

(declare-fun res!36229 () Bool)

(assert (=> d!13897 (=> (not res!36229) (not e!43942))))

(assert (=> d!13897 (= res!36229 (contains!705 lt!28943 lt!28941))))

(assert (=> d!13897 (= (addApplyDifferent!48 lt!28943 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) lt!28941) lt!29071)))

(declare-fun b!67027 () Bool)

(assert (=> b!67027 (= e!43942 (not (= lt!28941 lt!28947)))))

(assert (= (and d!13897 res!36229) b!67027))

(assert (=> d!13897 m!61341))

(assert (=> d!13897 m!61343))

(declare-fun m!61693 () Bool)

(assert (=> d!13897 m!61693))

(assert (=> d!13897 m!61341))

(assert (=> d!13897 m!61347))

(declare-fun m!61695 () Bool)

(assert (=> d!13897 m!61695))

(assert (=> b!66859 d!13897))

(declare-fun d!13899 () Bool)

(assert (=> d!13899 (= (apply!72 (+!87 lt!28943 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) lt!28941) (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!28943 (tuple2!2083 lt!28947 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))) lt!28941)))))

(declare-fun bs!2865 () Bool)

(assert (= bs!2865 d!13899))

(declare-fun m!61697 () Bool)

(assert (=> bs!2865 m!61697))

(assert (=> bs!2865 m!61697))

(declare-fun m!61699 () Bool)

(assert (=> bs!2865 m!61699))

(assert (=> b!66859 d!13899))

(declare-fun d!13901 () Bool)

(assert (=> d!13901 (= (apply!72 lt!28950 lt!28954) (get!1123 (getValueByKey!128 (toList!705 lt!28950) lt!28954)))))

(declare-fun bs!2866 () Bool)

(assert (= bs!2866 d!13901))

(declare-fun m!61701 () Bool)

(assert (=> bs!2866 m!61701))

(assert (=> bs!2866 m!61701))

(declare-fun m!61703 () Bool)

(assert (=> bs!2866 m!61703))

(assert (=> b!66859 d!13901))

(declare-fun d!13903 () Bool)

(assert (=> d!13903 (= (apply!72 (+!87 lt!28950 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) lt!28954) (apply!72 lt!28950 lt!28954))))

(declare-fun lt!29072 () Unit!1818)

(assert (=> d!13903 (= lt!29072 (choose!377 lt!28950 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) lt!28954))))

(declare-fun e!43943 () Bool)

(assert (=> d!13903 e!43943))

(declare-fun res!36230 () Bool)

(assert (=> d!13903 (=> (not res!36230) (not e!43943))))

(assert (=> d!13903 (= res!36230 (contains!705 lt!28950 lt!28954))))

(assert (=> d!13903 (= (addApplyDifferent!48 lt!28950 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) lt!28954) lt!29072)))

(declare-fun b!67028 () Bool)

(assert (=> b!67028 (= e!43943 (not (= lt!28954 lt!28953)))))

(assert (= (and d!13903 res!36230) b!67028))

(assert (=> d!13903 m!61331))

(assert (=> d!13903 m!61335))

(declare-fun m!61705 () Bool)

(assert (=> d!13903 m!61705))

(assert (=> d!13903 m!61331))

(assert (=> d!13903 m!61333))

(declare-fun m!61707 () Bool)

(assert (=> d!13903 m!61707))

(assert (=> b!66859 d!13903))

(declare-fun d!13905 () Bool)

(declare-fun e!43944 () Bool)

(assert (=> d!13905 e!43944))

(declare-fun res!36231 () Bool)

(assert (=> d!13905 (=> res!36231 e!43944)))

(declare-fun lt!29076 () Bool)

(assert (=> d!13905 (= res!36231 (not lt!29076))))

(declare-fun lt!29075 () Bool)

(assert (=> d!13905 (= lt!29076 lt!29075)))

(declare-fun lt!29073 () Unit!1818)

(declare-fun e!43945 () Unit!1818)

(assert (=> d!13905 (= lt!29073 e!43945)))

(declare-fun c!9297 () Bool)

(assert (=> d!13905 (= c!9297 lt!29075)))

(assert (=> d!13905 (= lt!29075 (containsKey!132 (toList!705 (+!87 lt!28946 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))) lt!28958))))

(assert (=> d!13905 (= (contains!705 (+!87 lt!28946 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))) lt!28958) lt!29076)))

(declare-fun b!67029 () Bool)

(declare-fun lt!29074 () Unit!1818)

(assert (=> b!67029 (= e!43945 lt!29074)))

(assert (=> b!67029 (= lt!29074 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 (+!87 lt!28946 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))) lt!28958))))

(assert (=> b!67029 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28946 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))) lt!28958))))

(declare-fun b!67030 () Bool)

(declare-fun Unit!1853 () Unit!1818)

(assert (=> b!67030 (= e!43945 Unit!1853)))

(declare-fun b!67031 () Bool)

(assert (=> b!67031 (= e!43944 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28946 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))) lt!28958)))))

(assert (= (and d!13905 c!9297) b!67029))

(assert (= (and d!13905 (not c!9297)) b!67030))

(assert (= (and d!13905 (not res!36231)) b!67031))

(declare-fun m!61709 () Bool)

(assert (=> d!13905 m!61709))

(declare-fun m!61711 () Bool)

(assert (=> b!67029 m!61711))

(declare-fun m!61713 () Bool)

(assert (=> b!67029 m!61713))

(assert (=> b!67029 m!61713))

(declare-fun m!61715 () Bool)

(assert (=> b!67029 m!61715))

(assert (=> b!67031 m!61713))

(assert (=> b!67031 m!61713))

(assert (=> b!67031 m!61715))

(assert (=> b!66859 d!13905))

(declare-fun lt!29077 () ListLongMap!1379)

(declare-fun e!43950 () Bool)

(declare-fun b!67032 () Bool)

(assert (=> b!67032 (= e!43950 (= lt!29077 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite c!9137 (_values!2129 newMap!16) lt!28607) (mask!6080 newMap!16) (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16))))))

(declare-fun bm!5614 () Bool)

(declare-fun call!5617 () ListLongMap!1379)

(assert (=> bm!5614 (= call!5617 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite c!9137 (_values!2129 newMap!16) lt!28607) (mask!6080 newMap!16) (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16)))))

(declare-fun b!67033 () Bool)

(declare-fun e!43949 () Bool)

(assert (=> b!67033 (= e!43949 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67033 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67034 () Bool)

(declare-fun lt!29082 () Unit!1818)

(declare-fun lt!29078 () Unit!1818)

(assert (=> b!67034 (= lt!29082 lt!29078)))

(declare-fun lt!29080 () V!2913)

(declare-fun lt!29079 () ListLongMap!1379)

(declare-fun lt!29081 () (_ BitVec 64))

(declare-fun lt!29083 () (_ BitVec 64))

(assert (=> b!67034 (not (contains!705 (+!87 lt!29079 (tuple2!2083 lt!29081 lt!29080)) lt!29083))))

(assert (=> b!67034 (= lt!29078 (addStillNotContains!22 lt!29079 lt!29081 lt!29080 lt!29083))))

(assert (=> b!67034 (= lt!29083 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67034 (= lt!29080 (get!1119 (select (arr!1823 (ite c!9137 (_values!2129 newMap!16) lt!28607)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67034 (= lt!29081 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67034 (= lt!29079 call!5617)))

(declare-fun e!43952 () ListLongMap!1379)

(assert (=> b!67034 (= e!43952 (+!87 call!5617 (tuple2!2083 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) (get!1119 (select (arr!1823 (ite c!9137 (_values!2129 newMap!16) lt!28607)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67035 () Bool)

(declare-fun e!43946 () ListLongMap!1379)

(assert (=> b!67035 (= e!43946 e!43952)))

(declare-fun c!9298 () Bool)

(assert (=> b!67035 (= c!9298 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67036 () Bool)

(assert (=> b!67036 (= e!43946 (ListLongMap!1380 Nil!1463))))

(declare-fun b!67037 () Bool)

(assert (=> b!67037 (= e!43952 call!5617)))

(declare-fun b!67038 () Bool)

(assert (=> b!67038 (= e!43950 (isEmpty!311 lt!29077))))

(declare-fun b!67039 () Bool)

(declare-fun res!36235 () Bool)

(declare-fun e!43951 () Bool)

(assert (=> b!67039 (=> (not res!36235) (not e!43951))))

(assert (=> b!67039 (= res!36235 (not (contains!705 lt!29077 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67041 () Bool)

(declare-fun e!43948 () Bool)

(assert (=> b!67041 (= e!43948 e!43950)))

(declare-fun c!9300 () Bool)

(assert (=> b!67041 (= c!9300 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67042 () Bool)

(declare-fun e!43947 () Bool)

(assert (=> b!67042 (= e!43948 e!43947)))

(assert (=> b!67042 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun res!36234 () Bool)

(assert (=> b!67042 (= res!36234 (contains!705 lt!29077 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67042 (=> (not res!36234) (not e!43947))))

(declare-fun b!67043 () Bool)

(assert (=> b!67043 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> b!67043 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 (ite c!9137 (_values!2129 newMap!16) lt!28607))))))

(assert (=> b!67043 (= e!43947 (= (apply!72 lt!29077 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 (ite c!9137 (_values!2129 newMap!16) lt!28607)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!13907 () Bool)

(assert (=> d!13907 e!43951))

(declare-fun res!36233 () Bool)

(assert (=> d!13907 (=> (not res!36233) (not e!43951))))

(assert (=> d!13907 (= res!36233 (not (contains!705 lt!29077 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13907 (= lt!29077 e!43946)))

(declare-fun c!9299 () Bool)

(assert (=> d!13907 (= c!9299 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!13907 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13907 (= (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite c!9137 (_values!2129 newMap!16) lt!28607) (mask!6080 newMap!16) (ite c!9137 (ite c!9128 lt!28603 lt!28614) (extraKeys!2017 newMap!16)) (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29077)))

(declare-fun b!67040 () Bool)

(assert (=> b!67040 (= e!43951 e!43948)))

(declare-fun c!9301 () Bool)

(assert (=> b!67040 (= c!9301 e!43949)))

(declare-fun res!36232 () Bool)

(assert (=> b!67040 (=> (not res!36232) (not e!43949))))

(assert (=> b!67040 (= res!36232 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (= (and d!13907 c!9299) b!67036))

(assert (= (and d!13907 (not c!9299)) b!67035))

(assert (= (and b!67035 c!9298) b!67034))

(assert (= (and b!67035 (not c!9298)) b!67037))

(assert (= (or b!67034 b!67037) bm!5614))

(assert (= (and d!13907 res!36233) b!67039))

(assert (= (and b!67039 res!36235) b!67040))

(assert (= (and b!67040 res!36232) b!67033))

(assert (= (and b!67040 c!9301) b!67042))

(assert (= (and b!67040 (not c!9301)) b!67041))

(assert (= (and b!67042 res!36234) b!67043))

(assert (= (and b!67041 c!9300) b!67032))

(assert (= (and b!67041 (not c!9300)) b!67038))

(declare-fun b_lambda!2991 () Bool)

(assert (=> (not b_lambda!2991) (not b!67034)))

(assert (=> b!67034 t!4952))

(declare-fun b_and!4125 () Bool)

(assert (= b_and!4121 (and (=> t!4952 result!2587) b_and!4125)))

(assert (=> b!67034 t!4954))

(declare-fun b_and!4127 () Bool)

(assert (= b_and!4123 (and (=> t!4954 result!2589) b_and!4127)))

(declare-fun b_lambda!2993 () Bool)

(assert (=> (not b_lambda!2993) (not b!67043)))

(assert (=> b!67043 t!4952))

(declare-fun b_and!4129 () Bool)

(assert (= b_and!4125 (and (=> t!4952 result!2587) b_and!4129)))

(assert (=> b!67043 t!4954))

(declare-fun b_and!4131 () Bool)

(assert (= b_and!4127 (and (=> t!4954 result!2589) b_and!4131)))

(declare-fun m!61717 () Bool)

(assert (=> d!13907 m!61717))

(assert (=> d!13907 m!60845))

(assert (=> b!67035 m!60839))

(assert (=> b!67035 m!60839))

(assert (=> b!67035 m!60841))

(declare-fun m!61719 () Bool)

(assert (=> b!67038 m!61719))

(assert (=> b!67033 m!60839))

(assert (=> b!67033 m!60839))

(assert (=> b!67033 m!60841))

(declare-fun m!61721 () Bool)

(assert (=> b!67032 m!61721))

(declare-fun m!61723 () Bool)

(assert (=> b!67034 m!61723))

(declare-fun m!61725 () Bool)

(assert (=> b!67034 m!61725))

(assert (=> b!67034 m!61359))

(assert (=> b!67034 m!60885))

(assert (=> b!67034 m!61361))

(declare-fun m!61727 () Bool)

(assert (=> b!67034 m!61727))

(assert (=> b!67034 m!61723))

(assert (=> b!67034 m!61359))

(assert (=> b!67034 m!60885))

(declare-fun m!61729 () Bool)

(assert (=> b!67034 m!61729))

(assert (=> b!67034 m!60839))

(declare-fun m!61731 () Bool)

(assert (=> b!67039 m!61731))

(assert (=> bm!5614 m!61721))

(assert (=> b!67042 m!60839))

(assert (=> b!67042 m!60839))

(declare-fun m!61733 () Bool)

(assert (=> b!67042 m!61733))

(assert (=> b!67043 m!61359))

(assert (=> b!67043 m!60885))

(assert (=> b!67043 m!61361))

(assert (=> b!67043 m!61359))

(assert (=> b!67043 m!60839))

(declare-fun m!61735 () Bool)

(assert (=> b!67043 m!61735))

(assert (=> b!67043 m!60885))

(assert (=> b!67043 m!60839))

(assert (=> b!66859 d!13907))

(declare-fun d!13909 () Bool)

(assert (=> d!13909 (contains!705 (+!87 lt!28946 (tuple2!2083 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))) lt!28958)))

(declare-fun lt!29084 () Unit!1818)

(assert (=> d!13909 (= lt!29084 (choose!376 lt!28946 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) lt!28958))))

(assert (=> d!13909 (contains!705 lt!28946 lt!28958)))

(assert (=> d!13909 (= (addStillContains!48 lt!28946 lt!28959 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) lt!28958) lt!29084)))

(declare-fun bs!2867 () Bool)

(assert (= bs!2867 d!13909))

(assert (=> bs!2867 m!61323))

(assert (=> bs!2867 m!61323))

(assert (=> bs!2867 m!61325))

(declare-fun m!61737 () Bool)

(assert (=> bs!2867 m!61737))

(declare-fun m!61739 () Bool)

(assert (=> bs!2867 m!61739))

(assert (=> b!66859 d!13909))

(declare-fun d!13911 () Bool)

(declare-fun e!43953 () Bool)

(assert (=> d!13911 e!43953))

(declare-fun res!36236 () Bool)

(assert (=> d!13911 (=> (not res!36236) (not e!43953))))

(declare-fun lt!29086 () ListLongMap!1379)

(assert (=> d!13911 (= res!36236 (contains!705 lt!29086 (_1!1052 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))))))

(declare-fun lt!29088 () List!1466)

(assert (=> d!13911 (= lt!29086 (ListLongMap!1380 lt!29088))))

(declare-fun lt!29085 () Unit!1818)

(declare-fun lt!29087 () Unit!1818)

(assert (=> d!13911 (= lt!29085 lt!29087)))

(assert (=> d!13911 (= (getValueByKey!128 lt!29088 (_1!1052 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))) (Some!133 (_2!1052 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))))))

(assert (=> d!13911 (= lt!29087 (lemmaContainsTupThenGetReturnValue!48 lt!29088 (_1!1052 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))))))

(assert (=> d!13911 (= lt!29088 (insertStrictlySorted!51 (toList!705 lt!28952) (_1!1052 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))))))

(assert (=> d!13911 (= (+!87 lt!28952 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))) lt!29086)))

(declare-fun b!67044 () Bool)

(declare-fun res!36237 () Bool)

(assert (=> b!67044 (=> (not res!36237) (not e!43953))))

(assert (=> b!67044 (= res!36237 (= (getValueByKey!128 (toList!705 lt!29086) (_1!1052 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))) (Some!133 (_2!1052 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))))))))

(declare-fun b!67045 () Bool)

(assert (=> b!67045 (= e!43953 (contains!707 (toList!705 lt!29086) (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))))))

(assert (= (and d!13911 res!36236) b!67044))

(assert (= (and b!67044 res!36237) b!67045))

(declare-fun m!61741 () Bool)

(assert (=> d!13911 m!61741))

(declare-fun m!61743 () Bool)

(assert (=> d!13911 m!61743))

(declare-fun m!61745 () Bool)

(assert (=> d!13911 m!61745))

(declare-fun m!61747 () Bool)

(assert (=> d!13911 m!61747))

(declare-fun m!61749 () Bool)

(assert (=> b!67044 m!61749))

(declare-fun m!61751 () Bool)

(assert (=> b!67045 m!61751))

(assert (=> b!66859 d!13911))

(declare-fun d!13913 () Bool)

(assert (=> d!13913 (= (apply!72 lt!28943 lt!28941) (get!1123 (getValueByKey!128 (toList!705 lt!28943) lt!28941)))))

(declare-fun bs!2868 () Bool)

(assert (= bs!2868 d!13913))

(declare-fun m!61753 () Bool)

(assert (=> bs!2868 m!61753))

(assert (=> bs!2868 m!61753))

(declare-fun m!61755 () Bool)

(assert (=> bs!2868 m!61755))

(assert (=> b!66859 d!13913))

(declare-fun d!13915 () Bool)

(assert (=> d!13915 (= (apply!72 lt!28952 lt!28957) (get!1123 (getValueByKey!128 (toList!705 lt!28952) lt!28957)))))

(declare-fun bs!2869 () Bool)

(assert (= bs!2869 d!13915))

(declare-fun m!61757 () Bool)

(assert (=> bs!2869 m!61757))

(assert (=> bs!2869 m!61757))

(declare-fun m!61759 () Bool)

(assert (=> bs!2869 m!61759))

(assert (=> b!66859 d!13915))

(declare-fun d!13917 () Bool)

(assert (=> d!13917 (= (apply!72 (+!87 lt!28952 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))) lt!28957) (apply!72 lt!28952 lt!28957))))

(declare-fun lt!29089 () Unit!1818)

(assert (=> d!13917 (= lt!29089 (choose!377 lt!28952 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) lt!28957))))

(declare-fun e!43954 () Bool)

(assert (=> d!13917 e!43954))

(declare-fun res!36238 () Bool)

(assert (=> d!13917 (=> (not res!36238) (not e!43954))))

(assert (=> d!13917 (= res!36238 (contains!705 lt!28952 lt!28957))))

(assert (=> d!13917 (= (addApplyDifferent!48 lt!28952 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)) lt!28957) lt!29089)))

(declare-fun b!67046 () Bool)

(assert (=> b!67046 (= e!43954 (not (= lt!28957 lt!28955)))))

(assert (= (and d!13917 res!36238) b!67046))

(assert (=> d!13917 m!61327))

(assert (=> d!13917 m!61345))

(declare-fun m!61761 () Bool)

(assert (=> d!13917 m!61761))

(assert (=> d!13917 m!61327))

(assert (=> d!13917 m!61329))

(declare-fun m!61763 () Bool)

(assert (=> d!13917 m!61763))

(assert (=> b!66859 d!13917))

(declare-fun d!13919 () Bool)

(assert (=> d!13919 (= (apply!72 (+!87 lt!28952 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16)))) lt!28957) (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!28952 (tuple2!2083 lt!28955 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))))) lt!28957)))))

(declare-fun bs!2870 () Bool)

(assert (= bs!2870 d!13919))

(declare-fun m!61765 () Bool)

(assert (=> bs!2870 m!61765))

(assert (=> bs!2870 m!61765))

(declare-fun m!61767 () Bool)

(assert (=> bs!2870 m!61767))

(assert (=> b!66859 d!13919))

(declare-fun d!13921 () Bool)

(declare-fun e!43955 () Bool)

(assert (=> d!13921 e!43955))

(declare-fun res!36239 () Bool)

(assert (=> d!13921 (=> (not res!36239) (not e!43955))))

(declare-fun lt!29091 () ListLongMap!1379)

(assert (=> d!13921 (= res!36239 (contains!705 lt!29091 (_1!1052 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(declare-fun lt!29093 () List!1466)

(assert (=> d!13921 (= lt!29091 (ListLongMap!1380 lt!29093))))

(declare-fun lt!29090 () Unit!1818)

(declare-fun lt!29092 () Unit!1818)

(assert (=> d!13921 (= lt!29090 lt!29092)))

(assert (=> d!13921 (= (getValueByKey!128 lt!29093 (_1!1052 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))) (Some!133 (_2!1052 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(assert (=> d!13921 (= lt!29092 (lemmaContainsTupThenGetReturnValue!48 lt!29093 (_1!1052 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(assert (=> d!13921 (= lt!29093 (insertStrictlySorted!51 (toList!705 lt!28950) (_1!1052 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(assert (=> d!13921 (= (+!87 lt!28950 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) lt!29091)))

(declare-fun b!67047 () Bool)

(declare-fun res!36240 () Bool)

(assert (=> b!67047 (=> (not res!36240) (not e!43955))))

(assert (=> b!67047 (= res!36240 (= (getValueByKey!128 (toList!705 lt!29091) (_1!1052 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))) (Some!133 (_2!1052 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))))))

(declare-fun b!67048 () Bool)

(assert (=> b!67048 (= e!43955 (contains!707 (toList!705 lt!29091) (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))))

(assert (= (and d!13921 res!36239) b!67047))

(assert (= (and b!67047 res!36240) b!67048))

(declare-fun m!61769 () Bool)

(assert (=> d!13921 m!61769))

(declare-fun m!61771 () Bool)

(assert (=> d!13921 m!61771))

(declare-fun m!61773 () Bool)

(assert (=> d!13921 m!61773))

(declare-fun m!61775 () Bool)

(assert (=> d!13921 m!61775))

(declare-fun m!61777 () Bool)

(assert (=> b!67047 m!61777))

(declare-fun m!61779 () Bool)

(assert (=> b!67048 m!61779))

(assert (=> b!66859 d!13921))

(declare-fun d!13923 () Bool)

(assert (=> d!13923 (= (apply!72 (+!87 lt!28950 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) lt!28954) (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!28950 (tuple2!2083 lt!28953 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))) lt!28954)))))

(declare-fun bs!2871 () Bool)

(assert (= bs!2871 d!13923))

(declare-fun m!61781 () Bool)

(assert (=> bs!2871 m!61781))

(assert (=> bs!2871 m!61781))

(declare-fun m!61783 () Bool)

(assert (=> bs!2871 m!61783))

(assert (=> b!66859 d!13923))

(declare-fun b!67049 () Bool)

(declare-fun e!43957 () (_ BitVec 32))

(declare-fun call!5618 () (_ BitVec 32))

(assert (=> b!67049 (= e!43957 (bvadd #b00000000000000000000000000000001 call!5618))))

(declare-fun bm!5615 () Bool)

(assert (=> bm!5615 (= call!5618 (arrayCountValidKeys!0 lt!28827 (bvadd (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000001) (bvadd (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000001)))))

(declare-fun lt!29094 () (_ BitVec 32))

(declare-fun d!13925 () Bool)

(assert (=> d!13925 (and (bvsge lt!29094 #b00000000000000000000000000000000) (bvsle lt!29094 (bvsub (size!2058 lt!28827) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)))))))

(declare-fun e!43956 () (_ BitVec 32))

(assert (=> d!13925 (= lt!29094 e!43956)))

(declare-fun c!9302 () Bool)

(assert (=> d!13925 (= c!9302 (bvsge (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (bvadd (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000001)))))

(assert (=> d!13925 (and (bvsle (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (bvadd (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000001)) (bvsge (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000001) (size!2058 lt!28827)))))

(assert (=> d!13925 (= (arrayCountValidKeys!0 lt!28827 (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (bvadd (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000001)) lt!29094)))

(declare-fun b!67050 () Bool)

(assert (=> b!67050 (= e!43957 call!5618)))

(declare-fun b!67051 () Bool)

(assert (=> b!67051 (= e!43956 e!43957)))

(declare-fun c!9303 () Bool)

(assert (=> b!67051 (= c!9303 (validKeyInArray!0 (select (arr!1822 lt!28827) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)))))))

(declare-fun b!67052 () Bool)

(assert (=> b!67052 (= e!43956 #b00000000000000000000000000000000)))

(assert (= (and d!13925 c!9302) b!67052))

(assert (= (and d!13925 (not c!9302)) b!67051))

(assert (= (and b!67051 c!9303) b!67049))

(assert (= (and b!67051 (not c!9303)) b!67050))

(assert (= (or b!67049 b!67050) bm!5615))

(declare-fun m!61785 () Bool)

(assert (=> bm!5615 m!61785))

(declare-fun m!61787 () Bool)

(assert (=> b!67051 m!61787))

(assert (=> b!67051 m!61787))

(declare-fun m!61789 () Bool)

(assert (=> b!67051 m!61789))

(assert (=> d!13715 d!13925))

(declare-fun b!67053 () Bool)

(declare-fun e!43959 () (_ BitVec 32))

(declare-fun call!5619 () (_ BitVec 32))

(assert (=> b!67053 (= e!43959 (bvadd #b00000000000000000000000000000001 call!5619))))

(declare-fun bm!5616 () Bool)

(assert (=> bm!5616 (= call!5619 (arrayCountValidKeys!0 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun d!13927 () Bool)

(declare-fun lt!29095 () (_ BitVec 32))

(assert (=> d!13927 (and (bvsge lt!29095 #b00000000000000000000000000000000) (bvsle lt!29095 (bvsub (size!2058 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!43958 () (_ BitVec 32))

(assert (=> d!13927 (= lt!29095 e!43958)))

(declare-fun c!9304 () Bool)

(assert (=> d!13927 (= c!9304 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!13927 (and (bvsle #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2058 (_keys!3785 newMap!16)) (size!2058 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))))))))

(assert (=> d!13927 (= (arrayCountValidKeys!0 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) lt!29095)))

(declare-fun b!67054 () Bool)

(assert (=> b!67054 (= e!43959 call!5619)))

(declare-fun b!67055 () Bool)

(assert (=> b!67055 (= e!43958 e!43959)))

(declare-fun c!9305 () Bool)

(assert (=> b!67055 (= c!9305 (validKeyInArray!0 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!67056 () Bool)

(assert (=> b!67056 (= e!43958 #b00000000000000000000000000000000)))

(assert (= (and d!13927 c!9304) b!67056))

(assert (= (and d!13927 (not c!9304)) b!67055))

(assert (= (and b!67055 c!9305) b!67053))

(assert (= (and b!67055 (not c!9305)) b!67054))

(assert (= (or b!67053 b!67054) bm!5616))

(declare-fun m!61791 () Bool)

(assert (=> bm!5616 m!61791))

(declare-fun m!61793 () Bool)

(assert (=> b!67055 m!61793))

(assert (=> b!67055 m!61793))

(declare-fun m!61795 () Bool)

(assert (=> b!67055 m!61795))

(assert (=> d!13715 d!13927))

(declare-fun d!13929 () Bool)

(declare-fun e!43960 () Bool)

(assert (=> d!13929 e!43960))

(declare-fun res!36241 () Bool)

(assert (=> d!13929 (=> (not res!36241) (not e!43960))))

(declare-fun lt!29097 () ListLongMap!1379)

(assert (=> d!13929 (= res!36241 (contains!705 lt!29097 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun lt!29099 () List!1466)

(assert (=> d!13929 (= lt!29097 (ListLongMap!1380 lt!29099))))

(declare-fun lt!29096 () Unit!1818)

(declare-fun lt!29098 () Unit!1818)

(assert (=> d!13929 (= lt!29096 lt!29098)))

(assert (=> d!13929 (= (getValueByKey!128 lt!29099 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13929 (= lt!29098 (lemmaContainsTupThenGetReturnValue!48 lt!29099 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13929 (= lt!29099 (insertStrictlySorted!51 (toList!705 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13929 (= (+!87 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) lt!29097)))

(declare-fun b!67057 () Bool)

(declare-fun res!36242 () Bool)

(assert (=> b!67057 (=> (not res!36242) (not e!43960))))

(assert (=> b!67057 (= res!36242 (= (getValueByKey!128 (toList!705 lt!29097) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!67058 () Bool)

(assert (=> b!67058 (= e!43960 (contains!707 (toList!705 lt!29097) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(assert (= (and d!13929 res!36241) b!67057))

(assert (= (and b!67057 res!36242) b!67058))

(declare-fun m!61797 () Bool)

(assert (=> d!13929 m!61797))

(declare-fun m!61799 () Bool)

(assert (=> d!13929 m!61799))

(declare-fun m!61801 () Bool)

(assert (=> d!13929 m!61801))

(declare-fun m!61803 () Bool)

(assert (=> d!13929 m!61803))

(declare-fun m!61805 () Bool)

(assert (=> b!67057 m!61805))

(declare-fun m!61807 () Bool)

(assert (=> b!67058 m!61807))

(assert (=> d!13715 d!13929))

(declare-fun d!13931 () Bool)

(declare-fun e!43961 () Bool)

(assert (=> d!13931 e!43961))

(declare-fun res!36243 () Bool)

(assert (=> d!13931 (=> res!36243 e!43961)))

(declare-fun lt!29103 () Bool)

(assert (=> d!13931 (= res!36243 (not lt!29103))))

(declare-fun lt!29102 () Bool)

(assert (=> d!13931 (= lt!29103 lt!29102)))

(declare-fun lt!29100 () Unit!1818)

(declare-fun e!43962 () Unit!1818)

(assert (=> d!13931 (= lt!29100 e!43962)))

(declare-fun c!9306 () Bool)

(assert (=> d!13931 (= c!9306 lt!29102)))

(assert (=> d!13931 (= lt!29102 (containsKey!132 (toList!705 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!13931 (= (contains!705 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) lt!29103)))

(declare-fun b!67059 () Bool)

(declare-fun lt!29101 () Unit!1818)

(assert (=> b!67059 (= e!43962 lt!29101)))

(assert (=> b!67059 (= lt!29101 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> b!67059 (isDefined!82 (getValueByKey!128 (toList!705 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!67060 () Bool)

(declare-fun Unit!1854 () Unit!1818)

(assert (=> b!67060 (= e!43962 Unit!1854)))

(declare-fun b!67061 () Bool)

(assert (=> b!67061 (= e!43961 (isDefined!82 (getValueByKey!128 (toList!705 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (= (and d!13931 c!9306) b!67059))

(assert (= (and d!13931 (not c!9306)) b!67060))

(assert (= (and d!13931 (not res!36243)) b!67061))

(assert (=> d!13931 m!60449))

(declare-fun m!61809 () Bool)

(assert (=> d!13931 m!61809))

(assert (=> b!67059 m!60449))

(declare-fun m!61811 () Bool)

(assert (=> b!67059 m!61811))

(assert (=> b!67059 m!60449))

(declare-fun m!61813 () Bool)

(assert (=> b!67059 m!61813))

(assert (=> b!67059 m!61813))

(declare-fun m!61815 () Bool)

(assert (=> b!67059 m!61815))

(assert (=> b!67061 m!60449))

(assert (=> b!67061 m!61813))

(assert (=> b!67061 m!61813))

(assert (=> b!67061 m!61815))

(assert (=> d!13715 d!13931))

(assert (=> d!13715 d!13673))

(assert (=> d!13715 d!13779))

(declare-fun d!13933 () Bool)

(assert (=> d!13933 (= (arrayCountValidKeys!0 lt!28827 (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (bvadd (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!29106 () Unit!1818)

(declare-fun choose!2 (array!3817 (_ BitVec 32)) Unit!1818)

(assert (=> d!13933 (= lt!29106 (choose!2 lt!28827 (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615))))))

(declare-fun e!43965 () Bool)

(assert (=> d!13933 e!43965))

(declare-fun res!36248 () Bool)

(assert (=> d!13933 (=> (not res!36248) (not e!43965))))

(assert (=> d!13933 (= res!36248 (and (bvsge (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000000) (bvslt (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (size!2058 lt!28827))))))

(assert (=> d!13933 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!28827 (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615))) lt!29106)))

(declare-fun b!67066 () Bool)

(declare-fun res!36249 () Bool)

(assert (=> b!67066 (=> (not res!36249) (not e!43965))))

(assert (=> b!67066 (= res!36249 (validKeyInArray!0 (select (arr!1822 lt!28827) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)))))))

(declare-fun b!67067 () Bool)

(assert (=> b!67067 (= e!43965 (bvslt (size!2058 lt!28827) #b01111111111111111111111111111111))))

(assert (= (and d!13933 res!36248) b!67066))

(assert (= (and b!67066 res!36249) b!67067))

(assert (=> d!13933 m!61055))

(declare-fun m!61817 () Bool)

(assert (=> d!13933 m!61817))

(assert (=> b!67066 m!61787))

(assert (=> b!67066 m!61787))

(assert (=> b!67066 m!61789))

(assert (=> d!13715 d!13933))

(declare-fun d!13935 () Bool)

(assert (=> d!13935 (arrayContainsKey!0 lt!28837 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!29109 () Unit!1818)

(declare-fun choose!13 (array!3817 (_ BitVec 64) (_ BitVec 32)) Unit!1818)

(assert (=> d!13935 (= lt!29109 (choose!13 lt!28837 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615))))))

(assert (=> d!13935 (bvsge (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000000)))

(assert (=> d!13935 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!28837 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615))) lt!29109)))

(declare-fun bs!2872 () Bool)

(assert (= bs!2872 d!13935))

(assert (=> bs!2872 m!60449))

(assert (=> bs!2872 m!61077))

(assert (=> bs!2872 m!60449))

(declare-fun m!61819 () Bool)

(assert (=> bs!2872 m!61819))

(assert (=> d!13715 d!13935))

(declare-fun d!13937 () Bool)

(declare-fun res!36250 () Bool)

(declare-fun e!43967 () Bool)

(assert (=> d!13937 (=> res!36250 e!43967)))

(assert (=> d!13937 (= res!36250 (bvsge #b00000000000000000000000000000000 (size!2058 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))))))))

(assert (=> d!13937 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (mask!6080 newMap!16)) e!43967)))

(declare-fun b!67068 () Bool)

(declare-fun e!43968 () Bool)

(declare-fun call!5620 () Bool)

(assert (=> b!67068 (= e!43968 call!5620)))

(declare-fun bm!5617 () Bool)

(assert (=> bm!5617 (= call!5620 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (mask!6080 newMap!16)))))

(declare-fun b!67069 () Bool)

(declare-fun e!43966 () Bool)

(assert (=> b!67069 (= e!43966 e!43968)))

(declare-fun lt!29111 () (_ BitVec 64))

(assert (=> b!67069 (= lt!29111 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29110 () Unit!1818)

(assert (=> b!67069 (= lt!29110 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) lt!29111 #b00000000000000000000000000000000))))

(assert (=> b!67069 (arrayContainsKey!0 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) lt!29111 #b00000000000000000000000000000000)))

(declare-fun lt!29112 () Unit!1818)

(assert (=> b!67069 (= lt!29112 lt!29110)))

(declare-fun res!36251 () Bool)

(assert (=> b!67069 (= res!36251 (= (seekEntryOrOpen!0 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000) (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (mask!6080 newMap!16)) (Found!236 #b00000000000000000000000000000000)))))

(assert (=> b!67069 (=> (not res!36251) (not e!43968))))

(declare-fun b!67070 () Bool)

(assert (=> b!67070 (= e!43966 call!5620)))

(declare-fun b!67071 () Bool)

(assert (=> b!67071 (= e!43967 e!43966)))

(declare-fun c!9307 () Bool)

(assert (=> b!67071 (= c!9307 (validKeyInArray!0 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!13937 (not res!36250)) b!67071))

(assert (= (and b!67071 c!9307) b!67069))

(assert (= (and b!67071 (not c!9307)) b!67070))

(assert (= (and b!67069 res!36251) b!67068))

(assert (= (or b!67068 b!67070) bm!5617))

(declare-fun m!61821 () Bool)

(assert (=> bm!5617 m!61821))

(assert (=> b!67069 m!61793))

(declare-fun m!61823 () Bool)

(assert (=> b!67069 m!61823))

(declare-fun m!61825 () Bool)

(assert (=> b!67069 m!61825))

(assert (=> b!67069 m!61793))

(declare-fun m!61827 () Bool)

(assert (=> b!67069 m!61827))

(assert (=> b!67071 m!61793))

(assert (=> b!67071 m!61793))

(assert (=> b!67071 m!61795))

(assert (=> d!13715 d!13937))

(assert (=> d!13715 d!13687))

(declare-fun d!13939 () Bool)

(declare-fun res!36252 () Bool)

(declare-fun e!43969 () Bool)

(assert (=> d!13939 (=> res!36252 e!43969)))

(assert (=> d!13939 (= res!36252 (= (select (arr!1822 lt!28837) #b00000000000000000000000000000000) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!13939 (= (arrayContainsKey!0 lt!28837 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b00000000000000000000000000000000) e!43969)))

(declare-fun b!67072 () Bool)

(declare-fun e!43970 () Bool)

(assert (=> b!67072 (= e!43969 e!43970)))

(declare-fun res!36253 () Bool)

(assert (=> b!67072 (=> (not res!36253) (not e!43970))))

(assert (=> b!67072 (= res!36253 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2058 lt!28837)))))

(declare-fun b!67073 () Bool)

(assert (=> b!67073 (= e!43970 (arrayContainsKey!0 lt!28837 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!13939 (not res!36252)) b!67072))

(assert (= (and b!67072 res!36253) b!67073))

(declare-fun m!61829 () Bool)

(assert (=> d!13939 m!61829))

(assert (=> b!67073 m!60449))

(declare-fun m!61831 () Bool)

(assert (=> b!67073 m!61831))

(assert (=> d!13715 d!13939))

(declare-fun b!67074 () Bool)

(declare-fun e!43982 () Bool)

(declare-fun call!5621 () Bool)

(assert (=> b!67074 (= e!43982 (not call!5621))))

(declare-fun b!67075 () Bool)

(declare-fun c!9309 () Bool)

(assert (=> b!67075 (= c!9309 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!43977 () ListLongMap!1379)

(declare-fun e!43971 () ListLongMap!1379)

(assert (=> b!67075 (= e!43977 e!43971)))

(declare-fun b!67076 () Bool)

(declare-fun res!36256 () Bool)

(declare-fun e!43978 () Bool)

(assert (=> b!67076 (=> (not res!36256) (not e!43978))))

(declare-fun e!43981 () Bool)

(assert (=> b!67076 (= res!36256 e!43981)))

(declare-fun res!36254 () Bool)

(assert (=> b!67076 (=> res!36254 e!43981)))

(declare-fun e!43976 () Bool)

(assert (=> b!67076 (= res!36254 (not e!43976))))

(declare-fun res!36259 () Bool)

(assert (=> b!67076 (=> (not res!36259) (not e!43976))))

(assert (=> b!67076 (= res!36259 (bvslt #b00000000000000000000000000000000 (size!2058 lt!28852)))))

(declare-fun b!67077 () Bool)

(declare-fun e!43974 () ListLongMap!1379)

(assert (=> b!67077 (= e!43974 e!43977)))

(declare-fun c!9311 () Bool)

(assert (=> b!67077 (= c!9311 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67078 () Bool)

(declare-fun e!43983 () Unit!1818)

(declare-fun Unit!1855 () Unit!1818)

(assert (=> b!67078 (= e!43983 Unit!1855)))

(declare-fun b!67079 () Bool)

(declare-fun res!36260 () Bool)

(assert (=> b!67079 (=> (not res!36260) (not e!43978))))

(declare-fun e!43979 () Bool)

(assert (=> b!67079 (= res!36260 e!43979)))

(declare-fun c!9310 () Bool)

(assert (=> b!67079 (= c!9310 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5618 () Bool)

(declare-fun call!5627 () Bool)

(declare-fun lt!29132 () ListLongMap!1379)

(assert (=> bm!5618 (= call!5627 (contains!705 lt!29132 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67080 () Bool)

(declare-fun lt!29128 () Unit!1818)

(assert (=> b!67080 (= e!43983 lt!29128)))

(declare-fun lt!29118 () ListLongMap!1379)

(assert (=> b!67080 (= lt!29118 (getCurrentListMapNoExtraKeys!51 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29131 () (_ BitVec 64))

(assert (=> b!67080 (= lt!29131 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29130 () (_ BitVec 64))

(assert (=> b!67080 (= lt!29130 (select (arr!1822 lt!28852) #b00000000000000000000000000000000))))

(declare-fun lt!29116 () Unit!1818)

(assert (=> b!67080 (= lt!29116 (addStillContains!48 lt!29118 lt!29131 (zeroValue!2054 newMap!16) lt!29130))))

(assert (=> b!67080 (contains!705 (+!87 lt!29118 (tuple2!2083 lt!29131 (zeroValue!2054 newMap!16))) lt!29130)))

(declare-fun lt!29123 () Unit!1818)

(assert (=> b!67080 (= lt!29123 lt!29116)))

(declare-fun lt!29115 () ListLongMap!1379)

(assert (=> b!67080 (= lt!29115 (getCurrentListMapNoExtraKeys!51 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29119 () (_ BitVec 64))

(assert (=> b!67080 (= lt!29119 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29113 () (_ BitVec 64))

(assert (=> b!67080 (= lt!29113 (select (arr!1822 lt!28852) #b00000000000000000000000000000000))))

(declare-fun lt!29134 () Unit!1818)

(assert (=> b!67080 (= lt!29134 (addApplyDifferent!48 lt!29115 lt!29119 (minValue!2054 newMap!16) lt!29113))))

(assert (=> b!67080 (= (apply!72 (+!87 lt!29115 (tuple2!2083 lt!29119 (minValue!2054 newMap!16))) lt!29113) (apply!72 lt!29115 lt!29113))))

(declare-fun lt!29117 () Unit!1818)

(assert (=> b!67080 (= lt!29117 lt!29134)))

(declare-fun lt!29124 () ListLongMap!1379)

(assert (=> b!67080 (= lt!29124 (getCurrentListMapNoExtraKeys!51 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29127 () (_ BitVec 64))

(assert (=> b!67080 (= lt!29127 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29129 () (_ BitVec 64))

(assert (=> b!67080 (= lt!29129 (select (arr!1822 lt!28852) #b00000000000000000000000000000000))))

(declare-fun lt!29121 () Unit!1818)

(assert (=> b!67080 (= lt!29121 (addApplyDifferent!48 lt!29124 lt!29127 (zeroValue!2054 newMap!16) lt!29129))))

(assert (=> b!67080 (= (apply!72 (+!87 lt!29124 (tuple2!2083 lt!29127 (zeroValue!2054 newMap!16))) lt!29129) (apply!72 lt!29124 lt!29129))))

(declare-fun lt!29133 () Unit!1818)

(assert (=> b!67080 (= lt!29133 lt!29121)))

(declare-fun lt!29122 () ListLongMap!1379)

(assert (=> b!67080 (= lt!29122 (getCurrentListMapNoExtraKeys!51 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29125 () (_ BitVec 64))

(assert (=> b!67080 (= lt!29125 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29126 () (_ BitVec 64))

(assert (=> b!67080 (= lt!29126 (select (arr!1822 lt!28852) #b00000000000000000000000000000000))))

(assert (=> b!67080 (= lt!29128 (addApplyDifferent!48 lt!29122 lt!29125 (minValue!2054 newMap!16) lt!29126))))

(assert (=> b!67080 (= (apply!72 (+!87 lt!29122 (tuple2!2083 lt!29125 (minValue!2054 newMap!16))) lt!29126) (apply!72 lt!29122 lt!29126))))

(declare-fun d!13941 () Bool)

(assert (=> d!13941 e!43978))

(declare-fun res!36262 () Bool)

(assert (=> d!13941 (=> (not res!36262) (not e!43978))))

(assert (=> d!13941 (= res!36262 (or (bvsge #b00000000000000000000000000000000 (size!2058 lt!28852)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 lt!28852)))))))

(declare-fun lt!29114 () ListLongMap!1379)

(assert (=> d!13941 (= lt!29132 lt!29114)))

(declare-fun lt!29120 () Unit!1818)

(assert (=> d!13941 (= lt!29120 e!43983)))

(declare-fun c!9313 () Bool)

(declare-fun e!43975 () Bool)

(assert (=> d!13941 (= c!9313 e!43975)))

(declare-fun res!36261 () Bool)

(assert (=> d!13941 (=> (not res!36261) (not e!43975))))

(assert (=> d!13941 (= res!36261 (bvslt #b00000000000000000000000000000000 (size!2058 lt!28852)))))

(assert (=> d!13941 (= lt!29114 e!43974)))

(declare-fun c!9312 () Bool)

(assert (=> d!13941 (= c!9312 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13941 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13941 (= (getCurrentListMap!401 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29132)))

(declare-fun bm!5619 () Bool)

(declare-fun call!5625 () ListLongMap!1379)

(declare-fun call!5622 () ListLongMap!1379)

(assert (=> bm!5619 (= call!5625 call!5622)))

(declare-fun b!67081 () Bool)

(assert (=> b!67081 (= e!43979 (not call!5627))))

(declare-fun b!67082 () Bool)

(assert (=> b!67082 (= e!43977 call!5625)))

(declare-fun b!67083 () Bool)

(declare-fun e!43973 () Bool)

(assert (=> b!67083 (= e!43973 (= (apply!72 lt!29132 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun b!67084 () Bool)

(assert (=> b!67084 (= e!43978 e!43982)))

(declare-fun c!9308 () Bool)

(assert (=> b!67084 (= c!9308 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!43980 () Bool)

(declare-fun b!67085 () Bool)

(assert (=> b!67085 (= e!43980 (= (apply!72 lt!29132 (select (arr!1822 lt!28852) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 lt!28845) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67085 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 lt!28845)))))

(assert (=> b!67085 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 lt!28852)))))

(declare-fun b!67086 () Bool)

(assert (=> b!67086 (= e!43974 (+!87 call!5622 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun bm!5620 () Bool)

(declare-fun call!5623 () ListLongMap!1379)

(declare-fun call!5626 () ListLongMap!1379)

(assert (=> bm!5620 (= call!5623 call!5626)))

(declare-fun call!5624 () ListLongMap!1379)

(declare-fun bm!5621 () Bool)

(assert (=> bm!5621 (= call!5624 (getCurrentListMapNoExtraKeys!51 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!67087 () Bool)

(assert (=> b!67087 (= e!43971 call!5623)))

(declare-fun b!67088 () Bool)

(declare-fun e!43972 () Bool)

(assert (=> b!67088 (= e!43972 (= (apply!72 lt!29132 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun bm!5622 () Bool)

(assert (=> bm!5622 (= call!5626 call!5624)))

(declare-fun b!67089 () Bool)

(assert (=> b!67089 (= e!43976 (validKeyInArray!0 (select (arr!1822 lt!28852) #b00000000000000000000000000000000)))))

(declare-fun b!67090 () Bool)

(assert (=> b!67090 (= e!43981 e!43980)))

(declare-fun res!36257 () Bool)

(assert (=> b!67090 (=> (not res!36257) (not e!43980))))

(assert (=> b!67090 (= res!36257 (contains!705 lt!29132 (select (arr!1822 lt!28852) #b00000000000000000000000000000000)))))

(assert (=> b!67090 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 lt!28852)))))

(declare-fun b!67091 () Bool)

(assert (=> b!67091 (= e!43982 e!43972)))

(declare-fun res!36255 () Bool)

(assert (=> b!67091 (= res!36255 call!5621)))

(assert (=> b!67091 (=> (not res!36255) (not e!43972))))

(declare-fun bm!5623 () Bool)

(assert (=> bm!5623 (= call!5622 (+!87 (ite c!9312 call!5624 (ite c!9311 call!5626 call!5623)) (ite (or c!9312 c!9311) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!67092 () Bool)

(assert (=> b!67092 (= e!43979 e!43973)))

(declare-fun res!36258 () Bool)

(assert (=> b!67092 (= res!36258 call!5627)))

(assert (=> b!67092 (=> (not res!36258) (not e!43973))))

(declare-fun b!67093 () Bool)

(assert (=> b!67093 (= e!43971 call!5625)))

(declare-fun b!67094 () Bool)

(assert (=> b!67094 (= e!43975 (validKeyInArray!0 (select (arr!1822 lt!28852) #b00000000000000000000000000000000)))))

(declare-fun bm!5624 () Bool)

(assert (=> bm!5624 (= call!5621 (contains!705 lt!29132 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!13941 c!9312) b!67086))

(assert (= (and d!13941 (not c!9312)) b!67077))

(assert (= (and b!67077 c!9311) b!67082))

(assert (= (and b!67077 (not c!9311)) b!67075))

(assert (= (and b!67075 c!9309) b!67093))

(assert (= (and b!67075 (not c!9309)) b!67087))

(assert (= (or b!67093 b!67087) bm!5620))

(assert (= (or b!67082 bm!5620) bm!5622))

(assert (= (or b!67082 b!67093) bm!5619))

(assert (= (or b!67086 bm!5622) bm!5621))

(assert (= (or b!67086 bm!5619) bm!5623))

(assert (= (and d!13941 res!36261) b!67094))

(assert (= (and d!13941 c!9313) b!67080))

(assert (= (and d!13941 (not c!9313)) b!67078))

(assert (= (and d!13941 res!36262) b!67076))

(assert (= (and b!67076 res!36259) b!67089))

(assert (= (and b!67076 (not res!36254)) b!67090))

(assert (= (and b!67090 res!36257) b!67085))

(assert (= (and b!67076 res!36256) b!67079))

(assert (= (and b!67079 c!9310) b!67092))

(assert (= (and b!67079 (not c!9310)) b!67081))

(assert (= (and b!67092 res!36258) b!67083))

(assert (= (or b!67092 b!67081) bm!5618))

(assert (= (and b!67079 res!36260) b!67084))

(assert (= (and b!67084 c!9308) b!67091))

(assert (= (and b!67084 (not c!9308)) b!67074))

(assert (= (and b!67091 res!36255) b!67088))

(assert (= (or b!67091 b!67074) bm!5624))

(declare-fun b_lambda!2995 () Bool)

(assert (=> (not b_lambda!2995) (not b!67085)))

(assert (=> b!67085 t!4952))

(declare-fun b_and!4133 () Bool)

(assert (= b_and!4129 (and (=> t!4952 result!2587) b_and!4133)))

(assert (=> b!67085 t!4954))

(declare-fun b_and!4135 () Bool)

(assert (= b_and!4131 (and (=> t!4954 result!2589) b_and!4135)))

(declare-fun m!61833 () Bool)

(assert (=> b!67086 m!61833))

(assert (=> d!13941 m!60845))

(declare-fun m!61835 () Bool)

(assert (=> bm!5621 m!61835))

(declare-fun m!61837 () Bool)

(assert (=> b!67088 m!61837))

(declare-fun m!61839 () Bool)

(assert (=> b!67089 m!61839))

(assert (=> b!67089 m!61839))

(declare-fun m!61841 () Bool)

(assert (=> b!67089 m!61841))

(declare-fun m!61843 () Bool)

(assert (=> b!67080 m!61843))

(declare-fun m!61845 () Bool)

(assert (=> b!67080 m!61845))

(declare-fun m!61847 () Bool)

(assert (=> b!67080 m!61847))

(declare-fun m!61849 () Bool)

(assert (=> b!67080 m!61849))

(assert (=> b!67080 m!61843))

(declare-fun m!61851 () Bool)

(assert (=> b!67080 m!61851))

(declare-fun m!61853 () Bool)

(assert (=> b!67080 m!61853))

(assert (=> b!67080 m!61847))

(declare-fun m!61855 () Bool)

(assert (=> b!67080 m!61855))

(declare-fun m!61857 () Bool)

(assert (=> b!67080 m!61857))

(declare-fun m!61859 () Bool)

(assert (=> b!67080 m!61859))

(declare-fun m!61861 () Bool)

(assert (=> b!67080 m!61861))

(declare-fun m!61863 () Bool)

(assert (=> b!67080 m!61863))

(assert (=> b!67080 m!61835))

(declare-fun m!61865 () Bool)

(assert (=> b!67080 m!61865))

(assert (=> b!67080 m!61861))

(declare-fun m!61867 () Bool)

(assert (=> b!67080 m!61867))

(assert (=> b!67080 m!61839))

(declare-fun m!61869 () Bool)

(assert (=> b!67080 m!61869))

(assert (=> b!67080 m!61851))

(declare-fun m!61871 () Bool)

(assert (=> b!67080 m!61871))

(declare-fun m!61873 () Bool)

(assert (=> bm!5623 m!61873))

(declare-fun m!61875 () Bool)

(assert (=> bm!5624 m!61875))

(assert (=> b!67085 m!60885))

(assert (=> b!67085 m!61839))

(assert (=> b!67085 m!61839))

(declare-fun m!61877 () Bool)

(assert (=> b!67085 m!61877))

(declare-fun m!61879 () Bool)

(assert (=> b!67085 m!61879))

(assert (=> b!67085 m!60885))

(declare-fun m!61881 () Bool)

(assert (=> b!67085 m!61881))

(assert (=> b!67085 m!61879))

(declare-fun m!61883 () Bool)

(assert (=> bm!5618 m!61883))

(assert (=> b!67090 m!61839))

(assert (=> b!67090 m!61839))

(declare-fun m!61885 () Bool)

(assert (=> b!67090 m!61885))

(declare-fun m!61887 () Bool)

(assert (=> b!67083 m!61887))

(assert (=> b!67094 m!61839))

(assert (=> b!67094 m!61839))

(assert (=> b!67094 m!61841))

(assert (=> d!13715 d!13941))

(declare-fun d!13943 () Bool)

(declare-fun e!43986 () Bool)

(assert (=> d!13943 e!43986))

(declare-fun res!36265 () Bool)

(assert (=> d!13943 (=> (not res!36265) (not e!43986))))

(assert (=> d!13943 (= res!36265 (and (bvsge (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000000) (bvslt (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (size!2058 (_keys!3785 newMap!16))) (bvslt (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (size!2059 (_values!2129 newMap!16)))))))

(declare-fun lt!29137 () Unit!1818)

(declare-fun choose!385 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) (_ BitVec 64) V!2913 Int) Unit!1818)

(assert (=> d!13943 (= lt!29137 (choose!385 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 (defaultEntry!2146 newMap!16)))))

(assert (=> d!13943 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13943 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!10 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 (defaultEntry!2146 newMap!16)) lt!29137)))

(declare-fun b!67097 () Bool)

(assert (=> b!67097 (= e!43986 (= (+!87 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (getCurrentListMap!401 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))))))

(assert (= (and d!13943 res!36265) b!67097))

(assert (=> d!13943 m!60449))

(declare-fun m!61889 () Bool)

(assert (=> d!13943 m!61889))

(assert (=> d!13943 m!60845))

(assert (=> b!67097 m!61067))

(assert (=> b!67097 m!61069))

(assert (=> b!67097 m!60697))

(assert (=> b!67097 m!61065))

(assert (=> b!67097 m!61073))

(assert (=> b!67097 m!60697))

(assert (=> d!13715 d!13943))

(declare-fun d!13945 () Bool)

(declare-fun e!43989 () Bool)

(assert (=> d!13945 e!43989))

(declare-fun res!36268 () Bool)

(assert (=> d!13945 (=> (not res!36268) (not e!43989))))

(assert (=> d!13945 (= res!36268 (and (bvsge (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000000) (bvslt (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (size!2058 (_keys!3785 newMap!16)))))))

(declare-fun lt!29140 () Unit!1818)

(declare-fun choose!41 (array!3817 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1467) Unit!1818)

(assert (=> d!13945 (= lt!29140 (choose!41 (_keys!3785 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) lt!28848 lt!28847))))

(assert (=> d!13945 (bvslt (size!2058 (_keys!3785 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!13945 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3785 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) lt!28848 lt!28847) lt!29140)))

(declare-fun b!67100 () Bool)

(assert (=> b!67100 (= e!43989 (arrayNoDuplicates!0 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) lt!28848 lt!28847))))

(assert (= (and d!13945 res!36268) b!67100))

(assert (=> d!13945 m!60449))

(declare-fun m!61891 () Bool)

(assert (=> d!13945 m!61891))

(assert (=> b!67100 m!61073))

(assert (=> b!67100 m!61043))

(assert (=> d!13715 d!13945))

(assert (=> d!13715 d!13685))

(declare-fun d!13947 () Bool)

(declare-fun e!43990 () Bool)

(assert (=> d!13947 e!43990))

(declare-fun res!36269 () Bool)

(assert (=> d!13947 (=> res!36269 e!43990)))

(declare-fun lt!29144 () Bool)

(assert (=> d!13947 (= res!36269 (not lt!29144))))

(declare-fun lt!29143 () Bool)

(assert (=> d!13947 (= lt!29144 lt!29143)))

(declare-fun lt!29141 () Unit!1818)

(declare-fun e!43991 () Unit!1818)

(assert (=> d!13947 (= lt!29141 e!43991)))

(declare-fun c!9314 () Bool)

(assert (=> d!13947 (= c!9314 lt!29143)))

(assert (=> d!13947 (= lt!29143 (containsKey!132 (toList!705 (getCurrentListMap!401 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)))))))

(assert (=> d!13947 (= (contains!705 (getCurrentListMap!401 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)))) lt!29144)))

(declare-fun b!67101 () Bool)

(declare-fun lt!29142 () Unit!1818)

(assert (=> b!67101 (= e!43991 lt!29142)))

(assert (=> b!67101 (= lt!29142 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 (getCurrentListMap!401 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)))))))

(assert (=> b!67101 (isDefined!82 (getValueByKey!128 (toList!705 (getCurrentListMap!401 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)))))))

(declare-fun b!67102 () Bool)

(declare-fun Unit!1856 () Unit!1818)

(assert (=> b!67102 (= e!43991 Unit!1856)))

(declare-fun b!67103 () Bool)

(assert (=> b!67103 (= e!43990 (isDefined!82 (getValueByKey!128 (toList!705 (getCurrentListMap!401 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615))))))))

(assert (= (and d!13947 c!9314) b!67101))

(assert (= (and d!13947 (not c!9314)) b!67102))

(assert (= (and d!13947 (not res!36269)) b!67103))

(assert (=> d!13947 m!61059))

(declare-fun m!61893 () Bool)

(assert (=> d!13947 m!61893))

(assert (=> b!67101 m!61059))

(declare-fun m!61895 () Bool)

(assert (=> b!67101 m!61895))

(assert (=> b!67101 m!61059))

(declare-fun m!61897 () Bool)

(assert (=> b!67101 m!61897))

(assert (=> b!67101 m!61897))

(declare-fun m!61899 () Bool)

(assert (=> b!67101 m!61899))

(assert (=> b!67103 m!61059))

(assert (=> b!67103 m!61897))

(assert (=> b!67103 m!61897))

(assert (=> b!67103 m!61899))

(assert (=> d!13715 d!13947))

(declare-fun b!67113 () Bool)

(declare-fun res!36280 () Bool)

(declare-fun e!43997 () Bool)

(assert (=> b!67113 (=> (not res!36280) (not e!43997))))

(assert (=> b!67113 (= res!36280 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!67114 () Bool)

(assert (=> b!67114 (= e!43997 (bvslt (size!2058 (_keys!3785 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!13949 () Bool)

(declare-fun e!43996 () Bool)

(assert (=> d!13949 e!43996))

(declare-fun res!36281 () Bool)

(assert (=> d!13949 (=> (not res!36281) (not e!43996))))

(assert (=> d!13949 (= res!36281 (and (bvsge (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000000) (bvslt (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (size!2058 (_keys!3785 newMap!16)))))))

(declare-fun lt!29147 () Unit!1818)

(declare-fun choose!1 (array!3817 (_ BitVec 32) (_ BitVec 64)) Unit!1818)

(assert (=> d!13949 (= lt!29147 (choose!1 (_keys!3785 newMap!16) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!13949 e!43997))

(declare-fun res!36278 () Bool)

(assert (=> d!13949 (=> (not res!36278) (not e!43997))))

(assert (=> d!13949 (= res!36278 (and (bvsge (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000000) (bvslt (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (size!2058 (_keys!3785 newMap!16)))))))

(assert (=> d!13949 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3785 newMap!16) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) lt!29147)))

(declare-fun b!67115 () Bool)

(assert (=> b!67115 (= e!43996 (= (arrayCountValidKeys!0 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3785 newMap!16) #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!67112 () Bool)

(declare-fun res!36279 () Bool)

(assert (=> b!67112 (=> (not res!36279) (not e!43997))))

(assert (=> b!67112 (= res!36279 (not (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615))))))))

(assert (= (and d!13949 res!36278) b!67112))

(assert (= (and b!67112 res!36279) b!67113))

(assert (= (and b!67113 res!36280) b!67114))

(assert (= (and d!13949 res!36281) b!67115))

(assert (=> b!67113 m!60449))

(assert (=> b!67113 m!60809))

(assert (=> d!13949 m!60449))

(declare-fun m!61901 () Bool)

(assert (=> d!13949 m!61901))

(assert (=> b!67115 m!61073))

(assert (=> b!67115 m!61053))

(assert (=> b!67115 m!60819))

(declare-fun m!61903 () Bool)

(assert (=> b!67112 m!61903))

(assert (=> b!67112 m!61903))

(declare-fun m!61905 () Bool)

(assert (=> b!67112 m!61905))

(assert (=> d!13715 d!13949))

(declare-fun b!67116 () Bool)

(declare-fun e!44009 () Bool)

(declare-fun call!5628 () Bool)

(assert (=> b!67116 (= e!44009 (not call!5628))))

(declare-fun b!67117 () Bool)

(declare-fun c!9316 () Bool)

(assert (=> b!67117 (= c!9316 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44004 () ListLongMap!1379)

(declare-fun e!43998 () ListLongMap!1379)

(assert (=> b!67117 (= e!44004 e!43998)))

(declare-fun b!67118 () Bool)

(declare-fun res!36284 () Bool)

(declare-fun e!44005 () Bool)

(assert (=> b!67118 (=> (not res!36284) (not e!44005))))

(declare-fun e!44008 () Bool)

(assert (=> b!67118 (= res!36284 e!44008)))

(declare-fun res!36282 () Bool)

(assert (=> b!67118 (=> res!36282 e!44008)))

(declare-fun e!44003 () Bool)

(assert (=> b!67118 (= res!36282 (not e!44003))))

(declare-fun res!36287 () Bool)

(assert (=> b!67118 (=> (not res!36287) (not e!44003))))

(assert (=> b!67118 (= res!36287 (bvslt #b00000000000000000000000000000000 (size!2058 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))))))))

(declare-fun b!67119 () Bool)

(declare-fun e!44001 () ListLongMap!1379)

(assert (=> b!67119 (= e!44001 e!44004)))

(declare-fun c!9318 () Bool)

(assert (=> b!67119 (= c!9318 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67120 () Bool)

(declare-fun e!44010 () Unit!1818)

(declare-fun Unit!1857 () Unit!1818)

(assert (=> b!67120 (= e!44010 Unit!1857)))

(declare-fun b!67121 () Bool)

(declare-fun res!36288 () Bool)

(assert (=> b!67121 (=> (not res!36288) (not e!44005))))

(declare-fun e!44006 () Bool)

(assert (=> b!67121 (= res!36288 e!44006)))

(declare-fun c!9317 () Bool)

(assert (=> b!67121 (= c!9317 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5625 () Bool)

(declare-fun call!5634 () Bool)

(declare-fun lt!29167 () ListLongMap!1379)

(assert (=> bm!5625 (= call!5634 (contains!705 lt!29167 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67122 () Bool)

(declare-fun lt!29163 () Unit!1818)

(assert (=> b!67122 (= e!44010 lt!29163)))

(declare-fun lt!29153 () ListLongMap!1379)

(assert (=> b!67122 (= lt!29153 (getCurrentListMapNoExtraKeys!51 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29166 () (_ BitVec 64))

(assert (=> b!67122 (= lt!29166 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29165 () (_ BitVec 64))

(assert (=> b!67122 (= lt!29165 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29151 () Unit!1818)

(assert (=> b!67122 (= lt!29151 (addStillContains!48 lt!29153 lt!29166 (zeroValue!2054 newMap!16) lt!29165))))

(assert (=> b!67122 (contains!705 (+!87 lt!29153 (tuple2!2083 lt!29166 (zeroValue!2054 newMap!16))) lt!29165)))

(declare-fun lt!29158 () Unit!1818)

(assert (=> b!67122 (= lt!29158 lt!29151)))

(declare-fun lt!29150 () ListLongMap!1379)

(assert (=> b!67122 (= lt!29150 (getCurrentListMapNoExtraKeys!51 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29154 () (_ BitVec 64))

(assert (=> b!67122 (= lt!29154 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29148 () (_ BitVec 64))

(assert (=> b!67122 (= lt!29148 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29169 () Unit!1818)

(assert (=> b!67122 (= lt!29169 (addApplyDifferent!48 lt!29150 lt!29154 (minValue!2054 newMap!16) lt!29148))))

(assert (=> b!67122 (= (apply!72 (+!87 lt!29150 (tuple2!2083 lt!29154 (minValue!2054 newMap!16))) lt!29148) (apply!72 lt!29150 lt!29148))))

(declare-fun lt!29152 () Unit!1818)

(assert (=> b!67122 (= lt!29152 lt!29169)))

(declare-fun lt!29159 () ListLongMap!1379)

(assert (=> b!67122 (= lt!29159 (getCurrentListMapNoExtraKeys!51 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29162 () (_ BitVec 64))

(assert (=> b!67122 (= lt!29162 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29164 () (_ BitVec 64))

(assert (=> b!67122 (= lt!29164 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29156 () Unit!1818)

(assert (=> b!67122 (= lt!29156 (addApplyDifferent!48 lt!29159 lt!29162 (zeroValue!2054 newMap!16) lt!29164))))

(assert (=> b!67122 (= (apply!72 (+!87 lt!29159 (tuple2!2083 lt!29162 (zeroValue!2054 newMap!16))) lt!29164) (apply!72 lt!29159 lt!29164))))

(declare-fun lt!29168 () Unit!1818)

(assert (=> b!67122 (= lt!29168 lt!29156)))

(declare-fun lt!29157 () ListLongMap!1379)

(assert (=> b!67122 (= lt!29157 (getCurrentListMapNoExtraKeys!51 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29160 () (_ BitVec 64))

(assert (=> b!67122 (= lt!29160 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29161 () (_ BitVec 64))

(assert (=> b!67122 (= lt!29161 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!67122 (= lt!29163 (addApplyDifferent!48 lt!29157 lt!29160 (minValue!2054 newMap!16) lt!29161))))

(assert (=> b!67122 (= (apply!72 (+!87 lt!29157 (tuple2!2083 lt!29160 (minValue!2054 newMap!16))) lt!29161) (apply!72 lt!29157 lt!29161))))

(declare-fun d!13951 () Bool)

(assert (=> d!13951 e!44005))

(declare-fun res!36290 () Bool)

(assert (=> d!13951 (=> (not res!36290) (not e!44005))))

(assert (=> d!13951 (= res!36290 (or (bvsge #b00000000000000000000000000000000 (size!2058 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))))))))))

(declare-fun lt!29149 () ListLongMap!1379)

(assert (=> d!13951 (= lt!29167 lt!29149)))

(declare-fun lt!29155 () Unit!1818)

(assert (=> d!13951 (= lt!29155 e!44010)))

(declare-fun c!9320 () Bool)

(declare-fun e!44002 () Bool)

(assert (=> d!13951 (= c!9320 e!44002)))

(declare-fun res!36289 () Bool)

(assert (=> d!13951 (=> (not res!36289) (not e!44002))))

(assert (=> d!13951 (= res!36289 (bvslt #b00000000000000000000000000000000 (size!2058 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))))))))

(assert (=> d!13951 (= lt!29149 e!44001)))

(declare-fun c!9319 () Bool)

(assert (=> d!13951 (= c!9319 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13951 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13951 (= (getCurrentListMap!401 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29167)))

(declare-fun bm!5626 () Bool)

(declare-fun call!5632 () ListLongMap!1379)

(declare-fun call!5629 () ListLongMap!1379)

(assert (=> bm!5626 (= call!5632 call!5629)))

(declare-fun b!67123 () Bool)

(assert (=> b!67123 (= e!44006 (not call!5634))))

(declare-fun b!67124 () Bool)

(assert (=> b!67124 (= e!44004 call!5632)))

(declare-fun b!67125 () Bool)

(declare-fun e!44000 () Bool)

(assert (=> b!67125 (= e!44000 (= (apply!72 lt!29167 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun b!67126 () Bool)

(assert (=> b!67126 (= e!44005 e!44009)))

(declare-fun c!9315 () Bool)

(assert (=> b!67126 (= c!9315 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67127 () Bool)

(declare-fun e!44007 () Bool)

(assert (=> b!67127 (= e!44007 (= (apply!72 lt!29167 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67127 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))))))))

(assert (=> b!67127 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))))))))

(declare-fun b!67128 () Bool)

(assert (=> b!67128 (= e!44001 (+!87 call!5629 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun bm!5627 () Bool)

(declare-fun call!5630 () ListLongMap!1379)

(declare-fun call!5633 () ListLongMap!1379)

(assert (=> bm!5627 (= call!5630 call!5633)))

(declare-fun bm!5628 () Bool)

(declare-fun call!5631 () ListLongMap!1379)

(assert (=> bm!5628 (= call!5631 (getCurrentListMapNoExtraKeys!51 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!67129 () Bool)

(assert (=> b!67129 (= e!43998 call!5630)))

(declare-fun b!67130 () Bool)

(declare-fun e!43999 () Bool)

(assert (=> b!67130 (= e!43999 (= (apply!72 lt!29167 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun bm!5629 () Bool)

(assert (=> bm!5629 (= call!5633 call!5631)))

(declare-fun b!67131 () Bool)

(assert (=> b!67131 (= e!44003 (validKeyInArray!0 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!67132 () Bool)

(assert (=> b!67132 (= e!44008 e!44007)))

(declare-fun res!36285 () Bool)

(assert (=> b!67132 (=> (not res!36285) (not e!44007))))

(assert (=> b!67132 (= res!36285 (contains!705 lt!29167 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!67132 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))))))))

(declare-fun b!67133 () Bool)

(assert (=> b!67133 (= e!44009 e!43999)))

(declare-fun res!36283 () Bool)

(assert (=> b!67133 (= res!36283 call!5628)))

(assert (=> b!67133 (=> (not res!36283) (not e!43999))))

(declare-fun bm!5630 () Bool)

(assert (=> bm!5630 (= call!5629 (+!87 (ite c!9319 call!5631 (ite c!9318 call!5633 call!5630)) (ite (or c!9319 c!9318) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!67134 () Bool)

(assert (=> b!67134 (= e!44006 e!44000)))

(declare-fun res!36286 () Bool)

(assert (=> b!67134 (= res!36286 call!5634)))

(assert (=> b!67134 (=> (not res!36286) (not e!44000))))

(declare-fun b!67135 () Bool)

(assert (=> b!67135 (= e!43998 call!5632)))

(declare-fun b!67136 () Bool)

(assert (=> b!67136 (= e!44002 (validKeyInArray!0 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!5631 () Bool)

(assert (=> bm!5631 (= call!5628 (contains!705 lt!29167 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!13951 c!9319) b!67128))

(assert (= (and d!13951 (not c!9319)) b!67119))

(assert (= (and b!67119 c!9318) b!67124))

(assert (= (and b!67119 (not c!9318)) b!67117))

(assert (= (and b!67117 c!9316) b!67135))

(assert (= (and b!67117 (not c!9316)) b!67129))

(assert (= (or b!67135 b!67129) bm!5627))

(assert (= (or b!67124 bm!5627) bm!5629))

(assert (= (or b!67124 b!67135) bm!5626))

(assert (= (or b!67128 bm!5629) bm!5628))

(assert (= (or b!67128 bm!5626) bm!5630))

(assert (= (and d!13951 res!36289) b!67136))

(assert (= (and d!13951 c!9320) b!67122))

(assert (= (and d!13951 (not c!9320)) b!67120))

(assert (= (and d!13951 res!36290) b!67118))

(assert (= (and b!67118 res!36287) b!67131))

(assert (= (and b!67118 (not res!36282)) b!67132))

(assert (= (and b!67132 res!36285) b!67127))

(assert (= (and b!67118 res!36284) b!67121))

(assert (= (and b!67121 c!9317) b!67134))

(assert (= (and b!67121 (not c!9317)) b!67123))

(assert (= (and b!67134 res!36286) b!67125))

(assert (= (or b!67134 b!67123) bm!5625))

(assert (= (and b!67121 res!36288) b!67126))

(assert (= (and b!67126 c!9315) b!67133))

(assert (= (and b!67126 (not c!9315)) b!67116))

(assert (= (and b!67133 res!36283) b!67130))

(assert (= (or b!67133 b!67116) bm!5631))

(declare-fun b_lambda!2997 () Bool)

(assert (=> (not b_lambda!2997) (not b!67127)))

(assert (=> b!67127 t!4952))

(declare-fun b_and!4137 () Bool)

(assert (= b_and!4133 (and (=> t!4952 result!2587) b_and!4137)))

(assert (=> b!67127 t!4954))

(declare-fun b_and!4139 () Bool)

(assert (= b_and!4135 (and (=> t!4954 result!2589) b_and!4139)))

(declare-fun m!61907 () Bool)

(assert (=> b!67128 m!61907))

(assert (=> d!13951 m!60845))

(declare-fun m!61909 () Bool)

(assert (=> bm!5628 m!61909))

(declare-fun m!61911 () Bool)

(assert (=> b!67130 m!61911))

(assert (=> b!67131 m!61793))

(assert (=> b!67131 m!61793))

(assert (=> b!67131 m!61795))

(declare-fun m!61913 () Bool)

(assert (=> b!67122 m!61913))

(declare-fun m!61915 () Bool)

(assert (=> b!67122 m!61915))

(declare-fun m!61917 () Bool)

(assert (=> b!67122 m!61917))

(declare-fun m!61919 () Bool)

(assert (=> b!67122 m!61919))

(assert (=> b!67122 m!61913))

(declare-fun m!61921 () Bool)

(assert (=> b!67122 m!61921))

(declare-fun m!61923 () Bool)

(assert (=> b!67122 m!61923))

(assert (=> b!67122 m!61917))

(declare-fun m!61925 () Bool)

(assert (=> b!67122 m!61925))

(declare-fun m!61927 () Bool)

(assert (=> b!67122 m!61927))

(declare-fun m!61929 () Bool)

(assert (=> b!67122 m!61929))

(declare-fun m!61931 () Bool)

(assert (=> b!67122 m!61931))

(declare-fun m!61933 () Bool)

(assert (=> b!67122 m!61933))

(assert (=> b!67122 m!61909))

(declare-fun m!61935 () Bool)

(assert (=> b!67122 m!61935))

(assert (=> b!67122 m!61931))

(declare-fun m!61937 () Bool)

(assert (=> b!67122 m!61937))

(assert (=> b!67122 m!61793))

(declare-fun m!61939 () Bool)

(assert (=> b!67122 m!61939))

(assert (=> b!67122 m!61921))

(declare-fun m!61941 () Bool)

(assert (=> b!67122 m!61941))

(declare-fun m!61943 () Bool)

(assert (=> bm!5630 m!61943))

(declare-fun m!61945 () Bool)

(assert (=> bm!5631 m!61945))

(assert (=> b!67127 m!60885))

(assert (=> b!67127 m!61793))

(assert (=> b!67127 m!61793))

(declare-fun m!61947 () Bool)

(assert (=> b!67127 m!61947))

(declare-fun m!61949 () Bool)

(assert (=> b!67127 m!61949))

(assert (=> b!67127 m!60885))

(declare-fun m!61951 () Bool)

(assert (=> b!67127 m!61951))

(assert (=> b!67127 m!61949))

(declare-fun m!61953 () Bool)

(assert (=> bm!5625 m!61953))

(assert (=> b!67132 m!61793))

(assert (=> b!67132 m!61793))

(declare-fun m!61955 () Bool)

(assert (=> b!67132 m!61955))

(declare-fun m!61957 () Bool)

(assert (=> b!67125 m!61957))

(assert (=> b!67136 m!61793))

(assert (=> b!67136 m!61793))

(assert (=> b!67136 m!61795))

(assert (=> d!13715 d!13951))

(declare-fun d!13953 () Bool)

(declare-fun e!44013 () Bool)

(assert (=> d!13953 e!44013))

(declare-fun res!36293 () Bool)

(assert (=> d!13953 (=> (not res!36293) (not e!44013))))

(assert (=> d!13953 (= res!36293 (and (bvsge (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000000) (bvslt (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (size!2058 (_keys!3785 newMap!16)))))))

(declare-fun lt!29172 () Unit!1818)

(declare-fun choose!102 ((_ BitVec 64) array!3817 (_ BitVec 32) (_ BitVec 32)) Unit!1818)

(assert (=> d!13953 (= lt!29172 (choose!102 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (mask!6080 newMap!16)))))

(assert (=> d!13953 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13953 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (mask!6080 newMap!16)) lt!29172)))

(declare-fun b!67139 () Bool)

(assert (=> b!67139 (= e!44013 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (mask!6080 newMap!16)))))

(assert (= (and d!13953 res!36293) b!67139))

(assert (=> d!13953 m!60449))

(declare-fun m!61959 () Bool)

(assert (=> d!13953 m!61959))

(assert (=> d!13953 m!60845))

(assert (=> b!67139 m!61073))

(assert (=> b!67139 m!61079))

(assert (=> d!13715 d!13953))

(declare-fun b!67140 () Bool)

(declare-fun e!44015 () Bool)

(declare-fun e!44017 () Bool)

(assert (=> b!67140 (= e!44015 e!44017)))

(declare-fun c!9321 () Bool)

(assert (=> b!67140 (= c!9321 (validKeyInArray!0 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) lt!28848)))))

(declare-fun b!67141 () Bool)

(declare-fun call!5635 () Bool)

(assert (=> b!67141 (= e!44017 call!5635)))

(declare-fun e!44014 () Bool)

(declare-fun b!67142 () Bool)

(assert (=> b!67142 (= e!44014 (contains!708 lt!28847 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) lt!28848)))))

(declare-fun bm!5632 () Bool)

(assert (=> bm!5632 (= call!5635 (arrayNoDuplicates!0 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) (bvadd lt!28848 #b00000000000000000000000000000001) (ite c!9321 (Cons!1463 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) lt!28848) lt!28847) lt!28847)))))

(declare-fun b!67143 () Bool)

(declare-fun e!44016 () Bool)

(assert (=> b!67143 (= e!44016 e!44015)))

(declare-fun res!36294 () Bool)

(assert (=> b!67143 (=> (not res!36294) (not e!44015))))

(assert (=> b!67143 (= res!36294 (not e!44014))))

(declare-fun res!36295 () Bool)

(assert (=> b!67143 (=> (not res!36295) (not e!44014))))

(assert (=> b!67143 (= res!36295 (validKeyInArray!0 (select (arr!1822 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16)))) lt!28848)))))

(declare-fun d!13955 () Bool)

(declare-fun res!36296 () Bool)

(assert (=> d!13955 (=> res!36296 e!44016)))

(assert (=> d!13955 (= res!36296 (bvsge lt!28848 (size!2058 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))))))))

(assert (=> d!13955 (= (arrayNoDuplicates!0 (array!3818 (store (arr!1822 (_keys!3785 newMap!16)) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (size!2058 (_keys!3785 newMap!16))) lt!28848 lt!28847) e!44016)))

(declare-fun b!67144 () Bool)

(assert (=> b!67144 (= e!44017 call!5635)))

(assert (= (and d!13955 (not res!36296)) b!67143))

(assert (= (and b!67143 res!36295) b!67142))

(assert (= (and b!67143 res!36294) b!67140))

(assert (= (and b!67140 c!9321) b!67144))

(assert (= (and b!67140 (not c!9321)) b!67141))

(assert (= (or b!67144 b!67141) bm!5632))

(declare-fun m!61961 () Bool)

(assert (=> b!67140 m!61961))

(assert (=> b!67140 m!61961))

(declare-fun m!61963 () Bool)

(assert (=> b!67140 m!61963))

(assert (=> b!67142 m!61961))

(assert (=> b!67142 m!61961))

(declare-fun m!61965 () Bool)

(assert (=> b!67142 m!61965))

(assert (=> bm!5632 m!61961))

(declare-fun m!61967 () Bool)

(assert (=> bm!5632 m!61967))

(assert (=> b!67143 m!61961))

(assert (=> b!67143 m!61961))

(assert (=> b!67143 m!61963))

(assert (=> d!13715 d!13955))

(declare-fun d!13957 () Bool)

(declare-fun e!44018 () Bool)

(assert (=> d!13957 e!44018))

(declare-fun res!36297 () Bool)

(assert (=> d!13957 (=> (not res!36297) (not e!44018))))

(assert (=> d!13957 (= res!36297 (and (bvsge (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) #b00000000000000000000000000000000) (bvslt (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (size!2058 lt!28852))))))

(declare-fun lt!29173 () Unit!1818)

(assert (=> d!13957 (= lt!29173 (choose!379 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (defaultEntry!2146 newMap!16)))))

(assert (=> d!13957 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!13957 (= (lemmaValidKeyInArrayIsInListMap!80 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)) (defaultEntry!2146 newMap!16)) lt!29173)))

(declare-fun b!67145 () Bool)

(assert (=> b!67145 (= e!44018 (contains!705 (getCurrentListMap!401 lt!28852 lt!28845 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1822 lt!28852) (ite c!9140 (index!3075 lt!28615) (index!3072 lt!28615)))))))

(assert (= (and d!13957 res!36297) b!67145))

(declare-fun m!61969 () Bool)

(assert (=> d!13957 m!61969))

(assert (=> d!13957 m!60845))

(assert (=> b!67145 m!61057))

(declare-fun m!61971 () Bool)

(assert (=> b!67145 m!61971))

(assert (=> b!67145 m!61057))

(assert (=> b!67145 m!61971))

(declare-fun m!61973 () Bool)

(assert (=> b!67145 m!61973))

(assert (=> d!13715 d!13957))

(declare-fun d!13959 () Bool)

(assert (=> d!13959 (= (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66555 d!13959))

(declare-fun d!13961 () Bool)

(declare-fun res!36298 () Bool)

(declare-fun e!44019 () Bool)

(assert (=> d!13961 (=> res!36298 e!44019)))

(assert (=> d!13961 (= res!36298 (and ((_ is Cons!1462) (toList!705 lt!28492)) (= (_1!1052 (h!2046 (toList!705 lt!28492))) (_1!1052 lt!28408))))))

(assert (=> d!13961 (= (containsKey!132 (toList!705 lt!28492) (_1!1052 lt!28408)) e!44019)))

(declare-fun b!67146 () Bool)

(declare-fun e!44020 () Bool)

(assert (=> b!67146 (= e!44019 e!44020)))

(declare-fun res!36299 () Bool)

(assert (=> b!67146 (=> (not res!36299) (not e!44020))))

(assert (=> b!67146 (= res!36299 (and (or (not ((_ is Cons!1462) (toList!705 lt!28492))) (bvsle (_1!1052 (h!2046 (toList!705 lt!28492))) (_1!1052 lt!28408))) ((_ is Cons!1462) (toList!705 lt!28492)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28492))) (_1!1052 lt!28408))))))

(declare-fun b!67147 () Bool)

(assert (=> b!67147 (= e!44020 (containsKey!132 (t!4939 (toList!705 lt!28492)) (_1!1052 lt!28408)))))

(assert (= (and d!13961 (not res!36298)) b!67146))

(assert (= (and b!67146 res!36299) b!67147))

(declare-fun m!61975 () Bool)

(assert (=> b!67147 m!61975))

(assert (=> d!13827 d!13961))

(declare-fun d!13963 () Bool)

(declare-fun e!44021 () Bool)

(assert (=> d!13963 e!44021))

(declare-fun res!36300 () Bool)

(assert (=> d!13963 (=> (not res!36300) (not e!44021))))

(declare-fun lt!29175 () ListLongMap!1379)

(assert (=> d!13963 (= res!36300 (contains!705 lt!29175 (_1!1052 (ite (or c!9292 c!9291) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(declare-fun lt!29177 () List!1466)

(assert (=> d!13963 (= lt!29175 (ListLongMap!1380 lt!29177))))

(declare-fun lt!29174 () Unit!1818)

(declare-fun lt!29176 () Unit!1818)

(assert (=> d!13963 (= lt!29174 lt!29176)))

(assert (=> d!13963 (= (getValueByKey!128 lt!29177 (_1!1052 (ite (or c!9292 c!9291) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))) (Some!133 (_2!1052 (ite (or c!9292 c!9291) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!13963 (= lt!29176 (lemmaContainsTupThenGetReturnValue!48 lt!29177 (_1!1052 (ite (or c!9292 c!9291) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (_2!1052 (ite (or c!9292 c!9291) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!13963 (= lt!29177 (insertStrictlySorted!51 (toList!705 (ite c!9292 call!5613 (ite c!9291 call!5615 call!5612))) (_1!1052 (ite (or c!9292 c!9291) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (_2!1052 (ite (or c!9292 c!9291) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!13963 (= (+!87 (ite c!9292 call!5613 (ite c!9291 call!5615 call!5612)) (ite (or c!9292 c!9291) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) lt!29175)))

(declare-fun b!67148 () Bool)

(declare-fun res!36301 () Bool)

(assert (=> b!67148 (=> (not res!36301) (not e!44021))))

(assert (=> b!67148 (= res!36301 (= (getValueByKey!128 (toList!705 lt!29175) (_1!1052 (ite (or c!9292 c!9291) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))) (Some!133 (_2!1052 (ite (or c!9292 c!9291) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))))

(declare-fun b!67149 () Bool)

(assert (=> b!67149 (= e!44021 (contains!707 (toList!705 lt!29175) (ite (or c!9292 c!9291) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (= (and d!13963 res!36300) b!67148))

(assert (= (and b!67148 res!36301) b!67149))

(declare-fun m!61977 () Bool)

(assert (=> d!13963 m!61977))

(declare-fun m!61979 () Bool)

(assert (=> d!13963 m!61979))

(declare-fun m!61981 () Bool)

(assert (=> d!13963 m!61981))

(declare-fun m!61983 () Bool)

(assert (=> d!13963 m!61983))

(declare-fun m!61985 () Bool)

(assert (=> b!67148 m!61985))

(declare-fun m!61987 () Bool)

(assert (=> b!67149 m!61987))

(assert (=> bm!5612 d!13963))

(declare-fun d!13965 () Bool)

(declare-fun e!44022 () Bool)

(assert (=> d!13965 e!44022))

(declare-fun res!36302 () Bool)

(assert (=> d!13965 (=> res!36302 e!44022)))

(declare-fun lt!29181 () Bool)

(assert (=> d!13965 (= res!36302 (not lt!29181))))

(declare-fun lt!29180 () Bool)

(assert (=> d!13965 (= lt!29181 lt!29180)))

(declare-fun lt!29178 () Unit!1818)

(declare-fun e!44023 () Unit!1818)

(assert (=> d!13965 (= lt!29178 e!44023)))

(declare-fun c!9322 () Bool)

(assert (=> d!13965 (= c!9322 lt!29180)))

(assert (=> d!13965 (= lt!29180 (containsKey!132 (toList!705 lt!29043) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!13965 (= (contains!705 lt!29043 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) lt!29181)))

(declare-fun b!67150 () Bool)

(declare-fun lt!29179 () Unit!1818)

(assert (=> b!67150 (= e!44023 lt!29179)))

(assert (=> b!67150 (= lt!29179 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!29043) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> b!67150 (isDefined!82 (getValueByKey!128 (toList!705 lt!29043) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67151 () Bool)

(declare-fun Unit!1858 () Unit!1818)

(assert (=> b!67151 (= e!44023 Unit!1858)))

(declare-fun b!67152 () Bool)

(assert (=> b!67152 (= e!44022 (isDefined!82 (getValueByKey!128 (toList!705 lt!29043) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (= (and d!13965 c!9322) b!67150))

(assert (= (and d!13965 (not c!9322)) b!67151))

(assert (= (and d!13965 (not res!36302)) b!67152))

(declare-fun m!61989 () Bool)

(assert (=> d!13965 m!61989))

(declare-fun m!61991 () Bool)

(assert (=> b!67150 m!61991))

(assert (=> b!67150 m!61607))

(assert (=> b!67150 m!61607))

(declare-fun m!61993 () Bool)

(assert (=> b!67150 m!61993))

(assert (=> b!67152 m!61607))

(assert (=> b!67152 m!61607))

(assert (=> b!67152 m!61993))

(assert (=> d!13873 d!13965))

(declare-fun b!67156 () Bool)

(declare-fun e!44025 () Option!134)

(assert (=> b!67156 (= e!44025 None!132)))

(declare-fun b!67155 () Bool)

(assert (=> b!67155 (= e!44025 (getValueByKey!128 (t!4939 lt!29045) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67153 () Bool)

(declare-fun e!44024 () Option!134)

(assert (=> b!67153 (= e!44024 (Some!133 (_2!1052 (h!2046 lt!29045))))))

(declare-fun d!13967 () Bool)

(declare-fun c!9323 () Bool)

(assert (=> d!13967 (= c!9323 (and ((_ is Cons!1462) lt!29045) (= (_1!1052 (h!2046 lt!29045)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!13967 (= (getValueByKey!128 lt!29045 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) e!44024)))

(declare-fun b!67154 () Bool)

(assert (=> b!67154 (= e!44024 e!44025)))

(declare-fun c!9324 () Bool)

(assert (=> b!67154 (= c!9324 (and ((_ is Cons!1462) lt!29045) (not (= (_1!1052 (h!2046 lt!29045)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(assert (= (and d!13967 c!9323) b!67153))

(assert (= (and d!13967 (not c!9323)) b!67154))

(assert (= (and b!67154 c!9324) b!67155))

(assert (= (and b!67154 (not c!9324)) b!67156))

(declare-fun m!61995 () Bool)

(assert (=> b!67155 m!61995))

(assert (=> d!13873 d!13967))

(declare-fun d!13969 () Bool)

(assert (=> d!13969 (= (getValueByKey!128 lt!29045 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun lt!29182 () Unit!1818)

(assert (=> d!13969 (= lt!29182 (choose!375 lt!29045 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun e!44026 () Bool)

(assert (=> d!13969 e!44026))

(declare-fun res!36303 () Bool)

(assert (=> d!13969 (=> (not res!36303) (not e!44026))))

(assert (=> d!13969 (= res!36303 (isStrictlySorted!284 lt!29045))))

(assert (=> d!13969 (= (lemmaContainsTupThenGetReturnValue!48 lt!29045 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) lt!29182)))

(declare-fun b!67157 () Bool)

(declare-fun res!36304 () Bool)

(assert (=> b!67157 (=> (not res!36304) (not e!44026))))

(assert (=> b!67157 (= res!36304 (containsKey!132 lt!29045 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67158 () Bool)

(assert (=> b!67158 (= e!44026 (contains!707 lt!29045 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (= (and d!13969 res!36303) b!67157))

(assert (= (and b!67157 res!36304) b!67158))

(assert (=> d!13969 m!61601))

(declare-fun m!61997 () Bool)

(assert (=> d!13969 m!61997))

(declare-fun m!61999 () Bool)

(assert (=> d!13969 m!61999))

(declare-fun m!62001 () Bool)

(assert (=> b!67157 m!62001))

(declare-fun m!62003 () Bool)

(assert (=> b!67158 m!62003))

(assert (=> d!13873 d!13969))

(declare-fun bm!5633 () Bool)

(declare-fun call!5637 () List!1466)

(declare-fun call!5638 () List!1466)

(assert (=> bm!5633 (= call!5637 call!5638)))

(declare-fun d!13971 () Bool)

(declare-fun e!44028 () Bool)

(assert (=> d!13971 e!44028))

(declare-fun res!36306 () Bool)

(assert (=> d!13971 (=> (not res!36306) (not e!44028))))

(declare-fun lt!29183 () List!1466)

(assert (=> d!13971 (= res!36306 (isStrictlySorted!284 lt!29183))))

(declare-fun e!44029 () List!1466)

(assert (=> d!13971 (= lt!29183 e!44029)))

(declare-fun c!9326 () Bool)

(assert (=> d!13971 (= c!9326 (and ((_ is Cons!1462) (toList!705 lt!28402)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!13971 (isStrictlySorted!284 (toList!705 lt!28402))))

(assert (=> d!13971 (= (insertStrictlySorted!51 (toList!705 lt!28402) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) lt!29183)))

(declare-fun c!9325 () Bool)

(declare-fun b!67159 () Bool)

(assert (=> b!67159 (= c!9325 (and ((_ is Cons!1462) (toList!705 lt!28402)) (bvsgt (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun e!44030 () List!1466)

(declare-fun e!44027 () List!1466)

(assert (=> b!67159 (= e!44030 e!44027)))

(declare-fun e!44031 () List!1466)

(declare-fun b!67160 () Bool)

(declare-fun c!9328 () Bool)

(assert (=> b!67160 (= e!44031 (ite c!9328 (t!4939 (toList!705 lt!28402)) (ite c!9325 (Cons!1462 (h!2046 (toList!705 lt!28402)) (t!4939 (toList!705 lt!28402))) Nil!1463)))))

(declare-fun b!67161 () Bool)

(assert (=> b!67161 (= e!44029 e!44030)))

(assert (=> b!67161 (= c!9328 (and ((_ is Cons!1462) (toList!705 lt!28402)) (= (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun bm!5634 () Bool)

(declare-fun call!5636 () List!1466)

(assert (=> bm!5634 (= call!5638 call!5636)))

(declare-fun b!67162 () Bool)

(assert (=> b!67162 (= e!44031 (insertStrictlySorted!51 (t!4939 (toList!705 lt!28402)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67163 () Bool)

(assert (=> b!67163 (= e!44028 (contains!707 lt!29183 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!67164 () Bool)

(assert (=> b!67164 (= e!44030 call!5638)))

(declare-fun b!67165 () Bool)

(assert (=> b!67165 (= e!44029 call!5636)))

(declare-fun b!67166 () Bool)

(declare-fun res!36305 () Bool)

(assert (=> b!67166 (=> (not res!36305) (not e!44028))))

(assert (=> b!67166 (= res!36305 (containsKey!132 lt!29183 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67167 () Bool)

(assert (=> b!67167 (= e!44027 call!5637)))

(declare-fun b!67168 () Bool)

(assert (=> b!67168 (= e!44027 call!5637)))

(declare-fun bm!5635 () Bool)

(assert (=> bm!5635 (= call!5636 ($colon$colon!62 e!44031 (ite c!9326 (h!2046 (toList!705 lt!28402)) (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(declare-fun c!9327 () Bool)

(assert (=> bm!5635 (= c!9327 c!9326)))

(assert (= (and d!13971 c!9326) b!67165))

(assert (= (and d!13971 (not c!9326)) b!67161))

(assert (= (and b!67161 c!9328) b!67164))

(assert (= (and b!67161 (not c!9328)) b!67159))

(assert (= (and b!67159 c!9325) b!67168))

(assert (= (and b!67159 (not c!9325)) b!67167))

(assert (= (or b!67168 b!67167) bm!5633))

(assert (= (or b!67164 bm!5633) bm!5634))

(assert (= (or b!67165 bm!5634) bm!5635))

(assert (= (and bm!5635 c!9327) b!67162))

(assert (= (and bm!5635 (not c!9327)) b!67160))

(assert (= (and d!13971 res!36306) b!67166))

(assert (= (and b!67166 res!36305) b!67163))

(declare-fun m!62005 () Bool)

(assert (=> d!13971 m!62005))

(assert (=> d!13971 m!61439))

(declare-fun m!62007 () Bool)

(assert (=> b!67166 m!62007))

(declare-fun m!62009 () Bool)

(assert (=> b!67163 m!62009))

(declare-fun m!62011 () Bool)

(assert (=> bm!5635 m!62011))

(declare-fun m!62013 () Bool)

(assert (=> b!67162 m!62013))

(assert (=> d!13873 d!13971))

(declare-fun d!13973 () Bool)

(assert (=> d!13973 (= (isDefined!82 (getValueByKey!128 (toList!705 call!5518) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615)))) (not (isEmpty!313 (getValueByKey!128 (toList!705 call!5518) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))))

(declare-fun bs!2873 () Bool)

(assert (= bs!2873 d!13973))

(assert (=> bs!2873 m!61299))

(declare-fun m!62015 () Bool)

(assert (=> bs!2873 m!62015))

(assert (=> b!66846 d!13973))

(declare-fun b!67172 () Bool)

(declare-fun e!44033 () Option!134)

(assert (=> b!67172 (= e!44033 None!132)))

(declare-fun b!67171 () Bool)

(assert (=> b!67171 (= e!44033 (getValueByKey!128 (t!4939 (toList!705 call!5518)) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))

(declare-fun b!67169 () Bool)

(declare-fun e!44032 () Option!134)

(assert (=> b!67169 (= e!44032 (Some!133 (_2!1052 (h!2046 (toList!705 call!5518)))))))

(declare-fun d!13975 () Bool)

(declare-fun c!9329 () Bool)

(assert (=> d!13975 (= c!9329 (and ((_ is Cons!1462) (toList!705 call!5518)) (= (_1!1052 (h!2046 (toList!705 call!5518))) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615)))))))

(assert (=> d!13975 (= (getValueByKey!128 (toList!705 call!5518) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))) e!44032)))

(declare-fun b!67170 () Bool)

(assert (=> b!67170 (= e!44032 e!44033)))

(declare-fun c!9330 () Bool)

(assert (=> b!67170 (= c!9330 (and ((_ is Cons!1462) (toList!705 call!5518)) (not (= (_1!1052 (h!2046 (toList!705 call!5518))) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))))

(assert (= (and d!13975 c!9329) b!67169))

(assert (= (and d!13975 (not c!9329)) b!67170))

(assert (= (and b!67170 c!9330) b!67171))

(assert (= (and b!67170 (not c!9330)) b!67172))

(assert (=> b!67171 m!60741))

(declare-fun m!62017 () Bool)

(assert (=> b!67171 m!62017))

(assert (=> b!66846 d!13975))

(declare-fun d!13977 () Bool)

(declare-fun lt!29184 () Bool)

(assert (=> d!13977 (= lt!29184 (select (content!71 (t!4939 (toList!705 lt!28521))) lt!28403))))

(declare-fun e!44034 () Bool)

(assert (=> d!13977 (= lt!29184 e!44034)))

(declare-fun res!36308 () Bool)

(assert (=> d!13977 (=> (not res!36308) (not e!44034))))

(assert (=> d!13977 (= res!36308 ((_ is Cons!1462) (t!4939 (toList!705 lt!28521))))))

(assert (=> d!13977 (= (contains!707 (t!4939 (toList!705 lt!28521)) lt!28403) lt!29184)))

(declare-fun b!67173 () Bool)

(declare-fun e!44035 () Bool)

(assert (=> b!67173 (= e!44034 e!44035)))

(declare-fun res!36307 () Bool)

(assert (=> b!67173 (=> res!36307 e!44035)))

(assert (=> b!67173 (= res!36307 (= (h!2046 (t!4939 (toList!705 lt!28521))) lt!28403))))

(declare-fun b!67174 () Bool)

(assert (=> b!67174 (= e!44035 (contains!707 (t!4939 (t!4939 (toList!705 lt!28521))) lt!28403))))

(assert (= (and d!13977 res!36308) b!67173))

(assert (= (and b!67173 (not res!36307)) b!67174))

(declare-fun m!62019 () Bool)

(assert (=> d!13977 m!62019))

(declare-fun m!62021 () Bool)

(assert (=> d!13977 m!62021))

(declare-fun m!62023 () Bool)

(assert (=> b!67174 m!62023))

(assert (=> b!66684 d!13977))

(assert (=> d!13751 d!13741))

(assert (=> d!13751 d!13745))

(declare-fun d!13979 () Bool)

(declare-fun e!44036 () Bool)

(assert (=> d!13979 e!44036))

(declare-fun res!36309 () Bool)

(assert (=> d!13979 (=> res!36309 e!44036)))

(declare-fun lt!29188 () Bool)

(assert (=> d!13979 (= res!36309 (not lt!29188))))

(declare-fun lt!29187 () Bool)

(assert (=> d!13979 (= lt!29188 lt!29187)))

(declare-fun lt!29185 () Unit!1818)

(declare-fun e!44037 () Unit!1818)

(assert (=> d!13979 (= lt!29185 e!44037)))

(declare-fun c!9331 () Bool)

(assert (=> d!13979 (= c!9331 lt!29187)))

(assert (=> d!13979 (= lt!29187 (containsKey!132 (toList!705 lt!28670) lt!28668))))

(assert (=> d!13979 (= (contains!705 lt!28670 lt!28668) lt!29188)))

(declare-fun b!67175 () Bool)

(declare-fun lt!29186 () Unit!1818)

(assert (=> b!67175 (= e!44037 lt!29186)))

(assert (=> b!67175 (= lt!29186 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28670) lt!28668))))

(assert (=> b!67175 (isDefined!82 (getValueByKey!128 (toList!705 lt!28670) lt!28668))))

(declare-fun b!67176 () Bool)

(declare-fun Unit!1859 () Unit!1818)

(assert (=> b!67176 (= e!44037 Unit!1859)))

(declare-fun b!67177 () Bool)

(assert (=> b!67177 (= e!44036 (isDefined!82 (getValueByKey!128 (toList!705 lt!28670) lt!28668)))))

(assert (= (and d!13979 c!9331) b!67175))

(assert (= (and d!13979 (not c!9331)) b!67176))

(assert (= (and d!13979 (not res!36309)) b!67177))

(declare-fun m!62025 () Bool)

(assert (=> d!13979 m!62025))

(declare-fun m!62027 () Bool)

(assert (=> b!67175 m!62027))

(assert (=> b!67175 m!61167))

(assert (=> b!67175 m!61167))

(declare-fun m!62029 () Bool)

(assert (=> b!67175 m!62029))

(assert (=> b!67177 m!61167))

(assert (=> b!67177 m!61167))

(assert (=> b!67177 m!62029))

(assert (=> d!13751 d!13979))

(assert (=> d!13751 d!13759))

(declare-fun d!13981 () Bool)

(assert (=> d!13981 (= (apply!72 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28668) (apply!72 lt!28670 lt!28668))))

(assert (=> d!13981 true))

(declare-fun _$34!783 () Unit!1818)

(assert (=> d!13981 (= (choose!377 lt!28670 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28668) _$34!783)))

(declare-fun bs!2874 () Bool)

(assert (= bs!2874 d!13981))

(assert (=> bs!2874 m!60777))

(assert (=> bs!2874 m!60777))

(assert (=> bs!2874 m!60783))

(assert (=> bs!2874 m!60779))

(assert (=> d!13751 d!13981))

(assert (=> d!13845 d!13843))

(declare-fun d!13983 () Bool)

(assert (=> d!13983 (= (getValueByKey!128 lt!28527 (_1!1052 lt!28403)) (Some!133 (_2!1052 lt!28403)))))

(assert (=> d!13983 true))

(declare-fun _$22!367 () Unit!1818)

(assert (=> d!13983 (= (choose!375 lt!28527 (_1!1052 lt!28403) (_2!1052 lt!28403)) _$22!367)))

(declare-fun bs!2875 () Bool)

(assert (= bs!2875 d!13983))

(assert (=> bs!2875 m!60667))

(assert (=> d!13845 d!13983))

(declare-fun d!13985 () Bool)

(declare-fun res!36314 () Bool)

(declare-fun e!44042 () Bool)

(assert (=> d!13985 (=> res!36314 e!44042)))

(assert (=> d!13985 (= res!36314 (or ((_ is Nil!1463) lt!28527) ((_ is Nil!1463) (t!4939 lt!28527))))))

(assert (=> d!13985 (= (isStrictlySorted!284 lt!28527) e!44042)))

(declare-fun b!67183 () Bool)

(declare-fun e!44043 () Bool)

(assert (=> b!67183 (= e!44042 e!44043)))

(declare-fun res!36315 () Bool)

(assert (=> b!67183 (=> (not res!36315) (not e!44043))))

(assert (=> b!67183 (= res!36315 (bvslt (_1!1052 (h!2046 lt!28527)) (_1!1052 (h!2046 (t!4939 lt!28527)))))))

(declare-fun b!67184 () Bool)

(assert (=> b!67184 (= e!44043 (isStrictlySorted!284 (t!4939 lt!28527)))))

(assert (= (and d!13985 (not res!36314)) b!67183))

(assert (= (and b!67183 res!36315) b!67184))

(declare-fun m!62031 () Bool)

(assert (=> b!67184 m!62031))

(assert (=> d!13845 d!13985))

(declare-fun lt!29189 () Bool)

(declare-fun d!13987 () Bool)

(assert (=> d!13987 (= lt!29189 (select (content!71 (toList!705 lt!28881)) (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun e!44044 () Bool)

(assert (=> d!13987 (= lt!29189 e!44044)))

(declare-fun res!36317 () Bool)

(assert (=> d!13987 (=> (not res!36317) (not e!44044))))

(assert (=> d!13987 (= res!36317 ((_ is Cons!1462) (toList!705 lt!28881)))))

(assert (=> d!13987 (= (contains!707 (toList!705 lt!28881) (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!29189)))

(declare-fun b!67185 () Bool)

(declare-fun e!44045 () Bool)

(assert (=> b!67185 (= e!44044 e!44045)))

(declare-fun res!36316 () Bool)

(assert (=> b!67185 (=> res!36316 e!44045)))

(assert (=> b!67185 (= res!36316 (= (h!2046 (toList!705 lt!28881)) (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!67186 () Bool)

(assert (=> b!67186 (= e!44045 (contains!707 (t!4939 (toList!705 lt!28881)) (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!13987 res!36317) b!67185))

(assert (= (and b!67185 (not res!36316)) b!67186))

(declare-fun m!62033 () Bool)

(assert (=> d!13987 m!62033))

(declare-fun m!62035 () Bool)

(assert (=> d!13987 m!62035))

(declare-fun m!62037 () Bool)

(assert (=> b!67186 m!62037))

(assert (=> b!66754 d!13987))

(assert (=> d!13775 d!13693))

(declare-fun b!67203 () Bool)

(declare-fun res!36327 () Bool)

(declare-fun e!44056 () Bool)

(assert (=> b!67203 (=> (not res!36327) (not e!44056))))

(declare-fun lt!29192 () SeekEntryResult!236)

(assert (=> b!67203 (= res!36327 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3075 lt!29192)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67204 () Bool)

(declare-fun res!36328 () Bool)

(assert (=> b!67204 (=> (not res!36328) (not e!44056))))

(declare-fun call!5644 () Bool)

(assert (=> b!67204 (= res!36328 call!5644)))

(declare-fun e!44057 () Bool)

(assert (=> b!67204 (= e!44057 e!44056)))

(declare-fun b!67205 () Bool)

(assert (=> b!67205 (= e!44057 ((_ is Undefined!236) lt!29192))))

(declare-fun b!67206 () Bool)

(declare-fun call!5643 () Bool)

(assert (=> b!67206 (= e!44056 (not call!5643))))

(declare-fun b!67207 () Bool)

(declare-fun res!36326 () Bool)

(assert (=> b!67207 (= res!36326 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3072 lt!29192)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44055 () Bool)

(assert (=> b!67207 (=> (not res!36326) (not e!44055))))

(declare-fun d!13989 () Bool)

(declare-fun e!44054 () Bool)

(assert (=> d!13989 e!44054))

(declare-fun c!9337 () Bool)

(assert (=> d!13989 (= c!9337 ((_ is MissingZero!236) lt!29192))))

(assert (=> d!13989 (= lt!29192 (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(assert (=> d!13989 true))

(declare-fun _$34!786 () Unit!1818)

(assert (=> d!13989 (= (choose!378 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)) _$34!786)))

(declare-fun b!67208 () Bool)

(assert (=> b!67208 (= e!44055 (not call!5643))))

(declare-fun b!67209 () Bool)

(assert (=> b!67209 (= e!44054 e!44055)))

(declare-fun res!36329 () Bool)

(assert (=> b!67209 (= res!36329 call!5644)))

(assert (=> b!67209 (=> (not res!36329) (not e!44055))))

(declare-fun bm!5640 () Bool)

(assert (=> bm!5640 (= call!5643 (arrayContainsKey!0 (_keys!3785 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!5641 () Bool)

(assert (=> bm!5641 (= call!5644 (inRange!0 (ite c!9337 (index!3072 lt!29192) (index!3075 lt!29192)) (mask!6080 newMap!16)))))

(declare-fun b!67210 () Bool)

(assert (=> b!67210 (= e!44054 e!44057)))

(declare-fun c!9336 () Bool)

(assert (=> b!67210 (= c!9336 ((_ is MissingVacant!236) lt!29192))))

(assert (= (and d!13989 c!9337) b!67209))

(assert (= (and d!13989 (not c!9337)) b!67210))

(assert (= (and b!67209 res!36329) b!67207))

(assert (= (and b!67207 res!36326) b!67208))

(assert (= (and b!67210 c!9336) b!67204))

(assert (= (and b!67210 (not c!9336)) b!67205))

(assert (= (and b!67204 res!36328) b!67203))

(assert (= (and b!67203 res!36327) b!67206))

(assert (= (or b!67209 b!67204) bm!5641))

(assert (= (or b!67208 b!67206) bm!5640))

(declare-fun m!62039 () Bool)

(assert (=> b!67203 m!62039))

(assert (=> d!13989 m!60449))

(assert (=> d!13989 m!60701))

(declare-fun m!62041 () Bool)

(assert (=> bm!5641 m!62041))

(declare-fun m!62043 () Bool)

(assert (=> b!67207 m!62043))

(assert (=> bm!5640 m!60449))

(assert (=> bm!5640 m!60729))

(assert (=> d!13775 d!13989))

(declare-fun d!13991 () Bool)

(assert (=> d!13991 (= (validMask!0 (mask!6080 newMap!16)) (and (or (= (mask!6080 newMap!16) #b00000000000000000000000000000111) (= (mask!6080 newMap!16) #b00000000000000000000000000001111) (= (mask!6080 newMap!16) #b00000000000000000000000000011111) (= (mask!6080 newMap!16) #b00000000000000000000000000111111) (= (mask!6080 newMap!16) #b00000000000000000000000001111111) (= (mask!6080 newMap!16) #b00000000000000000000000011111111) (= (mask!6080 newMap!16) #b00000000000000000000000111111111) (= (mask!6080 newMap!16) #b00000000000000000000001111111111) (= (mask!6080 newMap!16) #b00000000000000000000011111111111) (= (mask!6080 newMap!16) #b00000000000000000000111111111111) (= (mask!6080 newMap!16) #b00000000000000000001111111111111) (= (mask!6080 newMap!16) #b00000000000000000011111111111111) (= (mask!6080 newMap!16) #b00000000000000000111111111111111) (= (mask!6080 newMap!16) #b00000000000000001111111111111111) (= (mask!6080 newMap!16) #b00000000000000011111111111111111) (= (mask!6080 newMap!16) #b00000000000000111111111111111111) (= (mask!6080 newMap!16) #b00000000000001111111111111111111) (= (mask!6080 newMap!16) #b00000000000011111111111111111111) (= (mask!6080 newMap!16) #b00000000000111111111111111111111) (= (mask!6080 newMap!16) #b00000000001111111111111111111111) (= (mask!6080 newMap!16) #b00000000011111111111111111111111) (= (mask!6080 newMap!16) #b00000000111111111111111111111111) (= (mask!6080 newMap!16) #b00000001111111111111111111111111) (= (mask!6080 newMap!16) #b00000011111111111111111111111111) (= (mask!6080 newMap!16) #b00000111111111111111111111111111) (= (mask!6080 newMap!16) #b00001111111111111111111111111111) (= (mask!6080 newMap!16) #b00011111111111111111111111111111) (= (mask!6080 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6080 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!13775 d!13991))

(declare-fun b!67211 () Bool)

(declare-fun e!44059 () Bool)

(declare-fun e!44061 () Bool)

(assert (=> b!67211 (= e!44059 e!44061)))

(declare-fun c!9338 () Bool)

(assert (=> b!67211 (= c!9338 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!67212 () Bool)

(declare-fun call!5645 () Bool)

(assert (=> b!67212 (= e!44061 call!5645)))

(declare-fun b!67213 () Bool)

(declare-fun e!44058 () Bool)

(assert (=> b!67213 (= e!44058 (contains!708 (ite c!9233 (Cons!1463 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) Nil!1464) Nil!1464) (select (arr!1822 (_keys!3785 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!5642 () Bool)

(assert (=> bm!5642 (= call!5645 (arrayNoDuplicates!0 (_keys!3785 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9338 (Cons!1463 (select (arr!1822 (_keys!3785 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!9233 (Cons!1463 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) Nil!1464) Nil!1464)) (ite c!9233 (Cons!1463 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) Nil!1464) Nil!1464))))))

(declare-fun b!67214 () Bool)

(declare-fun e!44060 () Bool)

(assert (=> b!67214 (= e!44060 e!44059)))

(declare-fun res!36330 () Bool)

(assert (=> b!67214 (=> (not res!36330) (not e!44059))))

(assert (=> b!67214 (= res!36330 (not e!44058))))

(declare-fun res!36331 () Bool)

(assert (=> b!67214 (=> (not res!36331) (not e!44058))))

(assert (=> b!67214 (= res!36331 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!13993 () Bool)

(declare-fun res!36332 () Bool)

(assert (=> d!13993 (=> res!36332 e!44060)))

(assert (=> d!13993 (= res!36332 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!13993 (= (arrayNoDuplicates!0 (_keys!3785 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9233 (Cons!1463 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) Nil!1464) Nil!1464)) e!44060)))

(declare-fun b!67215 () Bool)

(assert (=> b!67215 (= e!44061 call!5645)))

(assert (= (and d!13993 (not res!36332)) b!67214))

(assert (= (and b!67214 res!36331) b!67213))

(assert (= (and b!67214 res!36330) b!67211))

(assert (= (and b!67211 c!9338) b!67215))

(assert (= (and b!67211 (not c!9338)) b!67212))

(assert (= (or b!67215 b!67212) bm!5642))

(declare-fun m!62045 () Bool)

(assert (=> b!67211 m!62045))

(assert (=> b!67211 m!62045))

(declare-fun m!62047 () Bool)

(assert (=> b!67211 m!62047))

(assert (=> b!67213 m!62045))

(assert (=> b!67213 m!62045))

(declare-fun m!62049 () Bool)

(assert (=> b!67213 m!62049))

(assert (=> bm!5642 m!62045))

(declare-fun m!62051 () Bool)

(assert (=> bm!5642 m!62051))

(assert (=> b!67214 m!62045))

(assert (=> b!67214 m!62045))

(assert (=> b!67214 m!62047))

(assert (=> bm!5581 d!13993))

(declare-fun b!67219 () Bool)

(declare-fun e!44063 () Option!134)

(assert (=> b!67219 (= e!44063 None!132)))

(declare-fun b!67218 () Bool)

(assert (=> b!67218 (= e!44063 (getValueByKey!128 (t!4939 (toList!705 lt!29043)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67216 () Bool)

(declare-fun e!44062 () Option!134)

(assert (=> b!67216 (= e!44062 (Some!133 (_2!1052 (h!2046 (toList!705 lt!29043)))))))

(declare-fun c!9339 () Bool)

(declare-fun d!13995 () Bool)

(assert (=> d!13995 (= c!9339 (and ((_ is Cons!1462) (toList!705 lt!29043)) (= (_1!1052 (h!2046 (toList!705 lt!29043))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!13995 (= (getValueByKey!128 (toList!705 lt!29043) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) e!44062)))

(declare-fun b!67217 () Bool)

(assert (=> b!67217 (= e!44062 e!44063)))

(declare-fun c!9340 () Bool)

(assert (=> b!67217 (= c!9340 (and ((_ is Cons!1462) (toList!705 lt!29043)) (not (= (_1!1052 (h!2046 (toList!705 lt!29043))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(assert (= (and d!13995 c!9339) b!67216))

(assert (= (and d!13995 (not c!9339)) b!67217))

(assert (= (and b!67217 c!9340) b!67218))

(assert (= (and b!67217 (not c!9340)) b!67219))

(declare-fun m!62053 () Bool)

(assert (=> b!67218 m!62053))

(assert (=> b!67002 d!13995))

(declare-fun d!13997 () Bool)

(assert (=> d!13997 (= ($colon$colon!62 e!43874 (ite c!9264 (h!2046 (toList!705 lt!28402)) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408)))) (Cons!1462 (ite c!9264 (h!2046 (toList!705 lt!28402)) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))) e!43874))))

(assert (=> bm!5600 d!13997))

(declare-fun d!13999 () Bool)

(assert (=> d!13999 (isDefined!82 (getValueByKey!128 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!29193 () Unit!1818)

(assert (=> d!13999 (= lt!29193 (choose!384 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!44064 () Bool)

(assert (=> d!13999 e!44064))

(declare-fun res!36333 () Bool)

(assert (=> d!13999 (=> (not res!36333) (not e!44064))))

(assert (=> d!13999 (= res!36333 (isStrictlySorted!284 (toList!705 lt!28513)))))

(assert (=> d!13999 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29193)))

(declare-fun b!67220 () Bool)

(assert (=> b!67220 (= e!44064 (containsKey!132 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!13999 res!36333) b!67220))

(assert (=> d!13999 m!60627))

(assert (=> d!13999 m!61259))

(assert (=> d!13999 m!61259))

(assert (=> d!13999 m!61261))

(assert (=> d!13999 m!60627))

(declare-fun m!62055 () Bool)

(assert (=> d!13999 m!62055))

(declare-fun m!62057 () Bool)

(assert (=> d!13999 m!62057))

(assert (=> b!67220 m!60627))

(assert (=> b!67220 m!61255))

(assert (=> b!66803 d!13999))

(declare-fun d!14001 () Bool)

(assert (=> d!14001 (= (isDefined!82 (getValueByKey!128 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!313 (getValueByKey!128 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2876 () Bool)

(assert (= bs!2876 d!14001))

(assert (=> bs!2876 m!61259))

(declare-fun m!62059 () Bool)

(assert (=> bs!2876 m!62059))

(assert (=> b!66803 d!14001))

(declare-fun b!67224 () Bool)

(declare-fun e!44066 () Option!134)

(assert (=> b!67224 (= e!44066 None!132)))

(declare-fun b!67223 () Bool)

(assert (=> b!67223 (= e!44066 (getValueByKey!128 (t!4939 (toList!705 lt!28513)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67221 () Bool)

(declare-fun e!44065 () Option!134)

(assert (=> b!67221 (= e!44065 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28513)))))))

(declare-fun d!14003 () Bool)

(declare-fun c!9341 () Bool)

(assert (=> d!14003 (= c!9341 (and ((_ is Cons!1462) (toList!705 lt!28513)) (= (_1!1052 (h!2046 (toList!705 lt!28513))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14003 (= (getValueByKey!128 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44065)))

(declare-fun b!67222 () Bool)

(assert (=> b!67222 (= e!44065 e!44066)))

(declare-fun c!9342 () Bool)

(assert (=> b!67222 (= c!9342 (and ((_ is Cons!1462) (toList!705 lt!28513)) (not (= (_1!1052 (h!2046 (toList!705 lt!28513))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!14003 c!9341) b!67221))

(assert (= (and d!14003 (not c!9341)) b!67222))

(assert (= (and b!67222 c!9342) b!67223))

(assert (= (and b!67222 (not c!9342)) b!67224))

(assert (=> b!67223 m!60627))

(declare-fun m!62061 () Bool)

(assert (=> b!67223 m!62061))

(assert (=> b!66803 d!14003))

(declare-fun d!14005 () Bool)

(declare-fun e!44067 () Bool)

(assert (=> d!14005 e!44067))

(declare-fun res!36334 () Bool)

(assert (=> d!14005 (=> (not res!36334) (not e!44067))))

(declare-fun lt!29195 () ListLongMap!1379)

(assert (=> d!14005 (= res!36334 (contains!705 lt!29195 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun lt!29197 () List!1466)

(assert (=> d!14005 (= lt!29195 (ListLongMap!1380 lt!29197))))

(declare-fun lt!29194 () Unit!1818)

(declare-fun lt!29196 () Unit!1818)

(assert (=> d!14005 (= lt!29194 lt!29196)))

(assert (=> d!14005 (= (getValueByKey!128 lt!29197 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14005 (= lt!29196 (lemmaContainsTupThenGetReturnValue!48 lt!29197 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14005 (= lt!29197 (insertStrictlySorted!51 (toList!705 call!5611) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14005 (= (+!87 call!5611 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) lt!29195)))

(declare-fun b!67225 () Bool)

(declare-fun res!36335 () Bool)

(assert (=> b!67225 (=> (not res!36335) (not e!44067))))

(assert (=> b!67225 (= res!36335 (= (getValueByKey!128 (toList!705 lt!29195) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(declare-fun b!67226 () Bool)

(assert (=> b!67226 (= e!44067 (contains!707 (toList!705 lt!29195) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(assert (= (and d!14005 res!36334) b!67225))

(assert (= (and b!67225 res!36335) b!67226))

(declare-fun m!62063 () Bool)

(assert (=> d!14005 m!62063))

(declare-fun m!62065 () Bool)

(assert (=> d!14005 m!62065))

(declare-fun m!62067 () Bool)

(assert (=> d!14005 m!62067))

(declare-fun m!62069 () Bool)

(assert (=> d!14005 m!62069))

(declare-fun m!62071 () Bool)

(assert (=> b!67225 m!62071))

(declare-fun m!62073 () Bool)

(assert (=> b!67226 m!62073))

(assert (=> b!66988 d!14005))

(declare-fun d!14007 () Bool)

(assert (=> d!14007 (= (get!1123 (getValueByKey!128 (toList!705 lt!28677) lt!28681)) (v!2475 (getValueByKey!128 (toList!705 lt!28677) lt!28681)))))

(assert (=> d!13755 d!14007))

(declare-fun b!67230 () Bool)

(declare-fun e!44069 () Option!134)

(assert (=> b!67230 (= e!44069 None!132)))

(declare-fun b!67229 () Bool)

(assert (=> b!67229 (= e!44069 (getValueByKey!128 (t!4939 (toList!705 lt!28677)) lt!28681))))

(declare-fun b!67227 () Bool)

(declare-fun e!44068 () Option!134)

(assert (=> b!67227 (= e!44068 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28677)))))))

(declare-fun d!14009 () Bool)

(declare-fun c!9343 () Bool)

(assert (=> d!14009 (= c!9343 (and ((_ is Cons!1462) (toList!705 lt!28677)) (= (_1!1052 (h!2046 (toList!705 lt!28677))) lt!28681)))))

(assert (=> d!14009 (= (getValueByKey!128 (toList!705 lt!28677) lt!28681) e!44068)))

(declare-fun b!67228 () Bool)

(assert (=> b!67228 (= e!44068 e!44069)))

(declare-fun c!9344 () Bool)

(assert (=> b!67228 (= c!9344 (and ((_ is Cons!1462) (toList!705 lt!28677)) (not (= (_1!1052 (h!2046 (toList!705 lt!28677))) lt!28681))))))

(assert (= (and d!14009 c!9343) b!67227))

(assert (= (and d!14009 (not c!9343)) b!67228))

(assert (= (and b!67228 c!9344) b!67229))

(assert (= (and b!67228 (not c!9344)) b!67230))

(declare-fun m!62075 () Bool)

(assert (=> b!67229 m!62075))

(assert (=> d!13755 d!14009))

(assert (=> bm!5569 d!13693))

(declare-fun d!14011 () Bool)

(declare-fun res!36336 () Bool)

(declare-fun e!44070 () Bool)

(assert (=> d!14011 (=> res!36336 e!44070)))

(assert (=> d!14011 (= res!36336 (and ((_ is Cons!1462) (toList!705 lt!28513)) (= (_1!1052 (h!2046 (toList!705 lt!28513))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14011 (= (containsKey!132 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44070)))

(declare-fun b!67231 () Bool)

(declare-fun e!44071 () Bool)

(assert (=> b!67231 (= e!44070 e!44071)))

(declare-fun res!36337 () Bool)

(assert (=> b!67231 (=> (not res!36337) (not e!44071))))

(assert (=> b!67231 (= res!36337 (and (or (not ((_ is Cons!1462) (toList!705 lt!28513))) (bvsle (_1!1052 (h!2046 (toList!705 lt!28513))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1462) (toList!705 lt!28513)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28513))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!67232 () Bool)

(assert (=> b!67232 (= e!44071 (containsKey!132 (t!4939 (toList!705 lt!28513)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14011 (not res!36336)) b!67231))

(assert (= (and b!67231 res!36337) b!67232))

(assert (=> b!67232 m!60627))

(declare-fun m!62077 () Bool)

(assert (=> b!67232 m!62077))

(assert (=> d!13777 d!14011))

(declare-fun d!14013 () Bool)

(declare-fun c!9347 () Bool)

(assert (=> d!14013 (= c!9347 ((_ is Nil!1463) (toList!705 lt!28492)))))

(declare-fun e!44074 () (InoxSet tuple2!2082))

(assert (=> d!14013 (= (content!71 (toList!705 lt!28492)) e!44074)))

(declare-fun b!67237 () Bool)

(assert (=> b!67237 (= e!44074 ((as const (Array tuple2!2082 Bool)) false))))

(declare-fun b!67238 () Bool)

(assert (=> b!67238 (= e!44074 ((_ map or) (store ((as const (Array tuple2!2082 Bool)) false) (h!2046 (toList!705 lt!28492)) true) (content!71 (t!4939 (toList!705 lt!28492)))))))

(assert (= (and d!14013 c!9347) b!67237))

(assert (= (and d!14013 (not c!9347)) b!67238))

(declare-fun m!62079 () Bool)

(assert (=> b!67238 m!62079))

(declare-fun m!62081 () Bool)

(assert (=> b!67238 m!62081))

(assert (=> d!13699 d!14013))

(assert (=> b!66689 d!13665))

(declare-fun bm!5643 () Bool)

(declare-fun call!5647 () List!1466)

(declare-fun call!5648 () List!1466)

(assert (=> bm!5643 (= call!5647 call!5648)))

(declare-fun d!14015 () Bool)

(declare-fun e!44076 () Bool)

(assert (=> d!14015 e!44076))

(declare-fun res!36339 () Bool)

(assert (=> d!14015 (=> (not res!36339) (not e!44076))))

(declare-fun lt!29198 () List!1466)

(assert (=> d!14015 (= res!36339 (isStrictlySorted!284 lt!29198))))

(declare-fun e!44077 () List!1466)

(assert (=> d!14015 (= lt!29198 e!44077)))

(declare-fun c!9349 () Bool)

(assert (=> d!14015 (= c!9349 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28402))) (bvslt (_1!1052 (h!2046 (t!4939 (toList!705 lt!28402)))) (_1!1052 lt!28403))))))

(assert (=> d!14015 (isStrictlySorted!284 (t!4939 (toList!705 lt!28402)))))

(assert (=> d!14015 (= (insertStrictlySorted!51 (t!4939 (toList!705 lt!28402)) (_1!1052 lt!28403) (_2!1052 lt!28403)) lt!29198)))

(declare-fun b!67239 () Bool)

(declare-fun c!9348 () Bool)

(assert (=> b!67239 (= c!9348 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28402))) (bvsgt (_1!1052 (h!2046 (t!4939 (toList!705 lt!28402)))) (_1!1052 lt!28403))))))

(declare-fun e!44078 () List!1466)

(declare-fun e!44075 () List!1466)

(assert (=> b!67239 (= e!44078 e!44075)))

(declare-fun e!44079 () List!1466)

(declare-fun b!67240 () Bool)

(declare-fun c!9351 () Bool)

(assert (=> b!67240 (= e!44079 (ite c!9351 (t!4939 (t!4939 (toList!705 lt!28402))) (ite c!9348 (Cons!1462 (h!2046 (t!4939 (toList!705 lt!28402))) (t!4939 (t!4939 (toList!705 lt!28402)))) Nil!1463)))))

(declare-fun b!67241 () Bool)

(assert (=> b!67241 (= e!44077 e!44078)))

(assert (=> b!67241 (= c!9351 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28402))) (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28402)))) (_1!1052 lt!28403))))))

(declare-fun bm!5644 () Bool)

(declare-fun call!5646 () List!1466)

(assert (=> bm!5644 (= call!5648 call!5646)))

(declare-fun b!67242 () Bool)

(assert (=> b!67242 (= e!44079 (insertStrictlySorted!51 (t!4939 (t!4939 (toList!705 lt!28402))) (_1!1052 lt!28403) (_2!1052 lt!28403)))))

(declare-fun b!67243 () Bool)

(assert (=> b!67243 (= e!44076 (contains!707 lt!29198 (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(declare-fun b!67244 () Bool)

(assert (=> b!67244 (= e!44078 call!5648)))

(declare-fun b!67245 () Bool)

(assert (=> b!67245 (= e!44077 call!5646)))

(declare-fun b!67246 () Bool)

(declare-fun res!36338 () Bool)

(assert (=> b!67246 (=> (not res!36338) (not e!44076))))

(assert (=> b!67246 (= res!36338 (containsKey!132 lt!29198 (_1!1052 lt!28403)))))

(declare-fun b!67247 () Bool)

(assert (=> b!67247 (= e!44075 call!5647)))

(declare-fun b!67248 () Bool)

(assert (=> b!67248 (= e!44075 call!5647)))

(declare-fun bm!5645 () Bool)

(assert (=> bm!5645 (= call!5646 ($colon$colon!62 e!44079 (ite c!9349 (h!2046 (t!4939 (toList!705 lt!28402))) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403)))))))

(declare-fun c!9350 () Bool)

(assert (=> bm!5645 (= c!9350 c!9349)))

(assert (= (and d!14015 c!9349) b!67245))

(assert (= (and d!14015 (not c!9349)) b!67241))

(assert (= (and b!67241 c!9351) b!67244))

(assert (= (and b!67241 (not c!9351)) b!67239))

(assert (= (and b!67239 c!9348) b!67248))

(assert (= (and b!67239 (not c!9348)) b!67247))

(assert (= (or b!67248 b!67247) bm!5643))

(assert (= (or b!67244 bm!5643) bm!5644))

(assert (= (or b!67245 bm!5644) bm!5645))

(assert (= (and bm!5645 c!9350) b!67242))

(assert (= (and bm!5645 (not c!9350)) b!67240))

(assert (= (and d!14015 res!36339) b!67246))

(assert (= (and b!67246 res!36338) b!67243))

(declare-fun m!62083 () Bool)

(assert (=> d!14015 m!62083))

(declare-fun m!62085 () Bool)

(assert (=> d!14015 m!62085))

(declare-fun m!62087 () Bool)

(assert (=> b!67246 m!62087))

(declare-fun m!62089 () Bool)

(assert (=> b!67243 m!62089))

(declare-fun m!62091 () Bool)

(assert (=> bm!5645 m!62091))

(declare-fun m!62093 () Bool)

(assert (=> b!67242 m!62093))

(assert (=> b!66962 d!14015))

(declare-fun b!67252 () Bool)

(declare-fun e!44081 () Option!134)

(assert (=> b!67252 (= e!44081 None!132)))

(declare-fun b!67251 () Bool)

(assert (=> b!67251 (= e!44081 (getValueByKey!128 (t!4939 (t!4939 lt!28523)) (_1!1052 lt!28403)))))

(declare-fun b!67249 () Bool)

(declare-fun e!44080 () Option!134)

(assert (=> b!67249 (= e!44080 (Some!133 (_2!1052 (h!2046 (t!4939 lt!28523)))))))

(declare-fun d!14017 () Bool)

(declare-fun c!9352 () Bool)

(assert (=> d!14017 (= c!9352 (and ((_ is Cons!1462) (t!4939 lt!28523)) (= (_1!1052 (h!2046 (t!4939 lt!28523))) (_1!1052 lt!28403))))))

(assert (=> d!14017 (= (getValueByKey!128 (t!4939 lt!28523) (_1!1052 lt!28403)) e!44080)))

(declare-fun b!67250 () Bool)

(assert (=> b!67250 (= e!44080 e!44081)))

(declare-fun c!9353 () Bool)

(assert (=> b!67250 (= c!9353 (and ((_ is Cons!1462) (t!4939 lt!28523)) (not (= (_1!1052 (h!2046 (t!4939 lt!28523))) (_1!1052 lt!28403)))))))

(assert (= (and d!14017 c!9352) b!67249))

(assert (= (and d!14017 (not c!9352)) b!67250))

(assert (= (and b!67250 c!9353) b!67251))

(assert (= (and b!67250 (not c!9353)) b!67252))

(declare-fun m!62095 () Bool)

(assert (=> b!67251 m!62095))

(assert (=> b!66955 d!14017))

(declare-fun d!14019 () Bool)

(assert (=> d!14019 (= (get!1123 (getValueByKey!128 (toList!705 lt!28679) lt!28684)) (v!2475 (getValueByKey!128 (toList!705 lt!28679) lt!28684)))))

(assert (=> d!13763 d!14019))

(declare-fun b!67256 () Bool)

(declare-fun e!44083 () Option!134)

(assert (=> b!67256 (= e!44083 None!132)))

(declare-fun b!67255 () Bool)

(assert (=> b!67255 (= e!44083 (getValueByKey!128 (t!4939 (toList!705 lt!28679)) lt!28684))))

(declare-fun b!67253 () Bool)

(declare-fun e!44082 () Option!134)

(assert (=> b!67253 (= e!44082 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28679)))))))

(declare-fun d!14021 () Bool)

(declare-fun c!9354 () Bool)

(assert (=> d!14021 (= c!9354 (and ((_ is Cons!1462) (toList!705 lt!28679)) (= (_1!1052 (h!2046 (toList!705 lt!28679))) lt!28684)))))

(assert (=> d!14021 (= (getValueByKey!128 (toList!705 lt!28679) lt!28684) e!44082)))

(declare-fun b!67254 () Bool)

(assert (=> b!67254 (= e!44082 e!44083)))

(declare-fun c!9355 () Bool)

(assert (=> b!67254 (= c!9355 (and ((_ is Cons!1462) (toList!705 lt!28679)) (not (= (_1!1052 (h!2046 (toList!705 lt!28679))) lt!28684))))))

(assert (= (and d!14021 c!9354) b!67253))

(assert (= (and d!14021 (not c!9354)) b!67254))

(assert (= (and b!67254 c!9355) b!67255))

(assert (= (and b!67254 (not c!9355)) b!67256))

(declare-fun m!62097 () Bool)

(assert (=> b!67255 m!62097))

(assert (=> d!13763 d!14021))

(declare-fun d!14023 () Bool)

(declare-fun e!44084 () Bool)

(assert (=> d!14023 e!44084))

(declare-fun res!36340 () Bool)

(assert (=> d!14023 (=> res!36340 e!44084)))

(declare-fun lt!29202 () Bool)

(assert (=> d!14023 (= res!36340 (not lt!29202))))

(declare-fun lt!29201 () Bool)

(assert (=> d!14023 (= lt!29202 lt!29201)))

(declare-fun lt!29199 () Unit!1818)

(declare-fun e!44085 () Unit!1818)

(assert (=> d!14023 (= lt!29199 e!44085)))

(declare-fun c!9356 () Bool)

(assert (=> d!14023 (= c!9356 lt!29201)))

(assert (=> d!14023 (= lt!29201 (containsKey!132 (toList!705 lt!28960) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14023 (= (contains!705 lt!28960 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29202)))

(declare-fun b!67257 () Bool)

(declare-fun lt!29200 () Unit!1818)

(assert (=> b!67257 (= e!44085 lt!29200)))

(assert (=> b!67257 (= lt!29200 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28960) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67257 (isDefined!82 (getValueByKey!128 (toList!705 lt!28960) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67258 () Bool)

(declare-fun Unit!1860 () Unit!1818)

(assert (=> b!67258 (= e!44085 Unit!1860)))

(declare-fun b!67259 () Bool)

(assert (=> b!67259 (= e!44084 (isDefined!82 (getValueByKey!128 (toList!705 lt!28960) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14023 c!9356) b!67257))

(assert (= (and d!14023 (not c!9356)) b!67258))

(assert (= (and d!14023 (not res!36340)) b!67259))

(declare-fun m!62099 () Bool)

(assert (=> d!14023 m!62099))

(declare-fun m!62101 () Bool)

(assert (=> b!67257 m!62101))

(declare-fun m!62103 () Bool)

(assert (=> b!67257 m!62103))

(assert (=> b!67257 m!62103))

(declare-fun m!62105 () Bool)

(assert (=> b!67257 m!62105))

(assert (=> b!67259 m!62103))

(assert (=> b!67259 m!62103))

(assert (=> b!67259 m!62105))

(assert (=> bm!5591 d!14023))

(declare-fun d!14025 () Bool)

(assert (=> d!14025 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28685))))

(declare-fun lt!29203 () Unit!1818)

(assert (=> d!14025 (= lt!29203 (choose!384 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28685))))

(declare-fun e!44086 () Bool)

(assert (=> d!14025 e!44086))

(declare-fun res!36341 () Bool)

(assert (=> d!14025 (=> (not res!36341) (not e!44086))))

(assert (=> d!14025 (= res!36341 (isStrictlySorted!284 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14025 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28685) lt!29203)))

(declare-fun b!67260 () Bool)

(assert (=> b!67260 (= e!44086 (containsKey!132 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28685))))

(assert (= (and d!14025 res!36341) b!67260))

(assert (=> d!14025 m!61203))

(assert (=> d!14025 m!61203))

(assert (=> d!14025 m!61205))

(declare-fun m!62107 () Bool)

(assert (=> d!14025 m!62107))

(declare-fun m!62109 () Bool)

(assert (=> d!14025 m!62109))

(assert (=> b!67260 m!61199))

(assert (=> b!66763 d!14025))

(declare-fun d!14027 () Bool)

(assert (=> d!14027 (= (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28685)) (not (isEmpty!313 (getValueByKey!128 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28685))))))

(declare-fun bs!2877 () Bool)

(assert (= bs!2877 d!14027))

(assert (=> bs!2877 m!61203))

(declare-fun m!62111 () Bool)

(assert (=> bs!2877 m!62111))

(assert (=> b!66763 d!14027))

(declare-fun b!67264 () Bool)

(declare-fun e!44088 () Option!134)

(assert (=> b!67264 (= e!44088 None!132)))

(declare-fun b!67263 () Bool)

(assert (=> b!67263 (= e!44088 (getValueByKey!128 (t!4939 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) lt!28685))))

(declare-fun b!67261 () Bool)

(declare-fun e!44087 () Option!134)

(assert (=> b!67261 (= e!44087 (Some!133 (_2!1052 (h!2046 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))))

(declare-fun c!9357 () Bool)

(declare-fun d!14029 () Bool)

(assert (=> d!14029 (= c!9357 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))) lt!28685)))))

(assert (=> d!14029 (= (getValueByKey!128 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28685) e!44087)))

(declare-fun b!67262 () Bool)

(assert (=> b!67262 (= e!44087 e!44088)))

(declare-fun c!9358 () Bool)

(assert (=> b!67262 (= c!9358 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (not (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))) lt!28685))))))

(assert (= (and d!14029 c!9357) b!67261))

(assert (= (and d!14029 (not c!9357)) b!67262))

(assert (= (and b!67262 c!9358) b!67263))

(assert (= (and b!67262 (not c!9358)) b!67264))

(declare-fun m!62113 () Bool)

(assert (=> b!67263 m!62113))

(assert (=> b!66763 d!14029))

(declare-fun d!14031 () Bool)

(declare-fun lt!29204 () Bool)

(assert (=> d!14031 (= lt!29204 (select (content!71 (toList!705 lt!29055)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun e!44089 () Bool)

(assert (=> d!14031 (= lt!29204 e!44089)))

(declare-fun res!36343 () Bool)

(assert (=> d!14031 (=> (not res!36343) (not e!44089))))

(assert (=> d!14031 (= res!36343 ((_ is Cons!1462) (toList!705 lt!29055)))))

(assert (=> d!14031 (= (contains!707 (toList!705 lt!29055) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!29204)))

(declare-fun b!67265 () Bool)

(declare-fun e!44090 () Bool)

(assert (=> b!67265 (= e!44089 e!44090)))

(declare-fun res!36342 () Bool)

(assert (=> b!67265 (=> res!36342 e!44090)))

(assert (=> b!67265 (= res!36342 (= (h!2046 (toList!705 lt!29055)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!67266 () Bool)

(assert (=> b!67266 (= e!44090 (contains!707 (t!4939 (toList!705 lt!29055)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!14031 res!36343) b!67265))

(assert (= (and b!67265 (not res!36342)) b!67266))

(declare-fun m!62115 () Bool)

(assert (=> d!14031 m!62115))

(declare-fun m!62117 () Bool)

(assert (=> d!14031 m!62117))

(declare-fun m!62119 () Bool)

(assert (=> b!67266 m!62119))

(assert (=> b!67009 d!14031))

(declare-fun b!67267 () Bool)

(declare-fun e!44095 () Bool)

(declare-fun lt!29205 () ListLongMap!1379)

(assert (=> b!67267 (= e!44095 (= lt!29205 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16))))))

(declare-fun bm!5646 () Bool)

(declare-fun call!5649 () ListLongMap!1379)

(assert (=> bm!5646 (= call!5649 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16)))))

(declare-fun b!67268 () Bool)

(declare-fun e!44094 () Bool)

(assert (=> b!67268 (= e!44094 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67268 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67269 () Bool)

(declare-fun lt!29210 () Unit!1818)

(declare-fun lt!29206 () Unit!1818)

(assert (=> b!67269 (= lt!29210 lt!29206)))

(declare-fun lt!29211 () (_ BitVec 64))

(declare-fun lt!29208 () V!2913)

(declare-fun lt!29207 () ListLongMap!1379)

(declare-fun lt!29209 () (_ BitVec 64))

(assert (=> b!67269 (not (contains!705 (+!87 lt!29207 (tuple2!2083 lt!29209 lt!29208)) lt!29211))))

(assert (=> b!67269 (= lt!29206 (addStillNotContains!22 lt!29207 lt!29209 lt!29208 lt!29211))))

(assert (=> b!67269 (= lt!29211 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67269 (= lt!29208 (get!1119 (select (arr!1823 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67269 (= lt!29209 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67269 (= lt!29207 call!5649)))

(declare-fun e!44097 () ListLongMap!1379)

(assert (=> b!67269 (= e!44097 (+!87 call!5649 (tuple2!2083 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) (get!1119 (select (arr!1823 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67270 () Bool)

(declare-fun e!44091 () ListLongMap!1379)

(assert (=> b!67270 (= e!44091 e!44097)))

(declare-fun c!9359 () Bool)

(assert (=> b!67270 (= c!9359 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67271 () Bool)

(assert (=> b!67271 (= e!44091 (ListLongMap!1380 Nil!1463))))

(declare-fun b!67272 () Bool)

(assert (=> b!67272 (= e!44097 call!5649)))

(declare-fun b!67273 () Bool)

(assert (=> b!67273 (= e!44095 (isEmpty!311 lt!29205))))

(declare-fun b!67274 () Bool)

(declare-fun res!36347 () Bool)

(declare-fun e!44096 () Bool)

(assert (=> b!67274 (=> (not res!36347) (not e!44096))))

(assert (=> b!67274 (= res!36347 (not (contains!705 lt!29205 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67276 () Bool)

(declare-fun e!44093 () Bool)

(assert (=> b!67276 (= e!44093 e!44095)))

(declare-fun c!9361 () Bool)

(assert (=> b!67276 (= c!9361 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67277 () Bool)

(declare-fun e!44092 () Bool)

(assert (=> b!67277 (= e!44093 e!44092)))

(assert (=> b!67277 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun res!36346 () Bool)

(assert (=> b!67277 (= res!36346 (contains!705 lt!29205 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67277 (=> (not res!36346) (not e!44092))))

(declare-fun b!67278 () Bool)

(assert (=> b!67278 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> b!67278 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 (_values!2129 newMap!16))))))

(assert (=> b!67278 (= e!44092 (= (apply!72 lt!29205 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!14033 () Bool)

(assert (=> d!14033 e!44096))

(declare-fun res!36345 () Bool)

(assert (=> d!14033 (=> (not res!36345) (not e!44096))))

(assert (=> d!14033 (= res!36345 (not (contains!705 lt!29205 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14033 (= lt!29205 e!44091)))

(declare-fun c!9360 () Bool)

(assert (=> d!14033 (= c!9360 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!14033 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!14033 (= (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29205)))

(declare-fun b!67275 () Bool)

(assert (=> b!67275 (= e!44096 e!44093)))

(declare-fun c!9362 () Bool)

(assert (=> b!67275 (= c!9362 e!44094)))

(declare-fun res!36344 () Bool)

(assert (=> b!67275 (=> (not res!36344) (not e!44094))))

(assert (=> b!67275 (= res!36344 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (= (and d!14033 c!9360) b!67271))

(assert (= (and d!14033 (not c!9360)) b!67270))

(assert (= (and b!67270 c!9359) b!67269))

(assert (= (and b!67270 (not c!9359)) b!67272))

(assert (= (or b!67269 b!67272) bm!5646))

(assert (= (and d!14033 res!36345) b!67274))

(assert (= (and b!67274 res!36347) b!67275))

(assert (= (and b!67275 res!36344) b!67268))

(assert (= (and b!67275 c!9362) b!67277))

(assert (= (and b!67275 (not c!9362)) b!67276))

(assert (= (and b!67277 res!36346) b!67278))

(assert (= (and b!67276 c!9361) b!67267))

(assert (= (and b!67276 (not c!9361)) b!67273))

(declare-fun b_lambda!2999 () Bool)

(assert (=> (not b_lambda!2999) (not b!67269)))

(assert (=> b!67269 t!4952))

(declare-fun b_and!4141 () Bool)

(assert (= b_and!4137 (and (=> t!4952 result!2587) b_and!4141)))

(assert (=> b!67269 t!4954))

(declare-fun b_and!4143 () Bool)

(assert (= b_and!4139 (and (=> t!4954 result!2589) b_and!4143)))

(declare-fun b_lambda!3001 () Bool)

(assert (=> (not b_lambda!3001) (not b!67278)))

(assert (=> b!67278 t!4952))

(declare-fun b_and!4145 () Bool)

(assert (= b_and!4141 (and (=> t!4952 result!2587) b_and!4145)))

(assert (=> b!67278 t!4954))

(declare-fun b_and!4147 () Bool)

(assert (= b_and!4143 (and (=> t!4954 result!2589) b_and!4147)))

(declare-fun m!62121 () Bool)

(assert (=> d!14033 m!62121))

(assert (=> d!14033 m!60845))

(assert (=> b!67270 m!60839))

(assert (=> b!67270 m!60839))

(assert (=> b!67270 m!60841))

(declare-fun m!62123 () Bool)

(assert (=> b!67273 m!62123))

(assert (=> b!67268 m!60839))

(assert (=> b!67268 m!60839))

(assert (=> b!67268 m!60841))

(declare-fun m!62125 () Bool)

(assert (=> b!67267 m!62125))

(declare-fun m!62127 () Bool)

(assert (=> b!67269 m!62127))

(declare-fun m!62129 () Bool)

(assert (=> b!67269 m!62129))

(assert (=> b!67269 m!60889))

(assert (=> b!67269 m!60885))

(assert (=> b!67269 m!60891))

(declare-fun m!62131 () Bool)

(assert (=> b!67269 m!62131))

(assert (=> b!67269 m!62127))

(assert (=> b!67269 m!60889))

(assert (=> b!67269 m!60885))

(declare-fun m!62133 () Bool)

(assert (=> b!67269 m!62133))

(assert (=> b!67269 m!60839))

(declare-fun m!62135 () Bool)

(assert (=> b!67274 m!62135))

(assert (=> bm!5646 m!62125))

(assert (=> b!67277 m!60839))

(assert (=> b!67277 m!60839))

(declare-fun m!62137 () Bool)

(assert (=> b!67277 m!62137))

(assert (=> b!67278 m!60889))

(assert (=> b!67278 m!60885))

(assert (=> b!67278 m!60891))

(assert (=> b!67278 m!60889))

(assert (=> b!67278 m!60839))

(declare-fun m!62139 () Bool)

(assert (=> b!67278 m!62139))

(assert (=> b!67278 m!60885))

(assert (=> b!67278 m!60839))

(assert (=> bm!5554 d!14033))

(declare-fun d!14035 () Bool)

(assert (=> d!14035 (= (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66769 d!14035))

(assert (=> d!13735 d!13733))

(declare-fun d!14037 () Bool)

(assert (=> d!14037 (= (getValueByKey!128 lt!28498 (_1!1052 lt!28408)) (Some!133 (_2!1052 lt!28408)))))

(assert (=> d!14037 true))

(declare-fun _$22!368 () Unit!1818)

(assert (=> d!14037 (= (choose!375 lt!28498 (_1!1052 lt!28408) (_2!1052 lt!28408)) _$22!368)))

(declare-fun bs!2878 () Bool)

(assert (= bs!2878 d!14037))

(assert (=> bs!2878 m!60615))

(assert (=> d!13735 d!14037))

(declare-fun d!14039 () Bool)

(declare-fun res!36348 () Bool)

(declare-fun e!44098 () Bool)

(assert (=> d!14039 (=> res!36348 e!44098)))

(assert (=> d!14039 (= res!36348 (or ((_ is Nil!1463) lt!28498) ((_ is Nil!1463) (t!4939 lt!28498))))))

(assert (=> d!14039 (= (isStrictlySorted!284 lt!28498) e!44098)))

(declare-fun b!67279 () Bool)

(declare-fun e!44099 () Bool)

(assert (=> b!67279 (= e!44098 e!44099)))

(declare-fun res!36349 () Bool)

(assert (=> b!67279 (=> (not res!36349) (not e!44099))))

(assert (=> b!67279 (= res!36349 (bvslt (_1!1052 (h!2046 lt!28498)) (_1!1052 (h!2046 (t!4939 lt!28498)))))))

(declare-fun b!67280 () Bool)

(assert (=> b!67280 (= e!44099 (isStrictlySorted!284 (t!4939 lt!28498)))))

(assert (= (and d!14039 (not res!36348)) b!67279))

(assert (= (and b!67279 res!36349) b!67280))

(declare-fun m!62141 () Bool)

(assert (=> b!67280 m!62141))

(assert (=> d!13735 d!14039))

(declare-fun b!67284 () Bool)

(declare-fun e!44101 () Option!134)

(assert (=> b!67284 (= e!44101 None!132)))

(declare-fun b!67283 () Bool)

(assert (=> b!67283 (= e!44101 (getValueByKey!128 (t!4939 (t!4939 (toList!705 lt!28521))) (_1!1052 lt!28403)))))

(declare-fun b!67281 () Bool)

(declare-fun e!44100 () Option!134)

(assert (=> b!67281 (= e!44100 (Some!133 (_2!1052 (h!2046 (t!4939 (toList!705 lt!28521))))))))

(declare-fun d!14041 () Bool)

(declare-fun c!9363 () Bool)

(assert (=> d!14041 (= c!9363 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28521))) (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28521)))) (_1!1052 lt!28403))))))

(assert (=> d!14041 (= (getValueByKey!128 (t!4939 (toList!705 lt!28521)) (_1!1052 lt!28403)) e!44100)))

(declare-fun b!67282 () Bool)

(assert (=> b!67282 (= e!44100 e!44101)))

(declare-fun c!9364 () Bool)

(assert (=> b!67282 (= c!9364 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28521))) (not (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28521)))) (_1!1052 lt!28403)))))))

(assert (= (and d!14041 c!9363) b!67281))

(assert (= (and d!14041 (not c!9363)) b!67282))

(assert (= (and b!67282 c!9364) b!67283))

(assert (= (and b!67282 (not c!9364)) b!67284))

(declare-fun m!62143 () Bool)

(assert (=> b!67283 m!62143))

(assert (=> b!66923 d!14041))

(assert (=> d!13815 d!13693))

(declare-fun d!14043 () Bool)

(declare-fun e!44104 () Bool)

(assert (=> d!14043 e!44104))

(declare-fun res!36355 () Bool)

(assert (=> d!14043 (=> (not res!36355) (not e!44104))))

(declare-fun lt!29214 () SeekEntryResult!236)

(assert (=> d!14043 (= res!36355 ((_ is Found!236) lt!29214))))

(assert (=> d!14043 (= lt!29214 (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(assert (=> d!14043 true))

(declare-fun _$33!51 () Unit!1818)

(assert (=> d!14043 (= (choose!381 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)) _$33!51)))

(declare-fun b!67289 () Bool)

(declare-fun res!36354 () Bool)

(assert (=> b!67289 (=> (not res!36354) (not e!44104))))

(assert (=> b!67289 (= res!36354 (inRange!0 (index!3073 lt!29214) (mask!6080 newMap!16)))))

(declare-fun b!67290 () Bool)

(assert (=> b!67290 (= e!44104 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!29214)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (= (and d!14043 res!36355) b!67289))

(assert (= (and b!67289 res!36354) b!67290))

(assert (=> d!14043 m!60449))

(assert (=> d!14043 m!60701))

(declare-fun m!62145 () Bool)

(assert (=> b!67289 m!62145))

(declare-fun m!62147 () Bool)

(assert (=> b!67290 m!62147))

(assert (=> d!13815 d!14043))

(assert (=> d!13815 d!13991))

(declare-fun d!14045 () Bool)

(assert (=> d!14045 (isDefined!82 (getValueByKey!128 (toList!705 lt!28496) (_1!1052 lt!28408)))))

(declare-fun lt!29215 () Unit!1818)

(assert (=> d!14045 (= lt!29215 (choose!384 (toList!705 lt!28496) (_1!1052 lt!28408)))))

(declare-fun e!44105 () Bool)

(assert (=> d!14045 e!44105))

(declare-fun res!36356 () Bool)

(assert (=> d!14045 (=> (not res!36356) (not e!44105))))

(assert (=> d!14045 (= res!36356 (isStrictlySorted!284 (toList!705 lt!28496)))))

(assert (=> d!14045 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28496) (_1!1052 lt!28408)) lt!29215)))

(declare-fun b!67291 () Bool)

(assert (=> b!67291 (= e!44105 (containsKey!132 (toList!705 lt!28496) (_1!1052 lt!28408)))))

(assert (= (and d!14045 res!36356) b!67291))

(assert (=> d!14045 m!60621))

(assert (=> d!14045 m!60621))

(assert (=> d!14045 m!61115))

(declare-fun m!62149 () Bool)

(assert (=> d!14045 m!62149))

(declare-fun m!62151 () Bool)

(assert (=> d!14045 m!62151))

(assert (=> b!67291 m!61111))

(assert (=> b!66700 d!14045))

(declare-fun d!14047 () Bool)

(assert (=> d!14047 (= (isDefined!82 (getValueByKey!128 (toList!705 lt!28496) (_1!1052 lt!28408))) (not (isEmpty!313 (getValueByKey!128 (toList!705 lt!28496) (_1!1052 lt!28408)))))))

(declare-fun bs!2879 () Bool)

(assert (= bs!2879 d!14047))

(assert (=> bs!2879 m!60621))

(declare-fun m!62153 () Bool)

(assert (=> bs!2879 m!62153))

(assert (=> b!66700 d!14047))

(assert (=> b!66700 d!13785))

(declare-fun d!14049 () Bool)

(assert (=> d!14049 (= (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28681)) (v!2475 (getValueByKey!128 (toList!705 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28681)))))

(assert (=> d!13767 d!14049))

(declare-fun b!67295 () Bool)

(declare-fun e!44107 () Option!134)

(assert (=> b!67295 (= e!44107 None!132)))

(declare-fun b!67294 () Bool)

(assert (=> b!67294 (= e!44107 (getValueByKey!128 (t!4939 (toList!705 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) lt!28681))))

(declare-fun e!44106 () Option!134)

(declare-fun b!67292 () Bool)

(assert (=> b!67292 (= e!44106 (Some!133 (_2!1052 (h!2046 (toList!705 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))))

(declare-fun c!9365 () Bool)

(declare-fun d!14051 () Bool)

(assert (=> d!14051 (= c!9365 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))) lt!28681)))))

(assert (=> d!14051 (= (getValueByKey!128 (toList!705 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28681) e!44106)))

(declare-fun b!67293 () Bool)

(assert (=> b!67293 (= e!44106 e!44107)))

(declare-fun c!9366 () Bool)

(assert (=> b!67293 (= c!9366 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) (not (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))) lt!28681))))))

(assert (= (and d!14051 c!9365) b!67292))

(assert (= (and d!14051 (not c!9365)) b!67293))

(assert (= (and b!67293 c!9366) b!67294))

(assert (= (and b!67293 (not c!9366)) b!67295))

(declare-fun m!62155 () Bool)

(assert (=> b!67294 m!62155))

(assert (=> d!13767 d!14051))

(declare-fun d!14053 () Bool)

(assert (=> d!14053 (= (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66601 d!14053))

(declare-fun d!14055 () Bool)

(assert (=> d!14055 (= (size!2064 newMap!16) (bvadd (_size!384 newMap!16) (bvsdiv (bvadd (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!66830 d!14055))

(declare-fun d!14057 () Bool)

(declare-fun e!44108 () Bool)

(assert (=> d!14057 e!44108))

(declare-fun res!36357 () Bool)

(assert (=> d!14057 (=> (not res!36357) (not e!44108))))

(declare-fun lt!29217 () ListLongMap!1379)

(assert (=> d!14057 (= res!36357 (contains!705 lt!29217 (_1!1052 (ite (or c!9253 c!9252) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))))))

(declare-fun lt!29219 () List!1466)

(assert (=> d!14057 (= lt!29217 (ListLongMap!1380 lt!29219))))

(declare-fun lt!29216 () Unit!1818)

(declare-fun lt!29218 () Unit!1818)

(assert (=> d!14057 (= lt!29216 lt!29218)))

(assert (=> d!14057 (= (getValueByKey!128 lt!29219 (_1!1052 (ite (or c!9253 c!9252) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))) (Some!133 (_2!1052 (ite (or c!9253 c!9252) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))))))

(assert (=> d!14057 (= lt!29218 (lemmaContainsTupThenGetReturnValue!48 lt!29219 (_1!1052 (ite (or c!9253 c!9252) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))) (_2!1052 (ite (or c!9253 c!9252) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))))))

(assert (=> d!14057 (= lt!29219 (insertStrictlySorted!51 (toList!705 (ite c!9253 call!5597 (ite c!9252 call!5599 call!5596))) (_1!1052 (ite (or c!9253 c!9252) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))) (_2!1052 (ite (or c!9253 c!9252) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))))))

(assert (=> d!14057 (= (+!87 (ite c!9253 call!5597 (ite c!9252 call!5599 call!5596)) (ite (or c!9253 c!9252) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))) lt!29217)))

(declare-fun b!67296 () Bool)

(declare-fun res!36358 () Bool)

(assert (=> b!67296 (=> (not res!36358) (not e!44108))))

(assert (=> b!67296 (= res!36358 (= (getValueByKey!128 (toList!705 lt!29217) (_1!1052 (ite (or c!9253 c!9252) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))) (Some!133 (_2!1052 (ite (or c!9253 c!9252) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))))

(declare-fun b!67297 () Bool)

(assert (=> b!67297 (= e!44108 (contains!707 (toList!705 lt!29217) (ite (or c!9253 c!9252) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9137 c!9128) lt!28400 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(assert (= (and d!14057 res!36357) b!67296))

(assert (= (and b!67296 res!36358) b!67297))

(declare-fun m!62157 () Bool)

(assert (=> d!14057 m!62157))

(declare-fun m!62159 () Bool)

(assert (=> d!14057 m!62159))

(declare-fun m!62161 () Bool)

(assert (=> d!14057 m!62161))

(declare-fun m!62163 () Bool)

(assert (=> d!14057 m!62163))

(declare-fun m!62165 () Bool)

(assert (=> b!67296 m!62165))

(declare-fun m!62167 () Bool)

(assert (=> b!67297 m!62167))

(assert (=> bm!5596 d!14057))

(declare-fun d!14059 () Bool)

(assert (not d!14059))

(assert (=> b!66949 d!14059))

(declare-fun d!14061 () Bool)

(declare-fun e!44109 () Bool)

(assert (=> d!14061 e!44109))

(declare-fun res!36359 () Bool)

(assert (=> d!14061 (=> (not res!36359) (not e!44109))))

(declare-fun lt!29221 () ListLongMap!1379)

(assert (=> d!14061 (= res!36359 (contains!705 lt!29221 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(declare-fun lt!29223 () List!1466)

(assert (=> d!14061 (= lt!29221 (ListLongMap!1380 lt!29223))))

(declare-fun lt!29220 () Unit!1818)

(declare-fun lt!29222 () Unit!1818)

(assert (=> d!14061 (= lt!29220 lt!29222)))

(assert (=> d!14061 (= (getValueByKey!128 lt!29223 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))) (Some!133 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(assert (=> d!14061 (= lt!29222 (lemmaContainsTupThenGetReturnValue!48 lt!29223 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(assert (=> d!14061 (= lt!29223 (insertStrictlySorted!51 (toList!705 call!5595) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))))))

(assert (=> d!14061 (= (+!87 call!5595 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))) lt!29221)))

(declare-fun b!67298 () Bool)

(declare-fun res!36360 () Bool)

(assert (=> b!67298 (=> (not res!36360) (not e!44109))))

(assert (=> b!67298 (= res!36360 (= (getValueByKey!128 (toList!705 lt!29221) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16))))) (Some!133 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))))))

(declare-fun b!67299 () Bool)

(assert (=> b!67299 (= e!44109 (contains!707 (toList!705 lt!29221) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9137 (ite c!9128 (minValue!2054 newMap!16) lt!28400) (minValue!2054 newMap!16)))))))

(assert (= (and d!14061 res!36359) b!67298))

(assert (= (and b!67298 res!36360) b!67299))

(declare-fun m!62169 () Bool)

(assert (=> d!14061 m!62169))

(declare-fun m!62171 () Bool)

(assert (=> d!14061 m!62171))

(declare-fun m!62173 () Bool)

(assert (=> d!14061 m!62173))

(declare-fun m!62175 () Bool)

(assert (=> d!14061 m!62175))

(declare-fun m!62177 () Bool)

(assert (=> b!67298 m!62177))

(declare-fun m!62179 () Bool)

(assert (=> b!67299 m!62179))

(assert (=> b!66865 d!14061))

(declare-fun d!14063 () Bool)

(declare-fun res!36361 () Bool)

(declare-fun e!44110 () Bool)

(assert (=> d!14063 (=> res!36361 e!44110)))

(assert (=> d!14063 (= res!36361 (and ((_ is Cons!1462) lt!28999) (= (_1!1052 (h!2046 lt!28999)) (_1!1052 lt!28403))))))

(assert (=> d!14063 (= (containsKey!132 lt!28999 (_1!1052 lt!28403)) e!44110)))

(declare-fun b!67300 () Bool)

(declare-fun e!44111 () Bool)

(assert (=> b!67300 (= e!44110 e!44111)))

(declare-fun res!36362 () Bool)

(assert (=> b!67300 (=> (not res!36362) (not e!44111))))

(assert (=> b!67300 (= res!36362 (and (or (not ((_ is Cons!1462) lt!28999)) (bvsle (_1!1052 (h!2046 lt!28999)) (_1!1052 lt!28403))) ((_ is Cons!1462) lt!28999) (bvslt (_1!1052 (h!2046 lt!28999)) (_1!1052 lt!28403))))))

(declare-fun b!67301 () Bool)

(assert (=> b!67301 (= e!44111 (containsKey!132 (t!4939 lt!28999) (_1!1052 lt!28403)))))

(assert (= (and d!14063 (not res!36361)) b!67300))

(assert (= (and b!67300 res!36362) b!67301))

(declare-fun m!62181 () Bool)

(assert (=> b!67301 m!62181))

(assert (=> b!66941 d!14063))

(declare-fun b!67305 () Bool)

(declare-fun e!44113 () Option!134)

(assert (=> b!67305 (= e!44113 None!132)))

(declare-fun b!67304 () Bool)

(assert (=> b!67304 (= e!44113 (getValueByKey!128 (t!4939 (toList!705 lt!28881)) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67302 () Bool)

(declare-fun e!44112 () Option!134)

(assert (=> b!67302 (= e!44112 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28881)))))))

(declare-fun c!9367 () Bool)

(declare-fun d!14065 () Bool)

(assert (=> d!14065 (= c!9367 (and ((_ is Cons!1462) (toList!705 lt!28881)) (= (_1!1052 (h!2046 (toList!705 lt!28881))) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14065 (= (getValueByKey!128 (toList!705 lt!28881) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44112)))

(declare-fun b!67303 () Bool)

(assert (=> b!67303 (= e!44112 e!44113)))

(declare-fun c!9368 () Bool)

(assert (=> b!67303 (= c!9368 (and ((_ is Cons!1462) (toList!705 lt!28881)) (not (= (_1!1052 (h!2046 (toList!705 lt!28881))) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14065 c!9367) b!67302))

(assert (= (and d!14065 (not c!9367)) b!67303))

(assert (= (and b!67303 c!9368) b!67304))

(assert (= (and b!67303 (not c!9368)) b!67305))

(declare-fun m!62183 () Bool)

(assert (=> b!67304 m!62183))

(assert (=> b!66753 d!14065))

(declare-fun d!14067 () Bool)

(declare-fun e!44114 () Bool)

(assert (=> d!14067 e!44114))

(declare-fun res!36363 () Bool)

(assert (=> d!14067 (=> res!36363 e!44114)))

(declare-fun lt!29227 () Bool)

(assert (=> d!14067 (= res!36363 (not lt!29227))))

(declare-fun lt!29226 () Bool)

(assert (=> d!14067 (= lt!29227 lt!29226)))

(declare-fun lt!29224 () Unit!1818)

(declare-fun e!44115 () Unit!1818)

(assert (=> d!14067 (= lt!29224 e!44115)))

(declare-fun c!9369 () Bool)

(assert (=> d!14067 (= c!9369 lt!29226)))

(assert (=> d!14067 (= lt!29226 (containsKey!132 (toList!705 lt!28881) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!14067 (= (contains!705 lt!28881 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29227)))

(declare-fun b!67306 () Bool)

(declare-fun lt!29225 () Unit!1818)

(assert (=> b!67306 (= e!44115 lt!29225)))

(assert (=> b!67306 (= lt!29225 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28881) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> b!67306 (isDefined!82 (getValueByKey!128 (toList!705 lt!28881) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67307 () Bool)

(declare-fun Unit!1861 () Unit!1818)

(assert (=> b!67307 (= e!44115 Unit!1861)))

(declare-fun b!67308 () Bool)

(assert (=> b!67308 (= e!44114 (isDefined!82 (getValueByKey!128 (toList!705 lt!28881) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14067 c!9369) b!67306))

(assert (= (and d!14067 (not c!9369)) b!67307))

(assert (= (and d!14067 (not res!36363)) b!67308))

(declare-fun m!62185 () Bool)

(assert (=> d!14067 m!62185))

(declare-fun m!62187 () Bool)

(assert (=> b!67306 m!62187))

(assert (=> b!67306 m!61159))

(assert (=> b!67306 m!61159))

(declare-fun m!62189 () Bool)

(assert (=> b!67306 m!62189))

(assert (=> b!67308 m!61159))

(assert (=> b!67308 m!61159))

(assert (=> b!67308 m!62189))

(assert (=> d!13741 d!14067))

(declare-fun b!67312 () Bool)

(declare-fun e!44117 () Option!134)

(assert (=> b!67312 (= e!44117 None!132)))

(declare-fun b!67311 () Bool)

(assert (=> b!67311 (= e!44117 (getValueByKey!128 (t!4939 lt!28883) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67309 () Bool)

(declare-fun e!44116 () Option!134)

(assert (=> b!67309 (= e!44116 (Some!133 (_2!1052 (h!2046 lt!28883))))))

(declare-fun c!9370 () Bool)

(declare-fun d!14069 () Bool)

(assert (=> d!14069 (= c!9370 (and ((_ is Cons!1462) lt!28883) (= (_1!1052 (h!2046 lt!28883)) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14069 (= (getValueByKey!128 lt!28883 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44116)))

(declare-fun b!67310 () Bool)

(assert (=> b!67310 (= e!44116 e!44117)))

(declare-fun c!9371 () Bool)

(assert (=> b!67310 (= c!9371 (and ((_ is Cons!1462) lt!28883) (not (= (_1!1052 (h!2046 lt!28883)) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14069 c!9370) b!67309))

(assert (= (and d!14069 (not c!9370)) b!67310))

(assert (= (and b!67310 c!9371) b!67311))

(assert (= (and b!67310 (not c!9371)) b!67312))

(declare-fun m!62191 () Bool)

(assert (=> b!67311 m!62191))

(assert (=> d!13741 d!14069))

(declare-fun d!14071 () Bool)

(assert (=> d!14071 (= (getValueByKey!128 lt!28883 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!29228 () Unit!1818)

(assert (=> d!14071 (= lt!29228 (choose!375 lt!28883 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun e!44118 () Bool)

(assert (=> d!14071 e!44118))

(declare-fun res!36364 () Bool)

(assert (=> d!14071 (=> (not res!36364) (not e!44118))))

(assert (=> d!14071 (= res!36364 (isStrictlySorted!284 lt!28883))))

(assert (=> d!14071 (= (lemmaContainsTupThenGetReturnValue!48 lt!28883 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29228)))

(declare-fun b!67313 () Bool)

(declare-fun res!36365 () Bool)

(assert (=> b!67313 (=> (not res!36365) (not e!44118))))

(assert (=> b!67313 (= res!36365 (containsKey!132 lt!28883 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67314 () Bool)

(assert (=> b!67314 (= e!44118 (contains!707 lt!28883 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14071 res!36364) b!67313))

(assert (= (and b!67313 res!36365) b!67314))

(assert (=> d!14071 m!61153))

(declare-fun m!62193 () Bool)

(assert (=> d!14071 m!62193))

(declare-fun m!62195 () Bool)

(assert (=> d!14071 m!62195))

(declare-fun m!62197 () Bool)

(assert (=> b!67313 m!62197))

(declare-fun m!62199 () Bool)

(assert (=> b!67314 m!62199))

(assert (=> d!13741 d!14071))

(declare-fun bm!5647 () Bool)

(declare-fun call!5651 () List!1466)

(declare-fun call!5652 () List!1466)

(assert (=> bm!5647 (= call!5651 call!5652)))

(declare-fun d!14073 () Bool)

(declare-fun e!44120 () Bool)

(assert (=> d!14073 e!44120))

(declare-fun res!36367 () Bool)

(assert (=> d!14073 (=> (not res!36367) (not e!44120))))

(declare-fun lt!29229 () List!1466)

(assert (=> d!14073 (= res!36367 (isStrictlySorted!284 lt!29229))))

(declare-fun e!44121 () List!1466)

(assert (=> d!14073 (= lt!29229 e!44121)))

(declare-fun c!9373 () Bool)

(assert (=> d!14073 (= c!9373 (and ((_ is Cons!1462) (toList!705 lt!28670)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28670))) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14073 (isStrictlySorted!284 (toList!705 lt!28670))))

(assert (=> d!14073 (= (insertStrictlySorted!51 (toList!705 lt!28670) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29229)))

(declare-fun c!9372 () Bool)

(declare-fun b!67315 () Bool)

(assert (=> b!67315 (= c!9372 (and ((_ is Cons!1462) (toList!705 lt!28670)) (bvsgt (_1!1052 (h!2046 (toList!705 lt!28670))) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun e!44122 () List!1466)

(declare-fun e!44119 () List!1466)

(assert (=> b!67315 (= e!44122 e!44119)))

(declare-fun e!44123 () List!1466)

(declare-fun c!9375 () Bool)

(declare-fun b!67316 () Bool)

(assert (=> b!67316 (= e!44123 (ite c!9375 (t!4939 (toList!705 lt!28670)) (ite c!9372 (Cons!1462 (h!2046 (toList!705 lt!28670)) (t!4939 (toList!705 lt!28670))) Nil!1463)))))

(declare-fun b!67317 () Bool)

(assert (=> b!67317 (= e!44121 e!44122)))

(assert (=> b!67317 (= c!9375 (and ((_ is Cons!1462) (toList!705 lt!28670)) (= (_1!1052 (h!2046 (toList!705 lt!28670))) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun bm!5648 () Bool)

(declare-fun call!5650 () List!1466)

(assert (=> bm!5648 (= call!5652 call!5650)))

(declare-fun b!67318 () Bool)

(assert (=> b!67318 (= e!44123 (insertStrictlySorted!51 (t!4939 (toList!705 lt!28670)) (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67319 () Bool)

(assert (=> b!67319 (= e!44120 (contains!707 lt!29229 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!67320 () Bool)

(assert (=> b!67320 (= e!44122 call!5652)))

(declare-fun b!67321 () Bool)

(assert (=> b!67321 (= e!44121 call!5650)))

(declare-fun b!67322 () Bool)

(declare-fun res!36366 () Bool)

(assert (=> b!67322 (=> (not res!36366) (not e!44120))))

(assert (=> b!67322 (= res!36366 (containsKey!132 lt!29229 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67323 () Bool)

(assert (=> b!67323 (= e!44119 call!5651)))

(declare-fun b!67324 () Bool)

(assert (=> b!67324 (= e!44119 call!5651)))

(declare-fun bm!5649 () Bool)

(assert (=> bm!5649 (= call!5650 ($colon$colon!62 e!44123 (ite c!9373 (h!2046 (toList!705 lt!28670)) (tuple2!2083 (_1!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(declare-fun c!9374 () Bool)

(assert (=> bm!5649 (= c!9374 c!9373)))

(assert (= (and d!14073 c!9373) b!67321))

(assert (= (and d!14073 (not c!9373)) b!67317))

(assert (= (and b!67317 c!9375) b!67320))

(assert (= (and b!67317 (not c!9375)) b!67315))

(assert (= (and b!67315 c!9372) b!67324))

(assert (= (and b!67315 (not c!9372)) b!67323))

(assert (= (or b!67324 b!67323) bm!5647))

(assert (= (or b!67320 bm!5647) bm!5648))

(assert (= (or b!67321 bm!5648) bm!5649))

(assert (= (and bm!5649 c!9374) b!67318))

(assert (= (and bm!5649 (not c!9374)) b!67316))

(assert (= (and d!14073 res!36367) b!67322))

(assert (= (and b!67322 res!36366) b!67319))

(declare-fun m!62201 () Bool)

(assert (=> d!14073 m!62201))

(declare-fun m!62203 () Bool)

(assert (=> d!14073 m!62203))

(declare-fun m!62205 () Bool)

(assert (=> b!67322 m!62205))

(declare-fun m!62207 () Bool)

(assert (=> b!67319 m!62207))

(declare-fun m!62209 () Bool)

(assert (=> bm!5649 m!62209))

(declare-fun m!62211 () Bool)

(assert (=> b!67318 m!62211))

(assert (=> d!13741 d!14073))

(declare-fun d!14075 () Bool)

(declare-fun c!9376 () Bool)

(assert (=> d!14075 (= c!9376 ((_ is Nil!1463) (toList!705 lt!28525)))))

(declare-fun e!44124 () (InoxSet tuple2!2082))

(assert (=> d!14075 (= (content!71 (toList!705 lt!28525)) e!44124)))

(declare-fun b!67325 () Bool)

(assert (=> b!67325 (= e!44124 ((as const (Array tuple2!2082 Bool)) false))))

(declare-fun b!67326 () Bool)

(assert (=> b!67326 (= e!44124 ((_ map or) (store ((as const (Array tuple2!2082 Bool)) false) (h!2046 (toList!705 lt!28525)) true) (content!71 (t!4939 (toList!705 lt!28525)))))))

(assert (= (and d!14075 c!9376) b!67325))

(assert (= (and d!14075 (not c!9376)) b!67326))

(declare-fun m!62213 () Bool)

(assert (=> b!67326 m!62213))

(declare-fun m!62215 () Bool)

(assert (=> b!67326 m!62215))

(assert (=> d!13809 d!14075))

(declare-fun d!14077 () Bool)

(assert (=> d!14077 (= (apply!72 lt!28740 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1123 (getValueByKey!128 (toList!705 lt!28740) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!2880 () Bool)

(assert (= bs!2880 d!14077))

(assert (=> bs!2880 m!60931))

(declare-fun m!62217 () Bool)

(assert (=> bs!2880 m!62217))

(assert (=> bs!2880 m!62217))

(declare-fun m!62219 () Bool)

(assert (=> bs!2880 m!62219))

(assert (=> b!66609 d!14077))

(declare-fun d!14079 () Bool)

(declare-fun c!9377 () Bool)

(assert (=> d!14079 (= c!9377 ((_ is ValueCellFull!881) (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!44125 () V!2913)

(assert (=> d!14079 (= (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44125)))

(declare-fun b!67327 () Bool)

(assert (=> b!67327 (= e!44125 (get!1121 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67328 () Bool)

(assert (=> b!67328 (= e!44125 (get!1122 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14079 c!9377) b!67327))

(assert (= (and d!14079 (not c!9377)) b!67328))

(assert (=> b!67327 m!60943))

(assert (=> b!67327 m!60465))

(declare-fun m!62221 () Bool)

(assert (=> b!67327 m!62221))

(assert (=> b!67328 m!60943))

(assert (=> b!67328 m!60465))

(declare-fun m!62223 () Bool)

(assert (=> b!67328 m!62223))

(assert (=> b!66609 d!14079))

(declare-fun d!14081 () Bool)

(assert (=> d!14081 (= (apply!72 lt!28714 lt!28718) (get!1123 (getValueByKey!128 (toList!705 lt!28714) lt!28718)))))

(declare-fun bs!2881 () Bool)

(assert (= bs!2881 d!14081))

(declare-fun m!62225 () Bool)

(assert (=> bs!2881 m!62225))

(assert (=> bs!2881 m!62225))

(declare-fun m!62227 () Bool)

(assert (=> bs!2881 m!62227))

(assert (=> b!66563 d!14081))

(declare-fun d!14083 () Bool)

(declare-fun e!44126 () Bool)

(assert (=> d!14083 e!44126))

(declare-fun res!36368 () Bool)

(assert (=> d!14083 (=> (not res!36368) (not e!44126))))

(declare-fun lt!29231 () ListLongMap!1379)

(assert (=> d!14083 (= res!36368 (contains!705 lt!29231 (_1!1052 (tuple2!2083 lt!28711 (minValue!2054 newMap!16)))))))

(declare-fun lt!29233 () List!1466)

(assert (=> d!14083 (= lt!29231 (ListLongMap!1380 lt!29233))))

(declare-fun lt!29230 () Unit!1818)

(declare-fun lt!29232 () Unit!1818)

(assert (=> d!14083 (= lt!29230 lt!29232)))

(assert (=> d!14083 (= (getValueByKey!128 lt!29233 (_1!1052 (tuple2!2083 lt!28711 (minValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!28711 (minValue!2054 newMap!16)))))))

(assert (=> d!14083 (= lt!29232 (lemmaContainsTupThenGetReturnValue!48 lt!29233 (_1!1052 (tuple2!2083 lt!28711 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28711 (minValue!2054 newMap!16)))))))

(assert (=> d!14083 (= lt!29233 (insertStrictlySorted!51 (toList!705 lt!28707) (_1!1052 (tuple2!2083 lt!28711 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28711 (minValue!2054 newMap!16)))))))

(assert (=> d!14083 (= (+!87 lt!28707 (tuple2!2083 lt!28711 (minValue!2054 newMap!16))) lt!29231)))

(declare-fun b!67329 () Bool)

(declare-fun res!36369 () Bool)

(assert (=> b!67329 (=> (not res!36369) (not e!44126))))

(assert (=> b!67329 (= res!36369 (= (getValueByKey!128 (toList!705 lt!29231) (_1!1052 (tuple2!2083 lt!28711 (minValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!28711 (minValue!2054 newMap!16))))))))

(declare-fun b!67330 () Bool)

(assert (=> b!67330 (= e!44126 (contains!707 (toList!705 lt!29231) (tuple2!2083 lt!28711 (minValue!2054 newMap!16))))))

(assert (= (and d!14083 res!36368) b!67329))

(assert (= (and b!67329 res!36369) b!67330))

(declare-fun m!62229 () Bool)

(assert (=> d!14083 m!62229))

(declare-fun m!62231 () Bool)

(assert (=> d!14083 m!62231))

(declare-fun m!62233 () Bool)

(assert (=> d!14083 m!62233))

(declare-fun m!62235 () Bool)

(assert (=> d!14083 m!62235))

(declare-fun m!62237 () Bool)

(assert (=> b!67329 m!62237))

(declare-fun m!62239 () Bool)

(assert (=> b!67330 m!62239))

(assert (=> b!66563 d!14083))

(declare-fun d!14085 () Bool)

(assert (=> d!14085 (= (apply!72 (+!87 lt!28707 (tuple2!2083 lt!28711 (minValue!2054 newMap!16))) lt!28705) (apply!72 lt!28707 lt!28705))))

(declare-fun lt!29234 () Unit!1818)

(assert (=> d!14085 (= lt!29234 (choose!377 lt!28707 lt!28711 (minValue!2054 newMap!16) lt!28705))))

(declare-fun e!44127 () Bool)

(assert (=> d!14085 e!44127))

(declare-fun res!36370 () Bool)

(assert (=> d!14085 (=> (not res!36370) (not e!44127))))

(assert (=> d!14085 (= res!36370 (contains!705 lt!28707 lt!28705))))

(assert (=> d!14085 (= (addApplyDifferent!48 lt!28707 lt!28711 (minValue!2054 newMap!16) lt!28705) lt!29234)))

(declare-fun b!67331 () Bool)

(assert (=> b!67331 (= e!44127 (not (= lt!28705 lt!28711)))))

(assert (= (and d!14085 res!36370) b!67331))

(assert (=> d!14085 m!60869))

(assert (=> d!14085 m!60871))

(declare-fun m!62241 () Bool)

(assert (=> d!14085 m!62241))

(assert (=> d!14085 m!60869))

(assert (=> d!14085 m!60875))

(declare-fun m!62243 () Bool)

(assert (=> d!14085 m!62243))

(assert (=> b!66563 d!14085))

(declare-fun d!14087 () Bool)

(assert (=> d!14087 (= (apply!72 (+!87 lt!28714 (tuple2!2083 lt!28717 (minValue!2054 newMap!16))) lt!28718) (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!28714 (tuple2!2083 lt!28717 (minValue!2054 newMap!16)))) lt!28718)))))

(declare-fun bs!2882 () Bool)

(assert (= bs!2882 d!14087))

(declare-fun m!62245 () Bool)

(assert (=> bs!2882 m!62245))

(assert (=> bs!2882 m!62245))

(declare-fun m!62247 () Bool)

(assert (=> bs!2882 m!62247))

(assert (=> b!66563 d!14087))

(declare-fun d!14089 () Bool)

(assert (=> d!14089 (contains!705 (+!87 lt!28710 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16))) lt!28722)))

(declare-fun lt!29235 () Unit!1818)

(assert (=> d!14089 (= lt!29235 (choose!376 lt!28710 lt!28723 (zeroValue!2054 newMap!16) lt!28722))))

(assert (=> d!14089 (contains!705 lt!28710 lt!28722)))

(assert (=> d!14089 (= (addStillContains!48 lt!28710 lt!28723 (zeroValue!2054 newMap!16) lt!28722) lt!29235)))

(declare-fun bs!2883 () Bool)

(assert (= bs!2883 d!14089))

(assert (=> bs!2883 m!60851))

(assert (=> bs!2883 m!60851))

(assert (=> bs!2883 m!60853))

(declare-fun m!62249 () Bool)

(assert (=> bs!2883 m!62249))

(declare-fun m!62251 () Bool)

(assert (=> bs!2883 m!62251))

(assert (=> b!66563 d!14089))

(declare-fun d!14091 () Bool)

(declare-fun e!44128 () Bool)

(assert (=> d!14091 e!44128))

(declare-fun res!36371 () Bool)

(assert (=> d!14091 (=> res!36371 e!44128)))

(declare-fun lt!29239 () Bool)

(assert (=> d!14091 (= res!36371 (not lt!29239))))

(declare-fun lt!29238 () Bool)

(assert (=> d!14091 (= lt!29239 lt!29238)))

(declare-fun lt!29236 () Unit!1818)

(declare-fun e!44129 () Unit!1818)

(assert (=> d!14091 (= lt!29236 e!44129)))

(declare-fun c!9378 () Bool)

(assert (=> d!14091 (= c!9378 lt!29238)))

(assert (=> d!14091 (= lt!29238 (containsKey!132 (toList!705 (+!87 lt!28710 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16)))) lt!28722))))

(assert (=> d!14091 (= (contains!705 (+!87 lt!28710 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16))) lt!28722) lt!29239)))

(declare-fun b!67332 () Bool)

(declare-fun lt!29237 () Unit!1818)

(assert (=> b!67332 (= e!44129 lt!29237)))

(assert (=> b!67332 (= lt!29237 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 (+!87 lt!28710 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16)))) lt!28722))))

(assert (=> b!67332 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28710 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16)))) lt!28722))))

(declare-fun b!67333 () Bool)

(declare-fun Unit!1862 () Unit!1818)

(assert (=> b!67333 (= e!44129 Unit!1862)))

(declare-fun b!67334 () Bool)

(assert (=> b!67334 (= e!44128 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28710 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16)))) lt!28722)))))

(assert (= (and d!14091 c!9378) b!67332))

(assert (= (and d!14091 (not c!9378)) b!67333))

(assert (= (and d!14091 (not res!36371)) b!67334))

(declare-fun m!62253 () Bool)

(assert (=> d!14091 m!62253))

(declare-fun m!62255 () Bool)

(assert (=> b!67332 m!62255))

(declare-fun m!62257 () Bool)

(assert (=> b!67332 m!62257))

(assert (=> b!67332 m!62257))

(declare-fun m!62259 () Bool)

(assert (=> b!67332 m!62259))

(assert (=> b!67334 m!62257))

(assert (=> b!67334 m!62257))

(assert (=> b!67334 m!62259))

(assert (=> b!66563 d!14091))

(declare-fun d!14093 () Bool)

(declare-fun e!44130 () Bool)

(assert (=> d!14093 e!44130))

(declare-fun res!36372 () Bool)

(assert (=> d!14093 (=> (not res!36372) (not e!44130))))

(declare-fun lt!29241 () ListLongMap!1379)

(assert (=> d!14093 (= res!36372 (contains!705 lt!29241 (_1!1052 (tuple2!2083 lt!28717 (minValue!2054 newMap!16)))))))

(declare-fun lt!29243 () List!1466)

(assert (=> d!14093 (= lt!29241 (ListLongMap!1380 lt!29243))))

(declare-fun lt!29240 () Unit!1818)

(declare-fun lt!29242 () Unit!1818)

(assert (=> d!14093 (= lt!29240 lt!29242)))

(assert (=> d!14093 (= (getValueByKey!128 lt!29243 (_1!1052 (tuple2!2083 lt!28717 (minValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!28717 (minValue!2054 newMap!16)))))))

(assert (=> d!14093 (= lt!29242 (lemmaContainsTupThenGetReturnValue!48 lt!29243 (_1!1052 (tuple2!2083 lt!28717 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28717 (minValue!2054 newMap!16)))))))

(assert (=> d!14093 (= lt!29243 (insertStrictlySorted!51 (toList!705 lt!28714) (_1!1052 (tuple2!2083 lt!28717 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28717 (minValue!2054 newMap!16)))))))

(assert (=> d!14093 (= (+!87 lt!28714 (tuple2!2083 lt!28717 (minValue!2054 newMap!16))) lt!29241)))

(declare-fun b!67335 () Bool)

(declare-fun res!36373 () Bool)

(assert (=> b!67335 (=> (not res!36373) (not e!44130))))

(assert (=> b!67335 (= res!36373 (= (getValueByKey!128 (toList!705 lt!29241) (_1!1052 (tuple2!2083 lt!28717 (minValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!28717 (minValue!2054 newMap!16))))))))

(declare-fun b!67336 () Bool)

(assert (=> b!67336 (= e!44130 (contains!707 (toList!705 lt!29241) (tuple2!2083 lt!28717 (minValue!2054 newMap!16))))))

(assert (= (and d!14093 res!36372) b!67335))

(assert (= (and b!67335 res!36373) b!67336))

(declare-fun m!62261 () Bool)

(assert (=> d!14093 m!62261))

(declare-fun m!62263 () Bool)

(assert (=> d!14093 m!62263))

(declare-fun m!62265 () Bool)

(assert (=> d!14093 m!62265))

(declare-fun m!62267 () Bool)

(assert (=> d!14093 m!62267))

(declare-fun m!62269 () Bool)

(assert (=> b!67335 m!62269))

(declare-fun m!62271 () Bool)

(assert (=> b!67336 m!62271))

(assert (=> b!66563 d!14093))

(declare-fun d!14095 () Bool)

(assert (=> d!14095 (= (apply!72 (+!87 lt!28716 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16))) lt!28721) (apply!72 lt!28716 lt!28721))))

(declare-fun lt!29244 () Unit!1818)

(assert (=> d!14095 (= lt!29244 (choose!377 lt!28716 lt!28719 (zeroValue!2054 newMap!16) lt!28721))))

(declare-fun e!44131 () Bool)

(assert (=> d!14095 e!44131))

(declare-fun res!36374 () Bool)

(assert (=> d!14095 (=> (not res!36374) (not e!44131))))

(assert (=> d!14095 (= res!36374 (contains!705 lt!28716 lt!28721))))

(assert (=> d!14095 (= (addApplyDifferent!48 lt!28716 lt!28719 (zeroValue!2054 newMap!16) lt!28721) lt!29244)))

(declare-fun b!67337 () Bool)

(assert (=> b!67337 (= e!44131 (not (= lt!28721 lt!28719)))))

(assert (= (and d!14095 res!36374) b!67337))

(assert (=> d!14095 m!60855))

(assert (=> d!14095 m!60873))

(declare-fun m!62273 () Bool)

(assert (=> d!14095 m!62273))

(assert (=> d!14095 m!60855))

(assert (=> d!14095 m!60857))

(declare-fun m!62275 () Bool)

(assert (=> d!14095 m!62275))

(assert (=> b!66563 d!14095))

(declare-fun d!14097 () Bool)

(declare-fun e!44132 () Bool)

(assert (=> d!14097 e!44132))

(declare-fun res!36375 () Bool)

(assert (=> d!14097 (=> (not res!36375) (not e!44132))))

(declare-fun lt!29246 () ListLongMap!1379)

(assert (=> d!14097 (= res!36375 (contains!705 lt!29246 (_1!1052 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16)))))))

(declare-fun lt!29248 () List!1466)

(assert (=> d!14097 (= lt!29246 (ListLongMap!1380 lt!29248))))

(declare-fun lt!29245 () Unit!1818)

(declare-fun lt!29247 () Unit!1818)

(assert (=> d!14097 (= lt!29245 lt!29247)))

(assert (=> d!14097 (= (getValueByKey!128 lt!29248 (_1!1052 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14097 (= lt!29247 (lemmaContainsTupThenGetReturnValue!48 lt!29248 (_1!1052 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14097 (= lt!29248 (insertStrictlySorted!51 (toList!705 lt!28716) (_1!1052 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14097 (= (+!87 lt!28716 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16))) lt!29246)))

(declare-fun b!67338 () Bool)

(declare-fun res!36376 () Bool)

(assert (=> b!67338 (=> (not res!36376) (not e!44132))))

(assert (=> b!67338 (= res!36376 (= (getValueByKey!128 (toList!705 lt!29246) (_1!1052 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16))))))))

(declare-fun b!67339 () Bool)

(assert (=> b!67339 (= e!44132 (contains!707 (toList!705 lt!29246) (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16))))))

(assert (= (and d!14097 res!36375) b!67338))

(assert (= (and b!67338 res!36376) b!67339))

(declare-fun m!62277 () Bool)

(assert (=> d!14097 m!62277))

(declare-fun m!62279 () Bool)

(assert (=> d!14097 m!62279))

(declare-fun m!62281 () Bool)

(assert (=> d!14097 m!62281))

(declare-fun m!62283 () Bool)

(assert (=> d!14097 m!62283))

(declare-fun m!62285 () Bool)

(assert (=> b!67338 m!62285))

(declare-fun m!62287 () Bool)

(assert (=> b!67339 m!62287))

(assert (=> b!66563 d!14097))

(declare-fun d!14099 () Bool)

(assert (=> d!14099 (= (apply!72 (+!87 lt!28707 (tuple2!2083 lt!28711 (minValue!2054 newMap!16))) lt!28705) (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!28707 (tuple2!2083 lt!28711 (minValue!2054 newMap!16)))) lt!28705)))))

(declare-fun bs!2884 () Bool)

(assert (= bs!2884 d!14099))

(declare-fun m!62289 () Bool)

(assert (=> bs!2884 m!62289))

(assert (=> bs!2884 m!62289))

(declare-fun m!62291 () Bool)

(assert (=> bs!2884 m!62291))

(assert (=> b!66563 d!14099))

(declare-fun d!14101 () Bool)

(assert (=> d!14101 (= (apply!72 lt!28716 lt!28721) (get!1123 (getValueByKey!128 (toList!705 lt!28716) lt!28721)))))

(declare-fun bs!2885 () Bool)

(assert (= bs!2885 d!14101))

(declare-fun m!62293 () Bool)

(assert (=> bs!2885 m!62293))

(assert (=> bs!2885 m!62293))

(declare-fun m!62295 () Bool)

(assert (=> bs!2885 m!62295))

(assert (=> b!66563 d!14101))

(declare-fun d!14103 () Bool)

(assert (=> d!14103 (= (apply!72 (+!87 lt!28714 (tuple2!2083 lt!28717 (minValue!2054 newMap!16))) lt!28718) (apply!72 lt!28714 lt!28718))))

(declare-fun lt!29249 () Unit!1818)

(assert (=> d!14103 (= lt!29249 (choose!377 lt!28714 lt!28717 (minValue!2054 newMap!16) lt!28718))))

(declare-fun e!44133 () Bool)

(assert (=> d!14103 e!44133))

(declare-fun res!36377 () Bool)

(assert (=> d!14103 (=> (not res!36377) (not e!44133))))

(assert (=> d!14103 (= res!36377 (contains!705 lt!28714 lt!28718))))

(assert (=> d!14103 (= (addApplyDifferent!48 lt!28714 lt!28717 (minValue!2054 newMap!16) lt!28718) lt!29249)))

(declare-fun b!67340 () Bool)

(assert (=> b!67340 (= e!44133 (not (= lt!28718 lt!28717)))))

(assert (= (and d!14103 res!36377) b!67340))

(assert (=> d!14103 m!60859))

(assert (=> d!14103 m!60863))

(declare-fun m!62297 () Bool)

(assert (=> d!14103 m!62297))

(assert (=> d!14103 m!60859))

(assert (=> d!14103 m!60861))

(declare-fun m!62299 () Bool)

(assert (=> d!14103 m!62299))

(assert (=> b!66563 d!14103))

(declare-fun d!14105 () Bool)

(assert (=> d!14105 (= (apply!72 lt!28707 lt!28705) (get!1123 (getValueByKey!128 (toList!705 lt!28707) lt!28705)))))

(declare-fun bs!2886 () Bool)

(assert (= bs!2886 d!14105))

(declare-fun m!62301 () Bool)

(assert (=> bs!2886 m!62301))

(assert (=> bs!2886 m!62301))

(declare-fun m!62303 () Bool)

(assert (=> bs!2886 m!62303))

(assert (=> b!66563 d!14105))

(declare-fun d!14107 () Bool)

(assert (=> d!14107 (= (apply!72 (+!87 lt!28716 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16))) lt!28721) (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!28716 (tuple2!2083 lt!28719 (zeroValue!2054 newMap!16)))) lt!28721)))))

(declare-fun bs!2887 () Bool)

(assert (= bs!2887 d!14107))

(declare-fun m!62305 () Bool)

(assert (=> bs!2887 m!62305))

(assert (=> bs!2887 m!62305))

(declare-fun m!62307 () Bool)

(assert (=> bs!2887 m!62307))

(assert (=> b!66563 d!14107))

(assert (=> b!66563 d!14033))

(declare-fun d!14109 () Bool)

(declare-fun e!44134 () Bool)

(assert (=> d!14109 e!44134))

(declare-fun res!36378 () Bool)

(assert (=> d!14109 (=> (not res!36378) (not e!44134))))

(declare-fun lt!29251 () ListLongMap!1379)

(assert (=> d!14109 (= res!36378 (contains!705 lt!29251 (_1!1052 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16)))))))

(declare-fun lt!29253 () List!1466)

(assert (=> d!14109 (= lt!29251 (ListLongMap!1380 lt!29253))))

(declare-fun lt!29250 () Unit!1818)

(declare-fun lt!29252 () Unit!1818)

(assert (=> d!14109 (= lt!29250 lt!29252)))

(assert (=> d!14109 (= (getValueByKey!128 lt!29253 (_1!1052 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14109 (= lt!29252 (lemmaContainsTupThenGetReturnValue!48 lt!29253 (_1!1052 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14109 (= lt!29253 (insertStrictlySorted!51 (toList!705 lt!28710) (_1!1052 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14109 (= (+!87 lt!28710 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16))) lt!29251)))

(declare-fun b!67341 () Bool)

(declare-fun res!36379 () Bool)

(assert (=> b!67341 (=> (not res!36379) (not e!44134))))

(assert (=> b!67341 (= res!36379 (= (getValueByKey!128 (toList!705 lt!29251) (_1!1052 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16))))))))

(declare-fun b!67342 () Bool)

(assert (=> b!67342 (= e!44134 (contains!707 (toList!705 lt!29251) (tuple2!2083 lt!28723 (zeroValue!2054 newMap!16))))))

(assert (= (and d!14109 res!36378) b!67341))

(assert (= (and b!67341 res!36379) b!67342))

(declare-fun m!62309 () Bool)

(assert (=> d!14109 m!62309))

(declare-fun m!62311 () Bool)

(assert (=> d!14109 m!62311))

(declare-fun m!62313 () Bool)

(assert (=> d!14109 m!62313))

(declare-fun m!62315 () Bool)

(assert (=> d!14109 m!62315))

(declare-fun m!62317 () Bool)

(assert (=> b!67341 m!62317))

(declare-fun m!62319 () Bool)

(assert (=> b!67342 m!62319))

(assert (=> b!66563 d!14109))

(declare-fun d!14111 () Bool)

(declare-fun lt!29254 () Bool)

(assert (=> d!14111 (= lt!29254 (select (content!72 Nil!1464) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!44136 () Bool)

(assert (=> d!14111 (= lt!29254 e!44136)))

(declare-fun res!36380 () Bool)

(assert (=> d!14111 (=> (not res!36380) (not e!44136))))

(assert (=> d!14111 (= res!36380 ((_ is Cons!1463) Nil!1464))))

(assert (=> d!14111 (= (contains!708 Nil!1464 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) lt!29254)))

(declare-fun b!67343 () Bool)

(declare-fun e!44135 () Bool)

(assert (=> b!67343 (= e!44136 e!44135)))

(declare-fun res!36381 () Bool)

(assert (=> b!67343 (=> res!36381 e!44135)))

(assert (=> b!67343 (= res!36381 (= (h!2047 Nil!1464) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67344 () Bool)

(assert (=> b!67344 (= e!44135 (contains!708 (t!4940 Nil!1464) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!14111 res!36380) b!67343))

(assert (= (and b!67343 (not res!36381)) b!67344))

(assert (=> d!14111 m!61487))

(assert (=> d!14111 m!60839))

(declare-fun m!62321 () Bool)

(assert (=> d!14111 m!62321))

(assert (=> b!67344 m!60839))

(declare-fun m!62323 () Bool)

(assert (=> b!67344 m!62323))

(assert (=> b!66776 d!14111))

(declare-fun d!14113 () Bool)

(assert (=> d!14113 (isDefined!82 (getValueByKey!128 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29255 () Unit!1818)

(assert (=> d!14113 (= lt!29255 (choose!384 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44137 () Bool)

(assert (=> d!14113 e!44137))

(declare-fun res!36382 () Bool)

(assert (=> d!14113 (=> (not res!36382) (not e!44137))))

(assert (=> d!14113 (= res!36382 (isStrictlySorted!284 (toList!705 lt!28687)))))

(assert (=> d!14113 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000) lt!29255)))

(declare-fun b!67345 () Bool)

(assert (=> b!67345 (= e!44137 (containsKey!132 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14113 res!36382) b!67345))

(assert (=> d!14113 m!60899))

(assert (=> d!14113 m!60899))

(assert (=> d!14113 m!61419))

(declare-fun m!62325 () Bool)

(assert (=> d!14113 m!62325))

(declare-fun m!62327 () Bool)

(assert (=> d!14113 m!62327))

(assert (=> b!67345 m!61415))

(assert (=> b!66895 d!14113))

(declare-fun d!14115 () Bool)

(assert (=> d!14115 (= (isDefined!82 (getValueByKey!128 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!313 (getValueByKey!128 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2888 () Bool)

(assert (= bs!2888 d!14115))

(assert (=> bs!2888 m!60899))

(declare-fun m!62329 () Bool)

(assert (=> bs!2888 m!62329))

(assert (=> b!66895 d!14115))

(declare-fun b!67349 () Bool)

(declare-fun e!44139 () Option!134)

(assert (=> b!67349 (= e!44139 None!132)))

(declare-fun b!67348 () Bool)

(assert (=> b!67348 (= e!44139 (getValueByKey!128 (t!4939 (toList!705 lt!28687)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67346 () Bool)

(declare-fun e!44138 () Option!134)

(assert (=> b!67346 (= e!44138 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28687)))))))

(declare-fun d!14117 () Bool)

(declare-fun c!9379 () Bool)

(assert (=> d!14117 (= c!9379 (and ((_ is Cons!1462) (toList!705 lt!28687)) (= (_1!1052 (h!2046 (toList!705 lt!28687))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14117 (= (getValueByKey!128 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000) e!44138)))

(declare-fun b!67347 () Bool)

(assert (=> b!67347 (= e!44138 e!44139)))

(declare-fun c!9380 () Bool)

(assert (=> b!67347 (= c!9380 (and ((_ is Cons!1462) (toList!705 lt!28687)) (not (= (_1!1052 (h!2046 (toList!705 lt!28687))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14117 c!9379) b!67346))

(assert (= (and d!14117 (not c!9379)) b!67347))

(assert (= (and b!67347 c!9380) b!67348))

(assert (= (and b!67347 (not c!9380)) b!67349))

(declare-fun m!62331 () Bool)

(assert (=> b!67348 m!62331))

(assert (=> b!66895 d!14117))

(declare-fun b!67353 () Bool)

(declare-fun e!44140 () Bool)

(assert (=> b!67353 (= e!44140 (and (bvsge (extraKeys!2017 (_2!1051 lt!28606)) #b00000000000000000000000000000000) (bvsle (extraKeys!2017 (_2!1051 lt!28606)) #b00000000000000000000000000000011) (bvsge (_vacant!384 (_2!1051 lt!28606)) #b00000000000000000000000000000000)))))

(declare-fun d!14119 () Bool)

(declare-fun res!36385 () Bool)

(assert (=> d!14119 (=> (not res!36385) (not e!44140))))

(assert (=> d!14119 (= res!36385 (validMask!0 (mask!6080 (_2!1051 lt!28606))))))

(assert (=> d!14119 (= (simpleValid!48 (_2!1051 lt!28606)) e!44140)))

(declare-fun b!67350 () Bool)

(declare-fun res!36383 () Bool)

(assert (=> b!67350 (=> (not res!36383) (not e!44140))))

(assert (=> b!67350 (= res!36383 (and (= (size!2059 (_values!2129 (_2!1051 lt!28606))) (bvadd (mask!6080 (_2!1051 lt!28606)) #b00000000000000000000000000000001)) (= (size!2058 (_keys!3785 (_2!1051 lt!28606))) (size!2059 (_values!2129 (_2!1051 lt!28606)))) (bvsge (_size!384 (_2!1051 lt!28606)) #b00000000000000000000000000000000) (bvsle (_size!384 (_2!1051 lt!28606)) (bvadd (mask!6080 (_2!1051 lt!28606)) #b00000000000000000000000000000001))))))

(declare-fun b!67352 () Bool)

(declare-fun res!36386 () Bool)

(assert (=> b!67352 (=> (not res!36386) (not e!44140))))

(assert (=> b!67352 (= res!36386 (= (size!2064 (_2!1051 lt!28606)) (bvadd (_size!384 (_2!1051 lt!28606)) (bvsdiv (bvadd (extraKeys!2017 (_2!1051 lt!28606)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!67351 () Bool)

(declare-fun res!36384 () Bool)

(assert (=> b!67351 (=> (not res!36384) (not e!44140))))

(assert (=> b!67351 (= res!36384 (bvsge (size!2064 (_2!1051 lt!28606)) (_size!384 (_2!1051 lt!28606))))))

(assert (= (and d!14119 res!36385) b!67350))

(assert (= (and b!67350 res!36383) b!67351))

(assert (= (and b!67351 res!36384) b!67352))

(assert (= (and b!67352 res!36386) b!67353))

(declare-fun m!62333 () Bool)

(assert (=> d!14119 m!62333))

(declare-fun m!62335 () Bool)

(assert (=> b!67352 m!62335))

(assert (=> b!67351 m!62335))

(assert (=> d!13697 d!14119))

(declare-fun d!14121 () Bool)

(assert (=> d!14121 (isDefined!82 (getValueByKey!128 (toList!705 lt!28521) (_1!1052 lt!28403)))))

(declare-fun lt!29256 () Unit!1818)

(assert (=> d!14121 (= lt!29256 (choose!384 (toList!705 lt!28521) (_1!1052 lt!28403)))))

(declare-fun e!44141 () Bool)

(assert (=> d!14121 e!44141))

(declare-fun res!36387 () Bool)

(assert (=> d!14121 (=> (not res!36387) (not e!44141))))

(assert (=> d!14121 (= res!36387 (isStrictlySorted!284 (toList!705 lt!28521)))))

(assert (=> d!14121 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28521) (_1!1052 lt!28403)) lt!29256)))

(declare-fun b!67354 () Bool)

(assert (=> b!67354 (= e!44141 (containsKey!132 (toList!705 lt!28521) (_1!1052 lt!28403)))))

(assert (= (and d!14121 res!36387) b!67354))

(assert (=> d!14121 m!60661))

(assert (=> d!14121 m!60661))

(assert (=> d!14121 m!61497))

(declare-fun m!62337 () Bool)

(assert (=> d!14121 m!62337))

(declare-fun m!62339 () Bool)

(assert (=> d!14121 m!62339))

(assert (=> b!67354 m!61493))

(assert (=> b!66950 d!14121))

(declare-fun d!14123 () Bool)

(assert (=> d!14123 (= (isDefined!82 (getValueByKey!128 (toList!705 lt!28521) (_1!1052 lt!28403))) (not (isEmpty!313 (getValueByKey!128 (toList!705 lt!28521) (_1!1052 lt!28403)))))))

(declare-fun bs!2889 () Bool)

(assert (= bs!2889 d!14123))

(assert (=> bs!2889 m!60661))

(declare-fun m!62341 () Bool)

(assert (=> bs!2889 m!62341))

(assert (=> b!66950 d!14123))

(assert (=> b!66950 d!13837))

(assert (=> b!66673 d!13775))

(declare-fun d!14125 () Bool)

(assert (=> d!14125 (= (apply!72 lt!29032 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1123 (getValueByKey!128 (toList!705 lt!29032) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2890 () Bool)

(assert (= bs!2890 d!14125))

(assert (=> bs!2890 m!60839))

(declare-fun m!62343 () Bool)

(assert (=> bs!2890 m!62343))

(assert (=> bs!2890 m!62343))

(declare-fun m!62345 () Bool)

(assert (=> bs!2890 m!62345))

(assert (=> b!66987 d!14125))

(declare-fun d!14127 () Bool)

(declare-fun c!9381 () Bool)

(assert (=> d!14127 (= c!9381 ((_ is ValueCellFull!881) (select (arr!1823 (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!44142 () V!2913)

(assert (=> d!14127 (= (get!1119 (select (arr!1823 (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44142)))

(declare-fun b!67355 () Bool)

(assert (=> b!67355 (= e!44142 (get!1121 (select (arr!1823 (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67356 () Bool)

(assert (=> b!67356 (= e!44142 (get!1122 (select (arr!1823 (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14127 c!9381) b!67355))

(assert (= (and d!14127 (not c!9381)) b!67356))

(assert (=> b!67355 m!61573))

(assert (=> b!67355 m!60885))

(declare-fun m!62347 () Bool)

(assert (=> b!67355 m!62347))

(assert (=> b!67356 m!61573))

(assert (=> b!67356 m!60885))

(declare-fun m!62349 () Bool)

(assert (=> b!67356 m!62349))

(assert (=> b!66987 d!14127))

(declare-fun d!14129 () Bool)

(assert (=> d!14129 (= (content!72 Nil!1464) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!13849 d!14129))

(declare-fun d!14131 () Bool)

(assert (=> d!14131 (isDefined!82 (getValueByKey!128 (toList!705 lt!28513) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29257 () Unit!1818)

(assert (=> d!14131 (= lt!29257 (choose!384 (toList!705 lt!28513) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44143 () Bool)

(assert (=> d!14131 e!44143))

(declare-fun res!36388 () Bool)

(assert (=> d!14131 (=> (not res!36388) (not e!44143))))

(assert (=> d!14131 (= res!36388 (isStrictlySorted!284 (toList!705 lt!28513)))))

(assert (=> d!14131 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28513) #b1000000000000000000000000000000000000000000000000000000000000000) lt!29257)))

(declare-fun b!67357 () Bool)

(assert (=> b!67357 (= e!44143 (containsKey!132 (toList!705 lt!28513) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14131 res!36388) b!67357))

(assert (=> d!14131 m!61271))

(assert (=> d!14131 m!61271))

(assert (=> d!14131 m!61273))

(declare-fun m!62351 () Bool)

(assert (=> d!14131 m!62351))

(assert (=> d!14131 m!62057))

(assert (=> b!67357 m!61267))

(assert (=> b!66810 d!14131))

(declare-fun d!14133 () Bool)

(assert (=> d!14133 (= (isDefined!82 (getValueByKey!128 (toList!705 lt!28513) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!313 (getValueByKey!128 (toList!705 lt!28513) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2891 () Bool)

(assert (= bs!2891 d!14133))

(assert (=> bs!2891 m!61271))

(declare-fun m!62353 () Bool)

(assert (=> bs!2891 m!62353))

(assert (=> b!66810 d!14133))

(declare-fun b!67361 () Bool)

(declare-fun e!44145 () Option!134)

(assert (=> b!67361 (= e!44145 None!132)))

(declare-fun b!67360 () Bool)

(assert (=> b!67360 (= e!44145 (getValueByKey!128 (t!4939 (toList!705 lt!28513)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67358 () Bool)

(declare-fun e!44144 () Option!134)

(assert (=> b!67358 (= e!44144 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28513)))))))

(declare-fun d!14135 () Bool)

(declare-fun c!9382 () Bool)

(assert (=> d!14135 (= c!9382 (and ((_ is Cons!1462) (toList!705 lt!28513)) (= (_1!1052 (h!2046 (toList!705 lt!28513))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14135 (= (getValueByKey!128 (toList!705 lt!28513) #b1000000000000000000000000000000000000000000000000000000000000000) e!44144)))

(declare-fun b!67359 () Bool)

(assert (=> b!67359 (= e!44144 e!44145)))

(declare-fun c!9383 () Bool)

(assert (=> b!67359 (= c!9383 (and ((_ is Cons!1462) (toList!705 lt!28513)) (not (= (_1!1052 (h!2046 (toList!705 lt!28513))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14135 c!9382) b!67358))

(assert (= (and d!14135 (not c!9382)) b!67359))

(assert (= (and b!67359 c!9383) b!67360))

(assert (= (and b!67359 (not c!9383)) b!67361))

(declare-fun m!62355 () Bool)

(assert (=> b!67360 m!62355))

(assert (=> b!66810 d!14135))

(declare-fun d!14137 () Bool)

(declare-fun res!36389 () Bool)

(declare-fun e!44146 () Bool)

(assert (=> d!14137 (=> res!36389 e!44146)))

(assert (=> d!14137 (= res!36389 (or ((_ is Nil!1463) lt!28875) ((_ is Nil!1463) (t!4939 lt!28875))))))

(assert (=> d!14137 (= (isStrictlySorted!284 lt!28875) e!44146)))

(declare-fun b!67362 () Bool)

(declare-fun e!44147 () Bool)

(assert (=> b!67362 (= e!44146 e!44147)))

(declare-fun res!36390 () Bool)

(assert (=> b!67362 (=> (not res!36390) (not e!44147))))

(assert (=> b!67362 (= res!36390 (bvslt (_1!1052 (h!2046 lt!28875)) (_1!1052 (h!2046 (t!4939 lt!28875)))))))

(declare-fun b!67363 () Bool)

(assert (=> b!67363 (= e!44147 (isStrictlySorted!284 (t!4939 lt!28875)))))

(assert (= (and d!14137 (not res!36389)) b!67362))

(assert (= (and b!67362 res!36390) b!67363))

(declare-fun m!62357 () Bool)

(assert (=> b!67363 m!62357))

(assert (=> d!13737 d!14137))

(declare-fun d!14139 () Bool)

(declare-fun res!36391 () Bool)

(declare-fun e!44148 () Bool)

(assert (=> d!14139 (=> res!36391 e!44148)))

(assert (=> d!14139 (= res!36391 (or ((_ is Nil!1463) (toList!705 (+!87 lt!28402 lt!28403))) ((_ is Nil!1463) (t!4939 (toList!705 (+!87 lt!28402 lt!28403))))))))

(assert (=> d!14139 (= (isStrictlySorted!284 (toList!705 (+!87 lt!28402 lt!28403))) e!44148)))

(declare-fun b!67364 () Bool)

(declare-fun e!44149 () Bool)

(assert (=> b!67364 (= e!44148 e!44149)))

(declare-fun res!36392 () Bool)

(assert (=> b!67364 (=> (not res!36392) (not e!44149))))

(assert (=> b!67364 (= res!36392 (bvslt (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 lt!28403)))) (_1!1052 (h!2046 (t!4939 (toList!705 (+!87 lt!28402 lt!28403)))))))))

(declare-fun b!67365 () Bool)

(assert (=> b!67365 (= e!44149 (isStrictlySorted!284 (t!4939 (toList!705 (+!87 lt!28402 lt!28403)))))))

(assert (= (and d!14139 (not res!36391)) b!67364))

(assert (= (and b!67364 res!36392) b!67365))

(declare-fun m!62359 () Bool)

(assert (=> b!67365 m!62359))

(assert (=> d!13737 d!14139))

(declare-fun d!14141 () Bool)

(declare-fun res!36393 () Bool)

(declare-fun e!44150 () Bool)

(assert (=> d!14141 (=> res!36393 e!44150)))

(assert (=> d!14141 (= res!36393 (or ((_ is Nil!1463) lt!28999) ((_ is Nil!1463) (t!4939 lt!28999))))))

(assert (=> d!14141 (= (isStrictlySorted!284 lt!28999) e!44150)))

(declare-fun b!67366 () Bool)

(declare-fun e!44151 () Bool)

(assert (=> b!67366 (= e!44150 e!44151)))

(declare-fun res!36394 () Bool)

(assert (=> b!67366 (=> (not res!36394) (not e!44151))))

(assert (=> b!67366 (= res!36394 (bvslt (_1!1052 (h!2046 lt!28999)) (_1!1052 (h!2046 (t!4939 lt!28999)))))))

(declare-fun b!67367 () Bool)

(assert (=> b!67367 (= e!44151 (isStrictlySorted!284 (t!4939 lt!28999)))))

(assert (= (and d!14141 (not res!36393)) b!67366))

(assert (= (and b!67366 res!36394) b!67367))

(declare-fun m!62361 () Bool)

(assert (=> b!67367 m!62361))

(assert (=> d!13847 d!14141))

(declare-fun d!14143 () Bool)

(declare-fun res!36395 () Bool)

(declare-fun e!44152 () Bool)

(assert (=> d!14143 (=> res!36395 e!44152)))

(assert (=> d!14143 (= res!36395 (or ((_ is Nil!1463) (toList!705 (+!87 lt!28402 lt!28408))) ((_ is Nil!1463) (t!4939 (toList!705 (+!87 lt!28402 lt!28408))))))))

(assert (=> d!14143 (= (isStrictlySorted!284 (toList!705 (+!87 lt!28402 lt!28408))) e!44152)))

(declare-fun b!67368 () Bool)

(declare-fun e!44153 () Bool)

(assert (=> b!67368 (= e!44152 e!44153)))

(declare-fun res!36396 () Bool)

(assert (=> b!67368 (=> (not res!36396) (not e!44153))))

(assert (=> b!67368 (= res!36396 (bvslt (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 lt!28408)))) (_1!1052 (h!2046 (t!4939 (toList!705 (+!87 lt!28402 lt!28408)))))))))

(declare-fun b!67369 () Bool)

(assert (=> b!67369 (= e!44153 (isStrictlySorted!284 (t!4939 (toList!705 (+!87 lt!28402 lt!28408)))))))

(assert (= (and d!14143 (not res!36395)) b!67368))

(assert (= (and b!67368 res!36396) b!67369))

(declare-fun m!62363 () Bool)

(assert (=> b!67369 m!62363))

(assert (=> d!13847 d!14143))

(declare-fun d!14145 () Bool)

(declare-fun res!36397 () Bool)

(declare-fun e!44154 () Bool)

(assert (=> d!14145 (=> res!36397 e!44154)))

(assert (=> d!14145 (= res!36397 (and ((_ is Cons!1462) (toList!705 lt!28496)) (= (_1!1052 (h!2046 (toList!705 lt!28496))) (_1!1052 lt!28408))))))

(assert (=> d!14145 (= (containsKey!132 (toList!705 lt!28496) (_1!1052 lt!28408)) e!44154)))

(declare-fun b!67370 () Bool)

(declare-fun e!44155 () Bool)

(assert (=> b!67370 (= e!44154 e!44155)))

(declare-fun res!36398 () Bool)

(assert (=> b!67370 (=> (not res!36398) (not e!44155))))

(assert (=> b!67370 (= res!36398 (and (or (not ((_ is Cons!1462) (toList!705 lt!28496))) (bvsle (_1!1052 (h!2046 (toList!705 lt!28496))) (_1!1052 lt!28408))) ((_ is Cons!1462) (toList!705 lt!28496)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28496))) (_1!1052 lt!28408))))))

(declare-fun b!67371 () Bool)

(assert (=> b!67371 (= e!44155 (containsKey!132 (t!4939 (toList!705 lt!28496)) (_1!1052 lt!28408)))))

(assert (= (and d!14145 (not res!36397)) b!67370))

(assert (= (and b!67370 res!36398) b!67371))

(declare-fun m!62365 () Bool)

(assert (=> b!67371 m!62365))

(assert (=> d!13731 d!14145))

(declare-fun d!14147 () Bool)

(declare-fun lt!29258 () Bool)

(assert (=> d!14147 (= lt!29258 (select (content!71 (toList!705 lt!29047)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun e!44156 () Bool)

(assert (=> d!14147 (= lt!29258 e!44156)))

(declare-fun res!36400 () Bool)

(assert (=> d!14147 (=> (not res!36400) (not e!44156))))

(assert (=> d!14147 (= res!36400 ((_ is Cons!1462) (toList!705 lt!29047)))))

(assert (=> d!14147 (= (contains!707 (toList!705 lt!29047) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!29258)))

(declare-fun b!67372 () Bool)

(declare-fun e!44157 () Bool)

(assert (=> b!67372 (= e!44156 e!44157)))

(declare-fun res!36399 () Bool)

(assert (=> b!67372 (=> res!36399 e!44157)))

(assert (=> b!67372 (= res!36399 (= (h!2046 (toList!705 lt!29047)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!67373 () Bool)

(assert (=> b!67373 (= e!44157 (contains!707 (t!4939 (toList!705 lt!29047)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!14147 res!36400) b!67372))

(assert (= (and b!67372 (not res!36399)) b!67373))

(declare-fun m!62367 () Bool)

(assert (=> d!14147 m!62367))

(declare-fun m!62369 () Bool)

(assert (=> d!14147 m!62369))

(declare-fun m!62371 () Bool)

(assert (=> b!67373 m!62371))

(assert (=> b!67005 d!14147))

(declare-fun d!14149 () Bool)

(declare-fun e!44158 () Bool)

(assert (=> d!14149 e!44158))

(declare-fun res!36401 () Bool)

(assert (=> d!14149 (=> res!36401 e!44158)))

(declare-fun lt!29262 () Bool)

(assert (=> d!14149 (= res!36401 (not lt!29262))))

(declare-fun lt!29261 () Bool)

(assert (=> d!14149 (= lt!29262 lt!29261)))

(declare-fun lt!29259 () Unit!1818)

(declare-fun e!44159 () Unit!1818)

(assert (=> d!14149 (= lt!29259 e!44159)))

(declare-fun c!9384 () Bool)

(assert (=> d!14149 (= c!9384 lt!29261)))

(assert (=> d!14149 (= lt!29261 (containsKey!132 (toList!705 (getCurrentListMap!401 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))

(assert (=> d!14149 (= (contains!705 (getCurrentListMap!401 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))) lt!29262)))

(declare-fun b!67374 () Bool)

(declare-fun lt!29260 () Unit!1818)

(assert (=> b!67374 (= e!44159 lt!29260)))

(assert (=> b!67374 (= lt!29260 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 (getCurrentListMap!401 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))

(assert (=> b!67374 (isDefined!82 (getValueByKey!128 (toList!705 (getCurrentListMap!401 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))

(declare-fun b!67375 () Bool)

(declare-fun Unit!1863 () Unit!1818)

(assert (=> b!67375 (= e!44159 Unit!1863)))

(declare-fun b!67376 () Bool)

(assert (=> b!67376 (= e!44158 (isDefined!82 (getValueByKey!128 (toList!705 (getCurrentListMap!401 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615)))))))

(assert (= (and d!14149 c!9384) b!67374))

(assert (= (and d!14149 (not c!9384)) b!67375))

(assert (= (and d!14149 (not res!36401)) b!67376))

(assert (=> d!14149 m!60741))

(declare-fun m!62373 () Bool)

(assert (=> d!14149 m!62373))

(assert (=> b!67374 m!60741))

(declare-fun m!62375 () Bool)

(assert (=> b!67374 m!62375))

(assert (=> b!67374 m!60741))

(declare-fun m!62377 () Bool)

(assert (=> b!67374 m!62377))

(assert (=> b!67374 m!62377))

(declare-fun m!62379 () Bool)

(assert (=> b!67374 m!62379))

(assert (=> b!67376 m!60741))

(assert (=> b!67376 m!62377))

(assert (=> b!67376 m!62377))

(assert (=> b!67376 m!62379))

(assert (=> b!66849 d!14149))

(declare-fun b!67377 () Bool)

(declare-fun e!44171 () Bool)

(declare-fun call!5653 () Bool)

(assert (=> b!67377 (= e!44171 (not call!5653))))

(declare-fun b!67378 () Bool)

(declare-fun c!9386 () Bool)

(assert (=> b!67378 (= c!9386 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44166 () ListLongMap!1379)

(declare-fun e!44160 () ListLongMap!1379)

(assert (=> b!67378 (= e!44166 e!44160)))

(declare-fun b!67379 () Bool)

(declare-fun res!36404 () Bool)

(declare-fun e!44167 () Bool)

(assert (=> b!67379 (=> (not res!36404) (not e!44167))))

(declare-fun e!44170 () Bool)

(assert (=> b!67379 (= res!36404 e!44170)))

(declare-fun res!36402 () Bool)

(assert (=> b!67379 (=> res!36402 e!44170)))

(declare-fun e!44165 () Bool)

(assert (=> b!67379 (= res!36402 (not e!44165))))

(declare-fun res!36407 () Bool)

(assert (=> b!67379 (=> (not res!36407) (not e!44165))))

(assert (=> b!67379 (= res!36407 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67380 () Bool)

(declare-fun e!44163 () ListLongMap!1379)

(assert (=> b!67380 (= e!44163 e!44166)))

(declare-fun c!9388 () Bool)

(assert (=> b!67380 (= c!9388 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67381 () Bool)

(declare-fun e!44172 () Unit!1818)

(declare-fun Unit!1864 () Unit!1818)

(assert (=> b!67381 (= e!44172 Unit!1864)))

(declare-fun b!67382 () Bool)

(declare-fun res!36408 () Bool)

(assert (=> b!67382 (=> (not res!36408) (not e!44167))))

(declare-fun e!44168 () Bool)

(assert (=> b!67382 (= res!36408 e!44168)))

(declare-fun c!9387 () Bool)

(assert (=> b!67382 (= c!9387 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5650 () Bool)

(declare-fun call!5659 () Bool)

(declare-fun lt!29282 () ListLongMap!1379)

(assert (=> bm!5650 (= call!5659 (contains!705 lt!29282 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67383 () Bool)

(declare-fun lt!29278 () Unit!1818)

(assert (=> b!67383 (= e!44172 lt!29278)))

(declare-fun lt!29268 () ListLongMap!1379)

(assert (=> b!67383 (= lt!29268 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29281 () (_ BitVec 64))

(assert (=> b!67383 (= lt!29281 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29280 () (_ BitVec 64))

(assert (=> b!67383 (= lt!29280 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29266 () Unit!1818)

(assert (=> b!67383 (= lt!29266 (addStillContains!48 lt!29268 lt!29281 (zeroValue!2054 newMap!16) lt!29280))))

(assert (=> b!67383 (contains!705 (+!87 lt!29268 (tuple2!2083 lt!29281 (zeroValue!2054 newMap!16))) lt!29280)))

(declare-fun lt!29273 () Unit!1818)

(assert (=> b!67383 (= lt!29273 lt!29266)))

(declare-fun lt!29265 () ListLongMap!1379)

(assert (=> b!67383 (= lt!29265 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29269 () (_ BitVec 64))

(assert (=> b!67383 (= lt!29269 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29263 () (_ BitVec 64))

(assert (=> b!67383 (= lt!29263 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29284 () Unit!1818)

(assert (=> b!67383 (= lt!29284 (addApplyDifferent!48 lt!29265 lt!29269 (minValue!2054 newMap!16) lt!29263))))

(assert (=> b!67383 (= (apply!72 (+!87 lt!29265 (tuple2!2083 lt!29269 (minValue!2054 newMap!16))) lt!29263) (apply!72 lt!29265 lt!29263))))

(declare-fun lt!29267 () Unit!1818)

(assert (=> b!67383 (= lt!29267 lt!29284)))

(declare-fun lt!29274 () ListLongMap!1379)

(assert (=> b!67383 (= lt!29274 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29277 () (_ BitVec 64))

(assert (=> b!67383 (= lt!29277 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29279 () (_ BitVec 64))

(assert (=> b!67383 (= lt!29279 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29271 () Unit!1818)

(assert (=> b!67383 (= lt!29271 (addApplyDifferent!48 lt!29274 lt!29277 (zeroValue!2054 newMap!16) lt!29279))))

(assert (=> b!67383 (= (apply!72 (+!87 lt!29274 (tuple2!2083 lt!29277 (zeroValue!2054 newMap!16))) lt!29279) (apply!72 lt!29274 lt!29279))))

(declare-fun lt!29283 () Unit!1818)

(assert (=> b!67383 (= lt!29283 lt!29271)))

(declare-fun lt!29272 () ListLongMap!1379)

(assert (=> b!67383 (= lt!29272 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29275 () (_ BitVec 64))

(assert (=> b!67383 (= lt!29275 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29276 () (_ BitVec 64))

(assert (=> b!67383 (= lt!29276 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67383 (= lt!29278 (addApplyDifferent!48 lt!29272 lt!29275 (minValue!2054 newMap!16) lt!29276))))

(assert (=> b!67383 (= (apply!72 (+!87 lt!29272 (tuple2!2083 lt!29275 (minValue!2054 newMap!16))) lt!29276) (apply!72 lt!29272 lt!29276))))

(declare-fun d!14151 () Bool)

(assert (=> d!14151 e!44167))

(declare-fun res!36410 () Bool)

(assert (=> d!14151 (=> (not res!36410) (not e!44167))))

(assert (=> d!14151 (= res!36410 (or (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))))

(declare-fun lt!29264 () ListLongMap!1379)

(assert (=> d!14151 (= lt!29282 lt!29264)))

(declare-fun lt!29270 () Unit!1818)

(assert (=> d!14151 (= lt!29270 e!44172)))

(declare-fun c!9390 () Bool)

(declare-fun e!44164 () Bool)

(assert (=> d!14151 (= c!9390 e!44164)))

(declare-fun res!36409 () Bool)

(assert (=> d!14151 (=> (not res!36409) (not e!44164))))

(assert (=> d!14151 (= res!36409 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!14151 (= lt!29264 e!44163)))

(declare-fun c!9389 () Bool)

(assert (=> d!14151 (= c!9389 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14151 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!14151 (= (getCurrentListMap!401 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29282)))

(declare-fun bm!5651 () Bool)

(declare-fun call!5657 () ListLongMap!1379)

(declare-fun call!5654 () ListLongMap!1379)

(assert (=> bm!5651 (= call!5657 call!5654)))

(declare-fun b!67384 () Bool)

(assert (=> b!67384 (= e!44168 (not call!5659))))

(declare-fun b!67385 () Bool)

(assert (=> b!67385 (= e!44166 call!5657)))

(declare-fun b!67386 () Bool)

(declare-fun e!44162 () Bool)

(assert (=> b!67386 (= e!44162 (= (apply!72 lt!29282 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun b!67387 () Bool)

(assert (=> b!67387 (= e!44167 e!44171)))

(declare-fun c!9385 () Bool)

(assert (=> b!67387 (= c!9385 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67388 () Bool)

(declare-fun e!44169 () Bool)

(assert (=> b!67388 (= e!44169 (= (apply!72 lt!29282 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 lt!28607) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67388 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 lt!28607)))))

(assert (=> b!67388 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67389 () Bool)

(assert (=> b!67389 (= e!44163 (+!87 call!5654 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun bm!5652 () Bool)

(declare-fun call!5655 () ListLongMap!1379)

(declare-fun call!5658 () ListLongMap!1379)

(assert (=> bm!5652 (= call!5655 call!5658)))

(declare-fun bm!5653 () Bool)

(declare-fun call!5656 () ListLongMap!1379)

(assert (=> bm!5653 (= call!5656 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!67390 () Bool)

(assert (=> b!67390 (= e!44160 call!5655)))

(declare-fun b!67391 () Bool)

(declare-fun e!44161 () Bool)

(assert (=> b!67391 (= e!44161 (= (apply!72 lt!29282 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun bm!5654 () Bool)

(assert (=> bm!5654 (= call!5658 call!5656)))

(declare-fun b!67392 () Bool)

(assert (=> b!67392 (= e!44165 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67393 () Bool)

(assert (=> b!67393 (= e!44170 e!44169)))

(declare-fun res!36405 () Bool)

(assert (=> b!67393 (=> (not res!36405) (not e!44169))))

(assert (=> b!67393 (= res!36405 (contains!705 lt!29282 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67393 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67394 () Bool)

(assert (=> b!67394 (= e!44171 e!44161)))

(declare-fun res!36403 () Bool)

(assert (=> b!67394 (= res!36403 call!5653)))

(assert (=> b!67394 (=> (not res!36403) (not e!44161))))

(declare-fun bm!5655 () Bool)

(assert (=> bm!5655 (= call!5654 (+!87 (ite c!9389 call!5656 (ite c!9388 call!5658 call!5655)) (ite (or c!9389 c!9388) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!67395 () Bool)

(assert (=> b!67395 (= e!44168 e!44162)))

(declare-fun res!36406 () Bool)

(assert (=> b!67395 (= res!36406 call!5659)))

(assert (=> b!67395 (=> (not res!36406) (not e!44162))))

(declare-fun b!67396 () Bool)

(assert (=> b!67396 (= e!44160 call!5657)))

(declare-fun b!67397 () Bool)

(assert (=> b!67397 (= e!44164 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5656 () Bool)

(assert (=> bm!5656 (= call!5653 (contains!705 lt!29282 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14151 c!9389) b!67389))

(assert (= (and d!14151 (not c!9389)) b!67380))

(assert (= (and b!67380 c!9388) b!67385))

(assert (= (and b!67380 (not c!9388)) b!67378))

(assert (= (and b!67378 c!9386) b!67396))

(assert (= (and b!67378 (not c!9386)) b!67390))

(assert (= (or b!67396 b!67390) bm!5652))

(assert (= (or b!67385 bm!5652) bm!5654))

(assert (= (or b!67385 b!67396) bm!5651))

(assert (= (or b!67389 bm!5654) bm!5653))

(assert (= (or b!67389 bm!5651) bm!5655))

(assert (= (and d!14151 res!36409) b!67397))

(assert (= (and d!14151 c!9390) b!67383))

(assert (= (and d!14151 (not c!9390)) b!67381))

(assert (= (and d!14151 res!36410) b!67379))

(assert (= (and b!67379 res!36407) b!67392))

(assert (= (and b!67379 (not res!36402)) b!67393))

(assert (= (and b!67393 res!36405) b!67388))

(assert (= (and b!67379 res!36404) b!67382))

(assert (= (and b!67382 c!9387) b!67395))

(assert (= (and b!67382 (not c!9387)) b!67384))

(assert (= (and b!67395 res!36406) b!67386))

(assert (= (or b!67395 b!67384) bm!5650))

(assert (= (and b!67382 res!36408) b!67387))

(assert (= (and b!67387 c!9385) b!67394))

(assert (= (and b!67387 (not c!9385)) b!67377))

(assert (= (and b!67394 res!36403) b!67391))

(assert (= (or b!67394 b!67377) bm!5656))

(declare-fun b_lambda!3003 () Bool)

(assert (=> (not b_lambda!3003) (not b!67388)))

(assert (=> b!67388 t!4952))

(declare-fun b_and!4149 () Bool)

(assert (= b_and!4145 (and (=> t!4952 result!2587) b_and!4149)))

(assert (=> b!67388 t!4954))

(declare-fun b_and!4151 () Bool)

(assert (= b_and!4147 (and (=> t!4954 result!2589) b_and!4151)))

(declare-fun m!62381 () Bool)

(assert (=> b!67389 m!62381))

(assert (=> d!14151 m!60845))

(declare-fun m!62383 () Bool)

(assert (=> bm!5653 m!62383))

(declare-fun m!62385 () Bool)

(assert (=> b!67391 m!62385))

(assert (=> b!67392 m!60839))

(assert (=> b!67392 m!60839))

(assert (=> b!67392 m!60841))

(declare-fun m!62387 () Bool)

(assert (=> b!67383 m!62387))

(declare-fun m!62389 () Bool)

(assert (=> b!67383 m!62389))

(declare-fun m!62391 () Bool)

(assert (=> b!67383 m!62391))

(declare-fun m!62393 () Bool)

(assert (=> b!67383 m!62393))

(assert (=> b!67383 m!62387))

(declare-fun m!62395 () Bool)

(assert (=> b!67383 m!62395))

(declare-fun m!62397 () Bool)

(assert (=> b!67383 m!62397))

(assert (=> b!67383 m!62391))

(declare-fun m!62399 () Bool)

(assert (=> b!67383 m!62399))

(declare-fun m!62401 () Bool)

(assert (=> b!67383 m!62401))

(declare-fun m!62403 () Bool)

(assert (=> b!67383 m!62403))

(declare-fun m!62405 () Bool)

(assert (=> b!67383 m!62405))

(declare-fun m!62407 () Bool)

(assert (=> b!67383 m!62407))

(assert (=> b!67383 m!62383))

(declare-fun m!62409 () Bool)

(assert (=> b!67383 m!62409))

(assert (=> b!67383 m!62405))

(declare-fun m!62411 () Bool)

(assert (=> b!67383 m!62411))

(assert (=> b!67383 m!60839))

(declare-fun m!62413 () Bool)

(assert (=> b!67383 m!62413))

(assert (=> b!67383 m!62395))

(declare-fun m!62415 () Bool)

(assert (=> b!67383 m!62415))

(declare-fun m!62417 () Bool)

(assert (=> bm!5655 m!62417))

(declare-fun m!62419 () Bool)

(assert (=> bm!5656 m!62419))

(assert (=> b!67388 m!60885))

(assert (=> b!67388 m!60839))

(assert (=> b!67388 m!60839))

(declare-fun m!62421 () Bool)

(assert (=> b!67388 m!62421))

(declare-fun m!62423 () Bool)

(assert (=> b!67388 m!62423))

(assert (=> b!67388 m!60885))

(declare-fun m!62425 () Bool)

(assert (=> b!67388 m!62425))

(assert (=> b!67388 m!62423))

(declare-fun m!62427 () Bool)

(assert (=> bm!5650 m!62427))

(assert (=> b!67393 m!60839))

(assert (=> b!67393 m!60839))

(declare-fun m!62429 () Bool)

(assert (=> b!67393 m!62429))

(declare-fun m!62431 () Bool)

(assert (=> b!67386 m!62431))

(assert (=> b!67397 m!60839))

(assert (=> b!67397 m!60839))

(assert (=> b!67397 m!60841))

(assert (=> b!66849 d!14151))

(declare-fun d!14153 () Bool)

(declare-fun e!44173 () Bool)

(assert (=> d!14153 e!44173))

(declare-fun res!36411 () Bool)

(assert (=> d!14153 (=> res!36411 e!44173)))

(declare-fun lt!29288 () Bool)

(assert (=> d!14153 (= res!36411 (not lt!29288))))

(declare-fun lt!29287 () Bool)

(assert (=> d!14153 (= lt!29288 lt!29287)))

(declare-fun lt!29285 () Unit!1818)

(declare-fun e!44174 () Unit!1818)

(assert (=> d!14153 (= lt!29285 e!44174)))

(declare-fun c!9391 () Bool)

(assert (=> d!14153 (= c!9391 lt!29287)))

(assert (=> d!14153 (= lt!29287 (containsKey!132 (toList!705 lt!29047) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!14153 (= (contains!705 lt!29047 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29288)))

(declare-fun b!67398 () Bool)

(declare-fun lt!29286 () Unit!1818)

(assert (=> b!67398 (= e!44174 lt!29286)))

(assert (=> b!67398 (= lt!29286 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!29047) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> b!67398 (isDefined!82 (getValueByKey!128 (toList!705 lt!29047) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67399 () Bool)

(declare-fun Unit!1865 () Unit!1818)

(assert (=> b!67399 (= e!44174 Unit!1865)))

(declare-fun b!67400 () Bool)

(assert (=> b!67400 (= e!44173 (isDefined!82 (getValueByKey!128 (toList!705 lt!29047) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14153 c!9391) b!67398))

(assert (= (and d!14153 (not c!9391)) b!67399))

(assert (= (and d!14153 (not res!36411)) b!67400))

(declare-fun m!62433 () Bool)

(assert (=> d!14153 m!62433))

(declare-fun m!62435 () Bool)

(assert (=> b!67398 m!62435))

(assert (=> b!67398 m!61619))

(assert (=> b!67398 m!61619))

(declare-fun m!62437 () Bool)

(assert (=> b!67398 m!62437))

(assert (=> b!67400 m!61619))

(assert (=> b!67400 m!61619))

(assert (=> b!67400 m!62437))

(assert (=> d!13875 d!14153))

(declare-fun b!67404 () Bool)

(declare-fun e!44176 () Option!134)

(assert (=> b!67404 (= e!44176 None!132)))

(declare-fun b!67403 () Bool)

(assert (=> b!67403 (= e!44176 (getValueByKey!128 (t!4939 lt!29049) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67401 () Bool)

(declare-fun e!44175 () Option!134)

(assert (=> b!67401 (= e!44175 (Some!133 (_2!1052 (h!2046 lt!29049))))))

(declare-fun d!14155 () Bool)

(declare-fun c!9392 () Bool)

(assert (=> d!14155 (= c!9392 (and ((_ is Cons!1462) lt!29049) (= (_1!1052 (h!2046 lt!29049)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14155 (= (getValueByKey!128 lt!29049 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44175)))

(declare-fun b!67402 () Bool)

(assert (=> b!67402 (= e!44175 e!44176)))

(declare-fun c!9393 () Bool)

(assert (=> b!67402 (= c!9393 (and ((_ is Cons!1462) lt!29049) (not (= (_1!1052 (h!2046 lt!29049)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14155 c!9392) b!67401))

(assert (= (and d!14155 (not c!9392)) b!67402))

(assert (= (and b!67402 c!9393) b!67403))

(assert (= (and b!67402 (not c!9393)) b!67404))

(declare-fun m!62439 () Bool)

(assert (=> b!67403 m!62439))

(assert (=> d!13875 d!14155))

(declare-fun d!14157 () Bool)

(assert (=> d!14157 (= (getValueByKey!128 lt!29049 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!29289 () Unit!1818)

(assert (=> d!14157 (= lt!29289 (choose!375 lt!29049 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun e!44177 () Bool)

(assert (=> d!14157 e!44177))

(declare-fun res!36412 () Bool)

(assert (=> d!14157 (=> (not res!36412) (not e!44177))))

(assert (=> d!14157 (= res!36412 (isStrictlySorted!284 lt!29049))))

(assert (=> d!14157 (= (lemmaContainsTupThenGetReturnValue!48 lt!29049 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29289)))

(declare-fun b!67405 () Bool)

(declare-fun res!36413 () Bool)

(assert (=> b!67405 (=> (not res!36413) (not e!44177))))

(assert (=> b!67405 (= res!36413 (containsKey!132 lt!29049 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67406 () Bool)

(assert (=> b!67406 (= e!44177 (contains!707 lt!29049 (tuple2!2083 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14157 res!36412) b!67405))

(assert (= (and b!67405 res!36413) b!67406))

(assert (=> d!14157 m!61613))

(declare-fun m!62441 () Bool)

(assert (=> d!14157 m!62441))

(declare-fun m!62443 () Bool)

(assert (=> d!14157 m!62443))

(declare-fun m!62445 () Bool)

(assert (=> b!67405 m!62445))

(declare-fun m!62447 () Bool)

(assert (=> b!67406 m!62447))

(assert (=> d!13875 d!14157))

(declare-fun bm!5657 () Bool)

(declare-fun call!5661 () List!1466)

(declare-fun call!5662 () List!1466)

(assert (=> bm!5657 (= call!5661 call!5662)))

(declare-fun d!14159 () Bool)

(declare-fun e!44179 () Bool)

(assert (=> d!14159 e!44179))

(declare-fun res!36415 () Bool)

(assert (=> d!14159 (=> (not res!36415) (not e!44179))))

(declare-fun lt!29290 () List!1466)

(assert (=> d!14159 (= res!36415 (isStrictlySorted!284 lt!29290))))

(declare-fun e!44180 () List!1466)

(assert (=> d!14159 (= lt!29290 e!44180)))

(declare-fun c!9395 () Bool)

(assert (=> d!14159 (= c!9395 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) (bvslt (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14159 (isStrictlySorted!284 (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!14159 (= (insertStrictlySorted!51 (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29290)))

(declare-fun b!67407 () Bool)

(declare-fun c!9394 () Bool)

(assert (=> b!67407 (= c!9394 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) (bvsgt (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun e!44181 () List!1466)

(declare-fun e!44178 () List!1466)

(assert (=> b!67407 (= e!44181 e!44178)))

(declare-fun e!44182 () List!1466)

(declare-fun c!9397 () Bool)

(declare-fun b!67408 () Bool)

(assert (=> b!67408 (= e!44182 (ite c!9397 (t!4939 (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) (ite c!9394 (Cons!1462 (h!2046 (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) (t!4939 (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))) Nil!1463)))))

(declare-fun b!67409 () Bool)

(assert (=> b!67409 (= e!44180 e!44181)))

(assert (=> b!67409 (= c!9397 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun bm!5658 () Bool)

(declare-fun call!5660 () List!1466)

(assert (=> bm!5658 (= call!5662 call!5660)))

(declare-fun b!67410 () Bool)

(assert (=> b!67410 (= e!44182 (insertStrictlySorted!51 (t!4939 (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67411 () Bool)

(assert (=> b!67411 (= e!44179 (contains!707 lt!29290 (tuple2!2083 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!67412 () Bool)

(assert (=> b!67412 (= e!44181 call!5662)))

(declare-fun b!67413 () Bool)

(assert (=> b!67413 (= e!44180 call!5660)))

(declare-fun b!67414 () Bool)

(declare-fun res!36414 () Bool)

(assert (=> b!67414 (=> (not res!36414) (not e!44179))))

(assert (=> b!67414 (= res!36414 (containsKey!132 lt!29290 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67415 () Bool)

(assert (=> b!67415 (= e!44178 call!5661)))

(declare-fun b!67416 () Bool)

(assert (=> b!67416 (= e!44178 call!5661)))

(declare-fun bm!5659 () Bool)

(assert (=> bm!5659 (= call!5660 ($colon$colon!62 e!44182 (ite c!9395 (h!2046 (toList!705 (+!87 lt!28402 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) (tuple2!2083 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(declare-fun c!9396 () Bool)

(assert (=> bm!5659 (= c!9396 c!9395)))

(assert (= (and d!14159 c!9395) b!67413))

(assert (= (and d!14159 (not c!9395)) b!67409))

(assert (= (and b!67409 c!9397) b!67412))

(assert (= (and b!67409 (not c!9397)) b!67407))

(assert (= (and b!67407 c!9394) b!67416))

(assert (= (and b!67407 (not c!9394)) b!67415))

(assert (= (or b!67416 b!67415) bm!5657))

(assert (= (or b!67412 bm!5657) bm!5658))

(assert (= (or b!67413 bm!5658) bm!5659))

(assert (= (and bm!5659 c!9396) b!67410))

(assert (= (and bm!5659 (not c!9396)) b!67408))

(assert (= (and d!14159 res!36415) b!67414))

(assert (= (and b!67414 res!36414) b!67411))

(declare-fun m!62449 () Bool)

(assert (=> d!14159 m!62449))

(declare-fun m!62451 () Bool)

(assert (=> d!14159 m!62451))

(declare-fun m!62453 () Bool)

(assert (=> b!67414 m!62453))

(declare-fun m!62455 () Bool)

(assert (=> b!67411 m!62455))

(declare-fun m!62457 () Bool)

(assert (=> bm!5659 m!62457))

(declare-fun m!62459 () Bool)

(assert (=> b!67410 m!62459))

(assert (=> d!13875 d!14159))

(declare-fun d!14161 () Bool)

(declare-fun e!44183 () Bool)

(assert (=> d!14161 e!44183))

(declare-fun res!36416 () Bool)

(assert (=> d!14161 (=> (not res!36416) (not e!44183))))

(declare-fun lt!29292 () ListLongMap!1379)

(assert (=> d!14161 (= res!36416 (contains!705 lt!29292 (_1!1052 (ite (or c!9179 c!9178) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(declare-fun lt!29294 () List!1466)

(assert (=> d!14161 (= lt!29292 (ListLongMap!1380 lt!29294))))

(declare-fun lt!29291 () Unit!1818)

(declare-fun lt!29293 () Unit!1818)

(assert (=> d!14161 (= lt!29291 lt!29293)))

(assert (=> d!14161 (= (getValueByKey!128 lt!29294 (_1!1052 (ite (or c!9179 c!9178) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))) (Some!133 (_2!1052 (ite (or c!9179 c!9178) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!14161 (= lt!29293 (lemmaContainsTupThenGetReturnValue!48 lt!29294 (_1!1052 (ite (or c!9179 c!9178) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (_2!1052 (ite (or c!9179 c!9178) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!14161 (= lt!29294 (insertStrictlySorted!51 (toList!705 (ite c!9179 call!5557 (ite c!9178 call!5559 call!5556))) (_1!1052 (ite (or c!9179 c!9178) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (_2!1052 (ite (or c!9179 c!9178) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!14161 (= (+!87 (ite c!9179 call!5557 (ite c!9178 call!5559 call!5556)) (ite (or c!9179 c!9178) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) lt!29292)))

(declare-fun b!67417 () Bool)

(declare-fun res!36417 () Bool)

(assert (=> b!67417 (=> (not res!36417) (not e!44183))))

(assert (=> b!67417 (= res!36417 (= (getValueByKey!128 (toList!705 lt!29292) (_1!1052 (ite (or c!9179 c!9178) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))) (Some!133 (_2!1052 (ite (or c!9179 c!9178) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))))

(declare-fun b!67418 () Bool)

(assert (=> b!67418 (= e!44183 (contains!707 (toList!705 lt!29292) (ite (or c!9179 c!9178) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (= (and d!14161 res!36416) b!67417))

(assert (= (and b!67417 res!36417) b!67418))

(declare-fun m!62461 () Bool)

(assert (=> d!14161 m!62461))

(declare-fun m!62463 () Bool)

(assert (=> d!14161 m!62463))

(declare-fun m!62465 () Bool)

(assert (=> d!14161 m!62465))

(declare-fun m!62467 () Bool)

(assert (=> d!14161 m!62467))

(declare-fun m!62469 () Bool)

(assert (=> b!67417 m!62469))

(declare-fun m!62471 () Bool)

(assert (=> b!67418 m!62471))

(assert (=> bm!5556 d!14161))

(declare-fun d!14163 () Bool)

(declare-fun lt!29295 () Bool)

(assert (=> d!14163 (= lt!29295 (select (content!71 (toList!705 lt!28749)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun e!44184 () Bool)

(assert (=> d!14163 (= lt!29295 e!44184)))

(declare-fun res!36419 () Bool)

(assert (=> d!14163 (=> (not res!36419) (not e!44184))))

(assert (=> d!14163 (= res!36419 ((_ is Cons!1462) (toList!705 lt!28749)))))

(assert (=> d!14163 (= (contains!707 (toList!705 lt!28749) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!29295)))

(declare-fun b!67419 () Bool)

(declare-fun e!44185 () Bool)

(assert (=> b!67419 (= e!44184 e!44185)))

(declare-fun res!36418 () Bool)

(assert (=> b!67419 (=> res!36418 e!44185)))

(assert (=> b!67419 (= res!36418 (= (h!2046 (toList!705 lt!28749)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!67420 () Bool)

(assert (=> b!67420 (= e!44185 (contains!707 (t!4939 (toList!705 lt!28749)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!14163 res!36419) b!67419))

(assert (= (and b!67419 (not res!36418)) b!67420))

(declare-fun m!62473 () Bool)

(assert (=> d!14163 m!62473))

(declare-fun m!62475 () Bool)

(assert (=> d!14163 m!62475))

(declare-fun m!62477 () Bool)

(assert (=> b!67420 m!62477))

(assert (=> b!66616 d!14163))

(declare-fun b!67424 () Bool)

(declare-fun e!44187 () Option!134)

(assert (=> b!67424 (= e!44187 None!132)))

(declare-fun b!67423 () Bool)

(assert (=> b!67423 (= e!44187 (getValueByKey!128 (t!4939 (toList!705 lt!29055)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67421 () Bool)

(declare-fun e!44186 () Option!134)

(assert (=> b!67421 (= e!44186 (Some!133 (_2!1052 (h!2046 (toList!705 lt!29055)))))))

(declare-fun d!14165 () Bool)

(declare-fun c!9398 () Bool)

(assert (=> d!14165 (= c!9398 (and ((_ is Cons!1462) (toList!705 lt!29055)) (= (_1!1052 (h!2046 (toList!705 lt!29055))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14165 (= (getValueByKey!128 (toList!705 lt!29055) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44186)))

(declare-fun b!67422 () Bool)

(assert (=> b!67422 (= e!44186 e!44187)))

(declare-fun c!9399 () Bool)

(assert (=> b!67422 (= c!9399 (and ((_ is Cons!1462) (toList!705 lt!29055)) (not (= (_1!1052 (h!2046 (toList!705 lt!29055))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14165 c!9398) b!67421))

(assert (= (and d!14165 (not c!9398)) b!67422))

(assert (= (and b!67422 c!9399) b!67423))

(assert (= (and b!67422 (not c!9399)) b!67424))

(declare-fun m!62479 () Bool)

(assert (=> b!67423 m!62479))

(assert (=> b!67008 d!14165))

(declare-fun d!14167 () Bool)

(declare-fun res!36420 () Bool)

(declare-fun e!44188 () Bool)

(assert (=> d!14167 (=> res!36420 e!44188)))

(assert (=> d!14167 (= res!36420 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))) lt!28685)))))

(assert (=> d!14167 (= (containsKey!132 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28685) e!44188)))

(declare-fun b!67425 () Bool)

(declare-fun e!44189 () Bool)

(assert (=> b!67425 (= e!44188 e!44189)))

(declare-fun res!36421 () Bool)

(assert (=> b!67425 (=> (not res!36421) (not e!44189))))

(assert (=> b!67425 (= res!36421 (and (or (not ((_ is Cons!1462) (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))) (bvsle (_1!1052 (h!2046 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))) lt!28685)) ((_ is Cons!1462) (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (bvslt (_1!1052 (h!2046 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))) lt!28685)))))

(declare-fun b!67426 () Bool)

(assert (=> b!67426 (= e!44189 (containsKey!132 (t!4939 (toList!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) lt!28685))))

(assert (= (and d!14167 (not res!36420)) b!67425))

(assert (= (and b!67425 res!36421) b!67426))

(declare-fun m!62481 () Bool)

(assert (=> b!67426 m!62481))

(assert (=> d!13757 d!14167))

(declare-fun d!14169 () Bool)

(declare-fun e!44190 () Bool)

(assert (=> d!14169 e!44190))

(declare-fun res!36422 () Bool)

(assert (=> d!14169 (=> res!36422 e!44190)))

(declare-fun lt!29299 () Bool)

(assert (=> d!14169 (= res!36422 (not lt!29299))))

(declare-fun lt!29298 () Bool)

(assert (=> d!14169 (= lt!29299 lt!29298)))

(declare-fun lt!29296 () Unit!1818)

(declare-fun e!44191 () Unit!1818)

(assert (=> d!14169 (= lt!29296 e!44191)))

(declare-fun c!9400 () Bool)

(assert (=> d!14169 (= c!9400 lt!29298)))

(assert (=> d!14169 (= lt!29298 (containsKey!132 (toList!705 lt!29032) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14169 (= (contains!705 lt!29032 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) lt!29299)))

(declare-fun b!67427 () Bool)

(declare-fun lt!29297 () Unit!1818)

(assert (=> b!67427 (= e!44191 lt!29297)))

(assert (=> b!67427 (= lt!29297 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!29032) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67427 (isDefined!82 (getValueByKey!128 (toList!705 lt!29032) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67428 () Bool)

(declare-fun Unit!1866 () Unit!1818)

(assert (=> b!67428 (= e!44191 Unit!1866)))

(declare-fun b!67429 () Bool)

(assert (=> b!67429 (= e!44190 (isDefined!82 (getValueByKey!128 (toList!705 lt!29032) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14169 c!9400) b!67427))

(assert (= (and d!14169 (not c!9400)) b!67428))

(assert (= (and d!14169 (not res!36422)) b!67429))

(assert (=> d!14169 m!60839))

(declare-fun m!62483 () Bool)

(assert (=> d!14169 m!62483))

(assert (=> b!67427 m!60839))

(declare-fun m!62485 () Bool)

(assert (=> b!67427 m!62485))

(assert (=> b!67427 m!60839))

(assert (=> b!67427 m!62343))

(assert (=> b!67427 m!62343))

(declare-fun m!62487 () Bool)

(assert (=> b!67427 m!62487))

(assert (=> b!67429 m!60839))

(assert (=> b!67429 m!62343))

(assert (=> b!67429 m!62343))

(assert (=> b!67429 m!62487))

(assert (=> b!66992 d!14169))

(declare-fun b!67430 () Bool)

(declare-fun e!44193 () (_ BitVec 32))

(declare-fun call!5663 () (_ BitVec 32))

(assert (=> b!67430 (= e!44193 (bvadd #b00000000000000000000000000000001 call!5663))))

(declare-fun bm!5660 () Bool)

(assert (=> bm!5660 (= call!5663 (arrayCountValidKeys!0 (_keys!3785 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun d!14171 () Bool)

(declare-fun lt!29300 () (_ BitVec 32))

(assert (=> d!14171 (and (bvsge lt!29300 #b00000000000000000000000000000000) (bvsle lt!29300 (bvsub (size!2058 (_keys!3785 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!44192 () (_ BitVec 32))

(assert (=> d!14171 (= lt!29300 e!44192)))

(declare-fun c!9401 () Bool)

(assert (=> d!14171 (= c!9401 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!14171 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2058 (_keys!3785 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2058 (_keys!3785 newMap!16)) (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!14171 (= (arrayCountValidKeys!0 (_keys!3785 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2058 (_keys!3785 newMap!16))) lt!29300)))

(declare-fun b!67431 () Bool)

(assert (=> b!67431 (= e!44193 call!5663)))

(declare-fun b!67432 () Bool)

(assert (=> b!67432 (= e!44192 e!44193)))

(declare-fun c!9402 () Bool)

(assert (=> b!67432 (= c!9402 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!67433 () Bool)

(assert (=> b!67433 (= e!44192 #b00000000000000000000000000000000)))

(assert (= (and d!14171 c!9401) b!67433))

(assert (= (and d!14171 (not c!9401)) b!67432))

(assert (= (and b!67432 c!9402) b!67430))

(assert (= (and b!67432 (not c!9402)) b!67431))

(assert (= (or b!67430 b!67431) bm!5660))

(declare-fun m!62489 () Bool)

(assert (=> bm!5660 m!62489))

(assert (=> b!67432 m!62045))

(assert (=> b!67432 m!62045))

(assert (=> b!67432 m!62047))

(assert (=> bm!5550 d!14171))

(declare-fun b!67437 () Bool)

(declare-fun e!44195 () Option!134)

(assert (=> b!67437 (= e!44195 None!132)))

(declare-fun b!67436 () Bool)

(assert (=> b!67436 (= e!44195 (getValueByKey!128 (t!4939 (t!4939 (toList!705 lt!28404))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!67434 () Bool)

(declare-fun e!44194 () Option!134)

(assert (=> b!67434 (= e!44194 (Some!133 (_2!1052 (h!2046 (t!4939 (toList!705 lt!28404))))))))

(declare-fun d!14173 () Bool)

(declare-fun c!9403 () Bool)

(assert (=> d!14173 (= c!9403 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28404))) (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28404)))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (=> d!14173 (= (getValueByKey!128 (t!4939 (toList!705 lt!28404)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) e!44194)))

(declare-fun b!67435 () Bool)

(assert (=> b!67435 (= e!44194 e!44195)))

(declare-fun c!9404 () Bool)

(assert (=> b!67435 (= c!9404 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28404))) (not (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28404)))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))))

(assert (= (and d!14173 c!9403) b!67434))

(assert (= (and d!14173 (not c!9403)) b!67435))

(assert (= (and b!67435 c!9404) b!67436))

(assert (= (and b!67435 (not c!9404)) b!67437))

(assert (=> b!67436 m!60449))

(declare-fun m!62491 () Bool)

(assert (=> b!67436 m!62491))

(assert (=> b!66974 d!14173))

(declare-fun d!14175 () Bool)

(declare-fun e!44196 () Bool)

(assert (=> d!14175 e!44196))

(declare-fun res!36423 () Bool)

(assert (=> d!14175 (=> res!36423 e!44196)))

(declare-fun lt!29304 () Bool)

(assert (=> d!14175 (= res!36423 (not lt!29304))))

(declare-fun lt!29303 () Bool)

(assert (=> d!14175 (= lt!29304 lt!29303)))

(declare-fun lt!29301 () Unit!1818)

(declare-fun e!44197 () Unit!1818)

(assert (=> d!14175 (= lt!29301 e!44197)))

(declare-fun c!9405 () Bool)

(assert (=> d!14175 (= c!9405 lt!29303)))

(assert (=> d!14175 (= lt!29303 (containsKey!132 (toList!705 lt!29055) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!14175 (= (contains!705 lt!29055 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29304)))

(declare-fun b!67438 () Bool)

(declare-fun lt!29302 () Unit!1818)

(assert (=> b!67438 (= e!44197 lt!29302)))

(assert (=> b!67438 (= lt!29302 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!29055) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> b!67438 (isDefined!82 (getValueByKey!128 (toList!705 lt!29055) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67439 () Bool)

(declare-fun Unit!1867 () Unit!1818)

(assert (=> b!67439 (= e!44197 Unit!1867)))

(declare-fun b!67440 () Bool)

(assert (=> b!67440 (= e!44196 (isDefined!82 (getValueByKey!128 (toList!705 lt!29055) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14175 c!9405) b!67438))

(assert (= (and d!14175 (not c!9405)) b!67439))

(assert (= (and d!14175 (not res!36423)) b!67440))

(declare-fun m!62493 () Bool)

(assert (=> d!14175 m!62493))

(declare-fun m!62495 () Bool)

(assert (=> b!67438 m!62495))

(assert (=> b!67438 m!61643))

(assert (=> b!67438 m!61643))

(declare-fun m!62497 () Bool)

(assert (=> b!67438 m!62497))

(assert (=> b!67440 m!61643))

(assert (=> b!67440 m!61643))

(assert (=> b!67440 m!62497))

(assert (=> d!13881 d!14175))

(declare-fun b!67444 () Bool)

(declare-fun e!44199 () Option!134)

(assert (=> b!67444 (= e!44199 None!132)))

(declare-fun b!67443 () Bool)

(assert (=> b!67443 (= e!44199 (getValueByKey!128 (t!4939 lt!29057) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67441 () Bool)

(declare-fun e!44198 () Option!134)

(assert (=> b!67441 (= e!44198 (Some!133 (_2!1052 (h!2046 lt!29057))))))

(declare-fun d!14177 () Bool)

(declare-fun c!9406 () Bool)

(assert (=> d!14177 (= c!9406 (and ((_ is Cons!1462) lt!29057) (= (_1!1052 (h!2046 lt!29057)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14177 (= (getValueByKey!128 lt!29057 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44198)))

(declare-fun b!67442 () Bool)

(assert (=> b!67442 (= e!44198 e!44199)))

(declare-fun c!9407 () Bool)

(assert (=> b!67442 (= c!9407 (and ((_ is Cons!1462) lt!29057) (not (= (_1!1052 (h!2046 lt!29057)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14177 c!9406) b!67441))

(assert (= (and d!14177 (not c!9406)) b!67442))

(assert (= (and b!67442 c!9407) b!67443))

(assert (= (and b!67442 (not c!9407)) b!67444))

(declare-fun m!62499 () Bool)

(assert (=> b!67443 m!62499))

(assert (=> d!13881 d!14177))

(declare-fun d!14179 () Bool)

(assert (=> d!14179 (= (getValueByKey!128 lt!29057 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!29305 () Unit!1818)

(assert (=> d!14179 (= lt!29305 (choose!375 lt!29057 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun e!44200 () Bool)

(assert (=> d!14179 e!44200))

(declare-fun res!36424 () Bool)

(assert (=> d!14179 (=> (not res!36424) (not e!44200))))

(assert (=> d!14179 (= res!36424 (isStrictlySorted!284 lt!29057))))

(assert (=> d!14179 (= (lemmaContainsTupThenGetReturnValue!48 lt!29057 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29305)))

(declare-fun b!67445 () Bool)

(declare-fun res!36425 () Bool)

(assert (=> b!67445 (=> (not res!36425) (not e!44200))))

(assert (=> b!67445 (= res!36425 (containsKey!132 lt!29057 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67446 () Bool)

(assert (=> b!67446 (= e!44200 (contains!707 lt!29057 (tuple2!2083 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14179 res!36424) b!67445))

(assert (= (and b!67445 res!36425) b!67446))

(assert (=> d!14179 m!61637))

(declare-fun m!62501 () Bool)

(assert (=> d!14179 m!62501))

(declare-fun m!62503 () Bool)

(assert (=> d!14179 m!62503))

(declare-fun m!62505 () Bool)

(assert (=> b!67445 m!62505))

(declare-fun m!62507 () Bool)

(assert (=> b!67446 m!62507))

(assert (=> d!13881 d!14179))

(declare-fun bm!5661 () Bool)

(declare-fun call!5665 () List!1466)

(declare-fun call!5666 () List!1466)

(assert (=> bm!5661 (= call!5665 call!5666)))

(declare-fun d!14181 () Bool)

(declare-fun e!44202 () Bool)

(assert (=> d!14181 e!44202))

(declare-fun res!36427 () Bool)

(assert (=> d!14181 (=> (not res!36427) (not e!44202))))

(declare-fun lt!29306 () List!1466)

(assert (=> d!14181 (= res!36427 (isStrictlySorted!284 lt!29306))))

(declare-fun e!44203 () List!1466)

(assert (=> d!14181 (= lt!29306 e!44203)))

(declare-fun c!9409 () Bool)

(assert (=> d!14181 (= c!9409 (and ((_ is Cons!1462) (toList!705 lt!28402)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14181 (isStrictlySorted!284 (toList!705 lt!28402))))

(assert (=> d!14181 (= (insertStrictlySorted!51 (toList!705 lt!28402) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29306)))

(declare-fun b!67447 () Bool)

(declare-fun c!9408 () Bool)

(assert (=> b!67447 (= c!9408 (and ((_ is Cons!1462) (toList!705 lt!28402)) (bvsgt (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun e!44204 () List!1466)

(declare-fun e!44201 () List!1466)

(assert (=> b!67447 (= e!44204 e!44201)))

(declare-fun b!67448 () Bool)

(declare-fun c!9411 () Bool)

(declare-fun e!44205 () List!1466)

(assert (=> b!67448 (= e!44205 (ite c!9411 (t!4939 (toList!705 lt!28402)) (ite c!9408 (Cons!1462 (h!2046 (toList!705 lt!28402)) (t!4939 (toList!705 lt!28402))) Nil!1463)))))

(declare-fun b!67449 () Bool)

(assert (=> b!67449 (= e!44203 e!44204)))

(assert (=> b!67449 (= c!9411 (and ((_ is Cons!1462) (toList!705 lt!28402)) (= (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun bm!5662 () Bool)

(declare-fun call!5664 () List!1466)

(assert (=> bm!5662 (= call!5666 call!5664)))

(declare-fun b!67450 () Bool)

(assert (=> b!67450 (= e!44205 (insertStrictlySorted!51 (t!4939 (toList!705 lt!28402)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67451 () Bool)

(assert (=> b!67451 (= e!44202 (contains!707 lt!29306 (tuple2!2083 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!67452 () Bool)

(assert (=> b!67452 (= e!44204 call!5666)))

(declare-fun b!67453 () Bool)

(assert (=> b!67453 (= e!44203 call!5664)))

(declare-fun b!67454 () Bool)

(declare-fun res!36426 () Bool)

(assert (=> b!67454 (=> (not res!36426) (not e!44202))))

(assert (=> b!67454 (= res!36426 (containsKey!132 lt!29306 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67455 () Bool)

(assert (=> b!67455 (= e!44201 call!5665)))

(declare-fun b!67456 () Bool)

(assert (=> b!67456 (= e!44201 call!5665)))

(declare-fun bm!5663 () Bool)

(assert (=> bm!5663 (= call!5664 ($colon$colon!62 e!44205 (ite c!9409 (h!2046 (toList!705 lt!28402)) (tuple2!2083 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(declare-fun c!9410 () Bool)

(assert (=> bm!5663 (= c!9410 c!9409)))

(assert (= (and d!14181 c!9409) b!67453))

(assert (= (and d!14181 (not c!9409)) b!67449))

(assert (= (and b!67449 c!9411) b!67452))

(assert (= (and b!67449 (not c!9411)) b!67447))

(assert (= (and b!67447 c!9408) b!67456))

(assert (= (and b!67447 (not c!9408)) b!67455))

(assert (= (or b!67456 b!67455) bm!5661))

(assert (= (or b!67452 bm!5661) bm!5662))

(assert (= (or b!67453 bm!5662) bm!5663))

(assert (= (and bm!5663 c!9410) b!67450))

(assert (= (and bm!5663 (not c!9410)) b!67448))

(assert (= (and d!14181 res!36427) b!67454))

(assert (= (and b!67454 res!36426) b!67451))

(declare-fun m!62509 () Bool)

(assert (=> d!14181 m!62509))

(assert (=> d!14181 m!61439))

(declare-fun m!62511 () Bool)

(assert (=> b!67454 m!62511))

(declare-fun m!62513 () Bool)

(assert (=> b!67451 m!62513))

(declare-fun m!62515 () Bool)

(assert (=> bm!5663 m!62515))

(declare-fun m!62517 () Bool)

(assert (=> b!67450 m!62517))

(assert (=> d!13881 d!14181))

(declare-fun d!14183 () Bool)

(declare-fun e!44206 () Bool)

(assert (=> d!14183 e!44206))

(declare-fun res!36428 () Bool)

(assert (=> d!14183 (=> (not res!36428) (not e!44206))))

(declare-fun lt!29308 () ListLongMap!1379)

(assert (=> d!14183 (= res!36428 (contains!705 lt!29308 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!29310 () List!1466)

(assert (=> d!14183 (= lt!29308 (ListLongMap!1380 lt!29310))))

(declare-fun lt!29307 () Unit!1818)

(declare-fun lt!29309 () Unit!1818)

(assert (=> d!14183 (= lt!29307 lt!29309)))

(assert (=> d!14183 (= (getValueByKey!128 lt!29310 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14183 (= lt!29309 (lemmaContainsTupThenGetReturnValue!48 lt!29310 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14183 (= lt!29310 (insertStrictlySorted!51 (toList!705 call!5561) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14183 (= (+!87 call!5561 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!29308)))

(declare-fun b!67457 () Bool)

(declare-fun res!36429 () Bool)

(assert (=> b!67457 (=> (not res!36429) (not e!44206))))

(assert (=> b!67457 (= res!36429 (= (getValueByKey!128 (toList!705 lt!29308) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!67458 () Bool)

(assert (=> b!67458 (= e!44206 (contains!707 (toList!705 lt!29308) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!14183 res!36428) b!67457))

(assert (= (and b!67457 res!36429) b!67458))

(declare-fun m!62519 () Bool)

(assert (=> d!14183 m!62519))

(declare-fun m!62521 () Bool)

(assert (=> d!14183 m!62521))

(declare-fun m!62523 () Bool)

(assert (=> d!14183 m!62523))

(declare-fun m!62525 () Bool)

(assert (=> d!14183 m!62525))

(declare-fun m!62527 () Bool)

(assert (=> b!67457 m!62527))

(declare-fun m!62529 () Bool)

(assert (=> b!67458 m!62529))

(assert (=> b!66600 d!14183))

(declare-fun d!14185 () Bool)

(assert (=> d!14185 (not (contains!705 (+!87 lt!28742 (tuple2!2083 lt!28744 lt!28743)) lt!28746))))

(declare-fun lt!29311 () Unit!1818)

(assert (=> d!14185 (= lt!29311 (choose!374 lt!28742 lt!28744 lt!28743 lt!28746))))

(declare-fun e!44207 () Bool)

(assert (=> d!14185 e!44207))

(declare-fun res!36430 () Bool)

(assert (=> d!14185 (=> (not res!36430) (not e!44207))))

(assert (=> d!14185 (= res!36430 (not (contains!705 lt!28742 lt!28746)))))

(assert (=> d!14185 (= (addStillNotContains!22 lt!28742 lt!28744 lt!28743 lt!28746) lt!29311)))

(declare-fun b!67459 () Bool)

(assert (=> b!67459 (= e!44207 (not (= lt!28744 lt!28746)))))

(assert (= (and d!14185 res!36430) b!67459))

(assert (=> d!14185 m!60939))

(assert (=> d!14185 m!60939))

(assert (=> d!14185 m!60941))

(declare-fun m!62531 () Bool)

(assert (=> d!14185 m!62531))

(declare-fun m!62533 () Bool)

(assert (=> d!14185 m!62533))

(assert (=> b!66600 d!14185))

(declare-fun d!14187 () Bool)

(declare-fun e!44208 () Bool)

(assert (=> d!14187 e!44208))

(declare-fun res!36431 () Bool)

(assert (=> d!14187 (=> res!36431 e!44208)))

(declare-fun lt!29315 () Bool)

(assert (=> d!14187 (= res!36431 (not lt!29315))))

(declare-fun lt!29314 () Bool)

(assert (=> d!14187 (= lt!29315 lt!29314)))

(declare-fun lt!29312 () Unit!1818)

(declare-fun e!44209 () Unit!1818)

(assert (=> d!14187 (= lt!29312 e!44209)))

(declare-fun c!9412 () Bool)

(assert (=> d!14187 (= c!9412 lt!29314)))

(assert (=> d!14187 (= lt!29314 (containsKey!132 (toList!705 (+!87 lt!28742 (tuple2!2083 lt!28744 lt!28743))) lt!28746))))

(assert (=> d!14187 (= (contains!705 (+!87 lt!28742 (tuple2!2083 lt!28744 lt!28743)) lt!28746) lt!29315)))

(declare-fun b!67460 () Bool)

(declare-fun lt!29313 () Unit!1818)

(assert (=> b!67460 (= e!44209 lt!29313)))

(assert (=> b!67460 (= lt!29313 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 (+!87 lt!28742 (tuple2!2083 lt!28744 lt!28743))) lt!28746))))

(assert (=> b!67460 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28742 (tuple2!2083 lt!28744 lt!28743))) lt!28746))))

(declare-fun b!67461 () Bool)

(declare-fun Unit!1868 () Unit!1818)

(assert (=> b!67461 (= e!44209 Unit!1868)))

(declare-fun b!67462 () Bool)

(assert (=> b!67462 (= e!44208 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28742 (tuple2!2083 lt!28744 lt!28743))) lt!28746)))))

(assert (= (and d!14187 c!9412) b!67460))

(assert (= (and d!14187 (not c!9412)) b!67461))

(assert (= (and d!14187 (not res!36431)) b!67462))

(declare-fun m!62535 () Bool)

(assert (=> d!14187 m!62535))

(declare-fun m!62537 () Bool)

(assert (=> b!67460 m!62537))

(declare-fun m!62539 () Bool)

(assert (=> b!67460 m!62539))

(assert (=> b!67460 m!62539))

(declare-fun m!62541 () Bool)

(assert (=> b!67460 m!62541))

(assert (=> b!67462 m!62539))

(assert (=> b!67462 m!62539))

(assert (=> b!67462 m!62541))

(assert (=> b!66600 d!14187))

(declare-fun d!14189 () Bool)

(declare-fun e!44210 () Bool)

(assert (=> d!14189 e!44210))

(declare-fun res!36432 () Bool)

(assert (=> d!14189 (=> (not res!36432) (not e!44210))))

(declare-fun lt!29317 () ListLongMap!1379)

(assert (=> d!14189 (= res!36432 (contains!705 lt!29317 (_1!1052 (tuple2!2083 lt!28744 lt!28743))))))

(declare-fun lt!29319 () List!1466)

(assert (=> d!14189 (= lt!29317 (ListLongMap!1380 lt!29319))))

(declare-fun lt!29316 () Unit!1818)

(declare-fun lt!29318 () Unit!1818)

(assert (=> d!14189 (= lt!29316 lt!29318)))

(assert (=> d!14189 (= (getValueByKey!128 lt!29319 (_1!1052 (tuple2!2083 lt!28744 lt!28743))) (Some!133 (_2!1052 (tuple2!2083 lt!28744 lt!28743))))))

(assert (=> d!14189 (= lt!29318 (lemmaContainsTupThenGetReturnValue!48 lt!29319 (_1!1052 (tuple2!2083 lt!28744 lt!28743)) (_2!1052 (tuple2!2083 lt!28744 lt!28743))))))

(assert (=> d!14189 (= lt!29319 (insertStrictlySorted!51 (toList!705 lt!28742) (_1!1052 (tuple2!2083 lt!28744 lt!28743)) (_2!1052 (tuple2!2083 lt!28744 lt!28743))))))

(assert (=> d!14189 (= (+!87 lt!28742 (tuple2!2083 lt!28744 lt!28743)) lt!29317)))

(declare-fun b!67463 () Bool)

(declare-fun res!36433 () Bool)

(assert (=> b!67463 (=> (not res!36433) (not e!44210))))

(assert (=> b!67463 (= res!36433 (= (getValueByKey!128 (toList!705 lt!29317) (_1!1052 (tuple2!2083 lt!28744 lt!28743))) (Some!133 (_2!1052 (tuple2!2083 lt!28744 lt!28743)))))))

(declare-fun b!67464 () Bool)

(assert (=> b!67464 (= e!44210 (contains!707 (toList!705 lt!29317) (tuple2!2083 lt!28744 lt!28743)))))

(assert (= (and d!14189 res!36432) b!67463))

(assert (= (and b!67463 res!36433) b!67464))

(declare-fun m!62543 () Bool)

(assert (=> d!14189 m!62543))

(declare-fun m!62545 () Bool)

(assert (=> d!14189 m!62545))

(declare-fun m!62547 () Bool)

(assert (=> d!14189 m!62547))

(declare-fun m!62549 () Bool)

(assert (=> d!14189 m!62549))

(declare-fun m!62551 () Bool)

(assert (=> b!67463 m!62551))

(declare-fun m!62553 () Bool)

(assert (=> b!67464 m!62553))

(assert (=> b!66600 d!14189))

(assert (=> b!66600 d!14079))

(assert (=> b!66829 d!14055))

(declare-fun d!14191 () Bool)

(declare-fun res!36434 () Bool)

(declare-fun e!44211 () Bool)

(assert (=> d!14191 (=> res!36434 e!44211)))

(assert (=> d!14191 (= res!36434 (and ((_ is Cons!1462) (toList!705 lt!28521)) (= (_1!1052 (h!2046 (toList!705 lt!28521))) (_1!1052 lt!28403))))))

(assert (=> d!14191 (= (containsKey!132 (toList!705 lt!28521) (_1!1052 lt!28403)) e!44211)))

(declare-fun b!67465 () Bool)

(declare-fun e!44212 () Bool)

(assert (=> b!67465 (= e!44211 e!44212)))

(declare-fun res!36435 () Bool)

(assert (=> b!67465 (=> (not res!36435) (not e!44212))))

(assert (=> b!67465 (= res!36435 (and (or (not ((_ is Cons!1462) (toList!705 lt!28521))) (bvsle (_1!1052 (h!2046 (toList!705 lt!28521))) (_1!1052 lt!28403))) ((_ is Cons!1462) (toList!705 lt!28521)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28521))) (_1!1052 lt!28403))))))

(declare-fun b!67466 () Bool)

(assert (=> b!67466 (= e!44212 (containsKey!132 (t!4939 (toList!705 lt!28521)) (_1!1052 lt!28403)))))

(assert (= (and d!14191 (not res!36434)) b!67465))

(assert (= (and b!67465 res!36435) b!67466))

(declare-fun m!62555 () Bool)

(assert (=> b!67466 m!62555))

(assert (=> d!13851 d!14191))

(declare-fun d!14193 () Bool)

(declare-fun res!36436 () Bool)

(declare-fun e!44213 () Bool)

(assert (=> d!14193 (=> res!36436 e!44213)))

(assert (=> d!14193 (= res!36436 (and ((_ is Cons!1462) (toList!705 lt!28513)) (= (_1!1052 (h!2046 (toList!705 lt!28513))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14193 (= (containsKey!132 (toList!705 lt!28513) #b1000000000000000000000000000000000000000000000000000000000000000) e!44213)))

(declare-fun b!67467 () Bool)

(declare-fun e!44214 () Bool)

(assert (=> b!67467 (= e!44213 e!44214)))

(declare-fun res!36437 () Bool)

(assert (=> b!67467 (=> (not res!36437) (not e!44214))))

(assert (=> b!67467 (= res!36437 (and (or (not ((_ is Cons!1462) (toList!705 lt!28513))) (bvsle (_1!1052 (h!2046 (toList!705 lt!28513))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1462) (toList!705 lt!28513)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28513))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67468 () Bool)

(assert (=> b!67468 (= e!44214 (containsKey!132 (t!4939 (toList!705 lt!28513)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14193 (not res!36436)) b!67467))

(assert (= (and b!67467 res!36437) b!67468))

(declare-fun m!62557 () Bool)

(assert (=> b!67468 m!62557))

(assert (=> d!13783 d!14193))

(declare-fun d!14195 () Bool)

(declare-fun res!36438 () Bool)

(declare-fun e!44215 () Bool)

(assert (=> d!14195 (=> res!36438 e!44215)))

(assert (=> d!14195 (= res!36438 (and ((_ is Cons!1462) (toList!705 lt!28687)) (= (_1!1052 (h!2046 (toList!705 lt!28687))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14195 (= (containsKey!132 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000) e!44215)))

(declare-fun b!67469 () Bool)

(declare-fun e!44216 () Bool)

(assert (=> b!67469 (= e!44215 e!44216)))

(declare-fun res!36439 () Bool)

(assert (=> b!67469 (=> (not res!36439) (not e!44216))))

(assert (=> b!67469 (= res!36439 (and (or (not ((_ is Cons!1462) (toList!705 lt!28687))) (bvsle (_1!1052 (h!2046 (toList!705 lt!28687))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1462) (toList!705 lt!28687)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28687))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67470 () Bool)

(assert (=> b!67470 (= e!44216 (containsKey!132 (t!4939 (toList!705 lt!28687)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14195 (not res!36438)) b!67469))

(assert (= (and b!67469 res!36439) b!67470))

(declare-fun m!62559 () Bool)

(assert (=> b!67470 m!62559))

(assert (=> d!13825 d!14195))

(declare-fun d!14197 () Bool)

(assert (=> d!14197 (isDefined!82 (getValueByKey!128 (toList!705 e!43566) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun lt!29320 () Unit!1818)

(assert (=> d!14197 (= lt!29320 (choose!384 (toList!705 e!43566) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun e!44217 () Bool)

(assert (=> d!14197 e!44217))

(declare-fun res!36440 () Bool)

(assert (=> d!14197 (=> (not res!36440) (not e!44217))))

(assert (=> d!14197 (= res!36440 (isStrictlySorted!284 (toList!705 e!43566)))))

(assert (=> d!14197 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 e!43566) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) lt!29320)))

(declare-fun b!67471 () Bool)

(assert (=> b!67471 (= e!44217 (containsKey!132 (toList!705 e!43566) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (= (and d!14197 res!36440) b!67471))

(assert (=> d!14197 m!60449))

(assert (=> d!14197 m!61281))

(assert (=> d!14197 m!61281))

(assert (=> d!14197 m!61283))

(assert (=> d!14197 m!60449))

(declare-fun m!62561 () Bool)

(assert (=> d!14197 m!62561))

(declare-fun m!62563 () Bool)

(assert (=> d!14197 m!62563))

(assert (=> b!67471 m!60449))

(assert (=> b!67471 m!61277))

(assert (=> b!66817 d!14197))

(assert (=> b!66817 d!13883))

(assert (=> b!66817 d!13885))

(declare-fun d!14199 () Bool)

(assert (=> d!14199 (= (apply!72 lt!28960 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1123 (getValueByKey!128 (toList!705 lt!28960) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2892 () Bool)

(assert (= bs!2892 d!14199))

(assert (=> bs!2892 m!60839))

(declare-fun m!62565 () Bool)

(assert (=> bs!2892 m!62565))

(assert (=> bs!2892 m!62565))

(declare-fun m!62567 () Bool)

(assert (=> bs!2892 m!62567))

(assert (=> b!66864 d!14199))

(declare-fun c!9413 () Bool)

(declare-fun d!14201 () Bool)

(assert (=> d!14201 (= c!9413 ((_ is ValueCellFull!881) (select (arr!1823 (ite c!9137 (_values!2129 newMap!16) lt!28607)) #b00000000000000000000000000000000)))))

(declare-fun e!44218 () V!2913)

(assert (=> d!14201 (= (get!1119 (select (arr!1823 (ite c!9137 (_values!2129 newMap!16) lt!28607)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44218)))

(declare-fun b!67472 () Bool)

(assert (=> b!67472 (= e!44218 (get!1121 (select (arr!1823 (ite c!9137 (_values!2129 newMap!16) lt!28607)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67473 () Bool)

(assert (=> b!67473 (= e!44218 (get!1122 (select (arr!1823 (ite c!9137 (_values!2129 newMap!16) lt!28607)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14201 c!9413) b!67472))

(assert (= (and d!14201 (not c!9413)) b!67473))

(assert (=> b!67472 m!61359))

(assert (=> b!67472 m!60885))

(declare-fun m!62569 () Bool)

(assert (=> b!67472 m!62569))

(assert (=> b!67473 m!61359))

(assert (=> b!67473 m!60885))

(declare-fun m!62571 () Bool)

(assert (=> b!67473 m!62571))

(assert (=> b!66864 d!14201))

(assert (=> d!13765 d!13763))

(assert (=> d!13765 d!13749))

(assert (=> d!13765 d!13753))

(declare-fun d!14203 () Bool)

(declare-fun e!44219 () Bool)

(assert (=> d!14203 e!44219))

(declare-fun res!36441 () Bool)

(assert (=> d!14203 (=> res!36441 e!44219)))

(declare-fun lt!29324 () Bool)

(assert (=> d!14203 (= res!36441 (not lt!29324))))

(declare-fun lt!29323 () Bool)

(assert (=> d!14203 (= lt!29324 lt!29323)))

(declare-fun lt!29321 () Unit!1818)

(declare-fun e!44220 () Unit!1818)

(assert (=> d!14203 (= lt!29321 e!44220)))

(declare-fun c!9414 () Bool)

(assert (=> d!14203 (= c!9414 lt!29323)))

(assert (=> d!14203 (= lt!29323 (containsKey!132 (toList!705 lt!28679) lt!28684))))

(assert (=> d!14203 (= (contains!705 lt!28679 lt!28684) lt!29324)))

(declare-fun b!67474 () Bool)

(declare-fun lt!29322 () Unit!1818)

(assert (=> b!67474 (= e!44220 lt!29322)))

(assert (=> b!67474 (= lt!29322 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28679) lt!28684))))

(assert (=> b!67474 (isDefined!82 (getValueByKey!128 (toList!705 lt!28679) lt!28684))))

(declare-fun b!67475 () Bool)

(declare-fun Unit!1869 () Unit!1818)

(assert (=> b!67475 (= e!44220 Unit!1869)))

(declare-fun b!67476 () Bool)

(assert (=> b!67476 (= e!44219 (isDefined!82 (getValueByKey!128 (toList!705 lt!28679) lt!28684)))))

(assert (= (and d!14203 c!9414) b!67474))

(assert (= (and d!14203 (not c!9414)) b!67475))

(assert (= (and d!14203 (not res!36441)) b!67476))

(declare-fun m!62573 () Bool)

(assert (=> d!14203 m!62573))

(declare-fun m!62575 () Bool)

(assert (=> b!67474 m!62575))

(assert (=> b!67474 m!61223))

(assert (=> b!67474 m!61223))

(declare-fun m!62577 () Bool)

(assert (=> b!67474 m!62577))

(assert (=> b!67476 m!61223))

(assert (=> b!67476 m!61223))

(assert (=> b!67476 m!62577))

(assert (=> d!13765 d!14203))

(declare-fun d!14205 () Bool)

(assert (=> d!14205 (= (apply!72 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28684) (apply!72 lt!28679 lt!28684))))

(assert (=> d!14205 true))

(declare-fun _$34!787 () Unit!1818)

(assert (=> d!14205 (= (choose!377 lt!28679 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28684) _$34!787)))

(declare-fun bs!2893 () Bool)

(assert (= bs!2893 d!14205))

(assert (=> bs!2893 m!60763))

(assert (=> bs!2893 m!60763))

(assert (=> bs!2893 m!60765))

(assert (=> bs!2893 m!60781))

(assert (=> d!13765 d!14205))

(declare-fun d!14207 () Bool)

(declare-fun res!36442 () Bool)

(declare-fun e!44221 () Bool)

(assert (=> d!14207 (=> res!36442 e!44221)))

(assert (=> d!14207 (= res!36442 (and ((_ is Cons!1462) (toList!705 e!43566)) (= (_1!1052 (h!2046 (toList!705 e!43566))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (=> d!14207 (= (containsKey!132 (toList!705 e!43566) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) e!44221)))

(declare-fun b!67477 () Bool)

(declare-fun e!44222 () Bool)

(assert (=> b!67477 (= e!44221 e!44222)))

(declare-fun res!36443 () Bool)

(assert (=> b!67477 (=> (not res!36443) (not e!44222))))

(assert (=> b!67477 (= res!36443 (and (or (not ((_ is Cons!1462) (toList!705 e!43566))) (bvsle (_1!1052 (h!2046 (toList!705 e!43566))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))) ((_ is Cons!1462) (toList!705 e!43566)) (bvslt (_1!1052 (h!2046 (toList!705 e!43566))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(declare-fun b!67478 () Bool)

(assert (=> b!67478 (= e!44222 (containsKey!132 (t!4939 (toList!705 e!43566)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (= (and d!14207 (not res!36442)) b!67477))

(assert (= (and b!67477 res!36443) b!67478))

(assert (=> b!67478 m!60449))

(declare-fun m!62579 () Bool)

(assert (=> b!67478 m!62579))

(assert (=> d!13787 d!14207))

(assert (=> b!66852 d!13929))

(assert (=> b!66852 d!13687))

(declare-fun b!67479 () Bool)

(declare-fun e!44234 () Bool)

(declare-fun call!5667 () Bool)

(assert (=> b!67479 (= e!44234 (not call!5667))))

(declare-fun b!67480 () Bool)

(declare-fun c!9416 () Bool)

(assert (=> b!67480 (= c!9416 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44229 () ListLongMap!1379)

(declare-fun e!44223 () ListLongMap!1379)

(assert (=> b!67480 (= e!44229 e!44223)))

(declare-fun b!67481 () Bool)

(declare-fun res!36446 () Bool)

(declare-fun e!44230 () Bool)

(assert (=> b!67481 (=> (not res!36446) (not e!44230))))

(declare-fun e!44233 () Bool)

(assert (=> b!67481 (= res!36446 e!44233)))

(declare-fun res!36444 () Bool)

(assert (=> b!67481 (=> res!36444 e!44233)))

(declare-fun e!44228 () Bool)

(assert (=> b!67481 (= res!36444 (not e!44228))))

(declare-fun res!36449 () Bool)

(assert (=> b!67481 (=> (not res!36449) (not e!44228))))

(assert (=> b!67481 (= res!36449 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67482 () Bool)

(declare-fun e!44226 () ListLongMap!1379)

(assert (=> b!67482 (= e!44226 e!44229)))

(declare-fun c!9418 () Bool)

(assert (=> b!67482 (= c!9418 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67483 () Bool)

(declare-fun e!44235 () Unit!1818)

(declare-fun Unit!1870 () Unit!1818)

(assert (=> b!67483 (= e!44235 Unit!1870)))

(declare-fun b!67484 () Bool)

(declare-fun res!36450 () Bool)

(assert (=> b!67484 (=> (not res!36450) (not e!44230))))

(declare-fun e!44231 () Bool)

(assert (=> b!67484 (= res!36450 e!44231)))

(declare-fun c!9417 () Bool)

(assert (=> b!67484 (= c!9417 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5664 () Bool)

(declare-fun call!5673 () Bool)

(declare-fun lt!29344 () ListLongMap!1379)

(assert (=> bm!5664 (= call!5673 (contains!705 lt!29344 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67485 () Bool)

(declare-fun lt!29340 () Unit!1818)

(assert (=> b!67485 (= e!44235 lt!29340)))

(declare-fun lt!29330 () ListLongMap!1379)

(assert (=> b!67485 (= lt!29330 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29343 () (_ BitVec 64))

(assert (=> b!67485 (= lt!29343 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29342 () (_ BitVec 64))

(assert (=> b!67485 (= lt!29342 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29328 () Unit!1818)

(assert (=> b!67485 (= lt!29328 (addStillContains!48 lt!29330 lt!29343 (zeroValue!2054 newMap!16) lt!29342))))

(assert (=> b!67485 (contains!705 (+!87 lt!29330 (tuple2!2083 lt!29343 (zeroValue!2054 newMap!16))) lt!29342)))

(declare-fun lt!29335 () Unit!1818)

(assert (=> b!67485 (= lt!29335 lt!29328)))

(declare-fun lt!29327 () ListLongMap!1379)

(assert (=> b!67485 (= lt!29327 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29331 () (_ BitVec 64))

(assert (=> b!67485 (= lt!29331 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29325 () (_ BitVec 64))

(assert (=> b!67485 (= lt!29325 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29346 () Unit!1818)

(assert (=> b!67485 (= lt!29346 (addApplyDifferent!48 lt!29327 lt!29331 (minValue!2054 newMap!16) lt!29325))))

(assert (=> b!67485 (= (apply!72 (+!87 lt!29327 (tuple2!2083 lt!29331 (minValue!2054 newMap!16))) lt!29325) (apply!72 lt!29327 lt!29325))))

(declare-fun lt!29329 () Unit!1818)

(assert (=> b!67485 (= lt!29329 lt!29346)))

(declare-fun lt!29336 () ListLongMap!1379)

(assert (=> b!67485 (= lt!29336 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29339 () (_ BitVec 64))

(assert (=> b!67485 (= lt!29339 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29341 () (_ BitVec 64))

(assert (=> b!67485 (= lt!29341 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29333 () Unit!1818)

(assert (=> b!67485 (= lt!29333 (addApplyDifferent!48 lt!29336 lt!29339 (zeroValue!2054 newMap!16) lt!29341))))

(assert (=> b!67485 (= (apply!72 (+!87 lt!29336 (tuple2!2083 lt!29339 (zeroValue!2054 newMap!16))) lt!29341) (apply!72 lt!29336 lt!29341))))

(declare-fun lt!29345 () Unit!1818)

(assert (=> b!67485 (= lt!29345 lt!29333)))

(declare-fun lt!29334 () ListLongMap!1379)

(assert (=> b!67485 (= lt!29334 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29337 () (_ BitVec 64))

(assert (=> b!67485 (= lt!29337 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29338 () (_ BitVec 64))

(assert (=> b!67485 (= lt!29338 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67485 (= lt!29340 (addApplyDifferent!48 lt!29334 lt!29337 (minValue!2054 newMap!16) lt!29338))))

(assert (=> b!67485 (= (apply!72 (+!87 lt!29334 (tuple2!2083 lt!29337 (minValue!2054 newMap!16))) lt!29338) (apply!72 lt!29334 lt!29338))))

(declare-fun d!14209 () Bool)

(assert (=> d!14209 e!44230))

(declare-fun res!36452 () Bool)

(assert (=> d!14209 (=> (not res!36452) (not e!44230))))

(assert (=> d!14209 (= res!36452 (or (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))))

(declare-fun lt!29326 () ListLongMap!1379)

(assert (=> d!14209 (= lt!29344 lt!29326)))

(declare-fun lt!29332 () Unit!1818)

(assert (=> d!14209 (= lt!29332 e!44235)))

(declare-fun c!9420 () Bool)

(declare-fun e!44227 () Bool)

(assert (=> d!14209 (= c!9420 e!44227)))

(declare-fun res!36451 () Bool)

(assert (=> d!14209 (=> (not res!36451) (not e!44227))))

(assert (=> d!14209 (= res!36451 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!14209 (= lt!29326 e!44226)))

(declare-fun c!9419 () Bool)

(assert (=> d!14209 (= c!9419 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14209 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!14209 (= (getCurrentListMap!401 (_keys!3785 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29344)))

(declare-fun bm!5665 () Bool)

(declare-fun call!5671 () ListLongMap!1379)

(declare-fun call!5668 () ListLongMap!1379)

(assert (=> bm!5665 (= call!5671 call!5668)))

(declare-fun b!67486 () Bool)

(assert (=> b!67486 (= e!44231 (not call!5673))))

(declare-fun b!67487 () Bool)

(assert (=> b!67487 (= e!44229 call!5671)))

(declare-fun b!67488 () Bool)

(declare-fun e!44225 () Bool)

(assert (=> b!67488 (= e!44225 (= (apply!72 lt!29344 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun b!67489 () Bool)

(assert (=> b!67489 (= e!44230 e!44234)))

(declare-fun c!9415 () Bool)

(assert (=> b!67489 (= c!9415 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!44232 () Bool)

(declare-fun b!67490 () Bool)

(assert (=> b!67490 (= e!44232 (= (apply!72 lt!29344 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67490 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))))))))

(assert (=> b!67490 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67491 () Bool)

(assert (=> b!67491 (= e!44226 (+!87 call!5668 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun bm!5666 () Bool)

(declare-fun call!5669 () ListLongMap!1379)

(declare-fun call!5672 () ListLongMap!1379)

(assert (=> bm!5666 (= call!5669 call!5672)))

(declare-fun call!5670 () ListLongMap!1379)

(declare-fun bm!5667 () Bool)

(assert (=> bm!5667 (= call!5670 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!67492 () Bool)

(assert (=> b!67492 (= e!44223 call!5669)))

(declare-fun b!67493 () Bool)

(declare-fun e!44224 () Bool)

(assert (=> b!67493 (= e!44224 (= (apply!72 lt!29344 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun bm!5668 () Bool)

(assert (=> bm!5668 (= call!5672 call!5670)))

(declare-fun b!67494 () Bool)

(assert (=> b!67494 (= e!44228 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67495 () Bool)

(assert (=> b!67495 (= e!44233 e!44232)))

(declare-fun res!36447 () Bool)

(assert (=> b!67495 (=> (not res!36447) (not e!44232))))

(assert (=> b!67495 (= res!36447 (contains!705 lt!29344 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67495 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67496 () Bool)

(assert (=> b!67496 (= e!44234 e!44224)))

(declare-fun res!36445 () Bool)

(assert (=> b!67496 (= res!36445 call!5667)))

(assert (=> b!67496 (=> (not res!36445) (not e!44224))))

(declare-fun bm!5669 () Bool)

(assert (=> bm!5669 (= call!5668 (+!87 (ite c!9419 call!5670 (ite c!9418 call!5672 call!5669)) (ite (or c!9419 c!9418) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!67497 () Bool)

(assert (=> b!67497 (= e!44231 e!44225)))

(declare-fun res!36448 () Bool)

(assert (=> b!67497 (= res!36448 call!5673)))

(assert (=> b!67497 (=> (not res!36448) (not e!44225))))

(declare-fun b!67498 () Bool)

(assert (=> b!67498 (= e!44223 call!5671)))

(declare-fun b!67499 () Bool)

(assert (=> b!67499 (= e!44227 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5670 () Bool)

(assert (=> bm!5670 (= call!5667 (contains!705 lt!29344 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14209 c!9419) b!67491))

(assert (= (and d!14209 (not c!9419)) b!67482))

(assert (= (and b!67482 c!9418) b!67487))

(assert (= (and b!67482 (not c!9418)) b!67480))

(assert (= (and b!67480 c!9416) b!67498))

(assert (= (and b!67480 (not c!9416)) b!67492))

(assert (= (or b!67498 b!67492) bm!5666))

(assert (= (or b!67487 bm!5666) bm!5668))

(assert (= (or b!67487 b!67498) bm!5665))

(assert (= (or b!67491 bm!5668) bm!5667))

(assert (= (or b!67491 bm!5665) bm!5669))

(assert (= (and d!14209 res!36451) b!67499))

(assert (= (and d!14209 c!9420) b!67485))

(assert (= (and d!14209 (not c!9420)) b!67483))

(assert (= (and d!14209 res!36452) b!67481))

(assert (= (and b!67481 res!36449) b!67494))

(assert (= (and b!67481 (not res!36444)) b!67495))

(assert (= (and b!67495 res!36447) b!67490))

(assert (= (and b!67481 res!36446) b!67484))

(assert (= (and b!67484 c!9417) b!67497))

(assert (= (and b!67484 (not c!9417)) b!67486))

(assert (= (and b!67497 res!36448) b!67488))

(assert (= (or b!67497 b!67486) bm!5664))

(assert (= (and b!67484 res!36450) b!67489))

(assert (= (and b!67489 c!9415) b!67496))

(assert (= (and b!67489 (not c!9415)) b!67479))

(assert (= (and b!67496 res!36445) b!67493))

(assert (= (or b!67496 b!67479) bm!5670))

(declare-fun b_lambda!3005 () Bool)

(assert (=> (not b_lambda!3005) (not b!67490)))

(assert (=> b!67490 t!4952))

(declare-fun b_and!4153 () Bool)

(assert (= b_and!4149 (and (=> t!4952 result!2587) b_and!4153)))

(assert (=> b!67490 t!4954))

(declare-fun b_and!4155 () Bool)

(assert (= b_and!4151 (and (=> t!4954 result!2589) b_and!4155)))

(declare-fun m!62581 () Bool)

(assert (=> b!67491 m!62581))

(assert (=> d!14209 m!60845))

(declare-fun m!62583 () Bool)

(assert (=> bm!5667 m!62583))

(declare-fun m!62585 () Bool)

(assert (=> b!67493 m!62585))

(assert (=> b!67494 m!60839))

(assert (=> b!67494 m!60839))

(assert (=> b!67494 m!60841))

(declare-fun m!62587 () Bool)

(assert (=> b!67485 m!62587))

(declare-fun m!62589 () Bool)

(assert (=> b!67485 m!62589))

(declare-fun m!62591 () Bool)

(assert (=> b!67485 m!62591))

(declare-fun m!62593 () Bool)

(assert (=> b!67485 m!62593))

(assert (=> b!67485 m!62587))

(declare-fun m!62595 () Bool)

(assert (=> b!67485 m!62595))

(declare-fun m!62597 () Bool)

(assert (=> b!67485 m!62597))

(assert (=> b!67485 m!62591))

(declare-fun m!62599 () Bool)

(assert (=> b!67485 m!62599))

(declare-fun m!62601 () Bool)

(assert (=> b!67485 m!62601))

(declare-fun m!62603 () Bool)

(assert (=> b!67485 m!62603))

(declare-fun m!62605 () Bool)

(assert (=> b!67485 m!62605))

(declare-fun m!62607 () Bool)

(assert (=> b!67485 m!62607))

(assert (=> b!67485 m!62583))

(declare-fun m!62609 () Bool)

(assert (=> b!67485 m!62609))

(assert (=> b!67485 m!62605))

(declare-fun m!62611 () Bool)

(assert (=> b!67485 m!62611))

(assert (=> b!67485 m!60839))

(declare-fun m!62613 () Bool)

(assert (=> b!67485 m!62613))

(assert (=> b!67485 m!62595))

(declare-fun m!62615 () Bool)

(assert (=> b!67485 m!62615))

(declare-fun m!62617 () Bool)

(assert (=> bm!5669 m!62617))

(declare-fun m!62619 () Bool)

(assert (=> bm!5670 m!62619))

(assert (=> b!67490 m!60885))

(assert (=> b!67490 m!60839))

(assert (=> b!67490 m!60839))

(declare-fun m!62621 () Bool)

(assert (=> b!67490 m!62621))

(declare-fun m!62623 () Bool)

(assert (=> b!67490 m!62623))

(assert (=> b!67490 m!60885))

(declare-fun m!62625 () Bool)

(assert (=> b!67490 m!62625))

(assert (=> b!67490 m!62623))

(declare-fun m!62627 () Bool)

(assert (=> bm!5664 m!62627))

(assert (=> b!67495 m!60839))

(assert (=> b!67495 m!60839))

(declare-fun m!62629 () Bool)

(assert (=> b!67495 m!62629))

(declare-fun m!62631 () Bool)

(assert (=> b!67488 m!62631))

(assert (=> b!67499 m!60839))

(assert (=> b!67499 m!60839))

(assert (=> b!67499 m!60841))

(assert (=> b!66852 d!14209))

(assert (=> d!13709 d!13707))

(assert (=> d!13709 d!13713))

(declare-fun d!14211 () Bool)

(assert (=> d!14211 (not (contains!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)) lt!28519))))

(assert (=> d!14211 true))

(declare-fun _$36!292 () Unit!1818)

(assert (=> d!14211 (= (choose!374 lt!28515 lt!28517 lt!28516 lt!28519) _$36!292)))

(declare-fun bs!2894 () Bool)

(assert (= bs!2894 d!14211))

(assert (=> bs!2894 m!60635))

(assert (=> bs!2894 m!60635))

(assert (=> bs!2894 m!60637))

(assert (=> d!13709 d!14211))

(declare-fun d!14213 () Bool)

(declare-fun e!44236 () Bool)

(assert (=> d!14213 e!44236))

(declare-fun res!36453 () Bool)

(assert (=> d!14213 (=> res!36453 e!44236)))

(declare-fun lt!29350 () Bool)

(assert (=> d!14213 (= res!36453 (not lt!29350))))

(declare-fun lt!29349 () Bool)

(assert (=> d!14213 (= lt!29350 lt!29349)))

(declare-fun lt!29347 () Unit!1818)

(declare-fun e!44237 () Unit!1818)

(assert (=> d!14213 (= lt!29347 e!44237)))

(declare-fun c!9421 () Bool)

(assert (=> d!14213 (= c!9421 lt!29349)))

(assert (=> d!14213 (= lt!29349 (containsKey!132 (toList!705 lt!28515) lt!28519))))

(assert (=> d!14213 (= (contains!705 lt!28515 lt!28519) lt!29350)))

(declare-fun b!67501 () Bool)

(declare-fun lt!29348 () Unit!1818)

(assert (=> b!67501 (= e!44237 lt!29348)))

(assert (=> b!67501 (= lt!29348 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28515) lt!28519))))

(assert (=> b!67501 (isDefined!82 (getValueByKey!128 (toList!705 lt!28515) lt!28519))))

(declare-fun b!67502 () Bool)

(declare-fun Unit!1871 () Unit!1818)

(assert (=> b!67502 (= e!44237 Unit!1871)))

(declare-fun b!67503 () Bool)

(assert (=> b!67503 (= e!44236 (isDefined!82 (getValueByKey!128 (toList!705 lt!28515) lt!28519)))))

(assert (= (and d!14213 c!9421) b!67501))

(assert (= (and d!14213 (not c!9421)) b!67502))

(assert (= (and d!14213 (not res!36453)) b!67503))

(declare-fun m!62633 () Bool)

(assert (=> d!14213 m!62633))

(declare-fun m!62635 () Bool)

(assert (=> b!67501 m!62635))

(declare-fun m!62637 () Bool)

(assert (=> b!67501 m!62637))

(assert (=> b!67501 m!62637))

(declare-fun m!62639 () Bool)

(assert (=> b!67501 m!62639))

(assert (=> b!67503 m!62637))

(assert (=> b!67503 m!62637))

(assert (=> b!67503 m!62639))

(assert (=> d!13709 d!14213))

(declare-fun d!14215 () Bool)

(declare-fun lt!29351 () Bool)

(assert (=> d!14215 (= lt!29351 (select (content!71 (t!4939 (toList!705 lt!28525))) lt!28403))))

(declare-fun e!44238 () Bool)

(assert (=> d!14215 (= lt!29351 e!44238)))

(declare-fun res!36455 () Bool)

(assert (=> d!14215 (=> (not res!36455) (not e!44238))))

(assert (=> d!14215 (= res!36455 ((_ is Cons!1462) (t!4939 (toList!705 lt!28525))))))

(assert (=> d!14215 (= (contains!707 (t!4939 (toList!705 lt!28525)) lt!28403) lt!29351)))

(declare-fun b!67504 () Bool)

(declare-fun e!44239 () Bool)

(assert (=> b!67504 (= e!44238 e!44239)))

(declare-fun res!36454 () Bool)

(assert (=> b!67504 (=> res!36454 e!44239)))

(assert (=> b!67504 (= res!36454 (= (h!2046 (t!4939 (toList!705 lt!28525))) lt!28403))))

(declare-fun b!67505 () Bool)

(assert (=> b!67505 (= e!44239 (contains!707 (t!4939 (t!4939 (toList!705 lt!28525))) lt!28403))))

(assert (= (and d!14215 res!36455) b!67504))

(assert (= (and b!67504 (not res!36454)) b!67505))

(assert (=> d!14215 m!62215))

(declare-fun m!62641 () Bool)

(assert (=> d!14215 m!62641))

(declare-fun m!62643 () Bool)

(assert (=> b!67505 m!62643))

(assert (=> b!66878 d!14215))

(assert (=> bm!5587 d!13779))

(declare-fun d!14217 () Bool)

(declare-fun e!44240 () Bool)

(assert (=> d!14217 e!44240))

(declare-fun res!36456 () Bool)

(assert (=> d!14217 (=> (not res!36456) (not e!44240))))

(declare-fun lt!29353 () ListLongMap!1379)

(assert (=> d!14217 (= res!36456 (contains!705 lt!29353 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun lt!29355 () List!1466)

(assert (=> d!14217 (= lt!29353 (ListLongMap!1380 lt!29355))))

(declare-fun lt!29352 () Unit!1818)

(declare-fun lt!29354 () Unit!1818)

(assert (=> d!14217 (= lt!29352 lt!29354)))

(assert (=> d!14217 (= (getValueByKey!128 lt!29355 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14217 (= lt!29354 (lemmaContainsTupThenGetReturnValue!48 lt!29355 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14217 (= lt!29355 (insertStrictlySorted!51 (toList!705 call!5555) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14217 (= (+!87 call!5555 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) lt!29353)))

(declare-fun b!67506 () Bool)

(declare-fun res!36457 () Bool)

(assert (=> b!67506 (=> (not res!36457) (not e!44240))))

(assert (=> b!67506 (= res!36457 (= (getValueByKey!128 (toList!705 lt!29353) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(declare-fun b!67507 () Bool)

(assert (=> b!67507 (= e!44240 (contains!707 (toList!705 lt!29353) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(assert (= (and d!14217 res!36456) b!67506))

(assert (= (and b!67506 res!36457) b!67507))

(declare-fun m!62645 () Bool)

(assert (=> d!14217 m!62645))

(declare-fun m!62647 () Bool)

(assert (=> d!14217 m!62647))

(declare-fun m!62649 () Bool)

(assert (=> d!14217 m!62649))

(declare-fun m!62651 () Bool)

(assert (=> d!14217 m!62651))

(declare-fun m!62653 () Bool)

(assert (=> b!67506 m!62653))

(declare-fun m!62655 () Bool)

(assert (=> b!67507 m!62655))

(assert (=> b!66569 d!14217))

(declare-fun b!67508 () Bool)

(declare-fun e!44242 () Bool)

(declare-fun e!44244 () Bool)

(assert (=> b!67508 (= e!44242 e!44244)))

(declare-fun c!9422 () Bool)

(assert (=> b!67508 (= c!9422 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000)))))

(declare-fun b!67509 () Bool)

(declare-fun call!5674 () Bool)

(assert (=> b!67509 (= e!44244 call!5674)))

(declare-fun b!67510 () Bool)

(declare-fun e!44241 () Bool)

(assert (=> b!67510 (= e!44241 (contains!708 Nil!1464 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000)))))

(declare-fun bm!5671 () Bool)

(assert (=> bm!5671 (= call!5674 (arrayNoDuplicates!0 (_keys!3785 (_2!1051 lt!28606)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9422 (Cons!1463 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000) Nil!1464) Nil!1464)))))

(declare-fun b!67511 () Bool)

(declare-fun e!44243 () Bool)

(assert (=> b!67511 (= e!44243 e!44242)))

(declare-fun res!36458 () Bool)

(assert (=> b!67511 (=> (not res!36458) (not e!44242))))

(assert (=> b!67511 (= res!36458 (not e!44241))))

(declare-fun res!36459 () Bool)

(assert (=> b!67511 (=> (not res!36459) (not e!44241))))

(assert (=> b!67511 (= res!36459 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000)))))

(declare-fun d!14219 () Bool)

(declare-fun res!36460 () Bool)

(assert (=> d!14219 (=> res!36460 e!44243)))

(assert (=> d!14219 (= res!36460 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28606)))))))

(assert (=> d!14219 (= (arrayNoDuplicates!0 (_keys!3785 (_2!1051 lt!28606)) #b00000000000000000000000000000000 Nil!1464) e!44243)))

(declare-fun b!67512 () Bool)

(assert (=> b!67512 (= e!44244 call!5674)))

(assert (= (and d!14219 (not res!36460)) b!67511))

(assert (= (and b!67511 res!36459) b!67510))

(assert (= (and b!67511 res!36458) b!67508))

(assert (= (and b!67508 c!9422) b!67512))

(assert (= (and b!67508 (not c!9422)) b!67509))

(assert (= (or b!67512 b!67509) bm!5671))

(declare-fun m!62657 () Bool)

(assert (=> b!67508 m!62657))

(assert (=> b!67508 m!62657))

(declare-fun m!62659 () Bool)

(assert (=> b!67508 m!62659))

(assert (=> b!67510 m!62657))

(assert (=> b!67510 m!62657))

(declare-fun m!62661 () Bool)

(assert (=> b!67510 m!62661))

(assert (=> bm!5671 m!62657))

(declare-fun m!62663 () Bool)

(assert (=> bm!5671 m!62663))

(assert (=> b!67511 m!62657))

(assert (=> b!67511 m!62657))

(assert (=> b!67511 m!62659))

(assert (=> b!66612 d!14219))

(assert (=> b!66991 d!13959))

(declare-fun d!14221 () Bool)

(declare-fun e!44245 () Bool)

(assert (=> d!14221 e!44245))

(declare-fun res!36461 () Bool)

(assert (=> d!14221 (=> res!36461 e!44245)))

(declare-fun lt!29359 () Bool)

(assert (=> d!14221 (= res!36461 (not lt!29359))))

(declare-fun lt!29358 () Bool)

(assert (=> d!14221 (= lt!29359 lt!29358)))

(declare-fun lt!29356 () Unit!1818)

(declare-fun e!44246 () Unit!1818)

(assert (=> d!14221 (= lt!29356 e!44246)))

(declare-fun c!9423 () Bool)

(assert (=> d!14221 (= c!9423 lt!29358)))

(assert (=> d!14221 (= lt!29358 (containsKey!132 (toList!705 lt!28740) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!14221 (= (contains!705 lt!28740 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!29359)))

(declare-fun b!67513 () Bool)

(declare-fun lt!29357 () Unit!1818)

(assert (=> b!67513 (= e!44246 lt!29357)))

(assert (=> b!67513 (= lt!29357 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28740) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!67513 (isDefined!82 (getValueByKey!128 (toList!705 lt!28740) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!67514 () Bool)

(declare-fun Unit!1872 () Unit!1818)

(assert (=> b!67514 (= e!44246 Unit!1872)))

(declare-fun b!67515 () Bool)

(assert (=> b!67515 (= e!44245 (isDefined!82 (getValueByKey!128 (toList!705 lt!28740) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!14221 c!9423) b!67513))

(assert (= (and d!14221 (not c!9423)) b!67514))

(assert (= (and d!14221 (not res!36461)) b!67515))

(assert (=> d!14221 m!60931))

(declare-fun m!62665 () Bool)

(assert (=> d!14221 m!62665))

(assert (=> b!67513 m!60931))

(declare-fun m!62667 () Bool)

(assert (=> b!67513 m!62667))

(assert (=> b!67513 m!60931))

(assert (=> b!67513 m!62217))

(assert (=> b!67513 m!62217))

(declare-fun m!62669 () Bool)

(assert (=> b!67513 m!62669))

(assert (=> b!67515 m!60931))

(assert (=> b!67515 m!62217))

(assert (=> b!67515 m!62217))

(assert (=> b!67515 m!62669))

(assert (=> b!66608 d!14221))

(declare-fun d!14223 () Bool)

(declare-fun lt!29360 () Bool)

(assert (=> d!14223 (= lt!29360 (select (content!71 lt!28875) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(declare-fun e!44247 () Bool)

(assert (=> d!14223 (= lt!29360 e!44247)))

(declare-fun res!36463 () Bool)

(assert (=> d!14223 (=> (not res!36463) (not e!44247))))

(assert (=> d!14223 (= res!36463 ((_ is Cons!1462) lt!28875))))

(assert (=> d!14223 (= (contains!707 lt!28875 (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))) lt!29360)))

(declare-fun b!67516 () Bool)

(declare-fun e!44248 () Bool)

(assert (=> b!67516 (= e!44247 e!44248)))

(declare-fun res!36462 () Bool)

(assert (=> b!67516 (=> res!36462 e!44248)))

(assert (=> b!67516 (= res!36462 (= (h!2046 lt!28875) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(declare-fun b!67517 () Bool)

(assert (=> b!67517 (= e!44248 (contains!707 (t!4939 lt!28875) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(assert (= (and d!14223 res!36463) b!67516))

(assert (= (and b!67516 (not res!36462)) b!67517))

(declare-fun m!62671 () Bool)

(assert (=> d!14223 m!62671))

(declare-fun m!62673 () Bool)

(assert (=> d!14223 m!62673))

(declare-fun m!62675 () Bool)

(assert (=> b!67517 m!62675))

(assert (=> b!66745 d!14223))

(declare-fun d!14225 () Bool)

(declare-fun e!44249 () Bool)

(assert (=> d!14225 e!44249))

(declare-fun res!36464 () Bool)

(assert (=> d!14225 (=> res!36464 e!44249)))

(declare-fun lt!29364 () Bool)

(assert (=> d!14225 (= res!36464 (not lt!29364))))

(declare-fun lt!29363 () Bool)

(assert (=> d!14225 (= lt!29364 lt!29363)))

(declare-fun lt!29361 () Unit!1818)

(declare-fun e!44250 () Unit!1818)

(assert (=> d!14225 (= lt!29361 e!44250)))

(declare-fun c!9424 () Bool)

(assert (=> d!14225 (= c!9424 lt!29363)))

(assert (=> d!14225 (= lt!29363 (containsKey!132 (toList!705 lt!28724) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14225 (= (contains!705 lt!28724 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29364)))

(declare-fun b!67518 () Bool)

(declare-fun lt!29362 () Unit!1818)

(assert (=> b!67518 (= e!44250 lt!29362)))

(assert (=> b!67518 (= lt!29362 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28724) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67518 (isDefined!82 (getValueByKey!128 (toList!705 lt!28724) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67519 () Bool)

(declare-fun Unit!1873 () Unit!1818)

(assert (=> b!67519 (= e!44250 Unit!1873)))

(declare-fun b!67520 () Bool)

(assert (=> b!67520 (= e!44249 (isDefined!82 (getValueByKey!128 (toList!705 lt!28724) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14225 c!9424) b!67518))

(assert (= (and d!14225 (not c!9424)) b!67519))

(assert (= (and d!14225 (not res!36464)) b!67520))

(declare-fun m!62677 () Bool)

(assert (=> d!14225 m!62677))

(declare-fun m!62679 () Bool)

(assert (=> b!67518 m!62679))

(declare-fun m!62681 () Bool)

(assert (=> b!67518 m!62681))

(assert (=> b!67518 m!62681))

(declare-fun m!62683 () Bool)

(assert (=> b!67518 m!62683))

(assert (=> b!67520 m!62681))

(assert (=> b!67520 m!62681))

(assert (=> b!67520 m!62683))

(assert (=> bm!5551 d!14225))

(declare-fun d!14227 () Bool)

(declare-fun lt!29365 () Bool)

(assert (=> d!14227 (= lt!29365 (select (content!71 (toList!705 lt!28858)) (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun e!44251 () Bool)

(assert (=> d!14227 (= lt!29365 e!44251)))

(declare-fun res!36466 () Bool)

(assert (=> d!14227 (=> (not res!36466) (not e!44251))))

(assert (=> d!14227 (= res!36466 ((_ is Cons!1462) (toList!705 lt!28858)))))

(assert (=> d!14227 (= (contains!707 (toList!705 lt!28858) (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) lt!29365)))

(declare-fun b!67521 () Bool)

(declare-fun e!44252 () Bool)

(assert (=> b!67521 (= e!44251 e!44252)))

(declare-fun res!36465 () Bool)

(assert (=> b!67521 (=> res!36465 e!44252)))

(assert (=> b!67521 (= res!36465 (= (h!2046 (toList!705 lt!28858)) (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67522 () Bool)

(assert (=> b!67522 (= e!44252 (contains!707 (t!4939 (toList!705 lt!28858)) (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (= (and d!14227 res!36466) b!67521))

(assert (= (and b!67521 (not res!36465)) b!67522))

(declare-fun m!62685 () Bool)

(assert (=> d!14227 m!62685))

(declare-fun m!62687 () Bool)

(assert (=> d!14227 m!62687))

(declare-fun m!62689 () Bool)

(assert (=> b!67522 m!62689))

(assert (=> b!66682 d!14227))

(assert (=> d!13831 d!13829))

(declare-fun d!14229 () Bool)

(assert (=> d!14229 (= (getValueByKey!128 lt!28494 (_1!1052 lt!28408)) (Some!133 (_2!1052 lt!28408)))))

(assert (=> d!14229 true))

(declare-fun _$22!369 () Unit!1818)

(assert (=> d!14229 (= (choose!375 lt!28494 (_1!1052 lt!28408) (_2!1052 lt!28408)) _$22!369)))

(declare-fun bs!2895 () Bool)

(assert (= bs!2895 d!14229))

(assert (=> bs!2895 m!60603))

(assert (=> d!13831 d!14229))

(declare-fun d!14231 () Bool)

(declare-fun res!36467 () Bool)

(declare-fun e!44253 () Bool)

(assert (=> d!14231 (=> res!36467 e!44253)))

(assert (=> d!14231 (= res!36467 (or ((_ is Nil!1463) lt!28494) ((_ is Nil!1463) (t!4939 lt!28494))))))

(assert (=> d!14231 (= (isStrictlySorted!284 lt!28494) e!44253)))

(declare-fun b!67523 () Bool)

(declare-fun e!44254 () Bool)

(assert (=> b!67523 (= e!44253 e!44254)))

(declare-fun res!36468 () Bool)

(assert (=> b!67523 (=> (not res!36468) (not e!44254))))

(assert (=> b!67523 (= res!36468 (bvslt (_1!1052 (h!2046 lt!28494)) (_1!1052 (h!2046 (t!4939 lt!28494)))))))

(declare-fun b!67524 () Bool)

(assert (=> b!67524 (= e!44254 (isStrictlySorted!284 (t!4939 lt!28494)))))

(assert (= (and d!14231 (not res!36467)) b!67523))

(assert (= (and b!67523 res!36468) b!67524))

(declare-fun m!62691 () Bool)

(assert (=> b!67524 m!62691))

(assert (=> d!13831 d!14231))

(declare-fun d!14233 () Bool)

(assert (=> d!14233 (= (+!87 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (getCurrentListMap!401 (_keys!3785 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(assert (=> d!14233 true))

(declare-fun _$5!71 () Unit!1818)

(assert (=> d!14233 (= (choose!380 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3073 lt!28615) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400 (defaultEntry!2146 newMap!16)) _$5!71)))

(declare-fun bs!2896 () Bool)

(assert (= bs!2896 d!14233))

(assert (=> bs!2896 m!60697))

(assert (=> bs!2896 m!60697))

(assert (=> bs!2896 m!61065))

(assert (=> bs!2896 m!60731))

(assert (=> bs!2896 m!61311))

(assert (=> d!13799 d!14233))

(assert (=> d!13799 d!13991))

(declare-fun b!67528 () Bool)

(declare-fun e!44256 () Option!134)

(assert (=> b!67528 (= e!44256 None!132)))

(declare-fun b!67527 () Bool)

(assert (=> b!67527 (= e!44256 (getValueByKey!128 (t!4939 (toList!705 lt!29047)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67525 () Bool)

(declare-fun e!44255 () Option!134)

(assert (=> b!67525 (= e!44255 (Some!133 (_2!1052 (h!2046 (toList!705 lt!29047)))))))

(declare-fun d!14235 () Bool)

(declare-fun c!9425 () Bool)

(assert (=> d!14235 (= c!9425 (and ((_ is Cons!1462) (toList!705 lt!29047)) (= (_1!1052 (h!2046 (toList!705 lt!29047))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14235 (= (getValueByKey!128 (toList!705 lt!29047) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44255)))

(declare-fun b!67526 () Bool)

(assert (=> b!67526 (= e!44255 e!44256)))

(declare-fun c!9426 () Bool)

(assert (=> b!67526 (= c!9426 (and ((_ is Cons!1462) (toList!705 lt!29047)) (not (= (_1!1052 (h!2046 (toList!705 lt!29047))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14235 c!9425) b!67525))

(assert (= (and d!14235 (not c!9425)) b!67526))

(assert (= (and b!67526 c!9426) b!67527))

(assert (= (and b!67526 (not c!9426)) b!67528))

(declare-fun m!62693 () Bool)

(assert (=> b!67527 m!62693))

(assert (=> b!67004 d!14235))

(declare-fun d!14237 () Bool)

(assert (=> d!14237 (isDefined!82 (getValueByKey!128 (toList!705 call!5518) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))

(declare-fun lt!29366 () Unit!1818)

(assert (=> d!14237 (= lt!29366 (choose!384 (toList!705 call!5518) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))

(declare-fun e!44257 () Bool)

(assert (=> d!14237 e!44257))

(declare-fun res!36469 () Bool)

(assert (=> d!14237 (=> (not res!36469) (not e!44257))))

(assert (=> d!14237 (= res!36469 (isStrictlySorted!284 (toList!705 call!5518)))))

(assert (=> d!14237 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 call!5518) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))) lt!29366)))

(declare-fun b!67529 () Bool)

(assert (=> b!67529 (= e!44257 (containsKey!132 (toList!705 call!5518) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))

(assert (= (and d!14237 res!36469) b!67529))

(assert (=> d!14237 m!60741))

(assert (=> d!14237 m!61299))

(assert (=> d!14237 m!61299))

(assert (=> d!14237 m!61301))

(assert (=> d!14237 m!60741))

(declare-fun m!62695 () Bool)

(assert (=> d!14237 m!62695))

(declare-fun m!62697 () Bool)

(assert (=> d!14237 m!62697))

(assert (=> b!67529 m!60741))

(assert (=> b!67529 m!61295))

(assert (=> b!66844 d!14237))

(assert (=> b!66844 d!13973))

(assert (=> b!66844 d!13975))

(declare-fun d!14239 () Bool)

(assert (=> d!14239 (= ($colon$colon!62 e!43904 (ite c!9282 (h!2046 (toList!705 lt!28402)) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403)))) (Cons!1462 (ite c!9282 (h!2046 (toList!705 lt!28402)) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))) e!43904))))

(assert (=> bm!5606 d!14239))

(declare-fun d!14241 () Bool)

(declare-fun lt!29367 () Bool)

(assert (=> d!14241 (= lt!29367 (select (content!71 (t!4939 (toList!705 lt!28492))) lt!28408))))

(declare-fun e!44258 () Bool)

(assert (=> d!14241 (= lt!29367 e!44258)))

(declare-fun res!36471 () Bool)

(assert (=> d!14241 (=> (not res!36471) (not e!44258))))

(assert (=> d!14241 (= res!36471 ((_ is Cons!1462) (t!4939 (toList!705 lt!28492))))))

(assert (=> d!14241 (= (contains!707 (t!4939 (toList!705 lt!28492)) lt!28408) lt!29367)))

(declare-fun b!67530 () Bool)

(declare-fun e!44259 () Bool)

(assert (=> b!67530 (= e!44258 e!44259)))

(declare-fun res!36470 () Bool)

(assert (=> b!67530 (=> res!36470 e!44259)))

(assert (=> b!67530 (= res!36470 (= (h!2046 (t!4939 (toList!705 lt!28492))) lt!28408))))

(declare-fun b!67531 () Bool)

(assert (=> b!67531 (= e!44259 (contains!707 (t!4939 (t!4939 (toList!705 lt!28492))) lt!28408))))

(assert (= (and d!14241 res!36471) b!67530))

(assert (= (and b!67530 (not res!36470)) b!67531))

(assert (=> d!14241 m!62081))

(declare-fun m!62699 () Bool)

(assert (=> d!14241 m!62699))

(declare-fun m!62701 () Bool)

(assert (=> b!67531 m!62701))

(assert (=> b!66614 d!14241))

(declare-fun d!14243 () Bool)

(declare-fun res!36472 () Bool)

(declare-fun e!44260 () Bool)

(assert (=> d!14243 (=> res!36472 e!44260)))

(assert (=> d!14243 (= res!36472 (and ((_ is Cons!1462) (toList!705 call!5518)) (= (_1!1052 (h!2046 (toList!705 call!5518))) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615)))))))

(assert (=> d!14243 (= (containsKey!132 (toList!705 call!5518) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))) e!44260)))

(declare-fun b!67532 () Bool)

(declare-fun e!44261 () Bool)

(assert (=> b!67532 (= e!44260 e!44261)))

(declare-fun res!36473 () Bool)

(assert (=> b!67532 (=> (not res!36473) (not e!44261))))

(assert (=> b!67532 (= res!36473 (and (or (not ((_ is Cons!1462) (toList!705 call!5518))) (bvsle (_1!1052 (h!2046 (toList!705 call!5518))) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615)))) ((_ is Cons!1462) (toList!705 call!5518)) (bvslt (_1!1052 (h!2046 (toList!705 call!5518))) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615)))))))

(declare-fun b!67533 () Bool)

(assert (=> b!67533 (= e!44261 (containsKey!132 (t!4939 (toList!705 call!5518)) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615))))))

(assert (= (and d!14243 (not res!36472)) b!67532))

(assert (= (and b!67532 res!36473) b!67533))

(assert (=> b!67533 m!60741))

(declare-fun m!62703 () Bool)

(assert (=> b!67533 m!62703))

(assert (=> d!13795 d!14243))

(declare-fun d!14245 () Bool)

(declare-fun res!36474 () Bool)

(declare-fun e!44262 () Bool)

(assert (=> d!14245 (=> res!36474 e!44262)))

(assert (=> d!14245 (= res!36474 (or ((_ is Nil!1463) lt!28990) ((_ is Nil!1463) (t!4939 lt!28990))))))

(assert (=> d!14245 (= (isStrictlySorted!284 lt!28990) e!44262)))

(declare-fun b!67534 () Bool)

(declare-fun e!44263 () Bool)

(assert (=> b!67534 (= e!44262 e!44263)))

(declare-fun res!36475 () Bool)

(assert (=> b!67534 (=> (not res!36475) (not e!44263))))

(assert (=> b!67534 (= res!36475 (bvslt (_1!1052 (h!2046 lt!28990)) (_1!1052 (h!2046 (t!4939 lt!28990)))))))

(declare-fun b!67535 () Bool)

(assert (=> b!67535 (= e!44263 (isStrictlySorted!284 (t!4939 lt!28990)))))

(assert (= (and d!14245 (not res!36474)) b!67534))

(assert (= (and b!67534 res!36475) b!67535))

(declare-fun m!62705 () Bool)

(assert (=> b!67535 m!62705))

(assert (=> d!13833 d!14245))

(declare-fun d!14247 () Bool)

(declare-fun res!36476 () Bool)

(declare-fun e!44264 () Bool)

(assert (=> d!14247 (=> res!36476 e!44264)))

(assert (=> d!14247 (= res!36476 (or ((_ is Nil!1463) (toList!705 lt!28402)) ((_ is Nil!1463) (t!4939 (toList!705 lt!28402)))))))

(assert (=> d!14247 (= (isStrictlySorted!284 (toList!705 lt!28402)) e!44264)))

(declare-fun b!67536 () Bool)

(declare-fun e!44265 () Bool)

(assert (=> b!67536 (= e!44264 e!44265)))

(declare-fun res!36477 () Bool)

(assert (=> b!67536 (=> (not res!36477) (not e!44265))))

(assert (=> b!67536 (= res!36477 (bvslt (_1!1052 (h!2046 (toList!705 lt!28402))) (_1!1052 (h!2046 (t!4939 (toList!705 lt!28402))))))))

(declare-fun b!67537 () Bool)

(assert (=> b!67537 (= e!44265 (isStrictlySorted!284 (t!4939 (toList!705 lt!28402))))))

(assert (= (and d!14247 (not res!36476)) b!67536))

(assert (= (and b!67536 res!36477) b!67537))

(assert (=> b!67537 m!62085))

(assert (=> d!13833 d!14247))

(declare-fun d!14249 () Bool)

(declare-fun lt!29368 () Bool)

(assert (=> d!14249 (= lt!29368 (select (content!71 (toList!705 lt!28760)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!44266 () Bool)

(assert (=> d!14249 (= lt!29368 e!44266)))

(declare-fun res!36479 () Bool)

(assert (=> d!14249 (=> (not res!36479) (not e!44266))))

(assert (=> d!14249 (= res!36479 ((_ is Cons!1462) (toList!705 lt!28760)))))

(assert (=> d!14249 (= (contains!707 (toList!705 lt!28760) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!29368)))

(declare-fun b!67538 () Bool)

(declare-fun e!44267 () Bool)

(assert (=> b!67538 (= e!44266 e!44267)))

(declare-fun res!36478 () Bool)

(assert (=> b!67538 (=> res!36478 e!44267)))

(assert (=> b!67538 (= res!36478 (= (h!2046 (toList!705 lt!28760)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67539 () Bool)

(assert (=> b!67539 (= e!44267 (contains!707 (t!4939 (toList!705 lt!28760)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!14249 res!36479) b!67538))

(assert (= (and b!67538 (not res!36478)) b!67539))

(declare-fun m!62707 () Bool)

(assert (=> d!14249 m!62707))

(declare-fun m!62709 () Bool)

(assert (=> d!14249 m!62709))

(declare-fun m!62711 () Bool)

(assert (=> b!67539 m!62711))

(assert (=> b!66627 d!14249))

(assert (=> b!66774 d!13959))

(declare-fun d!14251 () Bool)

(declare-fun res!36480 () Bool)

(declare-fun e!44268 () Bool)

(assert (=> d!14251 (=> res!36480 e!44268)))

(assert (=> d!14251 (= res!36480 (and ((_ is Cons!1462) lt!28990) (= (_1!1052 (h!2046 lt!28990)) (_1!1052 lt!28408))))))

(assert (=> d!14251 (= (containsKey!132 lt!28990 (_1!1052 lt!28408)) e!44268)))

(declare-fun b!67540 () Bool)

(declare-fun e!44269 () Bool)

(assert (=> b!67540 (= e!44268 e!44269)))

(declare-fun res!36481 () Bool)

(assert (=> b!67540 (=> (not res!36481) (not e!44269))))

(assert (=> b!67540 (= res!36481 (and (or (not ((_ is Cons!1462) lt!28990)) (bvsle (_1!1052 (h!2046 lt!28990)) (_1!1052 lt!28408))) ((_ is Cons!1462) lt!28990) (bvslt (_1!1052 (h!2046 lt!28990)) (_1!1052 lt!28408))))))

(declare-fun b!67541 () Bool)

(assert (=> b!67541 (= e!44269 (containsKey!132 (t!4939 lt!28990) (_1!1052 lt!28408)))))

(assert (= (and d!14251 (not res!36480)) b!67540))

(assert (= (and b!67540 res!36481) b!67541))

(declare-fun m!62713 () Bool)

(assert (=> b!67541 m!62713))

(assert (=> b!66914 d!14251))

(declare-fun bm!5672 () Bool)

(declare-fun call!5676 () List!1466)

(declare-fun call!5677 () List!1466)

(assert (=> bm!5672 (= call!5676 call!5677)))

(declare-fun d!14253 () Bool)

(declare-fun e!44271 () Bool)

(assert (=> d!14253 e!44271))

(declare-fun res!36483 () Bool)

(assert (=> d!14253 (=> (not res!36483) (not e!44271))))

(declare-fun lt!29369 () List!1466)

(assert (=> d!14253 (= res!36483 (isStrictlySorted!284 lt!29369))))

(declare-fun e!44272 () List!1466)

(assert (=> d!14253 (= lt!29369 e!44272)))

(declare-fun c!9428 () Bool)

(assert (=> d!14253 (= c!9428 (and ((_ is Cons!1462) (t!4939 (toList!705 (+!87 lt!28402 lt!28403)))) (bvslt (_1!1052 (h!2046 (t!4939 (toList!705 (+!87 lt!28402 lt!28403))))) (_1!1052 lt!28408))))))

(assert (=> d!14253 (isStrictlySorted!284 (t!4939 (toList!705 (+!87 lt!28402 lt!28403))))))

(assert (=> d!14253 (= (insertStrictlySorted!51 (t!4939 (toList!705 (+!87 lt!28402 lt!28403))) (_1!1052 lt!28408) (_2!1052 lt!28408)) lt!29369)))

(declare-fun c!9427 () Bool)

(declare-fun b!67542 () Bool)

(assert (=> b!67542 (= c!9427 (and ((_ is Cons!1462) (t!4939 (toList!705 (+!87 lt!28402 lt!28403)))) (bvsgt (_1!1052 (h!2046 (t!4939 (toList!705 (+!87 lt!28402 lt!28403))))) (_1!1052 lt!28408))))))

(declare-fun e!44273 () List!1466)

(declare-fun e!44270 () List!1466)

(assert (=> b!67542 (= e!44273 e!44270)))

(declare-fun b!67543 () Bool)

(declare-fun c!9430 () Bool)

(declare-fun e!44274 () List!1466)

(assert (=> b!67543 (= e!44274 (ite c!9430 (t!4939 (t!4939 (toList!705 (+!87 lt!28402 lt!28403)))) (ite c!9427 (Cons!1462 (h!2046 (t!4939 (toList!705 (+!87 lt!28402 lt!28403)))) (t!4939 (t!4939 (toList!705 (+!87 lt!28402 lt!28403))))) Nil!1463)))))

(declare-fun b!67544 () Bool)

(assert (=> b!67544 (= e!44272 e!44273)))

(assert (=> b!67544 (= c!9430 (and ((_ is Cons!1462) (t!4939 (toList!705 (+!87 lt!28402 lt!28403)))) (= (_1!1052 (h!2046 (t!4939 (toList!705 (+!87 lt!28402 lt!28403))))) (_1!1052 lt!28408))))))

(declare-fun bm!5673 () Bool)

(declare-fun call!5675 () List!1466)

(assert (=> bm!5673 (= call!5677 call!5675)))

(declare-fun b!67545 () Bool)

(assert (=> b!67545 (= e!44274 (insertStrictlySorted!51 (t!4939 (t!4939 (toList!705 (+!87 lt!28402 lt!28403)))) (_1!1052 lt!28408) (_2!1052 lt!28408)))))

(declare-fun b!67546 () Bool)

(assert (=> b!67546 (= e!44271 (contains!707 lt!29369 (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(declare-fun b!67547 () Bool)

(assert (=> b!67547 (= e!44273 call!5677)))

(declare-fun b!67548 () Bool)

(assert (=> b!67548 (= e!44272 call!5675)))

(declare-fun b!67549 () Bool)

(declare-fun res!36482 () Bool)

(assert (=> b!67549 (=> (not res!36482) (not e!44271))))

(assert (=> b!67549 (= res!36482 (containsKey!132 lt!29369 (_1!1052 lt!28408)))))

(declare-fun b!67550 () Bool)

(assert (=> b!67550 (= e!44270 call!5676)))

(declare-fun b!67551 () Bool)

(assert (=> b!67551 (= e!44270 call!5676)))

(declare-fun bm!5674 () Bool)

(assert (=> bm!5674 (= call!5675 ($colon$colon!62 e!44274 (ite c!9428 (h!2046 (t!4939 (toList!705 (+!87 lt!28402 lt!28403)))) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408)))))))

(declare-fun c!9429 () Bool)

(assert (=> bm!5674 (= c!9429 c!9428)))

(assert (= (and d!14253 c!9428) b!67548))

(assert (= (and d!14253 (not c!9428)) b!67544))

(assert (= (and b!67544 c!9430) b!67547))

(assert (= (and b!67544 (not c!9430)) b!67542))

(assert (= (and b!67542 c!9427) b!67551))

(assert (= (and b!67542 (not c!9427)) b!67550))

(assert (= (or b!67551 b!67550) bm!5672))

(assert (= (or b!67547 bm!5672) bm!5673))

(assert (= (or b!67548 bm!5673) bm!5674))

(assert (= (and bm!5674 c!9429) b!67545))

(assert (= (and bm!5674 (not c!9429)) b!67543))

(assert (= (and d!14253 res!36483) b!67549))

(assert (= (and b!67549 res!36482) b!67546))

(declare-fun m!62715 () Bool)

(assert (=> d!14253 m!62715))

(assert (=> d!14253 m!62359))

(declare-fun m!62717 () Bool)

(assert (=> b!67549 m!62717))

(declare-fun m!62719 () Bool)

(assert (=> b!67546 m!62719))

(declare-fun m!62721 () Bool)

(assert (=> bm!5674 m!62721))

(declare-fun m!62723 () Bool)

(assert (=> b!67545 m!62723))

(assert (=> b!66744 d!14253))

(declare-fun b!67555 () Bool)

(declare-fun e!44276 () Option!134)

(assert (=> b!67555 (= e!44276 None!132)))

(declare-fun b!67554 () Bool)

(assert (=> b!67554 (= e!44276 (getValueByKey!128 (t!4939 (toList!705 lt!28749)) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67552 () Bool)

(declare-fun e!44275 () Option!134)

(assert (=> b!67552 (= e!44275 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28749)))))))

(declare-fun d!14255 () Bool)

(declare-fun c!9431 () Bool)

(assert (=> d!14255 (= c!9431 (and ((_ is Cons!1462) (toList!705 lt!28749)) (= (_1!1052 (h!2046 (toList!705 lt!28749))) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14255 (= (getValueByKey!128 (toList!705 lt!28749) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44275)))

(declare-fun b!67553 () Bool)

(assert (=> b!67553 (= e!44275 e!44276)))

(declare-fun c!9432 () Bool)

(assert (=> b!67553 (= c!9432 (and ((_ is Cons!1462) (toList!705 lt!28749)) (not (= (_1!1052 (h!2046 (toList!705 lt!28749))) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14255 c!9431) b!67552))

(assert (= (and d!14255 (not c!9431)) b!67553))

(assert (= (and b!67553 c!9432) b!67554))

(assert (= (and b!67553 (not c!9432)) b!67555))

(declare-fun m!62725 () Bool)

(assert (=> b!67554 m!62725))

(assert (=> b!66615 d!14255))

(declare-fun lt!29370 () Bool)

(declare-fun d!14257 () Bool)

(assert (=> d!14257 (= lt!29370 (select (content!71 (toList!705 lt!28728)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(declare-fun e!44277 () Bool)

(assert (=> d!14257 (= lt!29370 e!44277)))

(declare-fun res!36485 () Bool)

(assert (=> d!14257 (=> (not res!36485) (not e!44277))))

(assert (=> d!14257 (= res!36485 ((_ is Cons!1462) (toList!705 lt!28728)))))

(assert (=> d!14257 (= (contains!707 (toList!705 lt!28728) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) lt!29370)))

(declare-fun b!67556 () Bool)

(declare-fun e!44278 () Bool)

(assert (=> b!67556 (= e!44277 e!44278)))

(declare-fun res!36484 () Bool)

(assert (=> b!67556 (=> res!36484 e!44278)))

(assert (=> b!67556 (= res!36484 (= (h!2046 (toList!705 lt!28728)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(declare-fun b!67557 () Bool)

(assert (=> b!67557 (= e!44278 (contains!707 (t!4939 (toList!705 lt!28728)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(assert (= (and d!14257 res!36485) b!67556))

(assert (= (and b!67556 (not res!36484)) b!67557))

(declare-fun m!62727 () Bool)

(assert (=> d!14257 m!62727))

(declare-fun m!62729 () Bool)

(assert (=> d!14257 m!62729))

(declare-fun m!62731 () Bool)

(assert (=> b!67557 m!62731))

(assert (=> b!66579 d!14257))

(assert (=> d!13869 d!13863))

(assert (=> d!13869 d!13865))

(declare-fun d!14259 () Bool)

(assert (=> d!14259 (isDefined!82 (getValueByKey!128 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!14259 true))

(declare-fun _$12!314 () Unit!1818)

(assert (=> d!14259 (= (choose!384 (toList!705 lt!28404) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) _$12!314)))

(declare-fun bs!2897 () Bool)

(assert (= bs!2897 d!14259))

(assert (=> bs!2897 m!60449))

(assert (=> bs!2897 m!60691))

(assert (=> bs!2897 m!60691))

(assert (=> bs!2897 m!60693))

(assert (=> d!13869 d!14259))

(declare-fun d!14261 () Bool)

(declare-fun res!36486 () Bool)

(declare-fun e!44279 () Bool)

(assert (=> d!14261 (=> res!36486 e!44279)))

(assert (=> d!14261 (= res!36486 (or ((_ is Nil!1463) (toList!705 lt!28404)) ((_ is Nil!1463) (t!4939 (toList!705 lt!28404)))))))

(assert (=> d!14261 (= (isStrictlySorted!284 (toList!705 lt!28404)) e!44279)))

(declare-fun b!67558 () Bool)

(declare-fun e!44280 () Bool)

(assert (=> b!67558 (= e!44279 e!44280)))

(declare-fun res!36487 () Bool)

(assert (=> b!67558 (=> (not res!36487) (not e!44280))))

(assert (=> b!67558 (= res!36487 (bvslt (_1!1052 (h!2046 (toList!705 lt!28404))) (_1!1052 (h!2046 (t!4939 (toList!705 lt!28404))))))))

(declare-fun b!67559 () Bool)

(assert (=> b!67559 (= e!44280 (isStrictlySorted!284 (t!4939 (toList!705 lt!28404))))))

(assert (= (and d!14261 (not res!36486)) b!67558))

(assert (= (and b!67558 res!36487) b!67559))

(declare-fun m!62733 () Bool)

(assert (=> b!67559 m!62733))

(assert (=> d!13869 d!14261))

(declare-fun d!14263 () Bool)

(declare-fun e!44281 () Bool)

(assert (=> d!14263 e!44281))

(declare-fun res!36488 () Bool)

(assert (=> d!14263 (=> res!36488 e!44281)))

(declare-fun lt!29374 () Bool)

(assert (=> d!14263 (= res!36488 (not lt!29374))))

(declare-fun lt!29373 () Bool)

(assert (=> d!14263 (= lt!29374 lt!29373)))

(declare-fun lt!29371 () Unit!1818)

(declare-fun e!44282 () Unit!1818)

(assert (=> d!14263 (= lt!29371 e!44282)))

(declare-fun c!9433 () Bool)

(assert (=> d!14263 (= c!9433 lt!29373)))

(assert (=> d!14263 (= lt!29373 (containsKey!132 (toList!705 lt!28749) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!14263 (= (contains!705 lt!28749 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29374)))

(declare-fun b!67560 () Bool)

(declare-fun lt!29372 () Unit!1818)

(assert (=> b!67560 (= e!44282 lt!29372)))

(assert (=> b!67560 (= lt!29372 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28749) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> b!67560 (isDefined!82 (getValueByKey!128 (toList!705 lt!28749) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67561 () Bool)

(declare-fun Unit!1874 () Unit!1818)

(assert (=> b!67561 (= e!44282 Unit!1874)))

(declare-fun b!67562 () Bool)

(assert (=> b!67562 (= e!44281 (isDefined!82 (getValueByKey!128 (toList!705 lt!28749) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14263 c!9433) b!67560))

(assert (= (and d!14263 (not c!9433)) b!67561))

(assert (= (and d!14263 (not res!36488)) b!67562))

(declare-fun m!62735 () Bool)

(assert (=> d!14263 m!62735))

(declare-fun m!62737 () Bool)

(assert (=> b!67560 m!62737))

(assert (=> b!67560 m!60979))

(assert (=> b!67560 m!60979))

(declare-fun m!62739 () Bool)

(assert (=> b!67560 m!62739))

(assert (=> b!67562 m!60979))

(assert (=> b!67562 m!60979))

(assert (=> b!67562 m!62739))

(assert (=> d!13701 d!14263))

(declare-fun b!67566 () Bool)

(declare-fun e!44284 () Option!134)

(assert (=> b!67566 (= e!44284 None!132)))

(declare-fun b!67565 () Bool)

(assert (=> b!67565 (= e!44284 (getValueByKey!128 (t!4939 lt!28751) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67563 () Bool)

(declare-fun e!44283 () Option!134)

(assert (=> b!67563 (= e!44283 (Some!133 (_2!1052 (h!2046 lt!28751))))))

(declare-fun d!14265 () Bool)

(declare-fun c!9434 () Bool)

(assert (=> d!14265 (= c!9434 (and ((_ is Cons!1462) lt!28751) (= (_1!1052 (h!2046 lt!28751)) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14265 (= (getValueByKey!128 lt!28751 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44283)))

(declare-fun b!67564 () Bool)

(assert (=> b!67564 (= e!44283 e!44284)))

(declare-fun c!9435 () Bool)

(assert (=> b!67564 (= c!9435 (and ((_ is Cons!1462) lt!28751) (not (= (_1!1052 (h!2046 lt!28751)) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14265 c!9434) b!67563))

(assert (= (and d!14265 (not c!9434)) b!67564))

(assert (= (and b!67564 c!9435) b!67565))

(assert (= (and b!67564 (not c!9435)) b!67566))

(declare-fun m!62741 () Bool)

(assert (=> b!67565 m!62741))

(assert (=> d!13701 d!14265))

(declare-fun d!14267 () Bool)

(assert (=> d!14267 (= (getValueByKey!128 lt!28751 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!29375 () Unit!1818)

(assert (=> d!14267 (= lt!29375 (choose!375 lt!28751 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun e!44285 () Bool)

(assert (=> d!14267 e!44285))

(declare-fun res!36489 () Bool)

(assert (=> d!14267 (=> (not res!36489) (not e!44285))))

(assert (=> d!14267 (= res!36489 (isStrictlySorted!284 lt!28751))))

(assert (=> d!14267 (= (lemmaContainsTupThenGetReturnValue!48 lt!28751 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29375)))

(declare-fun b!67567 () Bool)

(declare-fun res!36490 () Bool)

(assert (=> b!67567 (=> (not res!36490) (not e!44285))))

(assert (=> b!67567 (= res!36490 (containsKey!132 lt!28751 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67568 () Bool)

(assert (=> b!67568 (= e!44285 (contains!707 lt!28751 (tuple2!2083 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14267 res!36489) b!67567))

(assert (= (and b!67567 res!36490) b!67568))

(assert (=> d!14267 m!60973))

(declare-fun m!62743 () Bool)

(assert (=> d!14267 m!62743))

(declare-fun m!62745 () Bool)

(assert (=> d!14267 m!62745))

(declare-fun m!62747 () Bool)

(assert (=> b!67567 m!62747))

(declare-fun m!62749 () Bool)

(assert (=> b!67568 m!62749))

(assert (=> d!13701 d!14267))

(declare-fun bm!5675 () Bool)

(declare-fun call!5679 () List!1466)

(declare-fun call!5680 () List!1466)

(assert (=> bm!5675 (= call!5679 call!5680)))

(declare-fun d!14269 () Bool)

(declare-fun e!44287 () Bool)

(assert (=> d!14269 e!44287))

(declare-fun res!36492 () Bool)

(assert (=> d!14269 (=> (not res!36492) (not e!44287))))

(declare-fun lt!29376 () List!1466)

(assert (=> d!14269 (= res!36492 (isStrictlySorted!284 lt!29376))))

(declare-fun e!44288 () List!1466)

(assert (=> d!14269 (= lt!29376 e!44288)))

(declare-fun c!9437 () Bool)

(assert (=> d!14269 (= c!9437 (and ((_ is Cons!1462) (toList!705 call!5542)) (bvslt (_1!1052 (h!2046 (toList!705 call!5542))) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14269 (isStrictlySorted!284 (toList!705 call!5542))))

(assert (=> d!14269 (= (insertStrictlySorted!51 (toList!705 call!5542) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29376)))

(declare-fun b!67569 () Bool)

(declare-fun c!9436 () Bool)

(assert (=> b!67569 (= c!9436 (and ((_ is Cons!1462) (toList!705 call!5542)) (bvsgt (_1!1052 (h!2046 (toList!705 call!5542))) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun e!44289 () List!1466)

(declare-fun e!44286 () List!1466)

(assert (=> b!67569 (= e!44289 e!44286)))

(declare-fun e!44290 () List!1466)

(declare-fun b!67570 () Bool)

(declare-fun c!9439 () Bool)

(assert (=> b!67570 (= e!44290 (ite c!9439 (t!4939 (toList!705 call!5542)) (ite c!9436 (Cons!1462 (h!2046 (toList!705 call!5542)) (t!4939 (toList!705 call!5542))) Nil!1463)))))

(declare-fun b!67571 () Bool)

(assert (=> b!67571 (= e!44288 e!44289)))

(assert (=> b!67571 (= c!9439 (and ((_ is Cons!1462) (toList!705 call!5542)) (= (_1!1052 (h!2046 (toList!705 call!5542))) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun bm!5676 () Bool)

(declare-fun call!5678 () List!1466)

(assert (=> bm!5676 (= call!5680 call!5678)))

(declare-fun b!67572 () Bool)

(assert (=> b!67572 (= e!44290 (insertStrictlySorted!51 (t!4939 (toList!705 call!5542)) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67573 () Bool)

(assert (=> b!67573 (= e!44287 (contains!707 lt!29376 (tuple2!2083 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!67574 () Bool)

(assert (=> b!67574 (= e!44289 call!5680)))

(declare-fun b!67575 () Bool)

(assert (=> b!67575 (= e!44288 call!5678)))

(declare-fun b!67576 () Bool)

(declare-fun res!36491 () Bool)

(assert (=> b!67576 (=> (not res!36491) (not e!44287))))

(assert (=> b!67576 (= res!36491 (containsKey!132 lt!29376 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67577 () Bool)

(assert (=> b!67577 (= e!44286 call!5679)))

(declare-fun b!67578 () Bool)

(assert (=> b!67578 (= e!44286 call!5679)))

(declare-fun bm!5677 () Bool)

(assert (=> bm!5677 (= call!5678 ($colon$colon!62 e!44290 (ite c!9437 (h!2046 (toList!705 call!5542)) (tuple2!2083 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(declare-fun c!9438 () Bool)

(assert (=> bm!5677 (= c!9438 c!9437)))

(assert (= (and d!14269 c!9437) b!67575))

(assert (= (and d!14269 (not c!9437)) b!67571))

(assert (= (and b!67571 c!9439) b!67574))

(assert (= (and b!67571 (not c!9439)) b!67569))

(assert (= (and b!67569 c!9436) b!67578))

(assert (= (and b!67569 (not c!9436)) b!67577))

(assert (= (or b!67578 b!67577) bm!5675))

(assert (= (or b!67574 bm!5675) bm!5676))

(assert (= (or b!67575 bm!5676) bm!5677))

(assert (= (and bm!5677 c!9438) b!67572))

(assert (= (and bm!5677 (not c!9438)) b!67570))

(assert (= (and d!14269 res!36492) b!67576))

(assert (= (and b!67576 res!36491) b!67573))

(declare-fun m!62751 () Bool)

(assert (=> d!14269 m!62751))

(declare-fun m!62753 () Bool)

(assert (=> d!14269 m!62753))

(declare-fun m!62755 () Bool)

(assert (=> b!67576 m!62755))

(declare-fun m!62757 () Bool)

(assert (=> b!67573 m!62757))

(declare-fun m!62759 () Bool)

(assert (=> bm!5677 m!62759))

(declare-fun m!62761 () Bool)

(assert (=> b!67572 m!62761))

(assert (=> d!13701 d!14269))

(declare-fun b!67591 () Bool)

(declare-fun e!44297 () SeekEntryResult!236)

(declare-fun e!44299 () SeekEntryResult!236)

(assert (=> b!67591 (= e!44297 e!44299)))

(declare-fun c!9448 () Bool)

(declare-fun lt!29382 () (_ BitVec 64))

(assert (=> b!67591 (= c!9448 (= lt!29382 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!67592 () Bool)

(assert (=> b!67592 (= e!44299 (Found!236 (index!3074 lt!28738)))))

(declare-fun b!67593 () Bool)

(declare-fun c!9446 () Bool)

(assert (=> b!67593 (= c!9446 (= lt!29382 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44298 () SeekEntryResult!236)

(assert (=> b!67593 (= e!44299 e!44298)))

(declare-fun b!67594 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!67594 (= e!44298 (seekKeyOrZeroReturnVacant!0 (bvadd (x!10705 lt!28738) #b00000000000000000000000000000001) (nextIndex!0 (index!3074 lt!28738) (x!10705 lt!28738) (mask!6080 newMap!16)) (index!3074 lt!28738) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(declare-fun b!67595 () Bool)

(assert (=> b!67595 (= e!44297 Undefined!236)))

(declare-fun b!67596 () Bool)

(assert (=> b!67596 (= e!44298 (MissingVacant!236 (index!3074 lt!28738)))))

(declare-fun d!14271 () Bool)

(declare-fun lt!29381 () SeekEntryResult!236)

(assert (=> d!14271 (and (or ((_ is Undefined!236) lt!29381) (not ((_ is Found!236) lt!29381)) (and (bvsge (index!3073 lt!29381) #b00000000000000000000000000000000) (bvslt (index!3073 lt!29381) (size!2058 (_keys!3785 newMap!16))))) (or ((_ is Undefined!236) lt!29381) ((_ is Found!236) lt!29381) (not ((_ is MissingVacant!236) lt!29381)) (not (= (index!3075 lt!29381) (index!3074 lt!28738))) (and (bvsge (index!3075 lt!29381) #b00000000000000000000000000000000) (bvslt (index!3075 lt!29381) (size!2058 (_keys!3785 newMap!16))))) (or ((_ is Undefined!236) lt!29381) (ite ((_ is Found!236) lt!29381) (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!29381)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (and ((_ is MissingVacant!236) lt!29381) (= (index!3075 lt!29381) (index!3074 lt!28738)) (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3075 lt!29381)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!14271 (= lt!29381 e!44297)))

(declare-fun c!9447 () Bool)

(assert (=> d!14271 (= c!9447 (bvsge (x!10705 lt!28738) #b01111111111111111111111111111110))))

(assert (=> d!14271 (= lt!29382 (select (arr!1822 (_keys!3785 newMap!16)) (index!3074 lt!28738)))))

(assert (=> d!14271 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!14271 (= (seekKeyOrZeroReturnVacant!0 (x!10705 lt!28738) (index!3074 lt!28738) (index!3074 lt!28738) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)) lt!29381)))

(assert (= (and d!14271 c!9447) b!67595))

(assert (= (and d!14271 (not c!9447)) b!67591))

(assert (= (and b!67591 c!9448) b!67592))

(assert (= (and b!67591 (not c!9448)) b!67593))

(assert (= (and b!67593 c!9446) b!67596))

(assert (= (and b!67593 (not c!9446)) b!67594))

(declare-fun m!62763 () Bool)

(assert (=> b!67594 m!62763))

(assert (=> b!67594 m!62763))

(assert (=> b!67594 m!60449))

(declare-fun m!62765 () Bool)

(assert (=> b!67594 m!62765))

(declare-fun m!62767 () Bool)

(assert (=> d!14271 m!62767))

(declare-fun m!62769 () Bool)

(assert (=> d!14271 m!62769))

(assert (=> d!14271 m!60925))

(assert (=> d!14271 m!60845))

(assert (=> b!66597 d!14271))

(declare-fun d!14273 () Bool)

(declare-fun lt!29383 () Bool)

(assert (=> d!14273 (= lt!29383 (select (content!71 lt!28498) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(declare-fun e!44300 () Bool)

(assert (=> d!14273 (= lt!29383 e!44300)))

(declare-fun res!36494 () Bool)

(assert (=> d!14273 (=> (not res!36494) (not e!44300))))

(assert (=> d!14273 (= res!36494 ((_ is Cons!1462) lt!28498))))

(assert (=> d!14273 (= (contains!707 lt!28498 (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))) lt!29383)))

(declare-fun b!67597 () Bool)

(declare-fun e!44301 () Bool)

(assert (=> b!67597 (= e!44300 e!44301)))

(declare-fun res!36493 () Bool)

(assert (=> b!67597 (=> res!36493 e!44301)))

(assert (=> b!67597 (= res!36493 (= (h!2046 lt!28498) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(declare-fun b!67598 () Bool)

(assert (=> b!67598 (= e!44301 (contains!707 (t!4939 lt!28498) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(assert (= (and d!14273 res!36494) b!67597))

(assert (= (and b!67597 (not res!36493)) b!67598))

(declare-fun m!62771 () Bool)

(assert (=> d!14273 m!62771))

(declare-fun m!62773 () Bool)

(assert (=> d!14273 m!62773))

(declare-fun m!62775 () Bool)

(assert (=> b!67598 m!62775))

(assert (=> b!66720 d!14273))

(declare-fun d!14275 () Bool)

(declare-fun e!44302 () Bool)

(assert (=> d!14275 e!44302))

(declare-fun res!36495 () Bool)

(assert (=> d!14275 (=> res!36495 e!44302)))

(declare-fun lt!29387 () Bool)

(assert (=> d!14275 (= res!36495 (not lt!29387))))

(declare-fun lt!29386 () Bool)

(assert (=> d!14275 (= lt!29387 lt!29386)))

(declare-fun lt!29384 () Unit!1818)

(declare-fun e!44303 () Unit!1818)

(assert (=> d!14275 (= lt!29384 e!44303)))

(declare-fun c!9449 () Bool)

(assert (=> d!14275 (= c!9449 lt!29386)))

(assert (=> d!14275 (= lt!29386 (containsKey!132 (toList!705 lt!28960) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14275 (= (contains!705 lt!28960 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) lt!29387)))

(declare-fun b!67599 () Bool)

(declare-fun lt!29385 () Unit!1818)

(assert (=> b!67599 (= e!44303 lt!29385)))

(assert (=> b!67599 (= lt!29385 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28960) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67599 (isDefined!82 (getValueByKey!128 (toList!705 lt!28960) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67600 () Bool)

(declare-fun Unit!1875 () Unit!1818)

(assert (=> b!67600 (= e!44303 Unit!1875)))

(declare-fun b!67601 () Bool)

(assert (=> b!67601 (= e!44302 (isDefined!82 (getValueByKey!128 (toList!705 lt!28960) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14275 c!9449) b!67599))

(assert (= (and d!14275 (not c!9449)) b!67600))

(assert (= (and d!14275 (not res!36495)) b!67601))

(assert (=> d!14275 m!60839))

(declare-fun m!62777 () Bool)

(assert (=> d!14275 m!62777))

(assert (=> b!67599 m!60839))

(declare-fun m!62779 () Bool)

(assert (=> b!67599 m!62779))

(assert (=> b!67599 m!60839))

(assert (=> b!67599 m!62565))

(assert (=> b!67599 m!62565))

(declare-fun m!62781 () Bool)

(assert (=> b!67599 m!62781))

(assert (=> b!67601 m!60839))

(assert (=> b!67601 m!62565))

(assert (=> b!67601 m!62565))

(assert (=> b!67601 m!62781))

(assert (=> b!66869 d!14275))

(declare-fun d!14277 () Bool)

(declare-fun e!44304 () Bool)

(assert (=> d!14277 e!44304))

(declare-fun res!36496 () Bool)

(assert (=> d!14277 (=> res!36496 e!44304)))

(declare-fun lt!29391 () Bool)

(assert (=> d!14277 (= res!36496 (not lt!29391))))

(declare-fun lt!29390 () Bool)

(assert (=> d!14277 (= lt!29391 lt!29390)))

(declare-fun lt!29388 () Unit!1818)

(declare-fun e!44305 () Unit!1818)

(assert (=> d!14277 (= lt!29388 e!44305)))

(declare-fun c!9450 () Bool)

(assert (=> d!14277 (= c!9450 lt!29390)))

(assert (=> d!14277 (= lt!29390 (containsKey!132 (toList!705 lt!28858) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!14277 (= (contains!705 lt!28858 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) lt!29391)))

(declare-fun b!67602 () Bool)

(declare-fun lt!29389 () Unit!1818)

(assert (=> b!67602 (= e!44305 lt!29389)))

(assert (=> b!67602 (= lt!29389 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28858) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> b!67602 (isDefined!82 (getValueByKey!128 (toList!705 lt!28858) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!67603 () Bool)

(declare-fun Unit!1876 () Unit!1818)

(assert (=> b!67603 (= e!44305 Unit!1876)))

(declare-fun b!67604 () Bool)

(assert (=> b!67604 (= e!44304 (isDefined!82 (getValueByKey!128 (toList!705 lt!28858) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(assert (= (and d!14277 c!9450) b!67602))

(assert (= (and d!14277 (not c!9450)) b!67603))

(assert (= (and d!14277 (not res!36496)) b!67604))

(declare-fun m!62783 () Bool)

(assert (=> d!14277 m!62783))

(declare-fun m!62785 () Bool)

(assert (=> b!67602 m!62785))

(assert (=> b!67602 m!61091))

(assert (=> b!67602 m!61091))

(declare-fun m!62787 () Bool)

(assert (=> b!67602 m!62787))

(assert (=> b!67604 m!61091))

(assert (=> b!67604 m!61091))

(assert (=> b!67604 m!62787))

(assert (=> d!13719 d!14277))

(declare-fun b!67608 () Bool)

(declare-fun e!44307 () Option!134)

(assert (=> b!67608 (= e!44307 None!132)))

(declare-fun b!67607 () Bool)

(assert (=> b!67607 (= e!44307 (getValueByKey!128 (t!4939 lt!28860) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!67605 () Bool)

(declare-fun e!44306 () Option!134)

(assert (=> b!67605 (= e!44306 (Some!133 (_2!1052 (h!2046 lt!28860))))))

(declare-fun c!9451 () Bool)

(declare-fun d!14279 () Bool)

(assert (=> d!14279 (= c!9451 (and ((_ is Cons!1462) lt!28860) (= (_1!1052 (h!2046 lt!28860)) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(assert (=> d!14279 (= (getValueByKey!128 lt!28860 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) e!44306)))

(declare-fun b!67606 () Bool)

(assert (=> b!67606 (= e!44306 e!44307)))

(declare-fun c!9452 () Bool)

(assert (=> b!67606 (= c!9452 (and ((_ is Cons!1462) lt!28860) (not (= (_1!1052 (h!2046 lt!28860)) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))))

(assert (= (and d!14279 c!9451) b!67605))

(assert (= (and d!14279 (not c!9451)) b!67606))

(assert (= (and b!67606 c!9452) b!67607))

(assert (= (and b!67606 (not c!9452)) b!67608))

(declare-fun m!62789 () Bool)

(assert (=> b!67607 m!62789))

(assert (=> d!13719 d!14279))

(declare-fun d!14281 () Bool)

(assert (=> d!14281 (= (getValueByKey!128 lt!28860 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) (Some!133 (_2!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun lt!29392 () Unit!1818)

(assert (=> d!14281 (= lt!29392 (choose!375 lt!28860 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (_2!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun e!44308 () Bool)

(assert (=> d!14281 e!44308))

(declare-fun res!36497 () Bool)

(assert (=> d!14281 (=> (not res!36497) (not e!44308))))

(assert (=> d!14281 (= res!36497 (isStrictlySorted!284 lt!28860))))

(assert (=> d!14281 (= (lemmaContainsTupThenGetReturnValue!48 lt!28860 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (_2!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) lt!29392)))

(declare-fun b!67609 () Bool)

(declare-fun res!36498 () Bool)

(assert (=> b!67609 (=> (not res!36498) (not e!44308))))

(assert (=> b!67609 (= res!36498 (containsKey!132 lt!28860 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!67610 () Bool)

(assert (=> b!67610 (= e!44308 (contains!707 lt!28860 (tuple2!2083 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (_2!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(assert (= (and d!14281 res!36497) b!67609))

(assert (= (and b!67609 res!36498) b!67610))

(assert (=> d!14281 m!61085))

(declare-fun m!62791 () Bool)

(assert (=> d!14281 m!62791))

(declare-fun m!62793 () Bool)

(assert (=> d!14281 m!62793))

(declare-fun m!62795 () Bool)

(assert (=> b!67609 m!62795))

(declare-fun m!62797 () Bool)

(assert (=> b!67610 m!62797))

(assert (=> d!13719 d!14281))

(declare-fun bm!5678 () Bool)

(declare-fun call!5682 () List!1466)

(declare-fun call!5683 () List!1466)

(assert (=> bm!5678 (= call!5682 call!5683)))

(declare-fun d!14283 () Bool)

(declare-fun e!44310 () Bool)

(assert (=> d!14283 e!44310))

(declare-fun res!36500 () Bool)

(assert (=> d!14283 (=> (not res!36500) (not e!44310))))

(declare-fun lt!29393 () List!1466)

(assert (=> d!14283 (= res!36500 (isStrictlySorted!284 lt!29393))))

(declare-fun e!44311 () List!1466)

(assert (=> d!14283 (= lt!29393 e!44311)))

(declare-fun c!9454 () Bool)

(assert (=> d!14283 (= c!9454 (and ((_ is Cons!1462) (toList!705 e!43575)) (bvslt (_1!1052 (h!2046 (toList!705 e!43575))) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(assert (=> d!14283 (isStrictlySorted!284 (toList!705 e!43575))))

(assert (=> d!14283 (= (insertStrictlySorted!51 (toList!705 e!43575) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (_2!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) lt!29393)))

(declare-fun c!9453 () Bool)

(declare-fun b!67611 () Bool)

(assert (=> b!67611 (= c!9453 (and ((_ is Cons!1462) (toList!705 e!43575)) (bvsgt (_1!1052 (h!2046 (toList!705 e!43575))) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(declare-fun e!44312 () List!1466)

(declare-fun e!44309 () List!1466)

(assert (=> b!67611 (= e!44312 e!44309)))

(declare-fun c!9456 () Bool)

(declare-fun b!67612 () Bool)

(declare-fun e!44313 () List!1466)

(assert (=> b!67612 (= e!44313 (ite c!9456 (t!4939 (toList!705 e!43575)) (ite c!9453 (Cons!1462 (h!2046 (toList!705 e!43575)) (t!4939 (toList!705 e!43575))) Nil!1463)))))

(declare-fun b!67613 () Bool)

(assert (=> b!67613 (= e!44311 e!44312)))

(assert (=> b!67613 (= c!9456 (and ((_ is Cons!1462) (toList!705 e!43575)) (= (_1!1052 (h!2046 (toList!705 e!43575))) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(declare-fun bm!5679 () Bool)

(declare-fun call!5681 () List!1466)

(assert (=> bm!5679 (= call!5683 call!5681)))

(declare-fun b!67614 () Bool)

(assert (=> b!67614 (= e!44313 (insertStrictlySorted!51 (t!4939 (toList!705 e!43575)) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (_2!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!67615 () Bool)

(assert (=> b!67615 (= e!44310 (contains!707 lt!29393 (tuple2!2083 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (_2!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(declare-fun b!67616 () Bool)

(assert (=> b!67616 (= e!44312 call!5683)))

(declare-fun b!67617 () Bool)

(assert (=> b!67617 (= e!44311 call!5681)))

(declare-fun b!67618 () Bool)

(declare-fun res!36499 () Bool)

(assert (=> b!67618 (=> (not res!36499) (not e!44310))))

(assert (=> b!67618 (= res!36499 (containsKey!132 lt!29393 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!67619 () Bool)

(assert (=> b!67619 (= e!44309 call!5682)))

(declare-fun b!67620 () Bool)

(assert (=> b!67620 (= e!44309 call!5682)))

(declare-fun bm!5680 () Bool)

(assert (=> bm!5680 (= call!5681 ($colon$colon!62 e!44313 (ite c!9454 (h!2046 (toList!705 e!43575)) (tuple2!2083 (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (_2!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))))

(declare-fun c!9455 () Bool)

(assert (=> bm!5680 (= c!9455 c!9454)))

(assert (= (and d!14283 c!9454) b!67617))

(assert (= (and d!14283 (not c!9454)) b!67613))

(assert (= (and b!67613 c!9456) b!67616))

(assert (= (and b!67613 (not c!9456)) b!67611))

(assert (= (and b!67611 c!9453) b!67620))

(assert (= (and b!67611 (not c!9453)) b!67619))

(assert (= (or b!67620 b!67619) bm!5678))

(assert (= (or b!67616 bm!5678) bm!5679))

(assert (= (or b!67617 bm!5679) bm!5680))

(assert (= (and bm!5680 c!9455) b!67614))

(assert (= (and bm!5680 (not c!9455)) b!67612))

(assert (= (and d!14283 res!36500) b!67618))

(assert (= (and b!67618 res!36499) b!67615))

(declare-fun m!62799 () Bool)

(assert (=> d!14283 m!62799))

(declare-fun m!62801 () Bool)

(assert (=> d!14283 m!62801))

(declare-fun m!62803 () Bool)

(assert (=> b!67618 m!62803))

(declare-fun m!62805 () Bool)

(assert (=> b!67615 m!62805))

(declare-fun m!62807 () Bool)

(assert (=> bm!5680 m!62807))

(declare-fun m!62809 () Bool)

(assert (=> b!67614 m!62809))

(assert (=> d!13719 d!14283))

(assert (=> b!66599 d!14053))

(declare-fun d!14285 () Bool)

(declare-fun lt!29394 () Bool)

(assert (=> d!14285 (= lt!29394 (select (content!71 lt!28527) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(declare-fun e!44314 () Bool)

(assert (=> d!14285 (= lt!29394 e!44314)))

(declare-fun res!36502 () Bool)

(assert (=> d!14285 (=> (not res!36502) (not e!44314))))

(assert (=> d!14285 (= res!36502 ((_ is Cons!1462) lt!28527))))

(assert (=> d!14285 (= (contains!707 lt!28527 (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))) lt!29394)))

(declare-fun b!67621 () Bool)

(declare-fun e!44315 () Bool)

(assert (=> b!67621 (= e!44314 e!44315)))

(declare-fun res!36501 () Bool)

(assert (=> b!67621 (=> res!36501 e!44315)))

(assert (=> b!67621 (= res!36501 (= (h!2046 lt!28527) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(declare-fun b!67622 () Bool)

(assert (=> b!67622 (= e!44315 (contains!707 (t!4939 lt!28527) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(assert (= (and d!14285 res!36502) b!67621))

(assert (= (and b!67621 (not res!36501)) b!67622))

(declare-fun m!62811 () Bool)

(assert (=> d!14285 m!62811))

(declare-fun m!62813 () Bool)

(assert (=> d!14285 m!62813))

(declare-fun m!62815 () Bool)

(assert (=> b!67622 m!62815))

(assert (=> b!66933 d!14285))

(declare-fun d!14287 () Bool)

(declare-fun e!44316 () Bool)

(assert (=> d!14287 e!44316))

(declare-fun res!36503 () Bool)

(assert (=> d!14287 (=> res!36503 e!44316)))

(declare-fun lt!29398 () Bool)

(assert (=> d!14287 (= res!36503 (not lt!29398))))

(declare-fun lt!29397 () Bool)

(assert (=> d!14287 (= lt!29398 lt!29397)))

(declare-fun lt!29395 () Unit!1818)

(declare-fun e!44317 () Unit!1818)

(assert (=> d!14287 (= lt!29395 e!44317)))

(declare-fun c!9457 () Bool)

(assert (=> d!14287 (= c!9457 lt!29397)))

(assert (=> d!14287 (= lt!29397 (containsKey!132 (toList!705 (map!1133 (_2!1051 lt!28833))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!14287 (= (contains!705 (map!1133 (_2!1051 lt!28833)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) lt!29398)))

(declare-fun b!67623 () Bool)

(declare-fun lt!29396 () Unit!1818)

(assert (=> b!67623 (= e!44317 lt!29396)))

(assert (=> b!67623 (= lt!29396 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 (map!1133 (_2!1051 lt!28833))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> b!67623 (isDefined!82 (getValueByKey!128 (toList!705 (map!1133 (_2!1051 lt!28833))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!67624 () Bool)

(declare-fun Unit!1877 () Unit!1818)

(assert (=> b!67624 (= e!44317 Unit!1877)))

(declare-fun b!67625 () Bool)

(assert (=> b!67625 (= e!44316 (isDefined!82 (getValueByKey!128 (toList!705 (map!1133 (_2!1051 lt!28833))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (= (and d!14287 c!9457) b!67623))

(assert (= (and d!14287 (not c!9457)) b!67624))

(assert (= (and d!14287 (not res!36503)) b!67625))

(assert (=> d!14287 m!60449))

(declare-fun m!62817 () Bool)

(assert (=> d!14287 m!62817))

(assert (=> b!67623 m!60449))

(declare-fun m!62819 () Bool)

(assert (=> b!67623 m!62819))

(assert (=> b!67623 m!60449))

(declare-fun m!62821 () Bool)

(assert (=> b!67623 m!62821))

(assert (=> b!67623 m!62821))

(declare-fun m!62823 () Bool)

(assert (=> b!67623 m!62823))

(assert (=> b!67625 m!60449))

(assert (=> b!67625 m!62821))

(assert (=> b!67625 m!62821))

(assert (=> b!67625 m!62823))

(assert (=> b!66665 d!14287))

(declare-fun d!14289 () Bool)

(assert (=> d!14289 (= (map!1133 (_2!1051 lt!28833)) (getCurrentListMap!401 (_keys!3785 (_2!1051 lt!28833)) (_values!2129 (_2!1051 lt!28833)) (mask!6080 (_2!1051 lt!28833)) (extraKeys!2017 (_2!1051 lt!28833)) (zeroValue!2054 (_2!1051 lt!28833)) (minValue!2054 (_2!1051 lt!28833)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28833))))))

(declare-fun bs!2898 () Bool)

(assert (= bs!2898 d!14289))

(declare-fun m!62825 () Bool)

(assert (=> bs!2898 m!62825))

(assert (=> b!66665 d!14289))

(declare-fun lt!29399 () Bool)

(declare-fun d!14291 () Bool)

(assert (=> d!14291 (= lt!29399 (select (content!71 (toList!705 lt!29051)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(declare-fun e!44318 () Bool)

(assert (=> d!14291 (= lt!29399 e!44318)))

(declare-fun res!36505 () Bool)

(assert (=> d!14291 (=> (not res!36505) (not e!44318))))

(assert (=> d!14291 (= res!36505 ((_ is Cons!1462) (toList!705 lt!29051)))))

(assert (=> d!14291 (= (contains!707 (toList!705 lt!29051) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) lt!29399)))

(declare-fun b!67626 () Bool)

(declare-fun e!44319 () Bool)

(assert (=> b!67626 (= e!44318 e!44319)))

(declare-fun res!36504 () Bool)

(assert (=> b!67626 (=> res!36504 e!44319)))

(assert (=> b!67626 (= res!36504 (= (h!2046 (toList!705 lt!29051)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(declare-fun b!67627 () Bool)

(assert (=> b!67627 (= e!44319 (contains!707 (t!4939 (toList!705 lt!29051)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(assert (= (and d!14291 res!36505) b!67626))

(assert (= (and b!67626 (not res!36504)) b!67627))

(declare-fun m!62827 () Bool)

(assert (=> d!14291 m!62827))

(declare-fun m!62829 () Bool)

(assert (=> d!14291 m!62829))

(declare-fun m!62831 () Bool)

(assert (=> b!67627 m!62831))

(assert (=> b!67007 d!14291))

(declare-fun d!14293 () Bool)

(assert (=> d!14293 (= (apply!72 lt!28724 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1123 (getValueByKey!128 (toList!705 lt!28724) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2899 () Bool)

(assert (= bs!2899 d!14293))

(assert (=> bs!2899 m!60839))

(declare-fun m!62833 () Bool)

(assert (=> bs!2899 m!62833))

(assert (=> bs!2899 m!62833))

(declare-fun m!62835 () Bool)

(assert (=> bs!2899 m!62835))

(assert (=> b!66568 d!14293))

(declare-fun d!14295 () Bool)

(declare-fun c!9458 () Bool)

(assert (=> d!14295 (= c!9458 ((_ is ValueCellFull!881) (select (arr!1823 (_values!2129 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!44320 () V!2913)

(assert (=> d!14295 (= (get!1119 (select (arr!1823 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44320)))

(declare-fun b!67628 () Bool)

(assert (=> b!67628 (= e!44320 (get!1121 (select (arr!1823 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67629 () Bool)

(assert (=> b!67629 (= e!44320 (get!1122 (select (arr!1823 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14295 c!9458) b!67628))

(assert (= (and d!14295 (not c!9458)) b!67629))

(assert (=> b!67628 m!60889))

(assert (=> b!67628 m!60885))

(declare-fun m!62837 () Bool)

(assert (=> b!67628 m!62837))

(assert (=> b!67629 m!60889))

(assert (=> b!67629 m!60885))

(declare-fun m!62839 () Bool)

(assert (=> b!67629 m!62839))

(assert (=> b!66568 d!14295))

(declare-fun d!14297 () Bool)

(declare-fun res!36506 () Bool)

(declare-fun e!44322 () Bool)

(assert (=> d!14297 (=> res!36506 e!44322)))

(assert (=> d!14297 (= res!36506 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28606)))))))

(assert (=> d!14297 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3785 (_2!1051 lt!28606)) (mask!6080 (_2!1051 lt!28606))) e!44322)))

(declare-fun b!67630 () Bool)

(declare-fun e!44323 () Bool)

(declare-fun call!5684 () Bool)

(assert (=> b!67630 (= e!44323 call!5684)))

(declare-fun bm!5681 () Bool)

(assert (=> bm!5681 (= call!5684 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3785 (_2!1051 lt!28606)) (mask!6080 (_2!1051 lt!28606))))))

(declare-fun b!67631 () Bool)

(declare-fun e!44321 () Bool)

(assert (=> b!67631 (= e!44321 e!44323)))

(declare-fun lt!29401 () (_ BitVec 64))

(assert (=> b!67631 (= lt!29401 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000))))

(declare-fun lt!29400 () Unit!1818)

(assert (=> b!67631 (= lt!29400 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3785 (_2!1051 lt!28606)) lt!29401 #b00000000000000000000000000000000))))

(assert (=> b!67631 (arrayContainsKey!0 (_keys!3785 (_2!1051 lt!28606)) lt!29401 #b00000000000000000000000000000000)))

(declare-fun lt!29402 () Unit!1818)

(assert (=> b!67631 (= lt!29402 lt!29400)))

(declare-fun res!36507 () Bool)

(assert (=> b!67631 (= res!36507 (= (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000) (_keys!3785 (_2!1051 lt!28606)) (mask!6080 (_2!1051 lt!28606))) (Found!236 #b00000000000000000000000000000000)))))

(assert (=> b!67631 (=> (not res!36507) (not e!44323))))

(declare-fun b!67632 () Bool)

(assert (=> b!67632 (= e!44321 call!5684)))

(declare-fun b!67633 () Bool)

(assert (=> b!67633 (= e!44322 e!44321)))

(declare-fun c!9459 () Bool)

(assert (=> b!67633 (= c!9459 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000)))))

(assert (= (and d!14297 (not res!36506)) b!67633))

(assert (= (and b!67633 c!9459) b!67631))

(assert (= (and b!67633 (not c!9459)) b!67632))

(assert (= (and b!67631 res!36507) b!67630))

(assert (= (or b!67630 b!67632) bm!5681))

(declare-fun m!62841 () Bool)

(assert (=> bm!5681 m!62841))

(assert (=> b!67631 m!62657))

(declare-fun m!62843 () Bool)

(assert (=> b!67631 m!62843))

(declare-fun m!62845 () Bool)

(assert (=> b!67631 m!62845))

(assert (=> b!67631 m!62657))

(declare-fun m!62847 () Bool)

(assert (=> b!67631 m!62847))

(assert (=> b!67633 m!62657))

(assert (=> b!67633 m!62657))

(assert (=> b!67633 m!62659))

(assert (=> b!66611 d!14297))

(assert (=> b!66999 d!13729))

(declare-fun d!14299 () Bool)

(declare-fun e!44324 () Bool)

(assert (=> d!14299 e!44324))

(declare-fun res!36508 () Bool)

(assert (=> d!14299 (=> res!36508 e!44324)))

(declare-fun lt!29406 () Bool)

(assert (=> d!14299 (= res!36508 (not lt!29406))))

(declare-fun lt!29405 () Bool)

(assert (=> d!14299 (= lt!29406 lt!29405)))

(declare-fun lt!29403 () Unit!1818)

(declare-fun e!44325 () Unit!1818)

(assert (=> d!14299 (= lt!29403 e!44325)))

(declare-fun c!9460 () Bool)

(assert (=> d!14299 (= c!9460 lt!29405)))

(assert (=> d!14299 (= lt!29405 (containsKey!132 (toList!705 lt!28740) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14299 (= (contains!705 lt!28740 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29406)))

(declare-fun b!67634 () Bool)

(declare-fun lt!29404 () Unit!1818)

(assert (=> b!67634 (= e!44325 lt!29404)))

(assert (=> b!67634 (= lt!29404 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28740) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67634 (isDefined!82 (getValueByKey!128 (toList!705 lt!28740) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67635 () Bool)

(declare-fun Unit!1878 () Unit!1818)

(assert (=> b!67635 (= e!44325 Unit!1878)))

(declare-fun b!67636 () Bool)

(assert (=> b!67636 (= e!44324 (isDefined!82 (getValueByKey!128 (toList!705 lt!28740) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14299 c!9460) b!67634))

(assert (= (and d!14299 (not c!9460)) b!67635))

(assert (= (and d!14299 (not res!36508)) b!67636))

(declare-fun m!62849 () Bool)

(assert (=> d!14299 m!62849))

(declare-fun m!62851 () Bool)

(assert (=> b!67634 m!62851))

(declare-fun m!62853 () Bool)

(assert (=> b!67634 m!62853))

(assert (=> b!67634 m!62853))

(declare-fun m!62855 () Bool)

(assert (=> b!67634 m!62855))

(assert (=> b!67636 m!62853))

(assert (=> b!67636 m!62853))

(assert (=> b!67636 m!62855))

(assert (=> d!13695 d!14299))

(assert (=> d!13695 d!13645))

(declare-fun d!14301 () Bool)

(assert (=> d!14301 (= (+!87 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28614 (zeroValue!2054 newMap!16) lt!28400 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(assert (=> d!14301 true))

(declare-fun _$8!55 () Unit!1818)

(assert (=> d!14301 (= (choose!382 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) lt!28614 (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) lt!28400 (defaultEntry!2146 newMap!16)) _$8!55)))

(declare-fun bs!2900 () Bool)

(assert (= bs!2900 d!14301))

(assert (=> bs!2900 m!60697))

(assert (=> bs!2900 m!60697))

(assert (=> bs!2900 m!61395))

(assert (=> bs!2900 m!61397))

(assert (=> d!13817 d!14301))

(assert (=> d!13817 d!13991))

(declare-fun b!67637 () Bool)

(declare-fun e!44337 () Bool)

(declare-fun call!5685 () Bool)

(assert (=> b!67637 (= e!44337 (not call!5685))))

(declare-fun b!67638 () Bool)

(declare-fun c!9462 () Bool)

(assert (=> b!67638 (= c!9462 (and (not (= (bvand lt!28614 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!28614 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44332 () ListLongMap!1379)

(declare-fun e!44326 () ListLongMap!1379)

(assert (=> b!67638 (= e!44332 e!44326)))

(declare-fun b!67639 () Bool)

(declare-fun res!36511 () Bool)

(declare-fun e!44333 () Bool)

(assert (=> b!67639 (=> (not res!36511) (not e!44333))))

(declare-fun e!44336 () Bool)

(assert (=> b!67639 (= res!36511 e!44336)))

(declare-fun res!36509 () Bool)

(assert (=> b!67639 (=> res!36509 e!44336)))

(declare-fun e!44331 () Bool)

(assert (=> b!67639 (= res!36509 (not e!44331))))

(declare-fun res!36514 () Bool)

(assert (=> b!67639 (=> (not res!36514) (not e!44331))))

(assert (=> b!67639 (= res!36514 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67640 () Bool)

(declare-fun e!44329 () ListLongMap!1379)

(assert (=> b!67640 (= e!44329 e!44332)))

(declare-fun c!9464 () Bool)

(assert (=> b!67640 (= c!9464 (and (not (= (bvand lt!28614 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!28614 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67641 () Bool)

(declare-fun e!44338 () Unit!1818)

(declare-fun Unit!1879 () Unit!1818)

(assert (=> b!67641 (= e!44338 Unit!1879)))

(declare-fun b!67642 () Bool)

(declare-fun res!36515 () Bool)

(assert (=> b!67642 (=> (not res!36515) (not e!44333))))

(declare-fun e!44334 () Bool)

(assert (=> b!67642 (= res!36515 e!44334)))

(declare-fun c!9463 () Bool)

(assert (=> b!67642 (= c!9463 (not (= (bvand lt!28614 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5682 () Bool)

(declare-fun call!5691 () Bool)

(declare-fun lt!29426 () ListLongMap!1379)

(assert (=> bm!5682 (= call!5691 (contains!705 lt!29426 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67643 () Bool)

(declare-fun lt!29422 () Unit!1818)

(assert (=> b!67643 (= e!44338 lt!29422)))

(declare-fun lt!29412 () ListLongMap!1379)

(assert (=> b!67643 (= lt!29412 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28614 (zeroValue!2054 newMap!16) lt!28400 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29425 () (_ BitVec 64))

(assert (=> b!67643 (= lt!29425 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29424 () (_ BitVec 64))

(assert (=> b!67643 (= lt!29424 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29410 () Unit!1818)

(assert (=> b!67643 (= lt!29410 (addStillContains!48 lt!29412 lt!29425 (zeroValue!2054 newMap!16) lt!29424))))

(assert (=> b!67643 (contains!705 (+!87 lt!29412 (tuple2!2083 lt!29425 (zeroValue!2054 newMap!16))) lt!29424)))

(declare-fun lt!29417 () Unit!1818)

(assert (=> b!67643 (= lt!29417 lt!29410)))

(declare-fun lt!29409 () ListLongMap!1379)

(assert (=> b!67643 (= lt!29409 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28614 (zeroValue!2054 newMap!16) lt!28400 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29413 () (_ BitVec 64))

(assert (=> b!67643 (= lt!29413 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29407 () (_ BitVec 64))

(assert (=> b!67643 (= lt!29407 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29428 () Unit!1818)

(assert (=> b!67643 (= lt!29428 (addApplyDifferent!48 lt!29409 lt!29413 lt!28400 lt!29407))))

(assert (=> b!67643 (= (apply!72 (+!87 lt!29409 (tuple2!2083 lt!29413 lt!28400)) lt!29407) (apply!72 lt!29409 lt!29407))))

(declare-fun lt!29411 () Unit!1818)

(assert (=> b!67643 (= lt!29411 lt!29428)))

(declare-fun lt!29418 () ListLongMap!1379)

(assert (=> b!67643 (= lt!29418 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28614 (zeroValue!2054 newMap!16) lt!28400 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29421 () (_ BitVec 64))

(assert (=> b!67643 (= lt!29421 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29423 () (_ BitVec 64))

(assert (=> b!67643 (= lt!29423 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29415 () Unit!1818)

(assert (=> b!67643 (= lt!29415 (addApplyDifferent!48 lt!29418 lt!29421 (zeroValue!2054 newMap!16) lt!29423))))

(assert (=> b!67643 (= (apply!72 (+!87 lt!29418 (tuple2!2083 lt!29421 (zeroValue!2054 newMap!16))) lt!29423) (apply!72 lt!29418 lt!29423))))

(declare-fun lt!29427 () Unit!1818)

(assert (=> b!67643 (= lt!29427 lt!29415)))

(declare-fun lt!29416 () ListLongMap!1379)

(assert (=> b!67643 (= lt!29416 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28614 (zeroValue!2054 newMap!16) lt!28400 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29419 () (_ BitVec 64))

(assert (=> b!67643 (= lt!29419 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29420 () (_ BitVec 64))

(assert (=> b!67643 (= lt!29420 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67643 (= lt!29422 (addApplyDifferent!48 lt!29416 lt!29419 lt!28400 lt!29420))))

(assert (=> b!67643 (= (apply!72 (+!87 lt!29416 (tuple2!2083 lt!29419 lt!28400)) lt!29420) (apply!72 lt!29416 lt!29420))))

(declare-fun d!14303 () Bool)

(assert (=> d!14303 e!44333))

(declare-fun res!36517 () Bool)

(assert (=> d!14303 (=> (not res!36517) (not e!44333))))

(assert (=> d!14303 (= res!36517 (or (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))))

(declare-fun lt!29408 () ListLongMap!1379)

(assert (=> d!14303 (= lt!29426 lt!29408)))

(declare-fun lt!29414 () Unit!1818)

(assert (=> d!14303 (= lt!29414 e!44338)))

(declare-fun c!9466 () Bool)

(declare-fun e!44330 () Bool)

(assert (=> d!14303 (= c!9466 e!44330)))

(declare-fun res!36516 () Bool)

(assert (=> d!14303 (=> (not res!36516) (not e!44330))))

(assert (=> d!14303 (= res!36516 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!14303 (= lt!29408 e!44329)))

(declare-fun c!9465 () Bool)

(assert (=> d!14303 (= c!9465 (and (not (= (bvand lt!28614 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!28614 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14303 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!14303 (= (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28614 (zeroValue!2054 newMap!16) lt!28400 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29426)))

(declare-fun bm!5683 () Bool)

(declare-fun call!5689 () ListLongMap!1379)

(declare-fun call!5686 () ListLongMap!1379)

(assert (=> bm!5683 (= call!5689 call!5686)))

(declare-fun b!67644 () Bool)

(assert (=> b!67644 (= e!44334 (not call!5691))))

(declare-fun b!67645 () Bool)

(assert (=> b!67645 (= e!44332 call!5689)))

(declare-fun b!67646 () Bool)

(declare-fun e!44328 () Bool)

(assert (=> b!67646 (= e!44328 (= (apply!72 lt!29426 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun b!67647 () Bool)

(assert (=> b!67647 (= e!44333 e!44337)))

(declare-fun c!9461 () Bool)

(assert (=> b!67647 (= c!9461 (not (= (bvand lt!28614 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67648 () Bool)

(declare-fun e!44335 () Bool)

(assert (=> b!67648 (= e!44335 (= (apply!72 lt!29426 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67648 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 (_values!2129 newMap!16))))))

(assert (=> b!67648 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67649 () Bool)

(assert (=> b!67649 (= e!44329 (+!87 call!5686 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)))))

(declare-fun bm!5684 () Bool)

(declare-fun call!5687 () ListLongMap!1379)

(declare-fun call!5690 () ListLongMap!1379)

(assert (=> bm!5684 (= call!5687 call!5690)))

(declare-fun bm!5685 () Bool)

(declare-fun call!5688 () ListLongMap!1379)

(assert (=> bm!5685 (= call!5688 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28614 (zeroValue!2054 newMap!16) lt!28400 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!67650 () Bool)

(assert (=> b!67650 (= e!44326 call!5687)))

(declare-fun b!67651 () Bool)

(declare-fun e!44327 () Bool)

(assert (=> b!67651 (= e!44327 (= (apply!72 lt!29426 #b1000000000000000000000000000000000000000000000000000000000000000) lt!28400))))

(declare-fun bm!5686 () Bool)

(assert (=> bm!5686 (= call!5690 call!5688)))

(declare-fun b!67652 () Bool)

(assert (=> b!67652 (= e!44331 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67653 () Bool)

(assert (=> b!67653 (= e!44336 e!44335)))

(declare-fun res!36512 () Bool)

(assert (=> b!67653 (=> (not res!36512) (not e!44335))))

(assert (=> b!67653 (= res!36512 (contains!705 lt!29426 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67653 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67654 () Bool)

(assert (=> b!67654 (= e!44337 e!44327)))

(declare-fun res!36510 () Bool)

(assert (=> b!67654 (= res!36510 call!5685)))

(assert (=> b!67654 (=> (not res!36510) (not e!44327))))

(declare-fun bm!5687 () Bool)

(assert (=> bm!5687 (= call!5686 (+!87 (ite c!9465 call!5688 (ite c!9464 call!5690 call!5687)) (ite (or c!9465 c!9464) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400))))))

(declare-fun b!67655 () Bool)

(assert (=> b!67655 (= e!44334 e!44328)))

(declare-fun res!36513 () Bool)

(assert (=> b!67655 (= res!36513 call!5691)))

(assert (=> b!67655 (=> (not res!36513) (not e!44328))))

(declare-fun b!67656 () Bool)

(assert (=> b!67656 (= e!44326 call!5689)))

(declare-fun b!67657 () Bool)

(assert (=> b!67657 (= e!44330 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5688 () Bool)

(assert (=> bm!5688 (= call!5685 (contains!705 lt!29426 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14303 c!9465) b!67649))

(assert (= (and d!14303 (not c!9465)) b!67640))

(assert (= (and b!67640 c!9464) b!67645))

(assert (= (and b!67640 (not c!9464)) b!67638))

(assert (= (and b!67638 c!9462) b!67656))

(assert (= (and b!67638 (not c!9462)) b!67650))

(assert (= (or b!67656 b!67650) bm!5684))

(assert (= (or b!67645 bm!5684) bm!5686))

(assert (= (or b!67645 b!67656) bm!5683))

(assert (= (or b!67649 bm!5686) bm!5685))

(assert (= (or b!67649 bm!5683) bm!5687))

(assert (= (and d!14303 res!36516) b!67657))

(assert (= (and d!14303 c!9466) b!67643))

(assert (= (and d!14303 (not c!9466)) b!67641))

(assert (= (and d!14303 res!36517) b!67639))

(assert (= (and b!67639 res!36514) b!67652))

(assert (= (and b!67639 (not res!36509)) b!67653))

(assert (= (and b!67653 res!36512) b!67648))

(assert (= (and b!67639 res!36511) b!67642))

(assert (= (and b!67642 c!9463) b!67655))

(assert (= (and b!67642 (not c!9463)) b!67644))

(assert (= (and b!67655 res!36513) b!67646))

(assert (= (or b!67655 b!67644) bm!5682))

(assert (= (and b!67642 res!36515) b!67647))

(assert (= (and b!67647 c!9461) b!67654))

(assert (= (and b!67647 (not c!9461)) b!67637))

(assert (= (and b!67654 res!36510) b!67651))

(assert (= (or b!67654 b!67637) bm!5688))

(declare-fun b_lambda!3007 () Bool)

(assert (=> (not b_lambda!3007) (not b!67648)))

(assert (=> b!67648 t!4952))

(declare-fun b_and!4157 () Bool)

(assert (= b_and!4153 (and (=> t!4952 result!2587) b_and!4157)))

(assert (=> b!67648 t!4954))

(declare-fun b_and!4159 () Bool)

(assert (= b_and!4155 (and (=> t!4954 result!2589) b_and!4159)))

(declare-fun m!62857 () Bool)

(assert (=> b!67649 m!62857))

(assert (=> d!14303 m!60845))

(declare-fun m!62859 () Bool)

(assert (=> bm!5685 m!62859))

(declare-fun m!62861 () Bool)

(assert (=> b!67651 m!62861))

(assert (=> b!67652 m!60839))

(assert (=> b!67652 m!60839))

(assert (=> b!67652 m!60841))

(declare-fun m!62863 () Bool)

(assert (=> b!67643 m!62863))

(declare-fun m!62865 () Bool)

(assert (=> b!67643 m!62865))

(declare-fun m!62867 () Bool)

(assert (=> b!67643 m!62867))

(declare-fun m!62869 () Bool)

(assert (=> b!67643 m!62869))

(assert (=> b!67643 m!62863))

(declare-fun m!62871 () Bool)

(assert (=> b!67643 m!62871))

(declare-fun m!62873 () Bool)

(assert (=> b!67643 m!62873))

(assert (=> b!67643 m!62867))

(declare-fun m!62875 () Bool)

(assert (=> b!67643 m!62875))

(declare-fun m!62877 () Bool)

(assert (=> b!67643 m!62877))

(declare-fun m!62879 () Bool)

(assert (=> b!67643 m!62879))

(declare-fun m!62881 () Bool)

(assert (=> b!67643 m!62881))

(declare-fun m!62883 () Bool)

(assert (=> b!67643 m!62883))

(assert (=> b!67643 m!62859))

(declare-fun m!62885 () Bool)

(assert (=> b!67643 m!62885))

(assert (=> b!67643 m!62881))

(declare-fun m!62887 () Bool)

(assert (=> b!67643 m!62887))

(assert (=> b!67643 m!60839))

(declare-fun m!62889 () Bool)

(assert (=> b!67643 m!62889))

(assert (=> b!67643 m!62871))

(declare-fun m!62891 () Bool)

(assert (=> b!67643 m!62891))

(declare-fun m!62893 () Bool)

(assert (=> bm!5687 m!62893))

(declare-fun m!62895 () Bool)

(assert (=> bm!5688 m!62895))

(assert (=> b!67648 m!60885))

(assert (=> b!67648 m!60839))

(assert (=> b!67648 m!60839))

(declare-fun m!62897 () Bool)

(assert (=> b!67648 m!62897))

(assert (=> b!67648 m!60889))

(assert (=> b!67648 m!60885))

(assert (=> b!67648 m!60891))

(assert (=> b!67648 m!60889))

(declare-fun m!62899 () Bool)

(assert (=> bm!5682 m!62899))

(assert (=> b!67653 m!60839))

(assert (=> b!67653 m!60839))

(declare-fun m!62901 () Bool)

(assert (=> b!67653 m!62901))

(declare-fun m!62903 () Bool)

(assert (=> b!67646 m!62903))

(assert (=> b!67657 m!60839))

(assert (=> b!67657 m!60839))

(assert (=> b!67657 m!60841))

(assert (=> d!13817 d!14303))

(assert (=> d!13817 d!13687))

(declare-fun d!14305 () Bool)

(declare-fun e!44339 () Bool)

(assert (=> d!14305 e!44339))

(declare-fun res!36518 () Bool)

(assert (=> d!14305 (=> (not res!36518) (not e!44339))))

(declare-fun lt!29430 () ListLongMap!1379)

(assert (=> d!14305 (= res!36518 (contains!705 lt!29430 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400))))))

(declare-fun lt!29432 () List!1466)

(assert (=> d!14305 (= lt!29430 (ListLongMap!1380 lt!29432))))

(declare-fun lt!29429 () Unit!1818)

(declare-fun lt!29431 () Unit!1818)

(assert (=> d!14305 (= lt!29429 lt!29431)))

(assert (=> d!14305 (= (getValueByKey!128 lt!29432 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400))) (Some!133 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400))))))

(assert (=> d!14305 (= lt!29431 (lemmaContainsTupThenGetReturnValue!48 lt!29432 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400))))))

(assert (=> d!14305 (= lt!29432 (insertStrictlySorted!51 (toList!705 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400))))))

(assert (=> d!14305 (= (+!87 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) lt!29430)))

(declare-fun b!67658 () Bool)

(declare-fun res!36519 () Bool)

(assert (=> b!67658 (=> (not res!36519) (not e!44339))))

(assert (=> b!67658 (= res!36519 (= (getValueByKey!128 (toList!705 lt!29430) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400))) (Some!133 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)))))))

(declare-fun b!67659 () Bool)

(assert (=> b!67659 (= e!44339 (contains!707 (toList!705 lt!29430) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)))))

(assert (= (and d!14305 res!36518) b!67658))

(assert (= (and b!67658 res!36519) b!67659))

(declare-fun m!62905 () Bool)

(assert (=> d!14305 m!62905))

(declare-fun m!62907 () Bool)

(assert (=> d!14305 m!62907))

(declare-fun m!62909 () Bool)

(assert (=> d!14305 m!62909))

(declare-fun m!62911 () Bool)

(assert (=> d!14305 m!62911))

(declare-fun m!62913 () Bool)

(assert (=> b!67658 m!62913))

(declare-fun m!62915 () Bool)

(assert (=> b!67659 m!62915))

(assert (=> d!13817 d!14305))

(declare-fun b!67663 () Bool)

(declare-fun e!44341 () Option!134)

(assert (=> b!67663 (= e!44341 None!132)))

(declare-fun b!67662 () Bool)

(assert (=> b!67662 (= e!44341 (getValueByKey!128 (t!4939 (toList!705 lt!28728)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67660 () Bool)

(declare-fun e!44340 () Option!134)

(assert (=> b!67660 (= e!44340 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28728)))))))

(declare-fun c!9467 () Bool)

(declare-fun d!14307 () Bool)

(assert (=> d!14307 (= c!9467 (and ((_ is Cons!1462) (toList!705 lt!28728)) (= (_1!1052 (h!2046 (toList!705 lt!28728))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!14307 (= (getValueByKey!128 (toList!705 lt!28728) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) e!44340)))

(declare-fun b!67661 () Bool)

(assert (=> b!67661 (= e!44340 e!44341)))

(declare-fun c!9468 () Bool)

(assert (=> b!67661 (= c!9468 (and ((_ is Cons!1462) (toList!705 lt!28728)) (not (= (_1!1052 (h!2046 (toList!705 lt!28728))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(assert (= (and d!14307 c!9467) b!67660))

(assert (= (and d!14307 (not c!9467)) b!67661))

(assert (= (and b!67661 c!9468) b!67662))

(assert (= (and b!67661 (not c!9468)) b!67663))

(declare-fun m!62917 () Bool)

(assert (=> b!67662 m!62917))

(assert (=> b!66578 d!14307))

(declare-fun d!14309 () Bool)

(declare-fun e!44342 () Bool)

(assert (=> d!14309 e!44342))

(declare-fun res!36520 () Bool)

(assert (=> d!14309 (=> res!36520 e!44342)))

(declare-fun lt!29436 () Bool)

(assert (=> d!14309 (= res!36520 (not lt!29436))))

(declare-fun lt!29435 () Bool)

(assert (=> d!14309 (= lt!29436 lt!29435)))

(declare-fun lt!29433 () Unit!1818)

(declare-fun e!44343 () Unit!1818)

(assert (=> d!14309 (= lt!29433 e!44343)))

(declare-fun c!9469 () Bool)

(assert (=> d!14309 (= c!9469 lt!29435)))

(assert (=> d!14309 (= lt!29435 (containsKey!132 (toList!705 lt!28760) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14309 (= (contains!705 lt!28760 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!29436)))

(declare-fun b!67664 () Bool)

(declare-fun lt!29434 () Unit!1818)

(assert (=> b!67664 (= e!44343 lt!29434)))

(assert (=> b!67664 (= lt!29434 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28760) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!67664 (isDefined!82 (getValueByKey!128 (toList!705 lt!28760) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!67665 () Bool)

(declare-fun Unit!1880 () Unit!1818)

(assert (=> b!67665 (= e!44343 Unit!1880)))

(declare-fun b!67666 () Bool)

(assert (=> b!67666 (= e!44342 (isDefined!82 (getValueByKey!128 (toList!705 lt!28760) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!14309 c!9469) b!67664))

(assert (= (and d!14309 (not c!9469)) b!67665))

(assert (= (and d!14309 (not res!36520)) b!67666))

(declare-fun m!62919 () Bool)

(assert (=> d!14309 m!62919))

(declare-fun m!62921 () Bool)

(assert (=> b!67664 m!62921))

(assert (=> b!67664 m!61009))

(assert (=> b!67664 m!61009))

(declare-fun m!62923 () Bool)

(assert (=> b!67664 m!62923))

(assert (=> b!67666 m!61009))

(assert (=> b!67666 m!61009))

(assert (=> b!67666 m!62923))

(assert (=> d!13711 d!14309))

(declare-fun b!67670 () Bool)

(declare-fun e!44345 () Option!134)

(assert (=> b!67670 (= e!44345 None!132)))

(declare-fun b!67669 () Bool)

(assert (=> b!67669 (= e!44345 (getValueByKey!128 (t!4939 lt!28762) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!67667 () Bool)

(declare-fun e!44344 () Option!134)

(assert (=> b!67667 (= e!44344 (Some!133 (_2!1052 (h!2046 lt!28762))))))

(declare-fun d!14311 () Bool)

(declare-fun c!9470 () Bool)

(assert (=> d!14311 (= c!9470 (and ((_ is Cons!1462) lt!28762) (= (_1!1052 (h!2046 lt!28762)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!14311 (= (getValueByKey!128 lt!28762 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!44344)))

(declare-fun b!67668 () Bool)

(assert (=> b!67668 (= e!44344 e!44345)))

(declare-fun c!9471 () Bool)

(assert (=> b!67668 (= c!9471 (and ((_ is Cons!1462) lt!28762) (not (= (_1!1052 (h!2046 lt!28762)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!14311 c!9470) b!67667))

(assert (= (and d!14311 (not c!9470)) b!67668))

(assert (= (and b!67668 c!9471) b!67669))

(assert (= (and b!67668 (not c!9471)) b!67670))

(declare-fun m!62925 () Bool)

(assert (=> b!67669 m!62925))

(assert (=> d!13711 d!14311))

(declare-fun d!14313 () Bool)

(assert (=> d!14313 (= (getValueByKey!128 lt!28762 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!29437 () Unit!1818)

(assert (=> d!14313 (= lt!29437 (choose!375 lt!28762 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!44346 () Bool)

(assert (=> d!14313 e!44346))

(declare-fun res!36521 () Bool)

(assert (=> d!14313 (=> (not res!36521) (not e!44346))))

(assert (=> d!14313 (= res!36521 (isStrictlySorted!284 lt!28762))))

(assert (=> d!14313 (= (lemmaContainsTupThenGetReturnValue!48 lt!28762 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!29437)))

(declare-fun b!67671 () Bool)

(declare-fun res!36522 () Bool)

(assert (=> b!67671 (=> (not res!36522) (not e!44346))))

(assert (=> b!67671 (= res!36522 (containsKey!132 lt!28762 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!67672 () Bool)

(assert (=> b!67672 (= e!44346 (contains!707 lt!28762 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!14313 res!36521) b!67671))

(assert (= (and b!67671 res!36522) b!67672))

(assert (=> d!14313 m!61003))

(declare-fun m!62927 () Bool)

(assert (=> d!14313 m!62927))

(declare-fun m!62929 () Bool)

(assert (=> d!14313 m!62929))

(declare-fun m!62931 () Bool)

(assert (=> b!67671 m!62931))

(declare-fun m!62933 () Bool)

(assert (=> b!67672 m!62933))

(assert (=> d!13711 d!14313))

(declare-fun bm!5689 () Bool)

(declare-fun call!5693 () List!1466)

(declare-fun call!5694 () List!1466)

(assert (=> bm!5689 (= call!5693 call!5694)))

(declare-fun d!14315 () Bool)

(declare-fun e!44348 () Bool)

(assert (=> d!14315 e!44348))

(declare-fun res!36524 () Bool)

(assert (=> d!14315 (=> (not res!36524) (not e!44348))))

(declare-fun lt!29438 () List!1466)

(assert (=> d!14315 (= res!36524 (isStrictlySorted!284 lt!29438))))

(declare-fun e!44349 () List!1466)

(assert (=> d!14315 (= lt!29438 e!44349)))

(declare-fun c!9473 () Bool)

(assert (=> d!14315 (= c!9473 (and ((_ is Cons!1462) (toList!705 call!5454)) (bvslt (_1!1052 (h!2046 (toList!705 call!5454))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!14315 (isStrictlySorted!284 (toList!705 call!5454))))

(assert (=> d!14315 (= (insertStrictlySorted!51 (toList!705 call!5454) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!29438)))

(declare-fun b!67673 () Bool)

(declare-fun c!9472 () Bool)

(assert (=> b!67673 (= c!9472 (and ((_ is Cons!1462) (toList!705 call!5454)) (bvsgt (_1!1052 (h!2046 (toList!705 call!5454))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!44350 () List!1466)

(declare-fun e!44347 () List!1466)

(assert (=> b!67673 (= e!44350 e!44347)))

(declare-fun b!67674 () Bool)

(declare-fun e!44351 () List!1466)

(declare-fun c!9475 () Bool)

(assert (=> b!67674 (= e!44351 (ite c!9475 (t!4939 (toList!705 call!5454)) (ite c!9472 (Cons!1462 (h!2046 (toList!705 call!5454)) (t!4939 (toList!705 call!5454))) Nil!1463)))))

(declare-fun b!67675 () Bool)

(assert (=> b!67675 (= e!44349 e!44350)))

(assert (=> b!67675 (= c!9475 (and ((_ is Cons!1462) (toList!705 call!5454)) (= (_1!1052 (h!2046 (toList!705 call!5454))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!5690 () Bool)

(declare-fun call!5692 () List!1466)

(assert (=> bm!5690 (= call!5694 call!5692)))

(declare-fun b!67676 () Bool)

(assert (=> b!67676 (= e!44351 (insertStrictlySorted!51 (t!4939 (toList!705 call!5454)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!67677 () Bool)

(assert (=> b!67677 (= e!44348 (contains!707 lt!29438 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!67678 () Bool)

(assert (=> b!67678 (= e!44350 call!5694)))

(declare-fun b!67679 () Bool)

(assert (=> b!67679 (= e!44349 call!5692)))

(declare-fun b!67680 () Bool)

(declare-fun res!36523 () Bool)

(assert (=> b!67680 (=> (not res!36523) (not e!44348))))

(assert (=> b!67680 (= res!36523 (containsKey!132 lt!29438 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!67681 () Bool)

(assert (=> b!67681 (= e!44347 call!5693)))

(declare-fun b!67682 () Bool)

(assert (=> b!67682 (= e!44347 call!5693)))

(declare-fun bm!5691 () Bool)

(assert (=> bm!5691 (= call!5692 ($colon$colon!62 e!44351 (ite c!9473 (h!2046 (toList!705 call!5454)) (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!9474 () Bool)

(assert (=> bm!5691 (= c!9474 c!9473)))

(assert (= (and d!14315 c!9473) b!67679))

(assert (= (and d!14315 (not c!9473)) b!67675))

(assert (= (and b!67675 c!9475) b!67678))

(assert (= (and b!67675 (not c!9475)) b!67673))

(assert (= (and b!67673 c!9472) b!67682))

(assert (= (and b!67673 (not c!9472)) b!67681))

(assert (= (or b!67682 b!67681) bm!5689))

(assert (= (or b!67678 bm!5689) bm!5690))

(assert (= (or b!67679 bm!5690) bm!5691))

(assert (= (and bm!5691 c!9474) b!67676))

(assert (= (and bm!5691 (not c!9474)) b!67674))

(assert (= (and d!14315 res!36524) b!67680))

(assert (= (and b!67680 res!36523) b!67677))

(declare-fun m!62935 () Bool)

(assert (=> d!14315 m!62935))

(declare-fun m!62937 () Bool)

(assert (=> d!14315 m!62937))

(declare-fun m!62939 () Bool)

(assert (=> b!67680 m!62939))

(declare-fun m!62941 () Bool)

(assert (=> b!67677 m!62941))

(declare-fun m!62943 () Bool)

(assert (=> bm!5691 m!62943))

(declare-fun m!62945 () Bool)

(assert (=> b!67676 m!62945))

(assert (=> d!13711 d!14315))

(assert (=> b!66677 d!13815))

(declare-fun d!14317 () Bool)

(assert (=> d!14317 (= (isDefined!82 (getValueByKey!128 (toList!705 lt!28525) (_1!1052 lt!28403))) (not (isEmpty!313 (getValueByKey!128 (toList!705 lt!28525) (_1!1052 lt!28403)))))))

(declare-fun bs!2901 () Bool)

(assert (= bs!2901 d!14317))

(assert (=> bs!2901 m!60673))

(declare-fun m!62947 () Bool)

(assert (=> bs!2901 m!62947))

(assert (=> b!66927 d!14317))

(assert (=> b!66927 d!13835))

(declare-fun b!67686 () Bool)

(declare-fun e!44353 () Option!134)

(assert (=> b!67686 (= e!44353 None!132)))

(declare-fun b!67685 () Bool)

(assert (=> b!67685 (= e!44353 (getValueByKey!128 (t!4939 (toList!705 lt!28858)) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!67683 () Bool)

(declare-fun e!44352 () Option!134)

(assert (=> b!67683 (= e!44352 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28858)))))))

(declare-fun d!14319 () Bool)

(declare-fun c!9476 () Bool)

(assert (=> d!14319 (= c!9476 (and ((_ is Cons!1462) (toList!705 lt!28858)) (= (_1!1052 (h!2046 (toList!705 lt!28858))) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(assert (=> d!14319 (= (getValueByKey!128 (toList!705 lt!28858) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))) e!44352)))

(declare-fun b!67684 () Bool)

(assert (=> b!67684 (= e!44352 e!44353)))

(declare-fun c!9477 () Bool)

(assert (=> b!67684 (= c!9477 (and ((_ is Cons!1462) (toList!705 lt!28858)) (not (= (_1!1052 (h!2046 (toList!705 lt!28858))) (_1!1052 (ite c!9137 (ite c!9128 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))))

(assert (= (and d!14319 c!9476) b!67683))

(assert (= (and d!14319 (not c!9476)) b!67684))

(assert (= (and b!67684 c!9477) b!67685))

(assert (= (and b!67684 (not c!9477)) b!67686))

(declare-fun m!62949 () Bool)

(assert (=> b!67685 m!62949))

(assert (=> b!66681 d!14319))

(declare-fun d!14321 () Bool)

(assert (=> d!14321 (= (apply!72 lt!29032 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1123 (getValueByKey!128 (toList!705 lt!29032) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2902 () Bool)

(assert (= bs!2902 d!14321))

(assert (=> bs!2902 m!61659))

(assert (=> bs!2902 m!61659))

(declare-fun m!62951 () Bool)

(assert (=> bs!2902 m!62951))

(assert (=> b!66985 d!14321))

(declare-fun d!14323 () Bool)

(assert (=> d!14323 (= (isDefined!82 (getValueByKey!128 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!313 (getValueByKey!128 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2903 () Bool)

(assert (= bs!2903 d!14323))

(assert (=> bs!2903 m!61313))

(declare-fun m!62953 () Bool)

(assert (=> bs!2903 m!62953))

(assert (=> b!66891 d!14323))

(declare-fun b!67690 () Bool)

(declare-fun e!44355 () Option!134)

(assert (=> b!67690 (= e!44355 None!132)))

(declare-fun b!67689 () Bool)

(assert (=> b!67689 (= e!44355 (getValueByKey!128 (t!4939 (toList!705 lt!28687)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67687 () Bool)

(declare-fun e!44354 () Option!134)

(assert (=> b!67687 (= e!44354 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28687)))))))

(declare-fun d!14325 () Bool)

(declare-fun c!9478 () Bool)

(assert (=> d!14325 (= c!9478 (and ((_ is Cons!1462) (toList!705 lt!28687)) (= (_1!1052 (h!2046 (toList!705 lt!28687))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14325 (= (getValueByKey!128 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000) e!44354)))

(declare-fun b!67688 () Bool)

(assert (=> b!67688 (= e!44354 e!44355)))

(declare-fun c!9479 () Bool)

(assert (=> b!67688 (= c!9479 (and ((_ is Cons!1462) (toList!705 lt!28687)) (not (= (_1!1052 (h!2046 (toList!705 lt!28687))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14325 c!9478) b!67687))

(assert (= (and d!14325 (not c!9478)) b!67688))

(assert (= (and b!67688 c!9479) b!67689))

(assert (= (and b!67688 (not c!9479)) b!67690))

(declare-fun m!62955 () Bool)

(assert (=> b!67689 m!62955))

(assert (=> b!66891 d!14325))

(declare-fun d!14327 () Bool)

(declare-fun e!44356 () Bool)

(assert (=> d!14327 e!44356))

(declare-fun res!36525 () Bool)

(assert (=> d!14327 (=> res!36525 e!44356)))

(declare-fun lt!29442 () Bool)

(assert (=> d!14327 (= res!36525 (not lt!29442))))

(declare-fun lt!29441 () Bool)

(assert (=> d!14327 (= lt!29442 lt!29441)))

(declare-fun lt!29439 () Unit!1818)

(declare-fun e!44357 () Unit!1818)

(assert (=> d!14327 (= lt!29439 e!44357)))

(declare-fun c!9480 () Bool)

(assert (=> d!14327 (= c!9480 lt!29441)))

(assert (=> d!14327 (= lt!29441 (containsKey!132 (toList!705 lt!28728) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!14327 (= (contains!705 lt!28728 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) lt!29442)))

(declare-fun b!67691 () Bool)

(declare-fun lt!29440 () Unit!1818)

(assert (=> b!67691 (= e!44357 lt!29440)))

(assert (=> b!67691 (= lt!29440 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28728) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> b!67691 (isDefined!82 (getValueByKey!128 (toList!705 lt!28728) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67692 () Bool)

(declare-fun Unit!1881 () Unit!1818)

(assert (=> b!67692 (= e!44357 Unit!1881)))

(declare-fun b!67693 () Bool)

(assert (=> b!67693 (= e!44356 (isDefined!82 (getValueByKey!128 (toList!705 lt!28728) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (= (and d!14327 c!9480) b!67691))

(assert (= (and d!14327 (not c!9480)) b!67692))

(assert (= (and d!14327 (not res!36525)) b!67693))

(declare-fun m!62957 () Bool)

(assert (=> d!14327 m!62957))

(declare-fun m!62959 () Bool)

(assert (=> b!67691 m!62959))

(assert (=> b!67691 m!60911))

(assert (=> b!67691 m!60911))

(declare-fun m!62961 () Bool)

(assert (=> b!67691 m!62961))

(assert (=> b!67693 m!60911))

(assert (=> b!67693 m!60911))

(assert (=> b!67693 m!62961))

(assert (=> d!13691 d!14327))

(declare-fun b!67697 () Bool)

(declare-fun e!44359 () Option!134)

(assert (=> b!67697 (= e!44359 None!132)))

(declare-fun b!67696 () Bool)

(assert (=> b!67696 (= e!44359 (getValueByKey!128 (t!4939 lt!28730) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67694 () Bool)

(declare-fun e!44358 () Option!134)

(assert (=> b!67694 (= e!44358 (Some!133 (_2!1052 (h!2046 lt!28730))))))

(declare-fun d!14329 () Bool)

(declare-fun c!9481 () Bool)

(assert (=> d!14329 (= c!9481 (and ((_ is Cons!1462) lt!28730) (= (_1!1052 (h!2046 lt!28730)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!14329 (= (getValueByKey!128 lt!28730 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) e!44358)))

(declare-fun b!67695 () Bool)

(assert (=> b!67695 (= e!44358 e!44359)))

(declare-fun c!9482 () Bool)

(assert (=> b!67695 (= c!9482 (and ((_ is Cons!1462) lt!28730) (not (= (_1!1052 (h!2046 lt!28730)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(assert (= (and d!14329 c!9481) b!67694))

(assert (= (and d!14329 (not c!9481)) b!67695))

(assert (= (and b!67695 c!9482) b!67696))

(assert (= (and b!67695 (not c!9482)) b!67697))

(declare-fun m!62963 () Bool)

(assert (=> b!67696 m!62963))

(assert (=> d!13691 d!14329))

(declare-fun d!14331 () Bool)

(assert (=> d!14331 (= (getValueByKey!128 lt!28730 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun lt!29443 () Unit!1818)

(assert (=> d!14331 (= lt!29443 (choose!375 lt!28730 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun e!44360 () Bool)

(assert (=> d!14331 e!44360))

(declare-fun res!36526 () Bool)

(assert (=> d!14331 (=> (not res!36526) (not e!44360))))

(assert (=> d!14331 (= res!36526 (isStrictlySorted!284 lt!28730))))

(assert (=> d!14331 (= (lemmaContainsTupThenGetReturnValue!48 lt!28730 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) lt!29443)))

(declare-fun b!67698 () Bool)

(declare-fun res!36527 () Bool)

(assert (=> b!67698 (=> (not res!36527) (not e!44360))))

(assert (=> b!67698 (= res!36527 (containsKey!132 lt!28730 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67699 () Bool)

(assert (=> b!67699 (= e!44360 (contains!707 lt!28730 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (= (and d!14331 res!36526) b!67698))

(assert (= (and b!67698 res!36527) b!67699))

(assert (=> d!14331 m!60905))

(declare-fun m!62965 () Bool)

(assert (=> d!14331 m!62965))

(declare-fun m!62967 () Bool)

(assert (=> d!14331 m!62967))

(declare-fun m!62969 () Bool)

(assert (=> b!67698 m!62969))

(declare-fun m!62971 () Bool)

(assert (=> b!67699 m!62971))

(assert (=> d!13691 d!14331))

(declare-fun bm!5692 () Bool)

(declare-fun call!5696 () List!1466)

(declare-fun call!5697 () List!1466)

(assert (=> bm!5692 (= call!5696 call!5697)))

(declare-fun d!14333 () Bool)

(declare-fun e!44362 () Bool)

(assert (=> d!14333 e!44362))

(declare-fun res!36529 () Bool)

(assert (=> d!14333 (=> (not res!36529) (not e!44362))))

(declare-fun lt!29444 () List!1466)

(assert (=> d!14333 (= res!36529 (isStrictlySorted!284 lt!29444))))

(declare-fun e!44363 () List!1466)

(assert (=> d!14333 (= lt!29444 e!44363)))

(declare-fun c!9484 () Bool)

(assert (=> d!14333 (= c!9484 (and ((_ is Cons!1462) (toList!705 call!5521)) (bvslt (_1!1052 (h!2046 (toList!705 call!5521))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!14333 (isStrictlySorted!284 (toList!705 call!5521))))

(assert (=> d!14333 (= (insertStrictlySorted!51 (toList!705 call!5521) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) lt!29444)))

(declare-fun c!9483 () Bool)

(declare-fun b!67700 () Bool)

(assert (=> b!67700 (= c!9483 (and ((_ is Cons!1462) (toList!705 call!5521)) (bvsgt (_1!1052 (h!2046 (toList!705 call!5521))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun e!44364 () List!1466)

(declare-fun e!44361 () List!1466)

(assert (=> b!67700 (= e!44364 e!44361)))

(declare-fun e!44365 () List!1466)

(declare-fun b!67701 () Bool)

(declare-fun c!9486 () Bool)

(assert (=> b!67701 (= e!44365 (ite c!9486 (t!4939 (toList!705 call!5521)) (ite c!9483 (Cons!1462 (h!2046 (toList!705 call!5521)) (t!4939 (toList!705 call!5521))) Nil!1463)))))

(declare-fun b!67702 () Bool)

(assert (=> b!67702 (= e!44363 e!44364)))

(assert (=> b!67702 (= c!9486 (and ((_ is Cons!1462) (toList!705 call!5521)) (= (_1!1052 (h!2046 (toList!705 call!5521))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun bm!5693 () Bool)

(declare-fun call!5695 () List!1466)

(assert (=> bm!5693 (= call!5697 call!5695)))

(declare-fun b!67703 () Bool)

(assert (=> b!67703 (= e!44365 (insertStrictlySorted!51 (t!4939 (toList!705 call!5521)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67704 () Bool)

(assert (=> b!67704 (= e!44362 (contains!707 lt!29444 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!67705 () Bool)

(assert (=> b!67705 (= e!44364 call!5697)))

(declare-fun b!67706 () Bool)

(assert (=> b!67706 (= e!44363 call!5695)))

(declare-fun b!67707 () Bool)

(declare-fun res!36528 () Bool)

(assert (=> b!67707 (=> (not res!36528) (not e!44362))))

(assert (=> b!67707 (= res!36528 (containsKey!132 lt!29444 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67708 () Bool)

(assert (=> b!67708 (= e!44361 call!5696)))

(declare-fun b!67709 () Bool)

(assert (=> b!67709 (= e!44361 call!5696)))

(declare-fun bm!5694 () Bool)

(assert (=> bm!5694 (= call!5695 ($colon$colon!62 e!44365 (ite c!9484 (h!2046 (toList!705 call!5521)) (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(declare-fun c!9485 () Bool)

(assert (=> bm!5694 (= c!9485 c!9484)))

(assert (= (and d!14333 c!9484) b!67706))

(assert (= (and d!14333 (not c!9484)) b!67702))

(assert (= (and b!67702 c!9486) b!67705))

(assert (= (and b!67702 (not c!9486)) b!67700))

(assert (= (and b!67700 c!9483) b!67709))

(assert (= (and b!67700 (not c!9483)) b!67708))

(assert (= (or b!67709 b!67708) bm!5692))

(assert (= (or b!67705 bm!5692) bm!5693))

(assert (= (or b!67706 bm!5693) bm!5694))

(assert (= (and bm!5694 c!9485) b!67703))

(assert (= (and bm!5694 (not c!9485)) b!67701))

(assert (= (and d!14333 res!36529) b!67707))

(assert (= (and b!67707 res!36528) b!67704))

(declare-fun m!62973 () Bool)

(assert (=> d!14333 m!62973))

(declare-fun m!62975 () Bool)

(assert (=> d!14333 m!62975))

(declare-fun m!62977 () Bool)

(assert (=> b!67707 m!62977))

(declare-fun m!62979 () Bool)

(assert (=> b!67704 m!62979))

(declare-fun m!62981 () Bool)

(assert (=> bm!5694 m!62981))

(declare-fun m!62983 () Bool)

(assert (=> b!67703 m!62983))

(assert (=> d!13691 d!14333))

(assert (=> d!13743 d!13757))

(assert (=> d!13743 d!13739))

(declare-fun d!14335 () Bool)

(assert (=> d!14335 (contains!705 (+!87 lt!28673 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28685)))

(assert (=> d!14335 true))

(declare-fun _$35!309 () Unit!1818)

(assert (=> d!14335 (= (choose!376 lt!28673 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28685) _$35!309)))

(declare-fun bs!2904 () Bool)

(assert (= bs!2904 d!14335))

(assert (=> bs!2904 m!60759))

(assert (=> bs!2904 m!60759))

(assert (=> bs!2904 m!60761))

(assert (=> d!13743 d!14335))

(declare-fun d!14337 () Bool)

(declare-fun e!44366 () Bool)

(assert (=> d!14337 e!44366))

(declare-fun res!36530 () Bool)

(assert (=> d!14337 (=> res!36530 e!44366)))

(declare-fun lt!29448 () Bool)

(assert (=> d!14337 (= res!36530 (not lt!29448))))

(declare-fun lt!29447 () Bool)

(assert (=> d!14337 (= lt!29448 lt!29447)))

(declare-fun lt!29445 () Unit!1818)

(declare-fun e!44367 () Unit!1818)

(assert (=> d!14337 (= lt!29445 e!44367)))

(declare-fun c!9487 () Bool)

(assert (=> d!14337 (= c!9487 lt!29447)))

(assert (=> d!14337 (= lt!29447 (containsKey!132 (toList!705 lt!28673) lt!28685))))

(assert (=> d!14337 (= (contains!705 lt!28673 lt!28685) lt!29448)))

(declare-fun b!67711 () Bool)

(declare-fun lt!29446 () Unit!1818)

(assert (=> b!67711 (= e!44367 lt!29446)))

(assert (=> b!67711 (= lt!29446 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28673) lt!28685))))

(assert (=> b!67711 (isDefined!82 (getValueByKey!128 (toList!705 lt!28673) lt!28685))))

(declare-fun b!67712 () Bool)

(declare-fun Unit!1882 () Unit!1818)

(assert (=> b!67712 (= e!44367 Unit!1882)))

(declare-fun b!67713 () Bool)

(assert (=> b!67713 (= e!44366 (isDefined!82 (getValueByKey!128 (toList!705 lt!28673) lt!28685)))))

(assert (= (and d!14337 c!9487) b!67711))

(assert (= (and d!14337 (not c!9487)) b!67712))

(assert (= (and d!14337 (not res!36530)) b!67713))

(declare-fun m!62985 () Bool)

(assert (=> d!14337 m!62985))

(declare-fun m!62987 () Bool)

(assert (=> b!67711 m!62987))

(declare-fun m!62989 () Bool)

(assert (=> b!67711 m!62989))

(assert (=> b!67711 m!62989))

(declare-fun m!62991 () Bool)

(assert (=> b!67711 m!62991))

(assert (=> b!67713 m!62989))

(assert (=> b!67713 m!62989))

(assert (=> b!67713 m!62991))

(assert (=> d!13743 d!14337))

(declare-fun d!14339 () Bool)

(assert (=> d!14339 (= (isDefined!82 (getValueByKey!128 (toList!705 call!5520) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))) (not (isEmpty!313 (getValueByKey!128 (toList!705 call!5520) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))))

(declare-fun bs!2905 () Bool)

(assert (= bs!2905 d!14339))

(assert (=> bs!2905 m!61411))

(declare-fun m!62993 () Bool)

(assert (=> bs!2905 m!62993))

(assert (=> b!66894 d!14339))

(declare-fun b!67717 () Bool)

(declare-fun e!44369 () Option!134)

(assert (=> b!67717 (= e!44369 None!132)))

(declare-fun b!67716 () Bool)

(assert (=> b!67716 (= e!44369 (getValueByKey!128 (t!4939 (toList!705 call!5520)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun b!67714 () Bool)

(declare-fun e!44368 () Option!134)

(assert (=> b!67714 (= e!44368 (Some!133 (_2!1052 (h!2046 (toList!705 call!5520)))))))

(declare-fun d!14341 () Bool)

(declare-fun c!9488 () Bool)

(assert (=> d!14341 (= c!9488 (and ((_ is Cons!1462) (toList!705 call!5520)) (= (_1!1052 (h!2046 (toList!705 call!5520))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (=> d!14341 (= (getValueByKey!128 (toList!705 call!5520) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) e!44368)))

(declare-fun b!67715 () Bool)

(assert (=> b!67715 (= e!44368 e!44369)))

(declare-fun c!9489 () Bool)

(assert (=> b!67715 (= c!9489 (and ((_ is Cons!1462) (toList!705 call!5520)) (not (= (_1!1052 (h!2046 (toList!705 call!5520))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))))

(assert (= (and d!14341 c!9488) b!67714))

(assert (= (and d!14341 (not c!9488)) b!67715))

(assert (= (and b!67715 c!9489) b!67716))

(assert (= (and b!67715 (not c!9489)) b!67717))

(assert (=> b!67716 m!60449))

(declare-fun m!62995 () Bool)

(assert (=> b!67716 m!62995))

(assert (=> b!66894 d!14341))

(declare-fun d!14343 () Bool)

(declare-fun e!44370 () Bool)

(assert (=> d!14343 e!44370))

(declare-fun res!36531 () Bool)

(assert (=> d!14343 (=> res!36531 e!44370)))

(declare-fun lt!29452 () Bool)

(assert (=> d!14343 (= res!36531 (not lt!29452))))

(declare-fun lt!29451 () Bool)

(assert (=> d!14343 (= lt!29452 lt!29451)))

(declare-fun lt!29449 () Unit!1818)

(declare-fun e!44371 () Unit!1818)

(assert (=> d!14343 (= lt!29449 e!44371)))

(declare-fun c!9490 () Bool)

(assert (=> d!14343 (= c!9490 lt!29451)))

(assert (=> d!14343 (= lt!29451 (containsKey!132 (toList!705 lt!29032) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14343 (= (contains!705 lt!29032 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29452)))

(declare-fun b!67718 () Bool)

(declare-fun lt!29450 () Unit!1818)

(assert (=> b!67718 (= e!44371 lt!29450)))

(assert (=> b!67718 (= lt!29450 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!29032) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67718 (isDefined!82 (getValueByKey!128 (toList!705 lt!29032) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67719 () Bool)

(declare-fun Unit!1883 () Unit!1818)

(assert (=> b!67719 (= e!44371 Unit!1883)))

(declare-fun b!67720 () Bool)

(assert (=> b!67720 (= e!44370 (isDefined!82 (getValueByKey!128 (toList!705 lt!29032) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14343 c!9490) b!67718))

(assert (= (and d!14343 (not c!9490)) b!67719))

(assert (= (and d!14343 (not res!36531)) b!67720))

(declare-fun m!62997 () Bool)

(assert (=> d!14343 m!62997))

(declare-fun m!62999 () Bool)

(assert (=> b!67718 m!62999))

(declare-fun m!63001 () Bool)

(assert (=> b!67718 m!63001))

(assert (=> b!67718 m!63001))

(declare-fun m!63003 () Bool)

(assert (=> b!67718 m!63003))

(assert (=> b!67720 m!63001))

(assert (=> b!67720 m!63001))

(assert (=> b!67720 m!63003))

(assert (=> bm!5613 d!14343))

(declare-fun d!14345 () Bool)

(assert (=> d!14345 (= (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))) lt!28519)) (not (isEmpty!313 (getValueByKey!128 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))) lt!28519))))))

(declare-fun bs!2906 () Bool)

(assert (= bs!2906 d!14345))

(assert (=> bs!2906 m!60993))

(declare-fun m!63005 () Bool)

(assert (=> bs!2906 m!63005))

(assert (=> b!66621 d!14345))

(declare-fun b!67724 () Bool)

(declare-fun e!44373 () Option!134)

(assert (=> b!67724 (= e!44373 None!132)))

(declare-fun b!67723 () Bool)

(assert (=> b!67723 (= e!44373 (getValueByKey!128 (t!4939 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)))) lt!28519))))

(declare-fun b!67721 () Bool)

(declare-fun e!44372 () Option!134)

(assert (=> b!67721 (= e!44372 (Some!133 (_2!1052 (h!2046 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)))))))))

(declare-fun d!14347 () Bool)

(declare-fun c!9491 () Bool)

(assert (=> d!14347 (= c!9491 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)))) (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))))) lt!28519)))))

(assert (=> d!14347 (= (getValueByKey!128 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))) lt!28519) e!44372)))

(declare-fun b!67722 () Bool)

(assert (=> b!67722 (= e!44372 e!44373)))

(declare-fun c!9492 () Bool)

(assert (=> b!67722 (= c!9492 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)))) (not (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))))) lt!28519))))))

(assert (= (and d!14347 c!9491) b!67721))

(assert (= (and d!14347 (not c!9491)) b!67722))

(assert (= (and b!67722 c!9492) b!67723))

(assert (= (and b!67722 (not c!9492)) b!67724))

(declare-fun m!63007 () Bool)

(assert (=> b!67723 m!63007))

(assert (=> b!66621 d!14347))

(declare-fun b!67728 () Bool)

(declare-fun e!44375 () Option!134)

(assert (=> b!67728 (= e!44375 None!132)))

(declare-fun b!67727 () Bool)

(assert (=> b!67727 (= e!44375 (getValueByKey!128 (t!4939 (toList!705 lt!28760)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!67725 () Bool)

(declare-fun e!44374 () Option!134)

(assert (=> b!67725 (= e!44374 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28760)))))))

(declare-fun c!9493 () Bool)

(declare-fun d!14349 () Bool)

(assert (=> d!14349 (= c!9493 (and ((_ is Cons!1462) (toList!705 lt!28760)) (= (_1!1052 (h!2046 (toList!705 lt!28760))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!14349 (= (getValueByKey!128 (toList!705 lt!28760) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!44374)))

(declare-fun b!67726 () Bool)

(assert (=> b!67726 (= e!44374 e!44375)))

(declare-fun c!9494 () Bool)

(assert (=> b!67726 (= c!9494 (and ((_ is Cons!1462) (toList!705 lt!28760)) (not (= (_1!1052 (h!2046 (toList!705 lt!28760))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!14349 c!9493) b!67725))

(assert (= (and d!14349 (not c!9493)) b!67726))

(assert (= (and b!67726 c!9494) b!67727))

(assert (= (and b!67726 (not c!9494)) b!67728))

(declare-fun m!63009 () Bool)

(assert (=> b!67727 m!63009))

(assert (=> b!66626 d!14349))

(declare-fun d!14351 () Bool)

(declare-fun e!44376 () Bool)

(assert (=> d!14351 e!44376))

(declare-fun res!36532 () Bool)

(assert (=> d!14351 (=> res!36532 e!44376)))

(declare-fun lt!29456 () Bool)

(assert (=> d!14351 (= res!36532 (not lt!29456))))

(declare-fun lt!29455 () Bool)

(assert (=> d!14351 (= lt!29456 lt!29455)))

(declare-fun lt!29453 () Unit!1818)

(declare-fun e!44377 () Unit!1818)

(assert (=> d!14351 (= lt!29453 e!44377)))

(declare-fun c!9495 () Bool)

(assert (=> d!14351 (= c!9495 lt!29455)))

(assert (=> d!14351 (= lt!29455 (containsKey!132 (toList!705 lt!29051) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!14351 (= (contains!705 lt!29051 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) lt!29456)))

(declare-fun b!67729 () Bool)

(declare-fun lt!29454 () Unit!1818)

(assert (=> b!67729 (= e!44377 lt!29454)))

(assert (=> b!67729 (= lt!29454 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!29051) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> b!67729 (isDefined!82 (getValueByKey!128 (toList!705 lt!29051) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67730 () Bool)

(declare-fun Unit!1884 () Unit!1818)

(assert (=> b!67730 (= e!44377 Unit!1884)))

(declare-fun b!67731 () Bool)

(assert (=> b!67731 (= e!44376 (isDefined!82 (getValueByKey!128 (toList!705 lt!29051) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (= (and d!14351 c!9495) b!67729))

(assert (= (and d!14351 (not c!9495)) b!67730))

(assert (= (and d!14351 (not res!36532)) b!67731))

(declare-fun m!63011 () Bool)

(assert (=> d!14351 m!63011))

(declare-fun m!63013 () Bool)

(assert (=> b!67729 m!63013))

(assert (=> b!67729 m!61631))

(assert (=> b!67729 m!61631))

(declare-fun m!63015 () Bool)

(assert (=> b!67729 m!63015))

(assert (=> b!67731 m!61631))

(assert (=> b!67731 m!61631))

(assert (=> b!67731 m!63015))

(assert (=> d!13877 d!14351))

(declare-fun b!67735 () Bool)

(declare-fun e!44379 () Option!134)

(assert (=> b!67735 (= e!44379 None!132)))

(declare-fun b!67734 () Bool)

(assert (=> b!67734 (= e!44379 (getValueByKey!128 (t!4939 lt!29053) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67732 () Bool)

(declare-fun e!44378 () Option!134)

(assert (=> b!67732 (= e!44378 (Some!133 (_2!1052 (h!2046 lt!29053))))))

(declare-fun c!9496 () Bool)

(declare-fun d!14353 () Bool)

(assert (=> d!14353 (= c!9496 (and ((_ is Cons!1462) lt!29053) (= (_1!1052 (h!2046 lt!29053)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!14353 (= (getValueByKey!128 lt!29053 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) e!44378)))

(declare-fun b!67733 () Bool)

(assert (=> b!67733 (= e!44378 e!44379)))

(declare-fun c!9497 () Bool)

(assert (=> b!67733 (= c!9497 (and ((_ is Cons!1462) lt!29053) (not (= (_1!1052 (h!2046 lt!29053)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(assert (= (and d!14353 c!9496) b!67732))

(assert (= (and d!14353 (not c!9496)) b!67733))

(assert (= (and b!67733 c!9497) b!67734))

(assert (= (and b!67733 (not c!9497)) b!67735))

(declare-fun m!63017 () Bool)

(assert (=> b!67734 m!63017))

(assert (=> d!13877 d!14353))

(declare-fun d!14355 () Bool)

(assert (=> d!14355 (= (getValueByKey!128 lt!29053 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun lt!29457 () Unit!1818)

(assert (=> d!14355 (= lt!29457 (choose!375 lt!29053 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun e!44380 () Bool)

(assert (=> d!14355 e!44380))

(declare-fun res!36533 () Bool)

(assert (=> d!14355 (=> (not res!36533) (not e!44380))))

(assert (=> d!14355 (= res!36533 (isStrictlySorted!284 lt!29053))))

(assert (=> d!14355 (= (lemmaContainsTupThenGetReturnValue!48 lt!29053 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) lt!29457)))

(declare-fun b!67736 () Bool)

(declare-fun res!36534 () Bool)

(assert (=> b!67736 (=> (not res!36534) (not e!44380))))

(assert (=> b!67736 (= res!36534 (containsKey!132 lt!29053 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67737 () Bool)

(assert (=> b!67737 (= e!44380 (contains!707 lt!29053 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (= (and d!14355 res!36533) b!67736))

(assert (= (and b!67736 res!36534) b!67737))

(assert (=> d!14355 m!61625))

(declare-fun m!63019 () Bool)

(assert (=> d!14355 m!63019))

(declare-fun m!63021 () Bool)

(assert (=> d!14355 m!63021))

(declare-fun m!63023 () Bool)

(assert (=> b!67736 m!63023))

(declare-fun m!63025 () Bool)

(assert (=> b!67737 m!63025))

(assert (=> d!13877 d!14355))

(declare-fun bm!5695 () Bool)

(declare-fun call!5699 () List!1466)

(declare-fun call!5700 () List!1466)

(assert (=> bm!5695 (= call!5699 call!5700)))

(declare-fun d!14357 () Bool)

(declare-fun e!44382 () Bool)

(assert (=> d!14357 e!44382))

(declare-fun res!36536 () Bool)

(assert (=> d!14357 (=> (not res!36536) (not e!44382))))

(declare-fun lt!29458 () List!1466)

(assert (=> d!14357 (= res!36536 (isStrictlySorted!284 lt!29458))))

(declare-fun e!44383 () List!1466)

(assert (=> d!14357 (= lt!29458 e!44383)))

(declare-fun c!9499 () Bool)

(assert (=> d!14357 (= c!9499 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (bvslt (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!14357 (isStrictlySorted!284 (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!14357 (= (insertStrictlySorted!51 (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) lt!29458)))

(declare-fun b!67738 () Bool)

(declare-fun c!9498 () Bool)

(assert (=> b!67738 (= c!9498 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (bvsgt (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun e!44384 () List!1466)

(declare-fun e!44381 () List!1466)

(assert (=> b!67738 (= e!44384 e!44381)))

(declare-fun b!67739 () Bool)

(declare-fun e!44385 () List!1466)

(declare-fun c!9501 () Bool)

(assert (=> b!67739 (= e!44385 (ite c!9501 (t!4939 (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (ite c!9498 (Cons!1462 (h!2046 (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (t!4939 (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))) Nil!1463)))))

(declare-fun b!67740 () Bool)

(assert (=> b!67740 (= e!44383 e!44384)))

(assert (=> b!67740 (= c!9501 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun bm!5696 () Bool)

(declare-fun call!5698 () List!1466)

(assert (=> bm!5696 (= call!5700 call!5698)))

(declare-fun b!67741 () Bool)

(assert (=> b!67741 (= e!44385 (insertStrictlySorted!51 (t!4939 (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67742 () Bool)

(assert (=> b!67742 (= e!44382 (contains!707 lt!29458 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!67743 () Bool)

(assert (=> b!67743 (= e!44384 call!5700)))

(declare-fun b!67744 () Bool)

(assert (=> b!67744 (= e!44383 call!5698)))

(declare-fun b!67745 () Bool)

(declare-fun res!36535 () Bool)

(assert (=> b!67745 (=> (not res!36535) (not e!44382))))

(assert (=> b!67745 (= res!36535 (containsKey!132 lt!29458 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67746 () Bool)

(assert (=> b!67746 (= e!44381 call!5699)))

(declare-fun b!67747 () Bool)

(assert (=> b!67747 (= e!44381 call!5699)))

(declare-fun bm!5697 () Bool)

(assert (=> bm!5697 (= call!5698 ($colon$colon!62 e!44385 (ite c!9499 (h!2046 (toList!705 (+!87 lt!28402 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(declare-fun c!9500 () Bool)

(assert (=> bm!5697 (= c!9500 c!9499)))

(assert (= (and d!14357 c!9499) b!67744))

(assert (= (and d!14357 (not c!9499)) b!67740))

(assert (= (and b!67740 c!9501) b!67743))

(assert (= (and b!67740 (not c!9501)) b!67738))

(assert (= (and b!67738 c!9498) b!67747))

(assert (= (and b!67738 (not c!9498)) b!67746))

(assert (= (or b!67747 b!67746) bm!5695))

(assert (= (or b!67743 bm!5695) bm!5696))

(assert (= (or b!67744 bm!5696) bm!5697))

(assert (= (and bm!5697 c!9500) b!67741))

(assert (= (and bm!5697 (not c!9500)) b!67739))

(assert (= (and d!14357 res!36536) b!67745))

(assert (= (and b!67745 res!36535) b!67742))

(declare-fun m!63027 () Bool)

(assert (=> d!14357 m!63027))

(declare-fun m!63029 () Bool)

(assert (=> d!14357 m!63029))

(declare-fun m!63031 () Bool)

(assert (=> b!67745 m!63031))

(declare-fun m!63033 () Bool)

(assert (=> b!67742 m!63033))

(declare-fun m!63035 () Bool)

(assert (=> bm!5697 m!63035))

(declare-fun m!63037 () Bool)

(assert (=> b!67741 m!63037))

(assert (=> d!13877 d!14357))

(declare-fun b!67748 () Bool)

(declare-fun e!44397 () Bool)

(declare-fun call!5701 () Bool)

(assert (=> b!67748 (= e!44397 (not call!5701))))

(declare-fun b!67749 () Bool)

(declare-fun c!9503 () Bool)

(assert (=> b!67749 (= c!9503 (and (not (= (bvand lt!28603 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!28603 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44392 () ListLongMap!1379)

(declare-fun e!44386 () ListLongMap!1379)

(assert (=> b!67749 (= e!44392 e!44386)))

(declare-fun b!67750 () Bool)

(declare-fun res!36539 () Bool)

(declare-fun e!44393 () Bool)

(assert (=> b!67750 (=> (not res!36539) (not e!44393))))

(declare-fun e!44396 () Bool)

(assert (=> b!67750 (= res!36539 e!44396)))

(declare-fun res!36537 () Bool)

(assert (=> b!67750 (=> res!36537 e!44396)))

(declare-fun e!44391 () Bool)

(assert (=> b!67750 (= res!36537 (not e!44391))))

(declare-fun res!36542 () Bool)

(assert (=> b!67750 (=> (not res!36542) (not e!44391))))

(assert (=> b!67750 (= res!36542 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67751 () Bool)

(declare-fun e!44389 () ListLongMap!1379)

(assert (=> b!67751 (= e!44389 e!44392)))

(declare-fun c!9505 () Bool)

(assert (=> b!67751 (= c!9505 (and (not (= (bvand lt!28603 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!28603 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67752 () Bool)

(declare-fun e!44398 () Unit!1818)

(declare-fun Unit!1885 () Unit!1818)

(assert (=> b!67752 (= e!44398 Unit!1885)))

(declare-fun b!67753 () Bool)

(declare-fun res!36543 () Bool)

(assert (=> b!67753 (=> (not res!36543) (not e!44393))))

(declare-fun e!44394 () Bool)

(assert (=> b!67753 (= res!36543 e!44394)))

(declare-fun c!9504 () Bool)

(assert (=> b!67753 (= c!9504 (not (= (bvand lt!28603 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5698 () Bool)

(declare-fun call!5707 () Bool)

(declare-fun lt!29478 () ListLongMap!1379)

(assert (=> bm!5698 (= call!5707 (contains!705 lt!29478 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67754 () Bool)

(declare-fun lt!29474 () Unit!1818)

(assert (=> b!67754 (= e!44398 lt!29474)))

(declare-fun lt!29464 () ListLongMap!1379)

(assert (=> b!67754 (= lt!29464 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28603 lt!28400 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29477 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29477 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29476 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29476 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29462 () Unit!1818)

(assert (=> b!67754 (= lt!29462 (addStillContains!48 lt!29464 lt!29477 lt!28400 lt!29476))))

(assert (=> b!67754 (contains!705 (+!87 lt!29464 (tuple2!2083 lt!29477 lt!28400)) lt!29476)))

(declare-fun lt!29469 () Unit!1818)

(assert (=> b!67754 (= lt!29469 lt!29462)))

(declare-fun lt!29461 () ListLongMap!1379)

(assert (=> b!67754 (= lt!29461 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28603 lt!28400 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29465 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29465 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29459 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29459 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29480 () Unit!1818)

(assert (=> b!67754 (= lt!29480 (addApplyDifferent!48 lt!29461 lt!29465 (minValue!2054 newMap!16) lt!29459))))

(assert (=> b!67754 (= (apply!72 (+!87 lt!29461 (tuple2!2083 lt!29465 (minValue!2054 newMap!16))) lt!29459) (apply!72 lt!29461 lt!29459))))

(declare-fun lt!29463 () Unit!1818)

(assert (=> b!67754 (= lt!29463 lt!29480)))

(declare-fun lt!29470 () ListLongMap!1379)

(assert (=> b!67754 (= lt!29470 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28603 lt!28400 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29473 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29473 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29475 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29475 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29467 () Unit!1818)

(assert (=> b!67754 (= lt!29467 (addApplyDifferent!48 lt!29470 lt!29473 lt!28400 lt!29475))))

(assert (=> b!67754 (= (apply!72 (+!87 lt!29470 (tuple2!2083 lt!29473 lt!28400)) lt!29475) (apply!72 lt!29470 lt!29475))))

(declare-fun lt!29479 () Unit!1818)

(assert (=> b!67754 (= lt!29479 lt!29467)))

(declare-fun lt!29468 () ListLongMap!1379)

(assert (=> b!67754 (= lt!29468 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28603 lt!28400 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29471 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29471 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29472 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29472 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67754 (= lt!29474 (addApplyDifferent!48 lt!29468 lt!29471 (minValue!2054 newMap!16) lt!29472))))

(assert (=> b!67754 (= (apply!72 (+!87 lt!29468 (tuple2!2083 lt!29471 (minValue!2054 newMap!16))) lt!29472) (apply!72 lt!29468 lt!29472))))

(declare-fun d!14359 () Bool)

(assert (=> d!14359 e!44393))

(declare-fun res!36545 () Bool)

(assert (=> d!14359 (=> (not res!36545) (not e!44393))))

(assert (=> d!14359 (= res!36545 (or (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))))

(declare-fun lt!29460 () ListLongMap!1379)

(assert (=> d!14359 (= lt!29478 lt!29460)))

(declare-fun lt!29466 () Unit!1818)

(assert (=> d!14359 (= lt!29466 e!44398)))

(declare-fun c!9507 () Bool)

(declare-fun e!44390 () Bool)

(assert (=> d!14359 (= c!9507 e!44390)))

(declare-fun res!36544 () Bool)

(assert (=> d!14359 (=> (not res!36544) (not e!44390))))

(assert (=> d!14359 (= res!36544 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!14359 (= lt!29460 e!44389)))

(declare-fun c!9506 () Bool)

(assert (=> d!14359 (= c!9506 (and (not (= (bvand lt!28603 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!28603 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14359 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!14359 (= (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28603 lt!28400 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29478)))

(declare-fun bm!5699 () Bool)

(declare-fun call!5705 () ListLongMap!1379)

(declare-fun call!5702 () ListLongMap!1379)

(assert (=> bm!5699 (= call!5705 call!5702)))

(declare-fun b!67755 () Bool)

(assert (=> b!67755 (= e!44394 (not call!5707))))

(declare-fun b!67756 () Bool)

(assert (=> b!67756 (= e!44392 call!5705)))

(declare-fun b!67757 () Bool)

(declare-fun e!44388 () Bool)

(assert (=> b!67757 (= e!44388 (= (apply!72 lt!29478 #b0000000000000000000000000000000000000000000000000000000000000000) lt!28400))))

(declare-fun b!67758 () Bool)

(assert (=> b!67758 (= e!44393 e!44397)))

(declare-fun c!9502 () Bool)

(assert (=> b!67758 (= c!9502 (not (= (bvand lt!28603 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67759 () Bool)

(declare-fun e!44395 () Bool)

(assert (=> b!67759 (= e!44395 (= (apply!72 lt!29478 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67759 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 (_values!2129 newMap!16))))))

(assert (=> b!67759 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67760 () Bool)

(assert (=> b!67760 (= e!44389 (+!87 call!5702 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun bm!5700 () Bool)

(declare-fun call!5703 () ListLongMap!1379)

(declare-fun call!5706 () ListLongMap!1379)

(assert (=> bm!5700 (= call!5703 call!5706)))

(declare-fun bm!5701 () Bool)

(declare-fun call!5704 () ListLongMap!1379)

(assert (=> bm!5701 (= call!5704 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28603 lt!28400 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!67761 () Bool)

(assert (=> b!67761 (= e!44386 call!5703)))

(declare-fun b!67762 () Bool)

(declare-fun e!44387 () Bool)

(assert (=> b!67762 (= e!44387 (= (apply!72 lt!29478 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun bm!5702 () Bool)

(assert (=> bm!5702 (= call!5706 call!5704)))

(declare-fun b!67763 () Bool)

(assert (=> b!67763 (= e!44391 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67764 () Bool)

(assert (=> b!67764 (= e!44396 e!44395)))

(declare-fun res!36540 () Bool)

(assert (=> b!67764 (=> (not res!36540) (not e!44395))))

(assert (=> b!67764 (= res!36540 (contains!705 lt!29478 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67764 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!67765 () Bool)

(assert (=> b!67765 (= e!44397 e!44387)))

(declare-fun res!36538 () Bool)

(assert (=> b!67765 (= res!36538 call!5701)))

(assert (=> b!67765 (=> (not res!36538) (not e!44387))))

(declare-fun bm!5703 () Bool)

(assert (=> bm!5703 (= call!5702 (+!87 (ite c!9506 call!5704 (ite c!9505 call!5706 call!5703)) (ite (or c!9506 c!9505) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!67766 () Bool)

(assert (=> b!67766 (= e!44394 e!44388)))

(declare-fun res!36541 () Bool)

(assert (=> b!67766 (= res!36541 call!5707)))

(assert (=> b!67766 (=> (not res!36541) (not e!44388))))

(declare-fun b!67767 () Bool)

(assert (=> b!67767 (= e!44386 call!5705)))

(declare-fun b!67768 () Bool)

(assert (=> b!67768 (= e!44390 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5704 () Bool)

(assert (=> bm!5704 (= call!5701 (contains!705 lt!29478 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14359 c!9506) b!67760))

(assert (= (and d!14359 (not c!9506)) b!67751))

(assert (= (and b!67751 c!9505) b!67756))

(assert (= (and b!67751 (not c!9505)) b!67749))

(assert (= (and b!67749 c!9503) b!67767))

(assert (= (and b!67749 (not c!9503)) b!67761))

(assert (= (or b!67767 b!67761) bm!5700))

(assert (= (or b!67756 bm!5700) bm!5702))

(assert (= (or b!67756 b!67767) bm!5699))

(assert (= (or b!67760 bm!5702) bm!5701))

(assert (= (or b!67760 bm!5699) bm!5703))

(assert (= (and d!14359 res!36544) b!67768))

(assert (= (and d!14359 c!9507) b!67754))

(assert (= (and d!14359 (not c!9507)) b!67752))

(assert (= (and d!14359 res!36545) b!67750))

(assert (= (and b!67750 res!36542) b!67763))

(assert (= (and b!67750 (not res!36537)) b!67764))

(assert (= (and b!67764 res!36540) b!67759))

(assert (= (and b!67750 res!36539) b!67753))

(assert (= (and b!67753 c!9504) b!67766))

(assert (= (and b!67753 (not c!9504)) b!67755))

(assert (= (and b!67766 res!36541) b!67757))

(assert (= (or b!67766 b!67755) bm!5698))

(assert (= (and b!67753 res!36543) b!67758))

(assert (= (and b!67758 c!9502) b!67765))

(assert (= (and b!67758 (not c!9502)) b!67748))

(assert (= (and b!67765 res!36538) b!67762))

(assert (= (or b!67765 b!67748) bm!5704))

(declare-fun b_lambda!3009 () Bool)

(assert (=> (not b_lambda!3009) (not b!67759)))

(assert (=> b!67759 t!4952))

(declare-fun b_and!4161 () Bool)

(assert (= b_and!4157 (and (=> t!4952 result!2587) b_and!4161)))

(assert (=> b!67759 t!4954))

(declare-fun b_and!4163 () Bool)

(assert (= b_and!4159 (and (=> t!4954 result!2589) b_and!4163)))

(declare-fun m!63039 () Bool)

(assert (=> b!67760 m!63039))

(assert (=> d!14359 m!60845))

(declare-fun m!63041 () Bool)

(assert (=> bm!5701 m!63041))

(declare-fun m!63043 () Bool)

(assert (=> b!67762 m!63043))

(assert (=> b!67763 m!60839))

(assert (=> b!67763 m!60839))

(assert (=> b!67763 m!60841))

(declare-fun m!63045 () Bool)

(assert (=> b!67754 m!63045))

(declare-fun m!63047 () Bool)

(assert (=> b!67754 m!63047))

(declare-fun m!63049 () Bool)

(assert (=> b!67754 m!63049))

(declare-fun m!63051 () Bool)

(assert (=> b!67754 m!63051))

(assert (=> b!67754 m!63045))

(declare-fun m!63053 () Bool)

(assert (=> b!67754 m!63053))

(declare-fun m!63055 () Bool)

(assert (=> b!67754 m!63055))

(assert (=> b!67754 m!63049))

(declare-fun m!63057 () Bool)

(assert (=> b!67754 m!63057))

(declare-fun m!63059 () Bool)

(assert (=> b!67754 m!63059))

(declare-fun m!63061 () Bool)

(assert (=> b!67754 m!63061))

(declare-fun m!63063 () Bool)

(assert (=> b!67754 m!63063))

(declare-fun m!63065 () Bool)

(assert (=> b!67754 m!63065))

(assert (=> b!67754 m!63041))

(declare-fun m!63067 () Bool)

(assert (=> b!67754 m!63067))

(assert (=> b!67754 m!63063))

(declare-fun m!63069 () Bool)

(assert (=> b!67754 m!63069))

(assert (=> b!67754 m!60839))

(declare-fun m!63071 () Bool)

(assert (=> b!67754 m!63071))

(assert (=> b!67754 m!63053))

(declare-fun m!63073 () Bool)

(assert (=> b!67754 m!63073))

(declare-fun m!63075 () Bool)

(assert (=> bm!5703 m!63075))

(declare-fun m!63077 () Bool)

(assert (=> bm!5704 m!63077))

(assert (=> b!67759 m!60885))

(assert (=> b!67759 m!60839))

(assert (=> b!67759 m!60839))

(declare-fun m!63079 () Bool)

(assert (=> b!67759 m!63079))

(assert (=> b!67759 m!60889))

(assert (=> b!67759 m!60885))

(assert (=> b!67759 m!60891))

(assert (=> b!67759 m!60889))

(declare-fun m!63081 () Bool)

(assert (=> bm!5698 m!63081))

(assert (=> b!67764 m!60839))

(assert (=> b!67764 m!60839))

(declare-fun m!63083 () Bool)

(assert (=> b!67764 m!63083))

(declare-fun m!63085 () Bool)

(assert (=> b!67757 m!63085))

(assert (=> b!67768 m!60839))

(assert (=> b!67768 m!60839))

(assert (=> b!67768 m!60841))

(assert (=> d!13839 d!14359))

(assert (=> d!13839 d!13687))

(declare-fun d!14361 () Bool)

(declare-fun e!44399 () Bool)

(assert (=> d!14361 e!44399))

(declare-fun res!36546 () Bool)

(assert (=> d!14361 (=> (not res!36546) (not e!44399))))

(declare-fun lt!29482 () ListLongMap!1379)

(assert (=> d!14361 (= res!36546 (contains!705 lt!29482 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400))))))

(declare-fun lt!29484 () List!1466)

(assert (=> d!14361 (= lt!29482 (ListLongMap!1380 lt!29484))))

(declare-fun lt!29481 () Unit!1818)

(declare-fun lt!29483 () Unit!1818)

(assert (=> d!14361 (= lt!29481 lt!29483)))

(assert (=> d!14361 (= (getValueByKey!128 lt!29484 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400))) (Some!133 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400))))))

(assert (=> d!14361 (= lt!29483 (lemmaContainsTupThenGetReturnValue!48 lt!29484 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400))))))

(assert (=> d!14361 (= lt!29484 (insertStrictlySorted!51 (toList!705 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400))))))

(assert (=> d!14361 (= (+!87 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400)) lt!29482)))

(declare-fun b!67769 () Bool)

(declare-fun res!36547 () Bool)

(assert (=> b!67769 (=> (not res!36547) (not e!44399))))

(assert (=> b!67769 (= res!36547 (= (getValueByKey!128 (toList!705 lt!29482) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400))) (Some!133 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400)))))))

(declare-fun b!67770 () Bool)

(assert (=> b!67770 (= e!44399 (contains!707 (toList!705 lt!29482) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400)))))

(assert (= (and d!14361 res!36546) b!67769))

(assert (= (and b!67769 res!36547) b!67770))

(declare-fun m!63087 () Bool)

(assert (=> d!14361 m!63087))

(declare-fun m!63089 () Bool)

(assert (=> d!14361 m!63089))

(declare-fun m!63091 () Bool)

(assert (=> d!14361 m!63091))

(declare-fun m!63093 () Bool)

(assert (=> d!14361 m!63093))

(declare-fun m!63095 () Bool)

(assert (=> b!67769 m!63095))

(declare-fun m!63097 () Bool)

(assert (=> b!67770 m!63097))

(assert (=> d!13839 d!14361))

(assert (=> d!13839 d!13991))

(declare-fun d!14363 () Bool)

(assert (=> d!14363 (= (+!87 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28400)) (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) lt!28603 lt!28400 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(assert (=> d!14363 true))

(declare-fun _$7!53 () Unit!1818)

(assert (=> d!14363 (= (choose!383 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) lt!28603 (zeroValue!2054 newMap!16) lt!28400 (minValue!2054 newMap!16) (defaultEntry!2146 newMap!16)) _$7!53)))

(declare-fun bs!2907 () Bool)

(assert (= bs!2907 d!14363))

(assert (=> bs!2907 m!60697))

(assert (=> bs!2907 m!60697))

(assert (=> bs!2907 m!61457))

(assert (=> bs!2907 m!61455))

(assert (=> d!13839 d!14363))

(declare-fun d!14365 () Bool)

(assert (=> d!14365 (= (get!1123 (getValueByKey!128 (toList!705 lt!28670) lt!28668)) (v!2475 (getValueByKey!128 (toList!705 lt!28670) lt!28668)))))

(assert (=> d!13745 d!14365))

(declare-fun b!67774 () Bool)

(declare-fun e!44401 () Option!134)

(assert (=> b!67774 (= e!44401 None!132)))

(declare-fun b!67773 () Bool)

(assert (=> b!67773 (= e!44401 (getValueByKey!128 (t!4939 (toList!705 lt!28670)) lt!28668))))

(declare-fun b!67771 () Bool)

(declare-fun e!44400 () Option!134)

(assert (=> b!67771 (= e!44400 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28670)))))))

(declare-fun d!14367 () Bool)

(declare-fun c!9508 () Bool)

(assert (=> d!14367 (= c!9508 (and ((_ is Cons!1462) (toList!705 lt!28670)) (= (_1!1052 (h!2046 (toList!705 lt!28670))) lt!28668)))))

(assert (=> d!14367 (= (getValueByKey!128 (toList!705 lt!28670) lt!28668) e!44400)))

(declare-fun b!67772 () Bool)

(assert (=> b!67772 (= e!44400 e!44401)))

(declare-fun c!9509 () Bool)

(assert (=> b!67772 (= c!9509 (and ((_ is Cons!1462) (toList!705 lt!28670)) (not (= (_1!1052 (h!2046 (toList!705 lt!28670))) lt!28668))))))

(assert (= (and d!14367 c!9508) b!67771))

(assert (= (and d!14367 (not c!9508)) b!67772))

(assert (= (and b!67772 c!9509) b!67773))

(assert (= (and b!67772 (not c!9509)) b!67774))

(declare-fun m!63099 () Bool)

(assert (=> b!67773 m!63099))

(assert (=> d!13745 d!14367))

(assert (=> d!13807 d!13669))

(declare-fun d!14369 () Bool)

(assert (=> d!14369 (= (isDefined!82 (getValueByKey!128 (toList!705 lt!28513) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!313 (getValueByKey!128 (toList!705 lt!28513) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2908 () Bool)

(assert (= bs!2908 d!14369))

(assert (=> bs!2908 m!61105))

(declare-fun m!63101 () Bool)

(assert (=> bs!2908 m!63101))

(assert (=> b!66693 d!14369))

(declare-fun b!67778 () Bool)

(declare-fun e!44403 () Option!134)

(assert (=> b!67778 (= e!44403 None!132)))

(declare-fun b!67777 () Bool)

(assert (=> b!67777 (= e!44403 (getValueByKey!128 (t!4939 (toList!705 lt!28513)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67775 () Bool)

(declare-fun e!44402 () Option!134)

(assert (=> b!67775 (= e!44402 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28513)))))))

(declare-fun d!14371 () Bool)

(declare-fun c!9510 () Bool)

(assert (=> d!14371 (= c!9510 (and ((_ is Cons!1462) (toList!705 lt!28513)) (= (_1!1052 (h!2046 (toList!705 lt!28513))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14371 (= (getValueByKey!128 (toList!705 lt!28513) #b0000000000000000000000000000000000000000000000000000000000000000) e!44402)))

(declare-fun b!67776 () Bool)

(assert (=> b!67776 (= e!44402 e!44403)))

(declare-fun c!9511 () Bool)

(assert (=> b!67776 (= c!9511 (and ((_ is Cons!1462) (toList!705 lt!28513)) (not (= (_1!1052 (h!2046 (toList!705 lt!28513))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14371 c!9510) b!67775))

(assert (= (and d!14371 (not c!9510)) b!67776))

(assert (= (and b!67776 c!9511) b!67777))

(assert (= (and b!67776 (not c!9511)) b!67778))

(declare-fun m!63103 () Bool)

(assert (=> b!67777 m!63103))

(assert (=> b!66693 d!14371))

(assert (=> b!66868 d!13959))

(declare-fun b!67779 () Bool)

(declare-fun e!44408 () Bool)

(declare-fun lt!29485 () ListLongMap!1379)

(assert (=> b!67779 (= e!44408 (= lt!29485 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun bm!5705 () Bool)

(declare-fun call!5708 () ListLongMap!1379)

(assert (=> bm!5705 (= call!5708 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun b!67780 () Bool)

(declare-fun e!44407 () Bool)

(assert (=> b!67780 (= e!44407 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!67780 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!67781 () Bool)

(declare-fun lt!29490 () Unit!1818)

(declare-fun lt!29486 () Unit!1818)

(assert (=> b!67781 (= lt!29490 lt!29486)))

(declare-fun lt!29487 () ListLongMap!1379)

(declare-fun lt!29489 () (_ BitVec 64))

(declare-fun lt!29491 () (_ BitVec 64))

(declare-fun lt!29488 () V!2913)

(assert (=> b!67781 (not (contains!705 (+!87 lt!29487 (tuple2!2083 lt!29489 lt!29488)) lt!29491))))

(assert (=> b!67781 (= lt!29486 (addStillNotContains!22 lt!29487 lt!29489 lt!29488 lt!29491))))

(assert (=> b!67781 (= lt!29491 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67781 (= lt!29488 (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67781 (= lt!29489 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!67781 (= lt!29487 call!5708)))

(declare-fun e!44410 () ListLongMap!1379)

(assert (=> b!67781 (= e!44410 (+!87 call!5708 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67782 () Bool)

(declare-fun e!44404 () ListLongMap!1379)

(assert (=> b!67782 (= e!44404 e!44410)))

(declare-fun c!9512 () Bool)

(assert (=> b!67782 (= c!9512 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!67783 () Bool)

(assert (=> b!67783 (= e!44404 (ListLongMap!1380 Nil!1463))))

(declare-fun b!67784 () Bool)

(assert (=> b!67784 (= e!44410 call!5708)))

(declare-fun b!67785 () Bool)

(assert (=> b!67785 (= e!44408 (isEmpty!311 lt!29485))))

(declare-fun b!67786 () Bool)

(declare-fun res!36551 () Bool)

(declare-fun e!44409 () Bool)

(assert (=> b!67786 (=> (not res!36551) (not e!44409))))

(assert (=> b!67786 (= res!36551 (not (contains!705 lt!29485 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67788 () Bool)

(declare-fun e!44406 () Bool)

(assert (=> b!67788 (= e!44406 e!44408)))

(declare-fun c!9514 () Bool)

(assert (=> b!67788 (= c!9514 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!67789 () Bool)

(declare-fun e!44405 () Bool)

(assert (=> b!67789 (= e!44406 e!44405)))

(assert (=> b!67789 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun res!36550 () Bool)

(assert (=> b!67789 (= res!36550 (contains!705 lt!29485 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!67789 (=> (not res!36550) (not e!44405))))

(declare-fun b!67790 () Bool)

(assert (=> b!67790 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> b!67790 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2059 (_values!2129 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> b!67790 (= e!44405 (= (apply!72 lt!29485 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1119 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!14373 () Bool)

(assert (=> d!14373 e!44409))

(declare-fun res!36549 () Bool)

(assert (=> d!14373 (=> (not res!36549) (not e!44409))))

(assert (=> d!14373 (= res!36549 (not (contains!705 lt!29485 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14373 (= lt!29485 e!44404)))

(declare-fun c!9513 () Bool)

(assert (=> d!14373 (= c!9513 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> d!14373 (validMask!0 (mask!6080 (v!2469 (underlying!244 thiss!992))))))

(assert (=> d!14373 (= (getCurrentListMapNoExtraKeys!51 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (_values!2129 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992))) (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) (zeroValue!2054 (v!2469 (underlying!244 thiss!992))) (minValue!2054 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992)))) lt!29485)))

(declare-fun b!67787 () Bool)

(assert (=> b!67787 (= e!44409 e!44406)))

(declare-fun c!9515 () Bool)

(assert (=> b!67787 (= c!9515 e!44407)))

(declare-fun res!36548 () Bool)

(assert (=> b!67787 (=> (not res!36548) (not e!44407))))

(assert (=> b!67787 (= res!36548 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!14373 c!9513) b!67783))

(assert (= (and d!14373 (not c!9513)) b!67782))

(assert (= (and b!67782 c!9512) b!67781))

(assert (= (and b!67782 (not c!9512)) b!67784))

(assert (= (or b!67781 b!67784) bm!5705))

(assert (= (and d!14373 res!36549) b!67786))

(assert (= (and b!67786 res!36551) b!67787))

(assert (= (and b!67787 res!36548) b!67780))

(assert (= (and b!67787 c!9515) b!67789))

(assert (= (and b!67787 (not c!9515)) b!67788))

(assert (= (and b!67789 res!36550) b!67790))

(assert (= (and b!67788 c!9514) b!67779))

(assert (= (and b!67788 (not c!9514)) b!67785))

(declare-fun b_lambda!3011 () Bool)

(assert (=> (not b_lambda!3011) (not b!67781)))

(assert (=> b!67781 t!4936))

(declare-fun b_and!4165 () Bool)

(assert (= b_and!4161 (and (=> t!4936 result!2567) b_and!4165)))

(assert (=> b!67781 t!4938))

(declare-fun b_and!4167 () Bool)

(assert (= b_and!4163 (and (=> t!4938 result!2571) b_and!4167)))

(declare-fun b_lambda!3013 () Bool)

(assert (=> (not b_lambda!3013) (not b!67790)))

(assert (=> b!67790 t!4936))

(declare-fun b_and!4169 () Bool)

(assert (= b_and!4165 (and (=> t!4936 result!2567) b_and!4169)))

(assert (=> b!67790 t!4938))

(declare-fun b_and!4171 () Bool)

(assert (= b_and!4167 (and (=> t!4938 result!2571) b_and!4171)))

(declare-fun m!63105 () Bool)

(assert (=> d!14373 m!63105))

(assert (=> d!14373 m!60447))

(declare-fun m!63107 () Bool)

(assert (=> b!67782 m!63107))

(assert (=> b!67782 m!63107))

(declare-fun m!63109 () Bool)

(assert (=> b!67782 m!63109))

(declare-fun m!63111 () Bool)

(assert (=> b!67785 m!63111))

(assert (=> b!67780 m!63107))

(assert (=> b!67780 m!63107))

(assert (=> b!67780 m!63109))

(declare-fun m!63113 () Bool)

(assert (=> b!67779 m!63113))

(declare-fun m!63115 () Bool)

(assert (=> b!67781 m!63115))

(declare-fun m!63117 () Bool)

(assert (=> b!67781 m!63117))

(declare-fun m!63119 () Bool)

(assert (=> b!67781 m!63119))

(assert (=> b!67781 m!60465))

(declare-fun m!63121 () Bool)

(assert (=> b!67781 m!63121))

(declare-fun m!63123 () Bool)

(assert (=> b!67781 m!63123))

(assert (=> b!67781 m!63115))

(assert (=> b!67781 m!63119))

(assert (=> b!67781 m!60465))

(declare-fun m!63125 () Bool)

(assert (=> b!67781 m!63125))

(assert (=> b!67781 m!63107))

(declare-fun m!63127 () Bool)

(assert (=> b!67786 m!63127))

(assert (=> bm!5705 m!63113))

(assert (=> b!67789 m!63107))

(assert (=> b!67789 m!63107))

(declare-fun m!63129 () Bool)

(assert (=> b!67789 m!63129))

(assert (=> b!67790 m!63119))

(assert (=> b!67790 m!60465))

(assert (=> b!67790 m!63121))

(assert (=> b!67790 m!63119))

(assert (=> b!67790 m!63107))

(declare-fun m!63131 () Bool)

(assert (=> b!67790 m!63131))

(assert (=> b!67790 m!60465))

(assert (=> b!67790 m!63107))

(assert (=> bm!5558 d!14373))

(declare-fun d!14375 () Bool)

(declare-fun res!36552 () Bool)

(declare-fun e!44411 () Bool)

(assert (=> d!14375 (=> res!36552 e!44411)))

(assert (=> d!14375 (= res!36552 (and ((_ is Cons!1462) lt!28527) (= (_1!1052 (h!2046 lt!28527)) (_1!1052 lt!28403))))))

(assert (=> d!14375 (= (containsKey!132 lt!28527 (_1!1052 lt!28403)) e!44411)))

(declare-fun b!67791 () Bool)

(declare-fun e!44412 () Bool)

(assert (=> b!67791 (= e!44411 e!44412)))

(declare-fun res!36553 () Bool)

(assert (=> b!67791 (=> (not res!36553) (not e!44412))))

(assert (=> b!67791 (= res!36553 (and (or (not ((_ is Cons!1462) lt!28527)) (bvsle (_1!1052 (h!2046 lt!28527)) (_1!1052 lt!28403))) ((_ is Cons!1462) lt!28527) (bvslt (_1!1052 (h!2046 lt!28527)) (_1!1052 lt!28403))))))

(declare-fun b!67792 () Bool)

(assert (=> b!67792 (= e!44412 (containsKey!132 (t!4939 lt!28527) (_1!1052 lt!28403)))))

(assert (= (and d!14375 (not res!36552)) b!67791))

(assert (= (and b!67791 res!36553) b!67792))

(declare-fun m!63133 () Bool)

(assert (=> b!67792 m!63133))

(assert (=> b!66932 d!14375))

(declare-fun d!14377 () Bool)

(declare-fun res!36554 () Bool)

(declare-fun e!44413 () Bool)

(assert (=> d!14377 (=> res!36554 e!44413)))

(assert (=> d!14377 (= res!36554 (and ((_ is Cons!1462) lt!28498) (= (_1!1052 (h!2046 lt!28498)) (_1!1052 lt!28408))))))

(assert (=> d!14377 (= (containsKey!132 lt!28498 (_1!1052 lt!28408)) e!44413)))

(declare-fun b!67793 () Bool)

(declare-fun e!44414 () Bool)

(assert (=> b!67793 (= e!44413 e!44414)))

(declare-fun res!36555 () Bool)

(assert (=> b!67793 (=> (not res!36555) (not e!44414))))

(assert (=> b!67793 (= res!36555 (and (or (not ((_ is Cons!1462) lt!28498)) (bvsle (_1!1052 (h!2046 lt!28498)) (_1!1052 lt!28408))) ((_ is Cons!1462) lt!28498) (bvslt (_1!1052 (h!2046 lt!28498)) (_1!1052 lt!28408))))))

(declare-fun b!67794 () Bool)

(assert (=> b!67794 (= e!44414 (containsKey!132 (t!4939 lt!28498) (_1!1052 lt!28408)))))

(assert (= (and d!14377 (not res!36554)) b!67793))

(assert (= (and b!67793 res!36555) b!67794))

(declare-fun m!63135 () Bool)

(assert (=> b!67794 m!63135))

(assert (=> b!66719 d!14377))

(declare-fun d!14379 () Bool)

(declare-fun e!44415 () Bool)

(assert (=> d!14379 e!44415))

(declare-fun res!36556 () Bool)

(assert (=> d!14379 (=> res!36556 e!44415)))

(declare-fun lt!29495 () Bool)

(assert (=> d!14379 (= res!36556 (not lt!29495))))

(declare-fun lt!29494 () Bool)

(assert (=> d!14379 (= lt!29495 lt!29494)))

(declare-fun lt!29492 () Unit!1818)

(declare-fun e!44416 () Unit!1818)

(assert (=> d!14379 (= lt!29492 e!44416)))

(declare-fun c!9516 () Bool)

(assert (=> d!14379 (= c!9516 lt!29494)))

(assert (=> d!14379 (= lt!29494 (containsKey!132 (toList!705 lt!28724) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14379 (= (contains!705 lt!28724 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) lt!29495)))

(declare-fun b!67795 () Bool)

(declare-fun lt!29493 () Unit!1818)

(assert (=> b!67795 (= e!44416 lt!29493)))

(assert (=> b!67795 (= lt!29493 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28724) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67795 (isDefined!82 (getValueByKey!128 (toList!705 lt!28724) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67796 () Bool)

(declare-fun Unit!1886 () Unit!1818)

(assert (=> b!67796 (= e!44416 Unit!1886)))

(declare-fun b!67797 () Bool)

(assert (=> b!67797 (= e!44415 (isDefined!82 (getValueByKey!128 (toList!705 lt!28724) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14379 c!9516) b!67795))

(assert (= (and d!14379 (not c!9516)) b!67796))

(assert (= (and d!14379 (not res!36556)) b!67797))

(assert (=> d!14379 m!60839))

(declare-fun m!63137 () Bool)

(assert (=> d!14379 m!63137))

(assert (=> b!67795 m!60839))

(declare-fun m!63139 () Bool)

(assert (=> b!67795 m!63139))

(assert (=> b!67795 m!60839))

(assert (=> b!67795 m!62833))

(assert (=> b!67795 m!62833))

(declare-fun m!63141 () Bool)

(assert (=> b!67795 m!63141))

(assert (=> b!67797 m!60839))

(assert (=> b!67797 m!62833))

(assert (=> b!67797 m!62833))

(assert (=> b!67797 m!63141))

(assert (=> b!66573 d!14379))

(declare-fun b!67801 () Bool)

(declare-fun e!44417 () Bool)

(assert (=> b!67801 (= e!44417 (and (bvsge (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!384 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!14381 () Bool)

(declare-fun res!36559 () Bool)

(assert (=> d!14381 (=> (not res!36559) (not e!44417))))

(assert (=> d!14381 (= res!36559 (validMask!0 (mask!6080 (v!2469 (underlying!244 thiss!992)))))))

(assert (=> d!14381 (= (simpleValid!48 (v!2469 (underlying!244 thiss!992))) e!44417)))

(declare-fun b!67798 () Bool)

(declare-fun res!36557 () Bool)

(assert (=> b!67798 (=> (not res!36557) (not e!44417))))

(assert (=> b!67798 (= res!36557 (and (= (size!2059 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000001)) (= (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (size!2059 (_values!2129 (v!2469 (underlying!244 thiss!992))))) (bvsge (_size!384 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!384 (v!2469 (underlying!244 thiss!992))) (bvadd (mask!6080 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!67800 () Bool)

(declare-fun res!36560 () Bool)

(assert (=> b!67800 (=> (not res!36560) (not e!44417))))

(assert (=> b!67800 (= res!36560 (= (size!2064 (v!2469 (underlying!244 thiss!992))) (bvadd (_size!384 (v!2469 (underlying!244 thiss!992))) (bvsdiv (bvadd (extraKeys!2017 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!67799 () Bool)

(declare-fun res!36558 () Bool)

(assert (=> b!67799 (=> (not res!36558) (not e!44417))))

(assert (=> b!67799 (= res!36558 (bvsge (size!2064 (v!2469 (underlying!244 thiss!992))) (_size!384 (v!2469 (underlying!244 thiss!992)))))))

(assert (= (and d!14381 res!36559) b!67798))

(assert (= (and b!67798 res!36557) b!67799))

(assert (= (and b!67799 res!36558) b!67800))

(assert (= (and b!67800 res!36560) b!67801))

(assert (=> d!14381 m!60447))

(declare-fun m!63143 () Bool)

(assert (=> b!67800 m!63143))

(assert (=> b!67799 m!63143))

(assert (=> d!13805 d!14381))

(declare-fun b!67802 () Bool)

(declare-fun e!44419 () (_ BitVec 32))

(declare-fun call!5709 () (_ BitVec 32))

(assert (=> b!67802 (= e!44419 (bvadd #b00000000000000000000000000000001 call!5709))))

(declare-fun bm!5706 () Bool)

(assert (=> bm!5706 (= call!5709 (arrayCountValidKeys!0 (_keys!3785 (_2!1051 lt!28606)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (_2!1051 lt!28606)))))))

(declare-fun d!14383 () Bool)

(declare-fun lt!29496 () (_ BitVec 32))

(assert (=> d!14383 (and (bvsge lt!29496 #b00000000000000000000000000000000) (bvsle lt!29496 (bvsub (size!2058 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000)))))

(declare-fun e!44418 () (_ BitVec 32))

(assert (=> d!14383 (= lt!29496 e!44418)))

(declare-fun c!9517 () Bool)

(assert (=> d!14383 (= c!9517 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28606)))))))

(assert (=> d!14383 (and (bvsle #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28606)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2058 (_keys!3785 (_2!1051 lt!28606))) (size!2058 (_keys!3785 (_2!1051 lt!28606)))))))

(assert (=> d!14383 (= (arrayCountValidKeys!0 (_keys!3785 (_2!1051 lt!28606)) #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28606)))) lt!29496)))

(declare-fun b!67803 () Bool)

(assert (=> b!67803 (= e!44419 call!5709)))

(declare-fun b!67804 () Bool)

(assert (=> b!67804 (= e!44418 e!44419)))

(declare-fun c!9518 () Bool)

(assert (=> b!67804 (= c!9518 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000)))))

(declare-fun b!67805 () Bool)

(assert (=> b!67805 (= e!44418 #b00000000000000000000000000000000)))

(assert (= (and d!14383 c!9517) b!67805))

(assert (= (and d!14383 (not c!9517)) b!67804))

(assert (= (and b!67804 c!9518) b!67802))

(assert (= (and b!67804 (not c!9518)) b!67803))

(assert (= (or b!67802 b!67803) bm!5706))

(declare-fun m!63145 () Bool)

(assert (=> bm!5706 m!63145))

(assert (=> b!67804 m!62657))

(assert (=> b!67804 m!62657))

(assert (=> b!67804 m!62659))

(assert (=> b!66610 d!14383))

(declare-fun d!14385 () Bool)

(assert (=> d!14385 (= (isDefined!82 (getValueByKey!128 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!313 (getValueByKey!128 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2909 () Bool)

(assert (= bs!2909 d!14385))

(assert (=> bs!2909 m!61385))

(declare-fun m!63147 () Bool)

(assert (=> bs!2909 m!63147))

(assert (=> b!66971 d!14385))

(declare-fun b!67809 () Bool)

(declare-fun e!44421 () Option!134)

(assert (=> b!67809 (= e!44421 None!132)))

(declare-fun b!67808 () Bool)

(assert (=> b!67808 (= e!44421 (getValueByKey!128 (t!4939 (toList!705 lt!28687)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67806 () Bool)

(declare-fun e!44420 () Option!134)

(assert (=> b!67806 (= e!44420 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28687)))))))

(declare-fun c!9519 () Bool)

(declare-fun d!14387 () Bool)

(assert (=> d!14387 (= c!9519 (and ((_ is Cons!1462) (toList!705 lt!28687)) (= (_1!1052 (h!2046 (toList!705 lt!28687))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14387 (= (getValueByKey!128 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44420)))

(declare-fun b!67807 () Bool)

(assert (=> b!67807 (= e!44420 e!44421)))

(declare-fun c!9520 () Bool)

(assert (=> b!67807 (= c!9520 (and ((_ is Cons!1462) (toList!705 lt!28687)) (not (= (_1!1052 (h!2046 (toList!705 lt!28687))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!14387 c!9519) b!67806))

(assert (= (and d!14387 (not c!9519)) b!67807))

(assert (= (and b!67807 c!9520) b!67808))

(assert (= (and b!67807 (not c!9520)) b!67809))

(assert (=> b!67808 m!60627))

(declare-fun m!63149 () Bool)

(assert (=> b!67808 m!63149))

(assert (=> b!66971 d!14387))

(declare-fun b!67813 () Bool)

(declare-fun e!44423 () Option!134)

(assert (=> b!67813 (= e!44423 None!132)))

(declare-fun b!67812 () Bool)

(assert (=> b!67812 (= e!44423 (getValueByKey!128 (t!4939 (toList!705 lt!29051)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun b!67810 () Bool)

(declare-fun e!44422 () Option!134)

(assert (=> b!67810 (= e!44422 (Some!133 (_2!1052 (h!2046 (toList!705 lt!29051)))))))

(declare-fun c!9521 () Bool)

(declare-fun d!14389 () Bool)

(assert (=> d!14389 (= c!9521 (and ((_ is Cons!1462) (toList!705 lt!29051)) (= (_1!1052 (h!2046 (toList!705 lt!29051))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(assert (=> d!14389 (= (getValueByKey!128 (toList!705 lt!29051) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) e!44422)))

(declare-fun b!67811 () Bool)

(assert (=> b!67811 (= e!44422 e!44423)))

(declare-fun c!9522 () Bool)

(assert (=> b!67811 (= c!9522 (and ((_ is Cons!1462) (toList!705 lt!29051)) (not (= (_1!1052 (h!2046 (toList!705 lt!29051))) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))))

(assert (= (and d!14389 c!9521) b!67810))

(assert (= (and d!14389 (not c!9521)) b!67811))

(assert (= (and b!67811 c!9522) b!67812))

(assert (= (and b!67811 (not c!9522)) b!67813))

(declare-fun m!63151 () Bool)

(assert (=> b!67812 m!63151))

(assert (=> b!67006 d!14389))

(assert (=> b!66843 d!13959))

(assert (=> d!13791 d!13991))

(declare-fun d!14391 () Bool)

(declare-fun lt!29497 () Bool)

(assert (=> d!14391 (= lt!29497 (select (content!71 lt!28494) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(declare-fun e!44424 () Bool)

(assert (=> d!14391 (= lt!29497 e!44424)))

(declare-fun res!36562 () Bool)

(assert (=> d!14391 (=> (not res!36562) (not e!44424))))

(assert (=> d!14391 (= res!36562 ((_ is Cons!1462) lt!28494))))

(assert (=> d!14391 (= (contains!707 lt!28494 (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))) lt!29497)))

(declare-fun b!67814 () Bool)

(declare-fun e!44425 () Bool)

(assert (=> b!67814 (= e!44424 e!44425)))

(declare-fun res!36561 () Bool)

(assert (=> b!67814 (=> res!36561 e!44425)))

(assert (=> b!67814 (= res!36561 (= (h!2046 lt!28494) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(declare-fun b!67815 () Bool)

(assert (=> b!67815 (= e!44425 (contains!707 (t!4939 lt!28494) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(assert (= (and d!14391 res!36562) b!67814))

(assert (= (and b!67814 (not res!36561)) b!67815))

(declare-fun m!63153 () Bool)

(assert (=> d!14391 m!63153))

(declare-fun m!63155 () Bool)

(assert (=> d!14391 m!63155))

(declare-fun m!63157 () Bool)

(assert (=> b!67815 m!63157))

(assert (=> b!66906 d!14391))

(declare-fun d!14393 () Bool)

(assert (=> d!14393 (= ($colon$colon!62 e!43774 (ite c!9228 (h!2046 (toList!705 (+!87 lt!28402 lt!28403))) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408)))) (Cons!1462 (ite c!9228 (h!2046 (toList!705 (+!87 lt!28402 lt!28403))) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))) e!43774))))

(assert (=> bm!5579 d!14393))

(declare-fun d!14395 () Bool)

(assert (=> d!14395 (= (apply!72 lt!29032 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1123 (getValueByKey!128 (toList!705 lt!29032) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2910 () Bool)

(assert (= bs!2910 d!14395))

(assert (=> bs!2910 m!63001))

(assert (=> bs!2910 m!63001))

(declare-fun m!63159 () Bool)

(assert (=> bs!2910 m!63159))

(assert (=> b!66990 d!14395))

(declare-fun d!14397 () Bool)

(assert (=> d!14397 (= (inRange!0 (ite c!9205 (index!3073 lt!28846) (ite c!9204 (index!3072 lt!28849) (index!3075 lt!28849))) (mask!6080 newMap!16)) (and (bvsge (ite c!9205 (index!3073 lt!28846) (ite c!9204 (index!3072 lt!28849) (index!3075 lt!28849))) #b00000000000000000000000000000000) (bvslt (ite c!9205 (index!3073 lt!28846) (ite c!9204 (index!3072 lt!28849) (index!3075 lt!28849))) (bvadd (mask!6080 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5568 d!14397))

(declare-fun d!14399 () Bool)

(assert (=> d!14399 (= (inRange!0 (index!3073 lt!28968) (mask!6080 newMap!16)) (and (bvsge (index!3073 lt!28968) #b00000000000000000000000000000000) (bvslt (index!3073 lt!28968) (bvadd (mask!6080 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!66887 d!14399))

(declare-fun b!67819 () Bool)

(declare-fun e!44427 () Option!134)

(assert (=> b!67819 (= e!44427 None!132)))

(declare-fun b!67818 () Bool)

(assert (=> b!67818 (= e!44427 (getValueByKey!128 (t!4939 (t!4939 (toList!705 lt!28525))) (_1!1052 lt!28403)))))

(declare-fun b!67816 () Bool)

(declare-fun e!44426 () Option!134)

(assert (=> b!67816 (= e!44426 (Some!133 (_2!1052 (h!2046 (t!4939 (toList!705 lt!28525))))))))

(declare-fun d!14401 () Bool)

(declare-fun c!9523 () Bool)

(assert (=> d!14401 (= c!9523 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28525))) (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28525)))) (_1!1052 lt!28403))))))

(assert (=> d!14401 (= (getValueByKey!128 (t!4939 (toList!705 lt!28525)) (_1!1052 lt!28403)) e!44426)))

(declare-fun b!67817 () Bool)

(assert (=> b!67817 (= e!44426 e!44427)))

(declare-fun c!9524 () Bool)

(assert (=> b!67817 (= c!9524 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28525))) (not (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28525)))) (_1!1052 lt!28403)))))))

(assert (= (and d!14401 c!9523) b!67816))

(assert (= (and d!14401 (not c!9523)) b!67817))

(assert (= (and b!67817 c!9524) b!67818))

(assert (= (and b!67817 (not c!9524)) b!67819))

(declare-fun m!63161 () Bool)

(assert (=> b!67818 m!63161))

(assert (=> b!66919 d!14401))

(declare-fun b!67823 () Bool)

(declare-fun e!44429 () Option!134)

(assert (=> b!67823 (= e!44429 None!132)))

(declare-fun b!67822 () Bool)

(assert (=> b!67822 (= e!44429 (getValueByKey!128 (t!4939 (t!4939 (toList!705 lt!28492))) (_1!1052 lt!28408)))))

(declare-fun b!67820 () Bool)

(declare-fun e!44428 () Option!134)

(assert (=> b!67820 (= e!44428 (Some!133 (_2!1052 (h!2046 (t!4939 (toList!705 lt!28492))))))))

(declare-fun d!14403 () Bool)

(declare-fun c!9525 () Bool)

(assert (=> d!14403 (= c!9525 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28492))) (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28492)))) (_1!1052 lt!28408))))))

(assert (=> d!14403 (= (getValueByKey!128 (t!4939 (toList!705 lt!28492)) (_1!1052 lt!28408)) e!44428)))

(declare-fun b!67821 () Bool)

(assert (=> b!67821 (= e!44428 e!44429)))

(declare-fun c!9526 () Bool)

(assert (=> b!67821 (= c!9526 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28492))) (not (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28492)))) (_1!1052 lt!28408)))))))

(assert (= (and d!14403 c!9525) b!67820))

(assert (= (and d!14403 (not c!9525)) b!67821))

(assert (= (and b!67821 c!9526) b!67822))

(assert (= (and b!67821 (not c!9526)) b!67823))

(declare-fun m!63163 () Bool)

(assert (=> b!67822 m!63163))

(assert (=> b!66881 d!14403))

(declare-fun d!14405 () Bool)

(assert (=> d!14405 (= (get!1122 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66618 d!14405))

(assert (=> d!13855 d!13853))

(declare-fun d!14407 () Bool)

(assert (=> d!14407 (= (getValueByKey!128 lt!28523 (_1!1052 lt!28403)) (Some!133 (_2!1052 lt!28403)))))

(assert (=> d!14407 true))

(declare-fun _$22!370 () Unit!1818)

(assert (=> d!14407 (= (choose!375 lt!28523 (_1!1052 lt!28403) (_2!1052 lt!28403)) _$22!370)))

(declare-fun bs!2911 () Bool)

(assert (= bs!2911 d!14407))

(assert (=> bs!2911 m!60655))

(assert (=> d!13855 d!14407))

(declare-fun d!14409 () Bool)

(declare-fun res!36563 () Bool)

(declare-fun e!44430 () Bool)

(assert (=> d!14409 (=> res!36563 e!44430)))

(assert (=> d!14409 (= res!36563 (or ((_ is Nil!1463) lt!28523) ((_ is Nil!1463) (t!4939 lt!28523))))))

(assert (=> d!14409 (= (isStrictlySorted!284 lt!28523) e!44430)))

(declare-fun b!67824 () Bool)

(declare-fun e!44431 () Bool)

(assert (=> b!67824 (= e!44430 e!44431)))

(declare-fun res!36564 () Bool)

(assert (=> b!67824 (=> (not res!36564) (not e!44431))))

(assert (=> b!67824 (= res!36564 (bvslt (_1!1052 (h!2046 lt!28523)) (_1!1052 (h!2046 (t!4939 lt!28523)))))))

(declare-fun b!67825 () Bool)

(assert (=> b!67825 (= e!44431 (isStrictlySorted!284 (t!4939 lt!28523)))))

(assert (= (and d!14409 (not res!36563)) b!67824))

(assert (= (and b!67824 res!36564) b!67825))

(declare-fun m!63165 () Bool)

(assert (=> b!67825 m!63165))

(assert (=> d!13855 d!14409))

(declare-fun d!14411 () Bool)

(assert (=> d!14411 (= (apply!72 lt!28960 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1123 (getValueByKey!128 (toList!705 lt!28960) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2912 () Bool)

(assert (= bs!2912 d!14411))

(assert (=> bs!2912 m!62103))

(assert (=> bs!2912 m!62103))

(declare-fun m!63167 () Bool)

(assert (=> bs!2912 m!63167))

(assert (=> b!66862 d!14411))

(declare-fun d!14413 () Bool)

(assert (=> d!14413 (= (inRange!0 (ite c!9239 (index!3072 lt!28909) (index!3075 lt!28909)) (mask!6080 newMap!16)) (and (bvsge (ite c!9239 (index!3072 lt!28909) (index!3075 lt!28909)) #b00000000000000000000000000000000) (bvslt (ite c!9239 (index!3072 lt!28909) (index!3075 lt!28909)) (bvadd (mask!6080 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5586 d!14413))

(declare-fun d!14415 () Bool)

(declare-fun lt!29498 () Bool)

(assert (=> d!14415 (= lt!29498 (select (content!71 lt!28999) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(declare-fun e!44432 () Bool)

(assert (=> d!14415 (= lt!29498 e!44432)))

(declare-fun res!36566 () Bool)

(assert (=> d!14415 (=> (not res!36566) (not e!44432))))

(assert (=> d!14415 (= res!36566 ((_ is Cons!1462) lt!28999))))

(assert (=> d!14415 (= (contains!707 lt!28999 (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))) lt!29498)))

(declare-fun b!67826 () Bool)

(declare-fun e!44433 () Bool)

(assert (=> b!67826 (= e!44432 e!44433)))

(declare-fun res!36565 () Bool)

(assert (=> b!67826 (=> res!36565 e!44433)))

(assert (=> b!67826 (= res!36565 (= (h!2046 lt!28999) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(declare-fun b!67827 () Bool)

(assert (=> b!67827 (= e!44433 (contains!707 (t!4939 lt!28999) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(assert (= (and d!14415 res!36566) b!67826))

(assert (= (and b!67826 (not res!36565)) b!67827))

(declare-fun m!63169 () Bool)

(assert (=> d!14415 m!63169))

(declare-fun m!63171 () Bool)

(assert (=> d!14415 m!63171))

(declare-fun m!63173 () Bool)

(assert (=> b!67827 m!63173))

(assert (=> b!66938 d!14415))

(assert (=> b!66996 d!13959))

(assert (=> d!13867 d!13991))

(declare-fun d!14417 () Bool)

(declare-fun e!44434 () Bool)

(assert (=> d!14417 e!44434))

(declare-fun res!36567 () Bool)

(assert (=> d!14417 (=> res!36567 e!44434)))

(declare-fun lt!29502 () Bool)

(assert (=> d!14417 (= res!36567 (not lt!29502))))

(declare-fun lt!29501 () Bool)

(assert (=> d!14417 (= lt!29502 lt!29501)))

(declare-fun lt!29499 () Unit!1818)

(declare-fun e!44435 () Unit!1818)

(assert (=> d!14417 (= lt!29499 e!44435)))

(declare-fun c!9527 () Bool)

(assert (=> d!14417 (= c!9527 lt!29501)))

(assert (=> d!14417 (= lt!29501 (containsKey!132 (toList!705 lt!28740) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14417 (= (contains!705 lt!28740 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29502)))

(declare-fun b!67828 () Bool)

(declare-fun lt!29500 () Unit!1818)

(assert (=> b!67828 (= e!44435 lt!29500)))

(assert (=> b!67828 (= lt!29500 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28740) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67828 (isDefined!82 (getValueByKey!128 (toList!705 lt!28740) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67829 () Bool)

(declare-fun Unit!1887 () Unit!1818)

(assert (=> b!67829 (= e!44435 Unit!1887)))

(declare-fun b!67830 () Bool)

(assert (=> b!67830 (= e!44434 (isDefined!82 (getValueByKey!128 (toList!705 lt!28740) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14417 c!9527) b!67828))

(assert (= (and d!14417 (not c!9527)) b!67829))

(assert (= (and d!14417 (not res!36567)) b!67830))

(declare-fun m!63175 () Bool)

(assert (=> d!14417 m!63175))

(declare-fun m!63177 () Bool)

(assert (=> b!67828 m!63177))

(declare-fun m!63179 () Bool)

(assert (=> b!67828 m!63179))

(assert (=> b!67828 m!63179))

(declare-fun m!63181 () Bool)

(assert (=> b!67828 m!63181))

(assert (=> b!67830 m!63179))

(assert (=> b!67830 m!63179))

(assert (=> b!67830 m!63181))

(assert (=> b!66605 d!14417))

(declare-fun d!14419 () Bool)

(declare-fun res!36568 () Bool)

(declare-fun e!44436 () Bool)

(assert (=> d!14419 (=> res!36568 e!44436)))

(assert (=> d!14419 (= res!36568 (or ((_ is Nil!1463) lt!29008) ((_ is Nil!1463) (t!4939 lt!29008))))))

(assert (=> d!14419 (= (isStrictlySorted!284 lt!29008) e!44436)))

(declare-fun b!67831 () Bool)

(declare-fun e!44437 () Bool)

(assert (=> b!67831 (= e!44436 e!44437)))

(declare-fun res!36569 () Bool)

(assert (=> b!67831 (=> (not res!36569) (not e!44437))))

(assert (=> b!67831 (= res!36569 (bvslt (_1!1052 (h!2046 lt!29008)) (_1!1052 (h!2046 (t!4939 lt!29008)))))))

(declare-fun b!67832 () Bool)

(assert (=> b!67832 (= e!44437 (isStrictlySorted!284 (t!4939 lt!29008)))))

(assert (= (and d!14419 (not res!36568)) b!67831))

(assert (= (and b!67831 res!36569) b!67832))

(declare-fun m!63183 () Bool)

(assert (=> b!67832 m!63183))

(assert (=> d!13857 d!14419))

(assert (=> d!13857 d!14247))

(declare-fun d!14421 () Bool)

(declare-fun e!44438 () Bool)

(assert (=> d!14421 e!44438))

(declare-fun res!36570 () Bool)

(assert (=> d!14421 (=> res!36570 e!44438)))

(declare-fun lt!29506 () Bool)

(assert (=> d!14421 (= res!36570 (not lt!29506))))

(declare-fun lt!29505 () Bool)

(assert (=> d!14421 (= lt!29506 lt!29505)))

(declare-fun lt!29503 () Unit!1818)

(declare-fun e!44439 () Unit!1818)

(assert (=> d!14421 (= lt!29503 e!44439)))

(declare-fun c!9528 () Bool)

(assert (=> d!14421 (= c!9528 lt!29505)))

(assert (=> d!14421 (= lt!29505 (containsKey!132 (toList!705 lt!28960) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14421 (= (contains!705 lt!28960 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29506)))

(declare-fun b!67833 () Bool)

(declare-fun lt!29504 () Unit!1818)

(assert (=> b!67833 (= e!44439 lt!29504)))

(assert (=> b!67833 (= lt!29504 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28960) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67833 (isDefined!82 (getValueByKey!128 (toList!705 lt!28960) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67834 () Bool)

(declare-fun Unit!1888 () Unit!1818)

(assert (=> b!67834 (= e!44439 Unit!1888)))

(declare-fun b!67835 () Bool)

(assert (=> b!67835 (= e!44438 (isDefined!82 (getValueByKey!128 (toList!705 lt!28960) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14421 c!9528) b!67833))

(assert (= (and d!14421 (not c!9528)) b!67834))

(assert (= (and d!14421 (not res!36570)) b!67835))

(declare-fun m!63185 () Bool)

(assert (=> d!14421 m!63185))

(declare-fun m!63187 () Bool)

(assert (=> b!67833 m!63187))

(declare-fun m!63189 () Bool)

(assert (=> b!67833 m!63189))

(assert (=> b!67833 m!63189))

(declare-fun m!63191 () Bool)

(assert (=> b!67833 m!63191))

(assert (=> b!67835 m!63189))

(assert (=> b!67835 m!63189))

(assert (=> b!67835 m!63191))

(assert (=> bm!5597 d!14421))

(declare-fun d!14423 () Bool)

(declare-fun res!36571 () Bool)

(declare-fun e!44440 () Bool)

(assert (=> d!14423 (=> (not res!36571) (not e!44440))))

(assert (=> d!14423 (= res!36571 (simpleValid!48 (_2!1051 lt!28833)))))

(assert (=> d!14423 (= (valid!287 (_2!1051 lt!28833)) e!44440)))

(declare-fun b!67836 () Bool)

(declare-fun res!36572 () Bool)

(assert (=> b!67836 (=> (not res!36572) (not e!44440))))

(assert (=> b!67836 (= res!36572 (= (arrayCountValidKeys!0 (_keys!3785 (_2!1051 lt!28833)) #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28833)))) (_size!384 (_2!1051 lt!28833))))))

(declare-fun b!67837 () Bool)

(declare-fun res!36573 () Bool)

(assert (=> b!67837 (=> (not res!36573) (not e!44440))))

(assert (=> b!67837 (= res!36573 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3785 (_2!1051 lt!28833)) (mask!6080 (_2!1051 lt!28833))))))

(declare-fun b!67838 () Bool)

(assert (=> b!67838 (= e!44440 (arrayNoDuplicates!0 (_keys!3785 (_2!1051 lt!28833)) #b00000000000000000000000000000000 Nil!1464))))

(assert (= (and d!14423 res!36571) b!67836))

(assert (= (and b!67836 res!36572) b!67837))

(assert (= (and b!67837 res!36573) b!67838))

(declare-fun m!63193 () Bool)

(assert (=> d!14423 m!63193))

(declare-fun m!63195 () Bool)

(assert (=> b!67836 m!63195))

(declare-fun m!63197 () Bool)

(assert (=> b!67837 m!63197))

(declare-fun m!63199 () Bool)

(assert (=> b!67838 m!63199))

(assert (=> b!66670 d!14423))

(declare-fun d!14425 () Bool)

(assert (=> d!14425 (isDefined!82 (getValueByKey!128 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29507 () Unit!1818)

(assert (=> d!14425 (= lt!29507 (choose!384 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44441 () Bool)

(assert (=> d!14425 e!44441))

(declare-fun res!36574 () Bool)

(assert (=> d!14425 (=> (not res!36574) (not e!44441))))

(assert (=> d!14425 (= res!36574 (isStrictlySorted!284 (toList!705 lt!28687)))))

(assert (=> d!14425 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000) lt!29507)))

(declare-fun b!67839 () Bool)

(assert (=> b!67839 (= e!44441 (containsKey!132 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14425 res!36574) b!67839))

(assert (=> d!14425 m!61313))

(assert (=> d!14425 m!61313))

(assert (=> d!14425 m!61405))

(declare-fun m!63201 () Bool)

(assert (=> d!14425 m!63201))

(assert (=> d!14425 m!62327))

(assert (=> b!67839 m!61401))

(assert (=> b!66889 d!14425))

(assert (=> b!66889 d!14323))

(assert (=> b!66889 d!14325))

(declare-fun d!14427 () Bool)

(declare-fun lt!29508 () Bool)

(assert (=> d!14427 (= lt!29508 (select (content!71 (toList!705 lt!28764)) (tuple2!2083 lt!28517 lt!28516)))))

(declare-fun e!44442 () Bool)

(assert (=> d!14427 (= lt!29508 e!44442)))

(declare-fun res!36576 () Bool)

(assert (=> d!14427 (=> (not res!36576) (not e!44442))))

(assert (=> d!14427 (= res!36576 ((_ is Cons!1462) (toList!705 lt!28764)))))

(assert (=> d!14427 (= (contains!707 (toList!705 lt!28764) (tuple2!2083 lt!28517 lt!28516)) lt!29508)))

(declare-fun b!67840 () Bool)

(declare-fun e!44443 () Bool)

(assert (=> b!67840 (= e!44442 e!44443)))

(declare-fun res!36575 () Bool)

(assert (=> b!67840 (=> res!36575 e!44443)))

(assert (=> b!67840 (= res!36575 (= (h!2046 (toList!705 lt!28764)) (tuple2!2083 lt!28517 lt!28516)))))

(declare-fun b!67841 () Bool)

(assert (=> b!67841 (= e!44443 (contains!707 (t!4939 (toList!705 lt!28764)) (tuple2!2083 lt!28517 lt!28516)))))

(assert (= (and d!14427 res!36576) b!67840))

(assert (= (and b!67840 (not res!36575)) b!67841))

(declare-fun m!63203 () Bool)

(assert (=> d!14427 m!63203))

(declare-fun m!63205 () Bool)

(assert (=> d!14427 m!63205))

(declare-fun m!63207 () Bool)

(assert (=> b!67841 m!63207))

(assert (=> b!66629 d!14427))

(assert (=> b!66598 d!14373))

(declare-fun d!14429 () Bool)

(assert (=> d!14429 (= (get!1123 (getValueByKey!128 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2475 (getValueByKey!128 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13801 d!14429))

(assert (=> d!13801 d!14325))

(declare-fun d!14431 () Bool)

(assert (=> d!14431 (= (get!1123 (getValueByKey!128 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2475 (getValueByKey!128 (toList!705 lt!28513) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!13861 d!14431))

(assert (=> d!13861 d!14003))

(declare-fun b!67842 () Bool)

(declare-fun e!44455 () Bool)

(declare-fun call!5710 () Bool)

(assert (=> b!67842 (= e!44455 (not call!5710))))

(declare-fun b!67843 () Bool)

(declare-fun c!9530 () Bool)

(assert (=> b!67843 (= c!9530 (and (not (= (bvand (extraKeys!2017 (_2!1051 lt!28606)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 (_2!1051 lt!28606)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44450 () ListLongMap!1379)

(declare-fun e!44444 () ListLongMap!1379)

(assert (=> b!67843 (= e!44450 e!44444)))

(declare-fun b!67844 () Bool)

(declare-fun res!36579 () Bool)

(declare-fun e!44451 () Bool)

(assert (=> b!67844 (=> (not res!36579) (not e!44451))))

(declare-fun e!44454 () Bool)

(assert (=> b!67844 (= res!36579 e!44454)))

(declare-fun res!36577 () Bool)

(assert (=> b!67844 (=> res!36577 e!44454)))

(declare-fun e!44449 () Bool)

(assert (=> b!67844 (= res!36577 (not e!44449))))

(declare-fun res!36582 () Bool)

(assert (=> b!67844 (=> (not res!36582) (not e!44449))))

(assert (=> b!67844 (= res!36582 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28606)))))))

(declare-fun b!67845 () Bool)

(declare-fun e!44447 () ListLongMap!1379)

(assert (=> b!67845 (= e!44447 e!44450)))

(declare-fun c!9532 () Bool)

(assert (=> b!67845 (= c!9532 (and (not (= (bvand (extraKeys!2017 (_2!1051 lt!28606)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 (_2!1051 lt!28606)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67846 () Bool)

(declare-fun e!44456 () Unit!1818)

(declare-fun Unit!1889 () Unit!1818)

(assert (=> b!67846 (= e!44456 Unit!1889)))

(declare-fun b!67847 () Bool)

(declare-fun res!36583 () Bool)

(assert (=> b!67847 (=> (not res!36583) (not e!44451))))

(declare-fun e!44452 () Bool)

(assert (=> b!67847 (= res!36583 e!44452)))

(declare-fun c!9531 () Bool)

(assert (=> b!67847 (= c!9531 (not (= (bvand (extraKeys!2017 (_2!1051 lt!28606)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5707 () Bool)

(declare-fun call!5716 () Bool)

(declare-fun lt!29528 () ListLongMap!1379)

(assert (=> bm!5707 (= call!5716 (contains!705 lt!29528 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67848 () Bool)

(declare-fun lt!29524 () Unit!1818)

(assert (=> b!67848 (= e!44456 lt!29524)))

(declare-fun lt!29514 () ListLongMap!1379)

(assert (=> b!67848 (= lt!29514 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (_2!1051 lt!28606)) (_values!2129 (_2!1051 lt!28606)) (mask!6080 (_2!1051 lt!28606)) (extraKeys!2017 (_2!1051 lt!28606)) (zeroValue!2054 (_2!1051 lt!28606)) (minValue!2054 (_2!1051 lt!28606)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28606))))))

(declare-fun lt!29527 () (_ BitVec 64))

(assert (=> b!67848 (= lt!29527 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29526 () (_ BitVec 64))

(assert (=> b!67848 (= lt!29526 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000))))

(declare-fun lt!29512 () Unit!1818)

(assert (=> b!67848 (= lt!29512 (addStillContains!48 lt!29514 lt!29527 (zeroValue!2054 (_2!1051 lt!28606)) lt!29526))))

(assert (=> b!67848 (contains!705 (+!87 lt!29514 (tuple2!2083 lt!29527 (zeroValue!2054 (_2!1051 lt!28606)))) lt!29526)))

(declare-fun lt!29519 () Unit!1818)

(assert (=> b!67848 (= lt!29519 lt!29512)))

(declare-fun lt!29511 () ListLongMap!1379)

(assert (=> b!67848 (= lt!29511 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (_2!1051 lt!28606)) (_values!2129 (_2!1051 lt!28606)) (mask!6080 (_2!1051 lt!28606)) (extraKeys!2017 (_2!1051 lt!28606)) (zeroValue!2054 (_2!1051 lt!28606)) (minValue!2054 (_2!1051 lt!28606)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28606))))))

(declare-fun lt!29515 () (_ BitVec 64))

(assert (=> b!67848 (= lt!29515 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29509 () (_ BitVec 64))

(assert (=> b!67848 (= lt!29509 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000))))

(declare-fun lt!29530 () Unit!1818)

(assert (=> b!67848 (= lt!29530 (addApplyDifferent!48 lt!29511 lt!29515 (minValue!2054 (_2!1051 lt!28606)) lt!29509))))

(assert (=> b!67848 (= (apply!72 (+!87 lt!29511 (tuple2!2083 lt!29515 (minValue!2054 (_2!1051 lt!28606)))) lt!29509) (apply!72 lt!29511 lt!29509))))

(declare-fun lt!29513 () Unit!1818)

(assert (=> b!67848 (= lt!29513 lt!29530)))

(declare-fun lt!29520 () ListLongMap!1379)

(assert (=> b!67848 (= lt!29520 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (_2!1051 lt!28606)) (_values!2129 (_2!1051 lt!28606)) (mask!6080 (_2!1051 lt!28606)) (extraKeys!2017 (_2!1051 lt!28606)) (zeroValue!2054 (_2!1051 lt!28606)) (minValue!2054 (_2!1051 lt!28606)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28606))))))

(declare-fun lt!29523 () (_ BitVec 64))

(assert (=> b!67848 (= lt!29523 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29525 () (_ BitVec 64))

(assert (=> b!67848 (= lt!29525 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000))))

(declare-fun lt!29517 () Unit!1818)

(assert (=> b!67848 (= lt!29517 (addApplyDifferent!48 lt!29520 lt!29523 (zeroValue!2054 (_2!1051 lt!28606)) lt!29525))))

(assert (=> b!67848 (= (apply!72 (+!87 lt!29520 (tuple2!2083 lt!29523 (zeroValue!2054 (_2!1051 lt!28606)))) lt!29525) (apply!72 lt!29520 lt!29525))))

(declare-fun lt!29529 () Unit!1818)

(assert (=> b!67848 (= lt!29529 lt!29517)))

(declare-fun lt!29518 () ListLongMap!1379)

(assert (=> b!67848 (= lt!29518 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (_2!1051 lt!28606)) (_values!2129 (_2!1051 lt!28606)) (mask!6080 (_2!1051 lt!28606)) (extraKeys!2017 (_2!1051 lt!28606)) (zeroValue!2054 (_2!1051 lt!28606)) (minValue!2054 (_2!1051 lt!28606)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28606))))))

(declare-fun lt!29521 () (_ BitVec 64))

(assert (=> b!67848 (= lt!29521 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29522 () (_ BitVec 64))

(assert (=> b!67848 (= lt!29522 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000))))

(assert (=> b!67848 (= lt!29524 (addApplyDifferent!48 lt!29518 lt!29521 (minValue!2054 (_2!1051 lt!28606)) lt!29522))))

(assert (=> b!67848 (= (apply!72 (+!87 lt!29518 (tuple2!2083 lt!29521 (minValue!2054 (_2!1051 lt!28606)))) lt!29522) (apply!72 lt!29518 lt!29522))))

(declare-fun d!14433 () Bool)

(assert (=> d!14433 e!44451))

(declare-fun res!36585 () Bool)

(assert (=> d!14433 (=> (not res!36585) (not e!44451))))

(assert (=> d!14433 (= res!36585 (or (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28606)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28606)))))))))

(declare-fun lt!29510 () ListLongMap!1379)

(assert (=> d!14433 (= lt!29528 lt!29510)))

(declare-fun lt!29516 () Unit!1818)

(assert (=> d!14433 (= lt!29516 e!44456)))

(declare-fun c!9534 () Bool)

(declare-fun e!44448 () Bool)

(assert (=> d!14433 (= c!9534 e!44448)))

(declare-fun res!36584 () Bool)

(assert (=> d!14433 (=> (not res!36584) (not e!44448))))

(assert (=> d!14433 (= res!36584 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28606)))))))

(assert (=> d!14433 (= lt!29510 e!44447)))

(declare-fun c!9533 () Bool)

(assert (=> d!14433 (= c!9533 (and (not (= (bvand (extraKeys!2017 (_2!1051 lt!28606)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 (_2!1051 lt!28606)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14433 (validMask!0 (mask!6080 (_2!1051 lt!28606)))))

(assert (=> d!14433 (= (getCurrentListMap!401 (_keys!3785 (_2!1051 lt!28606)) (_values!2129 (_2!1051 lt!28606)) (mask!6080 (_2!1051 lt!28606)) (extraKeys!2017 (_2!1051 lt!28606)) (zeroValue!2054 (_2!1051 lt!28606)) (minValue!2054 (_2!1051 lt!28606)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28606))) lt!29528)))

(declare-fun bm!5708 () Bool)

(declare-fun call!5714 () ListLongMap!1379)

(declare-fun call!5711 () ListLongMap!1379)

(assert (=> bm!5708 (= call!5714 call!5711)))

(declare-fun b!67849 () Bool)

(assert (=> b!67849 (= e!44452 (not call!5716))))

(declare-fun b!67850 () Bool)

(assert (=> b!67850 (= e!44450 call!5714)))

(declare-fun b!67851 () Bool)

(declare-fun e!44446 () Bool)

(assert (=> b!67851 (= e!44446 (= (apply!72 lt!29528 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 (_2!1051 lt!28606))))))

(declare-fun b!67852 () Bool)

(assert (=> b!67852 (= e!44451 e!44455)))

(declare-fun c!9529 () Bool)

(assert (=> b!67852 (= c!9529 (not (= (bvand (extraKeys!2017 (_2!1051 lt!28606)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67853 () Bool)

(declare-fun e!44453 () Bool)

(assert (=> b!67853 (= e!44453 (= (apply!72 lt!29528 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 (_values!2129 (_2!1051 lt!28606))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 (_2!1051 lt!28606)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67853 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 (_values!2129 (_2!1051 lt!28606)))))))

(assert (=> b!67853 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28606)))))))

(declare-fun b!67854 () Bool)

(assert (=> b!67854 (= e!44447 (+!87 call!5711 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (_2!1051 lt!28606)))))))

(declare-fun bm!5709 () Bool)

(declare-fun call!5712 () ListLongMap!1379)

(declare-fun call!5715 () ListLongMap!1379)

(assert (=> bm!5709 (= call!5712 call!5715)))

(declare-fun bm!5710 () Bool)

(declare-fun call!5713 () ListLongMap!1379)

(assert (=> bm!5710 (= call!5713 (getCurrentListMapNoExtraKeys!51 (_keys!3785 (_2!1051 lt!28606)) (_values!2129 (_2!1051 lt!28606)) (mask!6080 (_2!1051 lt!28606)) (extraKeys!2017 (_2!1051 lt!28606)) (zeroValue!2054 (_2!1051 lt!28606)) (minValue!2054 (_2!1051 lt!28606)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28606))))))

(declare-fun b!67855 () Bool)

(assert (=> b!67855 (= e!44444 call!5712)))

(declare-fun b!67856 () Bool)

(declare-fun e!44445 () Bool)

(assert (=> b!67856 (= e!44445 (= (apply!72 lt!29528 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 (_2!1051 lt!28606))))))

(declare-fun bm!5711 () Bool)

(assert (=> bm!5711 (= call!5715 call!5713)))

(declare-fun b!67857 () Bool)

(assert (=> b!67857 (= e!44449 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000)))))

(declare-fun b!67858 () Bool)

(assert (=> b!67858 (= e!44454 e!44453)))

(declare-fun res!36580 () Bool)

(assert (=> b!67858 (=> (not res!36580) (not e!44453))))

(assert (=> b!67858 (= res!36580 (contains!705 lt!29528 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000)))))

(assert (=> b!67858 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 (_2!1051 lt!28606)))))))

(declare-fun b!67859 () Bool)

(assert (=> b!67859 (= e!44455 e!44445)))

(declare-fun res!36578 () Bool)

(assert (=> b!67859 (= res!36578 call!5710)))

(assert (=> b!67859 (=> (not res!36578) (not e!44445))))

(declare-fun bm!5712 () Bool)

(assert (=> bm!5712 (= call!5711 (+!87 (ite c!9533 call!5713 (ite c!9532 call!5715 call!5712)) (ite (or c!9533 c!9532) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (_2!1051 lt!28606))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (_2!1051 lt!28606))))))))

(declare-fun b!67860 () Bool)

(assert (=> b!67860 (= e!44452 e!44446)))

(declare-fun res!36581 () Bool)

(assert (=> b!67860 (= res!36581 call!5716)))

(assert (=> b!67860 (=> (not res!36581) (not e!44446))))

(declare-fun b!67861 () Bool)

(assert (=> b!67861 (= e!44444 call!5714)))

(declare-fun b!67862 () Bool)

(assert (=> b!67862 (= e!44448 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (_2!1051 lt!28606))) #b00000000000000000000000000000000)))))

(declare-fun bm!5713 () Bool)

(assert (=> bm!5713 (= call!5710 (contains!705 lt!29528 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14433 c!9533) b!67854))

(assert (= (and d!14433 (not c!9533)) b!67845))

(assert (= (and b!67845 c!9532) b!67850))

(assert (= (and b!67845 (not c!9532)) b!67843))

(assert (= (and b!67843 c!9530) b!67861))

(assert (= (and b!67843 (not c!9530)) b!67855))

(assert (= (or b!67861 b!67855) bm!5709))

(assert (= (or b!67850 bm!5709) bm!5711))

(assert (= (or b!67850 b!67861) bm!5708))

(assert (= (or b!67854 bm!5711) bm!5710))

(assert (= (or b!67854 bm!5708) bm!5712))

(assert (= (and d!14433 res!36584) b!67862))

(assert (= (and d!14433 c!9534) b!67848))

(assert (= (and d!14433 (not c!9534)) b!67846))

(assert (= (and d!14433 res!36585) b!67844))

(assert (= (and b!67844 res!36582) b!67857))

(assert (= (and b!67844 (not res!36577)) b!67858))

(assert (= (and b!67858 res!36580) b!67853))

(assert (= (and b!67844 res!36579) b!67847))

(assert (= (and b!67847 c!9531) b!67860))

(assert (= (and b!67847 (not c!9531)) b!67849))

(assert (= (and b!67860 res!36581) b!67851))

(assert (= (or b!67860 b!67849) bm!5707))

(assert (= (and b!67847 res!36583) b!67852))

(assert (= (and b!67852 c!9529) b!67859))

(assert (= (and b!67852 (not c!9529)) b!67842))

(assert (= (and b!67859 res!36578) b!67856))

(assert (= (or b!67859 b!67842) bm!5713))

(declare-fun b_lambda!3015 () Bool)

(assert (=> (not b_lambda!3015) (not b!67853)))

(declare-fun tb!1465 () Bool)

(declare-fun t!4957 () Bool)

(assert (=> (and b!66103 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 (_2!1051 lt!28606))) t!4957) tb!1465))

(declare-fun result!2591 () Bool)

(assert (=> tb!1465 (= result!2591 tp_is_empty!2449)))

(assert (=> b!67853 t!4957))

(declare-fun b_and!4173 () Bool)

(assert (= b_and!4169 (and (=> t!4957 result!2591) b_and!4173)))

(declare-fun t!4959 () Bool)

(declare-fun tb!1467 () Bool)

(assert (=> (and b!66112 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (_2!1051 lt!28606))) t!4959) tb!1467))

(declare-fun result!2593 () Bool)

(assert (= result!2593 result!2591))

(assert (=> b!67853 t!4959))

(declare-fun b_and!4175 () Bool)

(assert (= b_and!4171 (and (=> t!4959 result!2593) b_and!4175)))

(declare-fun m!63209 () Bool)

(assert (=> b!67854 m!63209))

(assert (=> d!14433 m!62333))

(declare-fun m!63211 () Bool)

(assert (=> bm!5710 m!63211))

(declare-fun m!63213 () Bool)

(assert (=> b!67856 m!63213))

(assert (=> b!67857 m!62657))

(assert (=> b!67857 m!62657))

(assert (=> b!67857 m!62659))

(declare-fun m!63215 () Bool)

(assert (=> b!67848 m!63215))

(declare-fun m!63217 () Bool)

(assert (=> b!67848 m!63217))

(declare-fun m!63219 () Bool)

(assert (=> b!67848 m!63219))

(declare-fun m!63221 () Bool)

(assert (=> b!67848 m!63221))

(assert (=> b!67848 m!63215))

(declare-fun m!63223 () Bool)

(assert (=> b!67848 m!63223))

(declare-fun m!63225 () Bool)

(assert (=> b!67848 m!63225))

(assert (=> b!67848 m!63219))

(declare-fun m!63227 () Bool)

(assert (=> b!67848 m!63227))

(declare-fun m!63229 () Bool)

(assert (=> b!67848 m!63229))

(declare-fun m!63231 () Bool)

(assert (=> b!67848 m!63231))

(declare-fun m!63233 () Bool)

(assert (=> b!67848 m!63233))

(declare-fun m!63235 () Bool)

(assert (=> b!67848 m!63235))

(assert (=> b!67848 m!63211))

(declare-fun m!63237 () Bool)

(assert (=> b!67848 m!63237))

(assert (=> b!67848 m!63233))

(declare-fun m!63239 () Bool)

(assert (=> b!67848 m!63239))

(assert (=> b!67848 m!62657))

(declare-fun m!63241 () Bool)

(assert (=> b!67848 m!63241))

(assert (=> b!67848 m!63223))

(declare-fun m!63243 () Bool)

(assert (=> b!67848 m!63243))

(declare-fun m!63245 () Bool)

(assert (=> bm!5712 m!63245))

(declare-fun m!63247 () Bool)

(assert (=> bm!5713 m!63247))

(declare-fun m!63249 () Bool)

(assert (=> b!67853 m!63249))

(assert (=> b!67853 m!62657))

(assert (=> b!67853 m!62657))

(declare-fun m!63251 () Bool)

(assert (=> b!67853 m!63251))

(declare-fun m!63253 () Bool)

(assert (=> b!67853 m!63253))

(assert (=> b!67853 m!63249))

(declare-fun m!63255 () Bool)

(assert (=> b!67853 m!63255))

(assert (=> b!67853 m!63253))

(declare-fun m!63257 () Bool)

(assert (=> bm!5707 m!63257))

(assert (=> b!67858 m!62657))

(assert (=> b!67858 m!62657))

(declare-fun m!63259 () Bool)

(assert (=> b!67858 m!63259))

(declare-fun m!63261 () Bool)

(assert (=> b!67851 m!63261))

(assert (=> b!67862 m!62657))

(assert (=> b!67862 m!62657))

(assert (=> b!67862 m!62659))

(assert (=> d!13703 d!14433))

(assert (=> b!66572 d!13959))

(assert (=> b!66772 d!14035))

(declare-fun d!14435 () Bool)

(declare-fun res!36586 () Bool)

(declare-fun e!44457 () Bool)

(assert (=> d!14435 (=> res!36586 e!44457)))

(assert (=> d!14435 (= res!36586 (and ((_ is Cons!1462) lt!28494) (= (_1!1052 (h!2046 lt!28494)) (_1!1052 lt!28408))))))

(assert (=> d!14435 (= (containsKey!132 lt!28494 (_1!1052 lt!28408)) e!44457)))

(declare-fun b!67863 () Bool)

(declare-fun e!44458 () Bool)

(assert (=> b!67863 (= e!44457 e!44458)))

(declare-fun res!36587 () Bool)

(assert (=> b!67863 (=> (not res!36587) (not e!44458))))

(assert (=> b!67863 (= res!36587 (and (or (not ((_ is Cons!1462) lt!28494)) (bvsle (_1!1052 (h!2046 lt!28494)) (_1!1052 lt!28408))) ((_ is Cons!1462) lt!28494) (bvslt (_1!1052 (h!2046 lt!28494)) (_1!1052 lt!28408))))))

(declare-fun b!67864 () Bool)

(assert (=> b!67864 (= e!44458 (containsKey!132 (t!4939 lt!28494) (_1!1052 lt!28408)))))

(assert (= (and d!14435 (not res!36586)) b!67863))

(assert (= (and b!67863 res!36587) b!67864))

(declare-fun m!63263 () Bool)

(assert (=> b!67864 m!63263))

(assert (=> b!66905 d!14435))

(declare-fun d!14437 () Bool)

(assert (=> d!14437 (= (apply!72 lt!28724 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1123 (getValueByKey!128 (toList!705 lt!28724) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2913 () Bool)

(assert (= bs!2913 d!14437))

(assert (=> bs!2913 m!62681))

(assert (=> bs!2913 m!62681))

(declare-fun m!63265 () Bool)

(assert (=> bs!2913 m!63265))

(assert (=> b!66566 d!14437))

(declare-fun d!14439 () Bool)

(assert (=> d!14439 (contains!705 (getCurrentListMap!401 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))

(declare-fun lt!29533 () Unit!1818)

(declare-fun choose!386 (array!3817 array!3819 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) (_ BitVec 32) Int) Unit!1818)

(assert (=> d!14439 (= lt!29533 (choose!386 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(assert (=> d!14439 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!14439 (= (lemmaArrayContainsKeyThenInListMap!10 (_keys!3785 newMap!16) (_values!2129 newMap!16) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29533)))

(declare-fun bs!2914 () Bool)

(assert (= bs!2914 d!14439))

(assert (=> bs!2914 m!60697))

(assert (=> bs!2914 m!60697))

(assert (=> bs!2914 m!60449))

(assert (=> bs!2914 m!61045))

(assert (=> bs!2914 m!60449))

(declare-fun m!63267 () Bool)

(assert (=> bs!2914 m!63267))

(assert (=> bs!2914 m!60845))

(assert (=> b!66675 d!14439))

(assert (=> b!66675 d!13931))

(assert (=> b!66675 d!13687))

(declare-fun b!67868 () Bool)

(declare-fun e!44460 () Option!134)

(assert (=> b!67868 (= e!44460 None!132)))

(declare-fun b!67867 () Bool)

(assert (=> b!67867 (= e!44460 (getValueByKey!128 (t!4939 (t!4939 lt!28498)) (_1!1052 lt!28408)))))

(declare-fun b!67865 () Bool)

(declare-fun e!44459 () Option!134)

(assert (=> b!67865 (= e!44459 (Some!133 (_2!1052 (h!2046 (t!4939 lt!28498)))))))

(declare-fun d!14441 () Bool)

(declare-fun c!9535 () Bool)

(assert (=> d!14441 (= c!9535 (and ((_ is Cons!1462) (t!4939 lt!28498)) (= (_1!1052 (h!2046 (t!4939 lt!28498))) (_1!1052 lt!28408))))))

(assert (=> d!14441 (= (getValueByKey!128 (t!4939 lt!28498) (_1!1052 lt!28408)) e!44459)))

(declare-fun b!67866 () Bool)

(assert (=> b!67866 (= e!44459 e!44460)))

(declare-fun c!9536 () Bool)

(assert (=> b!67866 (= c!9536 (and ((_ is Cons!1462) (t!4939 lt!28498)) (not (= (_1!1052 (h!2046 (t!4939 lt!28498))) (_1!1052 lt!28408)))))))

(assert (= (and d!14441 c!9535) b!67865))

(assert (= (and d!14441 (not c!9535)) b!67866))

(assert (= (and b!67866 c!9536) b!67867))

(assert (= (and b!67866 (not c!9536)) b!67868))

(declare-fun m!63269 () Bool)

(assert (=> b!67867 m!63269))

(assert (=> b!66713 d!14441))

(declare-fun d!14443 () Bool)

(assert (=> d!14443 (isDefined!82 (getValueByKey!128 (toList!705 lt!28513) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29534 () Unit!1818)

(assert (=> d!14443 (= lt!29534 (choose!384 (toList!705 lt!28513) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44461 () Bool)

(assert (=> d!14443 e!44461))

(declare-fun res!36588 () Bool)

(assert (=> d!14443 (=> (not res!36588) (not e!44461))))

(assert (=> d!14443 (= res!36588 (isStrictlySorted!284 (toList!705 lt!28513)))))

(assert (=> d!14443 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28513) #b0000000000000000000000000000000000000000000000000000000000000000) lt!29534)))

(declare-fun b!67869 () Bool)

(assert (=> b!67869 (= e!44461 (containsKey!132 (toList!705 lt!28513) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14443 res!36588) b!67869))

(assert (=> d!14443 m!61105))

(assert (=> d!14443 m!61105))

(assert (=> d!14443 m!61107))

(declare-fun m!63271 () Bool)

(assert (=> d!14443 m!63271))

(assert (=> d!14443 m!62057))

(assert (=> b!67869 m!61101))

(assert (=> b!66691 d!14443))

(assert (=> b!66691 d!14369))

(assert (=> b!66691 d!14371))

(declare-fun d!14445 () Bool)

(assert (=> d!14445 (isDefined!82 (getValueByKey!128 (toList!705 lt!28525) (_1!1052 lt!28403)))))

(declare-fun lt!29535 () Unit!1818)

(assert (=> d!14445 (= lt!29535 (choose!384 (toList!705 lt!28525) (_1!1052 lt!28403)))))

(declare-fun e!44462 () Bool)

(assert (=> d!14445 e!44462))

(declare-fun res!36589 () Bool)

(assert (=> d!14445 (=> (not res!36589) (not e!44462))))

(assert (=> d!14445 (= res!36589 (isStrictlySorted!284 (toList!705 lt!28525)))))

(assert (=> d!14445 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28525) (_1!1052 lt!28403)) lt!29535)))

(declare-fun b!67870 () Bool)

(assert (=> b!67870 (= e!44462 (containsKey!132 (toList!705 lt!28525) (_1!1052 lt!28403)))))

(assert (= (and d!14445 res!36589) b!67870))

(assert (=> d!14445 m!60673))

(assert (=> d!14445 m!60673))

(assert (=> d!14445 m!61463))

(declare-fun m!63273 () Bool)

(assert (=> d!14445 m!63273))

(declare-fun m!63275 () Bool)

(assert (=> d!14445 m!63275))

(assert (=> b!67870 m!61459))

(assert (=> b!66925 d!14445))

(assert (=> b!66925 d!14317))

(assert (=> b!66925 d!13835))

(declare-fun d!14447 () Bool)

(assert (=> d!14447 (= (isEmpty!312 (toList!705 lt!28513)) ((_ is Nil!1463) (toList!705 lt!28513)))))

(assert (=> d!13679 d!14447))

(declare-fun d!14449 () Bool)

(assert (=> d!14449 (= (apply!72 lt!28960 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1123 (getValueByKey!128 (toList!705 lt!28960) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2915 () Bool)

(assert (= bs!2915 d!14449))

(assert (=> bs!2915 m!63189))

(assert (=> bs!2915 m!63189))

(declare-fun m!63277 () Bool)

(assert (=> bs!2915 m!63277))

(assert (=> b!66867 d!14449))

(declare-fun d!14451 () Bool)

(assert (=> d!14451 (= (get!1121 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2468 (select (arr!1823 (_values!2129 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66617 d!14451))

(declare-fun d!14453 () Bool)

(declare-fun res!36590 () Bool)

(declare-fun e!44463 () Bool)

(assert (=> d!14453 (=> res!36590 e!44463)))

(assert (=> d!14453 (= res!36590 (and ((_ is Cons!1462) lt!29008) (= (_1!1052 (h!2046 lt!29008)) (_1!1052 lt!28403))))))

(assert (=> d!14453 (= (containsKey!132 lt!29008 (_1!1052 lt!28403)) e!44463)))

(declare-fun b!67871 () Bool)

(declare-fun e!44464 () Bool)

(assert (=> b!67871 (= e!44463 e!44464)))

(declare-fun res!36591 () Bool)

(assert (=> b!67871 (=> (not res!36591) (not e!44464))))

(assert (=> b!67871 (= res!36591 (and (or (not ((_ is Cons!1462) lt!29008)) (bvsle (_1!1052 (h!2046 lt!29008)) (_1!1052 lt!28403))) ((_ is Cons!1462) lt!29008) (bvslt (_1!1052 (h!2046 lt!29008)) (_1!1052 lt!28403))))))

(declare-fun b!67872 () Bool)

(assert (=> b!67872 (= e!44464 (containsKey!132 (t!4939 lt!29008) (_1!1052 lt!28403)))))

(assert (= (and d!14453 (not res!36590)) b!67871))

(assert (= (and b!67871 res!36591) b!67872))

(declare-fun m!63279 () Bool)

(assert (=> b!67872 m!63279))

(assert (=> b!66966 d!14453))

(declare-fun b!67873 () Bool)

(declare-fun e!44466 () Bool)

(declare-fun e!44468 () Bool)

(assert (=> b!67873 (= e!44466 e!44468)))

(declare-fun c!9537 () Bool)

(assert (=> b!67873 (= c!9537 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!67874 () Bool)

(declare-fun call!5717 () Bool)

(assert (=> b!67874 (= e!44468 call!5717)))

(declare-fun b!67875 () Bool)

(declare-fun e!44465 () Bool)

(assert (=> b!67875 (= e!44465 (contains!708 Nil!1464 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!5714 () Bool)

(assert (=> bm!5714 (= call!5717 (arrayNoDuplicates!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9537 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) #b00000000000000000000000000000000) Nil!1464) Nil!1464)))))

(declare-fun b!67876 () Bool)

(declare-fun e!44467 () Bool)

(assert (=> b!67876 (= e!44467 e!44466)))

(declare-fun res!36592 () Bool)

(assert (=> b!67876 (=> (not res!36592) (not e!44466))))

(assert (=> b!67876 (= res!36592 (not e!44465))))

(declare-fun res!36593 () Bool)

(assert (=> b!67876 (=> (not res!36593) (not e!44465))))

(assert (=> b!67876 (= res!36593 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!14455 () Bool)

(declare-fun res!36594 () Bool)

(assert (=> d!14455 (=> res!36594 e!44467)))

(assert (=> d!14455 (= res!36594 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> d!14455 (= (arrayNoDuplicates!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000000 Nil!1464) e!44467)))

(declare-fun b!67877 () Bool)

(assert (=> b!67877 (= e!44468 call!5717)))

(assert (= (and d!14455 (not res!36594)) b!67876))

(assert (= (and b!67876 res!36593) b!67875))

(assert (= (and b!67876 res!36592) b!67873))

(assert (= (and b!67873 c!9537) b!67877))

(assert (= (and b!67873 (not c!9537)) b!67874))

(assert (= (or b!67877 b!67874) bm!5714))

(declare-fun m!63281 () Bool)

(assert (=> b!67873 m!63281))

(assert (=> b!67873 m!63281))

(declare-fun m!63283 () Bool)

(assert (=> b!67873 m!63283))

(assert (=> b!67875 m!63281))

(assert (=> b!67875 m!63281))

(declare-fun m!63285 () Bool)

(assert (=> b!67875 m!63285))

(assert (=> bm!5714 m!63281))

(declare-fun m!63287 () Bool)

(assert (=> bm!5714 m!63287))

(assert (=> b!67876 m!63281))

(assert (=> b!67876 m!63281))

(assert (=> b!67876 m!63283))

(assert (=> b!66876 d!14455))

(declare-fun d!14457 () Bool)

(declare-fun res!36595 () Bool)

(declare-fun e!44469 () Bool)

(assert (=> d!14457 (=> res!36595 e!44469)))

(assert (=> d!14457 (= res!36595 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28404))) (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28404)))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (=> d!14457 (= (containsKey!132 (t!4939 (toList!705 lt!28404)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) e!44469)))

(declare-fun b!67878 () Bool)

(declare-fun e!44470 () Bool)

(assert (=> b!67878 (= e!44469 e!44470)))

(declare-fun res!36596 () Bool)

(assert (=> b!67878 (=> (not res!36596) (not e!44470))))

(assert (=> b!67878 (= res!36596 (and (or (not ((_ is Cons!1462) (t!4939 (toList!705 lt!28404)))) (bvsle (_1!1052 (h!2046 (t!4939 (toList!705 lt!28404)))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))) ((_ is Cons!1462) (t!4939 (toList!705 lt!28404))) (bvslt (_1!1052 (h!2046 (t!4939 (toList!705 lt!28404)))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(declare-fun b!67879 () Bool)

(assert (=> b!67879 (= e!44470 (containsKey!132 (t!4939 (t!4939 (toList!705 lt!28404))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (= (and d!14457 (not res!36595)) b!67878))

(assert (= (and b!67878 res!36596) b!67879))

(assert (=> b!67879 m!60449))

(declare-fun m!63289 () Bool)

(assert (=> b!67879 m!63289))

(assert (=> b!66699 d!14457))

(declare-fun d!14459 () Bool)

(declare-fun lt!29536 () Bool)

(assert (=> d!14459 (= lt!29536 (select (content!71 (toList!705 lt!29039)) (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun e!44471 () Bool)

(assert (=> d!14459 (= lt!29536 e!44471)))

(declare-fun res!36598 () Bool)

(assert (=> d!14459 (=> (not res!36598) (not e!44471))))

(assert (=> d!14459 (= res!36598 ((_ is Cons!1462) (toList!705 lt!29039)))))

(assert (=> d!14459 (= (contains!707 (toList!705 lt!29039) (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29536)))

(declare-fun b!67880 () Bool)

(declare-fun e!44472 () Bool)

(assert (=> b!67880 (= e!44471 e!44472)))

(declare-fun res!36597 () Bool)

(assert (=> b!67880 (=> res!36597 e!44472)))

(assert (=> b!67880 (= res!36597 (= (h!2046 (toList!705 lt!29039)) (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!67881 () Bool)

(assert (=> b!67881 (= e!44472 (contains!707 (t!4939 (toList!705 lt!29039)) (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (= (and d!14459 res!36598) b!67880))

(assert (= (and b!67880 (not res!36597)) b!67881))

(declare-fun m!63291 () Bool)

(assert (=> d!14459 m!63291))

(declare-fun m!63293 () Bool)

(assert (=> d!14459 m!63293))

(declare-fun m!63295 () Bool)

(assert (=> b!67881 m!63295))

(assert (=> b!67001 d!14459))

(declare-fun d!14461 () Bool)

(assert (=> d!14461 (= (isDefined!82 (getValueByKey!128 (toList!705 lt!28492) (_1!1052 lt!28408))) (not (isEmpty!313 (getValueByKey!128 (toList!705 lt!28492) (_1!1052 lt!28408)))))))

(declare-fun bs!2916 () Bool)

(assert (= bs!2916 d!14461))

(assert (=> bs!2916 m!60609))

(declare-fun m!63297 () Bool)

(assert (=> bs!2916 m!63297))

(assert (=> b!66900 d!14461))

(assert (=> b!66900 d!13811))

(declare-fun b!67900 () Bool)

(declare-fun e!44486 () Bool)

(declare-fun e!44483 () Bool)

(assert (=> b!67900 (= e!44486 e!44483)))

(declare-fun res!36607 () Bool)

(declare-fun lt!29541 () SeekEntryResult!236)

(assert (=> b!67900 (= res!36607 (and ((_ is Intermediate!236) lt!29541) (not (undefined!1048 lt!29541)) (bvslt (x!10705 lt!29541) #b01111111111111111111111111111110) (bvsge (x!10705 lt!29541) #b00000000000000000000000000000000) (bvsge (x!10705 lt!29541) #b00000000000000000000000000000000)))))

(assert (=> b!67900 (=> (not res!36607) (not e!44483))))

(declare-fun e!44485 () SeekEntryResult!236)

(declare-fun b!67901 () Bool)

(assert (=> b!67901 (= e!44485 (Intermediate!236 true (toIndex!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (mask!6080 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun e!44487 () SeekEntryResult!236)

(declare-fun b!67902 () Bool)

(assert (=> b!67902 (= e!44487 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (mask!6080 newMap!16)) #b00000000000000000000000000000000 (mask!6080 newMap!16)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(declare-fun b!67903 () Bool)

(assert (=> b!67903 (= e!44485 e!44487)))

(declare-fun lt!29542 () (_ BitVec 64))

(declare-fun c!9544 () Bool)

(assert (=> b!67903 (= c!9544 (or (= lt!29542 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) (= (bvadd lt!29542 lt!29542) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67904 () Bool)

(assert (=> b!67904 (and (bvsge (index!3074 lt!29541) #b00000000000000000000000000000000) (bvslt (index!3074 lt!29541) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun res!36605 () Bool)

(assert (=> b!67904 (= res!36605 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3074 lt!29541)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44484 () Bool)

(assert (=> b!67904 (=> res!36605 e!44484)))

(declare-fun b!67905 () Bool)

(assert (=> b!67905 (and (bvsge (index!3074 lt!29541) #b00000000000000000000000000000000) (bvslt (index!3074 lt!29541) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun res!36606 () Bool)

(assert (=> b!67905 (= res!36606 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3074 lt!29541)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> b!67905 (=> res!36606 e!44484)))

(assert (=> b!67905 (= e!44483 e!44484)))

(declare-fun b!67906 () Bool)

(assert (=> b!67906 (= e!44486 (bvsge (x!10705 lt!29541) #b01111111111111111111111111111110))))

(declare-fun b!67907 () Bool)

(assert (=> b!67907 (= e!44487 (Intermediate!236 false (toIndex!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (mask!6080 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun d!14463 () Bool)

(assert (=> d!14463 e!44486))

(declare-fun c!9546 () Bool)

(assert (=> d!14463 (= c!9546 (and ((_ is Intermediate!236) lt!29541) (undefined!1048 lt!29541)))))

(assert (=> d!14463 (= lt!29541 e!44485)))

(declare-fun c!9545 () Bool)

(assert (=> d!14463 (= c!9545 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!14463 (= lt!29542 (select (arr!1822 (_keys!3785 newMap!16)) (toIndex!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (mask!6080 newMap!16))))))

(assert (=> d!14463 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!14463 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (mask!6080 newMap!16)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (_keys!3785 newMap!16) (mask!6080 newMap!16)) lt!29541)))

(declare-fun b!67908 () Bool)

(assert (=> b!67908 (and (bvsge (index!3074 lt!29541) #b00000000000000000000000000000000) (bvslt (index!3074 lt!29541) (size!2058 (_keys!3785 newMap!16))))))

(assert (=> b!67908 (= e!44484 (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3074 lt!29541)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14463 c!9545) b!67901))

(assert (= (and d!14463 (not c!9545)) b!67903))

(assert (= (and b!67903 c!9544) b!67907))

(assert (= (and b!67903 (not c!9544)) b!67902))

(assert (= (and d!14463 c!9546) b!67906))

(assert (= (and d!14463 (not c!9546)) b!67900))

(assert (= (and b!67900 res!36607) b!67905))

(assert (= (and b!67905 (not res!36606)) b!67904))

(assert (= (and b!67904 (not res!36605)) b!67908))

(declare-fun m!63299 () Bool)

(assert (=> b!67905 m!63299))

(assert (=> b!67908 m!63299))

(assert (=> d!14463 m!60921))

(declare-fun m!63301 () Bool)

(assert (=> d!14463 m!63301))

(assert (=> d!14463 m!60845))

(assert (=> b!67904 m!63299))

(assert (=> b!67902 m!60921))

(declare-fun m!63303 () Bool)

(assert (=> b!67902 m!63303))

(assert (=> b!67902 m!63303))

(assert (=> b!67902 m!60449))

(declare-fun m!63305 () Bool)

(assert (=> b!67902 m!63305))

(assert (=> d!13693 d!14463))

(declare-fun d!14465 () Bool)

(declare-fun lt!29548 () (_ BitVec 32))

(declare-fun lt!29547 () (_ BitVec 32))

(assert (=> d!14465 (= lt!29548 (bvmul (bvxor lt!29547 (bvlshr lt!29547 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!14465 (= lt!29547 ((_ extract 31 0) (bvand (bvxor (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvlshr (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!14465 (and (bvsge (mask!6080 newMap!16) #b00000000000000000000000000000000) (let ((res!36608 (let ((h!2050 ((_ extract 31 0) (bvand (bvxor (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvlshr (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!10808 (bvmul (bvxor h!2050 (bvlshr h!2050 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!10808 (bvlshr x!10808 #b00000000000000000000000000001101)) (mask!6080 newMap!16)))))) (and (bvslt res!36608 (bvadd (mask!6080 newMap!16) #b00000000000000000000000000000001)) (bvsge res!36608 #b00000000000000000000000000000000))))))

(assert (=> d!14465 (= (toIndex!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (mask!6080 newMap!16)) (bvand (bvxor lt!29548 (bvlshr lt!29548 #b00000000000000000000000000001101)) (mask!6080 newMap!16)))))

(assert (=> d!13693 d!14465))

(assert (=> d!13693 d!13991))

(declare-fun bm!5715 () Bool)

(declare-fun call!5719 () List!1466)

(declare-fun call!5720 () List!1466)

(assert (=> bm!5715 (= call!5719 call!5720)))

(declare-fun d!14467 () Bool)

(declare-fun e!44489 () Bool)

(assert (=> d!14467 e!44489))

(declare-fun res!36610 () Bool)

(assert (=> d!14467 (=> (not res!36610) (not e!44489))))

(declare-fun lt!29549 () List!1466)

(assert (=> d!14467 (= res!36610 (isStrictlySorted!284 lt!29549))))

(declare-fun e!44490 () List!1466)

(assert (=> d!14467 (= lt!29549 e!44490)))

(declare-fun c!9548 () Bool)

(assert (=> d!14467 (= c!9548 (and ((_ is Cons!1462) (t!4939 (toList!705 (+!87 lt!28402 lt!28408)))) (bvslt (_1!1052 (h!2046 (t!4939 (toList!705 (+!87 lt!28402 lt!28408))))) (_1!1052 lt!28403))))))

(assert (=> d!14467 (isStrictlySorted!284 (t!4939 (toList!705 (+!87 lt!28402 lt!28408))))))

(assert (=> d!14467 (= (insertStrictlySorted!51 (t!4939 (toList!705 (+!87 lt!28402 lt!28408))) (_1!1052 lt!28403) (_2!1052 lt!28403)) lt!29549)))

(declare-fun b!67909 () Bool)

(declare-fun c!9547 () Bool)

(assert (=> b!67909 (= c!9547 (and ((_ is Cons!1462) (t!4939 (toList!705 (+!87 lt!28402 lt!28408)))) (bvsgt (_1!1052 (h!2046 (t!4939 (toList!705 (+!87 lt!28402 lt!28408))))) (_1!1052 lt!28403))))))

(declare-fun e!44491 () List!1466)

(declare-fun e!44488 () List!1466)

(assert (=> b!67909 (= e!44491 e!44488)))

(declare-fun c!9550 () Bool)

(declare-fun e!44492 () List!1466)

(declare-fun b!67910 () Bool)

(assert (=> b!67910 (= e!44492 (ite c!9550 (t!4939 (t!4939 (toList!705 (+!87 lt!28402 lt!28408)))) (ite c!9547 (Cons!1462 (h!2046 (t!4939 (toList!705 (+!87 lt!28402 lt!28408)))) (t!4939 (t!4939 (toList!705 (+!87 lt!28402 lt!28408))))) Nil!1463)))))

(declare-fun b!67911 () Bool)

(assert (=> b!67911 (= e!44490 e!44491)))

(assert (=> b!67911 (= c!9550 (and ((_ is Cons!1462) (t!4939 (toList!705 (+!87 lt!28402 lt!28408)))) (= (_1!1052 (h!2046 (t!4939 (toList!705 (+!87 lt!28402 lt!28408))))) (_1!1052 lt!28403))))))

(declare-fun bm!5716 () Bool)

(declare-fun call!5718 () List!1466)

(assert (=> bm!5716 (= call!5720 call!5718)))

(declare-fun b!67912 () Bool)

(assert (=> b!67912 (= e!44492 (insertStrictlySorted!51 (t!4939 (t!4939 (toList!705 (+!87 lt!28402 lt!28408)))) (_1!1052 lt!28403) (_2!1052 lt!28403)))))

(declare-fun b!67913 () Bool)

(assert (=> b!67913 (= e!44489 (contains!707 lt!29549 (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(declare-fun b!67914 () Bool)

(assert (=> b!67914 (= e!44491 call!5720)))

(declare-fun b!67915 () Bool)

(assert (=> b!67915 (= e!44490 call!5718)))

(declare-fun b!67916 () Bool)

(declare-fun res!36609 () Bool)

(assert (=> b!67916 (=> (not res!36609) (not e!44489))))

(assert (=> b!67916 (= res!36609 (containsKey!132 lt!29549 (_1!1052 lt!28403)))))

(declare-fun b!67917 () Bool)

(assert (=> b!67917 (= e!44488 call!5719)))

(declare-fun b!67918 () Bool)

(assert (=> b!67918 (= e!44488 call!5719)))

(declare-fun bm!5717 () Bool)

(assert (=> bm!5717 (= call!5718 ($colon$colon!62 e!44492 (ite c!9548 (h!2046 (t!4939 (toList!705 (+!87 lt!28402 lt!28408)))) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403)))))))

(declare-fun c!9549 () Bool)

(assert (=> bm!5717 (= c!9549 c!9548)))

(assert (= (and d!14467 c!9548) b!67915))

(assert (= (and d!14467 (not c!9548)) b!67911))

(assert (= (and b!67911 c!9550) b!67914))

(assert (= (and b!67911 (not c!9550)) b!67909))

(assert (= (and b!67909 c!9547) b!67918))

(assert (= (and b!67909 (not c!9547)) b!67917))

(assert (= (or b!67918 b!67917) bm!5715))

(assert (= (or b!67914 bm!5715) bm!5716))

(assert (= (or b!67915 bm!5716) bm!5717))

(assert (= (and bm!5717 c!9549) b!67912))

(assert (= (and bm!5717 (not c!9549)) b!67910))

(assert (= (and d!14467 res!36610) b!67916))

(assert (= (and b!67916 res!36609) b!67913))

(declare-fun m!63307 () Bool)

(assert (=> d!14467 m!63307))

(assert (=> d!14467 m!62363))

(declare-fun m!63309 () Bool)

(assert (=> b!67916 m!63309))

(declare-fun m!63311 () Bool)

(assert (=> b!67913 m!63311))

(declare-fun m!63313 () Bool)

(assert (=> bm!5717 m!63313))

(declare-fun m!63315 () Bool)

(assert (=> b!67912 m!63315))

(assert (=> b!66937 d!14467))

(declare-fun d!14469 () Bool)

(assert (=> d!14469 (isDefined!82 (getValueByKey!128 (toList!705 call!5520) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun lt!29550 () Unit!1818)

(assert (=> d!14469 (= lt!29550 (choose!384 (toList!705 call!5520) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(declare-fun e!44493 () Bool)

(assert (=> d!14469 e!44493))

(declare-fun res!36611 () Bool)

(assert (=> d!14469 (=> (not res!36611) (not e!44493))))

(assert (=> d!14469 (= res!36611 (isStrictlySorted!284 (toList!705 call!5520)))))

(assert (=> d!14469 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 call!5520) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) lt!29550)))

(declare-fun b!67919 () Bool)

(assert (=> b!67919 (= e!44493 (containsKey!132 (toList!705 call!5520) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (= (and d!14469 res!36611) b!67919))

(assert (=> d!14469 m!60449))

(assert (=> d!14469 m!61411))

(assert (=> d!14469 m!61411))

(assert (=> d!14469 m!61413))

(assert (=> d!14469 m!60449))

(declare-fun m!63317 () Bool)

(assert (=> d!14469 m!63317))

(declare-fun m!63319 () Bool)

(assert (=> d!14469 m!63319))

(assert (=> b!67919 m!60449))

(assert (=> b!67919 m!61407))

(assert (=> b!66892 d!14469))

(assert (=> b!66892 d!14339))

(assert (=> b!66892 d!14341))

(declare-fun b!67923 () Bool)

(declare-fun e!44495 () Option!134)

(assert (=> b!67923 (= e!44495 None!132)))

(declare-fun b!67922 () Bool)

(assert (=> b!67922 (= e!44495 (getValueByKey!128 (t!4939 (t!4939 lt!28527)) (_1!1052 lt!28403)))))

(declare-fun b!67920 () Bool)

(declare-fun e!44494 () Option!134)

(assert (=> b!67920 (= e!44494 (Some!133 (_2!1052 (h!2046 (t!4939 lt!28527)))))))

(declare-fun d!14471 () Bool)

(declare-fun c!9551 () Bool)

(assert (=> d!14471 (= c!9551 (and ((_ is Cons!1462) (t!4939 lt!28527)) (= (_1!1052 (h!2046 (t!4939 lt!28527))) (_1!1052 lt!28403))))))

(assert (=> d!14471 (= (getValueByKey!128 (t!4939 lt!28527) (_1!1052 lt!28403)) e!44494)))

(declare-fun b!67921 () Bool)

(assert (=> b!67921 (= e!44494 e!44495)))

(declare-fun c!9552 () Bool)

(assert (=> b!67921 (= c!9552 (and ((_ is Cons!1462) (t!4939 lt!28527)) (not (= (_1!1052 (h!2046 (t!4939 lt!28527))) (_1!1052 lt!28403)))))))

(assert (= (and d!14471 c!9551) b!67920))

(assert (= (and d!14471 (not c!9551)) b!67921))

(assert (= (and b!67921 c!9552) b!67922))

(assert (= (and b!67921 (not c!9552)) b!67923))

(declare-fun m!63321 () Bool)

(assert (=> b!67922 m!63321))

(assert (=> b!66930 d!14471))

(assert (=> d!13747 d!13767))

(declare-fun d!14473 () Bool)

(assert (=> d!14473 (= (apply!72 (+!87 lt!28677 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!28681) (apply!72 lt!28677 lt!28681))))

(assert (=> d!14473 true))

(declare-fun _$34!788 () Unit!1818)

(assert (=> d!14473 (= (choose!377 lt!28677 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))) lt!28681) _$34!788)))

(declare-fun bs!2917 () Bool)

(assert (= bs!2917 d!14473))

(assert (=> bs!2917 m!60767))

(assert (=> bs!2917 m!60767))

(assert (=> bs!2917 m!60769))

(assert (=> bs!2917 m!60771))

(assert (=> d!13747 d!14473))

(assert (=> d!13747 d!13761))

(assert (=> d!13747 d!13755))

(declare-fun d!14475 () Bool)

(declare-fun e!44496 () Bool)

(assert (=> d!14475 e!44496))

(declare-fun res!36612 () Bool)

(assert (=> d!14475 (=> res!36612 e!44496)))

(declare-fun lt!29554 () Bool)

(assert (=> d!14475 (= res!36612 (not lt!29554))))

(declare-fun lt!29553 () Bool)

(assert (=> d!14475 (= lt!29554 lt!29553)))

(declare-fun lt!29551 () Unit!1818)

(declare-fun e!44497 () Unit!1818)

(assert (=> d!14475 (= lt!29551 e!44497)))

(declare-fun c!9553 () Bool)

(assert (=> d!14475 (= c!9553 lt!29553)))

(assert (=> d!14475 (= lt!29553 (containsKey!132 (toList!705 lt!28677) lt!28681))))

(assert (=> d!14475 (= (contains!705 lt!28677 lt!28681) lt!29554)))

(declare-fun b!67924 () Bool)

(declare-fun lt!29552 () Unit!1818)

(assert (=> b!67924 (= e!44497 lt!29552)))

(assert (=> b!67924 (= lt!29552 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28677) lt!28681))))

(assert (=> b!67924 (isDefined!82 (getValueByKey!128 (toList!705 lt!28677) lt!28681))))

(declare-fun b!67925 () Bool)

(declare-fun Unit!1890 () Unit!1818)

(assert (=> b!67925 (= e!44497 Unit!1890)))

(declare-fun b!67926 () Bool)

(assert (=> b!67926 (= e!44496 (isDefined!82 (getValueByKey!128 (toList!705 lt!28677) lt!28681)))))

(assert (= (and d!14475 c!9553) b!67924))

(assert (= (and d!14475 (not c!9553)) b!67925))

(assert (= (and d!14475 (not res!36612)) b!67926))

(declare-fun m!63323 () Bool)

(assert (=> d!14475 m!63323))

(declare-fun m!63325 () Bool)

(assert (=> b!67924 m!63325))

(assert (=> b!67924 m!61195))

(assert (=> b!67924 m!61195))

(declare-fun m!63327 () Bool)

(assert (=> b!67924 m!63327))

(assert (=> b!67926 m!61195))

(assert (=> b!67926 m!61195))

(assert (=> b!67926 m!63327))

(assert (=> d!13747 d!14475))

(declare-fun d!14477 () Bool)

(assert (=> d!14477 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))) lt!28519))))

(declare-fun lt!29555 () Unit!1818)

(assert (=> d!14477 (= lt!29555 (choose!384 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))) lt!28519))))

(declare-fun e!44498 () Bool)

(assert (=> d!14477 e!44498))

(declare-fun res!36613 () Bool)

(assert (=> d!14477 (=> (not res!36613) (not e!44498))))

(assert (=> d!14477 (= res!36613 (isStrictlySorted!284 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)))))))

(assert (=> d!14477 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))) lt!28519) lt!29555)))

(declare-fun b!67927 () Bool)

(assert (=> b!67927 (= e!44498 (containsKey!132 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))) lt!28519))))

(assert (= (and d!14477 res!36613) b!67927))

(assert (=> d!14477 m!60993))

(assert (=> d!14477 m!60993))

(assert (=> d!14477 m!60995))

(declare-fun m!63329 () Bool)

(assert (=> d!14477 m!63329))

(declare-fun m!63331 () Bool)

(assert (=> d!14477 m!63331))

(assert (=> b!67927 m!60989))

(assert (=> b!66619 d!14477))

(assert (=> b!66619 d!14345))

(assert (=> b!66619 d!14347))

(declare-fun d!14479 () Bool)

(declare-fun c!9554 () Bool)

(assert (=> d!14479 (= c!9554 ((_ is Nil!1463) (toList!705 lt!28496)))))

(declare-fun e!44499 () (InoxSet tuple2!2082))

(assert (=> d!14479 (= (content!71 (toList!705 lt!28496)) e!44499)))

(declare-fun b!67928 () Bool)

(assert (=> b!67928 (= e!44499 ((as const (Array tuple2!2082 Bool)) false))))

(declare-fun b!67929 () Bool)

(assert (=> b!67929 (= e!44499 ((_ map or) (store ((as const (Array tuple2!2082 Bool)) false) (h!2046 (toList!705 lt!28496)) true) (content!71 (t!4939 (toList!705 lt!28496)))))))

(assert (= (and d!14479 c!9554) b!67928))

(assert (= (and d!14479 (not c!9554)) b!67929))

(declare-fun m!63333 () Bool)

(assert (=> b!67929 m!63333))

(declare-fun m!63335 () Bool)

(assert (=> b!67929 m!63335))

(assert (=> d!13681 d!14479))

(declare-fun lt!29556 () Bool)

(declare-fun d!14481 () Bool)

(assert (=> d!14481 (= lt!29556 (select (content!71 (toList!705 lt!28891)) (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun e!44500 () Bool)

(assert (=> d!14481 (= lt!29556 e!44500)))

(declare-fun res!36615 () Bool)

(assert (=> d!14481 (=> (not res!36615) (not e!44500))))

(assert (=> d!14481 (= res!36615 ((_ is Cons!1462) (toList!705 lt!28891)))))

(assert (=> d!14481 (= (contains!707 (toList!705 lt!28891) (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!29556)))

(declare-fun b!67930 () Bool)

(declare-fun e!44501 () Bool)

(assert (=> b!67930 (= e!44500 e!44501)))

(declare-fun res!36614 () Bool)

(assert (=> b!67930 (=> res!36614 e!44501)))

(assert (=> b!67930 (= res!36614 (= (h!2046 (toList!705 lt!28891)) (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!67931 () Bool)

(assert (=> b!67931 (= e!44501 (contains!707 (t!4939 (toList!705 lt!28891)) (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!14481 res!36615) b!67930))

(assert (= (and b!67930 (not res!36614)) b!67931))

(declare-fun m!63337 () Bool)

(assert (=> d!14481 m!63337))

(declare-fun m!63339 () Bool)

(assert (=> d!14481 m!63339))

(declare-fun m!63341 () Bool)

(assert (=> b!67931 m!63341))

(assert (=> b!66761 d!14481))

(declare-fun d!14483 () Bool)

(assert (=> d!14483 (= (isEmpty!311 lt!28740) (isEmpty!312 (toList!705 lt!28740)))))

(declare-fun bs!2918 () Bool)

(assert (= bs!2918 d!14483))

(declare-fun m!63343 () Bool)

(assert (=> bs!2918 m!63343))

(assert (=> b!66604 d!14483))

(declare-fun d!14485 () Bool)

(declare-fun lt!29557 () Bool)

(assert (=> d!14485 (= lt!29557 (select (content!71 lt!28990) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(declare-fun e!44502 () Bool)

(assert (=> d!14485 (= lt!29557 e!44502)))

(declare-fun res!36617 () Bool)

(assert (=> d!14485 (=> (not res!36617) (not e!44502))))

(assert (=> d!14485 (= res!36617 ((_ is Cons!1462) lt!28990))))

(assert (=> d!14485 (= (contains!707 lt!28990 (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))) lt!29557)))

(declare-fun b!67932 () Bool)

(declare-fun e!44503 () Bool)

(assert (=> b!67932 (= e!44502 e!44503)))

(declare-fun res!36616 () Bool)

(assert (=> b!67932 (=> res!36616 e!44503)))

(assert (=> b!67932 (= res!36616 (= (h!2046 lt!28990) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(declare-fun b!67933 () Bool)

(assert (=> b!67933 (= e!44503 (contains!707 (t!4939 lt!28990) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(assert (= (and d!14485 res!36617) b!67932))

(assert (= (and b!67932 (not res!36616)) b!67933))

(declare-fun m!63345 () Bool)

(assert (=> d!14485 m!63345))

(declare-fun m!63347 () Bool)

(assert (=> d!14485 m!63347))

(declare-fun m!63349 () Bool)

(assert (=> b!67933 m!63349))

(assert (=> b!66911 d!14485))

(assert (=> b!66873 d!13959))

(declare-fun b!67937 () Bool)

(declare-fun e!44505 () Option!134)

(assert (=> b!67937 (= e!44505 None!132)))

(declare-fun b!67936 () Bool)

(assert (=> b!67936 (= e!44505 (getValueByKey!128 (t!4939 (toList!705 lt!28764)) (_1!1052 (tuple2!2083 lt!28517 lt!28516))))))

(declare-fun b!67934 () Bool)

(declare-fun e!44504 () Option!134)

(assert (=> b!67934 (= e!44504 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28764)))))))

(declare-fun d!14487 () Bool)

(declare-fun c!9555 () Bool)

(assert (=> d!14487 (= c!9555 (and ((_ is Cons!1462) (toList!705 lt!28764)) (= (_1!1052 (h!2046 (toList!705 lt!28764))) (_1!1052 (tuple2!2083 lt!28517 lt!28516)))))))

(assert (=> d!14487 (= (getValueByKey!128 (toList!705 lt!28764) (_1!1052 (tuple2!2083 lt!28517 lt!28516))) e!44504)))

(declare-fun b!67935 () Bool)

(assert (=> b!67935 (= e!44504 e!44505)))

(declare-fun c!9556 () Bool)

(assert (=> b!67935 (= c!9556 (and ((_ is Cons!1462) (toList!705 lt!28764)) (not (= (_1!1052 (h!2046 (toList!705 lt!28764))) (_1!1052 (tuple2!2083 lt!28517 lt!28516))))))))

(assert (= (and d!14487 c!9555) b!67934))

(assert (= (and d!14487 (not c!9555)) b!67935))

(assert (= (and b!67935 c!9556) b!67936))

(assert (= (and b!67935 (not c!9556)) b!67937))

(declare-fun m!63351 () Bool)

(assert (=> b!67936 m!63351))

(assert (=> b!66628 d!14487))

(assert (=> d!13803 d!13991))

(declare-fun d!14489 () Bool)

(declare-fun res!36618 () Bool)

(declare-fun e!44506 () Bool)

(assert (=> d!14489 (=> res!36618 e!44506)))

(assert (=> d!14489 (= res!36618 (and ((_ is Cons!1462) (toList!705 lt!28525)) (= (_1!1052 (h!2046 (toList!705 lt!28525))) (_1!1052 lt!28403))))))

(assert (=> d!14489 (= (containsKey!132 (toList!705 lt!28525) (_1!1052 lt!28403)) e!44506)))

(declare-fun b!67938 () Bool)

(declare-fun e!44507 () Bool)

(assert (=> b!67938 (= e!44506 e!44507)))

(declare-fun res!36619 () Bool)

(assert (=> b!67938 (=> (not res!36619) (not e!44507))))

(assert (=> b!67938 (= res!36619 (and (or (not ((_ is Cons!1462) (toList!705 lt!28525))) (bvsle (_1!1052 (h!2046 (toList!705 lt!28525))) (_1!1052 lt!28403))) ((_ is Cons!1462) (toList!705 lt!28525)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28525))) (_1!1052 lt!28403))))))

(declare-fun b!67939 () Bool)

(assert (=> b!67939 (= e!44507 (containsKey!132 (t!4939 (toList!705 lt!28525)) (_1!1052 lt!28403)))))

(assert (= (and d!14489 (not res!36618)) b!67938))

(assert (= (and b!67938 res!36619) b!67939))

(declare-fun m!63353 () Bool)

(assert (=> b!67939 m!63353))

(assert (=> d!13841 d!14489))

(assert (=> d!13879 d!13875))

(assert (=> d!13879 d!13873))

(assert (=> d!13879 d!13877))

(assert (=> d!13879 d!13881))

(declare-fun d!14491 () Bool)

(declare-fun lt!29558 () Bool)

(assert (=> d!14491 (= lt!29558 (select (content!71 (t!4939 (toList!705 lt!28496))) lt!28408))))

(declare-fun e!44508 () Bool)

(assert (=> d!14491 (= lt!29558 e!44508)))

(declare-fun res!36621 () Bool)

(assert (=> d!14491 (=> (not res!36621) (not e!44508))))

(assert (=> d!14491 (= res!36621 ((_ is Cons!1462) (t!4939 (toList!705 lt!28496))))))

(assert (=> d!14491 (= (contains!707 (t!4939 (toList!705 lt!28496)) lt!28408) lt!29558)))

(declare-fun b!67940 () Bool)

(declare-fun e!44509 () Bool)

(assert (=> b!67940 (= e!44508 e!44509)))

(declare-fun res!36620 () Bool)

(assert (=> b!67940 (=> res!36620 e!44509)))

(assert (=> b!67940 (= res!36620 (= (h!2046 (t!4939 (toList!705 lt!28496))) lt!28408))))

(declare-fun b!67941 () Bool)

(assert (=> b!67941 (= e!44509 (contains!707 (t!4939 (t!4939 (toList!705 lt!28496))) lt!28408))))

(assert (= (and d!14491 res!36621) b!67940))

(assert (= (and b!67940 (not res!36620)) b!67941))

(assert (=> d!14491 m!63335))

(declare-fun m!63355 () Bool)

(assert (=> d!14491 m!63355))

(declare-fun m!63357 () Bool)

(assert (=> b!67941 m!63357))

(assert (=> b!66544 d!14491))

(declare-fun d!14493 () Bool)

(declare-fun res!36622 () Bool)

(declare-fun e!44510 () Bool)

(assert (=> d!14493 (=> res!36622 e!44510)))

(assert (=> d!14493 (= res!36622 (= (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!14493 (= (arrayContainsKey!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!44510)))

(declare-fun b!67942 () Bool)

(declare-fun e!44511 () Bool)

(assert (=> b!67942 (= e!44510 e!44511)))

(declare-fun res!36623 () Bool)

(assert (=> b!67942 (=> (not res!36623) (not e!44511))))

(assert (=> b!67942 (= res!36623 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!67943 () Bool)

(assert (=> b!67943 (= e!44511 (arrayContainsKey!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14493 (not res!36622)) b!67942))

(assert (= (and b!67942 res!36623) b!67943))

(assert (=> d!14493 m!63107))

(assert (=> b!67943 m!60449))

(declare-fun m!63359 () Bool)

(assert (=> b!67943 m!63359))

(assert (=> b!66809 d!14493))

(declare-fun d!14495 () Bool)

(declare-fun e!44512 () Bool)

(assert (=> d!14495 e!44512))

(declare-fun res!36624 () Bool)

(assert (=> d!14495 (=> res!36624 e!44512)))

(declare-fun lt!29562 () Bool)

(assert (=> d!14495 (= res!36624 (not lt!29562))))

(declare-fun lt!29561 () Bool)

(assert (=> d!14495 (= lt!29562 lt!29561)))

(declare-fun lt!29559 () Unit!1818)

(declare-fun e!44513 () Unit!1818)

(assert (=> d!14495 (= lt!29559 e!44513)))

(declare-fun c!9557 () Bool)

(assert (=> d!14495 (= c!9557 lt!29561)))

(assert (=> d!14495 (= lt!29561 (containsKey!132 (toList!705 lt!28764) (_1!1052 (tuple2!2083 lt!28517 lt!28516))))))

(assert (=> d!14495 (= (contains!705 lt!28764 (_1!1052 (tuple2!2083 lt!28517 lt!28516))) lt!29562)))

(declare-fun b!67944 () Bool)

(declare-fun lt!29560 () Unit!1818)

(assert (=> b!67944 (= e!44513 lt!29560)))

(assert (=> b!67944 (= lt!29560 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28764) (_1!1052 (tuple2!2083 lt!28517 lt!28516))))))

(assert (=> b!67944 (isDefined!82 (getValueByKey!128 (toList!705 lt!28764) (_1!1052 (tuple2!2083 lt!28517 lt!28516))))))

(declare-fun b!67945 () Bool)

(declare-fun Unit!1891 () Unit!1818)

(assert (=> b!67945 (= e!44513 Unit!1891)))

(declare-fun b!67946 () Bool)

(assert (=> b!67946 (= e!44512 (isDefined!82 (getValueByKey!128 (toList!705 lt!28764) (_1!1052 (tuple2!2083 lt!28517 lt!28516)))))))

(assert (= (and d!14495 c!9557) b!67944))

(assert (= (and d!14495 (not c!9557)) b!67945))

(assert (= (and d!14495 (not res!36624)) b!67946))

(declare-fun m!63361 () Bool)

(assert (=> d!14495 m!63361))

(declare-fun m!63363 () Bool)

(assert (=> b!67944 m!63363))

(assert (=> b!67944 m!61021))

(assert (=> b!67944 m!61021))

(declare-fun m!63365 () Bool)

(assert (=> b!67944 m!63365))

(assert (=> b!67946 m!61021))

(assert (=> b!67946 m!61021))

(assert (=> b!67946 m!63365))

(assert (=> d!13713 d!14495))

(declare-fun b!67950 () Bool)

(declare-fun e!44515 () Option!134)

(assert (=> b!67950 (= e!44515 None!132)))

(declare-fun b!67949 () Bool)

(assert (=> b!67949 (= e!44515 (getValueByKey!128 (t!4939 lt!28766) (_1!1052 (tuple2!2083 lt!28517 lt!28516))))))

(declare-fun b!67947 () Bool)

(declare-fun e!44514 () Option!134)

(assert (=> b!67947 (= e!44514 (Some!133 (_2!1052 (h!2046 lt!28766))))))

(declare-fun c!9558 () Bool)

(declare-fun d!14497 () Bool)

(assert (=> d!14497 (= c!9558 (and ((_ is Cons!1462) lt!28766) (= (_1!1052 (h!2046 lt!28766)) (_1!1052 (tuple2!2083 lt!28517 lt!28516)))))))

(assert (=> d!14497 (= (getValueByKey!128 lt!28766 (_1!1052 (tuple2!2083 lt!28517 lt!28516))) e!44514)))

(declare-fun b!67948 () Bool)

(assert (=> b!67948 (= e!44514 e!44515)))

(declare-fun c!9559 () Bool)

(assert (=> b!67948 (= c!9559 (and ((_ is Cons!1462) lt!28766) (not (= (_1!1052 (h!2046 lt!28766)) (_1!1052 (tuple2!2083 lt!28517 lt!28516))))))))

(assert (= (and d!14497 c!9558) b!67947))

(assert (= (and d!14497 (not c!9558)) b!67948))

(assert (= (and b!67948 c!9559) b!67949))

(assert (= (and b!67948 (not c!9559)) b!67950))

(declare-fun m!63367 () Bool)

(assert (=> b!67949 m!63367))

(assert (=> d!13713 d!14497))

(declare-fun d!14499 () Bool)

(assert (=> d!14499 (= (getValueByKey!128 lt!28766 (_1!1052 (tuple2!2083 lt!28517 lt!28516))) (Some!133 (_2!1052 (tuple2!2083 lt!28517 lt!28516))))))

(declare-fun lt!29563 () Unit!1818)

(assert (=> d!14499 (= lt!29563 (choose!375 lt!28766 (_1!1052 (tuple2!2083 lt!28517 lt!28516)) (_2!1052 (tuple2!2083 lt!28517 lt!28516))))))

(declare-fun e!44516 () Bool)

(assert (=> d!14499 e!44516))

(declare-fun res!36625 () Bool)

(assert (=> d!14499 (=> (not res!36625) (not e!44516))))

(assert (=> d!14499 (= res!36625 (isStrictlySorted!284 lt!28766))))

(assert (=> d!14499 (= (lemmaContainsTupThenGetReturnValue!48 lt!28766 (_1!1052 (tuple2!2083 lt!28517 lt!28516)) (_2!1052 (tuple2!2083 lt!28517 lt!28516))) lt!29563)))

(declare-fun b!67951 () Bool)

(declare-fun res!36626 () Bool)

(assert (=> b!67951 (=> (not res!36626) (not e!44516))))

(assert (=> b!67951 (= res!36626 (containsKey!132 lt!28766 (_1!1052 (tuple2!2083 lt!28517 lt!28516))))))

(declare-fun b!67952 () Bool)

(assert (=> b!67952 (= e!44516 (contains!707 lt!28766 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28517 lt!28516)) (_2!1052 (tuple2!2083 lt!28517 lt!28516)))))))

(assert (= (and d!14499 res!36625) b!67951))

(assert (= (and b!67951 res!36626) b!67952))

(assert (=> d!14499 m!61015))

(declare-fun m!63369 () Bool)

(assert (=> d!14499 m!63369))

(declare-fun m!63371 () Bool)

(assert (=> d!14499 m!63371))

(declare-fun m!63373 () Bool)

(assert (=> b!67951 m!63373))

(declare-fun m!63375 () Bool)

(assert (=> b!67952 m!63375))

(assert (=> d!13713 d!14499))

(declare-fun bm!5718 () Bool)

(declare-fun call!5722 () List!1466)

(declare-fun call!5723 () List!1466)

(assert (=> bm!5718 (= call!5722 call!5723)))

(declare-fun d!14501 () Bool)

(declare-fun e!44518 () Bool)

(assert (=> d!14501 e!44518))

(declare-fun res!36628 () Bool)

(assert (=> d!14501 (=> (not res!36628) (not e!44518))))

(declare-fun lt!29564 () List!1466)

(assert (=> d!14501 (= res!36628 (isStrictlySorted!284 lt!29564))))

(declare-fun e!44519 () List!1466)

(assert (=> d!14501 (= lt!29564 e!44519)))

(declare-fun c!9561 () Bool)

(assert (=> d!14501 (= c!9561 (and ((_ is Cons!1462) (toList!705 lt!28515)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28515))) (_1!1052 (tuple2!2083 lt!28517 lt!28516)))))))

(assert (=> d!14501 (isStrictlySorted!284 (toList!705 lt!28515))))

(assert (=> d!14501 (= (insertStrictlySorted!51 (toList!705 lt!28515) (_1!1052 (tuple2!2083 lt!28517 lt!28516)) (_2!1052 (tuple2!2083 lt!28517 lt!28516))) lt!29564)))

(declare-fun c!9560 () Bool)

(declare-fun b!67953 () Bool)

(assert (=> b!67953 (= c!9560 (and ((_ is Cons!1462) (toList!705 lt!28515)) (bvsgt (_1!1052 (h!2046 (toList!705 lt!28515))) (_1!1052 (tuple2!2083 lt!28517 lt!28516)))))))

(declare-fun e!44520 () List!1466)

(declare-fun e!44517 () List!1466)

(assert (=> b!67953 (= e!44520 e!44517)))

(declare-fun e!44521 () List!1466)

(declare-fun b!67954 () Bool)

(declare-fun c!9563 () Bool)

(assert (=> b!67954 (= e!44521 (ite c!9563 (t!4939 (toList!705 lt!28515)) (ite c!9560 (Cons!1462 (h!2046 (toList!705 lt!28515)) (t!4939 (toList!705 lt!28515))) Nil!1463)))))

(declare-fun b!67955 () Bool)

(assert (=> b!67955 (= e!44519 e!44520)))

(assert (=> b!67955 (= c!9563 (and ((_ is Cons!1462) (toList!705 lt!28515)) (= (_1!1052 (h!2046 (toList!705 lt!28515))) (_1!1052 (tuple2!2083 lt!28517 lt!28516)))))))

(declare-fun bm!5719 () Bool)

(declare-fun call!5721 () List!1466)

(assert (=> bm!5719 (= call!5723 call!5721)))

(declare-fun b!67956 () Bool)

(assert (=> b!67956 (= e!44521 (insertStrictlySorted!51 (t!4939 (toList!705 lt!28515)) (_1!1052 (tuple2!2083 lt!28517 lt!28516)) (_2!1052 (tuple2!2083 lt!28517 lt!28516))))))

(declare-fun b!67957 () Bool)

(assert (=> b!67957 (= e!44518 (contains!707 lt!29564 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28517 lt!28516)) (_2!1052 (tuple2!2083 lt!28517 lt!28516)))))))

(declare-fun b!67958 () Bool)

(assert (=> b!67958 (= e!44520 call!5723)))

(declare-fun b!67959 () Bool)

(assert (=> b!67959 (= e!44519 call!5721)))

(declare-fun b!67960 () Bool)

(declare-fun res!36627 () Bool)

(assert (=> b!67960 (=> (not res!36627) (not e!44518))))

(assert (=> b!67960 (= res!36627 (containsKey!132 lt!29564 (_1!1052 (tuple2!2083 lt!28517 lt!28516))))))

(declare-fun b!67961 () Bool)

(assert (=> b!67961 (= e!44517 call!5722)))

(declare-fun b!67962 () Bool)

(assert (=> b!67962 (= e!44517 call!5722)))

(declare-fun bm!5720 () Bool)

(assert (=> bm!5720 (= call!5721 ($colon$colon!62 e!44521 (ite c!9561 (h!2046 (toList!705 lt!28515)) (tuple2!2083 (_1!1052 (tuple2!2083 lt!28517 lt!28516)) (_2!1052 (tuple2!2083 lt!28517 lt!28516))))))))

(declare-fun c!9562 () Bool)

(assert (=> bm!5720 (= c!9562 c!9561)))

(assert (= (and d!14501 c!9561) b!67959))

(assert (= (and d!14501 (not c!9561)) b!67955))

(assert (= (and b!67955 c!9563) b!67958))

(assert (= (and b!67955 (not c!9563)) b!67953))

(assert (= (and b!67953 c!9560) b!67962))

(assert (= (and b!67953 (not c!9560)) b!67961))

(assert (= (or b!67962 b!67961) bm!5718))

(assert (= (or b!67958 bm!5718) bm!5719))

(assert (= (or b!67959 bm!5719) bm!5720))

(assert (= (and bm!5720 c!9562) b!67956))

(assert (= (and bm!5720 (not c!9562)) b!67954))

(assert (= (and d!14501 res!36628) b!67960))

(assert (= (and b!67960 res!36627) b!67957))

(declare-fun m!63377 () Bool)

(assert (=> d!14501 m!63377))

(declare-fun m!63379 () Bool)

(assert (=> d!14501 m!63379))

(declare-fun m!63381 () Bool)

(assert (=> b!67960 m!63381))

(declare-fun m!63383 () Bool)

(assert (=> b!67957 m!63383))

(declare-fun m!63385 () Bool)

(assert (=> bm!5720 m!63385))

(declare-fun m!63387 () Bool)

(assert (=> b!67956 m!63387))

(assert (=> d!13713 d!14501))

(declare-fun d!14503 () Bool)

(assert (=> d!14503 (= (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28668)) (v!2475 (getValueByKey!128 (toList!705 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28668)))))

(assert (=> d!13759 d!14503))

(declare-fun b!67966 () Bool)

(declare-fun e!44523 () Option!134)

(assert (=> b!67966 (= e!44523 None!132)))

(declare-fun b!67965 () Bool)

(assert (=> b!67965 (= e!44523 (getValueByKey!128 (t!4939 (toList!705 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) lt!28668))))

(declare-fun b!67963 () Bool)

(declare-fun e!44522 () Option!134)

(assert (=> b!67963 (= e!44522 (Some!133 (_2!1052 (h!2046 (toList!705 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))))

(declare-fun c!9564 () Bool)

(declare-fun d!14505 () Bool)

(assert (=> d!14505 (= c!9564 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))) lt!28668)))))

(assert (=> d!14505 (= (getValueByKey!128 (toList!705 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28668) e!44522)))

(declare-fun b!67964 () Bool)

(assert (=> b!67964 (= e!44522 e!44523)))

(declare-fun c!9565 () Bool)

(assert (=> b!67964 (= c!9565 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) (not (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28670 (tuple2!2083 lt!28674 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))) lt!28668))))))

(assert (= (and d!14505 c!9564) b!67963))

(assert (= (and d!14505 (not c!9564)) b!67964))

(assert (= (and b!67964 c!9565) b!67965))

(assert (= (and b!67964 (not c!9565)) b!67966))

(declare-fun m!63389 () Bool)

(assert (=> b!67965 m!63389))

(assert (=> d!13759 d!14505))

(declare-fun d!14507 () Bool)

(declare-fun res!36629 () Bool)

(declare-fun e!44524 () Bool)

(assert (=> d!14507 (=> res!36629 e!44524)))

(assert (=> d!14507 (= res!36629 (and ((_ is Cons!1462) (toList!705 lt!28687)) (= (_1!1052 (h!2046 (toList!705 lt!28687))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14507 (= (containsKey!132 (toList!705 lt!28687) #b0000000000000000000000000000000000000000000000000000000000000000) e!44524)))

(declare-fun b!67967 () Bool)

(declare-fun e!44525 () Bool)

(assert (=> b!67967 (= e!44524 e!44525)))

(declare-fun res!36630 () Bool)

(assert (=> b!67967 (=> (not res!36630) (not e!44525))))

(assert (=> b!67967 (= res!36630 (and (or (not ((_ is Cons!1462) (toList!705 lt!28687))) (bvsle (_1!1052 (h!2046 (toList!705 lt!28687))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1462) (toList!705 lt!28687)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28687))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67968 () Bool)

(assert (=> b!67968 (= e!44525 (containsKey!132 (t!4939 (toList!705 lt!28687)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14507 (not res!36629)) b!67967))

(assert (= (and b!67967 res!36630) b!67968))

(declare-fun m!63391 () Bool)

(assert (=> b!67968 m!63391))

(assert (=> d!13819 d!14507))

(declare-fun d!14509 () Bool)

(assert (=> d!14509 (= (get!1123 (getValueByKey!128 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2475 (getValueByKey!128 (toList!705 lt!28687) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13689 d!14509))

(assert (=> d!13689 d!14117))

(declare-fun b!67969 () Bool)

(declare-fun e!44527 () Bool)

(declare-fun e!44529 () Bool)

(assert (=> b!67969 (= e!44527 e!44529)))

(declare-fun c!9566 () Bool)

(assert (=> b!67969 (= c!9566 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!67970 () Bool)

(declare-fun call!5724 () Bool)

(assert (=> b!67970 (= e!44529 call!5724)))

(declare-fun b!67971 () Bool)

(declare-fun e!44526 () Bool)

(assert (=> b!67971 (= e!44526 (contains!708 (ite c!9232 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!5721 () Bool)

(assert (=> bm!5721 (= call!5724 (arrayNoDuplicates!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9566 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!9232 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464))) (ite c!9232 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)))))))

(declare-fun b!67972 () Bool)

(declare-fun e!44528 () Bool)

(assert (=> b!67972 (= e!44528 e!44527)))

(declare-fun res!36631 () Bool)

(assert (=> b!67972 (=> (not res!36631) (not e!44527))))

(assert (=> b!67972 (= res!36631 (not e!44526))))

(declare-fun res!36632 () Bool)

(assert (=> b!67972 (=> (not res!36632) (not e!44526))))

(assert (=> b!67972 (= res!36632 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!14511 () Bool)

(declare-fun res!36633 () Bool)

(assert (=> d!14511 (=> res!36633 e!44528)))

(assert (=> d!14511 (= res!36633 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> d!14511 (= (arrayNoDuplicates!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9232 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464))) e!44528)))

(declare-fun b!67973 () Bool)

(assert (=> b!67973 (= e!44529 call!5724)))

(assert (= (and d!14511 (not res!36633)) b!67972))

(assert (= (and b!67972 res!36632) b!67971))

(assert (= (and b!67972 res!36631) b!67969))

(assert (= (and b!67969 c!9566) b!67973))

(assert (= (and b!67969 (not c!9566)) b!67970))

(assert (= (or b!67973 b!67970) bm!5721))

(declare-fun m!63393 () Bool)

(assert (=> b!67969 m!63393))

(assert (=> b!67969 m!63393))

(declare-fun m!63395 () Bool)

(assert (=> b!67969 m!63395))

(assert (=> b!67971 m!63393))

(assert (=> b!67971 m!63393))

(declare-fun m!63397 () Bool)

(assert (=> b!67971 m!63397))

(assert (=> bm!5721 m!63393))

(declare-fun m!63399 () Bool)

(assert (=> bm!5721 m!63399))

(assert (=> b!67972 m!63393))

(assert (=> b!67972 m!63393))

(assert (=> b!67972 m!63395))

(assert (=> bm!5580 d!14511))

(declare-fun d!14513 () Bool)

(declare-fun e!44530 () Bool)

(assert (=> d!14513 e!44530))

(declare-fun res!36634 () Bool)

(assert (=> d!14513 (=> res!36634 e!44530)))

(declare-fun lt!29568 () Bool)

(assert (=> d!14513 (= res!36634 (not lt!29568))))

(declare-fun lt!29567 () Bool)

(assert (=> d!14513 (= lt!29568 lt!29567)))

(declare-fun lt!29565 () Unit!1818)

(declare-fun e!44531 () Unit!1818)

(assert (=> d!14513 (= lt!29565 e!44531)))

(declare-fun c!9567 () Bool)

(assert (=> d!14513 (= c!9567 lt!29567)))

(assert (=> d!14513 (= lt!29567 (containsKey!132 (toList!705 lt!29039) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14513 (= (contains!705 lt!29039 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) lt!29568)))

(declare-fun b!67974 () Bool)

(declare-fun lt!29566 () Unit!1818)

(assert (=> b!67974 (= e!44531 lt!29566)))

(assert (=> b!67974 (= lt!29566 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!29039) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> b!67974 (isDefined!82 (getValueByKey!128 (toList!705 lt!29039) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!67975 () Bool)

(declare-fun Unit!1892 () Unit!1818)

(assert (=> b!67975 (= e!44531 Unit!1892)))

(declare-fun b!67976 () Bool)

(assert (=> b!67976 (= e!44530 (isDefined!82 (getValueByKey!128 (toList!705 lt!29039) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14513 c!9567) b!67974))

(assert (= (and d!14513 (not c!9567)) b!67975))

(assert (= (and d!14513 (not res!36634)) b!67976))

(declare-fun m!63401 () Bool)

(assert (=> d!14513 m!63401))

(declare-fun m!63403 () Bool)

(assert (=> b!67974 m!63403))

(assert (=> b!67974 m!61595))

(assert (=> b!67974 m!61595))

(declare-fun m!63405 () Bool)

(assert (=> b!67974 m!63405))

(assert (=> b!67976 m!61595))

(assert (=> b!67976 m!61595))

(assert (=> b!67976 m!63405))

(assert (=> d!13871 d!14513))

(declare-fun b!67980 () Bool)

(declare-fun e!44533 () Option!134)

(assert (=> b!67980 (= e!44533 None!132)))

(declare-fun b!67979 () Bool)

(assert (=> b!67979 (= e!44533 (getValueByKey!128 (t!4939 lt!29041) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!67977 () Bool)

(declare-fun e!44532 () Option!134)

(assert (=> b!67977 (= e!44532 (Some!133 (_2!1052 (h!2046 lt!29041))))))

(declare-fun d!14515 () Bool)

(declare-fun c!9568 () Bool)

(assert (=> d!14515 (= c!9568 (and ((_ is Cons!1462) lt!29041) (= (_1!1052 (h!2046 lt!29041)) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (=> d!14515 (= (getValueByKey!128 lt!29041 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) e!44532)))

(declare-fun b!67978 () Bool)

(assert (=> b!67978 (= e!44532 e!44533)))

(declare-fun c!9569 () Bool)

(assert (=> b!67978 (= c!9569 (and ((_ is Cons!1462) lt!29041) (not (= (_1!1052 (h!2046 lt!29041)) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))))

(assert (= (and d!14515 c!9568) b!67977))

(assert (= (and d!14515 (not c!9568)) b!67978))

(assert (= (and b!67978 c!9569) b!67979))

(assert (= (and b!67978 (not c!9569)) b!67980))

(declare-fun m!63407 () Bool)

(assert (=> b!67979 m!63407))

(assert (=> d!13871 d!14515))

(declare-fun d!14517 () Bool)

(assert (=> d!14517 (= (getValueByKey!128 lt!29041 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) (Some!133 (_2!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun lt!29569 () Unit!1818)

(assert (=> d!14517 (= lt!29569 (choose!375 lt!29041 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (_2!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun e!44534 () Bool)

(assert (=> d!14517 e!44534))

(declare-fun res!36635 () Bool)

(assert (=> d!14517 (=> (not res!36635) (not e!44534))))

(assert (=> d!14517 (= res!36635 (isStrictlySorted!284 lt!29041))))

(assert (=> d!14517 (= (lemmaContainsTupThenGetReturnValue!48 lt!29041 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (_2!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) lt!29569)))

(declare-fun b!67981 () Bool)

(declare-fun res!36636 () Bool)

(assert (=> b!67981 (=> (not res!36636) (not e!44534))))

(assert (=> b!67981 (= res!36636 (containsKey!132 lt!29041 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!67982 () Bool)

(assert (=> b!67982 (= e!44534 (contains!707 lt!29041 (tuple2!2083 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (_2!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14517 res!36635) b!67981))

(assert (= (and b!67981 res!36636) b!67982))

(assert (=> d!14517 m!61589))

(declare-fun m!63409 () Bool)

(assert (=> d!14517 m!63409))

(declare-fun m!63411 () Bool)

(assert (=> d!14517 m!63411))

(declare-fun m!63413 () Bool)

(assert (=> b!67981 m!63413))

(declare-fun m!63415 () Bool)

(assert (=> b!67982 m!63415))

(assert (=> d!13871 d!14517))

(declare-fun bm!5722 () Bool)

(declare-fun call!5726 () List!1466)

(declare-fun call!5727 () List!1466)

(assert (=> bm!5722 (= call!5726 call!5727)))

(declare-fun d!14519 () Bool)

(declare-fun e!44536 () Bool)

(assert (=> d!14519 e!44536))

(declare-fun res!36638 () Bool)

(assert (=> d!14519 (=> (not res!36638) (not e!44536))))

(declare-fun lt!29570 () List!1466)

(assert (=> d!14519 (= res!36638 (isStrictlySorted!284 lt!29570))))

(declare-fun e!44537 () List!1466)

(assert (=> d!14519 (= lt!29570 e!44537)))

(declare-fun c!9571 () Bool)

(assert (=> d!14519 (= c!9571 (and ((_ is Cons!1462) (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543)))) (bvslt (_1!1052 (h!2046 (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543))))) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (=> d!14519 (isStrictlySorted!284 (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543))))))

(assert (=> d!14519 (= (insertStrictlySorted!51 (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543))) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (_2!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) lt!29570)))

(declare-fun b!67983 () Bool)

(declare-fun c!9570 () Bool)

(assert (=> b!67983 (= c!9570 (and ((_ is Cons!1462) (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543)))) (bvsgt (_1!1052 (h!2046 (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543))))) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(declare-fun e!44538 () List!1466)

(declare-fun e!44535 () List!1466)

(assert (=> b!67983 (= e!44538 e!44535)))

(declare-fun e!44539 () List!1466)

(declare-fun c!9573 () Bool)

(declare-fun b!67984 () Bool)

(assert (=> b!67984 (= e!44539 (ite c!9573 (t!4939 (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543)))) (ite c!9570 (Cons!1462 (h!2046 (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543)))) (t!4939 (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543))))) Nil!1463)))))

(declare-fun b!67985 () Bool)

(assert (=> b!67985 (= e!44537 e!44538)))

(assert (=> b!67985 (= c!9573 (and ((_ is Cons!1462) (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543)))) (= (_1!1052 (h!2046 (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543))))) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(declare-fun bm!5723 () Bool)

(declare-fun call!5725 () List!1466)

(assert (=> bm!5723 (= call!5727 call!5725)))

(declare-fun b!67986 () Bool)

(assert (=> b!67986 (= e!44539 (insertStrictlySorted!51 (t!4939 (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543)))) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (_2!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!67987 () Bool)

(assert (=> b!67987 (= e!44536 (contains!707 lt!29570 (tuple2!2083 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (_2!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(declare-fun b!67988 () Bool)

(assert (=> b!67988 (= e!44538 call!5727)))

(declare-fun b!67989 () Bool)

(assert (=> b!67989 (= e!44537 call!5725)))

(declare-fun b!67990 () Bool)

(declare-fun res!36637 () Bool)

(assert (=> b!67990 (=> (not res!36637) (not e!44536))))

(assert (=> b!67990 (= res!36637 (containsKey!132 lt!29570 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!67991 () Bool)

(assert (=> b!67991 (= e!44535 call!5726)))

(declare-fun b!67992 () Bool)

(assert (=> b!67992 (= e!44535 call!5726)))

(declare-fun bm!5724 () Bool)

(assert (=> bm!5724 (= call!5725 ($colon$colon!62 e!44539 (ite c!9571 (h!2046 (toList!705 (ite c!9161 call!5544 (ite c!9160 call!5546 call!5543)))) (tuple2!2083 (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (_2!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))))

(declare-fun c!9572 () Bool)

(assert (=> bm!5724 (= c!9572 c!9571)))

(assert (= (and d!14519 c!9571) b!67989))

(assert (= (and d!14519 (not c!9571)) b!67985))

(assert (= (and b!67985 c!9573) b!67988))

(assert (= (and b!67985 (not c!9573)) b!67983))

(assert (= (and b!67983 c!9570) b!67992))

(assert (= (and b!67983 (not c!9570)) b!67991))

(assert (= (or b!67992 b!67991) bm!5722))

(assert (= (or b!67988 bm!5722) bm!5723))

(assert (= (or b!67989 bm!5723) bm!5724))

(assert (= (and bm!5724 c!9572) b!67986))

(assert (= (and bm!5724 (not c!9572)) b!67984))

(assert (= (and d!14519 res!36638) b!67990))

(assert (= (and b!67990 res!36637) b!67987))

(declare-fun m!63417 () Bool)

(assert (=> d!14519 m!63417))

(declare-fun m!63419 () Bool)

(assert (=> d!14519 m!63419))

(declare-fun m!63421 () Bool)

(assert (=> b!67990 m!63421))

(declare-fun m!63423 () Bool)

(assert (=> b!67987 m!63423))

(declare-fun m!63425 () Bool)

(assert (=> bm!5724 m!63425))

(declare-fun m!63427 () Bool)

(assert (=> b!67986 m!63427))

(assert (=> d!13871 d!14519))

(declare-fun d!14521 () Bool)

(declare-fun res!36639 () Bool)

(declare-fun e!44540 () Bool)

(assert (=> d!14521 (=> res!36639 e!44540)))

(assert (=> d!14521 (= res!36639 (and ((_ is Cons!1462) (toList!705 call!5520)) (= (_1!1052 (h!2046 (toList!705 call!5520))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(assert (=> d!14521 (= (containsKey!132 (toList!705 call!5520) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)) e!44540)))

(declare-fun b!67993 () Bool)

(declare-fun e!44541 () Bool)

(assert (=> b!67993 (= e!44540 e!44541)))

(declare-fun res!36640 () Bool)

(assert (=> b!67993 (=> (not res!36640) (not e!44541))))

(assert (=> b!67993 (= res!36640 (and (or (not ((_ is Cons!1462) (toList!705 call!5520))) (bvsle (_1!1052 (h!2046 (toList!705 call!5520))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))) ((_ is Cons!1462) (toList!705 call!5520)) (bvslt (_1!1052 (h!2046 (toList!705 call!5520))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355))))))

(declare-fun b!67994 () Bool)

(assert (=> b!67994 (= e!44541 (containsKey!132 (t!4939 (toList!705 call!5520)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (= (and d!14521 (not res!36639)) b!67993))

(assert (= (and b!67993 res!36640) b!67994))

(assert (=> b!67994 m!60449))

(declare-fun m!63429 () Bool)

(assert (=> b!67994 m!63429))

(assert (=> d!13823 d!14521))

(declare-fun lt!29571 () Bool)

(declare-fun d!14523 () Bool)

(assert (=> d!14523 (= lt!29571 (select (content!71 (toList!705 lt!28900)) (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun e!44542 () Bool)

(assert (=> d!14523 (= lt!29571 e!44542)))

(declare-fun res!36642 () Bool)

(assert (=> d!14523 (=> (not res!36642) (not e!44542))))

(assert (=> d!14523 (= res!36642 ((_ is Cons!1462) (toList!705 lt!28900)))))

(assert (=> d!14523 (= (contains!707 (toList!705 lt!28900) (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!29571)))

(declare-fun b!67995 () Bool)

(declare-fun e!44543 () Bool)

(assert (=> b!67995 (= e!44542 e!44543)))

(declare-fun res!36641 () Bool)

(assert (=> b!67995 (=> res!36641 e!44543)))

(assert (=> b!67995 (= res!36641 (= (h!2046 (toList!705 lt!28900)) (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!67996 () Bool)

(assert (=> b!67996 (= e!44543 (contains!707 (t!4939 (toList!705 lt!28900)) (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!14523 res!36642) b!67995))

(assert (= (and b!67995 (not res!36641)) b!67996))

(declare-fun m!63431 () Bool)

(assert (=> d!14523 m!63431))

(declare-fun m!63433 () Bool)

(assert (=> d!14523 m!63433))

(declare-fun m!63435 () Bool)

(assert (=> b!67996 m!63435))

(assert (=> b!66767 d!14523))

(declare-fun b!67997 () Bool)

(declare-fun e!44548 () Bool)

(declare-fun lt!29572 () ListLongMap!1379)

(assert (=> b!67997 (= e!44548 (= lt!29572 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16))))))

(declare-fun call!5728 () ListLongMap!1379)

(declare-fun bm!5725 () Bool)

(assert (=> bm!5725 (= call!5728 (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16)))))

(declare-fun b!67998 () Bool)

(declare-fun e!44547 () Bool)

(assert (=> b!67998 (= e!44547 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67998 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67999 () Bool)

(declare-fun lt!29577 () Unit!1818)

(declare-fun lt!29573 () Unit!1818)

(assert (=> b!67999 (= lt!29577 lt!29573)))

(declare-fun lt!29574 () ListLongMap!1379)

(declare-fun lt!29576 () (_ BitVec 64))

(declare-fun lt!29578 () (_ BitVec 64))

(declare-fun lt!29575 () V!2913)

(assert (=> b!67999 (not (contains!705 (+!87 lt!29574 (tuple2!2083 lt!29576 lt!29575)) lt!29578))))

(assert (=> b!67999 (= lt!29573 (addStillNotContains!22 lt!29574 lt!29576 lt!29575 lt!29578))))

(assert (=> b!67999 (= lt!29578 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67999 (= lt!29575 (get!1119 (select (arr!1823 (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67999 (= lt!29576 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67999 (= lt!29574 call!5728)))

(declare-fun e!44550 () ListLongMap!1379)

(assert (=> b!67999 (= e!44550 (+!87 call!5728 (tuple2!2083 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) (get!1119 (select (arr!1823 (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!68000 () Bool)

(declare-fun e!44544 () ListLongMap!1379)

(assert (=> b!68000 (= e!44544 e!44550)))

(declare-fun c!9574 () Bool)

(assert (=> b!68000 (= c!9574 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68001 () Bool)

(assert (=> b!68001 (= e!44544 (ListLongMap!1380 Nil!1463))))

(declare-fun b!68002 () Bool)

(assert (=> b!68002 (= e!44550 call!5728)))

(declare-fun b!68003 () Bool)

(assert (=> b!68003 (= e!44548 (isEmpty!311 lt!29572))))

(declare-fun b!68004 () Bool)

(declare-fun res!36646 () Bool)

(declare-fun e!44549 () Bool)

(assert (=> b!68004 (=> (not res!36646) (not e!44549))))

(assert (=> b!68004 (= res!36646 (not (contains!705 lt!29572 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68006 () Bool)

(declare-fun e!44546 () Bool)

(assert (=> b!68006 (= e!44546 e!44548)))

(declare-fun c!9576 () Bool)

(assert (=> b!68006 (= c!9576 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!68007 () Bool)

(declare-fun e!44545 () Bool)

(assert (=> b!68007 (= e!44546 e!44545)))

(assert (=> b!68007 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(declare-fun res!36645 () Bool)

(assert (=> b!68007 (= res!36645 (contains!705 lt!29572 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!68007 (=> (not res!36645) (not e!44545))))

(declare-fun b!68008 () Bool)

(assert (=> b!68008 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> b!68008 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2059 (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))))))))

(assert (=> b!68008 (= e!44545 (= (apply!72 lt!29572 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (get!1119 (select (arr!1823 (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!14525 () Bool)

(assert (=> d!14525 e!44549))

(declare-fun res!36644 () Bool)

(assert (=> d!14525 (=> (not res!36644) (not e!44549))))

(assert (=> d!14525 (= res!36644 (not (contains!705 lt!29572 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14525 (= lt!29572 e!44544)))

(declare-fun c!9575 () Bool)

(assert (=> d!14525 (= c!9575 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!14525 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!14525 (= (getCurrentListMapNoExtraKeys!51 (_keys!3785 newMap!16) (ite (or c!9137 c!9135) (_values!2129 newMap!16) (array!3820 (store (arr!1823 (_values!2129 newMap!16)) (index!3073 lt!28615) (ValueCellFull!881 lt!28400)) (size!2059 (_values!2129 newMap!16)))) (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29572)))

(declare-fun b!68005 () Bool)

(assert (=> b!68005 (= e!44549 e!44546)))

(declare-fun c!9577 () Bool)

(assert (=> b!68005 (= c!9577 e!44547)))

(declare-fun res!36643 () Bool)

(assert (=> b!68005 (=> (not res!36643) (not e!44547))))

(assert (=> b!68005 (= res!36643 (bvslt #b00000000000000000000000000000000 (size!2058 (_keys!3785 newMap!16))))))

(assert (= (and d!14525 c!9575) b!68001))

(assert (= (and d!14525 (not c!9575)) b!68000))

(assert (= (and b!68000 c!9574) b!67999))

(assert (= (and b!68000 (not c!9574)) b!68002))

(assert (= (or b!67999 b!68002) bm!5725))

(assert (= (and d!14525 res!36644) b!68004))

(assert (= (and b!68004 res!36646) b!68005))

(assert (= (and b!68005 res!36643) b!67998))

(assert (= (and b!68005 c!9577) b!68007))

(assert (= (and b!68005 (not c!9577)) b!68006))

(assert (= (and b!68007 res!36645) b!68008))

(assert (= (and b!68006 c!9576) b!67997))

(assert (= (and b!68006 (not c!9576)) b!68003))

(declare-fun b_lambda!3017 () Bool)

(assert (=> (not b_lambda!3017) (not b!67999)))

(assert (=> b!67999 t!4952))

(declare-fun b_and!4177 () Bool)

(assert (= b_and!4173 (and (=> t!4952 result!2587) b_and!4177)))

(assert (=> b!67999 t!4954))

(declare-fun b_and!4179 () Bool)

(assert (= b_and!4175 (and (=> t!4954 result!2589) b_and!4179)))

(declare-fun b_lambda!3019 () Bool)

(assert (=> (not b_lambda!3019) (not b!68008)))

(assert (=> b!68008 t!4952))

(declare-fun b_and!4181 () Bool)

(assert (= b_and!4177 (and (=> t!4952 result!2587) b_and!4181)))

(assert (=> b!68008 t!4954))

(declare-fun b_and!4183 () Bool)

(assert (= b_and!4179 (and (=> t!4954 result!2589) b_and!4183)))

(declare-fun m!63437 () Bool)

(assert (=> d!14525 m!63437))

(assert (=> d!14525 m!60845))

(assert (=> b!68000 m!60839))

(assert (=> b!68000 m!60839))

(assert (=> b!68000 m!60841))

(declare-fun m!63439 () Bool)

(assert (=> b!68003 m!63439))

(assert (=> b!67998 m!60839))

(assert (=> b!67998 m!60839))

(assert (=> b!67998 m!60841))

(declare-fun m!63441 () Bool)

(assert (=> b!67997 m!63441))

(declare-fun m!63443 () Bool)

(assert (=> b!67999 m!63443))

(declare-fun m!63445 () Bool)

(assert (=> b!67999 m!63445))

(assert (=> b!67999 m!61573))

(assert (=> b!67999 m!60885))

(assert (=> b!67999 m!61575))

(declare-fun m!63447 () Bool)

(assert (=> b!67999 m!63447))

(assert (=> b!67999 m!63443))

(assert (=> b!67999 m!61573))

(assert (=> b!67999 m!60885))

(declare-fun m!63449 () Bool)

(assert (=> b!67999 m!63449))

(assert (=> b!67999 m!60839))

(declare-fun m!63451 () Bool)

(assert (=> b!68004 m!63451))

(assert (=> bm!5725 m!63441))

(assert (=> b!68007 m!60839))

(assert (=> b!68007 m!60839))

(declare-fun m!63453 () Bool)

(assert (=> b!68007 m!63453))

(assert (=> b!68008 m!61573))

(assert (=> b!68008 m!60885))

(assert (=> b!68008 m!61575))

(assert (=> b!68008 m!61573))

(assert (=> b!68008 m!60839))

(declare-fun m!63455 () Bool)

(assert (=> b!68008 m!63455))

(assert (=> b!68008 m!60885))

(assert (=> b!68008 m!60839))

(assert (=> bm!5610 d!14525))

(declare-fun d!14527 () Bool)

(declare-fun res!36647 () Bool)

(declare-fun e!44551 () Bool)

(assert (=> d!14527 (=> res!36647 e!44551)))

(assert (=> d!14527 (= res!36647 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)))) (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))))) lt!28519)))))

(assert (=> d!14527 (= (containsKey!132 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))) lt!28519) e!44551)))

(declare-fun b!68009 () Bool)

(declare-fun e!44552 () Bool)

(assert (=> b!68009 (= e!44551 e!44552)))

(declare-fun res!36648 () Bool)

(assert (=> b!68009 (=> (not res!36648) (not e!44552))))

(assert (=> b!68009 (= res!36648 (and (or (not ((_ is Cons!1462) (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))))) (bvsle (_1!1052 (h!2046 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))))) lt!28519)) ((_ is Cons!1462) (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)))) (bvslt (_1!1052 (h!2046 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516))))) lt!28519)))))

(declare-fun b!68010 () Bool)

(assert (=> b!68010 (= e!44552 (containsKey!132 (t!4939 (toList!705 (+!87 lt!28515 (tuple2!2083 lt!28517 lt!28516)))) lt!28519))))

(assert (= (and d!14527 (not res!36647)) b!68009))

(assert (= (and b!68009 res!36648) b!68010))

(declare-fun m!63457 () Bool)

(assert (=> b!68010 m!63457))

(assert (=> d!13707 d!14527))

(assert (=> b!66805 d!14001))

(assert (=> b!66805 d!14003))

(assert (=> d!13683 d!13665))

(declare-fun d!14529 () Bool)

(declare-fun e!44553 () Bool)

(assert (=> d!14529 e!44553))

(declare-fun res!36649 () Bool)

(assert (=> d!14529 (=> res!36649 e!44553)))

(declare-fun lt!29582 () Bool)

(assert (=> d!14529 (= res!36649 (not lt!29582))))

(declare-fun lt!29581 () Bool)

(assert (=> d!14529 (= lt!29582 lt!29581)))

(declare-fun lt!29579 () Unit!1818)

(declare-fun e!44554 () Unit!1818)

(assert (=> d!14529 (= lt!29579 e!44554)))

(declare-fun c!9578 () Bool)

(assert (=> d!14529 (= c!9578 lt!29581)))

(assert (=> d!14529 (= lt!29581 (containsKey!132 (toList!705 lt!28891) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!14529 (= (contains!705 lt!28891 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29582)))

(declare-fun b!68011 () Bool)

(declare-fun lt!29580 () Unit!1818)

(assert (=> b!68011 (= e!44554 lt!29580)))

(assert (=> b!68011 (= lt!29580 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28891) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> b!68011 (isDefined!82 (getValueByKey!128 (toList!705 lt!28891) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68012 () Bool)

(declare-fun Unit!1893 () Unit!1818)

(assert (=> b!68012 (= e!44554 Unit!1893)))

(declare-fun b!68013 () Bool)

(assert (=> b!68013 (= e!44553 (isDefined!82 (getValueByKey!128 (toList!705 lt!28891) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14529 c!9578) b!68011))

(assert (= (and d!14529 (not c!9578)) b!68012))

(assert (= (and d!14529 (not res!36649)) b!68013))

(declare-fun m!63459 () Bool)

(assert (=> d!14529 m!63459))

(declare-fun m!63461 () Bool)

(assert (=> b!68011 m!63461))

(assert (=> b!68011 m!61183))

(assert (=> b!68011 m!61183))

(declare-fun m!63463 () Bool)

(assert (=> b!68011 m!63463))

(assert (=> b!68013 m!61183))

(assert (=> b!68013 m!61183))

(assert (=> b!68013 m!63463))

(assert (=> d!13749 d!14529))

(declare-fun b!68017 () Bool)

(declare-fun e!44556 () Option!134)

(assert (=> b!68017 (= e!44556 None!132)))

(declare-fun b!68016 () Bool)

(assert (=> b!68016 (= e!44556 (getValueByKey!128 (t!4939 lt!28893) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68014 () Bool)

(declare-fun e!44555 () Option!134)

(assert (=> b!68014 (= e!44555 (Some!133 (_2!1052 (h!2046 lt!28893))))))

(declare-fun d!14531 () Bool)

(declare-fun c!9579 () Bool)

(assert (=> d!14531 (= c!9579 (and ((_ is Cons!1462) lt!28893) (= (_1!1052 (h!2046 lt!28893)) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14531 (= (getValueByKey!128 lt!28893 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44555)))

(declare-fun b!68015 () Bool)

(assert (=> b!68015 (= e!44555 e!44556)))

(declare-fun c!9580 () Bool)

(assert (=> b!68015 (= c!9580 (and ((_ is Cons!1462) lt!28893) (not (= (_1!1052 (h!2046 lt!28893)) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14531 c!9579) b!68014))

(assert (= (and d!14531 (not c!9579)) b!68015))

(assert (= (and b!68015 c!9580) b!68016))

(assert (= (and b!68015 (not c!9580)) b!68017))

(declare-fun m!63465 () Bool)

(assert (=> b!68016 m!63465))

(assert (=> d!13749 d!14531))

(declare-fun d!14533 () Bool)

(assert (=> d!14533 (= (getValueByKey!128 lt!28893 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!29583 () Unit!1818)

(assert (=> d!14533 (= lt!29583 (choose!375 lt!28893 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun e!44557 () Bool)

(assert (=> d!14533 e!44557))

(declare-fun res!36650 () Bool)

(assert (=> d!14533 (=> (not res!36650) (not e!44557))))

(assert (=> d!14533 (= res!36650 (isStrictlySorted!284 lt!28893))))

(assert (=> d!14533 (= (lemmaContainsTupThenGetReturnValue!48 lt!28893 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29583)))

(declare-fun b!68018 () Bool)

(declare-fun res!36651 () Bool)

(assert (=> b!68018 (=> (not res!36651) (not e!44557))))

(assert (=> b!68018 (= res!36651 (containsKey!132 lt!28893 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68019 () Bool)

(assert (=> b!68019 (= e!44557 (contains!707 lt!28893 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14533 res!36650) b!68018))

(assert (= (and b!68018 res!36651) b!68019))

(assert (=> d!14533 m!61177))

(declare-fun m!63467 () Bool)

(assert (=> d!14533 m!63467))

(declare-fun m!63469 () Bool)

(assert (=> d!14533 m!63469))

(declare-fun m!63471 () Bool)

(assert (=> b!68018 m!63471))

(declare-fun m!63473 () Bool)

(assert (=> b!68019 m!63473))

(assert (=> d!13749 d!14533))

(declare-fun bm!5726 () Bool)

(declare-fun call!5730 () List!1466)

(declare-fun call!5731 () List!1466)

(assert (=> bm!5726 (= call!5730 call!5731)))

(declare-fun d!14535 () Bool)

(declare-fun e!44559 () Bool)

(assert (=> d!14535 e!44559))

(declare-fun res!36653 () Bool)

(assert (=> d!14535 (=> (not res!36653) (not e!44559))))

(declare-fun lt!29584 () List!1466)

(assert (=> d!14535 (= res!36653 (isStrictlySorted!284 lt!29584))))

(declare-fun e!44560 () List!1466)

(assert (=> d!14535 (= lt!29584 e!44560)))

(declare-fun c!9582 () Bool)

(assert (=> d!14535 (= c!9582 (and ((_ is Cons!1462) (toList!705 lt!28679)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28679))) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14535 (isStrictlySorted!284 (toList!705 lt!28679))))

(assert (=> d!14535 (= (insertStrictlySorted!51 (toList!705 lt!28679) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29584)))

(declare-fun b!68020 () Bool)

(declare-fun c!9581 () Bool)

(assert (=> b!68020 (= c!9581 (and ((_ is Cons!1462) (toList!705 lt!28679)) (bvsgt (_1!1052 (h!2046 (toList!705 lt!28679))) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun e!44561 () List!1466)

(declare-fun e!44558 () List!1466)

(assert (=> b!68020 (= e!44561 e!44558)))

(declare-fun c!9584 () Bool)

(declare-fun e!44562 () List!1466)

(declare-fun b!68021 () Bool)

(assert (=> b!68021 (= e!44562 (ite c!9584 (t!4939 (toList!705 lt!28679)) (ite c!9581 (Cons!1462 (h!2046 (toList!705 lt!28679)) (t!4939 (toList!705 lt!28679))) Nil!1463)))))

(declare-fun b!68022 () Bool)

(assert (=> b!68022 (= e!44560 e!44561)))

(assert (=> b!68022 (= c!9584 (and ((_ is Cons!1462) (toList!705 lt!28679)) (= (_1!1052 (h!2046 (toList!705 lt!28679))) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun bm!5727 () Bool)

(declare-fun call!5729 () List!1466)

(assert (=> bm!5727 (= call!5731 call!5729)))

(declare-fun b!68023 () Bool)

(assert (=> b!68023 (= e!44562 (insertStrictlySorted!51 (t!4939 (toList!705 lt!28679)) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68024 () Bool)

(assert (=> b!68024 (= e!44559 (contains!707 lt!29584 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!68025 () Bool)

(assert (=> b!68025 (= e!44561 call!5731)))

(declare-fun b!68026 () Bool)

(assert (=> b!68026 (= e!44560 call!5729)))

(declare-fun b!68027 () Bool)

(declare-fun res!36652 () Bool)

(assert (=> b!68027 (=> (not res!36652) (not e!44559))))

(assert (=> b!68027 (= res!36652 (containsKey!132 lt!29584 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68028 () Bool)

(assert (=> b!68028 (= e!44558 call!5730)))

(declare-fun b!68029 () Bool)

(assert (=> b!68029 (= e!44558 call!5730)))

(declare-fun bm!5728 () Bool)

(assert (=> bm!5728 (= call!5729 ($colon$colon!62 e!44562 (ite c!9582 (h!2046 (toList!705 lt!28679)) (tuple2!2083 (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(declare-fun c!9583 () Bool)

(assert (=> bm!5728 (= c!9583 c!9582)))

(assert (= (and d!14535 c!9582) b!68026))

(assert (= (and d!14535 (not c!9582)) b!68022))

(assert (= (and b!68022 c!9584) b!68025))

(assert (= (and b!68022 (not c!9584)) b!68020))

(assert (= (and b!68020 c!9581) b!68029))

(assert (= (and b!68020 (not c!9581)) b!68028))

(assert (= (or b!68029 b!68028) bm!5726))

(assert (= (or b!68025 bm!5726) bm!5727))

(assert (= (or b!68026 bm!5727) bm!5728))

(assert (= (and bm!5728 c!9583) b!68023))

(assert (= (and bm!5728 (not c!9583)) b!68021))

(assert (= (and d!14535 res!36653) b!68027))

(assert (= (and b!68027 res!36652) b!68024))

(declare-fun m!63475 () Bool)

(assert (=> d!14535 m!63475))

(declare-fun m!63477 () Bool)

(assert (=> d!14535 m!63477))

(declare-fun m!63479 () Bool)

(assert (=> b!68027 m!63479))

(declare-fun m!63481 () Bool)

(assert (=> b!68024 m!63481))

(declare-fun m!63483 () Bool)

(assert (=> bm!5728 m!63483))

(declare-fun m!63485 () Bool)

(assert (=> b!68023 m!63485))

(assert (=> d!13749 d!14535))

(declare-fun d!14537 () Bool)

(declare-fun lt!29585 () Bool)

(assert (=> d!14537 (= lt!29585 (select (content!71 (toList!705 lt!28877)) (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun e!44563 () Bool)

(assert (=> d!14537 (= lt!29585 e!44563)))

(declare-fun res!36655 () Bool)

(assert (=> d!14537 (=> (not res!36655) (not e!44563))))

(assert (=> d!14537 (= res!36655 ((_ is Cons!1462) (toList!705 lt!28877)))))

(assert (=> d!14537 (= (contains!707 (toList!705 lt!28877) (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) lt!29585)))

(declare-fun b!68030 () Bool)

(declare-fun e!44564 () Bool)

(assert (=> b!68030 (= e!44563 e!44564)))

(declare-fun res!36654 () Bool)

(assert (=> b!68030 (=> res!36654 e!44564)))

(assert (=> b!68030 (= res!36654 (= (h!2046 (toList!705 lt!28877)) (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun b!68031 () Bool)

(assert (=> b!68031 (= e!44564 (contains!707 (t!4939 (toList!705 lt!28877)) (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))

(assert (= (and d!14537 res!36655) b!68030))

(assert (= (and b!68030 (not res!36654)) b!68031))

(declare-fun m!63487 () Bool)

(assert (=> d!14537 m!63487))

(declare-fun m!63489 () Bool)

(assert (=> d!14537 m!63489))

(declare-fun m!63491 () Bool)

(assert (=> b!68031 m!63491))

(assert (=> b!66752 d!14537))

(declare-fun d!14539 () Bool)

(declare-fun lt!29586 () Bool)

(assert (=> d!14539 (= lt!29586 (select (content!71 lt!28523) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(declare-fun e!44565 () Bool)

(assert (=> d!14539 (= lt!29586 e!44565)))

(declare-fun res!36657 () Bool)

(assert (=> d!14539 (=> (not res!36657) (not e!44565))))

(assert (=> d!14539 (= res!36657 ((_ is Cons!1462) lt!28523))))

(assert (=> d!14539 (= (contains!707 lt!28523 (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))) lt!29586)))

(declare-fun b!68032 () Bool)

(declare-fun e!44566 () Bool)

(assert (=> b!68032 (= e!44565 e!44566)))

(declare-fun res!36656 () Bool)

(assert (=> b!68032 (=> res!36656 e!44566)))

(assert (=> b!68032 (= res!36656 (= (h!2046 lt!28523) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(declare-fun b!68033 () Bool)

(assert (=> b!68033 (= e!44566 (contains!707 (t!4939 lt!28523) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))))))

(assert (= (and d!14539 res!36657) b!68032))

(assert (= (and b!68032 (not res!36656)) b!68033))

(declare-fun m!63493 () Bool)

(assert (=> d!14539 m!63493))

(declare-fun m!63495 () Bool)

(assert (=> d!14539 m!63495))

(declare-fun m!63497 () Bool)

(assert (=> b!68033 m!63497))

(assert (=> b!66958 d!14539))

(declare-fun d!14541 () Bool)

(assert (=> d!14541 (= ($colon$colon!62 e!43888 (ite c!9275 (h!2046 (toList!705 (+!87 lt!28402 lt!28408))) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403)))) (Cons!1462 (ite c!9275 (h!2046 (toList!705 (+!87 lt!28402 lt!28408))) (tuple2!2083 (_1!1052 lt!28403) (_2!1052 lt!28403))) e!43888))))

(assert (=> bm!5603 d!14541))

(declare-fun b!68037 () Bool)

(declare-fun e!44568 () Option!134)

(assert (=> b!68037 (= e!44568 None!132)))

(declare-fun b!68036 () Bool)

(assert (=> b!68036 (= e!44568 (getValueByKey!128 (t!4939 (toList!705 lt!29039)) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!68034 () Bool)

(declare-fun e!44567 () Option!134)

(assert (=> b!68034 (= e!44567 (Some!133 (_2!1052 (h!2046 (toList!705 lt!29039)))))))

(declare-fun c!9585 () Bool)

(declare-fun d!14543 () Bool)

(assert (=> d!14543 (= c!9585 (and ((_ is Cons!1462) (toList!705 lt!29039)) (= (_1!1052 (h!2046 (toList!705 lt!29039))) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (=> d!14543 (= (getValueByKey!128 (toList!705 lt!29039) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))) e!44567)))

(declare-fun b!68035 () Bool)

(assert (=> b!68035 (= e!44567 e!44568)))

(declare-fun c!9586 () Bool)

(assert (=> b!68035 (= c!9586 (and ((_ is Cons!1462) (toList!705 lt!29039)) (not (= (_1!1052 (h!2046 (toList!705 lt!29039))) (_1!1052 (ite (or c!9161 c!9160) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))))

(assert (= (and d!14543 c!9585) b!68034))

(assert (= (and d!14543 (not c!9585)) b!68035))

(assert (= (and b!68035 c!9586) b!68036))

(assert (= (and b!68035 (not c!9586)) b!68037))

(declare-fun m!63499 () Bool)

(assert (=> b!68036 m!63499))

(assert (=> b!67000 d!14543))

(declare-fun d!14545 () Bool)

(declare-fun res!36658 () Bool)

(declare-fun e!44570 () Bool)

(assert (=> d!14545 (=> res!36658 e!44570)))

(assert (=> d!14545 (= res!36658 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> d!14545 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992)))) e!44570)))

(declare-fun b!68038 () Bool)

(declare-fun e!44571 () Bool)

(declare-fun call!5732 () Bool)

(assert (=> b!68038 (= e!44571 call!5732)))

(declare-fun bm!5729 () Bool)

(assert (=> bm!5729 (= call!5732 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3785 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992)))))))

(declare-fun b!68039 () Bool)

(declare-fun e!44569 () Bool)

(assert (=> b!68039 (= e!44569 e!44571)))

(declare-fun lt!29588 () (_ BitVec 64))

(assert (=> b!68039 (= lt!29588 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!29587 () Unit!1818)

(assert (=> b!68039 (= lt!29587 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) lt!29588 #b00000000000000000000000000000000))))

(assert (=> b!68039 (arrayContainsKey!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) lt!29588 #b00000000000000000000000000000000)))

(declare-fun lt!29589 () Unit!1818)

(assert (=> b!68039 (= lt!29589 lt!29587)))

(declare-fun res!36659 () Bool)

(assert (=> b!68039 (= res!36659 (= (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) #b00000000000000000000000000000000) (_keys!3785 (v!2469 (underlying!244 thiss!992))) (mask!6080 (v!2469 (underlying!244 thiss!992)))) (Found!236 #b00000000000000000000000000000000)))))

(assert (=> b!68039 (=> (not res!36659) (not e!44571))))

(declare-fun b!68040 () Bool)

(assert (=> b!68040 (= e!44569 call!5732)))

(declare-fun b!68041 () Bool)

(assert (=> b!68041 (= e!44570 e!44569)))

(declare-fun c!9587 () Bool)

(assert (=> b!68041 (= c!9587 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!14545 (not res!36658)) b!68041))

(assert (= (and b!68041 c!9587) b!68039))

(assert (= (and b!68041 (not c!9587)) b!68040))

(assert (= (and b!68039 res!36659) b!68038))

(assert (= (or b!68038 b!68040) bm!5729))

(declare-fun m!63501 () Bool)

(assert (=> bm!5729 m!63501))

(assert (=> b!68039 m!63281))

(declare-fun m!63503 () Bool)

(assert (=> b!68039 m!63503))

(declare-fun m!63505 () Bool)

(assert (=> b!68039 m!63505))

(assert (=> b!68039 m!63281))

(declare-fun m!63507 () Bool)

(assert (=> b!68039 m!63507))

(assert (=> b!68041 m!63281))

(assert (=> b!68041 m!63281))

(assert (=> b!68041 m!63283))

(assert (=> b!66875 d!14545))

(declare-fun d!14547 () Bool)

(declare-fun e!44572 () Bool)

(assert (=> d!14547 e!44572))

(declare-fun res!36660 () Bool)

(assert (=> d!14547 (=> res!36660 e!44572)))

(declare-fun lt!29593 () Bool)

(assert (=> d!14547 (= res!36660 (not lt!29593))))

(declare-fun lt!29592 () Bool)

(assert (=> d!14547 (= lt!29593 lt!29592)))

(declare-fun lt!29590 () Unit!1818)

(declare-fun e!44573 () Unit!1818)

(assert (=> d!14547 (= lt!29590 e!44573)))

(declare-fun c!9588 () Bool)

(assert (=> d!14547 (= c!9588 lt!29592)))

(assert (=> d!14547 (= lt!29592 (containsKey!132 (toList!705 lt!28724) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14547 (= (contains!705 lt!28724 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29593)))

(declare-fun b!68042 () Bool)

(declare-fun lt!29591 () Unit!1818)

(assert (=> b!68042 (= e!44573 lt!29591)))

(assert (=> b!68042 (= lt!29591 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28724) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68042 (isDefined!82 (getValueByKey!128 (toList!705 lt!28724) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68043 () Bool)

(declare-fun Unit!1894 () Unit!1818)

(assert (=> b!68043 (= e!44573 Unit!1894)))

(declare-fun b!68044 () Bool)

(assert (=> b!68044 (= e!44572 (isDefined!82 (getValueByKey!128 (toList!705 lt!28724) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14547 c!9588) b!68042))

(assert (= (and d!14547 (not c!9588)) b!68043))

(assert (= (and d!14547 (not res!36660)) b!68044))

(declare-fun m!63509 () Bool)

(assert (=> d!14547 m!63509))

(declare-fun m!63511 () Bool)

(assert (=> b!68042 m!63511))

(declare-fun m!63513 () Bool)

(assert (=> b!68042 m!63513))

(assert (=> b!68042 m!63513))

(declare-fun m!63515 () Bool)

(assert (=> b!68042 m!63515))

(assert (=> b!68044 m!63513))

(assert (=> b!68044 m!63513))

(assert (=> b!68044 m!63515))

(assert (=> bm!5557 d!14547))

(declare-fun d!14549 () Bool)

(declare-fun res!36661 () Bool)

(declare-fun e!44574 () Bool)

(assert (=> d!14549 (=> res!36661 e!44574)))

(assert (=> d!14549 (= res!36661 (and ((_ is Cons!1462) (toList!705 lt!28513)) (= (_1!1052 (h!2046 (toList!705 lt!28513))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14549 (= (containsKey!132 (toList!705 lt!28513) #b0000000000000000000000000000000000000000000000000000000000000000) e!44574)))

(declare-fun b!68045 () Bool)

(declare-fun e!44575 () Bool)

(assert (=> b!68045 (= e!44574 e!44575)))

(declare-fun res!36662 () Bool)

(assert (=> b!68045 (=> (not res!36662) (not e!44575))))

(assert (=> b!68045 (= res!36662 (and (or (not ((_ is Cons!1462) (toList!705 lt!28513))) (bvsle (_1!1052 (h!2046 (toList!705 lt!28513))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1462) (toList!705 lt!28513)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28513))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68046 () Bool)

(assert (=> b!68046 (= e!44575 (containsKey!132 (t!4939 (toList!705 lt!28513)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14549 (not res!36661)) b!68045))

(assert (= (and b!68045 res!36662) b!68046))

(declare-fun m!63517 () Bool)

(assert (=> b!68046 m!63517))

(assert (=> d!13727 d!14549))

(declare-fun d!14551 () Bool)

(assert (=> d!14551 (isDefined!82 (getValueByKey!128 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!29594 () Unit!1818)

(assert (=> d!14551 (= lt!29594 (choose!384 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!44576 () Bool)

(assert (=> d!14551 e!44576))

(declare-fun res!36663 () Bool)

(assert (=> d!14551 (=> (not res!36663) (not e!44576))))

(assert (=> d!14551 (= res!36663 (isStrictlySorted!284 (toList!705 lt!28687)))))

(assert (=> d!14551 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29594)))

(declare-fun b!68047 () Bool)

(assert (=> b!68047 (= e!44576 (containsKey!132 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14551 res!36663) b!68047))

(assert (=> d!14551 m!60627))

(assert (=> d!14551 m!61385))

(assert (=> d!14551 m!61385))

(assert (=> d!14551 m!61523))

(assert (=> d!14551 m!60627))

(declare-fun m!63519 () Bool)

(assert (=> d!14551 m!63519))

(assert (=> d!14551 m!62327))

(assert (=> b!68047 m!60627))

(assert (=> b!68047 m!61519))

(assert (=> b!66969 d!14551))

(assert (=> b!66969 d!14385))

(assert (=> b!66969 d!14387))

(declare-fun d!14553 () Bool)

(assert (=> d!14553 (arrayContainsKey!0 (_keys!3785 newMap!16) lt!28929 #b00000000000000000000000000000000)))

(declare-fun lt!29595 () Unit!1818)

(assert (=> d!14553 (= lt!29595 (choose!13 (_keys!3785 newMap!16) lt!28929 #b00000000000000000000000000000000))))

(assert (=> d!14553 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!14553 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3785 newMap!16) lt!28929 #b00000000000000000000000000000000) lt!29595)))

(declare-fun bs!2919 () Bool)

(assert (= bs!2919 d!14553))

(assert (=> bs!2919 m!61291))

(declare-fun m!63521 () Bool)

(assert (=> bs!2919 m!63521))

(assert (=> b!66841 d!14553))

(declare-fun d!14555 () Bool)

(declare-fun res!36664 () Bool)

(declare-fun e!44577 () Bool)

(assert (=> d!14555 (=> res!36664 e!44577)))

(assert (=> d!14555 (= res!36664 (= (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) lt!28929))))

(assert (=> d!14555 (= (arrayContainsKey!0 (_keys!3785 newMap!16) lt!28929 #b00000000000000000000000000000000) e!44577)))

(declare-fun b!68048 () Bool)

(declare-fun e!44578 () Bool)

(assert (=> b!68048 (= e!44577 e!44578)))

(declare-fun res!36665 () Bool)

(assert (=> b!68048 (=> (not res!36665) (not e!44578))))

(assert (=> b!68048 (= res!36665 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!68049 () Bool)

(assert (=> b!68049 (= e!44578 (arrayContainsKey!0 (_keys!3785 newMap!16) lt!28929 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!14555 (not res!36664)) b!68048))

(assert (= (and b!68048 res!36665) b!68049))

(assert (=> d!14555 m!60839))

(declare-fun m!63523 () Bool)

(assert (=> b!68049 m!63523))

(assert (=> b!66841 d!14555))

(declare-fun b!68050 () Bool)

(declare-fun e!44580 () SeekEntryResult!236)

(declare-fun lt!29597 () SeekEntryResult!236)

(assert (=> b!68050 (= e!44580 (Found!236 (index!3074 lt!29597)))))

(declare-fun d!14557 () Bool)

(declare-fun lt!29596 () SeekEntryResult!236)

(assert (=> d!14557 (and (or ((_ is Undefined!236) lt!29596) (not ((_ is Found!236) lt!29596)) (and (bvsge (index!3073 lt!29596) #b00000000000000000000000000000000) (bvslt (index!3073 lt!29596) (size!2058 (_keys!3785 newMap!16))))) (or ((_ is Undefined!236) lt!29596) ((_ is Found!236) lt!29596) (not ((_ is MissingZero!236) lt!29596)) (and (bvsge (index!3072 lt!29596) #b00000000000000000000000000000000) (bvslt (index!3072 lt!29596) (size!2058 (_keys!3785 newMap!16))))) (or ((_ is Undefined!236) lt!29596) ((_ is Found!236) lt!29596) ((_ is MissingZero!236) lt!29596) (not ((_ is MissingVacant!236) lt!29596)) (and (bvsge (index!3075 lt!29596) #b00000000000000000000000000000000) (bvslt (index!3075 lt!29596) (size!2058 (_keys!3785 newMap!16))))) (or ((_ is Undefined!236) lt!29596) (ite ((_ is Found!236) lt!29596) (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!29596)) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!236) lt!29596) (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3072 lt!29596)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!236) lt!29596) (= (select (arr!1822 (_keys!3785 newMap!16)) (index!3075 lt!29596)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!44579 () SeekEntryResult!236)

(assert (=> d!14557 (= lt!29596 e!44579)))

(declare-fun c!9591 () Bool)

(assert (=> d!14557 (= c!9591 (and ((_ is Intermediate!236) lt!29597) (undefined!1048 lt!29597)))))

(assert (=> d!14557 (= lt!29597 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) (mask!6080 newMap!16)) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(assert (=> d!14557 (validMask!0 (mask!6080 newMap!16))))

(assert (=> d!14557 (= (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) (_keys!3785 newMap!16) (mask!6080 newMap!16)) lt!29596)))

(declare-fun b!68051 () Bool)

(declare-fun c!9590 () Bool)

(declare-fun lt!29598 () (_ BitVec 64))

(assert (=> b!68051 (= c!9590 (= lt!29598 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44581 () SeekEntryResult!236)

(assert (=> b!68051 (= e!44580 e!44581)))

(declare-fun b!68052 () Bool)

(assert (=> b!68052 (= e!44579 Undefined!236)))

(declare-fun b!68053 () Bool)

(assert (=> b!68053 (= e!44581 (MissingZero!236 (index!3074 lt!29597)))))

(declare-fun b!68054 () Bool)

(assert (=> b!68054 (= e!44579 e!44580)))

(assert (=> b!68054 (= lt!29598 (select (arr!1822 (_keys!3785 newMap!16)) (index!3074 lt!29597)))))

(declare-fun c!9589 () Bool)

(assert (=> b!68054 (= c!9589 (= lt!29598 (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68055 () Bool)

(assert (=> b!68055 (= e!44581 (seekKeyOrZeroReturnVacant!0 (x!10705 lt!29597) (index!3074 lt!29597) (index!3074 lt!29597) (select (arr!1822 (_keys!3785 newMap!16)) #b00000000000000000000000000000000) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(assert (= (and d!14557 c!9591) b!68052))

(assert (= (and d!14557 (not c!9591)) b!68054))

(assert (= (and b!68054 c!9589) b!68050))

(assert (= (and b!68054 (not c!9589)) b!68051))

(assert (= (and b!68051 c!9590) b!68053))

(assert (= (and b!68051 (not c!9590)) b!68055))

(declare-fun m!63525 () Bool)

(assert (=> d!14557 m!63525))

(declare-fun m!63527 () Bool)

(assert (=> d!14557 m!63527))

(assert (=> d!14557 m!60845))

(declare-fun m!63529 () Bool)

(assert (=> d!14557 m!63529))

(assert (=> d!14557 m!60839))

(declare-fun m!63531 () Bool)

(assert (=> d!14557 m!63531))

(assert (=> d!14557 m!63531))

(assert (=> d!14557 m!60839))

(declare-fun m!63533 () Bool)

(assert (=> d!14557 m!63533))

(declare-fun m!63535 () Bool)

(assert (=> b!68054 m!63535))

(assert (=> b!68055 m!60839))

(declare-fun m!63537 () Bool)

(assert (=> b!68055 m!63537))

(assert (=> b!66841 d!14557))

(declare-fun bm!5730 () Bool)

(declare-fun call!5734 () List!1466)

(declare-fun call!5735 () List!1466)

(assert (=> bm!5730 (= call!5734 call!5735)))

(declare-fun d!14559 () Bool)

(declare-fun e!44583 () Bool)

(assert (=> d!14559 e!44583))

(declare-fun res!36667 () Bool)

(assert (=> d!14559 (=> (not res!36667) (not e!44583))))

(declare-fun lt!29599 () List!1466)

(assert (=> d!14559 (= res!36667 (isStrictlySorted!284 lt!29599))))

(declare-fun e!44584 () List!1466)

(assert (=> d!14559 (= lt!29599 e!44584)))

(declare-fun c!9593 () Bool)

(assert (=> d!14559 (= c!9593 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28402))) (bvslt (_1!1052 (h!2046 (t!4939 (toList!705 lt!28402)))) (_1!1052 lt!28408))))))

(assert (=> d!14559 (isStrictlySorted!284 (t!4939 (toList!705 lt!28402)))))

(assert (=> d!14559 (= (insertStrictlySorted!51 (t!4939 (toList!705 lt!28402)) (_1!1052 lt!28408) (_2!1052 lt!28408)) lt!29599)))

(declare-fun b!68056 () Bool)

(declare-fun c!9592 () Bool)

(assert (=> b!68056 (= c!9592 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28402))) (bvsgt (_1!1052 (h!2046 (t!4939 (toList!705 lt!28402)))) (_1!1052 lt!28408))))))

(declare-fun e!44585 () List!1466)

(declare-fun e!44582 () List!1466)

(assert (=> b!68056 (= e!44585 e!44582)))

(declare-fun c!9595 () Bool)

(declare-fun b!68057 () Bool)

(declare-fun e!44586 () List!1466)

(assert (=> b!68057 (= e!44586 (ite c!9595 (t!4939 (t!4939 (toList!705 lt!28402))) (ite c!9592 (Cons!1462 (h!2046 (t!4939 (toList!705 lt!28402))) (t!4939 (t!4939 (toList!705 lt!28402)))) Nil!1463)))))

(declare-fun b!68058 () Bool)

(assert (=> b!68058 (= e!44584 e!44585)))

(assert (=> b!68058 (= c!9595 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28402))) (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28402)))) (_1!1052 lt!28408))))))

(declare-fun bm!5731 () Bool)

(declare-fun call!5733 () List!1466)

(assert (=> bm!5731 (= call!5735 call!5733)))

(declare-fun b!68059 () Bool)

(assert (=> b!68059 (= e!44586 (insertStrictlySorted!51 (t!4939 (t!4939 (toList!705 lt!28402))) (_1!1052 lt!28408) (_2!1052 lt!28408)))))

(declare-fun b!68060 () Bool)

(assert (=> b!68060 (= e!44583 (contains!707 lt!29599 (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408))))))

(declare-fun b!68061 () Bool)

(assert (=> b!68061 (= e!44585 call!5735)))

(declare-fun b!68062 () Bool)

(assert (=> b!68062 (= e!44584 call!5733)))

(declare-fun b!68063 () Bool)

(declare-fun res!36666 () Bool)

(assert (=> b!68063 (=> (not res!36666) (not e!44583))))

(assert (=> b!68063 (= res!36666 (containsKey!132 lt!29599 (_1!1052 lt!28408)))))

(declare-fun b!68064 () Bool)

(assert (=> b!68064 (= e!44582 call!5734)))

(declare-fun b!68065 () Bool)

(assert (=> b!68065 (= e!44582 call!5734)))

(declare-fun bm!5732 () Bool)

(assert (=> bm!5732 (= call!5733 ($colon$colon!62 e!44586 (ite c!9593 (h!2046 (t!4939 (toList!705 lt!28402))) (tuple2!2083 (_1!1052 lt!28408) (_2!1052 lt!28408)))))))

(declare-fun c!9594 () Bool)

(assert (=> bm!5732 (= c!9594 c!9593)))

(assert (= (and d!14559 c!9593) b!68062))

(assert (= (and d!14559 (not c!9593)) b!68058))

(assert (= (and b!68058 c!9595) b!68061))

(assert (= (and b!68058 (not c!9595)) b!68056))

(assert (= (and b!68056 c!9592) b!68065))

(assert (= (and b!68056 (not c!9592)) b!68064))

(assert (= (or b!68065 b!68064) bm!5730))

(assert (= (or b!68061 bm!5730) bm!5731))

(assert (= (or b!68062 bm!5731) bm!5732))

(assert (= (and bm!5732 c!9594) b!68059))

(assert (= (and bm!5732 (not c!9594)) b!68057))

(assert (= (and d!14559 res!36667) b!68063))

(assert (= (and b!68063 res!36666) b!68060))

(declare-fun m!63539 () Bool)

(assert (=> d!14559 m!63539))

(assert (=> d!14559 m!62085))

(declare-fun m!63541 () Bool)

(assert (=> b!68063 m!63541))

(declare-fun m!63543 () Bool)

(assert (=> b!68060 m!63543))

(declare-fun m!63545 () Bool)

(assert (=> bm!5732 m!63545))

(declare-fun m!63547 () Bool)

(assert (=> b!68059 m!63547))

(assert (=> b!66910 d!14559))

(declare-fun d!14561 () Bool)

(declare-fun res!36668 () Bool)

(declare-fun e!44587 () Bool)

(assert (=> d!14561 (=> res!36668 e!44587)))

(assert (=> d!14561 (= res!36668 (and ((_ is Cons!1462) (toList!705 lt!28687)) (= (_1!1052 (h!2046 (toList!705 lt!28687))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14561 (= (containsKey!132 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44587)))

(declare-fun b!68066 () Bool)

(declare-fun e!44588 () Bool)

(assert (=> b!68066 (= e!44587 e!44588)))

(declare-fun res!36669 () Bool)

(assert (=> b!68066 (=> (not res!36669) (not e!44588))))

(assert (=> b!68066 (= res!36669 (and (or (not ((_ is Cons!1462) (toList!705 lt!28687))) (bvsle (_1!1052 (h!2046 (toList!705 lt!28687))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1462) (toList!705 lt!28687)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28687))) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!68067 () Bool)

(assert (=> b!68067 (= e!44588 (containsKey!132 (t!4939 (toList!705 lt!28687)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14561 (not res!36668)) b!68066))

(assert (= (and b!68066 res!36669) b!68067))

(assert (=> b!68067 m!60627))

(declare-fun m!63549 () Bool)

(assert (=> b!68067 m!63549))

(assert (=> d!13859 d!14561))

(declare-fun b!68071 () Bool)

(declare-fun e!44590 () Option!134)

(assert (=> b!68071 (= e!44590 None!132)))

(declare-fun b!68070 () Bool)

(assert (=> b!68070 (= e!44590 (getValueByKey!128 (t!4939 (t!4939 lt!28494)) (_1!1052 lt!28408)))))

(declare-fun b!68068 () Bool)

(declare-fun e!44589 () Option!134)

(assert (=> b!68068 (= e!44589 (Some!133 (_2!1052 (h!2046 (t!4939 lt!28494)))))))

(declare-fun d!14563 () Bool)

(declare-fun c!9596 () Bool)

(assert (=> d!14563 (= c!9596 (and ((_ is Cons!1462) (t!4939 lt!28494)) (= (_1!1052 (h!2046 (t!4939 lt!28494))) (_1!1052 lt!28408))))))

(assert (=> d!14563 (= (getValueByKey!128 (t!4939 lt!28494) (_1!1052 lt!28408)) e!44589)))

(declare-fun b!68069 () Bool)

(assert (=> b!68069 (= e!44589 e!44590)))

(declare-fun c!9597 () Bool)

(assert (=> b!68069 (= c!9597 (and ((_ is Cons!1462) (t!4939 lt!28494)) (not (= (_1!1052 (h!2046 (t!4939 lt!28494))) (_1!1052 lt!28408)))))))

(assert (= (and d!14563 c!9596) b!68068))

(assert (= (and d!14563 (not c!9596)) b!68069))

(assert (= (and b!68069 c!9597) b!68070))

(assert (= (and b!68069 (not c!9597)) b!68071))

(declare-fun m!63551 () Bool)

(assert (=> b!68070 m!63551))

(assert (=> b!66903 d!14563))

(declare-fun d!14565 () Bool)

(declare-fun e!44591 () Bool)

(assert (=> d!14565 e!44591))

(declare-fun res!36670 () Bool)

(assert (=> d!14565 (=> res!36670 e!44591)))

(declare-fun lt!29603 () Bool)

(assert (=> d!14565 (= res!36670 (not lt!29603))))

(declare-fun lt!29602 () Bool)

(assert (=> d!14565 (= lt!29603 lt!29602)))

(declare-fun lt!29600 () Unit!1818)

(declare-fun e!44592 () Unit!1818)

(assert (=> d!14565 (= lt!29600 e!44592)))

(declare-fun c!9598 () Bool)

(assert (=> d!14565 (= c!9598 lt!29602)))

(assert (=> d!14565 (= lt!29602 (containsKey!132 (toList!705 lt!28900) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!14565 (= (contains!705 lt!28900 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29603)))

(declare-fun b!68072 () Bool)

(declare-fun lt!29601 () Unit!1818)

(assert (=> b!68072 (= e!44592 lt!29601)))

(assert (=> b!68072 (= lt!29601 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28900) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> b!68072 (isDefined!82 (getValueByKey!128 (toList!705 lt!28900) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68073 () Bool)

(declare-fun Unit!1895 () Unit!1818)

(assert (=> b!68073 (= e!44592 Unit!1895)))

(declare-fun b!68074 () Bool)

(assert (=> b!68074 (= e!44591 (isDefined!82 (getValueByKey!128 (toList!705 lt!28900) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14565 c!9598) b!68072))

(assert (= (and d!14565 (not c!9598)) b!68073))

(assert (= (and d!14565 (not res!36670)) b!68074))

(declare-fun m!63553 () Bool)

(assert (=> d!14565 m!63553))

(declare-fun m!63555 () Bool)

(assert (=> b!68072 m!63555))

(assert (=> b!68072 m!61219))

(assert (=> b!68072 m!61219))

(declare-fun m!63557 () Bool)

(assert (=> b!68072 m!63557))

(assert (=> b!68074 m!61219))

(assert (=> b!68074 m!61219))

(assert (=> b!68074 m!63557))

(assert (=> d!13761 d!14565))

(declare-fun b!68078 () Bool)

(declare-fun e!44594 () Option!134)

(assert (=> b!68078 (= e!44594 None!132)))

(declare-fun b!68077 () Bool)

(assert (=> b!68077 (= e!44594 (getValueByKey!128 (t!4939 lt!28902) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68075 () Bool)

(declare-fun e!44593 () Option!134)

(assert (=> b!68075 (= e!44593 (Some!133 (_2!1052 (h!2046 lt!28902))))))

(declare-fun d!14567 () Bool)

(declare-fun c!9599 () Bool)

(assert (=> d!14567 (= c!9599 (and ((_ is Cons!1462) lt!28902) (= (_1!1052 (h!2046 lt!28902)) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14567 (= (getValueByKey!128 lt!28902 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44593)))

(declare-fun b!68076 () Bool)

(assert (=> b!68076 (= e!44593 e!44594)))

(declare-fun c!9600 () Bool)

(assert (=> b!68076 (= c!9600 (and ((_ is Cons!1462) lt!28902) (not (= (_1!1052 (h!2046 lt!28902)) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14567 c!9599) b!68075))

(assert (= (and d!14567 (not c!9599)) b!68076))

(assert (= (and b!68076 c!9600) b!68077))

(assert (= (and b!68076 (not c!9600)) b!68078))

(declare-fun m!63559 () Bool)

(assert (=> b!68077 m!63559))

(assert (=> d!13761 d!14567))

(declare-fun d!14569 () Bool)

(assert (=> d!14569 (= (getValueByKey!128 lt!28902 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!29604 () Unit!1818)

(assert (=> d!14569 (= lt!29604 (choose!375 lt!28902 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun e!44595 () Bool)

(assert (=> d!14569 e!44595))

(declare-fun res!36671 () Bool)

(assert (=> d!14569 (=> (not res!36671) (not e!44595))))

(assert (=> d!14569 (= res!36671 (isStrictlySorted!284 lt!28902))))

(assert (=> d!14569 (= (lemmaContainsTupThenGetReturnValue!48 lt!28902 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29604)))

(declare-fun b!68079 () Bool)

(declare-fun res!36672 () Bool)

(assert (=> b!68079 (=> (not res!36672) (not e!44595))))

(assert (=> b!68079 (= res!36672 (containsKey!132 lt!28902 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68080 () Bool)

(assert (=> b!68080 (= e!44595 (contains!707 lt!28902 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14569 res!36671) b!68079))

(assert (= (and b!68079 res!36672) b!68080))

(assert (=> d!14569 m!61213))

(declare-fun m!63561 () Bool)

(assert (=> d!14569 m!63561))

(declare-fun m!63563 () Bool)

(assert (=> d!14569 m!63563))

(declare-fun m!63565 () Bool)

(assert (=> b!68079 m!63565))

(declare-fun m!63567 () Bool)

(assert (=> b!68080 m!63567))

(assert (=> d!13761 d!14569))

(declare-fun bm!5733 () Bool)

(declare-fun call!5737 () List!1466)

(declare-fun call!5738 () List!1466)

(assert (=> bm!5733 (= call!5737 call!5738)))

(declare-fun d!14571 () Bool)

(declare-fun e!44597 () Bool)

(assert (=> d!14571 e!44597))

(declare-fun res!36674 () Bool)

(assert (=> d!14571 (=> (not res!36674) (not e!44597))))

(declare-fun lt!29605 () List!1466)

(assert (=> d!14571 (= res!36674 (isStrictlySorted!284 lt!29605))))

(declare-fun e!44598 () List!1466)

(assert (=> d!14571 (= lt!29605 e!44598)))

(declare-fun c!9602 () Bool)

(assert (=> d!14571 (= c!9602 (and ((_ is Cons!1462) (toList!705 lt!28677)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28677))) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14571 (isStrictlySorted!284 (toList!705 lt!28677))))

(assert (=> d!14571 (= (insertStrictlySorted!51 (toList!705 lt!28677) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29605)))

(declare-fun c!9601 () Bool)

(declare-fun b!68081 () Bool)

(assert (=> b!68081 (= c!9601 (and ((_ is Cons!1462) (toList!705 lt!28677)) (bvsgt (_1!1052 (h!2046 (toList!705 lt!28677))) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun e!44599 () List!1466)

(declare-fun e!44596 () List!1466)

(assert (=> b!68081 (= e!44599 e!44596)))

(declare-fun c!9604 () Bool)

(declare-fun e!44600 () List!1466)

(declare-fun b!68082 () Bool)

(assert (=> b!68082 (= e!44600 (ite c!9604 (t!4939 (toList!705 lt!28677)) (ite c!9601 (Cons!1462 (h!2046 (toList!705 lt!28677)) (t!4939 (toList!705 lt!28677))) Nil!1463)))))

(declare-fun b!68083 () Bool)

(assert (=> b!68083 (= e!44598 e!44599)))

(assert (=> b!68083 (= c!9604 (and ((_ is Cons!1462) (toList!705 lt!28677)) (= (_1!1052 (h!2046 (toList!705 lt!28677))) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun bm!5734 () Bool)

(declare-fun call!5736 () List!1466)

(assert (=> bm!5734 (= call!5738 call!5736)))

(declare-fun b!68084 () Bool)

(assert (=> b!68084 (= e!44600 (insertStrictlySorted!51 (t!4939 (toList!705 lt!28677)) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68085 () Bool)

(assert (=> b!68085 (= e!44597 (contains!707 lt!29605 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!68086 () Bool)

(assert (=> b!68086 (= e!44599 call!5738)))

(declare-fun b!68087 () Bool)

(assert (=> b!68087 (= e!44598 call!5736)))

(declare-fun b!68088 () Bool)

(declare-fun res!36673 () Bool)

(assert (=> b!68088 (=> (not res!36673) (not e!44597))))

(assert (=> b!68088 (= res!36673 (containsKey!132 lt!29605 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68089 () Bool)

(assert (=> b!68089 (= e!44596 call!5737)))

(declare-fun b!68090 () Bool)

(assert (=> b!68090 (= e!44596 call!5737)))

(declare-fun bm!5735 () Bool)

(assert (=> bm!5735 (= call!5736 ($colon$colon!62 e!44600 (ite c!9602 (h!2046 (toList!705 lt!28677)) (tuple2!2083 (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(declare-fun c!9603 () Bool)

(assert (=> bm!5735 (= c!9603 c!9602)))

(assert (= (and d!14571 c!9602) b!68087))

(assert (= (and d!14571 (not c!9602)) b!68083))

(assert (= (and b!68083 c!9604) b!68086))

(assert (= (and b!68083 (not c!9604)) b!68081))

(assert (= (and b!68081 c!9601) b!68090))

(assert (= (and b!68081 (not c!9601)) b!68089))

(assert (= (or b!68090 b!68089) bm!5733))

(assert (= (or b!68086 bm!5733) bm!5734))

(assert (= (or b!68087 bm!5734) bm!5735))

(assert (= (and bm!5735 c!9603) b!68084))

(assert (= (and bm!5735 (not c!9603)) b!68082))

(assert (= (and d!14571 res!36674) b!68088))

(assert (= (and b!68088 res!36673) b!68085))

(declare-fun m!63569 () Bool)

(assert (=> d!14571 m!63569))

(declare-fun m!63571 () Bool)

(assert (=> d!14571 m!63571))

(declare-fun m!63573 () Bool)

(assert (=> b!68088 m!63573))

(declare-fun m!63575 () Bool)

(assert (=> b!68085 m!63575))

(declare-fun m!63577 () Bool)

(assert (=> bm!5735 m!63577))

(declare-fun m!63579 () Bool)

(assert (=> b!68084 m!63579))

(assert (=> d!13761 d!14571))

(declare-fun d!14573 () Bool)

(assert (=> d!14573 (= (apply!72 lt!29015 lt!29013) (get!1123 (getValueByKey!128 (toList!705 lt!29015) lt!29013)))))

(declare-fun bs!2920 () Bool)

(assert (= bs!2920 d!14573))

(declare-fun m!63581 () Bool)

(assert (=> bs!2920 m!63581))

(assert (=> bs!2920 m!63581))

(declare-fun m!63583 () Bool)

(assert (=> bs!2920 m!63583))

(assert (=> b!66982 d!14573))

(declare-fun d!14575 () Bool)

(declare-fun e!44601 () Bool)

(assert (=> d!14575 e!44601))

(declare-fun res!36675 () Bool)

(assert (=> d!14575 (=> (not res!36675) (not e!44601))))

(declare-fun lt!29607 () ListLongMap!1379)

(assert (=> d!14575 (= res!36675 (contains!705 lt!29607 (_1!1052 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16)))))))

(declare-fun lt!29609 () List!1466)

(assert (=> d!14575 (= lt!29607 (ListLongMap!1380 lt!29609))))

(declare-fun lt!29606 () Unit!1818)

(declare-fun lt!29608 () Unit!1818)

(assert (=> d!14575 (= lt!29606 lt!29608)))

(assert (=> d!14575 (= (getValueByKey!128 lt!29609 (_1!1052 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14575 (= lt!29608 (lemmaContainsTupThenGetReturnValue!48 lt!29609 (_1!1052 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14575 (= lt!29609 (insertStrictlySorted!51 (toList!705 lt!29024) (_1!1052 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14575 (= (+!87 lt!29024 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16))) lt!29607)))

(declare-fun b!68091 () Bool)

(declare-fun res!36676 () Bool)

(assert (=> b!68091 (=> (not res!36676) (not e!44601))))

(assert (=> b!68091 (= res!36676 (= (getValueByKey!128 (toList!705 lt!29607) (_1!1052 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16))))))))

(declare-fun b!68092 () Bool)

(assert (=> b!68092 (= e!44601 (contains!707 (toList!705 lt!29607) (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16))))))

(assert (= (and d!14575 res!36675) b!68091))

(assert (= (and b!68091 res!36676) b!68092))

(declare-fun m!63585 () Bool)

(assert (=> d!14575 m!63585))

(declare-fun m!63587 () Bool)

(assert (=> d!14575 m!63587))

(declare-fun m!63589 () Bool)

(assert (=> d!14575 m!63589))

(declare-fun m!63591 () Bool)

(assert (=> d!14575 m!63591))

(declare-fun m!63593 () Bool)

(assert (=> b!68091 m!63593))

(declare-fun m!63595 () Bool)

(assert (=> b!68092 m!63595))

(assert (=> b!66982 d!14575))

(declare-fun d!14577 () Bool)

(assert (=> d!14577 (= (apply!72 (+!87 lt!29024 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16))) lt!29029) (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!29024 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16)))) lt!29029)))))

(declare-fun bs!2921 () Bool)

(assert (= bs!2921 d!14577))

(declare-fun m!63597 () Bool)

(assert (=> bs!2921 m!63597))

(assert (=> bs!2921 m!63597))

(declare-fun m!63599 () Bool)

(assert (=> bs!2921 m!63599))

(assert (=> b!66982 d!14577))

(declare-fun d!14579 () Bool)

(assert (=> d!14579 (= (apply!72 (+!87 lt!29024 (tuple2!2083 lt!29027 (zeroValue!2054 newMap!16))) lt!29029) (apply!72 lt!29024 lt!29029))))

(declare-fun lt!29610 () Unit!1818)

(assert (=> d!14579 (= lt!29610 (choose!377 lt!29024 lt!29027 (zeroValue!2054 newMap!16) lt!29029))))

(declare-fun e!44602 () Bool)

(assert (=> d!14579 e!44602))

(declare-fun res!36677 () Bool)

(assert (=> d!14579 (=> (not res!36677) (not e!44602))))

(assert (=> d!14579 (= res!36677 (contains!705 lt!29024 lt!29029))))

(assert (=> d!14579 (= (addApplyDifferent!48 lt!29024 lt!29027 (zeroValue!2054 newMap!16) lt!29029) lt!29610)))

(declare-fun b!68093 () Bool)

(assert (=> b!68093 (= e!44602 (not (= lt!29029 lt!29027)))))

(assert (= (and d!14579 res!36677) b!68093))

(assert (=> d!14579 m!61541))

(assert (=> d!14579 m!61559))

(declare-fun m!63601 () Bool)

(assert (=> d!14579 m!63601))

(assert (=> d!14579 m!61541))

(assert (=> d!14579 m!61543))

(declare-fun m!63603 () Bool)

(assert (=> d!14579 m!63603))

(assert (=> b!66982 d!14579))

(assert (=> b!66982 d!14525))

(declare-fun d!14581 () Bool)

(assert (=> d!14581 (= (apply!72 lt!29022 lt!29026) (get!1123 (getValueByKey!128 (toList!705 lt!29022) lt!29026)))))

(declare-fun bs!2922 () Bool)

(assert (= bs!2922 d!14581))

(declare-fun m!63605 () Bool)

(assert (=> bs!2922 m!63605))

(assert (=> bs!2922 m!63605))

(declare-fun m!63607 () Bool)

(assert (=> bs!2922 m!63607))

(assert (=> b!66982 d!14581))

(declare-fun d!14583 () Bool)

(declare-fun e!44603 () Bool)

(assert (=> d!14583 e!44603))

(declare-fun res!36678 () Bool)

(assert (=> d!14583 (=> (not res!36678) (not e!44603))))

(declare-fun lt!29612 () ListLongMap!1379)

(assert (=> d!14583 (= res!36678 (contains!705 lt!29612 (_1!1052 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16)))))))

(declare-fun lt!29614 () List!1466)

(assert (=> d!14583 (= lt!29612 (ListLongMap!1380 lt!29614))))

(declare-fun lt!29611 () Unit!1818)

(declare-fun lt!29613 () Unit!1818)

(assert (=> d!14583 (= lt!29611 lt!29613)))

(assert (=> d!14583 (= (getValueByKey!128 lt!29614 (_1!1052 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14583 (= lt!29613 (lemmaContainsTupThenGetReturnValue!48 lt!29614 (_1!1052 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14583 (= lt!29614 (insertStrictlySorted!51 (toList!705 lt!29018) (_1!1052 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14583 (= (+!87 lt!29018 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16))) lt!29612)))

(declare-fun b!68094 () Bool)

(declare-fun res!36679 () Bool)

(assert (=> b!68094 (=> (not res!36679) (not e!44603))))

(assert (=> b!68094 (= res!36679 (= (getValueByKey!128 (toList!705 lt!29612) (_1!1052 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16))))))))

(declare-fun b!68095 () Bool)

(assert (=> b!68095 (= e!44603 (contains!707 (toList!705 lt!29612) (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16))))))

(assert (= (and d!14583 res!36678) b!68094))

(assert (= (and b!68094 res!36679) b!68095))

(declare-fun m!63609 () Bool)

(assert (=> d!14583 m!63609))

(declare-fun m!63611 () Bool)

(assert (=> d!14583 m!63611))

(declare-fun m!63613 () Bool)

(assert (=> d!14583 m!63613))

(declare-fun m!63615 () Bool)

(assert (=> d!14583 m!63615))

(declare-fun m!63617 () Bool)

(assert (=> b!68094 m!63617))

(declare-fun m!63619 () Bool)

(assert (=> b!68095 m!63619))

(assert (=> b!66982 d!14583))

(declare-fun d!14585 () Bool)

(assert (=> d!14585 (= (apply!72 (+!87 lt!29022 (tuple2!2083 lt!29025 (minValue!2054 newMap!16))) lt!29026) (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!29022 (tuple2!2083 lt!29025 (minValue!2054 newMap!16)))) lt!29026)))))

(declare-fun bs!2923 () Bool)

(assert (= bs!2923 d!14585))

(declare-fun m!63621 () Bool)

(assert (=> bs!2923 m!63621))

(assert (=> bs!2923 m!63621))

(declare-fun m!63623 () Bool)

(assert (=> bs!2923 m!63623))

(assert (=> b!66982 d!14585))

(declare-fun d!14587 () Bool)

(assert (=> d!14587 (= (apply!72 (+!87 lt!29015 (tuple2!2083 lt!29019 (minValue!2054 newMap!16))) lt!29013) (apply!72 lt!29015 lt!29013))))

(declare-fun lt!29615 () Unit!1818)

(assert (=> d!14587 (= lt!29615 (choose!377 lt!29015 lt!29019 (minValue!2054 newMap!16) lt!29013))))

(declare-fun e!44604 () Bool)

(assert (=> d!14587 e!44604))

(declare-fun res!36680 () Bool)

(assert (=> d!14587 (=> (not res!36680) (not e!44604))))

(assert (=> d!14587 (= res!36680 (contains!705 lt!29015 lt!29013))))

(assert (=> d!14587 (= (addApplyDifferent!48 lt!29015 lt!29019 (minValue!2054 newMap!16) lt!29013) lt!29615)))

(declare-fun b!68096 () Bool)

(assert (=> b!68096 (= e!44604 (not (= lt!29013 lt!29019)))))

(assert (= (and d!14587 res!36680) b!68096))

(assert (=> d!14587 m!61555))

(assert (=> d!14587 m!61557))

(declare-fun m!63625 () Bool)

(assert (=> d!14587 m!63625))

(assert (=> d!14587 m!61555))

(assert (=> d!14587 m!61561))

(declare-fun m!63627 () Bool)

(assert (=> d!14587 m!63627))

(assert (=> b!66982 d!14587))

(declare-fun d!14589 () Bool)

(assert (=> d!14589 (contains!705 (+!87 lt!29018 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16))) lt!29030)))

(declare-fun lt!29616 () Unit!1818)

(assert (=> d!14589 (= lt!29616 (choose!376 lt!29018 lt!29031 (zeroValue!2054 newMap!16) lt!29030))))

(assert (=> d!14589 (contains!705 lt!29018 lt!29030)))

(assert (=> d!14589 (= (addStillContains!48 lt!29018 lt!29031 (zeroValue!2054 newMap!16) lt!29030) lt!29616)))

(declare-fun bs!2924 () Bool)

(assert (= bs!2924 d!14589))

(assert (=> bs!2924 m!61537))

(assert (=> bs!2924 m!61537))

(assert (=> bs!2924 m!61539))

(declare-fun m!63629 () Bool)

(assert (=> bs!2924 m!63629))

(declare-fun m!63631 () Bool)

(assert (=> bs!2924 m!63631))

(assert (=> b!66982 d!14589))

(declare-fun d!14591 () Bool)

(assert (=> d!14591 (= (apply!72 (+!87 lt!29022 (tuple2!2083 lt!29025 (minValue!2054 newMap!16))) lt!29026) (apply!72 lt!29022 lt!29026))))

(declare-fun lt!29617 () Unit!1818)

(assert (=> d!14591 (= lt!29617 (choose!377 lt!29022 lt!29025 (minValue!2054 newMap!16) lt!29026))))

(declare-fun e!44605 () Bool)

(assert (=> d!14591 e!44605))

(declare-fun res!36681 () Bool)

(assert (=> d!14591 (=> (not res!36681) (not e!44605))))

(assert (=> d!14591 (= res!36681 (contains!705 lt!29022 lt!29026))))

(assert (=> d!14591 (= (addApplyDifferent!48 lt!29022 lt!29025 (minValue!2054 newMap!16) lt!29026) lt!29617)))

(declare-fun b!68097 () Bool)

(assert (=> b!68097 (= e!44605 (not (= lt!29026 lt!29025)))))

(assert (= (and d!14591 res!36681) b!68097))

(assert (=> d!14591 m!61545))

(assert (=> d!14591 m!61549))

(declare-fun m!63633 () Bool)

(assert (=> d!14591 m!63633))

(assert (=> d!14591 m!61545))

(assert (=> d!14591 m!61547))

(declare-fun m!63635 () Bool)

(assert (=> d!14591 m!63635))

(assert (=> b!66982 d!14591))

(declare-fun d!14593 () Bool)

(declare-fun e!44606 () Bool)

(assert (=> d!14593 e!44606))

(declare-fun res!36682 () Bool)

(assert (=> d!14593 (=> (not res!36682) (not e!44606))))

(declare-fun lt!29619 () ListLongMap!1379)

(assert (=> d!14593 (= res!36682 (contains!705 lt!29619 (_1!1052 (tuple2!2083 lt!29025 (minValue!2054 newMap!16)))))))

(declare-fun lt!29621 () List!1466)

(assert (=> d!14593 (= lt!29619 (ListLongMap!1380 lt!29621))))

(declare-fun lt!29618 () Unit!1818)

(declare-fun lt!29620 () Unit!1818)

(assert (=> d!14593 (= lt!29618 lt!29620)))

(assert (=> d!14593 (= (getValueByKey!128 lt!29621 (_1!1052 (tuple2!2083 lt!29025 (minValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!29025 (minValue!2054 newMap!16)))))))

(assert (=> d!14593 (= lt!29620 (lemmaContainsTupThenGetReturnValue!48 lt!29621 (_1!1052 (tuple2!2083 lt!29025 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29025 (minValue!2054 newMap!16)))))))

(assert (=> d!14593 (= lt!29621 (insertStrictlySorted!51 (toList!705 lt!29022) (_1!1052 (tuple2!2083 lt!29025 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29025 (minValue!2054 newMap!16)))))))

(assert (=> d!14593 (= (+!87 lt!29022 (tuple2!2083 lt!29025 (minValue!2054 newMap!16))) lt!29619)))

(declare-fun b!68098 () Bool)

(declare-fun res!36683 () Bool)

(assert (=> b!68098 (=> (not res!36683) (not e!44606))))

(assert (=> b!68098 (= res!36683 (= (getValueByKey!128 (toList!705 lt!29619) (_1!1052 (tuple2!2083 lt!29025 (minValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!29025 (minValue!2054 newMap!16))))))))

(declare-fun b!68099 () Bool)

(assert (=> b!68099 (= e!44606 (contains!707 (toList!705 lt!29619) (tuple2!2083 lt!29025 (minValue!2054 newMap!16))))))

(assert (= (and d!14593 res!36682) b!68098))

(assert (= (and b!68098 res!36683) b!68099))

(declare-fun m!63637 () Bool)

(assert (=> d!14593 m!63637))

(declare-fun m!63639 () Bool)

(assert (=> d!14593 m!63639))

(declare-fun m!63641 () Bool)

(assert (=> d!14593 m!63641))

(declare-fun m!63643 () Bool)

(assert (=> d!14593 m!63643))

(declare-fun m!63645 () Bool)

(assert (=> b!68098 m!63645))

(declare-fun m!63647 () Bool)

(assert (=> b!68099 m!63647))

(assert (=> b!66982 d!14593))

(declare-fun d!14595 () Bool)

(declare-fun e!44607 () Bool)

(assert (=> d!14595 e!44607))

(declare-fun res!36684 () Bool)

(assert (=> d!14595 (=> res!36684 e!44607)))

(declare-fun lt!29625 () Bool)

(assert (=> d!14595 (= res!36684 (not lt!29625))))

(declare-fun lt!29624 () Bool)

(assert (=> d!14595 (= lt!29625 lt!29624)))

(declare-fun lt!29622 () Unit!1818)

(declare-fun e!44608 () Unit!1818)

(assert (=> d!14595 (= lt!29622 e!44608)))

(declare-fun c!9605 () Bool)

(assert (=> d!14595 (= c!9605 lt!29624)))

(assert (=> d!14595 (= lt!29624 (containsKey!132 (toList!705 (+!87 lt!29018 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16)))) lt!29030))))

(assert (=> d!14595 (= (contains!705 (+!87 lt!29018 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16))) lt!29030) lt!29625)))

(declare-fun b!68100 () Bool)

(declare-fun lt!29623 () Unit!1818)

(assert (=> b!68100 (= e!44608 lt!29623)))

(assert (=> b!68100 (= lt!29623 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 (+!87 lt!29018 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16)))) lt!29030))))

(assert (=> b!68100 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!29018 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16)))) lt!29030))))

(declare-fun b!68101 () Bool)

(declare-fun Unit!1896 () Unit!1818)

(assert (=> b!68101 (= e!44608 Unit!1896)))

(declare-fun b!68102 () Bool)

(assert (=> b!68102 (= e!44607 (isDefined!82 (getValueByKey!128 (toList!705 (+!87 lt!29018 (tuple2!2083 lt!29031 (zeroValue!2054 newMap!16)))) lt!29030)))))

(assert (= (and d!14595 c!9605) b!68100))

(assert (= (and d!14595 (not c!9605)) b!68101))

(assert (= (and d!14595 (not res!36684)) b!68102))

(declare-fun m!63649 () Bool)

(assert (=> d!14595 m!63649))

(declare-fun m!63651 () Bool)

(assert (=> b!68100 m!63651))

(declare-fun m!63653 () Bool)

(assert (=> b!68100 m!63653))

(assert (=> b!68100 m!63653))

(declare-fun m!63655 () Bool)

(assert (=> b!68100 m!63655))

(assert (=> b!68102 m!63653))

(assert (=> b!68102 m!63653))

(assert (=> b!68102 m!63655))

(assert (=> b!66982 d!14595))

(declare-fun d!14597 () Bool)

(assert (=> d!14597 (= (apply!72 (+!87 lt!29015 (tuple2!2083 lt!29019 (minValue!2054 newMap!16))) lt!29013) (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!29015 (tuple2!2083 lt!29019 (minValue!2054 newMap!16)))) lt!29013)))))

(declare-fun bs!2925 () Bool)

(assert (= bs!2925 d!14597))

(declare-fun m!63657 () Bool)

(assert (=> bs!2925 m!63657))

(assert (=> bs!2925 m!63657))

(declare-fun m!63659 () Bool)

(assert (=> bs!2925 m!63659))

(assert (=> b!66982 d!14597))

(declare-fun d!14599 () Bool)

(assert (=> d!14599 (= (apply!72 lt!29024 lt!29029) (get!1123 (getValueByKey!128 (toList!705 lt!29024) lt!29029)))))

(declare-fun bs!2926 () Bool)

(assert (= bs!2926 d!14599))

(declare-fun m!63661 () Bool)

(assert (=> bs!2926 m!63661))

(assert (=> bs!2926 m!63661))

(declare-fun m!63663 () Bool)

(assert (=> bs!2926 m!63663))

(assert (=> b!66982 d!14599))

(declare-fun d!14601 () Bool)

(declare-fun e!44609 () Bool)

(assert (=> d!14601 e!44609))

(declare-fun res!36685 () Bool)

(assert (=> d!14601 (=> (not res!36685) (not e!44609))))

(declare-fun lt!29627 () ListLongMap!1379)

(assert (=> d!14601 (= res!36685 (contains!705 lt!29627 (_1!1052 (tuple2!2083 lt!29019 (minValue!2054 newMap!16)))))))

(declare-fun lt!29629 () List!1466)

(assert (=> d!14601 (= lt!29627 (ListLongMap!1380 lt!29629))))

(declare-fun lt!29626 () Unit!1818)

(declare-fun lt!29628 () Unit!1818)

(assert (=> d!14601 (= lt!29626 lt!29628)))

(assert (=> d!14601 (= (getValueByKey!128 lt!29629 (_1!1052 (tuple2!2083 lt!29019 (minValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!29019 (minValue!2054 newMap!16)))))))

(assert (=> d!14601 (= lt!29628 (lemmaContainsTupThenGetReturnValue!48 lt!29629 (_1!1052 (tuple2!2083 lt!29019 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29019 (minValue!2054 newMap!16)))))))

(assert (=> d!14601 (= lt!29629 (insertStrictlySorted!51 (toList!705 lt!29015) (_1!1052 (tuple2!2083 lt!29019 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29019 (minValue!2054 newMap!16)))))))

(assert (=> d!14601 (= (+!87 lt!29015 (tuple2!2083 lt!29019 (minValue!2054 newMap!16))) lt!29627)))

(declare-fun b!68103 () Bool)

(declare-fun res!36686 () Bool)

(assert (=> b!68103 (=> (not res!36686) (not e!44609))))

(assert (=> b!68103 (= res!36686 (= (getValueByKey!128 (toList!705 lt!29627) (_1!1052 (tuple2!2083 lt!29019 (minValue!2054 newMap!16)))) (Some!133 (_2!1052 (tuple2!2083 lt!29019 (minValue!2054 newMap!16))))))))

(declare-fun b!68104 () Bool)

(assert (=> b!68104 (= e!44609 (contains!707 (toList!705 lt!29627) (tuple2!2083 lt!29019 (minValue!2054 newMap!16))))))

(assert (= (and d!14601 res!36685) b!68103))

(assert (= (and b!68103 res!36686) b!68104))

(declare-fun m!63665 () Bool)

(assert (=> d!14601 m!63665))

(declare-fun m!63667 () Bool)

(assert (=> d!14601 m!63667))

(declare-fun m!63669 () Bool)

(assert (=> d!14601 m!63669))

(declare-fun m!63671 () Bool)

(assert (=> d!14601 m!63671))

(declare-fun m!63673 () Bool)

(assert (=> b!68103 m!63673))

(declare-fun m!63675 () Bool)

(assert (=> b!68104 m!63675))

(assert (=> b!66982 d!14601))

(declare-fun d!14603 () Bool)

(assert (=> d!14603 (= (get!1123 (getValueByKey!128 (toList!705 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28684)) (v!2475 (getValueByKey!128 (toList!705 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28684)))))

(assert (=> d!13753 d!14603))

(declare-fun b!68108 () Bool)

(declare-fun e!44611 () Option!134)

(assert (=> b!68108 (= e!44611 None!132)))

(declare-fun b!68107 () Bool)

(assert (=> b!68107 (= e!44611 (getValueByKey!128 (t!4939 (toList!705 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) lt!28684))))

(declare-fun e!44610 () Option!134)

(declare-fun b!68105 () Bool)

(assert (=> b!68105 (= e!44610 (Some!133 (_2!1052 (h!2046 (toList!705 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))))

(declare-fun d!14605 () Bool)

(declare-fun c!9606 () Bool)

(assert (=> d!14605 (= c!9606 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))) lt!28684)))))

(assert (=> d!14605 (= (getValueByKey!128 (toList!705 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!28684) e!44610)))

(declare-fun b!68106 () Bool)

(assert (=> b!68106 (= e!44610 e!44611)))

(declare-fun c!9607 () Bool)

(assert (=> b!68106 (= c!9607 (and ((_ is Cons!1462) (toList!705 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))) (not (= (_1!1052 (h!2046 (toList!705 (+!87 lt!28679 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))) lt!28684))))))

(assert (= (and d!14605 c!9606) b!68105))

(assert (= (and d!14605 (not c!9606)) b!68106))

(assert (= (and b!68106 c!9607) b!68107))

(assert (= (and b!68106 (not c!9607)) b!68108))

(declare-fun m!63677 () Bool)

(assert (=> b!68107 m!63677))

(assert (=> d!13753 d!14605))

(assert (=> b!66668 d!14289))

(declare-fun d!14607 () Bool)

(declare-fun e!44612 () Bool)

(assert (=> d!14607 e!44612))

(declare-fun res!36687 () Bool)

(assert (=> d!14607 (=> (not res!36687) (not e!44612))))

(declare-fun lt!29631 () ListLongMap!1379)

(assert (=> d!14607 (= res!36687 (contains!705 lt!29631 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(declare-fun lt!29633 () List!1466)

(assert (=> d!14607 (= lt!29631 (ListLongMap!1380 lt!29633))))

(declare-fun lt!29630 () Unit!1818)

(declare-fun lt!29632 () Unit!1818)

(assert (=> d!14607 (= lt!29630 lt!29632)))

(assert (=> d!14607 (= (getValueByKey!128 lt!29633 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!14607 (= lt!29632 (lemmaContainsTupThenGetReturnValue!48 lt!29633 (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!14607 (= lt!29633 (insertStrictlySorted!51 (toList!705 (map!1133 newMap!16)) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))))))

(assert (=> d!14607 (= (+!87 (map!1133 newMap!16) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) lt!29631)))

(declare-fun b!68109 () Bool)

(declare-fun res!36688 () Bool)

(assert (=> b!68109 (=> (not res!36688) (not e!44612))))

(assert (=> b!68109 (= res!36688 (= (getValueByKey!128 (toList!705 lt!29631) (_1!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400))) (Some!133 (_2!1052 (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))))

(declare-fun b!68110 () Bool)

(assert (=> b!68110 (= e!44612 (contains!707 (toList!705 lt!29631) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(assert (= (and d!14607 res!36687) b!68109))

(assert (= (and b!68109 res!36688) b!68110))

(declare-fun m!63679 () Bool)

(assert (=> d!14607 m!63679))

(declare-fun m!63681 () Bool)

(assert (=> d!14607 m!63681))

(declare-fun m!63683 () Bool)

(assert (=> d!14607 m!63683))

(declare-fun m!63685 () Bool)

(assert (=> d!14607 m!63685))

(declare-fun m!63687 () Bool)

(assert (=> b!68109 m!63687))

(declare-fun m!63689 () Bool)

(assert (=> b!68110 m!63689))

(assert (=> b!66668 d!14607))

(assert (=> b!66668 d!13657))

(declare-fun d!14609 () Bool)

(declare-fun e!44613 () Bool)

(assert (=> d!14609 e!44613))

(declare-fun res!36689 () Bool)

(assert (=> d!14609 (=> res!36689 e!44613)))

(declare-fun lt!29637 () Bool)

(assert (=> d!14609 (= res!36689 (not lt!29637))))

(declare-fun lt!29636 () Bool)

(assert (=> d!14609 (= lt!29637 lt!29636)))

(declare-fun lt!29634 () Unit!1818)

(declare-fun e!44614 () Unit!1818)

(assert (=> d!14609 (= lt!29634 e!44614)))

(declare-fun c!9608 () Bool)

(assert (=> d!14609 (= c!9608 lt!29636)))

(assert (=> d!14609 (= lt!29636 (containsKey!132 (toList!705 lt!28877) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> d!14609 (= (contains!705 lt!28877 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29637)))

(declare-fun b!68111 () Bool)

(declare-fun lt!29635 () Unit!1818)

(assert (=> b!68111 (= e!44614 lt!29635)))

(assert (=> b!68111 (= lt!29635 (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28877) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(assert (=> b!68111 (isDefined!82 (getValueByKey!128 (toList!705 lt!28877) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68112 () Bool)

(declare-fun Unit!1897 () Unit!1818)

(assert (=> b!68112 (= e!44614 Unit!1897)))

(declare-fun b!68113 () Bool)

(assert (=> b!68113 (= e!44613 (isDefined!82 (getValueByKey!128 (toList!705 lt!28877) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14609 c!9608) b!68111))

(assert (= (and d!14609 (not c!9608)) b!68112))

(assert (= (and d!14609 (not res!36689)) b!68113))

(declare-fun m!63691 () Bool)

(assert (=> d!14609 m!63691))

(declare-fun m!63693 () Bool)

(assert (=> b!68111 m!63693))

(assert (=> b!68111 m!61147))

(assert (=> b!68111 m!61147))

(declare-fun m!63695 () Bool)

(assert (=> b!68111 m!63695))

(assert (=> b!68113 m!61147))

(assert (=> b!68113 m!61147))

(assert (=> b!68113 m!63695))

(assert (=> d!13739 d!14609))

(declare-fun b!68117 () Bool)

(declare-fun e!44616 () Option!134)

(assert (=> b!68117 (= e!44616 None!132)))

(declare-fun b!68116 () Bool)

(assert (=> b!68116 (= e!44616 (getValueByKey!128 (t!4939 lt!28879) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68114 () Bool)

(declare-fun e!44615 () Option!134)

(assert (=> b!68114 (= e!44615 (Some!133 (_2!1052 (h!2046 lt!28879))))))

(declare-fun c!9609 () Bool)

(declare-fun d!14611 () Bool)

(assert (=> d!14611 (= c!9609 (and ((_ is Cons!1462) lt!28879) (= (_1!1052 (h!2046 lt!28879)) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14611 (= (getValueByKey!128 lt!28879 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44615)))

(declare-fun b!68115 () Bool)

(assert (=> b!68115 (= e!44615 e!44616)))

(declare-fun c!9610 () Bool)

(assert (=> b!68115 (= c!9610 (and ((_ is Cons!1462) lt!28879) (not (= (_1!1052 (h!2046 lt!28879)) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14611 c!9609) b!68114))

(assert (= (and d!14611 (not c!9609)) b!68115))

(assert (= (and b!68115 c!9610) b!68116))

(assert (= (and b!68115 (not c!9610)) b!68117))

(declare-fun m!63697 () Bool)

(assert (=> b!68116 m!63697))

(assert (=> d!13739 d!14611))

(declare-fun d!14613 () Bool)

(assert (=> d!14613 (= (getValueByKey!128 lt!28879 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) (Some!133 (_2!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun lt!29638 () Unit!1818)

(assert (=> d!14613 (= lt!29638 (choose!375 lt!28879 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun e!44617 () Bool)

(assert (=> d!14613 e!44617))

(declare-fun res!36690 () Bool)

(assert (=> d!14613 (=> (not res!36690) (not e!44617))))

(assert (=> d!14613 (= res!36690 (isStrictlySorted!284 lt!28879))))

(assert (=> d!14613 (= (lemmaContainsTupThenGetReturnValue!48 lt!28879 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29638)))

(declare-fun b!68118 () Bool)

(declare-fun res!36691 () Bool)

(assert (=> b!68118 (=> (not res!36691) (not e!44617))))

(assert (=> b!68118 (= res!36691 (containsKey!132 lt!28879 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68119 () Bool)

(assert (=> b!68119 (= e!44617 (contains!707 lt!28879 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (= (and d!14613 res!36690) b!68118))

(assert (= (and b!68118 res!36691) b!68119))

(assert (=> d!14613 m!61141))

(declare-fun m!63699 () Bool)

(assert (=> d!14613 m!63699))

(declare-fun m!63701 () Bool)

(assert (=> d!14613 m!63701))

(declare-fun m!63703 () Bool)

(assert (=> b!68118 m!63703))

(declare-fun m!63705 () Bool)

(assert (=> b!68119 m!63705))

(assert (=> d!13739 d!14613))

(declare-fun bm!5736 () Bool)

(declare-fun call!5740 () List!1466)

(declare-fun call!5741 () List!1466)

(assert (=> bm!5736 (= call!5740 call!5741)))

(declare-fun d!14615 () Bool)

(declare-fun e!44619 () Bool)

(assert (=> d!14615 e!44619))

(declare-fun res!36693 () Bool)

(assert (=> d!14615 (=> (not res!36693) (not e!44619))))

(declare-fun lt!29639 () List!1466)

(assert (=> d!14615 (= res!36693 (isStrictlySorted!284 lt!29639))))

(declare-fun e!44620 () List!1466)

(assert (=> d!14615 (= lt!29639 e!44620)))

(declare-fun c!9612 () Bool)

(assert (=> d!14615 (= c!9612 (and ((_ is Cons!1462) (toList!705 lt!28673)) (bvslt (_1!1052 (h!2046 (toList!705 lt!28673))) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14615 (isStrictlySorted!284 (toList!705 lt!28673))))

(assert (=> d!14615 (= (insertStrictlySorted!51 (toList!705 lt!28673) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) lt!29639)))

(declare-fun b!68120 () Bool)

(declare-fun c!9611 () Bool)

(assert (=> b!68120 (= c!9611 (and ((_ is Cons!1462) (toList!705 lt!28673)) (bvsgt (_1!1052 (h!2046 (toList!705 lt!28673))) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun e!44621 () List!1466)

(declare-fun e!44618 () List!1466)

(assert (=> b!68120 (= e!44621 e!44618)))

(declare-fun e!44622 () List!1466)

(declare-fun c!9614 () Bool)

(declare-fun b!68121 () Bool)

(assert (=> b!68121 (= e!44622 (ite c!9614 (t!4939 (toList!705 lt!28673)) (ite c!9611 (Cons!1462 (h!2046 (toList!705 lt!28673)) (t!4939 (toList!705 lt!28673))) Nil!1463)))))

(declare-fun b!68122 () Bool)

(assert (=> b!68122 (= e!44620 e!44621)))

(assert (=> b!68122 (= c!9614 (and ((_ is Cons!1462) (toList!705 lt!28673)) (= (_1!1052 (h!2046 (toList!705 lt!28673))) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun bm!5737 () Bool)

(declare-fun call!5739 () List!1466)

(assert (=> bm!5737 (= call!5741 call!5739)))

(declare-fun b!68123 () Bool)

(assert (=> b!68123 (= e!44622 (insertStrictlySorted!51 (t!4939 (toList!705 lt!28673)) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68124 () Bool)

(assert (=> b!68124 (= e!44619 (contains!707 lt!29639 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(declare-fun b!68125 () Bool)

(assert (=> b!68125 (= e!44621 call!5741)))

(declare-fun b!68126 () Bool)

(assert (=> b!68126 (= e!44620 call!5739)))

(declare-fun b!68127 () Bool)

(declare-fun res!36692 () Bool)

(assert (=> b!68127 (=> (not res!36692) (not e!44619))))

(assert (=> b!68127 (= res!36692 (containsKey!132 lt!29639 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68128 () Bool)

(assert (=> b!68128 (= e!44618 call!5740)))

(declare-fun b!68129 () Bool)

(assert (=> b!68129 (= e!44618 call!5740)))

(declare-fun bm!5738 () Bool)

(assert (=> bm!5738 (= call!5739 ($colon$colon!62 e!44622 (ite c!9612 (h!2046 (toList!705 lt!28673)) (tuple2!2083 (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))) (_2!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(declare-fun c!9613 () Bool)

(assert (=> bm!5738 (= c!9613 c!9612)))

(assert (= (and d!14615 c!9612) b!68126))

(assert (= (and d!14615 (not c!9612)) b!68122))

(assert (= (and b!68122 c!9614) b!68125))

(assert (= (and b!68122 (not c!9614)) b!68120))

(assert (= (and b!68120 c!9611) b!68129))

(assert (= (and b!68120 (not c!9611)) b!68128))

(assert (= (or b!68129 b!68128) bm!5736))

(assert (= (or b!68125 bm!5736) bm!5737))

(assert (= (or b!68126 bm!5737) bm!5738))

(assert (= (and bm!5738 c!9613) b!68123))

(assert (= (and bm!5738 (not c!9613)) b!68121))

(assert (= (and d!14615 res!36693) b!68127))

(assert (= (and b!68127 res!36692) b!68124))

(declare-fun m!63707 () Bool)

(assert (=> d!14615 m!63707))

(declare-fun m!63709 () Bool)

(assert (=> d!14615 m!63709))

(declare-fun m!63711 () Bool)

(assert (=> b!68127 m!63711))

(declare-fun m!63713 () Bool)

(assert (=> b!68124 m!63713))

(declare-fun m!63715 () Bool)

(assert (=> bm!5738 m!63715))

(declare-fun m!63717 () Bool)

(assert (=> b!68123 m!63717))

(assert (=> d!13739 d!14615))

(declare-fun b!68130 () Bool)

(declare-fun e!44624 () (_ BitVec 32))

(declare-fun call!5742 () (_ BitVec 32))

(assert (=> b!68130 (= e!44624 (bvadd #b00000000000000000000000000000001 call!5742))))

(declare-fun bm!5739 () Bool)

(assert (=> bm!5739 (= call!5742 (arrayCountValidKeys!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(declare-fun d!14617 () Bool)

(declare-fun lt!29640 () (_ BitVec 32))

(assert (=> d!14617 (and (bvsge lt!29640 #b00000000000000000000000000000000) (bvsle lt!29640 (bvsub (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!44623 () (_ BitVec 32))

(assert (=> d!14617 (= lt!29640 e!44623)))

(declare-fun c!9615 () Bool)

(assert (=> d!14617 (= c!9615 (bvsge #b00000000000000000000000000000000 (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> d!14617 (and (bvsle #b00000000000000000000000000000000 (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))))))

(assert (=> d!14617 (= (arrayCountValidKeys!0 (_keys!3785 (v!2469 (underlying!244 thiss!992))) #b00000000000000000000000000000000 (size!2058 (_keys!3785 (v!2469 (underlying!244 thiss!992))))) lt!29640)))

(declare-fun b!68131 () Bool)

(assert (=> b!68131 (= e!44624 call!5742)))

(declare-fun b!68132 () Bool)

(assert (=> b!68132 (= e!44623 e!44624)))

(declare-fun c!9616 () Bool)

(assert (=> b!68132 (= c!9616 (validKeyInArray!0 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!68133 () Bool)

(assert (=> b!68133 (= e!44623 #b00000000000000000000000000000000)))

(assert (= (and d!14617 c!9615) b!68133))

(assert (= (and d!14617 (not c!9615)) b!68132))

(assert (= (and b!68132 c!9616) b!68130))

(assert (= (and b!68132 (not c!9616)) b!68131))

(assert (= (or b!68130 b!68131) bm!5739))

(declare-fun m!63719 () Bool)

(assert (=> bm!5739 m!63719))

(assert (=> b!68132 m!63281))

(assert (=> b!68132 m!63281))

(assert (=> b!68132 m!63283))

(assert (=> b!66874 d!14617))

(assert (=> b!66577 d!13959))

(declare-fun d!14619 () Bool)

(declare-fun c!9617 () Bool)

(assert (=> d!14619 (= c!9617 ((_ is Nil!1463) (toList!705 lt!28521)))))

(declare-fun e!44625 () (InoxSet tuple2!2082))

(assert (=> d!14619 (= (content!71 (toList!705 lt!28521)) e!44625)))

(declare-fun b!68134 () Bool)

(assert (=> b!68134 (= e!44625 ((as const (Array tuple2!2082 Bool)) false))))

(declare-fun b!68135 () Bool)

(assert (=> b!68135 (= e!44625 ((_ map or) (store ((as const (Array tuple2!2082 Bool)) false) (h!2046 (toList!705 lt!28521)) true) (content!71 (t!4939 (toList!705 lt!28521)))))))

(assert (= (and d!14619 c!9617) b!68134))

(assert (= (and d!14619 (not c!9617)) b!68135))

(declare-fun m!63721 () Bool)

(assert (=> b!68135 m!63721))

(assert (=> b!68135 m!62019))

(assert (=> d!13723 d!14619))

(declare-fun d!14621 () Bool)

(assert (=> d!14621 (= (apply!72 lt!28724 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1123 (getValueByKey!128 (toList!705 lt!28724) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2927 () Bool)

(assert (= bs!2927 d!14621))

(assert (=> bs!2927 m!63513))

(assert (=> bs!2927 m!63513))

(declare-fun m!63723 () Bool)

(assert (=> bs!2927 m!63723))

(assert (=> b!66571 d!14621))

(declare-fun d!14623 () Bool)

(declare-fun lt!29641 () Bool)

(assert (=> d!14623 (= lt!29641 (select (content!72 (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!44627 () Bool)

(assert (=> d!14623 (= lt!29641 e!44627)))

(declare-fun res!36694 () Bool)

(assert (=> d!14623 (=> (not res!36694) (not e!44627))))

(assert (=> d!14623 (= res!36694 ((_ is Cons!1463) (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)))))

(assert (=> d!14623 (= (contains!708 (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!29641)))

(declare-fun b!68136 () Bool)

(declare-fun e!44626 () Bool)

(assert (=> b!68136 (= e!44627 e!44626)))

(declare-fun res!36695 () Bool)

(assert (=> b!68136 (=> res!36695 e!44626)))

(assert (=> b!68136 (= res!36695 (= (h!2047 (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!68137 () Bool)

(assert (=> b!68137 (= e!44626 (contains!708 (t!4940 (ite c!9168 (Cons!1463 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) Nil!1464) Nil!1464)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!14623 res!36694) b!68136))

(assert (= (and b!68136 (not res!36695)) b!68137))

(declare-fun m!63725 () Bool)

(assert (=> d!14623 m!63725))

(assert (=> d!14623 m!61235))

(declare-fun m!63727 () Bool)

(assert (=> d!14623 m!63727))

(assert (=> b!68137 m!61235))

(declare-fun m!63729 () Bool)

(assert (=> b!68137 m!63729))

(assert (=> b!66771 d!14623))

(assert (=> b!66702 d!14047))

(assert (=> b!66702 d!13785))

(declare-fun d!14625 () Bool)

(assert (=> d!14625 (contains!705 (getCurrentListMap!401 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1822 (_keys!3785 newMap!16)) (index!3073 lt!28615)))))

(assert (=> d!14625 true))

(declare-fun _$16!87 () Unit!1818)

(assert (=> d!14625 (= (choose!379 (_keys!3785 newMap!16) lt!28607 (mask!6080 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3073 lt!28615) (defaultEntry!2146 newMap!16)) _$16!87)))

(declare-fun bs!2928 () Bool)

(assert (= bs!2928 d!14625))

(assert (=> bs!2928 m!61305))

(assert (=> bs!2928 m!60741))

(assert (=> bs!2928 m!61305))

(assert (=> bs!2928 m!60741))

(assert (=> bs!2928 m!61307))

(assert (=> d!13797 d!14625))

(assert (=> d!13797 d!13991))

(declare-fun b!68141 () Bool)

(declare-fun e!44629 () Option!134)

(assert (=> b!68141 (= e!44629 None!132)))

(declare-fun b!68140 () Bool)

(assert (=> b!68140 (= e!44629 (getValueByKey!128 (t!4939 (toList!705 lt!28891)) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68138 () Bool)

(declare-fun e!44628 () Option!134)

(assert (=> b!68138 (= e!44628 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28891)))))))

(declare-fun d!14627 () Bool)

(declare-fun c!9618 () Bool)

(assert (=> d!14627 (= c!9618 (and ((_ is Cons!1462) (toList!705 lt!28891)) (= (_1!1052 (h!2046 (toList!705 lt!28891))) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14627 (= (getValueByKey!128 (toList!705 lt!28891) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44628)))

(declare-fun b!68139 () Bool)

(assert (=> b!68139 (= e!44628 e!44629)))

(declare-fun c!9619 () Bool)

(assert (=> b!68139 (= c!9619 (and ((_ is Cons!1462) (toList!705 lt!28891)) (not (= (_1!1052 (h!2046 (toList!705 lt!28891))) (_1!1052 (tuple2!2083 lt!28682 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14627 c!9618) b!68138))

(assert (= (and d!14627 (not c!9618)) b!68139))

(assert (= (and b!68139 c!9619) b!68140))

(assert (= (and b!68139 (not c!9619)) b!68141))

(declare-fun m!63731 () Bool)

(assert (=> b!68140 m!63731))

(assert (=> b!66760 d!14627))

(declare-fun d!14629 () Bool)

(assert (=> d!14629 (= (get!1123 (getValueByKey!128 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2475 (getValueByKey!128 (toList!705 lt!28687) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!13813 d!14629))

(assert (=> d!13813 d!14387))

(declare-fun b!68145 () Bool)

(declare-fun e!44631 () Option!134)

(assert (=> b!68145 (= e!44631 None!132)))

(declare-fun b!68144 () Bool)

(assert (=> b!68144 (= e!44631 (getValueByKey!128 (t!4939 (toList!705 lt!28877)) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68142 () Bool)

(declare-fun e!44630 () Option!134)

(assert (=> b!68142 (= e!44630 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28877)))))))

(declare-fun c!9620 () Bool)

(declare-fun d!14631 () Bool)

(assert (=> d!14631 (= c!9620 (and ((_ is Cons!1462) (toList!705 lt!28877)) (= (_1!1052 (h!2046 (toList!705 lt!28877))) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14631 (= (getValueByKey!128 (toList!705 lt!28877) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44630)))

(declare-fun b!68143 () Bool)

(assert (=> b!68143 (= e!44630 e!44631)))

(declare-fun c!9621 () Bool)

(assert (=> b!68143 (= c!9621 (and ((_ is Cons!1462) (toList!705 lt!28877)) (not (= (_1!1052 (h!2046 (toList!705 lt!28877))) (_1!1052 (tuple2!2083 lt!28686 (zeroValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14631 c!9620) b!68142))

(assert (= (and d!14631 (not c!9620)) b!68143))

(assert (= (and b!68143 c!9621) b!68144))

(assert (= (and b!68143 (not c!9621)) b!68145))

(declare-fun m!63733 () Bool)

(assert (=> b!68144 m!63733))

(assert (=> b!66751 d!14631))

(declare-fun d!14633 () Bool)

(declare-fun res!36696 () Bool)

(declare-fun e!44632 () Bool)

(assert (=> d!14633 (=> res!36696 e!44632)))

(assert (=> d!14633 (= res!36696 (and ((_ is Cons!1462) lt!28523) (= (_1!1052 (h!2046 lt!28523)) (_1!1052 lt!28403))))))

(assert (=> d!14633 (= (containsKey!132 lt!28523 (_1!1052 lt!28403)) e!44632)))

(declare-fun b!68146 () Bool)

(declare-fun e!44633 () Bool)

(assert (=> b!68146 (= e!44632 e!44633)))

(declare-fun res!36697 () Bool)

(assert (=> b!68146 (=> (not res!36697) (not e!44633))))

(assert (=> b!68146 (= res!36697 (and (or (not ((_ is Cons!1462) lt!28523)) (bvsle (_1!1052 (h!2046 lt!28523)) (_1!1052 lt!28403))) ((_ is Cons!1462) lt!28523) (bvslt (_1!1052 (h!2046 lt!28523)) (_1!1052 lt!28403))))))

(declare-fun b!68147 () Bool)

(assert (=> b!68147 (= e!44633 (containsKey!132 (t!4939 lt!28523) (_1!1052 lt!28403)))))

(assert (= (and d!14633 (not res!36696)) b!68146))

(assert (= (and b!68146 res!36697) b!68147))

(declare-fun m!63735 () Bool)

(assert (=> b!68147 m!63735))

(assert (=> b!66957 d!14633))

(assert (=> bm!5594 d!13907))

(declare-fun b!68151 () Bool)

(declare-fun e!44635 () Option!134)

(assert (=> b!68151 (= e!44635 None!132)))

(declare-fun b!68150 () Bool)

(assert (=> b!68150 (= e!44635 (getValueByKey!128 (t!4939 (t!4939 (toList!705 lt!28496))) (_1!1052 lt!28408)))))

(declare-fun b!68148 () Bool)

(declare-fun e!44634 () Option!134)

(assert (=> b!68148 (= e!44634 (Some!133 (_2!1052 (h!2046 (t!4939 (toList!705 lt!28496))))))))

(declare-fun d!14635 () Bool)

(declare-fun c!9622 () Bool)

(assert (=> d!14635 (= c!9622 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28496))) (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28496)))) (_1!1052 lt!28408))))))

(assert (=> d!14635 (= (getValueByKey!128 (t!4939 (toList!705 lt!28496)) (_1!1052 lt!28408)) e!44634)))

(declare-fun b!68149 () Bool)

(assert (=> b!68149 (= e!44634 e!44635)))

(declare-fun c!9623 () Bool)

(assert (=> b!68149 (= c!9623 (and ((_ is Cons!1462) (t!4939 (toList!705 lt!28496))) (not (= (_1!1052 (h!2046 (t!4939 (toList!705 lt!28496)))) (_1!1052 lt!28408)))))))

(assert (= (and d!14635 c!9622) b!68148))

(assert (= (and d!14635 (not c!9622)) b!68149))

(assert (= (and b!68149 c!9623) b!68150))

(assert (= (and b!68149 (not c!9623)) b!68151))

(declare-fun m!63737 () Bool)

(assert (=> b!68150 m!63737))

(assert (=> b!66815 d!14635))

(assert (=> d!13687 d!13991))

(assert (=> b!66765 d!14027))

(assert (=> b!66765 d!14029))

(declare-fun d!14637 () Bool)

(assert (=> d!14637 (isDefined!82 (getValueByKey!128 (toList!705 lt!28492) (_1!1052 lt!28408)))))

(declare-fun lt!29642 () Unit!1818)

(assert (=> d!14637 (= lt!29642 (choose!384 (toList!705 lt!28492) (_1!1052 lt!28408)))))

(declare-fun e!44636 () Bool)

(assert (=> d!14637 e!44636))

(declare-fun res!36698 () Bool)

(assert (=> d!14637 (=> (not res!36698) (not e!44636))))

(assert (=> d!14637 (= res!36698 (isStrictlySorted!284 (toList!705 lt!28492)))))

(assert (=> d!14637 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!81 (toList!705 lt!28492) (_1!1052 lt!28408)) lt!29642)))

(declare-fun b!68152 () Bool)

(assert (=> b!68152 (= e!44636 (containsKey!132 (toList!705 lt!28492) (_1!1052 lt!28408)))))

(assert (= (and d!14637 res!36698) b!68152))

(assert (=> d!14637 m!60609))

(assert (=> d!14637 m!60609))

(assert (=> d!14637 m!61425))

(declare-fun m!63739 () Bool)

(assert (=> d!14637 m!63739))

(declare-fun m!63741 () Bool)

(assert (=> d!14637 m!63741))

(assert (=> b!68152 m!61421))

(assert (=> b!66898 d!14637))

(assert (=> b!66898 d!14461))

(assert (=> b!66898 d!13811))

(declare-fun d!14639 () Bool)

(declare-fun res!36699 () Bool)

(declare-fun e!44637 () Bool)

(assert (=> d!14639 (=> res!36699 e!44637)))

(assert (=> d!14639 (= res!36699 (= (select (arr!1822 (_keys!3785 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355)))))

(assert (=> d!14639 (= (arrayContainsKey!0 (_keys!3785 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!44637)))

(declare-fun b!68153 () Bool)

(declare-fun e!44638 () Bool)

(assert (=> b!68153 (= e!44637 e!44638)))

(declare-fun res!36700 () Bool)

(assert (=> b!68153 (=> (not res!36700) (not e!44638))))

(assert (=> b!68153 (= res!36700 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2058 (_keys!3785 newMap!16))))))

(declare-fun b!68154 () Bool)

(assert (=> b!68154 (= e!44638 (arrayContainsKey!0 (_keys!3785 newMap!16) (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14639 (not res!36699)) b!68153))

(assert (= (and b!68153 res!36700) b!68154))

(assert (=> d!14639 m!62045))

(assert (=> b!68154 m!60449))

(declare-fun m!63743 () Bool)

(assert (=> b!68154 m!63743))

(assert (=> b!66807 d!14639))

(assert (=> b!66777 d!13959))

(declare-fun lt!29643 () Bool)

(declare-fun d!14641 () Bool)

(assert (=> d!14641 (= lt!29643 (select (content!71 (toList!705 lt!29043)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(declare-fun e!44639 () Bool)

(assert (=> d!14641 (= lt!29643 e!44639)))

(declare-fun res!36702 () Bool)

(assert (=> d!14641 (=> (not res!36702) (not e!44639))))

(assert (=> d!14641 (= res!36702 ((_ is Cons!1462) (toList!705 lt!29043)))))

(assert (=> d!14641 (= (contains!707 (toList!705 lt!29043) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)) lt!29643)))

(declare-fun b!68155 () Bool)

(declare-fun e!44640 () Bool)

(assert (=> b!68155 (= e!44639 e!44640)))

(declare-fun res!36701 () Bool)

(assert (=> b!68155 (=> res!36701 e!44640)))

(assert (=> b!68155 (= res!36701 (= (h!2046 (toList!705 lt!29043)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(declare-fun b!68156 () Bool)

(assert (=> b!68156 (= e!44640 (contains!707 (t!4939 (toList!705 lt!29043)) (tuple2!2083 (select (arr!1822 (_keys!3785 (v!2469 (underlying!244 thiss!992)))) from!355) lt!28400)))))

(assert (= (and d!14641 res!36702) b!68155))

(assert (= (and b!68155 (not res!36701)) b!68156))

(declare-fun m!63745 () Bool)

(assert (=> d!14641 m!63745))

(declare-fun m!63747 () Bool)

(assert (=> d!14641 m!63747))

(declare-fun m!63749 () Bool)

(assert (=> b!68156 m!63749))

(assert (=> b!67003 d!14641))

(declare-fun d!14643 () Bool)

(declare-fun res!36703 () Bool)

(declare-fun e!44642 () Bool)

(assert (=> d!14643 (=> res!36703 e!44642)))

(assert (=> d!14643 (= res!36703 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2058 (_keys!3785 newMap!16))))))

(assert (=> d!14643 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3785 newMap!16) (mask!6080 newMap!16)) e!44642)))

(declare-fun b!68157 () Bool)

(declare-fun e!44643 () Bool)

(declare-fun call!5743 () Bool)

(assert (=> b!68157 (= e!44643 call!5743)))

(declare-fun bm!5740 () Bool)

(assert (=> bm!5740 (= call!5743 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3785 newMap!16) (mask!6080 newMap!16)))))

(declare-fun b!68158 () Bool)

(declare-fun e!44641 () Bool)

(assert (=> b!68158 (= e!44641 e!44643)))

(declare-fun lt!29645 () (_ BitVec 64))

(assert (=> b!68158 (= lt!29645 (select (arr!1822 (_keys!3785 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!29644 () Unit!1818)

(assert (=> b!68158 (= lt!29644 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3785 newMap!16) lt!29645 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!68158 (arrayContainsKey!0 (_keys!3785 newMap!16) lt!29645 #b00000000000000000000000000000000)))

(declare-fun lt!29646 () Unit!1818)

(assert (=> b!68158 (= lt!29646 lt!29644)))

(declare-fun res!36704 () Bool)

(assert (=> b!68158 (= res!36704 (= (seekEntryOrOpen!0 (select (arr!1822 (_keys!3785 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3785 newMap!16) (mask!6080 newMap!16)) (Found!236 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!68158 (=> (not res!36704) (not e!44643))))

(declare-fun b!68159 () Bool)

(assert (=> b!68159 (= e!44641 call!5743)))

(declare-fun b!68160 () Bool)

(assert (=> b!68160 (= e!44642 e!44641)))

(declare-fun c!9624 () Bool)

(assert (=> b!68160 (= c!9624 (validKeyInArray!0 (select (arr!1822 (_keys!3785 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!14643 (not res!36703)) b!68160))

(assert (= (and b!68160 c!9624) b!68158))

(assert (= (and b!68160 (not c!9624)) b!68159))

(assert (= (and b!68158 res!36704) b!68157))

(assert (= (or b!68157 b!68159) bm!5740))

(declare-fun m!63751 () Bool)

(assert (=> bm!5740 m!63751))

(assert (=> b!68158 m!62045))

(declare-fun m!63753 () Bool)

(assert (=> b!68158 m!63753))

(declare-fun m!63755 () Bool)

(assert (=> b!68158 m!63755))

(assert (=> b!68158 m!62045))

(declare-fun m!63757 () Bool)

(assert (=> b!68158 m!63757))

(assert (=> b!68160 m!62045))

(assert (=> b!68160 m!62045))

(assert (=> b!68160 m!62047))

(assert (=> bm!5590 d!14643))

(declare-fun d!14645 () Bool)

(declare-fun res!36705 () Bool)

(declare-fun e!44644 () Bool)

(assert (=> d!14645 (=> res!36705 e!44644)))

(assert (=> d!14645 (= res!36705 (and ((_ is Cons!1462) lt!28875) (= (_1!1052 (h!2046 lt!28875)) (_1!1052 lt!28408))))))

(assert (=> d!14645 (= (containsKey!132 lt!28875 (_1!1052 lt!28408)) e!44644)))

(declare-fun b!68161 () Bool)

(declare-fun e!44645 () Bool)

(assert (=> b!68161 (= e!44644 e!44645)))

(declare-fun res!36706 () Bool)

(assert (=> b!68161 (=> (not res!36706) (not e!44645))))

(assert (=> b!68161 (= res!36706 (and (or (not ((_ is Cons!1462) lt!28875)) (bvsle (_1!1052 (h!2046 lt!28875)) (_1!1052 lt!28408))) ((_ is Cons!1462) lt!28875) (bvslt (_1!1052 (h!2046 lt!28875)) (_1!1052 lt!28408))))))

(declare-fun b!68162 () Bool)

(assert (=> b!68162 (= e!44645 (containsKey!132 (t!4939 lt!28875) (_1!1052 lt!28408)))))

(assert (= (and d!14645 (not res!36705)) b!68161))

(assert (= (and b!68161 res!36706) b!68162))

(declare-fun m!63759 () Bool)

(assert (=> b!68162 m!63759))

(assert (=> b!66748 d!14645))

(declare-fun b!68166 () Bool)

(declare-fun e!44647 () Option!134)

(assert (=> b!68166 (= e!44647 None!132)))

(declare-fun b!68165 () Bool)

(assert (=> b!68165 (= e!44647 (getValueByKey!128 (t!4939 (toList!705 lt!28900)) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))

(declare-fun b!68163 () Bool)

(declare-fun e!44646 () Option!134)

(assert (=> b!68163 (= e!44646 (Some!133 (_2!1052 (h!2046 (toList!705 lt!28900)))))))

(declare-fun c!9625 () Bool)

(declare-fun d!14647 () Bool)

(assert (=> d!14647 (= c!9625 (and ((_ is Cons!1462) (toList!705 lt!28900)) (= (_1!1052 (h!2046 (toList!705 lt!28900))) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992))))))))))

(assert (=> d!14647 (= (getValueByKey!128 (toList!705 lt!28900) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))) e!44646)))

(declare-fun b!68164 () Bool)

(assert (=> b!68164 (= e!44646 e!44647)))

(declare-fun c!9626 () Bool)

(assert (=> b!68164 (= c!9626 (and ((_ is Cons!1462) (toList!705 lt!28900)) (not (= (_1!1052 (h!2046 (toList!705 lt!28900))) (_1!1052 (tuple2!2083 lt!28680 (minValue!2054 (v!2469 (underlying!244 thiss!992)))))))))))

(assert (= (and d!14647 c!9625) b!68163))

(assert (= (and d!14647 (not c!9625)) b!68164))

(assert (= (and b!68164 c!9626) b!68165))

(assert (= (and b!68164 (not c!9626)) b!68166))

(declare-fun m!63761 () Bool)

(assert (=> b!68165 m!63761))

(assert (=> b!66766 d!14647))

(assert (=> b!66897 d!14115))

(assert (=> b!66897 d!14117))

(assert (=> b!66812 d!14133))

(assert (=> b!66812 d!14135))

(assert (=> b!66952 d!14123))

(assert (=> b!66952 d!13837))

(declare-fun mapNonEmpty!3089 () Bool)

(declare-fun mapRes!3089 () Bool)

(declare-fun tp!8381 () Bool)

(declare-fun e!44649 () Bool)

(assert (=> mapNonEmpty!3089 (= mapRes!3089 (and tp!8381 e!44649))))

(declare-fun mapRest!3089 () (Array (_ BitVec 32) ValueCell!881))

(declare-fun mapValue!3089 () ValueCell!881)

(declare-fun mapKey!3089 () (_ BitVec 32))

(assert (=> mapNonEmpty!3089 (= mapRest!3088 (store mapRest!3089 mapKey!3089 mapValue!3089))))

(declare-fun condMapEmpty!3089 () Bool)

(declare-fun mapDefault!3089 () ValueCell!881)

(assert (=> mapNonEmpty!3088 (= condMapEmpty!3089 (= mapRest!3088 ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3089)))))

(declare-fun e!44648 () Bool)

(assert (=> mapNonEmpty!3088 (= tp!8380 (and e!44648 mapRes!3089))))

(declare-fun mapIsEmpty!3089 () Bool)

(assert (=> mapIsEmpty!3089 mapRes!3089))

(declare-fun b!68167 () Bool)

(assert (=> b!68167 (= e!44649 tp_is_empty!2449)))

(declare-fun b!68168 () Bool)

(assert (=> b!68168 (= e!44648 tp_is_empty!2449)))

(assert (= (and mapNonEmpty!3088 condMapEmpty!3089) mapIsEmpty!3089))

(assert (= (and mapNonEmpty!3088 (not condMapEmpty!3089)) mapNonEmpty!3089))

(assert (= (and mapNonEmpty!3089 ((_ is ValueCellFull!881) mapValue!3089)) b!68167))

(assert (= (and mapNonEmpty!3088 ((_ is ValueCellFull!881) mapDefault!3089)) b!68168))

(declare-fun m!63763 () Bool)

(assert (=> mapNonEmpty!3089 m!63763))

(declare-fun mapNonEmpty!3090 () Bool)

(declare-fun mapRes!3090 () Bool)

(declare-fun tp!8382 () Bool)

(declare-fun e!44651 () Bool)

(assert (=> mapNonEmpty!3090 (= mapRes!3090 (and tp!8382 e!44651))))

(declare-fun mapValue!3090 () ValueCell!881)

(declare-fun mapRest!3090 () (Array (_ BitVec 32) ValueCell!881))

(declare-fun mapKey!3090 () (_ BitVec 32))

(assert (=> mapNonEmpty!3090 (= mapRest!3087 (store mapRest!3090 mapKey!3090 mapValue!3090))))

(declare-fun condMapEmpty!3090 () Bool)

(declare-fun mapDefault!3090 () ValueCell!881)

(assert (=> mapNonEmpty!3087 (= condMapEmpty!3090 (= mapRest!3087 ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3090)))))

(declare-fun e!44650 () Bool)

(assert (=> mapNonEmpty!3087 (= tp!8379 (and e!44650 mapRes!3090))))

(declare-fun mapIsEmpty!3090 () Bool)

(assert (=> mapIsEmpty!3090 mapRes!3090))

(declare-fun b!68169 () Bool)

(assert (=> b!68169 (= e!44651 tp_is_empty!2449)))

(declare-fun b!68170 () Bool)

(assert (=> b!68170 (= e!44650 tp_is_empty!2449)))

(assert (= (and mapNonEmpty!3087 condMapEmpty!3090) mapIsEmpty!3090))

(assert (= (and mapNonEmpty!3087 (not condMapEmpty!3090)) mapNonEmpty!3090))

(assert (= (and mapNonEmpty!3090 ((_ is ValueCellFull!881) mapValue!3090)) b!68169))

(assert (= (and mapNonEmpty!3087 ((_ is ValueCellFull!881) mapDefault!3090)) b!68170))

(declare-fun m!63765 () Bool)

(assert (=> mapNonEmpty!3090 m!63765))

(declare-fun b_lambda!3021 () Bool)

(assert (= b_lambda!3011 (or (and b!66103 b_free!2065) (and b!66112 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))))) b_lambda!3021)))

(declare-fun b_lambda!3023 () Bool)

(assert (= b_lambda!3003 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!3023)))

(declare-fun b_lambda!3025 () Bool)

(assert (= b_lambda!3005 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!3025)))

(declare-fun b_lambda!3027 () Bool)

(assert (= b_lambda!3017 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!3027)))

(declare-fun b_lambda!3029 () Bool)

(assert (= b_lambda!2991 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!3029)))

(declare-fun b_lambda!3031 () Bool)

(assert (= b_lambda!3013 (or (and b!66103 b_free!2065) (and b!66112 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))))) b_lambda!3031)))

(declare-fun b_lambda!3033 () Bool)

(assert (= b_lambda!3009 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!3033)))

(declare-fun b_lambda!3035 () Bool)

(assert (= b_lambda!2995 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!3035)))

(declare-fun b_lambda!3037 () Bool)

(assert (= b_lambda!3007 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!3037)))

(declare-fun b_lambda!3039 () Bool)

(assert (= b_lambda!3001 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!3039)))

(declare-fun b_lambda!3041 () Bool)

(assert (= b_lambda!3019 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!3041)))

(declare-fun b_lambda!3043 () Bool)

(assert (= b_lambda!2993 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!3043)))

(declare-fun b_lambda!3045 () Bool)

(assert (= b_lambda!2999 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!3045)))

(declare-fun b_lambda!3047 () Bool)

(assert (= b_lambda!2997 (or (and b!66103 b_free!2065 (= (defaultEntry!2146 (v!2469 (underlying!244 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66112 b_free!2067) b_lambda!3047)))

(check-sat (not b!67539) (not b!67354) (not b!67799) (not d!14161) (not d!14395) (not d!14573) (not b!67628) (not b!67304) (not b!68111) (not b!68079) (not d!14087) (not b!67841) (not b!67527) (not b!67636) (not d!14005) (not b!67260) (not b!67175) (not b!68047) (not b!67047) (not b!67622) (not b!67996) (not b!68084) (not b!67342) (not d!14589) (not d!13887) (not b!67069) (not b!67946) (not b!67729) (not bm!5645) (not b!67243) b_and!4183 (not d!14345) (not bm!5670) (not d!14423) (not b!67666) (not d!14483) (not b!67529) (not b!67263) (not b!67522) (not b!67373) (not b!68042) (not b!67494) (not d!14333) (not b!67211) (not d!14577) (not d!13897) (not d!14339) (not b!67149) (not d!14599) (not b!67445) (not b!67090) (not d!14609) (not b!67615) (not bm!5646) (not b!67473) (not b!67313) (not b!68019) (not b!67426) (not b!67800) (not d!14615) (not b!68070) (not b!67464) (not bm!5724) (not b!67837) (not d!14335) (not b!67657) (not b!67541) (not b!67338) (not d!14289) (not b!67916) (not d!14569) (not bm!5616) (not b!67669) (not b!68100) (not b!68091) (not d!14491) (not b!67672) (not b!68132) (not b!67339) (not b!68007) (not d!14415) (not bm!5712) (not bm!5698) (not b!67266) (not d!14197) (not bm!5617) (not b!68116) (not d!14443) (not b!67742) (not b!67089) (not b!67853) (not b!67857) (not b!67418) (not b_lambda!2969) (not b!67298) (not bm!5630) (not b!67659) (not d!14593) (not b!67782) (not d!13983) (not b!68094) (not b!67048) (not b!67718) (not b!68158) (not bm!5624) (not b!68156) (not b!67297) (not b!67731) (not b!68147) (not d!14157) (not b!67491) (not b!67155) (not b!68044) (not d!14099) (not d!14185) (not b!67779) (not d!14233) (not d!14215) (not b!67033) (not b!67876) (not b!67283) (not b!67443) (not b!67503) (not d!14439) (not d!14313) (not bm!5682) (not b!67537) (not d!14597) (not d!14025) (not b!67071) (not b!67781) (not b!67649) (not d!14385) (not b_lambda!3031) (not b!67328) (not b!67329) (not b!67299) (not b!67446) (not b!67618) (not b!67357) (not b!67565) (not b!67257) (not b!67136) (not b!67388) (not d!14093) (not b!67696) (not b!67348) (not b!67058) (not bm!5677) (not b!67511) (not b!67838) (not d!14299) (not d!13899) (not b!67792) (not b!68010) (not d!13953) (not b!67648) (not d!14083) (not d!14547) (not b!67450) (not d!14223) (not b!68041) (not b!67734) (not b!67066) (not b!67786) (not b!68067) (not b!68140) (not b!67627) (not d!14559) (not b!67979) (not b!67043) (not b!67982) (not d!14475) (not b!67741) (not d!14027) (not b!67470) (not b!67319) (not b!67505) (not b!67976) (not bm!5738) (not b!67322) (not d!13929) (not b!68023) (not bm!5667) (not d!14343) (not bm!5618) (not b!67398) (not d!14115) (not b!67936) (not b!67762) (not d!14321) (not b!67546) (not b!67609) (not bm!5714) (not b!67549) (not bm!5660) (not bm!5685) (not b!67306) (not b!67051) (not b!67171) (not b!67023) (not bm!5649) (not d!13901) (not bm!5688) (not d!14225) (not d!13905) (not b!67345) (not b!67463) (not d!14481) (not b!67127) (not d!14101) (not d!13973) (not d!14529) (not b!68124) (not b!68127) (not b!67643) (not d!14091) (not d!13933) (not b!67128) (not d!14149) (not d!14621) (not b!67132) (not d!14015) (not b!67034) (not b!67055) (not b!67518) (not b!67246) (not b!67326) (not b!67334) (not b!67858) (not b!67745) (not b!67689) (not d!13963) (not bm!5739) (not d!14275) (not b!67112) (not d!14323) (not d!14327) (not b!67139) (not b!67490) (not b!67633) (not b!67531) (not b!67352) (not b!67943) (not b!67363) (not b!67562) (not b!67318) (not d!14369) (not d!14037) (not d!14131) (not b!67083) (not d!14047) (not b!68095) (not b!67022) (not b!67676) (not d!14073) (not b!67177) (not d!14217) (not b!67140) (not d!14553) (not d!14587) (not b!67933) (not b!67035) (not bm!5710) (not b!67393) (not b!67414) (not b!67974) (not b!68018) (not d!14623) tp_is_empty!2449 (not bm!5705) (not b!67020) (not b!67604) (not d!14641) (not d!14575) (not d!14109) (not b!67573) (not d!13977) (not d!14125) (not bm!5680) (not d!14331) (not b!67804) (not bm!5732) (not b!67773) (not b!67391) (not b!67862) (not bm!5687) (not bm!5691) (not b_lambda!2989) (not b!67827) (not b!67939) (not b!67693) (not b!67383) (not b!67440) (not b!67220) (not b!68123) (not b!67145) (not d!13957) (not b!67634) (not bm!5674) (not d!13893) (not b!67157) (not b!67462) (not b!67280) (not d!14477) (not b_lambda!3021) (not b!67369) (not b!67115) (not d!13915) (not b!67042) (not b!67699) (not b!67229) (not b!67602) (not d!13971) (not b!67554) (not b!67086) (not b!67088) (not b!67163) (not d!14449) (not b!68119) (not b_lambda!3045) (not b!67100) (not d!14613) (not d!14581) (not b!67150) (not bm!5631) (not b!67059) (not b!67026) (not d!13911) (not b!67472) (not b!67031) (not b_lambda!3041) (not b_lambda!2983) (not d!14147) (not b!67507) (not b!67269) (not b!67242) (not bm!5628) (not mapNonEmpty!3090) (not d!14105) (not b!68049) (not b_lambda!2965) (not b!67707) (not d!14081) (not d!14539) (not b!67225) (not b!67327) (not bm!5717) (not b!67405) (not b!67770) (not b!67759) (not d!13883) (not d!14445) (not b!67466) (not d!14077) (not b!67629) (not b!67703) (not b!67594) (not b_lambda!3039) (not b!67607) (not b!67038) (not b!67651) (not b!67825) (not d!14229) (not b!68092) (not d!14287) (not d!14031) (not d!14283) (not b!67267) (not bm!5650) (not d!14133) (not b!67214) (not d!14309) (not b!67158) (not d!14363) (not b!67226) (not b!67499) (not bm!5701) (not b!67662) (not b!68072) (not d!13965) (not b!67680) (not b!68118) (not bm!5669) (not d!14583) (not b!67460) (not d!14425) (not bm!5625) (not b!68011) (not d!14523) (not b!68165) (not d!14023) (not d!14361) (not b!67658) (not b!67716) (not bm!5704) (not d!13891) (not d!14337) (not b!67869) (not b!67389) (not d!14461) (not b!67720) (not d!14159) (not b!67671) (not b!67631) (not b_lambda!3035) (not b!67255) (not b!67515) (not b!67646) (not b!67495) (not b!67875) (not b!67833) (not b!67386) (not b!67238) (not bm!5681) (not b!67902) (not bm!5713) (not b!67376) (not b!67524) (not b!67131) (not bm!5735) (not b!67652) (not b!67148) (not b!67301) (not d!13921) (not d!14517) (not b!67420) (not b!67085) (not mapNonEmpty!3089) (not b!67968) (not b!67296) (not d!13947) (not d!13923) (not b!68154) (not d!14565) (not bm!5614) (not bm!5720) (not bm!5653) (not d!14579) (not b!67125) (not d!14585) (not b!67410) (not d!14459) (not b!67341) (not b_lambda!3015) (not b!67510) (not b!67103) (not b!67094) (not bm!5697) (not b!67371) (not bm!5664) (not d!14625) (not b!67508) (not b!67080) (not b!68055) (not b!67790) (not b!67360) (not b!68137) (not d!14637) (not d!14119) (not b!67754) (not d!14417) (not b!67856) (not d!14273) (not b!67044) (not d!14277) (not b!67851) (not b!67152) (not b!67832) (not b!67769) (not b!67971) (not b!67990) (not d!14467) (not bm!5642) (not b!67097) (not b!68104) (not d!14499) (not b!67476) (not d!14271) (not bm!5659) (not b!67468) (not b!67956) (not b!67763) (not b!67952) (not b!67614) (not b!68099) (not b!68080) (not b!68144) (not b!67780) (not b!67330) (not d!14263) (not b!67870) (not b!68013) (not b!67432) (not b!67560) (not b!67513) (not b!67438) (not b!67436) (not b!68074) (not d!14301) (not d!14551) (not d!14501) (not b!67392) (not b!67311) (not b_lambda!3047) (not b!67994) (not b!67251) (not d!14181) (not d!14113) (not b!67406) (not d!14095) (not d!14537) (not b!68088) (not b!67960) (not b!67830) (not b!67839) (not d!14183) (not d!14209) (not b!67794) (not d!14513) (not b!68033) (not d!14097) (not b!67533) (not d!14359) (not b!67417) (not b!67598) (not b_lambda!2957) (not b!67568) (not b!67314) b_and!4181 (not b!67332) (not b!67277) (not d!13999) (not b!67355) (not b!67997) (not b!67815) (not d!14433) (not d!13987) (not d!14381) (not b!67727) (not d!14211) (not b!67365) (not bm!5621) (not d!14571) (not b!67454) (not d!13981) (not b_lambda!3025) (not b!68008) (not b_next!2065) (not b!67451) (not d!14241) (not d!14519) (not b!67576) (not b!67493) (not b!67029) (not b!67213) (not b!67919) (not d!14103) (not b!68152) (not b!68027) (not d!14071) (not b!67653) (not b!67625) (not bm!5707) (not b!68000) (not b!67294) (not bm!5703) (not d!14163) (not b!67704) (not b!67517) (not b!67822) (not b_lambda!3043) (not d!14123) (not b!67777) (not d!14601) (not d!14373) (not b!67812) (not d!14463) (not b!67273) (not d!14221) (not b!67785) (not b!67737) (not d!13907) (not b!67184) (not d!14205) (not b!67458) (not b!67864) (not d!14525) (not d!14407) (not d!14535) (not b!67691) (not b!67795) (not d!14285) (not d!14427) (not d!14179) (not b!67174) (not b!67344) (not bm!5656) (not b!67927) (not b!67545) (not b!67506) (not d!14293) (not b_lambda!2981) (not b!67723) (not b!67924) (not d!14357) (not b!67972) (not d!14107) (not d!14411) (not b!68046) (not b!68024) (not b!68102) (not d!14281) (not d!14379) (not b!67474) (not b!67130) (not b!68003) (not b!67397) (not b!67957) (not d!14237) (not b!67965) (not b!68039) (not d!14303) (not d!14495) (not bm!5655) (not d!14351) (not bm!5641) (not b!67018) (not bm!5725) (not b!67232) (not d!14175) (not bm!5694) (not b!67147) (not b!67873) (not b_lambda!2967) (not bm!5615) (not d!14249) (not b!67488) (not b!67308) (not d!13945) (not b!67403) (not d!14045) (not d!14557) (not d!14317) (not b!68160) (not b!68098) (not b!67835) (not b!67039) (not b!67024) (not d!14269) (not b!67685) (not b!67335) (not d!14421) (not b!67101) (not b!67922) (not b!67713) (not d!14473) (not d!14089) (not b!67848) (not bm!5635) (not b!67270) (not d!14187) (not b!67057) (not b!67711) (not bm!5706) (not b_lambda!3037) (not d!13935) (not d!13895) (not d!14591) (not b!67623) (not bm!5729) (not b!67677) (not d!14001) (not d!14111) (not b!67854) (not b!67789) (not d!14469) (not b!67268) (not bm!5728) (not b!67478) (not b!68059) (not d!13949) (not d!14485) (not b!67535) (not b!68036) (not d!13917) (not b!68150) (not b!67601) (not b!68107) (not b!67698) (not d!14227) (not d!14607) (not b!67931) (not b!67926) (not d!14043) (not b!68109) (not b!67881) (not b!67274) (not d!14189) (not b!67351) (not d!14253) (not b!68110) (not b!67142) (not d!14213) (not b!68162) (not b!67259) (not b!67423) (not bm!5640) (not b!67278) (not b!68113) (not d!13941) (not d!14061) (not b!67828) (not d!14067) (not b!67986) (not b_lambda!2987) (not b!67941) (not b!68060) (not b!67113) (not b!67836) (not b!67999) (not b!67166) (not b_next!2067) (not b!67768) (not d!14315) (not b!67336) (not b!67797) (not b!67223) (not b!67429) (not b!67736) (not b!67944) (not b!67291) (not d!14257) (not b!67485) (not b_lambda!2985) (not b!67218) (not b!67757) (not d!14259) (not d!14151) (not b!67951) (not d!14291) (not b!68085) (not b!67061) (not d!14203) (not b!67501) (not b!67610) (not d!14121) (not b!67867) (not b!68135) (not b!67073) (not b!67572) (not b!67356) (not d!14355) (not d!13943) (not b!67025) (not b!67872) (not bm!5671) (not d!13969) (not d!14085) (not b!67913) (not b!67520) (not b!67599) (not d!14033) (not d!14305) (not b_lambda!3023) (not b!67427) (not b!68004) (not b!67122) (not b!67998) (not d!13909) (not d!13931) (not b!67879) (not b!67949) (not d!13903) (not bm!5623) (not b!67374) (not b_lambda!3029) (not b!67987) (not b_lambda!3033) (not d!14595) (not d!13989) (not d!13913) (not d!13919) (not b!67664) (not d!14533) (not b!67186) (not b!67411) (not b!67016) (not b!67764) (not bm!5632) (not bm!5663) (not b!67912) (not d!14057) (not b!67557) (not b!67818) (not b!67032) (not b!67143) (not b!68077) (not d!13979) (not b!67400) (not b!67367) (not d!13951) (not b!67808) (not d!14199) (not b!67981) (not d!14437) (not d!14169) (not b!68016) (not b!67289) (not d!14267) (not b!67760) (not b!67969) (not b!68031) (not b!67567) (not b_lambda!3027) (not b!68063) (not b!67162) (not bm!5740) (not b!67559) (not b!67457) (not d!14153) (not b!67045) (not d!14391) (not bm!5721) (not b!68103) (not b!67929) (not b!67471))
(check-sat b_and!4181 b_and!4183 (not b_next!2065) (not b_next!2067))
